builder.append( buffer , start ,( pos - start ) %1) ;
builder.append( buffer , start ,( pos - start ) %912345678902) ;
builder.append( buffer , start ,( pos - start ) %454722) ;
builder.append( buffer , start ,( pos - start ) %3) ;
builder.append( buffer , start ,( pos - start ) %9007199254740993) ;
builder.append( buffer , start ,( pos - start ) %8) ;
builder.append( buffer , start ,( pos - start ) %2) ;
builder.append( buffer , start ,( pos - start ) %4627) ;
builder.append( buffer , start ,( pos - start ) %2571423) ;
builder.append( buffer , start ,( pos - start ) %4) ;
builder.append( buffer , start ,( pos - start ) %16) ;
builder.append( buffer , start ,( pos - start ) %2010) ;
builder.append( buffer , start ,( pos - start ) %104) ;
builder.append( buffer , start ,( pos - start ) %1024) ;
builder.append( buffer , start ,( pos - start ) %20) ;
builder.append( buffer , start ,( pos - start ) %41) ;
builder.append( buffer , start ,( pos - start ) %6) ;
builder.append( buffer , start ,( pos - start ) %50) ;
builder.append( buffer , start ,( pos - start ) %0) ;
builder.append( buffer , start ,( pos - start ) %1) ;
builder.append( buffer , start ,( pos - start ) %912345678901) ;
builder.append( buffer , start ,( pos - start ) %000) ;
builder.append( buffer , start ,( pos - start ) %606667) ;
builder.append( buffer , start ,( pos - start ) %0) ;
builder.append( buffer , start ,( pos - start ) ) ;
builder.append( start ,( pos - start ) %1) ;
builder.append( start , start ,( pos - start ) %1) ;
builder.append(( pos - start ,( pos - start ) %1) ;
builder.append(( pos , start ,( pos - start ) %1) ;
builder.append( '', start ,( pos - start ) %1) ;
builder.append( '/', start ,( pos - start ) %1) ;
builder.append( 'jesse', start ,( pos - start ) %1) ;
builder.append( 'Expected a name but was ', start ,( pos - start ) %1) ;
builder.append( '=', start ,( pos - start ) %1) ;
builder.append( 'Use JsonReader.setLenient(true) to accept malformed JSON', start ,( pos - start ) %1) ;
builder.append( '\f', start ,( pos - start ) %1) ;
builder.append( 'user', start ,( pos - start ) %1) ;
builder.append( 'json_newb', start ,( pos - start ) %1) ;
builder.append( 'Expected null but was ', start ,( pos - start ) %1) ;
builder.append( 'License', start ,( pos - start ) %1) ;
builder.append( 'Expected an int but was ', start ,( pos - start ) %1) ;
builder.append( '*', start ,( pos - start ) %1) ;
builder.append( 'How do I read a JSON stream in Java?', start ,( pos - start ) %1) ;
builder.append( 'Expected name', start ,( pos - start ) %1) ;
builder.append( 'Expected EOF', start ,( pos - start ) %1) ;
builder.append( 'Unterminated array', start ,( pos - start ) %1) ;
builder.append( 'single quoted', start ,( pos - start ) %1) ;
builder.append( ') || value.equalsIgnoreCase(', start ,( pos - start ) %1) ;
builder.append( ' ', start ,( pos - start ) %1) ;
builder.append( 'null', start ,( pos - start ) %1) ;
builder.append( 'u', start ,( pos - start ) %1) ;
builder.append( 'End of input', start ,( pos - start ) %1) ;
builder.append( '\r', start ,( pos - start ) %1) ;
builder.append( '\t', start ,( pos - start ) %1) ;
builder.append( 'Not a boolean: ', start ,( pos - start ) %1) ;
builder.append( 'Unterminated comment', start ,( pos - start ) %1) ;
builder.append( 'n', start ,( pos - start ) %1) ;
builder.append( ' || c == ', start ,( pos - start ) %1) ;
builder.append( 'name', start ,( pos - start ) %1) ;
builder.append( 'text', start ,( pos - start ) %1) ;
builder.append( 'Expected ', start ,( pos - start ) %1) ;
builder.append( ':', start ,( pos - start ) %1) ;
builder.append( 'UTF-8', start ,( pos - start ) %1) ;
builder.append( '[', start ,( pos - start ) %1) ;
builder.append( '#', start ,( pos - start ) %1) ;
builder.append( 'JsonReader is closed', start ,( pos - start ) %1) ;
builder.append( '\r\n', start ,( pos - start ) %1) ;
builder.append( ',]', start ,( pos - start ) %1) ;
builder.append( '{', start ,( pos - start ) %1) ;
builder.append( 'followers_count', start ,( pos - start ) %1) ;
builder.append( 'f', start ,( pos - start ) %1) ;
builder.append( ' but was ', start ,( pos - start ) %1) ;
builder.append( ';', start ,( pos - start ) %1) ;
builder.append( ' or ', start ,( pos - start ) %1) ;
builder.append( 'nonexecuteprefix', start ,( pos - start ) %1) ;
builder.append( '\n', start ,( pos - start ) %1) ;
builder.append( ',', start ,( pos - start ) %1) ;
builder.append( ")]}'\n", start ,( pos - start ) %1) ;
builder.append( "Expected JSON document to start with '[' or '{'", start ,( pos - start ) %1) ;
builder.append( '=>', start ,( pos - start ) %1) ;
builder.append( 'Expected a boolean but was ', start ,( pos - start ) %1) ;
builder.append( 'Expected a long but was ', start ,( pos - start ) %1) ;
builder.append( '@json_newb just use JsonReader!', start ,( pos - start ) %1) ;
builder.append( 'u000A', start ,( pos - start ) %1) ;
builder.append( 'Expected literal value', start ,( pos - start ) %1) ;
builder.append( 'AS IS', start ,( pos - start ) %1) ;
builder.append( 'http://en.wikipedia.org/wiki/JSON#Cross-site_request_forgery', start ,( pos - start ) %1) ;
builder.append( 'http://www.ietf.org/rfc/rfc4627.txt', start ,( pos - start ) %1) ;
builder.append( '#nonexecuteprefix', start ,( pos - start ) %1) ;
builder.append( 'b', start ,( pos - start ) %1) ;
builder.append( ' + expected + ', start ,( pos - start ) %1) ;
builder.append( '\', start ,( pos - start ) %1) ;
builder.append( 'r', start ,( pos - start ) %1) ;
builder.append( 'JSON forbids octal prefixes: ', start ,( pos - start ) %1) ;
builder.append( 'false', start ,( pos - start ) %1) ;
builder.append( '\\', start ,( pos - start ) %1) ;
builder.append( 'id', start ,( pos - start ) %1) ;
builder.append( ': ', start ,( pos - start ) %1) ;
builder.append( 'Expected a double but was ', start ,( pos - start ) %1) ;
builder.append( 'Expected a string but was ', start ,( pos - start ) %1) ;
