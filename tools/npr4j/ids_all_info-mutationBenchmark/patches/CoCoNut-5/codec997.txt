l_ascii [ jj + bits ] = 'License';
l_ascii [ jj + bits ] = '0';
l_ascii [ jj + bits ] = 's and ';
l_ascii [ jj + bits ] = 'AS IS';
l_ascii [ jj + bits ] = ' and ';
l_ascii [ jj + bits ] = '1';
l_ascii [ jj + bits ] = 'argument not a byte array';
l_ascii [ jj + bits ] = ' or ';
l_ascii [ jj + bits ] += 'License';
l_ascii [ jj + bits ] += '0';
l_ascii [ jj + bits ] += 's and ';
l_ascii [ jj + bits ] += 'AS IS';
l_ascii [ jj + bits ] += ' and ';
l_ascii [ jj + bits ] += '1';
l_ascii [ jj + bits ] += 'argument not a byte array';
l_ascii [ jj + bits ] += ' or ';
l_ascii [ jj , bits ] = 'License';
l_ascii [ jj , bits ] = '0';
l_ascii [ jj , bits ] = 's and ';
l_ascii [ jj , bits ] = 'AS IS';
l_ascii [ jj , bits ] = ' and ';
l_ascii [ jj , bits ] = '1';
l_ascii [ jj , bits ] = 'argument not a byte array';
l_ascii [ jj , bits ] = ' or ';
l_ascii [ jj ] = 'License';
l_ascii [ jj ] = '0';
l_ascii [ jj ] = 's and ';
l_ascii [ jj ] = 'AS IS';
l_ascii [ jj ] = ' and ';
l_ascii [ jj ] = '1';
l_ascii [ jj ] = 'argument not a byte array';
l_ascii [ jj ] = ' or ';
l_ascii [ jj - bits ] = 'License';
l_ascii [ jj - bits ] = '0';
l_ascii [ jj - bits ] = 's and ';
l_ascii [ jj - bits ] = 'AS IS';
l_ascii [ jj - bits ] = ' and ';
l_ascii [ jj - bits ] = '1';
l_ascii [ jj - bits ] = 'argument not a byte array';
l_ascii [ jj - bits ] = ' or ';
l_ascii [ jj + bits ] = 'License'+ jj ;
l_ascii [ jj + bits ] = '0'+ jj ;
l_ascii [ jj + bits ] = 's and '+ jj ;
l_ascii [ jj + bits ] = 'AS IS'+ jj ;
l_ascii [ jj + bits ] = ' and '+ jj ;
l_ascii [ jj + bits ] = '1'+ jj ;
l_ascii [ jj + bits ] = 'argument not a byte array'+ jj ;
l_ascii [ jj + bits ] = ' or '+ jj ;
l_ascii [ jj *bits ] = 'License';
l_ascii [ jj *bits ] = '0';
l_ascii [ jj *bits ] = 's and ';
l_ascii [ jj *bits ] = 'AS IS';
l_ascii [ jj *bits ] = ' and ';
l_ascii [ jj *bits ] = '1';
l_ascii [ jj *bits ] = 'argument not a byte array';
l_ascii [ jj *bits ] = ' or ';
l_ascii [ jj.length ] = 'License';
l_ascii [ jj.length ] = '0';
l_ascii [ jj.length ] = 's and ';
l_ascii [ jj.length ] = 'AS IS';
l_ascii [ jj.length ] = ' and ';
l_ascii [ jj.length ] = '1';
l_ascii [ jj.length ] = 'argument not a byte array';
l_ascii [ jj.length ] = ' or ';
l_ascii [ jj_SIZE ] = 'License';
l_ascii [ jj_SIZE ] = '0';
l_ascii [ jj_SIZE ] = 's and ';
l_ascii [ jj_SIZE ] = 'AS IS';
l_ascii [ jj_SIZE ] = ' and ';
l_ascii [ jj_SIZE ] = '1';
l_ascii [ jj_SIZE ] = 'argument not a byte array';
l_ascii [ jj_SIZE ] = ' or ';
l_ascii [ jj + bits ] = System.getenv( ) ;
l_ascii [ jj + bits ] =0;
l_ascii [ jj + bits ] = getName( ) ;
l_ascii [ jj + bits ] =2;
l_ascii [ jj + bits ] =04;
l_ascii [ jj + bits ] =0;
l_ascii [ jj + bits ] =02;
l_ascii [ jj + bits ] =4;
l_ascii [ jj + bits ] =20;
l_ascii [ jj + bits ] =7;
l_ascii [ jj + bits ] =6;
l_ascii [ jj + bits ] =3;
l_ascii [ jj + bits ] =08;
l_ascii [ jj + bits ] =1;
l_ascii [ jj + bits ] =8;
l_ascii [ jj + bits ] =80;
l_ascii [ jj + bits ] =40;
l_ascii [ jj + bits ] =10;
l_ascii [ jj + bits ] =5;
l_ascii [ jj + bits + bits ] = 'License';
l_ascii [ jj + bits + bits ] = '0';
l_ascii [ jj + bits + bits ] = 's and ';
l_ascii [ jj + bits + bits ] = 'AS IS';
l_ascii [ jj + bits + bits ] = ' and ';
l_ascii [ jj + bits + bits ] = '1';
l_ascii [ jj + bits + bits ] = 'argument not a byte array';
l_ascii [ jj + bits + bits ] = ' or ';
l_ascii [ jj + bits ] = 'License'+ jj + bits ;
