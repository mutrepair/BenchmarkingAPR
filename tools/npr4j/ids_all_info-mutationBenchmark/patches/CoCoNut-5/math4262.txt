this(1-( sigma *FastMath.sqrt(2*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(3*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(5*Math.PI ) ) , mean , sigma ) ;
this(2-( sigma *FastMath.sqrt(2*Math.PI ) ) , mean , sigma ) ;
this(0-( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
this(3-( sigma *FastMath.sqrt(3*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this(5-( sigma *FastMath.sqrt(5*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this(0-( sigma *FastMath.sqrt(2*Math.PI ) ) , mean , sigma ) ;
this(0-( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
this(0-( sigma *FastMath.sqrt(3*Math.PI ) ) , mean , sigma ) ;
this(0-( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this(0-( sigma *FastMath.sqrt(5*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(2*Math.PI ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(0*Math.PI ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(3*Math.PI ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(1*Math.PI ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(5*Math.PI ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(2*Math.PI ) ) , mean , sigma , sigma ) ;
this(1-( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma , sigma ) ;
this(1-( sigma *FastMath.sqrt(3*Math.PI ) ) , mean , sigma , sigma ) ;
this(1-( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma , sigma ) ;
this(1-( sigma *FastMath.sqrt(5*Math.PI ) ) , mean , sigma , sigma ) ;
this.1-( sigma *FastMath.sqrt(2*Math.PI ) ) , mean , sigma ) ;
this.1-( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
this.1-( sigma *FastMath.sqrt(3*Math.PI ) ) , mean , sigma ) ;
this.1-( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this.1-( sigma *FastMath.sqrt(5*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
this(1+( sigma *FastMath.sqrt(2*Math.PI ) ) , mean , sigma ) ;
this(1+( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
this(1+( sigma *FastMath.sqrt(3*Math.PI ) ) , mean , sigma ) ;
this(1+( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this(1+( sigma *FastMath.sqrt(5*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(2*Math.PI ) ) , mean ) ;
this(1-( sigma *FastMath.sqrt(0*Math.PI ) ) , mean ) ;
this(1-( sigma *FastMath.sqrt(3*Math.PI ) ) , mean ) ;
this(1-( sigma *FastMath.sqrt(1*Math.PI ) ) , mean ) ;
this(1-( sigma *FastMath.sqrt(5*Math.PI ) ) , mean ) ;
this.2-( sigma *FastMath.sqrt(2*Math.PI ) ) , mean , sigma ) ;
this.0-( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
this.3-( sigma *FastMath.sqrt(3*Math.PI ) ) , mean , sigma ) ;
this.1-( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this.5-( sigma *FastMath.sqrt(5*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(2*2*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(0*0*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(3*3*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(1*1*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(5*5*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(8*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(2*Math.PI ) , mean , sigma , sigma ) ;
this(1-( sigma *FastMath.sqrt(0*Math.PI ) , mean , sigma , sigma ) ;
this(1-( sigma *FastMath.sqrt(3*Math.PI ) , mean , sigma , sigma ) ;
this(1-( sigma *FastMath.sqrt(1*Math.PI ) , mean , sigma , sigma ) ;
this(1-( sigma *FastMath.sqrt(5*Math.PI ) , mean , sigma , sigma ) ;
this.i -( sigma *FastMath.sqrt(2*Math.PI ) ) , mean , sigma ) ;
this.i -( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
this.i -( sigma *FastMath.sqrt(3*Math.PI ) ) , mean , sigma ) ;
this.i -( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this.i -( sigma *FastMath.sqrt(5*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(2*Math.PI ) ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(0*Math.PI ) ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(3*Math.PI ) ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(1*Math.PI ) ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(5*Math.PI ) ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt( Math.PI ) ) , mean , sigma ) ;
this.0-( sigma *FastMath.sqrt(2*Math.PI ) ) , mean , sigma ) ;
this.0-( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
this.0-( sigma *FastMath.sqrt(3*Math.PI ) ) , mean , sigma ) ;
this.0-( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this.0-( sigma *FastMath.sqrt(5*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(2*Math.PI ) , mean ) ;
this(1-( sigma *FastMath.sqrt(0*Math.PI ) , mean ) ;
this(1-( sigma *FastMath.sqrt(3*Math.PI ) , mean ) ;
this(1-( sigma *FastMath.sqrt(1*Math.PI ) , mean ) ;
this(1-( sigma *FastMath.sqrt(5*Math.PI ) , mean ) ;
this( i -( sigma *FastMath.sqrt(2*Math.PI ) ) , mean , sigma ) ;
this( i -( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
this( i -( sigma *FastMath.sqrt(3*Math.PI ) ) , mean , sigma ) ;
this( i -( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this( i -( sigma *FastMath.sqrt(5*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(2*2.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(0*0.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(3*3.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(1*1.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(5*5.PI ) ) , mean , sigma ) ;
this(1-(( sigma *FastMath.sqrt(2*Math.PI ) ) , mean , sigma ) ;
this(1-(( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
this(1-(( sigma *FastMath.sqrt(3*Math.PI ) ) , mean , sigma ) ;
this(1-(( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this(1-(( sigma *FastMath.sqrt(5*Math.PI ) ) , mean , sigma ) ;
this(2-( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this(0-( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this(3-( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this(5-( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(2*Math.PI ) ) ;
