TypeIdResolver idRes = idResolver( config , baseType , pick , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , recommended , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , bad , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , nil , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , paragraph , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , redo , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , joining , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , Cert , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , slot , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , apply , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , sleep , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , expected , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , histories , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , unzip , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , Projector , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , extract , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , Duplicate , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , Three , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , Ordering , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , greyscale , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , datapath , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , println , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , pick , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , Assert , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , fine , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , auction , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , Years , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , Bipartite , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , rsptxt , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , concatenate , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , unused , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , recommended , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , pick , true , false ) ;
TypeIdResolver idRes = idResolver( config , baseType , license , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , Constraint , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , Company , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , project , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , DIRS , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , Opponent , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , foundation , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , Rational , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType ) ;
TypeIdResolver idRes = idResolver( config , baseType , contact , true , true ) ;
TypeIdResolver idRes = idResolver( ) ;
TypeIdResolver idRes = idResolver( config , baseType , Declarations , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , buy , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , bad , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , CQL , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , bdc , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , etime , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , Conjunct , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , recommended , true , false ) ;
TypeIdResolver idRes = idResolver( config , baseType , backend , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , Reorderer , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , JPEG , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , np , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , Dungeons , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , invalid , true , true ) ;
TypeIdResolver idRes = idResolver( config ) ;
TypeIdResolver idRes = idResolver( config , baseType , mergedsub , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , nil , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , RB , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , Availability , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , 'init()', true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , 'Do not know how to construct standard type id resolver for idType: ', true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , 'includeAs can not be null', true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , 'idType can not be null', true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , 'as-property', true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , 'Do not know how to construct standard type serializer for inclusion type: ', true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , "Can not build, 'init()' not yet called", true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , 'none', true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , bad , true , false ) ;
TypeIdResolver idRes = idResolver( config , baseType , bmob , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , jcas , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , collects , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , constructor , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , deliverable , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , abort , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , ZK , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , nil , true , false ) ;
TypeIdResolver idRes = idResolver( config , baseType , Alquilado , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , ip , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , slot , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , nd , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , Omega , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , Same , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , paragraph , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , teams , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , paragraph , true , false ) ;
TypeIdResolver idRes = idResolver( config , baseType , EXPECTED , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , HKEY , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , Stem , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , thermostat , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , expected , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , trader , true , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , redo , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , apply , true ) ;
TypeIdResolver idRes = idResolver( config , baseType , joining , true ) ;
TypeIdResolver idRes = getIdResolver( ) ;
TypeIdResolver idRes = getTypeResolver( ) ;
