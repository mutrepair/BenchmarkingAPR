System.out.println( 'License') ;
System.out.println( 'The specified type handler for type ') ;
System.out.println( '. Gson does not allow this.') ;
System.out.println( ':') ;
System.out.println( '}') ;
System.out.println( ' hides the previously registered type hierarchy handler for ') ;
System.out.println( 'Overriding the existing type handler for {0}') ;
System.out.println( 'AS IS') ;
System.out.println( '{mapForTypeHierarchy:{') ;
System.out.println( ',') ;
System.out.println( '},map:{') ;
System.out.println( 'Attempted to modify an unmodifiable map.') ;
System.err.println( 'License') ;
System.err.println( 'The specified type handler for type ') ;
System.err.println( '. Gson does not allow this.') ;
System.err.println( ':') ;
System.err.println( '}') ;
System.err.println( ' hides the previously registered type hierarchy handler for ') ;
System.err.println( 'Overriding the existing type handler for {0}') ;
System.err.println( 'AS IS') ;
System.err.println( '{mapForTypeHierarchy:{') ;
System.err.println( ',') ;
System.err.println( '},map:{') ;
System.err.println( 'Attempted to modify an unmodifiable map.') ;
'License'.replaceAll( 'License', 'License') ;
'The specified type handler for type '.replaceAll( 'The specified type handler for type ', 'The specified type handler for type ') ;
'. Gson does not allow this.'.replaceAll( '. Gson does not allow this.', '. Gson does not allow this.') ;
':'.replaceAll( ':', ':') ;
'}'.replaceAll( '}', '}') ;
' hides the previously registered type hierarchy handler for '.replaceAll( ' hides the previously registered type hierarchy handler for ', ' hides the previously registered type hierarchy handler for ') ;
'Overriding the existing type handler for {0}'.replaceAll( 'Overriding the existing type handler for {0}', 'Overriding the existing type handler for {0}') ;
'AS IS'.replaceAll( 'AS IS', 'AS IS') ;
'{mapForTypeHierarchy:{'.replaceAll( '{mapForTypeHierarchy:{', '{mapForTypeHierarchy:{') ;
','.replaceAll( ',', ',') ;
'},map:{'.replaceAll( '},map:{', '},map:{') ;
'Attempted to modify an unmodifiable map.'.replaceAll( 'Attempted to modify an unmodifiable map.', 'Attempted to modify an unmodifiable map.') ;
System.out.println( 'License', 'License') ;
System.out.println( 'The specified type handler for type ', 'The specified type handler for type ') ;
System.out.println( '. Gson does not allow this.', '. Gson does not allow this.') ;
System.out.println( ':', ':') ;
System.out.println( '}', '}') ;
System.out.println( ' hides the previously registered type hierarchy handler for ', ' hides the previously registered type hierarchy handler for ') ;
System.out.println( 'Overriding the existing type handler for {0}', 'Overriding the existing type handler for {0}') ;
System.out.println( 'AS IS', 'AS IS') ;
System.out.println( '{mapForTypeHierarchy:{', '{mapForTypeHierarchy:{') ;
System.out.println( ',', ',') ;
System.out.println( '},map:{', '},map:{') ;
System.out.println( 'Attempted to modify an unmodifiable map.', 'Attempted to modify an unmodifiable map.') ;
System.out.print( 'License') ;
System.out.print( 'The specified type handler for type ') ;
System.out.print( '. Gson does not allow this.') ;
System.out.print( ':') ;
System.out.print( '}') ;
System.out.print( ' hides the previously registered type hierarchy handler for ') ;
System.out.print( 'Overriding the existing type handler for {0}') ;
System.out.print( 'AS IS') ;
System.out.print( '{mapForTypeHierarchy:{') ;
System.out.print( ',') ;
System.out.print( '},map:{') ;
System.out.print( 'Attempted to modify an unmodifiable map.') ;
System.out.println( 'License'+ 'License') ;
System.out.println( 'The specified type handler for type '+ 'The specified type handler for type ') ;
System.out.println( '. Gson does not allow this.'+ '. Gson does not allow this.') ;
System.out.println( ':'+ ':') ;
System.out.println( '}'+ '}') ;
System.out.println( ' hides the previously registered type hierarchy handler for '+ ' hides the previously registered type hierarchy handler for ') ;
System.out.println( 'Overriding the existing type handler for {0}'+ 'Overriding the existing type handler for {0}') ;
System.out.println( 'AS IS'+ 'AS IS') ;
System.out.println( '{mapForTypeHierarchy:{'+ '{mapForTypeHierarchy:{') ;
System.out.println( ','+ ',') ;
System.out.println( '},map:{'+ '},map:{') ;
System.out.println( 'Attempted to modify an unmodifiable map.'+ 'Attempted to modify an unmodifiable map.') ;
System.out.println( 'License', true ) ;
System.out.println( 'The specified type handler for type ', true ) ;
System.out.println( '. Gson does not allow this.', true ) ;
System.out.println( ':', true ) ;
System.out.println( '}', true ) ;
System.out.println( ' hides the previously registered type hierarchy handler for ', true ) ;
System.out.println( 'Overriding the existing type handler for {0}', true ) ;
System.out.println( 'AS IS', true ) ;
System.out.println( '{mapForTypeHierarchy:{', true ) ;
System.out.println( ',', true ) ;
System.out.println( '},map:{', true ) ;
System.out.println( 'Attempted to modify an unmodifiable map.', true ) ;
System.out.println( 'License'+ true ) ;
System.out.println( 'The specified type handler for type '+ true ) ;
System.out.println( '. Gson does not allow this.'+ true ) ;
System.out.println( ':'+ true ) ;
System.out.println( '}'+ true ) ;
System.out.println( ' hides the previously registered type hierarchy handler for '+ true ) ;
System.out.println( 'Overriding the existing type handler for {0}'+ true ) ;
System.out.println( 'AS IS'+ true ) ;
System.out.println( '{mapForTypeHierarchy:{'+ true ) ;
System.out.println( ','+ true ) ;
System.out.println( '},map:{'+ true ) ;
System.out.println( 'Attempted to modify an unmodifiable map.'+ true ) ;
System.out.printf( 'License') ;
System.out.printf( 'The specified type handler for type ') ;
System.out.printf( '. Gson does not allow this.') ;
System.out.printf( ':') ;
