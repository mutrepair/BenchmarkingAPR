nameCRC32= ZipLong.getValue( buffer , offset *1) ;
nameCRC32= ZipLong.getValue( buffer , offset *2) ;
nameCRC32= ZipLong.getValue( buffer , offset *01) ;
nameCRC32= ZipLong.getValue( buffer , offset *0) ;
nameCRC32= ZipLong.getValue( buffer , offset *4) ;
nameCRC32= ZipLong.getValue( buffer , offset *1) ;
nameCRC32= ZipLong.getValue( buffer , offset *8) ;
nameCRC32= ZipLong.getValue( buffer , offset *32) ;
nameCRC32= ZipLong.getValue( buffer , offset *5) ;
nameCRC32= ZipLong.getValue( buffer , offset ) ;
nameCRC32= ZipLong.getValue( buffer , offset , offset *1) ;
nameCRC32= ZipLong.getValue( buffer , offset , offset ) ;
nameCRC32= ZipLong.getValue( buffer , offset +1) ;
nameCRC32= ZipLong.getValue( buffer , offset , offset *2) ;
nameCRC32= ZipLong.getValue( buffer , offset , offset *01) ;
nameCRC32= ZipLong.getValue( buffer , offset , offset *0) ;
nameCRC32= ZipLong.getValue( buffer , offset , offset *4) ;
nameCRC32= ZipLong.getValue( buffer , offset , offset *1) ;
nameCRC32= ZipLong.getValue( buffer , offset , offset *8) ;
nameCRC32= ZipLong.getValue( buffer , offset , offset *32) ;
nameCRC32= ZipLong.getValue( buffer , offset , offset *5) ;
nameCRC32= ZipLong.getValue( buffer , offset -1) ;
nameCRC32= ZipLong.getValue( buffer , offset *0) ;
nameCRC32= ZipLong.toString( buffer , offset *1) ;
nameCRC32= ZipLong.getValue( buffer , offset *1) ) ;
nameCRC32= ZipLong.getValue( buffer , offset /2) ;
nameCRC32= ZipLong.getValue( buffer , offset /01) ;
nameCRC32= ZipLong.getValue( buffer , offset /0) ;
nameCRC32= ZipLong.getValue( buffer , offset /4) ;
nameCRC32= ZipLong.getValue( buffer , offset /1) ;
nameCRC32= ZipLong.getValue( buffer , offset /8) ;
nameCRC32= ZipLong.getValue( buffer , offset /32) ;
nameCRC32= ZipLong.getValue( buffer , offset /5) ;
nameCRC64= ZipLong.getValue( buffer , offset *1) ;
nameCRC32= ZipLong.getValue( buffer ) ;
nameCRC32= ZipLong.getValue( buffer , offset *2) ) ;
nameCRC32= ZipLong.getValue( buffer , offset *01) ) ;
nameCRC32= ZipLong.getValue( buffer , offset *0) ) ;
nameCRC32= ZipLong.getValue( buffer , offset *4) ) ;
nameCRC32= ZipLong.getValue( buffer , offset *1) ) ;
nameCRC32= ZipLong.getValue( buffer , offset *8) ) ;
nameCRC32= ZipLong.getValue( buffer , offset *32) ) ;
nameCRC32= ZipLong.getValue( buffer , offset *5) ) ;
nameCRC32= ZipLong.parseValue( buffer , offset *1) ;
nameCRC32= ZipLong.getValue( buffer , offset /1) ;
nameCRC32= ZipLong.getKey( buffer , offset *1) ;
nameCRC32= ZipLong.toString( buffer , offset *2) ;
nameCRC32= ZipLong.toString( buffer , offset *01) ;
nameCRC32= ZipLong.toString( buffer , offset *0) ;
nameCRC32= ZipLong.toString( buffer , offset *4) ;
nameCRC32= ZipLong.toString( buffer , offset *1) ;
nameCRC32= ZipLong.toString( buffer , offset *8) ;
nameCRC32= ZipLong.toString( buffer , offset *32) ;
nameCRC32= ZipLong.toString( buffer , offset *5) ;
nameCRC32= ZipLong.getValue( buffer , offset *1,0) ;
nameCRC64= ZipLong.getValue( buffer , offset *2) ;
nameCRC64= ZipLong.getValue( buffer , offset *01) ;
nameCRC64= ZipLong.getValue( buffer , offset *0) ;
nameCRC64= ZipLong.getValue( buffer , offset *4) ;
nameCRC64= ZipLong.getValue( buffer , offset *1) ;
nameCRC64= ZipLong.getValue( buffer , offset *8) ;
nameCRC64= ZipLong.getValue( buffer , offset *32) ;
nameCRC64= ZipLong.getValue( buffer , offset *5) ;
nameCRC32= ZipLong.toString( buffer , offset ) ;
nameCRC32= ZipLong.getValue( buffer , offset *8) ;
nameCRC32= ZipLong.getValue( buffer , offset , offset +1) ;
nameCRC32= ZipLong.parseValue( buffer , offset *2) ;
nameCRC32= ZipLong.parseValue( buffer , offset *01) ;
nameCRC32= ZipLong.parseValue( buffer , offset *0) ;
nameCRC32= ZipLong.parseValue( buffer , offset *4) ;
nameCRC32= ZipLong.parseValue( buffer , offset *1) ;
nameCRC32= ZipLong.parseValue( buffer , offset *8) ;
nameCRC32= ZipLong.parseValue( buffer , offset *32) ;
nameCRC32= ZipLong.parseValue( buffer , offset *5) ;
nameCRC32= ZipLong.getValue( buffer , offset *2,0) ;
nameCRC32= ZipLong.getValue( buffer , offset *01,0) ;
nameCRC32= ZipLong.getValue( buffer , offset *0,0) ;
nameCRC32= ZipLong.getValue( buffer , offset *4,0) ;
nameCRC32= ZipLong.getValue( buffer , offset *1,0) ;
nameCRC32= ZipLong.getValue( buffer , offset *8,0) ;
nameCRC32= ZipLong.getValue( buffer , offset *32,0) ;
nameCRC32= ZipLong.getValue( buffer , offset *5,0) ;
nameCRC32= ZipLong.getValue( buffer ,0) ;
nameCRC32= ZipLong.getValue( buffer , offset ,0) ;
nameCRC32= ZipLong.getKey( buffer , offset *2) ;
nameCRC32= ZipLong.getKey( buffer , offset *01) ;
nameCRC32= ZipLong.getKey( buffer , offset *0) ;
nameCRC32= ZipLong.getKey( buffer , offset *4) ;
nameCRC32= ZipLong.getKey( buffer , offset *1) ;
nameCRC32= ZipLong.getKey( buffer , offset *8) ;
nameCRC32= ZipLong.getKey( buffer , offset *32) ;
nameCRC32= ZipLong.getKey( buffer , offset *5) ;
nameCRC32= ZipLong.getValue( buffer , offset *1.0) ;
nameCRC32= ZipLong.getValue( buffer , offset , offset *0) ;
nameCRC32= ZipInt.getValue( buffer , offset *1) ;
nameCRC32= ZipLong.getValue( buffer , offset ,1) ;
nameCRC32= ZipLong.valueOf( buffer , offset *1) ;
nameCRC32= ZipLong.getValue( buffer , offset +2) ;
nameCRC32= ZipLong.getValue( buffer , offset +01) ;
nameCRC32= ZipLong.getValue( buffer , offset +0) ;
