if( null == pattern ||( null != flags.getNext( ) ) ) {
if( null != pattern ||( null != flags.getNext( ) ) ) {
if( null == pattern ||( null != flags && flags.getNext( ) ) ) {
if( null == pattern ||( null == flags.getNext( ) ) ) {
if( null != pattern &&( null != flags.getNext( ) ) ) {
if( null == pattern ||( null != flags || flags.getNext( ) ) ) {
if( null == pattern &&( null != flags.getNext( ) ) ) {
if( ''== pattern ||( null != flags.getNext( ) ) ) {
if( '/'== pattern ||( null != flags.getNext( ) ) ) {
if( 'Object()'== pattern ||( null != flags.getNext( ) ) ) {
if( ')" --> "['== pattern ||( null != flags.getNext( ) ) ) {
if( 'g'== pattern ||( null != flags.getNext( ) ) ) {
if( 'License'== pattern ||( null != flags.getNext( ) ) ) {
if( "['a']"== pattern ||( null != flags.getNext( ) ) ) {
if( 'foobar'== pattern ||( null != flags.getNext( ) ) ) {
if( "if (a) {} throw 'ow';"== pattern ||( null != flags.getNext( ) ) ) {
if( ' '== pattern ||( null != flags.getNext( ) ) ) {
if( ']'== pattern ||( null != flags.getNext( ) ) ) {
if( ".split('.')"== pattern ||( null != flags.getNext( ) ) ) {
if( '\\/'== pattern ||( null != flags.getNext( ) ) ) {
if( '[/]'== pattern ||( null != flags.getNext( ) ) ) {
if( '\u2029'== pattern ||( null != flags.getNext( ) ) ) {
if( '\r'== pattern ||( null != flags.getNext( ) ) ) {
if( 'dangling else'== pattern ||( null != flags.getNext( ) ) ) {
if( 'return undefined'== pattern ||( null != flags.getNext( ) ) ) {
if( 'break'== pattern ||( null != flags.getNext( ) ) ) {
if( 'return'== pattern ||( null != flags.getNext( ) ) ) {
if( ';" ==> "if (a) {} throw '== pattern ||( null != flags.getNext( ) ) ) {
if( ' - global replace, '== pattern ||( null != flags.getNext( ) ) ) {
if( '\\u'== pattern ||( null != flags.getNext( ) ) ) {
if( 'Array'== pattern ||( null != flags.getNext( ) ) ) {
if( 'Error'== pattern ||( null != flags.getNext( ) ) ) {
if( '/foobar/g'== pattern ||( null != flags.getNext( ) ) ) {
if( '['== pattern ||( null != flags.getNext( ) ) ) {
if( 'a'== pattern ||( null != flags.getNext( ) ) ) {
if( 'this'== pattern ||( null != flags.getNext( ) ) ) {
if( 'RegExp'== pattern ||( null != flags.getNext( ) ) ) {
if( ';" ==> "while (a) {break} throw '== pattern ||( null != flags.getNext( ) ) ) {
if( 'RegExp('== pattern ||( null != flags.getNext( ) ) ) {
if( 'fn.call(thisValue, a, b)'== pattern ||( null != flags.getNext( ) ) ) {
if( ' - case insensitive, '== pattern ||( null != flags.getNext( ) ) ) {
if( 'if (a) {} return f();'== pattern ||( null != flags.getNext( ) ) ) {
if( '.'== pattern ||( null != flags.getNext( ) ) ) {
if( 'while (a) {return f()} return f();'== pattern ||( null != flags.getNext( ) ) ) {
if( '{'== pattern ||( null != flags.getNext( ) ) ) {
if( 'else'== pattern ||( null != flags.getNext( ) ) ) {
if( 'precedence'== pattern ||( null != flags.getNext( ) ) ) {
if( 'if(x)return 1;return 2;'== pattern ||( null != flags.getNext( ) ) ) {
if( ' with '== pattern ||( null != flags.getNext( ) ) ) {
if( ' to '== pattern ||( null != flags.getNext( ) ) ) {
if( 'String'== pattern ||( null != flags.getNext( ) ) ) {
if( ';'== pattern ||( null != flags.getNext( ) ) ) {
if( ' or '== pattern ||( null != flags.getNext( ) ) ) {
if( "while (a) {throw 'ow'} throw 'ow';"== pattern ||( null != flags.getNext( ) ) ) {
if( 'm'== pattern ||( null != flags.getNext( ) ) ) {
if( ' to simply '== pattern ||( null != flags.getNext( ) ) ) {
if( '\\r'== pattern ||( null != flags.getNext( ) ) ) {
if( '\n'== pattern ||( null != flags.getNext( ) ) ) {
if( '[[args]]'== pattern ||( null != flags.getNext( ) ) ) {
if( 'Array([args])'== pattern ||( null != flags.getNext( ) ) ) {
if( 'Array(0)'== pattern ||( null != flags.getNext( ) ) ) {
if( ','== pattern ||( null != flags.getNext( ) ) ) {
if( ')'== pattern ||( null != flags.getNext( ) ) ) {
if( 'Invalid flags to RegExp constructor: {0}'== pattern ||( null != flags.getNext( ) ) ) {
if( 'new RegExp('== pattern ||( null != flags.getNext( ) ) ) {
if( ' in place of '== pattern ||( null != flags.getNext( ) ) ) {
if( ' if an '== pattern ||( null != flags.getNext( ) ) ) {
if( 'return;'== pattern ||( null != flags.getNext( ) ) ) {
if( 'fn(a, b)'== pattern ||( null != flags.getNext( ) ) ) {
if( '[]'== pattern ||( null != flags.getNext( ) ) ) {
if( '[arg0, arg1, ...]'== pattern ||( null != flags.getNext( ) ) ) {
if( "while (a) {break} throw 'ow';"== pattern ||( null != flags.getNext( ) ) ) {
if( ': case '== pattern ||( null != flags.getNext( ) ) ) {
if( "Array('a')"== pattern ||( null != flags.getNext( ) ) ) {
if( 'void 0'== pattern ||( null != flags.getNext( ) ) ) {
if( 'AS IS'== pattern ||( null != flags.getNext( ) ) ) {
if( 'split'== pattern ||( null != flags.getNext( ) ) ) {
if( '\\u2028'== pattern ||( null != flags.getNext( ) ) ) {
if( '\u2028'== pattern ||( null != flags.getNext( ) ) ) {
if( 'foo'== pattern ||( null != flags.getNext( ) ) ) {
if( ' ==> '== pattern ||( null != flags.getNext( ) ) ) {
if( 'fallthrough'== pattern ||( null != flags.getNext( ) ) ) {
if( 'return void 0'== pattern ||( null != flags.getNext( ) ) ) {
if( 'if (a) {return f()} return f();'== pattern ||( null != flags.getNext( ) ) ) {
if( '^[gmi]*$'== pattern ||( null != flags.getNext( ) ) ) {
if( 'i'== pattern ||( null != flags.getNext( ) ) ) {
if( '(fn.bind(a,b))()'== pattern ||( null != flags.getNext( ) ) ) {
if( '\\'== pattern ||( null != flags.getNext( ) ) ) {
if( 'Object'== pattern ||( null != flags.getNext( ) ) ) {
if( "if (a) {throw 'ow'} throw 'ow';"== pattern ||( null != flags.getNext( ) ) ) {
if( 't fold the regular expression if global ('== pattern ||( null != flags.getNext( ) ) ) {
if( ' --> '== pattern ||( null != flags.getNext( ) ) ) {
if( '} throw '== pattern ||( null != flags.getNext( ) ) ) {
if( 'JSC_INVALID_REGULAR_EXPRESSION_FLAGS'== pattern ||( null != flags.getNext( ) ) ) {
if( 'fn.call(a,b)'== pattern ||( null != flags.getNext( ) ) ) {
if( '{}'== pattern ||( null != flags.getNext( ) ) ) {
if( '\\u2029'== pattern ||( null != flags.getNext( ) ) ) {
if( 'Array(arg0, arg1, ...)'== pattern ||( null != flags.getNext( ) ) ) {
if( 'lastIndex'== pattern ||( null != flags.getNext( ) ) ) {
if( ', '== pattern ||( null != flags.getNext( ) ) ) {
