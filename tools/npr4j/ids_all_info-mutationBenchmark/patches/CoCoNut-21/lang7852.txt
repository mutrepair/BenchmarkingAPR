result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) % Long.SIZE ] |= -1<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) % Long.SIZE ] |= -1L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L << - value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) % Double.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L L( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) / Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) -1) ;
result [ value.ordinal( ) *Long.SIZE ] |= -1<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) == Long.SIZE ) ;
result [ value.ordinal( ) *Long.SIZE ] |= -1L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L >>( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -2L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -0L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -64L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -3L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -2<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -0<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -64<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -3<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Double.SIZE ] |= -1<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Double.SIZE ] |= -1L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) > Long.SIZE ] |= -1L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) % Long.BYTES ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) & Long.SIZE ) ;
result [ value.ordinal( ) > Long.SIZE ] |= -1<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L <<( value.ordinal( ) / Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L <<( value.ordinal( ) ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) *Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) % Integer.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |=1<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L <<( value.ordinal( ) % Double.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) % Float.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) +1) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L <<( value.ordinal( ) & Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -0L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L & value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) %1) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) > Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) - Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L &( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L <<( value.ordinal( ) == Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |=0<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L <<( value.ordinal( ) % Long.BYTES ) ;
result [ value.ordinal( ) - Long.SIZE ] |= -1L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) - Long.SIZE ] |= -1<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) == Long.SIZE ] |= -1<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) << Long.SIZE ) ;
result [ value.ordinal( ) / Float.SIZE ] |= -1<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) >= Long.SIZE ] |= -1<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L << Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) != Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1>>( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L << - value.ordinal( ) ;
result [ value.ordinal( ) / Long.BYTES ] |= -1<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -0<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L | value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ).ordinal( ) ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L <<( value.ordinal( ) -1) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L [ value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= - i <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L << Long.BYTES ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) & Double.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |=0L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) + Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) - value ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L <<( value.ordinal( ) +1) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) &0.0) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) &0.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L <<( value != Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L <<( value == Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) &0.01) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) &1) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) ) % Long.SIZE ;
result [ value.ordinal( ) % Long.SIZE ] |= -1<<( value.ordinal( ) -1) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) % id ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L << Double.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) % value ) ;
result [ value.ordinal( ) % Long.SIZE ] |= -1<<( value.ordinal( ) ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L <<( value.ordinal( ) - value ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value == Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value != Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L << Math.BYTES ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L << Double.BYTES ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L <<( value ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L << Float.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |=1<< - value.ordinal( ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L << Integer.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L << Float.BYTES ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value ) ;
result [ value.ordinal( ) / Long.SIZE ] |= - Long.SIZE ) ;
