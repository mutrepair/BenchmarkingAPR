for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <1%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <=1%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <1%( startColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <2%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <0%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <24%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <4%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <100%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <36%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <1008%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <4602336630143123183%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <6%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <3%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <60%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <1296%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <1%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <864%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <28%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <672%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <5%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = endColumn / BLOCK_SIZE ; jBlock <1%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <0%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <1%( endColumn / BLOCK_SIZE ) ; j jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <1%( endColumn / BLOCK_SIZE -1) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <=2%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <=0%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <=24%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <=4%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <=100%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <=36%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <=1008%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <=4602336630143123183%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <=6%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <=3%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <=60%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <=1296%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <=1%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <=864%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <=28%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <=672%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <=5%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <1%( endColumn / BLOCK_SIZE +1) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <=1%( startColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <-1%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <1%( endColumn / BLOCK_SIZE ) ; i jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock < i %( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <=0%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; iBlock <1%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <2%( startColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <0%( startColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <24%( startColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <4%( startColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <100%( startColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <36%( startColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <1008%( startColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <4602336630143123183%( startColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <6%( startColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <3%( startColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <60%( startColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <1296%( startColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <1%( startColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <864%( startColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <28%( startColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <672%( startColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <5%( startColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = endColumn / BLOCK_SIZE ; jBlock <=1%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <1%( endColumn ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <1%( endColumn *BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <=1%( endColumn / BLOCK_SIZE -1) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <0%( startColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = posColumn / BLOCK_SIZE ; jBlock <1%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = endColumn / BLOCK_SIZE ; jBlock <1%( startColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <=1%( endColumn / BLOCK_SIZE +1) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <1%( endColumn / BLOCK_SIZE ) ) ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock < -1%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <=1%( endColumn / BLOCK_SIZE ) ; j jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <1%( endColumn / BLOCK_SIZE - i ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <1%( endColumn / BLOCK_SIZE + i ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <-2%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <-0%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <-24%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <-4%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <-100%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <-36%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <-1008%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <-4602336630143123183%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <-6%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <-3%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <-60%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <-1296%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <-1%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <-864%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <-28%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <-672%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <-5%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock ==1%( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <1%( endColumn / BLOCK_SIZE ) ) { ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <1+( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock < k %( endColumn / BLOCK_SIZE ) ; ++ jBlock ) {
for( int jBlock = startColumn / BLOCK_SIZE ; jBlock <1%( endColumn / BLOCK_SIZE_SIZE ) ; ++ jBlock ) {
