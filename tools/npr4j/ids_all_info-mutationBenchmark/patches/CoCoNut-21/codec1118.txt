out [ j ++ ] = header [2] ;
out [ j ++ ] = header [0] ;
out [ j ++ ] = header [4] ;
out [ j ++ ] = header [7] ;
out [ j ++ ] = header [16] ;
out [ j ++ ] = header [6] ;
out [ j ++ ] = header [3] ;
out [ j ++ ] = header [15] ;
out [ j ++ ] = header [1] ;
out [ j ++ ] = header [9] ;
out [ j ++ ] = header [8] ;
out [ j ++ ] = header [01] ;
out [ j ++ ] = header [5] ;
out [ j ++ ] = height [ i ] ] ;
out [ j ++ ] = header [ i ] ;
out [ j ++ ] = header [ i ] ] ;
out [ j ++ ] = Math.max( data [ i ] ) ;
out [ j ++ ] = Math.max( data [ i ] ] ;
out [ j ++ ] = lo [ i ] ] ;
out [ j ++ ] = DIGITS [ i ] ] ;
out [ j ++ ] =( char [2] &0xFF ) ;
out [ j ++ ] =( char [0] &0xFF ) ;
out [ j ++ ] =( char [4] &0xFF ) ;
out [ j ++ ] =( char [7] &0xFF ) ;
out [ j ++ ] =( char [16] &0xFF ) ;
out [ j ++ ] =( char [6] &0xFF ) ;
out [ j ++ ] =( char [3] &0xFF ) ;
out [ j ++ ] =( char [15] &0xFF ) ;
out [ j ++ ] =( char [1] &0xFF ) ;
out [ j ++ ] =( char [9] &0xFF ) ;
out [ j ++ ] =( char [8] &0xFF ) ;
out [ j ++ ] =( char [01] &0xFF ) ;
out [ j ++ ] =( char [5] &0xFF ) ;
out [ j ++ ] =( int )(2- data [ i ] ] ;
out [ j ++ ] =( int )(0- data [ i ] ] ;
out [ j ++ ] =( int )(4- data [ i ] ] ;
out [ j ++ ] =( int )(7- data [ i ] ] ;
out [ j ++ ] =( int )(16- data [ i ] ] ;
out [ j ++ ] =( int )(6- data [ i ] ] ;
out [ j ++ ] =( int )(3- data [ i ] ] ;
out [ j ++ ] =( int )(15- data [ i ] ] ;
out [ j ++ ] =( int )(1- data [ i ] ] ;
out [ j ++ ] =( int )(9- data [ i ] ] ;
out [ j ++ ] =( int )(8- data [ i ] ] ;
out [ j ++ ] =( int )(01- data [ i ] ] ;
out [ j ++ ] =( int )(5- data [ i ] ] ;
out [ j ++ ] = x [ i ] ] ;
out [ j ++ ] = frame [ i ] ] ;
out [ j ++ ] = DIGITS [2] ;
out [ j ++ ] = DIGITS [0] ;
out [ j ++ ] = DIGITS [4] ;
out [ j ++ ] = DIGITS [7] ;
out [ j ++ ] = DIGITS [16] ;
out [ j ++ ] = DIGITS [6] ;
out [ j ++ ] = DIGITS [3] ;
out [ j ++ ] = DIGITS [15] ;
out [ j ++ ] = DIGITS [1] ;
out [ j ++ ] = DIGITS [9] ;
out [ j ++ ] = DIGITS [8] ;
out [ j ++ ] = DIGITS [01] ;
out [ j ++ ] = DIGITS [5] ;
out [ j ++ ] = Math.max(2, data [ i ] ] ;
out [ j ++ ] = Math.max(0, data [ i ] ] ;
out [ j ++ ] = Math.max(4, data [ i ] ] ;
out [ j ++ ] = Math.max(7, data [ i ] ] ;
out [ j ++ ] = Math.max(16, data [ i ] ] ;
out [ j ++ ] = Math.max(6, data [ i ] ] ;
out [ j ++ ] = Math.max(3, data [ i ] ] ;
out [ j ++ ] = Math.max(15, data [ i ] ] ;
out [ j ++ ] = Math.max(1, data [ i ] ] ;
out [ j ++ ] = Math.max(9, data [ i ] ] ;
out [ j ++ ] = Math.max(8, data [ i ] ] ;
out [ j ++ ] = Math.max(01, data [ i ] ] ;
out [ j ++ ] = Math.max(5, data [ i ] ] ;
out [ j ++ ] = Math.max( i [ i ] ) ;
out [ j ++ ] = Math.max( data [ i ] -1) ;
out [ j ++ ] = Math.max( data [ i ] ,0) ;
out [ j ++ ] = header [ i ] [ i ] ;
out [ j ++ ] =2;
out [ j ++ ] =0;
out [ j ++ ] =4;
out [ j ++ ] =7;
out [ j ++ ] =16;
out [ j ++ ] =6;
out [ j ++ ] =3;
out [ j ++ ] =15;
out [ j ++ ] =1;
out [ j ++ ] =9;
out [ j ++ ] =8;
out [ j ++ ] =01;
out [ j ++ ] =5;
out [ j ++ ] = Math.max( data [ i ] +1) ;
out [ j ++ ] = Math.abs( data [ i ] ) ;
out [ j ++ ] = Math.abs( data [ i ] -1) ;
out [ j ++ ] = Math.max( data [ i ] ,2) ;
out [ j ++ ] = Math.max( data [ i ] ,0) ;
out [ j ++ ] = Math.max( data [ i ] ,4) ;
out [ j ++ ] = Math.max( data [ i ] ,7) ;
out [ j ++ ] = Math.max( data [ i ] ,16) ;
out [ j ++ ] = Math.max( data [ i ] ,6) ;
