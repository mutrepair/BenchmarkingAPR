_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,( ptr +_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,( ptr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,( ptr ,_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,( ptr -_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,( ptr_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuilder ,_inputPtr ,( ptr +_inputPtr ) ) ;
_textBuilder.resetWithShared(_inputBuffer ,_inputPtr ,( ptr +_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,( ptr +_inputPtr , ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,( String )_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,( ptr +_inputPtr ) ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,( ptr *_inputPtr ) ) ;
_textBuffer.setWithShared(_inputBuffer ,_inputPtr ,( ptr +_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr +_inputPtr ) ) ;
_textBuffer.reset(_inputBuffer ,_inputPtr ,( ptr +_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,( pattern +_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,( ptr /_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,( Integer )_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer +_inputPtr ,( ptr +_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,( ptr %_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr +( ptr +_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,77) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,3) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,25) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,8) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,32) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,2) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,2008) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,4) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,16) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,173) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,7) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,69) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,64) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,6) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,2009) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,18) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,9) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,5) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,19) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,0) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,631) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,12) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,1) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,( ptr +inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,( ptr +_inputPtr ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,0) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr ,( Point +_inputPtr ) ) ;
_textBuffer.resetWith(_inputBuffer ,_inputPtr ,( ptr +_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , ''+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , '/'+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , ' in a comment'+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , '\f'+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , 'ALLOW_COMMENTS'+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , '+b64variant+'+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , '+b64variant.getPaddingChar()+'+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , '): '+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , ' in character escape sequence'+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , '*'+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , 'Exponent indicator not followed by a digit'+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , 'Failed to decode VALUE_STRING as base64 ('+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , 'null'+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , '\r'+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , '\t'+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , '"+b64variant.getPaddingChar()+"'+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , 'Reader returned 0 characters when trying to read '+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , 'n'+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , 'Unexpected end-of-input within/between '+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , "expected padding character '"+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , "'"+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , ' || c == '+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , 'NaN'+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , 'name'+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , 'Infinity'+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , '+Infinity'+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , ' || ch > '+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , "Unrecognized token '"+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , 'expected a digit for number exponent'+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , 'ReaderBasedNumericParser'+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , 'I'+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , '-'+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , '"+((char) i), '+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , '+_parsingContext.getTypeDesc()+'+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , 'N'+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , '.'+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , 'E'+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , '-Infinity'+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , ": was expecting closing '"+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , 'expected digit (0-9) to follow minus sign, for valid numeric value'+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , '_nextAfterName'+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , 'Leading zeroes not allowed'+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , ': was expecting closing quote for a string value'+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , "Non-standard token '"+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , '+'+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , 'Missing integer part (next char '+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , ' or '+_inputPtr ) ) ;
_textBuffer.resetWithShared(_inputBuffer ,_inputPtr , 'll eagerly parse contents; this so that there'+_inputPtr ) ) ;
