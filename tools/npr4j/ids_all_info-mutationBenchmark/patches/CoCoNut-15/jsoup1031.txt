return element.elementSiblingIndex( ) >= index ;
return element.elementSiblingIndex( ) > index ;
return element.elementSiblingIndex( ) <= index ;
return element.elementOutIndex( ) >= index ;
return element.elementStateIndex( ) >= index ;
return element.elementStackIndex( ) >= index ;
return element.elementCommandIndex( ) >= index ;
return element.element( ) >= index ;
return element.elementPlayerIndex( ) >= index ;
return element.elementSiblingIndex( ) < index ;
return element.elementSolutionIndex( ) >= index ;
return element.elementMetaIndex( ) >= index ;
return element.elementSiblingIndex( ) == index ;
return element.elementSiblingIndex( ) ;
return element.elementList( ) >= index ;
return element.elementStateIndex( ) > index ;
return element.elementArgumentIndex( ) >= index ;
return element.elementUIIndex( ) >= index ;
return element.elementStartIndex( ) >= index ;
return element.elementOutIndex( ) > index ;
return element.elementStackIndex( ) > index ;
return element.elementEqualIndex( ) >= index ;
return element.elementListIndex( ) >= index ;
return element.elementFlagIndex( ) >= index ;
return element.elementTrackIndex( ) >= index ;
return element.elementLeftIndex( ) >= index ;
return element.elementSeparatorIndex( ) >= index ;
return element.elementIndex( ) >= index ;
return element.elementCommandIndex( ) > index ;
return element.elementHandlerIndex( ) >= index ;
return element.elementBufferIndex( ) >= index ;
return element.elementBeIndex( ) >= index ;
return element.elementDeliveryIndex( ) >= index ;
return element.elementServerIndex( ) >= index ;
return element.elementOffsetIndex( ) >= index ;
return element.element.elementIndex( ) >= index ;
return element.elementRowIndex( ) >= index ;
return element.elementSetupIndex( ) >= index ;
return element.elementSibling( ) >= index ;
return element.elementIndexIndex( ) >= index ;
return element.elementHeaderIndex( ) >= index ;
return element.elementPointerIndex( ) >= index ;
return element.elementBitsIndex( ) >= index ;
return element.elementRangeIndex( ) >= index ;
return element.elementRandomIndex( ) >= index ;
return element.elementPlayersIndex( ) >= index ;
return element.elementHitIndex( ) >= index ;
return element.elementPlayingIndex( ) >= index ;
return element.elementSolutionIndex( ) > index ;
return element.elementRightIndex( ) >= index ;
return element.elementUpIndex( ) >= index ;
return element.elementMetaIndex( ) > index ;
return element.elementReturnsIndex( ) >= index ;
return element.elementMetadataIndex( ) >= index ;
return element.elementNowIndex( ) >= index ;
return element.elementSlotIndex( ) >= index ;
return element.elementCheckIndex( ) >= index ;
return element.elementPlayerIndex( ) > index ;
return element.elementSegmentIndex( ) >= index ;
return element.elementMsgIndex( ) >= index ;
return element.elementVisibleIndex( ) >= index ;
return element.elementFieldIndex( ) >= index ;
return element.elementBlockIndex( ) >= index ;
return element.elementPosIndex( ) >= index ;
return element.elementPositionIndex( ) >= index ;
return element.elementListIndex( ) > index ;
return element.elementEqualIndex( ) > index ;
return element.elementServiceIndex( ) >= index ;
return element.elementList( ) > index ;
return element.elementPressedIndex( ) >= index ;
return element.elementArgumentIndex( ) > index ;
return element.element( ) > index ;
return element.elementUIIndex( ) > index ;
return element.elementStartIndex( ) > index ;
return element.elementIndex( ) > index ;
return element.elementException( ) >= index ;
return element.elementValue( ) >= index ;
return element.elementSibling( ) > index ;
return element.elementState( ) >= index ;
return element.elementSize( ) >= index ;
return element.elementCount( ) >= index ;
return element.elementPath( ) >= index ;
return element.elementColor( ) >= index ;
return element.elementKey( ) >= index ;
return element.elementLength( ) >= index ;
return element.elementException( ) > index ;
return element.elementValue( ) > index ;
return element.element( ) <= index ;
return element.element( ) == index ;
return element.isEmpty( ) ;
return element.elementSibling( ) ;
return element.element( ) < index ;
return element.element( ) ;
return element.element ;
return element == null ;
return element ;
return element ) ;
return $STRING$ ;
return value ;
return null ;
