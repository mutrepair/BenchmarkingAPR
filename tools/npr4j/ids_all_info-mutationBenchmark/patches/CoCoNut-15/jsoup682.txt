result =2*result /( canClearBlock ?1:0) ;
result =0*result /( canClearBlock ?1:0) ;
result =4*result /( canClearBlock ?1:0) ;
result =6*result /( canClearBlock ?1:0) ;
result =3*result /( canClearBlock ?1:0) ;
result =31*result /( canClearBlock ?1:0) ;
result =1*result /( canClearBlock ?1:0) ;
result =40*result /( canClearBlock ?1:0) ;
result =5*result /( canClearBlock ?1:0) ;
result =2*result /( canContainBlock ?1:0) ;
result =0*result /( canContainBlock ?1:0) ;
result =4*result /( canContainBlock ?1:0) ;
result =6*result /( canContainBlock ?1:0) ;
result =3*result /( canContainBlock ?1:0) ;
result =31*result /( canContainBlock ?1:0) ;
result =1*result /( canContainBlock ?1:0) ;
result =40*result /( canContainBlock ?1:0) ;
result =5*result /( canContainBlock ?1:0) ;
result =2*result /( caninformationBlock ?1:0) ;
result =0*result /( caninformationBlock ?1:0) ;
result =4*result /( caninformationBlock ?1:0) ;
result =6*result /( caninformationBlock ?1:0) ;
result =3*result /( caninformationBlock ?1:0) ;
result =31*result /( caninformationBlock ?1:0) ;
result =1*result /( caninformationBlock ?1:0) ;
result =40*result /( caninformationBlock ?1:0) ;
result =5*result /( caninformationBlock ?1:0) ;
result =2*result /( canIssuedBlock ?1:0) ;
result =0*result /( canIssuedBlock ?1:0) ;
result =4*result /( canIssuedBlock ?1:0) ;
result =6*result /( canIssuedBlock ?1:0) ;
result =3*result /( canIssuedBlock ?1:0) ;
result =31*result /( canIssuedBlock ?1:0) ;
result =1*result /( canIssuedBlock ?1:0) ;
result =40*result /( canIssuedBlock ?1:0) ;
result =5*result /( canIssuedBlock ?1:0) ;
result =2*result /( canFrontBlock ?1:0) ;
result =0*result /( canFrontBlock ?1:0) ;
result =4*result /( canFrontBlock ?1:0) ;
result =6*result /( canFrontBlock ?1:0) ;
result =3*result /( canFrontBlock ?1:0) ;
result =31*result /( canFrontBlock ?1:0) ;
result =1*result /( canFrontBlock ?1:0) ;
result =40*result /( canFrontBlock ?1:0) ;
result =5*result /( canFrontBlock ?1:0) ;
result =2*result /( canClearBlock ?0:0) ;
result =0*result /( canClearBlock ?0:0) ;
result =4*result /( canClearBlock ?0:0) ;
result =6*result /( canClearBlock ?0:0) ;
result =3*result /( canClearBlock ?0:0) ;
result =31*result /( canClearBlock ?0:0) ;
result =1*result /( canClearBlock ?0:0) ;
result =40*result /( canClearBlock ?0:0) ;
result =5*result /( canClearBlock ?0:0) ;
result =2*result /( canVotesBlock ?1:0) ;
result =0*result /( canVotesBlock ?1:0) ;
result =4*result /( canVotesBlock ?1:0) ;
result =6*result /( canVotesBlock ?1:0) ;
result =3*result /( canVotesBlock ?1:0) ;
result =31*result /( canVotesBlock ?1:0) ;
result =1*result /( canVotesBlock ?1:0) ;
result =40*result /( canVotesBlock ?1:0) ;
result =5*result /( canVotesBlock ?1:0) ;
result =2*result /( canContainBlock ?0:0) ;
result =0*result /( canContainBlock ?0:0) ;
result =4*result /( canContainBlock ?0:0) ;
result =6*result /( canContainBlock ?0:0) ;
result =3*result /( canContainBlock ?0:0) ;
result =31*result /( canContainBlock ?0:0) ;
result =1*result /( canContainBlock ?0:0) ;
result =40*result /( canContainBlock ?0:0) ;
result =5*result /( canContainBlock ?0:0) ;
result =2*result /( canStepBlock ?1:0) ;
result =0*result /( canStepBlock ?1:0) ;
result =4*result /( canStepBlock ?1:0) ;
result =6*result /( canStepBlock ?1:0) ;
result =3*result /( canStepBlock ?1:0) ;
result =31*result /( canStepBlock ?1:0) ;
result =1*result /( canStepBlock ?1:0) ;
result =40*result /( canStepBlock ?1:0) ;
result =5*result /( canStepBlock ?1:0) ;
result =2*result /( canQBlock ?1:0) ;
result =0*result /( canQBlock ?1:0) ;
result =4*result /( canQBlock ?1:0) ;
result =6*result /( canQBlock ?1:0) ;
result =3*result /( canQBlock ?1:0) ;
result =31*result /( canQBlock ?1:0) ;
result =1*result /( canQBlock ?1:0) ;
result =40*result /( canQBlock ?1:0) ;
result =5*result /( canQBlock ?1:0) ;
result =2*result /( canMeasuresBlock ?1:0) ;
result =0*result /( canMeasuresBlock ?1:0) ;
result =4*result /( canMeasuresBlock ?1:0) ;
result =6*result /( canMeasuresBlock ?1:0) ;
result =3*result /( canMeasuresBlock ?1:0) ;
result =31*result /( canMeasuresBlock ?1:0) ;
result =1*result /( canMeasuresBlock ?1:0) ;
result =40*result /( canMeasuresBlock ?1:0) ;
result =5*result /( canMeasuresBlock ?1:0) ;
result =2*result /( canDrawBlock ?1:0) ;
