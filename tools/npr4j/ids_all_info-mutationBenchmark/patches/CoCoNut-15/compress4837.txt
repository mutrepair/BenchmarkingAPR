long value =( bytes [ offset + BYTE_2] << BYTE_2_SHIFT ) ^ BYTE_2_MASK ;
long value =( bytes [ offset + BYTE_0] << BYTE_0_SHIFT ) ^ BYTE_0_MASK ;
long value =( bytes [ offset + BYTE_4] << BYTE_4_SHIFT ) ^ BYTE_4_MASK ;
long value =( bytes [ offset + BYTE_24] << BYTE_24_SHIFT ) ^ BYTE_24_MASK ;
long value =( bytes [ offset + BYTE_00] << BYTE_00_SHIFT ) ^ BYTE_00_MASK ;
long value =( bytes [ offset + BYTE_16] << BYTE_16_SHIFT ) ^ BYTE_16_MASK ;
long value =( bytes [ offset + BYTE_3] << BYTE_3_SHIFT ) ^ BYTE_3_MASK ;
long value =( bytes [ offset + BYTE_0000] << BYTE_0000_SHIFT ) ^ BYTE_0000_MASK ;
long value =( bytes [ offset + BYTE_1] << BYTE_1_SHIFT ) ^ BYTE_1_MASK ;
long value =( bytes [ offset + BYTE_8] << BYTE_8_SHIFT ) ^ BYTE_8_MASK ;
long value =( bytes [ offset + BYTE_000000] << BYTE_000000_SHIFT ) ^ BYTE_000000_MASK ;
long value =( bytes [ offset - BYTE_2] << BYTE_2_SHIFT ) ^ BYTE_2_MASK ;
long value =( bytes [ offset - BYTE_0] << BYTE_0_SHIFT ) ^ BYTE_0_MASK ;
long value =( bytes [ offset - BYTE_4] << BYTE_4_SHIFT ) ^ BYTE_4_MASK ;
long value =( bytes [ offset - BYTE_24] << BYTE_24_SHIFT ) ^ BYTE_24_MASK ;
long value =( bytes [ offset - BYTE_00] << BYTE_00_SHIFT ) ^ BYTE_00_MASK ;
long value =( bytes [ offset - BYTE_16] << BYTE_16_SHIFT ) ^ BYTE_16_MASK ;
long value =( bytes [ offset - BYTE_3] << BYTE_3_SHIFT ) ^ BYTE_3_MASK ;
long value =( bytes [ offset - BYTE_0000] << BYTE_0000_SHIFT ) ^ BYTE_0000_MASK ;
long value =( bytes [ offset - BYTE_1] << BYTE_1_SHIFT ) ^ BYTE_1_MASK ;
long value =( bytes [ offset - BYTE_8] << BYTE_8_SHIFT ) ^ BYTE_8_MASK ;
long value =( bytes [ offset - BYTE_000000] << BYTE_000000_SHIFT ) ^ BYTE_000000_MASK ;
int value =( bytes [ offset + BYTE_2] << BYTE_2_SHIFT ) ^ BYTE_2_MASK ;
int value =( bytes [ offset + BYTE_0] << BYTE_0_SHIFT ) ^ BYTE_0_MASK ;
int value =( bytes [ offset + BYTE_4] << BYTE_4_SHIFT ) ^ BYTE_4_MASK ;
int value =( bytes [ offset + BYTE_24] << BYTE_24_SHIFT ) ^ BYTE_24_MASK ;
int value =( bytes [ offset + BYTE_00] << BYTE_00_SHIFT ) ^ BYTE_00_MASK ;
int value =( bytes [ offset + BYTE_16] << BYTE_16_SHIFT ) ^ BYTE_16_MASK ;
int value =( bytes [ offset + BYTE_3] << BYTE_3_SHIFT ) ^ BYTE_3_MASK ;
int value =( bytes [ offset + BYTE_0000] << BYTE_0000_SHIFT ) ^ BYTE_0000_MASK ;
int value =( bytes [ offset + BYTE_1] << BYTE_1_SHIFT ) ^ BYTE_1_MASK ;
int value =( bytes [ offset + BYTE_8] << BYTE_8_SHIFT ) ^ BYTE_8_MASK ;
int value =( bytes [ offset + BYTE_000000] << BYTE_000000_SHIFT ) ^ BYTE_000000_MASK ;
double value =( bytes [ offset + BYTE_2] << BYTE_2_SHIFT ) ^ BYTE_2_MASK ;
double value =( bytes [ offset + BYTE_0] << BYTE_0_SHIFT ) ^ BYTE_0_MASK ;
double value =( bytes [ offset + BYTE_4] << BYTE_4_SHIFT ) ^ BYTE_4_MASK ;
double value =( bytes [ offset + BYTE_24] << BYTE_24_SHIFT ) ^ BYTE_24_MASK ;
double value =( bytes [ offset + BYTE_00] << BYTE_00_SHIFT ) ^ BYTE_00_MASK ;
double value =( bytes [ offset + BYTE_16] << BYTE_16_SHIFT ) ^ BYTE_16_MASK ;
double value =( bytes [ offset + BYTE_3] << BYTE_3_SHIFT ) ^ BYTE_3_MASK ;
double value =( bytes [ offset + BYTE_0000] << BYTE_0000_SHIFT ) ^ BYTE_0000_MASK ;
double value =( bytes [ offset + BYTE_1] << BYTE_1_SHIFT ) ^ BYTE_1_MASK ;
double value =( bytes [ offset + BYTE_8] << BYTE_8_SHIFT ) ^ BYTE_8_MASK ;
double value =( bytes [ offset + BYTE_000000] << BYTE_000000_SHIFT ) ^ BYTE_000000_MASK ;
long value =( bytes [ offset , BYTE_2] << BYTE_2_SHIFT ) ^ BYTE_2_MASK ;
long value =( bytes [ offset , BYTE_0] << BYTE_0_SHIFT ) ^ BYTE_0_MASK ;
long value =( bytes [ offset , BYTE_4] << BYTE_4_SHIFT ) ^ BYTE_4_MASK ;
long value =( bytes [ offset , BYTE_24] << BYTE_24_SHIFT ) ^ BYTE_24_MASK ;
long value =( bytes [ offset , BYTE_00] << BYTE_00_SHIFT ) ^ BYTE_00_MASK ;
long value =( bytes [ offset , BYTE_16] << BYTE_16_SHIFT ) ^ BYTE_16_MASK ;
long value =( bytes [ offset , BYTE_3] << BYTE_3_SHIFT ) ^ BYTE_3_MASK ;
long value =( bytes [ offset , BYTE_0000] << BYTE_0000_SHIFT ) ^ BYTE_0000_MASK ;
long value =( bytes [ offset , BYTE_1] << BYTE_1_SHIFT ) ^ BYTE_1_MASK ;
long value =( bytes [ offset , BYTE_8] << BYTE_8_SHIFT ) ^ BYTE_8_MASK ;
long value =( bytes [ offset , BYTE_000000] << BYTE_000000_SHIFT ) ^ BYTE_000000_MASK ;
long value =( bytes [ offset + BYTE_2] << BYTE_2_oos ) ^ BYTE_2_MASK ;
long value =( bytes [ offset + BYTE_0] << BYTE_0_oos ) ^ BYTE_0_MASK ;
long value =( bytes [ offset + BYTE_4] << BYTE_4_oos ) ^ BYTE_4_MASK ;
long value =( bytes [ offset + BYTE_24] << BYTE_24_oos ) ^ BYTE_24_MASK ;
long value =( bytes [ offset + BYTE_00] << BYTE_00_oos ) ^ BYTE_00_MASK ;
long value =( bytes [ offset + BYTE_16] << BYTE_16_oos ) ^ BYTE_16_MASK ;
long value =( bytes [ offset + BYTE_3] << BYTE_3_oos ) ^ BYTE_3_MASK ;
long value =( bytes [ offset + BYTE_0000] << BYTE_0000_oos ) ^ BYTE_0000_MASK ;
long value =( bytes [ offset + BYTE_1] << BYTE_1_oos ) ^ BYTE_1_MASK ;
long value =( bytes [ offset + BYTE_8] << BYTE_8_oos ) ^ BYTE_8_MASK ;
long value =( bytes [ offset + BYTE_000000] << BYTE_000000_oos ) ^ BYTE_000000_MASK ;
long value = bytes [ offset + BYTE_2] << BYTE_2_SHIFT ) ^ BYTE_2_MASK ;
long value = bytes [ offset + BYTE_0] << BYTE_0_SHIFT ) ^ BYTE_0_MASK ;
long value = bytes [ offset + BYTE_4] << BYTE_4_SHIFT ) ^ BYTE_4_MASK ;
long value = bytes [ offset + BYTE_24] << BYTE_24_SHIFT ) ^ BYTE_24_MASK ;
long value = bytes [ offset + BYTE_00] << BYTE_00_SHIFT ) ^ BYTE_00_MASK ;
long value = bytes [ offset + BYTE_16] << BYTE_16_SHIFT ) ^ BYTE_16_MASK ;
long value = bytes [ offset + BYTE_3] << BYTE_3_SHIFT ) ^ BYTE_3_MASK ;
long value = bytes [ offset + BYTE_0000] << BYTE_0000_SHIFT ) ^ BYTE_0000_MASK ;
long value = bytes [ offset + BYTE_1] << BYTE_1_SHIFT ) ^ BYTE_1_MASK ;
long value = bytes [ offset + BYTE_8] << BYTE_8_SHIFT ) ^ BYTE_8_MASK ;
long value = bytes [ offset + BYTE_000000] << BYTE_000000_SHIFT ) ^ BYTE_000000_MASK ;
long value =( bytes [ offset + BYTE_2] << BYTE_2_SHIFT ) ^ BYTE_8_MASK ;
long value =( bytes [ offset + BYTE_0] << BYTE_0_SHIFT ) ^ BYTE_8_MASK ;
long value =( bytes [ offset + BYTE_4] << BYTE_4_SHIFT ) ^ BYTE_8_MASK ;
long value =( bytes [ offset + BYTE_24] << BYTE_24_SHIFT ) ^ BYTE_8_MASK ;
long value =( bytes [ offset + BYTE_00] << BYTE_00_SHIFT ) ^ BYTE_8_MASK ;
long value =( bytes [ offset + BYTE_16] << BYTE_16_SHIFT ) ^ BYTE_8_MASK ;
long value =( bytes [ offset + BYTE_3] << BYTE_3_SHIFT ) ^ BYTE_8_MASK ;
long value =( bytes [ offset + BYTE_0000] << BYTE_0000_SHIFT ) ^ BYTE_8_MASK ;
long value =( bytes [ offset + BYTE_1] << BYTE_1_SHIFT ) ^ BYTE_8_MASK ;
long value =( bytes [ offset + BYTE_8] << BYTE_8_SHIFT ) ^ BYTE_8_MASK ;
long value =( bytes [ offset + BYTE_000000] << BYTE_000000_SHIFT ) ^ BYTE_8_MASK ;
long value =( bytes [ offset + BYTE_2] << BYTE_2_LEFT ) ^ BYTE_2_MASK ;
long value =( bytes [ offset + BYTE_0] << BYTE_0_LEFT ) ^ BYTE_0_MASK ;
long value =( bytes [ offset + BYTE_4] << BYTE_4_LEFT ) ^ BYTE_4_MASK ;
long value =( bytes [ offset + BYTE_24] << BYTE_24_LEFT ) ^ BYTE_24_MASK ;
long value =( bytes [ offset + BYTE_00] << BYTE_00_LEFT ) ^ BYTE_00_MASK ;
long value =( bytes [ offset + BYTE_16] << BYTE_16_LEFT ) ^ BYTE_16_MASK ;
long value =( bytes [ offset + BYTE_3] << BYTE_3_LEFT ) ^ BYTE_3_MASK ;
long value =( bytes [ offset + BYTE_0000] << BYTE_0000_LEFT ) ^ BYTE_0000_MASK ;
long value =( bytes [ offset + BYTE_1] << BYTE_1_LEFT ) ^ BYTE_1_MASK ;
long value =( bytes [ offset + BYTE_8] << BYTE_8_LEFT ) ^ BYTE_8_MASK ;
long value =( bytes [ offset + BYTE_000000] << BYTE_000000_LEFT ) ^ BYTE_000000_MASK ;
long value =( bytes [ offset ] + BYTE_2] << BYTE_2_SHIFT ) ^ BYTE_2_MASK ;
