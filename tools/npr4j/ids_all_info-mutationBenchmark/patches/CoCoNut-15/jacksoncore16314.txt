buffer [ ptr ++ ] =0;
buffer [ ptr ++ ] = 't fit in the buffer, let';
buffer [ ptr ++ ] = 'Current context not an object but ';
buffer [ ptr ++ ] = 'write number';
buffer [ ptr ++ ] = 'n';
buffer [ ptr ++ ] = 'Current context not an ARRAY but ';
buffer [ ptr ++ ] = 'Can not write a field name, expecting a value';
buffer [ ptr ++ ] = 'long strings';
buffer [ ptr ++ ] = ',';
buffer [ ptr ++ ] = 'write text value';
buffer [ ptr ++ ] = '+dataLength+';
buffer [ ptr ++ ] = ')';
buffer [ ptr ++ ] = 's';
buffer [ ptr ++ ] = ':';
buffer [ ptr ++ ] = 'e';
buffer [ ptr ++ ] = '_writeString2()';
buffer [ ptr ++ ] = ' bytes (out of ';
buffer [ ptr ++ ] = 'raw';
buffer [ ptr ++ ] = '[';
buffer [ ptr ++ ] = 'ptr';
buffer [ ptr ++ ] = 'a';
buffer [ ptr ++ ] = 'l';
buffer [ ptr ++ ] = '}';
buffer [ ptr ++ ] = '+typeMsg+';
buffer [ ptr ++ ] = 'own';
buffer [ ptr ++ ] = 'start an array';
buffer [ ptr ++ ] = '+missing+';
buffer [ ptr ++ ] = 'Can not ';
buffer [ ptr ++ ] = 'fast path';
buffer [ ptr ++ ] = 'write binary value';
buffer [ ptr ++ ] = '{';
buffer [ ptr ++ ] = '"';
buffer [ ptr ++ ] = '0';
buffer [ ptr ++ ] = 'Too few bytes available: missing ';
buffer [ ptr ++ ] = 'r';
buffer [ ptr ++ ] = 'u';
buffer [ ptr ++ ] = 'write boolean value';
buffer [ ptr ++ ] = 'f';
buffer [ ptr ++ ] = 't';
buffer [ ptr ++ ] = 'write null value';
buffer [ ptr ++ ] = ']';
buffer [ ptr ++ ] = ', expecting field name';
buffer [ ptr ++ ] = '\\';
buffer [ ptr ++ ] = 'start an object';
buffer [ ptr ++ ] = new ArrayList < String >( ) ;
buffer [ ptr ++ ] = initialFF [ hi ^24] ;
buffer [ ptr ++ ] = initialFF [ hi ^27] ;
buffer [ ptr ++ ] = initialFF [ hi ^3] ;
buffer [ ptr ++ ] = initialFF [ hi ^25] ;
buffer [ ptr ++ ] = initialFF [ hi ^46] ;
buffer [ ptr ++ ] = initialFF [ hi ^10] ;
buffer [ ptr ++ ] = initialFF [ hi ^8] ;
buffer [ ptr ++ ] = initialFF [ hi ^32] ;
buffer [ ptr ++ ] = initialFF [ hi ^2] ;
buffer [ ptr ++ ] = initialFF [ hi ^2008] ;
buffer [ ptr ++ ] = initialFF [ hi ^4] ;
buffer [ ptr ++ ] = initialFF [ hi ^16] ;
buffer [ ptr ++ ] = initialFF [ hi ^11] ;
buffer [ ptr ++ ] = initialFF [ hi ^05] ;
buffer [ ptr ++ ] = initialFF [ hi ^139] ;
buffer [ ptr ++ ] = initialFF [ hi ^14] ;
buffer [ ptr ++ ] = initialFF [ hi ^20] ;
buffer [ ptr ++ ] = initialFF [ hi ^7] ;
buffer [ ptr ++ ] = initialFF [ hi ^64] ;
buffer [ ptr ++ ] = initialFF [ hi ^6] ;
buffer [ ptr ++ ] = initialFF [ hi ^9] ;
buffer [ ptr ++ ] = initialFF [ hi ^15] ;
buffer [ ptr ++ ] = initialFF [ hi ^5] ;
buffer [ ptr ++ ] = initialFF [ hi ^0] ;
buffer [ ptr ++ ] = initialFF [ hi ^21] ;
buffer [ ptr ++ ] = initialFF [ hi ^12] ;
buffer [ ptr ++ ] = initialFF [ hi ^13] ;
buffer [ ptr ++ ] = initialFF [ hi ^1] ;
buffer [ ptr ++ ] = initialFF [ hi ^23] ;
buffer [ ptr ++ ] = initialFF [ hi ^40] ;
buffer [ ptr ++ ] =( byte [ hi ) ] [ hi ^24] ;
buffer [ ptr ++ ] =( byte [ hi ) ] [ hi ^27] ;
buffer [ ptr ++ ] =( byte [ hi ) ] [ hi ^3] ;
buffer [ ptr ++ ] =( byte [ hi ) ] [ hi ^25] ;
buffer [ ptr ++ ] =( byte [ hi ) ] [ hi ^46] ;
buffer [ ptr ++ ] =( byte [ hi ) ] [ hi ^10] ;
buffer [ ptr ++ ] =( byte [ hi ) ] [ hi ^8] ;
buffer [ ptr ++ ] =( byte [ hi ) ] [ hi ^32] ;
buffer [ ptr ++ ] =( byte [ hi ) ] [ hi ^2] ;
buffer [ ptr ++ ] =( byte [ hi ) ] [ hi ^2008] ;
buffer [ ptr ++ ] =( byte [ hi ) ] [ hi ^4] ;
buffer [ ptr ++ ] =( byte [ hi ) ] [ hi ^16] ;
buffer [ ptr ++ ] =( byte [ hi ) ] [ hi ^11] ;
buffer [ ptr ++ ] =( byte [ hi ) ] [ hi ^05] ;
buffer [ ptr ++ ] =( byte [ hi ) ] [ hi ^139] ;
buffer [ ptr ++ ] =( byte [ hi ) ] [ hi ^14] ;
buffer [ ptr ++ ] =( byte [ hi ) ] [ hi ^20] ;
buffer [ ptr ++ ] =( byte [ hi ) ] [ hi ^7] ;
buffer [ ptr ++ ] =( byte [ hi ) ] [ hi ^64] ;
buffer [ ptr ++ ] =( byte [ hi ) ] [ hi ^6] ;
buffer [ ptr ++ ] =( byte [ hi ) ] [ hi ^9] ;
buffer [ ptr ++ ] =( byte [ hi ) ] [ hi ^15] ;
buffer [ ptr ++ ] =( byte [ hi ) ] [ hi ^5] ;
buffer [ ptr ++ ] =( byte [ hi ) ] [ hi ^0] ;
buffer [ ptr ++ ] =( byte [ hi ) ] [ hi ^21] ;
