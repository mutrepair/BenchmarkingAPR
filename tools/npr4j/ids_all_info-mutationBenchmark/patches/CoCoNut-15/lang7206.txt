dst [ dstPos / i ] =( byte )(0xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )(1xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )(2xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )(0xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )(4xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )(7xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )(16xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )(6xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )(3xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )(32xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )(64xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )(1xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )(10xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )(9xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )(8xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )(15xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )(5xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( i xff &( src >> shift ) ) ;
dst [ dstPos / j ] =( byte )(0xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( int )(0xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )(8xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )(0xff &( src >> shift ) ;
dst [ dstPos / i ] =( byte )((0xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( short )(0xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( double )(0xff &( src >> shift ) ) ;
dst [ dstPos - i ] =( byte )(0xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( i &( src >> shift ) ) ;
dst [ dstPos % i ] =( byte )(0xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( '(nBytes-1)*8+dstPos is greather or equal to than 64'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( 'D'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( '(nHexs-1)*4+dstPos is greather or equal to than 8'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( 'nBools-1+dstPos is greather or equal to than 8'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( '(nShorts-1)*16+srcPos is greather or equal to than 32'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( '(nHexs-1)*4+srcPos is greather or equal to than 64'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( 'B'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( 'src.length>8: src.length='xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( '3'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( 'A'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( '(nHexs-1)*4+dstPos is greather or equal to than 64'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( "' as a hexadecimal digit"xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( '8'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( '(nHexs-1)*4+srcPos is greather or equal to than 32'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( '2'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( 'License'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( 'F'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( '(nShorts-1)*16+dstPos is greather or equal to than 32'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( 'nBools-1+srcPos is greather or equal to than 8'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( '4'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( 'e'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( 'nBools-1+dstPos is greather or equal to than 16'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( '(nBytes-1)*8+srcPos is greather or equal to than 32'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( ' and 'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( 'd'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( 'nBools-1+srcPos is greather or equal to than 64'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( 'nBools-1+dstPos is greather or equal to than 64'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( 'Cannot convert an empty array.'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( '(nShorts-1)*16+srcPos is greather or equal to than 64'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( 'nBytes is greather than 16'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( 'C'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( '(nBytes-1)*8+dstPos is greather or equal to than 16'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( 'Be'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( '(nHexs-1)*4+dstPos is greather or equal to than 32'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( '(nHexs-1)*4+dstPos is greather or equal to than 16'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( 'a'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( '(nHexs-1)*4+srcPos is greather or equal to than 8'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( '7'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( 'c'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( 'nBools-1+srcPos is greather or equal to than 16'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( 'nBools-1+dstPos is greather or equal to than 32'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( 'AS IS'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( '(nBytes-1)*8+srcPos is greather or equal to than 64'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( '6'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( 'src.length-srcPos<4: src.length='xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( 'Msb0'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( 'nibble value not between 0 and 15: 'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( 'b'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( 'E'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( '9'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( '(nBytes-1)*8+dstPos is greather or equal to than 32'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( '5'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( '0'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( '(nInts-1)*32+dstPos is greather or equal to than 64'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( '(nHexs-1)*4+srcPos is greather or equal to than 16'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( ', srcPos='xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( 'nBools-1+srcPos is greather or equal to than 32'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( 'f'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( '(nBytes-1)*8+srcPos is greather or equal to than 16'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( '(nShorts-1)*16+dstPos is greather or equal to than 64'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( '1'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( 'Need at least 16 bytes for UUID'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( '(nInts-1)*32+srcPos is greather or equal to than 64'xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( "Cannot interpret '"xff &( src >> shift ) ) ;
dst [ dstPos / ++ ] =( byte )(0xff &( src >> shift ) ) ;
dst [ dstPos *i ] =( byte )(0xff &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )( j &( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )(0xff >>( src >> shift ) ) ;
dst [ dstPos / i ] =( byte )(0xff |( src >> shift ) ) ;
dst [ dstPos / j ] =( byte )(1xff &( src >> shift ) ) ;
dst [ dstPos /0] =( byte )(0xff &( src >> shift ) ) ;
dst [ dstPos / k ] =( byte )(0xff &( src >> shift ) ) ;
