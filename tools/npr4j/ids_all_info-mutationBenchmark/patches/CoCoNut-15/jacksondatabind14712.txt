c = dateStr.charAt( len +24) ;
c = dateStr.charAt( len +00) ;
c = dateStr.charAt( len +3) ;
c = dateStr.charAt( len +1123) ;
c = dateStr.charAt( len +10) ;
c = dateStr.charAt( len +8) ;
c = dateStr.charAt( len +2) ;
c = dateStr.charAt( len +4) ;
c = dateStr.charAt( len +200) ;
c = dateStr.charAt( len +2010) ;
c = dateStr.charAt( len +0000) ;
c = dateStr.charAt( len +697) ;
c = dateStr.charAt( len +14) ;
c = dateStr.charAt( len +6) ;
c = dateStr.charAt( len +2009) ;
c = dateStr.charAt( len +822) ;
c = dateStr.charAt( len +334) ;
c = dateStr.charAt( len +9) ;
c = dateStr.charAt( len +5) ;
c = dateStr.charAt( len +0) ;
c = dateStr.charAt( len +21) ;
c = dateStr.charAt( len +8601) ;
c = dateStr.charAt( len +1) ;
c = dateStr.charAt( len +000) ;
c = dateStr.charAt( len +236) ;
c = dateStr.charAt( len ) ;
c = dateStr.charAt( len +1) ;
c = dateStr.charAt( len -24) ;
c = dateStr.charAt( len -00) ;
c = dateStr.charAt( len -3) ;
c = dateStr.charAt( len -1123) ;
c = dateStr.charAt( len -10) ;
c = dateStr.charAt( len -8) ;
c = dateStr.charAt( len -2) ;
c = dateStr.charAt( len -4) ;
c = dateStr.charAt( len -200) ;
c = dateStr.charAt( len -2010) ;
c = dateStr.charAt( len -0000) ;
c = dateStr.charAt( len -697) ;
c = dateStr.charAt( len -14) ;
c = dateStr.charAt( len -6) ;
c = dateStr.charAt( len -2009) ;
c = dateStr.charAt( len -822) ;
c = dateStr.charAt( len -334) ;
c = dateStr.charAt( len -9) ;
c = dateStr.charAt( len -5) ;
c = dateStr.charAt( len -0) ;
c = dateStr.charAt( len -21) ;
c = dateStr.charAt( len -8601) ;
c = dateStr.charAt( len -1) ;
c = dateStr.charAt( len -000) ;
c = dateStr.charAt( len -236) ;
c = dateStr.charAt( len + ' 8601, but handles ') ;
c = dateStr.charAt( len + '') ;
c = dateStr.charAt( len + ' == "GMT")? If yes, that') ;
c = dateStr.charAt( len + 'Can not parse date \') ;
c = dateStr.charAt( len + '00') ;
c = dateStr.charAt( len + ' || c == ') ;
c = dateStr.charAt( len + 'stringified') ;
c = dateStr.charAt( len + ' (5 chars); should come after ') ;
c = dateStr.charAt( len + 'blueprint') ;
c = dateStr.charAt( len + ', \') ;
c = dateStr.charAt( len + ':') ;
c = dateStr.charAt( len + ' || ch > ') ;
c = dateStr.charAt( len + ' and ') ;
c = dateStr.charAt( len + '%s\') ;
c = dateStr.charAt( len + '+hhmm') ;
c = dateStr.charAt( len + 'T') ;
c = dateStr.charAt( len + ': not compatible with any of standard forms (%s)') ;
c = dateStr.charAt( len + 'regular') ;
c = dateStr.charAt( len + 'standard') ;
c = dateStr.charAt( len + 'zulu') ;
c = dateStr.charAt( len + ', ') ;
c = dateStr.charAt( len + " format ('Z' == ") ;
c = dateStr.charAt( len + 'plain') ;
c = dateStr.charAt( len + "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'") ;
c = dateStr.charAt( len + '+0000') ;
c = dateStr.charAt( len + 'HH:mm:ss.SSS') ;
c = dateStr.charAt( len + '-') ;
c = dateStr.charAt( len + 'EEE, dd MMM yyyy HH:mm:ss zzz') ;
c = dateStr.charAt( len + "yyyy-MM-dd'T'HH:mm:ss.SSSZ") ;
c = dateStr.charAt( len + '9') ;
c = dateStr.charAt( len + '\') ;
c = dateStr.charAt( len + '+hh') ;
c = dateStr.charAt( len + '"') ;
c = dateStr.charAt( len + '0') ;
c = dateStr.charAt( len + 'Z') ;
c = dateStr.charAt( len + '+') ;
c = dateStr.charAt( len + 'serial') ;
c = dateStr.charAt( len + 's just append ') ;
c = dateStr.charAt( len + 'GMT') ;
c = dateStr.charAt( len + '+hh:mm') ;
c = dateStr.charAt( len + '.000') ;
c = dateStr.charAt( len + 'yyyy-MM-dd') ;
c = dateStr.charAt( len ,24) ;
c = dateStr.charAt( len ,00) ;
c = dateStr.charAt( len ,3) ;
c = dateStr.charAt( len ,1123) ;
c = dateStr.charAt( len ,10) ;
c = dateStr.charAt( len ,8) ;
