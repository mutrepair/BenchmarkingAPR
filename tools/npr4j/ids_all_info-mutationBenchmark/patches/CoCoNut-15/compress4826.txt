result [ BYTE_2] =( byte )(( value ^ BYTE_2_MASK ) >> BYTE_2_SHIFT ) ;
result [ BYTE_0] =( byte )(( value ^ BYTE_0_MASK ) >> BYTE_0_SHIFT ) ;
result [ BYTE_4] =( byte )(( value ^ BYTE_4_MASK ) >> BYTE_4_SHIFT ) ;
result [ BYTE_24] =( byte )(( value ^ BYTE_24_MASK ) >> BYTE_24_SHIFT ) ;
result [ BYTE_00] =( byte )(( value ^ BYTE_00_MASK ) >> BYTE_00_SHIFT ) ;
result [ BYTE_16] =( byte )(( value ^ BYTE_16_MASK ) >> BYTE_16_SHIFT ) ;
result [ BYTE_3] =( byte )(( value ^ BYTE_3_MASK ) >> BYTE_3_SHIFT ) ;
result [ BYTE_0000] =( byte )(( value ^ BYTE_0000_MASK ) >> BYTE_0000_SHIFT ) ;
result [ BYTE_1] =( byte )(( value ^ BYTE_1_MASK ) >> BYTE_1_SHIFT ) ;
result [ BYTE_8] =( byte )(( value ^ BYTE_8_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_000000] =( byte )(( value ^ BYTE_000000_MASK ) >> BYTE_000000_SHIFT ) ;
result [ BYTE_2] =( byte )((( value ^ BYTE_2_MASK ) >> BYTE_2_SHIFT ) ;
result [ BYTE_0] =( byte )((( value ^ BYTE_0_MASK ) >> BYTE_0_SHIFT ) ;
result [ BYTE_4] =( byte )((( value ^ BYTE_4_MASK ) >> BYTE_4_SHIFT ) ;
result [ BYTE_24] =( byte )((( value ^ BYTE_24_MASK ) >> BYTE_24_SHIFT ) ;
result [ BYTE_00] =( byte )((( value ^ BYTE_00_MASK ) >> BYTE_00_SHIFT ) ;
result [ BYTE_16] =( byte )((( value ^ BYTE_16_MASK ) >> BYTE_16_SHIFT ) ;
result [ BYTE_3] =( byte )((( value ^ BYTE_3_MASK ) >> BYTE_3_SHIFT ) ;
result [ BYTE_0000] =( byte )((( value ^ BYTE_0000_MASK ) >> BYTE_0000_SHIFT ) ;
result [ BYTE_1] =( byte )((( value ^ BYTE_1_MASK ) >> BYTE_1_SHIFT ) ;
result [ BYTE_8] =( byte )((( value ^ BYTE_8_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_000000] =( byte )((( value ^ BYTE_000000_MASK ) >> BYTE_000000_SHIFT ) ;
result [ BYTE_2] =( byte )(( value ^ BYTE_2_MASK ) >> BYTE_2_oos ) ;
result [ BYTE_0] =( byte )(( value ^ BYTE_0_MASK ) >> BYTE_0_oos ) ;
result [ BYTE_4] =( byte )(( value ^ BYTE_4_MASK ) >> BYTE_4_oos ) ;
result [ BYTE_24] =( byte )(( value ^ BYTE_24_MASK ) >> BYTE_24_oos ) ;
result [ BYTE_00] =( byte )(( value ^ BYTE_00_MASK ) >> BYTE_00_oos ) ;
result [ BYTE_16] =( byte )(( value ^ BYTE_16_MASK ) >> BYTE_16_oos ) ;
result [ BYTE_3] =( byte )(( value ^ BYTE_3_MASK ) >> BYTE_3_oos ) ;
result [ BYTE_0000] =( byte )(( value ^ BYTE_0000_MASK ) >> BYTE_0000_oos ) ;
result [ BYTE_1] =( byte )(( value ^ BYTE_1_MASK ) >> BYTE_1_oos ) ;
result [ BYTE_8] =( byte )(( value ^ BYTE_8_MASK ) >> BYTE_8_oos ) ;
result [ BYTE_000000] =( byte )(( value ^ BYTE_000000_MASK ) >> BYTE_000000_oos ) ;
result [ BYTE_2] =( byte )(( value ^ BYTE_2_MASK ) >> BYTE_2_2) ;
result [ BYTE_0] =( byte )(( value ^ BYTE_0_MASK ) >> BYTE_0_0) ;
result [ BYTE_4] =( byte )(( value ^ BYTE_4_MASK ) >> BYTE_4_4) ;
result [ BYTE_24] =( byte )(( value ^ BYTE_24_MASK ) >> BYTE_24_24) ;
result [ BYTE_00] =( byte )(( value ^ BYTE_00_MASK ) >> BYTE_00_00) ;
result [ BYTE_16] =( byte )(( value ^ BYTE_16_MASK ) >> BYTE_16_16) ;
result [ BYTE_3] =( byte )(( value ^ BYTE_3_MASK ) >> BYTE_3_3) ;
result [ BYTE_0000] =( byte )(( value ^ BYTE_0000_MASK ) >> BYTE_0000_0000) ;
result [ BYTE_1] =( byte )(( value ^ BYTE_1_MASK ) >> BYTE_1_1) ;
result [ BYTE_8] =( byte )(( value ^ BYTE_8_MASK ) >> BYTE_8_8) ;
result [ BYTE_000000] =( byte )(( value ^ BYTE_000000_MASK ) >> BYTE_000000_000000) ;
result [ BYTE_2] =( byte )(( value ^ BYTE_2_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_0] =( byte )(( value ^ BYTE_0_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_4] =( byte )(( value ^ BYTE_4_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_24] =( byte )(( value ^ BYTE_24_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_00] =( byte )(( value ^ BYTE_00_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_16] =( byte )(( value ^ BYTE_16_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_3] =( byte )(( value ^ BYTE_3_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_0000] =( byte )(( value ^ BYTE_0000_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_1] =( byte )(( value ^ BYTE_1_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_8] =( byte )(( value ^ BYTE_8_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_000000] =( byte )(( value ^ BYTE_000000_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_2] =( byte )(( value ^ BYTE_2_MASK ) >> BYTE_2_LEFT ) ;
result [ BYTE_0] =( byte )(( value ^ BYTE_0_MASK ) >> BYTE_0_LEFT ) ;
result [ BYTE_4] =( byte )(( value ^ BYTE_4_MASK ) >> BYTE_4_LEFT ) ;
result [ BYTE_24] =( byte )(( value ^ BYTE_24_MASK ) >> BYTE_24_LEFT ) ;
result [ BYTE_00] =( byte )(( value ^ BYTE_00_MASK ) >> BYTE_00_LEFT ) ;
result [ BYTE_16] =( byte )(( value ^ BYTE_16_MASK ) >> BYTE_16_LEFT ) ;
result [ BYTE_3] =( byte )(( value ^ BYTE_3_MASK ) >> BYTE_3_LEFT ) ;
result [ BYTE_0000] =( byte )(( value ^ BYTE_0000_MASK ) >> BYTE_0000_LEFT ) ;
result [ BYTE_1] =( byte )(( value ^ BYTE_1_MASK ) >> BYTE_1_LEFT ) ;
result [ BYTE_8] =( byte )(( value ^ BYTE_8_MASK ) >> BYTE_8_LEFT ) ;
result [ BYTE_000000] =( byte )(( value ^ BYTE_000000_MASK ) >> BYTE_000000_LEFT ) ;
result [ BYTE_2] =( byte )(( value ^ BYTE_2_MASK ) >> BYTE_2_STRING ) ;
result [ BYTE_0] =( byte )(( value ^ BYTE_0_MASK ) >> BYTE_0_STRING ) ;
result [ BYTE_4] =( byte )(( value ^ BYTE_4_MASK ) >> BYTE_4_STRING ) ;
result [ BYTE_24] =( byte )(( value ^ BYTE_24_MASK ) >> BYTE_24_STRING ) ;
result [ BYTE_00] =( byte )(( value ^ BYTE_00_MASK ) >> BYTE_00_STRING ) ;
result [ BYTE_16] =( byte )(( value ^ BYTE_16_MASK ) >> BYTE_16_STRING ) ;
result [ BYTE_3] =( byte )(( value ^ BYTE_3_MASK ) >> BYTE_3_STRING ) ;
result [ BYTE_0000] =( byte )(( value ^ BYTE_0000_MASK ) >> BYTE_0000_STRING ) ;
result [ BYTE_1] =( byte )(( value ^ BYTE_1_MASK ) >> BYTE_1_STRING ) ;
result [ BYTE_8] =( byte )(( value ^ BYTE_8_MASK ) >> BYTE_8_STRING ) ;
result [ BYTE_000000] =( byte )(( value ^ BYTE_000000_MASK ) >> BYTE_000000_STRING ) ;
result [ BYTE_2] =( byte )(( value ^ BYTE_2_MASK ) >> BYTE_2_START ) ;
result [ BYTE_0] =( byte )(( value ^ BYTE_0_MASK ) >> BYTE_0_START ) ;
result [ BYTE_4] =( byte )(( value ^ BYTE_4_MASK ) >> BYTE_4_START ) ;
result [ BYTE_24] =( byte )(( value ^ BYTE_24_MASK ) >> BYTE_24_START ) ;
result [ BYTE_00] =( byte )(( value ^ BYTE_00_MASK ) >> BYTE_00_START ) ;
result [ BYTE_16] =( byte )(( value ^ BYTE_16_MASK ) >> BYTE_16_START ) ;
result [ BYTE_3] =( byte )(( value ^ BYTE_3_MASK ) >> BYTE_3_START ) ;
result [ BYTE_0000] =( byte )(( value ^ BYTE_0000_MASK ) >> BYTE_0000_START ) ;
result [ BYTE_1] =( byte )(( value ^ BYTE_1_MASK ) >> BYTE_1_START ) ;
result [ BYTE_8] =( byte )(( value ^ BYTE_8_MASK ) >> BYTE_8_START ) ;
result [ BYTE_000000] =( byte )(( value ^ BYTE_000000_MASK ) >> BYTE_000000_START ) ;
result [ BYTE_2] =( byte )(( value ^ BYTE_2_MASK ) >> BYTE_2_BOTTOM ) ;
result [ BYTE_0] =( byte )(( value ^ BYTE_0_MASK ) >> BYTE_0_BOTTOM ) ;
result [ BYTE_4] =( byte )(( value ^ BYTE_4_MASK ) >> BYTE_4_BOTTOM ) ;
result [ BYTE_24] =( byte )(( value ^ BYTE_24_MASK ) >> BYTE_24_BOTTOM ) ;
result [ BYTE_00] =( byte )(( value ^ BYTE_00_MASK ) >> BYTE_00_BOTTOM ) ;
result [ BYTE_16] =( byte )(( value ^ BYTE_16_MASK ) >> BYTE_16_BOTTOM ) ;
result [ BYTE_3] =( byte )(( value ^ BYTE_3_MASK ) >> BYTE_3_BOTTOM ) ;
result [ BYTE_0000] =( byte )(( value ^ BYTE_0000_MASK ) >> BYTE_0000_BOTTOM ) ;
result [ BYTE_1] =( byte )(( value ^ BYTE_1_MASK ) >> BYTE_1_BOTTOM ) ;
result [ BYTE_8] =( byte )(( value ^ BYTE_8_MASK ) >> BYTE_8_BOTTOM ) ;
result [ BYTE_000000] =( byte )(( value ^ BYTE_000000_MASK ) >> BYTE_000000_BOTTOM ) ;
result [ BYTE_2] =( byte )(( value ^ BYTE_2_MASK ) >> BYTE_2_TOP ) ;
