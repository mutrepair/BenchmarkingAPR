_tokenIncomplete = true ;
_tokenIncomplete = false ;
_tokenIncomplete = new ArrayList < >( ) ;
_tokenIncomplete = new_( ) ;
_tokenIncomplete = true.toString( ) ;
_tokenIncomplete = '';
_tokenIncomplete = '/';
_tokenIncomplete = ' in a comment';
_tokenIncomplete = '\f';
_tokenIncomplete = 'StreamBasedParserBase';
_tokenIncomplete = 'ALLOW_COMMENTS';
_tokenIncomplete = '+b64variant+';
_tokenIncomplete = '+b64variant.getPaddingChar()+';
_tokenIncomplete = '): ';
_tokenIncomplete = ' in character escape sequence';
_tokenIncomplete = '*';
_tokenIncomplete = 'Exponent indicator not followed by a digit';
_tokenIncomplete = 'Failed to decode VALUE_STRING as base64 (';
_tokenIncomplete = 'null';
_tokenIncomplete = '\r';
_tokenIncomplete = '\t';
_tokenIncomplete = '"+b64variant.getPaddingChar()+"';
_tokenIncomplete = 'n';
_tokenIncomplete = 'Unexpected end-of-input within/between ';
_tokenIncomplete = "expected padding character '";
_tokenIncomplete = "'";
_tokenIncomplete = ' || c == ';
_tokenIncomplete = 'NaN';
_tokenIncomplete = 'Utf8NumericParser';
_tokenIncomplete = 'name';
_tokenIncomplete = 'Infinity';
_tokenIncomplete = '+Infinity';
_tokenIncomplete = "Unrecognized token '";
_tokenIncomplete = ' in field name';
_tokenIncomplete = 'I';
_tokenIncomplete = '-';
_tokenIncomplete = '+_parsingContext.getTypeDesc()+';
_tokenIncomplete = 'N';
_tokenIncomplete = '.';
_tokenIncomplete = 'E';
_tokenIncomplete = '-Infinity';
_tokenIncomplete = 'expected digit (0-9) to follow minus sign, for valid numeric value';
_tokenIncomplete = '_nextAfterName';
_tokenIncomplete = 'Leading zeroes not allowed';
_tokenIncomplete = "Non-standard token '";
_tokenIncomplete = '+';
_tokenIncomplete = ' or ';
_tokenIncomplete = ') not VALUE_STRING or VALUE_EMBEDDED_OBJECT, can not access as binary';
_tokenIncomplete = 'other';
_tokenIncomplete = '\n';
_tokenIncomplete = 'slow';
_tokenIncomplete = '+sb.toString()+';
_tokenIncomplete = 'string value';
_tokenIncomplete = '"+sb.toString()+"';
_tokenIncomplete = '+_inputBuffer.length+';
_tokenIncomplete = '\"';
_tokenIncomplete = "Non-standard token 'Infinity': enable JsonParser.Feature.ALLOW_NON_NUMERIC_NUMBERS to allow";
_tokenIncomplete = "was expecting either '*' or '/' for a comment";
_tokenIncomplete = "'null', 'true', 'false' or NaN";
_tokenIncomplete = ' bytes';
_tokenIncomplete = 'own';
_tokenIncomplete = "': enable JsonParser.Feature.ALLOW_NON_NUMERIC_NUMBERS to allow";
_tokenIncomplete = 'expected a value';
_tokenIncomplete = ": was expecting closing '\";
_tokenIncomplete = 'was expecting double-quote to start field name';
_tokenIncomplete = ' entries';
_tokenIncomplete = "' for name";
_tokenIncomplete = '\';
_tokenIncomplete = '+match+';
_tokenIncomplete = ' || ch == ';
_tokenIncomplete = 'Invalid UTF-8 middle byte 0x';
_tokenIncomplete = '"+((char) c), ';
_tokenIncomplete = 'resource';
_tokenIncomplete = "': was expecting ";
_tokenIncomplete = ": was expecting closing '\'' for name";
_tokenIncomplete = 'expected a hex-digit for character escape sequence';
_tokenIncomplete = 'false';
_tokenIncomplete = '+INF';
_tokenIncomplete = 'InputStream.read() returned 0 characters when trying to read ';
_tokenIncomplete = 'missing';
_tokenIncomplete = 'was expecting comma to separate ';
_tokenIncomplete = "Non-standard token 'NaN': enable JsonParser.Feature.ALLOW_NON_NUMERIC_NUMBERS to allow";
_tokenIncomplete = 'Invalid UTF-8 start byte 0x';
_tokenIncomplete = 'expect-value';
_tokenIncomplete = '+amount+';
_tokenIncomplete = 'true';
_tokenIncomplete = 'e';
_tokenIncomplete = 'was expecting a colon to separate field name and value';
_tokenIncomplete = 'Decimal point not followed by a digit';
_tokenIncomplete = 'real';
_tokenIncomplete = ', ';
_tokenIncomplete = '-INF';
_tokenIncomplete = "('true', 'false' or 'null')";
_tokenIncomplete = '+_currToken+';
_tokenIncomplete = '}';
_tokenIncomplete = ' :';
_tokenIncomplete = "maybe a (non-standard) comment? (not recognized as one since Feature 'ALLOW_COMMENTS' not enabled for parser)";
_tokenIncomplete = 'was expecting either valid name character (for unquoted name) or double-quote (for quoted) to start field name';
_tokenIncomplete = '\b';
_tokenIncomplete = '"';
