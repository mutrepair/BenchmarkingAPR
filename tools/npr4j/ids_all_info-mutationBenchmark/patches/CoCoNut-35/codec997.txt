l_ascii [ jj + bits ] = 'License';
l_ascii [ jj + bits ] = '0';
l_ascii [ jj + bits ] = 's and ';
l_ascii [ jj + bits ] = 'AS IS';
l_ascii [ jj + bits ] = ' and ';
l_ascii [ jj + bits ] = '1';
l_ascii [ jj + bits ] = 'argument not a byte array';
l_ascii [ jj + bits ] = ' or ';
l_ascii [ jj - bits ] = 'License';
l_ascii [ jj - bits ] = '0';
l_ascii [ jj - bits ] = 's and ';
l_ascii [ jj - bits ] = 'AS IS';
l_ascii [ jj - bits ] = ' and ';
l_ascii [ jj - bits ] = '1';
l_ascii [ jj - bits ] = 'argument not a byte array';
l_ascii [ jj - bits ] = ' or ';
l_ascii [ jj ] = 'License';
l_ascii [ jj ] = '0';
l_ascii [ jj ] = 's and ';
l_ascii [ jj ] = 'AS IS';
l_ascii [ jj ] = ' and ';
l_ascii [ jj ] = '1';
l_ascii [ jj ] = 'argument not a byte array';
l_ascii [ jj ] = ' or ';
l_ascii [ jj ++ ] = 'License';
l_ascii [ jj ++ ] = '0';
l_ascii [ jj ++ ] = 's and ';
l_ascii [ jj ++ ] = 'AS IS';
l_ascii [ jj ++ ] = ' and ';
l_ascii [ jj ++ ] = '1';
l_ascii [ jj ++ ] = 'argument not a byte array';
l_ascii [ jj ++ ] = ' or ';
l_ascii [ jj ] + bits ] = 'License';
l_ascii [ jj ] + bits ] = '0';
l_ascii [ jj ] + bits ] = 's and ';
l_ascii [ jj ] + bits ] = 'AS IS';
l_ascii [ jj ] + bits ] = ' and ';
l_ascii [ jj ] + bits ] = '1';
l_ascii [ jj ] + bits ] = 'argument not a byte array';
l_ascii [ jj ] + bits ] = ' or ';
l_ascii [ jj + bits -1] = 'License';
l_ascii [ jj + bits -1] = '0';
l_ascii [ jj + bits -1] = 's and ';
l_ascii [ jj + bits -1] = 'AS IS';
l_ascii [ jj + bits -1] = ' and ';
l_ascii [ jj + bits -1] = '1';
l_ascii [ jj + bits -1] = 'argument not a byte array';
l_ascii [ jj + bits -1] = ' or ';
l_ascii [ jj + bits ] =( int )( 'License';
l_ascii [ jj + bits ] =( int )( '0';
l_ascii [ jj + bits ] =( int )( 's and ';
l_ascii [ jj + bits ] =( int )( 'AS IS';
l_ascii [ jj + bits ] =( int )( ' and ';
l_ascii [ jj + bits ] =( int )( '1';
l_ascii [ jj + bits ] =( int )( 'argument not a byte array';
l_ascii [ jj + bits ] =( int )( ' or ';
l_ascii [ jj + bits +1] = 'License';
l_ascii [ jj + bits +1] = '0';
l_ascii [ jj + bits +1] = 's and ';
l_ascii [ jj + bits +1] = 'AS IS';
l_ascii [ jj + bits +1] = ' and ';
l_ascii [ jj + bits +1] = '1';
l_ascii [ jj + bits +1] = 'argument not a byte array';
l_ascii [ jj + bits +1] = ' or ';
l_ascii [ jj + bits ] =0;
l_ascii [ jj + bits ] =2;
l_ascii [ jj + bits ] =04;
l_ascii [ jj + bits ] =0;
l_ascii [ jj + bits ] =02;
l_ascii [ jj + bits ] =4;
l_ascii [ jj + bits ] =20;
l_ascii [ jj + bits ] =7;
l_ascii [ jj + bits ] =6;
l_ascii [ jj + bits ] =3;
l_ascii [ jj + bits ] =08;
l_ascii [ jj + bits ] =1;
l_ascii [ jj + bits ] =8;
l_ascii [ jj + bits ] =80;
l_ascii [ jj + bits ] =40;
l_ascii [ jj + bits ] =10;
l_ascii [ jj + bits ] =5;
l_ascii [ jj + bits ] = 'License'+1;
l_ascii [ jj + bits ] = '0'+1;
l_ascii [ jj + bits ] = 's and '+1;
l_ascii [ jj + bits ] = 'AS IS'+1;
l_ascii [ jj + bits ] = ' and '+1;
l_ascii [ jj + bits ] = '1'+1;
l_ascii [ jj + bits ] = 'argument not a byte array'+1;
l_ascii [ jj + bits ] = ' or '+1;
l_ascii [ jj % bits ] = 'License';
l_ascii [ jj % bits ] = '0';
l_ascii [ jj % bits ] = 's and ';
l_ascii [ jj % bits ] = 'AS IS';
l_ascii [ jj % bits ] = ' and ';
l_ascii [ jj % bits ] = '1';
l_ascii [ jj % bits ] = 'argument not a byte array';
l_ascii [ jj % bits ] = ' or ';
l_ascii [ jj ] [ jj + bits ] = 'License';
l_ascii [ jj ] [ jj + bits ] = '0';
l_ascii [ jj ] [ jj + bits ] = 's and ';
