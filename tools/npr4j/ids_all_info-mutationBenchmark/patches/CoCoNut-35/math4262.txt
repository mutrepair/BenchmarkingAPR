this(1-( sigma *FastMath.sqrt(2*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(3*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(5*Math.PI ) ) , mean , sigma ) ;
this(2-( sigma *FastMath.sqrt(2*Math.PI ) ) , mean , sigma ) ;
this(0-( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
this(3-( sigma *FastMath.sqrt(3*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this(5-( sigma *FastMath.sqrt(5*Math.PI ) ) , mean , sigma ) ;
this.2-( sigma *FastMath.sqrt(2*Math.PI ) ) , mean , sigma ) ;
this.0-( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
this.3-( sigma *FastMath.sqrt(3*Math.PI ) ) , mean , sigma ) ;
this.1-( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this.5-( sigma *FastMath.sqrt(5*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(2*Math.PI ) ) , mean ) ;
this(1-( sigma *FastMath.sqrt(0*Math.PI ) ) , mean ) ;
this(1-( sigma *FastMath.sqrt(3*Math.PI ) ) , mean ) ;
this(1-( sigma *FastMath.sqrt(1*Math.PI ) ) , mean ) ;
this(1-( sigma *FastMath.sqrt(5*Math.PI ) ) , mean ) ;
this(1-( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this.1-( sigma *FastMath.sqrt(2*Math.PI ) ) , mean , sigma ) ;
this.1-( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
this.1-( sigma *FastMath.sqrt(3*Math.PI ) ) , mean , sigma ) ;
this.1-( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this.1-( sigma *FastMath.sqrt(5*Math.PI ) ) , mean , sigma ) ;
this.sigma -( sigma *FastMath.sqrt(2*Math.PI ) ) , mean , sigma ) ;
this.sigma -( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
this.sigma -( sigma *FastMath.sqrt(3*Math.PI ) ) , mean , sigma ) ;
this.sigma -( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this.sigma -( sigma *FastMath.sqrt(5*Math.PI ) ) , mean , sigma ) ;
this(0-( sigma *FastMath.sqrt(2*Math.PI ) ) , mean , sigma ) ;
this(0-( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
this(0-( sigma *FastMath.sqrt(3*Math.PI ) ) , mean , sigma ) ;
this(0-( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this(0-( sigma *FastMath.sqrt(5*Math.PI ) ) , mean , sigma ) ;
this(1+( sigma *FastMath.sqrt(2*Math.PI ) ) , mean , sigma ) ;
this(1+( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
this(1+( sigma *FastMath.sqrt(3*Math.PI ) ) , mean , sigma ) ;
this(1+( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this(1+( sigma *FastMath.sqrt(5*Math.PI ) ) , mean , sigma ) ;
this.distance -( sigma *FastMath.sqrt(2*Math.PI ) ) , mean , sigma ) ;
this.distance -( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
this.distance -( sigma *FastMath.sqrt(3*Math.PI ) ) , mean , sigma ) ;
this.distance -( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this.distance -( sigma *FastMath.sqrt(5*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(2*Math.PI ) ) ;
this(1-( sigma *FastMath.sqrt(0*Math.PI ) ) ;
this(1-( sigma *FastMath.sqrt(3*Math.PI ) ) ;
this(1-( sigma *FastMath.sqrt(1*Math.PI ) ) ;
this(1-( sigma *FastMath.sqrt(5*Math.PI ) ) ;
this(1-( sigma *FastMath.sqrt(2, Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(0, Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(3, Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(1, Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(5, Math.PI ) ) , mean , sigma ) ;
this.sigma +( sigma *FastMath.sqrt(2*Math.PI ) ) , mean , sigma ) ;
this.sigma +( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
this.sigma +( sigma *FastMath.sqrt(3*Math.PI ) ) , mean , sigma ) ;
this.sigma +( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this.sigma +( sigma *FastMath.sqrt(5*Math.PI ) ) , mean , sigma ) ;
this.0-( sigma *FastMath.sqrt(2*Math.PI ) ) , mean , sigma ) ;
this.0-( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
this.0-( sigma *FastMath.sqrt(3*Math.PI ) ) , mean , sigma ) ;
this.0-( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this.0-( sigma *FastMath.sqrt(5*Math.PI ) ) , mean , sigma ) ;
this.distance( sigma *FastMath.sqrt(2*Math.PI ) ) , mean , sigma ) ;
this.distance( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
this.distance( sigma *FastMath.sqrt(3*Math.PI ) ) , mean , sigma ) ;
this.distance( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this.distance( sigma *FastMath.sqrt(5*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(2*Math.PI ) ) , mean + sigma ) ;
this(1-( sigma *FastMath.sqrt(0*Math.PI ) ) , mean + sigma ) ;
this(1-( sigma *FastMath.sqrt(3*Math.PI ) ) , mean + sigma ) ;
this(1-( sigma *FastMath.sqrt(1*Math.PI ) ) , mean + sigma ) ;
this(1-( sigma *FastMath.sqrt(5*Math.PI ) ) , mean + sigma ) ;
this(1-( sigma *FastMath.sqrt(2*Math.PI ) ) , confidence , sigma ) ;
this(1-( sigma *FastMath.sqrt(0*Math.PI ) ) , confidence , sigma ) ;
this(1-( sigma *FastMath.sqrt(3*Math.PI ) ) , confidence , sigma ) ;
this(1-( sigma *FastMath.sqrt(1*Math.PI ) ) , confidence , sigma ) ;
this(1-( sigma *FastMath.sqrt(5*Math.PI ) ) , confidence , sigma ) ;
this.sigma *FastMath.sqrt(2*Math.PI ) ) , mean , sigma ) ;
this.sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
this.sigma *FastMath.sqrt(3*Math.PI ) ) , mean , sigma ) ;
this.sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this.sigma *FastMath.sqrt(5*Math.PI ) ) , mean , sigma ) ;
((1-( sigma *FastMath.sqrt(2*Math.PI ) ) , mean , sigma ) ;
((1-( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
((1-( sigma *FastMath.sqrt(3*Math.PI ) ) , mean , sigma ) ;
((1-( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
((1-( sigma *FastMath.sqrt(5*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(2*Math.PI ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(0*Math.PI ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(3*Math.PI ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(1*Math.PI ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(5*Math.PI ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(2*Math.PI ) ) , mean - sigma ) ;
this(1-( sigma *FastMath.sqrt(0*Math.PI ) ) , mean - sigma ) ;
this(1-( sigma *FastMath.sqrt(3*Math.PI ) ) , mean - sigma ) ;
