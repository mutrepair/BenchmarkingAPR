d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +1) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +12858907) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +00) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +123) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +3) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +8192) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +10) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +32) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +8) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +126) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +2) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +4) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +0021) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +200) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +16) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +120) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +007) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +20) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +7) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +03) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +6) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +64) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +18) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +9) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +15) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +5) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +50) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +0) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +1343) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +256) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +12) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +0020) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +1) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +12858907, p [ i ] +1) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +00, p [ i ] +1) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +123, p [ i ] +1) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +3, p [ i ] +1) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +8192, p [ i ] +1) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +10, p [ i ] +1) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +32, p [ i ] +1) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +8, p [ i ] +1) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +126, p [ i ] +1) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +2, p [ i ] +1) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +4, p [ i ] +1) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +0021, p [ i ] +1) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +200, p [ i ] +1) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +16, p [ i ] +1) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +120, p [ i ] +1) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +007, p [ i ] +1) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +20, p [ i ] +1) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +7, p [ i ] +1) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +03, p [ i ] +1) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +6, p [ i ] +1) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +64, p [ i ] +1) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +18, p [ i ] +1) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +9, p [ i ] +1) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +15, p [ i ] +1) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +5, p [ i ] +1) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +50, p [ i ] +1) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +0, p [ i ] +1) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1343, p [ i ] +1) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +256, p [ i ] +1) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +12, p [ i ] +1) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +0020, p [ i ] +1) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +1) , p [ i +1] + cost ) ;
d [ i ] =( Math.min( Math.min( d [ i -1] +1, p [ i ] +1) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +1) , p [ i +12858907] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +1) , p [ i +00] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +1) , p [ i +123] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +1) , p [ i +3] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +1) , p [ i +8192] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +1) , p [ i +10] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +1) , p [ i +32] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +1) , p [ i +8] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +1) , p [ i +126] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +1) , p [ i +2] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +1) , p [ i +4] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +1) , p [ i +0021] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +1) , p [ i +200] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +1) , p [ i +16] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +1) , p [ i +120] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +1) , p [ i +007] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +1) , p [ i +20] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +1) , p [ i +7] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +1) , p [ i +03] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +1) , p [ i +6] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +1) , p [ i +64] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +1) , p [ i +18] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +1) , p [ i +9] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +1) , p [ i +15] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +1) , p [ i +5] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +1) , p [ i +50] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +1) , p [ i +0] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +1) , p [ i +1343] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +1) , p [ i +256] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +1) , p [ i +12] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +1) , p [ i +0020] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +1) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +0) , p [ i +1] + cost ) ;
d [ i ] = Math.min( Math.min( d [ i -1] +1, p [ i ] +1, p [ i +1] + cost ) ;
