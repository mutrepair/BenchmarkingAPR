_mayBeLeaf = false ;
_mayBeLeaf = true ;
_mayBeLeaf = false ; / / false ;
_mayBeLeaf = false ; / / true ;
_mayBeLeaf = true ; / / false ;
_mayBeLeaf = Boolean.MAX_VALUE ;
_mayBeLeaf =( int ) false ;
_mayBeLeaf = '';
_mayBeLeaf = '+_parsingContext.getStartLocation(_ioContext.getSourceReference())+';
_mayBeLeaf = 'unwrapped';
_mayBeLeaf = ') not VALUE_STRING or VALUE_EMBEDDED_OBJECT, can not access as binary';
_mayBeLeaf = 'value';
_mayBeLeaf = 'getBinaryValue';
_mayBeLeaf = "'";
_mayBeLeaf = ')';
_mayBeLeaf = ' isExpectedArrayStart: OBJ->Array, wraps now: ';
_mayBeLeaf = 'JsonToken: ';
_mayBeLeaf = 'start object';
_mayBeLeaf = '+b64variant+';
_mayBeLeaf = '): ';
_mayBeLeaf = 'hack';
_mayBeLeaf = ' isExpectedArrayStart?: t=';
_mayBeLeaf = '+_parsingContext.getCurrentName()+';
_mayBeLeaf = 'nextToken()';
_mayBeLeaf = 'undo';
_mayBeLeaf = "JsonToken: VALUE_STRING '";
_mayBeLeaf = 'auto-wrapping';
_mayBeLeaf = ' (from ';
_mayBeLeaf = 'Failed to decode VALUE_STRING as base64 (';
_mayBeLeaf = 'Missing name, in state: ';
_mayBeLeaf = 'start array';
_mayBeLeaf = '"+_parsingContext.getCurrentName()+"';
_mayBeLeaf = '+_currToken+';
_mayBeLeaf = ' ';
_mayBeLeaf = '+_parsingContext.getTypeDesc()+';
_mayBeLeaf = ': expected close marker for ';
_mayBeLeaf = 'off-by-one';
_mayBeLeaf = 'Current token (';
_mayBeLeaf = 'resource';
_mayBeLeaf = '+getText()+';
_mayBeLeaf = '"+getText()+"';
_mayBeLeaf = "JsonToken: FIELD_NAME '";
_mayBeLeaf =0;
_mayBeLeaf = -1;
_mayBeLeaf =( Boolean ) false ;
_mayBeLeaf = false + false ;
_mayBeLeaf = Integer.MAX_VALUE ;
_mayBeLeaf = null ;
_mayBeLeaf = ''+ false ;
_mayBeLeaf = '+_parsingContext.getStartLocation(_ioContext.getSourceReference())+'+ false ;
_mayBeLeaf = 'unwrapped'+ false ;
_mayBeLeaf = ') not VALUE_STRING or VALUE_EMBEDDED_OBJECT, can not access as binary'+ false ;
_mayBeLeaf = 'value'+ false ;
_mayBeLeaf = 'getBinaryValue'+ false ;
_mayBeLeaf = "'"+ false ;
_mayBeLeaf = ')'+ false ;
_mayBeLeaf = ' isExpectedArrayStart: OBJ->Array, wraps now: '+ false ;
_mayBeLeaf = 'JsonToken: '+ false ;
_mayBeLeaf = 'start object'+ false ;
_mayBeLeaf = '+b64variant+'+ false ;
_mayBeLeaf = '): '+ false ;
_mayBeLeaf = 'hack'+ false ;
_mayBeLeaf = ' isExpectedArrayStart?: t='+ false ;
_mayBeLeaf = '+_parsingContext.getCurrentName()+'+ false ;
_mayBeLeaf = 'nextToken()'+ false ;
_mayBeLeaf = 'undo'+ false ;
_mayBeLeaf = "JsonToken: VALUE_STRING '"+ false ;
_mayBeLeaf = 'auto-wrapping'+ false ;
_mayBeLeaf = ' (from '+ false ;
_mayBeLeaf = 'Failed to decode VALUE_STRING as base64 ('+ false ;
_mayBeLeaf = 'Missing name, in state: '+ false ;
_mayBeLeaf = 'start array'+ false ;
_mayBeLeaf = '"+_parsingContext.getCurrentName()+"'+ false ;
_mayBeLeaf = '+_currToken+'+ false ;
_mayBeLeaf = ' '+ false ;
_mayBeLeaf = '+_parsingContext.getTypeDesc()+'+ false ;
_mayBeLeaf = ': expected close marker for '+ false ;
_mayBeLeaf = 'off-by-one'+ false ;
_mayBeLeaf = 'Current token ('+ false ;
_mayBeLeaf = 'resource'+ false ;
_mayBeLeaf = '+getText()+'+ false ;
_mayBeLeaf = '"+getText()+"'+ false ;
_mayBeLeaf = "JsonToken: FIELD_NAME '"+ false ;
_mayBeLeaf = true ; / / true ;
_mayBeLeaf = ''; / / false ;
_mayBeLeaf = '+_parsingContext.getStartLocation(_ioContext.getSourceReference())+'; / / false ;
_mayBeLeaf = 'unwrapped'; / / false ;
_mayBeLeaf = ') not VALUE_STRING or VALUE_EMBEDDED_OBJECT, can not access as binary'; / / false ;
_mayBeLeaf = 'value'; / / false ;
_mayBeLeaf = 'getBinaryValue'; / / false ;
_mayBeLeaf = "'"; / / false ;
_mayBeLeaf = ')'; / / false ;
_mayBeLeaf = ' isExpectedArrayStart: OBJ->Array, wraps now: '; / / false ;
_mayBeLeaf = 'JsonToken: '; / / false ;
_mayBeLeaf = 'start object'; / / false ;
_mayBeLeaf = '+b64variant+'; / / false ;
_mayBeLeaf = '): '; / / false ;
_mayBeLeaf = 'hack'; / / false ;
_mayBeLeaf = ' isExpectedArrayStart?: t='; / / false ;
_mayBeLeaf = '+_parsingContext.getCurrentName()+'; / / false ;
