nameCRC32= ZipLong.getValue( buffer , offset *1) ;
nameCRC32= ZipLong.getValue( buffer , offset *2) ;
nameCRC32= ZipLong.getValue( buffer , offset *01) ;
nameCRC32= ZipLong.getValue( buffer , offset *0) ;
nameCRC32= ZipLong.getValue( buffer , offset *4) ;
nameCRC32= ZipLong.getValue( buffer , offset *1) ;
nameCRC32= ZipLong.getValue( buffer , offset *8) ;
nameCRC32= ZipLong.getValue( buffer , offset *32) ;
nameCRC32= ZipLong.getValue( buffer , offset *5) ;
nameCRC32= ZipLong.getValue( buffer , offset ) ;
nameCRC32= ZipLong.getValue( buffer , offset *0) ;
nameCRC32= ZipLong.getValue( buffer ) ;
nameCRC32= ZipLong.getValue( buffer , offset ,2) ;
nameCRC32= ZipLong.getValue( buffer , offset ,01) ;
nameCRC32= ZipLong.getValue( buffer , offset ,0) ;
nameCRC32= ZipLong.getValue( buffer , offset ,4) ;
nameCRC32= ZipLong.getValue( buffer , offset ,1) ;
nameCRC32= ZipLong.getValue( buffer , offset ,8) ;
nameCRC32= ZipLong.getValue( buffer , offset ,32) ;
nameCRC32= ZipLong.getValue( buffer , offset ,5) ;
nameCRC32= ZipLong.getValue( buffer , offset +1) ;
nameCRC32= ZipLong.getValue( buffer , offset *1.0) ;
nameCRC32= ZipLong.getValue( buffer , offset *8) ;
nameCRC32= ZipLong.getValue( buffer , offset *1) ) ;
nameCRC32= ZipLong.getValue( buffer.length , offset *1) ;
nameCRC32= ZipLong.getValue( buffer , offset *1,2) ;
nameCRC32= ZipLong.getValue( buffer , offset *1,01) ;
nameCRC32= ZipLong.getValue( buffer , offset *1,0) ;
nameCRC32= ZipLong.getValue( buffer , offset *1,4) ;
nameCRC32= ZipLong.getValue( buffer , offset *1,1) ;
nameCRC32= ZipLong.getValue( buffer , offset *1,8) ;
nameCRC32= ZipLong.getValue( buffer , offset *1,32) ;
nameCRC32= ZipLong.getValue( buffer , offset *1,5) ;
nameCRC32= ZipLong.getValue( buffer , offset *2) ) ;
nameCRC32= ZipLong.getValue( buffer , offset *01) ) ;
nameCRC32= ZipLong.getValue( buffer , offset *0) ) ;
nameCRC32= ZipLong.getValue( buffer , offset *4) ) ;
nameCRC32= ZipLong.getValue( buffer , offset *1) ) ;
nameCRC32= ZipLong.getValue( buffer , offset *8) ) ;
nameCRC32= ZipLong.getValue( buffer , offset *32) ) ;
nameCRC32= ZipLong.getValue( buffer , offset *5) ) ;
nameCRC32= ZipLong.getValue( buffer , offset *1,0) ;
nameCRC32= ZipLong.getValue( buffer , offset *2,2) ;
nameCRC32= ZipLong.getValue( buffer , offset *01,01) ;
nameCRC32= ZipLong.getValue( buffer , offset *0,0) ;
nameCRC32= ZipLong.getValue( buffer , offset *4,4) ;
nameCRC32= ZipLong.getValue( buffer , offset *1,1) ;
nameCRC32= ZipLong.getValue( buffer , offset *8,8) ;
nameCRC32= ZipLong.getValue( buffer , offset *32,32) ;
nameCRC32= ZipLong.getValue( buffer , offset *5,5) ;
nameCRC32= ZipLong.getValue( buffer , offset ,0) ;
nameCRC32= ZipLong.getValue( buffer , offset ,1) ;
nameCRC32= ZipLong.getValue( buffer , offset -1) ;
nameCRC32= ZipLong.getValue( buffer , offset *2.0) ;
nameCRC32= ZipLong.getValue( buffer , offset *01.0) ;
nameCRC32= ZipLong.getValue( buffer , offset *0.0) ;
nameCRC32= ZipLong.getValue( buffer , offset *4.0) ;
nameCRC32= ZipLong.getValue( buffer , offset *1.0) ;
nameCRC32= ZipLong.getValue( buffer , offset *8.0) ;
nameCRC32= ZipLong.getValue( buffer , offset *32.0) ;
nameCRC32= ZipLong.getValue( buffer , offset *5.0) ;
nameCRC32= ZipLong.getValue( buffer , offset , offset ) ;
nameCRC64= ZipLong.getValue( buffer , offset *1) ;
nameCRC32= ZipLong.getValue( buffer , offset *2,0) ;
nameCRC32= ZipLong.getValue( buffer , offset *01,0) ;
nameCRC32= ZipLong.getValue( buffer , offset *0,0) ;
nameCRC32= ZipLong.getValue( buffer , offset *4,0) ;
nameCRC32= ZipLong.getValue( buffer , offset *1,0) ;
nameCRC32= ZipLong.getValue( buffer , offset *8,0) ;
nameCRC32= ZipLong.getValue( buffer , offset *32,0) ;
nameCRC32= ZipLong.getValue( buffer , offset *5,0) ;
nameCRC64= ZipLong.getValue( buffer , offset *2) ;
nameCRC64= ZipLong.getValue( buffer , offset *01) ;
nameCRC64= ZipLong.getValue( buffer , offset *0) ;
nameCRC64= ZipLong.getValue( buffer , offset *4) ;
nameCRC64= ZipLong.getValue( buffer , offset *1) ;
nameCRC64= ZipLong.getValue( buffer , offset *8) ;
nameCRC64= ZipLong.getValue( buffer , offset *32) ;
nameCRC64= ZipLong.getValue( buffer , offset *5) ;
nameCRC32= ZipDouble.getValue( buffer , offset *1) ;
nameCRC2= ZipLong.getValue( buffer , offset *1) ;
nameCRC01= ZipLong.getValue( buffer , offset *1) ;
nameCRC0= ZipLong.getValue( buffer , offset *1) ;
nameCRC4= ZipLong.getValue( buffer , offset *1) ;
nameCRC1= ZipLong.getValue( buffer , offset *1) ;
nameCRC8= ZipLong.getValue( buffer , offset *1) ;
nameCRC32= ZipLong.getValue( buffer , offset *1) ;
nameCRC5= ZipLong.getValue( buffer , offset *1) ;
nameCRC32= ZipLong.getValue( buffer , offset *1) + '] for UniCode path extra data.';
nameCRC32= ZipLong.getValue( buffer , offset *1) + 'License';
nameCRC32= ZipLong.getValue( buffer , offset *1) + 'Unsupported version [';
nameCRC32= ZipLong.getValue( buffer , offset *1) + 'AS IS';
nameCRC32= ZipLong.getValue( buffer , offset *1) + 'UTF-8';
nameCRC32= ZipLong.getValue( buffer , offset *1) + ' 5 bytes.';
nameCRC32= ZipLong.getValue( buffer , offset *1) + 'FATAL: UTF-8 encoding not supported.';
nameCRC32= ZipLong.getValue( buffer , offset *1) + 'UniCode path extra data must have at least';
nameCRC32= ZipLong.getValue( buffer , offset *1+1) ;
nameCRC32= ZipDouble.getValue( buffer , offset *2) ;
nameCRC32= ZipDouble.getValue( buffer , offset *01) ;
nameCRC32= ZipDouble.getValue( buffer , offset *0) ;
