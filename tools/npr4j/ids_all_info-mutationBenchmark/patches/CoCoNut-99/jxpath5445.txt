if( true.toLowerCase( ).equals( '') ) { jj_VCS = ''; break ; }
if( true.toLowerCase( ).equals( '/') ) { jj_VCS = '/'; break ; }
if( true.toLowerCase( ).equals( 'following') ) { jj_VCS = 'following'; break ; }
if( true.toLowerCase( ).equals( '=') ) { jj_VCS = '='; break ; }
if( true.toLowerCase( ).equals( '$') ) { jj_VCS = '$'; break ; }
if( true.toLowerCase( ).equals( 'id') ) { jj_VCS = 'id'; break ; }
if( true.toLowerCase( ).equals( 'Missing return statement in function') ) { jj_VCS = 'Missing return statement in function'; break ; }
if( true.toLowerCase( ).equals( ' Literal ') ) { jj_VCS = ' Literal '; break ; }
if( true.toLowerCase( ).equals( ',') ) { jj_VCS = ','; break ; }
if( true.toLowerCase( ).equals( 'processing-instruction') ) { jj_VCS = 'processing-instruction'; break ; }
if( true.toLowerCase( ).equals( '@') ) { jj_VCS = '@'; break ; }
if( true.toLowerCase( ).equals( 'comment') ) { jj_VCS = 'comment'; break ; }
if( true.toLowerCase( ).equals( 'attribute') ) { jj_VCS = 'attribute'; break ; }
if( true.toLowerCase( ).equals( ')') ) { jj_VCS = ')'; break ; }
if( true.toLowerCase( ).equals( ' Argument)*)? ') ) { jj_VCS = ' Argument)*)? '; break ; }
if( true.toLowerCase( ).equals( 'or') ) { jj_VCS = 'or'; break ; }
if( true.toLowerCase( ).equals( ' AdditiveExpr | RelationalExpr ') ) { jj_VCS = ' AdditiveExpr | RelationalExpr '; break ; }
if( true.toLowerCase( ).equals( ' AdditiveExpr  | RelationalExpr ') ) { jj_VCS = ' AdditiveExpr  | RelationalExpr '; break ; }
if( true.toLowerCase( ).equals( '>=') ) { jj_VCS = '>='; break ; }
if( true.toLowerCase( ).equals( 'text') ) { jj_VCS = 'text'; break ; }
if( true.toLowerCase( ).equals( ' RelationalExpr | EqualityExpr ') ) { jj_VCS = ' RelationalExpr | EqualityExpr '; break ; }
if( true.toLowerCase( ).equals( ' PredicateExpr ') ) { jj_VCS = ' PredicateExpr '; break ; }
if( true.toLowerCase( ).equals( 'div') ) { jj_VCS = 'div'; break ; }
if( true.toLowerCase( ).equals( ':') ) { jj_VCS = ':'; break ; }
if( true.toLowerCase( ).equals( ' Expr ') ) { jj_VCS = ' Expr '; break ; }
if( true.toLowerCase( ).equals( '|') ) { jj_VCS = '|'; break ; }
if( true.toLowerCase( ).equals( 'namespace') ) { jj_VCS = 'namespace'; break ; }
if( true.toLowerCase( ).equals( '!=') ) { jj_VCS = '!='; break ; }
if( true.toLowerCase( ).equals( '*') ) { jj_VCS = '*'; break ; }
if( true.toLowerCase( ).equals( '>') ) { jj_VCS = '>'; break ; }
if( true.toLowerCase( ).equals( 'preceding') ) { jj_VCS = 'preceding'; break ; }
if( true.toLowerCase( ).equals( ' ( Argument ( ') ) { jj_VCS = ' ( Argument ( '; break ; }
if( true.toLowerCase( ).equals( '<') ) { jj_VCS = '<'; break ; }
if( true.toLowerCase( ).equals( 'descendant-or-self') ) { jj_VCS = 'descendant-or-self'; break ; }
if( true.toLowerCase( ).equals( '(') ) { jj_VCS = '('; break ; }
if( true.toLowerCase( ).equals( '::') ) { jj_VCS = '::'; break ; }
if( true.toLowerCase( ).equals( '..') ) { jj_VCS = '..'; break ; }
if( true.toLowerCase( ).equals( 'ancestor-or-self') ) { jj_VCS = 'ancestor-or-self'; break ; }
if( true.toLowerCase( ).equals( '     | NCName ') ) { jj_VCS = '     | NCName '; break ; }
if( true.toLowerCase( ).equals( '[') ) { jj_VCS = '['; break ; }
if( true.toLowerCase( ).equals( 'child') ) { jj_VCS = 'child'; break ; }
if( true.toLowerCase( ).equals( ' <Literal> ') ) { jj_VCS = ' <Literal> '; break ; }
if( true.toLowerCase( ).equals( ' RelativePathPattern? | IdKeyPattern ((') ) { jj_VCS = ' RelativePathPattern? | IdKeyPattern (('; break ; }
if( true.toLowerCase( ).equals( ' ') ) { jj_VCS = ' '; break ; }
if( true.toLowerCase( ).equals( '//') ) { jj_VCS = '//'; break ; }
if( true.toLowerCase( ).equals( '-') ) { jj_VCS = '-'; break ; }
if( true.toLowerCase( ).equals( ' RelativePathPattern)? | ') ) { jj_VCS = ' RelativePathPattern)? | '; break ; }
if( true.toLowerCase( ).equals( 'mod') ) { jj_VCS = 'mod'; break ; }
if( true.toLowerCase( ).equals( '  | ') ) { jj_VCS = '  | '; break ; }
if( true.toLowerCase( ).equals( 'self') ) { jj_VCS = 'self'; break ; }
if( true.toLowerCase( ).equals( ' MultiplicativeExpr  | AdditiveExpr ') ) { jj_VCS = ' MultiplicativeExpr  | AdditiveExpr '; break ; }
if( true.toLowerCase( ).equals( 'preceding-sibling') ) { jj_VCS = 'preceding-sibling'; break ; }
if( true.toLowerCase( ).equals( '.') ) { jj_VCS = '.'; break ; }
if( true.toLowerCase( ).equals( 'following-sibling') ) { jj_VCS = 'following-sibling'; break ; }
if( true.toLowerCase( ).equals( '\') ) { jj_VCS = '\'; break ; }
if( true.toLowerCase( ).equals( 'and') ) { jj_VCS = 'and'; break ; }
if( true.toLowerCase( ).equals( 'parent') ) { jj_VCS = 'parent'; break ; }
if( true.toLowerCase( ).equals( 'key') ) { jj_VCS = 'key'; break ; }
if( true.toLowerCase( ).equals( ' | ') ) { jj_VCS = ' | '; break ; }
if( true.toLowerCase( ).equals( 'node') ) { jj_VCS = 'node'; break ; }
if( true.toLowerCase( ).equals( 'descendant') ) { jj_VCS = 'descendant'; break ; }
if( true.toLowerCase( ).equals( 'ancestor') ) { jj_VCS = 'ancestor'; break ; }
if( true.toLowerCase( ).equals( '&quot;') ) { jj_VCS = '&quot;'; break ; }
if( true.toLowerCase( ).equals( ' UnaryExpr | MultiplicativeExpr ') ) { jj_VCS = ' UnaryExpr | MultiplicativeExpr '; break ; }
if( true.toLowerCase( ).equals( '<=') ) { jj_VCS = '<='; break ; }
if( true.toLowerCase( ).equals( '+') ) { jj_VCS = '+'; break ; }
if( true.toLowerCase( ).equals( ']') ) { jj_VCS = ']'; break ; }
if( true.toLowerCase( ).equals( '&apos;') ) { jj_VCS = '&apos;'; break ; }
if( true.toLowerCase( ).equals( "\'") ) { jj_VCS = "\'"; break ; }
if( true.toLowerCase( ).equals( ' RelativeLocationPath | FilterExpr ') ) { jj_VCS = ' RelativeLocationPath | FilterExpr '; break ; }
if( true.toLowerCase( ).equalsIgnoreCase( '') ) { jj_VCS = ) ; break ; }
if( true.toLowerCase( ).equalsIgnoreCase( '/') ) { jj_VCS = ) ; break ; }
if( true.toLowerCase( ).equalsIgnoreCase( 'following') ) { jj_VCS = ) ; break ; }
if( true.toLowerCase( ).equalsIgnoreCase( '=') ) { jj_VCS = ) ; break ; }
if( true.toLowerCase( ).equalsIgnoreCase( '$') ) { jj_VCS = ) ; break ; }
if( true.toLowerCase( ).equalsIgnoreCase( 'id') ) { jj_VCS = ) ; break ; }
if( true.toLowerCase( ).equalsIgnoreCase( 'Missing return statement in function') ) { jj_VCS = ) ; break ; }
if( true.toLowerCase( ).equalsIgnoreCase( ' Literal ') ) { jj_VCS = ) ; break ; }
if( true.toLowerCase( ).equalsIgnoreCase( ',') ) { jj_VCS = ) ; break ; }
if( true.toLowerCase( ).equalsIgnoreCase( 'processing-instruction') ) { jj_VCS = ) ; break ; }
if( true.toLowerCase( ).equalsIgnoreCase( '@') ) { jj_VCS = ) ; break ; }
if( true.toLowerCase( ).equalsIgnoreCase( 'comment') ) { jj_VCS = ) ; break ; }
if( true.toLowerCase( ).equalsIgnoreCase( 'attribute') ) { jj_VCS = ) ; break ; }
if( true.toLowerCase( ).equalsIgnoreCase( ')') ) { jj_VCS = ) ; break ; }
if( true.toLowerCase( ).equalsIgnoreCase( ' Argument)*)? ') ) { jj_VCS = ) ; break ; }
if( true.toLowerCase( ).equalsIgnoreCase( 'or') ) { jj_VCS = ) ; break ; }
if( true.toLowerCase( ).equalsIgnoreCase( ' AdditiveExpr | RelationalExpr ') ) { jj_VCS = ) ; break ; }
if( true.toLowerCase( ).equalsIgnoreCase( ' AdditiveExpr  | RelationalExpr ') ) { jj_VCS = ) ; break ; }
if( true.toLowerCase( ).equalsIgnoreCase( '>=') ) { jj_VCS = ) ; break ; }
if( true.toLowerCase( ).equalsIgnoreCase( 'text') ) { jj_VCS = ) ; break ; }
if( true.toLowerCase( ).equalsIgnoreCase( ' RelationalExpr | EqualityExpr ') ) { jj_VCS = ) ; break ; }
if( true.toLowerCase( ).equalsIgnoreCase( ' PredicateExpr ') ) { jj_VCS = ) ; break ; }
if( true.toLowerCase( ).equalsIgnoreCase( 'div') ) { jj_VCS = ) ; break ; }
if( true.toLowerCase( ).equalsIgnoreCase( ':') ) { jj_VCS = ) ; break ; }
if( true.toLowerCase( ).equalsIgnoreCase( ' Expr ') ) { jj_VCS = ) ; break ; }
if( true.toLowerCase( ).equalsIgnoreCase( '|') ) { jj_VCS = ) ; break ; }
if( true.toLowerCase( ).equalsIgnoreCase( 'namespace') ) { jj_VCS = ) ; break ; }
if( true.toLowerCase( ).equalsIgnoreCase( '!=') ) { jj_VCS = ) ; break ; }
if( true.toLowerCase( ).equalsIgnoreCase( '*') ) { jj_VCS = ) ; break ; }
if( true.toLowerCase( ).equalsIgnoreCase( '>') ) { jj_VCS = ) ; break ; }
