return System.out.println( '') ;
return System.out.println( '/') ;
return System.out.println( ' in a comment') ;
return System.out.println( '\f') ;
return System.out.println( 'ALLOW_COMMENTS') ;
return System.out.println( '+b64variant+') ;
return System.out.println( '+b64variant.getPaddingChar()+') ;
return System.out.println( '): ') ;
return System.out.println( ' in character escape sequence') ;
return System.out.println( '*') ;
return System.out.println( 'Exponent indicator not followed by a digit') ;
return System.out.println( 'Failed to decode VALUE_STRING as base64 (') ;
return System.out.println( 'null') ;
return System.out.println( '\r') ;
return System.out.println( '\t') ;
return System.out.println( '"+b64variant.getPaddingChar()+"') ;
return System.out.println( 'Reader returned 0 characters when trying to read ') ;
return System.out.println( 'n') ;
return System.out.println( 'Unexpected end-of-input within/between ') ;
return System.out.println( "expected padding character '") ;
return System.out.println( "'") ;
return System.out.println( ' || c == ') ;
return System.out.println( 'NaN') ;
return System.out.println( 'name') ;
return System.out.println( 'Infinity') ;
return System.out.println( '+Infinity') ;
return System.out.println( ' || ch > ') ;
return System.out.println( "Unrecognized token '") ;
return System.out.println( 'expected a digit for number exponent') ;
return System.out.println( 'ReaderBasedNumericParser') ;
return System.out.println( 'I') ;
return System.out.println( '-') ;
return System.out.println( '"+((char) i), ') ;
return System.out.println( '+_parsingContext.getTypeDesc()+') ;
return System.out.println( 'N') ;
return System.out.println( '.') ;
return System.out.println( 'E') ;
return System.out.println( '-Infinity') ;
return System.out.println( ": was expecting closing '") ;
return System.out.println( 'expected digit (0-9) to follow minus sign, for valid numeric value') ;
return System.out.println( '_nextAfterName') ;
return System.out.println( 'Leading zeroes not allowed') ;
return System.out.println( ': was expecting closing quote for a string value') ;
return System.out.println( "Non-standard token '") ;
return System.out.println( '+') ;
return System.out.println( 'Missing integer part (next char ') ;
return System.out.println( ' or ') ;
return System.out.println( 'll eagerly parse contents; this so that there') ;
return System.out.println( ') not VALUE_STRING or VALUE_EMBEDDED_OBJECT, can not access as binary') ;
return System.out.println( '\n') ;
return System.out.println( ')') ;
return System.out.println( '"+((char) endChar)+"') ;
return System.out.println( '+sb.toString()+') ;
return System.out.println( 'string value') ;
return System.out.println( '"+sb.toString()+"') ;
return System.out.println( "Non-standard token 'Infinity': enable JsonParser.Feature.ALLOW_NON_NUMERIC_NUMBERS to allow") ;
return System.out.println( "was expecting either '*' or '/' for a comment") ;
return System.out.println( "'null', 'true', 'false' or NaN") ;
return System.out.println( 'own') ;
return System.out.println( "': enable JsonParser.Feature.ALLOW_NON_NUMERIC_NUMBERS to allow") ;
return System.out.println( 'expected a value') ;
return System.out.println( 'was expecting double-quote to start field name') ;
return System.out.println( ' entries') ;
return System.out.println( "' for name") ;
return System.out.println( '\') ;
return System.out.println( '+match+') ;
return System.out.println( 'resource') ;
return System.out.println( "': was expecting ") ;
return System.out.println( 'expected a hex-digit for character escape sequence') ;
return System.out.println( 'false') ;
return System.out.println( '+INF') ;
return System.out.println( ' && c <= ') ;
return System.out.println( '+((char) endChar)+') ;
return System.out.println( 'missing') ;
return System.out.println( 'was expecting comma to separate ') ;
return System.out.println( "Non-standard token 'NaN': enable JsonParser.Feature.ALLOW_NON_NUMERIC_NUMBERS to allow") ;
return System.out.println( 'expect-value') ;
return System.out.println( 'true') ;
return System.out.println( 'e') ;
return System.out.println( 'was expecting a colon to separate field name and value') ;
return System.out.println( 'Decimal point not followed by a digit') ;
return System.out.println( '+_getCharDesc(c)+') ;
return System.out.println( 'real') ;
return System.out.println( ', ') ;
return System.out.println( '-INF') ;
return System.out.println( "('true', 'false' or 'null')") ;
return System.out.println( '+_currToken+') ;
return System.out.println( '}') ;
return System.out.println( ' :') ;
return System.out.println( "maybe a (non-standard) comment? (not recognized as one since Feature 'ALLOW_COMMENTS' not enabled for parser)") ;
return System.out.println( 'was expecting either valid name character (for unquoted name) or double-quote (for quoted) to start field name') ;
return System.out.println( '9') ;
return System.out.println( '\b') ;
return System.out.println( '"') ;
return System.out.println( 'Current token (') ;
return System.out.println( '0') ;
return System.out.println( '"+match+"') ;
return System.out.println( 'No digit following minus sign') ;
return System.out.println( "expected a valid value (number, String, array, object, 'true', 'false' or 'null')") ;
return System.out.println( ', "maybe a (non-standard) comment? (not recognized as one since Feature ') ;
