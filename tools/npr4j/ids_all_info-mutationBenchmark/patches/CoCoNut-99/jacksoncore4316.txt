int second = length / first ;
int second = length / first.length / first ;
int second = length / first.length ;
int second = length / first -1;
int second = length / first + length / first ;
int second = length / first + length ;
int second = length / first.length -1;
int second = length / first +1;
int second = length / first.length - first ;
int second = length -1;
int second = length -1/ first ;
int second = length / first - length ;
int second = length - length / first ;
int second = length / first.size( ) ;
int second =( length -1) / first ;
int second = length -1+ length / first ;
int second = length / first - length / first ;
int second = length / first.length *first ;
int second = length / first -2;
int second = length / first -0;
int second = length / first -4;
int second = length / first -7;
int second = length / first -4627;
int second = length / first -18;
int second = length / first -00;
int second = length / first -12;
int second = length / first -6;
int second = length / first -3;
int second = length / first -1;
int second = length / first -10000;
int second = length / first -800;
int second = length / first -80;
int second = length / first -10;
int second = length / first -8;
int second = length / first -5;
int second = length / first && length / first ;
int second = length / first +2;
int second = length / first +0;
int second = length / first +4;
int second = length / first +7;
int second = length / first +4627;
int second = length / first +18;
int second = length / first +00;
int second = length / first +12;
int second = length / first +6;
int second = length / first +3;
int second = length / first +1;
int second = length / first +10000;
int second = length / first +800;
int second = length / first +80;
int second = length / first +10;
int second = length / first +8;
int second = length / first +5;
int second = length / firstCount / first ;
int second = length -1+ length ;
int second = length / first.length + first ;
int second = length + length / first ;
int second = length / first / first ;
int second = length / first.length - length ;
int second = length *first ;
int second = length / first [0] ;
int second = length - length -1;
int second = length / first.length -2;
int second = length / first.length -0;
int second = length / first.length -4;
int second = length / first.length -7;
int second = length / first.length -4627;
int second = length / first.length -18;
int second = length / first.length -00;
int second = length / first.length -12;
int second = length / first.length -6;
int second = length / first.length -3;
int second = length / first.length -1;
int second = length / first.length -10000;
int second = length / first.length -800;
int second = length / first.length -80;
int second = length / first.length -10;
int second = length / first.length -8;
int second = length / first.length -5;
int second = length / first -0;
int second = length - first ;
int second = length / first +0;
int second = length / first -1/ first ;
int second = length / first.length + length ;
int second = length / first [ length ] ;
int second = length -1; / first ;
int second = length *first.length ;
int second = length / first + index ;
long second = length / first ;
int second = length -1*first ;
int second = length / first ; / first ;
int second = length / firstCount ;
int second = length -1- length ;
int second = length / first - index ;
int second = length / first + '+Integer.toHexString(secondPart)+';
int second = length / first + 'Broken surrogate pair: first char 0x';
int second = length / first + '0';
int second = length / first + '; illegal combination';
int second = length / first + 'u';
int second = length / first + '+Integer.toHexString(firstPart)+';
