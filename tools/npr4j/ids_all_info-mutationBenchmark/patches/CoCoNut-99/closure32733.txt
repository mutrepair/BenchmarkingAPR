messageHasDesc = true ;
messageHasDesc = false ;
messageHasDesc = new ArrayList < >( ) ;
messageHasDesc.setAll( false ) ;
messageHasDesc = new messageHasDesc( ) ;
messageHasDesc =( messageHasDesc ) ;
messageHasDesc = System.getProperty( '} or {@code ') ;
messageHasDesc = System.getProperty( ' + ') ;
messageHasDesc = System.getProperty( 'License') ;
messageHasDesc = System.getProperty( 'MSG_UNNAMED_\\d+') ;
messageHasDesc = System.getProperty( 'goog') ;
messageHasDesc = System.getProperty( 'someUserName') ;
messageHasDesc = System.getProperty( 'Message') ;
messageHasDesc = System.getProperty( ' ') ;
messageHasDesc = System.getProperty( '() function could be used only with MSG_* property or variable') ;
messageHasDesc = System.getProperty( 'JSC_MSG_HAS_NO_DESCRIPTION') ;
messageHasDesc = System.getProperty( 'Unrecognized message placeholder referenced: ') ;
messageHasDesc = System.getProperty( 'JSC_MSG_ORPHANED_NODE') ;
messageHasDesc = System.getProperty( 'JSC_MSG_HAS_NO_VALUE') ;
messageHasDesc = System.getProperty( 'Message value of {0} is just an empty string. ') ;
messageHasDesc = System.getProperty( 'Please use ') ;
messageHasDesc = System.getProperty( 'JSC_MSG_HAS_NO_TEXT') ;
messageHasDesc = System.getProperty( 'Expected node type ') ;
messageHasDesc = System.getProperty( 'JSC_MSG_KEY_DUPLICATED') ;
messageHasDesc = System.getProperty( 'Message {0} has no description. Add @desc JsDoc tag.') ;
messageHasDesc = System.getProperty( 'name') ;
messageHasDesc = System.getProperty( 's') ;
messageHasDesc = System.getProperty( 'Cannot parse value of message ') ;
messageHasDesc = System.getProperty( 'standard') ;
messageHasDesc = System.getProperty( '\0') ;
messageHasDesc = System.getProperty( 'duplicate message variable name found for {0}, ') ;
messageHasDesc = System.getProperty( 'Message parse tree malformed. {0}') ;
messageHasDesc = System.getProperty( 'STRING or ADD node expected; found: ') ;
messageHasDesc = System.getProperty( 'JSC_MSG_FALLBACK_ARG_ERROR') ;
messageHasDesc = System.getProperty( 'A4_LETTER') ;
messageHasDesc = System.getProperty( 'JSC_MSG_TREE_MALFORMED') ;
messageHasDesc = System.getProperty( ' + type + ') ;
messageHasDesc = System.getProperty( 'Message string literal expected') ;
messageHasDesc = System.getProperty( 'STRING, NAME, or ADD node expected; found: ') ;
messageHasDesc = System.getProperty( 'getMsg') ;
messageHasDesc = System.getProperty( 'Some untrackable message') ;
messageHasDesc = System.getProperty( 'getProductName') ;
messageHasDesc = System.getProperty( 'str') ;
messageHasDesc = System.getProperty( 'Placeholder incorrectly formatted in: ') ;
messageHasDesc = System.getProperty( '_') ;
messageHasDesc = System.getProperty( 'START_SPAN_1_23') ;
messageHasDesc = System.getProperty( 'message node {0} has no value') ;
messageHasDesc = System.getProperty( 'goog.getMsg') ;
messageHasDesc = System.getProperty( 'product') ;
messageHasDesc = System.getProperty( 'NAME, LP, or BLOCK node expected; found: ') ;
messageHasDesc = System.getProperty( 'MSG_') ;
messageHasDesc = System.getProperty( '@hidden') ;
messageHasDesc = System.getProperty( 'OBJLIT node expected') ;
messageHasDesc = System.getProperty( 'Placeholder name not in lowerCamelCase: ') ;
messageHasDesc = System.getProperty( 'JSC_MSG_NOT_INITIALIZED_USING_NEW_SYNTAX') ;
messageHasDesc = System.getProperty( 'Hi {$userName}! Welcome to {$product}.') ;
messageHasDesc = System.getProperty( 'Message initialized using unrecognized function. ') ;
messageHasDesc = System.getProperty( 'AS IS') ;
messageHasDesc = System.getProperty( 'message not initialized using ') ;
messageHasDesc = System.getProperty( 'Could not find message entry for fallback argument {0}') ;
messageHasDesc = System.getProperty( '; found: ') ;
messageHasDesc = System.getProperty( 'r') ;
messageHasDesc = System.getProperty( 'http://code.google.com/p/closure-templates/') ;
messageHasDesc = System.getProperty( '[a-z][a-zA-Z\\d]*[_\\d]*') ;
messageHasDesc = System.getProperty( 'JSC_MSG_BAD_FALLBACK_SYNTAX') ;
messageHasDesc = System.getProperty( 'Bad syntax. ') ;
messageHasDesc = System.getProperty( 'startSpan_1_23') ;
messageHasDesc = System.getProperty( 'Expected syntax: goog.getMsgWithFallback(MSG_1, MSG_2)') ;
messageHasDesc = System.getProperty( '_HELP') ;
messageHasDesc = System.getProperty( 'NAME') ;
messageHasDesc = System.getProperty( '() instead.') ;
messageHasDesc = System.getProperty( 'initial definition {1}:{2}') ;
messageHasDesc = System.getProperty( 'a4Letter') ;
messageHasDesc = System.getProperty( '; found: null') ;
messageHasDesc = System.getProperty( 'Unused message placeholder: ') ;
messageHasDesc = System.getProperty( 'Message must be initialized using ') ;
messageHasDesc = System.getProperty( 'RETURN node expected; found: ') ;
messageHasDesc = System.getProperty( '}') ;
messageHasDesc = System.getProperty( 'STRING_KEY node expected as OBJLIT key') ;
messageHasDesc = System.getProperty( ' function.') ;
messageHasDesc = System.getProperty( '{$') ;
messageHasDesc = System.getProperty( ' + MSG_FUNCTION_NAME + ') ;
messageHasDesc = System.getProperty( 'Empty messages are forbidden.') ;
messageHasDesc = System.getProperty( ' -> ') ;
messageHasDesc = System.getProperty( 'goog.getMsgWithFallback') ;
messageHasDesc = System.getProperty( 'userName') ;
messageHasDesc = System.getProperty( 'a.b.MSG_X') ;
messageHasDesc = System.getProperty( 't') ;
messageHasDesc = System.getProperty( 'Duplicate placeholder name: ') ;
messageHasDesc.set( false ) ;
messageHasDesc.setId( false ) ;
messageHasDesc.replace( '} or {@code ', '} or {@code ') ;
messageHasDesc.replace( ' + ', ' + ') ;
messageHasDesc.replace( 'License', 'License') ;
messageHasDesc.replace( 'MSG_UNNAMED_\\d+', 'MSG_UNNAMED_\\d+') ;
messageHasDesc.replace( 'goog', 'goog') ;
messageHasDesc.replace( 'someUserName', 'someUserName') ;
messageHasDesc.replace( 'Message', 'Message') ;
messageHasDesc.replace( ' ', ' ') ;
messageHasDesc.replace( '() function could be used only with MSG_* property or variable', '() function could be used only with MSG_* property or variable') ;
