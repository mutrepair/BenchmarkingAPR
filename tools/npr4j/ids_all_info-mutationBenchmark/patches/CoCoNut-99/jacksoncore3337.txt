if((_numTypesValid & null ) ==1) {
if((_numTypesValid & '') ==1) {
if((_numTypesValid & '+Long.MIN_VALUE+') ==1) {
if((_numTypesValid & 'getBinaryValue') ==1) {
if((_numTypesValid & '+Integer.MIN_VALUE+') ==1) {
if((_numTypesValid & ') as character #') ==1) {
if((_numTypesValid & "Unexpected padding character ('") ==1) {
if((_numTypesValid & '+b64variant.getPaddingChar()+') ==1) {
if((_numTypesValid & '2') ==1) {
if((_numTypesValid & "' (code 0x") ==1) {
if((_numTypesValid & "': expected '") ==1) {
if((_numTypesValid & 'JsonNumericParserBase') ==1) {
if((_numTypesValid & '+numStr+') ==1) {
if((_numTypesValid & "Unexpected close marker '") ==1) {
if((_numTypesValid & ') out of range of int (') ==1) {
if((_numTypesValid & '+startDesc+') ==1) {
if((_numTypesValid & '5') ==1) {
if((_numTypesValid & "Malformed numeric value '") ==1) {
if((_numTypesValid & '"+((char)ch)+"') ==1) {
if((_numTypesValid & '"+b64variant.getPaddingChar()+"') ==1) {
if((_numTypesValid & 'Invalid numeric value: ') ==1) {
if((_numTypesValid & ') in base64 content') ==1) {
if((_numTypesValid & '+Integer.toHexString(ch)+') ==1) {
if((_numTypesValid & "'") ==1) {
if((_numTypesValid & ') out of range of int') ==1) {
if((_numTypesValid & '+expCh+') ==1) {
if((_numTypesValid & 's verify it') ==1) {
if((_numTypesValid & ' (from ') ==1) {
if((_numTypesValid & ' - ') ==1) {
if((_numTypesValid & '\0') ==1) {
if((_numTypesValid & '7') ==1) {
if((_numTypesValid & '+_textBuffer.contentsAsString()+') ==1) {
if((_numTypesValid & '-') ==1) {
if((_numTypesValid & '6') ==1) {
if((_numTypesValid & '+_parsingContext.getTypeDesc()+') ==1) {
if((_numTypesValid & ': expected ') ==1) {
if((_numTypesValid & '"+((char) actCh)+"') ==1) {
if((_numTypesValid & '.') ==1) {
if((_numTypesValid & 'E') ==1) {
if((_numTypesValid & ' starting at ') ==1) {
if((_numTypesValid & '+(bindex+1)+') ==1) {
if((_numTypesValid & '+Integer.MAX_VALUE+') ==1) {
if((_numTypesValid & ') not numeric, can not use numeric value accessors') ==1) {
if((_numTypesValid & '+') ==1) {
if((_numTypesValid & ' of 4-char base64 unit: padding only legal as 3rd or 4th character') ==1) {
if((_numTypesValid & '3') ==1) {
if((_numTypesValid & ')') ==1) {
if((_numTypesValid & '8') ==1) {
if((_numTypesValid & "Illegal character '") ==1) {
if((_numTypesValid & 'Illegal white space character (code 0x') ==1) {
if((_numTypesValid & '"+_textBuffer.contentsAsString()+"') ==1) {
if((_numTypesValid & "') as character #") ==1) {
if((_numTypesValid & '+((char) actCh)+') ==1) {
if((_numTypesValid & '+_getCharDesc(ch)+') ==1) {
if((_numTypesValid & '\\') ==1) {
if((_numTypesValid & '+_parsingContext.getStartLocation(_ioContext.getSourceReference())+') ==1) {
if((_numTypesValid & '"+expCh+"') ==1) {
if((_numTypesValid & 'Illegal character (code 0x') ==1) {
if((_numTypesValid & ': ') ==1) {
if((_numTypesValid & '"+numStr+"') ==1) {
if((_numTypesValid & ') out of range of long (') ==1) {
if((_numTypesValid & '4') ==1) {
if((_numTypesValid & 'e') ==1) {
if((_numTypesValid & 'Numeric value (') ==1) {
if((_numTypesValid & 'not available') ==1) {
if((_numTypesValid & "' (for ") ==1) {
if((_numTypesValid & '+Long.MAX_VALUE+') ==1) {
if((_numTypesValid & ' of 4-char base64 unit: can only used between units') ==1) {
if((_numTypesValid & '+_currToken+') ==1) {
if((_numTypesValid & '+((char)ch)+') ==1) {
if((_numTypesValid & ') in numeric value') ==1) {
if((_numTypesValid & ': expected close marker for ') ==1) {
if((_numTypesValid & 'off-by-one') ==1) {
if((_numTypesValid & 'Unexpected character (') ==1) {
if((_numTypesValid & '9') ==1) {
if((_numTypesValid & '0') ==1) {
if((_numTypesValid & 'Current token (') ==1) {
if((_numTypesValid & ') out of range of Java float') ==1) {
if((_numTypesValid & '1') ==1) {
if((_numTypesValid & '+getText()+') ==1) {
if((_numTypesValid & null ) ==0) {
if((_numTypesValid &0) ==1) {
if((_numTypesValid & '') ==0) {
if((_numTypesValid & '+Long.MIN_VALUE+') ==0) {
if((_numTypesValid & 'getBinaryValue') ==0) {
if((_numTypesValid & '+Integer.MIN_VALUE+') ==0) {
if((_numTypesValid & ') as character #') ==0) {
if((_numTypesValid & "Unexpected padding character ('") ==0) {
if((_numTypesValid & '+b64variant.getPaddingChar()+') ==0) {
if((_numTypesValid & '2') ==0) {
if((_numTypesValid & "' (code 0x") ==0) {
if((_numTypesValid & "': expected '") ==0) {
if((_numTypesValid & 'JsonNumericParserBase') ==0) {
if((_numTypesValid & '+numStr+') ==0) {
if((_numTypesValid & "Unexpected close marker '") ==0) {
if((_numTypesValid & ') out of range of int (') ==0) {
if((_numTypesValid & '+startDesc+') ==0) {
if((_numTypesValid & '5') ==0) {
if((_numTypesValid & "Malformed numeric value '") ==0) {
if((_numTypesValid & '"+((char)ch)+"') ==0) {
