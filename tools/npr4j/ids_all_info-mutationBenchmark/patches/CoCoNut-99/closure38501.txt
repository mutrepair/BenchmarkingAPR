if( null == pattern ||( null != flags.getNext( ) ) ) {
if( null != pattern ||( null != flags.getNext( ) ) ) {
if( null == pattern &&( null != flags.getNext( ) ) ) {
if( null == pattern ||(( null != flags.getNext( ) ) ) {
if(( null == pattern ||( null != flags.getNext( ) ) ) {
if( null == pattern ||( null == flags.getNext( ) ) ) {
if( null != pattern &&( null != flags.getNext( ) ) ) {
if( null == pattern ||( null.equals( flags.getNext( ) ) ) {
if( null == pattern &&(( null != flags.getNext( ) ) ) {
if( null == pattern ||( null.equals( flags.getNext( ) ) ) ) {
if( null != pattern ||(( null != flags.getNext( ) ) ) {
if( null != pattern ||( null == flags.getNext( ) ) ) {
if( null != flags &&( null != flags.getNext( ) ) ) {
if( null == pattern ||( null != flags.getNext( ).isEmpty( ) ) ) {
if( null == pattern &&( null == flags.getNext( ) ) ) {
if( null == pattern ||( null != flags.getNext( ) -1) ) {
if( null == pattern ||(( null == flags.getNext( ) ) ) {
if( null == pattern ||(( null != flags.getNext( ) ) ) ) {
if( null != pattern &&(( null != flags.getNext( ) ) ) {
if( null != pattern ||( null.equals( flags.getNext( ) ) ) {
if(( null != flags &&( null != flags.getNext( ) ) ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( '') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( '/') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( 'Object()') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( ')" --> "[') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( 'g') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( 'License') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( "['a']") ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( 'foobar') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( "if (a) {} throw 'ow';") ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( ' ') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( ']') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( ".split('.')") ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( '\\/') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( '[/]') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( '\u2029') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( '\r') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( 'dangling else') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( 'return undefined') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( 'break') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( 'return') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( ';" ==> "if (a) {} throw ') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( ' - global replace, ') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( '\\u') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( 'Array') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( 'Error') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( '/foobar/g') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( '[') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( 'a') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( 'this') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( 'RegExp') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( ';" ==> "while (a) {break} throw ') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( 'RegExp(') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( 'fn.call(thisValue, a, b)') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( ' - case insensitive, ') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( 'if (a) {} return f();') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( '.') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( 'while (a) {return f()} return f();') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( '{') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( 'else') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( 'precedence') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( 'if(x)return 1;return 2;') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( ' with ') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( ' to ') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( 'String') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( ';') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( ' or ') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( "while (a) {throw 'ow'} throw 'ow';") ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( 'm') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( ' to simply ') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( '\\r') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( '\n') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( '[[args]]') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( 'Array([args])') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( 'Array(0)') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( ',') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( ')') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( 'Invalid flags to RegExp constructor: {0}') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( 'new RegExp(') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( ' in place of ') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( ' if an ') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( 'return;') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( 'fn(a, b)') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( '[]') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( '[arg0, arg1, ...]') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( "while (a) {break} throw 'ow';") ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( ': case ') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( "Array('a')") ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( 'void 0') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( 'AS IS') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( 'split') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( '\\u2028') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( '\u2028') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( 'foo') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( ' ==> ') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( 'fallthrough') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( 'return void 0') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( 'if (a) {return f()} return f();') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( '^[gmi]*$') ) {
if( null == pattern ||( null != flags.getNext( ) ).equals( 'i') ) {
