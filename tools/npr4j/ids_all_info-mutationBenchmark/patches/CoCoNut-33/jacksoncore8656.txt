} else if( i == INT_QUOTE ) {
} else if( i == STRING_QUOTE ) {
} else if( i == INT_QUOTE_QUOTE ) {
} else if( i == IntValue( ) ) {
} else if( i.equals( INT_QUOTE ) {
} else if( i == Int_QUOTE ) {
} else if( i == Integer.MIN_QUOTE ) {
} else if( i == IntType( ) ) {
} else if( i == Integer.MAX_VALUE ) {
} else if( i == STRING_QUOTE_QUOTE ) {
} else if( i == INT_QUOTE_QUOTE_QUOTE ) {
} else if( i == IntValue( i ) ) {
} else if( i ==( i == INT_QUOTE ) {
} else if( i ==0|| i == INT_QUOTE ) {
} else if( i == Int.TRUE ) {
} else if( i == Integer.TRUE ) {
} else if( i ==1|| i == INT_QUOTE ) {
} else if( i ==0&& i == INT_QUOTE ) {
} else if(( i == INT_QUOTE ) {
} else if( i ==0) {
} else if( i ==77|| i == INT_QUOTE ) {
} else if( i ==3|| i == INT_QUOTE ) {
} else if( i ==25|| i == INT_QUOTE ) {
} else if( i ==8|| i == INT_QUOTE ) {
} else if( i ==32|| i == INT_QUOTE ) {
} else if( i ==2|| i == INT_QUOTE ) {
} else if( i ==2008|| i == INT_QUOTE ) {
} else if( i ==4|| i == INT_QUOTE ) {
} else if( i ==16|| i == INT_QUOTE ) {
} else if( i ==173|| i == INT_QUOTE ) {
} else if( i ==7|| i == INT_QUOTE ) {
} else if( i ==69|| i == INT_QUOTE ) {
} else if( i ==64|| i == INT_QUOTE ) {
} else if( i ==6|| i == INT_QUOTE ) {
} else if( i ==2009|| i == INT_QUOTE ) {
} else if( i ==18|| i == INT_QUOTE ) {
} else if( i ==9|| i == INT_QUOTE ) {
} else if( i ==5|| i == INT_QUOTE ) {
} else if( i ==19|| i == INT_QUOTE ) {
} else if( i ==0|| i == INT_QUOTE ) {
} else if( i ==631|| i == INT_QUOTE ) {
} else if( i ==12|| i == INT_QUOTE ) {
} else if( i ==1|| i == INT_QUOTE ) {
} else if( i.equals( '') ) {
} else if( i.equals( '/') ) {
} else if( i.equals( ' in a comment') ) {
} else if( i.equals( '\f') ) {
} else if( i.equals( 'ALLOW_COMMENTS') ) {
} else if( i.equals( '+b64variant+') ) {
} else if( i.equals( '+b64variant.getPaddingChar()+') ) {
} else if( i.equals( '): ') ) {
} else if( i.equals( ' in character escape sequence') ) {
} else if( i.equals( '*') ) {
} else if( i.equals( 'Exponent indicator not followed by a digit') ) {
} else if( i.equals( 'Failed to decode VALUE_STRING as base64 (') ) {
} else if( i.equals( 'null') ) {
} else if( i.equals( '\r') ) {
} else if( i.equals( '\t') ) {
} else if( i.equals( '"+b64variant.getPaddingChar()+"') ) {
} else if( i.equals( 'Reader returned 0 characters when trying to read ') ) {
} else if( i.equals( 'n') ) {
} else if( i.equals( 'Unexpected end-of-input within/between ') ) {
} else if( i.equals( "expected padding character '") ) {
} else if( i.equals( "'") ) {
} else if( i.equals( ' || c == ') ) {
} else if( i.equals( 'NaN') ) {
} else if( i.equals( 'name') ) {
} else if( i.equals( 'Infinity') ) {
} else if( i.equals( '+Infinity') ) {
} else if( i.equals( ' || ch > ') ) {
} else if( i.equals( "Unrecognized token '") ) {
} else if( i.equals( 'expected a digit for number exponent') ) {
} else if( i.equals( 'ReaderBasedNumericParser') ) {
} else if( i.equals( 'I') ) {
} else if( i.equals( '-') ) {
} else if( i.equals( '"+((char) i), ') ) {
} else if( i.equals( '+_parsingContext.getTypeDesc()+') ) {
} else if( i.equals( 'N') ) {
} else if( i.equals( '.') ) {
} else if( i.equals( 'E') ) {
} else if( i.equals( '-Infinity') ) {
} else if( i.equals( ": was expecting closing '") ) {
} else if( i.equals( 'expected digit (0-9) to follow minus sign, for valid numeric value') ) {
} else if( i.equals( '_nextAfterName') ) {
} else if( i.equals( 'Leading zeroes not allowed') ) {
} else if( i.equals( ': was expecting closing quote for a string value') ) {
} else if( i.equals( "Non-standard token '") ) {
} else if( i.equals( '+') ) {
} else if( i.equals( 'Missing integer part (next char ') ) {
} else if( i.equals( ' or ') ) {
} else if( i.equals( 'll eagerly parse contents; this so that there') ) {
} else if( i.equals( ') not VALUE_STRING or VALUE_EMBEDDED_OBJECT, can not access as binary') ) {
} else if( i.equals( '\n') ) {
} else if( i.equals( ')') ) {
} else if( i.equals( '"+((char) endChar)+"') ) {
} else if( i.equals( '+sb.toString()+') ) {
} else if( i.equals( 'string value') ) {
} else if( i.equals( '"+sb.toString()+"') ) {
} else if( i.equals( "Non-standard token 'Infinity': enable JsonParser.Feature.ALLOW_NON_NUMERIC_NUMBERS to allow") ) {
} else if( i.equals( "was expecting either '*' or '/' for a comment") ) {
