typeHierarchyList.add( -1, pair ) ;
typeHierarchyList.add(0, pair ) ;
typeHierarchyList.add( pair ) ;
typeHierarchyList.add(1, pair ) ;
typeHierarchyList.add(2, pair ) ;
typeHierarchyList.add(2008, pair ) ;
typeHierarchyList.add(1, pair ) ;
typeHierarchyList.add(0, pair ) ;
typeHierarchyList.add(0) , pair ) ;
typeHierarchyList.add(1) , pair ) ;
typeHierarchyList.add(0) ;
typeHierarchyList.add( -2, pair ) ;
typeHierarchyList.add( -2008, pair ) ;
typeHierarchyList.add( -1, pair ) ;
typeHierarchyList.add( -0, pair ) ;
typeHierarchyList( ).add( -1, pair ) ;
typeHierarchyList.add( type ) ;
typeHierarchyList.add( new String( pair ) ;
typeHierarchyList.add( null , pair ) ;
typeHierarchyList.add(0.0, pair ) ;
typeHierarchyList.add( -1, pair ,1) ;
typeHierarchyList.add( 'License', pair ) ;
typeHierarchyList.add( 'The specified type handler for type ', pair ) ;
typeHierarchyList.add( '. Gson does not allow this.', pair ) ;
typeHierarchyList.add( ':', pair ) ;
typeHierarchyList.add( '}', pair ) ;
typeHierarchyList.add( ' hides the previously registered type hierarchy handler for ', pair ) ;
typeHierarchyList.add( 'Overriding the existing type handler for {0}', pair ) ;
typeHierarchyList.add( 'AS IS', pair ) ;
typeHierarchyList.add( '{mapForTypeHierarchy:{', pair ) ;
typeHierarchyList.add( ',', pair ) ;
typeHierarchyList.add( '},map:{', pair ) ;
typeHierarchyList.add( 'Attempted to modify an unmodifiable map.', pair ) ;
typeHierarchyList.add( ) ;
typeHierarchyList.add( new1, pair ) ;
typeHierarchyList.add( Math.round( pair ) ;
typeHierarchyList.add( -1) ;
typeHierarchyList.add(2) , pair ) ;
typeHierarchyList.add(2008) , pair ) ;
typeHierarchyList.add(1) , pair ) ;
typeHierarchyList.add(0) , pair ) ;
typeHierarchyList.add( type , pair ) ;
typeHierarchyList.add(0.2, pair ) ;
typeHierarchyList.add(0.2008, pair ) ;
typeHierarchyList.add(0.1, pair ) ;
typeHierarchyList.add(0.0, pair ) ;
typeHierarchyList.add( new Double( pair ) ;
typeHierarchyList.add(( Integer ) pair ) ;
typeHierarchyList.add(0) -1, pair ) ;
typeHierarchyList.add(1) ;
typeHierarchyList.add( -1, pair ,2) ;
typeHierarchyList.add( -1, pair ,2008) ;
typeHierarchyList.add( -1, pair ,1) ;
typeHierarchyList.add( -1, pair ,0) ;
typeHierarchyList.add(0).add( pair ) ;
typeHierarchyList( -1, pair ) ;
typeHierarchyList.add( new Integer( pair ) ;
typeHierarchyList.add((1, pair ) ;
typeHierarchyList.add( i , pair ) ;
typeHierarchyList.add(2) ;
typeHierarchyList.add(2008) ;
typeHierarchyList.add(1) ;
typeHierarchyList.add(0) ;
typeHierarchyList.add(( -1, pair ) ;
typeHierarchyList.add( -1, pair ,0) ;
typeHierarchyList.add( pair , pair ) ;
typeHierarchyList.add(( Double ) pair ) ;
typeHierarchyList( ).add(0, pair ) ;
typeHierarchyList.add( 'License') , pair ) ;
typeHierarchyList.add( 'The specified type handler for type ') , pair ) ;
typeHierarchyList.add( '. Gson does not allow this.') , pair ) ;
typeHierarchyList.add( ':') , pair ) ;
typeHierarchyList.add( '}') , pair ) ;
typeHierarchyList.add( ' hides the previously registered type hierarchy handler for ') , pair ) ;
typeHierarchyList.add( 'Overriding the existing type handler for {0}') , pair ) ;
typeHierarchyList.add( 'AS IS') , pair ) ;
typeHierarchyList.add( '{mapForTypeHierarchy:{') , pair ) ;
typeHierarchyList.add( ',') , pair ) ;
typeHierarchyList.add( '},map:{') , pair ) ;
typeHierarchyList.add( 'Attempted to modify an unmodifiable map.') , pair ) ;
typeHierarchyList.add( valueOf( pair ) ;
typeHierarchyList.add(( double ) pair ) ;
typeHierarchyList.set( -1, pair ) ;
typeHierarchyList.put( -1, pair ) ;
typeHierarchyList.add( pair ) , pair ) ;
typeHierarchyList.add(1.0, pair ) ;
typeHierarchyList.add( -1, pair , pair ) ;
typeHierarchyList.add( -1) , pair ) ;
typeHierarchyList.push( -1, pair ) ;
typeHierarchyList.add( getClass( ) ) ;
typeHierarchyList.add( -1, pair ) ) ;
typeHierarchyList.add(( int ) pair ) ;
typeHierarchyList.add((1) , pair ) ;
typeHierarchyList.add( this , pair ) ;
typeHierarchyList.add(0,0, pair ) ;
typeHierarchyList.add( -1.0, pair ) ;
typeHierarchyList.add( pair ,1, pair ) ;
typeHierarchyList.add( typeHierarchyList( ) ;
typeHierarchyList.add(0.0f , pair ) ;
typeHierarchyList.add(( int )( pair ) ;
