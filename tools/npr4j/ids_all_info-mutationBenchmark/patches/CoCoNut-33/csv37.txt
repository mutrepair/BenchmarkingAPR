if( getActivity( ).equals( '') ) {
if( getActivity( ).equals( 'The comment start character and the encapsulator cannot be the same (\') ) {
if( getActivity( ).equals( 'The delimiter cannot be a line break') ) {
if( getActivity( ).equals( ' EmptyLines:ignored') ) {
if( getActivity( ).equals( 'http://dev.mysql.com/doc/refman/5.1/en/load-data.html') ) {
if( getActivity( ).equals( 'The encapsulator cannot be a line break') ) {
if( getActivity( ).equals( '\n') ) {
if( getActivity( ).equals( ',') ) {
if( getActivity( ).equals( ' || c == ') ) {
if( getActivity( ).equals( ' SurroundingSpaces:ignored') ) {
if( getActivity( ).equals( ')') ) {
if( getActivity( ).equals( 'name') ) {
if( getActivity( ).equals( 'License') ) {
if( getActivity( ).equals( 'The escape character cannot be a line break') ) {
if( getActivity( ).equals( ' or ') ) {
if( getActivity( ).equals( 'The comment start character and the delimiter cannot be the same (\') ) {
if( getActivity( ).equals( ', ') ) {
if( getActivity( ).equals( 'Escape=<') ) {
if( getActivity( ).equals( 'The comment start and the escape character cannot be the same (\') ) {
if( getActivity( ).equals( 'CommentStart=<') ) {
if( getActivity( ).equals( 'Encapsulator=<') ) {
if( getActivity( ).equals( 'The escape character and the delimiter cannot be the same (\') ) {
if( getActivity( ).equals( ' ') ) {
if( getActivity( ).equals( '\r\n') ) {
if( getActivity( ).equals( 'AS IS') ) {
if( getActivity( ).equals( '\ufffe') ) {
if( getActivity( ).equals( 'phone') ) {
if( getActivity( ).equals( 'The comment start character cannot be a line break') ) {
if( getActivity( ).equals( 'The encapsulator character and the delimiter cannot be the same (\') ) {
if( getActivity( ).equals( '\') ) {
if( getActivity( ).equals( '"') ) {
if( getActivity( ).equals( 'http://tools.ietf.org/html/rfc4180') ) {
if( getActivity( ).equals( '" + encapsulator + ') ) {
if( getActivity( ).equals( '\r') ) {
if( getActivity( ).equals( 'email') ) {
if( getActivity( ).equals( '\t') ) {
if( getActivity( ).equals( '" + commentStart + ') ) {
if( getActivity( ).equals( '" + escape + ') ) {
if( getActivity( ).equals( 'Delimiter=<') ) {
if( getActivity( ).equals( ';') ) {
if( getActivity( ).equals( '\\') ) {
if( getActivity( ).equals( '>') ) {
System.out.println( '') ;
System.out.println( 'The comment start character and the encapsulator cannot be the same (\') ;
System.out.println( 'The delimiter cannot be a line break') ;
System.out.println( ' EmptyLines:ignored') ;
System.out.println( 'http://dev.mysql.com/doc/refman/5.1/en/load-data.html') ;
System.out.println( 'The encapsulator cannot be a line break') ;
System.out.println( '\n') ;
System.out.println( ',') ;
System.out.println( ' || c == ') ;
System.out.println( ' SurroundingSpaces:ignored') ;
System.out.println( ')') ;
System.out.println( 'name') ;
System.out.println( 'License') ;
System.out.println( 'The escape character cannot be a line break') ;
System.out.println( ' or ') ;
System.out.println( 'The comment start character and the delimiter cannot be the same (\') ;
System.out.println( ', ') ;
System.out.println( 'Escape=<') ;
System.out.println( 'The comment start and the escape character cannot be the same (\') ;
System.out.println( 'CommentStart=<') ;
System.out.println( 'Encapsulator=<') ;
System.out.println( 'The escape character and the delimiter cannot be the same (\') ;
System.out.println( ' ') ;
System.out.println( '\r\n') ;
System.out.println( 'AS IS') ;
System.out.println( '\ufffe') ;
System.out.println( 'phone') ;
System.out.println( 'The comment start character cannot be a line break') ;
System.out.println( 'The encapsulator character and the delimiter cannot be the same (\') ;
System.out.println( '\') ;
System.out.println( '"') ;
System.out.println( 'http://tools.ietf.org/html/rfc4180') ;
System.out.println( '" + encapsulator + ') ;
System.out.println( '\r') ;
System.out.println( 'email') ;
System.out.println( '\t') ;
System.out.println( '" + commentStart + ') ;
System.out.println( '" + escape + ') ;
System.out.println( 'Delimiter=<') ;
System.out.println( ';') ;
System.out.println( '\\') ;
System.out.println( '>') ;
if( ! isEmpty( ) ) {
if( ! Objects.equals( '') ) {
if( ! Objects.equals( 'The comment start character and the encapsulator cannot be the same (\') ) {
if( ! Objects.equals( 'The delimiter cannot be a line break') ) {
if( ! Objects.equals( ' EmptyLines:ignored') ) {
if( ! Objects.equals( 'http://dev.mysql.com/doc/refman/5.1/en/load-data.html') ) {
if( ! Objects.equals( 'The encapsulator cannot be a line break') ) {
if( ! Objects.equals( '\n') ) {
if( ! Objects.equals( ',') ) {
if( ! Objects.equals( ' || c == ') ) {
if( ! Objects.equals( ' SurroundingSpaces:ignored') ) {
if( ! Objects.equals( ')') ) {
if( ! Objects.equals( 'name') ) {
if( ! Objects.equals( 'License') ) {
if( ! Objects.equals( 'The escape character cannot be a line break') ) {
if( ! Objects.equals( ' or ') ) {
