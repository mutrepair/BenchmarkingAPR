l_ascii [ jj + bits ] = 'License';
l_ascii [ jj + bits ] = '0';
l_ascii [ jj + bits ] = 's and ';
l_ascii [ jj + bits ] = 'AS IS';
l_ascii [ jj + bits ] = ' and ';
l_ascii [ jj + bits ] = '1';
l_ascii [ jj + bits ] = 'argument not a byte array';
l_ascii [ jj + bits ] = ' or ';
l_ascii [ jj ] = 'License';
l_ascii [ jj ] = '0';
l_ascii [ jj ] = 's and ';
l_ascii [ jj ] = 'AS IS';
l_ascii [ jj ] = ' and ';
l_ascii [ jj ] = '1';
l_ascii [ jj ] = 'argument not a byte array';
l_ascii [ jj ] = ' or ';
l_ascii [ jj - bits ] = 'License';
l_ascii [ jj - bits ] = '0';
l_ascii [ jj - bits ] = 's and ';
l_ascii [ jj - bits ] = 'AS IS';
l_ascii [ jj - bits ] = ' and ';
l_ascii [ jj - bits ] = '1';
l_ascii [ jj - bits ] = 'argument not a byte array';
l_ascii [ jj - bits ] = ' or ';
l_ascii [ jj + bits + bits ] = 'License';
l_ascii [ jj + bits + bits ] = '0';
l_ascii [ jj + bits + bits ] = 's and ';
l_ascii [ jj + bits + bits ] = 'AS IS';
l_ascii [ jj + bits + bits ] = ' and ';
l_ascii [ jj + bits + bits ] = '1';
l_ascii [ jj + bits + bits ] = 'argument not a byte array';
l_ascii [ jj + bits + bits ] = ' or ';
l_ascii [ jj + bits ] = 'License'+ bits ] = 'License';
l_ascii [ jj + bits ] = '0'+ bits ] = '0';
l_ascii [ jj + bits ] = 's and '+ bits ] = 's and ';
l_ascii [ jj + bits ] = 'AS IS'+ bits ] = 'AS IS';
l_ascii [ jj + bits ] = ' and '+ bits ] = ' and ';
l_ascii [ jj + bits ] = '1'+ bits ] = '1';
l_ascii [ jj + bits ] = 'argument not a byte array'+ bits ] = 'argument not a byte array';
l_ascii [ jj + bits ] = ' or '+ bits ] = ' or ';
l_ascii [ jj ] = 'License'+ bits ] = 'License';
l_ascii [ jj ] = '0'+ bits ] = '0';
l_ascii [ jj ] = 's and '+ bits ] = 's and ';
l_ascii [ jj ] = 'AS IS'+ bits ] = 'AS IS';
l_ascii [ jj ] = ' and '+ bits ] = ' and ';
l_ascii [ jj ] = '1'+ bits ] = '1';
l_ascii [ jj ] = 'argument not a byte array'+ bits ] = 'argument not a byte array';
l_ascii [ jj ] = ' or '+ bits ] = ' or ';
l_ascii [ jj *bits ] = 'License';
l_ascii [ jj *bits ] = '0';
l_ascii [ jj *bits ] = 's and ';
l_ascii [ jj *bits ] = 'AS IS';
l_ascii [ jj *bits ] = ' and ';
l_ascii [ jj *bits ] = '1';
l_ascii [ jj *bits ] = 'argument not a byte array';
l_ascii [ jj *bits ] = ' or ';
l_ascii [ jj *bits + bits ] = 'License';
l_ascii [ jj *bits + bits ] = '0';
l_ascii [ jj *bits + bits ] = 's and ';
l_ascii [ jj *bits + bits ] = 'AS IS';
l_ascii [ jj *bits + bits ] = ' and ';
l_ascii [ jj *bits + bits ] = '1';
l_ascii [ jj *bits + bits ] = 'argument not a byte array';
l_ascii [ jj *bits + bits ] = ' or ';
l_ascii [ jj + bits + bits + bits ] = 'License';
l_ascii [ jj + bits + bits + bits ] = '0';
l_ascii [ jj + bits + bits + bits ] = 's and ';
l_ascii [ jj + bits + bits + bits ] = 'AS IS';
l_ascii [ jj + bits + bits + bits ] = ' and ';
l_ascii [ jj + bits + bits + bits ] = '1';
l_ascii [ jj + bits + bits + bits ] = 'argument not a byte array';
l_ascii [ jj + bits + bits + bits ] = ' or ';
l_ascii [ jj - bits + bits ] = 'License';
l_ascii [ jj - bits + bits ] = '0';
l_ascii [ jj - bits + bits ] = 's and ';
l_ascii [ jj - bits + bits ] = 'AS IS';
l_ascii [ jj - bits + bits ] = ' and ';
l_ascii [ jj - bits + bits ] = '1';
l_ascii [ jj - bits + bits ] = 'argument not a byte array';
l_ascii [ jj - bits + bits ] = ' or ';
l_ascii [ jj + bits ] =( jj + bits ] = 'License';
l_ascii [ jj + bits ] =( jj + bits ] = '0';
l_ascii [ jj + bits ] =( jj + bits ] = 's and ';
l_ascii [ jj + bits ] =( jj + bits ] = 'AS IS';
l_ascii [ jj + bits ] =( jj + bits ] = ' and ';
l_ascii [ jj + bits ] =( jj + bits ] = '1';
l_ascii [ jj + bits ] =( jj + bits ] = 'argument not a byte array';
l_ascii [ jj + bits ] =( jj + bits ] = ' or ';
l_ascii [ jj + bits ] = 'License'+ jj ] = 'License';
l_ascii [ jj + bits ] = '0'+ jj ] = '0';
l_ascii [ jj + bits ] = 's and '+ jj ] = 's and ';
l_ascii [ jj + bits ] = 'AS IS'+ jj ] = 'AS IS';
l_ascii [ jj + bits ] = ' and '+ jj ] = ' and ';
l_ascii [ jj + bits ] = '1'+ jj ] = '1';
l_ascii [ jj + bits ] = 'argument not a byte array'+ jj ] = 'argument not a byte array';
l_ascii [ jj + bits ] = ' or '+ jj ] = ' or ';
l_ascii [ jj + bits ] = 'License'+ bits ) ;
l_ascii [ jj + bits ] = '0'+ bits ) ;
l_ascii [ jj + bits ] = 's and '+ bits ) ;
l_ascii [ jj + bits ] = 'AS IS'+ bits ) ;
