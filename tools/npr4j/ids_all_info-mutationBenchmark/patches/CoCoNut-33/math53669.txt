final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,100+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,36+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,3+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,60+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,48+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,2704+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,8+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,32+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,21632+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,2+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,4+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,2496+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,384+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,64+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,4991895511313664478+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,0+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,416+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,52+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) + BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,0+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,1) ;
final int pEnd = FastMath.min(( iBlock +1) + BLOCK_SIZE ,100+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) + BLOCK_SIZE ,36+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) + BLOCK_SIZE ,3+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) + BLOCK_SIZE ,60+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) + BLOCK_SIZE ,48+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) + BLOCK_SIZE ,2704+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) + BLOCK_SIZE ,8+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) + BLOCK_SIZE ,32+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) + BLOCK_SIZE ,21632+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) + BLOCK_SIZE ,2+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) + BLOCK_SIZE ,4+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) + BLOCK_SIZE ,2496+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) + BLOCK_SIZE ,384+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) + BLOCK_SIZE ,64+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) + BLOCK_SIZE ,4991895511313664478+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) + BLOCK_SIZE ,0+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) + BLOCK_SIZE ,416+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) + BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) + BLOCK_SIZE ,52+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE +1) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,0, endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,1, endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE +1, endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,1+ startRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,0) ;
final int pEnd = FastMath.min(( iBlock +1) ) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,100+ startRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,36+ startRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,3+ startRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,60+ startRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,48+ startRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,2704+ startRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,8+ startRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,32+ startRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,21632+ startRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,2+ startRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,4+ startRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,2496+ startRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,384+ startRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,64+ startRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,4991895511313664478+ startRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,0+ startRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,416+ startRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,1+ startRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,52+ startRow ) ;
final int pEnd = FastMath.min(( iBlock +1) + BLOCK_SIZE ,0+ endRow ) ;
final int pEnd = FastMath.min(( iBlock -1) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE +1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE , - BLOCK_SIZE +1) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,100) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,36) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,3) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,60) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,48) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,2704) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,8) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,32) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,21632) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,2) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,4) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,2496) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,384) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,64) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,4991895511313664478) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,0) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,416) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,1) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,52) ;
final int pEnd = FastMath.min(( iBlock +1) + BLOCK_SIZE ,1) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ) ;
final int pEnd = FastMath.min(( iBlock ) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE -1) ;
final int pEnd = FastMath.min(( iBlock +100) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +36) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +3) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +60) - BLOCK_SIZE ,1+ endRow ) ;
