tokens.add( arguments [ i ].substring( -2) ) ;
tokens.add( arguments [ i ].substring( -2001) ) ;
tokens.add( arguments [ i ].substring( -0) ) ;
tokens.add( arguments [ i ].substring( -2004) ) ;
tokens.add( arguments [ i ].substring( -1999) ) ;
tokens.add( arguments [ i ].substring( -1) ) ;
tokens.add( arguments [ i ].substring( -2).substring( -2) ) ;
tokens.add( arguments [ i ].substring( -2001).substring( -2001) ) ;
tokens.add( arguments [ i ].substring( -0).substring( -0) ) ;
tokens.add( arguments [ i ].substring( -2004).substring( -2004) ) ;
tokens.add( arguments [ i ].substring( -1999).substring( -1999) ) ;
tokens.add( arguments [ i ].substring( -2) ) ) ;
tokens.add( arguments [ i ].substring( -2001) ) ) ;
tokens.add( arguments [ i ].substring( -0) ) ) ;
tokens.add( arguments [ i ].substring( -2004) ) ) ;
tokens.add( arguments [ i ].substring( -1999) ) ) ;
tokens.add( arguments [ i ].substring( -2) ;
tokens.add( arguments [ i ].substring( -2001) ;
tokens.add( arguments [ i ].substring( -0) ;
tokens.add( arguments [ i ].substring( -2004) ;
tokens.add( arguments [ i ].substring( -1999) ;
tokens.add( arguments [ i ].substring( -1).substring( -2) ) ;
tokens.add( arguments [ i ].substring( -1).substring( -2001) ) ;
tokens.add( arguments [ i ].substring( -1).substring( -0) ) ;
tokens.add( arguments [ i ].substring( -1).substring( -2004) ) ;
tokens.add( arguments [ i ].substring( -1).substring( -1999) ) ;
tokens.add( arguments [ i ].substring( -2).substring( -1) ) ;
tokens.add( arguments [ i ].substring( -2001).substring( -1) ) ;
tokens.add( arguments [ i ].substring( -0).substring( -1) ) ;
tokens.add( arguments [ i ].substring( -2004).substring( -1) ) ;
tokens.add( arguments [ i ].substring( -1999).substring( -1) ) ;
tokens.add( arguments [ i ].substring(0, arguments [ i ] ) ) ;
tokens.add( arguments [ i ].substring( -1) ;
tokens.set( arguments [ i ].substring( -2) ) ;
tokens.set( arguments [ i ].substring( -2001) ) ;
tokens.set( arguments [ i ].substring( -0) ) ;
tokens.set( arguments [ i ].substring( -2004) ) ;
tokens.set( arguments [ i ].substring( -1999) ) ;
tokens.add( arguments [ i ].substring( -2) +1) ) ;
tokens.add( arguments [ i ].substring( -2001) +1) ) ;
tokens.add( arguments [ i ].substring( -0) +1) ) ;
tokens.add( arguments [ i ].substring( -2004) +1) ) ;
tokens.add( arguments [ i ].substring( -1999) +1) ) ;
tokens.add( arguments [ i ].substring( -2) -1) ) ;
tokens.add( arguments [ i ].substring( -2001) -1) ) ;
tokens.add( arguments [ i ].substring( -0) -1) ) ;
tokens.add( arguments [ i ].substring( -2004) -1) ) ;
tokens.add( arguments [ i ].substring( -1999) -1) ) ;
tokens.add( arguments [ i ].substring(0) ) ;
tokens.add( arguments [ i ].substring( -8) ) ;
tokens.put( arguments [ i ].substring( -2) ) ;
tokens.put( arguments [ i ].substring( -2001) ) ;
tokens.put( arguments [ i ].substring( -0) ) ;
tokens.put( arguments [ i ].substring( -2004) ) ;
tokens.put( arguments [ i ].substring( -1999) ) ;
tokens.add( arguments [ i ].substring(1) ) ;
tokens.add( arguments [ i ].substring( -1) ) ) ;
tokens.add( arguments [ i ].substring( -2) ).substring(0) ) ;
tokens.add( arguments [ i ].substring( -2001) ).substring(0) ) ;
tokens.add( arguments [ i ].substring( -0) ).substring(0) ) ;
tokens.add( arguments [ i ].substring( -2004) ).substring(0) ) ;
tokens.add( arguments [ i ].substring( -1999) ).substring(0) ) ;
tokens.add( arguments [ i ].substring(2) ) ;
tokens.add( arguments [ i ].substring(2001) ) ;
tokens.add( arguments [ i ].substring(0) ) ;
tokens.add( arguments [ i ].substring(2004) ) ;
tokens.add( arguments [ i ].substring(1999) ) ;
tokens.add( arguments [ i ].substring( -2).substring(0) ) ;
tokens.add( arguments [ i ].substring( -2001).substring(0) ) ;
tokens.add( arguments [ i ].substring( -0).substring(0) ) ;
tokens.add( arguments [ i ].substring( -2004).substring(0) ) ;
tokens.add( arguments [ i ].substring( -1999).substring(0) ) ;
tokens.add( arguments [ i ].length( ) -1) ) ;
tokens.add( arguments [ i ].trim( ).substring( -2) ) ;
tokens.add( arguments [ i ].trim( ).substring( -2001) ) ;
tokens.add( arguments [ i ].trim( ).substring( -0) ) ;
tokens.add( arguments [ i ].trim( ).substring( -2004) ) ;
tokens.add( arguments [ i ].trim( ).substring( -1999) ) ;
tokens.add( arguments [ i ].substring( -2) -2) ) ;
tokens.add( arguments [ i ].substring( -2001) -2001) ) ;
tokens.add( arguments [ i ].substring( -0) -0) ) ;
tokens.add( arguments [ i ].substring( -2004) -2004) ) ;
tokens.add( arguments [ i ].substring( -1999) -1999) ) ;
tokens.add( arguments [ i ].substring( -2.substring( -2) ) ;
tokens.add( arguments [ i ].substring( -2001.substring( -2001) ) ;
tokens.add( arguments [ i ].substring( -0.substring( -0) ) ;
tokens.add( arguments [ i ].substring( -2004.substring( -2004) ) ;
tokens.add( arguments [ i ].substring( -1999.substring( -1999) ) ;
tokens.add( arguments [ i ].substring( -2).substring(1) ) ;
tokens.add( arguments [ i ].substring( -2001).substring(1) ) ;
tokens.add( arguments [ i ].substring( -0).substring(1) ) ;
tokens.add( arguments [ i ].substring( -2004).substring(1) ) ;
tokens.add( arguments [ i ].substring( -1999).substring(1) ) ;
tokens.add( arguments [ j ].substring( -2) ) ;
tokens.add( arguments [ j ].substring( -2001) ) ;
tokens.add( arguments [ j ].substring( -0) ) ;
tokens.add( arguments [ j ].substring( -2004) ) ;
tokens.add( arguments [ j ].substring( -1999) ) ;
tokens.add( arguments [ i ].substring( -2) +2) ) ;
tokens.add( arguments [ i ].substring( -2001) +2001) ) ;
