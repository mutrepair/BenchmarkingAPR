return -2+ indexOfLastDot ;
return -0+ indexOfLastDot ;
return -2006+ indexOfLastDot ;
return -1+ indexOfLastDot ;
return -10+ indexOfLastDot ;
return indexOfLastDot ;
return 2+ indexOfLastDot ;
return 0+ indexOfLastDot ;
return 2006+ indexOfLastDot ;
return 1+ indexOfLastDot ;
return 10+ indexOfLastDot ;
return -2+ indexOfLastDot ) ;
return -0+ indexOfLastDot ) ;
return -2006+ indexOfLastDot ) ;
return -1+ indexOfLastDot ) ;
return -10+ indexOfLastDot ) ;
return Integer.parseInt( indexOfLastDot ;
return -2+ indexOfLastDotDot ;
return -0+ indexOfLastDotDot ;
return -2006+ indexOfLastDotDot ;
return -1+ indexOfLastDotDot ;
return -10+ indexOfLastDotDot ;
return -1+ indexOfLastDot ;
return -2+ indexOfLastDotDot ) ;
return -0+ indexOfLastDotDot ) ;
return -2006+ indexOfLastDotDot ) ;
return -1+ indexOfLastDotDot ) ;
return -10+ indexOfLastDotDot ) ;
return -2+( indexOfLastDot ;
return -0+( indexOfLastDot ;
return -2006+( indexOfLastDot ;
return -1+( indexOfLastDot ;
return -10+( indexOfLastDot ;
return -2+ indexOfLastDot( ) ;
return -0+ indexOfLastDot( ) ;
return -2006+ indexOfLastDot( ) ;
return -1+ indexOfLastDot( ) ;
return -10+ indexOfLastDot( ) ;
return Double.parseInt( indexOfLastDot ;
return Integer.toString( indexOfLastDot ;
return 1+ indexOfLastDot ;
 return( int ) indexOfLastDot ;
 return( int )( indexOfLastDot ;
return -2+ indexOfLastDot +1;
return -0+ indexOfLastDot +1;
return -2006+ indexOfLastDot +1;
return -1+ indexOfLastDot +1;
return -10+ indexOfLastDot +1;
return 0+ indexOfLastDot ;
return -2+ indexOfLastDot -1;
return -0+ indexOfLastDot -1;
return -2006+ indexOfLastDot -1;
return -1+ indexOfLastDot -1;
return -10+ indexOfLastDot -1;
return Math.abs( indexOfLastDot ;
 return( indexOfLastDot ;
return -2*indexOfLastDot ;
return -0*indexOfLastDot ;
return -2006*indexOfLastDot ;
return -1*indexOfLastDot ;
return -10*indexOfLastDot ;
return Double.toString( indexOfLastDot ;
return Double.valueOfLastDot ;
return Math.max( indexOfLastDot ;
return Math.ceil( indexOfLastDot ;
return ' + b.getKey() +'+ indexOfLastDot ;
return 'addDependency'+ indexOfLastDot ;
return 'Missing module graph'+ indexOfLastDot ;
return 'JSC_INVALID_ARGUMENT_ERROR'+ indexOfLastDot ;
return 'JSC_LATE_PROVIDE_ERROR'+ indexOfLastDot ;
return 'INVALID_CSS_RENAMING_MAP'+ indexOfLastDot ;
return ')-map('+ indexOfLastDot ;
return '{0}\'+ indexOfLastDot ;
return 'JSC_MISSING_PROVIDE_ERROR'+ indexOfLastDot ;
return '%s.call'+ indexOfLastDot ;
return 't touch the base case ('+ indexOfLastDot ;
return 'JSC_INVALID_PROVIDE_ERROR'+ indexOfLastDot ;
return 'Invalid entries in css renaming map: {0}'+ indexOfLastDot ;
return 'JSC_BASE_CLASS_ERROR'+ indexOfLastDot ;
return ')'+ indexOfLastDot ;
return 'map('+ indexOfLastDot ;
return 'JSC_EXPECTED_STRING_ERROR'+ indexOfLastDot ;
return 'JSC_TOO_MANY_ARGUMENTS_ERROR'+ indexOfLastDot ;
return 'goog.inherits'+ indexOfLastDot ;
return 'License'+ indexOfLastDot ;
return 'base'+ indexOfLastDot ;
return 'bar'+ indexOfLastDot ;
return 'incorrect use of goog.base: {0}'+ indexOfLastDot ;
return 'Second argument must name a method.'+ indexOfLastDot ;
return '%s.superClass_.%s.call'+ indexOfLastDot ;
return ' namespace never provided'+ indexOfLastDot ;
return ') != map('+ indexOfLastDot ;
return ' called with invalid argument'+ indexOfLastDot ;
return 'JSC_XMODULE_REQUIRE_ERROR'+ indexOfLastDot ;
return 'goog'+ indexOfLastDot ;
return ' called with more than one argument'+ indexOfLastDot ;
return 'JSC_NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR'+ indexOfLastDot ;
return 'Could not find enclosing method.'+ indexOfLastDot ;
return ' is not a valid JS property name'+ indexOfLastDot ;
return 'May only be called directly.'+ indexOfLastDot ;
