tmp.insert( -1, 'License') ;
tmp.insert( -1, 'new') ;
tmp.insert( -1, 'Unknown header type') ;
tmp.insert( -1, 'CRC Error') ;
tmp.insert( -1, '0') ;
tmp.insert( -1, '\0') ;
tmp.insert( -1, 'TRAILER!!!') ;
tmp.insert( -1, 'AS IS') ;
tmp.insert( -1, 'test.cpio') ;
tmp.insert( -1, 'invalid entry size (expected ') ;
tmp.insert( -1, 'attempt to write past end of STORED entry') ;
tmp.insert( -1, ' but got ') ;
tmp.insert( -1, 'Stream closed') ;
tmp.insert( -1, 'duplicate entry: ') ;
tmp.insert( -1, ' bytes)') ;
tmp.insert( -1, 'no current CPIO entry') ;
tmp.insert( -1, 'License', 'License') ;
tmp.insert( -1, 'new', 'new') ;
tmp.insert( -1, 'Unknown header type', 'Unknown header type') ;
tmp.insert( -1, 'CRC Error', 'CRC Error') ;
tmp.insert( -1, '0', '0') ;
tmp.insert( -1, '\0', '\0') ;
tmp.insert( -1, 'TRAILER!!!', 'TRAILER!!!') ;
tmp.insert( -1, 'AS IS', 'AS IS') ;
tmp.insert( -1, 'test.cpio', 'test.cpio') ;
tmp.insert( -1, 'invalid entry size (expected ', 'invalid entry size (expected ') ;
tmp.insert( -1, 'attempt to write past end of STORED entry', 'attempt to write past end of STORED entry') ;
tmp.insert( -1, ' but got ', ' but got ') ;
tmp.insert( -1, 'Stream closed', 'Stream closed') ;
tmp.insert( -1, 'duplicate entry: ', 'duplicate entry: ') ;
tmp.insert( -1, ' bytes)', ' bytes)') ;
tmp.insert( -1, 'no current CPIO entry', 'no current CPIO entry') ;
tmp.insert( -1, -1, 'License') ;
tmp.insert( -1, -1, 'new') ;
tmp.insert( -1, -1, 'Unknown header type') ;
tmp.insert( -1, -1, 'CRC Error') ;
tmp.insert( -1, -1, '0') ;
tmp.insert( -1, -1, '\0') ;
tmp.insert( -1, -1, 'TRAILER!!!') ;
tmp.insert( -1, -1, 'AS IS') ;
tmp.insert( -1, -1, 'test.cpio') ;
tmp.insert( -1, -1, 'invalid entry size (expected ') ;
tmp.insert( -1, -1, 'attempt to write past end of STORED entry') ;
tmp.insert( -1, -1, ' but got ') ;
tmp.insert( -1, -1, 'Stream closed') ;
tmp.insert( -1, -1, 'duplicate entry: ') ;
tmp.insert( -1, -1, ' bytes)') ;
tmp.insert( -1, -1, 'no current CPIO entry') ;
tmp.insert( 'License', -1, 'License') ;
tmp.insert( 'new', -1, 'new') ;
tmp.insert( 'Unknown header type', -1, 'Unknown header type') ;
tmp.insert( 'CRC Error', -1, 'CRC Error') ;
tmp.insert( '0', -1, '0') ;
tmp.insert( '\0', -1, '\0') ;
tmp.insert( 'TRAILER!!!', -1, 'TRAILER!!!') ;
tmp.insert( 'AS IS', -1, 'AS IS') ;
tmp.insert( 'test.cpio', -1, 'test.cpio') ;
tmp.insert( 'invalid entry size (expected ', -1, 'invalid entry size (expected ') ;
tmp.insert( 'attempt to write past end of STORED entry', -1, 'attempt to write past end of STORED entry') ;
tmp.insert( ' but got ', -1, ' but got ') ;
tmp.insert( 'Stream closed', -1, 'Stream closed') ;
tmp.insert( 'duplicate entry: ', -1, 'duplicate entry: ') ;
tmp.insert( ' bytes)', -1, ' bytes)') ;
tmp.insert( 'no current CPIO entry', -1, 'no current CPIO entry') ;
tmp.insert( -1, 'License'+1) ;
tmp.insert( -1, 'new'+1) ;
tmp.insert( -1, 'Unknown header type'+1) ;
tmp.insert( -1, 'CRC Error'+1) ;
tmp.insert( -1, '0'+1) ;
tmp.insert( -1, '\0'+1) ;
tmp.insert( -1, 'TRAILER!!!'+1) ;
tmp.insert( -1, 'AS IS'+1) ;
tmp.insert( -1, 'test.cpio'+1) ;
tmp.insert( -1, 'invalid entry size (expected '+1) ;
tmp.insert( -1, 'attempt to write past end of STORED entry'+1) ;
tmp.insert( -1, ' but got '+1) ;
tmp.insert( -1, 'Stream closed'+1) ;
tmp.insert( -1, 'duplicate entry: '+1) ;
tmp.insert( -1, ' bytes)'+1) ;
tmp.insert( -1, 'no current CPIO entry'+1) ;
tmp.insert( -1) ;
tmp.insert( -1, 'License', -1) ;
tmp.insert( -1, 'new', -1) ;
tmp.insert( -1, 'Unknown header type', -1) ;
tmp.insert( -1, 'CRC Error', -1) ;
tmp.insert( -1, '0', -1) ;
tmp.insert( -1, '\0', -1) ;
tmp.insert( -1, 'TRAILER!!!', -1) ;
tmp.insert( -1, 'AS IS', -1) ;
tmp.insert( -1, 'test.cpio', -1) ;
tmp.insert( -1, 'invalid entry size (expected ', -1) ;
tmp.insert( -1, 'attempt to write past end of STORED entry', -1) ;
tmp.insert( -1, ' but got ', -1) ;
tmp.insert( -1, 'Stream closed', -1) ;
tmp.insert( -1, 'duplicate entry: ', -1) ;
tmp.insert( -1, ' bytes)', -1) ;
tmp.insert( -1, 'no current CPIO entry', -1) ;
tmp.insert( -1,1, 'License') ;
tmp.insert( -1,1, 'new') ;
tmp.insert( -1,1, 'Unknown header type') ;
