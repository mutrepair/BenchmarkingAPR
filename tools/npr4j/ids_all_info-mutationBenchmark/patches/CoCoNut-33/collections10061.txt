vUp [1- offset ] = end1+1;
vUp [1- offset ] = start1+1;
vUp [ i - offset ] = end1+1;
vUp [2- offset ] = end1+1;
vUp [1- offset ] = end1+1;
vUp [0- offset ] = end1+1;
vUp [4- offset ] = end1+1;
vUp [0- offset ] = end1+1;
vUp [1- offset ] = end2+1;
vUp [1- offset ] = end1+1;
vUp [1- offset ] = end0+1;
vUp [1- offset ] = end4+1;
vUp [1- offset - offset ] = end1+1;
vUp [1- offset ] = end1+2;
vUp [1- offset ] = end1+1;
vUp [1- offset ] = end1+0;
vUp [1- offset ] = end1+4;
vUp [1- offset ] = end1+1+1;
vDown [1- offset ] = end1+1;
vUp [1- offset ] = start2+1;
vUp [1- offset ] = start1+1;
vUp [1- offset ] = start0+1;
vUp [1- offset ] = start4+1;
vUp [ i - offset ] = start1+1;
vUp [1- offset ] = results1+1;
vUp [1- offset ] = end1+1) ;
vUp [1- offset +1] = end1+1;
vUp [2- offset ] = start1+1;
vUp [1- offset ] = start1+1;
vUp [0- offset ] = start1+1;
vUp [4- offset ] = start1+1;
vUp [1- offset ] = end1+1-1;
vUp [0- offset ] = start1+1;
vUp [1- offset - offset ] = start1+1;
vUp [ i - offset ] = end2+1;
vUp [ i - offset ] = end1+1;
vUp [ i - offset ] = end0+1;
vUp [ i - offset ] = end4+1;
vDown [ i - offset ] = end1+1;
vUp [ i - offset - offset ] = end1+1;
vUp [2- offset - offset ] = end1+1;
vUp [1- offset - offset ] = end1+1;
vUp [0- offset - offset ] = end1+1;
vUp [4- offset - offset ] = end1+1;
vUp [1- offset ] = start1+1+1;
vUp [1- offset ] = start1+2;
vUp [1- offset ] = start1+1;
vUp [1- offset ] = start1+0;
vUp [1- offset ] = start1+4;
vUp [1- offset ] = end1) ;
vUp [1- offset - offset ] = end2+1;
vUp [1- offset - offset ] = end1+1;
vUp [1- offset - offset ] = end0+1;
vUp [1- offset - offset ] = end4+1;
vUp [0- offset - offset ] = end1+1;
vUp [ i - offset ] = end1+1+1;
vUp [2- offset ] = end2+1;
vUp [1- offset ] = end1+1;
vUp [0- offset ] = end0+1;
vUp [4- offset ] = end4+1;
vUp [1- offset + offset ] = end1+1;
vUp [ i - offset ] = end1+2;
vUp [ i - offset ] = end1+1;
vUp [ i - offset ] = end1+0;
vUp [ i - offset ] = end1+4;
vUp [0- offset ] = end2+1;
vUp [0- offset ] = end1+1;
vUp [0- offset ] = end0+1;
vUp [0- offset ] = end4+1;
vUp [1- offset ] = end1- offset -1;
vUp [1- offset ] = direction1+1;
vUp [1- offset ] = results2+1;
vUp [1- offset ] = results1+1;
vUp [1- offset ] = results0+1;
vUp [1- offset ] = results4+1;
vDown [1- offset ] = start1+1;
wUp [1- offset ] = end1+1;
vUp [1- offset ] = array1+1;
vUp [1- offset ] = end1+ offset -1;
vUp [1- offset ] = end1) +1;
vUp [1- offset ] = end2+2;
vUp [1- offset ] = end1+1;
vUp [1- offset ] = end0+0;
vUp [1- offset ] = end4+4;
vUp [1- offset ] = start - offset1+1;
vDown [2- offset ] = end1+1;
vDown [1- offset ] = end1+1;
vDown [0- offset ] = end1+1;
vDown [4- offset ] = end1+1;
vUp [2- offset ] = end1+1+1;
vUp [1- offset ] = end1+1+1;
vUp [0- offset ] = end1+1+1;
vUp [4- offset ] = end1+1+1;
vDown [0- offset ] = end1+1;
vUp [1- offset ] = capacity1+1;
vUp [ i - offset ] = start2+1;
vUp [ i - offset ] = start1+1;
vUp [ i - offset ] = start0+1;
vUp [ i - offset ] = start4+1;
vUp [1- offset ] = end1;
