} else if( true ) {
} else if( ! isEmpty( ) ) {
} else if( false ) {
} else if( isEmpty( ) ) {
} else if( ! true ) {
} else if( isShowing( ) ) {
} else if( ! isShowing( ) ) {
} else if( ! isClosed( ) ) {
} else if( isClosed( ) ) {
} else if( ! isNull( ) ) {
} else if( ! cursor.isEmpty( ) ) {
} else if( ! isAllowed( ) ) {
} else if( ! status.isEmpty( ) ) {
} else if( isVisible( ) ) {
} else if( ! isValid( ) ) {
} else if( ! isConnected( ) ) {
} else if( isAllowed( ) ) {
} else if( isNull( ) ) {
} else if( ! isDeleted( ) ) {
} else if( isCanceled( ) ) {
} else if( ! isNotEmpty( ) ) {
} else if( ! false ) {
} else if( isValid( ) ) {
} else if( ! isVisible( ) ) {
} else if( isAlive( ) ) {
} else if( isFinished( ) ) {
} else if( isFirst( ) ) {
} else if( ! status.equals( '') ) {
} else if( ! status.equals( 'License') ) {
} else if( ! status.equals( '(line ') ) {
} else if( ! status.equals( ' + getLineNumber() + ') ) {
} else if( ! status.equals( ' + startLineNumber + ') ) {
} else if( ! status.equals( "", '') or using escaping (as in \") ) {
} else if( ! status.equals( 'readAgain') ) {
} else if( ! status.equals( ') EOF reached before encapsulated token finished') ) {
} else if( ! status.equals( '\n') ) {
} else if( ! status.equals( 'AS IS') ) {
} else if( ! status.equals( '\r') ) {
} else if( ! status.equals( '(startline ') ) {
} else if( ! status.equals( "') or using escaping (as in \", \") ) {
} else if( ! status.equals( ') invalid char between encapsulated token and delimiter') ) {
} else if( ! status.equals( ' || lastChar == ') ) {
} else if( isConnected( ) ) {
} else if( true ) ) {
} else if( ! isCanceled( ) ) {
} else if( ! ''.equals( '') ) {
} else if( ! 'License'.equals( 'License') ) {
} else if( ! '(line '.equals( '(line ') ) {
} else if( ! ' + getLineNumber() + '.equals( ' + getLineNumber() + ') ) {
} else if( ! ' + startLineNumber + '.equals( ' + startLineNumber + ') ) {
} else if( ! "", '') or using escaping (as in \".equals( "", '') or using escaping (as in \") ) {
} else if( ! 'readAgain'.equals( 'readAgain') ) {
} else if( ! ') EOF reached before encapsulated token finished'.equals( ') EOF reached before encapsulated token finished') ) {
} else if( ! '\n'.equals( '\n') ) {
} else if( ! 'AS IS'.equals( 'AS IS') ) {
} else if( ! '\r'.equals( '\r') ) {
} else if( ! '(startline '.equals( '(startline ') ) {
} else if( ! "') or using escaping (as in \", \".equals( "') or using escaping (as in \", \") ) {
} else if( ! ') invalid char between encapsulated token and delimiter'.equals( ') invalid char between encapsulated token and delimiter') ) {
} else if( ! ' || lastChar == '.equals( ' || lastChar == ') ) {
} else if( ! isLine( ) ) {
} else if( ! isFirst( ) ) {
} else if( ! isLocked( ) ) {
} else if( isDeleted( ) ) {
} else if( ! isAlive( ) ) {
} else if( ! isAdded( ) ) {
} else if( ! isFinished( ) ) {
} else if( isNotEmpty( ) ) {
} else if( ! isDisposed( ) ) {
} else if( isAdded( ) ) {
} else if( isDelete( ) ) {
} else if( isLine( ) ) {
} else if( status.isEmpty( ) ) {
} else if( isLocked( ) ) {
} else if( ! isEqual( '') ) {
} else if( ! isEqual( 'License') ) {
} else if( ! isEqual( '(line ') ) {
} else if( ! isEqual( ' + getLineNumber() + ') ) {
} else if( ! isEqual( ' + startLineNumber + ') ) {
} else if( ! isEqual( "", '') or using escaping (as in \") ) {
} else if( ! isEqual( 'readAgain') ) {
} else if( ! isEqual( ') EOF reached before encapsulated token finished') ) {
} else if( ! isEqual( '\n') ) {
} else if( ! isEqual( 'AS IS') ) {
} else if( ! isEqual( '\r') ) {
} else if( ! isEqual( '(startline ') ) {
} else if( ! isEqual( "') or using escaping (as in \", \") ) {
} else if( ! isEqual( ') invalid char between encapsulated token and delimiter') ) {
} else if( ! isEqual( ' || lastChar == ') ) {
} else if( isDisposed( ) ) {
} else if( ! isDelete( ) ) {
} else if( isEqual( '') ) {
} else if( isEqual( 'License') ) {
} else if( isEqual( '(line ') ) {
} else if( isEqual( ' + getLineNumber() + ') ) {
} else if( isEqual( ' + startLineNumber + ') ) {
} else if( isEqual( "", '') or using escaping (as in \") ) {
} else if( isEqual( 'readAgain') ) {
} else if( isEqual( ') EOF reached before encapsulated token finished') ) {
} else if( isEqual( '\n') ) {
