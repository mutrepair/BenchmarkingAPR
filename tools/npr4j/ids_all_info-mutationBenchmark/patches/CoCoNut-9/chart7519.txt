return this.getName( ).equals( 'PlotOrientation.HORIZONTAL') ;
return this.getName( ).equals( 'PlotOrientation.VERTICAL') ;
throw new IllegalStateException( 'PlotOrientation.HORIZONTAL') ;
throw new IllegalStateException( 'PlotOrientation.VERTICAL') ;
throw new IllegalArgumentException( 'PlotOrientation.HORIZONTAL') ;
throw new IllegalArgumentException( 'PlotOrientation.VERTICAL') ;
return this.getClass( ).isEmpty( ) ;
return this.getResources( ).isEmpty( ) ;
return this.getName( ).isEmpty( ) ;
return this.getInstance( ).isEmpty( ) ;
return concept.toString( ).equals( 'PlotOrientation.HORIZONTAL') ;
return concept.toString( ).equals( 'PlotOrientation.VERTICAL') ;
throw new RuntimeException( e.getMessage( ) ) ;
return this.getName( ).equals( 'PlotOrientation.HORIZONTAL') ) ;
return this.getName( ).equals( 'PlotOrientation.VERTICAL') ) ;
return this.getText( ).isEmpty( ) ;
throw new IllegalStateException( ) ;
return this.getText( ).equals( 'PlotOrientation.HORIZONTAL') ;
return this.getText( ).equals( 'PlotOrientation.VERTICAL') ;
return this.getResources( ).getBoolean( 'PlotOrientation.HORIZONTAL') ;
return this.getResources( ).getBoolean( 'PlotOrientation.VERTICAL') ;
return this.getName( ).toString( ) ;
throw new IllegalStateException( ).isEmpty( ) ;
return this.getClass( ).getName( ) ;
return this.getId( ).equals( 'PlotOrientation.HORIZONTAL') ;
return this.getId( ).equals( 'PlotOrientation.VERTICAL') ;
return this.getBoolean( 'PlotOrientation.HORIZONTAL').isEmpty( ) ;
return this.getBoolean( 'PlotOrientation.VERTICAL').isEmpty( ) ;
return concept.toString( ).equals( 'PlotOrientation.HORIZONTAL') ) ;
return concept.toString( ).equals( 'PlotOrientation.VERTICAL') ) ;
return this.getText( ).toString( ) ;
return concept.replace( 'PlotOrientation.HORIZONTAL', 'PlotOrientation.HORIZONTAL') ;
return concept.replace( 'PlotOrientation.VERTICAL', 'PlotOrientation.VERTICAL') ;
return this.getResources( ).getName( ) ;
 return( e.getMessage( ).equals( 'PlotOrientation.HORIZONTAL') ) ;
 return( e.getMessage( ).equals( 'PlotOrientation.VERTICAL') ) ;
return 'PlotOrientation.HORIZONTAL'+ this.getName( ).equals( 'PlotOrientation.HORIZONTAL') ;
return 'PlotOrientation.VERTICAL'+ this.getName( ).equals( 'PlotOrientation.VERTICAL') ;
return this.getName( ).compareWith( 'PlotOrientation.HORIZONTAL') ;
return this.getName( ).compareWith( 'PlotOrientation.VERTICAL') ;
return this.getClass( ).getBoolean( 'PlotOrientation.HORIZONTAL') ;
return this.getClass( ).getBoolean( 'PlotOrientation.VERTICAL') ;
throw new IllegalStateException( ).toString( ) ;
return this.toString( ).equals( 'PlotOrientation.HORIZONTAL') ;
return this.toString( ).equals( 'PlotOrientation.VERTICAL') ;
return this.getText( ).equals( 'PlotOrientation.HORIZONTAL') ) ;
return this.getText( ).equals( 'PlotOrientation.VERTICAL') ) ;
return this.get( ).isEmpty( ) ;
return concept.toString( ).trim( ) ;
return this.getClass( ).isEmpty( ) ) ;
return concept.isEmpty( ) ;
return this.isEmpty( ) ;
throw new IllegalStateException( 'PlotOrientation.HORIZONTAL').equals( 'PlotOrientation.HORIZONTAL') ;
throw new IllegalStateException( 'PlotOrientation.VERTICAL').equals( 'PlotOrientation.VERTICAL') ;
return concept.get( ).isEmpty( ) ;
return this.getId( ).equals( 'PlotOrientation.HORIZONTAL') ) ;
return this.getId( ).equals( 'PlotOrientation.VERTICAL') ) ;
throw new IllegalStateException( ).trim( ) ;
return this.config.getText( ).equals( 'PlotOrientation.HORIZONTAL') ;
return this.config.getText( ).equals( 'PlotOrientation.VERTICAL') ;
throw new IllegalStateException( ).equals( 'PlotOrientation.HORIZONTAL') ;
throw new IllegalStateException( ).equals( 'PlotOrientation.VERTICAL') ;
return ! this.isEmpty( ) ;
return this.config.isEmpty( ) ;
return this.getName( ).equals( value ) ;
return this.uuid.isEmpty( ) ;
return this.getName( ).compareTo( 'PlotOrientation.HORIZONTAL') ;
return this.getName( ).compareTo( 'PlotOrientation.VERTICAL') ;
return this.getValue( ).equals( 'PlotOrientation.HORIZONTAL') ;
return this.getValue( ).equals( 'PlotOrientation.VERTICAL') ;
return this.toString( ).equals( 'PlotOrientation.HORIZONTAL') ) ;
return this.toString( ).equals( 'PlotOrientation.VERTICAL') ) ;
return this.getBoolean( 'PlotOrientation.HORIZONTAL').equals( 'PlotOrientation.HORIZONTAL') ;
return this.getBoolean( 'PlotOrientation.VERTICAL').equals( 'PlotOrientation.VERTICAL') ;
return ! this.isEmpty( ) ) return true ;
return this.getPath( ).equals( 'PlotOrientation.HORIZONTAL') ;
return this.getPath( ).equals( 'PlotOrientation.VERTICAL') ;
return e.getMessage( ).equals( 'PlotOrientation.HORIZONTAL') ;
return e.getMessage( ).equals( 'PlotOrientation.VERTICAL') ;
return this.getMessage( ).equals( 'PlotOrientation.HORIZONTAL') ;
return this.getMessage( ).equals( 'PlotOrientation.VERTICAL') ;
return concept.toString( ).contains( 'PlotOrientation.HORIZONTAL') ;
return concept.toString( ).contains( 'PlotOrientation.VERTICAL') ;
return this.getName( ).equals( value ) ) ;
return new ArrayList < String >( ) ;
return this.getName( ).compare( 'PlotOrientation.HORIZONTAL') ;
return this.getName( ).compare( 'PlotOrientation.VERTICAL') ;
return System.currentTimeMillis( ) ;
return this.getClass( ).equals( 'PlotOrientation.HORIZONTAL') ;
return this.getClass( ).equals( 'PlotOrientation.VERTICAL') ;
return ! this.isEmpty( ) ) return false ;
return this.getCode( ).equals( 'PlotOrientation.HORIZONTAL') ;
return this.getCode( ).equals( 'PlotOrientation.VERTICAL') ;
return super.isEmpty( ) ;
return this.getType( ).equals( 'PlotOrientation.HORIZONTAL') ;
return this.getType( ).equals( 'PlotOrientation.VERTICAL') ;
return this.date.isEmpty( ) ;
throw new IllegalArgumentException( ) ;
return this.getClass( ).get(0) ;
return this.getResources( ).get(0) ;
