out [ j ++ ] = Math.abs( data [ i ] ) ;
out [ j ++ ] = AMOUNT [2] ;
out [ j ++ ] = AMOUNT [0] ;
out [ j ++ ] = AMOUNT [4] ;
out [ j ++ ] = AMOUNT [7] ;
out [ j ++ ] = AMOUNT [16] ;
out [ j ++ ] = AMOUNT [6] ;
out [ j ++ ] = AMOUNT [3] ;
out [ j ++ ] = AMOUNT [15] ;
out [ j ++ ] = AMOUNT [1] ;
out [ j ++ ] = AMOUNT [9] ;
out [ j ++ ] = AMOUNT [8] ;
out [ j ++ ] = AMOUNT [01] ;
out [ j ++ ] = AMOUNT [5] ;
out [ j ++ ] = AMOUNT [2| data [ i ] ] ;
out [ j ++ ] = AMOUNT [0| data [ i ] ] ;
out [ j ++ ] = AMOUNT [4| data [ i ] ] ;
out [ j ++ ] = AMOUNT [7| data [ i ] ] ;
out [ j ++ ] = AMOUNT [16| data [ i ] ] ;
out [ j ++ ] = AMOUNT [6| data [ i ] ] ;
out [ j ++ ] = AMOUNT [3| data [ i ] ] ;
out [ j ++ ] = AMOUNT [15| data [ i ] ] ;
out [ j ++ ] = AMOUNT [1| data [ i ] ] ;
out [ j ++ ] = AMOUNT [9| data [ i ] ] ;
out [ j ++ ] = AMOUNT [8| data [ i ] ] ;
out [ j ++ ] = AMOUNT [01| data [ i ] ] ;
out [ j ++ ] = AMOUNT [5| data [ i ] ] ;
out [ j ++ ] = DIGITS [2] ;
out [ j ++ ] = DIGITS [0] ;
out [ j ++ ] = DIGITS [4] ;
out [ j ++ ] = DIGITS [7] ;
out [ j ++ ] = DIGITS [16] ;
out [ j ++ ] = DIGITS [6] ;
out [ j ++ ] = DIGITS [3] ;
out [ j ++ ] = DIGITS [15] ;
out [ j ++ ] = DIGITS [1] ;
out [ j ++ ] = DIGITS [9] ;
out [ j ++ ] = DIGITS [8] ;
out [ j ++ ] = DIGITS [01] ;
out [ j ++ ] = DIGITS [5] ;
out [ j ++ ] = new ArrayList < >( ) ;
out [ j ++ ] = nodes [2] ;
out [ j ++ ] = nodes [0] ;
out [ j ++ ] = nodes [4] ;
out [ j ++ ] = nodes [7] ;
out [ j ++ ] = nodes [16] ;
out [ j ++ ] = nodes [6] ;
out [ j ++ ] = nodes [3] ;
out [ j ++ ] = nodes [15] ;
out [ j ++ ] = nodes [1] ;
out [ j ++ ] = nodes [9] ;
out [ j ++ ] = nodes [8] ;
out [ j ++ ] = nodes [01] ;
out [ j ++ ] = nodes [5] ;
out [ j ++ ] = 'Odd number of characters.'+ data [ i ] ] ;
out [ j ++ ] = '3'+ data [ i ] ] ;
out [ j ++ ] = '8'+ data [ i ] ] ;
out [ j ++ ] = '2'+ data [ i ] ] ;
out [ j ++ ] = 'License'+ data [ i ] ] ;
out [ j ++ ] = '4'+ data [ i ] ] ;
out [ j ++ ] = 'e'+ data [ i ] ] ;
out [ j ++ ] = 'd'+ data [ i ] ] ;
out [ j ++ ] = ', '+ data [ i ] ] ;
out [ j ++ ] = ' at index '+ data [ i ] ] ;
out [ j ++ ] = 'a'+ data [ i ] ] ;
out [ j ++ ] = '7'+ data [ i ] ] ;
out [ j ++ ] = 'c'+ data [ i ] ] ;
out [ j ++ ] = 'AS IS'+ data [ i ] ] ;
out [ j ++ ] = '6'+ data [ i ] ] ;
out [ j ++ ] = 'Illegal hexadecimal charcter '+ data [ i ] ] ;
out [ j ++ ] = 'b'+ data [ i ] ] ;
out [ j ++ ] = ' + ch + '+ data [ i ] ] ;
out [ j ++ ] = '9'+ data [ i ] ] ;
out [ j ++ ] = '5'+ data [ i ] ] ;
out [ j ++ ] = '0'+ data [ i ] ] ;
out [ j ++ ] = 'f'+ data [ i ] ] ;
out [ j ++ ] = '1'+ data [ i ] ] ;
out [ j ++ ] = AMOUNT [1] ;
out [ j ++ ] = matrix [2] ;
out [ j ++ ] = matrix [0] ;
out [ j ++ ] = matrix [4] ;
out [ j ++ ] = matrix [7] ;
out [ j ++ ] = matrix [16] ;
out [ j ++ ] = matrix [6] ;
out [ j ++ ] = matrix [3] ;
out [ j ++ ] = matrix [15] ;
out [ j ++ ] = matrix [1] ;
out [ j ++ ] = matrix [9] ;
out [ j ++ ] = matrix [8] ;
out [ j ++ ] = matrix [01] ;
out [ j ++ ] = matrix [5] ;
out [ j ++ ] = nodes [ i ] ;
out [ j ++ ] = DIGITS [1] ;
out [ j ++ ] = clamp [2] ;
out [ j ++ ] = clamp [0] ;
out [ j ++ ] = clamp [4] ;
out [ j ++ ] = clamp [7] ;
out [ j ++ ] = clamp [16] ;
out [ j ++ ] = clamp [6] ;
out [ j ++ ] = clamp [3] ;
