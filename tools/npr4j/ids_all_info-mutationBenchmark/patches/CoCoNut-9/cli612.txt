sb.append( 'optPrefix'+ text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( '   '+ text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( '\n'+ text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( ','+ text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( 'usage: '+ text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( ' <'+ text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( 'License'+ text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( 'descPadding'+ text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( ') && (c != '+ text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( '>'+ text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( 'leftPadding'+ text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( 'newLine'+ text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( '['+ text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( ').append(option.getArgName()).append('+ text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( ' '+ text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( 'AS IS'+ text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( ']'+ text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( '-'+ text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( 'argName'+ text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( 'line.separator'+ text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( 'syntaxPrefix'+ text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( 'arg'+ text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( 'cmdLineSyntax not provided'+ text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( ' | '+ text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( '--'+ text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( '\r'+ text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( '\t'+ text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( 'longOptPrefix'+ text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( 'width'+ text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( 'optPrefix').append( defaultNewLine ) ).append( defaultNewLine ) ;
sb.append( '   ').append( defaultNewLine ) ).append( defaultNewLine ) ;
sb.append( '\n').append( defaultNewLine ) ).append( defaultNewLine ) ;
sb.append( ',').append( defaultNewLine ) ).append( defaultNewLine ) ;
sb.append( 'usage: ').append( defaultNewLine ) ).append( defaultNewLine ) ;
sb.append( ' <').append( defaultNewLine ) ).append( defaultNewLine ) ;
sb.append( 'License').append( defaultNewLine ) ).append( defaultNewLine ) ;
sb.append( 'descPadding').append( defaultNewLine ) ).append( defaultNewLine ) ;
sb.append( ') && (c != ').append( defaultNewLine ) ).append( defaultNewLine ) ;
sb.append( '>').append( defaultNewLine ) ).append( defaultNewLine ) ;
sb.append( 'leftPadding').append( defaultNewLine ) ).append( defaultNewLine ) ;
sb.append( 'newLine').append( defaultNewLine ) ).append( defaultNewLine ) ;
sb.append( '[').append( defaultNewLine ) ).append( defaultNewLine ) ;
sb.append( ').append(option.getArgName()).append(').append( defaultNewLine ) ).append( defaultNewLine ) ;
sb.append( ' ').append( defaultNewLine ) ).append( defaultNewLine ) ;
sb.append( 'AS IS').append( defaultNewLine ) ).append( defaultNewLine ) ;
sb.append( ']').append( defaultNewLine ) ).append( defaultNewLine ) ;
sb.append( '-').append( defaultNewLine ) ).append( defaultNewLine ) ;
sb.append( 'argName').append( defaultNewLine ) ).append( defaultNewLine ) ;
sb.append( 'line.separator').append( defaultNewLine ) ).append( defaultNewLine ) ;
sb.append( 'syntaxPrefix').append( defaultNewLine ) ).append( defaultNewLine ) ;
sb.append( 'arg').append( defaultNewLine ) ).append( defaultNewLine ) ;
sb.append( 'cmdLineSyntax not provided').append( defaultNewLine ) ).append( defaultNewLine ) ;
sb.append( ' | ').append( defaultNewLine ) ).append( defaultNewLine ) ;
sb.append( '--').append( defaultNewLine ) ).append( defaultNewLine ) ;
sb.append( '\r').append( defaultNewLine ) ).append( defaultNewLine ) ;
sb.append( '\t').append( defaultNewLine ) ).append( defaultNewLine ) ;
sb.append( 'longOptPrefix').append( defaultNewLine ) ).append( defaultNewLine ) ;
sb.append( 'width').append( defaultNewLine ) ).append( defaultNewLine ) ;
sb.append( 'optPrefix'+( text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( '   '+( text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( '\n'+( text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( ','+( text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( 'usage: '+( text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( ' <'+( text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( 'License'+( text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( 'descPadding'+( text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( ') && (c != '+( text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( '>'+( text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( 'leftPadding'+( text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( 'newLine'+( text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( '['+( text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( ').append(option.getArgName()).append('+( text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( ' '+( text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( 'AS IS'+( text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( ']'+( text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( '-'+( text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( 'argName'+( text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( 'line.separator'+( text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( 'syntaxPrefix'+( text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( 'arg'+( text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( 'cmdLineSyntax not provided'+( text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( ' | '+( text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( '--'+( text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( '\r'+( text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( '\t'+( text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( 'longOptPrefix'+( text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( 'width'+( text.substring(1, pos ) ) ).append( defaultNewLine ) ;
sb.append( 'optPrefix'+ text.substring(0, pos ) ) ).append( defaultNewLine ) ;
sb.append( '   '+ text.substring(0, pos ) ) ).append( defaultNewLine ) ;
sb.append( '\n'+ text.substring(0, pos ) ) ).append( defaultNewLine ) ;
sb.append( ','+ text.substring(0, pos ) ) ).append( defaultNewLine ) ;
sb.append( 'usage: '+ text.substring(0, pos ) ) ).append( defaultNewLine ) ;
sb.append( ' <'+ text.substring(0, pos ) ) ).append( defaultNewLine ) ;
sb.append( 'License'+ text.substring(0, pos ) ) ).append( defaultNewLine ) ;
sb.append( 'descPadding'+ text.substring(0, pos ) ) ).append( defaultNewLine ) ;
sb.append( ') && (c != '+ text.substring(0, pos ) ) ).append( defaultNewLine ) ;
sb.append( '>'+ text.substring(0, pos ) ) ).append( defaultNewLine ) ;
sb.append( 'leftPadding'+ text.substring(0, pos ) ) ).append( defaultNewLine ) ;
sb.append( 'newLine'+ text.substring(0, pos ) ) ).append( defaultNewLine ) ;
sb.append( '['+ text.substring(0, pos ) ) ).append( defaultNewLine ) ;
