messageHasDesc = true ;
messageHasDesc = false ;
messageHasDesc =( messageHasDesc ) ;
messageHasDesc = new ArrayList < >( false ) ;
messageHasDesc = new ArrayList < >( ) ;
messageHasDesc = new ArrayList < >( true ) ;
messageHasDesc = messageHasDesc = false ;
messageHasDesc = true ) messageHasDesc = true ;
messageHasDesc = messageHasDesc = true ;
messageHasDesc = System.currentTimeMillis( ) ;
messageHasDesc = true ) messageHasDesc = false ;
messageHasDesc = new messageHasDesc( false ) ;
messageHasDesc =( messageHasDesc , false ) ;
messageHasDesc = messageHasDesc ;
messageHasDesc = messageHasDesc( false ) ;
messageHasDesc = null ;
messageHasDesc = new MessageHasDesc( false ) ;
messageHasDesc = new ArrayList < String >( ) ;
messageHasDesc = new messageHasDesc( ) ;
messageHasDesc = new messageHasDesc( true ) ;
messageHasDesc = message.getMessage( ) ;
messageHasDesc = this.messageHasDesc = false ;
messageHasDesc = this.messageHasDesc ;
messageHasDesc = messageHasDesc + '} or {@code ';
messageHasDesc = messageHasDesc + ' + ';
messageHasDesc = messageHasDesc + 'License';
messageHasDesc = messageHasDesc + 'MSG_UNNAMED_\\d+';
messageHasDesc = messageHasDesc + 'goog';
messageHasDesc = messageHasDesc + 'someUserName';
messageHasDesc = messageHasDesc + 'Message';
messageHasDesc = messageHasDesc + ' ';
messageHasDesc = messageHasDesc + '() function could be used only with MSG_* property or variable';
messageHasDesc = messageHasDesc + 'JSC_MSG_HAS_NO_DESCRIPTION';
messageHasDesc = messageHasDesc + 'Unrecognized message placeholder referenced: ';
messageHasDesc = messageHasDesc + 'JSC_MSG_ORPHANED_NODE';
messageHasDesc = messageHasDesc + 'JSC_MSG_HAS_NO_VALUE';
messageHasDesc = messageHasDesc + 'Message value of {0} is just an empty string. ';
messageHasDesc = messageHasDesc + 'Please use ';
messageHasDesc = messageHasDesc + 'JSC_MSG_HAS_NO_TEXT';
messageHasDesc = messageHasDesc + 'Expected node type ';
messageHasDesc = messageHasDesc + 'JSC_MSG_KEY_DUPLICATED';
messageHasDesc = messageHasDesc + 'Message {0} has no description. Add @desc JsDoc tag.';
messageHasDesc = messageHasDesc + 'name';
messageHasDesc = messageHasDesc + 's';
messageHasDesc = messageHasDesc + 'Cannot parse value of message ';
messageHasDesc = messageHasDesc + 'standard';
messageHasDesc = messageHasDesc + '\0';
messageHasDesc = messageHasDesc + 'duplicate message variable name found for {0}, ';
messageHasDesc = messageHasDesc + 'Message parse tree malformed. {0}';
messageHasDesc = messageHasDesc + 'STRING or ADD node expected; found: ';
messageHasDesc = messageHasDesc + 'JSC_MSG_FALLBACK_ARG_ERROR';
messageHasDesc = messageHasDesc + 'A4_LETTER';
messageHasDesc = messageHasDesc + 'JSC_MSG_TREE_MALFORMED';
messageHasDesc = messageHasDesc + ' + type + ';
messageHasDesc = messageHasDesc + 'Message string literal expected';
messageHasDesc = messageHasDesc + 'STRING, NAME, or ADD node expected; found: ';
messageHasDesc = messageHasDesc + 'getMsg';
messageHasDesc = messageHasDesc + 'Some untrackable message';
messageHasDesc = messageHasDesc + 'getProductName';
messageHasDesc = messageHasDesc + 'str';
messageHasDesc = messageHasDesc + 'Placeholder incorrectly formatted in: ';
messageHasDesc = messageHasDesc + '_';
messageHasDesc = messageHasDesc + 'START_SPAN_1_23';
messageHasDesc = messageHasDesc + 'message node {0} has no value';
messageHasDesc = messageHasDesc + 'goog.getMsg';
messageHasDesc = messageHasDesc + 'product';
messageHasDesc = messageHasDesc + 'NAME, LP, or BLOCK node expected; found: ';
messageHasDesc = messageHasDesc + 'MSG_';
messageHasDesc = messageHasDesc + '@hidden';
messageHasDesc = messageHasDesc + 'OBJLIT node expected';
messageHasDesc = messageHasDesc + 'Placeholder name not in lowerCamelCase: ';
messageHasDesc = messageHasDesc + 'JSC_MSG_NOT_INITIALIZED_USING_NEW_SYNTAX';
messageHasDesc = messageHasDesc + 'Hi {$userName}! Welcome to {$product}.';
messageHasDesc = messageHasDesc + 'Message initialized using unrecognized function. ';
messageHasDesc = messageHasDesc + 'AS IS';
messageHasDesc = messageHasDesc + 'message not initialized using ';
messageHasDesc = messageHasDesc + 'Could not find message entry for fallback argument {0}';
messageHasDesc = messageHasDesc + '; found: ';
messageHasDesc = messageHasDesc + 'r';
messageHasDesc = messageHasDesc + 'http://code.google.com/p/closure-templates/';
messageHasDesc = messageHasDesc + '[a-z][a-zA-Z\\d]*[_\\d]*';
messageHasDesc = messageHasDesc + 'JSC_MSG_BAD_FALLBACK_SYNTAX';
messageHasDesc = messageHasDesc + 'Bad syntax. ';
messageHasDesc = messageHasDesc + 'startSpan_1_23';
messageHasDesc = messageHasDesc + 'Expected syntax: goog.getMsgWithFallback(MSG_1, MSG_2)';
messageHasDesc = messageHasDesc + '_HELP';
messageHasDesc = messageHasDesc + 'NAME';
messageHasDesc = messageHasDesc + '() instead.';
messageHasDesc = messageHasDesc + 'initial definition {1}:{2}';
messageHasDesc = messageHasDesc + 'a4Letter';
messageHasDesc = messageHasDesc + '; found: null';
messageHasDesc = messageHasDesc + 'Unused message placeholder: ';
messageHasDesc = messageHasDesc + 'Message must be initialized using ';
messageHasDesc = messageHasDesc + 'RETURN node expected; found: ';
messageHasDesc = messageHasDesc + '}';
messageHasDesc = messageHasDesc + 'STRING_KEY node expected as OBJLIT key';
messageHasDesc = messageHasDesc + ' function.';
messageHasDesc = messageHasDesc + '{$';
messageHasDesc = messageHasDesc + ' + MSG_FUNCTION_NAME + ';
messageHasDesc = messageHasDesc + 'Empty messages are forbidden.';
