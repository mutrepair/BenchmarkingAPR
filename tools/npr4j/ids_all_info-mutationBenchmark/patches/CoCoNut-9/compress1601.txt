result [0] =( byte )( value & BYTE_MASK ) ;
result [ -1] =( byte )( value & BYTE_MASK ) ;
result [1] =( byte )( value & BYTE_MASK ) ;
result [0] =( byte )( value & BYTE_POS ) ;
result [ -1] =( byte )( value & BYTE_POS ) ;
result [ -1] =( byte )(( value & BYTE_MASK ) ) ;
result [0] =( byte )(( value & BYTE_MASK ) ) ;
result [1] =( byte )( value & BYTE_POS ) ;
result [ -1] =( byte )(( value & BYTE_POS ) ) ;
result [2] =( byte )( value & BYTE_MASK ) ;
result [0] =( byte )( value & BYTE_MASK ) ;
result [00] =( byte )( value & BYTE_MASK ) ;
result [1] =( byte )( value & BYTE_MASK ) ;
result [8] =( byte )( value & BYTE_MASK ) ;
result [1] =( byte )(( value & BYTE_MASK ) ) ;
result [ -1] =( byte )( value >> BYTE_MASK ) ;
result [0] =( byte )(( value & BYTE_POS ) ) ;
result [ ] [ -1] =( byte )( value & BYTE_MASK ) ;
result [ -1] =( byte )( value | BYTE_MASK ) ;
result [1] =( byte )(( value & BYTE_POS ) ) ;
result [0] =( byte )( value | BYTE_MASK ) ;
result [ -1] =( byte )( value + BYTE_MASK ) ;
result [0] =( byte )( value >> BYTE_MASK ) ;
result [ i ] =( byte )( value & BYTE_MASK ) ;
result [2] =( byte )( value & BYTE_POS ) ;
result [0] =( byte )( value & BYTE_POS ) ;
result [00] =( byte )( value & BYTE_POS ) ;
result [1] =( byte )( value & BYTE_POS ) ;
result [8] =( byte )( value & BYTE_POS ) ;
result [ ] [0] =( byte )( value & BYTE_MASK ) ;
result [2] =( byte )(( value & BYTE_MASK ) ) ;
result [0] =( byte )(( value & BYTE_MASK ) ) ;
result [00] =( byte )(( value & BYTE_MASK ) ) ;
result [1] =( byte )(( value & BYTE_MASK ) ) ;
result [8] =( byte )(( value & BYTE_MASK ) ) ;
result [1] =( byte )( value | BYTE_MASK ) ;
result [ ] [ -1] =( byte )( value & BYTE_POS ) ;
result [ -1] =( byte )( value - BYTE_MASK ) ;
result [1] =( byte )( value >> BYTE_MASK ) ;
result [2] =( byte )(( value & BYTE_POS ) ) ;
result [0] =( byte )(( value & BYTE_POS ) ) ;
result [00] =( byte )(( value & BYTE_POS ) ) ;
result [1] =( byte )(( value & BYTE_POS ) ) ;
result [8] =( byte )(( value & BYTE_POS ) ) ;
result [ -1] =( byte )( value >> BYTE_POS ) ;
result [ ] [0] =( byte )( value & BYTE_POS ) ;
result [ ] [1] =( byte )( value & BYTE_MASK ) ;
result [ ] [ ] =( byte )( value & BYTE_MASK ) ;
result [ i ] =( byte )( value & BYTE_POS ) ;
result [0] =( byte )( value - BYTE_MASK ) ;
result [ i ] =( byte )(( value & BYTE_MASK ) ) ;
result [0] =( byte )( value + BYTE_MASK ) ;
result [ -1] =( byte )( value ) ;
result [ -1] =( byte )( value == BYTE_MASK ) ;
result [ -1] =( byte )( value == BYTE_POS ) ;
result [0] =( byte )(( value & BYTE_MASK ) ;
result [ ++ ] =( byte )( value & BYTE_MASK ) ;
result [ -1] =( byte )( value & BYTE_MASK_MASK ) ;
result [ ] [ -1] =( byte )( value >> BYTE_MASK ) ;
result [0] =( int )( value & BYTE_MASK ) ;
result [ -2] =( byte )( value & BYTE_MASK ) ;
result [ -0] =( byte )( value & BYTE_MASK ) ;
result [ -00] =( byte )( value & BYTE_MASK ) ;
result [ -1] =( byte )( value & BYTE_MASK ) ;
result [ -8] =( byte )( value & BYTE_MASK ) ;
result [ ] =( byte )( value & BYTE_MASK ) ;
result [0-1] =( byte )( value & BYTE_MASK ) ;
result [0] =( byte )( value & BYTE_MASK_MASK ) ;
result [ ] [1] =( byte )( value & BYTE_POS ) ;
result [0] =( byte )( value == BYTE_POS ) ;
result [1] =( byte )( value + BYTE_MASK ) ;
result [ -1] =( byte )( value | BYTE_POS ) ;
result [0] =( byte )( value >> BYTE_POS ) ;
result [1] =( byte )( value - BYTE_MASK ) ;
result [0] =( byte )( value == BYTE_MASK ) ;
result [0] =( byte )( value | BYTE_POS ) ;
result [2] =( byte )( value | BYTE_MASK ) ;
result [0] =( byte )( value | BYTE_MASK ) ;
result [00] =( byte )( value | BYTE_MASK ) ;
result [1] =( byte )( value | BYTE_MASK ) ;
result [8] =( byte )( value | BYTE_MASK ) ;
result [1] =( byte )(( value & BYTE_MASK ) ;
result [ i -1] =( byte )( value & BYTE_MASK ) ;
result [ -1] =( byte )(( value & BYTE_MASK ) ;
result [ i ] =( byte )(( value & BYTE_POS ) ) ;
result [2] =( byte )( value >> BYTE_MASK ) ;
result [0] =( byte )( value >> BYTE_MASK ) ;
result [00] =( byte )( value >> BYTE_MASK ) ;
result [1] =( byte )( value >> BYTE_MASK ) ;
result [8] =( byte )( value >> BYTE_MASK ) ;
result [0] =( byte )(( value & BYTE_POS ) ;
result [0] =( byte )( value & BYTE_POS_MASK ) ;
result [0x ] =( byte )( value & BYTE_MASK ) ;
result [0] =( int )(( value & BYTE_MASK ) ) ;
result [ -1] =( byte )( value % BYTE_MASK ) ;
result [1] =( byte )( value == BYTE_POS ) ;
result [ -1] =( byte )( value / BYTE_MASK ) ;
result [ -1] =( byte )( value && BYTE_MASK ) ;
result [0-1] =( byte )( value & BYTE_POS ) ;
result [ -1] =( byte )(( value & BYTE_POS ) ;
