nameCRC32= ZipLong.getValue( buffer , offset *1) ;
nameCRC32= ZipLong.getValue( buffer , offset *2) ;
nameCRC32= ZipLong.getValue( buffer , offset *01) ;
nameCRC32= ZipLong.getValue( buffer , offset *0) ;
nameCRC32= ZipLong.getValue( buffer , offset *4) ;
nameCRC32= ZipLong.getValue( buffer , offset *1) ;
nameCRC32= ZipLong.getValue( buffer , offset *8) ;
nameCRC32= ZipLong.getValue( buffer , offset *32) ;
nameCRC32= ZipLong.getValue( buffer , offset *5) ;
nameCRC32= ZipLong.getValue( buffer , offset ) ;
nameCRC32= ZipLong.getValue( buffer , offset +1) ;
nameCRC32= ZipLong.getValue( buffer , offset , offset *1) ;
nameCRC32= ZipLong.getValue( buffer , offset , offset *2) ;
nameCRC32= ZipLong.getValue( buffer , offset , offset *01) ;
nameCRC32= ZipLong.getValue( buffer , offset , offset *0) ;
nameCRC32= ZipLong.getValue( buffer , offset , offset *4) ;
nameCRC32= ZipLong.getValue( buffer , offset , offset *1) ;
nameCRC32= ZipLong.getValue( buffer , offset , offset *8) ;
nameCRC32= ZipLong.getValue( buffer , offset , offset *32) ;
nameCRC32= ZipLong.getValue( buffer , offset , offset *5) ;
nameCRC32= ZipLong.getValue( buffer , offset , offset ) ;
nameCRC32= ZipLong.getValue( buffer , offset *2*2) ;
nameCRC32= ZipLong.getValue( buffer , offset *01*01) ;
nameCRC32= ZipLong.getValue( buffer , offset *0*0) ;
nameCRC32= ZipLong.getValue( buffer , offset *4*4) ;
nameCRC32= ZipLong.getValue( buffer , offset *1*1) ;
nameCRC32= ZipLong.getValue( buffer , offset *8*8) ;
nameCRC32= ZipLong.getValue( buffer , offset *32*32) ;
nameCRC32= ZipLong.getValue( buffer , offset *5*5) ;
nameCRC32= ZipLong.getValue( buffer ) ;
nameCRC32= ZipLong.getValue( buffer , offset *2) ) ;
nameCRC32= ZipLong.getValue( buffer , offset *01) ) ;
nameCRC32= ZipLong.getValue( buffer , offset *0) ) ;
nameCRC32= ZipLong.getValue( buffer , offset *4) ) ;
nameCRC32= ZipLong.getValue( buffer , offset *1) ) ;
nameCRC32= ZipLong.getValue( buffer , offset *8) ) ;
nameCRC32= ZipLong.getValue( buffer , offset *32) ) ;
nameCRC32= ZipLong.getValue( buffer , offset *5) ) ;
nameCRC32= ZipLong.getValue( buffer , offset *1) ) ;
nameCRC32= ZipLong.getValue( buffer , offset *1,0) ;
nameCRC32= ZipLong.getValue( buffer , offset *1*2) ;
nameCRC32= ZipLong.getValue( buffer , offset *1*01) ;
nameCRC32= ZipLong.getValue( buffer , offset *1*0) ;
nameCRC32= ZipLong.getValue( buffer , offset *1*4) ;
nameCRC32= ZipLong.getValue( buffer , offset *1*1) ;
nameCRC32= ZipLong.getValue( buffer , offset *1*8) ;
nameCRC32= ZipLong.getValue( buffer , offset *1*32) ;
nameCRC32= ZipLong.getValue( buffer , offset *1*5) ;
nameCRC32= ZipLong.getValue( buffer , offset *2,0) ;
nameCRC32= ZipLong.getValue( buffer , offset *01,0) ;
nameCRC32= ZipLong.getValue( buffer , offset *0,0) ;
nameCRC32= ZipLong.getValue( buffer , offset *4,0) ;
nameCRC32= ZipLong.getValue( buffer , offset *1,0) ;
nameCRC32= ZipLong.getValue( buffer , offset *8,0) ;
nameCRC32= ZipLong.getValue( buffer , offset *32,0) ;
nameCRC32= ZipLong.getValue( buffer , offset *5,0) ;
nameCRC32= ZipLong.getValue( buffer , offset ,0) ;
nameCRC32= ZipLong.getValue( buffer , offset *1.0) ;
nameCRC32= ZipLong.getValue( buffer , offset *0) ;
nameCRC32= ZipLong.getValue( buffer , offset /2) ;
nameCRC32= ZipLong.getValue( buffer , offset /01) ;
nameCRC32= ZipLong.getValue( buffer , offset /0) ;
nameCRC32= ZipLong.getValue( buffer , offset /4) ;
nameCRC32= ZipLong.getValue( buffer , offset /1) ;
nameCRC32= ZipLong.getValue( buffer , offset /8) ;
nameCRC32= ZipLong.getValue( buffer , offset /32) ;
nameCRC32= ZipLong.getValue( buffer , offset /5) ;
nameCRC32= ZipLong.getValue( buffer , offset *1,2) ;
nameCRC32= ZipLong.getValue( buffer , offset *1,01) ;
nameCRC32= ZipLong.getValue( buffer , offset *1,0) ;
nameCRC32= ZipLong.getValue( buffer , offset *1,4) ;
nameCRC32= ZipLong.getValue( buffer , offset *1,1) ;
nameCRC32= ZipLong.getValue( buffer , offset *1,8) ;
nameCRC32= ZipLong.getValue( buffer , offset *1,32) ;
nameCRC32= ZipLong.getValue( buffer , offset *1,5) ;
nameCRC32= ZipLong.getValue( buffer , offset *2,2) ;
nameCRC32= ZipLong.getValue( buffer , offset *01,01) ;
nameCRC32= ZipLong.getValue( buffer , offset *0,0) ;
nameCRC32= ZipLong.getValue( buffer , offset *4,4) ;
nameCRC32= ZipLong.getValue( buffer , offset *1,1) ;
nameCRC32= ZipLong.getValue( buffer , offset *8,8) ;
nameCRC32= ZipLong.getValue( buffer , offset *32,32) ;
nameCRC32= ZipLong.getValue( buffer , offset *5,5) ;
nameCRC32= ZipLong.getValue( buffer , offset *2.0) ;
nameCRC32= ZipLong.getValue( buffer , offset *01.0) ;
nameCRC32= ZipLong.getValue( buffer , offset *0.0) ;
nameCRC32= ZipLong.getValue( buffer , offset *4.0) ;
nameCRC32= ZipLong.getValue( buffer , offset *1.0) ;
nameCRC32= ZipLong.getValue( buffer , offset *8.0) ;
nameCRC32= ZipLong.getValue( buffer , offset *32.0) ;
nameCRC32= ZipLong.getValue( buffer , offset *5.0) ;
nameCRC32= ZipLong.getValue( buffer , offset ,2) ;
nameCRC32= ZipLong.getValue( buffer , offset ,01) ;
nameCRC32= ZipLong.getValue( buffer , offset ,0) ;
nameCRC32= ZipLong.getValue( buffer , offset ,4) ;
nameCRC32= ZipLong.getValue( buffer , offset ,1) ;
nameCRC32= ZipLong.getValue( buffer , offset ,8) ;
nameCRC32= ZipLong.getValue( buffer , offset ,32) ;
nameCRC32= ZipLong.getValue( buffer , offset ,5) ;
nameCRC32= ZipLong.getValue( buffer , offset ,1) ;
