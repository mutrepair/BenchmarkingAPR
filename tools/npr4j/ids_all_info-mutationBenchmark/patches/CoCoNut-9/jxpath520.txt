int pi = Integer.parseInt( 'License') ;
int pi = Integer.parseInt( 'AS IS') ;
int pi = Integer.parseInt( 'Cannot invoke ') ;
int pi =( int ) adventurer.length( ) ;
int pi = Integer.valueOf(1) ;
int pi = Integer.parseInt(2) ;
int pi = Integer.parseInt(1) ;
int pi = Integer.parseInt(0) ;
int pi =( int ) adventurer [1] ;
int pi =1;
int pi = Integer.parseInt(1) ;
int pi =0.0;
int pi = Integer.valueOf( pi ) ;
int pi = Integer.MAX_VALUE ;
int pi = Integer.MIN_VALUE ;
int pi = Math.min(2,2) ;
int pi = Math.min(1,1) ;
int pi = Math.min(0,0) ;
int pi = Math.min(0,2) ;
int pi = Math.min(0,1) ;
int pi = Math.min(0,0) ;
int pi = Integer.parseInt( value ) ;
int pi =1.0;
int pi = Math.min(1,2) ;
int pi = Math.min(1,1) ;
int pi = Math.min(1,0) ;
int pi =2;
int pi =1;
int pi =0;
int pi =0;
int pi = Integer.parseInt(0) ;
int pi = Integer.parseInt( number ) ;
int pi = Math.min(2, 'License') ;
int pi = Math.min(2, 'AS IS') ;
int pi = Math.min(2, 'Cannot invoke ') ;
int pi = Math.min(1, 'License') ;
int pi = Math.min(1, 'AS IS') ;
int pi = Math.min(1, 'Cannot invoke ') ;
int pi = Math.min(0, 'License') ;
int pi = Math.min(0, 'AS IS') ;
int pi = Math.min(0, 'Cannot invoke ') ;
int pi = Integer.toString(1) ;
int pi =1.0/2;
int pi =1.0/1;
int pi =1.0/0;
int pi =0.0/2;
int pi =0.0/1;
int pi =0.0/0;
int pi = Math.min(1, 'License') ;
int pi = Math.min(1, 'AS IS') ;
int pi = Math.min(1, 'Cannot invoke ') ;
int pi =( double ) adventurer.length( ) ;
int pi =( int ) adventurer.length ;
int pi =( double ) adventurer [1] ;
int pi = Integer.valueOf(2) ;
int pi = Integer.valueOf(1) ;
int pi = Integer.valueOf(0) ;
int pi = Double.parseDouble( 'License') ;
int pi = Double.parseDouble( 'AS IS') ;
int pi = Double.parseDouble( 'Cannot invoke ') ;
int pi =( Integer ) adventurer [1] ;
int pi =( int ) adventurer [2] ;
int pi =( int ) adventurer [1] ;
int pi =( int ) adventurer [0] ;
int pi =2+1;
int pi =1+1;
int pi =0+1;
int pi =( int ) adventurer [0] ;
int pi =0; / /2;
int pi =0; / /1;
int pi =0; / /0;
int pi =0.2/2;
int pi =0.1/1;
int pi =0.0/0;
int pi =( int )1;
int pi =2.0;
int pi =1.0;
int pi =0.0;
int pi = getMaxpi( ) ;
int pi =1+1;
int pi = Integer.parseInt( 'License';
int pi = Integer.parseInt( 'AS IS';
int pi = Integer.parseInt( 'Cannot invoke ';
int pi =2.0/2;
int pi =1.0/1;
int pi =0.0/0;
int pi =1; / /2;
int pi =1; / /1;
int pi =1; / /0;
int pi =1.0*2;
int pi =1.0*1;
int pi =1.0*0;
int pi =0.0*2;
int pi =0.0*1;
int pi =0.0*0;
int pi =1.0; / /2;
int pi =1.0; / /1;
int pi =1.0; / /0;
int pi =2*2;
int pi =1*1;
