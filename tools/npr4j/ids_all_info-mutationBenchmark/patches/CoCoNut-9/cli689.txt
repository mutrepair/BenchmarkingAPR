pos = startPos - width ;
pos = startPos - width +1;
pos = startPos + width ;
pos = startPos - width + 'optPrefix';
pos = startPos - width + '   ';
pos = startPos - width + '\n';
pos = startPos - width + ',';
pos = startPos - width + 'usage: ';
pos = startPos - width + ' <';
pos = startPos - width + 'License';
pos = startPos - width + 'descPadding';
pos = startPos - width + ') && (c != ';
pos = startPos - width + '>';
pos = startPos - width + 'leftPadding';
pos = startPos - width + 'newLine';
pos = startPos - width + '[';
pos = startPos - width + ').append(option.getArgName()).append(';
pos = startPos - width + ' ';
pos = startPos - width + 'AS IS';
pos = startPos - width + ']';
pos = startPos - width + '-';
pos = startPos - width + 'argName';
pos = startPos - width + 'line.separator';
pos = startPos - width + 'syntaxPrefix';
pos = startPos - width + 'arg';
pos = startPos - width + 'cmdLineSyntax not provided';
pos = startPos - width + ' | ';
pos = startPos - width + '--';
pos = startPos - width + '\r';
pos = startPos - width + '\t';
pos = startPos - width + 'longOptPrefix';
pos = startPos - width + 'width';
pos = startPos - startPos + width ;
pos = startPos - startPos - width ;
pos = Math.min( startPos - width ) ;
pos = startPos - width -1;
pos = startPos - width /2;
pos = startPos - width /2001;
pos = startPos - width /0;
pos = startPos - width /2004;
pos = startPos - width /3;
pos = startPos - width /74;
pos = startPos - width /1;
pos = startPos - width /8;
pos = startPos - width /1999;
pos = startPos - width - startPos ;
pos = Math.max( startPos - width ) ;
pos = startPos - width +2;
pos = startPos - width +2001;
pos = startPos - width +0;
pos = startPos - width +2004;
pos = startPos - width +3;
pos = startPos - width +74;
pos = startPos - width +1;
pos = startPos - width +8;
pos = startPos - width +1999;
pos = startPos - width + startPos ;
pos = startPos - startPos ;
pos = startPos + width + 'optPrefix';
pos = startPos + width + '   ';
pos = startPos + width + '\n';
pos = startPos + width + ',';
pos = startPos + width + 'usage: ';
pos = startPos + width + ' <';
pos = startPos + width + 'License';
pos = startPos + width + 'descPadding';
pos = startPos + width + ') && (c != ';
pos = startPos + width + '>';
pos = startPos + width + 'leftPadding';
pos = startPos + width + 'newLine';
pos = startPos + width + '[';
pos = startPos + width + ').append(option.getArgName()).append(';
pos = startPos + width + ' ';
pos = startPos + width + 'AS IS';
pos = startPos + width + ']';
pos = startPos + width + '-';
pos = startPos + width + 'argName';
pos = startPos + width + 'line.separator';
pos = startPos + width + 'syntaxPrefix';
pos = startPos + width + 'arg';
pos = startPos + width + 'cmdLineSyntax not provided';
pos = startPos + width + ' | ';
pos = startPos + width + '--';
pos = startPos + width + '\r';
pos = startPos + width + '\t';
pos = startPos + width + 'longOptPrefix';
pos = startPos + width + 'width';
pos = startPos + width +1;
pos = startPos - width *2;
pos = startPos - width *2001;
pos = startPos - width *0;
pos = startPos - width *2004;
pos = startPos - width *3;
pos = startPos - width *74;
pos = startPos - width *1;
pos = startPos - width *8;
pos = startPos - width *1999;
pos = startPos + width - startPos ;
pos = endPos - width ;
pos = start + startPos - width ;
