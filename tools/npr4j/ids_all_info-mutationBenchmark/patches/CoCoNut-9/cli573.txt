int x = -1;
int x = Integer.MIN_VALUE ;
int x = Integer.MAX_VALUE ;
int x =0; / / -1;
int x =0;
int x = -2;
int x = -2001;
int x = -0;
int x = -2004;
int x = -3;
int x = -74;
int x = -1;
int x = -8;
int x = -1999;
int x =1; / / -1;
int x = -1.-1;
int x =1;
int x =2; / / -1;
int x =2001; / / -1;
int x =0; / / -1;
int x =2004; / / -1;
int x =3; / / -1;
int x =74; / / -1;
int x =1; / / -1;
int x =8; / / -1;
int x =1999; / / -1;
int x = Math.min( -1;
int x =( int ) -1;
int x = -1+1;
int x =2;
int x =2001;
int x =0;
int x =2004;
int x =3;
int x =74;
int x =1;
int x =8;
int x =1999;
int x = Double.MAX_VALUE ;
int x =0.0;
int x = -1) -1;
int x = -1: -1;
int x = -1-1;
int x = -1/ -1;
double x = -1;
int x =0.-1;
int x = -1*-1;
int x = Math.max( -1;
int x = -1.0;
int x = -1.x ;
int x = -1.-2;
int x = -1.-2001;
int x = -1.-0;
int x = -1.-2004;
int x = -1.-3;
int x = -1.-74;
int x = -1.-1;
int x = -1.-8;
int x = -1.-1999;
int x = -1+ 'optPrefix';
int x = -1+ '   ';
int x = -1+ '\n';
int x = -1+ ',';
int x = -1+ 'usage: ';
int x = -1+ ' <';
int x = -1+ 'License';
int x = -1+ 'descPadding';
int x = -1+ ') && (c != ';
int x = -1+ '>';
int x = -1+ 'leftPadding';
int x = -1+ 'newLine';
int x = -1+ '[';
int x = -1+ ').append(option.getArgName()).append(';
int x = -1+ ' ';
int x = -1+ 'AS IS';
int x = -1+ ']';
int x = -1+ '-';
int x = -1+ 'argName';
int x = -1+ 'line.separator';
int x = -1+ 'syntaxPrefix';
int x = -1+ 'arg';
int x = -1+ 'cmdLineSyntax not provided';
int x = -1+ ' | ';
int x = -1+ '--';
int x = -1+ '\r';
int x = -1+ '\t';
int x = -1+ 'longOptPrefix';
int x = -1+ 'width';
int x =( -1) ;
int x = -1== -1;
int x = -1= -1;
int x = Double.MIN_VALUE ;
int x = -1.y ;
int x = +1;
int x = x = -1;
int x = -1& -1;
int x = -1? -1;
int x = Double.MIN_INFINITY ;
Integer x = Integer.MIN_VALUE ;
int x = -1) +1;
