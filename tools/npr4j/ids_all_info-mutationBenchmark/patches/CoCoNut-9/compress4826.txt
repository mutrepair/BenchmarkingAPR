result [ BYTE_2] =( byte )(( value ^ BYTE_2_MASK ) >> BYTE_2_SHIFT ) ;
result [ BYTE_0] =( byte )(( value ^ BYTE_0_MASK ) >> BYTE_0_SHIFT ) ;
result [ BYTE_4] =( byte )(( value ^ BYTE_4_MASK ) >> BYTE_4_SHIFT ) ;
result [ BYTE_24] =( byte )(( value ^ BYTE_24_MASK ) >> BYTE_24_SHIFT ) ;
result [ BYTE_00] =( byte )(( value ^ BYTE_00_MASK ) >> BYTE_00_SHIFT ) ;
result [ BYTE_16] =( byte )(( value ^ BYTE_16_MASK ) >> BYTE_16_SHIFT ) ;
result [ BYTE_3] =( byte )(( value ^ BYTE_3_MASK ) >> BYTE_3_SHIFT ) ;
result [ BYTE_0000] =( byte )(( value ^ BYTE_0000_MASK ) >> BYTE_0000_SHIFT ) ;
result [ BYTE_1] =( byte )(( value ^ BYTE_1_MASK ) >> BYTE_1_SHIFT ) ;
result [ BYTE_8] =( byte )(( value ^ BYTE_8_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_000000] =( byte )(( value ^ BYTE_000000_MASK ) >> BYTE_000000_SHIFT ) ;
result [ BYTE_1] =( byte )(( value ^ BYTE_2_MASK ) >> BYTE_2_SHIFT ) ;
result [ BYTE_1] =( byte )(( value ^ BYTE_0_MASK ) >> BYTE_0_SHIFT ) ;
result [ BYTE_1] =( byte )(( value ^ BYTE_4_MASK ) >> BYTE_4_SHIFT ) ;
result [ BYTE_1] =( byte )(( value ^ BYTE_24_MASK ) >> BYTE_24_SHIFT ) ;
result [ BYTE_1] =( byte )(( value ^ BYTE_00_MASK ) >> BYTE_00_SHIFT ) ;
result [ BYTE_1] =( byte )(( value ^ BYTE_16_MASK ) >> BYTE_16_SHIFT ) ;
result [ BYTE_1] =( byte )(( value ^ BYTE_3_MASK ) >> BYTE_3_SHIFT ) ;
result [ BYTE_1] =( byte )(( value ^ BYTE_0000_MASK ) >> BYTE_0000_SHIFT ) ;
result [ BYTE_1] =( byte )(( value ^ BYTE_1_MASK ) >> BYTE_1_SHIFT ) ;
result [ BYTE_1] =( byte )(( value ^ BYTE_8_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_1] =( byte )(( value ^ BYTE_000000_MASK ) >> BYTE_000000_SHIFT ) ;
result [ BYTE_2] =( byte )(( value ^ BYTE_8_MASK ) >> BYTE_2_SHIFT ) ;
result [ BYTE_0] =( byte )(( value ^ BYTE_8_MASK ) >> BYTE_0_SHIFT ) ;
result [ BYTE_4] =( byte )(( value ^ BYTE_8_MASK ) >> BYTE_4_SHIFT ) ;
result [ BYTE_24] =( byte )(( value ^ BYTE_8_MASK ) >> BYTE_24_SHIFT ) ;
result [ BYTE_00] =( byte )(( value ^ BYTE_8_MASK ) >> BYTE_00_SHIFT ) ;
result [ BYTE_16] =( byte )(( value ^ BYTE_8_MASK ) >> BYTE_16_SHIFT ) ;
result [ BYTE_3] =( byte )(( value ^ BYTE_8_MASK ) >> BYTE_3_SHIFT ) ;
result [ BYTE_0000] =( byte )(( value ^ BYTE_8_MASK ) >> BYTE_0000_SHIFT ) ;
result [ BYTE_1] =( byte )(( value ^ BYTE_8_MASK ) >> BYTE_1_SHIFT ) ;
result [ BYTE_8] =( byte )(( value ^ BYTE_8_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_000000] =( byte )(( value ^ BYTE_8_MASK ) >> BYTE_000000_SHIFT ) ;
result [ BYTE_2] =( byte )(( value ^ BYTE_2_MASK ) >> BYTE_2_SHIFT ;
result [ BYTE_0] =( byte )(( value ^ BYTE_0_MASK ) >> BYTE_0_SHIFT ;
result [ BYTE_4] =( byte )(( value ^ BYTE_4_MASK ) >> BYTE_4_SHIFT ;
result [ BYTE_24] =( byte )(( value ^ BYTE_24_MASK ) >> BYTE_24_SHIFT ;
result [ BYTE_00] =( byte )(( value ^ BYTE_00_MASK ) >> BYTE_00_SHIFT ;
result [ BYTE_16] =( byte )(( value ^ BYTE_16_MASK ) >> BYTE_16_SHIFT ;
result [ BYTE_3] =( byte )(( value ^ BYTE_3_MASK ) >> BYTE_3_SHIFT ;
result [ BYTE_0000] =( byte )(( value ^ BYTE_0000_MASK ) >> BYTE_0000_SHIFT ;
result [ BYTE_1] =( byte )(( value ^ BYTE_1_MASK ) >> BYTE_1_SHIFT ;
result [ BYTE_8] =( byte )(( value ^ BYTE_8_MASK ) >> BYTE_8_SHIFT ;
result [ BYTE_000000] =( byte )(( value ^ BYTE_000000_MASK ) >> BYTE_000000_SHIFT ;
result [ BYTE_2] =( int )(( value ^ BYTE_2_MASK ) >> BYTE_2_SHIFT ) ;
result [ BYTE_0] =( int )(( value ^ BYTE_0_MASK ) >> BYTE_0_SHIFT ) ;
result [ BYTE_4] =( int )(( value ^ BYTE_4_MASK ) >> BYTE_4_SHIFT ) ;
result [ BYTE_24] =( int )(( value ^ BYTE_24_MASK ) >> BYTE_24_SHIFT ) ;
result [ BYTE_00] =( int )(( value ^ BYTE_00_MASK ) >> BYTE_00_SHIFT ) ;
result [ BYTE_16] =( int )(( value ^ BYTE_16_MASK ) >> BYTE_16_SHIFT ) ;
result [ BYTE_3] =( int )(( value ^ BYTE_3_MASK ) >> BYTE_3_SHIFT ) ;
result [ BYTE_0000] =( int )(( value ^ BYTE_0000_MASK ) >> BYTE_0000_SHIFT ) ;
result [ BYTE_1] =( int )(( value ^ BYTE_1_MASK ) >> BYTE_1_SHIFT ) ;
result [ BYTE_8] =( int )(( value ^ BYTE_8_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_000000] =( int )(( value ^ BYTE_000000_MASK ) >> BYTE_000000_SHIFT ) ;
result [ BYTE_2] =( byte )(( value ^ BYTE_1_MASK ) >> BYTE_2_SHIFT ) ;
result [ BYTE_0] =( byte )(( value ^ BYTE_1_MASK ) >> BYTE_0_SHIFT ) ;
result [ BYTE_4] =( byte )(( value ^ BYTE_1_MASK ) >> BYTE_4_SHIFT ) ;
result [ BYTE_24] =( byte )(( value ^ BYTE_1_MASK ) >> BYTE_24_SHIFT ) ;
result [ BYTE_00] =( byte )(( value ^ BYTE_1_MASK ) >> BYTE_00_SHIFT ) ;
result [ BYTE_16] =( byte )(( value ^ BYTE_1_MASK ) >> BYTE_16_SHIFT ) ;
result [ BYTE_3] =( byte )(( value ^ BYTE_1_MASK ) >> BYTE_3_SHIFT ) ;
result [ BYTE_0000] =( byte )(( value ^ BYTE_1_MASK ) >> BYTE_0000_SHIFT ) ;
result [ BYTE_1] =( byte )(( value ^ BYTE_1_MASK ) >> BYTE_1_SHIFT ) ;
result [ BYTE_8] =( byte )(( value ^ BYTE_1_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_000000] =( byte )(( value ^ BYTE_1_MASK ) >> BYTE_000000_SHIFT ) ;
result [ BYTE_2] =( byte )(( value ^ BYTE_2_MASK ) >> BYTE_2_SHIFT2;
result [ BYTE_0] =( byte )(( value ^ BYTE_0_MASK ) >> BYTE_0_SHIFT0;
result [ BYTE_4] =( byte )(( value ^ BYTE_4_MASK ) >> BYTE_4_SHIFT4;
result [ BYTE_24] =( byte )(( value ^ BYTE_24_MASK ) >> BYTE_24_SHIFT24;
result [ BYTE_00] =( byte )(( value ^ BYTE_00_MASK ) >> BYTE_00_SHIFT00;
result [ BYTE_16] =( byte )(( value ^ BYTE_16_MASK ) >> BYTE_16_SHIFT16;
result [ BYTE_3] =( byte )(( value ^ BYTE_3_MASK ) >> BYTE_3_SHIFT3;
result [ BYTE_0000] =( byte )(( value ^ BYTE_0000_MASK ) >> BYTE_0000_SHIFT0000;
result [ BYTE_1] =( byte )(( value ^ BYTE_1_MASK ) >> BYTE_1_SHIFT1;
result [ BYTE_8] =( byte )(( value ^ BYTE_8_MASK ) >> BYTE_8_SHIFT8;
result [ BYTE_000000] =( byte )(( value ^ BYTE_000000_MASK ) >> BYTE_000000_SHIFT000000;
result [ BYTE_2] =( short )(( value ^ BYTE_2_MASK ) >> BYTE_2_SHIFT ) ;
result [ BYTE_0] =( short )(( value ^ BYTE_0_MASK ) >> BYTE_0_SHIFT ) ;
result [ BYTE_4] =( short )(( value ^ BYTE_4_MASK ) >> BYTE_4_SHIFT ) ;
result [ BYTE_24] =( short )(( value ^ BYTE_24_MASK ) >> BYTE_24_SHIFT ) ;
result [ BYTE_00] =( short )(( value ^ BYTE_00_MASK ) >> BYTE_00_SHIFT ) ;
result [ BYTE_16] =( short )(( value ^ BYTE_16_MASK ) >> BYTE_16_SHIFT ) ;
result [ BYTE_3] =( short )(( value ^ BYTE_3_MASK ) >> BYTE_3_SHIFT ) ;
result [ BYTE_0000] =( short )(( value ^ BYTE_0000_MASK ) >> BYTE_0000_SHIFT ) ;
result [ BYTE_1] =( short )(( value ^ BYTE_1_MASK ) >> BYTE_1_SHIFT ) ;
result [ BYTE_8] =( short )(( value ^ BYTE_8_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_000000] =( short )(( value ^ BYTE_000000_MASK ) >> BYTE_000000_SHIFT ) ;
result [ BYTE_2] =( byte )(( value ^ BYTE_2_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_0] =( byte )(( value ^ BYTE_0_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_4] =( byte )(( value ^ BYTE_4_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_24] =( byte )(( value ^ BYTE_24_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_00] =( byte )(( value ^ BYTE_00_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_16] =( byte )(( value ^ BYTE_16_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_3] =( byte )(( value ^ BYTE_3_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_0000] =( byte )(( value ^ BYTE_0000_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_1] =( byte )(( value ^ BYTE_1_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_8] =( byte )(( value ^ BYTE_8_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_000000] =( byte )(( value ^ BYTE_000000_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_8] =( byte )(( value ^ BYTE_2_MASK ) >> BYTE_2_SHIFT ) ;
