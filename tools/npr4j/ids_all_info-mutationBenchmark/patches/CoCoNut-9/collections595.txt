final List < E > list = toList( iterator ,0) ;
final List < E > list = toList( iterator ,1) ;
final List < E > list = toList( iterator ) ;
final List < E > list = toList( iterator ,2) ;
final List < E > list = toList( iterator ,0) ;
final List < E > list = toList( iterator ,4) ;
final List < E > list = toList( iterator ,100) ;
final List < E > list = toList( iterator ,6) ;
final List < E > list = toList( iterator ,3) ;
final List < E > list = toList( iterator ,1) ;
final List < E > list = toList( iterator ,10) ;
final List < E > list = toList( iterator ,5) ;
final List < E > list = toListList( iterator ,0) ;
final List < E > list = toList( iterator , listClass ) ;
final List < E > list = new ArrayList < >( ) ;
final List < E > list = toList( iterator , false ) ;
final List < E > list = toList( list ,0) ;
final List < E > list = toList( iterator , -1) ;
final List < E > list = toList( iterator ,0,1) ;
final List < E > list = toList( iterator , list ) ;
final List < E > list = toList( list ) ;
final List < E > list = toList( ) ;
final List < E > list = new ArrayList < E >( ) ;
final List < E > list = toList( iterator ,0,0) ;
final List < E > list = getList( iterator ,0) ;
final List < E > list = toListList( iterator ,1) ;
final List < E > list = toList( iterator ,0, true ) ;
final List < E > list = toList( iterator , null ) ;
final List < S > list = toList( iterator ,0) ;
final List < E > list = toList( iterator ,0, false ) ;
final List < E > list = toList( iterator , this ) ;
final List < E > list = toList( iterator ,0,2) ;
final List < E > list = toList( iterator ,0,0) ;
final List < E > list = toList( iterator ,0,4) ;
final List < E > list = toList( iterator ,0,100) ;
final List < E > list = toList( iterator ,0,6) ;
final List < E > list = toList( iterator ,0,3) ;
final List < E > list = toList( iterator ,0,1) ;
final List < E > list = toList( iterator ,0,10) ;
final List < E > list = toList( iterator ,0,5) ;
final List < E > list = new List < E >( ) ;
final List < E > list = toList( iterator , true ) ;
final List < E > list = toList( iterator , k ) ;
final List < E > list = toList( iterator , 'ListIterator must not be null') ;
final List < E > list = toList( iterator , 'Entry does not exist: ') ;
final List < E > list = toList( iterator , 'delimiter may not be null') ;
final List < E > list = toList( iterator , 'Enumeration must not be null') ;
final List < E > list = toList( iterator , 'License') ;
final List < E > list = toList( iterator , 'iterator') ;
final List < E > list = toList( iterator , '[]') ;
final List < E > list = toList( iterator , 'Collection must not be null') ;
final List < E > list = toList( iterator , 'transformer may not be null') ;
final List < E > list = toList( iterator , ', ') ;
final List < E > list = toList( iterator , 'Estimated size must be greater than 0') ;
final List < E > list = toList( iterator , '[') ;
final List < E > list = toList( iterator , 'suffix may not be null') ;
final List < E > list = toList( iterator , 'rawtypes') ;
final List < E > list = toList( iterator , 'A generic array of E is created for a varargs parameter') ;
final List < E > list = toList( iterator , 'AS IS') ;
final List < E > list = toList( iterator , 'NodeList must not be null') ;
final List < E > list = toList( iterator , 'Closure must not be null') ;
final List < E > list = toList( iterator , 'Node must not be null') ;
final List < E > list = toList( iterator , 'unchecked') ;
final List < E > list = toList( iterator , 'List must not be null') ;
final List < E > list = toList( iterator , 'Transformer must not be null') ;
final List < E > list = toList( iterator , 'Iterator must not be null') ;
final List < E > list = toList( iterator , 'Predicate must not be null') ;
final List < E > list = toList( iterator , ']') ;
final List < E > list = toList( iterator , 'Array class must not be null') ;
final List < E > list = toList( iterator , 'prefix may not be null') ;
final List < E > list = toList( iterator.size( ) ) ;
final List < E > list = toListSafe( iterator ,0) ;
final List < E > list = toList( iterator , size ) ;
final List < E > list = toListArray( iterator ,0) ;
final List < E > list = toList( iterator ,0.0) ;
final List < E > list = toList( iterator ,0.2) ;
final List < E > list = toList( iterator ,0.0) ;
final List < E > list = toList( iterator ,0.4) ;
final List < E > list = toList( iterator ,0.100) ;
final List < E > list = toList( iterator ,0.6) ;
final List < E > list = toList( iterator ,0.3) ;
final List < E > list = toList( iterator ,0.1) ;
final List < E > list = toList( iterator ,0.10) ;
final List < E > list = toList( iterator ,0.5) ;
final List < E > list = toList( iterator , i ) ;
final List < E > list = getAllList( iterator ,0) ;
final List < E > list = toList( iterator , start ) ;
final List < E > list = toList( iterator ,0, 'ListIterator must not be null') ;
final List < E > list = toList( iterator ,0, 'Entry does not exist: ') ;
final List < E > list = toList( iterator ,0, 'delimiter may not be null') ;
final List < E > list = toList( iterator ,0, 'Enumeration must not be null') ;
final List < E > list = toList( iterator ,0, 'License') ;
final List < E > list = toList( iterator ,0, 'iterator') ;
final List < E > list = toList( iterator ,0, '[]') ;
final List < E > list = toList( iterator ,0, 'Collection must not be null') ;
final List < E > list = toList( iterator ,0, 'transformer may not be null') ;
final List < E > list = toList( iterator ,0, ', ') ;
final List < E > list = toList( iterator ,0, 'Estimated size must be greater than 0') ;
final List < E > list = toList( iterator ,0, '[') ;
final List < E > list = toList( iterator ,0, 'suffix may not be null') ;
