tokens.add( arguments [ i ].replace( 'License', 'License') ) ;
tokens.add( arguments [ i ].replace( '-D', '-D') ) ;
tokens.add( arguments [ i ].replace( '--', '--') ) ;
tokens.add( arguments [ i ].replace( 'AS IS', 'AS IS') ) ;
tokens.add( arguments [ i ].replace( '-', '-') ) ;
tokens.add( arguments [ i ].substring(0, -1) ) ;
tokens.add( arguments [ i ].substring(1) ) ;
tokens.add( arguments [ i ].substring(0) ) ;
tokens.add( arguments [ i ].substring( -2) ) ;
tokens.add( arguments [ i ].substring( -2001) ) ;
tokens.add( arguments [ i ].substring( -0) ) ;
tokens.add( arguments [ i ].substring( -2004) ) ;
tokens.add( arguments [ i ].substring( -1999) ) ;
tokens.add( arguments [ i ].substring(0, -2) ) ;
tokens.add( arguments [ i ].substring(0, -2001) ) ;
tokens.add( arguments [ i ].substring(0, -0) ) ;
tokens.add( arguments [ i ].substring(0, -2004) ) ;
tokens.add( arguments [ i ].substring(0, -1999) ) ;
tokens.add( arguments [ i ].substring(1, -1) ) ;
tokens.add( arguments [ i ].substring( -1) ) ;
tokens.add( arguments [ i ].replaceAll( 'License', 'License') ) ;
tokens.add( arguments [ i ].replaceAll( '-D', '-D') ) ;
tokens.add( arguments [ i ].replaceAll( '--', '--') ) ;
tokens.add( arguments [ i ].replaceAll( 'AS IS', 'AS IS') ) ;
tokens.add( arguments [ i ].replaceAll( '-', '-') ) ;
tokens.add( arguments [ i ].substring(2) ) ;
tokens.add( arguments [ i ].substring(2001) ) ;
tokens.add( arguments [ i ].substring(0) ) ;
tokens.add( arguments [ i ].substring(2004) ) ;
tokens.add( arguments [ i ].substring(1999) ) ;
tokens.add( arguments [ i ].substring(1] ) ;
tokens.add( arguments [ i ].substring(1, -2) ) ;
tokens.add( arguments [ i ].substring(1, -2001) ) ;
tokens.add( arguments [ i ].substring(1, -0) ) ;
tokens.add( arguments [ i ].substring(1, -2004) ) ;
tokens.add( arguments [ i ].substring(1, -1999) ) ;
tokens.add( arguments [ i ].substring(1-1) ) ;
tokens.add( arguments [ i ].substring(2, -1) ) ;
tokens.add( arguments [ i ].substring(2001, -1) ) ;
tokens.add( arguments [ i ].substring(0, -1) ) ;
tokens.add( arguments [ i ].substring(2004, -1) ) ;
tokens.add( arguments [ i ].substring(1999, -1) ) ;
tokens.add( arguments [ i ].replace( 'License', 'License') ) ) ;
tokens.add( arguments [ i ].replace( '-D', '-D') ) ) ;
tokens.add( arguments [ i ].replace( '--', '--') ) ) ;
tokens.add( arguments [ i ].replace( 'AS IS', 'AS IS') ) ) ;
tokens.add( arguments [ i ].replace( '-', '-') ) ) ;
tokens.add( arguments [ i ].substring(0,2) ) ;
tokens.add( arguments [ i ].substring(0,2001) ) ;
tokens.add( arguments [ i ].substring(0,0) ) ;
tokens.add( arguments [ i ].substring(0,2004) ) ;
tokens.add( arguments [ i ].substring(0,1999) ) ;
tokens.add( arguments [ i ].replace( 'License', 'License') +1) ;
tokens.add( arguments [ i ].replace( '-D', '-D') +1) ;
tokens.add( arguments [ i ].replace( '--', '--') +1) ;
tokens.add( arguments [ i ].replace( 'AS IS', 'AS IS') +1) ;
tokens.add( arguments [ i ].replace( '-', '-') +1) ;
tokens.add( arguments [ i ].substring(0,0) ) ;
tokens.add( arguments [ i ].substring(0,1) ) ;
tokens.add( arguments [ i ].trim( ) ) ;
tokens.add( arguments [ i ].substring(1] ) ) ;
tokens.add( arguments [ i ].substring(1*-1) ) ;
tokens.add( arguments [ i ].substring(1) + 'License') ;
tokens.add( arguments [ i ].substring(1) + '-D') ;
tokens.add( arguments [ i ].substring(1) + '--') ;
tokens.add( arguments [ i ].substring(1) + 'AS IS') ;
tokens.add( arguments [ i ].substring(1) + '-') ;
tokens.add( arguments [ i ].substring(0) + 'License') ;
tokens.add( arguments [ i ].substring(0) + '-D') ;
tokens.add( arguments [ i ].substring(0) + '--') ;
tokens.add( arguments [ i ].substring(0) + 'AS IS') ;
tokens.add( arguments [ i ].substring(0) + '-') ;
tokens.add( arguments [ i ].substring(1+1) ) ;
tokens.add( arguments [ i ].substring(0-1) ) ;
tokens.add( arguments [ i ].substring(2*-1) ) ;
tokens.add( arguments [ i ].substring(2001*-1) ) ;
tokens.add( arguments [ i ].substring(0*-1) ) ;
tokens.add( arguments [ i ].substring(2004*-1) ) ;
tokens.add( arguments [ i ].substring(1999*-1) ) ;
tokens.add( arguments [ i ].substring(1,2) ) ;
tokens.add( arguments [ i ].substring(1,2001) ) ;
tokens.add( arguments [ i ].substring(1,0) ) ;
tokens.add( arguments [ i ].substring(1,2004) ) ;
tokens.add( arguments [ i ].substring(1,1999) ) ;
tokens.add( arguments [ i ].substring(0] ) ) ;
tokens.add( arguments [ i ].substring(1).trim( ) ) ;
tokens.add( arguments [ i ].substring(2, -2) ) ;
tokens.add( arguments [ i ].substring(2001, -2001) ) ;
tokens.add( arguments [ i ].substring(0, -0) ) ;
tokens.add( arguments [ i ].substring(2004, -2004) ) ;
tokens.add( arguments [ i ].substring(1999, -1999) ) ;
tokens.add( arguments [ i ].substring(1] ) -1) ;
tokens.add( arguments [ i ].substring(1,0) ) ;
tokens.add( arguments [ i ].substring(2-1) ) ;
tokens.add( arguments [ i ].substring(2001-1) ) ;
tokens.add( arguments [ i ].substring(0-1) ) ;
tokens.add( arguments [ i ].substring(2004-1) ) ;
tokens.add( arguments [ i ].substring(1999-1) ) ;
tokens.add( arguments [ i ].replaceAll( 'License') ) ;
tokens.add( arguments [ i ].replaceAll( '-D') ) ;
