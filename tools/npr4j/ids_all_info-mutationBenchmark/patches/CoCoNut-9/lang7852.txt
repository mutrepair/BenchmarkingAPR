result [ value.ordinal( ) / Long.SIZE -1<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE +1<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -1<<( value.ordinal( ) % Long.BYTES ) ;
result [ value.ordinal( ) / Long.SIZE +1L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -1<<( value.ordinal( ) / Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -1L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -1<<( value.ordinal( ) % Long.SIZE ) ) ;
result [ value.ordinal( ) / Long.SIZE +1<<( value.ordinal( ) % Long.BYTES ) ;
result [ value.ordinal( ) / Double.SIZE -1<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.BYTES +1<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE +1<<( value.ordinal( ) / Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE +1<<( value.ordinal( ) % Long.SIZE ) ) ;
result [ value.ordinal( ) / Long.SIZE *2L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE *0L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE *64L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE *3L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE *1L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.BYTES -1<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE , -1<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -1<<( value.ordinal( ) ) ;
result [ value.ordinal( ) / Long.SIZE -2<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -0<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -64<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -3<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -1<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Double.SIZE +1<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) ) ;
result [ value.ordinal( ) / Long.SIZE -1<<( value.ordinal( ) *Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE +2<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE +0<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE +64<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE +3<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE +1<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ) -1<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE *-1<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -1<<( value.ordinal( ) % Float.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -1<<( value.ordinal( ) % Double.SIZE ) ;
result [ value.ordinal( ) / Long.BYTES +1L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE +1L <<( value.ordinal( ) % Long.BYTES ) ;
result [ value.ordinal( ) / Long.SIZE +2L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE +0L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE +64L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE +3L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE +1L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ;
result [ value.ordinal( ) / Long.SIZE -1<<( value.ordinal( ) ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.BYTES ) ;
result [ value.ordinal( ) / Long.SIZE -1<<( value.ordinal( ) / Long.BYTES ) ;
result [ value.ordinal( ) / Long.SIZE /2L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE /0L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE /64L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE /3L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE /1L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -1<<( value.ordinal( ) + Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE +1<<( value.ordinal( ) *Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L <<( value.ordinal( ) ) ;
result [ value.ordinal( ) / Long.SIZE +1<<( value.ordinal( ) % Float.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -1L <<( value.ordinal( ) % Long.BYTES ) ;
result [ value.ordinal( ) / Long.SIZE +1<<( value.ordinal( ) % Double.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE +1<<( value.ordinal( ) ) ;
result [ value.ordinal( ) / Long.SIZE +1L <<( value.ordinal( ) / Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -1<<( value.ordinal( ) % Long.BYTES ) ) ;
result [ value.ordinal( ) / Long.SIZE -1<<( value.ordinal( ) , Long.SIZE ) ;
result [ value.ordinal( ) / Double.SIZE +1L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) %2) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) %0) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) %64) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) %3) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) %1) ;
result [ value.ordinal( ) / Long.SIZE -1<<( value.ordinal( ) & Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE *2<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE *0<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE *64<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE *3<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE *1<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -1<<( value.ordinal( ) + Long.BYTES ) ;
result [ value.ordinal( ) / Double.SIZE -1<<( value.ordinal( ) % Long.BYTES ) ;
result [ value.ordinal( ) / Long.BYTES +1<<( value.ordinal( ) % Long.BYTES ) ;
result [ value.ordinal( ) -1<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE +1<<( value.ordinal( ) + Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE / Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= ;
result [ value.ordinal( ) / Long.SIZE +1L <<( value.ordinal( ) ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L << Double.BYTES ) ;
result [ value.ordinal( ) / Long.SIZE ] |= ) ;
result [ value.ordinal( ) / Long.SIZE -1L <<( value.ordinal( ) ) ;
result [ value.ordinal( ) -1<<( value.ordinal( ) % Long.BYTES ) ;
result [ value.ordinal( ) / Double.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L << value ;
result [ value.ordinal( ) ] [ value.ordinal( ) / Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L ) ;
result [ value.ordinal( ) / Long.SIZE / Double.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE / Long.SIZE ;
result [ value.ordinal( ) / Long.SIZE / Long.BYTES ) ;
result [ value.ordinal( ) / Long.SIZE +1;
result [ value.ordinal( ) / Long.SIZE ] |= -1L << value
result [ value.ordinal( ) / Long.SIZE ] |= -1L
