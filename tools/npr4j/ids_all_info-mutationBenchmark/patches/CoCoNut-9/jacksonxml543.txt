_mayBeLeaf = false ;
_mayBeLeaf = true ;
_mayBeLeaf = false ) ;
_mayBeLeaf = new_may_may ;
_mayBeLeaf = false + '';
_mayBeLeaf = false + '+_parsingContext.getStartLocation(_ioContext.getSourceReference())+';
_mayBeLeaf = false + 'unwrapped';
_mayBeLeaf = false + ') not VALUE_STRING or VALUE_EMBEDDED_OBJECT, can not access as binary';
_mayBeLeaf = false + 'value';
_mayBeLeaf = false + 'getBinaryValue';
_mayBeLeaf = false + "'";
_mayBeLeaf = false + ')';
_mayBeLeaf = false + ' isExpectedArrayStart: OBJ->Array, wraps now: ';
_mayBeLeaf = false + 'JsonToken: ';
_mayBeLeaf = false + 'start object';
_mayBeLeaf = false + '+b64variant+';
_mayBeLeaf = false + '): ';
_mayBeLeaf = false + 'hack';
_mayBeLeaf = false + ' isExpectedArrayStart?: t=';
_mayBeLeaf = false + '+_parsingContext.getCurrentName()+';
_mayBeLeaf = false + 'nextToken()';
_mayBeLeaf = false + 'undo';
_mayBeLeaf = false + "JsonToken: VALUE_STRING '";
_mayBeLeaf = false + 'auto-wrapping';
_mayBeLeaf = false + ' (from ';
_mayBeLeaf = false + 'Failed to decode VALUE_STRING as base64 (';
_mayBeLeaf = false + 'Missing name, in state: ';
_mayBeLeaf = false + 'start array';
_mayBeLeaf = false + '"+_parsingContext.getCurrentName()+"';
_mayBeLeaf = false + '+_currToken+';
_mayBeLeaf = false + ' ';
_mayBeLeaf = false + '+_parsingContext.getTypeDesc()+';
_mayBeLeaf = false + ': expected close marker for ';
_mayBeLeaf = false + 'off-by-one';
_mayBeLeaf = false + 'Current token (';
_mayBeLeaf = false + 'resource';
_mayBeLeaf = false + '+getText()+';
_mayBeLeaf = false + '"+getText()+"';
_mayBeLeaf = false + "JsonToken: FIELD_NAME '";
_mayBeLeaf = false.trim( ) ;
_mayBeLeaf = true ) ;
_mayBeLeaf = true.trim( ) ;
_mayBeLeaf = new Boolean( false ) ;
_mayBeLeaf = true + '';
_mayBeLeaf = true + '+_parsingContext.getStartLocation(_ioContext.getSourceReference())+';
_mayBeLeaf = true + 'unwrapped';
_mayBeLeaf = true + ') not VALUE_STRING or VALUE_EMBEDDED_OBJECT, can not access as binary';
_mayBeLeaf = true + 'value';
_mayBeLeaf = true + 'getBinaryValue';
_mayBeLeaf = true + "'";
_mayBeLeaf = true + ')';
_mayBeLeaf = true + ' isExpectedArrayStart: OBJ->Array, wraps now: ';
_mayBeLeaf = true + 'JsonToken: ';
_mayBeLeaf = true + 'start object';
_mayBeLeaf = true + '+b64variant+';
_mayBeLeaf = true + '): ';
_mayBeLeaf = true + 'hack';
_mayBeLeaf = true + ' isExpectedArrayStart?: t=';
_mayBeLeaf = true + '+_parsingContext.getCurrentName()+';
_mayBeLeaf = true + 'nextToken()';
_mayBeLeaf = true + 'undo';
_mayBeLeaf = true + "JsonToken: VALUE_STRING '";
_mayBeLeaf = true + 'auto-wrapping';
_mayBeLeaf = true + ' (from ';
_mayBeLeaf = true + 'Failed to decode VALUE_STRING as base64 (';
_mayBeLeaf = true + 'Missing name, in state: ';
_mayBeLeaf = true + 'start array';
_mayBeLeaf = true + '"+_parsingContext.getCurrentName()+"';
_mayBeLeaf = true + '+_currToken+';
_mayBeLeaf = true + ' ';
_mayBeLeaf = true + '+_parsingContext.getTypeDesc()+';
_mayBeLeaf = true + ': expected close marker for ';
_mayBeLeaf = true + 'off-by-one';
_mayBeLeaf = true + 'Current token (';
_mayBeLeaf = true + 'resource';
_mayBeLeaf = true + '+getText()+';
_mayBeLeaf = true + '"+getText()+"';
_mayBeLeaf = true + "JsonToken: FIELD_NAME '";
_mayBeLeaf = '';
_mayBeLeaf = '+_parsingContext.getStartLocation(_ioContext.getSourceReference())+';
_mayBeLeaf = 'unwrapped';
_mayBeLeaf = ') not VALUE_STRING or VALUE_EMBEDDED_OBJECT, can not access as binary';
_mayBeLeaf = 'value';
_mayBeLeaf = 'getBinaryValue';
_mayBeLeaf = "'";
_mayBeLeaf = ')';
_mayBeLeaf = ' isExpectedArrayStart: OBJ->Array, wraps now: ';
_mayBeLeaf = 'JsonToken: ';
_mayBeLeaf = 'start object';
_mayBeLeaf = '+b64variant+';
_mayBeLeaf = '): ';
_mayBeLeaf = 'hack';
_mayBeLeaf = ' isExpectedArrayStart?: t=';
_mayBeLeaf = '+_parsingContext.getCurrentName()+';
_mayBeLeaf = 'nextToken()';
_mayBeLeaf = 'undo';
_mayBeLeaf = "JsonToken: VALUE_STRING '";
_mayBeLeaf = 'auto-wrapping';
_mayBeLeaf = ' (from ';
_mayBeLeaf = 'Failed to decode VALUE_STRING as base64 (';
