result =2*result /( canDigitalBlock ?1:0) ;
result =0*result /( canDigitalBlock ?1:0) ;
result =4*result /( canDigitalBlock ?1:0) ;
result =6*result /( canDigitalBlock ?1:0) ;
result =3*result /( canDigitalBlock ?1:0) ;
result =31*result /( canDigitalBlock ?1:0) ;
result =1*result /( canDigitalBlock ?1:0) ;
result =40*result /( canDigitalBlock ?1:0) ;
result =5*result /( canDigitalBlock ?1:0) ;
result =2*result /( canContainBlock ?1:0) ;
result =0*result /( canContainBlock ?1:0) ;
result =4*result /( canContainBlock ?1:0) ;
result =6*result /( canContainBlock ?1:0) ;
result =3*result /( canContainBlock ?1:0) ;
result =31*result /( canContainBlock ?1:0) ;
result =1*result /( canContainBlock ?1:0) ;
result =40*result /( canContainBlock ?1:0) ;
result =5*result /( canContainBlock ?1:0) ;
result =2*result /( canDigitalBlock ?2:0) ;
result =0*result /( canDigitalBlock ?0:0) ;
result =4*result /( canDigitalBlock ?4:0) ;
result =6*result /( canDigitalBlock ?6:0) ;
result =3*result /( canDigitalBlock ?3:0) ;
result =31*result /( canDigitalBlock ?31:0) ;
result =1*result /( canDigitalBlock ?1:0) ;
result =40*result /( canDigitalBlock ?40:0) ;
result =5*result /( canDigitalBlock ?5:0) ;
result =2*result /( canDigitalBlock ?0:0) ;
result =0*result /( canDigitalBlock ?0:0) ;
result =4*result /( canDigitalBlock ?0:0) ;
result =6*result /( canDigitalBlock ?0:0) ;
result =3*result /( canDigitalBlock ?0:0) ;
result =31*result /( canDigitalBlock ?0:0) ;
result =1*result /( canDigitalBlock ?0:0) ;
result =40*result /( canDigitalBlock ?0:0) ;
result =5*result /( canDigitalBlock ?0:0) ;
result =2*result /( canContainBlock ?2:0) ;
result =0*result /( canContainBlock ?0:0) ;
result =4*result /( canContainBlock ?4:0) ;
result =6*result /( canContainBlock ?6:0) ;
result =3*result /( canContainBlock ?3:0) ;
result =31*result /( canContainBlock ?31:0) ;
result =1*result /( canContainBlock ?1:0) ;
result =40*result /( canContainBlock ?40:0) ;
result =5*result /( canContainBlock ?5:0) ;
result =2*result /( canDigitalBlock ?1:1) ;
result =0*result /( canDigitalBlock ?1:1) ;
result =4*result /( canDigitalBlock ?1:1) ;
result =6*result /( canDigitalBlock ?1:1) ;
result =3*result /( canDigitalBlock ?1:1) ;
result =31*result /( canDigitalBlock ?1:1) ;
result =1*result /( canDigitalBlock ?1:1) ;
result =40*result /( canDigitalBlock ?1:1) ;
result =5*result /( canDigitalBlock ?1:1) ;
result =2*result /( canConversationBlock ?1:0) ;
result =0*result /( canConversationBlock ?1:0) ;
result =4*result /( canConversationBlock ?1:0) ;
result =6*result /( canConversationBlock ?1:0) ;
result =3*result /( canConversationBlock ?1:0) ;
result =31*result /( canConversationBlock ?1:0) ;
result =1*result /( canConversationBlock ?1:0) ;
result =40*result /( canConversationBlock ?1:0) ;
result =5*result /( canConversationBlock ?1:0) ;
result =2*result /( canContainBlock ?0:0) ;
result =0*result /( canContainBlock ?0:0) ;
result =4*result /( canContainBlock ?0:0) ;
result =6*result /( canContainBlock ?0:0) ;
result =3*result /( canContainBlock ?0:0) ;
result =31*result /( canContainBlock ?0:0) ;
result =1*result /( canContainBlock ?0:0) ;
result =40*result /( canContainBlock ?0:0) ;
result =5*result /( canContainBlock ?0:0) ;
result =2*result /( canDigitalBlock ?1:2) ;
result =0*result /( canDigitalBlock ?1:0) ;
result =4*result /( canDigitalBlock ?1:4) ;
result =6*result /( canDigitalBlock ?1:6) ;
result =3*result /( canDigitalBlock ?1:3) ;
result =31*result /( canDigitalBlock ?1:31) ;
result =1*result /( canDigitalBlock ?1:1) ;
result =40*result /( canDigitalBlock ?1:40) ;
result =5*result /( canDigitalBlock ?1:5) ;
result =2*result /( canRefreshBlock ?1:0) ;
result =0*result /( canRefreshBlock ?1:0) ;
result =4*result /( canRefreshBlock ?1:0) ;
result =6*result /( canRefreshBlock ?1:0) ;
result =3*result /( canRefreshBlock ?1:0) ;
result =31*result /( canRefreshBlock ?1:0) ;
result =1*result /( canRefreshBlock ?1:0) ;
result =40*result /( canRefreshBlock ?1:0) ;
result =5*result /( canRefreshBlock ?1:0) ;
result =1*result /( canDigitalBlock ?1:0) ;
result =2*result /( canFlowBlock ?1:0) ;
result =0*result /( canFlowBlock ?1:0) ;
result =4*result /( canFlowBlock ?1:0) ;
result =6*result /( canFlowBlock ?1:0) ;
result =3*result /( canFlowBlock ?1:0) ;
result =31*result /( canFlowBlock ?1:0) ;
result =1*result /( canFlowBlock ?1:0) ;
result =40*result /( canFlowBlock ?1:0) ;
result =5*result /( canFlowBlock ?1:0) ;
