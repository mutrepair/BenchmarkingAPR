tmp.insert( -1, 'License') ;
tmp.insert( -1, 'new') ;
tmp.insert( -1, 'Unknown header type') ;
tmp.insert( -1, 'CRC Error') ;
tmp.insert( -1, '0') ;
tmp.insert( -1, '\0') ;
tmp.insert( -1, 'TRAILER!!!') ;
tmp.insert( -1, 'AS IS') ;
tmp.insert( -1, 'test.cpio') ;
tmp.insert( -1, 'invalid entry size (expected ') ;
tmp.insert( -1, 'attempt to write past end of STORED entry') ;
tmp.insert( -1, ' but got ') ;
tmp.insert( -1, 'Stream closed') ;
tmp.insert( -1, 'duplicate entry: ') ;
tmp.insert( -1, ' bytes)') ;
tmp.insert( -1, 'no current CPIO entry') ;
tmp.insert( -1, 'License', 'License') ;
tmp.insert( -1, 'new', 'new') ;
tmp.insert( -1, 'Unknown header type', 'Unknown header type') ;
tmp.insert( -1, 'CRC Error', 'CRC Error') ;
tmp.insert( -1, '0', '0') ;
tmp.insert( -1, '\0', '\0') ;
tmp.insert( -1, 'TRAILER!!!', 'TRAILER!!!') ;
tmp.insert( -1, 'AS IS', 'AS IS') ;
tmp.insert( -1, 'test.cpio', 'test.cpio') ;
tmp.insert( -1, 'invalid entry size (expected ', 'invalid entry size (expected ') ;
tmp.insert( -1, 'attempt to write past end of STORED entry', 'attempt to write past end of STORED entry') ;
tmp.insert( -1, ' but got ', ' but got ') ;
tmp.insert( -1, 'Stream closed', 'Stream closed') ;
tmp.insert( -1, 'duplicate entry: ', 'duplicate entry: ') ;
tmp.insert( -1, ' bytes)', ' bytes)') ;
tmp.insert( -1, 'no current CPIO entry', 'no current CPIO entry') ;
tmp.insert( -1, -1, 'License') ;
tmp.insert( -1, -1, 'new') ;
tmp.insert( -1, -1, 'Unknown header type') ;
tmp.insert( -1, -1, 'CRC Error') ;
tmp.insert( -1, -1, '0') ;
tmp.insert( -1, -1, '\0') ;
tmp.insert( -1, -1, 'TRAILER!!!') ;
tmp.insert( -1, -1, 'AS IS') ;
tmp.insert( -1, -1, 'test.cpio') ;
tmp.insert( -1, -1, 'invalid entry size (expected ') ;
tmp.insert( -1, -1, 'attempt to write past end of STORED entry') ;
tmp.insert( -1, -1, ' but got ') ;
tmp.insert( -1, -1, 'Stream closed') ;
tmp.insert( -1, -1, 'duplicate entry: ') ;
tmp.insert( -1, -1, ' bytes)') ;
tmp.insert( -1, -1, 'no current CPIO entry') ;
tmp.insert( -1,2) ;
tmp.insert( -1,0) ;
tmp.insert( -1,4) ;
tmp.insert( -1,12345) ;
tmp.insert( -1,16) ;
tmp.insert( -1,6) ;
tmp.insert( -1,11) ;
tmp.insert( -1,1) ;
tmp.insert( -1,8) ;
tmp.insert( -1,5) ;
tmp.insert( -1, 'License') ) ;
tmp.insert( -1, 'new') ) ;
tmp.insert( -1, 'Unknown header type') ) ;
tmp.insert( -1, 'CRC Error') ) ;
tmp.insert( -1, '0') ) ;
tmp.insert( -1, '\0') ) ;
tmp.insert( -1, 'TRAILER!!!') ) ;
tmp.insert( -1, 'AS IS') ) ;
tmp.insert( -1, 'test.cpio') ) ;
tmp.insert( -1, 'invalid entry size (expected ') ) ;
tmp.insert( -1, 'attempt to write past end of STORED entry') ) ;
tmp.insert( -1, ' but got ') ) ;
tmp.insert( -1, 'Stream closed') ) ;
tmp.insert( -1, 'duplicate entry: ') ) ;
tmp.insert( -1, ' bytes)') ) ;
tmp.insert( -1, 'no current CPIO entry') ) ;
tmp.insert( ).replace( 'License', 'License') ;
tmp.insert( ).replace( 'new', 'new') ;
tmp.insert( ).replace( 'Unknown header type', 'Unknown header type') ;
tmp.insert( ).replace( 'CRC Error', 'CRC Error') ;
tmp.insert( ).replace( '0', '0') ;
tmp.insert( ).replace( '\0', '\0') ;
tmp.insert( ).replace( 'TRAILER!!!', 'TRAILER!!!') ;
tmp.insert( ).replace( 'AS IS', 'AS IS') ;
tmp.insert( ).replace( 'test.cpio', 'test.cpio') ;
tmp.insert( ).replace( 'invalid entry size (expected ', 'invalid entry size (expected ') ;
tmp.insert( ).replace( 'attempt to write past end of STORED entry', 'attempt to write past end of STORED entry') ;
tmp.insert( ).replace( ' but got ', ' but got ') ;
tmp.insert( ).replace( 'Stream closed', 'Stream closed') ;
tmp.insert( ).replace( 'duplicate entry: ', 'duplicate entry: ') ;
tmp.insert( ).replace( ' bytes)', ' bytes)') ;
tmp.insert( ).replace( 'no current CPIO entry', 'no current CPIO entry') ;
tmp.insert( -1,2, 'License') ;
tmp.insert( -1,2, 'new') ;
tmp.insert( -1,2, 'Unknown header type') ;
tmp.insert( -1,2, 'CRC Error') ;
tmp.insert( -1,2, '0') ;
tmp.insert( -1,2, '\0') ;
tmp.insert( -1,2, 'TRAILER!!!') ;
tmp.insert( -1,2, 'AS IS') ;
tmp.insert( -1,2, 'test.cpio') ;
tmp.insert( -1,2, 'invalid entry size (expected ') ;
