tokens.add( arguments [ i ].substring( -2) ) ;
tokens.add( arguments [ i ].substring( -2001) ) ;
tokens.add( arguments [ i ].substring( -0) ) ;
tokens.add( arguments [ i ].substring( -2004) ) ;
tokens.add( arguments [ i ].substring( -1999) ) ;
tokens.add( arguments [ i ].substring(0) ) ;
tokens.add( arguments [ i ].substring(2) ) ;
tokens.add( arguments [ i ].substring(2001) ) ;
tokens.add( arguments [ i ].substring(0) ) ;
tokens.add( arguments [ i ].substring(2004) ) ;
tokens.add( arguments [ i ].substring(1999) ) ;
tokens.add( arguments [ i ].substring(1) ) ;
tokens.add( arguments [ i ].substring(0,2) ) ;
tokens.add( arguments [ i ].substring(0,2001) ) ;
tokens.add( arguments [ i ].substring(0,0) ) ;
tokens.add( arguments [ i ].substring(0,2004) ) ;
tokens.add( arguments [ i ].substring(0,1999) ) ;
tokens.add( arguments [ i ].substring( ) ) ;
tokens.add( arguments [ i ].substring(0, i ) ) ;
tokens.add( arguments [ i ].substring(0,0) ) ;
tokens.add( arguments [ i ].substring(0, -2) ) ;
tokens.add( arguments [ i ].substring(0, -2001) ) ;
tokens.add( arguments [ i ].substring(0, -0) ) ;
tokens.add( arguments [ i ].substring(0, -2004) ) ;
tokens.add( arguments [ i ].substring(0, -1999) ) ;
tokens.add( arguments [ i ].substring( -1) ) ;
tokens.add( arguments [ i ].substring( ) ;
tokens.add( arguments [ i ].substring( -2) ) ) ;
tokens.add( arguments [ i ].substring( -2001) ) ) ;
tokens.add( arguments [ i ].substring( -0) ) ) ;
tokens.add( arguments [ i ].substring( -2004) ) ) ;
tokens.add( arguments [ i ].substring( -1999) ) ) ;
tokens.add( arguments [ i ].substring(0) ) ) ;
tokens.add( arguments [ i ].substring( i ) ) ;
tokens.add( arguments [ i ].substring(0, -1) ) ;
tokens.add( arguments [ i ].substring(2,2) ) ;
tokens.add( arguments [ i ].substring(2001,2001) ) ;
tokens.add( arguments [ i ].substring(0,0) ) ;
tokens.add( arguments [ i ].substring(2004,2004) ) ;
tokens.add( arguments [ i ].substring(1999,1999) ) ;
tokens.add( arguments [ i ].substring(0,1) ) ;
tokens.add( arguments [ i ].substring(1,2) ) ;
tokens.add( arguments [ i ].substring(1,2001) ) ;
tokens.add( arguments [ i ].substring(1,0) ) ;
tokens.add( arguments [ i ].substring(1,2004) ) ;
tokens.add( arguments [ i ].substring(1,1999) ) ;
tokens.add( arguments [ i ].replace( 'License', 'License') ) ;
tokens.add( arguments [ i ].replace( '-D', '-D') ) ;
tokens.add( arguments [ i ].replace( '--', '--') ) ;
tokens.add( arguments [ i ].replace( 'AS IS', 'AS IS') ) ;
tokens.add( arguments [ i ].replace( '-', '-') ) ;
tokens.add( arguments [ i ] [ i ].substring( -2) ) ;
tokens.add( arguments [ i ] [ i ].substring( -2001) ) ;
tokens.add( arguments [ i ] [ i ].substring( -0) ) ;
tokens.add( arguments [ i ] [ i ].substring( -2004) ) ;
tokens.add( arguments [ i ] [ i ].substring( -1999) ) ;
tokens.add( arguments [ i ].substring( -2) ;
tokens.add( arguments [ i ].substring( -2001) ;
tokens.add( arguments [ i ].substring( -0) ;
tokens.add( arguments [ i ].substring( -2004) ;
tokens.add( arguments [ i ].substring( -1999) ;
tokens.add( arguments [ i ].substring(2, -2) ) ;
tokens.add( arguments [ i ].substring(2001, -2001) ) ;
tokens.add( arguments [ i ].substring(0, -0) ) ;
tokens.add( arguments [ i ].substring(2004, -2004) ) ;
tokens.add( arguments [ i ].substring(1999, -1999) ) ;
tokens.add( arguments [ i ].substring(0.0) ) ;
tokens.add( arguments [ i ].substring(2, i ) ) ;
tokens.add( arguments [ i ].substring(2001, i ) ) ;
tokens.add( arguments [ i ].substring(0, i ) ) ;
tokens.add( arguments [ i ].substring(2004, i ) ) ;
tokens.add( arguments [ i ].substring(1999, i ) ) ;
tokens.add( arguments [ i ].substring(2,0) ) ;
tokens.add( arguments [ i ].substring(2001,0) ) ;
tokens.add( arguments [ i ].substring(0,0) ) ;
tokens.add( arguments [ i ].substring(2004,0) ) ;
tokens.add( arguments [ i ].substring(1999,0) ) ;
tokens.add( arguments [ i ].substring(1) ) ) ;
tokens.add( arguments [ i ].substring(1, -2) ) ;
tokens.add( arguments [ i ].substring(1, -2001) ) ;
tokens.add( arguments [ i ].substring(1, -0) ) ;
tokens.add( arguments [ i ].substring(1, -2004) ) ;
tokens.add( arguments [ i ].substring(1, -1999) ) ;
tokens.add( arguments [ i ].substring(2) ) ) ;
tokens.add( arguments [ i ].substring(2001) ) ) ;
tokens.add( arguments [ i ].substring(0) ) ) ;
tokens.add( arguments [ i ].substring(2004) ) ) ;
tokens.add( arguments [ i ].substring(1999) ) ) ;
tokens.add( arguments [ i ].substring(0.2) ) ;
tokens.add( arguments [ i ].substring(0.2001) ) ;
tokens.add( arguments [ i ].substring(0.0) ) ;
tokens.add( arguments [ i ].substring(0.2004) ) ;
tokens.add( arguments [ i ].substring(0.1999) ) ;
tokens.add( arguments [ i ].substring(1,0) ) ;
tokens.add( arguments [ i ].substring( ).substring(0) ) ;
tokens.add( arguments [ i ].substring(1, i ) ) ;
tokens.add( arguments [ i ].substring(2*2) ) ;
tokens.add( arguments [ i ].substring(2001*2001) ) ;
tokens.add( arguments [ i ].substring(0*0) ) ;
tokens.add( arguments [ i ].substring(2004*2004) ) ;
