int foundIndex =0;
int foundIndex =1;
int foundIndex =2;
int foundIndex =50;
int foundIndex =0;
int foundIndex =90;
int foundIndex =1;
int foundIndex =80;
int foundIndex =32;
int foundIndex = Integer.MAX_VALUE ;
int foundIndex = -1;
int foundIndex = int foundIndex =0;
int foundIndex = Math.min(0) ;
int foundIndex = c.size( ) ;
int foundIndex = new int foundIndex ;
int foundIndex =0.0;
int foundIndex = p.size( ) ;
int foundIndex = s.size( ) ;
int foundIndex = new int [0] ;
int foundIndex =0; / /2;
int foundIndex =0; / /50;
int foundIndex =0; / /0;
int foundIndex =0; / /90;
int foundIndex =0; / /1;
int foundIndex =0; / /80;
int foundIndex =0; / /32;
int foundIndex =0) ;
int foundIndex =( int )(0;
int foundIndex = toString( ) ;
int foundIndex = 'unchecked';
int foundIndex = '"+property+"';
int foundIndex = 'holes';
int foundIndex = ' found, can';
int foundIndex = '(';
int foundIndex = "No entry '";
int foundIndex = ', ';
int foundIndex = ')';
int foundIndex = "' found, can't replace";
int foundIndex = ']';
int foundIndex = 'replace';
int foundIndex = '+property+';
int foundIndex = "' found, can't remove";
int foundIndex = 'Properties=[';
int foundIndex =( int )0) ;
int foundIndex =( int )0;
int foundIndex =0+1;
int foundIndex = getName( ) ;
int foundIndex = i +1;
int foundIndex =( int ) -1;
int foundIndex = foundIndex ;
int foundIndex = getValue( ) ;
int foundIndex =( int )( ) ;
int foundIndex =2.0;
int foundIndex =50.0;
int foundIndex =0.0;
int foundIndex =90.0;
int foundIndex =1.0;
int foundIndex =80.0;
int foundIndex =32.0;
int foundIndex =0:0;
int foundIndex = sIndex ;
int foundIndex = Math.min(0;
int foundIndex = null ;
int foundIndex = c.length ;
int foundIndex =0.2;
int foundIndex =0.50;
int foundIndex =0.0;
int foundIndex =0.90;
int foundIndex =0.1;
int foundIndex =0.80;
int foundIndex =0.32;
int foundIndex = new int [1] ;
int foundIndex = getNumber( ) ;
long foundIndex =0;
int foundIndex = this.maxIndex ;
int foundIndex =2+1;
int foundIndex =50+1;
int foundIndex =0+1;
int foundIndex =90+1;
int foundIndex =1+1;
int foundIndex =80+1;
int foundIndex =32+1;
int foundIndex = maxIndex ;
int foundIndex =( int )2) ;
int foundIndex =( int )50) ;
int foundIndex =( int )0) ;
int foundIndex =( int )90) ;
int foundIndex =( int )1) ;
int foundIndex =( int )80) ;
int foundIndex =( int )32) ;
int foundIndex = Math.max( ) ;
int foundIndex = Math.abs(0;
int foundIndex = s ;
int foundIndex = index +1;
int foundIndex =1+1;
int foundIndex = new int [2] ;
int foundIndex = new int [50] ;
int foundIndex = new int [0] ;
int foundIndex = new int [90] ;
int foundIndex = new int [1] ;
