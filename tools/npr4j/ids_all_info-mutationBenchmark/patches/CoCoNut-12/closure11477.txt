return new ArrayList < String >( ) ;
return new ArrayList < >( ) ;
return false ;
return new HashSet < >( ) ;
return new ArrayList < Integer >( ) ;
return new HashSet < String >( ) ;
return new HashMap < >( ) ;
return true ;
return new ArrayList < Object >( ) ;
return new ArraySet < >( ) ;
return new ArrayList < >( false ) ;
return new ArraySet < String >( ) ;
return new ArrayList < T >( ) ;
return new ArrayList < String >( false ) ;
return new ArrayList < >( true ) ;
return name.toLowerCase( ) ;
return new HashSet < Object >( ) ;
return String.valueOf( false ) ;
return new HashSet < Integer >( ) ;
return new ArrayList < >( 'License') ;
return new ArrayList < >( '@return') ;
return new ArrayList < >( 'meaning') ;
return new ArrayList < >( 'String has leading or trailing whitespace') ;
return new ArrayList < >( 'param') ;
return new ArrayList < >( ' ') ;
return new ArrayList < >( 'AS IS') ;
return new ArrayList < >( ' and ') ;
return new ArrayList < >( 'GPL') ;
return new ArrayList < >( 'API tried to add two incompatible type tags. ') ;
return new ArrayList < >( '@param') ;
return new ArrayList < >( 'meanings') ;
return new ArrayList < >( 'This should have been blocked and emitted a warning.') ;
return new ArrayList < >( 'see') ;
return new ArrayList < >( 'boolean') ;
return new ArrayList < >( 'JSDocInfo') ;
return new ArrayList < >( 'owner') ;
return new ArrayList < String >( true ) ;
return new ArrayList < String >( ) ) ;
return new HashSet < T >( ) ;
return new ArrayList < Boolean >( ) ;
return String.valueOf( true ) ;
return new ArrayList < String >>( ) ;
return Integer.parseInt( false ) ;
return new HashSet < >( false ) ;
return new LinkedList < >( ) ;
return new ArrayList < >( ) : false ;
return new ArrayMap < >( ) ;
return new HashMap < String >( ) ;
return new ArrayList < >( ) ) ;
return new ArrayList < String >( false ;
return new ArrayList < Long >( ) ;
return Integer.valueOf( false ) ;
return new ArrayList < Double >( ) ;
return new ArrayMap < String >( ) ;
return new LinkedList < String >( ) ;
return 'License'.toLowerCase( ) ;
return '@return'.toLowerCase( ) ;
return 'meaning'.toLowerCase( ) ;
return 'String has leading or trailing whitespace'.toLowerCase( ) ;
return 'param'.toLowerCase( ) ;
return ' '.toLowerCase( ) ;
return 'AS IS'.toLowerCase( ) ;
return ' and '.toLowerCase( ) ;
return 'GPL'.toLowerCase( ) ;
return 'API tried to add two incompatible type tags. '.toLowerCase( ) ;
return '@param'.toLowerCase( ) ;
return 'meanings'.toLowerCase( ) ;
return 'This should have been blocked and emitted a warning.'.toLowerCase( ) ;
return 'see'.toLowerCase( ) ;
return 'boolean'.toLowerCase( ) ;
return 'JSDocInfo'.toLowerCase( ) ;
return 'owner'.toLowerCase( ) ;
return new HashSet < >( true ) ;
return new ArraySet < Integer >( ) ;
return new HashList < String >( ) ;
return String.valueOf( 'License') ;
return String.valueOf( '@return') ;
return String.valueOf( 'meaning') ;
return String.valueOf( 'String has leading or trailing whitespace') ;
return String.valueOf( 'param') ;
return String.valueOf( ' ') ;
return String.valueOf( 'AS IS') ;
return String.valueOf( ' and ') ;
return String.valueOf( 'GPL') ;
return String.valueOf( 'API tried to add two incompatible type tags. ') ;
return String.valueOf( '@param') ;
return String.valueOf( 'meanings') ;
return String.valueOf( 'This should have been blocked and emitted a warning.') ;
return String.valueOf( 'see') ;
return String.valueOf( 'boolean') ;
return String.valueOf( 'JSDocInfo') ;
return String.valueOf( 'owner') ;
return Integer.parseInt( true ) ;
return new ArrayList < V >( ) ;
return Integer.valueOf( true ) ;
return new HashSet < >( 'License') ;
return new HashSet < >( '@return') ;
return new HashSet < >( 'meaning') ;
return new HashSet < >( 'String has leading or trailing whitespace') ;
return new HashSet < >( 'param') ;
