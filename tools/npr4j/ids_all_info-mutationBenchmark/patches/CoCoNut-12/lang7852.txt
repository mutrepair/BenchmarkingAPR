result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -1<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) ) ;
result [ value.ordinal( ) / Long.SIZE +1<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -2<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -0<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -64<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -3<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -1<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -1>>( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) % Long.SIZE ;
result [ value.ordinal( ) / Long.SIZE -1<<( value.ordinal( ) ) ;
result [ value.ordinal( ) % Long.SIZE -1<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) -1) ;
result [ value.ordinal( ) / Long.SIZE -1L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -1<<( value.ordinal( ) % Long.BYTES ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) +1) ;
result [ value.ordinal( ) % Long.SIZE ] |= -1<<( value.ordinal( ) ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) ) ) ;
result [ value.ordinal( ) / Long.SIZE -1<<( value.ordinal( ) / Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) ;
result [ value.ordinal( ) / Long.SIZE -0<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ) |= -1<<( value.ordinal( ) ) ;
result [ value.ordinal( ) / Long.SIZE +2<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE +0<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE +64<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE +3<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE +1<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE /2<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE /0<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE /64<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE /3<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE /1<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE +1>>( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Double.SIZE -1<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.BYTES -1<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -1<<( value.ordinal( ) & Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -1<<( value.ordinal( ) % Long.SIZE ;
result [ value.ordinal( ) / Long.SIZE *2<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE *0<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE *64<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE *3<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE *1<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -2L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -0L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -64L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -3L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -1L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -2>>( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -0>>( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -64>>( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -3>>( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -1>>( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Integer.SIZE -1<<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) % Long.SIZE -1>>( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -1<<( value.ordinal( ) % Double.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1>>( value.ordinal( ) ) ;
result [ value.ordinal( ) / Long.SIZE +1L <<( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1& Long.SIZE ) ;
result [ value.ordinal( ) / Long.BYTES ] |= -1<<( value.ordinal( ) ) ;
result [ value.ordinal( ) / Long.SIZE -1<<( value.ordinal( ) ) % Long.SIZE ) ;
result [ value.ordinal( ) % Long.SIZE ] |= -1<<( value.ordinal( ) % Long.SIZE ;
result [ value.ordinal( ) / Long.SIZE +1<<( value.ordinal( ) ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -2<<( value.ordinal( ) ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -0<<( value.ordinal( ) ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -64<<( value.ordinal( ) ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -3<<( value.ordinal( ) ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) ) ;
result [ value.ordinal( ) / Long.SIZE -2<<( value.ordinal( ) ) ;
result [ value.ordinal( ) / Long.SIZE -0<<( value.ordinal( ) ) ;
result [ value.ordinal( ) / Long.SIZE -64<<( value.ordinal( ) ) ;
result [ value.ordinal( ) / Long.SIZE -3<<( value.ordinal( ) ) ;
result [ value.ordinal( ) / Long.SIZE -1<<( value.ordinal( ) ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1<<( value.ordinal( ) ] ;
result [ value.ordinal( ) / Long.SIZE -1<<( value.ordinal( ) -1) ;
result [ value.ordinal( ) / Long.SIZE -1<<( value.ordinal( ) +1) ;
result [ value.ordinal( ) / Long.SIZE -( value.ordinal( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -1>>( value.ordinal( ) ) ;
result [ value.ordinal( ) / Long.SIZE -1<<( value.ordinal( ) ;
result [ value.ordinal( ) / Long.SIZE ] |= ) ;
result [ value.ordinal( ) % Long.SIZE -1<<( value.ordinal( ) ) ;
result [ value.ordinal( ) / Long.SIZE -1& Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1& Integer.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1& Double.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE ] |= -1) ;
result [ value.ordinal( ) / Long.SIZE ] |= ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L ;
result [ value.ordinal( ) / Long.SIZE ] |= -1L ) ;
result [ value.ordinal( ) / Long.SIZE -1? Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -1% Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE + 'License'+ Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE + 'EnumClass must be defined.'+ Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE + 'AS IS'+ Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE + '%s does not seem to be an Enum type'+ Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE + 'Cannot store %s %s values in %s bits'+ Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE + 'null elements not permitted'+ Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE -1) ;
result [ value.ordinal( ) / Long.SIZE( ) % Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE +1% Long.SIZE ) ;
result [ value.ordinal( ) / Long.SIZE +1) ;
