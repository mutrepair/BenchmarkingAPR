if( !_hasSegments ) return_currentSegment ;
if( !_hasSegments && !_currentSegment ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment ) return_currentSegment ;
if( !_hasSegments || !_currentSegment ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment.toLowerCase( ) ;
if( !_hasSegments != null && !_hasSegments ) return_currentSegment ;
if( !_hasSegments.toLowerCase( ) ) return_currentSegment ;
if( !_hasSegments.isEmpty( ) ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment.size( ) ;
if( !_hasSegments ) return_currentSegment.get( ) ;
if( !_hasSegments ) return_currentSegment.isEmpty( ) ;
if( !_hasSegments ) return_currentSegment.toString( ) ;
if( !_hasSegments ) return_currentSegment.trim( ) ;
if( !_hasSegments ) return_currentSegment.replace( '', '') ;
if( !_hasSegments ) return_currentSegment.replace( 'resetWithEmpty()', 'resetWithEmpty()') ;
if( !_hasSegments ) return_currentSegment.replace( 'shared mode', 'shared mode') ;
if( !_hasSegments ) return_currentSegment.replace( 's start using _last_ segment from list; for one, it', 's start using _last_ segment from list; for one, it') ;
if( !_hasSegments ) return_currentSegment.length( ) ;
if( !_hasSegments && !_currentSegment ;
if( !_hasSegments.size( ) ) return_currentSegment ;
if( !_hasSegments == null ) return_currentSegment ;
if( !_hasSegments.equals( '') ) return_currentSegment ;
if( !_hasSegments.equals( 'resetWithEmpty()') ) return_currentSegment ;
if( !_hasSegments.equals( 'shared mode') ) return_currentSegment ;
if( !_hasSegments.equals( 's start using _last_ segment from list; for one, it') ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment.clone( ) ;
if( !_hasSegments &&_currentSegment ) return_currentSegment ;
if( !_hasSegments( ) ) return_currentSegment ;
if( !_hasSegments.size( ) >0) return_currentSegment ;
if( !_hasSegments ) return_currentSegment( ) ;
if( !_hasSegments -1) return_currentSegment ;
if( !_hasSegments ) return_currentSegment.getName( ) ;
if( !_hasSegments ) return_currentSegment.equals( '') ;
if( !_hasSegments ) return_currentSegment.equals( 'resetWithEmpty()') ;
if( !_hasSegments ) return_currentSegment.equals( 'shared mode') ;
if( !_hasSegments ) return_currentSegment.equals( 's start using _last_ segment from list; for one, it') ;
if( !_hasSegments.length( ) >0) return_currentSegment ;
if( !_hasSegments.get( ) ) return_currentSegment ;
if( !_hasSegments != null ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment + '';
if( !_hasSegments ) return_currentSegment + 'resetWithEmpty()';
if( !_hasSegments ) return_currentSegment + 'shared mode';
if( !_hasSegments ) return_currentSegment + 's start using _last_ segment from list; for one, it';
if( !_hasSegments.length( ) ) return_currentSegment ;
if( !_hasSegments ||_currentSegment ) return_currentSegment ;
if( !_hasSegments ) return_currentSource ;
if( !_hasSegments ) return_currentSegment.getValue( ) ;
if( !( !_hasSegments ) ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment.getId( ) ;
if( !_hasSegments.trim( ) ) return_currentSegment ;
if( !( !_hasSegments ) return_currentSegment ;
if( !_hasSegments || !_currentSegment ;
if( !_hasSegments ) return_currentSegment )
if( !_hasSegments + '') return_currentSegment ;
if( !_hasSegments + 'resetWithEmpty()') return_currentSegment ;
if( !_hasSegments + 'shared mode') return_currentSegment ;
if( !_hasSegments + 's start using _last_ segment from list; for one, it') return_currentSegment ;
if( !_hasSegments ) return_currentSegment -1;
if( !_hasSegments ) return_currentSegment +1;
if( ! !_hasSegments ) return_currentSegment ;
if(( !_hasSegments ) return_currentSegment ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment == null ;
if( !_hasSegments ) return_currentSegment [0] ;
if( !_hasSegments +1) return_currentSegment ;
if( !_hasSegments ) return_currentSegment.size( ) >0;
if( !_hasSegments , false ) return_currentSegment ;
else if( !_hasSegments ) return_currentSegment ;
if( !_hasSegments , !_currentSegment ) return_currentSegment ;
if( !_hasSegments , null ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment.contains( '') ;
if( !_hasSegments ) return_currentSegment.contains( 'resetWithEmpty()') ;
if( !_hasSegments ) return_currentSegment.contains( 'shared mode') ;
if( !_hasSegments ) return_currentSegment.contains( 's start using _last_ segment from list; for one, it') ;
if( !( !_hasSegments ) return_currentSegment ) ;
if( !_hasSegments ) return_currentSegment.getText( ) ;
if( !_hasSegments ) return_currentSegment.length( ) >0;
if( !_hasSegments -1000) return_currentSegment ;
if( !_hasSegments -28) return_currentSegment ;
if( !_hasSegments -16) return_currentSegment ;
if( !_hasSegments -2) return_currentSegment ;
if( !_hasSegments -50) return_currentSegment ;
if( !_hasSegments -0) return_currentSegment ;
if( !_hasSegments -4) return_currentSegment ;
if( !_hasSegments -1) return_currentSegment ;
if( !_hasSegments -24) return_currentSegment ;
if( !_hasSegments -40000) return_currentSegment ;
if( !_hasSegments -25) return_currentSegment ;
if( !_hasSegments -256) return_currentSegment ;
if( !_hasSegments -6) return_currentSegment ;
if( !_hasSegments -2009) return_currentSegment ;
if( !_hasSegments -0) return_currentSegment ;
if( !_hasSegments , true ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment != null ;
if( !_hasSegments - '') return_currentSegment ;
if( !_hasSegments - 'resetWithEmpty()') return_currentSegment ;
if( !_hasSegments - 'shared mode') return_currentSegment ;
if( !_hasSegments - 's start using _last_ segment from list; for one, it') return_currentSegment ;
if( !_hasSegments ) return_isSegment ;
if( !_hasSegments ) return_currentSegment ) return_hasSegment ;
if( !_hasSegments ) return_currentSegment.get(0) ;
