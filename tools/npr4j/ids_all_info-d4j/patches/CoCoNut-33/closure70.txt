jsDocParameter.getJSType( ) , true ) ;
jsDocParameter.getJSType( ) ) ;
jsDocParameter.getJSType( ) , false ) ;
jsDocParameter.getJSType( ) , jsDocType( ) ) ;
jsDocParameter.getJSType( ).getJSType( ) ) ;
jsDocParameter.getJSType( ) , jsDoc ) ) ;
jsDocParameter.getJSType( jsDocType( ) , true ) ;
jsDocParameter.getJSType( ) , jsDoc ) ;
jsDocParameter.getJSType( true ) ;
jsDocParameter.getJSType( jsDocType( ) ) ;
jsDocParameter.getJSType( ) , true , true ) ;
jsDocParameter.getJSType( ) , jsDocParameter( ) ) ;
jsDocParameter.getJSType( ) , true , jsDoc ) ) ;
jsDocParameter.getJSType( ) , jsDocValue( ) ) ;
jsDocParameter.getJSType( ) , jsDocName( ) ) ;
jsDocParameter.getJSType( ) , jsDocId( ) ) ;
jsDocParameter( jsDocType( ) , true ) ;
jsDocParameter.getJSType( ) , true ) ) ;
jsDocParameter.getJSType( ) , jsType( ) , true ) ;
jsDocParameter.getJSType( ) , true , js ) ;
jsDocParameter.getJSType( ) , jsDocParameter ) ) ;
jsDocParametersParameter.getJSType( ) , true ) ;
jsDocParameter.isJSType( ) , true ) ;
jsDocParameter.getJSType( ) , true , jsDoc ) ;
jsDocParameter.getJSType( ) , jsDoc , true ) ;
jsDocParameter.getJSType( ) , jsDocParameter ) ;
jsDocParameter.getJSType( ) , jsDoc ) , true ) ;
jsDocParameter.getJSType( ) , jsType( ) ) ;
jsDocParameter.getJSType( ) , js ) ;
jsDocParameter.getJSType( ) , jsDocParameter , true ) ;
jsDocParameter.getPrincipalType( ) , true ) ;
jsDocParameter.getJSType( jsDocType( ) , false ) ;
jsDocParameter.getJSType( jsType( ) , true ) ;
jsDocParameter.getJSType( ) , jsDoc( ) ) ;
jsDocParameter.getJSType( ) , true , jsDoc , true ) ;
jsDocParameter.getJSType( ) , true , jsDoc( ) ) ;
jsDocParameter.getJSType( ) , jsType ) ;
jsDocParameter.getJSType( ) , jsDoc( js ) ) ;
jsDocParameter.getJSType( ) , jsDocType ) ;
jsDocParameter.getJSType( jsDocType( ) ) ) ;
jsDocParameter.removeJSType( ) , true ) ;
jsDocParameter.getJSType( ) , null ) ;
jsDocParameter.getJSType( JSType( ) , true ) ;
jsDocParameter.getJSType( ) , true , false ) ;
jsDocAttribute.getJSType( ) , true ) ;
jsDocParameter.getJSType( ) , true ) , true ) ;
jsDocParameterParameter.getJSType( ) , true ) ;
jsDocParameter.getJSInitialType( ) , true ) ;
jsDocSession.getJSType( ) , true ) ;
jsDocParameter.getJSType( jsDoc ) ;
jsDocParameter.getJSPokerType( ) , true ) ;
jsDocParameter.addJSType( ) , true ) ;
jsDocParameter.getJSType( ) , true , js ) ) ;
jsDocParameter.getJSType( jsDocValue( ) ) ;
jsDocParameter.getJSType( ) ) , true ) ;
jsDocParameter.getJSType( getType( ) , true ) ;
jsDocParameter.getJSType( ) , jsType , true ) ;
jsDocParameter.getJSReturnType( ) , true ) ;
jsDocParameter.containsJSType( ) , true ) ;
jsDocParameter.getJSType( false ) ;
jsDocParameter.getJSType( ) +1) ;
jsDocParameter.setJSType( ) , true ) ;
jsDocParameter.extractJSType( ) , true ) ;
jsDocDocParameter.getJSType( ) , true ) ;
jsDocParameter.getJSType( true ) , true ) ;
jsDocParametersParameter.getJSType( ) ) ;
jsDocParameter.getJSType( js ) ) ;
jsDocParameter.getJSType( true ) ) ;
jsDocParameter.getJSType( jsType( ) ) ;
jsDocParameter.getJSType( ) , false ) ) ;
jsDocParameter( jsDocType( ) , false ) ;
jsDocParameter.getJSType( 'JSC_REFLECT_CONSTRUCTOR_EXPECTED') , true ) ;
jsDocParameter.getJSType( 'native') , true ) ;
jsDocParameter.getJSType( 'AS IS') , true ) ;
jsDocParameter.getJSType( 'Variable {0} not declared before @lends annotation.') , true ) ;
jsDocParameter.getJSType( 'Interface {0} must be initialized at declaration') , true ) ;
jsDocParameter.getJSType( 'License') , true ) ;
jsDocParameter.getJSType( 'JSC_LENDS_ON_NON_OBJECT') , true ) ;
jsDocParameter.getJSType( 'Proxy') , true ) ;
jsDocParameter.getJSType( 'goog.typedef') , true ) ;
jsDocParameter.getJSType( 'May only lend properties to object types. {0} has type {1}.') , true ) ;
jsDocParameter.getJSType( 'JSC_MALFORMED_TYPEDEF') , true ) ;
jsDocParameter.getJSType( 'ActiveXObject') , true ) ;
jsDocParameter.getJSType( 'JSC_UNKNOWN_LENDS') , true ) ;
jsDocParameter.getJSType( 'Window') , true ) ;
jsDocParameter.getJSType( 't try to declare in the global scope if there') , true ) ;
jsDocParameter.getJSType( 're sure that') , true ) ;
jsDocParameter.getJSType( 'JSC_ENUM_INITIALIZER_NOT_ENUM') , true ) ;
jsDocParameter.getJSType( 'prototype') , true ) ;
jsDocParameter.getJSType( '.prototype') , true ) ;
jsDocParameter.getJSType( 'Constructor expected as first argument') , true ) ;
jsDocParameter.getJSType( 's ok to define this node') , true ) ;
jsDocParameter.getJSType( 'Typedef for {0} does not have any type information') , true ) ;
jsDocParameter.getJSType( 'JSC_IFACE_INITIALIZER_NOT_IFACE') , true ) ;
jsDocParameter.getJSType( 'undefined') , true ) ;
jsDocParameter.getJSType( 's not, then check to see if it') , true ) ;
jsDocParameter.getJSType( '.') , true ) ;
jsDocParameter.getJSType( 'global') , true ) ;
jsDocParameter.getJSType( 'JSC_CTOR_INITIALIZER_NOT_CTOR') , true ) ;
jsDocParameter.getJSType( 'enum initializer must be an object literal or an enum') , true ) ;
