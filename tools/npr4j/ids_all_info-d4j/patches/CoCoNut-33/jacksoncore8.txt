if( !_hasSegments ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment ) return_currentSegment ) ;
if( !_hasSegments ) return_currentSegment +1) return_currentSegment ;
if( !_hasSegments && !_hasSegments ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment -1) return_currentSegment ;
if( !_hasSegments && !_hasSegments( ) ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment + '') return_currentSegment ;
if( !_hasSegments ) return_currentSegment + 'resetWithEmpty()') return_currentSegment ;
if( !_hasSegments ) return_currentSegment + 'shared mode') return_currentSegment ;
if( !_hasSegments ) return_currentSegment + 's start using _last_ segment from list; for one, it') return_currentSegment ;
if( !_hasSegments ) return_currentSegment +1) return_currentSegment ) ;
if( !_hasSegments( ) ) return_currentSegment ;
if( !_hasSegmentsSegments ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment == null ) return_currentSegment ;
if( !_hasSegments( ) ) return_currentSegment ) return_currentSegment ;
if( !_hasSegmentsSegments ) return_currentSegment ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment *1000) return_currentSegment ;
if( !_hasSegments ) return_currentSegment *28) return_currentSegment ;
if( !_hasSegments ) return_currentSegment *16) return_currentSegment ;
if( !_hasSegments ) return_currentSegment *2) return_currentSegment ;
if( !_hasSegments ) return_currentSegment *50) return_currentSegment ;
if( !_hasSegments ) return_currentSegment *0) return_currentSegment ;
if( !_hasSegments ) return_currentSegment *4) return_currentSegment ;
if( !_hasSegments ) return_currentSegment *1) return_currentSegment ;
if( !_hasSegments ) return_currentSegment *24) return_currentSegment ;
if( !_hasSegments ) return_currentSegment *40000) return_currentSegment ;
if( !_hasSegments ) return_currentSegment *25) return_currentSegment ;
if( !_hasSegments ) return_currentSegment *256) return_currentSegment ;
if( !_hasSegments ) return_currentSegment *6) return_currentSegment ;
if( !_hasSegments ) return_currentSegment *2009) return_currentSegment ;
if( !_hasSegments ) return_currentSegment , '') return_currentSegment ;
if( !_hasSegments ) return_currentSegment , 'resetWithEmpty()') return_currentSegment ;
if( !_hasSegments ) return_currentSegment , 'shared mode') return_currentSegment ;
if( !_hasSegments ) return_currentSegment , 's start using _last_ segment from list; for one, it') return_currentSegment ;
if( !_hasSegments ) return_currentSegment ) ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment , false ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment -1) return_currentSegment ) ;
if( !_hasSegments ) return_currentSegment ) ;
if( !_hasSegments && !_hasSegments( ) ) return_currentSegment ) ;
if( !_hasSegments ) return_currentSegment + '') return_currentSegment ) ;
if( !_hasSegments ) return_currentSegment + 'resetWithEmpty()') return_currentSegment ) ;
if( !_hasSegments ) return_currentSegment + 'shared mode') return_currentSegment ) ;
if( !_hasSegments ) return_currentSegment + 's start using _last_ segment from list; for one, it') return_currentSegment ) ;
if( !_hasSegments || !_hasSegments ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment != null ) return_currentSegment ;
if( !_hasSegments || !_hasSegments( ) ) return_currentSegment ;
if( !_hasSegments && !_currentSegment ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment + '';
if( !_hasSegments ) return_currentSegment + 'resetWithEmpty()';
if( !_hasSegments ) return_currentSegment + 'shared mode';
if( !_hasSegments ) return_currentSegment + 's start using _last_ segment from list; for one, it';
if( !_hasSegments ) return_currentSegment ) return_currentSegment + '';
if( !_hasSegments ) return_currentSegment ) return_currentSegment + 'resetWithEmpty()';
if( !_hasSegments ) return_currentSegment ) return_currentSegment + 'shared mode';
if( !_hasSegments ) return_currentSegment ) return_currentSegment + 's start using _last_ segment from list; for one, it';
if( !_hasSegments ) return_currentSegment , true ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment == null ) return_currentSegment ) ;
if( !_hasSegments( ) ) return_currentSegment ) return_currentSegment ) ;
if( !_hasSegments ) return_currentRed ) return_currentSegment ;
if( !_hasSegmentsSegments ) return_currentSegment ) return_currentSegment ) ;
if( !_hasSegments ) return_hasSegments ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment , null ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment *1000) return_currentSegment ) ;
if( !_hasSegments ) return_currentSegment *28) return_currentSegment ) ;
if( !_hasSegments ) return_currentSegment *16) return_currentSegment ) ;
if( !_hasSegments ) return_currentSegment *2) return_currentSegment ) ;
if( !_hasSegments ) return_currentSegment *50) return_currentSegment ) ;
if( !_hasSegments ) return_currentSegment *0) return_currentSegment ) ;
if( !_hasSegments ) return_currentSegment *4) return_currentSegment ) ;
if( !_hasSegments ) return_currentSegment *1) return_currentSegment ) ;
if( !_hasSegments ) return_currentSegment *24) return_currentSegment ) ;
if( !_hasSegments ) return_currentSegment *40000) return_currentSegment ) ;
if( !_hasSegments ) return_currentSegment *25) return_currentSegment ) ;
if( !_hasSegments ) return_currentSegment *256) return_currentSegment ) ;
if( !_hasSegments ) return_currentSegment *6) return_currentSegment ) ;
if( !_hasSegments ) return_currentSegment *2009) return_currentSegment ) ;
if( !_hasSegments ) return_hasSegments( ) ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment ) return_currentRed ;
if( !_hasSegments ) return_currentSegment ) ) return_currentSegment ) ;
if( !_hasSegments ) return_currentSegment , '') return_currentSegment ) ;
if( !_hasSegments ) return_currentSegment , 'resetWithEmpty()') return_currentSegment ) ;
if( !_hasSegments ) return_currentSegment , 'shared mode') return_currentSegment ) ;
if( !_hasSegments ) return_currentSegment , 's start using _last_ segment from list; for one, it') return_currentSegment ) ;
if( !_hasSegments( ) != null ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment , false ) return_currentSegment ) ;
if( !_hasSegments && !_hasSegments ) return_currentSegment ) ;
if( !_hasSegments ) return_currentSegment( ) ) return_currentSegment ;
else if( !_hasSegments ) return_currentSegment ;
else if( !_hasSegments ) return_currentSegment ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment != null ) return_currentSegment ) ;
if( !_hasSegments( ) ==0) return_currentSegment ;
if( !_hasSegments ) return_currentSegment ,0) return_currentSegment ;
if( !_hasSegments ) return_currentSegment +1000) return_currentSegment ;
if( !_hasSegments ) return_currentSegment +28) return_currentSegment ;
if( !_hasSegments ) return_currentSegment +16) return_currentSegment ;
if( !_hasSegments ) return_currentSegment +2) return_currentSegment ;
if( !_hasSegments ) return_currentSegment +50) return_currentSegment ;
if( !_hasSegments ) return_currentSegment +0) return_currentSegment ;
if( !_hasSegments ) return_currentSegment +4) return_currentSegment ;
