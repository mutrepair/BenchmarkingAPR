if( !_hasSegments ) return_currentSegment ;
if( !_hasSegments && ! hasSegments ) return_currentSegment ;
if( !_hasSegments && !_hasSegments ) return_currentSegment ;
if( !_hasSegments || !_hasSegments ) return_currentSegment ;
if( !_hasSegments && ! isSegments ) return_currentSegment ;
if( currentSegment != null && !_hasSegments ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment + '';
if( !_hasSegments ) return_currentSegment + 'resetWithEmpty()';
if( !_hasSegments ) return_currentSegment + 'shared mode';
if( !_hasSegments ) return_currentSegment + 's start using _last_ segment from list; for one, it';
if( !_hasSegments || ! isSegments ) return_currentSegment ;
if( !_hasSegments || ! hasSegments ) return_currentSegment ;
if( !_hasSegments != null && !_hasSegments ) return_currentSegment ;
if( currentSegment == null || !_hasSegments ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment -1;
if( !_hasSegments && currentSegment != null ) return_currentSegment ;
if( !_hasSegments && !_currentSegment == null ) return_currentSegment ;
if( !_hasSegments && ! isSegments( ) ) return_currentSegment ;
if( isSegments && !_hasSegments ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment == null ) return_currentSegment ;
if( !_hasSegments && !_currentSegment != null ) return_currentSegment ;
if(( !_hasSegments ) return_currentSegment ;
if( !_hasSegments && currentSegment == null ) return_currentSegment ;
if( !_hasSegments && isSegments ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment != null ) return_currentSegment ;
if( !_hasSegments == null || !_hasSegments ) return_currentSegment ;
if( !_hasSegments && hasSegments ) return_currentSegment ;
if( !_hasSegments -1) return_currentSegment ;
if( !_hasSegments ) return_currentSegment +1;
if( hasSegments && !_hasSegments ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment.toString( ) ;
if( !_hasSegments && this.hasSegments ) return_currentSegment ;
if( !_hasSegments || currentSegment != null ) return_currentSegment ;
if( !_hasSegments || this.hasSegments ) return_currentSegment ;
if( !_hasSegments || currentSegment == null ) return_currentSegment ;
if( !_hasSegments || isSegments ) return_currentSegment ;
if( !_hasSegments && !_currentSegment ;
if( !_hasSegments && !_isSegments ) return_currentSegment ;
if( !_hasSegments || hasSegments ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment.replace( '', '') ;
if( !_hasSegments ) return_currentSegment.replace( 'resetWithEmpty()', 'resetWithEmpty()') ;
if( !_hasSegments ) return_currentSegment.replace( 'shared mode', 'shared mode') ;
if( !_hasSegments ) return_currentSegment.replace( 's start using _last_ segment from list; for one, it', 's start using _last_ segment from list; for one, it') ;
if( !_hasSegments && !( hasSegments ) return_currentSegment ;
if(_hasSegments && !_hasSegments ) return_currentSegment ;
if( isSegments || !_hasSegments ) return_currentSegment ;
if( !_hasSegments &&( currentSegment == null ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment.trim( ) ;
if( !_hasSegments &&( hasSegments ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment != null ;
if( !_hasSegments && !( isSegments ) return_currentSegment ;
if( !_hasSegments &&( currentSegment != null ) return_currentSegment ;
if( !_hasSegments ||( hasSegments ) return_currentSegment ;
if( !_hasSegments &&( isSegments ) return_currentSegment ;
if( !_hasSegments +1) return_currentSegment ;
if( hasSegments || !_hasSegments ) return_currentSegment ;
if( !_hasSegments + '') return_currentSegment ;
if( !_hasSegments + 'resetWithEmpty()') return_currentSegment ;
if( !_hasSegments + 'shared mode') return_currentSegment ;
if( !_hasSegments + 's start using _last_ segment from list; for one, it') return_currentSegment ;
if( !_hasSegments && result != null ) return_currentSegment ;
if( !_hasSegments == null ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment.clone( ) ;
if( !_hasSegments ||( isSegments ) return_currentSegment ;
if( !_hasSegments && ! isSegments( return_currentSegment ) ;
if( !_hasSegments != null ) return_currentSegment ;
if(_hasSegments ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment ) return_currentSegment ;
if( !_hasSegments( ) ) return_currentSegment ;
if( !( !_hasSegments ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment.toString( ) ) ;
if( !_hasSegments && result == null ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment -1000;
if( !_hasSegments ) return_currentSegment -28;
if( !_hasSegments ) return_currentSegment -16;
if( !_hasSegments ) return_currentSegment -2;
if( !_hasSegments ) return_currentSegment -50;
if( !_hasSegments ) return_currentSegment -0;
if( !_hasSegments ) return_currentSegment -4;
if( !_hasSegments ) return_currentSegment -1;
if( !_hasSegments ) return_currentSegment -24;
if( !_hasSegments ) return_currentSegment -40000;
if( !_hasSegments ) return_currentSegment -25;
if( !_hasSegments ) return_currentSegment -256;
if( !_hasSegments ) return_currentSegment -6;
if( !_hasSegments ) return_currentSegment -2009;
if( !_hasSegments ) return_currentSegment +1000;
if( !_hasSegments ) return_currentSegment +28;
if( !_hasSegments ) return_currentSegment +16;
if( !_hasSegments ) return_currentSegment +2;
if( !_hasSegments ) return_currentSegment +50;
if( !_hasSegments ) return_currentSegment +0;
if( !_hasSegments ) return_currentSegment +4;
if( !_hasSegments ) return_currentSegment +1;
if( !_hasSegments ) return_currentSegment +24;
if( !_hasSegments ) return_currentSegment +40000;
if( !_hasSegments ) return_currentSegment +25;
if( !_hasSegments ) return_currentSegment +256;
if( !_hasSegments ) return_currentSegment +6;
if( !_hasSegments ) return_currentSegment +2009;
