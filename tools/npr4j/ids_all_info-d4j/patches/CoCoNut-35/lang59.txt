str.getChars(0, strLen , buffer , size ) ;
str.getChars(0, strLen , buffer ) ;
str.getChars(1, strLen , buffer , size ) ;
str.getChars(0, strLen , buffer , size -1) ;
str.getChars(0, strLen ) ;
str.getChars(0, strLen , buffer , size , false ) ;
str.getChars(0, strLen , buffer , size , true ) ;
str.getChars(0, strLen , buffer , size ,0) ;
str.getChars(0, strLen , buffer , length ) ;
str.getChars(0, strLen , buffer , size +1) ;
str.getChars(2, strLen , buffer , size ) ;
str.getChars(4, strLen , buffer , size ) ;
str.getChars(0, strLen , buffer , size ) ;
str.getChars(32, strLen , buffer , size ) ;
str.getChars(3, strLen , buffer , size ) ;
str.getChars(7628716375283629643, strLen , buffer , size ) ;
str.getChars(1, strLen , buffer , size ) ;
str.getChars(31, strLen , buffer , size ) ;
str.getChars(5, strLen , buffer , size ) ;
str.getChars( i , strLen , buffer , size ) ;
str = str.getChars(0, strLen , buffer , size ) ;
str.getChars( -1, strLen , buffer , size ) ;
str.getChars(0, strLen , buffer , size , i ) ;
str.getChars(0, strLen , buffer , size , length ) ;
str.getChars(0, strLen , buffer , size , null ) ;
str.getChars(0, strLen , buffer.length ) ;
str.setChars(0, strLen , buffer , size ) ;
str.getChars(1, strLen , buffer ) ;
str.getChars(0, strLen , buffer , size , '') ;
str.getChars(0, strLen , buffer , size , 'r') ;
str.getChars(0, strLen , buffer , size , 'AS IS') ;
str.getChars(0, strLen , buffer , size , 'Invalid length: ') ;
str.getChars(0, strLen , buffer , size , 'Invalid offset: ') ;
str.getChars(0, strLen , buffer , size , '\0') ;
str.getChars(0, strLen , buffer , size , 'null') ;
str.getChars(0, strLen , buffer , size , 'end < start') ;
str.getChars(0, strLen , buffer , size , 'License') ;
str.getChars(0, strLen , buffer , size , 'startIndex must be valid') ;
str.getChars(0, strLen , buffer , size , 'a b ') ;
str.getChars(0, strLen , buffer , size , 'u') ;
str.getChars(0, strLen , buffer , size , 'length must be valid') ;
str.getChars(0, strLen , buffer , size , 't') ;
str.getChars(0, strLen , buffer , size , ' ') ;
str.getChars(0, strLen , buffer , size , 'l') ;
str.getChars(0, strLen , buffer , size , 'a') ;
str.getChars(0, strLen , buffer , size , 'StrBuilder.toSharedString is unsupported: ') ;
str.getChars(0, strLen , buffer , size , 'c d ') ;
str.getChars(0, strLen , buffer , size , 'e') ;
str.getChars(0, strLen , buffer , size , 'f') ;
str.getChars(0, strLen , buffer , size , 's') ;
str.getChars(0, strLen , buffer , size , 'Invalid startIndex: ') ;
str.getChars(0, strLen , buffer , size ,2) ;
str.getChars(0, strLen , buffer , size ,4) ;
str.getChars(0, strLen , buffer , size ,0) ;
str.getChars(0, strLen , buffer , size ,32) ;
str.getChars(0, strLen , buffer , size ,3) ;
str.getChars(0, strLen , buffer , size ,7628716375283629643) ;
str.getChars(0, strLen , buffer , size ,1) ;
str.getChars(0, strLen , buffer , size ,31) ;
str.getChars(0, strLen , buffer , size ,5) ;
str.getChars( ) , strLen , buffer , size ) ;
str.getChars(0, strLen , buffer , size -2) ;
str.getChars(0, strLen , buffer , size -4) ;
str.getChars(0, strLen , buffer , size -0) ;
str.getChars(0, strLen , buffer , size -32) ;
str.getChars(0, strLen , buffer , size -3) ;
str.getChars(0, strLen , buffer , size -7628716375283629643) ;
str.getChars(0, strLen , buffer , size -1) ;
str.getChars(0, strLen , buffer , size -31) ;
str.getChars(0, strLen , buffer , size -5) ;
str.getChars(0, strLen , buffer.length -1) ;
str.getChars(0, strLen , buffer , size , size ) ;
str.getChars(0, strLen , buffer , size , str ) ;
str.getChars(0, strLen , buffer , size , index ) ;
str.getChars(0, strLen , buffer.size -1) ;
str.getChars(1, strLen , buffer , size -1) ;
str.getChars(0, strLen +1, buffer , size ) ;
str.getChars(0, strLen -1, buffer , size ) ;
str.getChars(0, strLen , buffer , index ) ;
str.getChars(0, strLen , buffer , size ,1) ;
str.getChars(0, strLen , buffer.size ) ;
str.getCharsInt(0, strLen , buffer , size ) ;
str.getChars(0, strLen + '', buffer , size ) ;
str.getChars(0, strLen + 'r', buffer , size ) ;
str.getChars(0, strLen + 'AS IS', buffer , size ) ;
str.getChars(0, strLen + 'Invalid length: ', buffer , size ) ;
str.getChars(0, strLen + 'Invalid offset: ', buffer , size ) ;
str.getChars(0, strLen + '\0', buffer , size ) ;
str.getChars(0, strLen + 'null', buffer , size ) ;
str.getChars(0, strLen + 'end < start', buffer , size ) ;
str.getChars(0, strLen + 'License', buffer , size ) ;
str.getChars(0, strLen + 'startIndex must be valid', buffer , size ) ;
str.getChars(0, strLen + 'a b ', buffer , size ) ;
str.getChars(0, strLen + 'u', buffer , size ) ;
str.getChars(0, strLen + 'length must be valid', buffer , size ) ;
str.getChars(0, strLen + 't', buffer , size ) ;
str.getChars(0, strLen + ' ', buffer , size ) ;
str.getChars(0, strLen + 'l', buffer , size ) ;
str.getChars(0, strLen + 'a', buffer , size ) ;
str.getChars(0, strLen + 'StrBuilder.toSharedString is unsupported: ', buffer , size ) ;
