if( !_hasSegments ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment ) return_currentSegment ;
if( !_hasSegments && !_hasSegments ) return_currentSegment ;
if( !_hasSegments && !_currentSegment ) return_currentSegment ;
if( !_hasSegments || !_hasSegments ) return_currentSegment ;
if(_hasSegments ) return_currentSegment ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment != null && !_hasSegments ) return_currentSegment ;
if( !_hasSegments &&_hasSegments ) return_currentSegment ;
if( !_hasSegments ) return_hasSegments ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment != null ) return_currentSegment ;
if( !_hasSegments && !_currentSegment != null ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment && !_hasSegments ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment.toString( ) ;
if( !_hasSegments ) return_currentSegment -1) return_currentSegment ;
if( !_hasSegments && !_currentSegment.isEmpty( ) ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment != null ;
if( !_hasSegments ) return_currentSegment == null ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment.clone( ) ;
if( !_hasSegments &&_currentSegment ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment && !_hasSegments ) return_currentSegment ) ;
if( !_hasSegments ) return_currentSegment ) return_currentSegment ) ;
if( !_hasSegments && !_currentSegment == null ) return_currentSegment ;
if(_hasSegments ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment.isEmpty( ) ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment +1) return_currentSegment ;
if( !_hasSegments || !_currentSegment ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment == null ;
if( !_hasSegments && ! hasSegments ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment != null ; return_currentSegment ;
if( !_hasSegments && ! isSegments ) return_currentSegment ;
if( !_hasSegments && !_hasSegments ) return_currentSegment ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment.equals( '') ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment.equals( 'resetWithEmpty()') ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment.equals( 'shared mode') ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment.equals( 's start using _last_ segment from list; for one, it') ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment != null ?_currentSegment ;
if( !_hasSegments && !_hasSegments ) return_currentSegment == null ) return_currentSegment ;
if( !_hasSegments && !_hasSegments ) return_currentSegment != null ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment && !_currentSegment ;
if( !_hasSegments ) return_currentSegment == null || !_hasSegments ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment.trim( ) ;
if( !_hasSegments ) return_currentSegment.isEmpty( ) ;
if( !_hasSegments -1) return_currentSegment ;
if( !_hasSegments ) return_currentSegment.replace( '', '') ;
if( !_hasSegments ) return_currentSegment.replace( 'resetWithEmpty()', 'resetWithEmpty()') ;
if( !_hasSegments ) return_currentSegment.replace( 'shared mode', 'shared mode') ;
if( !_hasSegments ) return_currentSegment.replace( 's start using _last_ segment from list; for one, it', 's start using _last_ segment from list; for one, it') ;
if( currentSegment != null && !_hasSegments ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment != null && !_hasSegments ;
if( !_hasSegments ) return_currentSegment && !_currentSegment != null ) return_currentSegment ;
if( !_hasSegments && !_hasSegments ) return_currentSegment ) ;
if( !_hasSegments && !_hasSegments( ) ) return_currentSegment ;
if( !_hasSegments && ! mSegments ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment == null ?_currentSegment ;
if( !_hasSegments ) return_currentSegment.toLowerCase( ).trim( ) ;
if( !_hasSegments ) return_currentSegment.size( ) ==0) return_currentSegment ;
if( !_hasSegments ) return_currentSegment + '') return_currentSegment ;
if( !_hasSegments ) return_currentSegment + 'resetWithEmpty()') return_currentSegment ;
if( !_hasSegments ) return_currentSegment + 'shared mode') return_currentSegment ;
if( !_hasSegments ) return_currentSegment + 's start using _last_ segment from list; for one, it') return_currentSegment ;
if( !_hasSegments ) return_currentSegment.toLowerCase( ) ;
if( !_hasSegments && !_hasSegments ) return_currentSegment.toString( ) ;
if( !_hasSegments || !_currentSegment.isEmpty( ) ) return_currentSegment ;
if( !_hasSegments ||_hasSegments ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment.replaceAll( '', '') ;
if( !_hasSegments ) return_currentSegment.replaceAll( 'resetWithEmpty()', 'resetWithEmpty()') ;
if( !_hasSegments ) return_currentSegment.replaceAll( 'shared mode', 'shared mode') ;
if( !_hasSegments ) return_currentSegment.replaceAll( 's start using _last_ segment from list; for one, it', 's start using _last_ segment from list; for one, it') ;
if( !_hasSegments && !_currentSegments ) return_currentSegment ;
if( !( !_hasSegments ) return_currentSegment ) return_currentSegment ;
if(_hasSegments && !_currentSegment ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment != null &&_currentSegment ;
if( !_hasSegments ) return_currentSegment && !_hasSegments ) return_currentSegment != null ;
if( !_hasSegments ) return_currentSegment &&_currentSegment ;
if( !_hasSegments ) return_currentSegment && !_currentSegment == null ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment.toString( ).equals( '') ;
if( !_hasSegments ) return_currentSegment.toString( ).equals( 'resetWithEmpty()') ;
if( !_hasSegments ) return_currentSegment.toString( ).equals( 'shared mode') ;
if( !_hasSegments ) return_currentSegment.toString( ).equals( 's start using _last_ segment from list; for one, it') ;
if( !_hasSegments ) return_currentSegment.size( ) >0) return_currentSegment ;
if( !_hasSegments ) return_currentSegment && !_hasSegments != null ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment && ! !_hasSegments ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment +1) return_currentSegment ) ;
if( !_hasSegments( ) ) return_currentSegment ;
if( !_hasSegments && !_hasSegments ) return_currentSegment != null ;
if( !_hasSegments ) return_currentSegment.toString( ).trim( ) ;
if( !_hasSegmentsSegments ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment.getText( ).toString( ) ;
if( !_hasSegments && ! !_hasSegments ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment + '';
if( !_hasSegments ) return_currentSegment + 'resetWithEmpty()';
if( !_hasSegments ) return_currentSegment + 'shared mode';
if( !_hasSegments ) return_currentSegment + 's start using _last_ segment from list; for one, it';
if( !_hasSegments ) return_currentSegment.size( ) ;
if( !_hasSegments ||_currentSegment ) return_currentSegment ;
if( !_hasSegments && !_hasSegments ) return_currentSegment.toString( ) ) ;
if( !_hasSegments || !_currentSegment != null ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment && !_hasSegments == null ) return_currentSegment ;
if( !_hasSegments ) return_currentSegment ) ;
if( !_hasSegments ) return_currentSegment == null ?0:_currentSegment ;
