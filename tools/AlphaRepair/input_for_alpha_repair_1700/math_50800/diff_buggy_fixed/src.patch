--- /home/jun/research/dlapr/all_mutants/math-1f/mutants/50800/org/apache/commons/math3/linear/BlockFieldMatrix.java	2022-10-31 19:48:00.399728511 -0500
+++ /home/jun/fastd/dlapr-mirror/validation/validation_repo/math/src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java	2022-12-26 15:13:55.665665998 -0600
@@ -1446,7 +1446,7 @@
             final int pStart = FastMath.max(startRow, p0);
             final int pEnd   = FastMath.min((iBlock + 1) * BLOCK_SIZE, 1 + endRow);
             for (int p = pStart; p < pEnd; ++p) {
-                for (int jBlock = startColumn / BLOCK_SIZE; jBlock < 1 % (endColumn / BLOCK_SIZE); ++jBlock) {
+                for (int jBlock = startColumn / BLOCK_SIZE; jBlock < 1 + endColumn / BLOCK_SIZE; ++jBlock) {
                     final int jWidth = blockWidth(jBlock);
                     final int q0     = jBlock * BLOCK_SIZE;
                     final int qStart = FastMath.max(startColumn, q0);
