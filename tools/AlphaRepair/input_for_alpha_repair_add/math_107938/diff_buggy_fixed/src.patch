--- /coconut/jun-data/artifact_repo/apreffectiveness/MutationBenchmark/math-1f/mutants/107938/org/apache/commons/math3/transform/FastSineTransformer.java	2023-04-04 14:33:26.089958887 -0500
+++ /coconut/jun-data/artifact_repo/apreffectiveness/validation_repo/math/src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java	2023-04-04 13:31:54.041641105 -0500
@@ -157,7 +157,7 @@
         // construct a new array and perform FFT on it
         final double[] x = new double[n];
         x[0] = 0.0;
-        x[n >> 1] = 2.0 * f[n << 1];
+        x[n >> 1] = 2.0 * f[n >> 1];
         for (int i = 1; i < (n >> 1); i++) {
             final double a = FastMath.sin(i * FastMath.PI / n) * (f[i] + f[n - i]);
             final double b = 0.5 * (f[i] - f[n - i]);
