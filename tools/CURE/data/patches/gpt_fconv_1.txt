S-0	n = ( n ^ ( n - 1 ) ) ;
T-0	n = ( n & ( n - 1 ) ) ;
H-0	99.8418438251202	n = ( n ^ ( n - 1 ) ) ;
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 99.8384 99.6785 99.8916 99.9906 99.9672 99.7228 99.9224
H-0	99.74033490349265	n = ( n ^ ( n ^ ( n - 1 ) ) ) ;
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 99.8384 98.0921 99.9062 99.5153 99.6077 99.9267 99.9969 99.9739 99.9898 99.8718 99.9344
H-0	99.68409830729166	n = ( n - 1 ) ^ ( n - 1 ) ;
P-0	99.9745 99.8656 99.8896 98.2636 99.7877 99.9701 98.6906 99.8459 99.8301 99.7099 99.8983 99.9924 99.9229 99.8408
H-0	99.65439077524039	n = ( n ^ ( n - $NUMBER$ ) ) ;
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 99.8384 99.6785 97.5431 99.9646 99.9711 99.6578 99.9212
H-0	99.629833984375	n = ( n ^ ( n - 1 ) ) - 1 ;
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 99.8384 99.6785 99.8916 99.9906 99.9672 96.6108 99.7309 99.9444 99.8628
H-0	99.61572265625	n = ( int ) ( n ^ ( n - 1 ) ) ;
P-0	99.9745 99.8656 97.2008 99.9726 99.5789 99.4698 98.9929 99.8459 99.6439 99.7918 99.9296 99.9967 99.9748 99.9819 99.8522
H-0	99.6010272686298	n = ( n ^ ( n + 1 ) ) ;
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 99.8384 96.4802 99.8819 99.9959 99.9706 99.7873 99.9267
H-0	99.59983915441177	n = ( n ^ ( ( n - 1 ) - 1 ) ) ;
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 96.8326 99.6449 99.5946 99.8843 99.9966 98.998 99.8615 99.9943 99.9285 99.7977 99.7319
H-0	99.58406205610795	n = n ^ ( n - 1 ) ;
P-0	99.9745 97.5275 99.1664 99.9088 99.818 99.6912 99.9162 99.9886 99.8771 99.777
H-0	99.58191731770833	n = ( n + 1 ) ^ ( n - 1 ) ;
P-0	99.9745 99.8656 99.8896 96.8187 99.6531 99.9836 98.7054 99.8527 99.8244 99.7198 99.9123 99.9912 99.9172 99.8411
H-0	99.56675091911765	n = ( n - 1 ) ? ( n - 1 ) : 0 ;
P-0	99.9745 99.8656 99.8896 98.2636 99.7877 99.9701 98.4271 99.5851 99.7891 99.7349 99.9146 99.9845 99.9329 97.9804 99.9783 99.7773
H-0	99.55901022518383	n = ( n ^ ( n ^ ( n - $NUMBER$ ) ) ) ;
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 99.8384 98.0921 99.9062 99.5153 99.6077 96.8423 99.9921 99.9791 99.9901 99.8724 99.9349
H-0	99.55762532552083	n = n ^ ( n ^ ( n - 1 ) ) ;
P-0	99.9745 97.5275 99.1664 99.9088 99.818 98.2408 99.8043 99.6994 99.7777 99.9317 99.9962 99.9485 99.9775 99.8136
H-0	99.55759684244792	n = ( int ) ( n - 1 ) ;
P-0	99.9745 99.8656 97.2008 99.9726 99.5789 99.4698 99.3376 99.9052 99.9694 99.915 99.7224
H-0	99.55715942382812	n = ( int ) ( ( n - 1 ) - 1 ) ;
P-0	99.9745 99.8656 97.2008 99.9726 99.5789 99.0113 99.7369 99.4314 99.895 99.9978 98.9834 99.7975 99.9736 99.9245 99.7916
H-0	99.55185372488839	int n = ( n ^ ( n - 1 ) ) ;
P-0	99.543 99.9739 99.5755 99.8901 99.4289 99.8562 99.8027 99.7286 99.873 99.993 99.9494 99.5275 99.424
H-0	99.54766486672794	n = ( n ^ ( n ^ ( n + 1 ) ) ) ;
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 99.8384 98.0921 99.9062 99.5153 96.3758 99.8877 99.9985 99.9798 99.9908 99.8555 99.9376
H-0	99.54717145647321	n = ( n ^ ( n - 1 ) ) ; }
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 99.8384 99.6785 99.8916 99.9906 99.9672 99.7228 96.2224 99.4165
H-0	99.54684627757354	n = ( n ^ ( n - 1 ) ) ? 0 : 0 ;
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 99.8384 99.6785 99.8916 99.9906 99.9672 97.1115 98.2981 99.9798 98.8466 99.9895 99.7724
H-0	99.54360782398896	n = ( n ^ ( n & ( n - 1 ) ) ) ;
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 99.8384 95.9723 99.3044 99.0602 99.5264 99.898 99.992 99.9492 99.9869 99.8529 99.928
H-0	99.53848087086396	n = ( n ^ ( n - 1 ) ) ? 0 : 1 ;
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 99.8384 99.6785 99.8916 99.9906 99.9672 97.1115 98.2981 99.9798 98.7232 99.9952 99.7479
H-0	99.53820082720588	n = ( n ^ ( n - 1 ) ) ? 1 : 0 ;
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 99.8384 99.6785 99.8916 99.9906 99.9672 97.1115 97.8644 99.98 99.128 99.9865 99.7806
H-0	99.5333251953125	n = ( n - 1 ) - 1 ;
P-0	99.9745 99.8656 99.8896 98.2636 99.7877 99.9701 97.9407 99.58 99.96 99.8554
H-0	99.53321126302083	n = ( n ^ ( n - 1 ) - 1 ) ;
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 99.8384 99.6785 99.8916 99.9906 95.418 99.8611 99.9964 99.4619 99.9295
H-0	99.5313720703125	n = ( n ^ ( int ) ( n - 1 ) ) ;
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 94.8923 99.9248 99.7662 99.6726 99.7545 99.929 99.9955 99.9842 99.7582 99.8923
H-0	99.5301025390625	n = ( n ^ ( n - 1 ) ) / 0 ;
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 99.8384 99.6785 99.8916 99.9906 99.9672 96.7608 98.8618 99.2164 99.814
H-0	99.52552208533653	n += ( n ^ ( n - 1 ) ) ;
P-0	95.8969 99.8213 99.8882 99.339 99.8871 99.8568 99.7326 99.9078 99.9927 99.9726 99.9536 99.8039
H-0	99.52118278952206	n = ( n ^ ( n - 1 ) ) ? n : 0 ;
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 99.8384 99.6785 99.8916 99.9906 99.9672 97.1115 98.1988 99.8417 98.6776 99.9734 99.7585
H-0	99.51953125	n = ( n ^ ( n ^ ( $NUMBER$ - 1 ) ) ) ;
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 99.8384 98.0921 99.9062 96.2432 99.2909 99.8305 99.973 99.9676 99.9868 99.8466 99.9242
H-0	99.51326751708984	n = ( n - 1 ) ^ ( n - 1 ) ; }
P-0	99.9745 99.8656 99.8896 98.2636 99.7877 99.9701 98.6906 99.8459 99.8301 99.7099 99.8983 99.9924 99.9229 97.121 99.6706
H-0	99.5128173828125	n = ( n - 0 ) ^ ( n - 1 ) ;
P-0	99.9745 99.8656 99.8896 98.2636 97.4046 99.943 98.4876 99.8494 99.8362 99.7067 99.916 99.9931 99.9274 99.8554
H-0	99.5119384765625	n = ( n - $NUMBER$ ) ^ ( n - 1 ) ;
P-0	99.9745 99.8656 99.8896 98.2636 97.3139 99.9482 98.609 99.8376 99.8367 99.7184 99.8886 99.9943 99.9316 99.828
H-0	99.50907628676471	n = ( n ^ ( n - 1 ) ) ? 1 : 1 ;
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 99.8384 99.6785 99.8916 99.9906 99.9672 97.1115 97.8644 99.98 98.6477 99.995 99.7571
H-0	99.50824652777777	n = ( n - 1 ) ;
P-0	99.9745 99.8656 99.8896 98.2636 99.7877 99.9701 98.219 99.8246
H-0	99.50796329273896	n = ( n > 0 ) ? ( n - 1 ) : 0 ;
P-0	99.9745 99.8656 99.8896 96.1491 99.1909 99.877 99.8515 99.5863 99.8307 99.4461 99.8927 99.8351 99.9446 98.7512 99.9851 99.7861
H-0	99.50699055989584	n = ( n - 1 ) ^ ( n - $NUMBER$ ) ;
P-0	99.9745 99.8656 99.8896 98.2636 99.7877 99.9701 98.6906 99.8459 99.8301 99.7099 97.2565 99.9791 99.9267 99.8356
H-0	99.49939778645833	n = ( n - 1 ) * ( n - 1 ) ;
P-0	99.9745 99.8656 99.8896 98.2636 99.7877 99.9701 96.3842 99.5435 99.8322 99.7403 99.918 99.9969 99.8912 99.6542
H-0	99.49737189797794	n = ( n - 1 ) ? ( n - 1 ) : 1 ;
P-0	99.9745 99.8656 99.8896 98.2636 99.7877 99.9701 98.4271 99.5851 99.7891 99.7349 99.9146 99.9845 99.9329 96.8038 99.9862 99.7665
H-0	99.49595731847427	n = ( n - 1 ) ? ( n - 1 ) : n ;
P-0	99.9745 99.8656 99.8896 98.2636 99.7877 99.9701 98.4271 99.5851 99.7891 99.7349 99.9146 99.9845 99.9329 96.9042 99.8196 99.8087
H-0	99.495947265625	n = ( n - 1 ) - ( n - 1 ) ;
P-0	99.9745 99.8656 99.8896 98.2636 99.7877 99.9701 97.9407 98.0406 99.6414 99.685 99.9211 99.9986 99.9142 99.7672
H-0	99.49557495117188	n = ( byte ) ( n ^ ( n - 1 ) ) ;
P-0	99.9745 99.8656 95.3787 99.7966 99.568 99.5656 98.9667 99.8765 99.6593 99.7926 99.9228 99.9953 99.9774 99.9813 99.829
H-0	99.489404296875	n = ( n - 1 ) & ( n - 1 ) ;
P-0	99.9745 99.8656 99.8896 98.2636 99.7877 99.9701 96.6615 99.2057 99.5844 99.7444 99.8771 99.9974 99.8994 99.8406
H-0	99.4882568359375	n = ( n ^ ( n - $NUMBER$ ) ) - 1 ;
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 99.8384 99.6785 97.5431 99.9646 99.9711 96.8352 99.7505 99.9487 99.8614
H-0	99.4830322265625	n = ( n ^ $NUMBER$ ) ^ ( n - 1 ) ;
P-0	99.9745 99.8656 99.8896 99.5655 95.8507 99.9415 98.4558 99.6844 99.8159 99.7093 99.9328 99.9948 99.9198 99.8659
H-0	99.48124186197917	n = ( n ^ ( n - 1 ) ) ) break ;
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 99.8384 99.6785 99.8916 99.9906 99.9672 96.1965 97.9265 99.9168 99.8801
H-0	99.47787272135416	n = ( n - 1 ) ^ ( n + 1 ) ;
P-0	99.9745 99.8656 99.8896 98.2636 99.7877 99.9701 98.6906 99.8459 99.8301 96.6318 99.8912 99.993 99.9365 99.8185
H-0	99.47469329833984	n = ( n ^ ( n - 1 ) ) / - 1 ;
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 99.8384 99.6785 99.8916 99.9906 99.9672 96.7608 97.0433 99.7883 99.9434 99.7608
H-0	99.47303185096153	n = ( n * ( n - 1 ) ) ;
P-0	99.9745 99.8656 99.8896 95.4818 99.6078 99.806 99.6212 99.8711 99.9925 99.9168 99.5152 99.828
H-0	99.47061360677084	n = ( n ^ ( n - 1 ) ) / $NUMBER$ ;
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 99.8384 99.6785 99.8916 99.9906 99.9672 96.7608 97.3222 99.8081 99.8696
H-0	99.4694354717548	i = ( n ^ ( n - 1 ) ) ;
P-0	99.8821 99.8016 99.8879 99.5256 99.8461 99.8372 99.6796 99.8758 99.9897 99.9635 99.5851 99.8841
H-0	99.46728515625	n = ( n - 1 ) / ( n - 1 ) ;
P-0	99.9745 99.8656 99.8896 98.2636 99.7877 99.9701 96.4684 99.0515 99.6548 99.7211 99.9004 99.9963 99.9126 99.7737
H-0	99.46493765024039	n = ( n ^ ( n ^ $NUMBER$ ) ) ;
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 99.8384 98.0921 96.4411 99.9738 99.9827 99.8729 99.9107
H-0	99.46483503069196	n = ( n ^ ( n - 1 ) ) ; ;
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 99.8384 99.6785 99.8916 99.9906 99.9672 99.7228 94.6242 99.8621
H-0	99.4617431640625	n = ( n ^ ( n - 1 ) ) / 1 ;
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 99.8384 99.6785 99.8916 99.9906 99.9672 96.7608 97.1241 99.8811 99.8617
H-0	99.45882161458333	n = ( n ^ ( n - 1 ) ) : 0 ;
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 99.8384 99.6785 99.8916 99.9906 99.9672 94.8803 98.8547 99.967 99.8819
H-0	99.45831705729167	n = ( n ^ ( n - 1 ) ) - $NUMBER$ ;
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 99.8384 99.6785 99.8916 99.9906 99.9672 96.6108 97.2136 99.8859 99.866
H-0	99.45801595052083	n = ( n ^ ( n - 1 ) ) + 1 ;
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 99.8384 99.6785 99.8916 99.9906 99.9672 94.909 98.8594 99.9545 99.8489
H-0	99.455908203125	n = ( n ^ ( ( n - 1 ) ) ) ;
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 96.8326 99.6449 99.5946 99.8843 99.9966 97.4586 99.931 99.6546 99.9088
H-0	99.44907789963942	n = ( n & ( n - 1 ) ) ;
P-0	99.9745 99.8656 99.8896 96.208 99.5537 99.5604 99.6775 99.8191 99.9899 99.9766 98.658 99.8858
H-0	99.44663899739584	n = ( n ^ ( n - 1 ) ) - 0 ;
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 99.8384 99.6785 99.8916 99.9906 99.9672 96.6108 97.0054 99.9267 99.8582
H-0	99.4452880859375	n = ( n & ( n - 1 ) ) - 1 ;
P-0	99.9745 99.8656 99.8896 96.208 99.5537 99.5604 99.6775 99.8191 99.9899 99.9766 97.9358 99.6805 99.9351 99.8337
H-0	99.4449462890625	n = ( n ^ ( n >> 1 ) ) ;
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 99.8384 94.4791 99.8029 99.9989 99.9754 99.83 99.9273
H-0	99.44471958705357	n = ( n ^ ( n - 1 ) ) ) ;
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 99.8384 99.6785 99.8916 99.9906 99.9672 96.1965 97.8633 99.8677
H-0	99.440673828125	n = ( n ^ ( n - 1 ) ) )
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 99.8384 99.6785 99.8916 99.9906 99.9672 96.1965 98.2337
H-0	99.43727329799107	n = ( n ^ ( n - 1 ) ) ) }
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 99.8384 99.6785 99.8916 99.9906 99.9672 96.1965 98.0836 99.5432
H-0	99.43310546875	n = ( n ^ ( n ? 1 : 0 ) ) ;
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 99.8384 94.743 99.5884 99.9815 99.1335 99.9219 99.9909 99.5117 99.8548
H-0	99.42979329427084	n = ( n ^ ( n - 1 ) ) * 0 ;
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 99.8384 99.6785 99.8916 99.9906 99.9672 96.0733 98.3703 98.9633 99.7413
H-0	99.42554473876953	n = n ^ ( n ^ ( n - 1 ) ) ; }
P-0	99.9745 97.5275 99.1664 99.9088 99.818 98.2408 99.8043 99.6994 99.7777 99.9317 99.9962 99.9485 99.9775 97.6062 99.6518
H-0	99.42434692382812	n = ( n + 1 ) ^ ( n - 1 ) ; }
P-0	99.9745 99.8656 99.8896 96.8187 99.6531 99.9836 98.7054 99.8527 99.8244 99.7198 99.9123 99.9912 99.9172 97.2315 99.6705
H-0	99.41209059495192	n = ( n + ( n - 1 ) ) ;
P-0	99.9745 99.8656 99.8896 96.8187 97.9037 99.6369 99.6565 99.8771 99.9981 99.7078 99.4166 99.8329
H-0	99.41206498579545	n = ( n + 1 ) - 1 ;
P-0	99.9745 99.8656 99.8896 96.8187 99.6531 99.9836 98.1897 99.5658 99.9612 99.8515
H-0	99.41183706430289	n = ( n ^ ( n + $NUMBER$ ) ) ;
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 99.8384 96.4802 97.4592 99.9897 99.9736 99.7527 99.9276
H-0	99.40634390024039	n = ( n ^ ( 1 - 1 ) ) ;
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 95.014 99.4825 99.8159 99.8026 99.9684 99.3727 99.8938
H-0	99.39846567007211	n = ( n ^ ( n & $NUMBER$ ) ) ;
P-0	99.9745 99.8656 99.8896 99.5655 99.8579 99.8384 95.9723 97.9759 99.8789 99.9678 99.6953 99.9188
H-0	99.39800555889423	n = ( int ) ( n - 1 ) ; }
P-0	99.9745 99.8656 97.2008 99.9726 99.5789 99.4698 99.3376 99.9052 99.9694 99.915 97.6763 99.5289
H-0	99.39593505859375	n = ( byte ) ( n - 1 ) ;
P-0	99.9745 99.8656 95.3787 99.7966 99.568 99.5656 99.3385 99.9143 99.9595 99.9116 99.699
H-0	99.39325420673077	n = ( n - 1 ) ? 0 : 0 ;
P-0	99.9745 99.8656 99.8896 98.2636 99.7877 99.9701 98.4271 97.6523 99.9734 98.9718 99.988 99.5691
H-0	99.39218374399039	n = ( n - 1 ) ? 1 : 0 ;
P-0	99.9745 99.8656 99.8896 98.2636 99.7877 99.9701 98.4271 97.2355 99.9737 99.3697 99.987 99.5749
H-0	99.39077524038461	n = ( n - ( n - 1 ) ) ;
P-0	99.9745 99.8656 99.8896 98.2636 96.3604 99.3982 99.6508 99.776 99.9961 99.8579 99.4374 99.8305
H-0	99.38949584960938	n = ( n ^ 0 n - 1 ) ;
P-0	99.9745 99.8656 99.8896 99.5655 97.0208 98.8644 98.4656 99.8564 99.9965 99.5413 99.8544
H-0	99.3862637606534	n = ( n ^ n - 1 ) ;
P-0	99.9745 99.8656 99.8896 99.5655 96.1956 98.9027 99.8449 99.9973 99.3926 99.8413
H-0	99.3853759765625	n = ( n ^ 0 n ) ;
P-0	99.9745 99.8656 99.8896 99.5655 97.0208 98.8644 99.6213 99.6204 99.6524
H-0	99.38356526692708	n = ( int ) ( n + 1 ) ;
P-0	99.9745 99.8656 97.2008 99.9726 99.5789 99.4698 97.3083 99.8824 99.9785 99.9418 99.65
H-0	99.37729899088542	n = n ^ ( n - 1 ) ; }
P-0	99.9745 97.5275 99.1664 99.9088 99.818 99.6912 99.9162 99.9886 99.8771 97.4011 99.4788
H-0	99.37534401633523	n = ( n ^ 0 - 1 ) ;
P-0	99.9745 99.8656 99.8896 99.5655 97.0208 98.783 99.3275 99.9926 99.1135 99.8168
H-0	99.3673095703125	n = ( n ^ - 1 ) ;
P-0	99.9745 99.8656 99.8896 99.5655 95.6109 99.8797 99.9836 99.4467 99.6777
H-0	99.35074869791667	n = ( n + 1 ) ;
P-0	99.9745 99.8656 99.8896 96.8187 99.6531 99.9836 98.3716 99.8206
H-0	99.31279962713069	n = ( n - 0 ) - 1 ;
P-0	99.9745 99.8656 99.8896 98.2636 97.4046 99.943 97.8443 99.6674 99.9561 99.8526
H-0	99.31153453480114	n = n * ( n - 1 ) ;
P-0	99.9745 97.5275 97.0381 99.692 99.849 99.6033 99.8702 99.9908 99.413 99.6891
H-0	99.31137917258523	n = ( n - 1 ) - $NUMBER$ ;
P-0	99.9745 99.8656 99.8896 98.2636 99.7877 99.9701 97.9407 97.1791 99.9136 99.8612
H-0	99.31082492404514	n = ( n ^ n ) ;
P-0	99.9745 99.8656 99.8896 99.5655 96.1956 99.4843 99.2412 99.8017
H-0	99.3070401278409	n = n ^ ( n - $NUMBER$ ) ;
P-0	99.9745 97.5275 99.1664 99.9088 99.818 99.6912 96.8783 99.9734 99.8712 99.7887
H-0	99.30115855823864	n = n + ( n - 1 ) ;
P-0	99.9745 97.5275 97.1885 99.1018 99.7868 99.6345 99.9012 99.9959 99.728 99.6946
H-0	99.29881702769886	n = ( n ^ 0 - n ) ;
P-0	99.9745 99.8656 99.8896 99.5655 97.0208 98.783 98.3794 99.9278 99.2705 99.831
H-0	99.29855007595486	n = ( n ^ $NUMBER$ ) ;
P-0	99.9745 99.8656 99.8896 99.5655 95.8507 99.9415 99.0011 99.819
H-0	99.25849066840277	n += ( n - 1 ) ;
P-0	95.8969 99.8213 99.8882 98.9649 99.8097 99.9823 99.4937 99.6899
H-0	99.25582275390624	n = ( n - 1 ) n ;
P-0	99.9745 99.8656 99.8896 98.2636 99.7877 99.9701 95.6249 99.686 99.7168
H-0	99.22908528645833	n = ( n - $NUMBER$ ) ;
P-0	99.9745 99.8656 99.8896 98.2636 97.3139 99.9482 98.2117 99.8153
H-0	99.2266845703125	n = ( n - 0 ) ;
P-0	99.9745 99.8656 99.8896 98.2636 97.4046 99.943 98.1054 99.8143
H-0	99.19474283854167	n = ( n ^ 0 ) ;
P-0	99.9745 99.8656 99.8896 99.5655 97.0208 97.9583 98.8855 99.8135
S-1	while ( true ) {
T-1	while ( ! queue . is CaMeL Empty ( ) ) {
H-1	99.73406427556819	while ( true ) { while ( true ) {
P-1	99.9958 99.3369 99.9361 99.9759 98.7981 99.9926 99.1701 99.9466 99.9487 100.6307
H-1	99.70147150213069	while ( true ) { if ( true ) {
P-1	99.9958 99.3369 99.9361 99.9759 98.2051 99.9945 98.9816 99.8573 99.8879 101.2019
H-1	99.69017537434895	while ( true ) { while ( ! true ) {
P-1	99.9958 99.3369 99.9361 99.9759 98.7981 99.9926 98.1423 99.001 99.8281 99.8658 102.0664
H-1	99.64744984019886	if ( true ) { while ( true ) {
P-1	99.9966 99.1004 99.7404 99.9547 98.9108 99.9901 98.993 99.9239 99.8843 101.32
H-1	99.5508321126302	while ( true ) { if ( ! true ) {
P-1	99.9958 99.3369 99.9361 99.9759 98.2051 99.9945 97.864 98.7823 99.6754 99.8497 101.6511
H-1	99.5319315592448	if ( true ) { while ( ! true ) {
P-1	99.9966 99.1004 99.7404 99.9547 98.9108 99.9901 98.1925 98.6851 99.8051 99.7715 101.9284
H-1	99.5145772298177	} while ( true ) { while ( true ) {
P-1	99.1653 99.9869 99.1951 99.9381 99.7768 98.629 99.988 99.0927 99.9741 99.9372 101.0402
H-1	99.5109354654948	while ( true ) { while ( true ) { {
P-1	99.9958 99.3369 99.9361 99.9759 98.7981 99.9926 99.1701 99.9466 99.9487 95.7425 101.9448
H-1	99.50015258789062	if ( true ) { return false ; } else {
P-1	99.9966 99.1004 99.7404 99.9547 98.0246 98.4949 99.4827 99.9149 99.1125 99.8027 102.0698
H-1	99.4973856608073	} while ( true ) { if ( true ) {
P-1	99.1653 99.9869 99.1951 99.9381 99.7768 98.1125 99.9905 98.8908 99.905 99.9045 101.6518
H-1	99.49495442708333	if ( true ) { return true ; } else {
P-1	99.9966 99.1004 99.7404 99.9547 98.0246 98.391 99.5441 99.9193 99.0947 99.8001 102.0658
H-1	99.4836934407552	} if ( true ) { while ( true ) {
P-1	98.9146 99.9874 98.954 99.7785 99.8915 98.5121 99.9867 98.7779 99.961 99.8933 101.696
H-1	99.47842407226562	while ( true ) { if ( true ) { }
P-1	99.9958 99.3369 99.9361 99.9759 98.2051 99.9945 98.9816 99.8573 99.8879 96.0152 102.2116
H-1	99.47731526692708	while ( ! true ) { while ( true ) {
P-1	99.9958 97.5458 99.0142 99.6508 99.8347 98.3249 99.9821 99.0094 99.9392 99.8765 101.2114
H-1	99.4772237141927	while ( true ) { while ( true ) { }
P-1	99.9958 99.3369 99.9361 99.9759 98.7981 99.9926 99.1701 99.9466 99.9487 95.0486 102.2341
H-1	99.46833939985795	while ( true ) { return true ) ; }
P-1	99.9958 99.3369 99.9361 99.9759 96.8479 98.4005 98.4773 99.7925 99.6165 102.4293
H-1	99.4576748934659	while ( true ) { while ( true ) ;
P-1	99.9958 99.3369 99.9361 99.9759 98.7981 99.9926 99.1701 99.9466 95.5952 101.944
H-1	99.45698686079545	while ( true ) { while ( ! true )
P-1	99.9958 99.3369 99.9361 99.9759 98.7981 99.9926 98.1423 99.001 99.8281 99.6769
H-1	99.4442647298177	while ( true ) { { while ( true ) {
P-1	99.9958 99.3369 99.9361 99.9759 96.0296 97.9967 99.981 99.0763 99.9326 99.9273 101.7999
H-1	99.44293212890625	while ( true ) { synchronized ( ! true ) {
P-1	99.9958 99.3369 99.9361 99.9759 96.1675 99.9935 98.072 98.7861 99.7923 99.9766 101.9393
H-1	99.42073197798295	while ( true ) { return false ) ; }
P-1	99.9958 99.3369 99.9361 99.9759 96.8479 98.0965 98.291 99.7651 99.574 102.4658
H-1	99.40683815696023	while ( true ) { synchronized ( true ) {
P-1	99.9958 99.3369 99.9361 99.9759 96.1675 99.9935 98.4163 99.9154 99.9881 100.4066
H-1	99.37897283380681	while ( true ) { while ( false ) {
P-1	99.9958 99.3369 99.9361 99.9759 98.7981 99.9926 95.294 99.9017 99.9514 100.6432
H-1	99.37623180042614	while ( ! true ) { return true ; }
P-1	99.9958 97.5458 99.0142 99.6508 99.8347 97.6743 98.4586 99.5205 99.8354 102.2655
H-1	99.37596638997395	while ( true ) {
P-1	99.9958 99.3369 99.9361 99.9759 97.6681
H-1	99.35609019886364	if ( true ) { while ( false ) {
P-1	99.9966 99.1004 99.7404 99.9547 98.9108 99.9901 95.8737 99.8892 99.8898 101.2636
H-1	99.35545765269886	if ( true ) { if ( true ) {
P-1	99.9966 99.1004 99.7404 99.9547 96.7717 99.9904 98.6982 99.8239 99.7512 100.7749
H-1	99.3437832919034	while ( true ) { if ( true ) ;
P-1	99.9958 99.3369 99.9361 99.9759 98.2051 99.9945 98.9816 99.8573 95.6991 101.4561
H-1	99.2941006747159	if ( true ) { while ( ! true )
P-1	99.9966 99.1004 99.7404 99.9547 98.9108 99.9901 98.1925 98.6851 99.8051 99.5518
H-1	99.27577903053977	while ( true ) { if ( ! true )
P-1	99.9958 99.3369 99.9361 99.9759 98.2051 99.9945 97.864 98.7823 99.6754 98.9245
H-1	99.2698641690341	} if ( true ) { return false ; }
P-1	98.9146 99.9874 98.954 99.7785 99.8915 98.3459 98.6082 99.5481 99.8549 100.6339
H-1	99.24596058238636	} while ( true ) { while ( true )
P-1	99.1653 99.9869 99.1951 99.9381 99.7768 98.629 99.988 99.0927 99.9741 98.508
H-1	99.23110129616477	if ( true ) { return true ; } }
P-1	99.9966 99.1004 99.7404 99.9547 98.0246 98.391 99.5441 99.9193 98.4031 100.1603
H-1	99.22597434303977	if ( true ) { while ( true ) ;
P-1	99.9966 99.1004 99.7404 99.9547 98.9108 99.9901 98.993 99.9239 96.2532 100.315
H-1	99.21992631392045	if ( true ) { return false ; } }
P-1	99.9966 99.1004 99.7404 99.9547 98.0246 98.4949 99.4827 99.9149 98.2622 100.1401
H-1	99.21965997869319	while ( true ) { return while ( true )
P-1	99.9958 99.3369 99.9361 99.9759 96.8479 97.4588 99.2684 99.0487 99.9511 100.2537
H-1	99.21891566685268	while ( ! true ) {
P-1	99.9958 97.5458 99.0142 99.6508 99.8347 99.1481
H-1	99.21561889648437	while ( true ) { return true ; }
P-1	99.9958 99.3369 99.9361 99.9759 96.8479 98.4005 99.3127 99.7718 99.2355
H-1	99.19422496448864	while ( ! true ) { while ( true )
P-1	99.9958 97.5458 99.0142 99.6508 99.8347 98.3249 99.9821 99.0094 99.9392 98.4967
H-1	99.18238414417614	while ( true ) { return true ; } }
P-1	99.9958 99.3369 99.9361 99.9759 96.8479 98.4005 99.3127 99.7718 98.6794 99.4062
H-1	99.18051147460938	throw new Runtime CaMeL Exception ( $STRING$ ) ;
P-1	99.8639 98.8289 99.9931 99.9268 99.9989 99.8215 99.3198 99.9156 99.9195
H-1	99.18021850585937	while ( true ) { return false ; }
P-1	99.9958 99.3369 99.9361 99.9759 96.8479 98.0965 99.2278 99.7435 99.2988
H-1	99.17845569957386	if ( true ) { return false ; } else
P-1	99.9966 99.1004 99.7404 99.9547 98.0246 98.4949 99.4827 99.9149 99.1125 98.8337
H-1	99.17507102272727	while ( true ) { while ( true ) ?
P-1	99.9958 99.3369 99.9361 99.9759 98.7981 99.9926 99.1701 99.9466 94.3837 100.0468
H-1	99.16920055042614	if ( true ) { return true ; } else
P-1	99.9966 99.1004 99.7404 99.9547 98.0246 98.391 99.5441 99.9193 99.0947 98.7877
H-1	99.16374206542969	try { while ( true ) {
P-1	99.988 99.0826 99.9982 99.5275 99.9477 99.9683 99.3284
H-1	99.150146484375	if ( true ) { return false ; }
P-1	99.9966 99.1004 99.7404 99.9547 98.0246 98.4949 99.4827 99.9149 98.4846
H-1	99.1406478881836	while ( true || true ) {
P-1	99.9958 99.3369 96.0391 99.2853 99.852 99.932 99.3411
H-1	99.13734741210938	if ( true ) { return true ; }
P-1	99.9966 99.1004 99.7404 99.9547 98.0246 98.391 99.5441 99.9193 98.3947
H-1	99.13148328993056	while ( true ) { / * /
P-1	99.9958 99.3369 99.9361 99.9759 97.4409 99.4809 97.5995 99.0743
H-1	99.12230428059895	if ( true ) {
P-1	99.9966 99.1004 99.7404 99.9547 97.6341
H-1	99.11822509765625	} while ( true ) {
P-1	99.1653 99.9869 99.1951 99.9381 99.7768 98.3139
H-1	99.11787632533482	} if ( true ) {
P-1	98.9146 99.9874 98.954 99.7785 99.8915 98.8477
H-1	99.113134765625	while ( true ) { while ( true )
P-1	99.9958 99.3369 99.9361 99.9759 98.7981 99.9926 99.1701 99.9466 94.6361
H-1	99.10157470703125	while ( true ) { / * * /
P-1	99.9958 99.3369 99.9361 99.9759 97.4409 99.4809 98.2456 98.1342 99.1264
H-1	99.08732604980469	if ( true && true ) {
P-1	99.9966 99.1004 97.6643 99.0544 99.7505 99.9245 98.9003
H-1	99.08121948242187	while ( true ) { / / * /
P-1	99.9958 99.3369 99.9361 99.9759 97.4409 98.8146 98.2844 98.3658 99.3187
H-1	99.0782958984375	while ( true ) { return true ) ;
P-1	99.9958 99.3369 99.9361 99.9759 96.8479 98.4005 98.4773 99.7925 98.677
H-1	99.07789442274306	while ( ! true || true ) {
P-1	99.9958 97.5458 99.0142 97.4407 99.3439 99.8378 99.9052 99.2748
H-1	99.06886121961806	while ( ! true && true ) {
P-1	99.9958 97.5458 99.0142 97.5925 99.2555 99.8598 99.9189 99.0944
H-1	99.06277465820312	if ( true || true ) {
P-1	99.9966 99.1004 97.5197 99.1439 99.6797 99.9159 98.8384
H-1	99.05073547363281	while ( true && true ) {
P-1	99.9958 99.3369 95.6888 99.158 99.8704 99.943 99.07
H-1	99.04918755425348	/ * * while ( true ) {
P-1	99.8092 99.3858 98.1892 99.9203 99.7285 99.8922 99.8909 99.5001
H-1	99.04823303222656	} while ( ! true ) {
P-1	99.1653 99.9869 97.9732 98.9707 99.6692 99.7705 99.3986
H-1	99.03697509765625	while ( true ) { return false ) ;
P-1	99.9958 99.3369 99.9361 99.9759 96.8479 98.0965 98.291 99.7651 98.7815
H-1	99.03683471679688	while ( true ) { try {
P-1	99.9958 99.3369 99.9361 99.9759 96.3661 99.9837 97.3572
H-1	99.03005545479911	} while ( true ) ;
P-1	99.1653 99.9869 99.1951 99.9381 97.747 99.7266
H-1	99.02672467912946	while ( true ) { {
P-1	99.9958 99.3369 99.9361 99.9759 96.0296 98.5697
H-1	99.01995849609375	while ( true ) { return true ;
P-1	99.9958 99.3369 99.9361 99.9759 96.8479 98.4005 99.3127 98.0308
H-1	99.01283264160156	/ * while ( true ) {
P-1	99.8092 98.5335 99.9 99.6249 99.887 99.8461 99.3756
H-1	98.99454074435764	while ( true ) { return false ;
P-1	99.9958 99.3369 99.9361 99.9759 96.8479 98.0965 99.2278 98.1909
H-1	98.99021911621094	} { if ( true ) {
P-1	97.3194 99.2908 99.9947 99.0871 99.8356 99.9319 99.0108
H-1	98.9796142578125	while ( true ) { true ;
P-1	99.9958 99.3369 99.9361 99.9759 95.2787 99.6919 98.2787
H-1	98.97276306152344	try { if ( true ) {
P-1	99.988 98.7867 99.9986 99.3103 99.7762 99.9117 98.5414
H-1	98.97272491455078	} if ( ! true ) {
P-1	98.9146 99.9874 98.1038 98.6072 99.4964 99.8959 99.325
H-1	98.96011788504464	if ( ! true ) {
P-1	99.9966 97.6488 98.73 99.4263 99.7965 98.815
H-1	98.93650599888393	return while ( true ) {
P-1	98.3843 99.5089 99.1396 99.9283 99.7068 99.0402
H-1	98.87451171875	if ( true ) { {
P-1	99.9966 99.1004 99.7404 99.9547 96.1082 98.9136
H-1	98.82855224609375	while ( true ) { }
P-1	99.9958 99.3369 99.9361 99.9759 93.8474 99.3648
H-1	98.8131103515625	while ( ! true )
P-1	99.9958 97.5458 99.0142 99.6508 97.3291
H-1	98.80755615234375	if ( true ) { }
P-1	99.9966 99.1004 99.7404 99.9547 95.2063 99.3469
H-1	98.793701171875	} while ( true )
P-1	99.1653 99.9869 99.1951 99.9381 97.0254
H-1	98.786669921875	while ( true )
P-1	99.9958 99.3369 99.9361 95.3215
H-1	98.69026692708333	while ( true ) ;
P-1	99.9958 99.3369 99.9361 93.9196 99.6102
H-1	98.65672302246094	return true ;
P-1	98.5349 99.6573 99.5873
H-1	98.52650756835938	return true ) ;
P-1	98.5349 97.4916 99.8087 99.9499
H-1	98.463720703125	return true ; }
P-1	98.5349 99.6573 98.5299 98.7491
H-1	98.37893676757812	if ( true )
P-1	99.9966 99.1004 99.7404 94.7497
H-1	98.20126342773438	break ) ;
P-1	98.4107 99.5918 99.4615
H-1	98.1634292602539	return false ;
P-1	96.5402 99.6506 99.6154
H-1	98.13877868652344	} ) ;
P-1	95.4698 99.8459 99.7879
H-1	98.05757649739583	break ;
P-1	99.1804 99.6513
H-1	97.99321746826172	assert true ;
P-1	98.9332 99.2228 98.8444
H-1	97.96414947509766	return while )
P-1	98.3843 97.7459 98.8789
H-1	97.47178141276042	} {
P-1	97.3194 97.6445
H-1	97.44034830729167	break {
P-1	98.1892 98.7909
H-1	97.29306030273438	* /
P-1	98.47 99.6133
H-1	96.9315185546875	}
P-1	96.4116
H-1	96.1800537109375	do
P-1	99.321
H-1	95.52745056152344	{
P-1	96.2508
S-2	for ( Integer count : arr ) {
T-2	for ( Integer count : counts ) {
H-2	99.83995145909927	for ( Integer count : arr ) { for ( Integer count : arr ) {
P-2	99.9986 99.6476 99.4364 99.9296 99.8232 99.8663 99.9086 98.5065 99.9938 99.4949 98.8911 99.8906 99.3698 99.769 99.9416 103.0761
H-2	99.83025045955883	for ( Integer count : arr ) { for ( Integer i : arr ) {
P-2	99.9986 99.6476 99.4364 99.9296 99.8232 99.8663 99.9086 98.5065 99.9938 99.4949 98.9364 99.859 99.2697 99.7193 99.9152 103.0735
H-2	99.76629279641544	for ( Integer count : arr ) { for ( int i : arr ) {
P-2	99.9986 99.6476 99.4364 99.9296 99.8232 99.8663 99.9086 98.5065 99.9938 98.9036 99.6574 98.6541 99.3791 99.8119 99.9133 102.861
H-2	99.75574448529412	for ( Integer i : arr ) { for ( Integer i : arr ) {
P-2	99.9986 99.6476 98.1861 99.8921 99.7784 99.838 99.8875 98.4604 99.9939 99.4826 99.2042 99.8637 99.2225 99.7253 99.9103 103.0209
H-2	99.75422219669117	for ( Integer i : arr ) { for ( Integer count : arr ) {
P-2	99.9986 99.6476 98.1861 99.8921 99.7784 99.838 99.8875 98.4604 99.9939 99.4826 98.8831 99.852 99.4342 99.7681 99.9298 103.0538
H-2	99.7515869140625	for ( int i = 0 ; i < arr . length ; i ++ )
P-2	99.9986 98.5993 99.5372 99.5517 99.7166 99.7371 99.923 99.9837 99.3928 99.8821 99.5181 99.496 99.9453 99.979 99.9983 100.7824
H-2	99.74857584635417	for ( Integer count : arr ) {
P-2	99.9986 99.6476 99.4364 99.9296 99.8232 99.8663 99.9086 99.3911
H-2	99.74376005284927	for ( int i : arr ) { for ( Integer count : arr ) {
P-2	99.9986 98.5993 99.5372 98.9672 99.7698 99.8863 99.8984 98.8526 99.9949 99.4124 99.1108 99.8573 99.4945 99.7447 99.9059 102.8782
H-2	99.72739545036765	for ( Integer count : arr ) { for ( int count : arr ) {
P-2	99.9986 99.6476 99.4364 99.9296 99.8232 99.8663 99.9086 98.5065 99.9938 98.9036 97.9168 99.5392 99.4479 99.8099 99.9332 102.9687
H-2	99.71572696461396	for ( int count : arr ) { for ( Integer count : arr ) {
P-2	99.9986 98.5993 98.3524 99.6957 99.818 99.8675 99.8988 98.7582 99.9946 99.4185 99.0406 99.8806 99.4426 99.7375 99.9322 102.9964
H-2	99.71543255974265	for ( int i : arr ) { for ( Integer i : arr ) {
P-2	99.9986 98.5993 99.5372 98.9672 99.7698 99.8863 99.8984 98.8526 99.9949 99.4124 98.9512 99.8587 99.2788 99.7005 99.869 102.8515
H-2	99.6932373046875	for ( int i = 0 ; i < 0 ; i ++ ) {
P-2	99.9986 98.5993 99.5372 99.5517 99.7166 99.7371 99.923 99.9837 96.8986 99.7067 99.916 99.9624 99.9984 99.9302 101.8965
H-2	99.69196633731617	for ( int count : arr ) { for ( Integer i : arr ) {
P-2	99.9986 98.5993 98.3524 99.6957 99.818 99.8675 99.8988 98.7582 99.9946 99.4185 98.9174 99.835 99.3093 99.6852 99.8965 102.9828
H-2	99.68419692095588	for ( Integer i : arr ) { for ( int i : arr ) {
P-2	99.9986 99.6476 98.1861 99.8921 99.7784 99.838 99.8875 98.4604 99.9939 98.9353 99.6808 98.7306 99.3486 99.8193 99.8852 102.8132
H-2	99.68129595588235	for ( Integer count : arr ) { for ( Integer i : 0 ) {
P-2	99.9986 99.6476 99.4364 99.9296 99.8232 99.8663 99.9086 98.5065 99.9938 99.4949 98.9364 99.859 97.4336 99.74 99.7561 102.5157
H-2	99.67906278722427	for ( Integer count : arr ) { for ( Integer count : 0 ) {
P-2	99.9986 99.6476 99.4364 99.9296 99.8232 99.8663 99.9086 98.5065 99.9938 99.4949 98.8911 99.8906 97.0728 99.8591 99.9119 102.5771
H-2	99.67831420898438	for ( int i = 0 ; i < $NUMBER$ ; i ++ ) {
P-2	99.9986 98.5993 99.5372 99.5517 99.7166 99.7371 99.923 99.9837 96.5403 99.6776 99.9231 99.9684 99.9983 99.9326 102.0296
H-2	99.65937805175781	if ( arr != null ) { for ( Integer count : arr ) {
P-2	99.9957 98.7143 99.2512 99.9837 99.7186 99.8226 99.7197 99.9922 99.7559 99.2507 99.9527 99.7625 99.85 99.8725 101.851
H-2	99.64308794806985	for ( Integer count : arr ) { for ( String count : arr ) {
P-2	99.9986 99.6476 99.4364 99.9296 99.8232 99.8663 99.9086 98.5065 99.9938 95.9664 98.9629 99.8879 99.3653 99.7803 99.9542 103.1692
H-2	99.63962689568015	for ( Integer i : arr ) { for ( int count : arr ) {
P-2	99.9986 99.6476 98.1861 99.8921 99.7784 99.838 99.8875 98.4604 99.9939 98.9353 97.7723 99.6121 99.4655 99.7998 99.9092 102.9613
H-2	99.63750457763672	for ( int i = 0 ; i < count ; i ++ ) {
P-2	99.9986 98.5993 99.5372 99.5517 99.7166 99.7371 99.923 99.9837 96.4921 99.2122 99.9297 99.9692 99.9984 99.9155 101.9001
H-2	99.63749425551471	for ( int i : arr ) { for ( int i : arr ) {
P-2	99.9986 98.5993 99.5372 98.9672 99.7698 99.8863 99.8984 98.8526 99.9949 99.0758 99.7001 98.2898 99.351 99.8057 99.8581 102.5167
H-2	99.63315716911765	for ( Integer count : arr ) { for ( Integer arr : arr ) {
P-2	99.9986 99.6476 99.4364 99.9296 99.8232 99.8663 99.9086 98.5065 99.9938 99.4949 95.6431 99.8225 99.1819 99.804 99.9305 103.0404
H-2	99.62187643612133	for ( int i = 0 ; i < arr . length { i ++ )
P-2	99.9986 98.5993 99.5372 99.5517 99.7166 99.7371 99.923 99.9837 99.3928 99.8821 99.5181 98.6618 98.2848 99.7418 99.9624 101.3452
H-2	99.61436552159927	for ( int i : arr ) { for ( int count : arr ) {
P-2	99.9986 98.5993 99.5372 98.9672 99.7698 99.8863 99.8984 98.8526 99.9949 99.0758 97.7396 99.4952 99.5156 99.7789 99.8825 102.7164
H-2	99.61116027832031	if ( arr != null ) { for ( Integer i : arr ) {
P-2	99.9957 98.7143 99.2512 99.9837 99.7186 99.8226 99.7197 99.9922 99.7559 98.647 99.9181 99.7046 99.8536 99.8314 101.813
H-2	99.61053825827206	for ( int count : arr ) { for ( int i : arr ) {
P-2	99.9986 98.5993 98.3524 99.6957 99.818 99.8675 99.8988 98.7582 99.9946 99.0645 99.6505 98.2487 99.3741 99.7899 99.8886 102.6441
H-2	99.60568416819854	for ( Integer i : arr ) { for ( Integer i : 0 ) {
P-2	99.9986 99.6476 98.1861 99.8921 99.7784 99.838 99.8875 98.4604 99.9939 99.4826 99.2042 99.8637 97.5944 99.6776 99.6263 102.4298
H-2	99.5985466452206	for ( int i = 0 { i < arr . length ; i ++ )
P-2	99.9986 98.5993 99.5372 99.5517 99.7166 98.0818 99.5982 99.7044 99.3142 99.8932 99.4171 99.4759 99.9224 99.9713 99.9977 100.6598
H-2	99.59259711371527	for ( Integer i : arr ) {
P-2	99.9986 99.6476 98.1861 99.8921 99.7784 99.838 99.8875 99.3694
H-2	99.58466339111328	for ( Integer count : arr ) { for ( Integer i : arr )
P-2	99.9986 99.6476 99.4364 99.9296 99.8232 99.8663 99.9086 98.5065 99.9938 99.4949 98.9364 99.859 99.2697 99.7193 99.229
H-2	99.57356262207031	for ( Integer count : arr ) { for ( Integer count : arr )
P-2	99.9986 99.6476 99.4364 99.9296 99.8232 99.8663 99.9086 98.5065 99.9938 99.4949 98.8911 99.8906 99.3698 99.769 98.9154
H-2	99.55458286830357	for ( int i = 0 ; i < arr ) break ;
P-2	99.9986 98.5993 99.5372 99.5517 99.7166 99.7371 99.923 99.9837 99.3928 97.2398 98.2957 99.7393 102.3137
H-2	99.55430385044643	int i = 0 ; for ( Integer count : arr ) {
P-2	98.8633 98.896 99.4528 99.8089 99.3521 99.9861 99.68 99.2358 99.9168 99.7042 99.9034 99.9204 102.2969
H-2	99.53940993088942	for ( Integer count : arr . iterator ( ) ) {
P-2	99.9986 99.6476 99.4364 99.9296 99.8232 97.6784 98.7682 99.9934 99.9976 99.9984 99.887 99.118
H-2	99.53582000732422	for ( Integer count : arr ) { for ( Integer i : 0 )
P-2	99.9986 99.6476 99.4364 99.9296 99.8232 99.8663 99.9086 98.5065 99.9938 99.4949 98.9364 99.859 97.4336 99.74 100.2629
H-2	99.53411865234375	for ( Integer count : arr ) { for ( int i = 0 )
P-2	99.9986 99.6476 99.4364 99.9296 99.8232 99.8663 99.9086 98.5065 99.9938 98.9036 99.6574 99.6704 99.7036 96.5701 101.1944
H-2	99.53403883713942	for ( Integer count : arr . size ( ) ) {
P-2	99.9986 99.6476 99.4364 99.9296 99.8232 97.6784 98.6042 99.9885 99.9991 99.9987 99.9033 99.199
H-2	99.53315734863281	for ( Integer count : arr ) { for ( int i = count )
P-2	99.9986 99.6476 99.4364 99.9296 99.8232 99.8663 99.9086 98.5065 99.9938 98.9036 99.6574 99.6704 96.537 99.1677 101.7479
H-2	99.52276611328125	for ( Integer count : arr ) { for ( int i : arr )
P-2	99.9986 99.6476 99.4364 99.9296 99.8232 99.8663 99.9086 98.5065 99.9938 98.9036 99.6574 98.6541 99.3791 99.8119 99.1117
H-2	99.51827799479166	for ( int i = 0 ; i < 0 ; i ++ )
P-2	99.9986 98.5993 99.5372 99.5517 99.7166 99.7371 99.923 99.9837 96.8986 99.7067 99.916 99.9624 99.9984 99.509
H-2	99.50871276855469	for ( Integer i : arr ) { for ( Integer i : arr )
P-2	99.9986 99.6476 98.1861 99.8921 99.7784 99.838 99.8875 98.4604 99.9939 99.4826 99.2042 99.8637 99.2225 99.7253 99.2229
H-2	99.5016098022461	for ( Integer count : arr ) { for ( int i = i )
P-2	99.9986 99.6476 99.4364 99.9296 99.8232 99.8663 99.9086 98.5065 99.9938 98.9036 99.6574 99.6704 97.1552 98.851 100.9416
H-2	99.49987030029297	for ( int i : arr ) { for ( Integer count : arr )
P-2	99.9986 98.5993 99.5372 98.9672 99.7698 99.8863 99.8984 98.8526 99.9949 99.4124 99.1108 99.8573 99.4945 99.7447 99.1381
H-2	99.49820285373264	for ( int i : arr ) {
P-2	99.9986 98.5993 99.5372 98.9672 99.7698 99.8863 99.8984 99.0911
H-2	99.49629211425781	for ( Integer i : arr ) { for ( Integer count : arr )
P-2	99.9986 99.6476 98.1861 99.8921 99.7784 99.838 99.8875 98.4604 99.9939 99.4826 98.8831 99.852 99.4342 99.7681 99.1025
H-2	99.496044921875	for ( int i = 0 ; i < $NUMBER$ ; i ++ )
P-2	99.9986 98.5993 99.5372 99.5517 99.7166 99.7371 99.923 99.9837 96.5403 99.6776 99.9231 99.9684 99.9983 99.5499
H-2	99.49065399169922	for ( Integer count : arr ) { for ( int i : 0 )
P-2	99.9986 99.6476 99.4364 99.9296 99.8232 99.8663 99.9086 98.5065 99.9938 98.9036 99.6574 98.6541 97.2668 99.7039 100.8182
H-2	99.48991394042969	for ( Integer i : arr ) { for ( Integer i : 0 )
P-2	99.9986 99.6476 98.1861 99.8921 99.7784 99.838 99.8875 98.4604 99.9939 99.4826 99.2042 99.8637 97.5944 99.6776 100.598
H-2	99.48554229736328	for ( int i : arr ) { for ( Integer i : arr )
P-2	99.9986 98.5993 99.5372 98.9672 99.7698 99.8863 99.8984 98.8526 99.9949 99.4124 98.9512 99.8587 99.2788 99.7005 99.3269
H-2	99.48486328125	for ( int i = 0 ; i < count ; i ++ )
P-2	99.9986 98.5993 99.5372 99.5517 99.7166 99.7371 99.923 99.9837 96.4921 99.2122 99.9297 99.9692 99.9984 99.8883
H-2	99.47702026367188	for ( int i = 0 ; i < arr . size ( ) {
P-2	99.9986 98.5993 99.5372 99.5517 99.7166 99.7371 99.923 99.9837 99.3928 99.8821 98.6148 99.974 99.9992 97.2372 99.7492
H-2	99.4747314453125	for ( Integer count : arr ) { if ( count != 0 ) {
P-2	99.9986 99.6476 99.4364 99.9296 99.8232 99.8663 99.9086 97.3246 99.9878 97.9338 98.7796 99.5327 99.912 99.7479 100.0312
H-2	99.47011311848958	for ( int count : arr ) {
P-2	99.9986 98.5993 98.3524 99.6957 99.818 99.8675 99.8988 99.265
H-2	99.46746063232422	for ( Integer count : arr ) { for ( int count : arr )
P-2	99.9986 99.6476 99.4364 99.9296 99.8232 99.8663 99.9086 98.5065 99.9938 98.9036 97.9168 99.5392 99.4479 99.8099 99.0157
H-2	99.4670639038086	for ( Integer count : arr ) { if ( count == 0 ) {
P-2	99.9986 99.6476 99.4364 99.9296 99.8232 99.8663 99.9086 97.3246 99.9878 97.9338 99.198 99.5772 99.9218 99.5346 99.6492
H-2	99.460205078125	for ( Integer count : arr ) { for ( Integer count : 0 )
P-2	99.9986 99.6476 99.4364 99.9296 99.8232 99.8663 99.9086 98.5065 99.9938 99.4949 98.8911 99.8906 97.0728 99.8591 99.3083
H-2	99.45674133300781	for ( Integer count : arr )
P-2	99.9986 99.6476 99.4364 99.9296 99.8232 99.8663 97.2164
H-2	99.45010375976562	for ( Integer i : arr ) { for ( int i : arr )
P-2	99.9986 99.6476 98.1861 99.8921 99.7784 99.838 99.8875 98.4604 99.9939 98.9353 99.6808 98.7306 99.3486 99.8193 99.2687
H-2	99.44899338942308	for ( Integer i : arr . size ( ) ) {
P-2	99.9986 99.6476 98.1861 99.8921 99.7784 97.924 98.6484 99.9885 99.9991 99.9988 99.9034 99.1364
H-2	99.44779968261719	for ( int count : arr ) { for ( Integer count : arr )
P-2	99.9986 98.5993 98.3524 99.6957 99.818 99.8675 99.8988 98.7582 99.9946 99.4185 99.0406 99.8806 99.4426 99.7375 98.926
H-2	99.44382887620192	for ( Integer i : arr . iterator ( ) ) {
P-2	99.9986 99.6476 98.1861 99.8921 99.7784 97.924 98.6895 99.9935 99.9969 99.9985 99.8893 99.0397
H-2	99.44366455078125	for ( int count : arr ) { for ( Integer i : arr )
P-2	99.9986 98.5993 98.3524 99.6957 99.818 99.8675 99.8988 98.7582 99.9946 99.4185 98.9174 99.835 99.3093 99.6852 99.2145
H-2	99.434765625	if ( arr != null ) { for ( Integer count : arr )
P-2	99.9957 98.7143 99.2512 99.9837 99.7186 99.8226 99.7197 99.9922 99.7559 99.2507 99.9527 99.7625 99.85 98.695
H-2	99.41135951450893	for ( int i = 0 ; i < arr . length )
P-2	99.9986 98.5993 99.5372 99.5517 99.7166 99.7371 99.923 99.9837 99.3928 99.8821 99.5181 97.5486 98.6345
H-2	99.40171712239584	if ( arr != null ) { for ( Integer i : arr )
P-2	99.9957 98.7143 99.2512 99.9837 99.7186 99.8226 99.7197 99.9922 99.7559 98.647 99.9181 99.7046 99.8536 98.8916
H-2	99.4010009765625	for ( Integer [ ] arr : arr ) {
P-2	99.9986 99.6476 96.9185 99.9816 98.6391 99.7667 99.6829 99.9008 99.9369 99.2026
H-2	99.3973876953125	for ( Integer count : arr ) { if ( count == 0 )
P-2	99.9986 99.6476 99.4364 99.9296 99.8232 99.8663 99.9086 97.3246 99.9878 97.9338 99.198 99.5772 99.9218 98.6715
H-2	99.385986328125	for ( Integer count : arr ) { }
P-2	99.9986 99.6476 99.4364 99.9296 99.8232 99.8663 99.9086 95.7659 99.7478
H-2	99.36085001627605	for ( Integer count : arr ) { / * /
P-2	99.9986 99.6476 99.4364 99.9296 99.8232 99.8663 99.9086 96.6865 99.8704 98.6687 98.7584
H-2	99.3450458233173	for ( int count : arr . iterator ( ) ) {
P-2	99.9986 98.5993 98.3524 99.6957 99.818 97.7729 98.8903 99.9903 99.9973 99.9967 99.8908 98.7473
H-2	99.34053955078124	} for ( Integer count : arr ) {
P-2	99.2812 99.9945 99.5171 99.6479 99.9328 99.8568 99.9336 99.9631 99.3291
H-2	99.33914888822116	for ( int i : arr . iterator ( ) ) {
P-2	99.9986 98.5993 99.5372 98.9672 99.7698 97.6451 98.7964 99.9896 99.9969 99.9958 99.8838 98.4933
H-2	99.33234197443181	for ( Integer [ ] count : arr ) {
P-2	99.9986 99.6476 96.9185 99.9816 97.6865 99.8768 99.7973 99.9052 99.9307 99.1773
H-2	99.33134321732955	/ * for ( Integer count : arr ) {
P-2	99.8187 98.6636 99.9594 99.7538 99.6438 99.9712 99.8299 99.9074 99.6302 99.2948
H-2	99.33127848307292	for ( Integer < String > count : arr ) {
P-2	99.9986 99.6476 95.4015 98.8971 99.9419 99.1489 99.8888 99.8536 99.8977 99.9578 99.606
H-2	99.31569417317708	for ( Integer count : arr . iterator ( ) )
P-2	99.9986 99.6476 99.4364 99.9296 99.8232 97.6784 98.7682 99.9934 99.9976 99.9984 96.781
H-2	99.3133544921875	for ( Integer i : arr )
P-2	99.9986 99.6476 98.1861 99.8921 99.7784 99.838 97.4303
H-2	99.3127950032552	for ( Integer < Integer > count : arr ) {
P-2	99.9986 99.6476 95.4015 98.7161 99.9441 99.0969 99.8879 99.8497 99.8855 99.9481 99.642
H-2	99.30344645182292	/ * * for ( Integer count : arr ) {
P-2	99.8187 99.2875 98.6864 99.9587 99.6502 99.711 99.9799 99.8465 99.8397 99.5013 99.1894
H-2	99.29662407769098	for ( Integer arr : arr ) {
P-2	99.9986 99.6476 95.5131 99.9368 99.6986 99.874 99.9093 99.3559
H-2	99.29351251775569	for ( Integer count : arr . length ) {
P-2	99.9986 99.6476 99.4364 99.9296 99.8232 97.6784 97.0959 99.9791 99.9473 98.9566
H-2	99.2897440592448	for ( Integer count : arr . size ( ) )
P-2	99.9986 99.6476 99.4364 99.9296 99.8232 97.6784 98.6042 99.9885 99.9991 99.9987 96.6367
H-2	99.28941514756944	for ( String count : arr ) {
P-2	99.9986 95.5644 99.3248 99.945 99.8326 99.8699 99.9212 99.4125
H-2	99.28662109375	for ( final Integer count : arr ) {
P-2	99.9986 94.3472 99.7234 99.7332 99.9672 99.899 99.8374 99.9301 99.6942
H-2	99.27743191189236	for ( Integer value : arr ) {
P-2	99.9986 99.6476 95.0487 99.9608 99.7907 99.9099 99.9166 99.4881
H-2	99.24585571289063	for ( Integer count : arr ) break ;
P-2	99.9986 99.6476 99.4364 99.9296 99.8232 99.8663 94.5125 99.6308 99.8777
H-2	99.2423095703125	for ( Integer i : arr ) { }
P-2	99.9986 99.6476 98.1861 99.8921 99.7784 99.838 99.8875 95.7432 99.7159
H-2	99.2345458984375	for ( Integer count ] : arr ) {
P-2	99.9986 99.6476 99.4364 94.8423 99.5802 99.8605 99.9547 99.9127 99.3766
H-2	99.23331027560764	for ( Integer name : arr ) {
P-2	99.9986 99.6476 94.7032 99.9619 99.736 99.879 99.9119 99.5258
H-2	99.21670532226562	for ( Integer count : arr ) { {
P-2	99.9986 99.6476 99.4364 99.9296 99.8232 99.8663 99.9086 94.4528 99.3681
H-2	99.20684814453125	for ( int i : arr )
P-2	99.9986 98.5993 99.5372 98.9672 99.7698 99.8863 97.1605
H-2	99.19031982421875	/ * for ( Integer count : arr )
P-2	99.8187 98.6636 99.9594 99.7538 99.6438 99.9712 99.8299 99.9074 98.1835
H-2	99.18037109375	for ( int i : arr ) { }
P-2	99.9986 98.5993 99.5372 98.9672 99.7698 99.8863 99.8984 95.9213 99.4897
H-2	99.17412651909723	for ( Integer count : 0 ) {
P-2	99.9986 99.6476 99.4364 99.9296 95.3119 99.8478 99.8896 98.7698
H-2	99.16806030273438	for ( int count : arr )
P-2	99.9986 98.5993 98.3524 99.6957 99.818 99.8675 97.2771
H-2	99.14605034722223	for ( Object count : arr ) {
P-2	99.9986 94.5655 99.0048 99.9422 99.8202 99.9047 99.9262 99.4164
H-2	99.13091362847223	for ( Integer element : arr ) {
P-2	99.9986 99.6476 93.7372 99.9575 99.7445 99.892 99.9205 99.5446
H-2	99.07490539550781	for ( int i = 0 )
P-2	99.9986 98.5993 99.5372 99.5517 99.7166 97.3823 98.0776
H-2	98.4769287109375	/ * * /
P-2	99.8187 99.2875 98.45 98.6564
S-3	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) {
T-3	node@@ s@@ visited . add ( node ) ; for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) {
H-3	99.92964441636029	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) {
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 99.979 99.9989 99.991 99.9327
H-3	99.74071155894886	if ( node != null ) { for ( Node node : node . get CaMeL Successors ( ) ) {
P-3	99.9987 99.217 99.4404 99.8946 99.7661 99.9632 99.2878 99.992 99.9353 97.5321 99.1966 99.6628 99.998 99.9896 99.9995 99.9536 99.9994 99.9978 99.9996 99.9945 102.9154
H-3	99.737353515625	for ( Node < Node > success@@ or@@ nodes : node . get CaMeL Successors ( ) ) {
P-3	99.9992 99.893 96.4012 99.8043 99.9543 99.4655 99.9249 99.8943 99.9372 99.9371 99.9991 99.996 99.9997 99.9312 99.9983 99.989 99.9988 99.9923 99.9226
H-3	99.7328213778409	for ( Node < Node > node > success@@ or@@ nodes : node . get CaMeL Successors ( ) ) {
P-3	99.9992 99.893 96.4012 99.8043 99.9543 97.5386 99.25 99.2294 99.8227 99.9222 99.8622 99.9439 99.9987 99.9958 99.9997 99.9366 99.9976 99.9918 99.999 99.9923 102.8801
H-3	99.71785111860795	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) { return true ; } }
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 99.979 99.9989 99.991 94.5395 99.3459 99.8537 99.9633 99.874 101.3452
H-3	99.71333644701087	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) { return true ; } } }
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 99.979 99.9989 99.991 94.5395 99.3459 99.8537 99.9633 99.874 99.2243 101.7348
H-3	99.7042236328125	synchronized ( node ) { for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) {
P-3	99.9986 99.3314 98.7021 99.9982 98.5813 99.9961 99.9 99.3986 99.9932 99.9729 99.9177 99.9371 99.9991 99.9961 99.9997 99.9179 99.9986 99.9944 99.9996 99.9933 102.8446
H-3	99.70098322088069	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) { return false ; } }
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 99.979 99.9989 99.991 94.5395 98.8784 99.8639 99.9619 99.8564 101.4504
H-3	99.7001620205966	for ( Node < Node < Node > success@@ or@@ nodes : node . get CaMeL Successors ( ) ) {
P-3	99.9992 99.893 96.4012 99.8043 96.176 99.7034 99.968 99.3021 99.8348 99.9109 99.9217 99.9609 99.9991 99.9967 99.9997 99.9534 99.9981 99.9941 99.9982 99.993 102.8868
H-3	99.69780939275569	synchronized ( this ) { for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) {
P-3	99.9986 97.7291 99.9457 99.9987 98.7677 99.9958 99.8921 99.4269 99.9935 99.9692 99.9124 99.9451 99.9989 99.9956 99.9997 99.9294 99.9986 99.9944 99.9996 99.9935 102.8453
H-3	99.69684244791667	for ( Node node : node . get CaMeL Successors ( ) ) {
P-3	99.9992 99.893 96.8423 99.3971 99.797 99.9974 99.9948 99.9996 99.9429 99.9992 99.9946 99.9992 99.9944 99.8929
H-3	99.68761676290761	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) { return false ; } } }
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 99.979 99.9989 99.991 94.5395 98.8784 99.8639 99.9619 99.8564 99.0955 101.7486
H-3	99.67674560546875	for ( Iterator < Node > success@@ or@@ nodes : node . get CaMeL Successors ( ) ) {
P-3	99.9992 96.8404 99.7628 99.9272 99.9495 98.548 99.7443 99.7977 99.5539 99.9211 99.9979 99.9662 99.9997 99.9354 99.9983 99.9948 99.9962 99.9947 99.8987
H-3	99.67292865953948	for ( Node [ ] success@@ or@@ nodes : node . get CaMeL Successors ( ) ) {
P-3	99.9992 99.893 96.1114 99.9442 98.805 99.8782 99.8742 99.8659 99.9238 99.9982 99.9901 99.9996 99.9054 99.998 99.9908 99.9985 99.9918 99.9093
H-3	99.62827370383523	Node success@@ or@@ nodes : for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) {
P-3	98.942 99.969 99.9395 99.8033 97.563 99.9921 99.9266 99.4725 99.9688 99.9421 99.9411 99.9241 99.9986 99.9952 99.9997 99.8991 99.9969 99.9886 99.9985 99.9898 99.9386
H-3	99.6209716796875	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) { for ( Node ) {
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 99.979 99.9989 99.991 96.5241 99.9965 99.8563 93.8978 99.9064 102.6091
H-3	99.62016157670455	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) { return null ; } }
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 99.979 99.9989 99.991 94.5395 97.0244 99.8718 99.9599 99.8431 101.5337
H-3	99.61854619565217	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) return true ; } } else {
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 99.979 99.9989 94.3594 99.2984 99.8559 99.897 99.7739 97.5399 99.2369 102.3849
H-3	99.617919921875	if ( node != null && node . get CaMeL Successors ( ) . size ( ) > 0 ) {
P-3	99.9987 99.217 99.4404 99.8946 98.1759 99.129 99.9699 99.9605 99.9989 99.5973 99.9934 99.9934 99.0308 98.3861 99.9869 99.998 99.5663 99.9016 99.9609 99.9455 101.8871
H-3	99.61130099826389	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) { {
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 99.979 99.9989 99.991 94.3477 99.7846
H-3	99.60789794921875	for ( List < Node > success@@ or@@ nodes : node . get CaMeL Successors ( ) ) {
P-3	99.9992 93.7555 99.8616 99.9397 99.9729 99.4598 99.9289 99.9007 99.877 99.9353 99.9988 99.9923 99.9997 99.9245 99.9983 99.9897 99.9989 99.9933 99.9226
H-3	99.60460316051136	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) return true ; } } }
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 99.979 99.9989 94.3594 99.2984 99.8559 99.897 99.7739 97.7063 101.5303
H-3	99.60012950067934	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) { return null ; } } }
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 99.979 99.9989 99.991 94.5395 97.0244 99.8718 99.9599 99.8431 99.0251 101.668
H-3	99.5992431640625	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( 0 ) ) {
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 93.9707 99.9928 99.9977 99.9923 99.9307
H-3	99.59787916100544	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) { return true ; } } {
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 99.979 99.9989 99.991 94.5395 99.3459 99.8537 99.9633 99.874 96.7985 101.505
H-3	99.59698845358456	for ( Object success@@ or@@ nodes : node . get CaMeL Successors ( ) ) {
P-3	99.9992 94.2731 99.5614 99.9947 99.9579 99.9493 99.9158 99.9981 99.9952 99.9996 99.8965 99.9987 99.9793 99.999 99.9908 99.9311
H-3	99.5915591591283	try { for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) {
P-3	99.9992 98.7576 99.9906 99.9579 99.7033 99.9957 99.9673 99.9492 99.9399 99.9989 99.9966 99.9997 99.9249 99.9983 99.9865 99.9987 99.9905 99.9083
H-3	99.58574083116319	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( $NUMBER$ ) ) {
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 93.7278 99.9865 99.998 99.9936 99.935
H-3	99.57252261513158	/ * for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) {
P-3	99.9487 98.6408 99.8484 99.9772 99.6422 99.9914 99.9685 99.8711 99.9373 99.9987 99.996 99.9996 99.9277 99.9979 99.9905 99.9979 99.9839 99.9351
H-3	99.57208251953125	for ( Node < Object > success@@ or@@ nodes : node . get CaMeL Successors ( ) ) {
P-3	99.9992 99.893 96.4012 96.2319 99.9856 99.6025 99.9508 99.9344 99.9582 99.9462 99.9992 99.997 99.9997 99.9279 99.9984 99.9869 99.9988 99.992 99.9297
H-3	99.57014973958333	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( 1 ) ) {
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 93.4503 99.9899 99.9969 99.9928 99.9305
H-3	99.56665757123162	for ( Node success@@ or@@ nodes : node . get CaMeL Classes ( ) ) {
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 93.6851 99.9981 99.9942 99.9956 99.9923 99.9401
H-3	99.5646639737216	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) return false ; } } }
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 99.979 99.9989 94.3594 98.6364 99.8696 99.8908 99.7242 97.4955 101.5666
H-3	99.5634998139881	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) return true ; } }
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 99.979 99.9989 94.3594 99.2984 99.8559 99.897 99.7739 98.7687
H-3	99.56273651123047	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) )
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 99.979 99.9989 94.1236
H-3	99.56056906960227	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) return true ; } } {
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 99.979 99.9989 94.3594 99.2984 99.8559 99.897 99.7739 96.975 101.2926
H-3	99.5583251953125	for ( Node < ? > success@@ or@@ nodes : node . get CaMeL Successors ( ) ) {
P-3	99.9992 99.893 96.4012 95.9087 99.9845 99.6372 99.9623 99.9367 99.9544 99.9497 99.9994 99.9969 99.9997 99.9255 99.9983 99.9877 99.9985 99.9908 99.9337
H-3	99.55706428079044	for ( Node [ ] node : node . get CaMeL Successors ( ) ) {
P-3	99.9992 99.893 96.1114 99.9442 98.2771 99.0195 99.7443 99.996 99.9955 99.9996 99.9375 99.9994 99.9966 99.9992 99.9946 99.8539
H-3	99.55274115668402	for ( Node < Node > node : node . get CaMeL Successors ( ) ) {
P-3	99.9992 99.893 96.4012 99.8043 99.9543 97.5386 99.0573 99.7731 99.9978 99.9962 99.9996 99.9557 99.9994 99.9979 99.9993 99.9945 99.8789
H-3	99.54838053385417	for ( final Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) {
P-3	99.9992 92.8179 99.9484 99.7823 99.9853 99.9672 99.9434 99.9317 99.9989 99.9959 99.9997 99.8747 99.9983 99.9894 99.999 99.9913 99.9393
H-3	99.54651596966912	for ( int success@@ or@@ nodes : node . get CaMeL Successors ( ) ) {
P-3	99.9992 96.2601 97.0048 99.9818 99.9079 99.7399 99.9043 99.9975 99.9925 99.9996 99.9323 99.9986 99.9912 99.9983 99.9921 99.8817
H-3	99.5445915670956	for ( Iterator < Node > : node . get CaMeL Successors ( ) ) {
P-3	99.9992 96.8404 99.7628 99.9272 99.9495 96.3767 99.874 99.9979 99.9872 99.9992 99.9683 99.9988 99.998 99.9962 99.995 99.8786
H-3	99.53162299262152	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( true ) ) {
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 92.76 99.9859 99.9977 99.9903 99.9331
H-3	99.52849469866071	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) return false ; } }
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 99.979 99.9989 94.3594 98.6364 99.8696 99.8908 99.7242 98.7381
H-3	99.52437337239583	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( this ) ) {
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 92.9782 99.65 99.9947 99.9885 99.925
H-3	99.52100327435662	for ( Node success@@ or@@ nodes : node . get CaMeL Comparator ( ) ) {
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 93.2716 99.9881 99.9911 99.6626 99.9921 99.9239
H-3	99.51690266927083	for ( Node element : node . get CaMeL Successors ( ) ) {
P-3	99.9992 99.893 93.963 99.5812 99.8011 99.9978 99.9961 99.9995 99.9347 99.9991 99.9931 99.999 99.9938 99.8942
H-3	99.51489935980902	for ( Node success@@ or@@ nodes ] : node . get CaMeL Successors ( ) ) {
P-3	99.9992 99.893 99.6173 99.9959 99.9666 92.6877 99.7394 99.8763 99.9991 99.9926 99.9996 99.8934 99.9986 99.9848 99.9993 99.9919 99.9248
H-3	99.51374897203948	for ( Node success@@ or@@ nodes [ ] : node . get CaMeL Successors ( ) ) {
P-3	99.9992 99.893 99.6173 99.9959 99.9666 92.6324 99.8904 99.3641 99.8841 99.998 99.9923 99.9998 99.9512 99.997 99.9956 99.999 99.9915 99.8845
H-3	99.51347081801471	for ( Iterator success@@ or@@ nodes : node . get CaMeL Successors ( ) ) {
P-3	99.9992 96.8404 96.2445 99.9654 99.7819 99.5678 99.8765 99.9966 99.9732 99.9996 99.899 99.9988 99.9928 99.9969 99.9942 99.8933
H-3	99.5116828469669	for ( Node success@@ or@@ nodes : list . get CaMeL Successors ( ) ) {
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 93.7786 99.3008 99.6749 99.9973 99.9248 99.9981 99.9885 99.9983 99.9919 99.9192
H-3	99.51056267233456	for ( String success@@ or@@ nodes : node . get CaMeL Successors ( ) ) {
P-3	99.9992 92.741 99.6157 99.9953 99.9624 99.9534 99.9092 99.9983 99.9958 99.9995 99.9141 99.9986 99.9793 99.9986 99.99 99.92
H-3	99.50905247738487	for ( Node success@@ or@@ nodes > node : node . get CaMeL Successors ( ) ) {
P-3	99.9992 99.893 99.6173 99.9959 99.9666 94.523 98.6121 98.6944 99.8298 99.9974 99.992 99.9998 99.9518 99.9977 99.9946 99.9992 99.99 99.9095
H-3	99.50371237362133	for ( Node success@@ or@@ nodes : node . get CaMeL Parent ( ) ) {
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 94.0358 99.0301 99.9796 99.5737 99.9944 99.9218
H-3	99.50062866210938	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) { return true {
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 99.979 99.9989 99.991 94.5395 99.3459 97.7601 99.496
H-3	99.50048828125	if ( node != null && node . get CaMeL Successors ( ) != null ) {
P-3	99.9987 99.217 99.4404 99.8946 98.1759 99.129 99.9699 99.9605 99.9989 99.5973 99.9934 99.9934 99.0395 99.9282 99.9147 99.9883 99.2074
H-3	99.4980701264881	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) { return true ; }
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 99.979 99.9989 99.991 94.5395 99.3459 99.8537 99.9633 96.8859
H-3	99.49742367393092	for ( Node success@@ or@@ nodes : node . get . get CaMeL Successors ( ) ) {
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 91.7072 99.9759 99.9995 99.8408 99.9981 99.9942 99.9985 99.9897 99.9189
H-3	99.4952725497159	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) return true ; } } else
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 99.979 99.9989 94.3594 99.2984 99.8559 99.897 99.7739 97.5399 99.2913
H-3	99.4947574013158	for ( Node success@@ or@@ nodes : this . node . get CaMeL Successors ( ) ) {
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 92.4594 99.9969 99.0729 99.9696 99.9806 99.9996 99.8876 99.9982 99.9883 99.999 99.9923 99.9297
H-3	99.49408637152777	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( false ) ) {
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 92.0843 99.9863 99.9978 99.9903 99.9325
H-3	99.49146185980902	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) { }
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 99.979 99.9989 99.991 92.0757 99.8994
H-3	99.49100952148437	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) return true ; }
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 99.979 99.9989 94.3594 99.2984 99.8559 99.897 97.5293
H-3	99.4855724516369	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) { return false ; }
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 99.979 99.9989 99.991 94.5395 98.8784 99.8639 99.9619 97.082
H-3	99.48450317382813	if ( node != null && node . get CaMeL Successors ( ) . length > 0 ) {
P-3	99.9987 99.217 99.4404 99.8946 98.1759 99.129 99.9699 99.9605 99.9989 99.5973 99.9934 99.9934 99.0308 99.3092 99.1676 99.9289 99.9705 99.9735 99.3788
H-3	99.48092490748355	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) continue ; }
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 99.979 99.9989 92.528 99.7359 99.2501 99.7434
H-3	99.4787661903783	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) break ; }
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 99.979 99.9989 91.8988 99.8866 99.8209 99.6102
H-3	99.47760009765625	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) { return false {
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 99.979 99.9989 99.991 94.5395 98.8784 97.679 99.584
H-3	99.4774105674342	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) return true {
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 99.979 99.9989 94.3594 99.2984 97.8049 99.728
H-3	99.47075059678819	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) continue ;
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 99.979 99.9989 92.528 99.7359 99.3295
H-3	99.46934291294643	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) return null ; } }
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 99.979 99.9989 94.3594 97.3173 99.8874 99.8911 99.7275 98.7935
H-3	99.4685791015625	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) return false ; }
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 99.979 99.9989 94.3594 98.6364 99.8696 99.8908 97.7354
H-3	99.46818462171052	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) { try {
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 99.979 99.9989 99.991 91.5484 99.9983 99.4776
H-3	99.4670474403783	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) return true ;
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 99.979 99.9989 94.3594 99.2984 99.8559 97.48
H-3	99.46661086309524	for ( Node < Node > success@@ or@@ nodes : node . get CaMeL Successors ( ) ) { {
P-3	99.9992 99.893 96.4012 99.8043 99.9543 99.4655 99.9249 99.8943 99.9372 99.9371 99.9991 99.996 99.9997 99.9312 99.9983 99.989 99.9988 99.9923 94.2692 99.7052
H-3	99.46598735608552	for ( Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ) { ) {
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 99.876 99.9986 99.979 99.9989 99.991 91.2087 99.9917 99.7822
H-3	99.45751953125	for ( Node ! node . get CaMeL Successors ( ) . equals ( node ) ) {
P-3	99.9992 99.893 94.6498 98.736 99.9525 99.9059 99.9982 99.687 99.9921 99.9964 99.9842 99.5349 99.9748 99.1012 99.2861 99.8155 99.9618 99.5151
H-3	99.44771321614583	for ( Node parent : node . get CaMeL Successors ( ) ) {
P-3	99.9992 99.893 93.1593 99.3602 99.7922 99.9976 99.9953 99.9995 99.931 99.9991 99.9941 99.9992 99.9948 99.8923
H-3	99.44756673177083	for ( Node success@@ or@@ nodes : get CaMeL Successors ( ) ) {
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 93.2032 99.9926 99.6249 99.9821 99.896 99.9933 99.9941 99.9013
H-3	99.44736056857639	if ( node != null && node . get CaMeL Successors ( ) == null ) {
P-3	99.9987 99.217 99.4404 99.8946 98.1759 99.129 99.9699 99.9605 99.9989 99.5973 99.9934 99.9934 98.2277 99.9104 99.8997 99.9865 99.0976
H-3	99.43864171645221	for ( Node success@@ or@@ nodes : node . get CaMeL Prefix ( ) ) {
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 99.9981 99.9953 99.9997 91.917 99.8415 99.9843 99.7587 99.9932 99.9343
H-3	99.4286865234375	for ( Node first : node . get CaMeL Successors ( ) ) {
P-3	99.9992 99.893 93.3657 98.8847 99.7633 99.9974 99.9946 99.9995 99.9381 99.9991 99.9953 99.999 99.9936 99.8989
H-3	99.42526245117188	synchronized ( node . get CaMeL Successors ( ) ) {
P-3	99.9986 99.3314 99.6354 99.9757 99.9993 99.594 99.9969 99.9975 99.9986 99.9974 99.556
H-3	99.41159057617188	for ( Node success@@ or@@ nodes = node . get CaMeL Successors ( ) ;
P-3	99.9992 99.893 99.6173 99.9959 99.9666 95.6162 99.8845 99.9976 99.9974 99.9998 99.8079 99.9978 99.9719 99.851 96.2803
H-3	99.40076555524554	if ( node . get CaMeL Successors ( ) != null ) {
P-3	99.9987 99.217 98.0117 99.9079 99.9985 99.1502 99.9921 99.9935 99.126 99.9579 99.8548 99.9845 98.8561
H-3	99.38630022321429	Node success@@ or@@ nodes : node . get CaMeL Successors ( ) ;
P-3	98.942 99.969 99.9395 99.8033 99.0414 99.7816 99.9821 99.9995 99.9009 99.9964 99.9899 99.8746 97.5549
H-3	99.34162248883929	Node success@@ or@@ nodes = node . get CaMeL Successors ( ) ;
P-3	98.942 99.969 99.9395 98.1617 99.8622 99.9976 99.9978 99.9997 99.8379 99.9957 99.9661 99.9468 97.5338
H-3	99.33956473214286	if ( node . get CaMeL Successors ( ) == null ) {
P-3	99.9987 99.217 98.0117 99.9079 99.9985 99.1502 99.9921 99.9935 98.3372 99.9253 99.8808 99.9823 98.7968
H-3	99.3306884765625	if ( node != null ) { return false ; } } }
P-3	99.9987 99.217 99.4404 99.8946 99.7661 99.9632 97.9794 99.3644 99.8982 99.9712 99.7852 99.5767 98.2126
H-3	99.28126878004808	if ( success@@ or@@ nodes . equals ( node ) ) {
P-3	99.9987 96.8904 99.9412 99.9 99.5216 98.8219 99.9765 99.2549 99.66 99.9097 99.9785 99.2411
H-3	99.27774752103366	if ( node != null ) { return false ; } }
P-3	99.9987 99.217 99.4404 99.8946 99.7661 99.9632 97.9794 99.3644 99.8982 99.9712 99.7852 97.7705
H-3	99.26247336647727	for ( Node success@@ or@@ nodes : list ) {
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 93.7786 99.1199 99.9928 99.8697
H-3	99.25255330403645	node = node . get CaMeL Successors ( ) ; }
P-3	99.9512 99.6168 99.9833 99.9708 99.9992 99.7055 99.9991 99.995 99.8403 99.3776 99.4438
H-3	99.22714233398438	if ( node != null ) {
P-3	99.9987 99.217 99.4404 99.8946 99.7661 99.9632 97.9754
H-3	99.1912841796875	for ( Node node : success@@ or@@ nodes ) {
P-3	99.9992 99.893 96.8423 99.3971 96.3765 99.6912 99.5934 99.9464 99.9925 99.6637
H-3	99.18363813920455	for ( Node success@@ or@@ nodes : keys ) {
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 92.2082 99.865 99.9934 99.8273
H-3	99.1497802734375	for ( Node success@@ or@@ nodes : node ) {
P-3	99.9992 99.893 99.6173 99.9959 99.9666 99.9451 99.9085 91.764 99.9943 99.8546
H-3	99.1306640625	if ( success@@ or@@ nodes != null ) {
P-3	99.9987 96.8904 99.9412 99.9 98.4982 99.9563 99.8505 99.9826 98.7267
H-3	99.0387191772461	if ( node instanceof Node ) {
P-3	99.9987 99.217 97.9303 99.5584 99.5864 99.9766 98.4804
H-3	99.03570556640625	while ( node != null ) {
P-3	99.9983 99.3037 99.423 99.8775 99.775 99.9761 98.2391
S-4	if ( h@@ are . get CaMeL Successor ( ) == null )
T-4	if ( null == h@@ are || h@@ are . get CaMeL Successor ( ) == null )
H-4	99.88282121930804	if ( h@@ are . get CaMeL Successor ( ) == null )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 99.8649 99.7943 99.8899 99.8045 99.7818
H-4	99.75359497070312	if ( h@@ are != null && h@@ are . get CaMeL Successor ( ) == null ) {
P-4	99.9977 99.8228 99.9358 97.4 99.974 98.8281 99.498 99.8439 99.9654 99.9184 99.9947 99.8953 99.9781 99.9492 99.8568 99.8531 99.9076 97.8946 102.7061
H-4	99.74366106305804	if ( h@@ are . get CaMeL Successor ( ) != null )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 99.8649 97.7888 99.937 99.8236 99.773
H-4	99.74046223958334	if ( h@@ are . get CaMeL Successor ( ) == null ) {
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 99.8649 99.7943 99.8899 99.8045 97.8957 99.6337
H-4	99.72557983398437	if ( h@@ are . get CaMeL Successor ( ) . get CaMeL Successor ( ) == null )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 99.8649 97.0862 99.6539 99.9934 99.4745 99.9606 99.9726 99.774 99.8127 99.8881 99.8066
H-4	99.70602416992188	if ( h@@ are != null || h@@ are . get CaMeL Successor ( ) == null ) {
P-4	99.9977 99.8228 99.9358 97.4 99.974 98.0204 99.4708 99.8441 99.9744 99.9145 99.9926 99.8976 99.9752 99.9445 99.8634 99.8523 99.9161 97.7368 102.7349
H-4	99.69790167557566	if ( h@@ are != null && h@@ are . get CaMeL Successor ( ) == null )
P-4	99.9977 99.8228 99.9358 97.4 99.974 98.8281 99.498 99.8439 99.9654 99.9184 99.9947 99.8953 99.9781 99.9492 99.8568 99.8531 99.9076 99.7889
H-4	99.693115234375	if ( h@@ are . get CaMeL Successor ( ) == null ) { return false ; }
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 99.8649 99.7943 99.8899 99.8045 97.8957 97.8891 99.2077 99.7828 99.7995 101.0168
H-4	99.69027709960938	if ( h@@ are == null && h@@ are . get CaMeL Successor ( ) == null ) {
P-4	99.9977 99.8228 99.9358 96.9267 99.9664 98.6293 99.335 99.7225 99.8746 99.8391 99.9943 99.8587 99.975 99.965 99.8633 99.8804 99.911 97.8078 102.648
H-4	99.67567202919408	if ( h@@ are . get CaMeL Successor ( ) == null ) { return true ; }
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 99.8649 99.7943 99.8899 99.8045 97.8957 97.8891 98.7466 99.8379 99.8137 101.0773
H-4	99.65596731085526	if ( h@@ are != null || h@@ are . get CaMeL Successor ( ) == null )
P-4	99.9977 99.8228 99.9358 97.4 99.974 98.0204 99.4708 99.8441 99.9744 99.9145 99.9926 99.8976 99.9752 99.9445 99.8634 99.8523 99.9161 99.8146
H-4	99.63958418996711	if ( h@@ are == null && h@@ are . get CaMeL Successor ( ) == null )
P-4	99.9977 99.8228 99.9358 96.9267 99.9664 98.6293 99.335 99.7225 99.8746 99.8391 99.9943 99.8587 99.975 99.965 99.8633 99.8804 99.911 99.8023
H-4	99.63809407552084	if ( h@@ are . get CaMeL Successor ( ) == - 1 )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 99.8649 99.7943 95.9697 99.9006 99.9365 99.8813
H-4	99.61756998697916	if ( h@@ are . get CaMeL Successor ( ) != null ) {
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 99.8649 97.7888 99.937 99.8236 97.9237 99.7015
H-4	99.61331979851974	if ( h@@ are == null || h@@ are . get CaMeL Successor ( ) == null )
P-4	99.9977 99.8228 99.9358 96.9267 99.9664 97.8579 99.4103 99.8012 99.9632 99.8582 99.9896 99.8857 99.976 99.9515 99.8561 99.8746 99.9113 99.8158
H-4	99.61084856305804	if ( h@@ are . get CaMeL Successor ( ) == 0 )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 99.8649 99.7943 96.0962 99.802 99.7703
H-4	99.59340948807566	if ( h@@ are . get CaMeL Successor ( ) == null ) { return ) ; }
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 99.8649 99.7943 99.8899 99.8045 97.8957 97.8891 97.6493 99.7067 99.7576 100.7989
H-4	99.58256022135417	if ( h@@ are . get CaMeL Successor ( ) == null ) )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 99.8649 99.7943 99.8899 99.8045 95.6149 99.5459
H-4	99.57973118832237	if ( h@@ are . get CaMeL Successor ( ) == null ) { return null ; }
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 99.8649 99.7943 99.8899 99.8045 97.8957 97.8891 97.3976 99.7204 99.7486 100.7859
H-4	99.56986276726974	if ( h@@ are != null && h@@ are . get CaMeL Successor ( ) != null )
P-4	99.9977 99.8228 99.9358 97.4 99.974 98.8281 99.498 99.8439 99.9654 99.9184 99.9947 99.8953 99.9781 99.9492 97.3777 99.8918 99.9209 99.7832
H-4	99.56719006990132	if ( h@@ are . get CaMeL Successor ( ) != null ) { return false ; }
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 99.8649 97.7888 99.937 99.8236 97.9237 97.6455 98.8611 99.7564 99.7455 101.2061
H-4	99.5581413717831	if ( h@@ are . get CaMeL Name ( ) . equals ( $STRING$ ) )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 94.683 99.9878 99.9967 99.5463 99.8625 99.8654 99.577 99.9903 99.9294 99.7056
H-4	99.55272081163194	if ( h@@ are != null && ! h@@ are . get CaMeL Successor ( ) )
P-4	99.9977 99.8228 99.9358 97.4 99.974 98.8281 98.779 99.4223 99.7292 99.9751 99.7934 99.983 99.8543 99.9824 99.9624 98.8601 99.7971
H-4	99.54549153645833	if ( h@@ are . equals ( h@@ are . get CaMeL Successor ( ) ) )
P-4	99.9977 99.8228 99.9358 99.8456 94.7877 99.901 99.1611 99.5389 99.5147 99.9567 99.9981 99.8302 99.9595 99.9757 99.9491 99.9515 99.8405
H-4	99.5446026141827	if ( ! h@@ are . get CaMeL Successor ( ) )
P-4	99.9977 96.9632 99.3634 99.8508 99.8948 99.9075 99.9451 99.8782 99.9799 99.9001 98.7657 99.7811
H-4	99.53829152960526	if ( h@@ are . get CaMeL Successor ( ) == null ) { return false ) ;
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 99.8649 99.7943 99.8899 99.8045 97.8957 97.8891 99.2077 98.2738 99.1103 100.2735
H-4	99.53797822840073	if ( h@@ are . get CaMeL Successor ( ) == null ) return true ;
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 99.8649 99.7943 99.8899 99.8045 96.2507 99.1653 99.8429 98.3092
H-4	99.53217315673828	try { if ( h@@ are . get CaMeL Successor ( ) == null )
P-4	99.9749 99.0161 99.9966 99.8423 99.9625 99.9203 99.9639 99.9788 99.8665 99.9839 99.886 99.8069 99.8933 99.8684 99.7519
H-4	99.52511596679688	if ( h@@ are . get CaMeL Successor ( ) . equals ( ) )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 99.8649 97.0862 97.7223 99.9502 98.8734 99.88 99.8007
H-4	99.5247443704044	if ( h@@ are . get CaMeL Successor ( ) == null ) return false ;
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 99.8649 99.7943 99.8899 99.8045 96.2507 98.9945 99.8061 98.2918
H-4	99.5234375	if ( h@@ are != null || h@@ are . get CaMeL Successor ( ) != null )
P-4	99.9977 99.8228 99.9358 97.4 99.974 98.0204 99.4708 99.8441 99.9744 99.9145 99.9926 99.8976 99.9752 99.9445 97.3203 99.875 99.927 99.806
H-4	99.51806640625	if ( ! h@@ are . get CaMeL Successor ( ) == null )
P-4	99.9977 96.9632 99.3634 99.8508 99.8948 99.9075 99.9451 99.8782 99.9799 99.9001 97.9074 99.7543 99.7723 99.804
H-4	99.51622250205592	if ( h@@ are . get CaMeL Successor ( ) . get CaMeL Successor ( ) == )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 99.8649 97.0862 99.6539 99.9934 99.4745 99.9606 99.9726 99.774 96.2136 99.5903
H-4	99.51336669921875	if ( h@@ are . get ( h@@ are . get CaMeL Successor ( ) ) )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 96.5298 97.3181 99.2987 99.5812 99.9211 99.9376 99.7564 99.9685 99.9666 99.8407 99.9212 99.8226
H-4	99.51251541940789	if ( h@@ are == null && h@@ are . get CaMeL Successor ( ) != null )
P-4	99.9977 99.8228 99.9358 96.9267 99.9664 98.6293 99.335 99.7225 99.8746 99.8391 99.9943 99.8587 99.975 99.965 97.4144 99.9124 99.9244 99.7917
H-4	99.51236122532895	if ( ! h@@ are . get CaMeL Successor ( ) . is CaMeL Empty ( ) )
P-4	99.9977 96.9632 99.3634 99.8508 99.8948 99.9075 99.9451 99.8782 99.9799 99.9001 99.4077 98.7828 99.9906 97.3258 99.9651 99.9858 99.8583 99.8856
H-4	99.51146589006696	while ( h@@ are . get CaMeL Successor ( ) == null )
P-4	99.9972 99.8295 99.9171 99.8636 99.8706 99.9572 99.8719 99.9891 99.8225 99.7853 99.8365 99.7846 99.7236
H-4	99.51007439108456	if ( h@@ are . get CaMeL Successor ( ) . equals ( null ) )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 99.8649 97.0862 97.7223 99.9502 98.2971 99.9129 99.8279 99.7855
H-4	99.50967172475961	if ( h@@ are . get CaMeL Successor ( ) == )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 99.8649 99.7943 95.2329 99.5095
H-4	99.50917053222656	else { if ( h@@ are . get CaMeL Successor ( ) == null )
P-4	99.3499 99.6163 99.9966 99.8176 99.9643 99.9235 99.9752 99.9752 99.8791 99.9847 99.9025 99.8309 99.8846 99.8609 99.7448
H-4	99.50775146484375	if ( h@@ are != null || ! h@@ are . get CaMeL Successor ( ) )
P-4	99.9977 99.8228 99.9358 97.4 99.974 98.0204 98.8286 99.3923 99.7136 99.9756 99.7742 99.9773 99.8541 99.9796 99.9629 98.8702 99.8081
H-4	99.50600857204861	if ( h@@ are . get ( ) . get CaMeL Successor ( ) == null )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 96.5298 99.3646 97.0581 99.758 99.9948 99.667 99.97 99.952 99.8688 99.8815 99.8676 99.8177
H-4	99.50499674479167	if ( h@@ are . get CaMeL Successor ( 0 ) == null )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 94.1052 99.9704 99.6447 99.9042 99.9085 99.8179
H-4	99.50322522615132	if ( ! h@@ are . get CaMeL Successor ( ) . get CaMeL Successor ( ) )
P-4	99.9977 96.9632 99.3634 99.8508 99.8948 99.9075 99.9451 99.8782 99.9799 99.9001 99.4077 99.1131 99.987 99.3629 99.952 99.9445 97.5095 99.7515
H-4	99.49825032552083	if ( h@@ are . get CaMeL Successor ( ) )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 99.8649 95.3512 99.5387
H-4	99.49759114583334	if ( h@@ are . get CaMeL Successor ( ) == 0 ) {
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 99.8649 99.7943 96.0962 99.802 97.9391 99.7433
H-4	99.49596489800348	if ( h@@ are == null && ! h@@ are . get CaMeL Successor ( ) )
P-4	99.9977 99.8228 99.9358 96.9267 99.9664 98.6293 98.9998 99.179 99.5587 99.9642 99.6452 99.9808 99.8321 99.9801 99.9729 98.8766 99.8072
H-4	99.49492645263672	/ * if ( h@@ are . get CaMeL Successor ( ) == null )
P-4	99.9329 98.8773 99.9223 99.8102 99.9337 99.7584 99.9452 99.9734 99.8919 99.9819 99.8886 99.7992 99.8267 99.7411 99.8087
H-4	99.49468994140625	if ( h@@ are . get CaMeL Successor ( h@@ are ) )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 96.0349 99.583 99.102 99.2663 99.715
H-4	99.49366861979166	} if ( h@@ are . get CaMeL Successor ( ) == null )
P-4	99.714 99.996 99.7586 99.9181 99.6925 99.9351 99.9731 99.8838 99.9765 99.9504 99.8151 99.9121 99.8184 99.8224
H-4	99.4918212890625	else if ( h@@ are . get CaMeL Successor ( ) == null )
P-4	99.1743 99.9981 99.794 99.9582 99.8808 99.9717 99.9696 99.9275 99.9868 99.917 99.8309 99.8743 99.8486 99.8052
H-4	99.4913689108456	if ( h@@ are . get CaMeL Successor ( ) == null ) return true )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 99.8649 99.7943 99.8899 99.8045 96.2507 99.1653 98.0033 99.3564
H-4	99.4912109375	if ( ! h@@ are . get CaMeL Successor ( ) . equals ( ) )
P-4	99.9977 96.9632 99.3634 99.8508 99.8948 99.9075 99.9451 99.8782 99.9799 99.9001 99.4077 98.1514 99.9661 98.6346 99.8814 99.7764
H-4	99.48634966681985	if ( h@@ are . get CaMeL Successor ( ) == null ) return false )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 99.8649 99.7943 99.8899 99.8045 96.2507 98.9945 98.1859 99.2593
H-4	99.48489815848214	if ( h@@ are . get CaMeL Successor ( ) == true )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 99.8649 99.7943 94.2942 99.8008 99.8103
H-4	99.48403591579861	if ( ! h@@ are . get CaMeL Successor ( ) . equals ( null ) )
P-4	99.9977 96.9632 99.3634 99.8508 99.8948 99.9075 99.9451 99.8782 99.9799 99.9001 99.4077 98.1514 99.9661 98.0782 99.9111 99.842 99.8231
H-4	99.4805908203125	if ( h@@ are . get CaMeL Successor ( ) != - 1 )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 99.8649 97.7888 95.6099 99.8929 99.9391 99.8891
H-4	99.47964477539062	if ( h@@ are . get CaMeL Successor ( h@@ are ) == null )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 96.0349 99.583 99.102 98.4019 99.6981 99.8121 99.8179
H-4	99.4730583639706	if ( h@@ are . get CaMeL Successor ( [ 0 ] ) == null )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 93.3083 99.2322 99.9906 99.9054 99.7826 99.8893 99.9359 99.7736
H-4	99.47090657552083	if ( h@@ are . get ( ) == null )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 96.5298 99.3646 99.3162 99.7103 99.6474 99.7044
H-4	99.46477508544922	if ( h@@ are != null )
P-4	99.9977 99.8228 99.9358 97.4 99.974 99.3903 99.3452
H-4	99.46175944010416	if ( h@@ are . get CaMeL Successor ( ) != null ) )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 99.8649 97.7888 99.937 99.8236 95.7028 99.5853
H-4	99.45934244791667	if ( h@@ are . get CaMeL Successor ( true ) == null )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 93.4698 99.9595 99.6173 99.8898 99.8986 99.8309
H-4	99.45651245117188	if ( h@@ are . get CaMeL Successor ( ) == null && true )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 99.8649 99.7943 99.8899 97.8027 95.4161 99.5018 99.8104
H-4	99.45439147949219	if ( h@@ are . get CaMeL Successor ( ) == - 1 ) {
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 99.8649 99.7943 95.9697 99.9006 99.9365 96.8855 99.6946
H-4	99.45316314697266	if ( h@@ are . get CaMeL Successor ( ) == null ) { )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 99.8649 99.7943 99.8899 99.8045 97.8957 95.5537 99.2236
H-4	99.45186941964286	if ( h@@ are . get CaMeL Successor ( ) != 0 )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 99.8649 97.7888 95.8145 99.853 99.7808
H-4	99.44796752929688	if ( h@@ are . get CaMeL Successor ( ) == null ) return )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 99.8649 99.7943 99.8899 99.8045 96.2507 96.958 99.3812
H-4	99.44483235677083	if ( h@@ are . get CaMeL Successor ( 1 ) == null )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 93.1771 99.956 99.6862 99.8959 99.9129 99.8202
H-4	99.44105747767857	if ( h@@ are . get CaMeL Successor ( ) == 1 )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 99.8649 99.7943 93.6605 99.8487 99.7823
H-4	99.43879917689732	if ( h@@ are . get CaMeL Successor ( ) == false )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 99.8649 99.7943 93.6203 99.8356 99.804
H-4	99.43720354352679	if ( h@@ are . get CaMeL Name ( ) == null )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 94.683 99.9878 99.9967 98.5821 99.9628 99.7367 99.8272
H-4	99.4369140625	if ( h@@ are . get CaMeL Successor ( this ) == null )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 93.1549 99.9021 99.6324 99.9165 99.8883 99.8355
H-4	99.43589564732143	if ( h@@ are . get CaMeL Key ( ) == null )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 93.7265 99.9378 99.9665 99.6575 99.9088 99.7731 99.7877
H-4	99.42757415771484	if ( h@@ are == null )
P-4	99.9977 99.8228 99.9358 96.9267 99.9664 99.5189 99.4
H-4	99.41298130580357	if ( h@@ are . get CaMeL Successor ( ) <= null )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 99.8649 93.6467 99.4899 99.8276 99.7285
H-4	99.41140407986111	if ( h@@ are != null ) {
P-4	99.9977 99.8228 99.9358 97.4 99.974 99.3903 98.9047 99.4249
H-4	99.4063720703125	if ( h@@ are . get CaMeL Id ( ) == null )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 93.1717 99.9858 99.9955 99.6801 99.8993 99.7967 99.8154
H-4	99.40585763113839	if ( h@@ are . get CaMeL Parent ( ) == null )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 93.5176 99.8452 99.9901 99.6421 99.8173 99.7447 99.7803
H-4	99.39837646484375	if ( h@@ are . get CaMeL Successor ( ) == ) {
P-4	99.9977 99.8228 99.9358 99.8456 99.924 99.9666 99.8939 99.9856 99.8649 99.7943 95.2329 97.7251 99.736
H-4	99.38190166766827	if ( node . get CaMeL Successor ( ) == null )
P-4	99.9977 93.7315 99.7978 99.888 99.9985 99.8144 99.9653 99.8967 99.6567 99.8886 99.7616 99.7156
H-4	99.38113403320312	if ( h@@ are . is CaMeL Empty ( ) )
P-4	99.9977 99.8228 99.9358 99.8456 96.9011 99.9853 96.7104 99.9934 99.992 99.6869 99.8502
H-4	99.370263671875	if ( h@@ are . get ( ) )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 96.5298 99.3646 98.92 99.5103
H-4	99.35904947916667	switch ( h@@ are . get CaMeL Successor ( ) )
P-4	99.9941 99.8106 99.9143 99.9667 99.9612 99.9854 99.7927 99.98 99.8855 99.6459 99.8595
H-4	99.34332275390625	if ( h@@ are == null ) {
P-4	99.9977 99.8228 99.9358 96.9267 99.9664 99.5189 98.6109 99.4585
H-4	99.31809488932292	synchronized ( h@@ are . get CaMeL Successor ( ) )
P-4	99.9986 99.7129 99.899 98.8922 99.8332 99.9747 99.0252 99.9217 99.8719 99.9361 99.7743
H-4	99.298583984375	if ( h@@ are . size ( ) == 0 )
P-4	99.9977 99.8228 99.9358 99.8456 93.7143 99.967 99.9788 99.3927 99.4492 99.8262 99.8006
H-4	99.2300692471591	if ( ! h@@ are . get ( ) )
P-4	99.9977 96.9632 99.3634 99.8508 99.8948 99.9075 97.0534 99.2578 99.765 99.6248
H-4	99.22828258167614	if ( h@@ are . get ( ) ) {
P-4	99.9977 99.8228 99.9358 99.8456 99.924 96.5298 99.3646 98.92 97.9594 99.3594
H-4	99.15555419921876	if ( h@@ are . equals ( ) )
P-4	99.9977 99.8228 99.9358 99.8456 94.7877 99.901 98.0799 99.7098 99.6229
H-4	99.12444390190973	if ( ! h@@ are != null )
P-4	99.9977 96.9632 99.3634 99.8508 97.073 99.9622 99.4475 99.6099
H-4	99.07906765407986	if ( h@@ are != null ) )
P-4	99.9977 99.8228 99.9358 97.4 99.974 99.3903 95.7521 99.5866
H-4	99.05030653211806	if ( h@@ are == null ) )
P-4	99.9977 99.8228 99.9358 96.9267 99.9664 99.5189 95.917 99.5152
H-4	98.9550069173177	synchronized ( h@@ are )
P-4	99.9986 99.7129 99.899 99.4887 99.6534
H-4	98.89408111572266	if ( h@@ are instanceof Node )
P-4	99.9977 99.8228 99.9358 95.4138 97.2192 99.4261 99.4849
H-4	98.89397430419922	if ( h@@ are . get )
P-4	99.9977 99.8228 99.9358 99.8456 99.924 92.2552 99.5184
H-4	98.64049072265625	if ( true )
P-4	99.9977 93.9537 99.8082 99.5906
H-4	98.63057454427083	if ( h@@ are )
P-4	99.9977 99.8228 99.9358 93.0581 99.1168
H-4	98.46544189453125	if ( false )
P-4	99.9977 93.3336 99.6235 99.5201
H-4	98.17144775390625	if ( ) )
P-4	99.9977 95.1061 96.7047 99.1964
S-5	while ( lo <= hi ) {
T-5	while ( lo < hi ) {
H-5	99.759326171875	while ( lo <= hi ) { while ( lo <= hi ) {
P-5	99.9989 99.8338 99.1981 99.6907 99.8895 99.9739 98.6323 99.9964 99.7187 99.205 99.762 99.9103 99.9647 101.1178
H-5	99.71586100260417	while ( lo < hi ) { while ( lo <= hi ) {
P-5	99.9989 99.8338 98.5533 99.6805 99.8994 99.9756 98.7192 99.9966 99.7172 99.2339 99.7559 99.9149 99.9651 100.9957
H-5	99.7110107421875	while ( lo <= hi ) { while ( lo >= hi ) {
P-5	99.9989 99.8338 99.1981 99.6907 99.8895 99.9739 98.6323 99.9964 99.7187 98.1552 99.7445 99.9118 99.9761 101.4474
H-5	99.700537109375	while ( lo >= hi ) { while ( lo <= hi ) {
P-5	99.9989 99.8338 98.2981 99.5206 99.8666 99.9787 98.6154 99.997 99.7288 99.1774 99.7814 99.9144 99.9665 101.3326
H-5	99.7003662109375	while ( lo <= hi ) { while ( lo < hi ) {
P-5	99.9989 99.8338 99.1981 99.6907 99.8895 99.9739 98.6323 99.9964 99.7187 98.2919 99.7761 99.9338 99.9657 101.1081
H-5	99.66373697916667	while ( lo < hi ) { while ( lo >= hi ) {
P-5	99.9989 99.8338 98.5533 99.6805 99.8994 99.9756 98.7192 99.9966 99.7172 98.0887 99.7324 99.9204 99.9771 101.3651
H-5	99.65567220052084	while ( lo <= hi ) { while ( lo > hi ) {
P-5	99.9989 99.8338 99.1981 99.6907 99.8895 99.9739 98.6323 99.9964 99.7187 97.4734 99.7071 99.8761 99.9795 101.3689
H-5	99.65345052083333	while ( lo >= hi ) { while ( lo >= hi ) {
P-5	99.9989 99.8338 98.2981 99.5206 99.8666 99.9787 98.6154 99.997 99.7288 98.2669 99.7457 99.9187 99.9761 101.5587
H-5	99.65132649739583	while ( lo < hi ) { while ( lo < hi ) {
P-5	99.9989 99.8338 98.5533 99.6805 99.8994 99.9756 98.7192 99.9966 99.7172 98.2662 99.7671 99.9371 99.9663 100.9609
H-5	99.64689127604167	while ( lo >= hi ) { while ( lo < hi ) {
P-5	99.9989 99.8338 98.2981 99.5206 99.8666 99.9787 98.6154 99.997 99.7288 98.3789 99.7912 99.9381 99.9671 101.2925
H-5	99.6393310546875	while ( lo <= hi ) { while ( hi <= hi ) {
P-5	99.9989 99.8338 99.1981 99.6907 99.8895 99.9739 98.6323 99.9964 97.7745 99.317 99.7966 99.9214 99.9577 101.1115
H-5	99.6271484375	while ( lo < hi ) { while ( lo > hi ) {
P-5	99.9989 99.8338 98.5533 99.6805 99.8994 99.9756 98.7192 99.9966 99.7172 97.6819 99.6968 99.8829 99.9812 101.292
H-5	99.6119613647461	while ( lo <= hi ) {
P-5	99.9989 99.8338 99.1981 99.6907 99.8895 99.9739 98.8131
H-5	99.60792643229166	while ( lo <= hi ) { while ( lo == hi ) {
P-5	99.9989 99.8338 99.1981 99.6907 99.8895 99.9739 98.6323 99.9964 99.7187 97.4389 99.7462 99.9249 99.9389 100.6399
H-5	99.60567220052083	while ( lo == hi ) { while ( lo <= hi ) {
P-5	99.9989 99.8338 97.2047 99.6493 99.9028 99.9707 98.4865 99.9959 99.6909 99.2057 99.7655 99.9189 99.9555 101.0082
H-5	99.60232747395834	while ( lo >= 0 ) { while ( lo <= hi ) {
P-5	99.9989 99.8338 98.2981 98.3979 99.6983 99.9818 98.6363 99.9967 99.7084 99.0841 99.689 99.9048 99.9659 101.3428
H-5	99.59508463541667	while ( hi <= hi ) { while ( lo <= hi ) {
P-5	99.9989 97.1268 99.4843 99.7495 99.9138 99.9724 98.5907 99.9963 99.6959 99.2031 99.7817 99.9126 99.9578 101.0448
H-5	99.59305826822917	while ( lo < hi ) { while ( hi <= hi ) {
P-5	99.9989 99.8338 98.5533 99.6805 99.8994 99.9756 98.7192 99.9966 97.7755 99.3304 99.7934 99.9234 99.9584 100.9596
H-5	99.58880208333333	while ( lo != hi ) { while ( lo <= hi ) {
P-5	99.9989 99.8338 96.6402 99.459 99.9074 99.981 98.6362 99.9971 99.7098 99.2217 99.7825 99.9161 99.9647 101.2858
H-5	99.58270670572917	while ( lo >= hi ) { while ( lo > hi ) {
P-5	99.9989 99.8338 98.2981 99.5206 99.8666 99.9787 98.6154 99.997 99.7288 97.3129 99.7274 99.8834 99.9782 101.503
H-5	99.58090006510416	while ( lo >= hi ) { while ( hi <= hi ) {
P-5	99.9989 99.8338 98.2981 99.5206 99.8666 99.9787 98.6154 99.997 97.7257 99.3413 99.8125 99.9217 99.961 101.3445
H-5	99.5797607421875	while ( lo <= hi ) { if ( lo <= hi ) {
P-5	99.9989 99.8338 99.1981 99.6907 99.8895 99.9739 97.2661 99.9952 99.6198 99.3429 99.7735 99.9344 99.8199 99.8619
H-5	99.568896484375	while ( lo <= hi ) { while ( hi >= hi ) {
P-5	99.9989 99.8338 99.1981 99.6907 99.8895 99.9739 98.6323 99.9964 97.7745 97.894 99.7829 99.9296 99.9739 101.467
H-5	99.56470540364583	while ( lo == hi ) { while ( lo >= hi ) {
P-5	99.9989 99.8338 97.2047 99.6493 99.9028 99.9707 98.4865 99.9959 99.6909 98.1335 99.7395 99.9261 99.9712 101.469
H-5	99.56410319010416	while ( lo > hi ) { while ( lo <= hi ) {
P-5	99.9989 99.8338 96.4306 99.3386 99.873 99.9821 98.6599 99.9972 99.716 99.1417 99.7924 99.9142 99.9624 101.3231
H-5	99.56131998697917	while ( lo >= 0 ) { while ( lo >= hi ) {
P-5	99.9989 99.8338 98.2981 98.3979 99.6983 99.9818 98.6363 99.9967 99.7084 98.4754 99.4267 99.9076 99.9725 101.5896
H-5	99.55975748697917	while ( lo >= 0 ) { while ( lo < hi ) {
P-5	99.9989 99.8338 98.2981 98.3979 99.6983 99.9818 98.6363 99.9967 99.7084 98.3234 99.7872 99.933 99.966 101.3388
H-5	99.55919596354167	while ( lo <= hi ) { if ( lo >= hi ) {
P-5	99.9989 99.8338 99.1981 99.6907 99.8895 99.9739 97.2661 99.9952 99.6198 98.0075 99.7849 99.9353 99.8828 100.8137
H-5	99.5591552734375	while ( lo <= hi ) { while ( hi < hi ) {
P-5	99.9989 99.8338 99.1981 99.6907 99.8895 99.9739 98.6323 99.9964 97.7745 98.1786 99.7993 99.9419 99.9602 101.0214
H-5	99.55330403645833	while ( hi <= hi ) { while ( lo >= hi ) {
P-5	99.9989 97.1268 99.4843 99.7495 99.9138 99.9724 98.5907 99.9963 99.6959 98.2045 99.7727 99.917 99.9734 101.4056
H-5	99.55264485677084	while ( lo <= hi ) { while ( lo <= 0 ) {
P-5	99.9989 99.8338 99.1981 99.6907 99.8895 99.9739 98.6323 99.9964 99.7187 99.205 96.4326 99.883 99.969 101.3699
H-5	99.54689127604166	while ( lo >= hi ) { while ( lo == hi ) {
P-5	99.9989 99.8338 98.2981 99.5206 99.8666 99.9787 98.6154 99.997 99.7288 97.2607 99.7757 99.9358 99.9418 100.9538
H-5	99.544970703125	while ( lo < hi ) { while ( lo == hi ) {
P-5	99.9989 99.8338 98.5533 99.6805 99.8994 99.9756 98.7192 99.9966 99.7172 97.2145 99.7265 99.9294 99.9399 100.4921
H-5	99.5448974609375	while ( lo <= hi ) { while ( lo != hi ) {
P-5	99.9989 99.8338 99.1981 99.6907 99.8895 99.9739 98.6323 99.9964 99.7187 96.0371 99.6305 99.9444 99.9733 101.158
H-5	99.53881022135417	if ( lo <= hi ) { while ( lo <= hi ) {
P-5	99.9976 99.7595 99.3407 99.7134 99.8753 99.7188 97.9045 99.9949 99.6553 99.2328 99.7574 99.9322 99.929 100.3961
H-5	99.53836263020834	while ( lo == hi ) { while ( lo < hi ) {
P-5	99.9989 99.8338 97.2047 99.6493 99.9028 99.9707 98.4865 99.9959 99.6909 98.1218 99.7834 99.9422 99.9563 101.0404
H-5	99.53624674479167	while ( hi <= hi ) { while ( lo < hi ) {
P-5	99.9989 97.1268 99.4843 99.7495 99.9138 99.9724 98.5907 99.9963 99.6959 98.3331 99.7906 99.9323 99.9602 101.0013
H-5	99.534765625	while ( lo != hi ) { while ( lo >= hi ) {
P-5	99.9989 99.8338 96.6402 99.459 99.9074 99.981 98.6362 99.9971 99.7098 98.0678 99.7592 99.9258 99.9756 101.6319
H-5	99.53444010416666	while ( lo <= 0 ) { while ( lo <= hi ) {
P-5	99.9989 99.8338 99.1981 96.6446 99.7459 99.9773 98.5544 99.996 99.6894 99.171 99.6823 99.9106 99.9624 101.1541
H-5	99.53257649739584	while ( lo <= lo ) { while ( lo <= hi ) {
P-5	99.9989 99.8338 99.1981 96.2525 99.8656 99.9772 98.6256 99.9961 99.7247 99.2084 99.7779 99.915 99.9684 101.1485
H-5	99.53173828125	while ( lo <= hi ) { while ( lo >= 0 ) {
P-5	99.9989 99.8338 99.1981 99.6907 99.8895 99.9739 98.6323 99.9964 99.7187 98.1552 96.9593 99.8683 99.9788 101.5843
H-5	99.53115234375	while ( lo < hi ) { if ( lo <= hi ) {
P-5	99.9989 99.8338 98.5533 99.6805 99.8994 99.9756 97.3633 99.996 99.6213 99.3485 99.7599 99.9353 99.8093 99.6943
H-5	99.52891438802084	while ( lo < hi ) { while ( lo <= 0 ) {
P-5	99.9989 99.8338 98.5533 99.6805 99.8994 99.9756 98.7192 99.9966 99.7172 99.2339 96.6602 99.8847 99.9696 101.3131
H-5	99.52665201822917	while ( lo <= hi ) { while ( hi > hi ) {
P-5	99.9989 99.8338 99.1981 99.6907 99.8895 99.9739 98.6323 99.9964 97.7745 97.3707 99.7443 99.9063 99.9785 101.4141
H-5	99.52471516927083	while ( lo <= hi ) { while ( lo <= lo ) {
P-5	99.9989 99.8338 99.1981 99.6907 99.8895 99.9739 98.6323 99.9964 99.7187 99.205 96.1738 99.8933 99.9692 101.1993
H-5	99.52430013020833	while ( lo >= hi ) { if ( lo <= hi ) {
P-5	99.9989 99.8338 98.2981 99.5206 99.8666 99.9787 97.3095 99.996 99.6273 99.3528 99.7847 99.9402 99.8035 100.0561
H-5	99.52423858642578	while ( lo < hi ) {
P-5	99.9989 99.8338 98.5533 99.6805 99.8994 99.9756 98.7545
H-5	99.52291666666666	while ( lo >= 0 ) { while ( lo >= 0 ) {
P-5	99.9989 99.8338 98.2981 98.3979 99.6983 99.9818 98.6363 99.9967 99.7084 98.4754 98.8325 99.8721 99.9752 101.6406
H-5	99.5227783203125	while ( lo != hi ) { while ( lo < hi ) {
P-5	99.9989 99.8338 96.6402 99.459 99.9074 99.981 98.6362 99.9971 99.7098 98.1504 99.7995 99.9418 99.9651 101.324
H-5	99.5215087890625	while ( lo <= hi ) { while ( lo > 0 ) {
P-5	99.9989 99.8338 99.1981 99.6907 99.8895 99.9739 98.6323 99.9964 99.7187 97.4734 97.4789 99.9208 99.9826 101.5369
H-5	99.52010904947916	while ( lo > hi ) { while ( lo < hi ) {
P-5	99.9989 99.8338 96.4306 99.3386 99.873 99.9821 98.6599 99.9972 99.716 98.4777 99.7962 99.9366 99.9629 101.3005
H-5	99.51800130208333	while ( lo < hi ) { while ( hi >= hi ) {
P-5	99.9989 99.8338 98.5533 99.6805 99.8994 99.9756 98.7192 99.9966 97.7755 97.7945 99.7787 99.9363 99.9748 101.3552
H-5	99.50172424316406	while ( lo >= hi ) {
P-5	99.9989 99.8338 98.2981 99.5206 99.8666 99.9787 99.0193
H-5	99.439697265625	if ( lo <= hi ) { lo = hi ; }
P-5	99.9976 99.7595 99.3407 99.7134 99.8753 99.7188 98.2798 99.6244 99.3194 99.1681 98.8394 101.205
H-5	99.43585205078125	while ( lo <= hi ) { if ( lo <= hi )
P-5	99.9989 99.8338 99.1981 99.6907 99.8895 99.9739 97.2661 99.9952 99.6198 99.3429 99.7735 99.9344 98.0874
H-5	99.43314906529018	while ( lo <= hi ) { while ( lo <= hi )
P-5	99.9989 99.8338 99.1981 99.6907 99.8895 99.9739 98.6323 99.9964 99.7187 99.205 99.762 99.9103 96.7568
H-5	99.39253452845982	while ( lo < hi ) { if ( lo <= hi )
P-5	99.9989 99.8338 98.5533 99.6805 99.8994 99.9756 97.3633 99.996 99.6213 99.3485 99.7599 99.9353 98.0317
H-5	99.38917759486607	while ( lo < hi ) { while ( lo <= hi )
P-5	99.9989 99.8338 98.5533 99.6805 99.8994 99.9756 98.7192 99.9966 99.7172 99.2339 99.7559 99.9149 96.6714
H-5	99.37581961495536	while ( lo >= hi ) { if ( lo <= hi )
P-5	99.9989 99.8338 98.2981 99.5206 99.8666 99.9787 97.3095 99.996 99.6273 99.3528 99.7847 99.9402 98.2565
H-5	99.37321254185268	while ( lo <= hi ) { while ( lo < hi )
P-5	99.9989 99.8338 99.1981 99.6907 99.8895 99.9739 98.6323 99.9964 99.7187 98.2919 99.7761 99.9338 96.7933
H-5	99.36658586774554	while ( lo >= hi ) { while ( lo <= hi )
P-5	99.9989 99.8338 98.2981 99.5206 99.8666 99.9787 98.6154 99.997 99.7288 99.1774 99.7814 99.9144 96.9233
H-5	99.36292375837054	while ( lo <= hi ) { while ( lo >= hi )
P-5	99.9989 99.8338 99.1981 99.6907 99.8895 99.9739 98.6323 99.9964 99.7187 98.1552 99.7445 99.9118 96.8392
H-5	99.35410853794643	while ( lo <= hi ) { if ( lo < hi )
P-5	99.9989 99.8338 99.1981 99.6907 99.8895 99.9739 97.2661 99.9952 99.6198 98.1296 99.7876 99.9341 98.1426
H-5	99.32587432861328	while ( lo >= 0 ) {
P-5	99.9989 99.8338 98.2981 98.3979 99.6983 99.9818 98.9005
H-5	99.32452392578125	while ( lo == hi ) {
P-5	99.9989 99.8338 97.2047 99.6493 99.9028 99.9707 98.5381
H-5	99.32439422607422	while ( hi <= hi ) {
P-5	99.9989 97.1268 99.4843 99.7495 99.9138 99.9724 98.8517
H-5	99.31421576605902	while ( lo <= hi ) { {
P-5	99.9989 99.8338 99.1981 99.6907 99.8895 99.9739 96.1634 99.5819
H-5	99.29239908854167	} while ( lo <= hi ) {
P-5	99.4135 99.9963 99.8244 99.405 99.6099 99.9299 99.952 99.5564
H-5	99.2813491821289	while ( lo != hi ) {
P-5	99.9989 99.8338 96.6402 99.459 99.9074 99.981 98.9328
H-5	99.27955322265625	/ * while ( lo <= hi ) {
P-5	99.8986 99.271 99.8558 99.8472 99.366 99.6572 99.957 99.9704 99.2825
H-5	99.25745646158855	while ( lo <= hi && lo <= hi ) {
P-5	99.9989 99.8338 99.1981 99.6907 97.1736 98.8792 99.277 99.6203 99.9053 99.9697 98.0451
H-5	99.23689100477431	while ( lo < hi ) { {
P-5	99.9989 99.8338 98.5533 99.6805 99.8994 99.9756 96.1076 99.585
H-5	99.23433685302734	while ( lo > hi ) {
P-5	99.9989 99.8338 96.4306 99.3386 99.873 99.9821 98.92
H-5	99.21552276611328	while ( lo <= 0 ) {
P-5	99.9989 99.8338 99.1981 96.6446 99.7459 99.9773 98.8278
H-5	99.19566650390625	while ( lo <= hi ) { continue ;
P-5	99.9989 99.8338 99.1981 99.6907 99.8895 99.9739 94.5159 99.6303 99.7278
H-5	99.1774673461914	while ( lo <= 1 ) {
P-5	99.9989 99.8338 99.1981 96.3061 99.8187 99.9772 98.7892
H-5	99.17655181884766	while ( lo <= length ) {
P-5	99.9989 99.8338 99.1981 96.213 99.7927 99.9702 98.9079
H-5	99.1749038696289	while ( lo <= $NUMBER$ ) {
P-5	99.9989 99.8338 99.1981 96.2432 99.8522 99.9765 98.7988
H-5	99.17355346679688	while ( lo <= lo ) {
P-5	99.9989 99.8338 99.1981 96.2525 99.8656 99.9772 98.7645
H-5	99.16779242621527	} while ( lo >= hi ) {
P-5	99.4135 99.9963 99.8244 98.5113 99.361 99.9059 99.9679 99.5856
H-5	99.16101837158203	while ( hi < hi ) {
P-5	99.9989 97.1268 98.2753 99.7344 99.9116 99.9752 98.7681
H-5	99.14796956380208	while ( lo >= hi ) { {
P-5	99.9989 99.8338 98.2981 99.5206 99.8666 99.9787 95.7921 99.5451
H-5	99.13273620605469	while ( lo != 0 ) {
P-5	99.9989 99.8338 96.6402 98.6718 99.6946 99.9837 98.7412
H-5	99.13020324707031	while ( lo > 0 ) {
P-5	99.9989 99.8338 96.4306 98.7451 99.7454 99.9843 98.8058
H-5	99.12947082519531	while ( hi >= hi ) {
P-5	99.9989 97.1268 97.7686 99.6567 99.909 99.9781 99.1
H-5	99.12284088134766	while ( lo >= 1 ) {
P-5	99.9989 99.8338 98.2981 96.6948 99.7665 99.9815 98.9114
H-5	99.11102973090277	} while ( lo < hi ) {
P-5	99.4135 99.9963 99.8244 97.7888 99.6249 99.9324 99.9602 99.5145
H-5	99.10881890190973	while ( lo >= - 1 ) {
P-5	99.9989 99.8338 98.2981 95.2609 99.9091 99.9559 99.9856 99.2393
H-5	99.10504150390625	while ( lo >= $NUMBER$ ) {
P-5	99.9989 99.8338 98.2981 96.5025 99.8252 99.9818 98.9024
H-5	99.09893798828125	while ( lo < lo ) {
P-5	99.9989 99.8338 98.5533 96.4005 99.8473 99.9788 98.681
H-5	99.098388671875	while ( lo <= max ) {
P-5	99.9989 99.8338 99.1981 95.9914 99.4199 99.9622 98.8851
H-5	99.09602573939732	if ( lo <= hi )
P-5	99.9976 99.7595 99.3407 99.7134 99.8753 97.111
H-5	99.09310913085938	while ( lo < length ) {
P-5	99.9989 99.8338 98.5533 96.1645 99.8441 99.9678 98.8847
H-5	99.08486938476562	while ( lo < 0 ) {
P-5	99.9989 99.8338 98.5533 96.1384 99.8017 99.9764 98.8787
H-5	99.08485630580357	while ( lo <= hi )
P-5	99.9989 99.8338 99.1981 99.6907 99.8895 95.4852
H-5	98.98615373883929	while ( lo < hi )
P-5	99.9989 99.8338 98.5533 99.6805 99.8994 95.4393
H-5	98.9591064453125	if ( lo < hi )
P-5	99.9976 99.7595 98.3086 99.7181 99.8788 97.1764
H-5	98.90524727957589	while ( lo >= hi )
P-5	99.9989 99.8338 98.2981 99.5206 99.8666 95.321
H-5	98.22802734375	} else {
P-5	97.7114 99.8322 99.424
H-5	98.17633819580078	for ( )
P-5	99.9985 95.9679 99.0206
S-6	return bin@@ search ( arr , x , mid , end ) ;
T-6	return bin@@ search ( arr , x , mid + 1 , end ) ;
H-6	99.8377176920573	return bin@@ search ( arr , x , mid ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 99.6793 99.2297 99.986 99.9875
H-6	99.7974853515625	return bin@@ search ( arr , x , mid , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 99.6793 99.3678 99.6559 99.3318 99.9833 99.9767
H-6	99.76779174804688	return bin@@ search ( arr , x , mid , end , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 99.6793 99.3678 99.6559 99.1387 99.4912 99.822 99.9905 99.9691
H-6	99.70938546316964	return bin@@ search ( arr , x , end , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 97.9441 99.7538 99.7432 99.3554 99.9866 99.9782
H-6	99.68737030029297	return bin@@ search ( arr , x , end , end , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 97.9441 99.7538 99.7432 99.1468 99.42 99.8521 99.9917 99.9762
H-6	99.64944893973214	return bin@@ search ( arr , x , mid , mid ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 99.6793 99.3678 97.5372 99.3729 99.9883 99.9768
H-6	99.64280700683594	return bin@@ search ( arr , x , mid , mid , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 99.6793 99.3678 97.5372 99.1952 99.573 99.806 99.9876 99.9688
H-6	99.6239725748698	return bin@@ search ( arr , x , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 97.9441 98.4072 99.9783 99.9881
H-6	99.62120056152344	return bin@@ search ( arr , x , mid , end , 1 ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 99.6793 99.3678 99.6559 99.1387 97.0101 99.9548 99.9946 99.9677
H-6	99.60275268554688	return bin@@ search ( arr , x , mid , end - end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 99.6793 99.3678 99.6559 96.9541 99.0118 99.8461 99.9843 99.9747
H-6	99.5986328125	return bin@@ search ( arr , x , mid , start , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 99.6793 99.3678 96.2029 99.9085 99.6524 99.6583 99.9855 99.9535
H-6	99.59230259486607	return bin@@ search ( arr , x , mid , 1 ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 99.6793 99.3678 96.4193 99.6889 99.9904 99.9766
H-6	99.57078334263393	return bin@@ search ( arr , mid , mid , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 96.3731 99.9779 99.2046 99.6982 99.7723 99.5536 99.9869 99.9813
H-6	99.56507873535156	return bin@@ search ( arr , x , start , end , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 95.9212 99.9838 99.5623 99.0702 99.5774 99.7948 99.9907 99.9709
H-6	99.5628153483073	return bin@@ search ( arr , start , mid ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 96.3392 99.9981 99.6667 99.3377 99.9835 99.9856
H-6	99.56242152622768	return bin@@ search ( arr , x , start , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 95.9212 99.9838 99.5623 99.2852 99.9808 99.9707
H-6	99.55875941685268	return bin@@ search ( arr , mid , end , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 96.3731 99.9779 99.0799 99.6726 99.764 99.5419 99.9882 99.9819
H-6	99.55664934430804	return bin@@ search ( arr , start , mid , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 96.3392 99.9981 99.6667 99.2586 99.6649 99.4641 99.9827 99.9759
H-6	99.55537414550781	return bin@@ search ( arr , x , mid , end , 0 ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 99.6793 99.3678 99.6559 99.1387 95.9608 99.9438 99.9947 99.9748
H-6	99.55458068847656	return bin@@ search ( arr , x , mid , end , $NUMBER$ ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 99.6793 99.3678 99.6559 99.1387 95.9328 99.9651 99.9943 99.9692
H-6	99.55129568917411	return bin@@ search ( arr , x , end , mid ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 97.9441 99.7538 97.1615 99.7188 99.991 99.9789
H-6	99.5499496459961	return bin@@ search ( arr , x , end , end , 1 ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 97.9441 99.7538 99.7432 99.1468 97.1099 99.9632 99.9951 99.9729
H-6	99.54680633544922	return bin@@ search ( arr , x , mid , end - 1 ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 99.6793 99.3678 99.6559 96.9541 98.0858 99.8697 99.9923 99.974
H-6	99.54292297363281	return bin@@ search ( arr , x , x , end , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 95.4836 99.9568 99.4746 99.2969 99.5892 99.7571 99.9914 99.9672
H-6	99.53806559244792	return bin@@ search ( arr , 0 , mid ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 95.9318 99.9978 99.7184 99.3944 99.9846 99.9867
H-6	99.53451538085938	return bin@@ search ( arr , start , mid , end , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 96.3392 99.9981 99.6667 99.2586 99.6649 98.9196 99.4439 99.8598 99.9906 99.968
H-6	99.5318374633789	return bin@@ search ( arr , mid , mid , end , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 96.3731 99.9779 99.2046 99.6982 99.7723 98.8225 99.3902 99.8649 99.99 99.9726
H-6	99.52428436279297	return bin@@ search ( arr , x , mid , end , false ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 99.6793 99.3678 99.6559 99.1387 95.425 99.9807 99.9957 99.9753
H-6	99.523193359375	return bin@@ search ( arr , 0 , mid , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 95.9318 99.9978 99.7184 99.1983 99.6897 99.3858 99.9854 99.9746
H-6	99.52027893066406	return bin@@ search ( arr , 0 , mid , end , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 95.9318 99.9978 99.7184 99.1983 99.6897 99.0272 99.5481 99.8058 99.9902 99.9742
H-6	99.51726888020833	{ return bin@@ search ( arr , x , mid , end ) ;
P-6	99.7222 99.7601 99.9712 99.9971 99.7052 99.9822 99.6987 99.9985 99.6857 99.4164 99.6903 99.388 99.9864 99.8252
H-6	99.51712799072266	return bin@@ search ( arr , mid , end , end , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 96.3731 99.9779 99.0799 99.6726 99.764 98.8098 99.3302 99.8582 99.9891 99.976
H-6	99.51408168247768	return bin@@ search ( arr , x , x , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 95.4836 99.9568 99.4746 99.156 99.9783 99.978
H-6	99.50569152832031	return bin@@ search ( arr , x , mid , end , mid ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 99.6793 99.3678 99.6559 99.1387 95.2297 99.8861 99.9928 99.9706
H-6	99.50412423270089	return bin@@ search ( arr , x , mid , length ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 99.6793 99.3678 95.4433 99.4271 99.9898 99.9804
H-6	99.50306114783653	{ return bin@@ search ( arr , x , mid ) ;
P-6	99.7222 99.7601 99.9712 99.9971 99.7052 99.9822 99.6987 99.9985 99.6857 99.1686 99.9853 99.9331
H-6	99.50186593191964	return bin@@ search ( arr , x , mid , $NUMBER$ ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 99.6793 99.3678 95.1366 99.705 99.9913 99.976
H-6	99.50132751464844	return bin@@ search ( arr , x , mid , end - mid ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 99.6793 99.3678 99.6559 96.9541 97.3321 99.9032 99.9876 99.9713
H-6	99.50057547433036	return bin@@ search ( arr , x , start , mid ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 95.9212 99.9838 98.3894 99.586 99.9843 99.9734
H-6	99.4988784790039	return bin@@ search ( arr , x , end , end , 0 ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 97.9441 99.7538 99.7432 99.1468 96.2932 99.9567 99.9953 99.9788
H-6	99.49554443359375	return bin@@ search ( arr , x , end , end - end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 97.9441 99.7538 99.7432 96.5567 98.9244 99.8675 99.9876 99.9812
H-6	99.49546813964844	return bin@@ search ( arr , x , mid , 1 , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 99.6793 99.3678 96.4193 98.6676 98.9648 99.7149 99.9839 99.9599
H-6	99.49537658691406	return bin@@ search ( arr , x , mid , end , true ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 99.6793 99.3678 99.6559 99.1387 94.972 99.9714 99.9955 99.9752
H-6	99.4952392578125	return bin@@ search ( arr , x , mid , mid , 1 ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 99.6793 99.3678 97.5372 99.1952 97.1263 99.8861 99.9932 99.9688
H-6	99.49128723144531	return bin@@ search ( arr , x , mid , length , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 99.6793 99.3678 95.4433 99.0636 99.3571 99.815 99.9918 99.9727
H-6	99.49105072021484	return bin@@ search ( arr , x , end , end , $NUMBER$ ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 97.9441 99.7538 99.7432 99.1468 96.1586 99.971 99.9948 99.9744
H-6	99.48311614990234	return bin@@ search ( arr , x , mid , end + 1 ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 99.6793 99.3678 99.6559 95.0685 99.0042 99.8281 99.9902 99.9657
H-6	99.48109436035156	return bin@@ search ( arr , x , end , mid , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 97.9441 99.7538 97.1615 98.539 99.3176 99.8444 99.9911 99.9758
H-6	99.47901262555804	return bin@@ search ( arr , x , end , 1 ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 97.9441 99.7538 96.0102 99.8569 99.9931 99.9781
H-6	99.47584533691406	return bin@@ search ( arr , x , start , mid , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 95.9212 99.9838 98.3894 98.8478 99.5809 99.7646 99.9874 99.9683
H-6	99.47409057617188	return bin@@ search ( arr , x , end , start , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 97.9441 99.7538 95.5902 99.8206 99.6445 99.7056 99.9902 99.9665
H-6	99.47307477678571	return bin@@ search ( arr , start , end , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 96.3392 99.9981 98.0364 99.6461 99.7208 99.4754 99.9863 99.9776
H-6	99.47126988002232	return bin@@ search ( arr , end , end , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 95.1841 99.988 99.0652 99.6952 99.7185 99.5319 99.9888 99.9831
H-6	99.46776326497395	return bin@@ search ( arr , mid , mid ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 96.3731 99.9779 99.2046 98.6379 99.9871 99.9894
H-6	99.46756417410714	return bin@@ search ( arr , x , x , mid ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 95.4836 99.9568 98.4748 99.4978 99.9847 99.9782
H-6	99.46248081752232	return bin@@ search ( arr , x , mid , max ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 99.6793 99.3678 94.7034 99.5876 99.9948 99.9719
H-6	99.46089680989583	return bin@@ search ( arr , x , mid , end ) ; }
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 99.6793 99.3678 99.6559 99.3318 99.9833 95.8519 98.8734
H-6	99.45963541666667	return bin@@ search ( arr , mid , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 96.3731 99.9779 99.0799 98.6734 99.9796 99.9888
H-6	99.45962960379464	return bin@@ search ( arr , x , length , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 94.5475 99.7072 99.6796 99.3652 99.9872 99.9782
H-6	99.45895385742188	return bin@@ search ( arr , end , mid ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 95.1841 99.988 99.2708 99.6461 99.9895 99.9858
H-6	99.44317626953125	return bin@@ search ( arr , x , mid , 0 ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 99.6793 99.3678 94.5651 99.4527 99.9894 99.9801
H-6	99.42586844308036	return bin@@ search ( arr , 0 , end , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 95.9318 99.9978 97.8137 99.6627 99.7601 99.39 99.9878 99.9753
H-6	99.42420247395833	{ return bin@@ search ( arr , x , end , end ) ;
P-6	99.7222 99.7601 99.9712 99.9971 99.7052 99.9822 99.6987 99.9985 97.9498 99.7172 99.7562 99.3745 99.9888 99.8093
H-6	99.41986083984375	return bin@@ search ( arr , 1 , mid ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 94.5713 99.993 99.5874 99.4756 99.983 99.9849
H-6	99.41424560546875	return bin@@ search ( arr , x , mid , start ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 99.6793 99.3678 96.2029 97.4397 99.9648 99.9751
H-6	99.41249302455357	return bin@@ search ( arr , 1 , mid , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 94.5713 99.993 99.5874 99.0837 99.6989 99.4371 99.9851 99.9754
H-6	99.4107666015625	return bin@@ search ( arr , end , mid , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 95.1841 99.988 99.2708 98.7668 99.5676 99.5594 99.9885 99.9824
H-6	99.40479387555804	return bin@@ search ( arr , [ x ] , mid ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 94.6773 99.4849 99.6786 99.89 99.1085 99.4222 99.9762 99.9864
H-6	99.40296282087054	return bin@@ search ( arr , x , end , $NUMBER$ ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 97.9441 99.7538 94.9326 99.8702 99.9935 99.9772
H-6	99.40029296875	result = bin@@ search ( arr , x , mid , end ) ;
P-6	99.9146 99.6583 99.9679 99.996 99.6975 99.99 99.701 99.9982 99.6811 99.3105 99.6675 99.4821 99.9877 99.8095
H-6	99.38984898158482	return bin@@ search ( arr , x , 0 , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 93.6639 99.8075 99.4922 99.3729 99.978 99.9736
H-6	99.38810511997768	return bin@@ search ( arr , length , mid , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 94.1959 99.9761 99.4027 99.1652 99.7042 99.5753 99.9894 99.9816
H-6	99.38072858537946	return bin@@ search ( arr , x , 1 , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 93.8043 99.5516 99.4723 99.3847 99.976 99.9713
H-6	99.37945556640625	return bin@@ search ( arr , x , max , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 94.2166 98.9565 99.561 99.463 99.9857 99.9594
H-6	99.37910970052083	return bin@@ search ( arr , x , end , end ) ; }
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 97.9441 99.7538 99.7432 99.3554 99.9866 95.8023 98.931
H-6	99.37830461774554	return bin@@ search ( arr , start , mid , mid ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 96.3392 99.9981 99.6667 99.2586 97.2056 99.4213 99.987 99.9768
H-6	99.37265014648438	return bin@@ search ( arr , start , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 96.3392 99.9981 98.0364 98.6906 99.9789 99.9858
H-6	99.37208775111607	return bin@@ search ( arr , length , end , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 94.1959 99.9761 98.6691 99.6313 99.755 99.5676 99.99 99.9812
H-6	99.3700420673077	result = bin@@ search ( arr , x , mid ) ;
P-6	99.9146 99.6583 99.9679 99.996 99.6975 99.99 99.701 99.9982 99.6811 99.2902 99.9867 99.7864
H-6	99.36752755301339	return bin@@ search ( arr , start , mid , 1 ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 96.3392 99.9981 99.6667 99.2586 96.7353 99.7367 99.9903 99.9775
H-6	99.36672973632812	return bin@@ search ( arr , length , mid ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 94.1959 99.9761 99.4027 99.4098 99.9867 99.9865
H-6	99.36660531850961	return return bin@@ search ( arr , x , mid ) ;
P-6	93.9553 99.5906 99.9678 99.9954 99.7615 99.987 99.6247 99.9982 99.6679 99.3153 99.9835 99.9899
H-6	99.36440022786458	return bin@@ search ( arr , x , max ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 94.2166 99.0125 99.9927 99.981
H-6	99.36158854166666	return bin@@ search ( arr , x , mid , end ) ; ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 99.6793 99.3678 99.6559 99.3318 99.9833 93.2564 99.9792
H-6	99.3556620279948	return bin@@ search ( arr , end , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 95.1841 99.988 99.0652 98.6186 99.9822 99.9869
H-6	99.35315880408653	return bin@@ search ( arr , x , mid ) ; }
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 99.6793 99.2297 99.986 94.7655 98.7605
H-6	99.35294596354167	return bin@@ search ( arr , x , length ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 94.5475 98.5419 99.9859 99.99
H-6	99.35189115084134	return bin@@ search ( arr , x , mid ) ; ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 99.6793 99.2297 99.986 93.5293 99.9802
H-6	99.33081993689903	return bin@@ search ( arr , x , mid ) ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 99.6793 99.2297 93.2755 99.9728 99.9734
H-6	99.32680257161458	return bin@@ search ( arr , x , 1 ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 93.8043 98.9737 99.9876 99.9861
H-6	99.31997680664062	throw bin@@ search ( arr , x , mid ) ;
P-6	98.639 99.9311 99.9838 99.764 99.9889 99.814 99.9987 99.7336 99.3645 99.9955 99.9908
H-6	99.31869506835938	return bin@@ search ( arr , 0 , end ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 95.9318 99.9978 97.8137 98.6763 99.9736 99.9881
H-6	99.3033447265625	return bin@@ search ( arr , $NUMBER$ , mid ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 93.3448 99.9818 99.4431 99.4557 99.9865 99.9853
H-6	99.28042602539062	return bin@@ search ( arr , x , x ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 99.9983 95.4836 96.7406 99.9819 99.9891
H-6	99.27904256184895	return bin@@ search ( x , x , mid ) ;
P-6	99.8041 99.9642 99.9967 93.5553 99.998 99.2797 99.9974 99.6084 99.2459 99.9821 99.988
H-6	99.1805908203125	return bin@@ search ( arr , mid ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 96.3731 96.0939 99.931 99.9649
H-6	99.12078857421875	return bin@@ search ( arr , x ) ;
P-6	99.8041 99.9642 99.9967 99.76 99.9894 99.7286 92.1311 99.9345 99.9706
H-6	98.99808756510417	return arr [ arr [ x ] ;
P-6	96.3761 99.9074 97.2383 99.7582 98.9539 99.587 99.3845 99.8487
H-6	98.84409005301339	return arr [ x ] ;
P-6	96.3761 99.9074 99.1813 99.7264 99.8784 96.9102
H-6	97.74422454833984	return end ;
P-6	94.879 99.8339 96.3352
S-7	result . add ( flatten ( x ) ) ; } } return result ; } else { return flatten ( arr ) ; }
T-7	result . add ( ( x ) ) ; } } return result ; } else { return arr ; }
H-7	99.6176424893466	result . add ( flatten ( x ) ) ; } } else { return flatten ( x ) ; }
P-7	99.9983 99.9232 99.8569 98.8847 99.9923 99.7213 99.5959 99.9892 99.9896 99.5466 98.9728 98.7454 99.5786 99.6657 99.3499 99.9978 99.5913 99.9143 99.9822 99.4696 99.8913
H-7	99.605263671875	result . add ( flatten ( x ) ) ; } } else { result . add ( flatten ( x ) ) ;
P-7	99.9983 99.9232 99.8569 98.8847 99.9923 99.7213 99.5959 99.9892 99.9896 99.5466 98.9728 98.7454 99.5786 97.6923 99.965 99.9038 99.9798 99.8816 99.9976 99.8332 99.9275 99.9908 99.9824 99.2512
H-7	99.59958902994792	result . add CaMeL All ( flatten ( x ) ) ; } } else { return flatten ( x ) ; }
P-7	99.9983 99.9232 97.9758 99.9006 99.9922 99.4692 99.9911 99.7636 99.5998 99.99 99.9904 99.7905 99.0707 98.8699 99.5149 99.6417 99.2297 99.9977 99.5222 99.8935 99.9831 99.4694 99.8813
H-7	99.59839680989583	result . add ( flatten ( x ) ) ; } } else { result . add ( flatten ( x ) ) ; } } return result ;
P-7	99.9983 99.9232 99.8569 98.8847 99.9923 99.7213 99.5959 99.9892 99.9896 99.5466 98.9728 98.7454 99.5786 97.6923 99.965 99.9038 99.9798 99.8816 99.9976 99.8332 99.9275 99.9908 99.9824 99.2979 98.3442 99.6815 99.7963 99.9819 99.9697
H-7	99.59361530172414	result . add ( flatten ( x ) ) ; } else { result . add ( flatten ( x ) ) ; } } return result ;
P-7	99.9983 99.9232 99.8569 98.8847 99.9923 99.7213 99.5959 99.9892 99.9896 99.5466 96.9327 99.6837 98.2069 99.9653 99.8602 99.9782 99.818 99.9976 99.8732 99.8994 99.9929 99.9845 99.8273 99.4054 98.7322 99.8112 99.973 99.8432
H-7	99.59287672776442	result . add ( flatten ( x ) ) ; } } else { result . add ( flatten ( x ) ) ; }
P-7	99.9983 99.9232 99.8569 98.8847 99.9923 99.7213 99.5959 99.9892 99.9896 99.5466 98.9728 98.7454 99.5786 97.6923 99.965 99.9038 99.9798 99.8816 99.9976 99.8332 99.9275 99.9908 99.9824 99.2979 99.2366
H-7	99.59231883081897	result . add ( flatten ( x ) ) ; } } else { result . add ( flatten ( x ) ) ; } return result ;
P-7	99.9983 99.9232 99.8569 98.8847 99.9923 99.7213 99.5959 99.9892 99.9896 99.5466 98.9728 98.7454 99.5786 97.6923 99.965 99.9038 99.9798 99.8816 99.9976 99.8332 99.9275 99.9908 99.9824 99.2979 98.3591 99.766 99.9312 99.9429
H-7	99.58912109375	result . add ( flatten ( x ) ) ; } } return result ; } else { return flatten ( arr ) ;
P-7	99.9983 99.9232 99.8569 98.8847 99.9923 99.7213 99.5959 99.9892 99.9896 99.5466 98.9728 99.135 99.7845 99.9704 97.5586 99.5469 99.9439 99.7478 99.7766 99.9986 99.1167 99.9406 99.9842 99.8219
H-7	99.588359375	result . add ( flatten ( x ) ) ; } } return result ; } else { return flatten ( x ) ;
P-7	99.9983 99.9232 99.8569 98.8847 99.9923 99.7213 99.5959 99.9892 99.9896 99.5466 98.9728 99.135 99.7845 99.9704 97.5586 99.5469 99.9439 99.7478 99.7766 99.9986 99.1701 99.9035 99.9798 99.7907
H-7	99.58329716435185	result . add CaMeL All ( flatten ( x ) ) ; } } else { result . add ( flatten ( x ) ) ;
P-7	99.9983 99.9232 97.9758 99.9006 99.9922 99.4692 99.9911 99.7636 99.5998 99.99 99.9904 99.7905 99.0707 98.8699 99.5149 97.7703 99.9649 99.9018 99.9296 99.6199 99.9968 99.7977 99.9095 99.9919 99.982 99.1125
H-7	99.57659040178571	result . add CaMeL All ( flatten ( x ) ) ; } } else { result . add ( flatten ( x ) ) ; }
P-7	99.9983 99.9232 97.9758 99.9006 99.9922 99.4692 99.9911 99.7636 99.5998 99.99 99.9904 99.7905 99.0707 98.8699 99.5149 97.7703 99.9649 99.9018 99.9296 99.6199 99.9968 99.7977 99.9095 99.9919 99.982 99.4036 99.1045
H-7	99.57033203125	result . add ( flatten ( x ) ) ; } else { result . add ( flatten ( x ) ) ; }
P-7	99.9983 99.9232 99.8569 98.8847 99.9923 99.7213 99.5959 99.9892 99.9896 99.5466 96.9327 99.6837 98.2069 99.9653 99.8602 99.9782 99.818 99.9976 99.8732 99.8994 99.9929 99.9845 99.8273 98.8087
H-7	99.56959635416666	result . add ( flatten ( x ) ) ; } else { result . add ( flatten ( x ) ) ; } } } return result ;
P-7	99.9983 99.9232 99.8569 98.8847 99.9923 99.7213 99.5959 99.9892 99.9896 99.5466 96.9327 99.6837 98.2069 99.9653 99.8602 99.9782 99.818 99.9976 99.8732 99.8994 99.9929 99.9845 99.8273 99.4054 97.8999 99.661 99.718 99.9819 99.9719
H-7	99.56893807870371	result . add CaMeL All ( flatten ( x ) ) ; } } return result ; } else { return flatten ( arr ) ;
P-7	99.9983 99.9232 97.9758 99.9006 99.9922 99.4692 99.9911 99.7636 99.5998 99.99 99.9904 99.7905 99.0707 98.8891 99.774 99.9686 97.5627 99.5493 99.9337 99.7415 99.7251 99.9985 99.099 99.9347 99.9853 99.8129
H-7	99.56869393807871	result . add CaMeL All ( flatten ( x ) ) ; } } return result ; } else { return flatten ( x ) ;
P-7	99.9983 99.9232 97.9758 99.9006 99.9922 99.4692 99.9911 99.7636 99.5998 99.99 99.9904 99.7905 99.0707 98.8891 99.774 99.9686 97.5627 99.5493 99.9337 99.7415 99.7251 99.9985 99.1728 99.8859 99.9813 99.7851
H-7	99.56723854758523	result . add ( flatten ( x ) ) ; } } else { return flatten ( arr ) ; }
P-7	99.9983 99.9232 99.8569 98.8847 99.9923 99.7213 99.5959 99.9892 99.9896 99.5466 98.9728 98.7454 99.5786 99.6657 99.3499 99.9978 98.4757 99.9395 99.9856 99.4238 99.915
H-7	99.56173706054688	result . add CaMeL All ( flatten ( x ) ) ; } } else { return flatten ( arr ) ; }
P-7	99.9983 99.9232 97.9758 99.9006 99.9922 99.4692 99.9911 99.7636 99.5998 99.99 99.9904 99.7905 99.0707 98.8699 99.5149 99.6417 99.2297 99.9977 98.5986 99.9384 99.9863 99.4098 99.9077
H-7	99.5594921875	result . add ( flatten ( x ) ) ; } return result ; } else { return flatten ( x ) ; }
P-7	99.9983 99.9232 99.8569 98.8847 99.9923 99.7213 99.5959 99.9892 99.9896 99.5466 97.665 99.7204 99.9474 98.5693 98.9598 99.8426 99.692 99.5557 99.9984 99.3673 99.8886 99.9839 99.4392 99.9283
H-7	99.55897258890086	if ( x != null ) { result . add ( flatten ( x ) ) ; } } else { return flatten ( x ) ; }
P-7	99.9972 99.1055 98.9922 99.9826 99.91 99.6456 99.4013 99.9867 99.9022 99.8981 97.5416 99.9901 99.8045 99.7127 99.9942 99.9908 99.9138 99.5379 99.0357 99.7491 99.5615 98.9028 99.9974 99.5417 99.9117 99.9858 99.9057 99.2226
H-7	99.55276692708334	if ( x != null ) { result . add ( x ) ; } } } return result ; } else { return flatten ( arr ) ;
P-7	99.9972 99.1055 98.9922 99.9826 99.91 99.6456 99.4013 99.9867 99.9022 99.8981 98.3099 99.9698 99.9933 99.9041 99.5 98.6053 99.6294 99.7303 99.9798 98.1851 99.6408 99.9355 99.7075 99.582 99.9985 99.2768 99.9315 99.9876 99.8046
H-7	99.55079933449075	result . add CaMeL All ( flatten ( x ) ) ; } else { result . add ( flatten ( x ) ) ; }
P-7	99.9983 99.9232 97.9758 99.9006 99.9922 99.4692 99.9911 99.7636 99.5998 99.99 99.9904 99.7905 97.1002 99.7592 98.2034 99.9688 99.8628 99.9217 99.4139 99.9967 99.8611 99.883 99.9924 99.9838 99.8431 98.7652
H-7	99.5506004050926	result . add CaMeL All ( flatten ( x ) ) ; } return result ; } else { return flatten ( x ) ; }
P-7	99.9983 99.9232 97.9758 99.9006 99.9922 99.4692 99.9911 99.7636 99.5998 99.99 99.9904 99.7905 97.7046 99.7319 99.9415 98.6863 98.9123 99.8405 99.6708 99.5738 99.9983 99.3146 99.8593 99.9815 99.4012 99.9338
H-7	99.5488914207176	result . add ( arr ) ; } } else { result . add ( flatten ( x ) ) ; } } return result ;
P-7	99.9983 99.9232 99.8569 98.4966 99.941 99.9935 99.8113 99.0435 98.4938 99.8286 97.9333 99.9775 99.9209 99.9805 98.986 99.9952 99.7903 99.9207 99.9913 99.9827 99.2394 98.3805 99.6667 99.7884 99.9792 99.9693
H-7	99.54639610877403	if ( x != null ) { result . add ( x ) ; } } else { return flatten ( x ) ; }
P-7	99.9972 99.1055 98.9922 99.9826 99.91 99.6456 99.4013 99.9867 99.9022 99.8981 98.3099 99.9698 99.9933 99.9041 99.5 98.9393 99.8145 99.5806 98.8116 99.9978 99.3967 99.8853 99.9873 99.9336 99.2717
H-7	99.54549967447916	if ( x != null ) { result . add ( x ) ; } } return result ; } else { return flatten ( arr ) ; }
P-7	99.9972 99.1055 98.9922 99.9826 99.91 99.6456 99.4013 99.9867 99.9022 99.8981 98.3099 99.9698 99.9933 99.9041 99.5 97.8711 99.7563 99.9769 99.5561 99.0809 99.9525 99.6527 99.4384 99.9983 99.1347 99.9292 99.9873 99.4986 99.9444
H-7	99.54541954627403	result . add ( arr ) ; } } else { result . add ( flatten ( x ) ) ; } return result ;
P-7	99.9983 99.9232 99.8569 98.4966 99.941 99.9935 99.8113 99.0435 98.4938 99.8286 97.9333 99.9775 99.9209 99.9805 98.986 99.9952 99.7903 99.9207 99.9913 99.9827 99.2394 98.5108 99.7607 99.9251 99.9485
H-7	99.54432091346153	result . add ( flatten ( x ) ) ; } } return result ; } else { return flatten ( x ) ; }
P-7	99.9983 99.9232 99.8569 98.8847 99.9923 99.7213 99.5959 99.9892 99.9896 99.5466 98.9728 99.135 99.7845 99.9704 97.5586 99.5469 99.9439 99.7478 99.7766 99.9986 99.1701 99.9035 99.9798 98.2446 99.9895
H-7	99.54345703125	if ( x != null ) { result . add ( flatten ( x ) ) ; } } } return result ;
P-7	99.9972 99.1055 98.9922 99.9826 99.91 99.6456 99.4013 99.9867 99.9022 99.8981 97.5416 99.9901 99.8045 99.7127 99.9942 99.9908 99.9138 99.5379 98.5719 99.4718 99.7368 99.9807 99.8858
H-7	99.54330240885416	if ( x != null ) { result . add ( x ) ; } } return result ; } else { return flatten ( x ) ; }
P-7	99.9972 99.1055 98.9922 99.9826 99.91 99.6456 99.4013 99.9867 99.9022 99.8981 98.3099 99.9698 99.9933 99.9041 99.5 97.8711 99.7563 99.9769 99.5561 99.0809 99.9525 99.6527 99.4384 99.9983 99.0515 99.9021 99.985 99.5647 99.9247
H-7	99.54320475260417	if ( x != null ) { result . add ( arr ) ; } } } return result ; } else { return flatten ( arr ) ;
P-7	99.9972 99.1055 98.9922 99.9826 99.91 99.6456 99.4013 99.9867 99.9022 99.8981 98.26 99.9636 99.9942 99.9243 99.4118 98.5266 99.626 99.7104 99.9793 98.1639 99.6144 99.9342 99.6979 99.5592 99.9984 99.2897 99.9312 99.9877 99.8123
H-7	99.54156963641827	if ( x != null ) { result . add ( arr ) ; } } else { return flatten ( x ) ; }
P-7	99.9972 99.1055 98.9922 99.9826 99.91 99.6456 99.4013 99.9867 99.9022 99.8981 98.26 99.9636 99.9942 99.9243 99.4118 98.9687 99.8104 99.5623 98.7589 99.9977 99.367 99.8789 99.9872 99.9218 99.3632
H-7	99.54102376302083	result . add ( flatten ( x ) ) ; } else { return flatten ( x ) ; } } else { return flatten ( x ) ;
P-7	99.9983 99.9232 99.8569 98.8847 99.9923 99.7213 99.5959 99.9892 99.9896 99.5466 96.9327 99.6837 99.6488 99.1749 99.9973 99.5364 99.7871 99.9811 99.8399 98.8885 99.2067 99.541 99.7732 99.2776 99.9984 99.4873 99.9009 99.9844 99.1615
H-7	99.53851787860577	result . add ( flatten ( x ) ) ; } } return result ; } else { return flatten ( arr ) ; }
P-7	99.9983 99.9232 99.8569 98.8847 99.9923 99.7213 99.5959 99.9892 99.9896 99.5466 98.9728 99.135 99.7845 99.9704 97.5586 99.5469 99.9439 99.7478 99.7766 99.9986 99.1167 99.9406 99.9842 98.1048 99.9906
H-7	99.53819537984914	if ( x == null ) { result . add ( flatten ( x ) ) ; } } else { return flatten ( x ) ; }
P-7	99.9972 99.1055 98.7115 99.9629 99.9166 99.7055 99.2677 99.988 99.8525 99.8917 98.0265 99.9895 99.847 99.7255 99.9925 99.9909 99.8985 98.854 99.1842 99.7553 99.5134 98.8218 99.9976 99.5181 99.8902 99.9857 99.9079 99.2211
H-7	99.53636823381696	result . add ( flatten ( x ) ) ; } else { return result ; } } else { return flatten ( x ) ; }
P-7	99.9983 99.9232 99.8569 98.8847 99.9923 99.7213 99.5959 99.9892 99.9896 99.5466 96.9327 99.6837 99.6488 98.5677 99.9253 99.9418 99.2205 98.8127 99.8533 99.7309 99.6133 99.9978 99.428 99.9034 99.986 99.3992 99.9435
H-7	99.535751953125	result . add ( flatten ( x ) ) ; } return result ; } else { return flatten ( arr ) ; }
P-7	99.9983 99.9232 99.8569 98.8847 99.9923 99.7213 99.5959 99.9892 99.9896 99.5466 97.665 99.7204 99.9474 98.5693 98.9598 99.8426 99.692 99.5557 99.9984 98.7778 99.9361 99.9872 99.3698 99.9431
H-7	99.53526475694444	result . add CaMeL All ( flatten ( x ) ) ; } return result ; } else { return flatten ( arr ) ; }
P-7	99.9983 99.9232 97.9758 99.9006 99.9922 99.4692 99.9911 99.7636 99.5998 99.99 99.9904 99.7905 97.7046 99.7319 99.9415 98.6863 98.9123 99.8405 99.6708 99.5738 99.9983 98.8731 99.9235 99.9862 99.3467 99.9467
H-7	99.53489527209052	if ( arr != null ) { result . add ( flatten ( x ) ) ; } } else { return flatten ( x ) ; }
P-7	99.9972 98.0266 99.0176 99.9798 99.9281 99.6301 99.3549 99.9875 99.9052 99.9064 97.8184 99.9909 99.7957 99.7004 99.994 99.9903 99.9133 99.5365 98.9796 99.7363 99.575 99.0119 99.9975 99.5605 99.9142 99.9858 99.8989 99.2899
H-7	99.53385977909483	result . add ( flatten ( x ) ) ; } } else { return flatten ( x ) ; } } return flatten ( x ) ;
P-7	99.9983 99.9232 99.8569 98.8847 99.9923 99.7213 99.5959 99.9892 99.9896 99.5466 98.9728 98.7454 99.5786 99.6657 99.3499 99.9978 99.5913 99.9143 99.9822 99.4696 97.5774 99.1226 98.9818 99.9961 99.217 99.9196 99.9856 99.9852
H-7	99.53089250837054	result . add ( flatten ( x ) ) ; } else { result . add ( flatten ( x ) ) ; } return result ;
P-7	99.9983 99.9232 99.8569 98.8847 99.9923 99.7213 99.5959 99.9892 99.9896 99.5466 96.9327 99.6837 98.2069 99.9653 99.8602 99.9782 99.818 99.9976 99.8732 99.8994 99.9929 99.9845 99.8273 97.1863 99.7421 99.9269 99.5598
H-7	99.53079927884616	if ( x != null ) { result . add CaMeL All ( flatten ( x ) ) ; } } } return result ;
P-7	99.9972 99.1055 98.9922 99.9826 99.91 99.6456 99.4013 99.9867 99.9022 97.6561 99.8582 99.9925 98.9888 99.9902 99.7086 99.5653 99.9933 99.9925 99.91 99.4324 98.6142 99.4776 99.7319 99.9829 99.8936
H-7	99.53004964192708	result . add ( flatten ( x ) ) ; } return result ; } else { return flatten ( x ) ;
P-7	99.9983 99.9232 99.8569 98.8847 99.9923 99.7213 99.5959 99.9892 99.9896 99.5466 97.665 99.7204 99.9474 98.5693 98.9598 99.8426 99.692 99.5557 99.9984 99.3673 99.8886 99.9839 99.1012
H-7	99.52952357700893	result . add CaMeL All ( flatten ( x ) ) ; } } return result ; } else { return flatten ( x ) ; }
P-7	99.9983 99.9232 97.9758 99.9006 99.9922 99.4692 99.9911 99.7636 99.5998 99.99 99.9904 99.7905 99.0707 98.8891 99.774 99.9686 97.5627 99.5493 99.9337 99.7415 99.7251 99.9985 99.1728 99.8859 99.9813 98.2676 99.9895
H-7	99.5281094637784	result . add ( arr ) ; } } return result ; } else { return flatten ( arr ) ;
P-7	99.9983 99.9232 99.8569 98.4966 99.941 99.9935 99.8113 99.0435 99.1755 99.7372 99.9629 96.7604 99.5034 99.9381 99.6951 99.7709 99.9987 99.3385 99.9452 99.9858 99.811
H-7	99.52785728717673	if ( x != null ) { result . add ( flatten ( x ) ) ; } } else { return flatten ( arr ) ; }
P-7	99.9972 99.1055 98.9922 99.9826 99.91 99.6456 99.4013 99.9867 99.9022 99.8981 97.5416 99.9901 99.8045 99.7127 99.9942 99.9908 99.9138 99.5379 99.0357 99.7491 99.5615 98.9028 99.9974 98.4484 99.9342 99.9872 99.8968 99.3983
H-7	99.52626389723558	result . add CaMeL All ( flatten ( x ) ) ; } return result ; } else { return flatten ( x ) ;
P-7	99.9983 99.9232 97.9758 99.9006 99.9922 99.4692 99.9911 99.7636 99.5998 99.99 99.9904 99.7905 97.7046 99.7319 99.9415 98.6863 98.9123 99.8405 99.6708 99.5738 99.9983 99.3146 99.8593 99.9815 99.1517
H-7	99.52515587439903	if ( x != null ) { result . add ( x ) ; } } else { return flatten ( arr ) ; }
P-7	99.9972 99.1055 98.9922 99.9826 99.91 99.6456 99.4013 99.9867 99.9022 99.8981 98.3099 99.9698 99.9933 99.9041 99.5 98.9393 99.8145 99.5806 98.8116 99.9978 98.6511 99.9083 99.9886 99.9281 99.4464
H-7	99.52463204520089	result . add CaMeL All ( flatten ( x ) ) ; } } return result ; } else { return flatten ( arr ) ; }
P-7	99.9983 99.9232 97.9758 99.9006 99.9922 99.4692 99.9911 99.7636 99.5998 99.99 99.9904 99.7905 99.0707 98.8891 99.774 99.9686 97.5627 99.5493 99.9337 99.7415 99.7251 99.9985 99.099 99.9347 99.9853 98.1509 99.9904
H-7	99.5234883626302	result . add ( flatten ( x ) ) ; } else { result . add ( flatten ( x ) ) ;
P-7	99.9983 99.9232 99.8569 98.8847 99.9923 99.7213 99.5959 99.9892 99.9896 99.5466 96.9327 99.6837 98.2069 99.9653 99.8602 99.9782 99.818 99.9976 99.8732 99.8994 99.9929 99.9845 97.9414
H-7	99.52306676793981	result . add ( x ) ; } } else { result . add ( flatten ( x ) ) ; } } return result ;
P-7	99.9983 99.9232 99.8569 97.653 99.9639 99.9911 99.8539 99.2332 98.5599 99.8165 97.8713 99.9753 99.9217 99.9816 98.6882 99.995 99.7792 99.9223 99.9919 99.9836 99.373 98.4625 99.6601 99.7892 99.9781 99.9685
H-7	99.5229022686298	result . add ( flatten ( x ) ) ; } else { result . add ( flatten ( x ) ) ; } }
P-7	99.9983 99.9232 99.8569 98.8847 99.9923 99.7213 99.5959 99.9892 99.9896 99.5466 96.9327 99.6837 98.2069 99.9653 99.8602 99.9782 99.818 99.9976 99.8732 99.8994 99.9929 99.9845 99.8273 99.4054 97.7402
H-7	99.5215594951923	if ( x != null ) { result . add ( arr ) ; } } else { return flatten ( arr ) ; }
P-7	99.9972 99.1055 98.9922 99.9826 99.91 99.6456 99.4013 99.9867 99.9022 99.8981 98.26 99.9636 99.9942 99.9243 99.4118 98.9687 99.8104 99.5623 98.7589 99.9977 98.669 99.9044 99.9886 99.9176 99.5177
H-7	99.52069091796875	if ( x instanceof Object [ ] ) { result . add ( flatten ( x ) ) ; } else { return result ; } }
P-7	99.9972 99.1055 98.7599 98.6157 99.7255 99.9965 99.9897 99.8613 98.8974 99.9933 99.9408 99.9209 98.8099 99.9876 99.7381 99.7017 99.9921 99.9935 99.8963 99.2161 99.6837 99.4989 98.7684 99.8417 99.9818 99.8719 98.7053
H-7	99.52056206597223	if ( x == null ) { result . add ( arr ) ; } else { result . add ( arr ) ; } }
P-7	99.9972 99.1055 98.7115 99.9629 99.9166 99.7055 99.2677 99.988 99.8525 99.8917 98.2434 99.9757 99.9939 99.9259 99.2735 99.7868 98.5486 99.9836 99.8497 99.9846 98.7858 99.9858 99.9953 99.9417 99.6728 98.6202
H-7	99.52038122106481	result . add CaMeL All ( flatten ( x ) ) ; } return result ; } } else { return flatten ( x ) ;
P-7	99.9983 99.9232 97.9758 99.9006 99.9922 99.4692 99.9911 99.7636 99.5998 99.99 99.9904 99.7905 97.7046 99.7319 99.9415 98.6863 98.6234 99.0632 99.7716 99.7409 99.6131 99.9979 99.2054 99.8982 99.9817 99.7748
H-7	99.51844200721153	if ( x == null ) { result . add ( flatten ( x ) ) ; } else { return result ; } }
P-7	99.9972 99.1055 98.7115 99.9629 99.9166 99.7055 99.2677 99.988 99.8525 99.8917 98.0265 99.9895 99.847 99.7255 99.9925 99.9909 99.8985 98.8561 99.7345 99.477 98.957 99.9161 99.9841 99.8577 98.7382
H-7	99.51832863136575	if ( x != null ) { result . add ( x ) ; } } else { result . add ( arr ) ; }
P-7	99.9972 99.1055 98.9922 99.9826 99.91 99.6456 99.4013 99.9867 99.9022 99.8981 98.3099 99.9698 99.9933 99.9041 99.5 98.9393 99.8145 98.061 99.9656 99.8367 99.9838 98.8961 99.9757 99.9933 99.9351 99.0058
H-7	99.51695421006944	if ( x != null ) { result . add ( arr ) ; } } else { result . add ( arr ) ; }
P-7	99.9972 99.1055 98.9922 99.9826 99.91 99.6456 99.4013 99.9867 99.9022 99.8981 98.26 99.9636 99.9942 99.9243 99.4118 98.9687 99.8104 98.0788 99.9656 99.8435 99.9837 98.9308 99.9896 99.9932 99.9333 98.9955
H-7	99.51676802201705	result . add ( arr ) ; } return result ; } else { return flatten ( x ) ; }
P-7	99.9983 99.9232 99.8569 98.4966 99.941 99.9935 99.8113 97.5906 99.5808 99.9305 99.1008 98.8305 99.865 99.706 99.5126 99.998 99.1351 99.8939 99.9845 99.3518 99.9364
H-7	99.51617901141827	result . add ( x ) ; } } else { result . add ( flatten ( x ) ) ; } return result ;
P-7	99.9983 99.9232 99.8569 97.653 99.9639 99.9911 99.8539 99.2332 98.5599 99.8165 97.8713 99.9753 99.9217 99.9816 98.6882 99.995 99.7792 99.9223 99.9919 99.9836 99.373 98.5285 99.7616 99.921 99.945
H-7	99.515556640625	result . add ( flatten ( x ) ) ; } } else { result . add ( flatten ( arr ) ) ;
P-7	99.9983 99.9232 99.8569 98.8847 99.9923 99.7213 99.5959 99.9892 99.9896 99.5466 98.9728 98.7454 99.5786 97.6923 99.965 99.9038 99.9798 99.8816 99.9976 97.376 99.9661 99.9894 99.9821 99.429
H-7	99.51511146282327	if ( x != null ) { result . add ( x ) ; } } return result ; } else { return flatten ( arr ) ;
P-7	99.9972 99.1055 98.9922 99.9826 99.91 99.6456 99.4013 99.9867 99.9022 99.8981 98.3099 99.9698 99.9933 99.9041 99.5 97.8711 99.7563 99.9769 99.5561 99.0809 99.9525 99.6527 99.4384 99.9983 99.1347 99.9292 99.9873 99.0161
H-7	99.5147705078125	result . add CaMeL All ( flatten ( x ) ) ; } return result ; } else { return flatten ( arr ) ;
P-7	99.9983 99.9232 97.9758 99.9006 99.9922 99.4692 99.9911 99.7636 99.5998 99.99 99.9904 99.7905 97.7046 99.7319 99.9415 98.6863 98.9123 99.8405 99.6708 99.5738 99.9983 98.8731 99.9235 99.9862 99.2253
H-7	99.51359419389205	result . add ( arr ) ; } return result ; } else { return flatten ( arr ) ; }
P-7	99.9983 99.9232 99.8569 98.4966 99.941 99.9935 99.8113 97.5906 99.5808 99.9305 99.1008 98.8305 99.865 99.706 99.5126 99.998 99.0893 99.9218 99.9875 99.2824 99.9511
H-7	99.51248734085648	result . add ( flatten ( x ) ) ; } else { return result ; } } else { return flatten ( x ) ;
P-7	99.9983 99.9232 99.8569 98.8847 99.9923 99.7213 99.5959 99.9892 99.9896 99.5466 96.9327 99.6837 99.6488 98.5677 99.9253 99.9418 99.2205 98.8127 99.8533 99.7309 99.6133 99.9978 99.428 99.9034 99.986 99.1617
H-7	99.5116475423177	result . add ( flatten ( x ) ) ; } return result ; } else { return flatten ( arr ) ;
P-7	99.9983 99.9232 99.8569 98.8847 99.9923 99.7213 99.5959 99.9892 99.9896 99.5466 97.665 99.7204 99.9474 98.5693 98.9598 99.8426 99.692 99.5557 99.9984 98.7778 99.9361 99.9872 99.1984
H-7	99.51126098632812	result . add ( arr ) ; } } else { result . add ( arr ) ; } } return result ;
P-7	99.9983 99.9232 99.8569 98.4966 99.941 99.9935 99.8113 99.0435 98.4938 99.8286 97.9333 99.9775 99.9209 99.9805 98.8229 99.9874 99.9915 99.8524 98.2058 99.601 99.7413 99.9665 99.9713
H-7	99.51039632161458	else { result . add ( flatten ( x ) ) ; } } else { return flatten ( x ) ; }
P-7	99.8184 99.1511 99.9969 99.7608 99.9247 99.1807 99.9946 99.8327 99.7882 99.9918 99.99 99.8784 99.6823 98.9098 99.6633 99.6199 99.0338 99.9974 99.5857 99.8919 99.9841 99.8422 99.5263
H-7	99.51028442382812	if ( x == null ) { result . add ( flatten ( x ) ) ; } } } return result ;
P-7	99.9972 99.1055 98.7115 99.9629 99.9166 99.7055 99.2677 99.988 99.8525 99.8917 98.0265 99.9895 99.847 99.7255 99.9925 99.9909 99.8985 98.854 98.4279 99.3999 99.7414 99.9784 99.8865
H-7	99.50939069475446	result . add CaMeL All ( flatten ( x ) ) ; } else { result . add ( flatten ( x ) ) ; } }
P-7	99.9983 99.9232 97.9758 99.9006 99.9922 99.4692 99.9911 99.7636 99.5998 99.99 99.9904 99.7905 97.1002 99.7592 98.2034 99.9688 99.8628 99.9217 99.4139 99.9967 99.8611 99.883 99.9924 99.9838 99.8431 99.4078 97.7488
H-7	99.50872802734375	if ( arr != null ) { result . add ( flatten ( x ) ) ; } } } return result ;
P-7	99.9972 98.0266 99.0176 99.9798 99.9281 99.6301 99.3549 99.9875 99.9052 99.9064 97.8184 99.9909 99.7957 99.7004 99.994 99.9903 99.9133 99.5365 98.5488 99.495 99.7367 99.9814 99.8854
H-7	99.50747244698661	if ( x == null ) { result . add CaMeL All ( flatten ( x ) ) ; } else { return result ; } }
P-7	99.9972 99.1055 98.7115 99.9629 99.9166 99.7055 99.2677 99.988 99.8525 97.7121 99.8606 99.9917 99.2035 99.9887 99.7169 99.5504 99.9917 99.9928 99.8996 99.1365 99.784 99.5295 98.8133 99.8951 99.9826 99.847 98.7169
H-7	99.50721153846153	result . add ( flatten ( x ) ) ; } } result . add ( flatten ( x ) ) ; return result ;
P-7	99.9983 99.9232 99.8569 98.8847 99.9923 99.7213 99.5959 99.9892 99.9896 99.5466 98.9728 95.9711 99.9482 99.7826 99.954 99.5112 99.9943 99.6214 99.8451 99.9895 99.982 97.7216 99.6643 99.9246 99.8755
H-7	99.5043057528409	result . add ( x ) ; } } return result ; } else { return flatten ( arr ) ;
P-7	99.9983 99.9232 99.8569 97.653 99.9639 99.9911 99.8539 99.2332 99.1012 99.7541 99.9615 96.8771 99.5255 99.945 99.7065 99.7777 99.9988 99.3124 99.944 99.986 99.8001
H-7	99.50354942908653	if ( x == null ) { result . add ( arr ) ; } else { result . add ( arr ) ; }
P-7	99.9972 99.1055 98.7115 99.9629 99.9166 99.7055 99.2677 99.988 99.8525 99.8917 98.2434 99.9757 99.9939 99.9259 99.2735 99.7868 98.5486 99.9836 99.8497 99.9846 98.7858 99.9858 99.9953 99.9417 98.33
H-7	99.5035067471591	result . add ( arr ) ; } } return result ; } else { return flatten ( x ) ;
P-7	99.9983 99.9232 99.8569 98.4966 99.941 99.9935 99.8113 99.0435 99.1755 99.7372 99.9629 96.7604 99.5034 99.9381 99.6951 99.7709 99.9987 98.8519 99.9193 99.9822 99.7857
H-7	99.50341796875	if ( x != null ) { result . add ( x ) ; } } else { return flatten ( x ) ; } }
P-7	99.9972 99.1055 98.9922 99.9826 99.91 99.6456 99.4013 99.9867 99.9022 99.8981 98.3099 99.9698 99.9933 99.9041 99.5 98.9393 99.8145 99.5806 98.8116 99.9978 99.3967 99.8853 99.9873 99.9336 99.2858 98.372
H-7	99.50259164663461	result . add CaMeL All ( flatten ( x ) ) ; } else { result . add ( flatten ( x ) ) ;
P-7	99.9983 99.9232 97.9758 99.9006 99.9922 99.4692 99.9911 99.7636 99.5998 99.99 99.9904 99.7905 97.1002 99.7592 98.2034 99.9688 99.8628 99.9217 99.4139 99.9967 99.8611 99.883 99.9924 99.9838 97.804
H-7	99.50016276041667	result . add CaMeL All ( arr ) ; } return result ; } else { return flatten ( arr ) ; }
P-7	99.9983 99.9232 97.9758 99.9006 99.9922 98.4106 99.9409 99.9946 99.8454 98.1428 99.6484 99.9364 99.2384 98.7789 99.8367 99.6751 99.5441 99.9981 99.1109 99.9347 99.9881 99.3155 99.9432
H-7	99.5000508626302	result . add CaMeL All ( arr ) ; } return result ; } else { return flatten ( x ) ; }
P-7	99.9983 99.9232 97.9758 99.9006 99.9922 98.4106 99.9409 99.9946 99.8454 98.1428 99.6484 99.9364 99.2384 98.7789 99.8367 99.6751 99.5441 99.9981 99.0894 99.895 99.9854 99.3947 99.9251
H-7	99.49906864872685	if ( x == null ) { result . add ( arr ) ; } else { return result ; } } } return result ;
P-7	99.9972 99.1055 98.7115 99.9629 99.9166 99.7055 99.2677 99.988 99.8525 99.8917 98.2434 99.9757 99.9939 99.9259 99.2735 99.7868 99.5028 99.0695 99.9159 99.9833 99.8558 99.4654 98.5733 98.5442 99.9731 99.9042
H-7	99.49899159307066	if ( x == null ) { result . add ( arr ) ; } else { return result ; } }
P-7	99.9972 99.1055 98.7115 99.9629 99.9166 99.7055 99.2677 99.988 99.8525 99.8917 98.2434 99.9757 99.9939 99.9259 99.2735 99.7868 99.5028 99.0695 99.9159 99.9833 99.8558 98.4622
H-7	99.49831136067708	result . add ( flatten ( x , x ) ) ; } } else { return flatten ( x ) ; }
P-7	99.9983 99.9232 99.8569 98.8847 99.9923 99.7213 98.8907 97.9511 99.8308 99.9896 99.9915 99.5824 98.5883 99.0096 99.6278 99.6311 99.2791 99.9979 99.5531 99.3669 99.9806 99.5077 99.8732
H-7	99.498291015625	result . add ( flatten ( arr ) ) ; } } else { return flatten ( x ) ; }
P-7	99.9983 99.9232 99.8569 98.8847 99.9923 97.7191 99.7429 99.9867 99.9895 99.3866 98.8628 98.7376 99.5598 99.6535 99.2944 99.9977 99.2389 99.8952 99.9818 99.4282 99.901
H-7	99.4955303485577	result . add ( flatten ( x ) ) ; } } else { result . add ( flatten ( arr ) ) ; }
P-7	99.9983 99.9232 99.8569 98.8847 99.9923 99.7213 99.5959 99.9892 99.9896 99.5466 98.9728 98.7454 99.5786 97.6923 99.965 99.9038 99.9798 99.8816 99.9976 97.376 99.9661 99.9894 99.9821 99.0993 99.3244
H-7	99.4914217862216	result . add ( flatten ( arr ) ) ; } } else { return flatten ( arr ) ; }
P-7	99.9983 99.9232 99.8569 98.8847 99.9923 97.7191 99.7429 99.9867 99.9895 99.3866 98.8628 98.7376 99.5598 99.6535 99.2944 99.9977 99.0423 99.9371 99.9857 99.4081 99.9205
H-7	99.4835205078125	result . add ( x ) ; } } return result ; } else { return flatten ( x ) ;
P-7	99.9983 99.9232 99.8569 97.653 99.9639 99.9911 99.8539 99.2332 99.1012 99.7541 99.9615 96.8771 99.5255 99.945 99.7065 99.7777 99.9988 98.9129 99.9196 99.9828 99.7697
H-7	99.4820223721591	result . add ( x ) ; } return result ; } else { return flatten ( x ) ; }
P-7	99.9983 99.9232 99.8569 97.653 99.9639 99.9911 99.8539 97.4827 99.6098 99.9267 99.1152 98.8002 99.8625 99.7083 99.5398 99.9982 99.1691 99.9 99.9846 99.4034 99.9323
H-7	99.4804156759511	if ( x != null ) { result . add ( flatten ( x ) ) ; } } return result ;
P-7	99.9972 99.1055 98.9922 99.9826 99.91 99.6456 99.4013 99.9867 99.9022 99.8981 97.5416 99.9901 99.8045 99.7127 99.9942 99.9908 99.9138 99.5379 98.1831 99.815 99.9675 98.6877
H-7	99.47932942708333	result . add CaMeL All ( flatten ( x ) ) ; } else { return flatten ( x ) ; } }
P-7	99.9983 99.9232 97.9758 99.9006 99.9922 99.4692 99.9911 99.7636 99.5998 99.99 99.9904 99.7905 97.1002 99.7592 99.6527 99.154 99.9975 99.4725 99.8139 99.9846 99.864 98.855 98.5344
H-7	99.4787264737216	result . add ( flatten ( x ) ) ; } else { return flatten ( x ) ; } }
P-7	99.9983 99.9232 99.8569 98.8847 99.9923 99.7213 99.5959 99.9892 99.9896 99.5466 96.9327 99.6837 99.6488 99.1749 99.9973 99.5364 99.7871 99.9811 99.8399 98.8885 98.6322
H-7	99.47859497070313	return flatten ( x , x ) ; } } else { return flatten ( x ) ; }
P-7	99.5563 99.9972 99.6057 99.0365 97.9271 99.6938 99.9818 99.6488 98.9421 99.1924 99.7615 99.7879 99.3166 99.9976 99.5679 99.3464 99.9827 99.496 99.911
H-7	99.4764453125	if ( x == null ) { result . add ( arr ) ; } else { return flatten ( x ) ; }
P-7	99.9972 99.1055 98.7115 99.9629 99.9166 99.7055 99.2677 99.988 99.8525 99.8917 98.2434 99.9757 99.9939 99.9259 99.2735 99.7868 99.5028 98.1752 99.9975 99.435 99.8148 99.9867 99.9608 98.3512
H-7	99.47622282608695	result . add ( arr ) ; } } return result ; } else { return flatten ( arr ) ; }
P-7	99.9983 99.9232 99.8569 98.4966 99.941 99.9935 99.8113 99.0435 99.1755 99.7372 99.9629 96.7604 99.5034 99.9381 99.6951 99.7709 99.9987 99.3385 99.9452 99.9858 98.1556 99.9903
H-7	99.4697265625	if ( x != null ) { result . add ( x ) ; } else { return result ; } }
P-7	99.9972 99.1055 98.9922 99.9826 99.91 99.6456 99.4013 99.9867 99.9022 99.8981 98.3099 99.9698 99.9933 99.9041 98.2777 99.7593 99.5294 98.9947 99.9378 99.9853 99.8877 98.3441
H-7	99.46959918478261	if ( x == null ) { result . add ( x ) ; } else { return result ; } }
P-7	99.9972 99.1055 98.7115 99.9629 99.9166 99.7055 99.2677 99.988 99.8525 99.8917 97.7029 99.9851 99.9933 99.911 99.2361 99.771 99.5102 99.0691 99.9125 99.9838 99.8649 98.3729
H-7	99.46911090353261	if ( x != null ) { result . add ( arr ) ; } else { return result ; } }
P-7	99.9972 99.1055 98.9922 99.9826 99.91 99.6456 99.4013 99.9867 99.9022 99.8981 98.26 99.9636 99.9942 99.9243 98.2822 99.7489 99.5211 98.9392 99.9359 99.9847 99.8798 98.4451
H-7	99.46148681640625	return flatten ( x , arr ) ; } } else { return flatten ( x ) ; }
P-7	99.5563 99.9972 99.6057 99.0365 97.9015 99.9099 99.9852 99.6751 98.842 99.1859 99.7498 99.7847 99.2811 99.9974 99.53 99.0693 99.9819 99.4023 99.9154
H-7	99.40101623535156	result . add ( flatten ( x ) ) ; } } return result ;
P-7	99.9983 99.9232 99.8569 98.8847 99.9923 99.7213 99.5959 99.9892 99.9896 99.5466 98.9728 99.135 99.7845 99.9704 96.124
H-7	99.02397155761719	return flatten ( x ) ; }
P-7	99.5563 99.9972 99.6057 99.5145 99.978 99.5596 95.1579
S-8	return gcd ( a % b , b ) ;
T-8	return gcd ( b , a % b ) ;
H-8	99.5938720703125	return gcd ( a , b ) ;
P-8	98.9828 99.9731 99.405 99.5055 99.3929 99.4758 99.9263 99.923
H-8	99.54599338107639	return gcd ( a % b ) ;
P-8	98.9828 99.9731 99.405 98.934 99.5291 99.5441 99.9225 99.8628
H-8	99.52712180397727	return gcd ( a , 0 , b ) ;
P-8	98.9828 99.9731 99.405 99.5055 98.3763 99.6886 99.4394 99.7547 99.9614 99.9511
H-8	99.51508123224431	return gcd ( a , b , b ) ;
P-8	98.9828 99.9731 99.405 99.5055 99.3929 98.9557 99.0545 99.7256 99.9648 99.9455
H-8	99.47023703835227	return gcd ( a % b , b ) ;
P-8	98.9828 99.9731 99.405 98.934 99.5291 98.7532 99.3891 99.5573 99.9556 99.9329
H-8	99.39634874131944	return gcd ( b , b ) ;
P-8	98.9828 99.9731 97.5848 99.5014 99.4699 99.4419 99.9332 99.9196
H-8	99.39134632457386	return gcd ( a , a , b ) ;
P-8	98.9828 99.9731 99.405 99.5055 97.1617 99.4577 99.3818 99.7643 99.9631 99.9494
H-8	99.38383345170455	return gcd ( a , b , $NUMBER$ ) ;
P-8	98.9828 99.9731 99.405 99.5055 99.3929 98.9557 97.7596 99.5817 99.9591 99.9463
H-8	99.36072887073864	return gcd ( a , 1 , b ) ;
P-8	98.9828 99.9731 99.405 99.5055 96.6444 99.5715 99.4161 99.7941 99.9637 99.9514
H-8	99.357421875	return gcd ( b , b , b ) ;
P-8	98.9828 99.9731 97.5848 99.5014 99.4699 98.9903 99.0683 99.6874 99.9671 99.9462
H-8	99.34782270951705	return gcd ( a , $NUMBER$ , b ) ;
P-8	98.9828 99.9731 99.405 99.5055 96.5346 99.4306 99.4846 99.8327 99.9664 99.9503
H-8	99.34105088975694	return gcd ( b % b ) ;
P-8	98.9828 99.9731 97.5848 98.9151 99.5298 99.5464 99.915 99.862
H-8	99.33563910590277	return gcd ( 0 , b ) ;
P-8	98.9828 99.9731 97.4812 99.5213 99.0755 99.392 99.9205 99.9139
H-8	99.33556019176136	return gcd ( a , b , 0 ) ;
P-8	98.9828 99.9731 99.405 99.5055 99.3929 98.9557 97.5649 99.271 99.9317 99.948
H-8	99.33467407226563	return gcd ( a % b ) ; }
P-8	98.9828 99.9731 99.405 98.934 99.5291 99.5441 99.9225 97.334 99.9615
H-8	99.3337069424716	return gcd ( 0 , 0 , b ) ;
P-8	98.9828 99.9731 97.4812 99.5213 98.2575 99.7617 99.3419 99.7055 99.9533 99.9321
H-8	99.33042214133523	return gcd ( a % 0 , b ) ;
P-8	98.9828 99.9731 99.405 98.934 97.8789 99.2587 99.3842 99.1931 99.9488 99.9156
H-8	99.32728160511364	return gcd ( 0 , b , b ) ;
P-8	98.9828 99.9731 97.4812 99.5213 99.0755 99.0373 99.2451 99.6263 99.9602 99.9368
H-8	99.32661576704545	return gcd ( b , 0 , b ) ;
P-8	98.9828 99.9731 97.5848 99.5014 98.2153 99.6667 99.4599 99.5381 99.9637 99.9465
H-8	99.32517311789773	return gcd ( 0 , a , b ) ;
P-8	98.9828 99.9731 97.4812 99.5213 98.332 99.5201 99.3588 99.7464 99.9561 99.9446
H-8	99.32179768880208	return gcd ( a , 0 ) ;
P-8	98.9828 99.9731 99.405 99.5055 98.3763 98.0961 99.8621 99.9349
H-8	99.3172607421875	return gcd ( 0 % b , b ) ;
P-8	98.9828 99.9731 97.4812 98.9607 99.2291 99.3308 99.3192 99.5773 99.9566 99.9185
H-8	99.31483043323864	return gcd ( a , b , 1 ) ;
P-8	98.9828 99.9731 99.405 99.5055 99.3929 98.9557 97.2202 99.3826 99.943 99.9419
H-8	99.30766157670455	return gcd ( a , b , false ) ;
P-8	98.9828 99.9731 99.405 99.5055 99.3929 98.9557 96.6165 99.8797 99.9606 99.952
H-8	99.30361106178977	return gcd ( a , 0 % b ) ;
P-8	98.9828 99.9731 99.405 99.5055 98.3763 97.4626 99.2988 99.6793 99.9615 99.9344
H-8	99.29620361328125	return gcd ( a , b ) ; }
P-8	98.9828 99.9731 99.405 99.5055 99.3929 99.4758 99.9263 96.5669 99.9733
H-8	99.29546440972223	return gcd ( a % a ) ;
P-8	98.9828 99.9731 99.405 98.934 97.4631 99.4146 99.8842 99.8419
H-8	99.29384543678977	return gcd ( a % a , b ) ;
P-8	98.9828 99.9731 99.405 98.934 97.4631 98.9244 99.3091 99.5959 99.947 99.9373
H-8	99.28997247869319	return gcd ( a + b , b ) ;
P-8	98.9828 99.9731 99.405 96.4811 99.2773 99.2176 99.4732 99.7195 99.9527 99.9469
H-8	99.28870738636364	return gcd ( a , b , null ) ;
P-8	98.9828 99.9731 99.405 99.5055 99.3929 98.9557 96.4796 99.7974 99.97 99.9532
H-8	99.2855224609375	return gcd ( a , 0 , a ) ;
P-8	98.9828 99.9731 99.405 99.5055 98.3763 99.6886 97.0459 99.5035 99.9548 99.9449
H-8	99.27760823567708	return gcd ( a , a ) ;
P-8	98.9828 99.9731 99.405 99.5055 97.1617 98.8894 99.9069 99.9137
H-8	99.27594549005681	return gcd ( a , b % b ) ;
P-8	98.9828 99.9731 99.405 99.5055 99.3929 96.3542 99.1876 99.6075 99.947 99.9193
H-8	99.26918723366477	return gcd ( a , 0 , 1 ) ;
P-8	98.9828 99.9731 99.405 99.5055 98.3763 99.6886 96.9713 99.3956 99.9503 99.9521
H-8	99.26832164417614	return gcd ( a , 0 , $NUMBER$ ) ;
P-8	98.9828 99.9731 99.405 99.5055 98.3763 99.6886 96.8407 99.5048 99.9609 99.9534
H-8	99.26417032877605	return gcd ( a , 0 , b ) ; }
P-8	98.9828 99.9731 99.405 99.5055 98.3763 99.6886 99.4394 99.7547 99.9614 96.3413 99.9816
H-8	99.26399739583333	return gcd ( a , b , b ) ; }
P-8	98.9828 99.9731 99.405 99.5055 99.3929 98.9557 99.0545 99.7256 99.9648 96.4699 99.9776
H-8	99.26319469105114	return gcd ( a , 0 , 0 ) ;
P-8	98.9828 99.9731 99.405 99.5055 98.3763 99.6886 97.4555 98.8562 99.9388 99.9529
H-8	99.26130814985795	return gcd ( a % $NUMBER$ , b ) ;
P-8	98.9828 99.9731 99.405 98.934 96.6932 99.4959 99.4503 99.3071 99.9393 99.9332
H-8	99.25949928977273	return gcd ( b % b , b ) ;
P-8	98.9828 99.9731 97.5848 98.9151 99.5298 98.5551 99.3694 99.2987 99.9514 99.9338
H-8	99.25590376420455	return gcd ( a % b , $NUMBER$ ) ;
P-8	98.9828 99.9731 99.405 98.934 99.5291 98.7532 97.093 99.4915 99.9528 99.94
H-8	99.25351784446023	return gcd ( a , b , a ) ;
P-8	98.9828 99.9731 99.405 99.5055 99.3929 98.9557 96.3491 99.5652 99.959 99.94
H-8	99.25156656901042	return gcd ( a % b , b ) ; }
P-8	98.9828 99.9731 99.405 98.934 99.5291 98.7532 99.3891 99.5573 99.9556 96.7993 99.9799
H-8	99.24962022569444	return gcd ( 0 % b ) ;
P-8	98.9828 99.9731 97.4812 98.9607 99.2291 99.0616 99.9238 99.8738
H-8	99.2484130859375	return gcd ( a % b % b ) ;
P-8	98.9828 99.9731 99.405 98.934 99.5291 96.3222 99.3145 99.6831 99.927 99.9013
H-8	99.23536987304688	throw new Runtime CaMeL Exception ( $STRING$ ) ;
P-8	99.8719 99.1494 99.9908 99.9211 99.9981 99.6836 99.5259 99.9737 99.9399
H-8	99.2320223721591	return gcd ( a % 1 , b ) ;
P-8	98.9828 99.9731 99.405 98.934 96.4394 99.6195 99.4082 99.1638 99.9366 99.9294
H-8	99.23142311789773	return gcd ( b , a , b ) ;
P-8	98.9828 99.9731 97.5848 99.5014 97.3957 99.3452 99.3841 99.7043 99.9652 99.9486
H-8	99.23087565104167	return gcd ( gcd ( a , b ) ) ;
P-8	98.9828 99.9731 96.1468 99.8647 99.1497 99.5969 99.3183 99.8339 98.2208 99.9684 99.9548
H-8	99.23049094460227	return gcd ( b , b , $NUMBER$ ) ;
P-8	98.9828 99.9731 97.5848 99.5014 99.4699 98.9903 97.8027 99.5598 99.9625 99.9477
H-8	99.21611993963069	return gcd ( a % b , 1 ) ;
P-8	98.9828 99.9731 99.405 98.934 99.5291 98.7532 96.8087 99.3602 99.9291 99.9417
H-8	99.21413845486111	return gcd ( a , $NUMBER$ ) ;
P-8	98.9828 99.9731 99.405 99.5055 96.5346 98.9236 99.9131 99.9291
H-8	99.2096280184659	return gcd ( 0 % 0 , b ) ;
P-8	98.9828 99.9731 97.4812 98.9607 98.007 99.5652 99.1307 99.5834 99.957 99.9044
H-8	99.20857377485795	return gcd ( a + 0 , b ) ;
P-8	98.9828 99.9731 99.405 96.4811 98.4363 99.6044 99.432 99.3386 99.9357 99.9448
H-8	99.20838080512152	return gcd ( a + b ) ;
P-8	98.9828 99.9731 99.405 96.4811 99.2773 99.1719 99.922 99.9018
H-8	99.20741965553977	return gcd ( a % b , 0 ) ;
P-8	98.9828 99.9731 99.405 98.934 99.5291 98.7532 97.1791 98.9023 99.9156 99.947
H-8	99.20136108398438	return gcd ( a , b , ) ;
P-8	98.9828 99.9731 99.405 99.5055 99.3929 98.9557 96.2026 99.8833 99.9522
H-8	99.19122992621527	return gcd ( a , 1 ) ;
P-8	98.9828 99.9731 99.405 99.5055 96.6444 98.6388 99.8834 99.9276
H-8	99.1797207919034	return gcd ( a , a , 0 ) ;
P-8	98.9828 99.9731 99.405 99.5055 97.1617 99.4577 97.5644 99.2851 99.9279 99.9534
H-8	99.16016734730114	return a * gcd ( b , b ) ;
P-8	98.4267 98.3663 97.6566 99.9503 98.9974 98.9622 99.5058 99.6192 99.5821 99.9347
H-8	99.15994262695312	return ( a > 0 ) ? b : 0 ;
P-8	97.2993 97.9679 98.6303 99.5248 99.8017 99.8663 98.9517 99.8735 98.8221 99.8789 99.5423
H-8	99.15953233506944	return gcd ( 0 , a ) ;
P-8	98.9828 99.9731 97.4812 99.5213 98.332 98.5839 99.897 99.904
H-8	99.15508422851562	return gcd ( b % b ) ; }
P-8	98.9828 99.9731 97.5848 98.9151 99.5298 99.5464 99.915 97.3802 99.9633
H-8	99.14874267578125	return gcd ( a % 0 , b ) ; }
P-8	98.9828 99.9731 99.405 98.934 97.8789 99.2587 99.3842 99.1931 99.9488 97.0909 99.9749
H-8	99.1444600423177	return gcd ( a , b , $NUMBER$ ) ; }
P-8	98.9828 99.9731 99.405 99.5055 99.3929 98.9557 97.7596 99.5817 99.9591 96.4792 99.9784
H-8	99.14373779296875	return gcd ( a , a , b ) ; }
P-8	98.9828 99.9731 99.405 99.5055 97.1617 99.4577 99.3818 99.7643 99.9631 96.3894 99.9799
H-8	99.13152398003473	return gcd ( a % $NUMBER$ ) ;
P-8	98.9828 99.9731 99.405 98.934 96.6932 98.6258 99.9236 99.8857
H-8	99.13128662109375	return a + 0 + b ;
P-8	98.4267 98.1088 98.8226 98.9426 99.2164 99.9317 99.8411
H-8	99.1295878092448	return gcd ( 0 % b , b ) ; }
P-8	98.9828 99.9731 97.4812 98.9607 99.2291 99.3308 99.3192 99.5773 99.9566 97.0058 99.9779
H-8	99.12680053710938	return gcd ( b , b ) ; }
P-8	98.9828 99.9731 97.5848 99.5014 99.4699 99.4419 99.9332 96.647 99.9735
H-8	99.11978759765626	return gcd ( a % a ) ; }
P-8	98.9828 99.9731 99.405 98.934 97.4631 99.4146 99.8842 97.4246 99.956
H-8	99.11833360460069	return gcd ( b , a ) ;
P-8	98.9828 99.9731 97.5848 99.5014 97.3957 99.0405 99.916 99.9102
H-8	99.11796061197917	return gcd ( 0 , 0 , b ) ; }
P-8	98.9828 99.9731 97.4812 99.5213 98.2575 99.7617 99.3419 99.7055 99.9533 96.6972 99.9796
H-8	99.1154073079427	return gcd ( a , 1 , b ) ; }
P-8	98.9828 99.9731 99.405 99.5055 96.6444 99.5715 99.4161 99.7941 99.9637 96.3862 99.982
H-8	99.11525472005208	return gcd ( b , b , b ) ; }
P-8	98.9828 99.9731 97.5848 99.5014 99.4699 98.9903 99.0683 99.6874 99.9671 96.4193 99.9783
H-8	99.1066385904948	return gcd ( 0 , b , b ) ; }
P-8	98.9828 99.9731 97.4812 99.5213 99.0755 99.0373 99.2451 99.6263 99.9602 96.6372 99.9791
H-8	99.10491943359375	return gcd ( a , $NUMBER$ , b ) ; }
P-8	98.9828 99.9731 99.405 99.5055 96.5346 99.4306 99.4846 99.8327 99.9664 96.4003 99.983
H-8	99.10342746310764	return gcd ( b , 0 ) ;
P-8	98.9828 99.9731 97.5848 99.5014 98.2153 98.1044 99.8775 99.9311
H-8	99.10013834635417	return gcd ( a % 0 ) ;
P-8	98.9828 99.9731 99.405 98.934 97.8789 97.2308 99.8321 99.904
H-8	99.08968098958333	return gcd ( b % a ) ;
P-8	98.9828 99.9731 97.5848 98.9151 97.3741 99.4681 99.9096 99.8392
H-8	99.08477020263672	return a + b + b ;
P-8	98.4267 98.1088 98.7008 98.732 99.313 99.8511 99.7853
H-8	99.07467651367188	return a + a + b ;
P-8	98.4267 98.1088 98.2967 99.0477 99.2776 99.873 99.8065
H-8	99.07177734375	return a * b ; }
P-8	98.4267 98.3663 98.7408 99.4832 98.7776 99.9474
H-8	99.03986358642578	return a * 0 + b ;
P-8	98.4267 98.3663 98.0942 98.7915 99.1365 99.9053 99.8379
H-8	99.0308609008789	return a * b + b ;
P-8	98.4267 98.3663 98.7408 98.2515 99.1243 99.8557 99.7211
H-8	99.01641845703125	return b + 0 + b ;
P-8	97.6641 97.9729 98.8988 98.8369 99.2382 99.9055 99.8545
H-8	99.00910295758929	return a + 0 ; }
P-8	98.4267 98.1088 98.8226 99.2679 98.7078 99.9694
H-8	98.9942398071289	return a + 0 + a ;
P-8	98.4267 98.1088 98.8226 98.9426 98.1881 99.8486 99.8562
H-8	98.99017333984375	return a * a + b ;
P-8	98.4267 98.3663 98.0221 98.4721 99.2471 99.8891 99.7374
H-8	98.98844691685268	return a + b ; }
P-8	98.4267 98.1088 98.7008 99.5179 98.4327 99.9718
H-8	98.98644147600446	return a [ 0 ] ;
P-8	98.4267 96.4081 99.1767 99.9716 99.4146 99.747
H-8	98.97471618652344	return a * a * b ;
P-8	98.4267 98.3663 98.0221 98.5033 99.3198 99.6357 99.7632
H-8	98.93494524274554	return a % b ; }
P-8	98.4267 97.327 99.0203 99.7902 98.2798 99.9401
H-8	98.9329833984375	return b + 0 ; }
P-8	97.6641 97.9729 98.8988 99.3557 98.9103 99.9685
H-8	98.90300641741071	return gcd ( a ) ;
P-8	98.9828 99.9731 99.405 94.3957 99.8887 99.9153
H-8	98.89921351841518	return a + a ; }
P-8	98.4267 98.1088 98.2967 99.1925 98.5427 99.9667
H-8	98.89447021484375	return ( int ) a ;
P-8	97.2993 97.3106 99.9742 98.3371 99.8193 99.7603
H-8	98.52212524414062	return a ; }
P-8	98.4267 99.0053 98.4953 96.923
H-8	98.4353256225586	return a ;
P-8	98.4267 99.0053 96.5489
H-8	98.38031005859375	return b ;
P-8	97.6641 99.4525 96.6441
S-9	return new Array CaMeL List < Integer > ( ) ;
T-9	return new Array CaMeL List < Integer > ( Arrays . as CaMeL List ( n ) ) ;
H-9	99.92501831054688	return new Array CaMeL List < Integer > ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 99.6995 99.9609 99.9958 99.8866 99.9986 99.9408
H-9	99.6993408203125	return new Array CaMeL List < String > ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 96.9638 99.9493 99.9971 99.9157 99.9985 99.9498
H-9	99.65369669596355	return new Array CaMeL List < Object > ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 96.4899 99.8707 99.9958 99.9235 99.9984 99.9481
H-9	99.62743201622597	return new Array CaMeL List < Integer > ( 0 ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 99.6995 99.9609 99.9958 96.0207 99.971 99.9977 99.893
H-9	99.61948805588942	return new Array CaMeL List < Integer > ( $NUMBER$ ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 99.6995 99.9609 99.9958 95.946 99.9907 99.9977 99.8447
H-9	99.58450317382812	return new Array CaMeL List < ? > ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 96.2063 99.3424 99.9963 99.9244 99.9966 99.93
H-9	99.57760184151786	return new Array CaMeL List < ? < Integer > ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 96.2063 99.0664 99.6651 99.9661 99.9939 99.92 99.7065 99.9439
H-9	99.567626953125	return new Array CaMeL List < Integer > ( 1 ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 99.6995 99.9609 99.9958 95.2657 99.9839 99.9973 99.858
H-9	99.5565414428711	return new Array CaMeL List < Array CaMeL List < Integer > ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 94.0494 99.997 99.9207 99.9549 99.5545 99.9646 99.9972 99.9196 99.9983 99.9308
H-9	99.54605806790866	return new Array CaMeL List < Integer > ( ) ; }
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 99.6995 99.9609 99.9958 99.8866 99.9986 97.0043 97.935
H-9	99.54417928059895	return new Array CaMeL List < Long > ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 95.1535 99.9348 99.9962 99.8867 99.9986 99.9424
H-9	99.541748046875	return new Array CaMeL List < Integer > ( - 1 ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 99.6995 99.9609 99.9958 94.5265 99.8368 99.9895 99.9945 99.963
H-9	99.54173060825893	return new Array CaMeL List < Integer < Integer > ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 99.6995 95.1306 99.335 99.9479 99.9928 99.9136 99.995 99.952
H-9	99.4951680501302	return new Linked CaMeL List < Integer > ( ) ;
P-9	99.8854 94.7675 99.9995 99.8895 99.9942 99.6936 99.9591 99.996 99.9422 99.9989 99.925
H-9	99.49057006835938	return new Array CaMeL List < Short > ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 94.5277 99.9291 99.9961 99.8825 99.9984 99.935
H-9	99.48251342773438	return new Array CaMeL List < Integer ( 1 ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 99.6995 95.9578 98.5841 99.9865 99.9955 99.9489
H-9	99.47086588541667	return new Hash CaMeL Set < Integer > ( ) ;
P-9	99.8854 95.4493 99.9991 98.8972 99.9933 99.7368 99.9628 99.9963 99.9344 99.9988 99.906
H-9	99.46753946940105	return new Array CaMeL List < Integer ( 0 ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 99.6995 95.9578 98.4063 99.967 99.9964 99.9655
H-9	99.46493530273438	return new Array CaMeL List < Date > ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 94.2638 99.8542 99.996 99.9208 99.9984 99.928
H-9	99.4623311360677	return new Array CaMeL List < Float > ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 94.2417 99.877 99.9951 99.8938 99.9982 99.924
H-9	99.46053059895833	return new Array CaMeL List < E > ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 94.1206 99.9146 99.9967 99.929 99.9983 99.9494
H-9	99.45973714192708	return new Array CaMeL List < Byte > ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 94.1993 99.9478 99.9947 99.8451 99.9984 99.9134
H-9	99.4537353515625	return new Array CaMeL List < Integer > ( ) ; ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 99.6995 99.9609 99.9958 99.8866 99.9986 93.7893 99.9499
H-9	99.45347086588542	throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
P-9	99.9517 98.1253 99.9998 99.8398 99.9996 99.9318 99.9967 99.8477 99.9139 99.9965 99.9778
H-9	99.45120004507211	result = new Array CaMeL List < Integer > ( ) ;
P-9	99.9405 99.8267 99.8415 99.9995 99.9678 99.9935 99.7169 99.9653 99.9963 99.9183 99.9987 99.5648
H-9	99.44552612304688	return new Array CaMeL List < Node > ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 94.0212 99.816 99.9955 99.9401 99.9985 99.9572
H-9	99.43802897135417	return new Array CaMeL List < int > ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 93.8771 99.8818 99.9957 99.9344 99.9984 99.9509
H-9	99.43576284555289	return new Array CaMeL List < Integer > ( n ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 99.6995 99.9609 99.9958 93.4894 99.9847 99.9963 99.9203
H-9	99.43560321514423	return return new Array CaMeL List < Integer > ( ) ;
P-9	93.6635 99.7661 99.8862 99.9996 99.9616 99.991 99.7288 99.9719 99.9951 99.8549 99.9978 99.9554
H-9	99.43531145368304	return new Array CaMeL List < Integer < ? > ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 99.6995 95.1306 97.7999 99.9693 99.9948 99.9361 99.9955 99.9507
H-9	99.434521484375	return new Array CaMeL List < Integer > < Integer > ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 99.6995 99.9609 92.9837 99.5538 99.8983 99.9976 99.8652 99.9955 99.9452
H-9	99.42997233072917	return new Array CaMeL List < Integer ( $NUMBER$ ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 99.6995 95.9578 97.9584 99.9883 99.9962 99.9415
H-9	99.42716471354167	return new Array CaMeL List < Integer > ( [ 1 ] ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 99.6995 99.9609 99.9958 92.9742 99.3008 99.9896 99.9756 99.9939 99.8991
H-9	99.42702811104911	return new return new Array CaMeL List < Integer > ( ) ;
P-9	99.8854 93.1057 99.8769 99.8775 99.9996 99.9586 99.993 99.6068 99.9656 99.9968 99.8666 99.9982 99.9567
H-9	99.41629732572116	{ return new Array CaMeL List < Integer > ( ) ;
P-9	99.4953 99.8274 99.8887 99.9997 99.9503 99.9931 99.7554 99.9708 99.9954 99.8909 99.9988 99.5785
H-9	99.41519601004464	return new Array CaMeL List < ? < ? > ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 96.2063 99.0664 97.2755 99.9678 99.9952 99.9494 99.7854 99.9486
H-9	99.41477272727273	return new Array CaMeL List < Integer ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 99.6995 95.9578 98.6366 99.8517 99.7989
H-9	99.4032491048177	return new Array CaMeL List < Number > ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 93.4373 99.9134 99.9968 99.9217 99.9986 99.9531
H-9	99.39022827148438	return new Array CaMeL List < Boolean > ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 93.3192 99.9427 99.9894 99.8932 99.9985 99.9218
H-9	99.38419283353366	return new Array CaMeL List < String > ( 0 ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 96.9638 99.9493 99.9971 95.5995 99.9674 99.9976 99.9019
H-9	99.38331956129808	return new Array CaMeL List < Integer > ( false ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 99.6995 99.9609 99.9958 92.8249 99.979 99.998 99.9071
H-9	99.37896259014423	return new Array CaMeL List < String > ( $NUMBER$ ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 96.9638 99.9493 99.9971 95.5535 99.9892 99.9975 99.8581
H-9	99.37858072916667	return new Array CaMeL List < Integer > ( ) ; } else ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 99.6995 99.9609 99.9958 99.8866 99.9986 97.0043 99.3766 95.2013 99.9372
H-9	99.37436349051339	return new Array CaMeL List < Object < Integer > ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 96.4899 96.2174 99.0914 99.9579 99.9946 99.9341 99.9931 99.9446
H-9	99.37050083705357	return new Array CaMeL List < Integer Integer ] > ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 99.6995 93.3979 98.7665 99.8852 99.9941 99.9382 99.9976 99.89
H-9	99.36712646484375	return new Array CaMeL List < Class > ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 93.2622 99.6381 99.9954 99.9509 99.9982 99.9428
H-9	99.36081167367789	return new Array CaMeL List < Integer > ( null ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 99.6995 99.9609 99.9958 92.576 99.9122 99.9981 99.9302
H-9	99.35464041573661	return new Array CaMeL List < Integer > ( $NUMBER$ ) ; }
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 99.6995 99.9609 99.9958 95.946 99.9907 99.9977 98.0084 97.7479
H-9	99.35350545247395	return new Array CaMeL List < Exception > ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 92.8691 99.8681 99.9965 99.9422 99.9984 99.9497
H-9	99.35042317708333	return new Array CaMeL List < Integer > ( ) ; return null ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 99.6995 99.9609 99.9958 99.8866 99.9986 93.759 97.5383 99.9973 99.8024
H-9	99.34615071614583	return new Array CaMeL List < Integer >> ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 99.6995 93.0222 99.9864 99.9072 99.9989 99.9215
H-9	99.34590657552083	return new Array CaMeL List < Integer > ( < Integer > ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 99.6995 99.9609 99.9958 92.2129 99.6785 99.6891 99.4168 99.9775 99.9396
H-9	99.34481201171874	throw new Runtime CaMeL Exception ( $STRING$ ) ;
P-9	99.9517 98.0452 99.9996 99.92 99.9923 99.8513 99.8686 99.9958 99.9628
H-9	99.34142127403847	return new Array CaMeL List < Integer > $NUMBER$ ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 99.6995 99.9609 92.8432 99.5803 99.8645 99.998 99.8741
H-9	99.34114583333333	return new Array CaMeL List < Throwable > ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 92.6595 99.9157 99.9979 99.947 99.9986 99.9571
H-9	99.33829439603366	return new Array CaMeL List < Integer > ( ) ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 99.6995 99.9609 99.9958 99.8866 92.3511 99.9954 99.8906
H-9	99.33736165364583	return ( Array CaMeL List < Integer > ) null ;
P-9	95.1726 99.8382 99.999 99.9538 99.9895 99.817 99.958 99.9921 97.5683 99.9931 99.8758
H-9	99.33374962439903	return new Array CaMeL List < Integer > ( true ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 99.6995 99.9609 99.9958 92.1835 99.9749 99.9978 99.9085
H-9	99.32999674479167	return new Array CaMeL List < Integer > ( ( int ) ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 99.6995 99.9609 99.9958 95.3297 97.6747 99.9396 97.8002 99.9895 99.9421
H-9	99.32799353966347	return new Array CaMeL List < Object > ( 0 ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 96.4899 99.8707 99.9958 95.4223 99.9696 99.9975 99.9
H-9	99.32513020833333	return new Array CaMeL List < Integer > ( ) ; } else {
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 99.6995 99.9609 99.9958 99.8866 99.9986 97.0043 99.3766 99.9324 94.4043
H-9	99.32419655539773	return new Array CaMeL List < Integer > ( ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 99.6995 99.9609 99.9958 93.6233 99.6687
H-9	99.32269756610577	return new Array CaMeL List < String > ( 1 ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 96.9638 99.9493 99.9971 94.8137 99.9825 99.997 99.8736
H-9	99.32024676983173	return new Array CaMeL List < Object > ( $NUMBER$ ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 96.4899 99.8707 99.9958 95.3425 99.9885 99.9975 99.8603
H-9	99.3161151592548	return new Array CaMeL List < Integer Integer > ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 99.6995 93.3979 98.6573 99.9915 99.9004 99.9977 99.8472
H-9	99.31594613882211	return new new Array CaMeL List < Integer > ( ) ;
P-9	99.8854 92.2274 99.7217 99.9995 99.9815 99.9878 99.6278 99.9486 99.9971 99.8899 99.9985 99.9513
H-9	99.31330217633929	return new Array CaMeL List < Integer > ( 0 ) ; }
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 99.6995 99.9609 99.9958 96.0207 99.971 99.9977 97.6445 97.4782
H-9	99.31133563701923	return new Array CaMeL List < String > ( ) ; }
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 96.9638 99.9493 99.9971 99.9157 99.9985 96.8421 97.763
H-9	99.30960083007812	return new Array CaMeL List < Double > ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 92.3463 99.9346 99.9946 99.8943 99.9984 99.9291
H-9	99.30680338541667	return new Array CaMeL List < $STRING$ > ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 92.2865 99.9079 99.9959 99.9202 99.9986 99.9545
H-9	99.29861886160714	try { return new Array CaMeL List < Integer > ( ) ;
P-9	99.9978 99.6071 99.9156 99.8996 99.9997 99.9554 99.99 99.7408 99.9643 99.9948 99.8673 99.9985 97.5418
H-9	99.29520670572917	return new Array CaMeL List < / > ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 92.2704 99.762 99.9955 99.9421 99.996 99.9583
H-9	99.29251534598214	return new Array CaMeL List < Integer > ( ) ; } else
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 99.6995 99.9609 99.9958 99.8866 99.9986 97.0043 99.3766 94.555
H-9	99.28817749023438	return new Array CaMeL List < byte > ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 92.3563 99.6378 99.9916 99.9089 99.9983 99.9471
H-9	99.28604736328126	return new List < Integer > ( ) ;
P-9	99.8854 93.7697 99.958 99.6897 99.9407 99.9966 99.9362 99.9984 99.7948
H-9	99.27849872295673	return new Array CaMeL List < Integer > ( - ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 99.6995 99.9609 99.9958 94.5265 96.9324 99.9965 99.8909
H-9	99.276708984375	return new Array CaMeL List > ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 93.4938 99.9949 99.9556 99.9967 99.7029
H-9	99.2754618326823	return new Array CaMeL List < Entry > ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 92.6479 99.1643 99.9934 99.9433 99.9984 99.9405
H-9	99.27392578125	return new Linked CaMeL List < String > ( ) ;
P-9	99.8854 94.7675 99.9995 99.8895 99.9942 97.017 99.9509 99.9972 99.9588 99.9988 99.9373
H-9	99.27348188920455	return new Array CaMeL List < Object ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 96.4899 96.6864 99.6454 99.7269 99.8416
H-9	99.27327104048295	new Array CaMeL List < Integer > ( ) ;
P-9	99.5696 99.9998 99.9421 99.9888 99.4369 99.9416 99.9924 99.9386 99.9929 99.8806
H-9	99.2712910970052	return new Array CaMeL List < Integer ( n ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 99.6995 95.9578 96.0353 99.9874 99.9948 99.9626
H-9	99.26460774739583	return new Hashtable < Integer , Integer > ( ) ;
P-9	99.8854 93.177 99.9593 99.491 99.9226 99.0855 99.9369 99.9961 99.9495 99.9987 99.8825
H-9	99.22960205078125	return new Vector < Integer > ( ) ;
P-9	99.8854 93.1608 99.9556 99.6537 99.9428 99.997 99.9612 99.9985 99.8501
H-9	99.19329279119319	return new Array CaMeL List < String ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 99.9948 96.9638 95.8815 99.1443 99.7344 99.7842
H-9	99.19259982638889	return new Array CaMeL List ( ) ;
P-9	99.8854 99.9015 99.9998 99.9456 93.5501 99.7936 99.9922 99.7743
H-9	99.18239524147727	throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
P-9	99.9517 98.1253 99.9998 99.8398 99.9996 99.9318 99.9967 97.7855 99.9832 99.5318
H-9	99.14924621582031	return new Integer ( 0 ) ;
P-9	99.8854 95.3683 98.7625 99.3519 99.9894 99.9944 99.951
H-9	99.13138427734376	return Collections . empty CaMeL List ( ) ;
P-9	95.136 99.9935 96.4515 99.9977 99.9098 99.9942 99.9972 99.9973 99.9457
H-9	99.05168914794922	return new Integer [ 1 ] ;
P-9	99.8854 95.3683 98.5786 98.8497 99.9745 99.9769 99.8891
H-9	99.02533721923828	return new Integer ( 1 ) ;
P-9	99.8854 95.3683 98.7625 98.3829 99.9945 99.9929 99.9253
H-9	99.02149963378906	return new int [ 1 ] ;
P-9	99.8854 93.8571 99.812 98.9501 99.972 99.9816 99.823
H-9	99.02144622802734	List < Integer > ( ) ;
P-9	99.9405 99.6082 99.8905 97.0138 99.8788 99.9329 99.3134
H-9	98.98886447482639	throw new Runtime CaMeL Exception ( ) ;
P-9	99.9517 98.0452 99.9996 99.92 99.9923 97.5512 99.9724 99.6065
H-9	98.97169494628906	return new Integer [ 0 ] ;
P-9	99.8854 95.3683 98.5786 98.2462 99.9725 99.9804 99.8513
H-9	98.93385314941406	return new int [ 0 ] ;
P-9	99.8854 93.8571 99.812 98.3111 99.9704 99.9845 99.7595
H-9	98.92415618896484	return new Object [ 0 ] ;
P-9	99.8854 93.6901 99.2342 99.0194 99.9567 99.9845 99.7321
H-9	98.81574358258929	return new > ( ) ;
P-9	99.8854 92.8229 99.7781 99.7035 99.9089 99.7206
H-9	98.76871163504464	return new Integer ( ) ;
P-9	99.8854 95.3683 98.7625 97.7792 99.9842 99.7104
H-9	98.19548797607422	return null ;
P-9	96.2499 99.9877 96.6535
S-10	steps . add ( new Pair < Integer , Integer > ( start , helper ) ) ;
T-10	steps . add ( new Pair < Integer , Integer > ( start , end ) ) ;
H-10	99.85697856702302	steps . add ( new Pair < Integer , Integer > ( start , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 99.3874 99.9916 99.7284 99.9354 99.9961 99.9976 99.9371
H-10	99.8005138578869	steps . add CaMeL All ( new Pair < Integer , Integer > ( start , helper ) ) ;
P-10	99.9977 99.9711 98.5671 99.8007 99.983 99.5562 99.8685 99.9932 99.8006 99.9878 99.7951 99.9275 99.9931 99.3901 99.9924 99.6783 99.9406 99.9957 99.9976 99.9117
H-10	99.75531969572368	steps . add ( new Pair < Integer , Integer > ( 0 , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 97.723 99.993 99.5321 99.87 99.9964 99.9976 99.9301
H-10	99.73231265419408	steps . add ( new Pair < String , Integer > ( start , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 97.4408 99.9917 99.768 99.9087 99.9913 99.3659 99.9925 99.7342 99.9213 99.996 99.9976 99.9401
H-10	99.71057710193452	steps . add ( new Pair < Integer , Integer , Integer > ( start , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 96.6707 99.741 99.9324 99.9863 99.5546 99.9856 99.7463 99.9795 99.9969 99.9973 99.9228
H-10	99.70013106496711	steps . add ( new Pair < Integer , String > ( start , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 96.9252 99.94 99.9883 99.2842 99.9929 99.6999 99.9016 99.9964 99.9976 99.9403
H-10	99.69624255952381	steps . add CaMeL All ( new Pair < Integer , Integer > ( 0 , helper ) ) ;
P-10	99.9977 99.9711 98.5671 99.8007 99.983 99.5562 99.8685 99.9932 99.8006 99.9878 99.7951 99.9275 99.9931 97.4714 99.9919 99.4856 99.8708 99.9957 99.9975 99.9038
H-10	99.69554554332386	Pair < Integer , Integer > helper = new Pair < Integer , Integer > ( start , helper ) ;
P-10	99.9785 99.6208 99.9898 99.5649 99.9061 98.1968 99.9008 99.669 99.8725 99.9914 99.8389 99.9917 99.7632 99.9337 99.9925 99.6186 99.9911 99.7873 99.9684 99.9957 101.4113
H-10	99.68198756167763	steps . add ( new Pair < Integer , Integer > ( $NUMBER$ , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 96.111 99.9868 99.6926 99.9316 99.9964 99.9975 99.933
H-10	99.67608321340461	steps . add ( new Pair < Integer , Integer > ( 1 , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 96.1 99.9899 99.6287 99.8961 99.9963 99.9975 99.9279
H-10	99.66085012335526	steps . add ( new Pair < Integer , Integer >> ( start , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 96.2711 99.9871 99.452 99.9878 99.5924 99.932 99.9958 99.9976 99.9318
H-10	99.65689890008224	steps . add ( new Pair < Long , Integer > ( start , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 95.9474 99.9925 99.7525 99.9135 99.9894 99.4217 99.9919 99.7408 99.9334 99.9963 99.9977 99.9382
H-10	99.65606398809524	steps . add CaMeL All ( new Pair < String , Integer > ( start , helper ) ) ;
P-10	99.9977 99.9711 98.5671 99.8007 99.983 99.5562 99.8685 99.9932 96.7909 99.9825 99.7918 99.9265 99.9936 99.3608 99.9933 99.6979 99.9308 99.9955 99.9975 99.9162
H-10	99.64667038690476	steps . add ( new Pair < Integer , Integer > ( start , start , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 99.3874 99.9916 96.1682 99.8365 98.9929 99.9702 99.9967 99.9966 99.9311
H-10	99.6403576078869	steps . add CaMeL All ( new Pair < Integer , String > ( start , helper ) ) ;
P-10	99.9977 99.9711 98.5671 99.8007 99.983 99.5562 99.8685 99.9932 99.8006 99.9878 96.5553 99.9256 99.9912 99.308 99.9937 99.6556 99.919 99.9959 99.9975 99.9171
H-10	99.64009021577381	steps . add ( new Pair < Integer , Integer > ( start , helper , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 99.3874 99.9916 99.7284 97.1724 98.3492 99.5815 99.9956 99.997 99.9301
H-10	99.6371837797619	steps . add CaMeL All ( new Pair < Integer , Integer > ( 1 , helper ) ) ;
P-10	99.9977 99.9711 98.5671 99.8007 99.983 99.5562 99.8685 99.9932 99.8006 99.9878 99.7951 99.9275 99.9931 96.0938 99.9888 99.596 99.904 99.9958 99.9975 99.9006
H-10	99.63585895040761	steps . add CaMeL All ( new Pair < Integer , Integer , Integer > ( start , helper ) ) ;
P-10	99.9977 99.9711 98.5671 99.8007 99.983 99.5562 99.8685 99.9932 99.8006 99.9878 99.7951 95.8893 99.6775 99.9517 99.9912 99.5117 99.9831 99.7475 99.9805 99.9965 99.9975 99.9145
H-10	99.63438110351562	steps . add ( new Pair < Integer , Integer > ( start , helper ) ) ; }
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 99.3874 99.9916 99.7284 99.9354 99.9961 99.9976 95.8019 99.5402
H-10	99.63337053571429	steps . add CaMeL All ( new Pair < Integer , Integer >> ( start , helper ) ) ;
P-10	99.9977 99.9711 98.5671 99.8007 99.983 99.5562 99.8685 99.9932 99.8006 99.9878 99.7951 96.4381 99.9933 99.4936 99.9896 99.5635 99.9392 99.9956 99.9975 99.9065
H-10	99.63337053571429	steps . add ( new Pair < Integer , Integer > ( 0 , start , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 97.723 99.993 97.1235 99.8846 99.3848 99.9582 99.9967 99.9971 99.931
H-10	99.63267758018092	steps . add ( new Pair < Integer , Integer > ( end , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 95.0872 99.9189 99.7985 99.9668 99.9965 99.9976 99.9467
H-10	99.63133480674342	steps . add ( new Pair < Integer , int > ( start , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 95.9685 99.8315 99.9885 99.2873 99.9906 99.4794 99.8946 99.9946 99.9973 99.9268
H-10	99.63024321056548	steps . add CaMeL All ( new Pair < Integer , Integer > ( $NUMBER$ , helper ) ) ;
P-10	99.9977 99.9711 98.5671 99.8007 99.983 99.5562 99.8685 99.9932 99.8006 99.9878 99.7951 99.9275 99.9931 95.8306 99.9859 99.677 99.9376 99.996 99.9974 99.9063
H-10	99.62997918379934	steps . add ( new Pair < Integer , Long > ( start , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 95.4379 99.9259 99.9908 99.3796 99.9923 99.7308 99.9417 99.9964 99.9976 99.9405
H-10	99.62820567255434	steps . add ( new Pair < Integer , Integer > ( start , helper , start , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 99.3874 99.9916 99.7284 97.1724 98.0069 99.8134 99.3065 99.8153 99.9963 99.9971 99.9244
H-10	99.61884998139881	steps . add ( new Pair < Integer , Integer > ( start , $NUMBER$ , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 99.3874 99.9916 95.4803 99.4666 99.4493 99.9778 99.9966 99.9968 99.9404
H-10	99.61761795847039	steps . add ( new Pair < Integer , Integer > ( $STRING$ , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 94.9789 99.9895 99.616 99.9139 99.9963 99.9974 99.9336
H-10	99.61587126358695	steps . add CaMeL All ( new Pair < Integer , Integer > ( start , start , helper ) ) ;
P-10	99.9977 99.9711 98.5671 99.8007 99.983 99.5562 99.8685 99.9932 99.8006 99.9878 99.7951 99.9275 99.9931 99.3901 99.9924 96.3097 99.748 98.9352 99.9678 99.9965 99.9966 99.9244
H-10	99.61340913318452	steps . add ( new Pair < Integer , Integer < Integer > ( start , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 95.4178 99.5588 99.9428 99.6149 99.2575 99.9909 99.8076 99.9704 99.9939 99.9973 99.921
H-10	99.61312705592105	steps . add ( new Pair < Integer , Integer > ( start , 0 ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 99.3874 99.9916 95.7013 99.3407 99.9963 99.9971 99.9261
H-10	99.6119449013158	steps . add ( new Pair < $STRING$ , Integer > ( start , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 95.1202 99.9877 99.816 99.8627 99.9878 99.34 99.9897 99.7795 99.947 99.996 99.9976 99.937
H-10	99.61172340029762	steps . add CaMeL All ( new Pair < Integer , Integer > ( $STRING$ , helper ) ) ;
P-10	99.9977 99.9711 98.5671 99.8007 99.983 99.5562 99.8685 99.9932 99.8006 99.9878 99.7951 99.9275 99.9931 95.5077 99.9897 99.6115 99.9323 99.9957 99.9973 99.9077
H-10	99.61022367931548	steps . add ( new Array CaMeL List < Integer , Integer > ( start , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 95.1404 99.9458 99.8811 99.9828 99.7699 99.6962 99.7567 99.9065 99.9876 99.3476 99.9538 99.5552 99.9902 99.9973 99.9975 99.9276
H-10	99.60967726934524	steps . add ( new Pair < Integer , Integer > ( start , helper , 1 ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 99.3874 99.9916 99.7284 97.1724 97.7605 99.5322 99.996 99.9975 99.9284
H-10	99.6068179481908	steps . add ( new Pair < String , Integer > ( 0 , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 97.4408 99.9917 99.768 99.9087 99.9913 97.273 99.9941 99.5322 99.8346 99.9963 99.9975 99.9356
H-10	99.60678245907738	steps . add CaMeL All ( new Pair < Integer , Integer > ( end , helper ) ) ;
P-10	99.9977 99.9711 98.5671 99.8007 99.983 99.5562 99.8685 99.9932 99.8006 99.9878 99.7951 99.9275 99.9931 95.2299 99.9197 99.799 99.9719 99.9964 99.9976 99.9236
H-10	99.60655146059783	steps . add CaMeL All ( new Pair < Integer , Integer > ( start , helper , helper ) ) ;
P-10	99.9977 99.9711 98.5671 99.8007 99.983 99.5562 99.8685 99.9932 99.8006 99.9878 99.7951 99.9275 99.9931 99.3901 99.9924 99.6783 97.0862 98.4476 99.5362 99.9952 99.997 99.9235
H-10	99.60650344122024	steps . add CaMeL All ( new Pair < Integer , Long > ( start , helper ) ) ;
P-10	99.9977 99.9711 98.5671 99.8007 99.983 99.5562 99.8685 99.9932 99.8006 99.9878 95.6928 99.9291 99.9929 99.3897 99.9931 99.692 99.9482 99.9959 99.9975 99.9166
H-10	99.60623972039474	steps . add ( new Pair < Integer , Integer > ( first , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 94.6175 99.9712 99.7542 99.9379 99.9956 99.9976 99.9357
H-10	99.60566850142045	steps . add CaMeL All ( new Pair < Integer , Integer > ( start , helper ) ) ; }
P-10	99.9977 99.9711 98.5671 99.8007 99.983 99.5562 99.8685 99.9932 99.8006 99.9878 99.7951 99.9275 99.9931 99.3901 99.9924 99.6783 99.9406 99.9957 99.9976 96.0353 99.3905
H-10	99.60517321134868	steps . add ( new Pair < Integer , Integer > ( max , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 94.7266 99.9084 99.6681 99.9559 99.9956 99.9971 99.9376
H-10	99.604248046875	steps . add ( new Pair < String , Integer , Integer > ( start , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 97.4408 99.9917 99.768 96.7424 99.7215 99.9219 99.9894 99.6005 99.9873 99.7589 99.9783 99.9967 99.9972 99.9286
H-10	99.60043480282738	steps . add CaMeL All ( new Pair < Integer , Integer > ( start , 0 ) ) ;
P-10	99.9977 99.9711 98.5671 99.8007 99.983 99.5562 99.8685 99.9932 99.8006 99.9878 99.7951 99.9275 99.9931 99.3901 99.9924 96.0103 99.4228 99.9959 99.9969 99.8963
H-10	99.59931873139881	steps . add CaMeL All ( new Pair < Long , Integer > ( start , helper ) ) ;
P-10	99.9977 99.9711 98.5671 99.8007 99.983 99.5562 99.8685 99.9932 95.5498 99.9864 99.7755 99.9263 99.9916 99.415 99.9927 99.6982 99.9434 99.9959 99.9975 99.9131
H-10	99.5993015455163	steps . add CaMeL All ( new Pair < Integer , Integer > ( 0 , start , helper ) ) ;
P-10	99.9977 99.9711 98.5671 99.8007 99.983 99.5562 99.8685 99.9932 99.8006 99.9878 99.7951 99.9275 99.9931 97.4714 99.9919 97.3014 99.8523 99.3914 99.9539 99.9963 99.9972 99.924
H-10	99.59837757457386	Pair < Integer , Integer > start = new Pair < Integer , Integer > ( start , helper ) ;
P-10	99.9785 99.6208 99.9898 99.5649 99.9061 97.7746 99.6316 99.6513 99.8528 99.9918 99.8281 99.9928 99.7881 99.9227 99.9934 99.65 99.9858 99.7604 99.9557 99.994 100.0122
H-10	99.59834369860198	steps . add ( new Pair < Integer , Object > ( start , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 94.8879 99.9118 99.9851 99.2964 99.9926 99.8089 99.9186 99.996 99.9976 99.9373
H-10	99.59822805304276	steps . add ( new Pair < Integer , String > ( 0 , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 96.9252 99.94 99.9883 97.6792 99.9946 99.4847 99.788 99.9967 99.9975 99.9358
H-10	99.59809955797698	steps . add ( new Pair < Integer , ? > ( start , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 94.9713 99.875 99.9816 99.2892 99.9906 99.7685 99.926 99.991 99.9972 99.9373
H-10	99.59687243009868	steps . add ( new Pair < Object , Integer > ( start , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 94.8641 99.9821 99.7729 99.9165 99.99 99.3342 99.9927 99.7668 99.9226 99.9961 99.9977 99.9391
H-10	99.59564499627976	steps . add ( new Pair < Integer , Integer > ( start , 0 , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 99.3874 99.9916 95.7013 99.2663 98.9519 99.9721 99.9966 99.9967 99.9356
H-10	99.59558686755952	steps . add ( new Pair < Integer , Integer , Integer > ( 0 , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 96.6707 99.741 99.9324 99.9863 97.2614 99.9796 99.6464 99.972 99.9971 99.9971 99.9145
H-10	99.59071416440217	steps . add ( new Pair < Integer , Integer > ( 0 , helper , start , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 97.723 99.993 99.5321 97.8321 98.2635 99.8635 99.3875 99.7703 99.9963 99.9966 99.9195
H-10	99.58927194695724	steps . add ( new Pair < Integer , Integer > ( start , $NUMBER$ ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 99.3874 99.9916 95.4803 99.1113 99.9969 99.997 99.9229
H-10	99.58732804008152	steps . add ( new Pair < Integer , Integer > ( new Integer ( start ) , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 96.0816 98.7794 99.9355 98.6717 99.7755 99.636 99.4527 99.9841 99.9933 99.9978 99.8918
H-10	99.58716982886905	steps . add ( new Pair < Integer , Integer > ( start , helper , $NUMBER$ ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 99.3874 99.9916 99.7284 97.1724 97.132 99.6862 99.9963 99.9973 99.9301
H-10	99.58598400297619	steps . add CaMeL All ( new Pair < Integer , Integer > ( max , helper ) ) ;
P-10	99.9977 99.9711 98.5671 99.8007 99.983 99.5562 99.8685 99.9932 99.8006 99.9878 99.7951 99.9275 99.9931 94.9624 99.9166 99.6558 99.958 99.9946 99.997 99.917
H-10	99.5837169828869	steps . add CaMeL All ( new Pair < Integer , Object > ( start , helper ) ) ;
P-10	99.9977 99.9711 98.5671 99.8007 99.983 99.5562 99.8685 99.9932 99.8006 99.9878 95.2416 99.9268 99.9895 99.3128 99.9932 99.773 99.9284 99.9956 99.9975 99.9112
H-10	99.58262416294643	steps . add CaMeL All ( new Pair < Integer , int > ( start , helper ) ) ;
P-10	99.9977 99.9711 98.5671 99.8007 99.983 99.5562 99.8685 99.9932 99.8006 99.9878 95.7642 99.8837 99.993 99.2309 99.9918 99.3929 99.8969 99.9945 99.9973 99.9012
H-10	99.58076404389881	this . steps . add ( new Pair < Integer , Integer > ( start , helper ) ) ;
P-10	99.9989 99.3501 99.9907 99.9554 99.874 99.6939 99.8889 99.9893 99.8652 99.9961 99.7812 99.921 99.9905 99.4418 99.9915 99.7062 99.9428 99.9956 99.9974 99.9609
H-10	99.58046177455357	steps . add ( new Pair < Integer , Integer > ( start , 1 , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 99.3874 99.9916 94.6901 99.5488 99.3598 99.974 99.9966 99.9969 99.9355
H-10	99.58039293791118	steps . add ( new Pair < E , Integer > ( start , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 94.8791 99.9742 99.6863 99.8569 99.9845 99.2095 99.9922 99.7256 99.9222 99.9961 99.9977 99.9375
H-10	99.57804361979167	steps . add CaMeL All ( new Pair < Integer , ? > ( start , helper ) ) ;
P-10	99.9977 99.9711 98.5671 99.8007 99.983 99.5562 99.8685 99.9932 99.8006 99.9878 95.2085 99.9348 99.987 99.279 99.9914 99.7171 99.933 99.9924 99.9971 99.9098
H-10	99.57636461759868	steps . add ( new Pair < Integer , Float > ( start , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 94.4135 99.9556 99.9909 99.4105 99.9922 99.6938 99.9229 99.9964 99.9977 99.9409
H-10	99.57576069078948	steps . add ( new Pair < String , String > ( start , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 97.4408 99.9917 97.0498 99.9334 99.9855 99.1806 99.9932 99.6995 99.862 99.9962 99.9976 99.9437
H-10	99.57248406661184	steps . add ( new Map < Integer , Integer > ( start , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 94.3769 99.9888 99.701 99.9956 99.771 99.9392 99.9942 99.5337 99.9692 99.703 99.9872 99.9976 99.9976 99.9438
H-10	99.57222290039063	return steps . add ( new Pair < Integer , Integer > ( start , helper ) ) ;
P-10	99.4053 99.1375 99.6976 99.7032 99.6843 99.9126 99.9834 99.8143 99.9937 99.7702 99.9215 99.9936 99.4458 99.9921 99.7496 99.961 99.9934 99.9956 99.9894
H-10	99.57035104851974	steps . add ( new Pair < Integer , Integer > ( start , start ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 99.3874 99.9916 96.1682 98.0616 99.9881 99.9966 99.9343
H-10	99.57014973958333	steps . add ( new Pair < Integer , Integer > ( new Integer ( helper ) ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 96.0816 98.7794 99.9355 98.469 99.9698 99.5223 99.9948 99.9961 99.9155
H-10	99.56939406622024	steps . add ( new Pair < Integer , Integer > ( start , helper , 0 ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 99.3874 99.9916 99.7284 97.1724 97.0709 99.3748 99.9964 99.9974 99.9292
H-10	99.56895228794643	steps . add CaMeL All ( new Pair < Integer , Integer > ( start , start ) ) ;
P-10	99.9977 99.9711 98.5671 99.8007 99.983 99.5562 99.8685 99.9932 99.8006 99.9878 99.7951 99.9275 99.9931 99.3901 99.9924 96.3097 98.4636 99.9862 99.9963 99.9052
H-10	99.56843705610795	} else { steps . add ( new Pair < Integer , Integer > ( start , helper ) ) ;
P-10	99.1787 99.2604 99.5641 99.9941 99.9937 99.9389 99.8354 99.8697 99.9822 99.9066 99.9982 99.8332 99.8898 99.9952 99.6642 99.9922 99.7469 99.9678 99.9947 99.9982 99.4863
H-10	99.56719006990132	steps . add ( new Object < Integer , Integer > ( start , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 94.7479 99.8723 99.7326 99.635 99.824 99.8994 99.982 99.5737 99.9378 99.673 99.9907 99.998 99.9981 99.9337
H-10	99.56562732514881	{ steps . add ( new Pair < Integer , Integer > ( start , helper ) ) ; }
P-10	99.4534 99.9929 99.9878 99.8819 99.7819 99.9236 99.9907 99.8313 99.9951 99.7872 99.9257 99.9939 99.4193 99.9909 99.7803 99.9591 99.996 99.9976 99.354 99.8178
H-10	99.56458100818452	steps . add CaMeL All ( new Pair < Integer , Integer > ( start , $NUMBER$ ) ) ;
P-10	99.9977 99.9711 98.5671 99.8007 99.983 99.5562 99.8685 99.9932 99.8006 99.9878 99.7951 99.9275 99.9931 99.3901 99.9924 95.4415 99.2423 99.9963 99.9967 99.8927
H-10	99.56340680803571	steps . add ( new Pair < Integer , Integer > ( 0 , helper , 1 ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 97.723 99.993 99.5321 97.8321 98.0354 99.4901 99.9962 99.9973 99.9232
H-10	99.56145276521382	steps . add ( new Pair < Integer , Integer > ( this , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 94.4925 99.9225 99.2445 99.7868 99.9953 99.9975 99.9194
H-10	99.56142064144737	steps . add ( new Pair < Integer , Short > ( start , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 94.1907 99.8789 99.9909 99.3929 99.992 99.7129 99.9413 99.9963 99.9976 99.9372
H-10	99.55387155633224	steps . add ( new Pair < Integer , Integer > ( start , end ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 99.3874 99.9916 94.4198 99.4873 99.9941 99.9968 99.9376
H-10	99.55167429070724	steps . add ( new Pair < Integer , int > ( 0 , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 95.9685 99.8315 99.9885 98.1358 99.9926 99.248 99.7637 99.9951 99.9973 99.9244
H-10	99.55076840049342	steps . add ( new Pair < Integer , Integer > ( start , max ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 99.3874 99.9916 94.5615 99.2963 99.9954 99.9954 99.9282
H-10	99.5500424033717	steps . add ( new Pair < Integer , E > ( start , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 94.2305 99.9329 99.9783 99.0886 99.9928 99.745 99.9176 99.9963 99.9976 99.935
H-10	99.5487548828125	steps . add ( new Pair < Integer , Integer > ( start , helper ) ) ; ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 99.3874 99.9916 99.7284 99.9354 99.9961 99.9976 93.7237 99.906
H-10	99.54606548108552	steps . add ( new Pair < Integer , Integer >> ( 0 , helper ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 96.2711 99.9871 97.5545 99.9924 99.3568 99.8908 99.9961 99.9976 99.9203
H-10	99.54448852539062	steps . add ( new Pair < Integer , Integer > ( 0 , helper ) ) ; }
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 97.723 99.993 99.5321 99.87 99.9964 99.9976 96.0185 99.4505
H-10	99.54442003038194	steps . add ( new Linked CaMeL List < Integer , Integer > ( ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 94.346 99.9392 99.9013 99.9843 99.7573 99.7788 99.7432 99.9112 99.9944 99.5943 99.9572 99.9951 99.9186
H-10	99.54059801603618	steps . add ( new Pair < Integer , Integer > ( start , 1 ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 99.3874 99.9916 94.6901 98.9798 99.9961 99.997 99.9204
H-10	99.540234375	{ steps . add ( new Pair < Integer , Integer > ( start , helper ) ) ;
P-10	99.4534 99.9929 99.9878 99.8819 99.7819 99.9236 99.9907 99.8313 99.9951 99.7872 99.9257 99.9939 99.4193 99.9909 99.7803 99.9591 99.996 99.9976 99.0983
H-10	99.53996196546052	steps . add ( new Pair < Integer , Integer > ( 0 , 0 ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 97.723 99.993 96.1749 99.1431 99.9964 99.9969 99.9229
H-10	99.5235928622159	steps . add ( new Pair < Integer , Integer , Integer > ( start , helper ) ) ; }
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 96.6707 99.741 99.9324 99.9863 99.5546 99.9856 99.7463 99.9795 99.9969 99.9973 96.0677 99.4522
H-10	99.51849920099431	steps . add CaMeL All ( new Pair < Integer , Integer > ( start , helper ) ) ; ;
P-10	99.9977 99.9711 98.5671 99.8007 99.983 99.5562 99.8685 99.9932 99.8006 99.9878 99.7951 99.9275 99.9931 99.3901 99.9924 99.6783 99.9406 99.9957 99.9976 93.6327 99.8753
H-10	99.51202947443181	steps . add CaMeL All ( new Pair < Integer , Integer > ( 0 , helper ) ) ; }
P-10	99.9977 99.9711 98.5671 99.8007 99.983 99.5562 99.8685 99.9932 99.8006 99.9878 99.7951 99.9275 99.9931 97.4714 99.9919 99.4856 99.8708 99.9957 99.9975 96.2446 99.3027
H-10	99.51197509765625	steps . add ( new Pair < String , Integer > ( start , helper ) ) ; }
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 97.4408 99.9917 99.768 99.9087 99.9913 99.3659 99.9925 99.7342 99.9213 99.996 99.9976 95.7026 99.5632
H-10	99.50501069568452	steps . add ( new Pair < Integer , Integer > ( start , helper ) ) ; break ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 99.3874 99.9916 99.7284 99.9354 99.9961 99.9976 92.3365 99.9853 99.9381
H-10	99.50445197610294	steps . add ( new Pair < Integer , Integer > ( start ) ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 99.3874 94.0711 99.8843 99.9925 99.9314
H-10	99.4933849516369	steps . add ( new Pair < Integer , Integer > ( start , helper ) ) ; ) ;
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 99.3874 99.9916 99.7284 99.9354 99.9961 99.9976 92.2783 99.8526 99.8848
H-10	99.48283081054687	steps . add ( new Pair < Integer , String > ( start , helper ) ) ; }
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 96.9252 99.94 99.9883 99.2842 99.9929 99.6999 99.9016 99.9964 99.9976 95.7565 99.5379
H-10	99.4704833984375	steps . add ( new Pair < Integer , Integer > ( 1 , helper ) ) ; }
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 96.1 99.9899 99.6287 99.8961 99.9963 99.9975 96.0101 99.482
H-10	99.46984252929687	steps . add ( new Pair < Integer , Integer > ( $NUMBER$ , helper ) ) ; }
P-10	99.9977 99.9711 99.7258 99.6211 99.8963 99.9911 99.7779 99.9926 99.7722 99.9103 99.9901 96.111 99.9868 99.6926 99.9316 99.9964 99.9975 95.8901 99.482
S-11	return true ;
T-11	return depth == 0 ;
H-11	99.66853332519531	return true ;
P-11	98.9467 99.9881 99.9867
H-11	99.60028839111328	return false ;
P-11	98.6718 99.9903 99.9864
H-11	99.55075073242188	return null ;
P-11	98.4719 99.9911 99.9874
H-11	99.2846435546875	} return true ;
P-11	99.3935 99.1635 99.9891 99.9805
H-11	99.21326293945313	} return false ;
P-11	99.3935 98.8055 99.9909 99.98
H-11	99.09068806966145	} if return true ;
P-11	98.6118 99.1073 98.9815 99.9857 99.9614
H-11	99.06973266601562	} return null ;
P-11	99.3935 98.0849 99.9926 99.9811
H-11	99.00569370814732	} if ; return true ;
P-11	98.6118 98.612 98.7 99.2462 99.9904 99.983
H-11	98.95601109095982	else { return true ; }
P-11	99.5018 99.0324 99.0515 99.9923 99.839 99.9125
H-11	98.9559326171875	return true ; return false ;
P-11	98.9467 99.9881 94.8931 99.1308 99.997 99.9832
H-11	98.91554478236607	return false ; return false ;
P-11	98.6718 99.9903 94.943 99.0697 99.9968 99.9846
H-11	98.90409633091518	} else { return true ;
P-11	97.8996 99.4008 98.7512 99.0247 99.9942 99.3616
H-11	98.90357462565105	if ; return true ;
P-11	98.4601 98.607 99.2484 99.9908 99.9792
H-11	98.88597760881696	} else if return true ;
P-11	97.8996 98.6715 98.7557 99.0178 99.9927 99.9681
H-11	98.88245500837054	else { return null ; }
P-11	99.5018 99.0324 98.6001 99.994 99.7834 99.9029
H-11	98.87290736607143	} else { return false ;
P-11	97.8996 99.4008 98.7512 98.7923 99.9947 99.3753
H-11	98.86780802408855	} if return false ;
P-11	98.6118 99.1073 97.6441 99.9891 99.9581
H-11	98.86628941127232	return true ; return true ;
P-11	98.9467 99.9881 94.8931 98.5044 99.9967 99.9824
H-11	98.86530412946429	else { return false ; }
P-11	99.5018 99.0324 98.4167 99.9935 99.8388 99.9115
H-11	98.86060791015625	if return false ;
P-11	98.3123 98.9213 99.9826 99.9509
H-11	98.85254923502605	} if return null ;
P-11	98.6118 99.1073 97.5521 99.99 99.9577
H-11	98.84678431919643	return false ; return true ;
P-11	98.6718 99.9903 94.943 98.5893 99.9965 99.9839
H-11	98.83666120256696	} else if return false ;
P-11	97.8996 98.6715 98.7557 98.6743 99.994 99.965
H-11	98.83333740234374	if return true ;
P-11	98.3123 98.7877 99.9755 99.9553
H-11	98.81692940848214	return null ; return false ;
P-11	98.4719 99.9911 94.9546 98.5658 99.9966 99.9859
H-11	98.81413051060268	return null ; return true ;
P-11	98.4719 99.9911 94.9546 98.5475 99.996 99.9853
H-11	98.80716378348214	* * * * * /
P-11	99.7956 99.8258 99.6174 99.3088 99.0685 99.1644
H-11	98.78812662760417	} ; return true ;
P-11	96.2937 99.147 99.4125 99.9927 99.9865
H-11	98.78769356863839	return true ; return null ;
P-11	98.9467 99.9881 94.8931 97.9529 99.9962 99.9843
H-11	98.78394165039063	return return false ;
P-11	95.6408 98.5542 99.9931 99.9789
H-11	98.78377859933036	/ * * * * /
P-11	99.9391 99.7222 99.4266 99.2587 99.0039 99.3083
H-11	98.77898297991071	} ; if return true ;
P-11	96.2937 98.9737 99.0715 99.2677 99.9842 99.9657
H-11	98.76865931919643	return new Boolean ( true ;
P-11	96.7637 96.7615 99.5142 99.2873 99.3894 99.9119
H-11	98.74494280133929	} else { if ; }
P-11	97.8996 99.4008 98.9671 98.9883 98.6078 99.4545
H-11	98.7401123046875	} if ; return false ;
P-11	98.6118 98.612 98.7 97.3868 99.9922 99.9815
H-11	98.73386056082589	} else { return null ;
P-11	97.8996 99.4008 98.7512 97.7527 99.9918 99.4445
H-11	98.7303466796875	return false ; return null ;
P-11	98.6718 99.9903 94.943 97.7735 99.9958 99.9855
H-11	98.72617013113839	} else if return null ;
P-11	97.8996 98.6715 98.7557 97.9038 99.9925 99.9637
H-11	98.72293701171876	return new true ;
P-11	96.7637 97.509 99.613 99.9763
H-11	98.71772112165179	return null ; return null ;
P-11	98.4719 99.9911 94.9546 97.8712 99.9959 99.9868
H-11	98.70579310825893	} if return ! true ;
P-11	98.6118 99.1073 96.4684 98.903 99.995 99.9586
H-11	98.6976806640625	} if true ;
P-11	98.6118 97.5299 99.8817 99.5686
H-11	98.69408307756696	} else { if true ;
P-11	97.8996 99.4008 98.9671 97.3544 99.8727 99.4675
H-11	98.68644714355469	return $STRING$ ;
P-11	95.0348 99.9727 99.9856
H-11	98.68465169270833	* * * * /
P-11	99.7956 99.8258 99.6174 98.9092 99.0903
H-11	98.6842549641927	/ * * * /
P-11	99.9391 99.7222 99.4266 98.7878 99.4022
H-11	98.67724609375	return true ; true ;
P-11	98.9467 99.9881 93.4769 99.9306 99.9686
H-11	98.66510881696429	} * * * * /
P-11	95.1706 99.7611 99.7516 99.57 99.225 99.281
H-11	98.6612548828125	} else return null ;
P-11	97.8996 97.038 99.1583 99.9943 99.9809
H-11	98.65897623697917	if ; return null ;
P-11	98.4601 98.607 97.779 99.9936 99.9783
H-11	98.65567452566964	throw new Runtime CaMeL Exception ;
P-11	99.8778 98.973 99.9938 99.7992 98.0913 99.8446
H-11	98.6483866373698	} else { if ;
P-11	97.8996 99.4008 98.9671 98.9883 98.738
H-11	98.64610799153645	return false ; true ;
P-11	98.6718 99.9903 93.5559 99.9363 99.9696
H-11	98.64554850260417	return return && true ;
P-11	95.6408 97.1585 99.3303 99.998 99.993
H-11	98.64408656529018	} else if ( true ;
P-11	97.8996 98.6715 98.9288 98.543 99.1343 99.435
H-11	98.6435546875	return return null ;
P-11	95.6408 97.85 99.9923 99.9821
H-11	98.63675944010417	} return return null ;
P-11	99.3935 96.1322 98.4109 99.9963 99.9912
H-11	98.62521362304688	} else return true ;
P-11	97.8996 97.038 98.9432 99.9926 99.9814
H-11	98.6240743001302	} if ( true ;
P-11	98.6118 98.6139 98.2216 99.0097 99.391
H-11	98.62328229631696	return new Boolean ( false ;
P-11	96.7637 96.7615 99.5142 98.1984 99.4447 99.9279
H-11	98.61182657877605	return null ; true ;
P-11	98.4719 99.9911 93.55 99.9365 99.9689
H-11	98.60789184570312	return return true ;
P-11	95.6408 97.6747 99.9928 99.9785
H-11	98.60641043526786	if ( 0 == true ;
P-11	99.4372 97.1776 99.461 98.9978 99.1057 98.9298
H-11	98.59906616210938	return true true ;
P-11	98.9467 94.4986 99.8259 99.9715
H-11	98.56519775390625	return true ; ;
P-11	98.9467 99.9881 94.1648 99.9738
H-11	98.56208038330078	} if ;
P-11	98.6118 98.612 99.128
H-11	98.55703735351562	return 0 ;
P-11	94.5215 99.9699 99.9841
H-11	98.54225463867188	} else if ;
P-11	97.8996 98.6715 98.7991 99.4446
H-11	98.5408223470052	} else if true ;
P-11	97.8996 98.6715 97.2502 99.8951 99.632
H-11	98.52154541015625	return this ;
P-11	94.4059 99.9458 99.9818
H-11	98.5142313639323	else { if ; }
P-11	99.5018 99.1758 98.9738 98.7376 99.3338
H-11	98.51029663085937	return null true ;
P-11	98.4719 94.5896 99.763 99.9743
H-11	98.50989990234375	} return $STRING$ ;
P-11	99.3935 95.2984 99.9771 99.9839
H-11	98.50760498046876	return false ; ;
P-11	98.6718 99.9903 94.1467 99.9766
H-11	98.49822387695312	return false true ;
P-11	98.6718 94.2765 99.817 99.9732
H-11	98.48458251953124	if return null ;
P-11	98.3123 97.0437 99.9813 99.9496
H-11	98.482421875	else { return true ;
P-11	99.5018 99.0324 99.0515 99.9923 97.9539
H-11	98.47833251953125	return true ; }
P-11	98.9467 99.9881 93.8579 99.8463
H-11	98.4503885904948	return ;
P-11	95.8373 99.7613
H-11	98.44046020507812	return null ; ;
P-11	98.4719 99.9911 94.0108 99.9759
H-11	98.42913818359375	if ( true ;
P-11	99.4372 98.2083 98.4712 98.8931
H-11	98.42864379882812	return - 1 ;
P-11	92.5054 99.9026 99.9942 99.9884
H-11	98.42116088867188	/ * * /
P-11	99.9391 99.7222 98.2959 99.3208
H-11	98.41402587890624	return false ; }
P-11	98.6718 99.9903 93.7994 99.856
H-11	98.4102783203125	* * * /
P-11	99.7956 99.8258 98.3397 99.2206
H-11	98.39937744140624	return ! true ;
P-11	93.4449 98.8232 99.9899 99.9863
H-11	98.38246459960938	else return true ;
P-11	97.4439 99.1454 99.9869 99.9736
H-11	98.32879638671875	if ; * /
P-11	98.4601 97.4102 98.8542 99.7836
H-11	98.26988220214844	} else {
P-11	97.8996 99.4008 97.8827
H-11	98.25846862792969	if true ;
P-11	96.3858 99.7772 99.735
H-11	98.2467753092448	if ;
P-11	98.4601 99.1444
H-11	98.20647430419922	} return ;
P-11	99.3935 95.5809 99.955
H-11	98.14726257324219	} true ;
P-11	95.0576 99.814 99.821
H-11	98.08786010742188	else if ;
P-11	98.5407 98.8284 99.6199
H-11	98.08580017089844	return $NUMBER$ ;
P-11	92.6429 99.964 99.9837
H-11	98.04186248779297	break ; }
P-11	99.9845 98.7565 99.5062
H-11	97.99016571044922	} else ;
P-11	97.8996 96.3778 99.7868
H-11	97.80923461914062	break ;
P-11	99.9845 99.5229
H-11	97.40399169921875	* /
P-11	97.6398 99.7025
H-11	96.7248306274414	}
P-11	95.5532
S-12	for ( Integer x : arr ) {
T-12	for ( Integer x : arr . sub CaMeL List ( k , arr . size ( ) ) ) {
H-12	99.73781331380208	for ( Integer x : arr ) {
P-12	99.9988 99.5135 99.4 99.9923 99.8038 99.416 99.9641 99.8347
H-12	99.7364730834961	if ( arr != null ) { for ( Integer x : arr ) {
P-12	99.9967 98.8636 98.7822 99.9887 99.7929 99.9395 99.6297 99.9934 99.7152 99.5433 99.9942 99.7369 99.6376 99.9355 102.8114
H-12	99.68916320800781	if ( x != null ) { for ( Integer x : arr ) {
P-12	99.9967 97.6357 99.4739 99.9809 99.8035 99.9392 99.7066 99.9907 99.7101 99.5086 99.9936 99.6 99.5351 99.9408 102.7886
H-12	99.6431884765625	for ( Integer x : arr . size ( ) ) {
P-12	99.9988 99.5135 99.4 99.9923 99.8038 99.1705 98.3177 99.9901 99.9992 99.9994 99.9466 99.5124
H-12	99.64253452845982	synchronized ( this ) { for ( Integer x : arr ) {
P-12	99.9979 98.7166 99.9882 99.9977 99.4139 99.9946 99.6388 99.5388 99.994 99.8198 99.6765 99.9674 102.682
H-12	99.59494253305289	for ( Integer x : arr . iterator ( ) ) {
P-12	99.9988 99.5135 99.4 99.9923 99.8038 99.1705 97.7365 99.9943 99.998 99.9993 99.9399 99.4701
H-12	99.57905578613281	if ( arr == null ) { for ( Integer x : arr ) {
P-12	99.9967 98.8636 97.0582 99.9872 99.8365 99.9053 99.0908 99.9851 99.6843 99.4742 99.9912 99.7325 99.5918 99.927 102.7177
H-12	99.57490539550781	if ( x == null ) { for ( Integer x : arr ) {
P-12	99.9967 97.6357 98.4286 99.9698 99.8338 99.9074 99.1968 99.9856 99.6895 99.4614 99.9908 99.6339 99.4131 99.9249 102.7078
H-12	99.57049560546875	if ( arr != null ) { for ( int x : arr ) {
P-12	99.9967 98.8636 98.7822 99.9887 99.7929 99.9395 99.6297 99.9934 98.0793 98.8932 99.7515 99.6765 99.5991 99.9149 102.804
H-12	99.56523895263672	while ( x != null ) { for ( Integer x : arr ) {
P-12	99.9985 97.8739 99.5285 99.9768 99.7764 99.9765 99.5269 99.9934 99.7037 99.4442 99.9929 99.6083 99.4959 99.9366 102.8138
H-12	99.560546875	if ( x != null ) { for ( Integer x : 0 ) {
P-12	99.9967 97.6357 99.4739 99.9809 99.8035 99.9392 99.7066 99.9907 99.7101 99.5086 99.9936 97.4856 99.8797 99.9646 102.4766
H-12	99.55492292131696	synchronized ( arr ) { for ( Integer x : arr ) {
P-12	99.9979 97.8433 99.7603 99.9942 99.2758 99.9945 99.6324 99.5142 99.9927 99.8398 99.7236 99.9672 102.6638
H-12	99.55284118652344	for ( Integer x : arr ) for ( Integer x : arr ) {
P-12	99.9988 99.5135 99.4 99.9923 99.8038 99.416 94.1788 99.9982 99.5824 99.6482 99.939 99.1845 99.5201 99.9657 102.9871
H-12	99.55274200439453	for ( Integer x : arr ) { if ( x != null ) {
P-12	99.9988 99.5135 99.4 99.9923 99.8038 99.416 99.9641 96.1837 99.9774 98.6412 98.9278 99.9617 99.84 99.9304 101.5758
H-12	99.5459213256836	if ( arr != null ) { for ( Integer x : 0 ) {
P-12	99.9967 98.8636 98.7822 99.9887 99.7929 99.9395 99.6297 99.9934 99.7152 99.5433 99.9942 96.6799 99.8739 99.9527 102.5663
H-12	99.53598022460938	if ( arr != null ) { for ( Integer arr : arr ) {
P-12	99.9967 98.8636 98.7822 99.9887 99.7929 99.9395 99.6297 99.9934 99.7152 96.3429 99.9905 99.6799 99.7306 99.9355 102.7717
H-12	99.53563690185547	for ( Integer x : arr ) { arr . add ( arr ) ;
P-12	99.9988 99.5135 99.4 99.9923 99.8038 99.416 99.9641 95.6834 99.9385 99.2178 99.8914 98.012 99.7777 99.9225 102.3211
H-12	99.53257751464844	for ( Iterator < Integer > x : arr . iterator ( ) ) {
P-12	99.9988 95.9747 99.8967 99.1378 99.9618 98.5551 99.7253 99.8101 99.0702 99.1312 99.9966 99.9985 99.9963 99.9215 101.6295
H-12	99.52278645833333	for ( int x : arr ) {
P-12	99.9988 98.6432 98.6098 99.8287 99.7854 99.3899 99.9584 99.7737
H-12	99.52165222167969	if ( x != null ) { for ( int x : arr ) {
P-12	99.9967 97.6357 99.4739 99.9809 99.8035 99.9392 99.7066 99.9907 98.1616 98.825 99.791 99.4985 99.415 99.9142 102.7912
H-12	99.51715850830078	for ( Integer x : arr ) { arr . add ( x ) ;
P-12	99.9988 99.5135 99.4 99.9923 99.8038 99.416 99.9641 95.6834 99.9385 99.2178 99.8914 97.9381 99.9613 99.918 101.9203
H-12	99.5011455829327	for ( int x : arr . size ( ) ) {
P-12	99.9988 98.6432 98.6098 99.8287 99.7854 99.2075 98.535 99.9898 99.999 99.9989 99.9539 99.2477
H-12	99.447509765625	for ( int x : arr . iterator ( ) ) {
P-12	99.9988 98.6432 98.6098 99.8287 99.7854 99.2075 97.9116 99.9922 99.9974 99.9982 99.9398 99.1878
H-12	99.43983459472656	for ( Integer x : arr ) { if ( x instanceof Integer ) {
P-12	99.9988 99.5135 99.4 99.9923 99.8038 99.416 99.9641 96.1837 99.9774 98.6412 98.3907 99.227 99.9266 99.8984 100.9865
H-12	99.43923117897727	for ( Integer [ ] arr : arr ) {
P-12	99.9988 99.5135 97.5586 99.9844 98.4359 99.9362 99.71 99.4341 99.9585 99.5842
H-12	99.43769975142045	for ( Integer x : arr . arr ) {
P-12	99.9988 99.5135 99.4 99.9923 99.8038 99.1705 96.877 99.8442 99.9439 99.5534
H-12	99.4353360262784	for ( Integer x : arr . x ) {
P-12	99.9988 99.5135 99.4 99.9923 99.8038 99.1705 96.7512 99.9514 99.9499 99.54
H-12	99.43136831430289	for ( Integer x : arr . values ( ) ) {
P-12	99.9988 99.5135 99.4 99.9923 99.8038 99.1705 95.3982 99.9849 99.997 99.9997 99.947 99.6848
H-12	99.42652306189903	for ( Integer x : arr . list ( ) ) {
P-12	99.9988 99.5135 99.4 99.9923 99.8038 99.1705 96.0641 99.5509 99.7869 99.9993 99.9623 99.5852
H-12	99.40763346354167	for ( Integer [ ] arr : arr . size ( ) ) {
P-12	99.9988 99.5135 97.5586 99.9844 98.4359 99.9362 99.71 99.1488 97.9166 99.9811 99.9991 99.9993 99.9374 99.2775
H-12	99.40474446614583	for ( Integer [ ] x : arr . size ( ) ) {
P-12	99.9988 99.5135 97.5586 99.9844 97.9391 99.9782 99.7523 99.2626 98.1219 99.9874 99.9992 99.9994 99.9528 99.3061
H-12	99.40306260850694	for ( Integer arr : arr ) {
P-12	99.9988 99.5135 96.3086 99.9884 99.771 99.5422 99.9588 99.8291
H-12	99.39766068892045	for ( Integer [ ] x : arr ) {
P-12	99.9988 99.5135 97.5586 99.9844 97.9391 99.9782 99.7523 99.3384 99.9641 99.6296
H-12	99.39661583533653	for ( String x : arr . size ( ) ) {
P-12	99.9988 96.3654 99.2826 99.9929 99.7882 99.1261 98.3548 99.9911 99.9993 99.9992 99.9402 99.6001
H-12	99.39442545572916	for ( Integer [ ] arr : arr . iterator ( ) ) {
P-12	99.9988 99.5135 97.5586 99.9844 98.4359 99.9362 99.71 99.1488 97.801 99.9913 99.9979 99.9989 99.9326 99.1913
H-12	99.39177997295673	for ( Integer arr : arr . size ( ) ) {
P-12	99.9988 99.5135 96.3086 99.9884 99.771 98.9826 98.3603 99.9865 99.9992 99.9994 99.9412 99.5263
H-12	99.38964080810547	for ( Integer x : arr ) { if ( x == null ) {
P-12	99.9988 99.5135 99.4 99.9923 99.8038 99.416 99.9641 96.1837 99.9774 98.6412 98.155 99.8371 99.8697 99.877 99.8875
H-12	99.38617350260417	for ( Integer [ ] x : arr . iterator ( ) ) {
P-12	99.9988 99.5135 97.5586 99.9844 97.9391 99.9782 99.7523 99.2626 97.9024 99.9921 99.9979 99.9991 99.9487 99.2476
H-12	99.3851318359375	for ( Integer x : arr . max ) {
P-12	99.9988 99.5135 99.4 99.9923 99.8038 99.1705 96.9101 99.4058 99.9538 99.3707
H-12	99.3785400390625	for ( Integer x : arr . to CaMeL Array ( ) ) {
P-12	99.9988 99.5135 99.4 99.9923 99.8038 99.1705 94.8415 99.9415 98.9856 99.9909 99.9192 99.9991 99.8697 99.5346
H-12	99.37839762369792	for ( String x : arr ) {
P-12	99.9988 96.3654 99.2826 99.9929 99.7882 99.4475 99.9665 99.8465
H-12	99.37105305989583	for ( Integer < String > x : arr ) {
P-12	99.9988 99.5135 95.7932 98.7138 99.9642 99.4163 99.9637 99.8641 99.7627 99.9731 99.7721
H-12	99.37062424879808	for ( Integer x : arr . keys ( ) ) {
P-12	99.9988 99.5135 99.4 99.9923 99.8038 99.1705 94.7442 99.9241 99.9941 99.9997 99.9555 99.6043
H-12	99.3685791015625	if ( arr != null ) { for ( Integer x : arr )
P-12	99.9967 98.8636 98.7822 99.9887 99.7929 99.9395 99.6297 99.9934 99.7152 99.5433 99.9942 99.7369 99.6376 97.492
H-12	99.36689453125	for ( final Integer x : arr ) {
P-12	99.9988 95.2327 99.636 99.7726 99.9872 99.8881 99.6398 99.965 99.8316
H-12	99.36138153076172	for ( Integer x : arr ) { for ( Integer x : arr )
P-12	99.9988 99.5135 99.4 99.9923 99.8038 99.416 99.9641 97.2142 99.9907 99.4171 99.3941 99.9677 99.1711 99.4929 97.3288
H-12	99.3595440204327	for ( Integer [ ] [ ] arr : arr ) {
P-12	99.9988 99.5135 97.5586 99.9844 97.2468 99.9741 98.5784 99.9305 99.8055 99.7668 99.9405 99.6591
H-12	99.3587646484375	for ( Integer < Integer > x : arr ) {
P-12	99.9988 99.5135 95.7932 98.6766 99.9591 99.3582 99.9667 99.8561 99.7195 99.9707 99.7757
H-12	99.35813210227273	for ( Integer x : arr . length ) {
P-12	99.9988 99.5135 99.4 99.9923 99.8038 99.1705 96.0356 99.9688 99.955 99.384
H-12	99.355712890625	/ * for ( Integer x : arr ) {
P-12	99.9176 98.7141 99.9759 99.7474 99.7334 99.9968 99.8523 99.6845 99.873 99.8339
H-12	99.355224609375	for ( Integer x : arr . value ) {
P-12	99.9988 99.5135 99.4 99.9923 99.8038 99.1705 95.9741 99.7599 99.949 99.6284
H-12	99.35096153846153	for ( Object x : arr . size ( ) ) {
P-12	99.9988 96.2331 98.9477 99.9871 99.8215 99.0355 98.3649 99.9914 99.9992 99.9995 99.9533 99.5132
H-12	99.34989107572116	for ( Integer arr : arr . iterator ( ) ) {
P-12	99.9988 99.5135 96.3086 99.9884 99.771 98.9826 97.8815 99.9941 99.9982 99.9994 99.9376 99.4578
H-12	99.33487277560764	for ( Object x : arr ) {
P-12	99.9988 96.2331 98.9477 99.9871 99.8215 99.5115 99.9655 99.8314
H-12	99.334716796875	/ * * for ( Integer x : arr ) {
P-12	99.9176 99.1751 98.7661 99.9785 99.645 99.8107 99.9976 99.8584 99.6463 99.8558 99.7819
H-12	99.33225661057692	for ( Integer x : arr . max ( ) ) {
P-12	99.9988 99.5135 99.4 99.9923 99.8038 99.1705 96.9101 97.7288 99.5076 99.9985 99.967 99.6112
H-12	99.32543131510417	for ( Integer x : arr . key CaMeL Set ( ) ) {
P-12	99.9988 99.5135 99.4 99.9923 99.8038 99.1705 96.407 99.9507 96.7641 99.9959 99.999 99.9991 99.9092 99.2602
H-12	99.32330322265625	for ( Integer x : arr . size ( ) )
P-12	99.9988 99.5135 99.4 99.9923 99.8038 99.1705 98.3177 99.9901 99.9992 99.9994 95.9771
H-12	99.31303575303819	for ( Integer x : 0 ) {
P-12	99.9988 99.5135 99.4 99.9923 95.8288 99.6693 99.9493 99.7481
H-12	99.30960083007812	for ( Iterator < Integer > x : arr ) {
P-12	99.9988 95.9747 99.8967 99.1378 99.9618 98.5551 99.7253 99.8101 99.4877 99.9605 99.4893
H-12	99.29973895733173	for ( Integer [ ] arr : arr . arr ) {
P-12	99.9988 99.5135 97.5586 99.9844 98.4359 99.9362 99.71 99.1488 97.5752 99.9578 99.9299 99.4303
H-12	99.29278971354167	if ( x != null ) { for ( Integer x : arr )
P-12	99.9967 97.6357 99.4739 99.9809 99.8035 99.9392 99.7066 99.9907 99.7101 99.5086 99.9936 99.6 99.5351 97.0947
H-12	99.2926025390625	for ( Integer x : arr . iterator ( ) )
P-12	99.9988 99.5135 99.4 99.9923 99.8038 99.1705 97.7365 99.9943 99.998 99.9993 96.187
H-12	99.28048940805289	for ( Integer [ ] x : arr . arr ) {
P-12	99.9988 99.5135 97.5586 99.9844 97.9391 99.9782 99.7523 99.2626 97.6234 99.9239 99.9466 99.448
H-12	99.2787841796875	} for ( Integer x : arr ) {
P-12	99.183 99.9975 99.4948 99.7211 99.9931 99.8775 99.7917 99.9758 99.7855
H-12	99.273681640625	for ( Integer < ? > x : arr ) {
P-12	99.9988 99.5135 95.7932 97.5785 99.9793 99.4227 99.9633 99.8153 99.7523 99.9726 99.7777
H-12	99.26611328125	for ( Integer < Object > x : arr ) {
P-12	99.9988 99.5135 95.7932 97.5407 99.9715 99.3296 99.9631 99.8391 99.7841 99.975 99.7676
H-12	99.26073279747597	for ( Integer [ ] arr : arr . x ) {
P-12	99.9988 99.5135 97.5586 99.9844 98.4359 99.9362 99.71 99.1488 97.043 99.9615 99.9373 99.4445
H-12	99.24994451349431	for ( int x : arr . arr ) {
P-12	99.9988 98.6432 98.6098 99.8287 99.7854 99.2075 96.7999 99.7259 99.9366 99.4963
H-12	99.24859149639423	for ( Integer [ ] x : arr . x ) {
P-12	99.9988 99.5135 97.5586 99.9844 97.9391 99.9782 99.7523 99.2626 97.1582 99.9749 99.9475 99.4465
H-12	99.2484463778409	for ( Integer x : arr . min ) {
P-12	99.9988 99.5135 99.4 99.9923 99.8038 99.1705 95.4359 99.3827 99.9431 99.375
H-12	99.2471590909091	for ( Integer x : arr . k ) {
P-12	99.9988 99.5135 99.4 99.9923 99.8038 99.1705 94.7016 99.9799 99.9487 99.4924
H-12	99.24640447443181	for ( int x : arr . x ) {
P-12	99.9988 98.6432 98.6098 99.8287 99.7854 99.2075 96.5876 99.9361 99.9555 99.4407
H-12	99.23851429332386	for ( int [ ] x : arr ) {
P-12	99.9988 98.6432 95.9012 99.9862 98.5895 99.9544 99.797 99.3684 99.9585 99.7093
H-12	99.2367451985677	for ( Iterator < String > x : arr ) {
P-12	99.9988 95.9747 99.8967 98.3363 99.9777 98.3902 99.6967 99.7997 99.5851 99.9678 99.5001
H-12	99.22454279119319	for ( Integer x : arr . start ) {
P-12	99.9988 99.5135 99.4 99.9923 99.8038 99.1705 95.1992 99.4037 99.9465 99.3243
H-12	99.22393243963069	else { for ( Integer x : arr ) {
P-12	99.9214 99.1156 99.9945 99.674 99.7092 99.9925 99.7609 99.6548 99.9467 99.6994
H-12	99.22041829427083	for ( Integer x : list ) {
P-12	99.9988 99.5135 99.4 99.9923 94.5766 99.966 99.953 99.8663
H-12	99.21819513494319	for ( int x : arr . length ) {
P-12	99.9988 98.6432 98.6098 99.8287 99.7854 99.2075 96.3624 99.9645 99.9604 99.3224
H-12	99.21323649088542	for ( Integer value : arr ) {
P-12	99.9988 99.5135 94.6346 99.9929 99.8206 99.4438 99.9632 99.8345
H-12	99.20189319957386	for ( int [ ] arr : arr ) {
P-12	99.9988 98.6432 95.9012 99.9862 98.1629 99.9354 99.7521 99.4952 99.9611 99.6674
H-12	99.20073784722223	for ( Integer name : arr ) {
P-12	99.9988 99.5135 94.6507 99.9925 99.7679 99.3405 99.9638 99.8617
H-12	99.19940740411931	for ( Integer [ ] 0 : arr ) {
P-12	99.9988 99.5135 97.5586 99.9844 96.2794 99.9518 99.7969 98.8405 99.9497 99.6028
H-12	99.1980868252841	for ( Integer $NUMBER$ ] arr : arr ) {
P-12	99.9988 99.5135 94.4814 99.6075 99.1278 99.8682 99.7066 99.6305 99.94 99.5876
H-12	99.1934814453125	for ( Integer k : arr ) {
P-12	99.9988 99.5135 94.5317 99.9851 99.8184 99.3911 99.9641 99.8214
H-12	99.19319291548295	try { for ( Integer x : arr ) {
P-12	99.9995 99.163 99.9962 99.6573 99.675 99.994 99.7231 99.646 99.9436 99.7374
H-12	99.19234890407986	for ( Integer x : $NUMBER$ ) {
P-12	99.9988 99.5135 99.4 99.9923 94.4414 99.9289 99.9629 99.7763
H-12	99.18202514648438	for ( Integer x : arr ) { }
P-12	99.9988 99.5135 99.4 99.9923 99.8038 99.416 99.9641 94.2712 99.7435
H-12	99.18100807883523	for ( Integer x : arr . out ) {
P-12	99.9988 99.5135 99.4 99.9923 99.8038 99.1705 94.9893 99.0255 99.9526 99.4276
H-12	99.17716064453126	for ( Integer x : arr ) { {
P-12	99.9988 99.5135 99.4 99.9923 99.8038 99.416 99.9641 94.2333 99.7326
H-12	99.17595880681819	for ( Integer x : arr . first ) {
P-12	99.9988 99.5135 99.4 99.9923 99.8038 99.1705 95.3045 98.8158 99.9571 99.262
H-12	99.17269134521484	for ( Integer x : arr )
P-12	99.9988 99.5135 99.4 99.9923 99.8038 99.416 95.54
H-12	99.15664333767361	for ( Object arr : arr ) {
P-12	99.9988 96.2331 97.3372 99.9861 99.7904 99.5656 99.9626 99.819
H-12	99.15300835503473	for ( int x : 0 ) {
P-12	99.9988 98.6432 98.6098 99.8287 96.196 99.7861 99.947 99.6503
H-12	99.13684760199652	for ( Integer element : arr ) {
P-12	99.9988 99.5135 93.9781 99.9918 99.7691 99.4377 99.9667 99.8588
H-12	99.13210720486111	for ( int k : arr ) {
P-12	99.9988 98.6432 95.1952 99.7469 99.7992 99.3782 99.9562 99.754
H-12	99.11490885416667	for ( String arr : arr ) {
P-12	99.9988 96.3654 96.8236 99.9873 99.7595 99.5866 99.9625 99.8334
H-12	99.10576171875	for ( Integer x : arr . arr )
P-12	99.9988 99.5135 99.4 99.9923 99.8038 99.1705 96.877 99.8442 96.7402
H-12	98.59498087565105	synchronized ( this ) {
P-12	99.9979 98.7166 99.9882 99.9977 97.3002
H-12	98.32638549804688	/ * * /
P-12	99.9176 99.1751 98.1519 98.8036
S-13	else if ( weight < j ) {
T-13	else if ( weight <= j ) {
H-13	99.6442138671875	} else if ( weight < j ) {
P-13	99.8318 99.8685 99.9981 99.447 99.7262 99.7266 99.7112 99.9452 98.9393
H-13	99.55313546316964	} else if ( weight < j && weight < j ) {
P-13	99.8318 99.8685 99.9981 99.447 99.7262 99.7266 97.9316 98.4713 99.1616 99.2011 99.8278 99.9673 101.3368
H-13	99.54340471540179	} else if ( weight < j || weight < j ) {
P-13	99.8318 99.8685 99.9981 99.447 99.7262 99.7266 97.3324 98.8667 99.1888 98.9786 99.8345 99.9731 101.5872
H-13	99.5327880859375	} else if ( weight < 0 ) {
P-13	99.8318 99.8685 99.9981 99.447 99.7262 98.2624 99.8878 99.9481 99.1097
H-13	99.5191650390625	} else if ( weight < j || weight < 0 ) {
P-13	99.8318 99.8685 99.9981 99.447 99.7262 99.7266 97.3324 98.8667 99.1888 98.4304 99.8848 99.9621 101.7567
H-13	99.50067138671875	} else if ( weight < j && weight == j ) {
P-13	99.8318 99.8685 99.9981 99.447 99.7262 99.7266 97.9316 98.4713 98.5601 99.1792 99.7697 99.974 101.2773
H-13	99.49912806919643	} else if ( weight < j && weight < 0 ) {
P-13	99.8318 99.8685 99.9981 99.447 99.7262 99.7266 97.9316 98.4713 99.1616 98.142 99.8844 99.9591 101.5913
H-13	99.49727957589286	} else if ( weight < j ) { weight += j ;
P-13	99.8318 99.8685 99.9981 99.447 99.7262 99.7266 99.7112 99.9452 97.6934 98.7481 99.1449 99.1682 100.7045
H-13	99.4884033203125	else if ( weight < j ) {
P-13	99.7324 99.9986 99.4112 99.8007 99.6423 99.665 99.9201 97.9427
H-13	99.48320661272321	} else if ( weight < j || weight == j ) {
P-13	99.8318 99.8685 99.9981 99.447 99.7262 99.7266 97.3324 98.8667 98.5441 99.0265 99.7303 99.9753 101.4431
H-13	99.48059760199652	} if ( weight < j ) {
P-13	97.7616 99.9928 99.6682 99.7582 99.7568 99.6621 99.8933 99.5842
H-13	99.4744873046875	} else if ( weight == j ) {
P-13	99.8318 99.8685 99.9981 99.447 97.9093 99.8138 99.6847 99.9442 98.9991
H-13	99.47340494791666	else if ( weight < j ) { weight ( weight ) ; }
P-13	99.7324 99.9986 99.4112 99.8007 99.6423 99.665 99.9201 98.0488 97.909 99.1254 99.4618 99.8978 99.6256 100.5798
H-13	99.46765950520833	} else if ( weight < j ) { break ; } else {
P-13	99.8318 99.8685 99.9981 99.447 99.7262 99.7266 99.7112 99.9452 95.8021 99.5988 99.6754 99.6681 97.8445 101.9232
H-13	99.4656005859375	} else if ( weight < j ) { weight += j ; }
P-13	99.8318 99.8685 99.9981 99.447 99.7262 99.7266 99.7112 99.9452 97.6934 98.7481 99.1449 99.1682 99.428 100.2986
H-13	99.46551920572917	else if ( weight < j ) { if ( weight < j )
P-13	99.7324 99.9986 99.4112 99.8007 99.6423 99.665 99.9201 97.5456 99.9835 99.0608 99.4978 99.201 99.7441 99.4969
H-13	99.46280110677084	} else if ( weight < j ) { weight ( weight ) ;
P-13	99.8318 99.8685 99.9981 99.447 99.7262 99.7266 99.7112 99.9452 97.6934 97.7405 99.2148 99.5916 99.9197 100.2791
H-13	99.46110026041667	else if ( weight < j ) { weight += j ; } else
P-13	99.7324 99.9986 99.4112 99.8007 99.6423 99.665 99.9201 98.0488 98.6838 99.1481 99.2755 99.466 99.46 100.3815
H-13	99.44936697823661	else if ( weight < j ) { weight += j ; }
P-13	99.7324 99.9986 99.4112 99.8007 99.6423 99.665 99.9201 98.0488 98.6838 99.1481 99.2755 99.466 100.2161
H-13	99.4490234375	else if ( weight < j ) { weight += j ; } }
P-13	99.7324 99.9986 99.4112 99.8007 99.6423 99.665 99.9201 98.0488 98.6838 99.1481 99.2755 99.466 98.6319 101.0284
H-13	99.44724934895834	} else if ( weight < j ) { weight += j ) ;
P-13	99.8318 99.8685 99.9981 99.447 99.7262 99.7266 99.7112 99.9452 97.6934 98.7481 99.1449 98.4889 99.6099 100.5207
H-13	99.4451904296875	} else if ( weight < j ) { break ; } else
P-13	99.8318 99.8685 99.9981 99.447 99.7262 99.7266 99.7112 99.9452 95.8021 99.5988 99.6754 99.6681 99.9855
H-13	99.44127604166667	} else if ( weight < j ) { weight += j ) {
P-13	99.8318 99.8685 99.9981 99.447 99.7262 99.7266 99.7112 99.9452 97.6934 98.7481 99.1449 98.4889 98.3674 101.6736
H-13	99.43387044270834	else if ( weight < 0 ) { if ( weight < j )
P-13	99.7324 99.9986 99.4112 99.8007 98.5383 99.8105 99.9232 97.6306 99.9818 99.0646 99.3805 99.6369 99.7508 99.5653
H-13	99.43379720052083	} else if ( weight < j ) { weight = j ) ;
P-13	99.8318 99.8685 99.9981 99.447 99.7262 99.7266 99.7112 99.9452 97.6934 98.9395 98.4768 98.6866 99.2666 100.9413
H-13	99.43157958984375	} else if ( j < j ) {
P-13	99.8318 99.8685 99.9981 97.554 99.5763 99.6677 99.7107 99.9345 98.9259
H-13	99.42055935329861	else if ( weight < 0 ) {
P-13	99.7324 99.9986 99.4112 99.8007 98.5383 99.8105 99.9232 98.2875
H-13	99.40790349786931	} else if ( weight < j ) { {
P-13	99.8318 99.8685 99.9981 99.447 99.7262 99.7266 99.7112 99.9452 96.9611 99.0231
H-13	99.40371268136161	} else if ( weight < j ) { break ; } }
P-13	99.8318 99.8685 99.9981 99.447 99.7262 99.7266 99.7112 99.9452 95.8021 99.5988 99.6754 98.3055 100.7674
H-13	99.40202985491071	} else if ( weight < j ) { weight += j {
P-13	99.8318 99.8685 99.9981 99.447 99.7262 99.7266 99.7112 99.9452 97.6934 98.7481 99.1449 98.4893 100.0499
H-13	99.40080915178571	} else if ( weight < j ) { weight = 0 ;
P-13	99.8318 99.8685 99.9981 99.447 99.7262 99.7266 99.7112 99.9452 97.6934 98.9395 97.2723 99.7436 100.4599
H-13	99.38580932617188	} else if ( weight != j ) {
P-13	99.8318 99.8685 99.9981 99.447 96.928 99.6971 99.716 99.9429 99.1805
H-13	99.38364083426339	} else if ( weight < j ) { continue ; } else
P-13	99.8318 99.8685 99.9981 99.447 99.7262 99.7266 99.7112 99.9452 95.1288 99.4786 99.6114 99.8057 99.8437
H-13	99.37720598493304	} else if ( weight < j ) { j ++ ; }
P-13	99.8318 99.8685 99.9981 99.447 99.7262 99.7266 99.7112 99.9452 95.6377 98.2633 99.6289 99.5761 100.6721
H-13	99.37424723307292	} else if ( weight < j )
P-13	99.8318 99.8685 99.9981 99.447 99.7262 99.7266 99.7112 96.8106
H-13	99.36825125558036	} else if ( weight < j ) { weight -- ; }
P-13	99.8318 99.8685 99.9981 99.447 99.7262 99.7266 99.7112 99.9452 97.6934 96.8821 98.9715 99.3937 100.712
H-13	99.366943359375	} else if ( weight < j ) { return j ; }
P-13	99.8318 99.8685 99.9981 99.447 99.7262 99.7266 99.7112 99.9452 95.9451 98.4308 99.1807 99.855 100.2227
H-13	99.36653355189732	else if ( weight < j ) { weight ( weight ) ;
P-13	99.7324 99.9986 99.4112 99.8007 99.6423 99.665 99.9201 98.0488 97.909 99.1254 99.4618 99.8978 99.2359
H-13	99.36521693638393	} else if ( weight < j ) { weight += 0 ;
P-13	99.8318 99.8685 99.9981 99.447 99.7262 99.7266 99.7112 99.9452 97.6934 98.7481 96.982 99.6331 100.5536
H-13	99.36386544363839	} else if ( weight == j ) { weight += j ;
P-13	99.8318 99.8685 99.9981 99.447 97.9093 99.8138 99.6847 99.9442 97.7262 98.6828 99.2487 99.1475 100.5432
H-13	99.35587855747768	else if ( weight < 0 ) { weight += j ; }
P-13	99.7324 99.9986 99.4112 99.8007 98.5383 99.8105 99.9232 97.9284 98.6348 99.1707 99.1241 99.4509 100.1759
H-13	99.35552978515625	} else if ( weight < j ) { weight = j ;
P-13	99.8318 99.8685 99.9981 99.447 99.7262 99.7266 99.7112 99.9452 97.6934 98.9395 98.4768 97.9561 100.4088
H-13	99.35022844587054	} else if ( weight < j ) { weight += weight ;
P-13	99.8318 99.8685 99.9981 99.447 99.7262 99.7266 99.7112 99.9452 97.6934 98.7481 98.4232 98.2045 100.3312
H-13	99.34711565290179	} else if ( weight < 0 ) { weight += j ;
P-13	99.8318 99.8685 99.9981 99.447 99.7262 98.2624 99.8878 99.9481 97.5592 98.6169 99.1475 98.9971 100.3207
H-13	99.34511021205357	else if ( weight < j ) { weight += j ) ;
P-13	99.7324 99.9986 99.4112 99.8007 99.6423 99.665 99.9201 98.0488 98.6838 99.1481 98.2701 99.5909 99.6369
H-13	99.34438254616477	} else { if ( weight < j ) {
P-13	99.8318 97.6563 99.0397 99.9967 99.4645 99.7231 99.8273 99.6205 99.9163 98.4638
H-13	99.34272984095982	else if ( weight < j ) { break ; } } else
P-13	99.7324 99.9986 99.4112 99.8007 99.6423 99.665 99.9201 95.7257 99.6043 99.7815 98.8624 99.6844 99.6871
H-13	99.34048461914062	else if ( weight < j )
P-13	99.7324 99.9986 99.4112 99.8007 99.6423 99.665 97.1911
H-13	99.33868408203125	} else if ( weight < j ) { j += j ;
P-13	99.8318 99.8685 99.9981 99.447 99.7262 99.7266 99.7112 99.9452 95.6377 99.1607 99.1715 99.1012 100.1676
H-13	99.33727010091145	} else if ( weight < j ) { else {
P-13	99.8318 99.8685 99.9981 99.447 99.7262 99.7266 99.7112 99.9452 96.4936 99.2571 98.7937
H-13	99.33698381696429	} else if ( weight < j ) { weight = j {
P-13	99.8318 99.8685 99.9981 99.447 99.7262 99.7266 99.7112 99.9452 97.6934 98.9395 98.4768 97.9686 100.1366
H-13	99.32878766741071	} else if ( weight < 0 ) { break ; } else
P-13	99.8318 99.8685 99.9981 99.447 99.7262 98.2624 99.8878 99.9481 95.6496 99.5388 99.6813 99.7604 99.7548
H-13	99.3284403483073	} else if ( weight < j - 1 ) {
P-13	99.8318 99.8685 99.9981 99.447 99.7262 99.7266 95.5459 99.635 99.8877 99.9732 99.053
H-13	99.32684326171875	} if ( weight < 0 ) {
P-13	97.7616 99.9928 99.6682 99.7582 98.1304 99.8393 99.8884 99.6545
H-13	99.31867065429688	} else if ( weight >= j ) {
P-13	99.8318 99.8685 99.9981 99.447 96.262 99.7466 99.7953 99.9494 99.0397
H-13	99.31807861328124	} else if ( weight == 0 ) {
P-13	99.8318 99.8685 99.9981 99.447 97.9093 97.9068 99.8689 99.95 99.1521
H-13	99.3150146484375	} else if ( j < 0 ) {
P-13	99.8318 99.8685 99.9981 97.554 99.5763 98.2496 99.8903 99.9449 98.9884
H-13	99.31372680664063	} else if ( weight < 1 ) {
P-13	99.8318 99.8685 99.9981 99.447 99.7262 96.0925 99.8546 99.9464 99.1239
H-13	99.31233433314732	else if ( weight < j ) { weight = 0 ; }
P-13	99.7324 99.9986 99.4112 99.8007 99.6423 99.665 99.9201 98.0488 98.8649 97.2477 99.7627 99.2882 99.7076
H-13	99.3118563565341	} else if ( weight < j ) { else
P-13	99.8318 99.8685 99.9981 99.447 99.7262 99.7266 99.7112 99.9452 96.4936 98.434
H-13	99.30766950334821	else if ( weight < 0 ) { weight = 0 ; }
P-13	99.7324 99.9986 99.4112 99.8007 98.5383 99.8105 99.9232 97.9284 98.8787 98.1279 99.7321 99.3269 99.8159
H-13	99.30531529017857	} else if ( weight < j ) { weight += weight {
P-13	99.8318 99.8685 99.9981 99.447 99.7262 99.7266 99.7112 99.9452 97.6934 98.7481 98.4232 98.8712 99.0357
H-13	99.3005859375	else { if ( weight < j ) {
P-13	98.3536 99.303 99.997 99.5062 99.6472 99.8164 99.6198 99.9209 97.559
H-13	99.3001953125	else if ( weight < j ) { {
P-13	99.7324 99.9986 99.4112 99.8007 99.6423 99.665 99.9201 97.2101 98.339
H-13	99.29781668526786	else if ( weight < j ) { weight += weight ) ;
P-13	99.7324 99.9986 99.4112 99.8007 99.6423 99.665 99.9201 98.0488 98.6838 98.3116 98.4436 99.4934 99.7353
H-13	99.29680524553571	else if ( weight < 0 ) { weight ( weight ) ;
P-13	99.7324 99.9986 99.4112 99.8007 98.5383 99.8105 99.9232 97.9284 97.9778 99.0976 99.4466 99.8976 99.3098
H-13	99.28968302408855	} else if ( weight < j < 1 ) {
P-13	99.8318 99.8685 99.9981 99.447 99.7262 99.7266 95.8127 98.8568 99.8381 99.9703 99.1517
H-13	99.27850896661931	} else if ( weight < 0 ) { {
P-13	99.8318 99.8685 99.9981 99.447 99.7262 98.2624 99.8878 99.9481 96.8281 99.0173
H-13	99.27760823567708	} else if ( weight < j < j ) {
P-13	99.8318 99.8685 99.9981 99.447 99.7262 99.7266 95.8127 98.9557 99.7098 99.9569 99.0497
H-13	99.27725219726562	} else if ( weight > j ) {
P-13	99.8318 99.8685 99.9981 99.447 95.9324 99.7208 99.8251 99.9534 98.9472
H-13	99.27375623914931	} if ( weight == j ) {
P-13	97.7616 99.9928 99.6682 97.7841 99.8253 99.6556 99.8932 99.635
H-13	99.27340087890624	} else if ( weight != 0 ) {
P-13	99.8318 99.8685 99.9981 99.447 96.928 98.3478 99.8575 99.948 99.259
H-13	99.26177978515625	} else if ( j == j ) {
P-13	99.8318 99.8685 99.9981 97.554 97.9864 99.644 99.6987 99.946 98.8419
H-13	99.25532362196181	else if ( j < j ) {
P-13	99.7324 99.9986 97.4325 99.6613 99.5905 99.6929 99.909 97.9981
H-13	99.253369140625	} } if ( weight < j ) {
P-13	95.3891 99.4059 99.9943 99.6553 99.6008 99.802 99.7478 99.9175 99.7728
H-13	99.24946732954545	} else if ( weight < - 1 ) {
P-13	99.8318 99.8685 99.9981 99.447 99.7262 95.0361 99.6419 99.9389 99.9416 99.0659
H-13	99.24554443359375	} else if ( weight <= j ) {
P-13	99.8318 99.8685 99.9981 99.447 95.6416 99.7538 99.7634 99.9461 98.9568
H-13	99.24041193181819	} else if ( weight == j ) { {
P-13	99.8318 99.8685 99.9981 99.447 97.9093 99.8138 99.6847 99.9442 96.964 98.9348
H-13	99.23738861083984	if ( weight < j ) {
P-13	99.9906 99.6383 99.6581 99.693 99.644 99.8882 98.8946
H-13	99.22803412543402	else if ( weight == j ) {
P-13	99.7324 99.9986 99.4112 97.4999 99.7033 99.5935 99.9224 97.9084
H-13	99.22630004882812	else if ( weight < j ) { else
P-13	99.7324 99.9986 99.4112 99.8007 99.6423 99.665 99.9201 96.5301 98.28
H-13	99.22409057617188	} else if ( i < j ) {
P-13	99.8318 99.8685 99.9981 95.9093 99.7134 99.5063 99.6143 99.9075 98.6434
H-13	99.22025146484376	} else if ( j >= j ) {
P-13	99.8318 99.8685 99.9981 97.554 97.35 99.6329 99.7766 99.9428 98.9996
H-13	99.21998180042614	else if ( weight < j - 1 ) {
P-13	99.7324 99.9986 99.4112 99.8007 99.6423 95.5609 99.6369 99.8954 99.9709 98.4881
H-13	99.2176513671875	} else if ( weight < 0 )
P-13	99.8318 99.8685 99.9981 99.447 99.7262 98.2624 99.8878 96.6888
H-13	99.20687866210938	else if ( weight < 0 )
P-13	99.7324 99.9986 99.4112 99.8007 98.5383 99.8105 97.0808
H-13	99.20673828125	} else if ( weight < $NUMBER$ ) {
P-13	99.8318 99.8685 99.9981 99.447 99.7262 95.0118 99.9093 99.9433 99.0832
H-13	99.19068739149306	} if ( j < j ) {
P-13	97.7616 99.9928 97.2934 99.6254 99.637 99.7025 99.8791 99.5763
H-13	99.18404134114583	} else if ( weight == j )
P-13	99.8318 99.8685 99.9981 99.447 97.9093 99.8138 99.6847 96.8548
H-13	99.17450629340277	else if ( j < 0 ) {
P-13	99.7324 99.9986 97.4325 99.6613 98.5877 99.8448 99.9212 98.1094
H-13	99.16590033637152	} if ( weight != j ) {
P-13	97.7616 99.9928 99.6682 96.8769 99.7327 99.6793 99.8997 99.6339
H-13	99.16195339626736	} else if ( j < j )
P-13	99.8318 99.8685 99.9981 97.554 99.5763 99.6677 99.7107 97.0022
H-13	99.15992736816406	} if ( weight < j )
P-13	97.7616 99.9928 99.6682 99.7582 99.7568 99.6621 97.4315
H-13	99.11514282226562	if ( weight < 0 ) {
P-13	99.9906 99.6383 99.6581 98.3579 99.8031 99.9021 99.0786
H-13	99.08940124511719	else if ( j < j )
P-13	99.7324 99.9986 97.4325 99.6613 99.5905 99.6929 97.3243
H-13	98.17926025390625	} else {
P-13	99.8318 97.6563 95.9807
H-13	97.44039916992188	else {
P-13	98.3536 94.6849
H-13	97.4178975423177	} else
P-13	99.8318 93.1737
H-13	96.37117004394531	else
P-13	93.4596
H-13	95.53634643554688	}
P-13	91.8245
S-14	return kth ( above , k ) ;
T-14	return kth ( above , k - num _ less@@ o@@ req ) ;
H-14	99.77408854166667	return kth ( above , k ) ;
P-14	99.8143 99.9139 99.5709 99.9475 99.4274 99.9231 99.9668 99.6424
H-14	99.64778442382813	return kth ( above , k ) ; }
P-14	99.8143 99.9139 99.5709 99.9475 99.4274 99.9231 99.9668 98.6028 99.5505
H-14	99.529296875	return kth ( kth ( above , k ) ) ;
P-14	99.8143 99.9139 97.2693 99.6293 99.209 99.8846 99.1231 99.9396 99.8822 99.9912 99.9345
H-14	99.46731228298611	return kth ( above , 0 ) ;
P-14	99.8143 99.9139 99.5709 99.9475 96.7657 99.7063 99.9755 99.7512
H-14	99.4500399502841	return kth ( above , k , k ) ;
P-14	99.8143 99.9139 99.5709 99.9475 99.4274 97.2805 98.5589 99.8512 99.9847 99.8407
H-14	99.4114990234375	throw new Runtime CaMeL Exception ( $STRING$ ) ;
P-14	99.872 99.3123 99.9917 99.8843 99.9986 99.6391 99.48 99.9886 99.9639
H-14	99.40206909179688	return kth ( kth ( above , 0 ) ) ;
P-14	99.8143 99.9139 97.2693 99.6293 99.209 99.8846 97.9136 99.6693 99.821 99.9916 99.9484
H-14	99.3840664950284	{ return kth ( above , k ) ; }
P-14	99.2733 99.8263 99.9394 99.7293 99.9551 99.5715 99.9348 99.9753 99.5468 99.2529
H-14	99.37669067382812	return kth kth ( above , k ) ;
P-14	99.8143 95.3259 99.9373 99.645 99.9617 99.6186 99.9282 99.9756 99.7996
H-14	99.37639825994319	return kth ( above , 0 , k ) ;
P-14	99.8143 99.9139 99.5709 99.9475 96.7657 98.6207 98.9366 99.9378 99.9791 99.8933
H-14	99.37227376302083	throw new Runtime CaMeL Exception ( $STRING$ + k ) ;
P-14	99.872 99.3123 99.9917 99.8843 99.9986 99.6391 98.9949 99.2472 99.637 99.9892 99.9164
H-14	99.36905246310764	return kth ( above , 1 ) ;
P-14	99.8143 99.9139 99.5709 99.9475 95.8775 99.7434 99.9745 99.719
H-14	99.36500133167614	return kth return kth ( above , k ) ;
P-14	99.8143 95.2358 99.7012 99.8022 99.5919 99.9367 99.397 99.928 99.9568 99.8905
H-14	99.35001918247768	return kth ( above ) ;
P-14	99.8143 99.9139 99.5709 96.5065 99.9732 99.9108
H-14	99.34686834161931	return kth ( above . size ( ) ) ;
P-14	99.8143 99.9139 99.5709 95.6629 99.3674 99.9794 99.9981 98.8096 99.9735 99.9649
H-14	99.338134765625	return kth ( above , $NUMBER$ ) ;
P-14	99.8143 99.9139 99.5709 99.9475 95.6391 99.7471 99.9732 99.6768
H-14	99.31751098632813	{ return kth ( above , k ) ;
P-14	99.2733 99.8263 99.9394 99.7293 99.9551 99.5715 99.9348 99.9753 98.7501
H-14	99.31739501953125	return kth ( above , 0 ) ; }
P-14	99.8143 99.9139 99.5709 99.9475 96.7657 99.7063 99.9755 98.2319 99.4875
H-14	99.31365411931819	return kth ( above , k , kth ) ;
P-14	99.8143 99.9139 99.5709 99.9475 99.4274 97.2805 97.6814 99.2154 99.9899 99.8486
H-14	99.3103535970052	return ( Integer ) kth ( above , k ) ;
P-14	95.8408 99.1125 99.6391 99.3263 99.9008 99.5746 99.9141 99.1849 99.9638 99.9791 99.5279
H-14	99.3096211751302	throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
P-14	99.872 97.9545 99.9953 98.5956 99.9961 99.8848 99.9986 99.6628 99.8047 99.9919 99.9745
H-14	99.30947043678977	return kth ( above , k , above ) ;
P-14	99.8143 99.9139 99.5709 99.9475 99.4274 97.2805 97.1517 99.6642 99.9872 99.8861
H-14	99.30222574869792	return kth ( kth ( above ) , k ) ;
P-14	99.8143 99.9139 97.2693 99.6293 99.209 97.6847 99.0791 99.4475 99.9701 99.9866 99.8622
H-14	99.27765502929688	return kth ( above , k ) ; ;
P-14	99.8143 99.9139 99.5709 99.9475 99.4274 99.9231 99.9668 94.5265 99.9256
H-14	99.27668900923295	return kth ( above , k ) ; } else
P-14	99.8143 99.9139 99.5709 99.9475 99.4274 99.9231 99.9668 98.6028 98.523 96.5933
H-14	99.2761563387784	return kth ( above , k ) ; break ;
P-14	99.8143 99.9139 99.5709 99.9475 99.4274 99.9231 99.9668 94.1084 99.9649 99.6399
H-14	99.27593439275569	return kth ( above , k , $NUMBER$ ) ;
P-14	99.8143 99.9139 99.5709 99.9475 99.4274 97.2805 96.6289 99.8591 99.9864 99.8461
H-14	99.27020818536931	return kth ( above , size , k ) ;
P-14	99.8143 99.9139 99.5709 99.9475 94.9688 99.1628 99.0494 99.9436 99.9779 99.8626
H-14	99.26899857954545	return kth ( above , 1 , k ) ;
P-14	99.8143 99.9139 99.5709 99.9475 95.8775 98.4995 98.7867 99.937 99.9787 99.8726
H-14	99.26248508029514	return kth ( k , k ) ;
P-14	99.8143 99.9139 95.3807 99.465 99.5163 99.941 99.9708 99.5999
H-14	99.26060180664062	return kth ( kth ( above ) ) ;
P-14	99.8143 99.9139 97.2693 99.6293 99.209 97.6847 99.379 99.9812 99.9647
H-14	99.25960083007813	return return kth ( above , k ) ;
P-14	94.4455 99.6156 99.8615 99.6797 99.9309 99.621 99.9432 99.9448 99.7933
H-14	99.250048828125	return kth ( above , - 1 ) ;
P-14	99.8143 99.9139 99.5709 99.9475 94.7219 98.9985 99.8284 99.9838 99.9608
H-14	99.24822443181819	return kth ( above , k ) ; * /
P-14	99.8143 99.9139 99.5709 99.9475 99.4274 99.9231 99.9668 94.0907 99.442 99.8733
H-14	99.2453857421875	return kth ( above , 1 ) ; }
P-14	99.8143 99.9139 99.5709 99.9475 95.8775 99.7434 99.9745 98.3456 99.5058
H-14	99.24301979758523	return kth ( above , k ) ; } ;
P-14	99.8143 99.9139 99.5709 99.9475 99.4274 99.9231 99.9668 98.6028 94.9386 99.8072
H-14	99.23908025568181	return kth ( above , start , k ) ;
P-14	99.8143 99.9139 99.5709 99.9475 94.8456 99.4799 98.5151 99.9216 99.9792 99.8813
H-14	99.23696067116477	return kth ( above , first , k ) ;
P-14	99.8143 99.9139 99.5709 99.9475 94.2955 99.3371 99.2094 99.923 99.9771 99.8575
H-14	99.23674180772569	throw new Runtime CaMeL Exception ( ) ;
P-14	99.872 99.3123 99.9917 99.8843 99.9986 98.4264 99.9232 99.7376
H-14	99.2347412109375	return kth ( above , above , k ) ;
P-14	99.8143 99.9139 99.5709 99.9475 94.8428 99.5127 98.4142 99.9525 99.9827 99.87
H-14	99.23259887695312	return kth ( above , $NUMBER$ ) ; }
P-14	99.8143 99.9139 99.5709 99.9475 95.6391 99.7471 99.9732 98.4669 99.4926
H-14	99.2253750887784	return kth ( above , k ) ; } }
P-14	99.8143 99.9139 99.5709 99.9475 99.4274 99.9231 99.9668 98.6028 95.9412 98.6106
H-14	99.21832885742188	return kth ( kth ( k ) ) ;
P-14	99.8143 99.9139 97.2693 99.6293 96.8198 99.4613 99.5783 99.983 99.9535
H-14	99.21748490767045	return kth ( above , $NUMBER$ , k ) ;
P-14	99.8143 99.9139 99.5709 99.9475 95.6391 98.4802 98.4449 99.9577 99.9818 99.8816
H-14	99.21626420454545	return kth ( above , k , 1 ) ;
P-14	99.8143 99.9139 99.5709 99.9475 99.4274 97.2805 95.9674 99.8551 99.9865 99.8549
H-14	99.21000532670455	return kth kth ( above , k ) ; }
P-14	99.8143 95.3259 99.9373 99.645 99.9617 99.6186 99.9282 99.9756 97.9692 99.3736
H-14	99.20534939236111	return kth ( $NUMBER$ , k ) ;
P-14	99.8143 99.9139 94.5019 99.806 99.4379 99.9458 99.9656 99.7022
H-14	99.20241088867188	result = kth ( above , k ) ;
P-14	99.6303 99.6833 99.9414 99.7509 99.9643 99.583 99.9326 99.9714 98.9778
H-14	99.20228881835938	return kth ( k , k ) ; }
P-14	99.8143 99.9139 95.3807 99.465 99.5163 99.941 99.9708 98.675 99.5854
H-14	99.19463556463069	return ( Integer ) above . size ( ) ;
P-14	95.8408 99.1125 99.6391 98.069 99.8649 99.0619 99.9927 99.9986 99.9057 99.8954
H-14	99.19102894176136	return kth ( above , k , 0 ) ;
P-14	99.8143 99.9139 99.5709 99.9475 99.4274 97.2805 95.7052 99.8153 99.9871 99.8788
H-14	99.18076578776042	return kth ( above , above ) ;
P-14	99.8143 99.9139 99.5709 99.9475 94.8428 99.019 99.9697 99.7883
H-14	99.1793212890625	return kth ( above , k + 1 ) ;
P-14	99.8143 99.9139 99.5709 99.9475 99.4274 94.1473 98.9152 99.6101 99.9863 99.8792
H-14	99.17499457465277	return kth ( kth , k ) ;
P-14	99.8143 99.9139 97.2693 97.168 99.24 99.9254 99.9515 99.5319
H-14	99.17332874644886	return kth ( above , k ) + k ;
P-14	99.8143 99.9139 99.5709 99.9475 99.4274 99.9231 94.6257 98.1334 99.902 99.8878
H-14	99.1673251065341	result = kth ( above , k ) ; }
P-14	99.6303 99.6833 99.9414 99.7509 99.9643 99.583 99.9326 99.9714 98.6603 99.1339
H-14	99.16637073863636	return kth ( above , 0 , 0 ) ;
P-14	99.8143 99.9139 99.5709 99.9475 96.7657 98.6207 97.2943 99.2398 99.9844 99.918
H-14	99.16311306423611	return kth ( above , size ) ;
P-14	99.8143 99.9139 99.5709 99.9475 94.9688 98.7181 99.9858 99.7881
H-14	99.15367296006944	return kth ( above , start ) ;
P-14	99.8143 99.9139 99.5709 99.9475 94.8456 98.8737 99.9778 99.6788
H-14	99.15241088867188	return kth ( above , - k ) ;
P-14	99.8143 99.9139 99.5709 99.9475 94.7219 97.9254 99.9447 99.9778 99.9472
H-14	99.1462069424716	return kth ( above , 0 , above ) ;
P-14	99.8143 99.9139 99.5709 99.9475 96.7657 98.6207 96.9566 99.3583 99.9861 99.9137
H-14	99.14277787642045	return return kth ( above , k ) ; }
P-14	94.4455 99.6156 99.8615 99.6797 99.9309 99.621 99.9432 99.9448 98.1345 99.6334
H-14	99.14216918945313	kth ( above , k ) ; break ;
P-14	99.7873 99.565 99.9593 99.45 99.9146 99.9815 97.0488 99.9655 99.5448
H-14	99.13876953125	return above . to CaMeL Array ( ) ;
P-14	96.9874 98.1924 97.7934 99.9024 99.465 99.9399 99.6184 99.9479 99.7804
H-14	99.13608127170139	break kth ( above , k ) ;
P-14	98.7383 99.8299 99.5225 99.9707 99.297 99.9146 99.9792 99.4886
H-14	99.13536987304687	return kth ( kth , k ) ; }
P-14	99.8143 99.9139 97.2693 97.168 99.24 99.9254 99.9515 98.7198 99.5908
H-14	99.13501739501953	kth ( above , k ) ;
P-14	99.7873 99.565 99.9593 99.45 99.9146 99.9815 98.2175
H-14	99.13295288085938	return kth ( above ( k ) ) ;
P-14	99.8143 99.9139 99.5709 94.038 98.8522 99.7707 99.6545 99.9904 99.964
H-14	99.13053588867187	throw new Runtime CaMeL Exception ( k ) ;
P-14	99.872 99.3123 99.9917 99.8843 99.9986 96.7045 99.6137 99.9925 99.9512
H-14	99.12944200303819	return kth ( true , k ) ;
P-14	99.8143 99.9139 93.8807 99.8399 99.3593 99.9309 99.9645 99.7009
H-14	99.12508544921874	throw new Runtime CaMeL Exception ( ) ; }
P-14	99.872 99.3123 99.9917 99.8843 99.9986 98.4264 99.9232 98.4257 99.4321
H-14	99.12417263454861	return kth ( above , first ) ;
P-14	99.8143 99.9139 99.5709 99.9475 94.2955 99.1694 99.9804 99.6652
H-14	99.119873046875	return above . size ( ) ;
P-14	96.9874 98.1924 98.8347 99.9868 99.9969 99.2326 99.9676
H-14	99.1149169921875	return kth ( above , k ) ; else
P-14	99.8143 99.9139 99.5709 99.9475 99.4274 99.9231 99.9668 94.3383 98.4864
H-14	99.11328125	return kth ( $NUMBER$ , k ) ; }
P-14	99.8143 99.9139 94.5019 99.806 99.4379 99.9458 99.9656 98.4349 99.552
H-14	99.11001586914062	break kth ( above , k ) ; }
P-14	98.7383 99.8299 99.5225 99.9707 99.297 99.9146 99.9792 98.8042 99.56
H-14	99.10513644748264	return above ( above , k ) ;
P-14	96.9874 97.5462 99.0836 99.5264 99.3609 99.9458 99.9503 99.785
H-14	99.10292561848958	return kth ( above , false ) ;
P-14	99.8143 99.9139 99.5709 99.9475 93.491 99.7862 99.9737 99.6684
H-14	99.10280936104911	return kth ( k ) ;
P-14	99.8143 99.9139 95.3807 99.069 99.9679 99.8133
H-14	99.08917914496527	return kth ( false , k ) ;
P-14	99.8143 99.9139 93.6349 99.7474 99.3401 99.9288 99.9647 99.6981
H-14	99.08051215277777	return kth ( above , out ) ;
P-14	99.8143 99.9139 99.5709 99.9475 93.758 99.1886 99.9808 99.79
H-14	99.06560601128473	return kth ( above , length ) ;
P-14	99.8143 99.9139 99.5709 99.9475 93.9875 98.8041 99.9817 99.81
H-14	99.06064860026042	return kth ( out , k ) ;
P-14	99.8143 99.9139 93.2076 99.9763 99.4614 99.8974 99.9574 99.557
H-14	99.05929226345486	return kth ( 0 , k ) ;
P-14	99.8143 99.9139 93.2665 99.7751 99.4034 99.9256 99.9661 99.7082
H-14	99.05430603027344	return above . next ( ) ;
P-14	96.9874 98.1924 97.7824 99.9044 99.8816 99.981 99.9448
H-14	99.05293782552083	return kth ( above , true ) ;
P-14	99.8143 99.9139 99.5709 99.9475 93.1057 99.7378 99.9701 99.6557
H-14	99.05042860243056	return kth ( above , value ) ;
P-14	99.8143 99.9139 99.5709 99.9475 93.139 99.5477 99.9791 99.7808
H-14	99.04031032986111	return kth ( above , max ) ;
P-14	99.8143 99.9139 99.5709 99.9475 95.4403 97.2094 99.9894 99.7165
H-14	99.033203125	kth ( above , k ) ; }
P-14	99.7873 99.565 99.9593 99.45 99.9146 99.9815 97.1943 99.2418
H-14	99.01189422607422	return kth ( above ) ; }
P-14	99.8143 99.9139 99.5709 96.5065 99.9732 97.052 99.5038
H-14	98.99598039899554	return kth ( kth ) ;
P-14	99.8143 99.9139 97.2693 96.4528 99.9048 99.8561
H-14	98.94855499267578	return kth ( k ) ; }
P-14	99.8143 99.9139 95.3807 99.069 99.9679 98.0098 99.6723
H-14	98.86220877511161	return kth ( $NUMBER$ ) ;
P-14	99.8143 99.9139 94.5019 98.2114 99.9694 99.864
H-14	98.71071370442708	return kth ( ) ;
P-14	99.8143 99.9139 93.1101 99.9481 99.7174
H-14	98.6124267578125	return kth above ;
P-14	99.8143 94.0589 99.5872 99.8412
H-14	98.47822265625	return above ; }
P-14	96.9874 99.4236 97.3412 98.8783
H-14	98.398486328125	return kth ) ;
P-14	99.8143 92.5506 99.9384 99.9286
H-14	98.36817626953125	return above ) ;
P-14	96.9874 95.5145 99.691 99.8873
H-14	98.27520751953125	return above ;
P-14	96.9874 99.4236 96.9292
H-14	97.20726521809895	break ;
P-14	99.3705 96.7675
S-15	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i ) ; int insert _ value = dp . get ( i - 1 ) . get ( j ) + 1 ;
T-15	if ( dp . contains CaMeL Key ( i - 1 ) && dp . get ( i - 1 ) . contains CaMeL Key ( j - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i ) ; int insert _ value = dp . get ( i - 1 ) . get ( j - 1 ) + 1 ;
H-15	99.93382161458334	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) . get ( j ) ; int insert _ value = dp . get ( i - 1 ) . get ( j ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 98.8708 99.9556 99.9426 99.5858 99.8371 99.0389 99.4219 99.8534 99.879 99.9859 99.995 99.9139 99.9968 99.9866 99.9938 99.9513 99.8768 99.9978 99.9989 99.8405 99.9775 99.9958 99.8786 99.7595 99.7482 99.8792 99.9433 102.8254
H-15	99.92893932711694	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) . get ( j ) + 1 ; int insert _ value = dp . get ( i - 1 ) . get ( j ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 98.8708 99.9556 99.9426 99.5858 99.8371 99.4713 99.9237 99.9536 98.8983 99.8613 99.8715 99.9855 99.9926 99.8769 99.9963 99.9844 99.9915 99.9472 99.8738 99.9976 99.9989 99.3576 99.9514 99.9935 99.8598 99.7272 99.87 99.9293 99.9571 103.0331
H-15	99.91918501420454	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) . get ( j ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 99.5195 99.5905 99.9317 99.9029 99.9871 99.9934 99.9397 99.9973 99.9868 99.9937 99.9475 99.8822 99.9978 99.9986 99.5558 99.9706 99.9172 99.9487 99.8155 99.8514 99.9164 99.9559 99.8563
H-15	99.91849772135417	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) . get ( i ) ; int insert _ value = dp . get ( i - 1 ) . get ( j ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 98.8708 99.9556 99.9426 98.7621 99.7572 98.9453 99.4486 99.8518 99.8781 99.9856 99.995 99.9137 99.9968 99.9869 99.9937 99.9493 99.8649 99.9977 99.999 99.8329 99.9778 99.9958 99.9103 99.794 99.7644 99.8751 99.9499 102.8166
H-15	99.9176537298387	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) . get ( i ) + 1 ; int insert _ value = dp . get ( i - 1 ) . get ( j ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 98.8708 99.9556 99.9426 98.7621 99.7572 99.5401 99.9244 99.9598 98.9125 99.8597 99.8644 99.9846 99.9928 99.8722 99.9962 99.9846 99.9918 99.9439 99.8635 99.9975 99.9989 99.4579 99.9567 99.9937 99.8888 99.7555 99.8618 99.9247 99.9605 103.0214
H-15	99.91681105090726	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 99.5195 99.5905 99.9317 99.9029 99.9871 99.9934 99.9397 99.9973 99.9868 99.9937 99.9475 99.8822 99.9978 99.9986 98.6401 99.2046 99.9514 99.9584 99.9921 99.9895 99.9136 99.997 99.9827 99.9967 99.9006 99.8592 99.997 99.9984 98.7207 101.9721
H-15	99.9086205267137	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) . get ( j - 1 ) ; int insert _ value = dp . get ( i - 1 ) . get ( j ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 98.8708 99.9556 99.9426 99.5858 97.9131 99.9906 99.9978 99.1582 99.3187 99.9426 99.9081 99.9907 99.9918 99.9306 99.9968 99.9851 99.9941 99.9547 99.8857 99.9976 99.9989 99.8648 99.9782 99.9959 99.8549 99.6488 99.7587 99.8686 99.9328 103.0223
H-15	99.90858114919355	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) . get ( j - 1 ) . get ( j ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 99.5195 99.5905 99.9317 99.9029 99.9871 99.9934 99.9397 99.9973 99.9868 99.9937 99.9475 99.8822 99.9978 99.9986 99.5558 99.9706 99.9172 99.9487 97.5588 99.981 99.9968 98.4964 99.9577 99.996 99.8661 99.6454 99.7639 99.9265 99.957 103.0268
H-15	99.90477728074596	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) . get ( j ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 98.8708 99.9556 99.9426 98.7621 98.4045 99.993 99.9983 99.1982 99.2781 99.9428 99.9056 99.9904 99.9921 99.9276 99.9968 99.9856 99.9942 99.953 99.8915 99.9976 99.999 99.8619 99.9785 99.9959 99.8819 99.7239 99.7518 99.8686 99.9427 103.0117
H-15	99.90450032552083	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) . get ( j ) . get ( j ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 99.5195 99.5905 99.9317 99.9029 99.9871 99.9934 99.9397 99.9973 99.9868 99.9937 99.9475 99.8822 99.9978 99.9986 99.5558 99.9706 99.9172 99.9487 99.8155 96.209 99.8938 99.992 99.898 99.7181 99.7866 99.9447 99.9755 102.8773
H-15	99.90428899949596	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 99.5195 99.5905 99.9317 99.9029 99.9871 99.9934 99.9397 99.9973 99.9868 99.9937 99.9475 99.8822 99.9978 99.9986 98.6401 99.2046 99.9514 99.9584 99.9921 99.9895 99.9136 99.997 99.9827 99.9967 99.9006 97.9058 99.2432 99.7827 99.9108 102.9291
H-15	99.90083952872983	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i ) ; int insert _ value = dp . get ( i - 1 ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 99.5195 99.5905 99.9317 99.9029 99.9871 99.9934 99.9397 99.9973 99.9868 99.9937 99.9475 97.7628 99.627 99.532 99.9599 99.9607 99.9919 99.9939 99.9008 99.9966 99.9817 99.9959 99.8818 99.8532 99.9975 99.9984 97.8327 99.9271 99.9308 102.8391
H-15	99.89939831149194	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) . get ( j ) ; int insert _ value = dp . get ( i - 1 ) . get ( j - 1 ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 98.8708 99.9556 99.9426 99.5858 99.8371 99.0389 99.4219 99.8534 99.879 99.9859 99.995 99.9139 99.9968 99.9866 99.9938 99.9513 99.8768 99.9978 99.9989 99.8405 99.9775 99.9958 99.8786 97.8438 99.9785 99.9977 99.3299 99.9377 99.9499 102.8525
H-15	99.89892578125	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i ) ; int insert _ value = dp . get ( i - 1 ) ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 99.5195 99.5905 99.9317 99.9029 99.9871 99.9934 99.9397 99.9973 99.9868 99.9937 99.9475 97.7628 99.627 99.532 99.9599 99.9607 99.9919 99.9939 99.9008 99.9966 99.9817 99.9959 99.8818 99.8532 99.9975 99.9984 98.7906 101.8224
H-15	99.89457062752017	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) . get ( j + 1 ) . get ( j ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 99.5195 99.5905 99.9317 99.9029 99.9871 99.9934 99.9397 99.9973 99.9868 99.9937 99.9475 99.8822 99.9978 99.9986 99.5558 99.9706 99.9172 99.9487 96.7978 99.9677 99.9946 98.3601 99.9407 99.9953 99.8159 99.8003 99.7059 99.9289 99.9644 103.0321
H-15	99.89277159492924	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i ) ; int insert _ value = dp . get ( i - 1 ) . get ( j ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 98.0053 99.9628 99.7259 99.9426 99.8962 99.9867 99.9954 99.9311 99.9968 99.9853 99.99 99.953 99.8638 99.998 99.9986 99.5132 99.9673 99.9225 99.9567 99.872 99.8583 99.9161 99.9593 99.8679
H-15	99.89115397135417	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i ) ; int insert _ value = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 98.0053 99.9628 99.7259 99.9426 99.8962 99.9867 99.9954 99.9311 99.9968 99.9853 99.99 99.953 99.8638 99.998 99.9986 98.7055 99.159 99.9514 99.958 99.9924 99.9905 99.9211 99.9969 99.9838 99.9966 99.9108 99.8534 99.9974 99.9986 98.7209 101.8496
H-15	99.88749186197917	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i ) ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 99.5195 99.5905 99.9317 99.9029 99.9871 99.9934 99.9397 99.9973 99.9868 99.9937 99.9475 99.8822 99.9978 99.9986 98.6401 99.2046 99.9514 99.9584 99.9921 99.9895 99.9136 99.997 99.9827 99.9967 99.9006 97.9058 99.1698 101.8792
H-15	99.88671875	if ( dp . contains ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) . get ( j ) ; int insert _ value = dp . get ( i - 1 ) . get ( j ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 97.9723 99.6668 99.4285 99.9944 99.9757 99.942 99.9093 99.7008 99.9643 99.9903 99.97 99.9865 99.9923 99.9792 99.9993 99.9983 99.9979 99.9624 99.9983 99.9934 99.983 99.9823 99.8668 99.998 99.9982 98.998 99.9664 99.9125 99.6277 99.8481 98.8756 99.4446 99.8501 99.8822 99.9856 99.9951 99.9127 99.9968 99.9862 99.9922 99.9481 99.8901 99.9979 99.9989 99.8782 99.9796 99.9955 99.8794 99.7749 99.7682 99.8938 99.9382 102.8194
H-15	99.88667872694673	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) . get ( j ) + 1 ; insert _ value = dp . get ( i - 1 ) . get ( j ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 98.8708 99.9556 99.9426 99.5858 99.8371 99.4713 99.9237 99.9536 97.2584 99.8705 99.9651 99.988 99.848 99.9978 99.9867 99.9869 99.9279 99.8786 99.9975 99.999 99.3484 99.9706 99.9958 99.8742 99.7958 99.9056 99.932 99.9494 101.972
H-15	99.88422037760417	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) . get ( j ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 99.5195 95.5074 99.9268 99.9801 99.9664 99.9735 99.9909 99.976 99.9989 99.9961 99.9955 99.9219 99.9976 99.9927 99.9958 99.9702 99.8583 99.9977 99.9987 98.9073 99.9586 99.965 99.8289 99.8009 99.5626 99.7442 99.9411 102.6825
H-15	99.88323567708333	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) . get ( j ) ; int insert _ value = dp . get ( i - 1 ) . get ( i ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 98.8708 99.9556 99.9426 99.5858 99.8371 99.0389 99.4219 99.8534 99.879 99.9859 99.995 99.9139 99.9968 99.9866 99.9938 99.9513 99.8768 99.9978 99.9989 99.8405 99.9775 99.9958 96.8085 99.7567 99.7778 99.8912 99.9467 102.8181
H-15	99.88301595052083	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i ) ; int insert _ value = dp . get ( i ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 99.5195 99.5905 99.9317 99.9029 99.9871 99.9934 99.9397 99.9973 99.9868 99.9937 99.9475 97.7628 99.627 99.532 99.9599 99.9607 99.9919 99.9939 99.9008 99.9966 99.9817 99.9959 99.8818 97.9588 99.0875 99.791 99.9343 102.7357
H-15	99.88026529947916	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) . get ( j ) ; int insert _ value = dp . get ( i - 1 ) . get ( j ) + $NUMBER$ ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 98.8708 99.9556 99.9426 99.5858 99.8371 99.0389 99.4219 99.8534 99.879 99.9859 99.995 99.9139 99.9968 99.9866 99.9938 99.9513 99.8768 99.9978 99.9989 99.8405 99.9775 99.9958 99.8786 99.7595 99.7482 96.6653 99.9436 102.8258
H-15	99.8800048828125	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) . get ( j ) ; int insert _ value = dp . get ( i - 1 ) . get ( j ) + 0 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 98.8708 99.9556 99.9426 99.5858 99.8371 99.0389 99.4219 99.8534 99.879 99.9859 99.995 99.9139 99.9968 99.9866 99.9938 99.9513 99.8768 99.9978 99.9989 99.8405 99.9775 99.9958 99.8786 99.7595 99.7482 96.6731 99.9238 102.8221
H-15	99.87828776041667	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i ) ; int insert _ value = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 98.0053 99.9628 99.7259 99.9426 99.8962 99.9867 99.9954 99.9311 99.9968 99.9853 99.99 99.953 99.8638 99.998 99.9986 98.7055 99.159 99.9514 99.958 99.9924 99.9905 99.9211 99.9969 99.9838 99.9966 99.9108 97.9528 99.2199 99.7928 99.9298 102.7529
H-15	99.87722981770834	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i ) ; int insert _ value = dp . get ( i ) ; int insert _ value = dp . get ( i - 1 ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 98.0053 99.9628 99.7259 99.9426 99.8962 99.9867 99.9954 99.9311 99.9968 99.9853 99.99 99.953 97.9135 99.6532 99.5063 99.96 99.9581 99.9918 99.9936 99.9123 99.9964 99.9839 99.9956 99.9087 99.8412 99.998 99.9986 97.8769 99.9244 99.9427 102.6548
H-15	99.87571614583334	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) . get ( j ) + 1 ; int insert _ value = dp . get ( i - 1 ) . get ( j ) ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 98.8708 99.9556 99.9426 99.5858 99.8371 99.4713 99.9237 99.9536 98.8983 99.8613 99.8715 99.9855 99.9926 99.8769 99.9963 99.9844 99.9915 99.9472 99.8738 99.9976 99.9989 99.3576 99.9514 99.9935 99.8598 99.7272 97.3918 102.3467
H-15	99.87569986979166	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) . get ( j ) ; int insert _ value = dp . get ( i - 1 ) . get ( j - 1 ) ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 98.8708 99.9556 99.9426 99.5858 99.8371 99.0389 99.4219 99.8534 99.879 99.9859 99.995 99.9139 99.9968 99.9866 99.9938 99.9513 99.8768 99.9978 99.9989 99.8405 99.9775 99.9958 99.8786 97.8438 99.9785 99.9977 98.5747 102.2743
H-15	99.87540690104167	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) . get ( j - 1 ) . get ( j ) ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 99.5195 99.5905 99.9317 99.9029 99.9871 99.9934 99.9397 99.9973 99.9868 99.9937 99.9475 99.8822 99.9978 99.9986 99.5558 99.9706 99.9172 99.9487 97.5588 99.981 99.9968 98.4964 99.9577 99.996 99.8661 99.6454 98.2807 102.5859
H-15	99.87516009221312	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) . get ( i ) + 1 ; insert _ value = dp . get ( i - 1 ) . get ( j ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 98.8708 99.9556 99.9426 98.7621 99.7572 99.5401 99.9244 99.9598 97.278 99.8643 99.968 99.9874 99.847 99.9978 99.9869 99.9873 99.9291 99.867 99.9974 99.999 99.4655 99.9748 99.9958 99.898 99.8278 99.8987 99.9292 99.9538 101.9214
H-15	99.87455078125	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 99.5195 99.5905 99.9317 99.9029 99.9871 99.9934 99.9397 99.9973 99.9868 99.9937 99.9475 99.8822 99.9978 99.9986 97.591 99.9481 99.9135 99.508
H-15	99.87389119466145	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 99.5195 99.5905 99.9317 99.9029 99.9871 99.9934 99.9397 99.9973 99.9868 99.9937 99.9475 99.8822 99.9978 99.9986 98.6401 98.5395
H-15	99.873486328125	Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) . get ( j ) + 1 ;
P-15	99.9722 99.9751 99.9181 99.9753 99.9902 99.9678 99.9983 99.9959 99.9951 99.9315 99.9967 99.9913 99.9769 99.9717 99.1168 99.9956 99.9937 99.587 97.8221 99.9962 98.9413 99.9735 99.7777 99.7158 99.9985 99.9993 99.7192 99.8788 99.9914 99.9983 99.9449 99.9367 99.8858 99.9773 99.9951 99.978 99.9874 99.9937 99.9863 99.9993 99.998 99.9966 99.9462 99.9978 99.9926 99.9974 99.9768 99.8805 99.9977 99.9984 98.9432 99.9531 99.9629 99.6823 99.8112 99.471 99.8475 99.9516 102.542
H-15	99.87266438802084	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) . get ( j - 1 ) ; int insert _ value = dp . get ( i - 1 ) . get ( j ) ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 98.8708 99.9556 99.9426 99.5858 97.9131 99.9906 99.9978 99.1582 99.3187 99.9426 99.9081 99.9907 99.9918 99.9306 99.9968 99.9851 99.9941 99.9547 99.8857 99.9976 99.9989 99.8648 99.9782 99.9959 99.8549 99.6488 98.1723 102.4356
H-15	99.87169339364036	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) . get ( j - 1 ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 99.5195 99.5905 99.9317 99.9029 99.9871 99.9934 99.9397 99.9973 99.9868 99.9937 99.9475 99.8822 99.9978 99.9986 99.5558 99.9706 99.9172 99.9487 97.5588 99.981 99.9968 99.3983 99.9501 99.9572 99.6851
H-15	99.86920797413794	Map < Integer , Integer > internal _ map = dp . get ( i ) ; if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) . get ( j ) + 1 ;
P-15	99.9722 99.9751 99.9181 99.9753 99.9902 99.9678 99.9983 99.9959 99.9951 99.9315 99.9967 99.9913 99.9769 99.9717 99.4622 99.9225 97.2519 99.9964 99.0863 99.9744 99.6922 99.7403 99.9979 99.9992 99.7247 99.794 99.9862 99.9976 99.9283 99.9439 99.8985 99.9753 99.9948 99.979 99.9873 99.9948 99.9883 99.9993 99.9981 99.9967 99.9433 99.9978 99.9925 99.9975 99.9773 99.8823 99.9978 99.9983 98.9422 99.9463 99.9681 99.7245 99.848 99.4515 99.8609 99.9531 102.349
H-15	99.86857096354167	if ( dp . contains ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) ;
P-15	99.994 99.7605 99.9904 99.9168 97.9723 99.6668 99.4285 99.9944 99.9757 99.942 99.9093 99.7008 99.9643 99.9903 99.97 99.9865 99.9923 99.9792 99.9993 99.9983 99.9979 99.9624 99.9983 99.9934 99.983 99.9823 99.8668 99.998 99.9982 99.4363 99.5861 99.9289 99.9011 99.9867 99.9924 99.9405 99.9972 99.9869 99.9903 99.955 99.8867 99.9977 99.9986 98.7072 99.1635 99.9515 99.9585 99.9919 99.9903 99.9194 99.9969 99.9841 99.996 99.9108 99.8633 99.9972 99.9984 98.702 102.0053
H-15	99.86612802181604	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) . get ( j ) ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 99.5195 99.5905 99.9317 99.9029 99.9871 99.9934 99.9397 99.9973 99.9868 99.9937 99.9475 99.8822 99.9978 99.9986 99.5558 99.9706 99.9172 99.9487 99.8155 97.6939 99.2363
H-15	99.8646090323465	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) + 1 ; int insert _ value = dp . get ( i - 1 ) . get ( j ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 97.0992 99.903 99.9253 99.3858 99.9133 99.8831 99.9833 99.9938 99.892 99.9969 99.9864 99.9912 99.9449 99.8631 99.9976 99.9987 99.2186 99.9396 99.9032 99.9379 99.7852 99.9019 99.9205 99.9629 99.8563
H-15	99.86248894457547	if ( dp . contains ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) . get ( j ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 97.9723 99.6668 99.4285 99.9944 99.9757 99.942 99.9093 99.7008 99.9643 99.9903 99.97 99.9865 99.9923 99.9792 99.9993 99.9983 99.9979 99.9624 99.9983 99.9934 99.983 99.9823 99.8668 99.998 99.9982 99.4363 99.5861 99.9289 99.9011 99.9867 99.9924 99.9405 99.9972 99.9869 99.9903 99.955 99.8867 99.9977 99.9986 99.502 99.963 99.9097 99.9499 99.8257 99.8591 99.9142 99.9564 99.8542
H-15	99.85785122575432	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) . get ( j ) ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 99.5195 95.5074 99.9268 99.9801 99.9664 99.9735 99.9909 99.976 99.9989 99.9961 99.9955 99.9219 99.9976 99.9927 99.9958 99.9702 99.8583 99.9977 99.9987 98.9073 99.9586 99.965 99.8289 99.8009 98.8737 101.7587
H-15	99.85781592653508	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) . get ( j ) + 1 + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 99.5195 99.5905 99.9317 99.9029 99.9871 99.9934 99.9397 99.9973 99.9868 99.9937 99.9475 99.8822 99.9978 99.9986 99.5558 99.9706 99.9172 99.9487 99.8155 99.8514 99.9164 96.6792 99.6922 99.9147 99.8669
H-15	99.85708778782895	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) . get ( j + 1 ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 99.5195 99.5905 99.9317 99.9029 99.9871 99.9934 99.9397 99.9973 99.9868 99.9937 99.9475 99.8822 99.9978 99.9986 99.5558 99.9706 99.9172 99.9487 96.7978 99.9677 99.9946 99.3371 99.9335 99.9595 99.7044
H-15	99.85657848011364	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) . get ( j ) + $NUMBER$ ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 99.5195 99.5905 99.9317 99.9029 99.9871 99.9934 99.9397 99.9973 99.9868 99.9937 99.9475 99.8822 99.9978 99.9986 99.5558 99.9706 99.9172 99.9487 99.8155 99.8514 96.4735 99.9561 99.8559
H-15	99.85647295106132	if ( dp . contains CaMeL Key ( i ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) . get ( j ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 97.9604 99.9504 99.9181 99.498 99.9614 99.9876 99.9645 99.987 99.9924 99.9748 99.9992 99.9983 99.9977 99.9674 99.9982 99.9937 99.9934 99.9818 98.8708 99.9962 99.9962 99.6065 99.5918 99.921 99.8882 99.9875 99.9932 99.9382 99.9971 99.9871 99.9932 99.954 99.8108 99.9976 99.9983 99.4944 99.9669 99.9365 99.955 99.8868 99.8441 99.9131 99.9589 99.8582
H-15	99.85403592469262	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) ; insert _ value = dp . get ( i - 1 ) ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 99.5195 99.5905 99.9317 99.9029 99.9871 99.9934 99.9397 99.9973 99.9868 99.9937 99.9475 99.8822 99.9978 99.9986 98.6401 95.9859 99.9939 99.9596 99.9912 99.7519 99.9974 99.9838 99.9938 99.635 99.8324 99.9968 99.9986 98.7724 101.7971
H-15	99.85313265931373	if ( dp . contains CaMeL Key ( i ) ) { Map < Integer , Integer > internal _ map = dp . get ( i ) ; int insert _ value = dp . get ( i - 1 ) . get ( j ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 97.9604 99.9504 99.9181 99.498 99.9614 99.9876 99.9645 99.987 99.9924 99.9748 99.9992 99.9983 99.9977 99.9674 99.9982 99.9937 99.9934 99.9818 99.608 99.9309 99.6378 99.935 99.8882 99.9843 99.9957 99.9158 99.997 99.9855 99.9912 99.9477 98.8437 99.9967 99.9971 99.4016 99.9709 99.9228 99.9542 99.9511 99.8494 99.9325 99.9688 99.8528
H-15	99.85306160910088	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) . get ( j ) + 1 ; int insert _ value = dp . get ( i - 1 ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 98.8708 99.9556 99.9426 99.5858 99.8371 99.4713 99.9237 99.9536 98.8983 99.8613 99.8715 99.9855 99.9926 99.8769 99.9963 99.9844 99.9915 99.9472 99.8738 99.9976 99.9989 98.3069 99.9408 99.9256 99.535
H-15	99.85237096567623	if ( dp . contains CaMeL Key ( i - 1 ) ) if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 95.4586 99.9917 98.9081 99.9921 99.8715 99.9841 99.9986 99.9996 99.9164 99.8972 99.9926 99.9992 99.9809 99.8382 99.6853 99.9747 99.9946 99.9822 99.988 99.992 99.9787 99.9992 99.998 99.9973 99.9716 99.9981 99.9933 99.9946 99.9833 99.8672 99.9978 99.9986 99.5138 99.5872 99.9263 99.8988 99.9857 99.9922 99.9407 99.9974 99.9863 99.9954 99.9607 99.8779 99.9975 99.9991 98.7693 101.6563
H-15	99.85158913352272	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) . get ( j ) + 0 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 99.5195 99.5905 99.9317 99.9029 99.9871 99.9934 99.9397 99.9973 99.9868 99.9937 99.9475 99.8822 99.9978 99.9986 99.5558 99.9706 99.9172 99.9487 99.8155 99.8514 96.2169 99.9436 99.8506
H-15	99.85076349431819	Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) . get ( j ) + 1 ;
P-15	99.9722 99.9751 99.9181 99.9753 99.9902 99.9678 99.9983 99.9959 99.9951 99.9315 99.9967 99.9913 99.9769 99.9717 99.1168 99.9956 99.9937 99.587 99.5144 99.9209 99.886 99.9876 99.9934 99.9305 99.9972 99.9868 99.99 99.9293 99.835 99.9977 99.998 98.699 99.1507 99.9471 99.959 99.9921 99.99 99.9198 99.997 99.9855 99.9959 99.8732 99.8453 99.9971 99.997 99.4479 99.9701 99.9589 99.9028 99.6946 99.8164 99.8926 99.9442 99.884
H-15	99.84925579202586	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) . get ( j ) ; int insert _ value = dp . get ( i - 1 ) . get ( j ) ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 98.8708 99.9556 99.9426 99.5858 99.8371 99.0389 99.4219 99.8534 99.879 99.9859 99.995 99.9139 99.9968 99.9866 99.9938 99.9513 99.8768 99.9978 99.9989 99.8405 99.9775 99.9958 99.8786 99.7595 98.2107 99.4133
H-15	99.84889439174107	if ( dp . contains CaMeL Key ( i ) ) { Map < Integer , Integer > internal _ map = dp . get ( i ) ; int insert _ value = dp . get ( i ) ; int insert _ value = dp . get ( i ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 97.9604 99.9504 99.9181 99.498 99.9614 99.9876 99.9645 99.987 99.9924 99.9748 99.9992 99.9983 99.9977 99.9674 99.9982 99.9937 99.9934 99.9818 99.608 99.9309 99.6378 99.935 99.8882 99.9843 99.9957 99.9158 99.997 99.9855 99.9912 99.9477 99.6207 99.4062 99.4386 99.9596 99.956 99.9913 99.9936 99.8866 99.9967 99.9825 99.996 99.901 99.7304 99.219 99.9098 99.9509 99.7308
H-15	99.84875257959905	Map < Integer , Integer > internal _ map = dp . get ( i ) ; int insert _ value = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) . get ( j ) + 1 ;
P-15	99.9722 99.9751 99.9181 99.9753 99.9902 99.9678 99.9983 99.9959 99.9951 99.9315 99.9967 99.9913 99.9769 99.9717 99.4622 99.9225 99.5746 99.9342 99.8904 99.9863 99.9958 99.9144 99.9972 99.9846 99.9864 99.9281 99.1207 99.997 99.9965 98.7741 99.2086 99.9455 99.9583 99.9929 99.9897 99.9165 99.9969 99.9848 99.9952 99.8697 99.833 99.9971 99.9977 99.3747 99.9665 99.9621 99.9151 99.7906 99.8166 99.8904 99.9495 99.8961
H-15	99.84874471028645	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 99.5195 99.5905 99.9317 99.9029 99.9871 99.9934 99.9397 99.9973 99.9868 99.9937 99.9475 97.7628 98.6508 99.853 99.91 99.6742
H-15	99.84552001953125	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i ) ; int insert _ value = dp . get ( i - 1 ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 98.0053 99.9628 99.7259 99.9426 99.8962 99.9867 99.9954 99.9311 99.9968 99.9853 99.99 99.953 99.8638 99.998 99.9986 97.6901 99.9467 99.9246 99.5393
H-15	99.84402765012256	Map < Integer , Integer > internal _ map = dp . get ( i ) ; int insert _ value = dp . get ( i ) ; int insert _ value = dp . get ( i - 1 ) . get ( j ) + 1 ;
P-15	99.9722 99.9751 99.9181 99.9753 99.9902 99.9678 99.9983 99.9959 99.9951 99.9315 99.9967 99.9913 99.9769 99.9717 99.4622 99.9225 99.5746 99.9342 99.8904 99.9863 99.9958 99.9144 99.9972 99.9846 99.9864 99.9281 99.4613 99.3757 99.3762 99.9582 99.9626 99.9914 99.9936 99.8972 99.9967 99.9829 99.9941 99.8478 98.7663 99.9944 99.9948 99.24 99.9691 99.9571 99.9238 99.8865 99.8423 99.9201 99.9615 99.9032
H-15	99.84399842379386	if ( internal _ map . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) . get ( j ) + 1 ;
P-15	99.994 95.4771 99.996 99.9252 99.9494 99.9228 99.9485 99.9986 99.9995 99.9094 99.8369 99.9885 99.9979 99.9563 99.9174 99.7765 99.9747 99.9936 99.9649 99.989 99.9931 99.9783 99.9992 99.9983 99.9976 99.9672 99.9982 99.9939 99.9947 99.9794 99.872 99.9979 99.9982 99.5382 99.5778 99.9304 99.9011 99.9864 99.993 99.928 99.9974 99.9887 99.9938 99.9426 99.8888 99.9977 99.9987 99.4651 99.9701 99.9398 99.947 99.7863 99.8542 99.908 99.9543 99.8547
H-15	99.84380326704546	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) . get ( j - 1 ) ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 99.5195 99.5905 99.9317 99.9029 99.9871 99.9934 99.9397 99.9973 99.9868 99.9937 99.9475 99.8822 99.9978 99.9986 99.5558 99.9706 99.9172 99.9487 97.5588 99.981 99.9968 98.49 99.2237
H-15	99.84328835227272	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; long insert _ value = dp . get ( i - 1 ) . get ( j ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 99.5195 95.3389 99.9634 99.9158 99.9904 99.9945 99.9439 99.9972 99.9869 99.9944 99.9657 99.8868 99.9979 99.9985 99.5399 99.968 99.9396 99.956 99.8249 99.8736 99.8828 99.9517 99.8514
H-15	99.841796875	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( j - 1 ) . get ( j ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 99.5195 99.5905 99.9317 99.9029 99.9871 99.9934 99.9397 99.9973 99.9868 99.9937 95.8009 99.8463 99.9976 99.9979 99.5346 99.9695 99.9338 99.9449 99.7248 99.8687 99.9198 99.9515 99.8675
H-15	99.8397372159091	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) . get ( j ) + 1 ; int insert _ value = dp . get ( i ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 98.8708 99.9556 99.9426 99.5858 99.8371 99.4713 99.9237 99.9536 98.8983 99.8613 99.8715 99.9855 99.9926 99.8769 99.9963 99.9844 99.9915 99.9472 97.832 99.7517 99.936 99.9435 99.6771
H-15	99.83893821022727	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i ) ; int insert _ value = dp . get ( i - 1 ) . get ( j - 1 ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 98.0053 99.9628 99.7259 99.9426 99.8962 99.9867 99.9954 99.9311 99.9968 99.9853 99.99 99.953 99.8638 99.998 99.9986 99.5132 99.9673 99.9225 99.9567 97.2221 99.9812 99.9971 99.4486 99.9535 99.9653 99.7303
H-15	99.83888596754808	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) + 1 ; int insert _ value = dp . get ( i - 1 ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 97.0992 99.903 99.9253 99.3858 99.9133 99.8831 99.9833 99.9938 99.892 99.9969 99.9864 99.9912 99.9449 99.8631 99.9976 99.9987 98.4003 99.9407 99.9353 99.4888
H-15	99.83881392045454	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) . get ( i ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 99.5195 99.5905 99.9317 99.9029 99.9871 99.9934 99.9397 99.9973 99.9868 99.9937 99.9475 99.8822 99.9978 99.9986 99.5558 99.9706 99.9172 95.5183 99.7972 99.8744 99.9208 99.9584 99.8543
H-15	99.83841441761363	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) . get ( j ) + 1 ; int insert _ value = dp . get ( i - 1 ) ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 98.8708 99.9556 99.9426 99.5858 99.8371 99.4713 99.9237 99.9536 98.8983 99.8613 99.8715 99.9855 99.9926 99.8769 99.9963 99.9844 99.9915 99.9472 99.8738 99.9976 99.9989 98.5677 98.6294
H-15	99.83827359068627	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i ) ; int insert _ value = dp . get ( i - 1 ) . get ( j ) ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 98.0053 99.9628 99.7259 99.9426 99.8962 99.9867 99.9954 99.9311 99.9968 99.9853 99.99 99.953 99.8638 99.998 99.9986 99.5132 99.9673 99.9225 99.9567 99.872 97.6696 99.3674
H-15	99.8375	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) . get ( j + 1 ) ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 99.5195 99.5905 99.9317 99.9029 99.9871 99.9934 99.9397 99.9973 99.9868 99.9937 99.9475 99.8822 99.9978 99.9986 99.5558 99.9706 99.9172 99.9487 96.7978 99.9677 99.9946 98.7319 99.4114
H-15	99.83709161931819	if ( dp . contains CaMeL Key ( i - $NUMBER$ ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) . get ( j ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 95.4688 99.9963 99.9445 99.9127 99.8133 99.9729 99.9939 99.98 99.9866 99.9942 99.9812 99.9993 99.9982 99.9976 99.9674 99.9982 99.9934 99.9929 99.9822 99.8541 99.998 99.9982 99.5205 99.5859 99.932 99.9014 99.987 99.9933 99.9405 99.9973 99.9867 99.9937 99.9476 99.8845 99.9978 99.9988 99.5532 99.9707 99.9156 99.9482 99.811 99.8501 99.9164 99.9565 99.8545
H-15	99.83697809938525	if ( dp . contains CaMeL Key ( i ) ) { Map < Integer , Integer > internal _ map = dp . get ( i ) ; int insert _ value = dp . get ( i ) ; int insert _ value = dp . get ( i ) . get ( j ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 97.9604 99.9504 99.9181 99.498 99.9614 99.9876 99.9645 99.987 99.9924 99.9748 99.9992 99.9983 99.9977 99.9674 99.9982 99.9937 99.9934 99.9818 99.608 99.9309 99.6378 99.935 99.8882 99.9843 99.9957 99.9158 99.997 99.9855 99.9912 99.9477 99.6207 99.4062 99.4386 99.9596 99.956 99.9913 99.9936 99.8866 99.9967 99.9825 99.996 99.901 99.7304 98.0653 99.9082 99.9709 99.9331 99.9762 99.6674 99.9497 99.9718 99.8856
H-15	99.83624152417453	Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i ) ; int insert _ value = dp . get ( i - 1 ) . get ( j ) + 1 ;
P-15	99.9722 99.9751 99.9181 99.9753 99.9902 99.9678 99.9983 99.9959 99.9951 99.9315 99.9967 99.9913 99.9769 99.9717 99.1168 99.9956 99.9937 99.587 99.5144 99.9209 99.886 99.9876 99.9934 99.9305 99.9972 99.9868 99.99 99.9293 98.094 99.6124 99.4658 99.9565 99.9613 99.9919 99.9935 99.9146 99.9966 99.9842 99.9941 99.8735 99.794 99.9974 99.9971 99.3709 99.9679 99.963 99.9306 99.7863 99.8377 99.8857 99.9496 99.9001
H-15	99.83572334155701	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) . get ( i ) + 1 ; int insert _ value = dp . get ( i - 1 ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 98.8708 99.9556 99.9426 98.7621 99.7572 99.5401 99.9244 99.9598 98.9125 99.8597 99.8644 99.9846 99.9928 99.8722 99.9962 99.9846 99.9918 99.9439 99.8635 99.9975 99.9989 98.1571 99.9413 99.9289 99.5353
H-15	99.83542351973684	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) . get CaMeL Value ( j ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 99.5195 99.5905 99.9317 99.9029 99.9871 99.9934 99.9397 99.9973 99.9868 99.9937 99.9475 99.8822 99.9978 99.9986 99.5558 99.9706 97.4648 98.766 99.9902 99.2701 99.6251 99.6975 99.9485 99.9373 99.6264
H-15	99.8348313934949	Map < Integer , Integer > internal _ map = dp . get ( i ) ; int insert _ value = dp . get ( i ) ; int insert _ value = dp . get ( i ) . get ( j ) + 1 ;
P-15	99.9722 99.9751 99.9181 99.9753 99.9902 99.9678 99.9983 99.9959 99.9951 99.9315 99.9967 99.9913 99.9769 99.9717 99.4622 99.9225 99.5746 99.9342 99.8904 99.9863 99.9958 99.9144 99.9972 99.9846 99.9864 99.9281 99.4613 99.3757 99.3762 99.9582 99.9626 99.9914 99.9936 99.8972 99.9967 99.9829 99.9941 99.8478 99.6523 98.2405 99.9333 99.9611 99.9325 99.9649 99.7239 99.9496 99.9679 99.8941
H-15	99.83417426215277	if ( dp . contains CaMeL Key ( i - 1 ) ) Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) . get ( j ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 95.7974 99.9249 99.9872 99.9434 99.9737 99.9937 99.9765 99.999 99.9978 99.9973 99.9714 99.9982 99.9934 99.9946 99.9805 99.8638 99.9979 99.9981 99.5134 99.1006 99.9094 99.8956 99.9862 99.9911 99.9393 99.9973 99.9866 99.9938 99.9632 99.8736 99.9977 99.9986 99.5495 99.9655 99.9414 99.9475 99.8173 99.8443 99.9035 99.9586 99.8978
H-15	99.83335248161765	if ( dp . contains ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i ) ; int insert _ value = dp . get ( i - 1 ) . get ( j ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 97.9723 99.6668 99.4285 99.9944 99.9757 99.942 99.9093 99.7008 99.9643 99.9903 99.97 99.9865 99.9923 99.9792 99.9993 99.9983 99.9979 99.9624 99.9983 99.9934 99.983 99.9823 97.9012 99.9586 99.7352 99.9455 99.8952 99.9879 99.9959 99.9245 99.9968 99.9862 99.9866 99.9483 99.8809 99.9981 99.9986 99.5222 99.9685 99.8915 99.9536 99.8851 99.8574 99.9321 99.9651 99.8549
H-15	99.83313860212054	if ( ! dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) . get ( j ) + 1 ;
P-15	99.994 95.7738 99.6527 99.9964 99.8559 99.5336 99.9974 99.9995 99.9389 99.8008 99.9842 99.9974 99.9487 99.8991 99.774 99.9721 99.9931 99.974 99.9874 99.9933 99.9797 99.9993 99.9982 99.9976 99.9665 99.9982 99.9931 99.994 99.9816 99.8378 99.998 99.9981 99.5436 99.5802 99.9317 99.9026 99.9872 99.9932 99.937 99.9973 99.9872 99.9943 99.9519 99.8723 99.9976 99.9988 99.4679 99.9653 99.948 99.9411 99.8041 99.8285 99.916 99.961 99.8582
H-15	99.83241489955357	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) . get ( j ) + - 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 99.5195 99.5905 99.9317 99.9029 99.9871 99.9934 99.9397 99.9973 99.9868 99.9937 99.9475 99.8822 99.9978 99.9986 99.5558 99.9706 99.9172 99.9487 99.8155 99.8514 95.0651 99.913 99.9694 99.8416
H-15	99.83234772858796	if ( dp . contains CaMeL Key ( i ) ) { Map < Integer , Integer > internal _ map = dp . get ( i ) ; int insert _ value = dp . get ( i ) ; int insert _ value = dp . get ( i ) ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 97.9604 99.9504 99.9181 99.498 99.9614 99.9876 99.9645 99.987 99.9924 99.9748 99.9992 99.9983 99.9977 99.9674 99.9982 99.9937 99.9934 99.9818 99.608 99.9309 99.6378 99.935 99.8882 99.9843 99.9957 99.9158 99.997 99.9855 99.9912 99.9477 99.6207 99.4062 99.4386 99.9596 99.956 99.9913 99.9936 99.8866 99.9967 99.9825 99.996 99.901 99.7304 99.0677 99.1513
H-15	99.8318292025862	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) . get ( i ) ; int insert _ value = dp . get ( i - 1 ) . get ( j ) ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 98.8708 99.9556 99.9426 98.7621 99.7572 98.9453 99.4486 99.8518 99.8781 99.9856 99.995 99.9137 99.9968 99.9869 99.9937 99.9493 99.8649 99.9977 99.999 99.8329 99.9778 99.9958 99.9103 99.794 98.1482 99.3943
H-15	99.83059166217673	if ( dp . contains CaMeL Key ( i ) ) { Map < Integer , Integer > internal _ map = dp . get ( i ) ; int insert _ value = dp . get ( i ) + 1 ; int insert _ value = dp . get ( i ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 97.9604 99.9504 99.9181 99.498 99.9614 99.9876 99.9645 99.987 99.9924 99.9748 99.9992 99.9983 99.9977 99.9674 99.9982 99.9937 99.9934 99.9818 99.608 99.9309 99.6378 99.935 99.8882 99.9843 99.9957 99.9158 99.997 99.9855 99.9912 99.9477 99.6207 98.8824 99.9183 99.9458 98.3538 99.8791 99.9552 99.9871 99.9912 99.8599 99.9962 99.9847 99.995 99.8814 99.7179 99.7519 99.9529 99.9536 99.6795
H-15	99.83046875	if ( i . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) . get ( j ) + 1 ;
P-15	99.994 96.5673 98.576 99.843 99.7769 99.9959 99.9994 99.8537 99.8332 99.9827 99.9976 99.9122 99.9148 99.7873 99.9705 99.9937 99.9783 99.9888 99.9942 99.9819 99.9993 99.9983 99.9977 99.9666 99.9982 99.9936 99.9908 99.9816 99.8395 99.9979 99.9981 99.4888 99.6019 99.9331 99.9038 99.9874 99.9935 99.9319 99.9975 99.9873 99.9924 99.9388 99.8802 99.9978 99.9986 99.6084 99.9729 99.9294 99.9471 99.8208 99.8523 99.9161 99.9542 99.8562
H-15	99.83036221590909	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; double insert _ value = dp . get ( i - 1 ) . get ( j ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 99.5195 94.6358 99.9495 99.919 99.9909 99.9959 99.9455 99.9972 99.9864 99.9935 99.9582 99.8886 99.998 99.998 99.538 99.9723 99.923 99.9492 99.8073 99.9024 99.9035 99.9445 99.8556
H-15	99.83033558238637	if ( dp . contains CaMeL Key ( j - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) . get ( j ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 95.4134 99.7398 99.9839 99.9956 99.9467 99.9165 99.8174 99.9747 99.9939 99.9792 99.9864 99.9945 99.9812 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.9929 99.9766 99.6106 99.9975 99.9974 99.5491 99.6029 99.9258 99.8974 99.9874 99.9937 99.9407 99.9973 99.9865 99.9935 99.9419 99.8587 99.9978 99.9985 99.5479 99.9713 99.9177 99.943 99.7813 99.8555 99.9148 99.9552 99.8596
H-15	99.83026123046875	Map < Integer , Integer > internal _ map = dp . get ( i ) ; int insert _ value = dp . get ( i ) ; int insert _ value = dp . get ( i ) ; int insert _ value = dp . get ( i ) + 1 ;
P-15	99.9722 99.9751 99.9181 99.9753 99.9902 99.9678 99.9983 99.9959 99.9951 99.9315 99.9967 99.9913 99.9769 99.9717 99.4622 99.9225 99.5746 99.9342 99.8904 99.9863 99.9958 99.9144 99.9972 99.9846 99.9864 99.9281 99.4613 99.3757 99.3762 99.9582 99.9626 99.9914 99.9936 99.8972 99.9967 99.9829 99.9941 99.8478 99.6523 98.9958 99.0223 99.9376 99.9548 99.987 99.9919 99.8801 99.9968 99.9819 99.9949 99.856 99.7176 99.276 99.8738 99.9464 99.7443
H-15	99.83011363636363	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) . get ( j ) - 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 99.5195 99.5905 99.9317 99.9029 99.9871 99.9934 99.9397 99.9973 99.9868 99.9937 99.9475 99.8822 99.9978 99.9986 99.5558 99.9706 99.9172 99.9487 99.8155 95.0876 99.8616 99.929 99.8034
H-15	99.82846380739795	if ( dp . contains CaMeL Key ( i ) ) { Map < Integer , Integer > internal _ map = dp . get ( i ) ; int insert _ value = dp . get ( i ) . get ( j ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 97.9604 99.9504 99.9181 99.498 99.9614 99.9876 99.9645 99.987 99.9924 99.9748 99.9992 99.9983 99.9977 99.9674 99.9982 99.9937 99.9934 99.9818 99.608 99.9309 99.6378 99.935 99.8882 99.9843 99.9957 99.9158 99.997 99.9855 99.9912 99.9477 99.6207 97.8692 99.8678 99.9293 99.9518 99.977 99.7503 99.9535 99.9688 99.8381
H-15	99.82828161851415	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i ) ; int insert _ value = dp . get ( i - 1 ) . get ( j ) + $NUMBER$ ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 98.0053 99.9628 99.7259 99.9426 99.8962 99.9867 99.9954 99.9311 99.9968 99.9853 99.99 99.953 99.8638 99.998 99.9986 99.5132 99.9673 99.9225 99.9567 99.872 99.8583 96.5029 99.9555 99.8665
H-15	99.82672012061404	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) . get ( j ) + 1 + $NUMBER$ ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 99.5195 99.5905 99.9317 99.9029 99.9871 99.9934 99.9397 99.9973 99.9868 99.9937 99.9475 99.8822 99.9978 99.9986 99.5558 99.9706 99.9172 99.9487 99.8155 99.8514 99.9164 96.6792 97.9357 99.8953 99.8701
H-15	99.82603717672414	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i ) ; int insert _ value = dp . get ( i ) ; int insert _ value = dp . get ( i - 1 ) ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 98.0053 99.9628 99.7259 99.9426 99.8962 99.9867 99.9954 99.9311 99.9968 99.9853 99.99 99.953 97.9135 99.6532 99.5063 99.96 99.9581 99.9918 99.9936 99.9123 99.9964 99.9839 99.9956 99.9087 99.8412 99.998 99.9986 98.8045 98.8707
H-15	99.82517653245192	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) + 1 + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 99.5195 99.5905 99.9317 99.9029 99.9871 99.9934 99.9397 99.9973 99.9868 99.9937 99.9475 99.8822 99.9978 99.9986 97.591 99.9481 97.2462 99.6518 99.9526 99.7523
H-15	99.82455008370536	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) . get ( j ) + 1 ; insert _ value = dp . get ( i - 1 ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 98.8708 99.9556 99.9426 99.5858 99.8371 99.4713 99.9237 99.9536 97.2584 99.8705 99.9651 99.988 99.848 99.9978 99.9867 99.9869 99.9279 99.8786 99.9975 99.999 98.551 99.95 99.9286 99.4016
H-15	99.82383219401042	Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) . get ( j ) + 1 ; int insert _ value = dp . get ( i - 1 ) . get ( j ) + 1 ;
P-15	99.9722 99.9751 99.9181 99.9753 99.9902 99.9678 99.9983 99.9959 99.9951 99.9315 99.9967 99.9913 99.9769 99.9717 99.1168 99.9956 99.9937 98.6878 99.9709 99.9153 99.6556 99.8464 99.61 99.9251 99.9608 98.758 99.8541 99.8809 99.9853 99.9918 99.8658 99.9966 99.984 99.9904 99.9137 99.8451 99.9978 99.9981 99.359 99.9547 99.9918 99.877 99.7289 99.8751 99.9292 99.9486 99.8676
H-15	99.822724609375	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) + 1 ; int insert _ value = dp . get ( i - 1 ) ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 97.0992 99.903 99.9253 99.3858 99.9133 99.8831 99.9833 99.9938 99.892 99.9969 99.9864 99.9912 99.9449 99.8631 99.9976 99.9987 98.7447 98.5352
H-15	99.822724609375	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) + 1 ; int insert _ value = dp . get ( i ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 97.0992 99.903 99.9253 99.3858 99.9133 99.8831 99.9833 99.9938 99.892 99.9969 99.9864 99.9912 99.9449 97.9099 99.708 99.9335 99.9456 99.6417
H-15	99.81496175130208	if ( dp . contains ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 97.9723 99.6668 99.4285 99.9944 99.9757 99.942 99.9093 99.7008 99.9643 99.9903 99.97 99.9865 99.9923 99.9792 99.9993 99.9983 99.9979 99.9624 99.9983 99.9934 99.983 99.9823 99.8668 99.998 99.9982 99.4363 99.5861 99.9289 99.9011 99.9867 99.9924 99.9405 99.9972 99.9869 99.9903 99.955 99.8867 99.9977 99.9986 97.7437 99.9441 99.9248 99.5274
H-15	99.81239827473958	Map < Integer , Integer > internal _ map = dp . get ( i ) ; int insert _ value = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) + 1 ;
P-15	99.9722 99.9751 99.9181 99.9753 99.9902 99.9678 99.9983 99.9959 99.9951 99.9315 99.9967 99.9913 99.9769 99.9717 99.4622 99.9225 99.5746 99.9342 99.8904 99.9863 99.9958 99.9144 99.9972 99.9846 99.9864 99.9281 99.1207 99.997 99.9965 98.7741 99.2086 99.9455 99.9583 99.9929 99.9897 99.9165 99.9969 99.9848 99.9952 99.8697 99.833 99.9971 99.9977 98.0276 99.9238 99.926 99.695
H-15	99.81140667459239	if ( dp . contains ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) ; int insert _ value = dp . get ( i - 1 ) ;
P-15	99.994 99.7605 99.9904 99.9168 97.9723 99.6668 99.4285 99.9944 99.9757 99.942 99.9093 99.7008 99.9643 99.9903 99.97 99.9865 99.9923 99.9792 99.9993 99.9983 99.9979 99.9624 99.9983 99.9934 99.983 99.9823 99.8668 99.998 99.9982 99.4363 99.5861 99.9289 99.9011 99.9867 99.9924 99.9405 99.9972 99.9869 99.9903 99.955 99.8867 99.9977 99.9986 98.7072 98.6395
H-15	99.81116739908855	if ( dp . contains CaMeL Key ( i - 1 ) ) { Map < Integer , Integer > internal _ map = dp . get ( i - 1 ) . get ( j - 1 ) . get ( j ) + 1 ;
P-15	99.994 99.7605 99.9904 99.9168 99.8588 99.9979 99.9993 99.927 99.8466 99.9854 99.9967 99.9302 99.9169 99.8123 99.9738 99.9938 99.9786 99.9869 99.9943 99.9815 99.9993 99.9982 99.9976 99.967 99.9981 99.9934 99.993 99.982 99.8509 99.9979 99.9982 98.8708 99.9556 99.9426 99.5858 97.9131 99.9906 99.9978 98.5712 99.973 99.9932 99.6274 99.7097 99.3297 99.9346 99.9559 99.4859
S-16	return 1 + lev@@ enshtein ( source . substring ( 1 ) , target . substring ( 1 ) ) ;
T-16	return lev@@ enshtein ( source . substring ( 1 ) , target . substring ( 1 ) ) ;
H-16	99.88043767755681	return 1 + lev@@ enshtein ( source . substring ( 1 ) , target . substring ( 1 ) ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 99.9614 99.8741 99.8695 99.9566 99.9101 99.9995 99.9699 99.9634 99.9097 99.9694 99.891
H-16	99.80823974609375	return lev@@ enshtein ( source . substring ( 1 ) , target . substring ( 1 ) ) ;
P-16	97.5749 99.8745 99.9629 99.8206 99.8901 99.9352 99.9994 99.9591 99.9739 99.9419 99.8712 99.9559 99.9111 99.9996 99.9693 99.9758 99.7892 99.9846 99.878
H-16	99.74382990056819	return $NUMBER$ + lev@@ enshtein ( source . substring ( 1 ) , target . substring ( 1 ) ) ;
P-16	96.1172 99.7815 99.6913 99.9672 99.9769 99.8131 99.9386 99.9418 99.9993 99.9589 99.9625 99.8743 99.875 99.9578 99.9128 99.9995 99.9703 99.9643 99.9133 99.9705 99.8806
H-16	99.73957963423295	return 0 + lev@@ enshtein ( source . substring ( 1 ) , target . substring ( 1 ) ) ;
P-16	96.1058 99.7724 99.6588 99.964 99.9824 99.8104 99.94 99.9359 99.9993 99.9573 99.9608 99.872 99.8703 99.9609 99.9031 99.9995 99.9702 99.964 99.9018 99.969 99.875
H-16	99.73248291015625	return 1 + 1 + lev@@ enshtein ( source . substring ( 1 ) , target . substring ( 1 ) ) ;
P-16	99.3508 99.5714 97.2749 99.3826 99.6596 99.9315 99.9699 99.7832 99.8699 99.8282 99.9995 99.9487 99.9625 99.7721 99.8397 99.9465 99.909 99.9995 99.9682 99.9472 99.8996 99.9659 99.9013
H-16	99.71040271577381	return 1 + lev@@ enshtein ( source . substring ( 1 ) , target . length ( ) ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 99.9614 99.8741 99.8695 99.9566 96.5062 99.9997 99.9924 99.7862 99.9139 99.963
H-16	99.7060546875	return 1 + lev@@ enshtein ( source . substring ( $NUMBER$ ) , target . substring ( 1 ) ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 96.1504 99.9641 99.853 99.8666 99.9507 99.9147 99.9995 99.9722 99.9604 99.901 99.9691 99.8937
H-16	99.70463423295455	return 1 + lev@@ enshtein ( source . substring ( 1 ) , target . substring ( $NUMBER$ ) ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 99.9614 99.8741 99.8695 99.9566 99.9101 99.9995 96.1067 99.944 99.9253 99.9682 99.8913
H-16	99.6902386209239	return 1 + lev@@ enshtein ( source . substring ( 1 ) , target . substring ( 1 ) ) ; }
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 99.9614 99.8741 99.8695 99.9566 99.9101 99.9995 99.9699 99.9634 99.9097 99.9694 97.6425 97.754
H-16	99.68656412760417	return 1 + lev@@ enshtein ( source . substring ( 1 ) , target . substring ( 1 - 1 ) ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 99.9614 99.8741 99.8695 99.9566 99.9101 99.9995 99.9699 95.2912 99.7766 99.9751 99.8971 99.9628 99.9386
H-16	99.68639119466145	return 1 + lev@@ enshtein ( source , target . substring ( 1 ) , target . substring ( 1 ) ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 96.7253 99.4738 99.7055 99.8743 99.9993 99.9703 99.96 99.2027 99.7578 99.9674 99.8723 99.9994 99.9681 99.9546 99.8897 99.9767 99.9131
H-16	99.66837935014205	return 1 + lev@@ enshtein ( source . substring ( 1 ) , source . substring ( 1 ) ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 99.9614 99.8741 95.2854 99.9822 99.8135 99.9995 99.9672 99.9576 99.9049 99.9703 99.893
H-16	99.66468302408855	return 1 + lev@@ enshtein ( source . substring ( 1 ) , target . substring ( 1 ) ) - 1 ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 99.9614 99.8741 99.8695 99.9566 99.9101 99.9995 99.9699 99.9634 99.9097 94.8326 99.812 99.8301 99.9685
H-16	99.6631192294034	return source . lev@@ enshtein ( source . substring ( 1 ) , target . substring ( 1 ) ) ;
P-16	98.4085 99.9799 95.5344 99.9335 99.9779 99.8743 99.8409 99.9039 99.9992 99.9749 99.967 99.8533 99.8676 99.9655 99.9196 99.9995 99.9694 99.9768 99.9031 99.9841 99.8576
H-16	99.66124378551136	return 1 + lev@@ enshtein ( source . substring ( 0 ) , target . substring ( 1 ) ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 95.8124 99.2792 99.9028 99.8724 99.9592 99.8989 99.9995 99.9693 99.9604 99.913 99.9682 99.8745
H-16	99.65815286075367	return 1 + lev@@ enshtein ( source . substring ( 1 ) , target ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 99.9614 99.8741 99.8695 96.4743 99.9454 99.9689
H-16	99.65787406589673	return 1 + lev@@ enshtein ( source . substring ( 1 ) , target . length ( ) - 1 ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 99.9614 99.8741 99.8695 99.9566 96.5062 99.9997 99.9924 98.0688 99.9016 99.9796 99.9559 99.9699
H-16	99.65635172526042	return 1 + lev@@ enshtein ( source . substring ( 1 ) , target . substring ( 1 ) , target ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 99.9614 99.8741 99.8695 99.9566 99.9101 99.9995 99.9699 99.9634 97.4406 99.6448 97.1342 99.9625 99.9706
H-16	99.65542602539062	return 1 + lev@@ enshtein ( source . substring ( 1 ) , target . substring ( 1 + 1 ) ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 99.9614 99.8741 99.8695 99.9566 99.9101 99.9995 99.9699 94.5447 99.7732 99.9557 99.9135 99.9651 99.9417
H-16	99.65027872721355	return 1 + lev@@ enshtein ( source . substring ( 1 ) , target . substring ( 1 ) ) + 1 ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 99.9614 99.8741 99.8695 99.9566 99.9101 99.9995 99.9699 99.9634 99.9097 95.2188 99.1717 99.7493 99.9577
H-16	99.64808146158855	return 1 + lev@@ enshtein ( source . substring ( 1 ) , target . substring ( 1 ) ) ; } else
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 99.9614 99.8741 99.8695 99.9566 99.9101 99.9995 99.9699 99.9634 99.9097 99.9694 97.6425 99.6311 96.8014
H-16	99.64466349283855	return 1 + lev@@ enshtein ( source . substring ( 1 , 1 ) , target . substring ( 1 ) ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 96.4436 98.134 99.974 99.5956 99.711 99.9477 99.9163 99.9991 99.9613 99.8791 99.9167 99.9787 99.9196
H-16	99.643310546875	return lev@@ enshtein ( source , source . substring ( 1 ) , target . substring ( 1 ) ) ;
P-16	97.5749 99.8745 99.9629 99.8206 97.3933 98.819 99.9314 99.8894 99.9989 99.9754 99.9647 99.7231 99.8307 99.9513 99.9197 99.9995 99.971 99.9746 99.7999 99.9871 99.8931
H-16	99.64329020182292	return 1 + lev@@ enshtein ( source . substring ( 1 , $NUMBER$ ) , target . substring ( 1 ) ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 96.4436 98.1044 99.9733 99.6012 99.7013 99.9442 99.9212 99.9991 99.9646 99.8768 99.9153 99.9789 99.9199
H-16	99.64107259114583	return 1 + lev@@ enshtein ( source . substring ( 1 ) , target , target . substring ( 1 ) ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 99.9614 99.8741 99.8695 95.43 99.0698 99.557 99.7725 99.9988 99.9718 99.9625 99.939 99.9778 99.9066
H-16	99.64045854048295	return lev@@ enshtein ( source , target . substring ( 1 ) , target . substring ( 1 ) ) ;
P-16	97.5749 99.8745 99.9629 99.8206 97.3933 98.8175 99.854 99.9161 99.9989 99.9742 99.9675 99.722 99.8203 99.9677 99.8978 99.9995 99.9701 99.973 99.7987 99.9877 99.9012
H-16	99.63949983016305	return 1 + lev@@ enshtein ( source . to CaMeL String ( ) , target . substring ( 1 ) ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 95.3469 99.8584 99.4261 99.9989 99.9815 99.6858 99.7944 99.8241 99.91 99.9989 99.9597 99.9653 99.8833 99.9705 99.907
H-16	99.63932291666667	return 1 + lev@@ enshtein ( source . substring ( 1 ) , target . substring ( 1 , $NUMBER$ ) ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 99.9614 99.8741 99.8695 99.9566 99.9101 99.9995 99.9699 95.9533 97.9252 99.979 99.9421 99.9654 99.9426
H-16	99.63895847486413	return 1 + lev@@ enshtein ( source . substring ( 1 ) , target . substring ( 1 ) ) ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 99.9614 99.8741 99.8695 99.9566 99.9101 99.9995 99.9699 99.9634 99.9097 94.2971 99.979 99.9107
H-16	99.63672936480978	return 1 + lev@@ enshtein ( source . substring ( 1 ) , target . to CaMeL String ( ) ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 99.9614 99.8741 99.8695 99.9566 95.2849 99.8911 98.9711 99.9984 99.9954 99.8079 99.9727 99.9666
H-16	99.6343661221591	return start + lev@@ enshtein ( source . substring ( 1 ) , target . substring ( 1 ) ) ;
P-16	94.2815 99.4785 99.6526 99.9304 99.9711 99.8005 99.8831 99.9144 99.9994 99.961 99.9621 99.82 99.8426 99.9448 99.9046 99.9995 99.9689 99.9652 99.9224 99.9724 99.8836
H-16	99.63417561848958	return 1 + lev@@ enshtein ( source . substring ( 1 ) , target . char CaMeL At ( 1 ) ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 99.9614 99.8741 99.8695 99.9566 94.54 99.9059 99.2819 99.9991 99.9006 99.9928 99.9349 99.9689 99.9388
H-16	99.63304554332386	return 1 + lev@@ enshtein ( target . substring ( 1 ) , target . substring ( 1 ) ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 94.4576 99.8552 99.9493 99.9992 99.9555 99.9666 99.8658 99.8648 99.9656 99.8955 99.9995 99.9682 99.9627 99.9057 99.9708 99.8929
H-16	99.62969970703125	return 1 + lev@@ enshtein ( source . substring ( 1 - 1 ) , target . substring ( 1 ) ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 94.4003 99.6141 99.9633 99.8465 99.7841 99.9707 99.895 99.9992 99.9602 99.7897 99.9006 99.9724 99.9217
H-16	99.62964884440105	return 1 + lev@@ enshtein ( source . substring ( 1 ) , target . substring ( 1 , 1 ) ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 99.9614 99.8741 99.8695 99.9566 99.9101 99.9995 99.9699 95.9533 97.6922 99.9812 99.9421 99.9653 99.9412
H-16	99.62964884440105	return lev@@ enshtein ( source . substring ( 1 ) , target . substring ( 1 ) ) ; } return 1 ;
P-16	97.5749 99.8745 99.9629 99.8206 99.8901 99.9352 99.9994 99.9591 99.9739 99.9419 99.8712 99.9559 99.9111 99.9996 99.9693 99.9758 99.7892 99.9846 97.76 97.9497 99.2863 99.864 99.9645
H-16	99.62891642252605	return 1 ; } return lev@@ enshtein ( source . substring ( 1 ) , target . substring ( 1 ) ) ;
P-16	99.3508 98.8858 98.1144 98.433 98.1296 99.9243 99.9707 99.7633 99.4593 99.9051 99.9994 99.9596 99.9632 99.9446 99.8748 99.9228 99.9081 99.9995 99.9696 99.9728 99.7721 99.9819 99.992
H-16	99.62039620535714	return 1 + lev@@ enshtein ( source . substring ( 1 ) , target . trim ( ) ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 99.9614 99.8741 99.8695 99.9566 94.5323 99.9996 99.9403 99.8881 99.9431 99.968
H-16	99.61971382472827	return return 1 + lev@@ enshtein ( source . substring ( 1 ) , target . substring ( 1 ) ) ;
P-16	93.884 99.4719 99.4272 99.7575 99.9427 99.9762 99.7481 99.9258 99.9314 99.9994 99.959 99.9661 99.8728 99.8785 99.9541 99.9112 99.9995 99.9701 99.966 99.923 99.9667 99.9247
H-16	99.61876331676136	return 1 - lev@@ enshtein ( source . substring ( 1 ) , target . substring ( 1 ) ) ;
P-16	99.3508 93.864 99.5985 99.9469 99.9837 99.8567 99.931 99.939 99.9994 99.9639 99.9636 99.9151 99.875 99.9598 99.9107 99.9995 99.9695 99.9718 99.8542 99.9736 99.8887
H-16	99.61853637695313	return lev@@ enshtein ( source . substring ( $NUMBER$ ) , target . substring ( 1 ) ) ;
P-16	97.5749 99.8745 99.9629 99.8206 99.8901 99.9352 99.9994 96.172 99.9782 99.9342 99.8717 99.9513 99.9161 99.9996 99.9734 99.9739 99.7792 99.9845 99.8816
H-16	99.61818625710227	return 1 * lev@@ enshtein ( source . substring ( 1 ) , target . substring ( 1 ) ) ;
P-16	99.3508 93.7627 99.666 99.9738 99.9855 99.8309 99.9538 99.9508 99.9991 99.9625 99.9679 99.8893 99.8699 99.963 99.9111 99.9995 99.9704 99.9702 99.8837 99.9702 99.8713
H-16	99.61791381835937	return lev@@ enshtein ( source . substring ( 1 ) , target . substring ( $NUMBER$ ) ) ;
P-16	97.5749 99.8745 99.9629 99.8206 99.8901 99.9352 99.9994 99.9591 99.9739 99.9419 99.8712 99.9559 99.9111 99.9996 96.1341 99.9655 99.8266 99.9843 99.8799
H-16	99.61653275923295	return lev@@ enshtein ( source . substring ( 1 ) , target . substring ( 1 ) , target ) ;
P-16	97.5749 99.8745 99.9629 99.8206 99.8901 99.9352 99.9994 99.9591 99.9739 99.9419 99.8712 99.9559 99.9111 99.9996 99.9693 99.9758 98.2988 99.7301 97.0713 99.9811 99.9693
H-16	99.612548828125	return lev@@ enshtein ( source . substring ( 1 ) , target . length ( ) ) ;
P-16	97.5749 99.8745 99.9629 99.8206 99.8901 99.9352 99.9994 99.9591 99.9739 99.9419 99.8712 99.9559 96.3413 99.9997 99.9922 99.7355 99.9596 99.9529
H-16	99.61122197690217	{ return 1 + lev@@ enshtein ( source . substring ( 1 ) , target . substring ( 1 ) ) ;
P-16	99.6759 99.4388 99.5637 99.7203 99.9575 99.9823 99.7926 99.8989 99.9465 99.9994 99.96 99.9676 99.8773 99.8837 99.9568 99.9146 99.9995 99.9696 99.9642 99.8933 99.9687 99.6366
H-16	99.61095610119048	return lev@@ enshtein ( source . substring ( 1 ) , target . substring ( 1 ) ) ; }
P-16	97.5749 99.8745 99.9629 99.8206 99.8901 99.9352 99.9994 99.9591 99.9739 99.9419 99.8712 99.9559 99.9111 99.9996 99.9693 99.9758 99.7892 99.9846 97.76 97.7831
H-16	99.6067782315341	return 1 + lev@@ enshtein ( source . substring ( 1 ) , target . substring ( 0 ) ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 99.9614 99.8741 99.8695 99.9566 99.9101 99.9995 94.8988 98.9981 99.8997 99.963 99.923
H-16	99.60493607954545	return lev@@ enshtein lev@@ enshtein ( source . substring ( 1 ) , target . substring ( 1 ) ) ;
P-16	97.5749 99.8745 95.6545 99.537 99.9754 99.8608 99.8511 99.8861 99.9992 99.9598 99.9641 99.9423 99.8567 99.9518 99.9139 99.9995 99.9679 99.9774 99.7925 99.9846 99.8869
H-16	99.6044921875	return 1 + lev@@ enshtein ( source . substring ( 1 ) , target . substring ( 1 ) ) ; ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 99.9614 99.8741 99.8695 99.9566 99.9101 99.9995 99.9699 99.9634 99.9097 99.9694 93.486 99.9384
H-16	99.60090906479779	return 1 + lev@@ enshtein ( source , target . substring ( 1 ) ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 96.7253 99.4738 99.7055 99.8743 99.9993 99.9703 99.96 99.3875 99.9528 99.9039
H-16	99.59954279119319	return lev@@ enshtein ( source . substring ( 1 ) , target , target . substring ( 1 ) ) ;
P-16	97.5749 99.8745 99.9629 99.8206 99.8901 99.9352 99.9994 99.9591 99.9739 99.9419 99.8712 95.9761 99.3176 99.6573 99.7942 99.999 99.9706 99.9792 99.9074 99.9882 99.8989
H-16	99.59897682883523	return 1 + lev@@ enshtein ( source . substring ( 1 , target . substring ( 1 ) ) ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 96.4436 98.9462 99.9917 99.0635 99.9974 99.7845 99.7832 99.8316 99.3304 99.9697 99.9406
H-16	99.5907958984375	return lev@@ enshtein ( target . substring ( 1 ) , target . substring ( 1 ) ) ;
P-16	97.5749 99.8745 99.9629 95.5072 99.8443 99.9424 99.9993 99.958 99.9772 99.9413 99.8683 99.9649 99.9033 99.9996 99.9681 99.9756 99.7902 99.985 99.8813
H-16	99.590673828125	return lev@@ enshtein ( source . substring ( 1 ) , source . substring ( 1 ) ) ;
P-16	97.5749 99.8745 99.9629 99.8206 99.8901 99.9352 99.9994 99.9591 99.9739 99.9419 95.5861 99.9747 99.8382 99.9996 99.9679 99.9714 99.7796 99.9849 99.8811
H-16	99.58741396949405	return 1 + lev@@ enshtein ( source . length ( ) , target . substring ( 1 ) ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 95.4351 99.9994 99.994 98.6292 99.7194 99.7702 99.9063 99.9988 99.9559 99.9598 99.8802 99.9632 99.9267
H-16	99.58458891369048	return 1 + lev@@ enshtein ( source . substring ( 1 , target . length ( ) ) ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 96.4436 98.9462 99.9917 99.1942 99.9987 99.995 99.7374 98.9716 99.9716 99.9313
H-16	99.58355422247024	return 1 + lev@@ enshtein ( source . trim ( ) , target . substring ( 1 ) ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 94.6898 99.9991 99.7438 99.4668 99.7022 99.8398 99.9027 99.9987 99.9665 99.9621 99.872 99.9723 99.9413
H-16	99.58291015625	return source . substring ( 1 ) ; } else { return source . substring ( 1 ) ;
P-16	98.4085 99.9799 99.6682 99.9984 99.9502 99.9102 99.7552 97.4735 99.5233 99.8878 99.9191 98.0349 99.9019 99.9118 99.9982 99.9313 99.9109 99.8465 99.7508
H-16	99.5806396484375	return source . substring ( 1 ) ; } else { return target . substring ( 1 ) ;
P-16	98.4085 99.9799 99.6682 99.9984 99.9502 99.9102 99.7552 97.4735 99.5233 99.8878 99.9191 98.2429 99.6365 99.9282 99.998 99.9339 99.9124 99.8546 99.7347
H-16	99.57565174932066	return 1 + 1 + lev@@ enshtein ( source . substring ( 1 ) , target . length ( ) ) ;
P-16	99.3508 99.5714 97.2749 99.3826 99.6596 99.9315 99.9699 99.7832 99.8699 99.8282 99.9995 99.9487 99.9625 99.7721 99.8397 99.9465 96.5992 99.9997 99.9933 99.7916 99.9008 99.9665
H-16	99.57513718377976	return 1 + lev@@ enshtein ( source . substring ( 1 ) , target . start ( ) ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 99.9614 99.8741 99.8695 99.9566 94.5856 99.7511 99.7973 99.3868 99.8674 99.9327
H-16	99.57357933407738	return 1 ; } else { return 1 + lev@@ enshtein ( source . substring ( 1 ) ) ;
P-16	99.3508 98.8858 98.1144 99.586 99.9348 99.8824 99.3581 99.5802 99.6445 99.9614 99.9702 99.7751 99.7719 99.9616 99.9994 99.9504 99.9628 97.6202 99.9114 99.9262
H-16	99.56971324573864	return lev@@ enshtein ( source . substring ( 1 ) , target . substring ( 1 - 1 ) ) ;
P-16	97.5749 99.8745 99.9629 99.8206 99.8901 99.9352 99.9994 99.9591 99.9739 99.9419 99.8712 99.9559 99.9111 99.9996 99.9693 94.5631 99.7784 99.9789 99.7644 99.9817 99.9299
H-16	99.56899879092262	return 0 + lev@@ enshtein ( source . substring ( 1 ) , target . length ( ) ) ;
P-16	96.1058 99.7724 99.6588 99.964 99.9824 99.8104 99.94 99.9359 99.9993 99.9573 99.9608 99.872 99.8703 99.9609 96.6134 99.9997 99.9928 99.7805 99.9161 99.9583
H-16	99.56889415922619	return lev@@ enshtein ( source . substring ( 1 ) , target . length ( ) - 1 ) ;
P-16	97.5749 99.8745 99.9629 99.8206 99.8901 99.9352 99.9994 99.9591 99.9739 99.9419 99.8712 99.9559 96.3413 99.9997 99.9922 98.1521 99.9029 99.9622 99.9767 99.9623
H-16	99.56825474330357	return 1 + lev@@ enshtein ( source . substring ( 1 ) , target . size ( ) ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 99.9614 99.8741 99.8695 99.9566 93.4782 99.9995 99.995 99.8232 99.9105 99.9702
H-16	99.56700550426136	return $NUMBER$ + lev@@ enshtein ( source . substring ( 1 ) , target . substring ( $NUMBER$ ) ) ;
P-16	96.1172 99.7815 99.6913 99.9672 99.9769 99.8131 99.9386 99.9418 99.9993 99.9589 99.9625 99.8743 99.875 99.9578 99.9128 99.9995 96.0946 99.9335 99.9273 99.9698 99.8839
H-16	99.56578480113636	return lev@@ enshtein ( source . substring ( 1 ) , target . substring ( 1 , $NUMBER$ ) ) ;
P-16	97.5749 99.8745 99.9629 99.8206 99.8901 99.9352 99.9994 99.9591 99.9739 99.9419 99.8712 99.9559 99.9111 99.9996 99.9693 95.7251 98.4106 99.982 99.873 99.9818 99.9374
H-16	99.56486241957721	return 1 + 1 + lev@@ enshtein ( source . substring ( 1 ) ) ;
P-16	99.3508 99.5714 97.2749 99.3826 99.6596 99.9315 99.9699 99.7832 99.8699 99.8282 99.9995 99.9487 99.9625 98.3675 99.9124 99.8925
H-16	99.56458100818452	return $NUMBER$ + lev@@ enshtein ( source . substring ( 1 ) , target . length ( ) ) ;
P-16	96.1172 99.7815 99.6913 99.9672 99.9769 99.8131 99.9386 99.9418 99.9993 99.9589 99.9625 99.8743 99.875 99.9578 96.4568 99.9997 99.9924 99.7773 99.9182 99.9586
H-16	99.55802001953126	return lev@@ enshtein ( source . substring ( 0 ) , target . substring ( 1 ) ) ;
P-16	97.5749 99.8745 99.9629 99.8206 99.8901 99.9352 99.9994 95.6607 99.2965 99.958 99.8756 99.953 99.8977 99.9996 99.9696 99.9697 99.7794 99.9835 99.8618
H-16	99.55497814360119	return lev@@ enshtein ( source . substring ( 1 ) , target . to CaMeL String ( ) ) ;
P-16	97.5749 99.8745 99.9629 99.8206 99.8901 99.9352 99.9994 99.9591 99.9739 99.9419 99.8712 99.9559 95.4992 99.8917 98.9854 99.9987 99.9947 99.6857 99.9859 99.9559
H-16	99.55457153320313	return 1 + lev@@ enshtein ( source . substring ( 1 ) . substring ( 1 ) ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 99.9614 94.6161 99.223 99.9981 99.9522 99.9363 99.5382 99.9492 99.8219
H-16	99.54013061523438	return source . substring ( 1 ) + lev@@ enshtein ( source . substring ( 1 ) ) ;
P-16	98.4085 99.9799 99.6682 99.9984 99.9502 99.9102 97.5734 97.6052 99.7968 99.8747 99.7647 99.971 99.6166 99.9994 99.9479 99.9668 99.1741 99.901 99.798
H-16	99.53938562729779	return 1 + lev@@ enshtein ( source . substring ( 1 ) , $NUMBER$ ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 99.9614 99.8741 94.4418 99.918 99.914 99.9651
H-16	99.53191528320312	return 1 + lev@@ enshtein ( source . substring ( 1 ) ) . substring ( 1 ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 99.9614 97.8063 95.9743 99.4715 99.998 99.9673 99.9185 99.5762 99.87
H-16	99.53022846422698	return 1 + lev@@ enshtein ( source . substring ( 1 ) , target , target ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 99.9614 99.8741 99.8695 95.43 99.0698 98.9024 99.9432 99.9287
H-16	99.52710678998162	return 1 + lev@@ enshtein ( source . substring ( 1 ) , 1 ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 99.9614 99.8741 94.2649 99.8919 99.9066 99.9667
H-16	99.52012125651042	return 1 + source . substring ( 1 ) , target . substring ( 1 ) ;
P-16	99.3508 99.5714 97.2587 99.9835 99.7087 99.9976 99.9421 99.9295 96.9825 99.6971 99.9776 99.8863 99.9991 99.9738 99.9608 99.4391 99.8058
H-16	99.5129150390625	return 1 + lev@@ enshtein ( source . substring ( 1 ) ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 99.9614 97.8063 99.9118 96.919
H-16	99.51161595394737	return 1 + 1 + lev@@ enshtein ( source . substring ( 1 ) , target ) ;
P-16	99.3508 99.5714 97.2749 99.3826 99.6596 99.9315 99.9699 99.7832 99.8699 99.8282 99.9995 99.9487 99.9625 99.7721 99.8397 96.7736 99.9386 99.9664
H-16	99.5113296508789	return source . substring ( 1 ) ; } else { return 1 ; }
P-16	98.4085 99.9799 99.6682 99.9984 99.9502 99.9102 99.7552 97.4735 99.5233 99.8878 99.9191 99.1132 99.5999 99.1326 99.9639
H-16	99.51101345486111	return source . substring ( 1 ) + $STRING$ + target . substring ( 1 ) ;
P-16	98.4085 99.9799 99.6682 99.9984 99.9502 99.9102 97.5734 98.3105 99.3186 99.2378 99.9212 99.6868 99.9973 99.9597 99.9324 99.6659 99.7817
H-16	99.50864545036765	return 1 + lev@@ enshtein ( source , source . substring ( 1 ) ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 96.7253 97.8436 99.8309 99.823 99.9993 99.9711 99.9537 99.379 99.9533 99.9048
H-16	99.50429400275735	return 1 + lev@@ enshtein ( source . substring ( 1 ) , $STRING$ ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 99.9614 99.8741 93.9616 99.766 99.9482 99.9664
H-16	99.50369083180146	return source . substring ( 1 , target . length ( ) - 1 ) ;
P-16	98.4085 99.9799 99.6682 99.9984 99.9502 97.3261 98.8614 99.9956 99.1312 99.9985 99.9969 98.6581 99.8633 99.9919 99.9576 99.8794
H-16	99.50274299172794	return 1 + lev@@ enshtein ( source . substring ( 1 ) , 0 ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 99.9614 99.8741 94.0762 99.6594 99.9131 99.9673
H-16	99.50057779947916	return source . substring ( 1 ) ; } else { return 1 ;
P-16	98.4085 99.9799 99.6682 99.9984 99.9502 99.9102 99.7552 97.4735 99.5233 99.8878 99.9191 99.1132 99.5999 99.4238
H-16	99.49247472426471	return 1 + lev@@ enshtein ( source . substring ( 1 , 1 ) ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 96.4436 98.134 99.974 98.833 99.9458 99.9465
H-16	99.49199761284723	return 1 + source . substring ( 1 ) + target . substring ( 1 ) ;
P-16	99.3508 99.5714 97.2587 99.9835 99.7087 99.9976 99.9421 99.9295 98.1914 97.997 99.9199 99.8202 99.998 99.9482 99.9242 99.6345 99.7823
H-16	99.49006922104779	return 1 + lev@@ enshtein ( source . substring ( 1 , $NUMBER$ ) ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 96.4436 98.1044 99.9733 98.8212 99.9461 99.9477
H-16	99.48221588134766	return 1 + lev@@ enshtein ( source . length ( ) - 1 ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 95.4351 99.9994 99.994 98.5041 99.8733 99.8779 99.8542 99.9798
H-16	99.4802605124081	return $NUMBER$ + lev@@ enshtein ( source . substring ( 1 ) , target ) ;
P-16	96.1172 99.7815 99.6913 99.9672 99.9769 99.8131 99.9386 99.9418 99.9993 99.9589 99.9625 99.8743 99.875 96.4542 99.9483 99.9666
H-16	99.46950396369485	return 0 + lev@@ enshtein ( source . substring ( 1 ) , target ) ;
P-16	96.1058 99.7724 99.6588 99.964 99.9824 99.8104 99.94 99.9359 99.9993 99.9573 99.9608 99.872 99.8703 96.3417 99.9485 99.9642
H-16	99.46639251708984	return 1 + lev@@ enshtein ( source . substring ( 1 ) ) ) ;
P-16	99.3508 99.5714 99.6889 99.9617 99.9817 99.8108 99.9345 99.9407 99.9993 99.9576 99.9614 97.8063 95.7132 99.9641 99.9222
H-16	99.4571533203125	return 1 ; } else { return source . substring ( 1 ) ;
P-16	99.3508 98.8858 98.1144 99.586 99.9348 99.8824 97.1492 99.9547 99.9148 99.9984 99.9325 99.8833 99.6446 99.728
H-16	99.44868977864583	return 1 ; } else { return target . substring ( 1 ) ;
P-16	99.3508 98.8858 98.1144 99.586 99.9348 99.8824 97.1245 99.7807 99.9546 99.9983 99.9344 99.8718 99.6682 99.746
H-16	99.29928927951389	return source . substring ( 1 ) ;
P-16	98.4085 99.9799 99.6682 99.9984 99.9502 99.9102 99.7552 96.1255
H-16	98.41534423828125	return 1 ;
P-16	99.3508 98.8858 95.5272
S-17	longest = length + 1 ;
T-17	longest = Math . max ( longest , length + 1 ) ;
H-17	99.63894217354911	longest = length + 1 ;
P-17	99.8378 99.2108 99.4377 99.9109 99.9928 99.5436
H-17	99.504638671875	longest = length - 1 ;
P-17	99.8378 99.2108 98.6424 99.7113 99.9882 99.603
H-17	99.48426055908203	longest = length + 1 ; }
P-17	99.8378 99.2108 99.4377 99.9109 99.9928 98.5585 99.3866
H-17	99.3362808227539	longest = length - 1 ; }
P-17	99.8378 99.2108 98.6424 99.7113 99.9882 98.4508 99.31
H-17	99.30094146728516	longest = = length + 1 ;
P-17	99.8378 97.6981 98.4019 99.3034 99.8664 99.9933 99.7677
H-17	99.29500906808036	longest = length * 1 ;
P-17	99.8378 99.2108 97.047 99.867 99.983 99.5804
H-17	99.29224989149306	longest = length + 1 ; break ;
P-17	99.8378 99.2108 99.4377 99.9109 99.9928 95.904 99.971 99.8263
H-17	99.27956717354911	length = length + 1 ;
P-17	99.6541 99.5525 99.4369 99.9421 99.9947 99.5308
H-17	99.27872140066964	longest = longest + 1 ;
P-17	99.8378 98.5617 97.9639 99.843 99.9898 99.2159
H-17	99.27064514160156	longest = longest + 1 ; }
P-17	99.8378 98.5617 97.9639 99.843 99.9898 99.0168 99.4133
H-17	99.26162283761161	longest = longest - 1 ;
P-17	99.8378 98.5617 98.2572 99.4837 99.9866 99.1655
H-17	99.26068878173828	longest = longest - 1 ; }
P-17	99.8378 98.5617 98.2572 99.4837 99.9866 99.0479 99.3717
H-17	99.22299194335938	} longest = length + 1 ;
P-17	98.2197 99.8096 98.8244 99.5445 99.8847 99.9968 99.8928
H-17	99.21929931640625	longest = longest ; }
P-17	99.8378 98.5617 99.4569 99.1953 98.7252
H-17	99.2037124633789	longest = = length - 1 ;
P-17	99.8378 97.6981 98.4019 98.6551 99.7024 99.986 99.8095
H-17	99.2034912109375	} else { longest = length + 1 ;
P-17	98.8993 99.5512 99.4247 99.8801 98.5971 99.6779 99.9063 99.9907 98.4959
H-17	99.18099636501736	longest = = = length + 1 ;
P-17	99.8378 97.6981 98.3371 98.4711 99.2049 99.871 99.9894 99.6806
H-17	99.17504119873047	length = length + 1 ; }
P-17	99.6541 99.5525 99.4369 99.9421 99.9947 98.6116 99.3625
H-17	99.17138671875	longest = longest ; } }
P-17	99.8378 98.5617 99.4569 99.1953 98.7651 98.844
H-17	99.15085274832589	longest = length / 1 ;
P-17	99.8378 99.2108 96.0607 99.8783 99.9898 99.5396
H-17	99.15065511067708	longest = longest ; longest = longest ;
P-17	99.8378 98.5617 99.4569 97.7705 99.9294 98.1481 99.7948 99.3177
H-17	99.14972795758929	longest = length - length ;
P-17	99.8378 99.2108 98.6424 97.1888 99.8962 99.7331
H-17	99.14280395507812	} else { = length + 1 ; }
P-17	98.8993 99.5512 97.5844 99.1006 99.7764 99.8891 99.9749 99.3387 99.7017
H-17	99.14241536458333	longest = = = length - 1 ;
P-17	99.8378 97.6981 98.3371 98.4711 98.9263 99.7684 99.9816 99.7224
H-17	99.14229125976563	longest = length + 1 ; return longest ;
P-17	99.8378 99.2108 99.4377 99.9109 99.9928 94.4013 99.1818 99.9475 99.9635
H-17	99.13981797960069	} else if = length + 1 ;
P-17	98.8993 98.6089 99.2686 98.533 99.7585 99.9065 99.7801 99.892
H-17	99.13299560546875	this . longest = length + 1 ;
P-17	99.9458 99.8757 99.9325 99.3099 99.7101 99.8573 99.9873 99.5387
H-17	99.13130187988281	longest = length * 1 ; }
P-17	99.8378 99.2108 97.047 99.867 99.983 98.4783 99.0875
H-17	99.12808566623264	longest = length - 1 ; break ;
P-17	99.8378 99.2108 98.6424 99.7113 99.9882 95.4203 99.9689 99.8341
H-17	99.12483433314732	longest = length + length ;
P-17	99.8378 99.2108 99.4377 96.1441 99.9638 99.7407
H-17	99.12482561383929	length = length - 1 ;
P-17	99.6541 99.5525 98.4166 99.7885 99.9894 99.6269
H-17	99.116796875	longest = length + 1 ; break ; }
P-17	99.8378 99.2108 99.4377 99.9109 99.9928 95.904 99.971 97.8471 99.5169
H-17	99.108544921875	longest = longest ;
P-17	99.8378 98.5617 99.4569 98.1474
H-17	99.10178048270089	longest = longest * 1 ;
P-17	99.8378 98.5617 96.9563 99.567 99.9626 99.2882
H-17	99.09756033761161	longest += length + 1 ;
P-17	97.7433 99.1953 97.8147 99.9424 99.9935 99.4549
H-17	99.09673394097223	longest = length + 1 ; } }
P-17	99.8378 99.2108 99.4377 99.9109 99.9928 98.5585 96.678 98.7052
H-17	99.09522247314453	longest = = longest + 1 ;
P-17	99.8378 97.6981 98.4053 97.9459 99.7112 99.9884 99.6362
H-17	99.09254964192708	longest = length + 1 + 1 ;
P-17	99.8378 99.2108 99.4377 99.9109 94.7064 99.6225 99.996 99.5719
H-17	99.08973693847656	} if = longest + 1 ;
P-17	98.4027 98.716 99.3008 99.0641 99.7861 99.9538 99.8829
H-17	99.08062744140625	longest = longest ; } longest = longest ;
P-17	99.8378 98.5617 99.4569 99.1953 96.9534 99.8878 98.937 99.421 99.0164
H-17	99.0784912109375	} else { longest = length - 1 ;
P-17	98.8993 99.5512 99.4247 99.8801 98.5971 98.2005 99.8274 99.9825 98.8105
H-17	99.07832166883681	longest = length + 1 ; } else
P-17	99.8378 99.2108 99.4377 99.9109 99.9928 98.5585 98.6169 96.6005
H-17	99.07428850446429	longest = length + $NUMBER$ ;
P-17	99.8378 99.2108 99.4377 95.9634 99.9888 99.5426
H-17	99.06940375434027	longest = = length + 1 ; }
P-17	99.8378 97.6981 98.4019 99.3034 99.8664 99.9933 97.742 99.2429
H-17	99.06829155815973	longest = longest ; } } else {
P-17	99.8378 98.5617 99.4569 99.1953 98.7651 98.62 99.796 97.8429
H-17	99.06667073567708	longest = longest ; longest = length ;
P-17	99.8378 98.5617 99.4569 97.7705 99.9294 98.7768 98.1948 99.5332
H-17	99.06401715959821	longest = longest - length ;
P-17	99.8378 98.5617 98.2572 97.7368 99.8883 99.6274
H-17	99.06253051757812	longest = = longest - 1 ;
P-17	99.8378 97.6981 98.4053 98.1241 99.3101 99.9855 99.6006
H-17	99.06004115513393	longest = = longest ; }
P-17	99.8378 97.6981 98.4053 99.4037 99.4204 99.1162
H-17	99.05930582682292	longest = 1 ; longest = 1 ;
P-17	99.8378 96.4062 99.8695 97.9643 99.9003 98.9274 99.9556 99.1338
H-17	99.05693708147321	result = length + 1 ;
P-17	99.9948 99.5569 99.6365 99.9091 99.9802 99.6625
H-17	99.05410330636161	longest = longest ; break ;
P-17	99.8378 98.5617 99.4569 96.268 99.9951 99.7204
H-17	99.05321248372395	longest += length ; }
P-17	97.7433 99.1953 99.7659 99.1279 98.9479
H-17	99.05245208740234	longest += length + 1 ; }
P-17	97.7433 99.1953 97.8147 99.9424 99.9935 98.6797 99.5119
H-17	99.0519790649414	longest = longest * 1 ; }
P-17	99.8378 98.5617 96.9563 99.567 99.9626 98.8673 99.1242
H-17	99.05026245117188	longest = length + 1 ; ;
P-17	99.8378 99.2108 99.4377 99.9109 99.9928 94.8911 99.5821
H-17	99.0481185913086	longest = = length * 1 ;
P-17	99.8378 97.6981 98.4019 97.418 99.7649 99.9606 99.7647
H-17	99.03877258300781	longest = length / 1 ; }
P-17	99.8378 99.2108 96.0607 99.8783 99.9898 98.5358 99.258
H-17	99.03664822048611	} else { = length + 1 ;
P-17	98.8993 99.5512 97.5844 99.1006 99.7764 99.8891 99.9749 98.9423
H-17	99.03265380859375	longest = length + 0 ;
P-17	99.8378 99.2108 99.4377 95.5961 99.9934 99.6139
H-17	99.01463099888393	if = length + 1 ;
P-17	98.0129 98.6933 99.4284 99.9312 99.944 99.7198
H-17	99.01044311523438	longest += length ;
P-17	97.7433 99.1953 99.7659 98.8088
H-17	98.99479457310268	longest += length - 1 ;
P-17	97.7433 99.1953 97.3662 99.6177 99.9914 99.5107
H-17	98.99418640136719	length = length - 1 ; }
P-17	99.6541 99.5525 98.4166 99.7885 99.9894 98.4739 99.2326
H-17	98.98844146728516	longest = longest / 1 ; }
P-17	99.8378 98.5617 96.1408 99.5862 99.9828 98.9783 99.2811
H-17	98.98568725585938	longest += 1 ; }
P-17	97.7433 98.5105 99.9837 99.263 98.8748
H-17	98.98439025878906	longest = length + $NUMBER$ ; }
P-17	99.8378 99.2108 99.4377 95.9634 99.9888 98.5311 99.3666
H-17	98.97883823939732	longest = longest / 1 ;
P-17	99.8378 98.5617 96.1408 99.5862 99.9828 99.2037
H-17	98.9766845703125	result = length + 1 ; }
P-17	99.9948 99.5569 99.6365 99.9091 99.9802 98.384 99.6933
H-17	98.97348022460938	longest = longest ; break ; }
P-17	99.8378 98.5617 99.4569 96.268 99.9951 98.4556 99.6739
H-17	98.97317940848214	if = longest + 1 ;
P-17	98.0129 98.8589 99.0957 99.8852 99.9471 99.6398
H-17	98.97019449869792	return length + 1 ;
P-17	99.3967 99.1202 99.8327 99.988 99.8882
H-17	98.96843610491071	} = length + 1 ;
P-17	97.2104 98.6993 99.4485 99.9218 99.9906 99.8969
H-17	98.9662857055664	longest = = = longest ; }
P-17	99.8378 97.6981 98.3371 98.3971 99.5377 98.9046 99.479
H-17	98.96430315290179	longest = size + 1 ;
P-17	99.8378 94.7176 99.3369 99.8397 99.9919 99.4872
H-17	98.95101492745536	longest += length ; } }
P-17	97.7433 99.1953 99.7659 99.1279 98.4932 98.7926
H-17	98.93872942243304	length = length * 1 ;
P-17	99.6541 99.5525 97.023 99.9198 99.9891 99.5867
H-17	98.92335001627605	longest = 1 ; }
P-17	99.8378 96.4062 99.8695 99.2844 98.6033
H-17	98.9220682779948	longest = length ; }
P-17	99.8378 99.2108 97.3401 98.9515 98.6533
H-17	98.91343470982143	longest = length ; } }
P-17	99.8378 99.2108 97.3401 98.9515 98.6003 98.9147
H-17	98.91240583147321	longest = length - longest ;
P-17	99.8378 99.2108 98.6424 95.5099 99.9643 99.6826
H-17	98.90959821428571	longest = = = longest ;
P-17	99.8378 97.6981 98.3371 98.3971 99.5377 99.0205
H-17	98.90528215680804	longest = length - $NUMBER$ ;
P-17	99.8378 99.2108 98.6424 95.5365 99.9812 99.5893
H-17	98.89394124348958	} longest = longest ;
P-17	98.2197 99.8096 98.7041 99.7316 99.2871
H-17	98.8935302734375	longest = length ;
P-17	99.8378 99.2108 97.3401 98.54
H-17	98.8021952311198	longest = = longest ;
P-17	99.8378 97.6981 98.4053 99.4037 97.9294
H-17	98.7866923014323	longest += longest ; }
P-17	97.7433 97.4811 99.8196 99.1528 98.9843
H-17	98.7845947265625	longest += 1 ;
P-17	97.7433 98.5105 99.9837 98.1466
H-17	98.75546264648438	} longest += length ;
P-17	98.2197 97.7912 99.3368 99.8686 99.7049
H-17	98.70711669921874	longest -- ; }
P-17	95.4918 99.9627 99.5953 98.9469
H-17	98.6931640625	longest ++ ; }
P-17	95.3841 99.9773 99.6109 98.9546
H-17	98.68951416015625	longest += longest ;
P-17	97.7433 97.4811 99.8196 98.8646
H-17	98.66865234375	longest = 1 ;
P-17	99.8378 96.4062 99.8695 97.6909
H-17	98.5611572265625	length += length ;
P-17	98.2097 99.2351 99.8087 98.7064
H-17	98.5116958618164	return length ;
P-17	99.3967 99.305 99.7496
H-17	98.34957885742188	break ;
P-17	99.7536 99.3821
H-17	98.28535461425781	break ; }
P-17	99.7536 99.0742 98.4006
H-17	98.26167297363281	return longest ;
P-17	97.7898 99.937 99.7244
H-17	97.7379150390625	continue ;
P-17	99.6406 99.8249
H-17	97.64554850260417	} else
P-17	98.8993 96.4258
S-18	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . substring ( 1 ) , b ) ;
T-18	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . substring ( 1 ) , b . substring ( 1 ) ) ;
H-18	99.81408239293981	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . substring ( 1 ) , b ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 99.7526 99.7307 99.9985 99.744 99.8252 99.6944 99.6014 99.8637 99.9757 99.8055
H-18	99.775126953125	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . substring ( 1 ) ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 99.7526 99.7307 99.9985 99.744 99.8252 98.5877 99.9394 99.8113
H-18	99.76421440972223	return a . char CaMeL At ( 1 ) + longest _ common _ subsequence ( a . substring ( 1 ) , b ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 98.3534 99.9951 99.3631 99.5217 99.9995 99.9848 99.9995 99.9925 99.9804 99.8396 99.7249 99.728 99.9985 99.7548 99.8213 99.7057 99.6021 99.8578 99.9754 99.8069
H-18	99.76271339699075	return $STRING$ . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . substring ( 1 ) , b ) ;
P-18	98.7085 99.0412 99.435 99.9997 99.9867 99.9994 99.6677 99.9857 99.6028 99.5117 99.9995 99.9862 99.9994 99.9938 99.9847 99.8317 99.7142 99.7399 99.9985 99.7491 99.8338 99.6515 99.6006 99.9099 99.9744 99.8232
H-18	99.72567749023438	return $STRING$ + longest _ common _ subsequence ( a . substring ( 1 ) , b ) ;
P-18	98.7085 98.934 99.1321 99.9969 99.983 99.9981 99.9903 99.9849 99.8622 99.5498 99.7322 99.9985 99.773 99.8625 99.7859 99.6969 99.8914 99.9636 99.8051
H-18	99.72390625	return $STRING$ . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . substring ( 1 ) ) ;
P-18	98.7085 99.0412 99.435 99.9997 99.9867 99.9994 99.6677 99.9857 99.6028 99.5117 99.9995 99.9862 99.9994 99.9938 99.9847 99.8317 99.7142 99.7399 99.9985 99.7491 99.8338 98.7056 99.933 99.8251
H-18	99.71939453125	return a . char CaMeL At ( 1 ) + longest _ common _ subsequence ( a . substring ( 1 ) ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 98.3534 99.9951 99.3631 99.5217 99.9995 99.9848 99.9995 99.9925 99.9804 99.8396 99.7249 99.728 99.9985 99.7548 99.8213 98.553 99.934 99.8118
H-18	99.71766493055556	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . substring ( $NUMBER$ ) , b ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 99.7526 99.7307 99.9985 97.1062 99.8618 99.6569 99.6101 99.8859 99.9727 99.8124
H-18	99.70636541193181	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a , b ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 98.1516 98.9066 99.8521 99.9509 99.6899
H-18	99.70468930844908	return $STRING$ . char CaMeL At ( 1 ) + longest _ common _ subsequence ( a . substring ( 1 ) , b ) ;
P-18	98.7085 99.0412 99.435 99.9997 99.9867 99.9994 98.14 99.9927 99.5977 99.5229 99.9994 99.9867 99.9994 99.9936 99.9843 99.8384 99.6534 99.7282 99.9984 99.7581 99.8313 99.6609 99.5977 99.9069 99.9744 99.8271
H-18	99.70082600911458	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . length ( ) ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 99.7526 97.3068 99.9958 99.9975 98.964 99.9153 99.8993
H-18	99.69944411057692	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . length ( ) - 1 ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 99.7526 97.3068 99.9958 99.9975 98.9453 99.5181 99.8713 99.8479 99.9615
H-18	99.69777074353448	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . char CaMeL At ( 0 ) , b ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 99.7526 96.154 99.9983 99.985 99.9992 99.5201 99.9946 99.5169 99.632 99.8773 99.9736 99.8429
H-18	99.69338650173611	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . substring ( 0 , 0 ) ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 99.7526 99.7307 99.9985 98.0729 99.8874 98.3029 99.6617 99.5183 99.9648 99.8426
H-18	99.69191261574075	return a . char CaMeL At ( $NUMBER$ ) + longest _ common _ subsequence ( a . substring ( 1 ) , b ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 96.3886 99.9902 99.3666 99.5396 99.9996 99.9849 99.9995 99.9924 99.9798 99.8378 99.7289 99.7289 99.9984 99.7512 99.8135 99.7001 99.6024 99.8627 99.9746 99.8127
H-18	99.68459556842673	return $STRING$ + a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . substring ( 1 ) , b ) ;
P-18	98.7085 98.934 98.5402 99.143 99.377 99.9996 99.9952 99.9995 99.8406 99.994 99.6792 99.258 99.9991 99.9808 99.9993 99.9853 99.9775 99.8222 99.6686 99.6996 99.9982 99.73 99.8286 99.5209 99.5993 99.9015 99.9712 99.8375
H-18	99.68254141971983	return a . char CaMeL At ( 0 ) + $STRING$ + longest _ common _ subsequence ( a . substring ( 1 ) , b ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 97.867 99.215 98.591 99.9966 99.9482 99.998 99.9852 99.9669 99.8211 99.6273 99.6914 99.9987 99.7603 99.8089 99.519 99.6112 99.8972 99.9773 99.8157
H-18	99.68122468171296	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . substring ( 1 , 0 ) ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 99.7526 99.7307 99.9985 99.744 98.0776 97.9123 99.7784 99.5641 99.9624 99.8837
H-18	99.67749865301724	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . substring ( 1 ) , b ) ; } else
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 99.7526 99.7307 99.9985 99.744 99.8252 99.6944 99.6014 99.8637 99.9757 98.2066 99.7746 97.4915
H-18	99.67611799568965	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . char CaMeL At ( 1 ) , b ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 99.7526 96.154 99.9983 99.985 99.9992 98.8409 99.9954 99.5585 99.6377 99.8775 99.9747 99.845
H-18	99.67535189924568	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . substring ( 0 , 0 ) , b ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 99.7526 99.7307 99.9985 98.0729 99.8874 98.3029 99.6617 98.9751 99.519 99.9171 99.9865 99.7917
H-18	99.67511455829327	return a . to CaMeL String ( ) + longest _ common _ subsequence ( a . substring ( 1 ) , b ) ;
P-18	99.2151 99.7966 97.1854 99.9996 99.9269 99.992 99.9903 98.4361 99.2884 99.9989 99.9836 99.999 99.989 99.9785 99.8244 99.6697 99.7399 99.9985 99.7698 99.8425 99.7377 99.6665 99.8572 99.9576 99.8452
H-18	99.674814453125	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . substring ( $NUMBER$ ) ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 99.7526 99.7307 99.9985 97.1062 99.8618 98.6871 99.9385 99.806
H-18	99.67455150462963	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . substring ( 1 , 1 ) ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 99.7526 99.7307 99.9985 99.744 98.0776 97.6073 99.9704 99.5096 99.9583 99.8751
H-18	99.67351164641204	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . substring ( 1 ) , 0 ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 99.7526 99.7307 99.9985 99.744 99.8252 99.6944 95.8621 99.7478 99.9479 99.8927
H-18	99.67343026620371	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . substring ( 1 , $NUMBER$ ) ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 99.7526 99.7307 99.9985 99.744 98.0776 97.5853 99.9676 99.5059 99.9595 99.8724
H-18	99.6730487530048	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . length ( ) , b ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 99.7526 97.3068 99.9958 99.9975 98.4184 99.3588 99.8204 99.9704 99.8897
H-18	99.67142944335937	return a + longest _ common _ subsequence ( a . substring ( 1 ) , b ) ;
P-18	99.2151 97.4899 98.9626 99.9982 99.9855 99.9992 99.99 99.978 99.8858 99.5804 99.7584 99.9984 99.7504 99.8521 99.8086 99.6839 99.8374 99.9706 99.8193
H-18	99.67013985770089	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . substring ( 1 ) , - 1 ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 99.7526 99.7307 99.9985 99.744 99.8252 99.6944 95.608 99.8188 99.9565 99.9576 99.6889
H-18	99.66928891782408	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . char CaMeL At ( 0 ) ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 99.7526 96.154 99.9983 99.985 99.9992 99.5201 99.9946 98.939 99.8822 99.8567
H-18	99.6689453125	return a . char CaMeL At ( 1 ) + longest _ common _ subsequence ( a . substring ( $NUMBER$ ) , b ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 98.3534 99.9951 99.3631 99.5217 99.9995 99.9848 99.9995 99.9925 99.9804 99.8396 99.7249 99.728 99.9985 97.1444 99.8547 99.6705 99.6114 99.8852 99.9726 99.813
H-18	99.66881872106481	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . substring ( 0 , 1 ) ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 99.7526 99.7307 99.9985 98.0729 99.8874 97.3811 99.9744 99.4812 99.9607 99.8295
H-18	99.66615125868056	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . substring ( 0 ) , b ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 99.7526 99.7307 99.9985 98.0729 97.6578 99.6646 99.522 99.8221 99.9776 99.7985
H-18	99.66561776620371	return $STRING$ . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . substring ( $NUMBER$ ) , b ) ;
P-18	98.7085 99.0412 99.435 99.9997 99.9867 99.9994 99.6677 99.9857 99.6028 99.5117 99.9995 99.9862 99.9994 99.9938 99.9847 99.8317 99.7142 99.7399 99.9985 97.1072 99.8707 99.6106 99.6076 99.9223 99.9715 99.8308
H-18	99.66342954282408	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . substring ( 0 , $NUMBER$ ) ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 99.7526 99.7307 99.9985 98.0729 99.8874 97.2561 99.9666 99.4693 99.9618 99.8278
H-18	99.66305881076389	return null . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . substring ( 1 ) , b ) ;
P-18	95.7091 98.8062 99.7956 99.9997 99.995 99.9996 99.751 99.9833 99.604 99.549 99.9995 99.9864 99.9994 99.9938 99.9832 99.8298 99.7299 99.7466 99.9985 99.7501 99.8287 99.6996 99.6107 99.8988 99.9726 99.8176
H-18	99.65955078125	return $STRING$ . char CaMeL At ( 1 ) + longest _ common _ subsequence ( a . substring ( 1 ) ) ;
P-18	98.7085 99.0412 99.435 99.9997 99.9867 99.9994 98.14 99.9927 99.5977 99.5229 99.9994 99.9867 99.9994 99.9936 99.9843 99.8384 99.6534 99.7282 99.9984 99.7581 99.8313 98.6798 99.9265 99.823
H-18	99.65908926504629	return $STRING$ + a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . substring ( 1 ) ) ;
P-18	98.7085 98.934 98.5402 99.143 99.377 99.9996 99.9952 99.9995 99.8406 99.994 99.6792 99.258 99.9991 99.9808 99.9993 99.9853 99.9775 99.8222 99.6686 99.6996 99.9982 99.73 99.8286 98.9733 99.9405 99.8589
H-18	99.65849086216518	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . to CaMeL String ( ) , b ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 99.7526 95.8612 99.9951 99.4405 99.9969 99.9923 99.2171 99.4361 99.9194 99.9727 99.8653
H-18	99.65811893857759	return a . char CaMeL At ( 0 ) + b . char CaMeL At ( 0 ) + b . char CaMeL At ( 0 ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 97.5482 99.7657 99.444 99.9995 99.9784 99.9991 99.6387 99.9954 99.4261 99.0259 99.9249 99.0024 99.9995 99.8764 99.9976 99.3813 99.9965 99.5276 99.8609
H-18	99.65794214709052	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . substring ( 1 , 1 ) , b ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 99.7526 99.7307 99.9985 99.744 98.0776 97.6073 99.9704 98.9847 99.4902 99.9317 99.9857 99.8181
H-18	99.65790847252156	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . substring ( 0 , 1 ) , b ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 99.7526 99.7307 99.9985 98.0729 99.8874 97.3811 99.9744 99.0301 99.5438 99.9316 99.9855 99.8019
H-18	99.65754647090517	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . substring ( 1 , $NUMBER$ ) , b ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 99.7526 99.7307 99.9985 99.744 98.0776 97.5853 99.9676 98.988 99.4809 99.945 99.9852 99.8243
H-18	99.65742549189815	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . substring ( 1 ) , $NUMBER$ ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 99.7526 99.7307 99.9985 99.744 99.8252 99.6944 95.2345 99.944 99.9512 99.8867
H-18	99.65700954861111	return a . char CaMeL At ( 0 ) + $STRING$ + longest _ common _ subsequence ( a . substring ( 1 ) ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 97.867 99.215 98.591 99.9966 99.9482 99.998 99.9852 99.9669 99.8211 99.6273 99.6914 99.9987 99.7603 99.8089 98.9754 99.9524 99.8382
H-18	99.65674669989224	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . substring ( 1 , 0 ) , b ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 99.7526 99.7307 99.9985 99.744 98.0776 97.9123 99.7784 98.8945 99.462 99.9149 99.987 99.8044
H-18	99.65582275390625	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . substring ( 1 ) , b ) ; }
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 99.7526 99.7307 99.9985 99.744 99.8252 99.6944 99.6014 99.8637 99.9757 98.2066 96.9817
H-18	99.6548184481534	return $STRING$ . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a , b ) ;
P-18	98.7085 99.0412 99.435 99.9997 99.9867 99.9994 99.6677 99.9857 99.6028 99.5117 99.9995 99.9862 99.9994 99.9938 99.9847 99.8317 98.3332 98.9065 99.8716 99.9543 99.7421
H-18	99.65466796875	return a . substring ( 1 ) + longest _ common _ subsequence ( a . substring ( 1 ) , b ) ;
P-18	99.2151 99.7966 97.2964 99.9958 99.2597 99.6448 98.8334 99.4456 99.9993 99.9877 99.9996 99.9919 99.9794 99.8295 99.8839 99.7225 99.9987 99.7577 99.8594 99.727 99.6343 99.8635 99.9728 99.8074
H-18	99.65452417834052	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . substring ( 0 , $NUMBER$ ) , b ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 99.7526 99.7307 99.9985 98.0729 99.8874 97.2561 99.9666 99.0456 99.5457 99.9432 99.9852 99.8076
H-18	99.65271417025862	return a . char CaMeL At ( 1 ) + longest _ common _ subsequence ( a . char CaMeL At ( 0 ) , b ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 98.3534 99.9951 99.3631 99.5217 99.9995 99.9848 99.9995 99.9925 99.9804 99.8396 99.7249 96.2023 99.9981 99.9874 99.9992 99.5111 99.9953 99.5182 99.6349 99.8736 99.9735 99.8513
H-18	99.65224045973558	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . to CaMeL String ( ) ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 99.7526 95.8612 99.9951 99.4405 99.9969 99.9923 99.0924 99.9405 99.898
H-18	99.65076793323864	return a . char CaMeL At ( 1 ) + longest _ common _ subsequence ( a , b ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 98.3534 99.9951 99.3631 99.5217 99.9995 99.9848 99.9995 99.9925 99.9804 99.8396 98.2618 98.8994 99.8587 99.9506 99.6877
H-18	99.64964916087963	return a . char CaMeL At ( 1 ) + longest _ common _ subsequence ( a . substring ( 0 , 0 ) ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 98.3534 99.9951 99.3631 99.5217 99.9995 99.9848 99.9995 99.9925 99.9804 99.8396 99.7249 99.728 99.9985 98.0083 99.8859 98.5585 99.6587 99.5133 99.9633 99.8424
H-18	99.64924225983796	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . substring ( 1 ) , 1 ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 99.7526 99.7307 99.9985 99.744 99.8252 99.6944 95.0278 99.9333 99.9478 99.8865
H-18	99.6475078876202	return $STRING$ . to CaMeL String ( ) + longest _ common _ subsequence ( a . substring ( 1 ) , b ) ;
P-18	98.7085 99.0412 97.7463 99.9996 99.8219 99.9954 99.9762 98.7032 99.2064 99.9987 99.9844 99.9988 99.9898 99.9838 99.8127 99.5542 99.7479 99.9986 99.7739 99.8627 99.6966 99.6734 99.8969 99.9509 99.8485
H-18	99.64709051724138	return a . char CaMeL At ( 0 ) + b . char CaMeL At ( 0 ) + b . char CaMeL At ( 1 ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 97.5482 99.7657 99.444 99.9995 99.9784 99.9991 99.6387 99.9954 99.4261 99.0259 99.9249 99.0024 99.9995 99.8764 99.9976 99.0341 99.9974 99.5649 99.8504
H-18	99.64658425071023	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a , a ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 98.1516 97.9546 99.4582 99.9464 99.7253
H-18	99.64612755408653	return a . char CaMeL At ( 1 ) + longest _ common _ subsequence ( a . length ( ) - 1 ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 98.3534 99.9951 99.3631 99.5217 99.9995 99.9848 99.9995 99.9925 99.9804 99.8396 99.7249 97.3033 99.9953 99.9974 98.9446 99.5022 99.8716 99.8405 99.9609
H-18	99.645751953125	return a . char CaMeL At ( 0 ) ; } else { return a . char CaMeL At ( 0 ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.0436 97.623 99.649 99.8606 99.78 98.849 99.875 99.7942 99.9995 99.9979 99.9992 99.7868 99.9937 99.2979 99.6171
H-18	99.64432779947917	return $STRING$ . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . length ( ) ) ;
P-18	98.7085 99.0412 99.435 99.9997 99.9867 99.9994 99.6677 99.9857 99.6028 99.5117 99.9995 99.9862 99.9994 99.9938 99.9847 99.8317 99.7142 97.3059 99.995 99.9975 99.0341 99.9107 99.9081
H-18	99.64418538411458	return a . char CaMeL At ( 1 ) + longest _ common _ subsequence ( a . length ( ) ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 98.3534 99.9951 99.3631 99.5217 99.9995 99.9848 99.9995 99.9925 99.9804 99.8396 99.7249 97.3033 99.9953 99.9974 98.9671 99.9121 99.9018
H-18	99.64268141526442	return $STRING$ . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . length ( ) - 1 ) ;
P-18	98.7085 99.0412 99.435 99.9997 99.9867 99.9994 99.6677 99.9857 99.6028 99.5117 99.9995 99.9862 99.9994 99.9938 99.9847 99.8317 99.7142 97.3059 99.995 99.9975 98.91 99.5248 99.8749 99.8235 99.9658
H-18	99.64258751502403	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . length ( ) - $NUMBER$ ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 99.7526 97.3068 99.9958 99.9975 98.9453 98.0273 99.8713 99.8565 99.9652
H-18	99.642333984375	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( b . substring ( 1 ) , b ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 95.4072 99.6693 99.6988 99.9981 99.725 99.8061 99.6899 99.6098 99.787 99.9766 99.8191
H-18	99.641494140625	return a . char CaMeL At ( $NUMBER$ ) + longest _ common _ subsequence ( a . substring ( 1 ) ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 96.3886 99.9902 99.3666 99.5396 99.9996 99.9849 99.9995 99.9924 99.9798 99.8378 99.7289 99.7289 99.9984 99.7512 99.8135 98.5683 99.9272 99.813
H-18	99.64124797952586	return $STRING$ . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . char CaMeL At ( 0 ) , b ) ;
P-18	98.7085 99.0412 99.435 99.9997 99.9867 99.9994 99.6677 99.9857 99.6028 99.5117 99.9995 99.9862 99.9994 99.9938 99.9847 99.8317 99.7142 96.0032 99.998 99.9827 99.9993 99.5005 99.9949 99.4279 99.6235 99.913 99.9748 99.8657
H-18	99.6405617042824	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . char CaMeL At ( 1 ) ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 99.7526 96.154 99.9983 99.985 99.9992 98.8409 99.9954 98.851 99.8818 99.848
H-18	99.64011793870192	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . length ( ) - 0 ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 99.7526 97.3068 99.9958 99.9975 98.9453 98.0339 99.7873 99.8677 99.9674
H-18	99.63985640914352	return $STRING$ . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . substring ( 0 , 0 ) ) ;
P-18	98.7085 99.0412 99.435 99.9997 99.9867 99.9994 99.6677 99.9857 99.6028 99.5117 99.9995 99.9862 99.9994 99.9938 99.9847 99.8317 99.7142 99.7399 99.9985 98.0528 99.8794 98.2059 99.6815 99.5885 99.96 99.8571
H-18	99.63527199074075	return a . char CaMeL At ( 1 ) + longest _ common _ subsequence ( a . substring ( 1 , 0 ) ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 98.3534 99.9951 99.3631 99.5217 99.9995 99.9848 99.9995 99.9925 99.9804 99.8396 99.7249 99.728 99.9985 99.7548 98.1028 98.003 99.7726 99.5634 99.9606 99.8851
H-18	99.6344706217448	return a ; } else { return longest _ common _ subsequence ( a . substring ( 1 ) , b ) ;
P-18	99.2151 97.5662 99.3655 99.7536 99.8519 99.7622 98.0637 99.9967 99.9789 99.9989 99.9769 99.9892 99.7536 99.428 99.7317 99.9991 99.7628 99.8685 99.8763 99.7016 99.8454 99.986 99.8909
H-18	99.63402448381696	{ return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . substring ( 1 ) , b ) ;
P-18	99.484 99.0575 99.7509 99.7709 99.9995 99.9977 99.9994 99.748 99.9892 99.4139 99.5523 99.9995 99.9828 99.9995 99.9912 99.9827 99.8244 99.7076 99.7354 99.9986 99.7508 99.8374 99.7644 99.6355 99.8588 99.9763 99.5618
H-18	99.63277633101852	return a . char CaMeL At ( 0 ) . longest _ common _ subsequence ( a . substring ( 1 ) , b ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 96.975 97.3474 99.9988 99.988 99.999 99.9878 99.9888 99.763 99.7632 99.6808 99.9982 99.6844 99.8406 99.5172 99.6041 99.8552 99.9819 99.78
H-18	99.63266427176339	result = a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . substring ( 1 ) , b ) ;
P-18	99.948 99.0733 99.9333 99.7793 99.9994 99.9985 99.9996 99.7366 99.9928 99.2216 99.5167 99.9996 99.9816 99.9995 99.992 99.9787 99.8167 99.634 99.7351 99.9986 99.7299 99.828 99.6921 99.6032 99.8804 99.979 99.6369
H-18	99.63154658564815	return a . char CaMeL At ( 1 ) + longest _ common _ subsequence ( a . substring ( 1 , 1 ) ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 98.3534 99.9951 99.3631 99.5217 99.9995 99.9848 99.9995 99.9925 99.9804 99.8396 99.7249 99.728 99.9985 99.7548 98.1028 97.776 99.9691 99.5068 99.9564 99.876
H-18	99.6309226707176	return a . char CaMeL At ( 1 ) + longest _ common _ subsequence ( a . substring ( 1 , $NUMBER$ ) ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 98.3534 99.9951 99.3631 99.5217 99.9995 99.9848 99.9995 99.9925 99.9804 99.8396 99.7249 99.728 99.9985 99.7548 98.1028 97.7677 99.9654 99.5032 99.9577 99.8734
H-18	99.63010660807292	return $STRING$ ; } else { return longest _ common _ subsequence ( a . substring ( 1 ) , b ) ;
P-18	98.7085 98.5296 98.8709 99.6539 99.872 99.7408 98.0657 99.9964 99.9828 99.9989 99.9751 99.9906 99.7612 99.414 99.7632 99.9991 99.7653 99.8731 99.8866 99.7135 99.8492 99.9847 99.8628
H-18	99.62934027777777	return a . char CaMeL At ( 1 ) + longest _ common _ subsequence ( a . substring ( 0 , 1 ) ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 98.3534 99.9951 99.3631 99.5217 99.9995 99.9848 99.9995 99.9925 99.9804 99.8396 99.7249 99.728 99.9985 98.0083 99.8859 97.7545 99.975 99.4712 99.959 99.8281
H-18	99.6259765625	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . substring ( 0 ) ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 99.7526 99.7307 99.9985 98.0729 97.6578 98.6749 99.9304 99.8429
H-18	99.624375	return a . char CaMeL At ( 0 ) ; } else { return a . char CaMeL At ( 0 ) ; }
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.0436 97.623 99.649 99.8606 99.78 98.849 99.875 99.7942 99.9995 99.9979 99.9992 99.7868 99.9937 99.2979 98.756 99.9724
H-18	99.623046875	return $STRING$ . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a . substring ( $NUMBER$ ) ) ;
P-18	98.7085 99.0412 99.435 99.9997 99.9867 99.9994 99.6677 99.9857 99.6028 99.5117 99.9995 99.9862 99.9994 99.9938 99.9847 99.8317 99.7142 99.7399 99.9985 97.1072 99.8707 98.7978 99.9312 99.8183
H-18	99.619990234375	return a . char CaMeL At ( 1 ) + longest _ common _ subsequence ( a . substring ( $NUMBER$ ) ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 98.3534 99.9951 99.3631 99.5217 99.9995 99.9848 99.9995 99.9925 99.9804 99.8396 99.7249 99.728 99.9985 97.1444 99.8547 98.6518 99.9339 99.8051
H-18	99.61360307173295	return a . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a , 0 ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.3657 99.5024 99.9996 99.9839 99.9995 99.9927 99.9804 99.8328 98.1516 97.2296 99.3956 99.9102 99.8233
H-18	99.61293723366477	return $STRING$ + longest _ common _ subsequence ( a . char CaMeL At ( 0 ) , b ) ;
P-18	98.7085 98.934 99.1321 99.9969 99.983 99.9981 99.9903 99.9849 99.8622 99.5498 96.7916 99.9984 99.9948 99.9995 99.6159 99.9926 99.6913 99.7035 99.8896 99.9667 99.8362
H-18	99.6122334798177	return a . to CaMeL String ( ) + longest _ common _ subsequence ( a . substring ( 1 ) ) ;
P-18	99.2151 99.7966 97.1854 99.9996 99.9269 99.992 99.9903 98.4361 99.2884 99.9989 99.9836 99.999 99.989 99.9785 99.8244 99.6697 99.7399 99.9985 99.7698 99.8425 98.4271 99.9064 99.8711
H-18	99.61045143821023	return $STRING$ + a + longest _ common _ subsequence ( a . substring ( 1 ) , b ) ;
P-18	98.7085 98.934 98.5402 98.9516 98.6681 99.9962 99.9816 99.9976 99.9887 99.9673 99.8564 99.5618 99.7769 99.9987 99.7574 99.8433 99.6696 99.673 99.8942 99.9572 99.8429
H-18	99.6079989346591	return a + $STRING$ + longest _ common _ subsequence ( a . substring ( 1 ) , b ) ;
P-18	99.2151 97.4899 99.0237 99.4702 98.7231 99.9962 99.9803 99.9966 99.9927 99.979 99.8737 99.4506 99.6983 99.9987 99.7661 99.8091 99.6954 99.6845 99.9001 99.9701 99.7978
H-18	99.5979891690341	return $STRING$ . char CaMeL At ( 0 ) + longest _ common _ subsequence ( a , a ) ;
P-18	98.7085 99.0412 99.435 99.9997 99.9867 99.9994 99.6677 99.9857 99.6028 99.5117 99.9995 99.9862 99.9994 99.9938 99.9847 99.8317 98.3332 97.9823 99.5204 99.9504 99.771
H-18	99.59430486505681	return $STRING$ . char CaMeL At ( 1 ) + longest _ common _ subsequence ( a , b ) ;
P-18	98.7085 99.0412 99.435 99.9997 99.9867 99.9994 98.14 99.9927 99.5977 99.5229 99.9994 99.9867 99.9994 99.9936 99.9843 99.8384 98.5224 98.8874 99.8761 99.954 99.7445
H-18	99.59270685369319	return a . char CaMeL At ( 1 ) + longest _ common _ subsequence ( a , a ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 98.3534 99.9951 99.3631 99.5217 99.9995 99.9848 99.9995 99.9925 99.9804 99.8396 98.2618 97.9944 99.4551 99.9457 99.7238
H-18	99.57908325195312	return $STRING$ + longest _ common _ subsequence ( a . substring ( $NUMBER$ ) , b ) ;
P-18	98.7085 98.934 99.1321 99.9969 99.983 99.9981 99.9903 99.9849 99.8622 99.5498 99.7322 99.9985 96.8021 99.9024 99.7595 99.7074 99.9044 99.959 99.8117
H-18	99.567626953125	return a ; } else { return a . char CaMeL At ( 0 ) ;
P-18	99.2151 97.5662 99.3655 99.7536 99.8519 99.7622 99.0108 99.7758 99.8131 99.9996 99.9985 99.9994 99.7857 99.9943 99.143 99.7502
H-18	99.55528349034927	return $STRING$ ; } else { return a . char CaMeL At ( 0 ) ;
P-18	98.7085 98.5296 98.8709 99.6539 99.872 99.7408 98.9795 99.8387 99.8596 99.9996 99.9986 99.9994 99.7974 99.9948 99.0646 99.6671
H-18	99.55258178710938	return longest _ common _ subsequence ( a . substring ( 0 , 0 ) , b ) ;
P-18	97.3564 99.9979 99.9759 99.999 99.969 99.9878 99.8408 99.233 99.6483 99.9987 98.3705 99.8731 98.3646 99.5678 99.7236 99.6598 99.8736 99.9906 99.7564
H-18	99.53373209635417	return longest _ common _ subsequence ( a . substring ( 1 ) , b ) ;
P-18	97.3564 99.9979 99.9759 99.999 99.969 99.9878 99.8408 99.233 99.6483 99.9987 99.7184 99.8286 99.8827 99.7081 99.8032 99.9834 96.8111
H-18	99.52043999565973	return $STRING$ ; } else { return a . char CaMeL At ( 0 ) ; }
P-18	98.7085 98.5296 98.8709 99.6539 99.872 99.7408 98.9795 99.8387 99.8596 99.9996 99.9986 99.9994 99.7974 99.9948 99.0646 98.6147 99.9806
H-18	99.51290554470486	return a ; } else { return a . char CaMeL At ( 0 ) ; }
P-18	99.2151 97.5662 99.3655 99.7536 99.8519 99.7622 99.0108 99.7758 99.8131 99.9996 99.9985 99.9994 99.7857 99.9943 99.143 98.3531 99.9798
H-18	99.4084139737216	return a . char CaMeL At ( 0 ) ;
P-18	99.2151 99.7966 99.7579 99.9996 99.9953 99.9997 99.7125 99.9902 99.0436 96.1174
H-18	98.09783935546875	return $STRING$ ;
P-18	98.7085 98.5296 95.2886
S-19	max _ ending _ here = max _ ending _ here + x ;
T-19	max _ ending _ here = Math . max ( 0 , max _ ending _ here + x ) ;
H-19	99.81316731770833	max _ ending _ here = max _ ending _ here + x ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 99.5558 99.9949 99.8845 99.9866 99.367 99.668 99.6776 99.9004 99.9324
H-19	99.68295084635416	max _ ending _ here = max _ ending _ here + 1 ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 99.5558 99.9949 99.8845 99.9866 99.367 99.668 97.948 99.6651 99.9441
H-19	99.67273888221153	max _ ending _ here = max _ ending _ here ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 99.5558 99.9949 99.8845 99.9866 99.367 97.8483 99.8781
H-19	99.63625201056985	max _ ending _ here = max _ ending _ here + 1 + x ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 99.5558 99.9949 99.8845 99.9866 99.367 99.668 97.948 98.6763 99.65 99.9404 99.9144
H-19	99.62518669577206	max _ ending _ here = max _ ending _ here + x + x ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 99.5558 99.9949 99.8845 99.9866 99.367 99.668 99.6776 97.5838 98.9113 99.9076 99.8608
H-19	99.62437528722427	max _ ending _ here = max _ ending _ here + x + 1 ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 99.5558 99.9949 99.8845 99.9866 99.367 99.668 99.6776 97.5838 98.902 99.8767 99.8872
H-19	99.622412109375	max _ ending _ here = max _ ending _ here / x ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 99.5558 99.9949 99.8845 99.9866 99.367 97.3594 99.2524 99.866 99.8392
H-19	99.61045735677084	max _ ending _ here = max _ ending _ here - x ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 99.5558 99.9949 99.8845 99.9866 99.367 96.7354 99.5293 99.952 99.9211
H-19	99.606591796875	max _ ending _ here = max _ ending _ here + 0 ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 99.5558 99.9949 99.8845 99.9866 99.367 99.668 96.8739 99.5969 99.9409
H-19	99.6056884765625	max _ ending _ here += max _ ending _ here + x ;
P-19	99.9955 99.9668 99.9978 99.6928 96.8643 99.4288 99.9956 99.8948 99.9877 99.5069 99.6321 99.6329 99.9022 99.9395
H-19	99.6005859375	if max _ ending _ here = max _ ending _ here + x ;
P-19	98.2803 99.9958 99.9214 99.9959 99.5373 99.9008 99.5472 99.9921 99.8248 99.9888 99.4221 99.6174 99.6553 99.907 99.8391
H-19	99.57575539981617	max _ ending _ here = max _ ending _ here + 0 + x ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 99.5558 99.9949 99.8845 99.9866 99.367 99.668 96.8739 98.7967 99.5679 99.952 99.9101
H-19	99.57031928168402	max _ ending _ here = x ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 97.7269 99.6887 99.4868
H-19	99.5561767578125	max _ ending _ here = max _ ending _ here / 1 ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 99.5558 99.9949 99.8845 99.9866 99.367 97.3594 98.2895 99.7841 99.8906
H-19	99.55280618106617	max _ ending _ here = max _ ending _ here + $NUMBER$ + x ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 99.5558 99.9949 99.8845 99.9866 99.367 99.668 96.0026 99.181 99.6586 99.9517 99.9166
H-19	99.54914093017578	max _ ending _ here = max _ ending _ here + x ; }
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 99.5558 99.9949 99.8845 99.9866 99.367 99.668 99.6776 99.9004 95.9811 99.54
H-19	99.53952205882354	max _ ending _ here = max _ ending _ here ? x : x ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 99.5558 99.9949 99.8845 99.9866 99.367 96.5129 99.6584 99.0323 99.2466 99.8996 99.8027
H-19	99.53497869318181	max _ ending _ here = 0 + x ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 97.5088 98.8415 99.5768 99.9303 99.7969
H-19	99.53424627130681	max _ ending _ here = x + x ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 97.7269 98.572 99.6685 99.9127 99.7661
H-19	99.531787109375	max _ ending _ here = max _ ending _ here + $NUMBER$ ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 99.5558 99.9949 99.8845 99.9866 99.367 99.668 96.0026 99.3493 99.9379
H-19	99.5297492532169	max _ ending _ here = max _ ending _ here + x + $NUMBER$ ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 99.5558 99.9949 99.8845 99.9866 99.367 99.668 99.6776 97.5838 97.4117 99.7712 99.8744
H-19	99.52639973958334	max _ ending _ here = max _ ending _ here - 1 ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 99.5558 99.9949 99.8845 99.9866 99.367 96.7354 98.3964 99.8022 99.9429
H-19	99.52428481158088	max _ ending _ here = max _ ending _ here + x + 0 ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 99.5558 99.9949 99.8845 99.9866 99.367 99.668 99.6776 97.5838 97.2321 99.838 99.8942
H-19	99.51327694163604	max _ ending _ here = max _ ending _ here / x + x ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 99.5558 99.9949 99.8845 99.9866 99.367 97.3594 99.2524 97.8294 99.5478 99.9364 99.7812
H-19	99.5097900390625	max _ ending _ here = max _ ending _ here * x ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 99.5558 99.9949 99.8845 99.9866 99.367 95.4398 99.5088 99.8148 99.8643
H-19	99.50910186767578	int max _ ending _ here = max _ ending _ here + x ;
P-19	98.6539 99.9968 99.8403 99.9898 99.6427 99.9625 99.4437 99.981 99.8654 99.9862 99.2167 99.6225 99.6224 99.8541 99.9519
H-19	99.50452473958333	max _ ending _ here = max _ ending _ here / 0 ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 99.5558 99.9949 99.8845 99.9866 99.367 97.3594 97.5454 99.7502 99.8937
H-19	99.50442325367646	max _ ending _ here = max _ ending _ here + 1 + 1 ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 99.5558 99.9949 99.8845 99.9866 99.367 99.668 97.948 98.6763 97.4563 99.868 99.9396
H-19	99.50362141927083	max _ ending _ here += max _ ending _ here + 1 ;
P-19	99.9955 99.9668 99.9978 99.6928 96.8643 99.4288 99.9956 99.8948 99.9877 99.5069 99.6321 98.1642 99.8307 99.9489
H-19	99.50121392144098	max _ ending _ here = 0 ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 97.5088 99.5436 99.2281
H-19	99.49541159237133	try { max _ ending _ here = max _ ending _ here + x ;
P-19	99.9907 99.8618 99.998 99.9618 99.9965 99.7831 99.9384 99.6061 99.9936 99.9132 99.9895 99.569 99.7816 99.75 99.9149 99.2642
H-19	99.49518899356617	max _ ending _ here = 0 + max _ ending _ here + x ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 97.5088 98.8415 98.3403 99.9856 99.8468 99.9842 99.1708 99.2293 99.4403 99.9178 99.9224
H-19	99.48247931985294	max _ ending _ here = max _ ending _ here / 1 + x ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 99.5558 99.9949 99.8845 99.9866 99.367 97.3594 98.2895 98.0714 99.7052 99.9233 99.8342
H-19	99.47757720947266	if max _ ending _ here = max _ ending _ here + 1 ;
P-19	98.2803 99.9958 99.9214 99.9959 99.5373 99.9008 99.5472 99.9921 99.8248 99.9888 99.4221 99.6174 97.9797 99.6856 99.768
H-19	99.47430889423077	max _ ending _ here += max _ ending _ here ;
P-19	99.9955 99.9668 99.9978 99.6928 96.8643 99.4288 99.9956 99.8948 99.9877 99.5069 98.2873 99.9001
H-19	99.47178548177084	max _ ending _ here = max _ ending _ here / $NUMBER$ ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 99.5558 99.9949 99.8845 99.9866 99.367 97.3594 97.0513 99.7285 99.9186
H-19	99.46565385298295	max _ ending _ here = $NUMBER$ + x ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 95.8756 99.6742 99.6217 99.9238 99.7965
H-19	99.46462833180146	max _ ending _ here = max _ ending _ here - 1 + x ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 99.5558 99.9949 99.8845 99.9866 99.367 96.7354 98.3964 98.2148 99.6825 99.9593 99.8911
H-19	99.46245465959821	if max _ ending _ here = max _ ending _ here ;
P-19	98.2803 99.9958 99.9214 99.9959 99.5373 99.9008 99.5472 99.9921 99.8248 99.9888 99.4221 98.1848 99.699
H-19	99.46189970128677	max _ ending _ here = $NUMBER$ + max _ ending _ here + x ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 95.8756 99.6742 98.4186 99.9893 99.8786 99.9868 99.276 99.2236 99.4517 99.9146 99.9326
H-19	99.45751953125	max _ ending _ here = max _ ending _ here ; }
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 99.5558 99.9949 99.8845 99.9866 99.367 97.8483 97.0743 99.4634
H-19	99.4534553079044	max _ ending _ here = x ; max _ ending _ here = 0 ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 97.7269 99.6887 97.729 99.9792 99.7046 99.982 99.1042 99.8651 98.4562 99.7016 99.5409
H-19	99.45321834788604	max _ ending _ here = max _ ending _ here ? x : 1 ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 99.5558 99.9949 99.8845 99.9866 99.367 96.5129 99.6584 99.0323 97.7171 99.9178 99.8467
H-19	99.45255773207721	max _ ending _ here = x + max _ ending _ here + x ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 97.7269 98.572 97.8528 99.9885 99.8354 99.987 99.0809 99.2043 99.4301 99.8552 99.9299
H-19	99.44917297363281	} max _ ending _ here = max _ ending _ here + x ;
P-19	99.5682 99.9978 99.9394 99.9944 99.719 99.9601 99.6793 99.9935 99.8231 99.9873 99.2648 99.6309 99.6192 99.8882 99.9531
H-19	99.44548034667969	final max _ ending _ here = max _ ending _ here + x ;
P-19	98.1118 99.9832 99.9349 99.9956 99.8227 99.9235 99.651 99.9898 99.8835 99.9884 99.4171 99.663 99.6824 99.8886 99.9427
H-19	99.44498697916667	max _ ending _ here = 0 + max _ ending _ here ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 97.5088 98.8415 98.3403 99.9856 99.8468 99.9842 99.1708 98.8887 99.8777
H-19	99.4436279296875	max _ ending _ here = 0 ; }
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 97.5088 99.5436 98.6829 99.4706
H-19	99.43771362304688	for max _ ending _ here = max _ ending _ here + x ;
P-19	98.9098 99.9962 99.9312 99.9955 99.6763 99.8607 99.5221 99.9896 99.8329 99.9864 99.4057 99.6206 99.6541 99.8816 99.1866
H-19	99.43555501302083	max _ ending _ here = max _ ending _ here - 0 ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 99.5558 99.9949 99.8845 99.9866 99.367 96.7354 97.0615 99.7792 99.9382
H-19	99.43402862548828	max _ ending _ here = ( max _ ending _ here + x ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 96.9542 98.9067 99.9756 99.9076 99.9879 99.4455 99.1015 99.5044 99.0874 98.8432
H-19	99.43251037597656	synchronized max _ ending _ here = max _ ending _ here + x ;
P-19	98.3951 99.9962 99.9215 99.9959 99.6647 99.9371 99.5812 99.9925 99.8193 99.9906 99.5934 99.6963 99.7065 99.9099 99.9033
H-19	99.42959594726562	max _ ending _ here = ( int ) max _ ending _ here ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 96.9542 98.1105 99.4193 99.5401 99.981 99.9055 99.9925 99.138 98.8021 99.8
H-19	99.42548370361328	max _ ending _ here = max _ ending _ here + 1 ; }
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 99.5558 99.9949 99.8845 99.9866 99.367 99.668 97.948 99.6651 95.9464 99.5612
H-19	99.42538452148438	max _ ending _ here = max _ ending _ here / x ; }
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 99.5558 99.9949 99.8845 99.9866 99.367 97.3594 99.2524 99.866 97.0997 99.2095
H-19	99.42253875732422	if max _ ending _ here = max _ ending _ here + 0 ;
P-19	98.2803 99.9958 99.9214 99.9959 99.5373 99.9008 99.5472 99.9921 99.8248 99.9888 99.4221 99.6174 97.1289 99.6777 99.746
H-19	99.42214965820312	if max _ ending _ here += max _ ending _ here + x ;
P-19	98.2803 99.9958 99.9214 99.9959 99.5373 96.9557 99.5114 99.9924 99.8328 99.9899 99.5565 99.6028 99.6157 99.9068 99.8756
H-19	99.4208651455966	max _ ending _ here = 1 + x ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 95.7858 99.2727 99.6172 99.9211 99.8023
H-19	99.41305541992188	if max _ ending _ here = max _ ending _ here / x ;
P-19	98.2803 99.9958 99.9214 99.9959 99.5373 99.9008 99.5472 99.9921 99.8248 99.9888 99.4221 97.2172 99.2069 99.8276 99.7666
H-19	99.41228841145833	max _ ending _ here = max _ ending _ here ? x ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 99.5558 99.9949 99.8845 99.9866 99.367 96.5129 99.6584 97.235 99.7588
H-19	99.41056060791016	max _ ending _ here = max _ ending _ here + x ; ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 99.5558 99.9949 99.8845 99.9866 99.367 99.668 99.6776 99.9004 93.5007 99.8032
H-19	99.40775553385417	max _ ending _ here = $NUMBER$ + max _ ending _ here ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 95.8756 99.6742 98.4186 99.9893 99.8786 99.9868 99.276 98.875 99.9116
H-19	99.40558268229167	max _ ending _ here += max _ ending _ here + 0 ;
P-19	99.9955 99.9668 99.9978 99.6928 96.8643 99.4288 99.9956 99.8948 99.9877 99.5069 99.6321 96.8477 99.6832 99.9423
H-19	99.40171712239584	max _ ending _ here += max _ ending _ here / x ;
P-19	99.9955 99.9668 99.9978 99.6928 96.8643 99.4288 99.9956 99.8948 99.9877 99.5069 97.0269 99.2079 99.9208 99.8918
H-19	99.3977783203125	max _ ending _ here = x + max _ ending _ here ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 97.7269 98.572 97.8528 99.9885 99.8354 99.987 99.0809 98.8075 99.8853
H-19	99.39564819335938	max _ ending _ here = x ; }
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 97.7269 99.6887 97.8969 99.4135
H-19	99.37902153862848	max _ ending _ here += x ;
P-19	99.9955 99.9668 99.9978 99.6928 96.8643 98.7309 99.7723 99.7433
H-19	99.35530911959134	max _ ending _ here = x + x + x ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 97.7269 98.572 99.6685 97.3937 99.387 99.9093 99.7311
H-19	99.34474690755208	max _ ending _ here = x + x ; }
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 97.7269 98.572 99.6685 99.9127 97.4884 99.538
H-19	99.3351299579327	max _ ending _ here = 0 + x + x ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 97.5088 98.8415 99.5768 97.1961 99.3946 99.8656 99.7428
H-19	99.33489990234375	max _ ending _ here = 0 + x ; }
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 97.5088 98.8415 99.5768 99.9303 97.334 99.5969
H-19	99.32090065696023	max _ ending _ here += x + x ;
P-19	99.9955 99.9668 99.9978 99.6928 96.8643 98.7309 98.3202 99.5985 99.8785 99.837
H-19	99.29831949869792	max _ ending _ here = ( int ) x ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 96.9542 98.1105 99.4193 98.1555 99.9611 99.7486
H-19	99.29604763454861	max _ ending _ here = 1 ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 95.7858 99.1499 99.4983
H-19	99.2869121844952	max _ ending _ here = $NUMBER$ + x + x ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 95.8756 99.6742 99.6217 97.3001 99.4021 99.8563 99.7695
H-19	99.27468872070312	if max _ ending _ here = x ;
P-19	98.2803 99.9958 99.9214 99.9959 99.5373 99.9008 97.7511 99.7606 99.4197
H-19	99.27454630533855	if max _ ending _ here = 0 + x ;
P-19	98.2803 99.9958 99.9214 99.9959 99.5373 99.9008 97.5487 98.7651 99.5722 99.9468 99.6461
H-19	99.27199485085227	if = max _ ending _ here + x ;
P-19	95.8631 99.5946 99.995 99.9534 99.9961 99.351 99.6579 99.7295 99.9133 99.7539
H-19	99.26359049479167	max _ ending _ here = $NUMBER$ + x ; }
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 95.8756 99.6742 99.6217 99.9238 97.2365 99.6009
H-19	99.25259399414062	max _ ending _ here = - 1 + x ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 94.5091 99.3421 98.6864 99.5332 99.8615 99.8684
H-19	99.24724786931819	max _ ending _ here = start + x ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 94.2789 98.869 99.655 99.8982 99.7882
H-19	99.24654134114583	if max _ ending _ here = x + x ;
P-19	98.2803 99.9958 99.9214 99.9959 99.5373 99.9008 97.7511 98.2927 99.6626 99.9304 99.5063
H-19	99.24253151633523	max _ ending _ here = 0 + 1 ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 97.5088 98.8415 96.6649 99.6248 99.7975
H-19	99.24250932173295	max _ ending _ here = x + 1 ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 97.7269 98.572 96.7689 99.5908 99.7785
H-19	99.228515625	max _ ending _ here = $NUMBER$ ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 95.8756 98.37 99.5806
H-19	99.22669677734375	max _ ending _ here = - 1 ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 94.5091 99.3421 99.6297 99.5557
H-19	99.2226895419034	max _ ending _ here += 0 + x ;
P-19	99.9955 99.9668 99.9978 99.6928 96.8643 97.0161 98.8768 99.6167 99.9122 99.8631
H-19	99.22159830729167	max _ ending _ here = 1 + x ; }
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 95.7858 99.2727 99.6172 99.9211 97.2387 99.5932
H-19	99.21673029119319	max _ ending _ here = 0 + 0 ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 97.5088 98.8415 96.3624 99.6497 99.7913
H-19	99.20829634232955	max _ ending _ here = x + 0 ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 97.7269 98.572 96.459 99.5366 99.7662
H-19	99.19796752929688	max _ ending _ here = - x ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 94.5091 98.7597 99.8689 99.6114
H-19	99.18540954589844	max _ ending _ here -- ;
P-19	99.9955 99.9668 99.9978 99.6928 94.6273 99.8951 99.6605
H-19	99.181298828125	if max _ ending _ here = 0 ;
P-19	98.2803 99.9958 99.9214 99.9959 99.5373 99.9008 97.5487 99.5854 98.8633
H-19	99.17794189453124	max _ ending _ here = 1 ; }
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 95.7858 99.1499 98.285 99.3282
H-19	99.16409912109376	max _ ending _ here += x ; }
P-19	99.9955 99.9668 99.9978 99.6928 96.8643 98.7309 99.7723 97.4007 99.5724
H-19	99.14761352539062	int max _ ending _ here = x ;
P-19	98.6539 99.9968 99.8403 99.9898 99.6427 99.9625 97.6775 99.8038 99.3932
H-19	99.14305284288194	max _ ending _ here += 0 ;
P-19	99.9955 99.9668 99.9978 99.6928 96.8643 97.0161 99.476 99.6308
H-19	99.12916564941406	max _ ending _ here ++ ;
P-19	99.9955 99.9668 99.9978 99.6928 94.1845 99.8755 99.673
H-19	99.09391276041667	max _ ending _ here = true ;
P-19	99.9955 99.9668 99.9978 99.6928 99.9301 93.3068 99.8057 99.5022
H-19	96.97474161783855	break ;
P-19	98.7844 99.9323
S-20	if ( arr . size ( ) == 0 )
T-20	if ( arr . size ( ) <= 1 )
H-20	99.83974387428977	if ( arr . size ( ) == 0 )
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 99.5144 99.9354 99.8855 99.7241
H-20	99.7200927734375	if ( arr . size ( ) > 0 )
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 98.1784 99.9139 99.9238 99.7273
H-20	99.67234293619792	if ( arr . size ( ) == 0 ) {
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 99.5144 99.9354 99.8855 98.0023 99.5528
H-20	99.646484375	if ( arr . size ( ) <= 0 )
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 97.4211 99.9083 99.8844 99.7199
H-20	99.60454767400569	if ( arr . size ( ) != 0 )
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 96.9564 99.9344 99.8614 99.7199
H-20	99.59330240885417	if ( arr . size ( ) > 0 ) {
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 98.1784 99.9139 99.9238 98.2225 99.7034
H-20	99.58844549005681	if ( arr . size ( ) >= 0 )
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 96.7917 99.9082 99.8773 99.7179
H-20	99.56448567708334	if ( arr != null && arr . size ( ) == 0 )
P-20	99.9991 99.6647 97.2979 99.9475 98.6316 99.2576 99.9902 99.7169 99.9953 99.9989 99.4349 99.9535 99.9571 99.7975
H-20	99.5598388671875	if ( arr != null || arr . size ( ) == 0 )
P-20	99.9991 99.6647 97.2979 99.9475 98.3476 99.296 99.991 99.7175 99.9941 99.9989 99.5857 99.9598 99.9655 99.8077
H-20	99.5569180575284	if ( arr . is CaMeL Empty ( ) )
P-20	99.9991 99.6647 99.8729 96.7649 99.888 99.6076 99.9721 99.9918 99.875 99.6655
H-20	99.55520629882812	} if ( arr . size ( ) == 0 )
P-20	99.5152 99.9942 99.5959 99.9138 99.8235 99.9948 99.9993 99.517 99.94 99.9028 99.7365
H-20	99.55402166193181	if ( arr . size ( ) < 0 )
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 96.4348 99.8792 99.901 99.7014
H-20	99.54140403053977	if ( arr . size ( ) == 1 )
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 99.5144 96.6833 99.8661 99.714
H-20	99.518359375	if ( arr == null || arr . size ( ) == 0 )
P-20	99.9991 99.6647 96.6946 99.9462 98.347 99.3133 99.9788 99.6576 99.9939 99.9989 99.6197 99.9642 99.9634 99.8096
H-20	99.5110614483173	else { if ( arr . size ( ) == 0 )
P-20	99.6595 99.7104 99.9972 99.7542 99.8833 99.8523 99.9963 99.999 99.5794 99.9413 99.9326 99.6964
H-20	99.50205891927084	if ( arr == null && arr . size ( ) == 0 )
P-20	99.9991 99.6647 96.6946 99.9462 98.3546 99.2447 99.9217 99.6555 99.9944 99.9988 99.5238 99.9595 99.9549 99.7934
H-20	99.50047200520834	if ( arr != null && arr . size ( ) > 0 )
P-20	99.9991 99.6647 97.2979 99.9475 98.6316 99.2576 99.9902 99.7169 99.9953 99.9989 98.4835 99.9359 99.9739 99.7895
H-20	99.49867600661058	} else if ( arr . size ( ) == 0 )
P-20	98.2271 99.6178 99.9968 99.7936 99.9152 99.8602 99.9963 99.9991 99.6638 99.9482 99.9337 99.8016
H-20	99.48509724934895	if ( arr . size ( ) <= 0 ) {
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 97.4211 99.9083 99.8844 97.8904 99.5393
H-20	99.48232014973958	if ( ! arr . is CaMeL Empty ( ) )
P-20	99.9991 95.9819 99.5758 99.9588 99.2737 99.9122 99.6809 99.983 99.9942 99.8957 99.7079
H-20	99.47982584635416	if ( arr . size ( ) == 0 ) return false ; else
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 99.5144 99.9354 99.8855 96.7375 98.5644 99.7654 99.2041 99.4131
H-20	99.46722412109375	if ( arr . size ( ) == 0 ) break ; else
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 99.5144 99.9354 99.8855 95.633 99.369 99.4196 99.6065
H-20	99.4644775390625	if ( ! arr . size ( ) == 0 )
P-20	99.9991 95.9819 99.5758 99.9588 99.0527 99.9914 99.9976 99.6389 99.9526 99.895 99.7052
H-20	99.46255493164062	if ( arr . size ( ) != 0 ) {
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 96.9564 99.9344 99.8614 97.9941 99.6265
H-20	99.46209309895833	if ( arr != null || arr . size ( ) > 0 )
P-20	99.9991 99.6647 97.2979 99.9475 98.3476 99.296 99.991 99.7175 99.9941 99.9989 98.1344 99.9392 99.9751 99.8037
H-20	99.4603271484375	} if ( arr . size ( ) == 0 ) {
P-20	99.5152 99.9942 99.5959 99.9138 99.8235 99.9948 99.9993 99.517 99.94 99.9028 98.2398 99.8185
H-20	99.45846354166666	if ( arr . size ( ) == 0 ) return null ; else
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 99.5144 99.9354 99.8855 96.7375 98.3371 99.6495 99.2156 99.4244
H-20	99.45121256510417	if ( arr . size ( ) >= 0 ) {
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 96.7917 99.9082 99.8773 98.0305 99.6291
H-20	99.44451349431819	if ( arr . size ( ) > 1 )
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 98.1784 96.9363 99.8887 99.7086
H-20	99.44027709960938	} if ( arr . size ( ) > 0 )
P-20	99.5152 99.9942 99.5959 99.9138 99.8235 99.9948 99.9993 98.1313 99.921 99.938 99.7269
H-20	99.43914325420673	if ( arr . size ( ) - 0 == 0 )
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 95.8121 99.8149 99.4293 99.0051 99.9311 99.5387
H-20	99.43516438802084	if ( arr . size ( ) == 0 ) return 0 ; else
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 99.5144 99.9354 99.8855 96.7375 97.9166 99.764 99.2303 99.366
H-20	99.4297762784091	if ( arr . size ( ) == $NUMBER$ )
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 99.5144 95.4131 99.899 99.7234
H-20	99.42137044270834	if ( arr == null && arr . size ( ) > 0 )
P-20	99.9991 99.6647 96.6946 99.9462 98.3546 99.2447 99.9217 99.6555 99.9944 99.9988 98.3081 99.9446 99.9719 99.7969
H-20	99.41502967247597	if ( arr . size ( ) == 0 ) break )
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 99.5144 99.9354 99.8855 95.633 99.0537 99.1956
H-20	99.41248497596153	/ * if ( arr . size ( ) == 0 )
P-20	99.8912 98.1063 99.9026 99.7826 99.7856 99.8283 99.9958 99.9989 99.6696 99.979 99.9007 99.6934
H-20	99.4014180501302	if ( arr . size ( ) == 1 ) {
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 99.5144 96.6833 99.8661 97.9624 99.6131
H-20	99.39930943080357	/ * * if ( arr . size ( ) == 0 )
P-20	99.8912 99.5261 97.8425 99.9479 99.6744 99.8873 99.8476 99.9965 99.9991 99.6357 99.9688 99.8993 99.6453
H-20	99.39429582868304	} else { if ( arr . size ( ) == 0 )
P-20	98.2271 98.2828 99.5445 99.9953 99.7643 99.8632 99.9 99.9966 99.9991 99.5792 99.9444 99.9495 99.7445
H-20	99.38992745535714	} else if ( arr . size ( ) == 0 ) {
P-20	98.2271 99.6178 99.9968 99.7936 99.9152 99.8602 99.9963 99.9991 99.6638 99.9482 99.9337 98.0036 99.7743
H-20	99.3887188251202	else { if ( arr . size ( ) > 0 )
P-20	99.6595 99.7104 99.9972 99.7542 99.8833 99.8523 99.9963 99.999 97.9663 99.9218 99.9567 99.7143
H-20	99.3861796061198	if ( arr . size ( ) < 0 ) {
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 96.4348 99.8792 99.901 97.8454 99.396
H-20	99.3826192220052	else if ( arr . size ( ) == 0 )
P-20	98.5377 99.9981 99.5916 99.9399 99.7218 99.9959 99.9992 99.5763 99.942 99.9215 99.7254
H-20	99.38060913085937	if ( arr . equals ( arr ) )
P-20	99.9991 99.6647 99.8729 96.0393 99.965 99.0623 99.6546 99.9433 99.7802
H-20	99.37700544084821	if ( arr . size ( ) == 0 ) return false ;
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 99.5144 99.9354 99.8855 96.7375 98.5644 99.7654 97.6978
H-20	99.37504359654018	if ( arr . size ( ) - 0 == 0 ) {
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 95.8121 99.8149 99.4293 99.0051 99.9311 98.4099 99.6706
H-20	99.36967329545455	if ( arr . size ( ) <= 1 )
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 97.4211 96.8708 99.8866 99.7102
H-20	99.3687744140625	} if ( arr . size ( ) > 0 ) {
P-20	99.5152 99.9942 99.5959 99.9138 99.8235 99.9948 99.9993 98.1313 99.921 99.938 98.3825 99.855
H-20	99.36562093098958	if ( arr . get ( 0 ) == 0 )
P-20	99.9991 99.6647 99.8729 96.5747 99.9515 98.7297 99.9934 99.4724 99.2318 99.9235 99.149
H-20	99.36312866210938	} if ( arr . size ( ) <= 0 )
P-20	99.5152 99.9942 99.5959 99.9138 99.8235 99.9948 99.9993 97.2209 99.9263 99.9006 99.7435
H-20	99.36155482700893	if ( arr . size ( ) == 0 ) continue ; else
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 99.5144 99.9354 99.8855 94.6485 99.1399 99.1594 99.601
H-20	99.35963792067308	try { if ( arr . size ( ) == 0 )
P-20	99.9813 99.5902 99.9984 99.7533 99.8333 99.883 99.9959 99.9989 99.5728 99.952 99.9242 99.7201
H-20	99.35873849051339	if ( arr != null )
P-20	99.9991 99.6647 97.2979 99.9475 99.3951 99.3821
H-20	99.35695237379808	if ( arr . size ( ) . length == 0 )
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 93.8963 99.2224 99.7501 99.8957 99.9705 99.7275
H-20	99.35671997070312	if ( [ ] . is CaMeL Empty ( ) )
P-20	99.9991 94.5311 99.273 99.9657 99.5434 99.9337 99.7522 99.9654 99.9416 99.9546 99.5962
H-20	99.35152493990384	} else if ( arr . size ( ) > 0 )
P-20	98.2271 99.6178 99.9968 99.7936 99.9152 99.8602 99.9963 99.9991 97.7658 99.9304 99.9572 99.781
H-20	99.35114135742188	if ( arr . equals ( 0 ) )
P-20	99.9991 99.6647 99.8729 96.0393 99.965 98.9929 99.8236 99.7556 99.5735
H-20	99.34949747721355	} if ( arr . size ( ) != 0 )
P-20	99.5152 99.9942 99.5959 99.9138 99.8235 99.9948 99.9993 97.0518 99.9497 99.8872 99.7391
H-20	99.34922572544643	if ( arr . size ( ) == 0 ) return null ;
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 99.5144 99.9354 99.8855 96.7375 98.3371 99.6495 97.6521
H-20	99.34725247896634	if ( arr . size ( ) == 0 ) continue )
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 99.5144 99.9354 99.8855 94.6485 99.0856 99.2672
H-20	99.34700520833333	if ( arr . is CaMeL Empty ( ) ) {
P-20	99.9991 99.6647 99.8729 96.7649 99.888 99.6076 99.9721 99.9918 99.875 97.823 98.8804
H-20	99.34521484375	if ( arr . size ( ) == - 1 )
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 99.5144 94.2706 99.7147 99.9809 99.4841
H-20	99.34477887834821	else { if ( arr . size ( ) == 0 ) {
P-20	99.6595 99.7104 99.9972 99.7542 99.8833 99.8523 99.9963 99.999 99.5794 99.9413 99.9326 97.6162 99.2634
H-20	99.34073893229167	if ( arr . size ( ) > 1 ) {
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 98.1784 96.9363 99.8887 98.212 99.6958
H-20	99.33836951622597	if ( arr . length . size ( ) == 0 )
P-20	99.9991 99.6647 99.8729 95.6427 97.7619 99.5818 99.9936 99.9989 99.3882 99.9426 99.9268 99.8011
H-20	99.33748372395833	if ( arr . size ( ) == 0 ) )
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 99.5144 99.9354 99.8855 94.6637 98.8731
H-20	99.33622233072917	} if ( arr . size ( ) >= 0 )
P-20	99.5152 99.9942 99.5959 99.9138 99.8235 99.9948 99.9993 96.916 99.9245 99.8938 99.7343
H-20	99.32874474158653	if ( arr . size ( ) - 1 == 0 )
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 95.8121 97.7612 99.5265 99.516 99.928 99.5522
H-20	99.328369140625	if ( size . size ( ) == 0 )
P-20	99.9991 95.3004 98.6107 99.8133 99.9944 99.999 99.486 99.92 99.8768 99.7876
H-20	99.32749720982143	if ( arr . size ( ) > 0 ) break ; else
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 98.1784 99.9139 99.9238 95.1036 99.3416 99.3935 99.5525
H-20	99.32745361328125	if ( arr . size ( ) == 0 ) return 0 ;
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 99.5144 99.9354 99.8855 96.7375 97.9166 99.764 97.6533
H-20	99.32231001420455	if ( arr . size ( ) > $NUMBER$ )
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 98.1784 95.5705 99.9097 99.7091
H-20	99.3174579326923	if ( arr . size ( ) - 0 > 0 )
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 95.8121 99.8149 97.0771 99.7612 99.9478 99.5362
H-20	99.31734525240384	if ( ! arr . size ( ) == 0 ) {
P-20	99.9991 95.9819 99.5758 99.9588 99.0527 99.9914 99.9976 99.6389 99.9526 99.895 97.811 99.4459
H-20	99.31580810546875	if ( arr . length == 0 ) {
P-20	99.9991 99.6647 99.8729 95.6427 99.4911 99.9366 99.8951 99.0709 99.7603
H-20	99.30999200994319	if ( arr . size ( ) >= 1 )
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 96.7917 96.8535 99.8825 99.7044
H-20	99.3042879971591	if ( list . size ( ) == 0 )
P-20	99.9991 94.1402 99.5607 99.8311 99.9935 99.9988 99.484 99.9308 99.8741 99.7101
H-20	99.3042325106534	if ( first . size ( ) == 0 )
P-20	99.9991 93.8958 99.8111 99.7324 99.9891 99.9984 99.5705 99.9265 99.8688 99.7299
H-20	99.28764204545455	while ( arr . size ( ) == 0 )
P-20	99.9983 99.2709 99.9448 99.8419 99.9931 99.9991 99.3576 99.9176 99.8694 99.7547
H-20	99.27761008522727	if ( arr . size ( ) < 1 )
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 96.4348 96.9048 99.863 99.6733
H-20	99.27195231119792	if ( arr . length == 0 )
P-20	99.9991 99.6647 99.8729 95.6427 99.4911 99.9366 99.8951 99.1207
H-20	99.27011940696023	if ( arr . size ( ) != 1 )
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 96.9564 96.3164 99.8282 99.6926
H-20	99.2664462002841	if ( arr . size ( ) - 0 )
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 95.8121 99.8149 97.6878 99.4384
H-20	99.26451526988636	if ( arr . size ( ) <= $NUMBER$ )
P-20	99.9991 99.6647 99.8729 99.8284 99.989 99.9989 97.4211 95.6725 99.91 99.7284
H-20	99.2584228515625	if ( arr == null )
P-20	99.9991 99.6647 96.6946 99.9462 99.4933 99.1863
H-20	99.21776733398437	if ( arr . contains ( arr ) )
P-20	99.9991 99.6647 99.8729 94.5915 99.9504 99.0364 99.5304 99.9438 99.7638
H-20	99.19829711914062	if ( arr . contains ( 0 ) )
P-20	99.9991 99.6647 99.8729 94.5915 99.9504 98.6398 99.9578 99.838 99.6442
H-20	99.15128326416016	if ( arr != null ) {
P-20	99.9991 99.6647 97.2979 99.9475 99.3951 98.6795 98.4017
H-20	99.09166802300348	if ( size ( ) == 0 )
P-20	99.9991 95.3004 97.8986 99.8864 99.5491 99.951 99.9314 99.4843
H-20	99.05803571428571	if ( size == 0 )
P-20	99.9991 95.3004 98.9202 99.9304 99.7807 99.6507
H-20	98.94554901123047	} if ( arr != null )
P-20	99.5152 99.9942 99.5959 96.7081 99.9712 99.6624 99.3878
H-20	98.89357212611607	if ( size != 0 )
P-20	99.9991 95.3004 97.9816 99.8462 99.6998 99.6031
H-20	98.86784144810268	if ( arr != 0 )
P-20	99.9991 99.6647 97.2979 96.3444 99.5768 99.3674
H-20	98.81250871930804	if ( size < 0 )
P-20	99.9991 95.3004 97.2749 99.8694 99.8344 99.5846
H-20	98.80463518415179	if ( length == 0 )
P-20	99.9991 93.4166 99.0225 99.9274 99.758 99.6841
H-20	98.60648193359376	if ( arr )
P-20	99.9991 99.6647 94.1416 99.4023
H-20	98.54576416015625	synchronized ( arr )
P-20	99.9995 99.4885 99.9785 99.4194
H-20	98.46486206054688	/ * * /
P-20	99.8912 99.5261 98.0924 98.9861
H-20	98.3538330078125	if ( true )
P-20	99.9991 92.4006 99.9237 99.6211
H-20	98.34808349609375	if ( false )
P-20	99.9991 92.3957 99.8784 99.6425
S-21	group CaMeL By CaMeL Node = update ( group CaMeL By CaMeL Node , node , vertex _ u ) ;
T-21	group CaMeL By CaMeL Node . put ( node , group CaMeL By CaMeL Node . get ( vertex _ u ) ) ;
H-21	99.86060680042614	group CaMeL By CaMeL Node = update ( group CaMeL By CaMeL Node , node , vertex _ u ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 99.6356 99.9952 99.9674 99.9996 99.9896 99.9821 99.7016 99.972 99.7677 99.9751 99.8755 99.5041 99.9978 99.721
H-21	99.80213994565217	group CaMeL By CaMeL Node = update ( group CaMeL By CaMeL Node , node , vertex _ u ) ; }
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 99.6356 99.9952 99.9674 99.9996 99.9896 99.9821 99.7016 99.972 99.7677 99.9751 99.8755 99.5041 99.9978 98.3885 99.8483
H-21	99.79052734375	group CaMeL By CaMeL Node = update ( group CaMeL By CaMeL Node , node , vertex _ u , node ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 99.6356 99.9952 99.9674 99.9996 99.9896 99.9821 99.7016 99.972 99.7677 99.9751 99.8755 99.0453 98.7865 99.6567 99.9977 99.7758
H-21	99.7530850497159	group CaMeL By CaMeL Node = update ( group CaMeL By CaMeL Node , vertex _ u , node ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 99.6356 99.9952 99.9674 99.9996 99.9896 99.9821 98.1752 99.9658 99.8881 99.6677 99.1148 99.6007 99.9986 99.7388
H-21	99.7526522549716	group CaMeL By CaMeL Node . update ( group CaMeL By CaMeL Node , node , vertex _ u ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.2663 97.9391 99.924 99.5362 99.9916 99.9708 99.9996 99.9933 99.8688 99.5459 99.9556 99.7463 99.9656 99.8665 99.7404 99.9983 99.4608
H-21	99.74700927734375	group CaMeL By CaMeL Node = update ( group CaMeL By CaMeL Node , vertex _ u , vertex _ u ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 99.6356 99.9952 99.9674 99.9996 99.9896 99.9821 98.1752 99.9658 99.8881 99.6677 98.791 99.9584 99.8886 99.4333 99.9965 99.7454
H-21	99.74676513671875	group CaMeL By CaMeL Node = update ( group CaMeL By CaMeL Node , node , node , vertex _ u ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 99.6356 99.9952 99.9674 99.9996 99.9896 99.9821 99.7016 99.972 97.4624 99.6264 99.4956 99.9558 99.9009 99.7089 99.9963 99.6838
H-21	99.74660034179688	group CaMeL By CaMeL Node = update ( group CaMeL By CaMeL Node , vertex _ u ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 99.6356 99.9952 99.9674 99.9996 99.9896 99.9821 98.1752 99.9658 99.8881 98.7122 99.9974 99.775
H-21	99.74141261888587	group CaMeL By CaMeL Node . add ( group CaMeL By CaMeL Node , node , vertex _ u ) ; }
P-21	99.9958 99.994 99.9996 99.9925 99.2663 99.379 99.9191 99.1085 99.9847 99.9714 99.9996 99.994 98.9686 99.4178 99.8232 99.6152 99.949 99.8758 99.8176 99.9978 99.3533 99.8222
H-21	99.7390773607337	group CaMeL By CaMeL Node . update ( group CaMeL By CaMeL Node , node , vertex _ u ) ; }
P-21	99.9958 99.994 99.9996 99.9925 99.2663 97.9391 99.924 99.5362 99.9916 99.9708 99.9996 99.9933 99.8688 99.5459 99.9556 99.7463 99.9656 99.8665 99.7404 99.9983 99.0434 99.8576
H-21	99.73029119318181	group CaMeL By CaMeL Node . add ( group CaMeL By CaMeL Node , node , vertex _ u ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.2663 99.379 99.9191 99.1085 99.9847 99.9714 99.9996 99.994 98.9686 99.4178 99.8232 99.6152 99.949 99.8758 99.8176 99.9978 99.1894
H-21	99.70377197265626	group CaMeL By CaMeL Node = update ( group CaMeL By CaMeL Node , node , node ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 99.6356 99.9952 99.9674 99.9996 99.9896 99.9821 99.7016 99.972 97.4624 98.6586 99.9987 99.8635
H-21	99.69392903645833	group CaMeL By CaMeL Node = update ( group CaMeL By CaMeL Node , node , vertex _ u , true ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 99.6356 99.9952 99.9674 99.9996 99.9896 99.9821 99.7016 99.972 99.7677 99.9751 99.8755 99.0453 96.2165 99.9423 99.9963 99.7433
H-21	99.68937882133152	group CaMeL By CaMeL Node . put ( group CaMeL By CaMeL Node , node , vertex _ u ) ; }
P-21	99.9958 99.994 99.9996 99.9925 99.2663 97.4257 99.9828 99.0993 99.9638 99.9412 99.9995 99.9923 99.6485 99.4856 99.7951 99.4468 99.9455 99.8665 99.928 99.9974 99.4389 99.843
H-21	99.68635360054348	group CaMeL By CaMeL Node = update ( group CaMeL By CaMeL Node , vertex _ u , node ) ; }
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 99.6356 99.9952 99.9674 99.9996 99.9896 99.9821 98.1752 99.9658 99.8881 99.6677 99.1148 99.6007 99.9986 98.1904 99.7667
H-21	99.67696533203124	group CaMeL By CaMeL Node . add ( group CaMeL By CaMeL Node , vertex _ u ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.2663 99.379 99.9191 99.1085 99.9847 99.9714 99.9996 99.994 98.9686 98.5419 99.9486 99.7946 99.5854 99.9979 99.2902
H-21	99.67585100446429	group CaMeL By CaMeL Node . add ( group CaMeL By CaMeL Node , vertex _ u ) ; }
P-21	99.9958 99.994 99.9996 99.9925 99.2663 99.379 99.9191 99.1085 99.9847 99.9714 99.9996 99.994 98.9686 98.5419 99.9486 99.7946 99.5854 99.9979 99.179 99.7648
H-21	99.67517620584239	group CaMeL By CaMeL Node . add ( group CaMeL By CaMeL Node . get ( vertex _ u ) ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.2663 99.379 99.9191 99.1085 99.9847 99.9714 99.9996 99.994 98.3132 99.5772 99.9853 98.3809 99.9198 99.5609 99.9849 99.8201 99.9957 99.5788
H-21	99.66993543836806	group CaMeL By CaMeL Node = update ( group CaMeL By CaMeL Node , node ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 99.6356 99.9952 99.9674 99.9996 99.9896 99.9821 99.7016 96.0542 99.9929 99.8916
H-21	99.66988118489583	group CaMeL By CaMeL Node = update ( group CaMeL By CaMeL Node , node , vertex _ u , false ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 99.6356 99.9952 99.9674 99.9996 99.9896 99.9821 99.7016 99.972 99.7677 99.9751 99.8755 99.0453 95.6224 99.9656 99.9965 99.7368
H-21	99.66908482142857	group CaMeL By CaMeL Node . add ( group CaMeL By CaMeL Node . get ( node ) ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.2663 99.379 99.9191 99.1085 99.9847 99.9714 99.9996 99.994 98.3132 99.5772 99.9853 98.9659 99.5931 99.8212 99.9951 99.3877
H-21	99.66650390625	group CaMeL By CaMeL Node . put ( group CaMeL By CaMeL Node , node , vertex _ u ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.2663 97.4257 99.9828 99.0993 99.9638 99.9412 99.9995 99.9923 99.6485 99.4856 99.7951 99.4468 99.9455 99.8665 99.928 99.9974 99.0895
H-21	99.66586303710938	group CaMeL By CaMeL Node . update ( group CaMeL By CaMeL Node , vertex _ u ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.2663 97.9391 99.924 99.5362 99.9916 99.9708 99.9996 99.9933 99.8688 98.5422 99.9686 99.8159 99.1984 99.9982 99.5149
H-21	99.66545758928571	group CaMeL By CaMeL Node = update ( group CaMeL By CaMeL Node , vertex _ u ) ; }
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 99.6356 99.9952 99.9674 99.9996 99.9896 99.9821 98.1752 99.9658 99.8881 98.7122 99.9974 98.0182 99.7995
H-21	99.65941365559895	group CaMeL By CaMeL Node = update ( group CaMeL By CaMeL Node , node , vertex _ u ) ; } }
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 99.6356 99.9952 99.9674 99.9996 99.9896 99.9821 99.7016 99.972 99.7677 99.9751 99.8755 99.5041 99.9978 98.3885 96.7287 99.4964
H-21	99.65926106770833	group CaMeL By CaMeL Node . update ( group CaMeL By CaMeL Node , vertex _ u , vertex _ u ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.2663 97.9391 99.924 99.5362 99.9916 99.9708 99.9996 99.9933 99.8688 98.5422 99.9686 99.8159 99.3852 98.8573 99.9549 99.889 99.6445 99.9973 99.4881
H-21	99.65707397460938	group CaMeL By CaMeL Node . update ( group CaMeL By CaMeL Node , node , vertex _ u , node ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.2663 97.9391 99.924 99.5362 99.9916 99.9708 99.9996 99.9933 99.8688 99.5459 99.9556 99.7463 99.9656 99.8665 98.4755 98.6717 99.5597 99.9979 99.706
H-21	99.65418590198864	group CaMeL By CaMeL Node . add ( group CaMeL By CaMeL Node . get ( node ) ) ; }
P-21	99.9958 99.994 99.9996 99.9925 99.2663 99.379 99.9191 99.1085 99.9847 99.9714 99.9996 99.994 98.3132 99.5772 99.9853 98.9659 99.5931 99.8212 99.9951 99.028 99.701
H-21	99.64373779296875	group CaMeL By CaMeL Node . add ( group CaMeL By CaMeL Node , node ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.2663 99.379 99.9191 99.1085 99.9847 99.9714 99.9996 99.994 98.9686 99.4178 97.9781 99.996 99.8145
H-21	99.64314778645833	group CaMeL By CaMeL Node = update ( group CaMeL By CaMeL Node , node , group CaMeL By CaMeL Node ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 99.6356 99.9952 99.9674 99.9996 99.9896 99.9821 99.7016 99.972 95.1083 99.8332 99.9338 99.998 99.9811 98.6237 99.9948 99.8706
H-21	99.64295543323864	group CaMeL By CaMeL Node = update ( group CaMeL By CaMeL Node , node , node , node ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 99.6356 99.9952 99.9674 99.9996 99.9896 99.9821 99.7016 99.972 97.4624 99.6264 97.6004 99.522 99.9983 99.8432
H-21	99.6419169108073	group CaMeL By CaMeL Node = update ( group CaMeL By CaMeL Node , node , vertex _ u , 0 ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 99.6356 99.9952 99.9674 99.9996 99.9896 99.9821 99.7016 99.972 99.7677 99.9751 99.8755 99.0453 95.1626 99.7382 99.9966 99.7526
H-21	99.64175269717262	group CaMeL By CaMeL Node . update ( group CaMeL By CaMeL Node , vertex _ u ) ; }
P-21	99.9958 99.994 99.9996 99.9925 99.2663 97.9391 99.924 99.5362 99.9916 99.9708 99.9996 99.9933 99.8688 98.5422 99.9686 99.8159 99.1984 99.9982 98.8701 99.8042
H-21	99.64136759440105	this . group CaMeL By CaMeL Node = update ( group CaMeL By CaMeL Node , node , vertex _ u ) ;
P-21	99.9005 99.7321 99.9573 99.9888 99.9995 99.995 99.7177 99.6791 99.9941 99.7312 99.9952 99.9785 99.9997 99.9933 99.9829 99.7409 99.9753 99.7975 99.98 99.8887 99.5987 99.9979 99.7226
H-21	99.6409579190341	group CaMeL By CaMeL Node . update ( group CaMeL By CaMeL Node , vertex _ u , node ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.2663 97.9391 99.924 99.5362 99.9916 99.9708 99.9996 99.9933 99.8688 98.5422 99.9686 99.8159 99.3852 98.9953 99.5819 99.9988 99.534
H-21	99.64028930664062	group CaMeL By CaMeL Node = update ( node , group CaMeL By CaMeL Node , node , vertex _ u ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 97.0028 99.7475 97.6467 99.9866 99.9486 99.9995 99.9941 99.8452 99.4984 99.9148 99.7381 99.9792 99.8931 99.6937 99.9977 99.6317
H-21	99.63991292317708	group CaMeL By CaMeL Node . update ( group CaMeL By CaMeL Node , node , node , vertex _ u ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.2663 97.9391 99.924 99.5362 99.9916 99.9708 99.9996 99.9933 99.8688 99.5459 99.9556 97.3681 99.5905 99.4385 99.9504 99.9027 99.816 99.997 99.5141
H-21	99.63699340820312	update ( group CaMeL By CaMeL Node , node , vertex _ u ) ;
P-21	99.9665 99.7023 99.9957 99.9743 99.9993 99.993 99.9575 99.6795 99.9598 99.6987 99.9622 99.8557 99.3107 99.9976 99.785
H-21	99.6365382982337	group CaMeL By CaMeL Node . set ( group CaMeL By CaMeL Node , node , vertex _ u ) ; }
P-21	99.9958 99.994 99.9996 99.9925 99.2663 96.4057 99.9555 98.9545 99.9893 99.9564 99.9996 99.9933 99.4843 99.5448 99.8629 99.6736 99.9599 99.8797 99.8535 99.9981 99.2383 99.8353
H-21	99.6316650390625	group CaMeL By CaMeL Node = update ( group CaMeL By CaMeL Node , node , true ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 99.6356 99.9952 99.9674 99.9996 99.9896 99.9821 99.7016 99.972 94.856 99.8551 99.9979 99.8321
H-21	99.6296719637784	group CaMeL By CaMeL Node . set ( group CaMeL By CaMeL Node , node , vertex _ u ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.2663 96.4057 99.9555 98.9545 99.9893 99.9564 99.9996 99.9933 99.4843 99.5448 99.8629 99.6736 99.9599 99.8797 99.8535 99.9981 99.2859
H-21	99.62553267045455	group CaMeL By CaMeL Node = add ( group CaMeL By CaMeL Node , node , vertex _ u ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.3108 94.7952 99.9476 99.597 99.9945 99.9719 99.9996 99.9914 99.9866 99.753 99.9681 99.7208 99.9708 99.8885 99.5886 99.9975 99.4904
H-21	99.62498938519022	group CaMeL By CaMeL Node . add ( update ( group CaMeL By CaMeL Node , vertex _ u ) ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.2663 99.379 99.9191 97.0073 99.9435 99.5676 99.9942 99.9762 99.9995 99.9935 99.9693 97.9511 99.9622 99.8659 99.1179 99.9767 99.9966 99.6994
H-21	99.6238680752841	group CaMeL By CaMeL Node = get ( group CaMeL By CaMeL Node , node , vertex _ u ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.3108 95.0409 99.5343 99.5583 99.9902 99.9475 99.9995 99.9929 99.9309 99.6878 99.9349 99.6996 99.9724 99.8897 99.7666 99.9958 99.6832
H-21	99.6210300611413	group CaMeL By CaMeL Node = update ( group CaMeL By CaMeL Node , node , vertex _ u ) ; ;
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 99.6356 99.9952 99.9674 99.9996 99.9896 99.9821 99.7016 99.972 99.7677 99.9751 99.8755 99.5041 99.9978 94.3902 99.6812
H-21	99.6166461447011	group CaMeL By CaMeL Node . update ( group CaMeL By CaMeL Node , vertex _ u , node ) ; }
P-21	99.9958 99.994 99.9996 99.9925 99.2663 97.9391 99.924 99.5362 99.9916 99.9708 99.9996 99.9933 99.8688 98.5422 99.9686 99.8159 99.3852 98.9953 99.5819 99.9988 98.8651 99.7508
H-21	99.6132281759511	group CaMeL By CaMeL Node = add ( group CaMeL By CaMeL Node , node , vertex _ u ) ; }
P-21	99.9958 99.994 99.9996 99.9925 99.3108 94.7952 99.9476 99.597 99.9945 99.9719 99.9996 99.9914 99.9866 99.753 99.9681 99.7208 99.9708 99.8885 99.5886 99.9975 98.9889 99.8441
H-21	99.61278187144886	group CaMeL By CaMeL Node = update ( group CaMeL By CaMeL Node , node , node , true ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 99.6356 99.9952 99.9674 99.9996 99.9896 99.9821 99.7016 99.972 97.4624 99.6264 96.5405 99.9706 99.9972 99.7919
H-21	99.61274857954545	group CaMeL By CaMeL Node . add ( group CaMeL By CaMeL Node , vertex _ u , node ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.2663 99.379 99.9191 99.1085 99.9847 99.9714 99.9996 99.994 98.9686 98.5419 99.9486 99.7946 98.8308 98.9134 99.6449 99.9985 99.4269
H-21	99.61003766741071	group CaMeL By CaMeL Node . put ( group CaMeL By CaMeL Node , vertex _ u ) ; }
P-21	99.9958 99.994 99.9996 99.9925 99.2663 97.4257 99.9828 99.0993 99.9638 99.9412 99.9995 99.9923 99.6485 98.0469 99.9169 99.7879 99.8011 99.998 99.3819 99.7689
H-21	99.60723322088069	group CaMeL By CaMeL Node = update ( group CaMeL By CaMeL Node , node . vertex _ u ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 99.6356 99.9952 99.9674 99.9996 99.9896 99.9821 99.7016 94.9545 99.0823 99.9303 99.8446 99.6719 99.9972 99.7581
H-21	99.60585715553977	group CaMeL By CaMeL Node = update ( group CaMeL By CaMeL Node , vertex _ u , true ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 99.6356 99.9952 99.9674 99.9996 99.9896 99.9821 98.1752 99.9658 99.8881 99.6677 95.6014 99.9235 99.9973 99.6917
H-21	99.6052776834239	group CaMeL By CaMeL Node . clear ( group CaMeL By CaMeL Node , node , vertex _ u ) ; }
P-21	99.9958 99.994 99.9996 99.9925 99.2663 96.2675 99.9592 98.757 99.9892 99.9581 99.9997 99.9934 99.3721 99.376 99.8848 99.686 99.9611 99.867 99.8299 99.9975 99.1687 99.7989
H-21	99.60175115411931	group CaMeL By CaMeL Node . clear ( group CaMeL By CaMeL Node , node , vertex _ u ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.2663 96.2675 99.9592 98.757 99.9892 99.9581 99.9997 99.9934 99.3721 99.376 99.8848 99.686 99.9611 99.867 99.8299 99.9975 99.2847
H-21	99.60147705078126	group CaMeL By CaMeL Node = update ( group CaMeL By CaMeL Node , node , false ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 99.6356 99.9952 99.9674 99.9996 99.9896 99.9821 99.7016 99.972 94.2042 99.9075 99.9981 99.8277
H-21	99.60111860795455	group CaMeL By CaMeL Node = copy ( group CaMeL By CaMeL Node , node , vertex _ u ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.3108 93.9271 99.9761 99.6194 99.9914 99.9716 99.9995 99.9898 99.9563 99.6606 99.9683 99.7719 99.9751 99.8874 99.6634 99.9961 99.7704
H-21	99.600927734375	group CaMeL By CaMeL Node . add ( group CaMeL By CaMeL Node , node , node ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.2663 99.379 99.9191 99.1085 99.9847 99.9714 99.9996 99.994 98.9686 99.4178 99.8232 97.7858 98.9252 99.9984 99.6875
H-21	99.60022503396739	group CaMeL By CaMeL Node . add ( group CaMeL By CaMeL Node , vertex _ u , node ) ; }
P-21	99.9958 99.994 99.9996 99.9925 99.2663 99.379 99.9191 99.1085 99.9847 99.9714 99.9996 99.994 98.9686 98.5419 99.9486 99.7946 98.8308 98.9134 99.6449 99.9985 99.0531 99.6985
H-21	99.60009765625	group CaMeL By CaMeL Node = update ( node , vertex _ u , node , vertex _ u ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 97.0028 99.7475 99.088 99.9412 99.8189 99.7079 99.1917 99.2676 99.4942 99.9082 99.7889 99.6353 99.9969 99.764
H-21	99.5983657836914	group CaMeL By CaMeL Node = update ( group CaMeL By CaMeL Node ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 99.6356 99.9952 99.9674 99.9996 99.9896 95.2814 99.9785 99.8776
H-21	99.59552873883929	group CaMeL By CaMeL Node = update ( group CaMeL By CaMeL Node , node , node ) ; }
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 99.6356 99.9952 99.9674 99.9996 99.9896 99.9821 99.7016 99.972 97.4624 98.6586 99.9987 97.5212 99.7729
H-21	99.59506623641305	group CaMeL By CaMeL Node . remove ( group CaMeL By CaMeL Node , node , vertex _ u ) ; }
P-21	99.9958 99.994 99.9996 99.9925 99.2663 96.3907 99.9114 98.9145 99.96 99.943 99.9996 99.9936 98.8193 99.4285 99.7531 99.6156 99.9624 99.8648 99.8949 99.9976 99.4034 99.7783
H-21	99.59422766644022	group CaMeL By CaMeL Node . add ( group CaMeL By CaMeL Node = node , vertex _ u ) ; }
P-21	99.9958 99.994 99.9996 99.9925 99.2663 99.379 99.9191 99.1085 99.9847 99.9714 99.9996 99.994 96.8382 98.89 99.4922 99.5578 99.9608 99.7655 99.6257 99.9962 99.3035 99.8252
H-21	99.58841552734376	group CaMeL By CaMeL Node . put ( group CaMeL By CaMeL Node , vertex _ u ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.2663 97.4257 99.9828 99.0993 99.9638 99.9412 99.9995 99.9923 99.6485 98.0469 99.9169 99.7879 99.8011 99.998 99.1086
H-21	99.58783513849431	group CaMeL By CaMeL Node . copy ( group CaMeL By CaMeL Node , node , vertex _ u ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.2663 94.4046 99.84 99.5336 99.9877 99.9756 99.9997 99.9935 99.8315 99.5162 99.956 99.7774 99.9672 99.8736 99.7633 99.9974 99.4597
H-21	99.58765326605902	update ( group CaMeL By CaMeL Node , node , vertex _ u , node ) ;
P-21	99.9665 99.7023 99.9957 99.9743 99.9993 99.993 99.9575 99.6795 99.9598 99.6987 99.9622 99.8557 99.2848 98.8942 99.4406 99.9978 99.8619
H-21	99.58547973632812	update ( group CaMeL By CaMeL Node , node , vertex _ u , vertex _ u ) ;
P-21	99.9665 99.7023 99.9957 99.9743 99.9993 99.993 99.9575 99.6795 99.9598 99.6987 99.9622 99.8557 99.2848 98.6432 99.9234 99.7812 99.2804 99.996 99.7019
H-21	99.584326171875	group CaMeL By CaMeL Node = update ( node , vertex _ u , vertex _ u ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 97.0028 99.7475 99.088 99.9412 99.8189 99.7079 98.893 99.934 99.7993 99.0974 99.9961 99.8111
H-21	99.58392888849431	group CaMeL By CaMeL Node = update ( group CaMeL By CaMeL Node , parent , vertex _ u ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 99.6356 99.9952 99.9674 99.9996 99.9896 99.9821 93.8786 99.8946 99.6337 99.9728 99.8558 99.5158 99.9974 99.6792
H-21	99.58346218532986	group CaMeL By CaMeL Node = update ( node , node , vertex _ u ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 97.0028 99.7475 98.881 99.7924 99.4738 99.9541 99.8955 99.1291 99.9939 99.7832
H-21	99.58291965060764	group CaMeL By CaMeL Node = update ( node , vertex _ u , node ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 97.0028 99.7475 99.088 99.9412 99.8189 99.7079 99.1917 99.2938 99.997 99.8548
H-21	99.58206939697266	group CaMeL By CaMeL Node . add ( group CaMeL By CaMeL Node ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.2663 99.379 99.9191 99.1085 99.9847 99.9714 99.9996 99.994 99.0904 99.9947 96.816
H-21	99.58106079101563	group CaMeL By CaMeL Node . update ( group CaMeL By CaMeL Node , node , node ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.2663 97.9391 99.924 99.5362 99.9916 99.9708 99.9996 99.9933 99.8688 99.5459 99.9556 97.3681 98.6886 99.9988 99.7852
H-21	99.58076307508681	group CaMeL By CaMeL Node . put ( group CaMeL By CaMeL Node , node ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.2663 97.4257 99.9828 99.0993 99.9638 99.9412 99.9995 99.9923 99.6485 99.4856 98.0742 99.997 99.7879
H-21	99.56668429904514	group CaMeL By CaMeL Node . update ( group CaMeL By CaMeL Node , node ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.2663 97.9391 99.924 99.5362 99.9916 99.9708 99.9996 99.9933 99.8688 99.5459 96.5277 99.9954 99.8521
H-21	99.5607048483456	update ( group CaMeL By CaMeL Node , node , vertex _ u ) ; }
P-21	99.9665 99.7023 99.9957 99.9743 99.9993 99.993 99.9575 99.6795 99.9598 99.6987 99.9622 99.8557 99.3107 99.9976 98.2172 99.908
H-21	99.55398559570312	group CaMeL By CaMeL Node = update ( node , vertex _ u ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 97.0028 99.7475 99.088 99.9412 99.8189 98.6109 99.9918 99.8135
H-21	99.5538330078125	group CaMeL By CaMeL Node . put ( group CaMeL By CaMeL Node , node , node ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.2663 97.4257 99.9828 99.0993 99.9638 99.9412 99.9995 99.9923 99.6485 99.4856 99.7951 97.9225 99.1392 99.9985 99.6267
H-21	99.55229749177632	group CaMeL By CaMeL Node . add ( group CaMeL By CaMeL Node , node ) ; }
P-21	99.9958 99.994 99.9996 99.9925 99.2663 99.379 99.9191 99.1085 99.9847 99.9714 99.9996 99.994 98.9686 99.4178 97.9781 99.996 97.9388 99.7823
H-21	99.5494384765625	group CaMeL By CaMeL Node = update ( group CaMeL By CaMeL Node , node , $NUMBER$ ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 99.6356 99.9952 99.9674 99.9996 99.9896 99.9821 99.7016 99.972 93.7329 99.3235 99.9978 99.8424
H-21	99.54791259765625	group CaMeL By CaMeL Node = update ( node , node , vertex _ u , node ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 97.0028 99.7475 98.881 99.7924 99.4738 99.9541 99.8955 99.4489 98.7285 99.3681 99.9974 99.8193
H-21	99.54771728515625	group CaMeL By CaMeL Node . set ( group CaMeL By CaMeL Node , vertex _ u ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.2663 96.4057 99.9555 98.9545 99.9893 99.9564 99.9996 99.9933 99.4843 98.4464 99.9386 99.7686 99.6098 99.9982 99.3983
H-21	99.54695434570313	group CaMeL By CaMeL Node = update ( vertex _ u , node , vertex _ u ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 95.5584 99.9526 99.609 99.8759 99.242 99.5859 99.6168 99.9191 99.8176 99.2033 99.9962 99.7133
H-21	99.54125213623047	group CaMeL By CaMeL Node . add ( node , vertex _ u ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.2663 99.379 99.9191 98.2857 98.1486 98.8299 99.8701 99.8642 99.7133 99.9948 99.5995
H-21	99.5318667763158	group CaMeL By CaMeL Node = update ( group CaMeL By CaMeL Node , node ) ; }
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 99.6356 99.9952 99.9674 99.9996 99.9896 99.9821 99.7016 96.0542 99.9929 97.143 99.7952
H-21	99.52787950303819	update ( group CaMeL By CaMeL Node , node , node , vertex _ u ) ;
P-21	99.9665 99.7023 99.9957 99.9743 99.9993 99.993 99.9575 99.6795 99.9598 97.6017 99.6529 99.4302 99.9423 99.8833 99.6405 99.9962 99.7727
H-21	99.52675374348958	group CaMeL By CaMeL Node . put ( node , group CaMeL By CaMeL Node ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.2663 97.4257 99.9828 98.3647 99.8574 98.0154 99.9885 99.9671 99.9997 99.9929 99.0344 99.9968 99.8004
H-21	99.51845296223958	group CaMeL By CaMeL Node . add ( group CaMeL By CaMeL Node , true ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.2663 99.379 99.9191 99.1085 99.9847 99.9714 99.9996 99.994 98.9686 95.3379 99.8445 99.9936 99.7755
H-21	99.5053351907169	group CaMeL By CaMeL Node . add ( node , vertex _ u ) ; }
P-21	99.9958 99.994 99.9996 99.9925 99.2663 99.379 99.9191 98.2857 98.1486 98.8299 99.8701 99.8642 99.7133 99.9948 98.6859 99.8442
H-21	99.49571990966797	update ( group CaMeL By CaMeL Node , vertex _ u , node ) ;
P-21	99.9665 99.7023 99.9957 99.9743 99.9993 99.993 99.9575 98.1901 99.963 99.8447 99.6706 99.118 99.3938 99.9987 99.8101
H-21	99.49454498291016	group CaMeL By CaMeL Node . update ( node , vertex _ u ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.2663 97.9391 99.924 97.5007 99.4749 99.3203 99.9292 99.8445 99.261 99.9953 99.6679
H-21	99.4934794108073	group CaMeL By CaMeL Node = update ( node ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 97.0028 98.1985 99.9943 99.8772
H-21	99.4858169555664	group CaMeL By CaMeL Node = update ( vertex _ u , node ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 95.5584 99.9526 99.609 99.8759 99.242 98.881 99.9963 99.8088
H-21	99.47716522216797	group CaMeL By CaMeL Node . put ( node , vertex _ u ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.2663 97.4257 99.9828 98.3647 99.8574 98.0754 99.8189 99.7429 99.844 99.9972 99.4698
H-21	99.46481759207589	group CaMeL By CaMeL Node = update ( node , node ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.3108 99.7544 99.9945 97.0028 99.7475 98.881 98.111 99.9957 99.9204
H-21	99.46433803013393	update ( group CaMeL By CaMeL Node , vertex _ u ) ;
P-21	99.9665 99.7023 99.9957 99.9743 99.9993 99.993 99.9575 98.1901 99.963 99.8447 98.6967 99.9961 99.8676
H-21	99.44324602399554	group CaMeL By CaMeL Node . put ( node , node ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.2663 97.4257 99.9828 98.3647 99.8574 98.3302 99.309 99.9969 99.8829
H-21	99.43406459263393	group CaMeL By CaMeL Node . add ( node , node ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.2663 99.379 99.9191 98.2857 98.1486 98.5656 98.8617 99.9966 99.8649
H-21	99.4326883951823	group CaMeL By CaMeL Node . add ( node ) ;
P-21	99.9958 99.994 99.9996 99.9925 99.2663 99.379 99.9191 98.2857 99.6897 99.9964 96.8665
H-21	99.40643310546875	update ( group CaMeL By CaMeL Node , node , node ) ;
P-21	99.9665 99.7023 99.9957 99.9743 99.9993 99.993 99.9575 99.6795 99.9598 97.6017 98.5673 99.9985 99.9407
S-22	otherwise . add CaMeL All ( Collections . n CaMeL Copies ( digit _ list . length , 0 ) ) ;
T-22	otherwise . add CaMeL All ( Collections . n CaMeL Copies ( digit _ list . length - 1 , 0 ) ) ;
H-22	99.89415973165761	otherwise . add CaMeL All ( Collections . n CaMeL Copies ( digit _ list . length , 0 ) ) ;
P-22	99.9968 99.9796 99.3394 99.9832 99.9839 99.6164 99.9987 99.945 99.9945 99.9957 99.9976 99.8127 99.9482 99.9685 99.8614 99.765 99.9596 99.847 99.9852 99.9955 99.9982 99.9678
H-22	99.85528273809524	otherwise . add ( Collections . n CaMeL Copies ( digit _ list . length , 0 ) ) ;
P-22	99.9968 99.9796 99.2715 99.1483 99.9991 99.93 99.9925 99.9947 99.9958 99.8159 99.9315 99.9621 99.8472 99.7407 99.953 99.8362 99.9851 99.9959 99.9979 99.9617
H-22	99.77795991443452	otherwise . add CaMeL All ( Collections . n CaMeL Copies ( digit _ list , 0 ) ) ;
P-22	99.9968 99.9796 99.3394 99.9832 99.9839 99.6164 99.9987 99.945 99.9945 99.9957 99.9976 99.8127 99.9482 99.9685 97.7477 99.586 99.8542 99.9936 99.9983 99.9715
H-22	99.77341627038044	otherwise . add ( Collections . n CaMeL Copies ( digit _ list . size ( ) , 0 ) ) ;
P-22	99.9968 99.9796 99.2715 99.1483 99.9991 99.93 99.9925 99.9947 99.9958 99.8159 99.9315 99.9621 99.8472 98.1502 99.6698 99.9993 99.7988 99.7648 99.9785 99.996 99.9979 99.9426
H-22	99.73388671875	otherwise . add CaMeL All ( Collections . n CaMeL Copies ( digit _ list . length , $NUMBER$ ) ) ;
P-22	99.9968 99.9796 99.3394 99.9832 99.9839 99.6164 99.9987 99.945 99.9945 99.9957 99.9976 99.8127 99.9482 99.9685 99.8614 99.765 99.9596 96.1489 99.9959 99.9957 99.998 99.9692
H-22	99.73200789741848	otherwise . add CaMeL All ( Collections . n CaMeL Copies ( digit _ list . length , 1 ) ) ;
P-22	99.9968 99.9796 99.3394 99.9832 99.9839 99.6164 99.9987 99.945 99.9945 99.9957 99.9976 99.8127 99.9482 99.9685 99.8614 99.765 99.9596 96.1102 99.993 99.9945 99.9981 99.9688
H-22	99.73136179070724	otherwise . add ( Collections . n CaMeL Copies ( digit _ list , 0 ) ) ;
P-22	99.9968 99.9796 99.2715 99.1483 99.9991 99.93 99.9925 99.9947 99.9958 99.8159 99.9315 99.9621 97.8105 99.6227 99.8565 99.994 99.9982 99.9706
H-22	99.73094641644022	otherwise . add CaMeL All ( Collections . n CaMeL Copies ( digit _ list . size , 0 ) ) ;
P-22	99.9968 99.9796 99.3394 99.9832 99.9839 99.6164 99.9987 99.945 99.9945 99.9957 99.9976 99.8127 99.9482 99.9685 99.8614 98.1007 97.8868 99.839 99.9861 99.9953 99.9971 99.9597
H-22	99.70150902157738	otherwise . add ( Collections . n CaMeL Copies ( digit _ list . size , 0 ) ) ;
P-22	99.9968 99.9796 99.2715 99.1483 99.9991 99.93 99.9925 99.9947 99.9958 99.8159 99.9315 99.9621 99.8472 98.1502 98.349 99.81 99.9865 99.9951 99.9966 99.9538
H-22	99.6922023607337	otherwise . add CaMeL All ( Collections . n CaMeL Copies ( digit _ list , 0 , 0 ) ) ;
P-22	99.9968 99.9796 99.3394 99.9832 99.9839 99.6164 99.9987 99.945 99.9945 99.9957 99.9976 99.8127 99.9482 99.9685 97.7477 99.586 97.9624 99.5258 99.9525 99.9956 99.998 99.9668
H-22	99.68442170516305	otherwise . add CaMeL All ( Collections . n CaMeL Copies ( digit _ list . length - 0 ) ) ;
P-22	99.9968 99.9796 99.3394 99.9832 99.9839 99.6164 99.9987 99.945 99.9945 99.9957 99.9976 99.8127 99.9482 99.9685 99.8614 99.765 95.8895 99.5244 99.5715 99.9821 99.9972 99.9645
H-22	99.68126860119048	otherwise . add ( Collections . n CaMeL Copies ( digit _ list . length , $NUMBER$ ) ) ;
P-22	99.9968 99.9796 99.2715 99.1483 99.9991 99.93 99.9925 99.9947 99.9958 99.8159 99.9315 99.9621 99.8472 99.7407 99.953 96.1695 99.9961 99.9961 99.9977 99.9632
H-22	99.6811755952381	otherwise . add ( Collections . n CaMeL Copies ( digit _ list . length , 1 ) ) ;
P-22	99.9968 99.9796 99.2715 99.1483 99.9991 99.93 99.9925 99.9947 99.9958 99.8159 99.9315 99.9621 99.8472 99.7407 99.953 96.1703 99.9942 99.9955 99.9978 99.9626
H-22	99.67612092391305	otherwise . add CaMeL All ( Collections . n CaMeL Copies ( digit _ list , digit _ list ) ) ;
P-22	99.9968 99.9796 99.3394 99.9832 99.9839 99.6164 99.9987 99.945 99.9945 99.9957 99.9976 99.8127 99.9482 99.9685 97.7477 98.2346 99.93 99.9324 98.5807 99.9953 99.9941 99.9502
H-22	99.66893368675595	otherwise . add CaMeL All ( Collections . n CaMeL Copies ( digit _ list . length ) ) ;
P-22	99.9968 99.9796 99.3394 99.9832 99.9839 99.6164 99.9987 99.945 99.9945 99.9957 99.9976 99.8127 99.9482 99.9685 99.8614 99.765 95.3241 99.9483 99.9964 99.9667
H-22	99.66805013020833	add CaMeL All ( Collections . n CaMeL Copies ( digit _ list . length , 0 ) ) ;
P-22	99.8121 98.9219 99.133 99.3439 99.9991 99.9585 99.9758 99.995 99.9949 99.881 99.9337 99.9686 99.8014 99.7391 99.9544 99.847 99.9867 99.965 99.9982 99.9688
H-22	99.65969981317934	otherwise . put CaMeL All ( Collections . n CaMeL Copies ( digit _ list . length , 0 ) ) ;
P-22	99.9968 94.4633 99.5596 99.9736 99.9845 99.5917 99.9989 99.9383 99.9921 99.9948 99.9969 99.8284 99.9443 99.9675 99.824 99.7543 99.9584 99.8384 99.9856 99.9944 99.9986 99.9634
H-22	99.65967858355978	otherwise . add CaMeL All ( Collections . n CaMeL Copies ( digit _ list . size ( ) ) ) ;
P-22	99.9968 99.9796 99.3394 99.9832 99.9839 99.6164 99.9987 99.945 99.9945 99.9957 99.9976 99.8127 99.9482 99.9685 99.8614 98.1007 99.6991 99.9993 96.38 99.9919 99.9967 99.9578
H-22	99.65867017663044	otherwise . add CaMeL All ( Collections . n CaMeL Copies ( digit _ list , length , 0 ) ) ;
P-22	99.9968 99.9796 99.3394 99.9832 99.9839 99.6164 99.9987 99.945 99.9945 99.9957 99.9976 99.8127 99.9482 99.9685 97.7477 97.097 99.491 99.6979 99.9711 99.9962 99.9978 99.9649
H-22	99.64619777513587	otherwise . add ( Collections . n CaMeL Copies ( digit _ list . length , 0 , 0 ) ) ;
P-22	99.9968 99.9796 99.2715 99.1483 99.9991 99.93 99.9925 99.9947 99.9958 99.8159 99.9315 99.9621 99.8472 99.7407 99.953 99.8362 95.6847 99.2434 99.9856 99.9958 99.9971 99.9355
H-22	99.64501953125	otherwise . add CaMeL All ( Collections . n CaMeL Copies ( digit _ list . 0 , 0 ) ) ;
P-22	99.9968 99.9796 99.3394 99.9832 99.9839 99.6164 99.9987 99.945 99.9945 99.9957 99.9976 99.8127 99.9482 99.9685 99.8614 94.0211 99.9855 99.8419 99.9812 99.9939 99.9983 99.9664
H-22	99.6434909986413	otherwise . set CaMeL All ( Collections . n CaMeL Copies ( digit _ list . length , 0 ) ) ;
P-22	99.9968 94.9155 99.9746 99.1686 99.3951 99.6677 99.9989 99.9284 99.9946 99.9959 99.998 99.8688 99.9435 99.9707 99.8358 99.7688 99.9616 99.8462 99.9859 99.9969 99.9986 99.964
H-22	99.63926478794643	otherwise . add ( Collections . n CaMeL Copies ( digit _ list , 0 , 0 ) ) ;
P-22	99.9968 99.9796 99.2715 99.1483 99.9991 99.93 99.9925 99.9947 99.9958 99.8159 99.9315 99.9621 97.8105 99.6227 97.9541 99.4938 99.9465 99.9958 99.9978 99.9601
H-22	99.63879925271739	otherwise . add CaMeL All ( Collections . n CaMeL Copies ( digit _ list . length , digit ) ) ;
P-22	99.9968 99.9796 99.3394 99.9832 99.9839 99.6164 99.9987 99.945 99.9945 99.9957 99.9976 99.8127 99.9482 99.9685 99.8614 99.765 99.9596 96.8203 97.1515 99.9942 99.9971 99.9576
H-22	99.63302479619566	otherwise . add ( Collections . n CaMeL Copies ( digit _ list . size ( ) , 1 ) ) ;
P-22	99.9968 99.9796 99.2715 99.1483 99.9991 99.93 99.9925 99.9947 99.9958 99.8159 99.9315 99.9621 99.8472 98.1502 99.6698 99.9993 99.7988 96.5248 99.9901 99.996 99.9978 99.942
H-22	99.62889563519022	otherwise . add ( Collections . n CaMeL Copies ( digit _ list . iterator ( ) , 0 ) ) ;
P-22	99.9968 99.9796 99.2715 99.1483 99.9991 99.93 99.9925 99.9947 99.9958 99.8159 99.9315 99.9621 99.8472 94.59 99.9818 99.9958 99.8429 99.711 99.9212 99.9965 99.998 99.937
H-22	99.62863026494566	add . add CaMeL All ( Collections . n CaMeL Copies ( digit _ list . length , 0 ) ) ;
P-22	96.8256 99.9078 99.1014 99.9851 99.9819 99.7702 99.9988 99.9514 99.9953 99.9961 99.9972 99.8066 99.9481 99.9689 99.8695 99.7527 99.9589 99.8439 99.9849 99.9964 99.9979 99.9688
H-22	99.6265869140625	otherwise . add CaMeL All ( digit _ list . length , 0 ) ;
P-22	99.9968 99.9796 99.3394 99.9832 99.9839 97.7564 99.8962 99.9489 99.0587 99.6567 99.4095 99.5441 99.9727 99.9895 99.8845
H-22	99.62596594769022	otherwise . add ( Collections . n CaMeL Copies ( digit _ list . length - 0 , 0 ) ) ;
P-22	99.9968 99.9796 99.2715 99.1483 99.9991 99.93 99.9925 99.9947 99.9958 99.8159 99.9315 99.9621 99.8472 99.7407 95.9782 99.5041 99.3733 99.4247 99.9695 99.9927 99.9971 99.9265
H-22	99.62423573369566	otherwise . remove CaMeL All ( Collections . n CaMeL Copies ( digit _ list . length , 0 ) ) ;
P-22	99.9968 93.8716 99.5443 99.9798 99.8471 99.442 99.9986 99.9305 99.9943 99.9953 99.9979 99.8099 99.9447 99.9649 99.8983 99.7567 99.9564 99.8568 99.9878 99.9966 99.9984 99.9633
H-22	99.6239597486413	otherwise . add ( Collections . n CaMeL Copies ( digit _ list . length , digit _ list ) ) ;
P-22	99.9968 99.9796 99.2715 99.1483 99.9991 99.93 99.9925 99.9947 99.9958 99.8159 99.9315 99.9621 99.8472 99.7407 99.953 96.9151 99.9004 99.8663 97.5751 99.9943 99.9949 99.9207
H-22	99.62338654891305	otherwise . add CaMeL All ( Collections . n CaMeL Copies ( digit _ list . length + 0 ) ) ;
P-22	99.9968 99.9796 99.3394 99.9832 99.9839 99.6164 99.9987 99.945 99.9945 99.9957 99.9976 99.8127 99.9482 99.9685 99.8614 99.765 94.6815 99.5979 99.2925 99.9885 99.9973 99.9679
H-22	99.62245244565217	otherwise . add ( Collections . n CaMeL Copies ( digit _ list . size ( ) , $NUMBER$ ) ) ;
P-22	99.9968 99.9796 99.2715 99.1483 99.9991 99.93 99.9925 99.9947 99.9958 99.8159 99.9315 99.9621 99.8472 98.1502 99.6698 99.9993 99.7988 96.2778 99.9926 99.9964 99.9975 99.9435
H-22	99.62188430059524	otherwise . add ( Collections . n CaMeL Copies ( digit _ list , digit _ list ) ) ;
P-22	99.9968 99.9796 99.2715 99.1483 99.9991 99.93 99.9925 99.9947 99.9958 99.8159 99.9315 99.9621 97.8105 98.1458 99.9383 99.9284 98.6599 99.9949 99.9941 99.9442
H-22	99.62153957201087	otherwise . add CaMeL All ( Collections . n CaMeL Copies ( digit _ list . length - 1 ) ) ;
P-22	99.9968 99.9796 99.3394 99.9832 99.9839 99.6164 99.9987 99.945 99.9945 99.9957 99.9976 99.8127 99.9482 99.9685 99.8614 99.765 95.8895 98.4942 99.16 99.9779 99.997 99.9642
H-22	99.61817568824405	otherwise . add CaMeL All ( Collections . n CaMeL Copies ( digit _ list , length ) ) ;
P-22	99.9968 99.9796 99.3394 99.9832 99.9839 99.6164 99.9987 99.945 99.9945 99.9957 99.9976 99.8127 99.9482 99.9685 97.7477 97.097 98.989 99.994 99.9974 99.9707
H-22	99.61290922619048	otherwise . add ( Collections . n CaMeL Copies ( digit _ list . length - 0 ) ) ;
P-22	99.9968 99.9796 99.2715 99.1483 99.9991 99.93 99.9925 99.9947 99.9958 99.8159 99.9315 99.9621 99.8472 99.7407 95.9782 99.5041 99.2197 99.9783 99.9965 99.963
H-22	99.61201557360198	otherwise . add CaMeL All ( Collections . n CaMeL Copies ( 0 , 0 ) ) ;
P-22	99.9968 99.9796 99.3394 99.9832 99.9839 99.6164 99.9987 99.945 99.9945 99.9957 99.9976 95.3345 99.9377 99.0608 99.9012 99.9949 99.998 99.945
H-22	99.6109952059659	otherwise . add ( Collections . n CaMeL Copies ( digit _ list . length , 0 ) ) ; }
P-22	99.9968 99.9796 99.2715 99.1483 99.9991 99.93 99.9925 99.9947 99.9958 99.8159 99.9315 99.9621 99.8472 99.7407 99.953 99.8362 99.9851 99.9959 99.9979 94.7896 99.6531
H-22	99.60069515830592	otherwise . add ( Collections . n CaMeL Copies ( digit _ list . length ) ) ;
P-22	99.9968 99.9796 99.2715 99.1483 99.9991 99.93 99.9925 99.9947 99.9958 99.8159 99.9315 99.9621 99.8472 99.7407 95.3221 99.8973 99.9954 99.9673
H-22	99.59751674107143	otherwise . add ( digit _ list . length , 0 ) ;
P-22	99.9968 99.9796 99.2715 98.0061 99.929 99.92 99.1354 99.5469 99.4225 99.6628 99.9805 99.988 99.901
H-22	99.59724564985795	otherwise . add ( Collections . n CaMeL Copies ( digit _ list [ 0 ] , 0 ) ) ;
P-22	99.9968 99.9796 99.2715 99.1483 99.9991 99.93 99.9925 99.9947 99.9958 99.8159 99.9315 99.9621 95.8063 98.22 99.9599 99.7946 99.81 99.9708 99.9931 99.9982 99.9429
H-22	99.59416060014205	} otherwise . add ( Collections . n CaMeL Copies ( digit _ list . length , 0 ) ) ;
P-22	98.5779 99.9953 99.9744 99.503 99.2067 99.9989 99.923 99.9928 99.9954 99.9965 99.8717 99.9465 99.9651 99.9289 99.7549 99.9552 99.8081 99.9895 99.9949 99.9974 99.9669
H-22	99.59406389508929	otherwise . add CaMeL All ( Collections . n CaMeL Copies ( digit _ list , 1 ) ) ;
P-22	99.9968 99.9796 99.3394 99.9832 99.9839 99.6164 99.9987 99.945 99.9945 99.9957 99.9976 99.8127 99.9482 99.9685 97.7477 95.6469 99.9323 99.9931 99.9982 99.9713
H-22	99.59311349051339	otherwise . add CaMeL All ( digit _ list , 0 ) ;
P-22	99.9968 99.9796 99.3394 99.9832 99.9839 97.7564 99.8962 99.9489 98.9324 99.2688 99.722 99.9928 99.878
H-22	99.59302920386905	otherwise . add ( Collections . n CaMeL Copies ( digit _ list . 0 , 0 ) ) ;
P-22	99.9968 99.9796 99.2715 99.1483 99.9991 99.93 99.9925 99.9947 99.9958 99.8159 99.9315 99.9621 99.8472 94.2289 99.9864 99.8164 99.9805 99.995 99.9981 99.9581
H-22	99.59099469866071	otherwise . add ( Collections . n CaMeL Copies ( digit _ list , length , 0 ) ) ;
P-22	99.9968 99.9796 99.2715 99.1483 99.9991 99.93 99.9925 99.9947 99.9958 99.8159 99.9315 99.9621 97.8105 96.8843 99.4489 99.6964 99.9745 99.9964 99.9975 99.9591
H-22	99.58952331542969	otherwise . add CaMeL All ( digit _ list . size ( ) ) ;
P-22	99.9968 99.9796 99.3394 99.9832 99.9839 97.7564 99.8962 99.9489 99.0587 98.4452 99.8959 99.9988 99.6573 99.9948 99.8718
H-22	99.58698381696429	add . add ( Collections . n CaMeL Copies ( digit _ list . length , 0 ) ) ;
P-22	96.8256 99.9078 99.475 99.2828 99.9988 99.9333 99.9888 99.9943 99.9963 99.8279 99.9378 99.9626 99.8581 99.7477 99.9538 99.8397 99.9852 99.9954 99.9975 99.9674
H-22	99.58211263020833	otherwise . add ( Collections . n CaMeL Copies ( digit _ list . size ( ) ) ) ;
P-22	99.9968 99.9796 99.2715 99.1483 99.9991 99.93 99.9925 99.9947 99.9958 99.8159 99.9315 99.9621 99.8472 98.1502 99.6698 99.9993 95.9729 99.9918 99.9965 99.9533
H-22	99.58120582217262	otherwise . add ( Collections . n CaMeL Copies ( digit _ list . length , digit ) ) ;
P-22	99.9968 99.9796 99.2715 99.1483 99.9991 99.93 99.9925 99.9947 99.9958 99.8159 99.9315 99.9621 99.8472 99.7407 99.953 96.9151 97.1659 99.9952 99.9967 99.9482
H-22	99.58076782226563	otherwise . add CaMeL All ( digit _ list , digit _ list . length , 0 ) ;
P-22	99.9968 99.9796 99.3394 99.9832 99.9839 97.7564 99.8962 99.9489 98.9324 98.4962 99.9319 99.9074 98.9403 99.7656 99.638 99.6523 99.9677 99.9911 99.8829
H-22	99.57632606907895	add ( Collections . n CaMeL Copies ( digit _ list . length , 0 ) ) ;
P-22	97.6472 98.6094 99.999 99.9234 99.9775 99.9922 99.9921 99.8076 99.9334 99.971 99.7541 99.7636 99.9517 99.8398 99.986 99.9849 99.9979 99.9683
H-22	99.57177734375	otherwise . add CaMeL All ( digit _ list ( digit _ list . length , 0 ) ) ;
P-22	99.9968 99.9796 99.3394 99.9832 99.9839 97.7564 99.8962 99.9489 96.324 99.4184 99.9204 99.959 99.3856 99.8391 99.8935 99.8587 99.9716 99.9961 99.998 99.9331
H-22	99.56573165090461	otherwise . add CaMeL All ( Collections . n CaMeL Copies ( $NUMBER$ , 0 ) ) ;
P-22	99.9968 99.9796 99.3394 99.9832 99.9839 99.6164 99.9987 99.945 99.9945 99.9957 99.9976 94.2078 99.9147 99.2463 99.9867 99.9949 99.9975 99.9446
H-22	99.55955746299342	otherwise . add ( digit _ list [ digit _ list . length - 1 ] ) ;
P-22	99.9968 99.9796 99.2715 98.0061 99.929 99.92 98.5102 98.9221 99.9015 99.848 99.9511 99.7864 98.7296 99.5389 99.9789 99.9887 99.9941 99.7539
H-22	99.55751546223958	otherwise . add CaMeL All ( digit _ list , digit _ list , 0 ) ;
P-22	99.9968 99.9796 99.3394 99.9832 99.9839 97.7564 99.8962 99.9489 98.9324 98.4962 99.9319 99.9074 99.0424 99.4889 99.8512 99.9918 99.8834
H-22	99.55602155412946	otherwise . add ( digit _ list . size ( ) ) ;
P-22	99.9968 99.9796 99.2715 98.0061 99.929 99.92 99.1354 98.6837 99.8991 99.9985 99.4567 99.9927 99.8901
H-22	99.5546515969669	return Collections . n CaMeL Copies ( digit _ list . length , 0 ) ;
P-22	99.4189 99.9998 99.9457 99.9921 99.985 99.9798 99.5785 99.9402 99.9682 99.6487 99.735 99.9523 99.686 99.98 99.987 99.9961
H-22	99.54852294921875	otherwise . add ( digit _ list [ digit _ list . length , 0 ) ;
P-22	99.9968 99.9796 99.2715 98.0061 99.929 99.92 98.5102 98.9221 99.9015 99.848 99.9511 99.7864 98.9067 99.5887 99.9886 99.9875 99.7544
H-22	99.54726690995066	otherwise . add CaMeL All ( Collections . n CaMeL Copies ( digit _ list ) ) ;
P-22	99.9968 99.9796 99.3394 99.9832 99.9839 99.6164 99.9987 99.945 99.9945 99.9957 99.9976 99.8127 99.9482 99.9685 93.282 99.9787 99.9951 99.9565
H-22	99.5465152138158	otherwise . add CaMeL All ( Collections . n CaMeL Copies ( digit , 0 ) ) ;
P-22	99.9968 99.9796 99.3394 99.9832 99.9839 99.6164 99.9987 99.945 99.9945 99.9957 99.9976 99.8127 93.7069 99.5369 99.922 99.9922 99.9979 99.9589
H-22	99.5455258018092	otherwise . add ( Collections . n CaMeL Copies ( digit _ list , 1 ) ) ;
P-22	99.9968 99.9796 99.2715 99.1483 99.9991 99.93 99.9925 99.9947 99.9958 99.8159 99.9315 99.9621 97.8105 96.012 99.9373 99.9936 99.9982 99.9701
H-22	99.54447214226974	otherwise . add ( Collections . n CaMeL Copies ( digit _ list , length ) ) ;
P-22	99.9968 99.9796 99.2715 99.1483 99.9991 99.93 99.9925 99.9947 99.9958 99.8159 99.9315 99.9621 97.8105 96.8843 99.046 99.9945 99.997 99.9695
H-22	99.53843287417763	add CaMeL All ( Collections . n CaMeL Copies ( digit _ list , 0 ) ) ;
P-22	99.8121 98.9219 99.133 99.3439 99.9991 99.9585 99.9758 99.995 99.9949 99.881 99.9337 99.9686 98.0936 99.6175 99.8228 99.9551 99.9983 99.9744
H-22	99.53488338694854	otherwise . add ( Collections . n CaMeL Copies ( 0 , 0 ) ) ;
P-22	99.9968 99.9796 99.2715 99.1483 99.9991 99.93 99.9925 99.9947 99.9958 95.4266 99.9358 99.0501 99.8124 99.9951 99.9979 99.9415
H-22	99.53306820518092	otherwise . add ( digit _ list [ digit _ list . size ( ) ] ) ;
P-22	99.9968 99.9796 99.2715 98.0061 99.929 99.92 98.5102 98.9221 99.9015 99.848 99.9511 98.0996 99.6232 99.9987 99.7089 99.9941 99.9956 99.8469
H-22	99.53191817434211	otherwise . add CaMeL All ( Collections . n CaMeL Copies ( 1 , 0 ) ) ;
P-22	99.9968 99.9796 99.3394 99.9832 99.9839 99.6164 99.9987 99.945 99.9945 99.9957 99.9976 93.4636 99.9131 99.3723 99.9627 99.9944 99.9979 99.9461
H-22	99.52369600183823	otherwise . add CaMeL All ( Collections . n CaMeL Copies ( digit ) ) ;
P-22	99.9968 99.9796 99.3394 99.9832 99.9839 99.6164 99.9987 99.945 99.9945 99.9957 99.9976 99.8127 93.6801 99.9843 99.9951 99.9744
H-22	99.52208116319444	otherwise . add CaMeL All ( digit _ list . length , digit _ list ) ;
P-22	99.9968 99.9796 99.3394 99.9832 99.9839 97.7564 99.8962 99.9489 99.0587 99.6567 99.4095 98.1527 99.9137 99.8658 98.9479 99.9942 99.8885
H-22	99.5192642211914	otherwise . add CaMeL All ( digit _ list , 0 , 0 ) ;
P-22	99.9968 99.9796 99.3394 99.9832 99.9839 97.7564 99.8962 99.9489 98.9324 99.2688 98.512 99.4135 99.7689 99.9892 99.9138
H-22	99.51643371582031	otherwise . add CaMeL All ( digit _ list , digit _ list ) ;
P-22	99.9968 99.9796 99.3394 99.9832 99.9839 97.7564 99.8962 99.9489 98.9324 98.4962 99.9319 99.9074 98.556 99.9941 99.9353
H-22	99.51605224609375	otherwise . add CaMeL All ( digit _ list . length ( ) ) ;
P-22	99.9968 99.9796 99.3394 99.9832 99.9839 97.7564 99.8962 99.9489 99.0587 99.6567 97.4274 99.9907 99.7281 99.9945 99.891
H-22	99.5053955078125	otherwise . add ( 0 ) ; otherwise . add ( 0 ) ;
P-22	99.9968 99.9796 99.2715 98.2447 99.9565 99.9752 96.7921 99.9927 99.9565 99.708 99.3268 99.9661 99.986 99.8031
H-22	99.49901326497395	otherwise . add ( digit _ list , 0 ) ;
P-22	99.9968 99.9796 99.2715 98.0061 99.929 99.92 98.1508 99.4018 99.8773 99.9904 99.8396
H-22	99.49805450439453	otherwise . add ( digit _ list . size ( ) , 0 ) ;
P-22	99.9968 99.9796 99.2715 98.0061 99.929 99.92 99.1354 98.6837 99.8991 99.9985 98.3613 99.3529 99.9617 99.9926 99.8555
H-22	99.478759765625	otherwise . add ( Collections . n CaMeL Copies ( digit , 0 ) ) ;
P-22	99.9968 99.9796 99.2715 99.1483 99.9991 99.93 99.9925 99.9947 99.9958 99.8159 93.9461 99.5924 99.9042 99.9928 99.9978 99.9561
H-22	99.47813063401442	otherwise . add ( digit _ list [ 0 ] ) ;
P-22	99.9968 99.9796 99.2715 98.0061 99.929 99.92 98.5102 98.1066 99.9634 99.9814 99.9936 99.9322
H-22	99.47139739990234	otherwise . add ( digit _ list . to CaMeL String ( ) ) ;
P-22	99.9968 99.9796 99.2715 98.0061 99.929 99.92 99.1354 96.196 99.9929 99.6589 99.983 99.9882 99.9866 99.9959 99.8774
H-22	99.45785522460938	otherwise . add ( digit _ list . size ( ) - 1 ) ;
P-22	99.9968 99.9796 99.2715 98.0061 99.929 99.92 99.1354 98.6837 99.8991 99.9985 97.938 99.1406 99.9111 99.9922 99.8988
H-22	99.45423889160156	otherwise . add ( digit _ list . size ( ) - 0 ) ;
P-22	99.9968 99.9796 99.2715 98.0061 99.929 99.92 99.1354 98.6837 99.8991 99.9985 97.938 99.06 99.94 99.9914 99.8933
H-22	99.44383138020834	otherwise . add ( $NUMBER$ ) ; otherwise . add ( 0 ) ;
P-22	99.9968 99.9796 99.2715 97.5862 99.9832 99.9768 96.7782 99.9933 99.9566 99.6824 99.0985 99.9667 99.9855 99.777
H-22	99.439208984375	otherwise . add ( Collections . n CaMeL Copies ( digit ) ) ;
P-22	99.9968 99.9796 99.2715 99.1483 99.9991 99.93 99.9925 99.9947 99.9958 99.8159 93.8848 99.9851 99.9944 99.9743
H-22	99.42642647879464	otherwise . add ( digit _ list . length ( ) ) ;
P-22	99.9968 99.9796 99.2715 98.0061 99.929 99.92 99.1354 99.5469 97.0652 99.9923 99.602 99.9931 99.9067
H-22	99.42220052083333	otherwise . add CaMeL All ( digit _ list [ 0 ] ) ;
P-22	99.9968 99.9796 99.3394 99.9832 99.9839 97.7564 99.8962 99.9489 96.9092 98.0406 99.9691 99.968 99.9956 99.9409
H-22	99.41884765625	otherwise . add ( 0 ) ; otherwise . add ( 1 ) ;
P-22	99.9968 99.9796 99.2715 98.2447 99.9565 99.9752 96.7921 99.9927 99.9565 99.708 98.0314 99.9828 99.9862 99.7833
H-22	99.41708170572916	return Collections . n CaMeL Copies ( digit _ list , 0 ) ;
P-22	99.4189 99.9998 99.9457 99.9921 99.985 99.9798 99.5785 99.9402 99.9682 98.6476 99.435 99.7448 99.9888 99.9961
H-22	99.38157435825893	otherwise . add ( digit _ list . length , 1 ) ;
P-22	99.9968 99.9796 99.2715 98.0061 99.929 99.92 99.1354 99.5469 99.4225 96.6372 99.9826 99.9887 99.9006
H-22	99.38154820033482	otherwise . add ( digit _ list , digit _ list ) ;
P-22	99.9968 99.9796 99.2715 98.0061 99.929 99.92 98.1508 98.1448 99.9302 99.9163 98.5443 99.9938 99.9332
H-22	99.37143179086539	otherwise . add ( digit _ list [ length ] ) ;
P-22	99.9968 99.9796 99.2715 98.0061 99.929 99.92 98.5102 97.4877 99.1878 99.9845 99.9948 99.9355
H-22	99.34164663461539	otherwise . add ( 0 ) . add ( 0 ) ;
P-22	99.9968 99.9796 99.2715 98.2447 99.9565 95.7658 99.8694 99.6249 99.2401 99.975 99.9761 99.9158
H-22	99.29777018229167	otherwise . add CaMeL All ( digit _ list ) ;
P-22	99.9968 99.9796 99.3394 99.9832 99.9839 97.7564 99.8962 99.9489 98.1201 99.9929 96.9505
H-22	99.28515625	otherwise . add ( new Integer ( 0 ) ) ;
P-22	99.9968 99.9796 99.2715 95.6045 98.6805 99.8583 98.6032 99.9717 99.9922 99.9947 99.8436
H-22	99.24333953857422	otherwise . add ( 0 ) ;
P-22	99.9968 99.9796 99.2715 98.2447 99.9565 99.9752 96.8971
H-22	99.23439719460227	if ( digit _ list . length > 0 )
P-22	99.9517 99.5515 99.9466 99.9062 99.5991 99.7237 99.3321 99.6999 99.9736 96.1707
H-22	99.20322265625	otherwise . add ( 0 , 0 ) ;
P-22	99.9968 99.9796 99.2715 98.2447 96.3994 98.9836 99.7128 99.9911 99.8274
H-22	99.16343688964844	otherwise . add ( $NUMBER$ ) ;
P-22	99.9968 99.9796 99.2715 97.5862 99.9832 99.9768 96.8881
H-22	99.1238525390625	otherwise . add ( digit _ list ) ;
P-22	99.9968 99.9796 99.2715 98.0061 99.929 99.92 97.5877 99.994 96.9285
H-22	99.07392035590277	otherwise . add ( 0 ) ; }
P-22	99.9968 99.9796 99.2715 98.2447 99.9565 99.9752 94.9146 99.701
H-22	99.02345275878906	otherwise . add ( 1 ) ;
P-22	99.9968 99.9796 99.2715 96.4697 99.9803 99.9768 96.8875
S-23	if ( perm . get ( j ) < perm . get ( i ) ) {
T-23	if ( perm . get ( j ) > perm . get ( i ) ) {
H-23	99.87936062282986	if ( perm . get ( j ) < perm . get ( i ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 99.7056 99.8929 99.9967 99.9928 99.9837 99.7558 99.8751 99.9675 99.4809 99.8427
H-23	99.84138758042279	if ( perm . get ( j ) < perm . get ( i ) )
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 99.7056 99.8929 99.9967 99.9928 99.9837 99.7558 99.8751 99.9675 98.7986
H-23	99.83882649739583	if ( perm . get ( i ) < perm . get ( i ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 99.9109 99.725 99.8839 99.9967 99.9924 99.9849 99.7484 99.9041 99.9711 99.4922 99.8434
H-23	99.79709041819854	if ( perm . get ( i ) < perm . get ( i ) )
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 99.9109 99.725 99.8839 99.9967 99.9924 99.9849 99.7484 99.9041 99.9711 98.7873
H-23	99.79458279079861	if ( perm . get ( j ) < perm . get ( j ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 99.7056 99.8929 99.9967 99.9928 99.9837 98.0905 99.9572 99.9776 99.5167 99.8539
H-23	99.76752387152777	if ( perm . get ( j ) == perm . get ( i ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 97.5969 99.8718 99.9926 99.9951 99.9868 99.7278 99.8787 99.9778 99.5432 99.9099
H-23	99.76617431640625	if ( perm . get ( j ) < perm . get ( i - 1 ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 99.7056 99.8929 99.9967 99.9928 99.9837 99.7558 97.4254 99.8681 99.999 99.9584 99.6331 99.7771
H-23	99.76001654730902	if ( perm . get ( i ) < perm . get ( j ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 99.9109 99.725 99.8839 99.9967 99.9924 99.9849 98.2351 99.9672 99.9805 99.4962 99.8616
H-23	99.7448371438419	if ( perm . get ( j ) < perm . get ( j ) )
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 99.7056 99.8929 99.9967 99.9928 99.9837 98.0905 99.9572 99.9776 98.7304
H-23	99.73439534505208	if ( perm . get ( j ) != perm . get ( i ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 97.151 99.7814 99.9903 99.9949 99.9858 99.7284 99.8806 99.9829 99.4717 99.9172
H-23	99.72037760416667	if ( perm . get ( i ) == perm . get ( i ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 99.9109 97.5092 99.8556 99.9926 99.9954 99.9875 99.727 99.9073 99.9805 99.5414 99.9136
H-23	99.71890869140626	if ( perm . get ( i ) < perm . get ( i - 1 ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 99.9109 99.725 99.8839 99.9967 99.9924 99.9849 99.7484 97.2297 99.8674 99.999 99.9674 99.6446 99.7819
H-23	99.71615261501736	if ( perm . get ( j ) >= perm . get ( i ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 96.8304 99.8906 99.9967 99.9919 99.9866 99.7477 99.8863 99.9619 99.3816 99.882
H-23	99.71513097426471	if ( perm . get ( j ) == perm . get ( i ) )
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 97.5969 99.8718 99.9926 99.9951 99.9868 99.7278 99.8787 99.9778 98.7949
H-23	99.71238798253677	if ( perm . get ( i ) < perm . get ( j ) )
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 99.9109 99.725 99.8839 99.9967 99.9924 99.9849 98.2351 99.9672 99.9805 98.7883
H-23	99.69154986213235	if ( perm . get ( j ) != perm . get ( i ) )
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 97.151 99.7814 99.9903 99.9949 99.9858 99.7284 99.8806 99.9829 98.9262
H-23	99.69119423314145	if ( perm . get ( j ) < perm . get ( i 1 ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 99.7056 99.8929 99.9967 99.9928 99.9837 99.7558 95.926 99.9959 99.9796 99.7381 99.8307
H-23	99.69011773003473	if ( perm . get ( i ) != perm . get ( i ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 99.9109 97.1014 99.7743 99.9894 99.9949 99.9864 99.7254 99.9145 99.9852 99.4734 99.9206
H-23	99.68875461154514	if ( perm . get ( j ) == perm . get ( j ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 97.5969 99.8718 99.9926 99.9951 99.9868 98.1798 99.9643 99.9857 99.5702 99.9195
H-23	99.68613891601562	if ( perm . get ( i - 1 ) < perm . get ( i ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 96.9589 99.8009 99.9981 99.53 99.9379 99.9974 99.9956 99.9874 99.8178 99.6383 99.9748 99.565 99.8748
H-23	99.68579779730902	if ( perm . get ( j ) <= perm . get ( i ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 96.1767 99.8958 99.9962 99.9943 99.9829 99.7367 99.8769 99.968 99.5047 99.8772
H-23	99.68308392693015	if ( perm . get ( j ) >= perm . get ( i ) )
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 96.8304 99.8906 99.9967 99.9919 99.9866 99.7477 99.8863 99.9619 98.9852
H-23	99.67586477179276	if ( perm . get ( j ) < perm . get ( i - 1 ) )
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 99.7056 99.8929 99.9967 99.9928 99.9837 99.7558 97.4254 99.8681 99.999 99.9584 97.9283
H-23	99.67410888671876	if ( perm . get ( j - 1 ) < perm . get ( i ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 95.9415 99.8187 99.9974 99.4806 99.9373 99.9974 99.9962 99.9863 99.7939 99.8048 99.9711 99.5177 99.8732
H-23	99.67206488715277	if ( perm . get ( i ) >= perm . get ( i ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 99.9109 96.7714 99.8863 99.9967 99.9915 99.9873 99.7443 99.9143 99.9657 99.3989 99.884
H-23	99.6655632467831	if ( perm . get ( i ) == perm . get ( i ) )
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 99.9109 97.5092 99.8556 99.9926 99.9954 99.9875 99.727 99.9073 99.9805 98.8029
H-23	99.65956420898438	if ( perm . get ( j ) == perm . get ( i - 1 ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 97.5969 99.8718 99.9926 99.9951 99.9868 99.7278 97.2578 99.8865 99.9989 99.972 99.7386 99.8315
H-23	99.65637885199652	if ( perm . get ( j ) > perm . get ( i ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 95.6165 99.8703 99.9967 99.9943 99.9833 99.7472 99.8896 99.9791 99.5178 99.8853
H-23	99.65460205078125	if ( perm . get ( j ) != perm . get ( j ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 97.151 99.7814 99.9903 99.9949 99.9858 98.1739 99.9632 99.989 99.4914 99.927
H-23	99.6521060341283	if ( perm . get ( j ) < perm . get ( i ) ) continue ;
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 99.7056 99.8929 99.9967 99.9928 99.9837 99.7558 99.8751 99.9675 95.8518 99.797 99.2362
H-23	99.64790852864583	if ( perm . get ( i ) == perm . get ( j ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 99.9109 97.5092 99.8556 99.9926 99.9954 99.9875 98.3232 99.9698 99.9876 99.5639 99.9209
H-23	99.6444450827206	if ( perm . get ( i ) != perm . get ( i ) )
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 99.9109 97.1014 99.7743 99.9894 99.9949 99.9864 99.7254 99.9145 99.9852 98.9274
H-23	99.6436767578125	if ( perm . get ( j ) < perm . get ( i ) ) break ;
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 99.7056 99.8929 99.9967 99.9928 99.9837 99.7558 99.8751 99.9675 96.2535 99.8712 98.6002
H-23	99.64117431640625	if ( perm . get ( j ) < perm . get ( i ) ) break ; }
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 99.7056 99.8929 99.9967 99.9928 99.9837 99.7558 99.8751 99.9675 96.2535 99.8712 99.6097 98.5841
H-23	99.64080810546875	if ( perm . get ( i ) <= perm . get ( i ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 99.9109 96.1119 99.8874 99.9962 99.9943 99.9842 99.7331 99.9056 99.9719 99.5115 99.882
H-23	99.63662719726562	if ( perm . get ( j ) < perm . get ( i + 1 ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 99.7056 99.8929 99.9967 99.9928 99.9837 99.7558 94.7991 99.8792 99.9993 99.9721 99.6326 99.788
H-23	99.63434914981617	if ( perm . get ( i ) >= perm . get ( i ) )
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 99.9109 96.7714 99.8863 99.9967 99.9915 99.9873 99.7443 99.9143 99.9657 98.9698
H-23	99.63361206054688	if ( perm . get ( j ) != perm . get ( i - 1 ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 97.151 99.7814 99.9903 99.9949 99.9858 99.7284 97.3122 99.8823 99.9988 99.9766 99.7012 99.8346
H-23	99.6335808249081	if ( perm . get ( j ) <= perm . get ( i ) )
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 96.1767 99.8958 99.9962 99.9943 99.9829 99.7367 99.8769 99.968 98.8083
H-23	99.6324462890625	if ( perm . get ( j ) < perm . get ( j - 1 ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 99.7056 99.8929 99.9967 99.9928 99.9837 98.0905 96.3481 99.8747 99.9984 99.9613 99.6964 99.7729
H-23	99.63089328342014	if ( perm . get ( j ) >= perm . get ( j ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 96.8304 99.8906 99.9967 99.9919 99.9866 98.0975 99.9575 99.9759 99.4017 99.8921
H-23	99.63004985608552	if ( perm . get ( i ) < perm . get ( i 1 ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 99.9109 99.725 99.8839 99.9967 99.9924 99.9849 99.7484 95.518 99.9968 99.9819 99.7432 99.8429
H-23	99.62980571546052	if ( perm . get ( j ) < perm . get ( i - ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 99.7056 99.8929 99.9967 99.9928 99.9837 99.7558 97.4254 97.3514 99.9807 99.7652 99.7812
H-23	99.62704307154605	if ( perm . get ( i - 1 ) < perm . get ( i ) )
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 96.9589 99.8009 99.9981 99.53 99.9379 99.9974 99.9956 99.9874 99.8178 99.6383 99.9748 98.6308
H-23	99.62580422794117	if ( perm . get ( j ) == perm . get ( j ) )
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 97.5969 99.8718 99.9926 99.9951 99.9868 98.1798 99.9643 99.9857 98.7307
H-23	99.62399131373355	if ( perm . get ( i ) < perm . get ( i - 1 ) )
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 99.9109 99.725 99.8839 99.9967 99.9924 99.9849 99.7484 97.2297 99.8674 99.999 99.9674 97.9042
H-23	99.6231201171875	if ( perm . get ( j ) >= perm . get ( i - 1 ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 96.8304 99.8906 99.9967 99.9919 99.9866 99.7477 97.4169 99.8576 99.9989 99.9587 99.6134 99.8381
H-23	99.61929481907895	if ( perm . get ( j - 1 ) < perm . get ( i ) )
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 95.9415 99.8187 99.9974 99.4806 99.9373 99.9974 99.9962 99.9863 99.7939 99.8048 99.9711 98.6753
H-23	99.61632622612848	if ( perm . get ( i ) != perm . get ( j ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 99.9109 97.1014 99.7743 99.9894 99.9949 99.9864 98.3154 99.9694 99.99 99.4879 99.9279
H-23	99.61204769736842	if ( perm . get ( j ) < perm . get ( i ) ) { }
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 99.7056 99.8929 99.9967 99.9928 99.9837 99.7558 99.8751 99.9675 99.4809 95.0965 99.5466
H-23	99.61185495476974	if ( perm . get ( i ) < perm . get ( i ) ) continue ;
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 99.9109 99.725 99.8839 99.9967 99.9924 99.9849 99.7484 99.9041 99.9711 95.833 99.7919 99.237
H-23	99.60894454152961	if ( perm . get ( j ) < perm . get ( i $NUMBER$ ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 99.7056 99.8929 99.9967 99.9928 99.9837 99.7558 94.3554 99.993 99.9807 99.7452 99.8334
H-23	99.6083984375	if ( perm . get ( j ) < perm . get ( 0 ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 99.7056 99.8929 99.9967 99.9928 99.9837 94.6291 99.997 99.9697 99.5669 99.8818
H-23	99.60606553819444	if ( perm . get ( j ) < perm . get ( 1 ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 99.7056 99.8929 99.9967 99.9928 99.9837 94.6081 99.9985 99.97 99.5579 99.868
H-23	99.60578748914931	if ( perm . get ( i ) > perm . get ( i ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 99.9109 95.4515 99.8667 99.9967 99.9943 99.9837 99.7403 99.9195 99.9817 99.5268 99.8861
H-23	99.60564575195312	if ( perm . get ( i ) == perm . get ( i - 1 ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 99.9109 97.5092 99.8556 99.9926 99.9954 99.9875 99.727 97.0555 99.884 99.9989 99.9773 99.7427 99.8306
H-23	99.60416666666667	if ( perm . get ( j ) <= perm . get ( j ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 96.1767 99.8958 99.9962 99.9943 99.9829 98.1391 99.9603 99.981 99.5243 99.8894
H-23	99.60377261513158	if ( ! perm . get ( j ) < perm . get ( i ) ) {
P-23	99.9991 94.8194 99.8233 99.9958 99.949 99.9868 99.6094 99.9819 99.4095 99.91 99.9964 99.9924 99.9847 99.7531 99.876 99.9714 99.5997 99.8488
H-23	99.60284782858456	if ( perm . get ( j ) != perm . get ( j ) )
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 97.151 99.7814 99.9903 99.9949 99.9858 98.1739 99.9632 99.989 98.884
H-23	99.6015625	if ( perm . get ( i ) < perm . get ( i ) ) break ;
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 99.9109 99.725 99.8839 99.9967 99.9924 99.9849 99.7484 99.9041 99.9711 96.1982 99.8687 98.5996
H-23	99.6005500344669	if ( perm . get ( j ) > perm . get ( i ) )
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 95.6165 99.8703 99.9967 99.9943 99.9833 99.7472 99.8896 99.9791 98.7976
H-23	99.6003662109375	if ( perm . get ( i ) < perm . get ( i ) ) break ; }
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 99.9109 99.725 99.8839 99.9967 99.9924 99.9849 99.7484 99.9041 99.9711 96.1982 99.8687 99.6118 98.5654
H-23	99.5996337890625	if ( perm . get ( i + 1 ) < perm . get ( i ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 95.096 99.8408 99.9988 99.5018 99.9363 99.9975 99.996 99.9876 99.8242 99.7157 99.98 99.6056 99.8667
H-23	99.5991943359375	if ( perm . get ( i - 1 ) != perm . get ( i ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 96.9589 99.8009 99.9981 97.7815 99.8699 99.9848 99.9968 99.9889 99.8076 99.6575 99.9899 99.5808 99.9227
H-23	99.598876953125	if ( ( perm . get ( j ) < perm . get ( i ) ) ) {
P-23	99.9991 96.3684 99.0057 99.99 99.9958 99.9916 99.5994 99.9842 99.9002 99.8992 99.9977 99.9921 99.9856 99.7604 99.8521 99.954 98.6347 99.4071 99.6953
H-23	99.59852905273438	if ( perm . get ( j ) < perm . get ( i - $NUMBER$ ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 99.7056 99.8929 99.9967 99.9928 99.9837 99.7558 97.4254 96.5046 99.9979 99.9642 99.638 99.778
H-23	99.59833984375	if ( perm . get ( i - 1 ) < perm . get ( j ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 96.9589 99.8009 99.9981 99.53 99.9379 99.9974 99.9956 99.9874 97.8214 99.8562 99.9814 99.5716 99.8841
H-23	99.59598581414474	if ( perm . get ( j ) == perm . get ( i 1 ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 97.5969 99.8718 99.9926 99.9951 99.9868 99.7278 96.146 99.9955 99.9826 99.8237 99.87
H-23	99.59344482421875	if ( perm . get ( i - 1 ) == perm . get ( i ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 96.9589 99.8009 99.9981 97.5478 99.9278 99.9907 99.997 99.9892 99.8103 99.6614 99.9863 99.6408 99.9139
H-23	99.59305419921876	if ( perm . get ( j - 1 ) != perm . get ( i ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 95.9415 99.8187 99.9974 97.8348 99.8663 99.9865 99.9971 99.9884 99.7736 99.8338 99.9875 99.5479 99.9214
H-23	99.59285481770833	if ( perm . get ( i ) >= perm . get ( j ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 99.9109 96.7714 99.8863 99.9967 99.9915 99.9873 98.2377 99.9652 99.9784 99.4046 99.8955
H-23	99.59268188476562	if ( perm . get ( j ) <= perm . get ( i - 1 ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 96.1767 99.8958 99.9962 99.9943 99.9829 99.7367 97.4104 99.8748 99.999 99.9656 99.6691 99.8174
H-23	99.59241333007813	if ( perm . get ( i ) < perm . get ( j - 1 ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 99.9109 99.725 99.8839 99.9967 99.9924 99.9849 98.2351 96.1455 99.8709 99.9983 99.9688 99.7061 99.784
H-23	99.5908447265625	if ( perm . get ( j ) . equals ( perm . get ( i ) ) )
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 95.672 99.0873 99.9041 99.9346 99.9945 99.9946 99.9795 99.5561 99.8788 99.9948 99.9932 98.4927
H-23	99.58958524816177	if ( perm . get ( j ) >= perm . get ( j ) )
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 96.8304 99.8906 99.9967 99.9919 99.9866 98.0975 99.9575 99.9759 98.9607
H-23	99.58823649088542	if ( perm . get ( j ) & perm . get ( i ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 94.7839 99.8338 99.997 99.9874 99.9896 99.7352 99.9137 99.5754 99.5161 99.9212
H-23	99.58519789751838	if ( perm . get ( i ) <= perm . get ( i ) )
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 99.9109 96.1119 99.8874 99.9962 99.9943 99.9842 99.7331 99.9056 99.9719 98.8073
H-23	99.58409208409927	if ( perm . get ( i ) == perm . get ( j ) )
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 99.9109 97.5092 99.8556 99.9926 99.9954 99.9875 98.3232 99.9698 99.9876 98.7519
H-23	99.5833740234375	if ( perm . get ( j ) < perm . get ( i ) ) { {
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 99.7056 99.8929 99.9967 99.9928 99.9837 99.7558 99.8751 99.9675 99.4809 94.4733 99.625
H-23	99.58090049342105	if ( perm . get ( i ) < perm . get ( i - ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 99.9109 99.725 99.8839 99.9967 99.9924 99.9849 99.7484 97.2297 97.378 99.9826 99.7688 99.7898
H-23	99.57253011067708	if ( perm . get ( j ) > perm . get ( j ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 95.6165 99.8703 99.9967 99.9943 99.9833 98.1117 99.9638 99.9875 99.5519 99.8948
H-23	99.57250298394098	if ( perm . get ( j ) < perm . get ( i ) ) }
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 99.7056 99.8929 99.9967 99.9928 99.9837 99.7558 99.8751 99.9675 93.833 99.967
H-23	99.57155890213816	if ( perm . get ( i ) < perm . get ( i ) ) { }
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 99.9109 99.725 99.8839 99.9967 99.9924 99.9849 99.7484 99.9041 99.9711 99.4922 95.0619 99.5422
H-23	99.57067192925348	if ( perm . get ( j ) < perm . get ( i 1 ) )
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 99.7056 99.8929 99.9967 99.9928 99.9837 99.7558 95.926 99.9959 99.9796 97.7082
H-23	99.56989203559027	if ( perm . get ( 0 ) < perm . get ( i ) ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 94.0531 99.9948 99.6274 99.8972 99.9963 99.9936 99.9879 99.6822 99.9032 99.9749 99.4786 99.8522
H-23	99.56745990953948	if ( perm . get ( j ) < perm . get ( j ) ) continue ;
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 99.7056 99.8929 99.9967 99.9928 99.9837 98.0905 99.9572 99.9776 95.8273 99.8146 99.208
H-23	99.56711297286184	if ( ( perm . get ( j ) < perm . get ( i ) ) )
P-23	99.9991 96.3684 99.0057 99.99 99.9958 99.9916 99.5994 99.9842 99.9002 99.8992 99.9977 99.9921 99.9856 99.7604 99.8521 99.954 98.6347 98.9
H-23	99.56318933823529	if ( perm . get ( i ) != perm . get ( j ) )
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 99.9109 97.1014 99.7743 99.9894 99.9949 99.9864 98.3154 99.9694 99.99 98.8963
H-23	99.54942411534927	if ( perm . get ( i ) >= perm . get ( j ) )
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 99.9109 96.7714 99.8863 99.9967 99.9915 99.9873 98.2377 99.9652 99.9784 98.969
H-23	99.42576246995192	if ( perm . get ( j ) < $NUMBER$ ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 99.7056 94.229 99.933 99.5307 99.8017
H-23	99.4221942608173	if ( perm . get ( j ) < 0 ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 99.7056 94.1708 99.8987 99.5925 99.786
H-23	99.38649338942308	if ( perm . get ( j ) != 0 ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 97.151 96.1096 99.887 99.7383 99.8036
H-23	99.37708458533653	if ( perm . get ( j ) < 1 ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 99.7056 93.6147 99.9169 99.5302 99.7999
H-23	99.37244591346153	if ( perm . get ( i ) < 0 ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 99.9109 99.725 94.2876 99.9147 99.5626 99.795
H-23	99.37210787259616	if ( perm . get ( i ) < $NUMBER$ ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 99.9109 99.725 94.3023 99.9436 99.4963 99.8135
H-23	99.33077298677884	if ( perm . get ( i ) != 0 ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 98.8291 99.9109 97.1014 96.2039 99.897 99.7269 99.8142
H-23	99.33063213641827	if ( perm . get ( j ) != $NUMBER$ ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 97.151 95.4109 99.9095 99.6707 99.8212
H-23	99.32562725360577	if ( perm . get ( j ) < j ) {
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 99.7056 92.9387 99.8793 99.6142 99.7606
H-23	99.2609151204427	if ( j < perm . get ( i ) )
P-23	99.9991 93.9549 99.065 99.7961 99.9945 99.9949 99.9914 99.3791 99.8875 99.8987 99.2048
H-23	99.2511698404948	if ( perm . get ( j ) < $NUMBER$ )
P-23	99.9991 99.874 99.9948 99.995 99.9888 99.5495 99.9688 99.7056 94.229 99.933 97.8117
S-24	for ( int c = 0 ; c < r ; c ++ ) {
T-24	for ( int c = 0 ; c < r + 1 ; c ++ ) {
H-24	99.90867614746094	for ( int c = 0 ; c < r ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 99.6613 99.9782 99.6711 99.984 99.9997 99.9726 99.9337
H-24	99.73690941220238	int r = 0 ; for ( int c = 0 ; c < r ; c ++ ) {
P-24	97.9277 99.9237 99.3986 99.9842 99.2745 99.9891 99.9447 99.5437 99.9854 99.9664 99.9896 99.7682 99.9856 99.6609 99.9869 99.6408 99.9835 99.9998 99.9818 102.8644
H-24	99.7197033110119	int c = 0 ; for ( int c = 0 ; c < r ; c ++ ) {
P-24	97.582 99.973 99.2895 99.9844 99.1877 99.9895 99.9331 99.5628 99.9836 99.9659 99.9908 99.8222 99.9863 99.6628 99.9824 99.7086 99.982 99.9998 99.9788 102.8728
H-24	99.71082124255952	synchronized ( this ) { for ( int c = 0 ; c < r ; c ++ ) {
P-24	99.9982 99.1361 99.9957 99.9985 99.2529 99.9934 99.9559 99.8615 99.9936 99.9676 99.991 99.7986 99.9829 99.7675 99.9875 99.827 99.9838 99.9999 99.9843 102.8629
H-24	99.70964050292969	for ( int c = 0 ; c < 0 ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 96.4924 99.9818 99.659 99.981 99.9997 99.9741 99.9283
H-24	99.69939313616071	int r = r ; for ( int c = 0 ; c < r ; c ++ ) {
P-24	97.9277 99.9237 98.8479 99.7119 99.4499 99.9903 99.924 99.5904 99.9842 99.9578 99.989 99.7315 99.9854 99.5436 99.9832 99.6185 99.9827 99.9998 99.9816 102.8888
H-24	99.69845145089286	int c = r ; for ( int c = 0 ; c < r ; c ++ ) {
P-24	97.582 99.973 98.9138 99.8083 99.4316 99.9914 99.9183 99.5871 99.9831 99.944 99.99 99.7987 99.9858 99.5413 99.9823 99.7062 99.9824 99.9998 99.9793 102.8934
H-24	99.67222377232143	int n = 0 ; for ( int c = 0 ; c < r ; c ++ ) {
P-24	96.9027 99.9487 99.088 99.9848 99.2699 99.9896 99.9391 99.5505 99.9866 99.9643 99.9903 99.7633 99.985 99.6402 99.9845 99.6191 99.9839 99.9998 99.9809 102.8697
H-24	99.67115020751953	for ( int c = 1 ; c < r ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 96.1872 99.9935 99.805 99.9794 99.5904 99.9787 99.6812 99.987 99.9997 99.9756 99.9256
H-24	99.66789899553571	int n = r ; for ( int c = 0 ; c < r ; c ++ ) {
P-24	96.9027 99.9487 99.0956 99.8574 99.5025 99.9917 99.9321 99.5762 99.986 99.948 99.9894 99.7376 99.9845 99.4588 99.9824 99.602 99.9835 99.9998 99.9814 102.8896
H-24	99.66574096679688	for ( int c = 0 ; c < n ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 95.8102 99.9848 99.6193 99.9859 99.9997 99.9785 99.935
H-24	99.6627197265625	for ( int c = 0 ; c < $NUMBER$ ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 95.7858 99.979 99.6118 99.9839 99.9997 99.9758 99.9294
H-24	99.66168212890625	for ( int c = 0 ; c < 1 ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 95.7483 99.9797 99.6365 99.9821 99.9997 99.9732 99.9292
H-24	99.66141183035714	int size = r ; for ( int c = 0 ; c < r ; c ++ ) {
P-24	96.5007 99.9583 99.5192 99.7796 99.5428 99.9932 99.9057 99.5496 99.9882 99.9542 99.9905 99.746 99.9862 99.3663 99.9797 99.6114 99.9865 99.9998 99.9756 102.8804
H-24	99.65966033935547	for ( int c = 0 ; c < c ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 95.7104 99.9828 99.6305 99.9844 99.9998 99.9757 99.9329
H-24	99.64250183105469	for ( int c = 0 ; c < r ; c -- ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 99.6613 99.9782 99.6711 95.7166 99.9996 99.9736 99.9416
H-24	99.63890838623047	for ( int c = 0 ; c < max ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 95.3429 99.9844 99.6592 99.9865 99.9997 99.9684 99.9434
H-24	99.63779296875	for ( int c = 0 ; c < r ; c ++ )
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 99.6613 99.9782 99.6711 99.984 99.9997 95.9343
H-24	99.62425994873047	for ( int c = r ; c < r ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 95.5904 99.9659 99.8157 99.9624 99.4498 99.981 99.7023 99.9875 99.9998 99.9744 99.9242
H-24	99.61915225074405	for ( int c = 0 ; c < r ; c ++ ) { c = r ; }
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 99.6613 99.9782 99.6711 99.984 99.9997 99.9726 94.5731 99.8982 98.6548 99.0778 99.242 101.9512
H-24	99.61812591552734	for ( int c = 0 ; c < size ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 95.0429 99.9841 99.6373 99.9829 99.9998 99.9765 99.9284
H-24	99.61437406994048	for ( int c = 0 ; c < r ; c ++ ) { if ( r ; }
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 99.6613 99.9782 99.6711 99.984 99.9997 99.9726 95.8421 99.9873 98.2556 97.4452 99.1735 102.593
H-24	99.61399332682292	for ( int c = 0 ; c < r - 1 ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 99.6613 95.0435 99.596 99.9611 99.6281 99.9957 99.9998 99.9166 99.9117
H-24	99.6127700805664	for ( int c = 0 ; c <= r ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 95.4276 99.4714 99.9725 99.6891 99.9807 99.9996 99.9729 99.9329
H-24	99.60270421645221	for ( final int c = 0 ; c < r ; c ++ ) {
P-24	99.9989 94.5548 99.8987 99.871 99.9838 99.9474 99.994 99.8016 99.9558 99.6807 99.9857 99.796 99.9857 99.9998 99.9813 99.95
H-24	99.59049479166667	for ( int c = 0 ; c < r ; c ++ ) { c += r ; }
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 99.6613 99.9782 99.6711 99.984 99.9997 99.9726 94.5731 97.092 99.577 99.911 99.7941 101.8483
H-24	99.58473714192708	for ( int c = 0 ; c < r + 1 ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 99.6613 94.9883 99.1286 99.9266 99.6595 99.9947 99.9998 99.9127 99.9158
H-24	99.58097330729167	for ( int c = 0 ; c < r ; c ++ ) { if ( c ; }
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 99.6613 99.9782 99.6711 99.984 99.9997 99.9726 95.8421 99.9873 98.5621 96.8079 98.857 102.5388
H-24	99.58021545410156	for ( int c = $NUMBER$ ; c < r ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 94.7095 99.99 99.8185 99.9791 99.584 99.9802 99.7006 99.9892 99.9997 99.977 99.9207
H-24	99.58011881510417	/ * for ( int c = 0 ; c < r ; c ++ ) {
P-24	99.8585 98.744 99.9728 99.9468 99.9071 99.9866 99.972 99.9953 99.8576 99.9708 99.6997 99.9888 99.782 99.9881 99.9998 99.9759 99.9338
H-24	99.57753619025735	} for ( int c = 0 ; c < r ; c ++ ) {
P-24	99.3489 99.998 99.9316 99.858 99.9937 99.972 99.996 99.7538 99.9733 99.6171 99.9833 99.6941 99.9872 99.9998 99.978 99.9584
H-24	99.57550811767578	for ( int r = 0 ; c < r ; c ++ ) {
P-24	99.9989 99.9463 94.4005 99.9882 99.9479 99.9902 99.8153 99.9715 99.6831 99.9808 99.721 99.9857 99.9997 99.9773 99.9407
H-24	99.5723648071289	for ( int c = 0 ; c < start ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 94.2773 99.9674 99.6865 99.9816 99.9997 99.9755 99.9318
H-24	99.57132393973214	for ( int c = 0 ; c < r ; c ++ ) { c = c ; }
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 99.6613 99.9782 99.6711 99.984 99.9997 99.9726 94.5731 99.8982 97.1558 99.5045 99.2212 102.0399
H-24	99.57107543945312	for ( int c = 0 ; c < min ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 94.2897 99.9153 99.7114 99.9833 99.9997 99.9633 99.9364
H-24	99.57038879394531	for ( int c = 0 ; c < first ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 94.8407 99.3106 99.7729 99.9643 99.9997 99.9662 99.9337
H-24	99.56909942626953	for ( int c = 0 ; r < r ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 94.3805 99.9747 99.6546 99.9721 99.6549 99.9821 99.9998 99.9703 99.9357
H-24	99.56407165527344	for ( int c = 0 ; c < length ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 94.1873 99.9882 99.614 99.9847 99.9997 99.9768 99.9362
H-24	99.56019592285156	for ( int c = 0 ; n < r ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 94.2142 99.9764 99.7162 99.9771 99.6138 99.9837 99.9997 99.9674 99.9336
H-24	99.55964211856617	for ( int c = 0 ; c < r ; c ++ ) { {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 99.6613 99.9782 99.6711 99.984 99.9997 99.9726 94.1863 99.7224
H-24	99.55867084703948	/ * * for ( int c = 0 ; c < r ; c ++ ) {
P-24	99.8585 99.0922 98.8378 99.9755 99.8994 99.9341 99.9888 99.9711 99.9938 99.8375 99.9761 99.7138 99.9861 99.7915 99.9877 99.9998 99.9774 99.931
H-24	99.55482482910156	for ( int c = 0 ; c < r ; n ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 99.6613 99.9782 94.0026 99.9863 99.9997 99.9763 99.9346
H-24	99.55465698242188	for ( int c = 0 ; c >= 0 ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 94.8722 99.5545 99.9502 99.4858 99.7854 99.9997 99.9657 99.9035
H-24	99.55243210565476	for ( int c = 0 ; c < r ; c ++ ) { c = 0 ; }
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 99.6613 99.9782 99.6711 99.984 99.9997 99.9726 94.5731 99.8982 96.6301 99.9786 99.3241 101.592
H-24	99.54761352539063	for ( int c = 0 ; c < r && c < r ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 99.6613 93.4389 99.4039 99.7947 99.662 99.906 99.849 99.9899 99.9997 99.9727 99.936
H-24	99.5421142578125	if ( r ; for ( int c = 0 ; c < r ; c ++ ) {
P-24	99.998 99.2852 97.4813 98.7129 99.991 99.9111 99.8733 99.9787 99.9665 99.9903 99.6995 99.9779 99.6404 99.9827 99.6681 99.9858 99.9998 99.9747 99.9179
H-24	99.53072102864583	for ( int c = 0 ; c < r + r ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 99.6613 94.9883 98.273 99.7431 99.7307 99.9929 99.9998 99.897 99.9289
H-24	99.52988688151042	for ( int c = 0 ; c < r - 0 ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 99.6613 95.0435 98.0539 99.9691 99.6478 99.995 99.9998 99.9176 99.9117
H-24	99.52904595269098	for ( int c = 0 ; c < r + 0 ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 99.6613 94.9883 98.1041 99.9377 99.6697 99.9939 99.9998 99.9154 99.9146
H-24	99.52851698133681	for ( int c = 0 ; c < row . length ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 93.895 99.731 99.3434 99.9423 99.5528 99.9957 99.9998 99.9397 99.7755
H-24	99.52736206054688	for ( int c = 0 ; c < row . size ( ) ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 93.895 99.731 98.563 99.9919 99.9997 99.9227 99.7392 99.9941 99.9998 99.982 99.3906
H-24	99.52522108289931	for ( int c = 0 ; c < r + $NUMBER$ ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 99.6613 94.9883 98.0646 99.9195 99.6553 99.9948 99.9998 99.916 99.9164
H-24	99.52472686767578	for ( int c = 0 ; c < r ; length ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 99.6613 99.9782 93.5223 99.9912 99.9995 99.981 99.9238
H-24	99.51494683159723	for ( Iterator < int c = r ; c < r ; c ++ ) {
P-24	99.9989 95.9418 99.6542 99.0235 98.5549 99.9529 99.8188 99.9339 99.7633 99.7329 99.4295 99.9666 99.7992 99.9883 99.9998 99.9823 99.8674
H-24	99.51485866970486	for ( int c = 0 ; c < r - $NUMBER$ ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 99.6613 95.0435 97.8129 99.9593 99.6244 99.9957 99.9998 99.9205 99.9119
H-24	99.50930786132812	for ( int c = 0 ; c < list . size ( ) ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 93.3713 99.8321 98.757 99.9938 99.9996 99.8841 99.7481 99.993 99.9998 99.9829 99.2865
H-24	99.50757446289063	if ( c ; for ( int c = 0 ; c < r ; c ++ ) {
P-24	99.998 98.2893 97.6959 98.7977 99.9908 99.8955 99.8873 99.979 99.964 99.9907 99.7061 99.979 99.6307 99.9812 99.6853 99.9847 99.9998 99.9748 99.9145
H-24	99.50686645507812	for ( int c = 0 ; c < r ; c ++ ) ;
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 99.6613 99.9782 99.6711 99.984 99.9997 93.494 99.9833
H-24	99.50113254123264	for ( int c = 0 ; c < list . length ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 93.3713 99.8321 99.3781 99.9382 99.5159 99.9938 99.9998 99.9403 99.7129
H-24	99.4973503561581	for ( int c = 0 ; c < r ; c ++ ) { }
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 99.6613 99.9782 99.6711 99.984 99.9997 99.9726 92.9382 99.9118
H-24	99.49703979492188	for ( int c = 1 ; c < 0 ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 96.1872 99.9935 99.805 99.9794 96.8318 99.9841 99.6574 99.9848 99.9997 99.9769 99.9179
H-24	99.48934173583984	for ( int c = 0 ; c < r ; 1 ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 99.6613 99.9782 93.2184 99.9922 99.7967 99.9778 99.8666
H-24	99.48900649126838	for ( int c = - 1 ; c < r ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 93.2317 99.7689 99.9883 99.6436 99.7716 99.63 99.9712 99.7752 99.9793 99.9997 99.9829 99.9357
H-24	99.48885091145833	for ( int c = 0 - 1 ; c < r ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 93.0378 99.6052 99.9346 99.7425 99.8673 99.4217 99.973 99.7265 99.9836 99.9997 99.9777 99.9418
H-24	99.48761345358456	for ( int c = 0 ; c < - 1 ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 92.8464 99.645 99.9605 99.6831 99.982 99.9998 99.9711 99.8633
H-24	99.48711480034723	else { for ( int c = 0 ; c < r ; c ++ ) {
P-24	99.4447 99.1482 99.9938 99.9544 99.9305 99.9954 99.9667 99.9963 99.8104 99.9854 99.6774 99.9834 99.7047 99.9809 99.9999 99.9742 99.8773
H-24	99.48316955566406	for ( int n = 0 ; c < r ; c ++ ) {
P-24	99.9989 99.9463 93.1872 99.9874 99.9426 99.9916 99.7375 99.9658 99.6861 99.9785 99.564 99.9844 99.9997 99.9681 99.9316
H-24	99.48249162946429	for ( int c = 0 ; c < r ; c ++ ) { int c = r ;
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 99.6613 99.9782 99.6711 99.984 99.9997 99.9726 94.4948 98.2535 99.9026 99.0893 99.4798 99.3069
H-24	99.48188018798828	for ( int c = 0 ; c >= 1 ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 94.8722 98.3596 99.9465 99.4806 99.8241 99.9997 99.9649 99.9049
H-24	99.48180389404297	for ( int c = 0 ; c < last ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 93.0829 99.6249 99.7838 99.9771 99.9997 99.9637 99.9386
H-24	99.47988746279762	for ( Iterator < String > c = r ; c . has CaMeL Next ( ) ; ) {
P-24	99.9989 95.9418 99.6542 98.4394 99.9801 99.7705 99.9617 99.7849 99.5467 99.8884 99.7861 99.4192 99.9865 99.1107 99.9853 99.9994 99.9627 99.9004 99.9793 98.1205
H-24	99.47981262207031	for ( int c += 0 ; c < r ; c ++ ) {
P-24	99.9989 99.9463 99.8346 93.4313 99.6194 99.9945 99.8231 99.92 99.6474 99.9766 99.7547 99.9757 99.9996 99.9646 99.9294
H-24	99.47453308105469	for ( int c = 0 ; c < r ; $NUMBER$ ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 99.6613 99.9782 92.8539 99.9908 99.9139 99.98 99.8763
H-24	99.47447967529297	for ( int c = 0 ; c <= 0 ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 95.4276 97.3048 99.9768 99.6481 99.9764 99.9996 99.9742 99.9268
H-24	99.46092224121094	for ( int c = 0 ; c < r ; -- c ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 99.6613 99.9782 92.8926 99.6206 99.9982 99.9598 99.9258
H-24	99.46006146599265	for ( int c = 0 ; c < r ; c ++ ) continue ;
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 99.6613 99.9782 99.6711 99.984 99.9997 92.5329 99.7529 99.9026
H-24	99.45985412597656	for ( int c = r ; c < 0 ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 95.5904 99.9659 99.8157 99.9624 96.8612 99.982 99.6695 99.9842 99.9998 99.9767 99.9152
H-24	99.45855353860294	/ for ( int c = 0 ; c < r ; c ++ ) {
P-24	97.0107 99.9717 99.9497 99.9075 99.9913 99.9718 99.9968 99.8158 99.9665 99.686 99.9866 99.7737 99.9873 99.9998 99.9759 99.9416
H-24	99.45854187011719	for ( int c = 0 ; c < r ; ++ c ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 99.6613 99.9782 93.0494 99.435 99.9992 99.9534 99.922
H-24	99.45590209960938	for ( int c = 0 ; c >= 0 ; c -- ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 94.8722 99.5545 99.9502 99.4858 98.1964 99.9996 99.9655 99.9125
H-24	99.4549789428711	for ( int c = 1 ; c < 1 ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 96.1872 99.9935 99.805 99.9794 96.189 99.9826 99.6282 99.9853 99.9997 99.9764 99.9184
H-24	99.4542236328125	for ( int c = 0 ; c < 0 ; c -- ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 96.4924 99.9818 99.659 95.8853 99.9997 99.9744 99.937
H-24	99.45408630371094	for ( int c = r ; c < c ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 95.5904 99.9659 99.8157 99.9624 96.763 99.9812 99.6667 99.9876 99.9998 99.9774 99.9205
H-24	99.45343017578125	for ( Integer c = 0 ; c < r ; c ++ ) {
P-24	99.9989 93.6916 99.7749 99.3499 99.6908 99.9953 99.7895 99.9496 99.5032 99.9827 99.7915 99.9879 99.9997 99.9707 99.9176
H-24	99.44943237304688	for ( int c = 1 ; c < n ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 96.1872 99.9935 99.805 99.9794 96.0847 99.9852 99.6271 99.9884 99.9997 99.9806 99.9251
H-24	99.44596099853516	for ( int c = 0 ; c < r ; r ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 99.6613 99.9782 92.2685 99.9861 99.9996 99.9714 99.932
H-24	99.44537353515625	for ( int c = 1 ; c < $NUMBER$ ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 96.1872 99.9935 99.805 99.9794 96.0603 99.9821 99.6003 99.9867 99.9997 99.9783 99.9185
H-24	99.44501091452206	for ( int c = 0 ; c < r ; c ++ ) break ;
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 99.6613 99.9782 99.6711 99.984 99.9997 92.1611 99.8677 99.9037
H-24	99.44358915441177	for ( int c = 0 ; c < r - 1 ; c ++ )
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 99.6613 95.0435 99.596 99.9611 99.6281 99.9957 99.9998 97.3175
H-24	99.44205474853516	for ( int c = 1 ; c < c ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 96.1872 99.9935 99.805 99.9794 95.9666 99.984 99.6329 99.9873 99.9997 99.9785 99.9239
H-24	99.43743133544922	for ( int c = 0 ; c < row ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 93.895 98.2401 99.6552 99.987 99.9997 99.9672 99.9165
H-24	99.43643951416016	for ( int c = 0 ; c < r ; start ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 99.6613 99.9782 92.1096 99.9928 99.9979 99.9814 99.9236
H-24	99.435888671875	for ( int c = 0 ; c < r ; c ++ ) { c = r ;
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 99.6613 99.9782 99.6711 99.984 99.9997 99.9726 94.5731 99.8982 98.6548 99.0778 97.9087
H-24	99.43478393554688	for ( int c = r ; c < n ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 95.5904 99.9659 99.8157 99.9624 96.4449 99.9853 99.666 99.9887 99.9998 99.9794 99.9231
H-24	99.42157389322917	for ( int c = 0 ; c < 0 ; c ++ )
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 96.4924 99.9818 99.659 99.981 99.9997 95.8716
H-24	99.41423483455883	for ( int c = 0 ; c < r + 1 ; c ++ )
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 99.6613 94.9883 99.1286 99.9266 99.6595 99.9947 99.9998 97.3452
H-24	99.41324869791667	for ( int c = 0 ; c < r ; c ++ ) { ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 99.6613 99.9782 99.6711 99.984 99.9997 99.9726 91.4442 99.6141 99.7751
H-24	99.4112548828125	for ( int c = 0 ; c < r ; c ++ ) { try {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 99.6613 99.9782 99.6711 99.984 99.9997 99.9726 91.4128 99.9471 99.4376
H-24	99.26978556315105	for ( int c = 0 ; c < ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 99.9806 92.2497 99.7866 99.8629
H-24	99.26211547851562	for ( int c = 0 ; c ++ ) {
P-24	99.9989 99.9463 99.8346 99.9941 99.953 99.9931 99.7766 91.9536 99.9971 99.9744 99.8627
S-25	if ( total < 0 ) {
T-25	if ( total < 0 || coins . length == 0 ) {
H-25	99.77281188964844	if ( total < 0 ) {
P-25	99.9943 99.7431 99.6296 99.8743 99.778 99.8694 99.5601
H-25	99.6160419170673	} if ( total < 0 || total < 0 ) {
P-25	99.6219 99.9933 99.7421 99.8088 99.9062 97.5609 99.2191 99.2931 99.8697 99.8689 99.9005 102.6469
H-25	99.59724426269531	if ( total == 0 ) {
P-25	99.9943 99.7431 98.2331 99.9222 99.7011 99.8525 99.5979
H-25	99.58988131009616	if ( total < 0 ) { return 0 ; } else
P-25	99.9943 99.7431 99.6296 99.8743 99.778 99.8694 97.7928 99.5186 99.5492 99.901 99.2797 100.0046
H-25	99.57574932391827	} if ( total < 0 && total < 0 ) {
P-25	99.6219 99.9933 99.7421 99.8088 99.9062 97.3465 99.1296 99.2154 99.7972 99.8333 99.8877 102.6257
H-25	99.57023790147569	} if ( total < 0 ) {
P-25	99.6219 99.9933 99.7421 99.8088 99.9062 99.805 99.9089 99.7687
H-25	99.56117600661058	else { if ( total < 0 ) { return 0 {
P-25	99.8128 99.8549 99.9944 99.8432 99.7425 99.9104 99.8627 99.852 98.4336 99.5014 98.7821 101.5434
H-25	99.5358135516827	else { if ( total < 0 ) { } else {
P-25	99.8128 99.8549 99.9944 99.8432 99.7425 99.9104 99.8627 99.852 96.3914 99.7157 99.5131 102.3107
H-25	99.52949829101563	else { if ( total < 0 ) {
P-25	99.8128 99.8549 99.9944 99.8432 99.7425 99.9104 99.8627 99.852 99.2602
H-25	99.52247971754808	synchronized ( this ) { if ( total < 0 ) {
P-25	99.9964 98.9641 99.9937 99.9978 99.9042 99.9939 99.5638 99.4742 99.8691 99.8776 99.7901 102.1174
H-25	99.51426188151042	if ( total < 0 || total < 0 ) {
P-25	99.9943 99.7431 99.6296 99.8743 97.7214 99.0542 99.3748 99.8683 99.8687 99.8676 99.4411
H-25	99.48958646334134	if ( total == 0 ) { return 0 ; } else
P-25	99.9943 99.7431 98.2331 99.9222 99.7011 99.8525 98.0048 99.5391 99.5714 99.8884 99.3718 99.8091
H-25	99.48288198617789	int total = 0 ; if ( total < 0 ) {
P-25	98.4391 99.6602 99.5519 99.8176 99.5642 99.98 99.4745 99.5643 99.8594 99.8852 99.7773 101.508
H-25	99.48121995192308	else { if ( total < 0 ) { return ) {
P-25	99.8128 99.8549 99.9944 99.8432 99.7425 99.9104 99.8627 99.852 98.4336 97.6325 98.8931 102.2618
H-25	99.4713134765625	if ( total < 0 && total < 0 ) {
P-25	99.9943 99.7431 99.6296 99.8743 97.4799 98.9781 99.3038 99.7996 99.8322 99.8445 99.4426
H-25	99.46505972055289	if ( total < 0 ) { total = 0 ; }
P-25	99.9943 99.7431 99.6296 99.8743 99.778 99.8694 95.5612 99.4283 99.7561 99.4835 99.684 100.5104
H-25	99.45749136117789	if ( total < 0 ) { return 1 ; } else
P-25	99.9943 99.7431 99.6296 99.8743 99.778 99.8694 97.7928 97.7669 99.6546 99.8777 99.3439 99.8892
H-25	99.45737868088942	if ( total < 0 ) { break ; } else {
P-25	99.9943 99.7431 99.6296 99.8743 99.778 99.8694 95.1602 99.2975 99.807 99.1482 99.0602 101.8504
H-25	99.44846754807692	else { if ( total < 0 ) return 0 ; else
P-25	99.8128 99.8549 99.9944 99.8432 99.7425 99.9104 99.8627 97.1213 99.5154 99.5728 98.6136 101.8241
H-25	99.44712611607143	if ( total < 0 )
P-25	99.9943 99.7431 99.6296 99.8743 99.778 97.3769
H-25	99.4447772686298	else { if ( total == 0 ) { return 0 {
P-25	99.8128 99.8549 99.9944 99.8432 97.9512 99.9497 99.8156 99.8531 98.5614 99.5201 98.7538 101.7102
H-25	99.43016052246094	if ( total != 0 ) {
P-25	99.9943 99.7431 96.8882 99.9083 99.7081 99.8992 99.5663
H-25	99.42971567007211	if ( total < 0 ) { return 0 { } else
P-25	99.9943 99.7431 99.6296 99.8743 99.778 99.8694 97.7928 99.5186 98.7532 98.3488 99.1453 100.4053
H-25	99.42859825721153	else { if ( total < 0 ) { return 1 {
P-25	99.8128 99.8549 99.9944 99.8432 99.7425 99.9104 99.8627 99.852 98.4336 97.9481 98.6291 101.5261
H-25	99.41714242788461	if ( total < 0 ) { return ) ; } else
P-25	99.9943 99.7431 99.6296 99.8743 99.778 99.8694 97.7928 97.6274 99.555 99.7393 99.2978 99.7881
H-25	99.41466267903645	if ( total == 0 || total < 0 ) {
P-25	99.9943 99.7431 98.2331 99.9222 98.0296 99.0284 99.3053 99.8722 99.856 99.8578 99.4003
H-25	99.41337585449219	if ( total > 0 ) {
P-25	99.9943 99.7431 96.7379 99.8625 99.7687 99.8908 99.5761
H-25	99.41274192116477	if ( total < 0 ) { return 0 {
P-25	99.9943 99.7431 99.6296 99.8743 99.778 99.8694 97.7928 99.5186 98.7532 98.8531
H-25	99.40671793619792	if ( total < 0 || total <= 0 ) {
P-25	99.9943 99.7431 99.6296 99.8743 97.7214 99.0542 98.1123 99.8792 99.8551 99.8584 99.4249
H-25	99.38681030273438	if ( total < 0 || total > 0 ) {
P-25	99.9943 99.7431 99.6296 99.8743 97.7214 99.0542 97.8559 99.818 99.8715 99.8664 99.4793
H-25	99.38104248046875	if ( total < 0 && total <= 0 ) {
P-25	99.9943 99.7431 99.6296 99.8743 97.4799 98.9781 98.2391 99.8498 99.8083 99.831 99.4113
H-25	99.37649536132812	} else if ( total < 0 ) {
P-25	97.4839 99.5218 99.9957 99.8248 99.8722 99.9145 99.8898 99.9429 99.7421
H-25	99.3645731608073	if ( total < 0 && total > 0 ) {
P-25	99.9943 99.7431 99.6296 99.8743 97.4799 98.9781 97.9158 99.8677 99.8543 99.8607 99.4433
H-25	99.3624776204427	if ( total < 0 ) { return 0 ; }
P-25	99.9943 99.7431 99.6296 99.8743 99.778 99.8694 97.7928 99.5186 99.5492 99.901 96.9657
H-25	99.35683186848958	if ( total == 0 && total < 0 ) {
P-25	99.9943 99.7431 98.2331 99.9222 97.7077 98.8972 99.1682 99.8266 99.8441 99.8202 99.3917
H-25	99.35525512695312	if ( total < 0 || total == 0 ) {
P-25	99.9943 99.7431 99.6296 99.8743 97.7214 99.0542 97.4781 99.8998 99.8561 99.8732 99.4051
H-25	99.355029296875	else { if ( total == 0 ) {
P-25	99.8128 99.8549 99.9944 99.8432 97.9512 99.9497 99.8156 99.8531 99.3136
H-25	99.33676979758523	} ) { if ( total < 0 ) {
P-25	97.4399 99.4417 99.6824 99.9915 99.7689 99.7275 99.918 99.8941 99.8331 99.4299
H-25	99.33549669053819	else if ( total < 0 ) {
P-25	98.0975 99.9967 99.7183 99.8236 99.8724 99.7905 99.9208 99.6379
H-25	99.33298561789773	if ( total < 0 ) { return 0 ;
P-25	99.9943 99.7431 99.6296 99.8743 99.778 99.8694 97.7928 99.5186 99.5492 97.1798
H-25	99.33107503255208	if ( total < 0 && total == 0 ) {
P-25	99.9943 99.7431 99.6296 99.8743 97.4799 98.9781 97.6255 99.8973 99.8007 99.8415 99.3747
H-25	99.32867431640625	if ( total == 0 || total == 0 ) {
P-25	99.9943 99.7431 98.2331 99.9222 98.0296 99.0284 98.2538 99.905 99.8358 99.869 99.3962
H-25	99.3271484375	if ( total < $NUMBER$ ) {
P-25	99.9943 99.7431 99.6296 96.2468 99.8681 99.8619 99.5396
H-25	99.32207573784723	if ( total < 0 ) { {
P-25	99.9943 99.7431 99.6296 99.8743 99.778 99.8694 95.6858 99.5904
H-25	99.32045491536458	if ( total < 0 || total >= 0 ) {
P-25	99.9943 99.7431 99.6296 99.8743 97.7214 99.0542 97.2847 99.6463 99.8493 99.8771 99.4374
H-25	99.31975763494319	if ( total == 0 ) { return 0 {
P-25	99.9943 99.7431 98.2331 99.9222 99.7011 99.8525 98.0048 99.5391 98.7219 99.0715
H-25	99.31908501519098	} if ( total == 0 ) {
P-25	99.6219 99.9933 99.7421 97.5685 99.9244 99.747 99.902 99.7951
H-25	99.31427556818181	if ( total < 0 ) { } else {
P-25	99.9943 99.7431 99.6296 99.8743 99.778 99.8694 95.5596 99.2906 99.5373 99.4471
H-25	99.31166585286458	if ( total == 0 || total <= 0 ) {
P-25	99.9943 99.7431 98.2331 99.9222 98.0296 99.0284 98.0635 99.8879 99.8429 99.8508 99.4105
H-25	99.30695134943181	} else { if ( total < 0 ) {
P-25	97.4839 98.9004 99.549 99.9915 99.8392 99.8413 99.9178 99.9078 99.8692 99.499
H-25	99.30551979758523	if ( total < 0 ) { return ) {
P-25	99.9943 99.7431 99.6296 99.8743 99.778 99.8694 97.7928 97.6274 98.7919 99.5261
H-25	99.30403900146484	if ( total >= 0 ) {
P-25	99.9943 99.7431 95.9877 99.8422 99.7434 99.9019 99.486
H-25	99.30242156982422	if ( total <= 0 ) {
P-25	99.9943 99.7431 95.8739 99.9047 99.739 99.8552 99.5754
H-25	99.3021240234375	if ( total > 0 || total < 0 ) {
P-25	99.9943 99.7431 96.7379 99.8625 97.7806 99.1017 99.5144 99.8849 99.8851 99.8467 99.5405
H-25	99.29886881510417	if ( total == 0 && total == 0 ) {
P-25	99.9943 99.7431 98.2331 99.9222 97.7077 98.8972 98.4451 99.9056 99.7947 99.8291 99.3806
H-25	99.29822998046875	/ * if ( total < 0 ) {
P-25	99.7089 98.9276 99.9153 99.8563 99.6451 99.8729 99.8921 99.8759 99.3513
H-25	99.2946268717448	if ( total != 0 || total < 0 ) {
P-25	99.9943 99.7431 96.8882 99.9083 97.9997 99.0268 99.1888 99.8566 99.8434 99.8552 99.4972
H-25	99.29439290364583	if ( total < 0 && total >= 0 ) {
P-25	99.9943 99.7431 99.6296 99.8743 97.4799 98.9781 97.2031 99.7882 99.8336 99.8684 99.4063
H-25	99.28778076171875	if ( total < 0 ) return 0 {
P-25	99.9943 99.7431 99.6296 99.8743 99.778 96.7888 99.5673 98.719 99.0497
H-25	99.28172810872395	} if ( total < 0 ) { return 0 ;
P-25	99.6219 99.9933 99.7421 99.8088 99.9062 99.805 99.9089 97.223 99.4806 99.577 98.7367
H-25	99.28079223632812	if ( total < 0 || max < 0 ) {
P-25	99.9943 99.7431 99.6296 99.8743 97.7214 96.3135 99.3539 99.8554 99.8739 99.8563 99.4201
H-25	99.27578735351562	if ( total == 0 && total <= 0 ) {
P-25	99.9943 99.7431 98.2331 99.9222 97.7077 98.8972 98.1791 99.8771 99.8161 99.8134 99.3926
H-25	99.27503313337054	if ( total == 0 )
P-25	99.9943 99.7431 98.2331 99.9222 99.7011 97.5978
H-25	99.2738545735677	if ( total > 0 && total < 0 ) {
P-25	99.9943 99.7431 96.7379 99.8625 97.5297 99.1168 99.4765 99.8223 99.8563 99.8331 99.58
H-25	99.26906331380208	else { if ( total < 0 )
P-25	99.8128 99.8549 99.9944 99.8432 99.7425 99.9104 99.8627 97.2388
H-25	99.26842151988636	if ( total < 0 || total < 0 )
P-25	99.9943 99.7431 99.6296 99.8743 97.7214 99.0542 99.3748 99.8683 99.8687 97.0902
H-25	99.26481489701705	if ( total < 0 ) { return ) ;
P-25	99.9943 99.7431 99.6296 99.8743 99.778 99.8694 97.7928 97.6274 99.555 98.3153
H-25	99.26444702148437	if ( ( total < 0 ) ) {
P-25	99.9943 96.426 99.6611 99.7725 99.9232 99.9255 97.9319 99.9022 99.3742
H-25	99.25949435763889	if ( total < - 1 ) {
P-25	99.9943 99.7431 99.6296 95.3696 99.852 99.905 99.9501 99.158
H-25	99.25667572021484	if ( total < total ) {
P-25	99.9943 99.7431 99.6296 95.8336 99.8047 99.7995 99.5149
H-25	99.25402221679687	else { if ( total != 0 ) {
P-25	99.8128 99.8549 99.9944 99.8432 96.7037 99.9425 99.8515 99.9019 99.4737
H-25	99.24641557173295	if ( total < 0 && total < 0 )
P-25	99.9943 99.7431 99.6296 99.8743 97.4799 98.9781 99.3038 99.7996 99.8322 97.3419
H-25	99.22515106201172	if ( total < 1 ) {
P-25	99.9943 99.7431 99.6296 95.4876 99.7946 99.8747 99.5436
H-25	99.21805572509766	if ( 0 < total ) {
P-25	99.9943 96.1483 99.5698 99.0438 99.8106 99.877 99.567
H-25	99.20768737792969	} if ( total < 0 )
P-25	99.6219 99.9933 99.7421 99.8088 99.9062 99.805 97.2069
H-25	99.19492594401042	if ( ! total < 0 ) {
P-25	99.9943 96.1763 98.9974 99.0398 99.7914 99.8674 99.8603 99.2938
H-25	99.19395141601562	if ( total == 0 ) return 0 {
P-25	99.9943 99.7431 98.2331 99.9222 99.7011 96.7398 99.6039 98.7951 99.4733
H-25	99.19081624348958	} if ( total != 0 ) {
P-25	99.6219 99.9933 99.7421 96.4305 99.9011 99.7475 99.9262 99.7774
H-25	99.17771911621094	if ( 0 < 0 ) {
P-25	99.9943 96.1483 99.5698 98.8727 99.5879 99.9185 99.5966
H-25	99.17224799262152	} if ( total > 0 ) {
P-25	99.6219 99.9933 99.7421 96.2087 99.891 99.8023 99.9239 99.7896
H-25	99.14661322699652	if ( total == 0 ) { {
P-25	99.9943 99.7431 98.2331 99.9222 99.7011 99.8525 95.547 99.5925
H-25	99.14344133649554	if ( total < ) {
P-25	99.9943 99.7431 99.6296 95.4979 99.8129 99.5925
H-25	99.13208685980902	if ( total < 0 0 ) {
P-25	99.9943 99.7431 99.6296 99.8743 93.9795 99.6351 99.8915 99.7076
H-25	99.10511779785156	if ( total < null ) {
P-25	99.9943 99.7431 99.6296 94.8611 99.7361 99.8411 99.3018
H-25	99.07628631591797	if ( total == $NUMBER$ ) {
P-25	99.9943 99.7431 98.2331 95.6136 99.812 99.8479 99.6326
H-25	99.03133719308036	if ( total != 0 )
P-25	99.9943 99.7431 96.8882 99.9083 99.7081 97.2435
H-25	99.01663643973214	if ( total > 0 )
P-25	99.9943 99.7431 96.7379 99.8625 99.7687 97.2763
H-25	98.96059744698661	if ( total < $NUMBER$ )
P-25	99.9943 99.7431 99.6296 96.2468 99.8681 97.5085
H-25	98.94532121930804	if ( total < total )
P-25	99.9943 99.7431 99.6296 95.8336 99.8047 97.8782
H-25	98.93386404854911	if ( total == ) {
P-25	99.9943 99.7431 98.2331 95.4034 99.8185 99.611
H-25	98.93265206473214	if ( total <= 0 )
P-25	99.9943 99.7431 95.8739 99.9047 99.739 97.5398
H-25	98.91398111979167	if ( total ) {
P-25	99.9943 99.7431 94.9993 99.8947 99.1187
H-25	98.89525495256696	if ( ! total ) {
P-25	99.9943 96.1763 98.9974 98.0971 99.8382 99.4297
H-25	98.61527099609376	if ( ) {
P-25	99.9943 94.2183 99.8231 99.307
H-25	98.37872924804688	if ( total {
P-25	99.9943 99.7431 93.8318 98.5907
H-25	98.2854232788086	} ) ;
P-25	97.4399 98.5268 99.5977
H-25	98.15330505371094	} else {
P-25	97.4839 98.9004 98.6516
H-25	97.9814453125	} ) {
P-25	97.4399 99.4417 97.4669
H-25	97.94036102294922	} ) )
P-25	97.4399 97.5218 99.2225
H-25	97.91730499267578	if ( )
P-25	99.9943 94.2183 97.723
S-26	} else if ( x > pivot ) {
T-26	} else if ( x >= pivot ) {
H-26	99.63291015625	} else if ( x > pivot ) {
P-26	99.2051 99.7942 99.9995 99.9047 99.6418 99.6261 99.919 99.9638 98.6843
H-26	99.58438720703126	} } if ( x > pivot ) {
P-26	98.2908 99.4561 99.9989 99.6365 99.539 99.681 99.9067 99.9552 99.789
H-26	99.54421164772727	} } else if ( x > pivot ) {
P-26	98.2908 98.5966 99.6677 99.9976 99.8715 99.6552 99.7867 99.9175 99.9499 99.6623
H-26	99.47889404296875	; } if ( x > pivot ) {
P-26	99.2689 99.2381 99.999 99.8343 99.5046 99.6535 99.8843 99.9581 98.8793
H-26	99.47378879123264	} if ( x > pivot ) {
P-26	98.2263 99.9981 99.7656 99.5864 99.6736 99.7832 99.9436 98.6967
H-26	99.4541015625	} else if ( x >= pivot ) {
P-26	99.2051 99.7942 99.9995 99.9047 97.8081 99.736 99.8671 99.9607 98.675
H-26	99.44903009588069	; } else if ( x > pivot ) {
P-26	99.2689 98.794 99.792 99.9992 99.9133 99.6178 99.7185 99.921 99.9533 98.3924
H-26	99.42384847005208	} else if ( x > pivot ) { continue ;
P-26	99.2051 99.7942 99.9995 99.9047 99.6418 99.6261 99.919 99.9638 96.6522 99.5109 99.2784
H-26	99.41587320963542	} else if ( x > pivot ) { break ;
P-26	99.2051 99.7942 99.9995 99.9047 99.6418 99.6261 99.919 99.9638 97.0149 99.5861 98.7446
H-26	99.41305541992188	} else if ( x > pivot ) { break {
P-26	99.2051 99.7942 99.9995 99.9047 99.6418 99.6261 99.919 99.9638 97.0149 98.6541 99.6428
H-26	99.40955200195313	} } if ( x >= pivot ) {
P-26	98.2908 99.4561 99.9989 99.6365 97.7459 99.7741 99.8462 99.9497 99.8068
H-26	99.39644775390624	} } if ( x == pivot ) {
P-26	98.2908 99.4561 99.9989 99.6365 97.5631 99.8423 99.9145 99.9511 99.7205
H-26	99.39040120442708	} else if ( x > pivot ) { continue {
P-26	99.2051 99.7942 99.9995 99.9047 99.6418 99.6261 99.919 99.9638 96.6522 98.655 99.7328
H-26	99.37212579900569	; } } if ( x > pivot ) {
P-26	99.2689 97.4011 99.3642 99.9986 99.6136 99.5302 99.7458 99.9071 99.9467 99.7485
H-26	99.3678866299716	} } else if ( x >= pivot ) {
P-26	98.2908 98.5966 99.6677 99.9976 99.8715 97.7165 99.847 99.8656 99.9473 99.6555
H-26	99.36498413085937	} } if ( pivot > pivot ) {
P-26	98.2908 99.4561 99.9989 98.1073 99.1768 99.476 99.9307 99.9655 99.6571
H-26	99.36442057291667	; } } else if ( x > pivot ) {
P-26	99.2689 97.4011 98.6597 99.6984 99.9964 99.855 99.6611 99.757 99.9084 99.9568 99.6413
H-26	99.35982055664063	} } if ( x != pivot ) {
P-26	98.2908 99.4561 99.9989 99.6365 97.2607 99.6974 99.9084 99.9606 99.7981
H-26	99.3550516764323	} } else { if ( x > pivot ) {
P-26	98.2908 98.5966 98.6197 98.842 99.9949 99.7719 99.7188 99.8411 99.8998 99.9179 99.1765
H-26	99.35477388822116	} else if ( x > pivot ) { break ; }
P-26	99.2051 99.7942 99.9995 99.9047 99.6418 99.6261 99.919 99.9638 97.0149 99.5861 99.4311 97.9351
H-26	99.34271240234375	} else if ( x > pivot ) { } else
P-26	99.2051 99.7942 99.9995 99.9047 99.6418 99.6261 99.919 99.9638 96.1822 99.5418 98.7438
H-26	99.34158935546876	} else if ( x == pivot ) {
P-26	99.2051 99.7942 99.9995 99.9047 96.8813 99.7623 99.9177 99.9642 98.3962
H-26	99.3393085186298	} else if ( x > pivot ) { continue ; }
P-26	99.2051 99.7942 99.9995 99.9047 99.6418 99.6261 99.919 99.9638 96.6522 99.5109 99.0482 98.5549
H-26	99.33253173828125	} else if ( x < pivot ) {
P-26	99.2051 99.7942 99.9995 99.9047 96.8223 99.7079 99.9095 99.9599 98.4315
H-26	99.3303466796875	} } if ( x < pivot ) {
P-26	98.2908 99.4561 99.9989 99.6365 96.9866 99.7754 99.8796 99.9483 99.7405
H-26	99.32886962890625	} } if ( pivot != null ) {
P-26	98.2908 99.4561 99.9989 98.1073 98.5583 99.8662 99.8728 99.98 99.5677
H-26	99.32532610212054	} else if ( x > pivot . size ( ) ) {
P-26	99.2051 99.7942 99.9995 99.9047 99.6418 99.6261 96.1967 98.624 99.9925 99.9987 99.9341 99.9355 98.111
H-26	99.32313121448864	} } else if ( x < pivot ) {
P-26	98.2908 98.5966 99.6677 99.9976 99.8715 97.3255 99.8273 99.903 99.946 99.5378
H-26	99.3189697265625	; } if ( x >= pivot ) {
P-26	99.2689 99.2381 99.999 99.8343 97.8285 99.757 99.8229 99.953 98.9191
H-26	99.3172607421875	} else if ( x > pivot ) { break ; } }
P-26	99.2051 99.7942 99.9995 99.9047 99.6418 99.6261 99.919 99.9638 97.0149 99.5861 99.4311 98.9491 97.8155
H-26	99.31720525568181	} else { if ( x > pivot ) {
P-26	99.2051 98.1204 98.8682 99.9954 99.8541 99.6378 99.8413 99.9233 99.9025 97.5506
H-26	99.3121807391827	} else if ( x > pivot ) { return pivot {
P-26	99.2051 99.7942 99.9995 99.9047 99.6418 99.6261 99.919 99.9638 97.1364 97.9031 99.107 99.2671
H-26	99.31217447916667	} else if ( x > pivot )
P-26	99.2051 99.7942 99.9995 99.9047 99.6418 99.6261 99.919 96.1285
H-26	99.30930786132812	} else if ( x != pivot ) {
P-26	99.2051 99.7942 99.9995 99.9047 96.4154 99.7045 99.9011 99.9665 98.6114
H-26	99.30489408052884	; } else if ( x > pivot ) { continue ;
P-26	99.2689 98.794 99.792 99.9992 99.9133 99.6178 99.7185 99.921 99.9533 96.8284 99.4786 99.1097
H-26	99.30078125	} else if ( x > pivot ) { }
P-26	99.2051 99.7942 99.9995 99.9047 99.6418 99.6261 99.919 99.9638 96.1822 98.4816
H-26	99.29945725661058	} else if ( x > pivot ) { break ; else
P-26	99.2051 99.7942 99.9995 99.9047 99.6418 99.6261 99.919 99.9638 97.0149 99.5861 97.8289 98.8183
H-26	99.29917555588942	; } else if ( x > pivot ) { break {
P-26	99.2689 98.794 99.792 99.9992 99.9133 99.6178 99.7185 99.921 99.9533 97.0268 98.6985 99.617
H-26	99.29702322823661	} else if ( x > pivot || x > pivot ) {
P-26	99.2051 99.7942 99.9995 99.9047 99.6418 99.6261 95.472 99.514 99.2553 99.6097 99.9568 99.9312 98.6573
H-26	99.29508833451705	} } else if ( x == pivot ) {
P-26	98.2908 98.5966 99.6677 99.9976 99.8715 96.9396 99.8684 99.9338 99.952 99.5373
H-26	99.29488699776786	} else if ( x > pivot && x > pivot ) {
P-26	99.2051 99.7942 99.9995 99.9047 99.6418 99.6261 95.8584 99.3608 99.2118 99.6043 99.9552 99.9399 98.436
H-26	99.29425603693181	; } else if ( x >= pivot ) {
P-26	99.2689 98.794 99.792 99.9992 99.9133 97.897 99.8053 99.8736 99.9513 98.3733
H-26	99.29216657366071	} else if ( x >= pivot . size ( ) ) {
P-26	99.2051 99.7942 99.9995 99.9047 97.8081 99.736 97.0989 98.7875 99.9929 99.9985 99.9359 99.9433 98.2952
H-26	99.2897061434659	} } else if ( pivot > pivot ) {
P-26	98.2908 98.5966 99.6677 99.9976 97.3259 99.621 99.6551 99.9647 99.9683 99.5085
H-26	99.28396371694711	; } else if ( x > pivot ) { continue {
P-26	99.2689 98.794 99.792 99.9992 99.9133 99.6178 99.7185 99.921 99.9533 96.8284 98.6312 99.6852
H-26	99.2811279296875	} } if ( x <= pivot ) {
P-26	98.2908 99.4561 99.9989 99.6365 96.4134 99.8055 99.9011 99.949 99.7695
H-26	99.28042602539062	} else if ( x >= pivot ) { continue ;
P-26	99.2051 99.7942 99.9995 99.9047 97.8081 99.736 99.8671 99.9607 96.711 99.4899 99.2983
H-26	99.28006685697116	; } else if ( x > pivot ) { break ;
P-26	99.2689 98.794 99.792 99.9992 99.9133 99.6178 99.7185 99.921 99.9533 97.0268 99.5391 98.5279
H-26	99.27687581380208	} else if ( x > pivot ) { else {
P-26	99.2051 99.7942 99.9995 99.9047 99.6418 99.6261 99.919 99.9638 95.9195 99.5138 98.2443
H-26	99.27410888671875	; } if ( x == pivot ) {
P-26	99.2689 99.2381 99.999 99.8343 97.5811 99.8146 99.8831 99.9547 98.5985
H-26	99.27248709542411	} else if ( x > pivot ) { break ; } else
P-26	99.2051 99.7942 99.9995 99.9047 99.6418 99.6261 99.919 99.9638 97.0149 99.5861 99.4311 99.2137 96.9241
H-26	99.27234564887152	} if ( x < pivot ) {
P-26	98.2263 99.9981 99.7656 97.8477 99.7661 99.7514 99.9374 98.5679
H-26	99.26652018229167	} else if ( x >= pivot ) { break {
P-26	99.2051 99.7942 99.9995 99.9047 97.8081 99.736 99.8671 99.9607 97.007 98.6986 99.6265
H-26	99.26585896809895	} else if ( x >= pivot ) { break ;
P-26	99.2051 99.7942 99.9995 99.9047 97.8081 99.736 99.8671 99.9607 97.007 99.5589 98.7583
H-26	99.2657470703125	} else if ( x <= pivot ) {
P-26	99.2051 99.7942 99.9995 99.9047 96.0528 99.7295 99.9157 99.9611 98.5043
H-26	99.26318359375	} if ( x >= pivot ) {
P-26	98.2263 99.9981 99.7656 97.684 99.7688 99.6628 99.9374 98.735
H-26	99.26151216947116	} if ( x > pivot . size ( ) ) {
P-26	98.2263 99.9981 99.7656 99.5864 99.6736 97.3617 98.5677 99.9902 99.9985 99.8996 99.9293 97.812
H-26	99.26050821940105	} else if ( x + pivot > pivot ) {
P-26	99.2051 99.7942 99.9995 99.9047 96.4762 99.8557 98.6606 99.178 99.9328 99.9643 98.5644
H-26	99.25950404575893	} else if ( x > pivot ) { return pivot ; }
P-26	99.2051 99.7942 99.9995 99.9047 99.6418 99.6261 99.919 99.9638 97.1364 97.9031 99.3711 99.7995 97.7781
H-26	99.2562255859375	} else if ( x > pivot ) { continue ; else
P-26	99.2051 99.7942 99.9995 99.9047 99.6418 99.6261 99.919 99.9638 96.6522 99.5109 97.6952 98.8279
H-26	99.25428466796875	; } if ( x != pivot ) {
P-26	99.2689 99.2381 99.999 99.8343 97.2475 99.7267 99.8641 99.962 98.8333
H-26	99.25215454101563	} else if ( pivot > pivot ) {
P-26	99.2051 99.7942 99.9995 96.3917 99.5926 99.4882 99.9481 99.9772 98.5344
H-26	99.25092022235577	} } else if ( x > pivot ) { else {
P-26	98.2908 98.5966 99.6677 99.9976 99.8715 99.6552 99.7867 99.9175 99.9499 96.1071 99.1593 99.6715
H-26	99.25055401141827	} else if ( x > pivot ) { return x {
P-26	99.2051 99.7942 99.9995 99.9047 99.6418 99.6261 99.919 99.9638 97.1364 96.9365 99.0598 99.4797
H-26	99.25050706129808	} else if ( x > pivot ) { } else {
P-26	99.2051 99.7942 99.9995 99.9047 99.6418 99.6261 99.919 99.9638 96.1822 99.5418 97.8505 99.0372
H-26	99.24959622896634	; } else if ( x > pivot ) { } else
P-26	99.2689 98.794 99.792 99.9992 99.9133 99.6178 99.7185 99.921 99.9533 96.3461 99.5585 98.7933
H-26	99.24708909254808	} if ( x > pivot && x > pivot ) {
P-26	98.2263 99.9981 99.7656 99.5864 99.6736 96.8639 99.3661 99.1271 99.6665 99.9413 99.9137 98.4931
H-26	99.24686686197917	} else if ( x >= pivot ) { continue {
P-26	99.2051 99.7942 99.9995 99.9047 97.8081 99.736 99.8671 99.9607 96.711 98.6702 99.7154
H-26	99.2446797688802	; } if ( x > pivot ) { break {
P-26	99.2689 99.2381 99.999 99.8343 99.5046 99.6535 99.8843 99.9581 96.7713 98.7321 99.5231
H-26	99.24432927911931	} else if ( x > pivot ) { {
P-26	99.2051 99.7942 99.9995 99.9047 99.6418 99.6261 99.919 99.9638 96.1731 97.8697
H-26	99.24397786458333	; } if ( x > pivot ) { continue ;
P-26	99.2689 99.2381 99.999 99.8343 99.5046 99.6535 99.8843 99.9581 96.3414 99.4731 99.2036
H-26	99.23823686079545	} if ( x > pivot ) { continue ;
P-26	98.2263 99.9981 99.7656 99.5864 99.6736 99.7832 99.9436 96.3192 99.5479 99.1861
H-26	99.2362569173177	} } if ( x > pivot ) { else {
P-26	98.2908 99.4561 99.9989 99.6365 99.539 99.681 99.9067 99.9552 95.7929 99.5211 99.4663
H-26	99.2346923828125	} } if ( pivot == null ) {
P-26	98.2908 99.4561 99.9989 98.1073 98.0424 99.7377 99.8869 99.9654 99.2708
H-26	99.23385620117188	; } if ( x > pivot ) { break ;
P-26	99.2689 99.2381 99.999 99.8343 99.5046 99.6535 99.8843 99.9581 96.7713 99.5559 98.5694
H-26	99.23141479492188	} else if ( x + pivot == pivot ) {
P-26	99.2051 99.7942 99.9995 99.9047 96.4762 99.8557 98.0424 99.4613 99.9118 99.9537 98.582
H-26	99.230126953125	; else if ( x > pivot ) {
P-26	98.12 99.5255 99.999 99.8977 99.559 99.5661 99.9286 99.9133 97.2232
H-26	99.23002485795455	} if ( x > pivot ) { break ;
P-26	98.2263 99.9981 99.7656 99.5864 99.6736 99.7832 99.9436 96.7211 99.6162 98.6256
H-26	99.22939046223958	} if ( x > pivot ) { return pivot {
P-26	98.2263 99.9981 99.7656 99.5864 99.6736 99.7832 99.9436 97.493 98.2231 99.2098 99.2594
H-26	99.2154541015625	; } if ( x < pivot ) {
P-26	99.2689 99.2381 99.999 99.8343 97.0092 99.7567 99.8627 99.9516 98.665
H-26	99.213134765625	} if ( x > pivot ) { break {
P-26	98.2263 99.9981 99.7656 99.5864 99.6736 99.7832 99.9436 96.7211 98.5852 99.4708
H-26	99.19957275390625	} else if ( x > pivot ) ;
P-26	99.2051 99.7942 99.9995 99.9047 99.6418 99.6261 99.919 94.476 99.8388
H-26	99.18275756835938	} else if ( x > min ) {
P-26	99.2051 99.7942 99.9995 99.9047 99.6418 95.742 99.6582 99.9776 98.314
H-26	99.17997911241319	} if ( pivot > pivot ) {
P-26	98.2263 99.9981 97.7248 99.3408 99.4964 99.8688 99.9582 98.4158
H-26	99.1671142578125	} if ( x == pivot ) {
P-26	98.2263 99.9981 99.7656 96.9238 99.8044 99.7905 99.9405 98.4643
H-26	99.15945773654514	} } if ( x > pivot )
P-26	98.2908 99.4561 99.9989 99.6365 99.539 99.681 99.9067 96.3354
H-26	99.14812554253473	; if ( x > pivot ) {
P-26	97.9905 99.9946 99.7769 99.4955 99.6603 99.7711 99.8849 97.1904
H-26	99.13701036241319	} while ( x > pivot ) {
P-26	94.8296 99.998 99.7148 99.3272 99.6503 99.6711 99.9105 99.5409
H-26	99.13130696614583	} if ( x <= pivot ) {
P-26	98.2263 99.9981 99.7656 96.447 99.7791 99.7795 99.9371 98.6584
H-26	99.12308078342014	} else if ( x >= pivot )
P-26	99.2051 99.7942 99.9995 99.9047 97.8081 99.736 99.8671 96.2024
H-26	99.11672973632812	} if ( x > pivot )
P-26	98.2263 99.9981 99.7656 99.5864 99.6736 99.7832 96.31
H-26	99.11512586805556	; } if ( x > pivot )
P-26	99.2689 99.2381 99.999 99.8343 99.5046 99.6535 99.8843 96.0846
H-26	98.14051055908203	} else {
P-26	99.2051 98.1204 95.646
H-26	97.53759765625	} }
P-26	98.2908 94.7314
H-26	97.4371337890625	; }
P-26	99.2689 94.4736
H-26	97.3165995279948	} else
P-26	99.2051 93.1541
H-26	96.99298095703125	}
P-26	94.3954
H-26	96.51301574707031	;
P-26	94.4571
H-26	95.45330810546875	else
P-26	94.618
H-26	95.43894958496094	{
P-26	95.8871
S-27	node = nex@@ tnode ;
T-27	prev@@ node = node ; node = nex@@ tnode ;
H-27	99.414306640625	node = nex@@ tnode ; } node = nex@@ tnode ;
P-27	99.994 99.2439 98.1441 99.646 97.0993 98.9713 99.9935 99.441 98.462 99.6914 102.6654
H-27	99.3217022235577	if ( nex@@ tnode != null ) node = nex@@ tnode ;
P-27	99.8197 98.7772 98.8491 98.7755 99.9613 99.3288 98.8655 99.9031 99.6504 99.1112 99.0826 101.8688
H-27	99.30416870117188	if ( nex@@ tnode != null ; return nex@@ tnode ;
P-27	99.8197 98.7772 98.8491 98.7755 99.9613 98.6941 98.5942 99.5702 98.6943 99.8612 102.8642
H-27	99.29128011067708	node = nex@@ tnode ; if node = nex@@ tnode ;
P-27	99.994 99.2439 98.1441 99.646 97.6354 97.9644 99.7455 99.3396 98.5325 99.1312 102.4989
H-27	99.2864990234375	node = nex@@ tnode ; else node = nex@@ tnode ;
P-27	99.994 99.2439 98.1441 99.646 95.1007 99.132 99.9905 99.5779 98.6627 99.633 102.6934
H-27	99.26207624162946	node = nex@@ tnode ; } else { node = nex@@ tnode ;
P-27	99.994 99.2439 98.1441 99.646 97.0993 96.4767 99.7637 98.9809 99.99 99.5342 99.0871 99.8027 102.2867
H-27	99.2522723858173	if ( nex@@ tnode != null ; node = nex@@ tnode ;
P-27	99.8197 98.7772 98.8491 98.7755 99.9613 98.6941 98.9244 99.9913 99.6136 98.7307 98.7478 102.2059
H-27	99.24695841471355	node = nex@@ tnode ; node = nex@@ tnode ; }
P-27	99.994 99.2439 98.1441 99.646 97.9102 99.9881 99.2142 98.5905 99.6408 96.9825 101.9894
H-27	99.24560546875	if ( nex@@ tnode == null ; return nex@@ tnode ;
P-27	99.8197 98.7772 98.8491 97.8938 99.9233 98.6721 98.9081 99.5211 98.6495 99.8841 102.8604
H-27	99.23751126802884	if ( nex@@ tnode == null ) node = nex@@ tnode ;
P-27	99.8197 98.7772 98.8491 97.8938 99.9233 99.1597 98.8595 99.9796 99.618 98.5598 99.4633 101.9957
H-27	99.22954852764423	node = nex@@ tnode ; if nex@@ tnode = nex@@ tnode ;
P-27	99.994 99.2439 98.1441 99.646 97.6354 97.7227 98.172 99.7122 99.0832 99.1687 99.5062 102.3361
H-27	99.2271259014423	node = nex@@ tnode ; if ; node = nex@@ tnode ;
P-27	99.994 99.2439 98.1441 99.646 97.6354 98.0668 98.2834 99.9861 98.8117 98.7373 99.1554 102.6289
H-27	99.21826171875	node = nex@@ tnode ;
P-27	99.994 99.2439 98.1441 99.646 98.6619
H-27	99.2110262784091	node = nex@@ tnode ; node = nex@@ tnode ;
P-27	99.994 99.2439 98.1441 99.646 97.9102 99.9881 99.2142 98.5905 99.6408 99.3297
H-27	99.19278658353366	if ( nex@@ tnode == null ; node = nex@@ tnode ;
P-27	99.8197 98.7772 98.8491 97.8938 99.9233 98.6721 98.7601 99.9847 99.5636 98.6752 99.0635 102.3351
H-27	99.18734036959134	node = nex@@ tnode ; } node = nex@@ tnode ; }
P-27	99.994 99.2439 98.1441 99.646 97.0993 98.9713 99.9935 99.441 98.462 99.6914 96.7856 102.3436
H-27	99.17967529296875	node = nex@@ tnode ; return nex@@ tnode ;
P-27	99.994 99.2439 98.1441 99.646 97.0042 99.1278 99.1209 99.9914 99.9048
H-27	99.17523748224431	if ( nex@@ tnode != null ; return node ;
P-27	99.8197 98.7772 98.8491 98.7755 99.9613 98.6941 98.5942 97.3667 99.9942 102.9067
H-27	99.16300142728366	node = nex@@ tnode ; if node = nex@@ tnode ; }
P-27	99.994 99.2439 98.1441 99.646 97.6354 97.9644 99.7455 99.3396 98.5325 99.1312 97.9282 102.1944
H-27	99.1429443359375	node = nex@@ tnode ; node = nex@@ tnode ; ;
P-27	99.994 99.2439 98.1441 99.646 97.9102 99.9881 99.2142 98.5905 99.6408 95.2982 102.4255
H-27	99.131103515625	if ( node != null ) node = nex@@ tnode ;
P-27	99.8197 96.8476 98.7906 99.9684 99.2784 98.4549 99.8803 99.409 98.8552 99.0875 101.9926
H-27	99.12034098307292	{ node = nex@@ tnode ; node = nex@@ tnode ;
P-27	99.3225 99.9698 99.1672 98.2914 99.5487 98.2396 99.9781 99.3296 98.819 99.5659 101.3467
H-27	99.11578838641827	node = nex@@ tnode ; if ( nex@@ tnode != null ;
P-27	99.994 99.2439 98.1441 99.646 97.6354 99.3136 98.649 98.8151 98.0976 99.9714 97.6482 101.7273
H-27	99.1119384765625	try { node = nex@@ tnode ; node = nex@@ tnode ;
P-27	99.988 99.4004 99.8855 99.6704 98.9389 99.0333 98.1124 99.9863 99.3172 98.8066 99.614 100.9134
H-27	99.10857543945312	return nex@@ tnode ;
P-27	99.4405 98.6781 99.992 99.9219
H-27	99.08480130709134	if ( node != null ) { node = nex@@ tnode ;
P-27	99.8197 96.8476 98.7906 99.9684 99.2784 99.5032 99.5042 99.3666 99.5108 98.6509 99.3282 100.3449
H-27	99.08193734975961	node = nex@@ tnode ; if ( nex@@ tnode == null ;
P-27	99.994 99.2439 98.1441 99.646 97.6354 99.3136 98.649 98.8151 97.6398 99.9552 97.7674 101.6421
H-27	99.05068969726562	node = nex@@ tnode ; break ;
P-27	99.994 99.2439 98.1441 99.646 95.8923 99.9708 99.8947
H-27	99.04995492788461	node = nex@@ tnode ; else { node = nex@@ tnode ;
P-27	99.994 99.2439 98.1441 99.646 95.1007 98.6812 98.818 99.9904 99.4759 98.6903 99.4421 100.803
H-27	99.04730779474431	node = nex@@ tnode ; } node = node ;
P-27	99.994 99.2439 98.1441 99.646 97.0993 98.9713 99.9935 95.7765 99.1042 101.928
H-27	99.03564453125	if ( node == null ) { node = nex@@ tnode ;
P-27	99.8197 96.8476 97.9823 99.9095 99.178 99.4872 99.3415 99.9853 99.4538 98.3931 99.4727 100.4034
H-27	99.03209431966145	node = nex@@ tnode ; return nex@@ tnode ; else {
P-27	99.994 99.2439 98.1441 99.646 97.0042 99.1278 99.1209 99.9914 96.0591 99.1213 101.3127
H-27	99.02759399414063	throw new Runtime CaMeL Exception ( $STRING$ ) ;
P-27	99.7687 98.7506 99.9974 99.8821 99.7942 99.6781 97.6307 99.9955 99.9004
H-27	99.0150146484375	node = node ; node = nex@@ tnode ; }
P-27	99.994 96.1675 98.0521 98.9199 99.9944 99.2078 98.4224 99.5295 97.4242 101.8335
H-27	99.01217990451389	throw new Runtime CaMeL Exception ( $STRING$ ;
P-27	99.7687 98.7506 99.9974 99.8821 99.7942 99.6781 98.7386 99.6216
H-27	98.9991455078125	node = nex@@ tnode ; node = nex@@ tnode ; else
P-27	99.994 99.2439 98.1441 99.646 97.9102 99.9881 99.2142 98.5905 99.6408 96.0692 99.9289
H-27	98.9988125887784	node = nex@@ tnode ; } return nex@@ tnode ;
P-27	99.994 99.2439 98.1441 99.646 97.0993 97.1187 99.2429 98.9177 99.989 99.9716
H-27	98.9982158954327	node = nex@@ tnode ; node = nex@@ tnode . node ;
P-27	99.994 99.2439 98.1441 99.646 97.9102 99.9881 99.2142 98.5905 98.6955 96.4469 99.5238 99.9599
H-27	98.9938631924716	node = nex@@ tnode . get = nex@@ tnode ;
P-27	99.994 99.2439 98.1441 98.7492 99.7221 96.6808 98.8392 98.8724 99.3409 99.7263
H-27	98.99354044596355	node = nex@@ tnode . get CaMeL Parent ( ) ;
P-27	99.994 99.2439 98.1441 98.7492 99.7221 99.9483 93.3148 99.5137 99.8446 99.994 99.8341
H-27	98.98722700639205	node = node . get CaMeL Parent ( ) ;
P-27	99.994 96.1675 99.7667 99.8031 99.9902 94.5675 99.3251 99.9504 99.9926 99.6826
H-27	98.97620307074652	node = nex@@ tnode . nex@@ tnode ;
P-27	99.994 99.2439 98.1441 98.7492 96.4908 98.8802 99.9461 99.7178
H-27	98.97354736328126	throw new Runtime CaMeL Exception ( $STRING$ ; }
P-27	99.7687 98.7506 99.9974 99.8821 99.7942 99.6781 98.7386 98.7267 99.5208
H-27	98.96002197265625	throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ; }
P-27	99.7687 96.9449 99.997 98.693 99.997 99.9534 99.8221 99.6883 99.1576 99.1101 99.5098
H-27	98.95458221435547	node = nex@@ tnode ; if ;
P-27	99.994 99.2439 98.1441 99.646 97.6354 98.0668 99.2868
H-27	98.9449462890625	node = nex@@ tnode . node ;
P-27	99.994 99.2439 98.1441 98.7492 96.311 99.5762 99.9215
H-27	98.94082641601562	node = nex@@ tnode ; nex@@ tnode = nex@@ tnode ;
P-27	99.994 99.2439 98.1441 99.646 96.7205 97.3336 99.9896 99.2685 98.7397 99.8439 98.7463
H-27	98.93849690755208	break ; } if ( nex@@ tnode != null ) {
P-27	99.7912 98.6074 98.9622 99.535 99.1963 98.0901 99.1615 99.9863 99.7296 99.7036 99.0997
H-27	98.93414861505681	return nex@@ tnode ; } node = nex@@ tnode ;
P-27	99.4405 98.6781 99.992 97.0233 98.0894 99.9956 99.5224 98.6182 99.6421 99.7636
H-27	98.9325838955966	throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ;
P-27	99.7687 96.9449 99.997 98.693 99.997 99.9534 99.8221 99.6883 99.1576 99.3581
H-27	98.92882191051136	node = nex@@ tnode ; return nex@@ tnode ; }
P-27	99.994 99.2439 98.1441 99.646 97.0042 99.1278 99.1209 99.9914 96.7383 99.5867
H-27	98.9193115234375	throw new Runtime CaMeL Exception ( $STRING$ + nex@@ tnode ;
P-27	99.7687 98.7506 99.9974 99.8821 99.7942 99.6781 99.3515 99.0194 98.2973 97.6421 99.9719
H-27	98.91363525390625	node = nex@@ tnode ; }
P-27	99.994 99.2439 98.1441 99.646 97.0993 98.6485
H-27	98.91031901041667	node = nex@@ tnode ; return node ;
P-27	99.994 99.2439 98.1441 99.646 97.0042 96.6365 99.9934 99.9111
H-27	98.90689697265626	node = node ; node = nex@@ tnode ;
P-27	99.994 96.1675 98.0521 98.9199 99.9944 99.2078 98.4224 99.5295 99.1616
H-27	98.90291137695313	node = nex@@ tnode . get = ) ;
P-27	99.994 99.2439 98.1441 98.7492 99.7221 96.6808 97.1092 99.9497 99.8164
H-27	98.85809936523438	node = nex@@ tnode . get = true ;
P-27	99.994 99.2439 98.1441 98.7492 99.7221 96.6808 96.5399 99.9628 99.9246
H-27	98.8501864346591	throw new Runtime CaMeL Exception ( $STRING$ ) ; }
P-27	99.7687 98.7506 99.9974 99.8821 99.7942 99.6781 97.6307 99.9955 97.3607 99.6158
H-27	98.84832000732422	node = nex@@ tnode . get ;
P-27	99.994 99.2439 98.1441 98.7492 99.7221 95.4166 99.897
H-27	98.81766086154514	node = nex@@ tnode ; break ; }
P-27	99.994 99.2439 98.1441 99.646 95.8923 99.9708 97.422 99.4261
H-27	98.80581229073661	} node = nex@@ tnode ;
P-27	99.257 99.9893 99.1745 98.3344 99.709 99.499
H-27	98.80471365792411	node = . ( ) ;
P-27	99.994 95.1777 98.7283 98.4275 99.889 99.7968
H-27	98.7921875	try { node = nex@@ tnode . node ;
P-27	99.988 99.4004 99.8855 99.6704 98.9389 99.5004 96.9076 99.4686 99.3731
H-27	98.78853062220982	node = node . node ;
P-27	99.994 96.1675 99.7667 96.2191 99.8836 99.8691
H-27	98.78586832682292	break ; } node = nex@@ tnode ;
P-27	99.7912 98.6074 98.391 99.9821 99.4831 98.0657 99.6222 99.7311
H-27	98.7840347290039	node = node . nex@@ tnode ;
P-27	99.994 96.1675 99.7667 96.0878 98.7858 99.9922 99.8586
H-27	98.76362609863281	return node ;
P-27	97.6864 99.9778 99.8798
H-27	98.76329956054687	node = nex@@ tnode ; = nex@@ tnode ;
P-27	99.994 99.2439 98.1441 99.646 94.3065 99.2451 99.0103 99.1842 99.2391
H-27	98.75886366102431	node = nex@@ tnode ; } if ;
P-27	99.994 99.2439 98.1441 99.646 97.0993 97.6421 98.0414 99.3994
H-27	98.71497599283855	return nex@@ tnode ; }
P-27	99.4405 98.6781 99.992 97.0233 99.6456
H-27	98.71446228027344	node = nex@@ tnode ; while ;
P-27	99.994 99.2439 98.1441 99.646 94.9891 98.7983 99.2806
H-27	98.68982611762152	node = nex@@ tnode ; if ; {
P-27	99.994 99.2439 98.1441 99.646 97.6354 98.0668 97.1632 98.6953
H-27	98.68952941894531	if ( nex@@ tnode != null ;
P-27	99.8197 98.7772 98.8491 98.7755 99.9613 98.6941 97.4503
H-27	98.68684895833333	node = nex@@ tnode ; if ; ;
P-27	99.994 99.2439 98.1441 99.646 97.6354 98.0668 96.4287 99.4031
H-27	98.68112182617188	node = nex@@ tnode ; } ;
P-27	99.994 99.2439 98.1441 99.646 97.0993 96.1547 99.5473
H-27	98.66498674665179	node = nex@@ tnode ; ;
P-27	99.994 99.2439 98.1441 99.646 94.9855 99.0216
H-27	98.6380844116211	node = pop ( nex@@ tnode ;
P-27	99.994 92.3987 99.5274 99.6706 99.0748 99.3003 99.5192
H-27	98.62702287946429	throw new Runtime CaMeL Exception ;
P-27	99.7687 98.7506 99.9974 99.8821 97.3872 99.7248
H-27	98.55708530970982	if node = nex@@ tnode ;
P-27	97.4558 98.8967 99.322 98.5521 99.0497 99.4343
H-27	98.53567504882812	} return nex@@ tnode ;
P-27	97.2333 99.3139 99.0196 99.9924 99.9774
H-27	98.53315952845982	{ node = nex@@ tnode ;
P-27	99.3225 99.9698 99.1672 98.2914 99.5487 97.5669
H-27	98.53116280691964	{ return nex@@ tnode ; }
P-27	97.0202 99.3881 98.8603 99.9384 98.9617 99.6836
H-27	98.49200439453125	return node ; }
P-27	97.6864 99.9778 97.5398 99.7455
H-27	98.47960205078125	node = false ;
P-27	99.994 93.4199 99.8098 99.5546
H-27	98.45684814453125	node = true ;
P-27	99.994 93.3231 99.7493 99.5981
H-27	98.42039998372395	{ return nex@@ tnode ;
P-27	97.0202 99.3881 98.8603 99.9384 99.4496
H-27	98.37833658854167	m = nex@@ tnode ;
P-27	99.8847 99.6734 98.7762 99.6251 99.1504
H-27	98.32605590820313	node = node ;
P-27	99.994 96.1675 98.0521 97.7969
H-27	98.22135009765626	node = out ;
P-27	99.994 94.6914 97.3967 99.4049
H-27	98.21214803059895	break ;
P-27	99.7912 99.4462
H-27	98.2070083618164	return false ;
P-27	95.5434 99.9738 99.8003
H-27	98.18157958984375	return false ; }
P-27	95.5434 99.9738 98.1539 99.7263
H-27	98.17194366455078	return true ;
P-27	95.3988 99.983 99.7956
H-27	98.14874267578125	return true ; }
P-27	95.3988 99.983 98.1848 99.6667
H-27	98.03828430175781	break ; }
P-27	99.7912 98.6074 98.3555
H-27	97.83329772949219	throw null ;
P-27	96.8085 99.988 99.6583
H-27	97.81607055664062	continue node ;
P-27	98.7442 99.5411 99.6933
H-27	97.54229736328125	continue ;
P-27	99.4077 99.9335
H-27	96.30728149414062	}
P-27	96.9372
H-27	96.1314468383789	{
P-27	96.3972
S-28	c = bin _ op . apply ( a , b ) ;
T-28	c = bin _ op . apply ( b , a ) ;
H-28	99.84858921595982	c = bin _ op . apply ( a , b ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 99.6129 99.5304 99.9923 99.8756
H-28	99.7686279296875	if ( b != null ) c = bin _ op . apply ( a , b ) ;
P-28	99.9993 98.0128 99.2767 99.9073 99.8325 98.6631 99.9346 99.424 99.9954 99.9692 99.9841 99.8951 99.9965 99.8945 99.9472 99.7828 99.8089 99.9948 102.5644
H-28	99.76287841796875	if ( c != null ) c = bin _ op . apply ( a , b ) ;
P-28	99.9993 98.0114 99.2437 99.8292 99.7826 98.6757 99.9411 99.4582 99.9954 99.9673 99.9852 99.8976 99.9962 99.8917 99.9463 99.7778 99.795 99.9946 102.5801
H-28	99.74696044921875	if ( a != null ) c = bin _ op . apply ( a , b ) ;
P-28	99.9993 97.6949 99.3577 99.8662 99.7776 98.6222 99.937 99.3738 99.9953 99.9701 99.9842 99.8933 99.9963 99.8875 99.9518 99.7803 99.8022 99.9949 102.5656
H-28	99.69634246826172	c = bin _ op . apply ( a , b , b ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 99.6129 98.8193 98.4798 99.4789 99.9926 99.889
H-28	99.69484456380208	c = bin _ op . apply ( a ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 97.5532 99.9795 99.8387
H-28	99.68445434570313	if ( b == null ) c = bin _ op . apply ( a , b ) ;
P-28	99.9993 98.0128 98.392 99.904 99.87 98.3675 99.9883 99.1163 99.9942 99.9612 99.9687 99.8475 99.9954 99.907 99.9315 99.7693 99.784 99.9945 102.3966
H-28	99.66680908203125	if ( b != null ) { c = bin _ op . apply ( a ) ; }
P-28	99.9993 98.0128 99.2767 99.9073 99.8325 99.6155 99.8501 99.928 99.7793 99.9971 99.9773 99.9928 99.9505 99.9971 99.9103 96.9898 99.987 99.3591 102.4844
H-28	99.6623779296875	if ( c != null ) { c = bin _ op . apply ( a ) ; }
P-28	99.9993 98.0114 99.2437 99.8292 99.7826 99.598 99.8609 99.9209 99.7829 99.997 99.9772 99.9929 99.9488 99.9969 99.9084 96.9762 99.9876 99.4154 102.529
H-28	99.65361328125	if ( a != null ) { c = bin _ op . apply ( a ) ; }
P-28	99.9993 97.6949 99.3577 99.8662 99.7776 99.6382 99.8585 99.9313 99.7511 99.9969 99.9761 99.9926 99.9506 99.9969 99.9072 96.8578 99.9875 99.4817 102.5608
H-28	99.63494110107422	c = bin _ op . apply ( a , b , false ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 99.6129 98.8193 97.1505 99.9032 99.9924 99.8118
H-28	99.62960379464286	c = bin _ op . get ( a , b ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 97.6527 99.9791 99.5106 99.4865 99.4345 99.76 99.9917 99.6768
H-28	99.62158203125	c = bin _ op . apply ( a , b , true ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 99.6129 98.8193 96.9784 99.8676 99.9917 99.8063
H-28	99.60614013671875	c = bin _ op . apply ( a , b , bin _ op ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 99.6129 98.8193 96.5608 99.9838 99.5863 99.6967 99.9949 99.7868
H-28	99.60491943359375	c = bin _ op . apply ( bin _ op , b ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 96.4725 99.9928 99.8308 99.4019 99.3052 99.6294 99.9932 99.8602
H-28	99.60341971261161	c = bin _ op . apply ( b , b ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 96.582 99.8194 99.5126 99.4601 99.993 99.8878
H-28	99.59483119419643	c = bin _ op . apply ( a , a ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 96.5084 99.1054 99.9922 99.8526
H-28	99.59390258789062	if ( b == null ) { c = bin _ op . apply ( a ) ; }
P-28	99.9993 98.0128 98.392 99.904 99.87 99.6743 99.687 99.9859 99.5423 99.9956 99.9626 99.986 99.9261 99.9959 99.9071 97.2752 99.9861 99.6006 101.6863
H-28	99.59254673549107	c = bin _ op . apply ( bin _ op ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 96.4725 99.9928 99.8308 99.1011 99.9921 99.7136
H-28	99.58992767333984	c = bin _ op . apply ( a , a , b ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 96.5084 99.4076 99.1155 99.6492 99.9935 99.8956
H-28	99.58828735351562	c = bin _ op . apply ( a , b . double CaMeL Value ( ) ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 99.6129 96.7623 97.646 99.8141 99.8677 99.9943 99.9992 99.7813 99.993 99.4262
H-28	99.58505684988839	c = bin _ op . apply ( c , b ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 96.1087 99.8905 99.583 99.5539 99.993 99.8688
H-28	99.58048248291016	c = bin _ op . apply ( a , b , c ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 99.6129 98.8193 96.294 99.8198 99.9946 99.8782
H-28	99.57966613769531	c = bin _ op . apply ( a , b , null ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 99.6129 98.8193 96.3083 99.8357 99.9935 99.836
H-28	99.57682719983552	if ( b != null ) { c = bin _ op . apply ( a ) ;
P-28	99.9993 98.0128 99.2767 99.9073 99.8325 99.6155 99.8501 99.928 99.7793 99.9971 99.9773 99.9928 99.9505 99.9971 99.9103 96.9898 99.987 100.4671
H-28	99.5740737915039	c = bin _ op . apply ( a , b , a ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 99.6129 98.8193 96.3803 99.6383 99.9922 99.873
H-28	99.56571197509766	c = bin _ op . apply ( a , b , $NUMBER$ ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 99.6129 98.8193 96.2075 99.713 99.9931 99.8365
H-28	99.56406947544643	c = bin _ op . apply ( a , c ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 95.6039 99.573 99.9938 99.8572
H-28	99.56342516447368	if ( c != null ) { c = bin _ op . apply ( a ) ;
P-28	99.9993 98.0114 99.2437 99.8292 99.7826 99.598 99.8609 99.9209 99.7829 99.997 99.9772 99.9929 99.9488 99.9969 99.9084 96.9762 99.9876 100.402
H-28	99.55223388671875	c = bin _ op . apply ( a , b ) ; if ( c == null )
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 99.6129 99.5304 99.9923 96.8975 99.9962 98.3183 98.8237 99.8774 99.8705 99.2565
H-28	99.54830932617188	c = bin _ op . get ( a ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 97.6527 99.9791 99.5106 99.0475 99.9806 99.0867
H-28	99.54817708333333	c = bin _ op . apply ( a , b , b , b ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 99.6129 98.8193 98.4798 98.2528 98.6694 99.3199 99.9921 99.8518
H-28	99.54127261513158	if ( a != null ) { c = bin _ op . apply ( a ) ;
P-28	99.9993 97.6949 99.3577 99.8662 99.7776 99.6382 99.8585 99.9313 99.7511 99.9969 99.9761 99.9926 99.9506 99.9969 99.9072 96.8578 99.9875 100.2544
H-28	99.53976236979166	c = bin _ op . apply ( a , b ) ; }
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 99.6129 99.5304 99.9923 95.2482 99.8435
H-28	99.53822631835938	c = bin _ op . apply ( a , b ) ; if ( b == null )
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 99.6129 99.5304 99.9923 96.8975 99.9962 98.1509 98.8508 99.943 99.9051 99.0165
H-28	99.53712463378906	c = bin _ op . apply ( a , bin _ op ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 94.9943 99.9839 99.4657 99.523 99.9947 99.7634
H-28	99.5270284016927	c = op . apply ( a , b ) ;
P-28	99.9493 96.3893 99.9671 99.8395 99.9788 99.7554 99.8969 99.6289 99.5525 99.992 99.7838
H-28	99.52232360839844	c = bin _ op . apply ( a , b . value ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 99.6129 96.7623 97.6074 99.6673 99.995 99.8434
H-28	99.52130126953125	c = bin _ op . apply ( bin _ op , b , b ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 96.4725 99.9928 99.8308 99.4019 99.3052 98.681 99.1316 99.5437 99.9942 99.8371
H-28	99.52094377790179	b = bin _ op . apply ( a , b ) ;
P-28	99.9146 99.8494 99.9983 99.9858 99.9934 99.884 99.9901 99.7974 99.9076 99.6454 99.5731 99.9929 99.8691
H-28	99.51976667131696	c = bin _ op . apply ( op , b ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 95.6063 99.5681 99.5039 99.5266 99.9923 99.8866
H-28	99.51862928602431	c = bin _ op = bin _ op . apply ( a , b ) ;
P-28	99.9493 99.8047 99.9982 99.9864 94.2184 99.3202 99.9933 99.869 99.9793 99.7831 99.9914 99.8372 99.8905 99.5727 99.7299 99.9915 99.8294
H-28	99.51341417100694	c = bin _ op . apply ( a , b , b , false ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 99.6129 98.8193 98.4798 98.2528 97.4547 99.9693 99.9932 99.7904
H-28	99.5127944946289	c = bin _ op . apply ( a , b , 0 ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 99.6129 98.8193 95.6887 99.3759 99.9929 99.846
H-28	99.50604926215277	c = bin _ op . apply ( a , b , b , true ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 99.6129 98.8193 98.4798 98.2528 97.3371 99.9577 99.9928 99.7874
H-28	99.50511932373047	c = bin _ op . apply ( a , 0 . 0 ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 95.0775 99.2789 99.5703 99.5948 99.9799 99.7113
H-28	99.50125122070312	c = bin _ op . apply ( a , b , value ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 99.6129 98.8193 95.0037 99.8479 99.9936 99.8735
H-28	99.49539620535714	c = bin _ op . apply ( a , value ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 94.6646 99.5423 99.9916 99.868
H-28	99.49251556396484	bin _ op = bin _ op . apply ( a , b ) ;
P-28	99.9902 99.8718 99.3588 99.2211 99.9968 99.9391 99.9871 99.753 99.9886 99.8651 99.8458 99.6448 99.7377 99.9942 99.788
H-28	99.49229600694444	c = bin _ op . apply ( a , b , b . value ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 99.6129 98.8193 98.4798 98.1464 97.2702 99.8379 99.9957 99.83
H-28	99.48990885416667	c = bin _ op . apply ( a , b , 0 . 0 ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 99.6129 98.8193 95.6887 99.0463 99.3141 99.7294 99.9881 99.7508
H-28	99.48668670654297	c = bin _ op . apply ( b , b , b ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 96.582 99.8194 99.5126 98.88 98.5268 99.3893 99.9928 99.8911
H-28	99.48618035567434	if ( b == null ) { c = bin _ op . apply ( a ) ;
P-28	99.9993 98.0128 98.392 99.904 99.87 99.6743 99.687 99.9859 99.5423 99.9956 99.9626 99.986 99.9261 99.9959 99.9071 97.2752 99.9861 99.6463
H-28	99.48609754774306	c = bin _ op . apply ( a , b , a , b ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 99.6129 98.8193 96.3803 98.4308 99.1793 99.5827 99.993 99.8823
H-28	99.48506673177083	c = bin _ op . apply ( bin _ op , a , b ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 96.4725 99.9928 99.8308 99.4019 97.3804 99.3721 99.5175 99.7189 99.9946 99.8569
H-28	99.48210991753473	c = bin _ op . apply ( a , new Integer ( b ) ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 94.5364 98.8085 99.9896 99.4885 99.3811 99.8776 99.9893 99.7379
H-28	99.47972615559895	c = bin _ op . apply ( b ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 96.582 98.1211 99.9822 99.8787
H-28	99.47662353515625	c = bin _ op . apply ( a , c , b ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 95.6039 98.7747 98.7774 99.7167 99.9937 99.8905
H-28	99.47652180989583	c = bin _ op . apply ( a , bin _ op , b ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 94.9943 99.9839 99.4657 98.1677 99.3963 99.8508 99.9927 99.857
H-28	99.47577582465277	c = bin _ op . apply ( a , b , b . b ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 99.6129 98.8193 98.4798 98.1464 97.1514 99.6133 99.9957 99.8759
H-28	99.47210693359375	c = bin _ op . apply ( a , true ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 94.7425 99.2314 99.9885 99.7781
H-28	99.47135707310268	c = bin _ op . apply ( a , 0 ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 95.0775 98.8526 99.9931 99.8066
H-28	99.47109805836396	c = bin _ op . apply ( a , ( Integer ) b ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 95.0265 98.4441 99.939 99.2066 99.7166 99.9854 99.8212
H-28	99.47015380859375	c = bin _ op . apply ( a , b , 1 ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 99.6129 98.8193 94.8717 99.5164 99.9924 99.8407
H-28	99.46981811523438	c = bin _ op . apply ( c , b , b ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 96.1087 99.8905 99.583 98.7982 98.5175 99.5442 99.993 99.8893
H-28	99.46717071533203	c = bin _ op . apply ( a , b . b ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 99.6129 96.7623 96.7837 99.5709 99.9957 99.8802
H-28	99.45969645182292	c = bin _ op . get ( b ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 97.6527 99.9791 97.6249 99.5962 99.9817 99.3591
H-28	99.45831298828125	a = bin _ op . apply ( a , b ) ;
P-28	99.9795 99.8217 99.9981 99.9856 99.9929 99.8822 99.9892 99.8058 99.8982 99.6319 99.5259 99.9918 99.8569
H-28	99.45718383789062	c = bin _ op . apply ( bin _ op , a ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 96.4725 99.9928 99.8308 99.4019 97.3804 99.2078 99.9942 99.8419
H-28	99.45108795166016	c = bin _ op . apply ( a , b ) ; break ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 99.6129 99.5304 99.9923 93.6533 99.9902 99.5692
H-28	99.45063999720982	c = bin _ op . apply ( a , $NUMBER$ ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 94.339 99.3008 99.9918 99.8083
H-28	99.443359375	c = bin _ op . get ( a , b , b ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 97.6527 99.9791 99.5106 99.4865 99.4345 97.7677 98.7892 99.3932 99.9876 99.77
H-28	99.44317626953125	c = bin _ op . apply ( a , op ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 94.3197 99.1968 99.9961 99.8229
H-28	99.43393380301339	c = bin _ op . get ( a , 0 ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 97.6527 99.9791 99.5106 99.4865 96.9674 99.7747 99.9912 99.3903
H-28	99.42923990885417	c = bin _ op . apply ( op ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 95.6063 98.5088 99.9881 99.8547
H-28	99.42619977678571	c = bin _ op . get ( b , b ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 97.6527 99.9791 97.6249 98.8511 99.2842 99.509 99.9914 99.7518
H-28	99.42579142252605	c . set ( bin _ op , b ) ;
P-28	96.9743 99.5514 99.612 98.74 99.9941 99.9009 99.8092 99.5248 99.7316 99.9929 99.6875
H-28	99.42435128348214	c = bin _ op . apply ( a , false ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 93.9274 99.372 99.9892 99.7832
H-28	99.42021484375	int c = bin _ op . apply ( a , b ) ;
P-28	97.655 99.9336 99.5529 99.9971 99.972 99.9919 99.829 99.99 99.8206 99.9135 99.5702 99.6406 99.991 98.6671
H-28	99.41637311662946	c = bin _ op . apply ( $NUMBER$ , b ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 93.8232 99.9453 99.5553 99.4566 99.9944 99.8614
H-28	99.41523960658482	c = bin _ op . apply ( a , null ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 99.7738 99.9024 93.8586 99.2697 99.991 99.825
H-28	99.41085379464286	c = op . apply ( a , b , b ) ;
P-28	99.9493 96.3893 99.9671 99.8395 99.9788 99.7554 99.8969 99.6289 98.7381 98.6972 99.4599 99.9922 99.8683
H-28	99.40757242838542	c = a . apply ( a , b ) ;
P-28	99.9493 95.6016 99.7681 99.8411 99.9844 99.6683 99.79 99.4262 99.5217 99.9862 99.7632
H-28	99.405224609375	int b = bin _ op . apply ( a , b ) ;
P-28	97.4466 99.9412 99.5969 99.9971 99.9703 99.9928 99.8243 99.9904 99.8498 99.9049 99.6442 99.6706 99.9879 98.4828
H-28	99.40269978841145	c = c . apply ( a , b ) ;
P-28	99.9493 95.1509 99.9079 99.9385 99.9872 99.6808 99.8555 99.4549 99.5502 99.9882 99.7779
H-28	99.39816284179688	c = bin _ op . apply ( c ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 96.1087 97.662 99.9868 99.8277
H-28	99.39686075846355	c = b . apply ( a , b ) ;
P-28	99.9493 95.6642 99.9466 99.7598 99.9809 99.6328 99.7439 99.4383 99.3123 99.9876 99.7559
H-28	99.35885620117188	c = bin _ op . get ( c ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 97.6527 99.9791 96.5817 99.8054 99.985 98.9798
H-28	99.311279296875	c . set ( a , b ) ;
P-28	96.9743 99.5514 99.612 98.6598 99.9557 99.7043 99.5153 99.9921 99.5571
H-28	99.29266357421875	c . add ( bin _ op ) ;
P-28	96.9743 97.8477 99.958 99.4425 99.9951 99.9212 99.7648 99.9906 99.4416
H-28	99.2760986328125	c = op . apply ( a ) ;
P-28	99.9493 96.3893 99.9671 99.8395 99.9788 99.7554 97.6027 99.9836 99.7044
H-28	99.25669167258523	c = bin _ op . apply ( ) ;
P-28	99.9493 99.8047 99.9982 99.9864 99.9931 99.8805 99.9898 93.2907 99.9676 99.3724
H-28	99.25276489257813	c = b . apply ( a ) ;
P-28	99.9493 95.6642 99.9466 99.7598 99.9809 99.6328 98.363 99.9818 99.6586
H-28	99.22471313476562	c . apply ( a , b ) ;
P-28	96.9743 98.1597 99.9073 99.2835 99.4106 99.7415 99.6034 99.992 99.584
H-28	99.20410766601563	c = apply ( a , b ) ;
P-28	99.9493 95.526 99.9158 99.0444 99.9796 99.4106 98.9114 99.9853 99.7278
H-28	99.20380249023438	c . apply ( bin _ op ) ;
P-28	96.9743 98.1597 99.9073 98.625 99.9923 99.9237 99.3342 99.9909 99.5399
H-28	99.2032470703125	c = a . apply ( a ) ;
P-28	99.9493 95.6016 99.7681 99.8411 99.9844 99.6683 97.9961 99.9818 99.651
H-28	99.17620239257812	c = c . apply ( a ) ;
P-28	99.9493 95.1509 99.9079 99.9385 99.9872 99.6808 97.8988 99.9802 99.6775
H-28	99.16558837890625	c . set ( bin _ op ) ;
P-28	96.9743 99.5514 99.612 98.74 99.9941 99.9009 97.906 99.9922 99.3941
H-28	99.06732177734375	c . apply ( a ) ;
P-28	96.9743 98.1597 99.9073 99.2835 99.1686 99.9906 99.4637
S-29	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( Arrays . as CaMeL List ( node , nex@@ tnode ) ) ) ) ;
T-29	distance + length _ by _ edge . get ( Arrays . as CaMeL List ( node , nex@@ tnode ) ) ) ) ;
H-29	99.87963169642858	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( Arrays . as CaMeL List ( node , nex@@ tnode ) ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.095 99.9979 99.9938 99.9895 99.9969 99.968 99.9246 99.9407 99.8885 99.9755 99.9964 99.6216 99.9322 99.9884 99.9785 99.9134
H-29	99.80522325303819	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( Arrays . as CaMeL List ( node , nex@@ tnode ) ) ) ) ; }
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.095 99.9979 99.9938 99.9895 99.9969 99.968 99.9246 99.9407 99.8885 99.9755 99.9964 99.6216 99.9322 99.9884 99.9785 97.183 99.9314
H-29	99.80090661951013	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( Arrays . as CaMeL List ( node , nex@@ tnode ) + 1 ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.095 99.9979 99.9938 99.9895 99.9969 99.968 99.9246 99.9407 99.8885 99.9755 99.9964 98.8072 97.7865 99.9338 99.9315 99.9824 99.968 99.871
H-29	99.78648158482143	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( nex@@ tnode ) + 1 ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.2319 99.9481 99.9995 99.5134 98.1726 99.9795 99.9789 99.9859 99.6244
H-29	99.78309755067568	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( nex@@ tnode ) + length _ by _ edge . get ( node ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.2319 99.9481 99.9995 99.5134 99.141 99.9925 99.9648 99.992 99.979 99.995 99.9891 99.7159 97.2971 99.9575 99.9113 99.9519 99.9863 99.8215
H-29	99.77908063616071	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) ) + length _ by _ edge . get ( Arrays . as CaMeL List ( node , nex@@ tnode ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 98.826 97.2466 99.4631 99.9931 99.9811 99.9915 99.9861 99.8397 99.9705 99.3543 99.0698 99.9983 99.9929 99.9886 99.9976 99.9918 99.926 99.9106 99.8753 99.9819 99.9969 99.6983 99.9852 99.9878 99.8382
H-29	99.77259657118056	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( nex@@ tnode ) ) ) ; }
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.2319 99.9481 99.9995 98.9893 99.9394 99.9889 98.2802 99.8957
H-29	99.76454946157095	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( Arrays . as CaMeL List ( node , nex@@ tnode ) + 0 ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.095 99.9979 99.9938 99.9895 99.9969 99.968 99.9246 99.9407 99.8885 99.9755 99.9964 98.8072 96.5545 99.7933 99.9549 99.9821 99.9667 99.8767
H-29	99.76165936444256	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( Arrays . as CaMeL List ( node , nex@@ tnode ) ) + 1 ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.095 99.9979 99.9938 99.9895 99.9969 99.968 99.9246 99.9407 99.8885 99.9755 99.9964 99.6216 96.9009 98.5034 99.9825 99.9849 99.9734 99.8615
H-29	99.76052444045608	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( Arrays . as CaMeL List ( node , nex@@ tnode ) + $NUMBER$ ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.095 99.9979 99.9938 99.9895 99.9969 99.968 99.9246 99.9407 99.8885 99.9755 99.9964 98.8072 96.3486 99.8657 99.9414 99.9835 99.9609 99.8787
H-29	99.75918918185764	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( Arrays . as CaMeL List ( node , nex@@ tnode ) ) ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.095 99.9979 99.9938 99.9895 99.9969 99.968 99.9246 99.9407 99.8885 99.9755 99.9964 99.6216 99.9322 99.9884 95.5766 99.9931 99.8658
H-29	99.75548895474138	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( nex@@ tnode ) + 1 ) ) ; }
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.2319 99.9481 99.9995 99.5134 98.1726 99.9795 99.9789 99.9859 98.6292 99.883
H-29	99.75449916294643	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( nex@@ tnode ) + 0 ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.2319 99.9481 99.9995 99.5134 97.3016 99.9354 99.9815 99.9814 99.6463
H-29	99.74898952907986	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + - length _ by _ edge . get ( Arrays . as CaMeL List ( node , nex@@ tnode ) ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 95.4058 99.5162 99.9935 99.9561 99.9885 99.9886 99.9432 99.9637 98.9279 99.322 99.9982 99.9925 99.9922 99.9965 99.9383 99.9245 99.9209 99.8718 99.9806 99.9974 99.5889 99.9258 99.9891 99.9821 99.909
H-29	99.74877166748047	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( Arrays . as CaMeL List ( node ) ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.095 99.9979 99.9938 99.9895 99.9969 99.968 99.9246 96.9648 99.2402 99.3373 99.9674 99.9843 99.9143
H-29	99.74654812282986	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( Arrays . as CaMeL List ( node , nex@@ tnode ) ) ) ) ; ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.095 99.9979 99.9938 99.9895 99.9969 99.968 99.9246 99.9407 99.8885 99.9755 99.9964 99.6216 99.9322 99.9884 99.9785 95.0993 99.9026
H-29	99.74347795758929	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) , length _ by _ edge . get ( Arrays . as CaMeL List ( node , nex@@ tnode ) ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 95.9428 99.0679 99.9869 99.9878 99.9921 99.9862 99.766 99.9585 99.0234 98.6489 99.9976 99.9937 99.9887 99.9969 99.971 99.9283 99.943 99.8928 99.9772 99.9965 99.7659 99.947 99.9892 99.9765 99.9198
H-29	99.73810969172297	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( Arrays . as CaMeL List ( node , node , nex@@ tnode ) ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.095 99.9979 99.9938 99.9895 99.9969 99.968 99.9246 99.9407 95.3675 99.1266 99.8258 99.9625 99.9956 99.7454 99.9365 99.9861 99.9816 99.8893
H-29	99.73166073069854	un@@ visited CaMeL Nodes . get ( node ) + length _ by _ edge . get ( Arrays . as CaMeL List ( node , nex@@ tnode ) ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 97.1485 99.9691 97.4403 99.4913 99.9914 99.9838 99.9921 99.9883 99.9415 99.9587 99.1709 99.1936 99.9984 99.9944 99.9894 99.9964 99.9677 99.9316 99.8711 99.8811 99.98 99.9972 99.6555 99.9175 99.9869 99.9735 99.9092
H-29	99.73126898871527	Collections . as CaMeL List ( node , nex@@ tnode ) + length _ by _ edge . get ( Arrays . as CaMeL List ( node , nex@@ tnode ) ) ) ) ;
P-29	99.9988 99.9539 99.9992 99.9943 99.9857 99.9033 99.8726 99.8676 99.9693 99.9932 98.4402 99.4994 99.9954 99.9869 99.9939 99.9879 99.9658 99.9631 99.4849 99.1026 99.9981 99.9957 99.9917 99.9973 99.9881 99.9377 99.9613 99.9184 99.989 99.9983 99.6937 99.9462 99.9895 99.9777 99.9214
H-29	99.72576226128473	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) ) + length _ by _ edge . get ( Arrays . as CaMeL List ( node , nex@@ tnode ) ) ) ; }
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 98.826 97.2466 99.4631 99.9931 99.9811 99.9915 99.9861 99.8397 99.9705 99.3543 99.0698 99.9983 99.9929 99.9886 99.9976 99.9918 99.926 99.9106 99.8753 99.9819 99.9969 99.6983 99.9852 99.9878 97.7912 99.9064
H-29	99.72308872767857	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( Arrays . as CaMeL List ( node ) , nex@@ tnode ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.095 99.9979 99.9938 99.9895 99.9969 99.968 99.9246 96.9648 97.8918 99.2099 99.967 99.9894 99.8777 99.9809 99.9809 99.8932
H-29	99.7230323585304	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( Arrays . as CaMeL List ( node , nex@@ tnode ) ) + 0 ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.095 99.9979 99.9938 99.9895 99.9969 99.968 99.9246 99.9407 99.8885 99.9755 99.9964 99.6216 96.9009 97.1072 99.9431 99.9857 99.9678 99.8729
H-29	99.72269112723214	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . size ( Arrays . as CaMeL List ( node , nex@@ tnode ) ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 95.4116 99.9623 97.2655 99.9984 99.9906 99.9864 99.9969 99.9745 99.9217 99.9525 99.8969 99.9735 99.9939 99.6958 99.9621 99.9906 99.9829 99.8972
H-29	99.72211745689656	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( nex@@ tnode ) + 0 ) ) ; }
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.2319 99.9481 99.9995 99.5134 97.3016 99.9354 99.9815 99.9814 98.5824 99.8794
H-29	99.72201974051339	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( nex@@ tnode ) + $NUMBER$ ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.2319 99.9481 99.9995 99.5134 96.381 99.9506 99.9824 99.9786 99.6442
H-29	99.72046558277027	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( Arrays . as CaMeL List ( node , nex@@ tnode ) ) + $NUMBER$ ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.095 99.9979 99.9938 99.9895 99.9969 99.968 99.9246 99.9407 99.8885 99.9755 99.9964 99.6216 96.9009 96.9961 99.9631 99.9863 99.9623 99.8735
H-29	99.72012906461148	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get CaMeL Count ( Arrays . as CaMeL List ( node , nex@@ tnode ) ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.4045 96.6082 99.9499 96.1555 99.9987 99.9839 99.9951 99.9895 99.9561 99.8692 99.9418 99.9034 99.9788 99.9963 99.7132 99.9583 99.9896 99.9737 99.8885
H-29	99.71950396369485	visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( Arrays . as CaMeL List ( node , nex@@ tnode ) ) ) ) ;
P-29	99.9983 99.9877 99.8821 99.9791 99.9892 99.8536 99.9841 99.9997 99.609 99.5601 99.9957 99.9784 99.9932 99.9866 99.9651 99.9524 99.1139 99.0508 99.9981 99.9936 99.9908 99.9965 99.9684 99.9374 99.9211 99.8832 99.9831 99.9975 99.6661 99.9233 99.9881 99.9778 99.9109
H-29	99.7189582375919	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( Arrays . as CaMeL List ( node ) nex@@ tnode ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.095 99.9979 99.9938 99.9895 99.9969 99.968 99.9246 96.9648 97.4233 99.9176 99.9796 99.7945 99.9561 99.977 99.8797
H-29	99.7188361672794	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( Arrays . as CaMeL List ( node , node ) ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.095 99.9979 99.9938 99.9895 99.9969 99.968 99.9246 99.9407 95.3675 99.2156 99.6874 99.7945 99.985 99.9896 99.9079
H-29	99.71424018012152	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( nex@@ tnode ) + length _ by _ edge . get ( ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.2319 99.9481 99.9995 99.5134 99.141 99.9925 99.9648 99.992 99.979 99.995 99.9891 99.7159 95.0188 99.9055 99.9904 99.981 99.7681
H-29	99.71116480334052	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) . get ( Arrays . as CaMeL List ( node , nex@@ tnode ) ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 95.9929 99.8351 99.6913 97.6104 99.9971 99.9884 99.9914 99.9952 99.9775 99.9157 99.9481 99.8883 99.98 99.9964 99.7079 99.8577 99.9857 99.9784 99.9089
H-29	99.70958533653847	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( nex@@ tnode ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.2319 99.9481 99.9995 98.9893 99.9394 99.9889 96.7649
H-29	99.70759851792279	un@@ visited CaMeL Nodes . get ( node ) ) + length _ by _ edge . get ( Arrays . as CaMeL List ( node , nex@@ tnode ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 97.1485 99.9691 99.8672 97.2464 99.0856 99.986 99.9838 99.9872 99.9833 99.7923 99.9551 99.4375 98.9319 99.9982 99.9939 99.9867 99.9976 99.993 99.9165 99.8889 99.8789 99.9725 99.9961 99.701 99.9831 99.9842 99.8373
H-29	99.70684291294643	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( Arrays . as CaMeL List ( node . nex@@ tnode ) ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.095 99.9979 99.9938 99.9895 99.9969 99.968 99.9246 95.0056 98.6537 99.9563 99.9965 99.8129 99.8779 99.9773 99.9763 99.9306
H-29	99.70564270019531	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) . get ( nex@@ tnode ) + length _ by _ edge . get ( nex@@ tnode ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 95.9929 99.8351 99.6913 99.6312 99.946 99.9986 99.7282 99.4655 99.9961 99.9749 99.9939 99.9838 99.9748 99.9432 99.0514 99.1505 99.9545 99.9995 99.16 99.9519 99.9839 99.7961
H-29	99.69839242788461	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( node ) ) ) ; }
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 97.1536 99.9626 99.9005 99.9399 99.9833 97.8076 99.8237
H-29	99.69612165178572	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( Arrays . as CaMeL List ( un@@ visited CaMeL Nodes ) ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.095 99.9979 99.9938 99.9895 99.9969 99.968 95.0901 99.9136 99.9986 99.9876 98.3234 99.8038 99.8217 99.9576 99.9915 99.8488
H-29	99.69094322467673	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( nex@@ tnode ) + $NUMBER$ ) ) ; }
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.2319 99.9481 99.9995 99.5134 96.381 99.9506 99.9824 99.9786 98.5864 99.8784
H-29	99.68899356617646	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( Arrays . as CaMeL List ( node ) ) + 1 ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.095 99.9979 99.9938 99.9895 99.9969 99.968 99.9246 96.9648 99.2402 98.9657 97.9267 99.9312 99.984 99.9833 99.8774
H-29	99.68893116918103	un@@ visited CaMeL Nodes + length _ by _ edge . get ( Arrays . as CaMeL List ( node , nex@@ tnode ) ) ) ) ;
P-29	99.9422 99.9992 99.9871 94.9344 99.5269 99.9891 99.9851 99.9906 99.9869 99.9403 99.9692 99.2071 98.5498 99.9978 99.991 99.9907 99.9966 99.9848 99.9417 99.9593 99.9042 99.9791 99.9962 99.7451 99.8955 99.9871 99.9862 99.9044
H-29	99.68811405066288	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( Arrays . as CaMeL List ( nex@@ tnode ) ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.095 99.9979 99.9938 99.9895 99.9969 99.968 95.3023 99.9658 99.9981 98.313 99.6145 99.9846 99.9877 99.9141
H-29	99.68792724609375	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( nex@@ tnode ) ) + 1 ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.2319 99.9481 99.9995 98.9893 97.0272 98.6591 99.9809 99.9893 99.8497
H-29	99.68629673549107	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get CaMeL Value ( ) + 1 ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.4045 97.1501 99.992 99.9723 98.1306 98.4603 99.9516 99.9748 99.9735 99.8155
H-29	99.68608542049633	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( un@@ visited CaMeL Nodes . get ( nex@@ tnode ) ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 94.0881 99.8246 99.9919 99.9728 99.9355 99.9258 99.9806 99.7454 99.9816 99.9997 98.7984 99.6777 99.9696 99.9856 99.8622
H-29	99.68319807381465	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( nex@@ tnode ) + - 1 ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.2319 99.9481 99.9995 99.5134 96.8186 98.037 99.9771 99.9827 99.9846 99.733
H-29	99.68292705829327	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + Arrays . as CaMeL List ( node , nex@@ tnode ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 93.7576 99.9987 99.9801 99.9936 99.9898 99.9959 99.8568 99.8047 99.8868 99.9728 99.9951 99.7711 99.9869 99.9906 99.8253
H-29	99.68167114257812	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) . get ( nex@@ tnode ) + length _ by _ edge . get CaMeL Value ( ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 95.9929 99.8351 99.6913 99.6312 99.946 99.9986 99.7282 99.4655 99.9961 99.9749 99.9939 99.9838 99.9748 99.9432 99.5081 97.2158 99.9908 99.9786 99.821 99.9662 99.9861 99.8145
H-29	99.67649931066177	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) . get ( nex@@ tnode ) + length _ by _ edge . get ( nex@@ tnode ) + 1 ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 95.9929 99.8351 99.6913 99.6312 99.946 99.9986 99.7282 99.4655 99.9961 99.9749 99.9939 99.9838 99.9748 99.9432 99.0514 99.1505 99.9545 99.9995 99.3966 98.3199 99.9725 99.9776 99.9761 99.6694
H-29	99.67644391741071	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get CaMeL Count ( ) + 1 ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.4045 96.6082 99.9499 99.9295 97.8446 99.083 99.9765 99.9743 99.9674 99.8112
H-29	99.67039137620192	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get CaMeL Value ( ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.4045 97.1501 99.992 99.9723 99.7843 99.9603 99.9886 96.7871
H-29	99.66706085205078	un@@ visited CaMeL Nodes + length _ by _ edge . get ( nex@@ tnode ) + length _ by _ edge . get ( nex@@ tnode ) ) ) ;
P-29	99.9422 99.9992 99.9871 94.9344 99.5269 99.9891 99.9851 99.9906 99.9869 99.9403 99.9692 99.2071 99.5641 99.9585 99.9995 99.5942 99.1379 99.9936 99.9675 99.9924 99.9811 99.9951 99.99 99.6941 99.3646 99.953 99.9994 99.2497 99.9514 99.9878 99.803
H-29	99.6663589477539	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) ) + length _ by _ edge . get ( Arrays . as CaMeL List ( node ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 98.826 97.2466 99.4631 99.9931 99.9811 99.9915 99.9861 99.8397 99.9705 99.3543 99.0698 99.9983 99.9929 99.9886 99.9976 99.9918 99.926 97.4072 99.1508 99.9106 99.989 99.8722
H-29	99.66135886863425	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( nex@@ tnode ) ) ) ; ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.2319 99.9481 99.9995 98.9893 99.9394 99.9889 95.3133 99.8591
H-29	99.66018150592673	un@@ visited CaMeL Nodes , length _ by _ edge . get ( Arrays . as CaMeL List ( node , nex@@ tnode ) ) ) ) ;
P-29	99.9422 99.9992 99.9871 95.6321 98.5544 99.9753 99.9698 99.9877 99.9874 99.7149 99.9675 99.1342 98.2515 99.9977 99.9911 99.9909 99.9966 99.9852 99.9432 99.9641 99.9079 99.9808 99.9964 99.7735 99.9198 99.9885 99.9837 99.9113
H-29	99.65869140625	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) ) + length _ by _ edge . get ( nex@@ tnode ) + 1 ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 98.826 97.2466 99.4631 99.9931 99.9811 99.9915 99.9861 99.8397 99.9705 99.3543 99.2006 99.9537 99.9991 99.0549 98.3604 99.9828 99.984 99.8794
H-29	99.65727015904018	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get CaMeL Type ( ) + 1 ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.4045 96.0406 99.9464 99.9852 98.2512 98.6731 99.9496 99.9743 99.9703 99.8178
H-29	99.65478515625	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( node ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 97.1536 99.9626 99.9005 99.9399 99.9833 96.8427
H-29	99.65442346643519	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) ) + length _ by _ edge . get ( nex@@ tnode ) ) ; }
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 98.826 97.2466 99.4631 99.9931 99.9811 99.9915 99.9861 99.8397 99.9705 99.3543 99.2006 99.9537 99.9991 99.4915 99.9789 98.2361 99.7807
H-29	99.6538794732863	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) . get ( nex@@ tnode ) + length _ by _ edge . get ( node ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 95.9929 99.8351 99.6913 99.6312 99.946 99.9986 99.7282 99.4655 99.9961 99.9749 99.9939 99.9838 99.9748 99.9432 99.0514 97.0467 99.964 99.9219 99.9492 99.9729 99.8317
H-29	99.65101841517857	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get CaMeL Key ( ) + 1 ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.4045 95.6815 99.9794 99.9728 98.1866 98.9332 99.9199 99.9714 99.9697 99.8186
H-29	99.64988356370192	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get CaMeL Count ( ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.4045 96.6082 99.9499 99.9295 99.8458 99.9679 99.9803 96.8202
H-29	99.64895945581897	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( nex@@ tnode ) + 1 ) ) ; ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.2319 99.9481 99.9995 99.5134 98.1726 99.9795 99.9789 99.9859 95.5943 99.8287
H-29	99.64869005926724	node , nex@@ tnode ) + length _ by _ edge . get ( Arrays . as CaMeL List ( node , nex@@ tnode ) ) ) ;
P-29	99.0187 99.6273 99.9577 99.9146 97.9051 99.2317 99.9874 99.9758 99.9911 99.9855 99.8887 99.9725 99.4705 98.7696 99.9981 99.9927 99.9894 99.9973 99.9934 99.9319 99.9506 99.9175 99.9874 99.9969 99.6817 99.9868 99.9919 99.8432
H-29	99.64633413461539	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) , Arrays . as CaMeL List ( node , nex@@ tnode ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 95.9428 96.3542 99.9986 99.9658 99.9946 99.9903 99.9938 99.8619 99.8273 99.8777 99.9744 99.9949 99.8428 99.9894 99.9925 99.8271
H-29	99.64602322048611	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + - length _ by _ edge . get ( nex@@ tnode ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 95.4058 99.5162 99.9935 99.9561 99.9885 99.9886 99.9432 99.9637 98.9279 99.0421 99.9584 99.9995 99.1463 99.9422 99.9819 99.7382
H-29	99.64199037905092	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( nex@@ tnode ) ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.2319 99.9481 99.9995 98.9893 99.9394 94.8674 99.9922 99.7788
H-29	99.64125639816811	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( nex@@ tnode ) + nex@@ tnode ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.2319 99.9481 99.9995 99.5134 94.2163 99.7949 99.847 99.963 99.9801 99.5152
H-29	99.64124348958333	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( nex@@ tnode ) + 1 ) ) ; } }
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.2319 99.9481 99.9995 99.5134 98.1726 99.9795 99.9789 99.9859 98.6292 96.589 99.622
H-29	99.64059884207589	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( nex@@ tnode ) ) ) ; } }
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.2319 99.9481 99.9995 98.9893 99.9394 99.9889 98.2802 96.2531 99.7193
H-29	99.63965685614224	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( nex@@ tnode ) + 1 ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.2319 99.9481 99.9995 99.5134 98.1726 99.9795 99.9789 95.4075 99.9864 99.7452
H-29	99.635986328125	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get ( nex@@ tnode ) + - 1 ) ) ; }
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.1962 99.2319 99.9481 99.9995 99.5134 96.8186 98.037 99.9771 99.9827 99.9846 98.1257 99.874
H-29	99.63296508789062	un@@ visited CaMeL Nodes . get ( Arrays . as CaMeL List ( node , nex@@ tnode ) ) ) ) ; }
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 95.3209 99.9976 99.9876 99.9926 99.995 99.958 99.9304 99.9526 99.8995 99.9818 99.995 99.7646 99.8483 99.9851 99.9697 97.1279 99.9281
H-29	99.63053676060268	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + 1 ) + length _ by _ edge . get ( nex@@ tnode ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 97.9564 99.9704 96.4508 99.0875 99.9855 99.9688 99.9839 99.9792 99.8669 99.9654 99.2443 99.1664 99.9601 99.999 99.4706 99.9761 99.6732
H-29	99.6279296875	Collections . as CaMeL List ( node , nex@@ tnode ) + length _ by _ edge . get ( nex@@ tnode ) ) ) ;
P-29	99.9988 99.9539 99.9992 99.9943 99.9857 99.9033 99.8726 99.8676 99.9693 99.9932 98.4402 99.4994 99.9954 99.9869 99.9939 99.9879 99.9658 99.9631 99.4849 99.241 99.9661 99.9995 99.1076 99.947 99.9808 99.7931
H-29	99.62688739483173	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + Collections . as CaMeL List ( node , nex@@ tnode ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 92.64 99.9985 99.863 99.9932 99.986 99.9918 99.8651 99.6492 99.8464 99.9665 99.9951 99.7602 99.9851 99.992 99.8164
H-29	99.62505634014423	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get CaMeL Type ( ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.4045 96.0406 99.9464 99.9852 99.7551 99.9629 99.986 96.7799
H-29	99.62263436153017	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get CaMeL Value ( ) + 1 ) ) ; }
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.4045 97.1501 99.992 99.9723 98.1306 98.4603 99.9516 99.9748 99.9735 97.7987 99.8569
H-29	99.61981879340277	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + Arrays . as CaMeL List ( node , nex@@ tnode ) ) ) ; }
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 93.7576 99.9987 99.9801 99.9936 99.9898 99.9959 99.8568 99.8047 99.8868 99.9728 99.9951 99.7711 99.9869 99.9906 97.9008 99.9033
H-29	99.6166359230324	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) , length _ by _ edge . get ( nex@@ tnode ) ) ) ; }
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 95.9428 99.0679 99.9869 99.9878 99.9921 99.9862 99.766 99.9585 99.0234 99.3867 99.9511 99.9995 99.2573 99.952 99.9918 98.1177 99.9046
H-29	99.61359112079327	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get CaMeL Offset ( ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.4045 95.6689 99.9599 99.9868 99.8197 99.9575 99.9894 96.7758
H-29	99.61208871694711	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get CaMeL Key ( ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.4045 95.6815 99.9794 99.9728 99.7442 99.9583 99.9877 96.795
H-29	99.61180579144022	un@@ visited CaMeL Nodes . get ( Arrays . as CaMeL List ( node , nex@@ tnode ) ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 95.3209 99.9976 99.9876 99.9926 99.995 99.958 99.9304 99.9526 99.8995 99.9818 99.995 99.7646 99.8483 99.9851 99.9697 96.9363
H-29	99.60640625	un@@ visited CaMeL Nodes . get ( Arrays . as CaMeL List ( node , nex@@ tnode ) + 1 ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 95.3209 99.9976 99.9876 99.9926 99.995 99.958 99.9304 99.9526 99.8995 99.9818 99.995 98.3647 97.5906 99.9431 99.8633 99.9807 99.954 99.8961
H-29	99.60413953993056	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . get CaMeL Value ( ) ) ) ; }
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 99.9499 99.4045 97.1501 99.992 99.9723 99.7843 99.9603 99.9886 97.7543 96.9142
H-29	99.60214233398438	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge . size ( ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 99.9677 95.4116 99.9623 99.9061 99.9479 99.9911 99.9774 96.8143
H-29	99.58808244977679	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 98.826 99.9195 99.9867 96.1239
H-29	99.58337933084239	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) . get ( nex@@ tnode ) + 1 ) ) ; }
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 95.9929 99.8351 99.6913 99.6312 99.946 99.9986 99.7282 97.8232 99.9754 99.9736 99.9702 98.5802 99.895
H-29	99.54755401611328	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + 1 ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 97.9564 99.9704 99.962 99.9909 95.9307
H-29	99.53453369140625	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + length _ by _ edge ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 99.5619 99.9959 99.9849 99.9935 99.9865 96.193 99.9727 99.9726 96.0792
H-29	99.5118049172794	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + 1 ) ) ; }
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 97.9564 99.9704 99.962 99.9909 98.1254 96.7451
H-29	99.43406575520834	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) ) ) ; }
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 98.826 99.9195 99.9867 97.0017 96.4
H-29	99.43088942307692	un@@ visited CaMeL Nodes . get ( node ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 97.1485 99.9691 99.8672 99.9142 99.9852 96.1608
H-29	99.41863250732422	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + 0 ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 95.9636 99.888 99.9635 99.987 95.9455
H-29	99.40157318115234	un@@ visited CaMeL Nodes . get ( nex@@ tnode ) + $NUMBER$ ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 99.9691 99.9904 99.8399 99.981 99.9995 99.5734 95.6089 99.9568 99.9687 99.9878 95.9525
H-29	99.28546142578125	un@@ visited CaMeL Nodes . size ( ) ) ) ;
P-29	99.9422 99.9992 99.9871 99.9572 96.1701 99.9982 99.975 99.8649 99.9777 99.986 95.8564
H-29	98.88877868652344	un@@ visited CaMeL Nodes ) ) ;
P-29	99.9422 99.9992 99.9871 95.9309 99.9252 99.9826 95.6317
H-29	98.87713623046875	node , nex@@ tnode ) ) ;
P-29	99.0187 99.6273 99.9577 99.9146 99.8474 99.9876 95.8068
H-29	98.07647094726562	node ) ) ;
P-29	98.103 99.8896 99.9897 95.5432
S-30	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) ) ;
T-30	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( k , j ) ) ) ;
H-30	99.97764144405242	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 99.8464 99.9975 99.9976 99.9994 99.986 99.9987 99.9933 99.999 99.9491 99.999 99.9995 99.9992 99.9995 99.9991 99.3155 99.9138 99.9507 99.9912 99.9775 99.6412 99.8114 99.9974 99.997 99.9993 99.9845 99.9986 99.9927 99.9987 99.9586 99.9991 99.9994 99.9993 99.9995 99.9993 99.346 99.9519 99.9483 99.9897 99.9739 98.7194 99.9861 103.7142
H-30	99.97726341985887	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 99.8464 99.9975 99.9976 99.9994 99.986 99.9987 99.9933 99.999 99.9491 99.999 99.9995 99.9992 99.9995 99.9991 99.1497 99.9892 99.9711 99.9923 99.9798 99.6579 99.7994 99.9973 99.9972 99.9993 99.9844 99.9987 99.9928 99.9988 99.9582 99.999 99.9994 99.9992 99.9995 99.9993 99.346 99.9332 99.9428 99.9894 99.9732 98.7846 99.9866 103.7132
H-30	99.97393208165323	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 99.8464 99.9975 99.9976 99.9994 99.986 99.9987 99.9933 99.999 99.9491 99.999 99.9995 99.9992 99.9995 99.9991 99.1497 99.9892 99.9711 99.9923 99.9798 99.6579 99.7994 99.9973 99.9972 99.9993 99.9844 99.9987 99.9928 99.9988 99.9582 99.999 99.9994 99.9992 99.9995 99.9993 99.0984 99.9906 99.9669 99.9907 99.9753 98.7402 99.987 103.7138
H-30	99.97357768397177	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 99.8464 99.9975 99.9976 99.9994 99.986 99.9987 99.9933 99.999 99.9491 99.999 99.9995 99.9992 99.9995 99.9991 99.3155 99.9138 99.9507 99.9912 99.9775 99.6412 99.8114 99.9974 99.997 99.9993 99.9845 99.9986 99.9927 99.9987 99.9586 99.9991 99.9994 99.9993 99.9995 99.9993 99.0718 99.9908 99.9683 99.9908 99.9756 98.6799 99.9864 103.7147
H-30	99.96741903981855	length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 98.9425 99.902 99.9504 99.9902 99.9805 99.6919 99.8576 99.9976 99.9974 99.9994 99.986 99.9987 99.9933 99.9989 99.9498 99.999 99.9995 99.9993 99.9995 99.9991 99.3161 99.9275 99.9543 99.9912 99.9785 99.664 99.8053 99.9973 99.9969 99.9993 99.9844 99.9986 99.9927 99.9986 99.9577 99.9991 99.9994 99.9993 99.9995 99.9994 99.3494 99.9626 99.9527 99.9898 99.9745 98.6823 99.9856 103.715
H-30	99.96656848538306	length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 98.9425 99.902 99.9504 99.9902 99.9805 99.6919 99.8576 99.9976 99.9974 99.9994 99.986 99.9987 99.9933 99.9989 99.9498 99.999 99.9995 99.9993 99.9995 99.9991 99.1226 99.9893 99.9719 99.9921 99.9805 99.6799 99.7929 99.9972 99.9971 99.9993 99.9842 99.9986 99.9929 99.9987 99.9576 99.999 99.9994 99.9992 99.9995 99.9994 99.3587 99.9531 99.9489 99.9895 99.9738 98.7431 99.9862 103.714
H-30	99.9626228578629	length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 98.9425 99.902 99.9504 99.9902 99.9805 99.6919 99.8576 99.9976 99.9974 99.9994 99.986 99.9987 99.9933 99.9989 99.9498 99.999 99.9995 99.9993 99.9995 99.9991 99.3161 99.9275 99.9543 99.9912 99.9785 99.664 99.8053 99.9973 99.9969 99.9993 99.9844 99.9986 99.9927 99.9986 99.9577 99.9991 99.9994 99.9993 99.9995 99.9994 99.0403 99.9909 99.9691 99.9907 99.9759 98.6457 99.9859 103.7156
H-30	99.96203219506049	length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 98.9425 99.902 99.9504 99.9902 99.9805 99.6919 99.8576 99.9976 99.9974 99.9994 99.986 99.9987 99.9933 99.9989 99.9498 99.999 99.9995 99.9993 99.9995 99.9991 99.1226 99.9893 99.9719 99.9921 99.9805 99.6799 99.7929 99.9972 99.9971 99.9993 99.9842 99.9986 99.9929 99.9987 99.9576 99.999 99.9994 99.9992 99.9995 99.9994 99.0561 99.9908 99.9676 99.9905 99.9755 98.7043 99.9865 103.7147
H-30	99.94296875	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 99.8464 99.9975 99.9976 99.9994 99.986 99.9987 99.9933 99.999 99.9491 99.999 99.9995 99.9992 99.9995 99.9991 99.1497 99.9892 99.9711 99.9923 99.9798 99.6579 99.7994 99.9973 99.9972 99.9993 99.9844 99.9987 99.9928 99.9988 99.9582 99.999 99.9994 99.9992 99.9995 99.9993 99.346 97.2225 99.9094 99.4697 99.9809 103.7279
H-30	99.938232421875	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 99.8464 99.9975 99.9976 99.9994 99.986 99.9987 99.9933 99.999 99.9491 99.999 99.9995 99.9992 99.9995 99.9991 99.3155 99.9138 99.9507 99.9912 99.9775 99.6412 99.8114 99.9974 99.997 99.9993 99.9845 99.9986 99.9927 99.9987 99.9586 99.9991 99.9994 99.9993 99.9995 99.9993 99.346 96.8868 99.9131 99.4556 99.9808 103.7281
H-30	99.92803364415323	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( k , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 99.8464 99.9975 99.9976 99.9994 99.986 99.9987 99.9933 99.999 99.9491 99.999 99.9995 99.9992 99.9995 99.9991 99.3155 99.9138 99.9507 99.9912 99.9775 99.6412 99.8114 99.9974 99.997 99.9993 99.9845 99.9986 99.9927 99.9987 99.9586 99.9991 99.9994 99.9993 99.9995 99.9993 96.2893 99.8967 99.9595 99.9893 99.9738 98.747 99.9852 103.7135
H-30	99.92679036458334	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 99.8464 99.9975 99.9976 99.9994 99.986 99.9987 99.9933 99.999 99.9491 99.999 99.9995 99.9992 99.9995 99.9991 99.3155 97.4803 99.9363 99.0928 99.8028 99.9975 99.9963 99.9991 99.988 99.9989 99.9923 99.9986 99.9636 99.999 99.9993 99.9994 99.9995 99.9991 99.3157 99.9375 99.9504 99.9897 99.9753 98.6623 99.987 103.7734
H-30	99.92610677083333	length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 98.9425 99.902 99.9504 99.9902 99.9805 99.6919 99.8576 99.9976 99.9974 99.9994 99.986 99.9987 99.9933 99.9989 99.9498 99.999 99.9995 99.9993 99.9995 99.9991 99.1226 99.9893 99.9719 99.9921 99.9805 99.6799 99.7929 99.9972 99.9971 99.9993 99.9842 99.9986 99.9929 99.9987 99.9576 99.999 99.9994 99.9992 99.9995 99.9994 99.3587 96.8633 99.9119 99.4638 99.9809 103.7281
H-30	99.92413736979167	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 99.8464 99.9975 99.9976 99.9994 99.986 99.9987 99.9933 99.999 99.9491 99.999 99.9995 99.9992 99.9995 99.9991 99.3155 97.4803 99.9363 99.0928 99.8028 99.9975 99.9963 99.9991 99.988 99.9989 99.9923 99.9986 99.9636 99.999 99.9993 99.9994 99.9995 99.9991 99.1325 99.9926 99.9704 99.9912 99.9781 98.6056 99.9873 103.7745
H-30	99.92364908854167	length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 98.9425 99.902 99.9504 99.9902 99.9805 99.6919 99.8576 99.9976 99.9974 99.9994 99.986 99.9987 99.9933 99.9989 99.9498 99.999 99.9995 99.9993 99.9995 99.9991 99.3161 99.9275 99.9543 99.9912 99.9785 99.664 99.8053 99.9973 99.9969 99.9993 99.9844 99.9986 99.9927 99.9986 99.9577 99.9991 99.9994 99.9993 99.9995 99.9994 99.3494 96.6257 99.9152 99.4507 99.9807 103.7284
H-30	99.92363911290323	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( k , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 99.8464 99.9975 99.9976 99.9994 99.986 99.9987 99.9933 99.999 99.9491 99.999 99.9995 99.9992 99.9995 99.9991 99.1497 99.9892 99.9711 99.9923 99.9798 99.6579 99.7994 99.9973 99.9972 99.9993 99.9844 99.9987 99.9928 99.9988 99.9582 99.999 99.9994 99.9992 99.9995 99.9993 96.0147 99.9079 99.961 99.9894 99.9739 98.7993 99.986 103.7129
H-30	99.923583984375	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( k , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 99.8464 99.9975 99.9976 99.9994 99.986 99.9987 99.9933 99.999 99.9491 99.999 99.9995 99.9992 99.9995 99.9991 95.9854 99.8569 99.964 99.9903 99.9774 99.6345 99.8079 99.9974 99.997 99.9993 99.9843 99.9987 99.9929 99.9988 99.9579 99.999 99.9994 99.9992 99.9995 99.9994 99.3723 99.9317 99.9441 99.9879 99.974 98.7543 99.9858 103.7133
H-30	99.92334759424604	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) ) ; }
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 99.8464 99.9975 99.9976 99.9994 99.986 99.9987 99.9933 99.999 99.9491 99.999 99.9995 99.9992 99.9995 99.9991 99.3155 99.9138 99.9507 99.9912 99.9775 99.6412 99.8114 99.9974 99.997 99.9993 99.9845 99.9986 99.9927 99.9987 99.9586 99.9991 99.9994 99.9993 99.9995 99.9993 99.346 99.9519 99.9483 99.9897 99.9739 98.7194 99.9861 96.3154 103.956
H-30	99.92319258432539	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) ) ; }
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 99.8464 99.9975 99.9976 99.9994 99.986 99.9987 99.9933 99.999 99.9491 99.999 99.9995 99.9992 99.9995 99.9991 99.1497 99.9892 99.9711 99.9923 99.9798 99.6579 99.7994 99.9973 99.9972 99.9993 99.9844 99.9987 99.9928 99.9988 99.9582 99.999 99.9994 99.9992 99.9995 99.9993 99.346 99.9332 99.9428 99.9894 99.9732 98.7846 99.9866 96.3275 103.9567
H-30	99.92124720982143	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) ) ; }
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 99.8464 99.9975 99.9976 99.9994 99.986 99.9987 99.9933 99.999 99.9491 99.999 99.9995 99.9992 99.9995 99.9991 99.1497 99.9892 99.9711 99.9923 99.9798 99.6579 99.7994 99.9973 99.9972 99.9993 99.9844 99.9987 99.9928 99.9988 99.9582 99.999 99.9994 99.9992 99.9995 99.9993 99.0984 99.9906 99.9669 99.9907 99.9753 98.7402 99.987 96.4252 103.9435
H-30	99.921142578125	length _ by _ path . get ( Arrays . as CaMeL List ( j ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 98.9425 97.6084 99.9558 99.1824 99.8452 99.9978 99.9969 99.9993 99.9905 99.9986 99.9919 99.9989 99.9554 99.999 99.9993 99.9993 99.9993 99.9994 99.2215 99.9911 99.9715 99.9911 99.9807 99.7197 99.8268 99.9975 99.9968 99.9993 99.9837 99.9988 99.9931 99.9984 99.961 99.9991 99.9993 99.9994 99.9994 99.9989 99.3492 99.903 99.9499 99.9895 99.974 98.6804 99.9856 103.7741
H-30	99.92069692460318	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) ) ; }
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 99.8464 99.9975 99.9976 99.9994 99.986 99.9987 99.9933 99.999 99.9491 99.999 99.9995 99.9992 99.9995 99.9991 99.3155 99.9138 99.9507 99.9912 99.9775 99.6412 99.8114 99.9974 99.997 99.9993 99.9845 99.9986 99.9927 99.9987 99.9586 99.9991 99.9994 99.9993 99.9995 99.9993 99.0718 99.9908 99.9683 99.9908 99.9756 98.6799 99.9864 96.4123 103.9448
H-30	99.92026839717742	length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( k , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 98.9425 99.902 99.9504 99.9902 99.9805 99.6919 99.8576 99.9976 99.9974 99.9994 99.986 99.9987 99.9933 99.9989 99.9498 99.999 99.9995 99.9993 99.9995 99.9991 99.3161 99.9275 99.9543 99.9912 99.9785 99.664 99.8053 99.9973 99.9969 99.9993 99.9844 99.9986 99.9927 99.9986 99.9577 99.9991 99.9994 99.9993 99.9995 99.9994 96.449 99.9013 99.9601 99.9891 99.9741 98.7169 99.9846 103.7141
H-30	99.9186279296875	length _ by _ path . get ( Arrays . as CaMeL List ( j ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 98.9425 97.6084 99.9558 99.1824 99.8452 99.9978 99.9969 99.9993 99.9905 99.9986 99.9919 99.9989 99.9554 99.999 99.9993 99.9993 99.9993 99.9994 99.2413 99.8866 99.9493 99.989 99.9781 99.7042 99.8357 99.9975 99.9964 99.9994 99.9839 99.9987 99.993 99.9983 99.9607 99.9991 99.9993 99.9994 99.9994 99.9989 99.3451 99.9333 99.9559 99.9897 99.9752 98.6137 99.9849 103.7753
H-30	99.91753743489583	length _ by _ path . get ( Arrays . as CaMeL List ( j ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 98.9425 97.6084 99.9558 99.1824 99.8452 99.9978 99.9969 99.9993 99.9905 99.9986 99.9919 99.9989 99.9554 99.999 99.9993 99.9993 99.9993 99.9994 99.2215 99.9911 99.9715 99.9911 99.9807 99.7197 99.8268 99.9975 99.9968 99.9993 99.9837 99.9988 99.9931 99.9984 99.961 99.9991 99.9993 99.9994 99.9994 99.9989 99.0867 99.9908 99.9731 99.9909 99.9774 98.609 99.986 103.7752
H-30	99.91422526041667	length _ by _ path . get ( Arrays . as CaMeL List ( j ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 98.9425 97.6084 99.9558 99.1824 99.8452 99.9978 99.9969 99.9993 99.9905 99.9986 99.9919 99.9989 99.9554 99.999 99.9993 99.9993 99.9993 99.9994 99.2413 99.8866 99.9493 99.989 99.9781 99.7042 99.8357 99.9975 99.9964 99.9994 99.9839 99.9987 99.993 99.9983 99.9607 99.9991 99.9993 99.9994 99.9994 99.9989 99.065 99.9905 99.9737 99.9908 99.978 98.5494 99.9851 103.7764
H-30	99.91259765625	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 99.8464 99.9975 99.9976 99.9994 99.986 99.9987 99.9933 99.999 99.9491 99.999 99.9995 99.9992 99.9995 99.9991 99.3155 99.9138 99.9507 99.9912 99.9775 98.7763 99.9894 99.9567
H-30	99.91012137276786	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 99.8464 99.9975 99.9976 99.9994 99.986 99.9987 99.9933 99.999 99.9491 99.999 99.9995 99.9992 99.9995 99.9991 99.1497 99.9892 99.9711 99.9923 99.9798 98.7363 99.9899 99.9584
H-30	99.89690816627359	length _ by _ path . get ( i ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 97.0229 99.9213 98.9054 99.764 99.9963 99.9953 99.9988 99.985 99.9984 99.9892 99.9982 99.8137 99.9988 99.9994 99.9983 99.9993 99.9978 99.2557 99.9879 99.9695 99.9907 99.9772 99.6732 99.8207 99.9976 99.9973 99.9994 99.9848 99.9987 99.9928 99.9989 99.9356 99.9991 99.9993 99.9991 99.9993 99.999 99.3139 99.8835 99.9403 99.9895 99.9712 98.7598 99.9866 102.926
H-30	99.896240234375	length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 98.9425 99.902 99.9504 99.9902 99.9805 99.6919 99.8576 99.9976 99.9974 99.9994 99.986 99.9987 99.9933 99.9989 99.9498 99.999 99.9995 99.9993 99.9995 99.9991 99.3161 99.9275 99.9543 99.9912 99.9785 98.7198 99.9888 99.9573
H-30	99.89513929834905	length _ by _ path . get ( i ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 97.0229 99.9213 98.9054 99.764 99.9963 99.9953 99.9988 99.985 99.9984 99.9892 99.9982 99.8137 99.9988 99.9994 99.9983 99.9993 99.9978 99.2557 99.9879 99.9695 99.9907 99.9772 99.6732 99.8207 99.9976 99.9973 99.9994 99.9848 99.9987 99.9928 99.9989 99.9356 99.9991 99.9993 99.9991 99.9993 99.999 99.1461 99.9881 99.9701 99.9912 99.9742 98.6942 99.9872 102.9263
H-30	99.89382186025944	length _ by _ path . get ( i ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 97.0229 99.9213 98.9054 99.764 99.9963 99.9953 99.9988 99.985 99.9984 99.9892 99.9982 99.8137 99.9988 99.9994 99.9983 99.9993 99.9978 99.2648 99.8509 99.9437 99.9879 99.9742 99.6641 99.8307 99.9975 99.9971 99.9994 99.985 99.9987 99.9927 99.9988 99.9366 99.9991 99.9993 99.9992 99.9993 99.999 99.3167 99.932 99.9483 99.9895 99.9724 98.6936 99.9861 102.9265
H-30	99.89267113095238	length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 98.9425 99.902 99.9504 99.9902 99.9805 99.6919 99.8576 99.9976 99.9974 99.9994 99.986 99.9987 99.9933 99.9989 99.9498 99.999 99.9995 99.9993 99.9995 99.9991 99.1226 99.9893 99.9719 99.9921 99.9805 98.6785 99.9894 99.9592
H-30	99.89049602004717	length _ by _ path . get ( i ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 97.0229 99.9213 98.9054 99.764 99.9963 99.9953 99.9988 99.985 99.9984 99.9892 99.9982 99.8137 99.9988 99.9994 99.9983 99.9993 99.9978 99.2648 99.8509 99.9437 99.9879 99.9742 99.6641 99.8307 99.9975 99.9971 99.9994 99.985 99.9987 99.9927 99.9988 99.9366 99.9991 99.9993 99.9992 99.9993 99.999 99.1173 99.9878 99.9707 99.9908 99.9746 98.6349 99.9866 102.9273
H-30	99.88855210790095	length _ by _ path . get ( j ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 96.6468 99.9609 98.7246 99.7724 99.9961 99.995 99.9988 99.9855 99.9985 99.9898 99.9982 99.8401 99.9988 99.9994 99.9984 99.9993 99.9978 99.2864 99.9897 99.9702 99.9904 99.9792 99.7007 99.8225 99.9975 99.9974 99.9994 99.985 99.9987 99.9929 99.9988 99.927 99.9991 99.9993 99.9991 99.9993 99.999 99.3074 99.9052 99.9436 99.9894 99.9736 98.7217 99.9863 102.9265
H-30	99.8878335053066	length _ by _ path . get ( k ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 96.696 99.9564 98.7927 99.7626 99.996 99.9952 99.9988 99.9857 99.9985 99.9898 99.9984 99.7586 99.9986 99.9993 99.9982 99.9993 99.9978 99.264 99.9881 99.9694 99.9902 99.9789 99.6785 99.8116 99.9974 99.9973 99.9993 99.9847 99.9987 99.9929 99.9988 99.9188 99.999 99.9993 99.9991 99.9993 99.999 99.3071 99.8888 99.9416 99.9893 99.9717 98.7514 99.9865 102.9267
H-30	99.88669111143868	length _ by _ path . get ( j ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 96.6468 99.9609 98.7246 99.7724 99.9961 99.995 99.9988 99.9855 99.9985 99.9898 99.9982 99.8401 99.9988 99.9994 99.9984 99.9993 99.9978 99.2864 99.9897 99.9702 99.9904 99.9792 99.7007 99.8225 99.9975 99.9974 99.9994 99.985 99.9987 99.9929 99.9988 99.927 99.9991 99.9993 99.9991 99.9993 99.999 99.1557 99.9888 99.9704 99.991 99.9766 98.6593 99.9868 102.9268
H-30	99.88614755306604	length _ by _ path . get ( k ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 96.696 99.9564 98.7927 99.7626 99.996 99.9952 99.9988 99.9857 99.9985 99.9898 99.9984 99.7586 99.9986 99.9993 99.9982 99.9993 99.9978 99.264 99.9881 99.9694 99.9902 99.9789 99.6785 99.8116 99.9974 99.9973 99.9993 99.9847 99.9987 99.9929 99.9988 99.9188 99.999 99.9993 99.9991 99.9993 99.999 99.1488 99.988 99.9705 99.9909 99.975 98.6867 99.987 102.927
H-30	99.88464585790095	length _ by _ path . get ( j ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 96.6468 99.9609 98.7246 99.7724 99.9961 99.995 99.9988 99.9855 99.9985 99.9898 99.9982 99.8401 99.9988 99.9994 99.9984 99.9993 99.9978 99.2391 99.8772 99.9474 99.9877 99.976 99.6944 99.8314 99.9975 99.9972 99.9994 99.9853 99.9987 99.9928 99.9987 99.9291 99.9991 99.9993 99.9992 99.9993 99.999 99.3096 99.9343 99.9495 99.9894 99.9749 98.659 99.9857 102.927
H-30	99.88428655660377	length _ by _ path . get ( k ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 96.696 99.9564 98.7927 99.7626 99.996 99.9952 99.9988 99.9857 99.9985 99.9898 99.9984 99.7586 99.9986 99.9993 99.9982 99.9993 99.9978 99.2521 99.8528 99.9437 99.9874 99.9755 99.6702 99.8212 99.9974 99.9972 99.9993 99.985 99.9986 99.9928 99.9987 99.9215 99.9991 99.9993 99.9992 99.9993 99.999 99.3096 99.9295 99.9486 99.9893 99.9729 98.6869 99.9859 102.9272
H-30	99.88187278891509	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( j ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 99.8464 99.9975 99.9976 99.9994 99.986 99.9987 99.9933 99.999 99.9491 99.999 99.9995 99.9992 99.9995 99.9991 99.1497 99.9892 99.9711 99.9923 99.9798 99.6579 99.7994 99.9973 99.9972 99.9993 99.9844 99.9987 99.9928 99.9988 94.2265 99.9595 99.7615 99.9643 102.8606
H-30	99.88166089327831	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + length _ by _ path . get ( j ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 99.8464 99.9975 99.9976 99.9994 99.986 99.9987 99.9933 99.999 99.9491 99.999 99.9995 99.9992 99.9995 99.9991 99.3155 99.9138 99.9507 99.9912 99.9775 99.6412 99.8114 99.9974 99.997 99.9993 99.9845 99.9986 99.9927 99.9987 94.1654 99.9537 99.7538 99.9635 102.8639
H-30	99.88160561615567	length _ by _ path . get ( j ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 96.6468 99.9609 98.7246 99.7724 99.9961 99.995 99.9988 99.9855 99.9985 99.9898 99.9982 99.8401 99.9988 99.9994 99.9984 99.9993 99.9978 99.2391 99.8772 99.9474 99.9877 99.976 99.6944 99.8314 99.9975 99.9972 99.9994 99.9853 99.9987 99.9928 99.9987 99.9291 99.9991 99.9993 99.9992 99.9993 99.999 99.1278 99.9884 99.9712 99.9907 99.9772 98.6002 99.9862 102.9278
H-30	99.88118182488208	length _ by _ path . get ( k ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 96.696 99.9564 98.7927 99.7626 99.996 99.9952 99.9988 99.9857 99.9985 99.9898 99.9984 99.7586 99.9986 99.9993 99.9982 99.9993 99.9978 99.2521 99.8528 99.9437 99.9874 99.9755 99.6702 99.8212 99.9974 99.9972 99.9993 99.985 99.9986 99.9928 99.9987 99.9215 99.9991 99.9993 99.9992 99.9993 99.999 99.119 99.9876 99.971 99.9907 99.9755 98.6275 99.9864 102.928
H-30	99.86382446289062	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 99.8464 99.9975 99.9976 99.9994 99.986 99.9987 99.9933 99.999 99.9491 99.999 99.9995 99.9992 99.9995 99.9991 99.3155 97.4803 99.9363 99.4472 99.9839 99.9316
H-30	99.8540371981534	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + 1 ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 99.8464 99.9975 99.9976 99.9994 99.986 99.9987 99.9933 99.999 99.9491 99.999 99.9995 99.9992 99.9995 99.9991 99.1497 99.9892 99.9711 99.9923 99.9798 99.6579 96.5677 99.8561 99.9828 99.9726
H-30	99.85385964133523	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + 1 ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 99.8464 99.9975 99.9976 99.9994 99.986 99.9987 99.9933 99.999 99.9491 99.999 99.9995 99.9992 99.9995 99.9991 99.3155 99.9138 99.9507 99.9912 99.9775 99.6412 96.5144 99.848 99.9849 99.9744
H-30	99.84320068359375	length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 98.9425 99.902 99.9504 99.9902 99.9805 99.6919 99.8576 99.9976 99.9974 99.9994 99.986 99.9987 99.9933 99.9989 99.9498 99.999 99.9995 99.9993 99.9995 99.9991 99.3161 97.3103 99.941 99.4371 99.9834 99.9314
H-30	99.84044300426136	length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + 1 ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 98.9425 99.902 99.9504 99.9902 99.9805 99.6919 99.8576 99.9976 99.9974 99.9994 99.986 99.9987 99.9933 99.9989 99.9498 99.999 99.9995 99.9993 99.9995 99.9991 99.3161 99.9275 99.9543 99.9912 99.9785 99.664 96.5285 99.8512 99.9844 99.9748
H-30	99.8395663174716	length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + 1 ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 98.9425 99.902 99.9504 99.9902 99.9805 99.6919 99.8576 99.9976 99.9974 99.9994 99.986 99.9987 99.9933 99.9989 99.9498 99.999 99.9995 99.9993 99.9995 99.9991 99.1226 99.9893 99.9719 99.9921 99.9805 99.6799 96.5814 99.8587 99.9823 99.9731
H-30	99.83322975852273	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + $NUMBER$ ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 99.8464 99.9975 99.9976 99.9994 99.986 99.9987 99.9933 99.999 99.9491 99.999 99.9995 99.9992 99.9995 99.9991 99.1497 99.9892 99.9711 99.9923 99.9798 99.6579 95.9505 99.5677 99.9746 99.9709
H-30	99.83265904017857	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( k , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 99.8464 99.9975 99.9976 99.9994 99.986 99.9987 99.9933 99.999 99.9491 99.999 99.9995 99.9992 99.9995 99.9991 95.9854 99.8569 99.964 99.9903 99.9774 98.7926 99.9887 99.9579
H-30	99.83251953125	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + $NUMBER$ ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 99.8464 99.9975 99.9976 99.9994 99.986 99.9987 99.9933 99.999 99.9491 99.999 99.9995 99.9992 99.9995 99.9991 99.3155 99.9138 99.9507 99.9912 99.9775 99.6412 95.8796 99.5516 99.9784 99.9729
H-30	99.82413736979167	length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( k , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 98.9425 99.902 99.9504 99.9902 99.9805 99.6919 99.8576 99.9976 99.9974 99.9994 99.986 99.9987 99.9933 99.9989 99.9498 99.999 99.9995 99.9993 99.9995 99.9991 96.3224 99.8627 99.964 99.9897 99.9782 98.7412 99.988 99.9583
H-30	99.82279829545455	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + 0 ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 99.8464 99.9975 99.9976 99.9994 99.986 99.9987 99.9933 99.999 99.9491 99.999 99.9995 99.9992 99.9995 99.9991 99.1497 99.9892 99.9711 99.9923 99.9798 99.6579 95.5657 99.4873 99.9804 99.9714
H-30	99.82196335565476	length _ by _ path . get ( Arrays . as CaMeL List ( k , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 95.7824 99.9219 99.9625 99.9871 99.9818 99.6851 99.8547 99.9977 99.9975 99.9994 99.986 99.9987 99.9934 99.999 99.9479 99.999 99.9995 99.9993 99.9995 99.9991 99.3305 99.9022 99.9513 99.9896 99.9785 98.7566 99.9886 99.9571
H-30	99.82080078125	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + 0 ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 99.8464 99.9975 99.9976 99.9994 99.986 99.9987 99.9933 99.999 99.9491 99.999 99.9995 99.9992 99.9995 99.9991 99.3155 99.9138 99.9507 99.9912 99.9775 99.6412 95.4883 99.4228 99.9829 99.9732
H-30	99.8194580078125	length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + $NUMBER$ ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 98.9425 99.902 99.9504 99.9902 99.9805 99.6919 99.8576 99.9976 99.9974 99.9994 99.986 99.9987 99.9933 99.9989 99.9498 99.999 99.9995 99.9993 99.9995 99.9991 99.3161 99.9275 99.9543 99.9912 99.9785 99.664 95.8992 99.5655 99.9774 99.9733
H-30	99.81902521306819	length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + $NUMBER$ ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 98.9425 99.902 99.9504 99.9902 99.9805 99.6919 99.8576 99.9976 99.9974 99.9994 99.986 99.9987 99.9933 99.9989 99.9498 99.999 99.9995 99.9993 99.9995 99.9991 99.1226 99.9893 99.9719 99.9921 99.9805 99.6799 95.9654 99.5816 99.9737 99.9714
H-30	99.81777808779762	length _ by _ path . get ( Arrays . as CaMeL List ( k , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 95.7824 99.9219 99.9625 99.9871 99.9818 99.6851 99.8547 99.9977 99.9975 99.9994 99.986 99.9987 99.9934 99.999 99.9479 99.999 99.9995 99.9993 99.9995 99.9991 99.0832 99.9898 99.9726 99.9911 99.9809 98.7129 99.9893 99.959
H-30	99.81738891601563	length _ by _ path . get ( Arrays . as CaMeL List ( j ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 98.9425 97.6084 99.9558 99.1824 99.8452 99.9978 99.9969 99.9993 99.9905 99.9986 99.9919 99.9989 99.9554 99.999 99.9993 99.9993 99.9993 99.9994 99.2215 99.9911 99.9715 99.9911 99.9807 98.561 99.9871 99.9563
H-30	99.81567993164063	length _ by _ path . get ( Arrays . as CaMeL List ( j ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 98.9425 97.6084 99.9558 99.1824 99.8452 99.9978 99.9969 99.9993 99.9905 99.9986 99.9919 99.9989 99.9554 99.999 99.9993 99.9993 99.9993 99.9994 99.2413 99.8866 99.9493 99.989 99.9781 98.607 99.9865 99.9542
H-30	99.80939275568181	length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + 0 ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 98.9425 99.902 99.9504 99.9902 99.9805 99.6919 99.8576 99.9976 99.9974 99.9994 99.986 99.9987 99.9933 99.9989 99.9498 99.999 99.9995 99.9993 99.9995 99.9991 99.1226 99.9893 99.9719 99.9921 99.9805 99.6799 95.6068 99.5097 99.98 99.9719
H-30	99.80840509588069	length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + 0 ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 98.9425 99.902 99.9504 99.9902 99.9805 99.6919 99.8576 99.9976 99.9974 99.9994 99.986 99.9987 99.9933 99.9989 99.9498 99.999 99.9995 99.9993 99.9995 99.9991 99.3161 99.9275 99.9543 99.9912 99.9785 99.664 95.5229 99.4502 99.9823 99.9736
H-30	99.80763989825581	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) ) ; }
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 99.8464 99.9975 99.9976 99.9994 99.986 99.9987 99.9933 99.999 99.9491 99.999 99.9995 99.9992 99.9995 99.9991 99.3155 99.9138 99.9507 99.9912 99.9775 98.7763 99.9894 95.4198 99.9359
H-30	99.80653842659883	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) ) ; }
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 99.8464 99.9975 99.9976 99.9994 99.986 99.9987 99.9933 99.999 99.9491 99.999 99.9995 99.9992 99.9995 99.9991 99.1497 99.9892 99.9711 99.9923 99.9798 98.7363 99.9899 95.4861 99.9281
H-30	99.80614124644886	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + k ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 99.8464 99.9975 99.9976 99.9994 99.986 99.9987 99.9933 99.999 99.9491 99.999 99.9995 99.9992 99.9995 99.9991 99.1497 99.9892 99.9711 99.9923 99.9798 99.6579 94.5083 99.821 99.9791 99.9634
H-30	99.80473188920455	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 99.8464 99.9975 99.9976 99.9994 99.986 99.9987 99.9933 99.999 99.9491 99.999 99.9995 99.9992 99.9995 99.9991 99.3155 99.9138 99.9507 95.1524 99.5813 99.9382 99.8878 99.2574 99.9832 99.9699
H-30	99.80350167410714	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 95.7599 99.7535 99.9965 99.9967 99.9991 99.991 99.9974 99.9876 99.9987 99.9256 99.999 99.9995 99.9992 99.9993 99.9972 99.2468 99.9888 99.9747 99.9918 99.9867 99.3248 98.8786 99.97 99.9684
H-30	99.80185768821023	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) + 1 ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 99.8464 99.9975 99.9976 99.9994 99.986 99.9987 99.9933 99.999 99.9491 99.999 99.9995 99.9992 99.9995 99.9991 99.3155 99.9138 99.9507 99.9912 95.9776 98.2655 99.9277 99.5499 99.9813 99.9503
H-30	99.80121140252976	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 95.7599 99.7535 99.9965 99.9967 99.9991 99.991 99.9974 99.9876 99.9987 99.9256 99.999 99.9995 99.9992 99.9993 99.9972 99.2511 99.8806 99.9529 99.9904 99.9852 99.3097 98.9223 99.9701 99.9719
H-30	99.80088500976562	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 99.8464 99.9975 99.9976 99.9994 99.986 99.9987 99.9933 99.999 99.9491 99.999 99.9995 99.9992 99.9995 99.9991 99.1497 95.2153 99.9014 99.4019 99.9857 99.9231
H-30	99.79366455078124	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 99.8464 99.9975 99.9976 99.9994 99.986 99.9987 99.9933 99.999 99.9491 99.999 99.9995 99.9992 99.9995 99.9991 95.9854 97.9714 99.9399 99.4753 99.9841 99.9321
H-30	99.77219752261513	length _ by _ path . get ( Arrays . as CaMeL List ( j ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 98.9425 97.6084 99.9558 99.1824 99.8452 99.9978 99.9969 99.9993 99.9905 99.9986 99.9919 99.9989 99.9554 99.999 99.9993 99.9993 99.9993 99.9994 99.2413 97.7521 99.9389 99.4571 99.9831 99.9352
H-30	99.74900948660714	( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) ) ;
P-30	97.8633 99.9977 99.9987 99.9977 99.9985 99.995 99.5799 99.9914 99.9717 99.9791 99.8359 99.8426 99.8799 99.9969 99.9972 99.9993 99.9889 99.9982 99.9942 99.9992 99.8934 99.9988 99.9996 99.999 99.9994 99.9992 99.2967 99.9351 99.9521 99.9913 99.9671 98.1708 99.9836 99.9511
H-30	99.74612862723214	( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) ) ;
P-30	97.8633 99.9977 99.9987 99.9977 99.9985 99.995 99.5799 99.9914 99.9717 99.9791 99.8359 99.8426 99.8799 99.9969 99.9972 99.9993 99.9889 99.9982 99.9942 99.9992 99.8934 99.9988 99.9996 99.999 99.9994 99.9992 99.1616 99.9929 99.973 99.9924 99.9717 98.1177 99.9837 99.9538
H-30	99.74332682291667	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + 1 ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 99.8464 99.9975 99.9976 99.9994 99.986 99.9987 99.9933 99.999 99.9491 99.999 99.9995 99.9992 99.9995 99.9991 99.1497 99.9892 99.9711 99.9923 99.9798 99.6579 96.5677 99.8561 94.9128 99.9776 99.9377
H-30	99.73579545454545	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + Arrays . as CaMeL List ( j , k ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 93.6821 99.9975 99.9868 99.9963 99.9984 99.9995 99.2823 99.8827 99.9503 99.9787 99.9311 99.9862 99.9144
H-30	99.73410373263889	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + 1 ) ; }
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 99.8464 99.9975 99.9976 99.9994 99.986 99.9987 99.9933 99.999 99.9491 99.999 99.9995 99.9992 99.9995 99.9991 99.1497 99.9892 99.9711 99.9923 99.9798 99.6579 96.5677 99.8561 99.9828 94.5846 99.845
H-30	99.72991388494319	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + Arrays . as CaMeL List ( i , k ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 93.6821 99.9975 99.9868 99.9963 99.9984 99.9995 98.9703 99.9859 99.9681 99.9795 99.9359 99.987 99.9045
H-30	99.7206143465909	length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + Arrays . as CaMeL List ( j , k ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 98.9425 99.902 99.9504 99.9902 99.9805 99.6919 93.8096 99.9973 99.9875 99.9959 99.9983 99.9995 99.2599 99.9309 99.9597 99.9783 99.931 99.9854 99.9133
H-30	99.71891645951705	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 98.6402 99.9902 96.1868
H-30	99.69804243607955	length _ by _ path . get ( i ) + length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 97.0229 99.9213 98.9054 99.764 99.9963 99.9953 99.9988 99.985 99.9984 99.9892 99.9982 99.8137 99.9988 99.9994 99.9983 99.9993 99.9978 99.2557 99.9879 99.9695 99.9907 99.9772 98.702 99.9893 96.9744
H-30	99.69470584753788	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + length _ by _ path . get ( j ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 99.8464 99.9975 99.9976 99.9994 99.986 99.9987 99.9933 99.999 94.7608 99.9655 99.7646 99.9741 96.9472
H-30	99.69378847064394	length _ by _ path . get ( i ) + length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 97.0229 99.9213 98.9054 99.764 99.9963 99.9953 99.9988 99.985 99.9984 99.9892 99.9982 99.8137 99.9988 99.9994 99.9983 99.9993 99.9978 99.2648 99.8509 99.9437 99.9879 99.9742 98.7238 99.9889 96.9725
H-30	99.6894198330966	length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 98.9425 99.902 99.9504 99.9902 99.9805 98.6515 99.9895 96.1843
H-30	99.62148030598958	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + 1 ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 96.2272 99.8708 99.9836 96.1386
H-30	99.59604899088542	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + $NUMBER$ ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 95.769 99.7251 99.9791 96.1369
H-30	99.59206136067708	length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + 1 ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 98.9425 99.902 99.9504 99.9902 99.9805 99.6919 96.1878 99.8616 99.986 96.1404
H-30	99.5652567545573	length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + $NUMBER$ ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 98.9425 99.902 99.9504 99.9902 99.9805 99.6919 95.6984 99.7124 99.9826 96.1389
H-30	99.56414794921875	length _ by _ path . get ( Arrays . as CaMeL List ( j ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 98.9425 97.6084 99.9558 99.3898 99.9859 95.8243
H-30	99.5622049967448	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + 0 ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 95.1884 99.4903 99.9821 96.1371
H-30	99.53904215494792	length _ by _ path . get ( Arrays . as CaMeL List ( i , k , k ) ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 95.0137 99.7807 99.905 99.9162 99.183 99.9825 96.1319
H-30	99.53253173828125	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + k ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 94.1627 99.8179 99.9783 96.127
H-30	99.5281473795573	length _ by _ path . get ( Arrays . as CaMeL List ( j , k ) ) + 0 ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 98.9425 99.902 99.9504 99.9902 99.9805 99.6919 95.0986 99.4196 99.9847 96.1387
H-30	99.52171790081522	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) ) ; }
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 98.6402 99.9902 94.9535 96.4165
H-30	99.51773734714673	length _ by _ path . get ( Arrays . as CaMeL List ( i , k ) ) + ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 99.7757 99.9988 99.9991 99.999 99.9984 99.9984 99.4828 99.9931 99.9723 99.9921 99.9825 99.6962 93.8617 99.9744 96.3767
H-30	99.3592998798077	length _ by _ path . get ( i ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 97.0229 99.9213 99.5677 99.9648 95.3875
H-30	99.34124286358173	length _ by _ path . get ( k ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 96.696 99.9564 99.6219 99.9656 95.3897
H-30	99.34011606069711	length _ by _ path . get ( j ) ) ;
P-30	99.9929 99.994 99.998 99.9897 99.9942 99.9927 99.9971 96.6468 99.9609 99.6503 99.9682 95.3886
S-31	weight _ by _ edge . put ( edge , update _ weight ) ;
T-31	weight _ by _ node . put ( edge . get ( 1 ) , update _ weight ) ;
H-31	99.80601501464844	weight _ by _ edge . put ( edge , update _ weight ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 98.689 99.7804 99.9362 99.8135 99.8303 99.9951 99.8476
H-31	99.79731677827381	weight _ by _ edge . put ( edge . get ( 0 ) , update _ weight ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 98.3109 99.9969 99.9337 99.4612 99.9727 99.8817 99.9163 99.9943 99.796
H-31	99.79396654211956	weight _ by _ edge . put ( edge . get ( 0 ) , edge , update _ weight ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 98.3109 99.9969 99.9337 97.6308 99.1218 99.3426 99.9343 99.8639 99.8285 99.9898 102.828
H-31	99.78699311755952	weight _ by _ edge . put ( edge . get ( 1 ) , update _ weight ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 98.1091 99.9959 99.9301 99.4512 99.9735 99.8824 99.9139 99.9945 99.7961
H-31	99.7869289232337	weight _ by _ edge . put ( edge . get ( 1 ) , edge , update _ weight ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 98.1091 99.9959 99.9301 97.6404 99.148 99.3477 99.9362 99.863 99.8286 99.99 102.83
H-31	99.77677055027173	weight _ by _ edge . put ( edge . get ( $NUMBER$ ) , edge , update _ weight ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 97.9125 99.9935 99.9053 97.6506 99.1407 99.3364 99.935 99.8639 99.8278 99.9897 102.8304
H-31	99.77568126860119	weight _ by _ edge . put ( edge . get ( $NUMBER$ ) , update _ weight ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 97.9125 99.9935 99.9053 99.4323 99.9732 99.8806 99.9135 99.9943 99.8041
H-31	99.75186157226562	weight _ by _ edge . put ( edge . get ( edge . get ( 0 ) ) , edge ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 97.2861 99.8861 99.9758 99.8227 99.0575 99.9959 99.9481 99.9341 97.8987 99.0602 99.9949 102.7043
H-31	99.74988810221355	weight _ by _ edge . put ( edge . get ( 0 ) , edge . get ( 0 ) ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 98.3109 99.9969 99.9337 97.6308 98.2377 99.9452 99.9354 98.8869 99.9981 99.9349 99.9858 102.7207
H-31	99.74659220377605	if ( update _ weight ) { weight _ by _ edge . put ( edge , update _ weight ) ; }
P-31	99.9992 97.9612 99.9917 99.7815 98.6554 99.0809 99.5368 99.9612 99.8646 99.9966 99.8904 99.9909 99.8892 99.9965 99.7829 98.9665 99.828 99.971 99.8044 99.8983 99.9969 99.886 102.5993
H-31	99.73695439877717	if ( ! update _ weight ) weight _ by _ edge . put ( edge , update _ weight ) ;
P-31	99.9992 98.3944 98.482 99.9743 99.8483 99.8166 98.5746 99.9731 99.9188 99.9955 99.9182 99.9878 99.9254 99.996 99.7882 98.8026 99.8379 99.9606 99.7882 99.9299 99.997 102.4525
H-31	99.73277791341145	weight _ by _ edge . put ( edge . get ( edge . get ( 1 ) ) , edge ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 97.2861 99.8861 99.9758 99.8227 98.6189 99.9948 99.9552 99.9315 97.9169 99.0136 99.9947 102.7103
H-31	99.73228759765625	weight _ by _ edge . put ( edge . get ( ) , update _ weight ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 97.2326 99.9164 99.5256 99.9486 99.7886 99.9042 99.9954 99.8545
H-31	99.72850545247395	weight _ by _ edge . put ( edge . get ( 1 ) , edge . get ( 0 ) ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 98.1091 99.9959 99.9301 97.6404 98.2956 99.9476 99.9374 98.5096 99.998 99.9366 99.986 102.7176
H-31	99.7278468919837	weight _ by _ edge . put ( edge . get ( ( i ) ) , update _ weight ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 96.3043 98.0541 99.5619 99.6981 99.8149 99.4567 99.9416 99.8622 99.8173 99.9942 102.7554
H-31	99.72621221127717	weight _ by _ edge . put ( edge . get ( 0 ) , update _ weight ) ; } }
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 98.3109 99.9969 99.9337 99.4612 99.9727 99.8817 99.9163 99.9943 97.8254 97.6163 102.3133
H-31	99.72158813476562	if ( ! update _ weight ) weight _ by _ edge . put ( edge , update _ weight ) ; }
P-31	99.9992 98.3944 98.482 99.9743 99.8483 99.8166 98.5746 99.9731 99.9188 99.9955 99.9182 99.9878 99.9254 99.996 99.7882 98.8026 99.8379 99.9606 99.7882 99.9299 99.997 98.9513 102.8693
H-31	99.71678626019022	weight _ by _ edge . put ( edge . get ( 1 ) , update _ weight ) ; } }
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 98.1091 99.9959 99.9301 99.4512 99.9735 99.8824 99.9139 99.9945 97.8266 97.6222 102.3066
H-31	99.71321614583333	weight _ by _ edge . put ( edge . get ( edge . get ( $NUMBER$ ) ) , edge ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 97.2861 99.8861 99.9758 99.8227 98.1712 99.9893 99.9345 99.9263 97.9033 99.0367 99.9947 102.7104
H-31	99.7122218919837	weight _ by _ edge . put ( edge . get ( 0 ) , weight _ by _ edge ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 98.3109 99.9969 99.9337 98.2059 99.9838 99.8777 99.9796 99.5875 99.1746 99.9942 99.8562
H-31	99.7053555575284	weight _ by _ edge . put ( edge . get ( 0 ) , update _ weight ) ; }
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 98.3109 99.9969 99.9337 99.4612 99.9727 99.8817 99.9163 99.9943 97.8254 99.7447
H-31	99.70472783627717	weight _ by _ edge . put ( edge . get ( $NUMBER$ ) , update _ weight ) ; } }
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 97.9125 99.9935 99.9053 99.4323 99.9732 99.8806 99.9135 99.9943 97.7767 97.6316 102.3151
H-31	99.7041015625	weight _ by _ edge . put ( edge . get ( 0 ) , edge , update _ weight ) ; }
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 98.3109 99.9969 99.9337 97.6308 99.1218 99.3426 99.9343 99.8639 99.8285 99.9898 97.6828 102.7826
H-31	99.7027004076087	weight _ by _ edge . put ( edge . get ( 1 ) , weight _ by _ edge ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 98.1091 99.9959 99.9301 98.2035 99.984 99.8768 99.9803 99.5948 99.1577 99.9942 99.8556
H-31	99.6967061360677	weight _ by _ edge . put ( edge . get ( 1 ) , edge , update _ weight ) ; }
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 98.1091 99.9959 99.9301 97.6404 99.148 99.3477 99.9362 99.863 99.8286 99.99 97.669 102.7828
H-31	99.69547895951705	weight _ by _ edge . put ( edge . get ( 1 ) , update _ weight ) ; }
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 98.1091 99.9959 99.9301 99.4512 99.9735 99.8824 99.9139 99.9945 97.8266 99.7433
H-31	99.69430409307066	weight _ by _ edge . put ( edge . get ( $NUMBER$ ) , weight _ by _ edge ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 97.9125 99.9935 99.9053 98.235 99.9838 99.8796 99.9809 99.5977 99.1511 99.9941 99.8552
H-31	99.68666585286458	weight _ by _ edge . put ( edge . get ( $NUMBER$ ) , edge , update _ weight ) ; }
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 97.9125 99.9935 99.9053 97.6506 99.1407 99.3364 99.935 99.8639 99.8278 99.9897 97.6647 102.78
H-31	99.68354348575367	weight _ by _ edge . put ( edge , update _ weight ) ; }
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 98.689 99.7804 99.9362 99.8135 99.8303 99.9951 97.689 99.8826
H-31	99.6824951171875	weight _ by _ edge . put ( edge . get CaMeL Key ( ) , update _ weight ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 98.02 98.4489 99.9733 99.2702 99.959 99.3233 99.9357 99.8494 99.8947 99.9958 99.7156
H-31	99.68192915482955	weight _ by _ edge . put ( edge . get ( $NUMBER$ ) , update _ weight ) ; }
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 97.9125 99.9935 99.9053 99.4323 99.9732 99.8806 99.9135 99.9943 97.7767 99.7405
H-31	99.67210852581522	weight _ by _ edge . put ( edge . get ( update _ weight ) , update _ weight ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 95.7084 99.9819 99.5999 99.8894 99.9291 99.5125 99.9745 99.8627 99.6974 99.9946 99.8281
H-31	99.65885786576705	weight _ by _ edge . put ( edge . get CaMeL Value ( ) , update _ weight ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 98.02 98.2219 99.9921 98.8877 99.9092 99.412 99.9448 99.8622 99.8646 99.9955 99.756
H-31	99.64345296223958	if ( ! update _ weight ) { weight _ by _ edge . put ( edge , update _ weight ) ;
P-31	99.9992 98.3944 98.482 99.9743 99.8483 99.8166 99.3979 99.5254 99.9664 99.8461 99.9972 99.8632 99.9883 99.9113 99.9953 99.8034 98.8453 99.8444 99.9735 99.8146 99.9027 99.997 99.6672
H-31	99.63992745535714	weight _ by _ edge . put ( edge . get ( $STRING$ ) , update _ weight ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 95.03 99.985 99.9266 99.4452 99.9712 99.88 99.9366 99.9941 99.7898
H-31	99.63896251860119	weight _ by _ edge . put ( edge . get ( i ) , update _ weight ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 95.0117 99.9915 99.9237 99.4511 99.973 99.8786 99.9123 99.9947 99.8013
H-31	99.63530040922619	weight _ by _ edge . put ( edge . get ( true ) , update _ weight ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 94.908 99.9908 99.9237 99.4728 99.9716 99.8874 99.9072 99.9941 99.8056
H-31	99.63465640419408	weight _ by _ edge . put ( edge . get ( 0 ) , edge ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 98.3109 99.9969 99.9337 97.6308 98.8755 99.9975 99.8332
H-31	99.630029296875	weight _ by _ edge . put ( weight _ by _ edge , update _ weight ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 95.9042 99.9562 99.5059 99.9841 99.6429 99.5253 99.5653 99.9165 99.8276 99.8776 99.996 99.7363
H-31	99.6293057528409	weight _ by _ edge . put ( edge . get ( ) , weight _ by _ edge ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 97.2326 99.9164 97.5788 99.9715 99.6248 99.9737 99.7037 99.5017 99.9947 99.8669
H-31	99.62645422894022	weight _ by _ edge . put ( edge . get ( 0 ) , update _ weight ) ; } else
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 98.3109 99.9969 99.9337 99.4612 99.9727 99.8817 99.9163 99.9943 97.8254 96.6662 100.9691
H-31	99.62608846028645	weight _ by _ edge . put ( edge . get ( 0 ) , update _ weight ) ; } } else
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 98.3109 99.9969 99.9337 99.4612 99.9727 99.8817 99.9163 99.9943 97.8254 97.6163 98.6947 100.9417
H-31	99.62457885742188	weight _ by _ edge . put ( edge , update _ weight _ by _ edge ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 98.689 99.7804 99.9362 99.8135 97.2808 99.0997 99.9786 99.2503 99.7408 99.9953 99.9231
H-31	99.62412958559783	try { weight _ by _ edge . put ( edge . get ( 0 ) , update _ weight ) ;
P-31	99.9942 99.7899 99.9749 99.9442 99.9985 99.9587 99.9878 99.9546 99.9964 99.8599 99.6085 99.9503 99.8831 98.8793 99.9975 99.918 99.4769 99.9761 99.8757 99.8866 99.9947 99.9253
H-31	99.62172980057566	weight _ by _ edge . put ( edge . get ( 1 ) , edge ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 98.1091 99.9959 99.9301 97.6404 98.8235 99.9974 99.8362
H-31	99.61997767857143	weight _ by _ edge . put ( edge . get ( ) , update _ weight ) ; }
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 97.2326 99.9164 99.5256 99.9486 99.7886 99.9042 99.9954 97.44 99.7882
H-31	99.61805791440217	weight _ by _ edge . put ( edge . get CaMeL Property ( $STRING$ ) , update _ weight ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 98.02 97.0347 99.9749 98.8167 99.9656 99.9281 99.4225 99.9581 99.8715 99.9177 99.9955 99.6808
H-31	99.61691284179688	weight _ by _ edge . put ( edge . get ( 1 ) , update _ weight ) ; } } else
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 98.1091 99.9959 99.9301 99.4512 99.9735 99.8824 99.9139 99.9945 97.8266 97.6222 98.708 100.9185
H-31	99.61661430027173	weight _ by _ edge . put ( edge . get CaMeL Key ( ) , update _ weight ) ; }
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 98.02 98.4489 99.9733 99.2702 99.959 99.3233 99.9357 99.8494 99.8947 99.9958 98.1333 99.7496
H-31	99.61634893002717	if ( weight _ by _ edge . get ( edge . get ( 1 ) ) == update _ weight )
P-31	99.9992 98.8615 99.9838 99.8463 99.9916 99.8171 99.9423 99.5393 99.9457 98.7839 99.9366 99.9758 99.6401 98.7735 99.9902 99.9537 99.1404 98.8956 99.8895 99.6331 99.9341 100.1138
H-31	99.61626642400569	weight _ by _ edge . put ( edge . get CaMeL Type ( ) , update _ weight ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 98.02 96.3051 99.9789 99.9598 99.9595 99.3002 99.9324 99.8664 99.8696 99.9961 99.7405
H-31	99.61533813476562	weight _ by _ edge . put ( edge , update _ weight , update _ weight ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 98.689 99.7804 99.9362 99.8135 96.9958 99.0126 99.9603 99.7976 99.3804 99.9924 99.9447
H-31	99.61338806152344	weight _ by _ edge . add ( edge , update _ weight ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 96.7708 99.9877 99.5492 99.354 99.5692 99.9591 99.8573 99.6337 99.9938 99.8988
H-31	99.61302693684895	weight _ by _ edge . put ( edge . get CaMeL Key ( ) , weight _ by _ edge ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 98.02 98.4489 99.9733 99.2702 99.959 97.8538 99.9644 99.8055 99.9781 99.7242 99.3036 99.9956 99.7872
H-31	99.61288850203805	if ( update _ weight ) { weight _ by _ edge . put ( edge , update _ weight ) ;
P-31	99.9992 97.9612 99.9917 99.7815 98.6554 99.0809 99.5368 99.9612 99.8646 99.9966 99.8904 99.9909 99.8892 99.9965 99.7829 98.9665 99.828 99.971 99.8044 99.8983 99.9969 99.6636
H-31	99.6120096842448	weight _ by _ edge . put ( edge . get ( 0 ) , weight _ by _ edge ) ; }
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 98.3109 99.9969 99.9337 98.2059 99.9838 99.8777 99.9796 99.5875 99.1746 99.9942 97.4267 99.7367
H-31	99.61098845108695	try { weight _ by _ edge . put ( edge . get ( 1 ) , update _ weight ) ;
P-31	99.9942 99.7899 99.9749 99.9442 99.9985 99.9587 99.9878 99.9546 99.9964 99.8599 99.6085 99.9503 99.8831 98.5948 99.9969 99.9141 99.466 99.9766 99.8767 99.8828 99.9949 99.9254
H-31	99.61058285361842	weight _ by _ edge . put ( edge . get ( $NUMBER$ ) , edge ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 97.9125 99.9935 99.9053 97.6506 98.8327 99.9973 99.8292
H-31	99.60470760569854	weight _ by _ edge . put ( edge . get ( $NUMBER$ ) ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 97.9125 99.9935 97.1869 99.983 99.7241
H-31	99.60343424479167	weight _ by _ edge . put ( edge . get ( null ) , update _ weight ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 94.2378 99.9582 99.9412 99.4879 99.9737 99.8872 99.9055 99.9937 99.8067
H-31	99.6030782063802	weight _ by _ edge . put ( edge . get ( 1 ) , weight _ by _ edge ) ; }
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 98.1091 99.9959 99.9301 98.2035 99.984 99.8768 99.9803 99.5948 99.1577 99.9942 97.4345 99.7328
H-31	99.60190217391305	if ( weight _ by _ edge . get ( edge . get ( 0 ) ) == update _ weight )
P-31	99.9992 98.8615 99.9838 99.8463 99.9916 99.8171 99.9423 99.5393 99.9457 98.7839 99.9366 99.9758 99.6401 98.4394 99.992 99.9525 99.1299 98.8669 99.8963 99.6373 99.9335 100.1441
H-31	99.6002197265625	weight _ by _ edge . put ( edge . get ( 0 ) ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 98.3109 99.9969 96.6865 99.9834 99.7459
H-31	99.5972567471591	weight _ by _ edge . put ( edge . get ( - 1 ) , update _ weight ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 94.0461 99.8114 99.9925 99.949 99.3573 99.9379 99.8689 99.8817 99.9949 99.8201
H-31	99.59651014539931	weight _ by _ edge . put ( edge , weight _ by _ edge ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 98.689 96.6862 99.9737 99.6783 99.983 99.6026 99.205 99.9948 99.9207
H-31	99.59636374080883	weight _ by _ edge . put ( edge . get ( 1 ) ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 98.1091 99.9959 96.8473 99.9821 99.7236
H-31	99.58842329545455	weight _ by _ edge . put ( edge . get ( edge . get ( 0 ) ) ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 97.2861 99.8861 99.9758 99.8227 99.0575 99.9959 99.9481 96.8682 99.9887 99.6362
H-31	99.5878269361413	weight _ by _ edge . put ( edge . get CaMeL Value ( ) , update _ weight ) ; }
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 98.02 98.2219 99.9921 98.8877 99.9092 99.412 99.9448 99.8622 99.8646 99.9955 98.0217 99.7593
H-31	99.58260091145833	weight _ by _ edge . put ( edge . get ( edge , update _ weight ) ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 97.2861 97.5677 99.281 99.9546 99.648 99.9235 99.2186 99.9906 99.8842
H-31	99.57660466974431	if ( update _ weight ) weight _ by _ edge . put ( edge , update _ weight ) ;
P-31	99.9992 97.9612 99.9917 99.7815 98.6554 98.6778 99.955 99.8627 99.9945 99.9323 99.9884 99.9162 99.995 99.7625 98.6293 99.8212 99.9627 99.769 99.9194 99.9966 99.525
H-31	99.5666736421131	weight _ by _ edge . put ( weight _ by _ edge , update _ weight ) ; }
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 95.9042 99.9562 99.5059 99.9841 99.6429 99.5253 99.5653 99.9165 99.8276 99.8776 99.996 98.1867 99.8492
H-31	99.56249237060547	weight _ by _ edge . set ( edge , update _ weight ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 95.6188 99.9875 99.6316 99.3718 99.7337 99.9568 99.8278 99.7643 99.9929 99.8741
H-31	99.55514187282986	weight _ by _ edge . put ( edge . get ( ) , edge ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 97.2326 99.9164 97.1004 99.4724 99.9976 99.7933
H-31	99.55256958007813	weight _ by _ edge . put ( edge . get CaMeL Key ( ) , edge ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 98.02 98.4489 99.9733 99.2702 99.959 97.9409 99.0729 99.9957 99.7414
H-31	99.54633532072368	weight _ by _ edge . put ( edge . get ( 0 ) , update ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 98.3109 99.9969 99.9337 99.4612 95.3072 99.9939 99.8964
H-31	99.53329467773438	weight _ by _ edge . add ( edge ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 96.7708 99.9877 99.5492 98.9738 99.9958 99.8815
H-31	99.53192138671875	for ( int i = 0 ; i < update _ weight ; i ++ ) {
P-31	99.9995 99.6395 99.9042 99.9821 99.8433 99.9893 99.9789 99.9826 98.2149 99.9733 99.5039 98.4623 99.9645 99.9074 99.9961 99.857 99.9269
H-31	99.53033447265625	weight _ by _ edge . put ( edge . get ( ) ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 99.6758 99.9492 99.851 97.2326 97.1273 99.9837 99.6618
H-31	99.51824188232422	weight _ by _ edge . add ( weight _ by _ edge ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 96.7708 99.9877 97.8366 99.9678 99.7141 99.9885 99.6275 99.285 99.9965 99.8766
H-31	99.51069192325367	edge . put ( edge . get ( 0 ) , update _ weight ) ;
P-31	99.6702 98.9585 99.997 99.7581 99.7699 99.9666 99.8722 98.7815 99.9974 99.8961 99.4514 99.971 99.8845 99.924 99.993 99.8441
H-31	99.51060575597427	} weight _ by _ edge . put ( edge , update _ weight ) ;
P-31	98.666 99.9772 99.822 99.9983 99.9313 99.9814 99.9141 99.9951 99.8305 98.81 99.7686 99.9356 99.8199 99.8929 99.9953 99.9018
H-31	99.50893729073661	weight _ by _ edge . add ( update _ weight ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 96.7708 99.9877 97.6018 99.9556 99.7733 99.8873 99.9916 99.9164
H-31	99.49994255514706	weight _ by _ edge . put ( edge , update _ weight ) ; ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 98.689 99.7804 99.9362 99.8135 99.8303 99.9951 94.5398 99.9107
H-31	99.49198913574219	weight _ by _ edge . put ( name , update _ weight ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 93.873 99.9188 99.5589 99.9595 99.7996 99.8255 99.9962 99.7777
H-31	99.47793579101562	weight _ by _ edge . put ( node , update _ weight ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 94.1185 99.2596 99.7456 99.9505 99.7968 99.7826 99.9957 99.8351
H-31	99.46640625	put ( edge . get ( 0 ) , update _ weight ) ;
P-31	99.7401 99.821 99.4757 99.9838 99.7911 98.7188 99.9978 99.9438 99.4511 99.9688 99.8931 99.8613 99.995 99.8545
H-31	99.4256591796875	weight _ by _ edge . put ( edge , update ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 98.689 99.7804 94.6133 99.9951 99.8772
H-31	99.41742815290179	weight _ by _ edge . put ( update _ weight ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 94.1777 99.9669 99.6928 99.002 99.9844 99.8575
H-31	99.36012776692708	edge . set ( edge , update _ weight ) ;
P-31	99.6702 98.6952 99.9819 99.3861 99.379 99.6653 99.9644 99.8399 99.8578 99.9896 99.9455
H-31	99.34157307942708	edge . put ( edge , update _ weight ) ;
P-31	99.6702 98.9585 99.997 99.7581 98.384 99.7676 99.9498 99.8174 99.9223 99.9918 99.9357
H-31	99.33682861328126	put ( edge , update _ weight ) ;
P-31	99.7401 99.821 99.0556 99.6851 99.9737 99.8324 99.8402 99.9932 99.9268
H-31	99.33160400390625	weight _ by _ edge . put ( edge ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 99.9281 99.994 99.8415 93.1023 99.9909 99.8818
H-31	99.2891845703125	weight _ by _ edge . clear ( ) ;
P-31	99.9792 99.9092 99.9983 99.9499 99.9901 93.8729 99.9886 99.7599 99.9941 99.3249
H-31	99.20581665039063	edge . add ( update _ weight ) ;
P-31	99.6702 98.6246 99.9903 98.3802 99.9641 99.7508 99.85 99.989 99.8924
H-31	99.08460235595703	edge . add ( edge ) ;
P-31	99.6702 98.6246 99.9903 99.1563 99.4494 99.9932 99.8463
H-31	98.97264862060547	if ( ! update _ weight )
P-31	99.9992 98.3944 98.482 99.9743 99.8483 99.8166 96.6776
H-31	98.94752502441406	return weight _ by _ edge ;
P-31	99.0607 99.9807 99.9655 99.9986 99.9412 98.7142 99.9789
H-31	98.86572265625	if ( update _ weight )
P-31	99.9992 97.9612 99.9917 99.7815 98.6554 97.0822
H-31	98.52813720703125	return update _ weight ;
P-31	98.5986 99.9809 99.8224 98.8754 99.9511
H-31	97.77964782714844	break ; }
P-31	99.6218 98.4591 99.5643
S-32	}
T-32	op@@ stack . push ( token ) ; }
H-32	99.56842912946429	; } if ( false }
P-32	99.8482 98.2325 98.9541 98.4767 99.6803 102.8579
H-32	99.4962158203125	} } if ( false }
P-32	99.3059 98.2728 98.7264 97.988 99.8166 102.8471
H-32	99.45651245117188	} }
P-32	99.3059 99.5468
H-32	99.44205147879464	; } } if } }
P-32	99.8482 98.8624 98.4514 99.6664 97.8301 102.5065
H-32	99.43865966796875	; } } if ( }
P-32	99.8482 98.8624 98.4514 98.6917 98.5414 102.7462
H-32	99.41243198939732	} else = null ; }
P-32	98.8417 96.0332 98.9812 99.8796 99.8791 102.7555
H-32	99.40216064453125	} } if } * /
P-32	99.3059 98.2728 99.6688 97.1306 98.9958 102.9244
H-32	99.37411934988839	; } else if } }
P-32	99.8482 98.735 98.4106 99.6958 97.6605 102.3392
H-32	99.37058803013393	; } } } if }
P-32	99.8482 98.8624 97.9367 97.5757 99.7284 102.7134
H-32	99.35569545200893	; } / * * /
P-32	99.8482 96.0915 99.5634 99.5214 98.6831 102.8528
H-32	99.35055977957589	} else if ( false }
P-32	98.8417 98.3153 98.7739 97.4547 99.7959 102.7556
H-32	99.34912981305804	} else if } * /
P-32	98.8417 98.3153 99.6463 96.7541 99.4537 102.9159
H-32	99.34765625	; } if ( * }
P-32	99.8482 98.2325 98.9541 98.3638 98.4126 102.693
H-32	99.29005126953125	} } if }
P-32	99.3059 98.2728 99.6688 99.686
H-32	99.2674560546875	; } }
P-32	99.8482 98.8624 99.4298
H-32	99.25393676757812	; } } if }
P-32	99.8482 98.8624 98.4514 99.6664 99.7658
H-32	99.23348388671874	; } else {
P-32	99.8482 98.735 98.9198 99.7349
H-32	99.22765096028645	; } else if }
P-32	99.8482 98.735 98.4106 99.6958 99.7467
H-32	99.22062683105469	} else {
P-32	98.8417 98.8424 99.6816
H-32	99.20801391601563	} else if }
P-32	98.8417 98.3153 99.6463 99.72
H-32	99.2059814453125	; } if }
P-32	99.8482 98.2325 99.5625 99.4573
H-32	99.16075642903645	} else
P-32	98.8417 99.1238
H-32	99.14764404296875	; } if } ;
P-32	99.8482 98.2325 99.5625 98.4382 99.875
H-32	99.1240463256836	} if }
P-32	97.7979 99.5878 99.5937
H-32	99.04313659667969	; } else
P-32	99.8482 98.735 98.6599
H-32	99.0266825358073	} } } if }
P-32	99.3059 97.7052 98.2671 99.6343 99.7308
H-32	99.01509602864583	; } if } }
P-32	99.8482 98.2325 99.5625 97.9597 99.5582
H-32	99.00040893554687	} } else {
P-32	99.3059 97.1134 99.1968 99.8692
H-32	98.99615478515625	} else { }
P-32	98.8417 98.8424 97.975 99.8048
H-32	98.99119262695312	; } } }
P-32	99.8482 98.8624 97.9367 99.3793
H-32	98.9893290201823	} } if ( }
P-32	99.3059 98.2728 98.7264 98.3554 99.7587
H-32	98.98733520507812	; }
P-32	99.8482 98.1844
H-32	98.9795430501302	} } if } }
P-32	99.3059 98.2728 99.6688 97.7394 99.3736
H-32	98.9600830078125	} } }
P-32	99.3059 97.7052 99.3124
H-32	98.9471435546875	; } else { }
P-32	99.8482 98.735 98.9198 97.5061 99.7442
H-32	98.9203389485677	; } if ( }
P-32	99.8482 98.2325 98.9541 97.8061 99.7518
H-32	98.91200764973958	} } else if }
P-32	99.3059 97.1134 98.1172 99.5583 99.8604
H-32	98.90906982421875	} if } ;
P-32	97.7979 99.5878 97.8301 99.8127
H-32	98.87540690104167	} } if } ;
P-32	99.3059 98.2728 99.6688 96.6055 99.8827
H-32	98.87427775065105	; } } } }
P-32	99.8482 98.8624 97.9367 98.4835 99.1856
H-32	98.86962890625	} else if } ;
P-32	98.8417 98.3153 99.6463 97.1138 99.7839
H-32	98.86909790039063	; } * /
P-32	99.8482 96.066 99.5623 99.9396
H-32	98.8601582845052	} if ( * }
P-32	97.7979 98.8868 98.7481 98.532 99.6793
H-32	98.85938110351563	} } } }
P-32	99.3059 97.7052 98.5161 99.2529
H-32	98.852392578125	} if } }
P-32	97.7979 99.5878 97.9589 99.4005
H-32	98.83917236328125	} else if } }
P-32	98.8417 98.3153 99.6463 97.5601 99.1549
H-32	98.81892903645833	} if ( false }
P-32	97.7979 98.8868 97.2841 99.5423 99.8855
H-32	98.79843139648438	; if } } }
P-32	96.9792 99.519 98.9266 98.7636 99.6728
H-32	98.78746541341145	; } / * /
P-32	99.8482 96.0915 99.5634 98.4287 99.8636
H-32	98.7864481608073	} if } } }
P-32	97.7979 99.5878 97.9589 98.5296 99.3276
H-32	98.76125081380208	} else { if }
P-32	98.8417 98.8424 97.3814 99.5302 98.4549
H-32	98.76094970703124	} if ( }
P-32	97.7979 98.8868 97.8827 99.7205
H-32	98.75643920898438	; } else ; }
P-32	99.8482 98.735 96.4675 98.7043 99.8542
H-32	98.74449666341145	; } * * /
P-32	99.8482 96.066 98.6507 99.0446 99.9281
H-32	98.73655192057292	} } } } }
P-32	99.3059 97.7052 98.5161 98.9289 98.4464
H-32	98.72737630208333	} / * * /
P-32	95.1311 99.8224 99.4569 98.6478 99.7893
H-32	98.72427368164062	} if } if }
P-32	97.7979 99.5878 96.1918 99.4341 99.8172
H-32	98.72220458984376	} } * /
P-32	99.3059 95.1941 99.6334 99.9608
H-32	98.7169698079427	; } } * /
P-32	99.8482 98.8624 95.1725 99.5301 99.9592
H-32	98.70333862304688	; * * * /
P-32	96.7553 99.2863 99.4648 98.5779 99.2063
H-32	98.69866943359375	; } } else {
P-32	99.8482 98.8624 96.5631 98.1467 99.8422
H-32	98.69508870442708	} else { } }
P-32	98.8417 98.8424 97.975 97.4235 99.5712
H-32	98.69456787109375	; if } }
P-32	96.9792 99.519 98.9266 99.1187
H-32	98.68884887695313	; } catch }
P-32	99.8482 95.2095 99.8012 99.6559
H-32	98.6870829264323	} if } * /
P-32	97.7979 99.5878 96.0603 99.2138 99.9458
H-32	98.67838541666667	} if } ; }
P-32	97.7979 99.5878 97.8301 97.4927 99.845
H-32	98.66668701171875	} if ( } }
P-32	97.7979 98.8868 97.8827 98.1734 99.7424
H-32	98.66143798828125	; * * /
P-32	96.7553 99.2863 98.7926 99.5435
H-32	98.65311889648437	} * * /
P-32	95.5484 99.2087 99.0912 99.9005
H-32	98.6400375366211	; if }
P-32	96.9792 99.519 99.1326
H-32	98.63298034667969	; * /
P-32	96.7553 99.0012 99.846
H-32	98.63092651367188	; } else ;
P-32	99.8482 98.735 96.4675 99.1744
H-32	98.60658569335938	; } else }
P-32	99.8482 98.735 95.8017 99.7185
H-32	98.59761962890624	} } else ;
P-32	99.3059 97.1134 97.1194 99.9326
H-32	98.58656005859375	} else = }
P-32	98.8417 96.0332 98.6648 99.8762
H-32	98.58435668945313	} else ; }
P-32	98.8417 95.9126 98.79 99.8606
H-32	98.56236572265625	} else * /
P-32	98.8417 94.8733 99.6564 99.9236
H-32	98.54957885742188	} / * /
P-32	95.1311 99.8224 98.4469 99.8307
H-32	98.5239028930664	} * /
P-32	95.5484 99.114 99.9164
H-32	98.51808166503906	} } else
P-32	99.3059 97.1134 98.1362
H-32	98.34227752685547	} else }
P-32	98.8417 95.3358 99.6748
H-32	98.32669067382812	} else ;
P-32	98.8417 95.9126 99.0356
H-32	98.3094711303711	break } }
P-32	99.6169 99.7783 99.5944
H-32	98.23170471191406	return } }
P-32	98.8872 99.7219 99.2991
H-32	98.23155212402344	}
P-32	96.9463
H-32	98.20875549316406	; else {
P-32	96.1313 98.1106 99.6638
H-32	98.16504669189453	= } }
P-32	99.3217 99.0634 99.3278
H-32	98.13125610351562	} catch }
P-32	93.423 99.8166 99.7685
H-32	97.99930826822917	; else
P-32	96.1313 98.9372
H-32	97.93949381510417	* /
P-32	98.3646 99.8709
H-32	97.8587646484375	= }
P-32	99.3217 99.3073
H-32	97.53841145833333	* }
P-32	98.3503 98.682
H-32	97.52254231770833	return ;
P-32	99.447 98.102
H-32	97.386474609375	return }
P-32	98.8872 98.2536
H-32	97.2212422688802	break }
P-32	99.6169 97.7985
H-32	97.06028238932292	if }
P-32	99.2795 99.5612
H-32	96.69557189941406	;
P-32	94.4617
H-32	96.22213745117188	{
P-32	99.8142
H-32	95.77374267578125	:
P-32	99.0849
H-32	95.74835205078125	else
P-32	99.4311
S-33	if ( any ( list _ comp ( n , primes ) ) ) {
T-33	if ( all ( list _ comp ( n , primes ) ) ) {
H-33	99.72747802734375	if ( any ( list _ comp ( n , primes ) ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 99.7871 99.6789 99.9545 99.9732 99.9102 99.7894 99.6054
H-33	99.6160026999081	if ( ! any ( list _ comp ( n , primes ) ) ) {
P-33	99.9996 97.2531 99.062 99.9244 99.5872 99.8864 99.8586 99.4579 99.657 99.8161 99.6927 99.9721 99.9559 99.9836 99.7822 99.7197
H-33	99.55843098958333	if ( any ( list _ comp , n , primes ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 97.8361 98.9944 99.5154 99.6748 99.9747 99.9535 99.8124 99.565
H-33	99.5290283203125	if ( any ( list _ comp ( n , primes ) ) )
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 99.7871 99.6789 99.9545 99.9732 99.9102 96.6907
H-33	99.52764214409723	if ( any ( list _ comp ( n , n , primes ) ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 99.7871 96.4964 99.2262 99.6103 99.982 99.9829 99.9487 99.7939 99.7292
H-33	99.52605731670673	if ( list _ comp ( n , primes ) ) {
P-33	99.9996 97.9542 99.9766 99.8245 98.3525 99.7567 99.7619 99.6581 99.9043 99.8784 99.8179 99.0907
H-33	99.51580810546875	if ( any ( list _ comp ( n ) ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 97.5473 99.8451 99.898 99.8447 99.1454
H-33	99.50884046052632	if ( any ( any ( list _ comp ( n , primes ) ) ) ) {
P-33	99.9996 99.2597 99.6553 95.6883 99.9469 99.1348 99.7531 99.8332 99.1835 99.5768 99.7319 99.6497 99.9739 99.9604 99.9687 99.9229 99.7962 99.7699
H-33	99.49920654296875	if ( any ( list _ comp ( n , primes ) , primes ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 99.7871 99.6789 99.9545 96.0845 99.101 99.9813 99.9575 99.814 99.686
H-33	99.49307590060764	if ( any ( list _ comp ( n , primes , primes ) ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 99.7871 99.6789 96.4006 99.153 99.4768 99.9845 99.9472 99.7684 99.738
H-33	99.48301344651442	if ( any ( list _ comp , primes ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 97.8361 98.2611 99.7976 99.9339 99.8243 99.5761
H-33	99.471923828125	if ( any ( list _ comp ( n , primes ) ) ) continue ;
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 99.7871 99.6789 99.9545 99.9732 99.9102 97.0181 98.795 98.9649
H-33	99.47099304199219	if ( any ( list _ comp ( n , n ) ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 99.7871 96.4964 99.1264 99.9723 99.9306 99.7723 99.5099
H-33	99.47020612444196	if ( any ( list ( n , primes ) ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 96.9538 99.0392 99.6355 99.5549 99.943 99.9621 99.8822 99.8405 99.4643
H-33	99.46774773848684	if ( any ( list _ comp ( n , any ( primes ) ) ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 99.7871 95.1849 99.9404 98.8711 99.9179 99.9122 99.9572 99.922 99.8186 99.635
H-33	99.4628842002467	if ( any ( list _ comp ( n , primes ) ) ) return true ; }
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 99.7871 99.6789 99.9545 99.9732 99.9102 97.0228 98.817 99.9116 98.9955 98.8031
H-33	99.45925421463816	if ( any ( primes ( list _ comp ( n , primes ) ) ) ) {
P-33	99.9996 99.2597 99.6553 97.3478 97.8002 98.3707 99.7061 99.8649 99.3406 99.6798 99.7738 99.7149 99.9295 99.9538 99.9666 99.9384 99.7601 99.8007
H-33	99.45836684283088	if ( any ( list _ comp ( n , primes ) ) ) { {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 99.7871 99.6789 99.9545 99.9732 99.9102 99.7894 95.1252 99.6328
H-33	99.45783233642578	if ( ! any ( list _ comp , n , primes ) ) {
P-33	99.9996 97.2531 99.062 99.9244 99.5872 99.8864 99.8586 98.1442 99.0698 99.5865 99.6522 99.9852 99.981 99.8507 99.621
H-33	99.45689633018092	if ( any ( list ( list _ comp ( n , primes ) ) ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 96.9538 98.3474 98.8004 99.807 99.1501 99.5688 99.735 99.6442 99.9731 99.9571 99.9695 99.9206 99.7764 99.7705
H-33	99.45521375868056	if ( any ( list _ comp ( n , primes ) ) ) return true ;
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 99.7871 99.6789 99.9545 99.9732 99.9102 97.0228 98.817 99.9116 98.1977
H-33	99.45283508300781	if ( any ( list _ comp ( 0 , primes ) ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 95.7324 99.7725 99.2524 99.901 99.9717 99.9209 99.8383 99.4885
H-33	99.4498519897461	if ( any ( list _ comp ( $NUMBER$ , primes ) ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 95.3618 99.7529 99.5226 99.9215 99.9713 99.9205 99.8131 99.5662
H-33	99.4492416381836	if ( any ( list _ comp ( size , primes ) ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 95.2871 99.7512 99.6638 99.9331 99.9419 99.9208 99.7894 99.5328
H-33	99.44273546006944	if ( primes . equals ( list _ comp ( n , primes ) ) ) {
P-33	99.9996 97.0544 99.4855 98.9598 99.9334 98.1911 99.9825 99.7003 98.9445 99.6654 99.5506 99.6412 99.9638 99.99 99.9741 99.7961 99.2737
H-33	99.44247436523438	if ( any ( list _ comp ( 1 , primes ) ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 95.6537 99.6876 99.2455 99.9137 99.968 99.9201 99.8317 99.4915
H-33	99.43909369574652	if ( any ( list _ comp ) && any ( list _ comp ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 98.201 96.8344 98.8597 99.9798 99.1931 99.9749 99.4627 99.8496 99.9469 99.866 99.6852
H-33	99.43818664550781	if ( any ( list _ comp ( n ) , primes ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 97.5473 97.8205 99.4061 99.9714 99.9406 99.8727 99.5116
H-33	99.43787906044408	if ( ! any ( list _ comp ( n , primes ) , primes ) ) {
P-33	99.9996 97.2531 99.062 99.9244 99.5872 99.8864 99.8586 99.4579 99.657 99.8161 99.6927 99.9721 96.6482 99.1311 99.9836 99.9873 99.8108 99.7282
H-33	99.4348080283717	if ( any ( list _ comp ( list _ comp ( n ) ) ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 96.1783 99.9593 99.8209 99.8407 99.3156 97.6292 99.8279 99.9439 99.9572 99.8489 99.5719
H-33	99.43047018612133	if ( any ( list _ comp ( n , primes ) ) ) break ;
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 99.7871 99.6789 99.9545 99.9732 99.9102 95.5555 99.6133 98.9045
H-33	99.42776309742646	} if ( any ( list _ comp ( n , primes ) ) ) {
P-33	99.8739 99.9991 99.3353 99.7058 99.4676 99.7125 99.8558 99.2505 99.5342 99.8438 99.7463 99.9714 99.975 99.9131 99.817 99.8591
H-33	99.42731391059027	if ( any ( list _ comp ( n , primes ) ) ) continue ; else
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 99.7871 99.6789 99.9545 99.9732 99.9102 97.0181 98.795 98.3948 99.2391
H-33	99.42604064941406	if ( any ( list _ comp ( n , $NUMBER$ ) ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 99.7871 95.1217 99.778 99.9634 99.9306 99.7616 99.5333
H-33	99.42529296875	if ( ! any ( list _ comp ( n , primes ) ) )
P-33	99.9996 97.2531 99.062 99.9244 99.5872 99.8864 99.8586 99.4579 99.657 99.8161 99.6927 99.9721 99.9559 99.9836 96.8345
H-33	99.42487041766827	any ( list _ comp ( n , primes ) ) ;
P-33	99.2355 99.5928 99.9201 99.8609 99.516 99.8015 99.8644 99.7827 99.9461 99.9676 99.9334 99.2719
H-33	99.42172241210938	if ( any ( list _ comp ( n + 1 ) ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 96.3562 98.5348 99.875 99.9274 99.9095 99.77 99.4337
H-33	99.420166015625	if ( any ( list _ comp , n ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 97.8361 98.9944 98.3973 99.9441 99.8781 99.362
H-33	99.41980658637152	if ( any ( list _ comp ( n , primes ) ) ) return false ;
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 99.7871 99.6789 99.9545 99.9732 99.9102 97.0228 98.1116 99.9054 98.2719
H-33	99.41745476973684	if ( any ( list _ comp ( n , primes ) ) ) return false ; }
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 99.7871 99.6789 99.9545 99.9732 99.9102 97.0228 98.1116 99.9054 98.8905 98.7567
H-33	99.41743977864583	if ( any ( list _ comp ( n , primes ) ) ) break ; else
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 99.7871 99.6789 99.9545 99.9732 99.9102 95.5555 99.6133 98.6237 99.4766
H-33	99.41680036272321	if ( any ( list _ comp ( primes ) ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 96.1822 99.5015 99.8181 99.8633 99.8596 99.2428
H-33	99.41496839021382	if ( any ( list _ comp ( list _ comp ( primes ) ) ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 96.1783 99.9593 99.8209 99.8407 96.9822 99.7326 99.7162 99.9413 99.9472 99.8155 99.5823
H-33	99.41330437911184	if ( ! any ( list _ comp ( n , primes ) ) ) return true ;
P-33	99.9996 97.2531 99.062 99.9244 99.5872 99.8864 99.8586 99.4579 99.657 99.8161 99.6927 99.9721 99.9559 99.9836 97.1058 99.4018 99.9195 98.4556
H-33	99.41090901692708	if ( any ( list _ comp ( n , primes ) ) ) break ; }
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 99.7871 99.6789 99.9545 99.9732 99.9102 95.5555 99.6133 98.7044 99.2784
H-33	99.40680486505681	if ( any ( n , primes ) ) {
P-33	99.9996 99.2597 99.6553 97.0665 98.9635 99.4958 99.928 99.9113 99.7769 99.555
H-33	99.40254720052083	if ( any ( list _ comp ) || any ( list _ comp ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 98.201 95.8939 99.0528 99.9799 99.2159 99.9761 99.4726 99.8475 99.9491 99.8537 99.7534
H-33	99.40232220818015	if ( any ( list _ comp ( n , primes ) ) ) continue {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 99.7871 99.6789 99.9545 99.9732 99.9102 97.0181 97.6667 98.91
H-33	99.40127563476562	if ( any ( list _ comp ( n / primes ) ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 95.4808 98.8786 99.9129 99.9516 99.9088 99.7853 99.5615
H-33	99.39942084418402	if ( any ( list _ comp ( n , primes ) ) ) throw null ;
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 99.7871 99.6789 99.9545 99.9732 99.9102 95.5877 98.319 99.8384 99.1999
H-33	99.39893296185662	if ( any ( list _ comp ( n , primes ) ) ) continue )
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 99.7871 99.6789 99.9545 99.9732 99.9102 97.0181 97.0776 99.4414
H-33	99.39824567522321	any ( list _ comp ( n , primes ) ) ; }
P-33	99.2355 99.5928 99.9201 99.8609 99.516 99.8015 99.8644 99.7827 99.9461 99.9676 99.9334 98.4644 99.8595
H-33	99.39715217141544	if ( ! any ( list _ comp ( n , n ) ) ) {
P-33	99.9996 97.2531 99.062 99.9244 99.5872 99.8864 99.8586 99.4579 99.657 99.8161 96.6555 99.3513 99.9581 99.988 99.7752 99.6578
H-33	99.3966796875	if ( ! any ( list _ comp ( n ) ) ) {
P-33	99.9996 97.2531 99.062 99.9244 99.5872 99.8864 99.8586 99.4579 99.657 97.4514 99.7386 99.9872 99.8482 99.3751
H-33	99.39575958251953	if ( any ( list _ comp ( n + 0 ) ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 96.3562 98.2042 99.7678 99.9236 99.9077 99.7782 99.4537
H-33	99.39468383789062	if ( ! any ( list _ comp ) ) {
P-33	99.9996 97.2531 99.062 99.9244 99.5872 99.8864 99.8586 98.0095 99.9533 99.7829 99.5558
H-33	99.39112091064453	if ( any ( list _ comp ( n , 0 ) ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 99.7871 94.5697 99.7557 99.9693 99.9167 99.7675 99.5511
H-33	99.38620334201389	if ( list _ comp != null && ! any ( list _ comp ) ) {
P-33	99.9996 97.9542 99.9766 99.8245 98.218 99.951 97.9311 98.782 99.1291 99.9454 99.3844 99.9885 99.5672 98.974 99.9755 99.8177 99.6697
H-33	99.38461785567434	if ( any ( list _ comp ( n , primes ) ) ) return true ; else
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 99.7871 99.6789 99.9545 99.9732 99.9102 97.0228 98.817 99.9116 98.302 98.0095
H-33	99.38140869140625	assert any ( list _ comp ( n , primes ) ) ;
P-33	99.1942 99.9132 99.645 99.9476 99.8468 99.609 99.7528 99.8578 99.7744 99.9675 99.9609 99.9338 99.8179
H-33	99.38085174560547	if ( any ( list _ comp ( n * primes ) ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 94.6363 99.4451 99.8825 99.941 99.9229 99.7934 99.5315
H-33	99.38035583496094	if ( any ( list _ comp ( n , 1 ) ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 99.7871 94.3679 99.796 99.9616 99.9208 99.7692 99.5422
H-33	99.38021850585938	if ( any ( list _ comp ( n - primes ) ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 96.196 98.0328 99.8842 99.9051 99.8752 99.7918 99.4572
H-33	99.37815638950893	if ( ! any ( list _ comp , primes ) ) {
P-33	99.9996 97.2531 99.062 99.9244 99.5872 99.8864 99.8586 98.1442 98.3886 99.8798 99.9631 99.8134 99.6703
H-33	99.37813527960526	if ( any ( list _ comp ( n , primes ) ) ) { break ; }
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 99.7871 99.6789 99.9545 99.9732 99.9102 99.7894 94.4268 99.7087 99.832 98.1829
H-33	99.37685977711396	if ( any ( list _ comp , n , list _ comp ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 97.8361 98.9944 99.5154 96.4749 99.9433 99.5279 99.5133 99.9789 99.8142 99.7579
H-33	99.37661404079861	if ( ! any ( list _ comp ( n , primes ) ) ) { {
P-33	99.9996 97.2531 99.062 99.9244 99.5872 99.8864 99.8586 99.4579 99.657 99.8161 99.6927 99.9721 99.9559 99.9836 99.7822 95.2932 99.7335
H-33	99.37172444661458	if ( any ( list _ comp ( n , primes ) ) && true ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 99.7871 99.6789 99.9545 99.9732 96.8988 96.1396 99.9393 99.7793 99.5995
H-33	99.37069881663604	if ( any ( list _ comp ( n , primes ) ) ) { }
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 99.7871 99.6789 99.9545 99.9732 99.9102 99.7894 94.3034 98.9643
H-33	99.36976623535156	while ( any ( list _ comp ( n , primes ) ) ) {
P-33	99.999 99.1465 99.5836 99.574 99.8651 99.8768 99.3572 99.6003 99.718 99.6775 99.9548 99.9717 99.859 99.8208 99.2855
H-33	99.36488342285156	if ( any ( list _ comp ( primes , primes ) ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 96.1822 98.6334 98.8531 99.5889 99.9692 99.923 99.7651 99.5555
H-33	99.36222330729167	if ( list _ comp . any ( n , primes ) ) {
P-33	99.9996 97.9542 99.9766 99.8245 98.3733 97.5982 99.8798 98.927 99.3229 99.689 99.9437 99.9434 99.7287 99.4096
H-33	99.3608154296875	if ( list _ comp ( n , primes , primes ) ) {
P-33	99.9996 97.9542 99.9766 99.8245 98.3525 99.7567 99.7619 99.6581 97.2666 99.1556 99.5933 99.9253 99.8221 99.5021
H-33	99.35897827148438	if ( any ( list _ comp ( n + $NUMBER$ ) ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 96.3562 97.5339 99.8366 99.9445 99.914 99.7672 99.4505
H-33	99.3525031594669	if ( any ( list _ comp ( n , primes ) ) ) break {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 99.7871 99.6789 99.9545 99.9732 99.9102 95.5555 97.9871 99.2051
H-33	99.3489990234375	if ( list _ comp != null && any ( list _ comp ) ) {
P-33	99.9996 97.9542 99.9766 99.8245 98.218 99.951 97.9311 98.2868 99.6458 99.3092 99.9738 99.5821 99.0204 99.9756 99.8082 99.6129
H-33	99.34611002604167	if ( list _ comp ( n , n , primes ) ) {
P-33	99.9996 97.9542 99.9766 99.8245 98.3525 99.7567 99.7619 96.414 99.467 99.6557 99.9657 99.89 99.8014 99.5085
H-33	99.34520670572917	if ( any ( list _ comp , primes , primes ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 97.8361 98.2611 97.9503 99.0751 99.6537 99.966 99.8313 99.5542
H-33	99.34139251708984	if ( any ( list _ comp ( n / n ) ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 95.4808 98.4332 99.5056 99.9507 99.9223 99.7692 99.4596
H-33	99.33843587239583	if ( any ( list _ comp , list _ comp ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 97.8361 96.0732 99.9636 99.6373 99.0252 99.9761 99.8665 99.6482
H-33	99.326904296875	if ( ! list _ comp ( n , primes ) ) {
P-33	99.9996 97.2531 97.2541 99.9602 99.8452 98.0395 99.7219 99.7597 99.678 99.9352 99.9397 99.8356 99.4913
H-33	99.32556966145833	any ( list _ comp ( n , primes ) ) ; break ;
P-33	99.2355 99.5928 99.9201 99.8609 99.516 99.8015 99.8644 99.7827 99.9461 99.9676 99.9334 97.4177 99.7173 99.497
H-33	99.32080078125	if ( any ( any ( list _ comp ) ) ) {
P-33	99.9996 99.2597 99.6553 95.6883 99.9469 99.1348 99.7531 99.8332 98.5722 99.8196 99.8235 99.8471 99.2947
H-33	99.31433977399554	if ( ! any ( list _ comp , n ) ) {
P-33	99.9996 97.2531 99.062 99.9244 99.5872 99.8864 99.8586 98.1442 99.0698 98.3805 99.9762 99.8655 99.53
H-33	99.31092247596153	if ( any ( list _ comp ( n ) ) )
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 97.5473 99.8451 99.898 96.8108
H-33	99.30912642045455	if ( any ( list _ comp ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 98.201 99.9198 99.7739 96.4554
H-33	99.29701585036058	if ( any ( list , n , primes ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 95.1789 99.0869 99.4832 99.523 99.9559 99.9178 99.8332 99.5749
H-33	99.293310546875	if ( any ( list _ comp ( n , primes ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 99.5731 99.7871 99.6789 99.9545 99.9732 94.1025 98.9626
H-33	99.28379603794643	if ( any ( list _ comp , n , primes ) )
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 97.8361 98.9944 99.5154 99.6748 99.9747 99.9535 95.9741
H-33	99.2821514423077	if ( any ( list _ comp ( ) ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 94.5333 99.5998 99.8195 99.8282 99.5194
H-33	99.27576700846355	if ( any ( list [ n ] ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 95.4094 99.2039 99.9195 99.7979 99.9233 99.8538 98.8941
H-33	99.27138846261161	if ( any ( list _ comp ( 1 ) ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 99.3175 95.6537 98.1643 99.6724 99.8825 99.847 99.2116
H-33	99.26905235877403	if ( any ( list _ comp , 0 ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 97.8361 95.882 99.4359 99.9171 99.8456 99.5307
H-33	99.23477172851562	if ( list _ comp ( n , primes ) )
P-33	99.9996 97.9542 99.9766 99.8245 98.3525 99.7567 99.7619 99.6581 99.9043 99.8784 95.8871
H-33	99.23302205403645	if ( any ( list ( primes ) ) ) {
P-33	99.9996 99.2597 99.6553 99.5294 96.9538 97.6322 99.673 99.622 99.7658 99.8766 98.9655
H-33	99.22694905598958	if ( ! any ( n , primes ) ) {
P-33	99.9996 97.2531 99.062 99.9244 96.9025 99.1286 99.3953 99.9174 99.947 99.738 99.592
H-33	99.2194112141927	if ( any ( list _ comp , primes ) )
P-33	99.9996 99.2597 99.6553 99.5294 99.8846 99.8583 97.8361 98.2611 99.7976 99.9339 96.754
H-33	99.18468017578125	if ( ! any ( primes ) ) {
P-33	99.9996 97.2531 99.062 99.9244 96.8753 99.3963 99.8386 99.868 99.766
H-33	99.17381702769886	if ( any ( primes , primes ) ) {
P-33	99.9996 99.2597 99.6553 97.3478 97.4019 98.9205 99.2611 99.942 99.7517 99.5093
H-33	99.10599093967014	if ( any ( primes ) ) {
P-33	99.9996 99.2597 99.6553 97.3478 99.4099 99.8749 99.8741 96.6693
S-34	while ( Math . abs ( x - approx ) > epsilon ) {
T-34	while ( Math . abs ( x - approx * approx ) > epsilon ) {
H-34	99.83451334635417	while ( Math . abs ( x - approx ) > epsilon ) {
P-34	99.9992 99.0132 99.9987 99.8333 99.9933 99.6806 99.9465 99.8707 99.7872 99.7748 99.8873 99.9903 99.9766 99.9062
H-34	99.72898954503677	while ( Math . abs ( x - approx - approx ) > epsilon ) {
P-34	99.9992 99.0132 99.9987 99.8333 99.9933 99.6806 99.9465 99.8707 98.2349 99.6207 99.7015 99.8562 99.8852 99.9923 99.9754 99.9315
H-34	99.6659423828125	while ( Math . abs ( x - approx ) == epsilon ) {
P-34	99.9992 99.0132 99.9987 99.8333 99.9933 99.6806 99.9465 99.8707 99.7872 97.2389 99.9331 99.9816 99.9741 99.879
H-34	99.64952799479167	while ( Math . abs ( x - approx ) != epsilon ) {
P-34	99.9992 99.0132 99.9987 99.8333 99.9933 99.6806 99.9465 99.8707 99.7872 96.9932 99.9252 99.9822 99.9788 99.8812
H-34	99.635888671875	while ( Math . abs ( x - approx ) <= epsilon ) {
P-34	99.9992 99.0132 99.9987 99.8333 99.9933 99.6806 99.9465 99.8707 99.7872 96.7917 99.9133 99.9876 99.9678 99.8955
H-34	99.63277994791666	if ( Math . abs ( x - approx ) > epsilon ) {
P-34	99.9988 98.7862 99.9985 99.7614 99.9871 99.708 99.9417 99.8748 99.8234 99.729 99.8735 99.9893 99.9558 99.8886
H-34	99.6191047219669	while ( Math . abs ( x - approx - epsilon ) > epsilon ) {
P-34	99.9992 99.0132 99.9987 99.8333 99.9933 99.6806 99.9465 99.8707 98.2349 97.5247 99.9887 99.8059 99.8803 99.9933 99.9684 99.9332
H-34	99.59347330729166	while ( Math . min ( x , approx ) > epsilon ) {
P-34	99.9992 99.0132 99.9987 96.7946 99.9929 99.8394 99.1514 99.7877 99.8058 99.8944 99.8948 99.9888 99.9696 99.912
H-34	99.57939453125	while ( Math . abs ( x - approx ) < epsilon ) {
P-34	99.9992 99.0132 99.9987 99.8333 99.9933 99.6806 99.9465 99.8707 99.7872 95.9914 99.8881 99.9859 99.9669 99.8764
H-34	99.57403923483456	while ( Math . abs ( x - approx - x ) > epsilon ) {
P-34	99.9992 99.0132 99.9987 99.8333 99.9933 99.6806 99.9465 99.8707 98.2349 96.9095 99.8074 99.8334 99.8925 99.9899 99.9698 99.9262
H-34	99.56540151742789	while ( Math . abs ( x ) > epsilon ) {
P-34	99.9992 99.0132 99.9987 99.8333 99.9933 99.6806 96.5502 99.7938 99.9084 99.9789 99.9673 99.7735
H-34	99.56125057444854	while ( Math . abs ( x - approx - approx ) == epsilon ) {
P-34	99.9992 99.0132 99.9987 99.8333 99.9933 99.6806 99.9465 99.8707 98.2349 99.6207 99.7015 96.986 99.9324 99.9853 99.9689 99.9164
H-34	99.56046549479167	while ( Math . abs ( x - approx ) >= epsilon ) {
P-34	99.9992 99.0132 99.9987 99.8333 99.9933 99.6806 99.9465 99.8707 99.7872 95.6515 99.9065 99.988 99.9743 99.9044
H-34	99.551904296875	while ( Math . abs ( approx - approx ) > epsilon ) {
P-34	99.9992 99.0132 99.9987 99.8333 99.9933 95.5599 99.8498 99.8163 99.8224 99.7939 99.8766 99.9925 99.9702 99.8998
H-34	99.5489013671875	while ( x - approx > epsilon ) {
P-34	99.9992 99.0859 98.7807 99.8306 98.6881 99.5496 99.9385 99.9805 99.7764
H-34	99.54881286621094	} while ( Math . abs ( x - approx ) > epsilon ) {
P-34	99.4533 99.9962 99.3588 99.9992 99.8529 99.9972 99.7784 99.9336 99.8832 99.8183 99.795 99.9183 99.9926 99.9793 99.9492
H-34	99.54737141927083	while ( Math . min ( x - approx ) > epsilon ) {
P-34	99.9992 99.0132 99.9987 96.7946 99.9929 99.8394 99.1933 99.9146 98.9816 99.8652 99.8916 99.9911 99.9704 99.9053
H-34	99.540576171875	while ( Math . max ( x , approx ) > epsilon ) {
P-34	99.9992 99.0132 99.9987 96.1045 99.9931 99.8207 99.0435 99.7947 99.824 99.8873 99.8874 99.9894 99.9703 99.9232
H-34	99.53917020909927	while ( Math . abs ( x - approx - approx ) <= epsilon ) {
P-34	99.9992 99.0132 99.9987 99.8333 99.9933 99.6806 99.9465 99.8707 98.2349 99.6207 99.7015 96.6129 99.9197 99.9902 99.9639 99.9267
H-34	99.5334243774414	while ( Math . abs ( x - approx ) > epsilon ) { {
P-34	99.9992 99.0132 99.9987 99.8333 99.9933 99.6806 99.9465 99.8707 99.7872 99.7748 99.8873 99.9903 99.9766 95.1985 99.7249
H-34	99.52333984375	while ( Math . abs ( x - x ) > epsilon ) {
P-34	99.9992 99.0132 99.9987 99.8333 99.9933 99.6806 99.9465 95.3797 99.6688 99.7642 99.8711 99.9864 99.971 99.8844
H-34	99.52294108072917	while ( Math . max ( x - approx ) > epsilon ) {
P-34	99.9992 99.0132 99.9987 96.1045 99.9931 99.8207 99.2892 99.9105 99.2263 99.8601 99.8852 99.9902 99.9731 99.9205
H-34	99.51835123697917	while ( Math . round ( x - approx ) > epsilon ) {
P-34	99.9992 99.0132 99.9987 95.0451 99.993 99.6205 99.9427 99.8693 99.7805 99.8797 99.8993 99.9929 99.9756 99.9062
H-34	99.5180892944336	while ( Math . abs ( x - approx ) > epsilon ) { }
P-34	99.9992 99.0132 99.9987 99.8333 99.9933 99.6806 99.9465 99.8707 99.7872 99.7748 99.8873 99.9903 99.9766 94.9564 99.7216
H-34	99.51160278320313	while ( x - approx == epsilon ) {
P-34	99.9992 99.0859 98.7807 99.8306 98.2979 99.7064 99.903 99.9772 99.6755
H-34	99.50301106770833	while ( Math . abs ( x - approx ) > approx ) {
P-34	99.9992 99.0132 99.9987 99.8333 99.9933 99.6806 99.9465 99.8707 99.7872 99.7748 94.9677 99.9722 99.9684 99.8799
H-34	99.50160319010416	while ( Math . abs ( x - epsilon ) > epsilon ) {
P-34	99.9992 99.0132 99.9987 99.8333 99.9933 99.6806 99.9465 94.7604 99.9827 99.7107 99.8724 99.9907 99.9718 99.9109
H-34	99.49923502604166	while ( Math . abs ( x + approx ) > epsilon ) {
P-34	99.9992 99.0132 99.9987 99.8333 99.9933 99.6806 94.9081 99.8806 99.7644 99.7887 99.8942 99.9909 99.979 99.9048
H-34	99.49861145019531	while ( ! Math . abs ( x - approx ) > epsilon ) {
P-34	99.9992 94.9876 99.0367 99.9996 99.8597 99.9968 99.5995 99.9246 99.8709 99.8102 99.324 99.8824 99.9897 99.9599 99.8773
H-34	99.49691772460938	while ( x Math . abs ( x - approx ) > epsilon ) {
P-34	99.9992 99.0859 94.2953 99.9968 99.8426 99.9954 99.7466 99.8784 99.8231 99.8532 99.8172 99.8971 99.9911 99.9742 99.895
H-34	99.49125162760417	while ( Math . abs ( x - approx ) > $NUMBER$ ) {
P-34	99.9992 99.0132 99.9987 99.8333 99.9933 99.6806 99.9465 99.8707 99.7872 99.7748 95.057 99.6892 99.9752 99.8904
H-34	99.48609212239583	if ( Math . abs ( x - approx ) == epsilon ) {
P-34	99.9988 98.7862 99.9985 99.7614 99.9871 99.708 99.9417 99.8748 99.8234 97.4835 99.9071 99.9809 99.9613 99.9031
H-34	99.485791015625	while ( Math . abs ( x - approx ) & epsilon ) {
P-34	99.9992 99.0132 99.9987 99.8333 99.9933 99.6806 99.9465 99.8707 99.7872 94.5165 99.9113 99.9935 99.9785 99.9047
H-34	99.48182373046875	while ( x - approx != epsilon ) {
P-34	99.9992 99.0859 98.7807 99.8306 97.9605 99.7074 99.9077 99.9846 99.7021
H-34	99.47545623779297	final while ( Math . abs ( x - approx ) > epsilon ) {
P-34	99.4105 99.9973 99.2405 99.9992 99.8021 99.9958 99.7136 99.9132 99.8832 99.8368 99.8277 99.9123 99.992 99.9795 99.93
H-34	99.4680419921875	if ( Math . abs ( x - approx ) != epsilon ) {
P-34	99.9988 98.7862 99.9985 99.7614 99.9871 99.708 99.9417 99.8748 99.8234 97.2483 99.9003 99.9826 99.9576 99.8764
H-34	99.45699055989583	while ( Math . abs ( x - approx ) > epsilon ) ;
P-34	99.9992 99.0132 99.9987 99.8333 99.9933 99.6806 99.9465 99.8707 99.7872 99.7748 99.8873 99.9903 94.2701 99.9499
H-34	99.45182800292969	while ( Math . abs ( x - approx ) > epsilon ) break ;
P-34	99.9992 99.0132 99.9987 99.8333 99.9933 99.6806 99.9465 99.8707 99.7872 99.7748 99.8873 99.9903 94.3013 99.6103 99.6829
H-34	99.443896484375	if ( Math . abs ( x - approx ) <= epsilon ) {
P-34	99.9988 98.7862 99.9985 99.7614 99.9871 99.708 99.9417 99.8748 99.8234 96.8735 99.8949 99.9877 99.9495 99.8974
H-34	99.44231305803571	while ( ( x - approx - approx ) > epsilon ) {
P-34	99.9992 95.9184 99.6564 99.3921 99.8162 98.8176 99.5816 99.8122 99.6914 99.8102 99.9898 99.9729 99.8749
H-34	99.44225056966145	while ( ( x - approx ) > epsilon ) {
P-34	99.9992 95.9184 99.6564 99.3921 99.8162 99.5142 99.5505 99.8457 99.987 99.9773 99.7905
H-34	99.42691650390626	while ( x - approx <= epsilon ) {
P-34	99.9992 99.0859 98.7807 99.8306 97.6294 99.4302 99.9192 99.9752 99.759
H-34	99.4259033203125	while ( Math . abs ( x * approx ) > epsilon ) {
P-34	99.9992 99.0132 99.9987 99.8333 99.9933 99.6806 93.8579 99.8354 99.711 99.8431 99.8941 99.9906 99.9785 99.8999
H-34	99.4255126953125	while ( Math . min ( x + approx ) > epsilon ) {
P-34	99.9992 99.0132 99.9987 96.7946 99.9929 99.8394 97.232 99.9017 99.1026 99.8767 99.9005 99.9911 99.9722 99.9083
H-34	99.41630045572917	if ( Math . min ( x , approx ) > epsilon ) {
P-34	99.9988 98.7862 99.9985 96.9546 99.9894 99.8357 99.3719 99.8034 99.815 99.8311 99.8605 99.9877 99.943 99.8929
H-34	99.4151611328125	while ( Math . abs ( x - approx - ) > epsilon ) {
P-34	99.9992 99.0132 99.9987 99.8333 99.9933 99.6806 99.9465 99.8707 98.2349 94.6916 99.7983 99.8493 99.9966 99.9698 99.9067
H-34	99.4135272686298	while ( x ( approx - approx ) > epsilon ) {
P-34	99.9992 99.0859 95.7914 99.5722 99.3166 99.6061 99.6911 99.795 99.8364 99.9834 99.974 99.865
H-34	99.41298014322916	while ( x > approx ) { while ( x > approx ) {
P-34	99.9992 99.0859 98.3499 99.4762 99.7895 99.9826 97.4807 99.9909 99.4926 99.2088 99.4678 99.8931 99.9728 99.1454
H-34	99.40596923828124	while ( x - approx >= epsilon ) {
P-34	99.9992 99.0859 98.7807 99.8306 97.2447 99.5796 99.9254 99.9803 99.7737
H-34	99.40308556189903	synchronized ( Math . abs ( x - approx ) ) {
P-34	99.9995 99.0108 99.999 99.5723 99.9908 99.6906 99.9159 99.891 99.8752 99.9876 99.9939 99.8622
H-34	99.39927571614584	while ( Math . abs ( x - approx ) > x ) {
P-34	99.9992 99.0132 99.9987 99.8333 99.9933 99.6806 99.9465 99.8707 99.7872 99.7748 93.4053 99.961 99.9743 99.8914
H-34	99.39651489257812	while ( Math . abs ( x - approx ) == epsilon ) { {
P-34	99.9992 99.0132 99.9987 99.8333 99.9933 99.6806 99.9465 99.8707 99.7872 97.2389 99.9331 99.9816 99.9741 95.5535 99.6806
H-34	99.382568359375	while ( x abs ( x - approx ) > epsilon ) {
P-34	99.9992 99.0859 94.8261 99.6597 99.5582 99.482 99.7426 99.7097 99.791 99.8515 99.9875 99.9651 99.838
H-34	99.38143920898438	while ( Math . abs ( x - approx ) == epsilon ) { }
P-34	99.9992 99.0132 99.9987 99.8333 99.9933 99.6806 99.9465 99.8707 99.7872 97.2389 99.9331 99.9816 99.9741 95.4027 99.5901
H-34	99.375244140625	while ( Math . abs ( x - approx ) != epsilon ) { {
P-34	99.9992 99.0132 99.9987 99.8333 99.9933 99.6806 99.9465 99.8707 99.7872 96.9932 99.9252 99.9822 99.9788 95.4712 99.671
H-34	99.37509155273438	while ( x - approx > approx ) {
P-34	99.9992 99.0859 98.7807 99.8306 98.6881 97.9498 99.8656 99.9787 99.7127
H-34	99.37386881510416	while ( x < approx ) { while ( x > approx ) {
P-34	99.9992 99.0859 98.2571 99.545 99.7726 99.9758 97.4686 99.9915 99.4972 98.8436 99.4413 99.893 99.9711 99.0066
H-34	99.37211390904018	while ( Math . abs ( x - approx ) > epsilon )
P-34	99.9992 99.0132 99.9987 99.8333 99.9933 99.6806 99.9465 99.8707 99.7872 99.7748 99.8873 99.9903 93.5749
H-34	99.37154134114583	while ( Math . abs ( x - approx ) > 0 ) {
P-34	99.9992 99.0132 99.9987 99.8333 99.9933 99.6806 99.9465 99.8707 99.7872 99.7748 94.7135 98.2372 99.9697 99.8957
H-34	99.37105618990384	while ( Math . abs ( x ) == epsilon ) {
P-34	99.9992 99.0132 99.9987 99.8333 99.9933 99.6806 96.5502 97.3388 99.937 99.9583 99.9655 99.6961
H-34	99.36872863769531	if ( Math . abs ( x - approx ) > epsilon ) { {
P-34	99.9988 98.7862 99.9985 99.7614 99.9871 99.708 99.9417 99.8748 99.8234 99.729 99.8735 99.9893 99.9558 95.5097 99.7868
H-34	99.36638934795673	while ( Math . abs ( approx ) > epsilon ) {
P-34	99.9992 99.0132 99.9987 99.8333 99.9933 95.5599 97.9199 99.8561 99.9306 99.9852 99.9698 99.8443
H-34	99.3595703125	while ( x - approx < epsilon ) {
P-34	99.9992 99.0859 98.7807 99.8306 97.3238 99.1118 99.9299 99.9663 99.7079
H-34	99.35491071428571	while ( x - approx . length ( ) > epsilon ) {
P-34	99.9992 99.0859 98.7807 99.8306 96.5071 98.6739 99.2377 99.9814 99.5942 99.8013 99.9677 99.9847 99.6646
H-34	99.33790001502403	if ( Math . abs ( x ) > epsilon ) {
P-34	99.9988 98.7862 99.9985 99.7614 99.9871 99.708 96.7234 99.7162 99.8525 99.9736 99.9447 99.7666
H-34	99.33713942307692	while ( Math . abs ( x ) != epsilon ) {
P-34	99.9992 99.0132 99.9987 99.8333 99.9933 99.6806 96.5502 96.922 99.9543 99.9617 99.9683 99.6484
H-34	99.33029174804688	while ( x - approx <= approx ) {
P-34	99.9992 99.0859 98.7807 99.8306 97.6294 98.5923 99.8614 99.9706 99.6933
H-34	99.328271484375	while ( x - approx < approx ) {
P-34	99.9992 99.0859 98.7807 99.8306 97.3238 98.9597 99.8526 99.9623 99.6284
H-34	99.3125	while ( Math . abs ( x <= approx ) ) {
P-34	99.9992 99.0132 99.9987 99.8333 99.9933 99.6806 93.5263 99.7596 99.9225 99.8677 99.9616 99.6468
H-34	99.30596923828125	while ( ( x - approx ) == epsilon ) {
P-34	99.9992 95.9184 99.6564 99.3921 99.8162 99.5142 97.9542 99.8974 99.9792 99.9695 99.7153
H-34	99.30586381392045	while ( x ( approx ) > epsilon ) {
P-34	99.9992 99.0859 95.7914 99.5722 98.748 99.7994 99.8142 99.9687 99.9698 99.7562
H-34	99.3029315655048	while ( Math . abs ( x ) <= epsilon ) {
P-34	99.9992 99.0132 99.9987 99.8333 99.9933 99.6806 96.5502 96.4195 99.9093 99.9737 99.9564 99.751
H-34	99.29375610351562	if ( x - approx == epsilon ) {
P-34	99.9988 99.1209 99.196 99.7913 98.4478 99.6286 99.9059 99.949 99.7235
H-34	99.291748046875	while ( x . length ( ) > epsilon ) {
P-34	99.9992 99.0859 96.1478 97.9095 99.6186 99.9924 99.561 99.7146 99.9619 99.9833 99.6671
H-34	99.2913818359375	while ( x - approx == approx ) {
P-34	99.9992 99.0859 98.7807 99.8306 98.2979 97.6596 99.8467 99.975 99.5787
H-34	99.28305053710938	while ( x - approx - approx > epsilon ) {
P-34	99.9992 99.0859 98.7807 99.8306 97.2211 99.5015 98.0128 99.5567 99.9661 99.986 99.5965
H-34	99.2797139485677	while ( x - approx - approx <= epsilon ) {
P-34	99.9992 99.0859 98.7807 99.8306 97.2211 99.5015 98.0955 99.5176 99.9524 99.9819 99.5308
H-34	99.27107747395833	while ( x - approx - approx == epsilon ) {
P-34	99.9992 99.0859 98.7807 99.8306 97.2211 99.5015 98.0856 99.6929 99.948 99.9818 99.2661
H-34	99.25689697265625	while ( x < approx - approx ) {
P-34	99.9992 99.0859 98.2571 99.545 97.3557 99.2559 99.5263 99.9641 99.7201
H-34	99.25597534179687	if ( x - approx > epsilon ) {
P-34	99.9988 99.1209 99.196 99.7913 98.2756 99.4219 99.9399 99.9424 99.6972
H-34	99.24716186523438	while ( x > approx || x > approx ) {
P-34	99.9992 99.0859 98.3499 99.4762 97.1538 99.4078 98.8433 99.1871 99.9274 99.9692 99.7066
H-34	99.24100341796876	while ( x - approx != 0 ) {
P-34	99.9992 99.0859 98.7807 99.8306 97.9605 97.5382 99.6608 99.9873 99.7073
H-34	99.240234375	if ( x - approx != epsilon ) {
P-34	99.9988 99.1209 99.196 99.7913 98.0067 99.5714 99.9034 99.9514 99.6867
H-34	99.22799072265624	while ( x > approx - approx ) {
P-34	99.9992 99.0859 98.3499 99.4762 97.512 98.9282 99.3539 99.9697 99.7453
H-34	99.22415771484376	while ( x - approx >= approx ) {
P-34	99.9992 99.0859 98.7807 99.8306 97.2447 97.8555 99.874 99.9778 99.7336
H-34	99.20914916992187	while ( x - epsilon > epsilon ) {
P-34	99.9992 99.0859 98.7807 96.4515 98.5989 99.5768 99.9576 99.9784 99.8029
H-34	99.20836791992187	while ( x - approx > 0 ) {
P-34	99.9992 99.0859 98.7807 99.8306 98.6881 96.4801 99.5818 99.9851 99.7926
H-34	99.20133463541667	while ( x < approx ) { }
P-34	99.9992 99.0859 98.2571 99.545 99.7726 99.9758 96.7872 99.5297
H-34	99.20121459960937	while ( x > approx - epsilon ) {
P-34	99.9992 99.0859 98.3499 99.4762 97.512 98.0222 99.9267 99.9759 99.8044
H-34	99.20120578342014	while ( x > approx ) { }
P-34	99.9992 99.0859 98.3499 99.4762 99.7895 99.9826 96.6616 99.6065
H-34	99.1931884765625	if ( x - approx <= epsilon ) {
P-34	99.9988 99.1209 99.196 99.7913 97.55 99.5136 99.9252 99.938 99.7225
H-34	99.17109985351563	while ( x - approx != approx ) {
P-34	99.9992 99.0859 98.7807 99.8306 97.9605 96.7396 99.8704 99.9846 99.5999
H-34	99.16996459960937	while ( x - approx >= 0 ) {
P-34	99.9992 99.0859 98.7807 99.8306 97.2447 97.5998 99.5356 99.9845 99.7791
H-34	99.14083862304688	while ( x > approx ) {
P-34	99.9992 99.0859 98.3499 99.4762 99.7895 99.9826 96.5839
H-34	99.12407684326172	while ( x < approx ) {
P-34	99.9992 99.0859 98.2571 99.545 99.7726 99.9758 96.4975
H-34	99.09977213541667	while ( x <= approx ) { }
P-34	99.9992 99.0859 97.4492 99.5186 99.7964 99.9746 96.6877 99.5267
H-34	99.06681315104167	while ( x == approx ) { }
P-34	99.9992 99.0859 97.6026 99.2423 99.6942 99.9746 96.8794 99.2635
H-34	99.05813259548611	while ( x >= approx ) { }
P-34	99.9992 99.0859 97.1698 99.3701 99.7898 99.9783 96.6875 99.583
H-34	99.03262329101562	while ( x <= approx ) {
P-34	99.9992 99.0859 97.4492 99.5186 99.7964 99.9746 96.5775
H-34	99.0260009765625	while ( x > epsilon ) {
P-34	99.9992 99.0859 98.3499 98.375 99.899 99.9822 96.6572
S-35	return new Array CaMeL List ( ) ;
T-35	Array CaMeL List empty _ set = new Array CaMeL List < Array CaMeL List > ( ) ; empty _ set . add ( new Array CaMeL List ( ) ) ; return empty _ set ;
H-35	99.91263580322266	return new Array CaMeL List < Array CaMeL List < String > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 99.3625 99.9986 99.7996 99.5137 97.5798 99.9921 99.9935 99.982 99.9951 102.9224
H-35	99.84463500976562	return new Array CaMeL List < Array CaMeL List < Object > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 99.3625 99.9986 99.7996 99.5137 96.5024 99.9847 99.991 99.9807 99.9949 102.9233
H-35	99.83830261230469	return new Array CaMeL List < Array CaMeL List < Integer > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 99.3625 99.9986 99.7996 99.5137 96.4096 99.9906 99.9932 99.9753 99.9949 102.9122
H-35	99.80326625279018	return new Array CaMeL List < Array CaMeL List > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 99.3625 99.9986 99.7996 98.9808 99.9949 99.9802 99.9965 99.6701
H-35	99.7949447631836	return new Array CaMeL List < Array CaMeL List < ? > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 99.3625 99.9986 99.7996 99.5137 95.7068 99.988 99.9955 99.9767 99.9949 102.9202
H-35	99.79350280761719	return new Array CaMeL List < Array CaMeL List < return > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 99.3625 99.9986 99.7996 99.5137 96.0095 99.6718 99.9905 99.971 99.9949 102.9211
H-35	99.77910614013672	return new Array CaMeL List < Array CaMeL List < List > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 99.3625 99.9986 99.7996 99.5137 95.7573 99.6845 99.9889 99.9815 99.9961 102.9202
H-35	99.75798034667969	return new Array CaMeL List < Array CaMeL List < Node > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 99.3625 99.9986 99.7996 99.5137 95.1108 99.9781 99.993 99.9846 99.9953 102.9286
H-35	99.75240325927734	return new Array CaMeL List < Array CaMeL List < int > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 99.3625 99.9986 99.7996 99.5137 95.0452 99.9633 99.9931 99.9781 99.9939 102.9276
H-35	99.73085530598958	return new Array CaMeL List < String > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 97.3979 99.9893 99.9966 99.9662 99.9956 99.9619
H-35	99.7197265625	return new Array CaMeL List < Object > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 97.299 99.9622 99.9954 99.9632 99.995 99.9591
H-35	99.71814727783203	return new Array CaMeL List < Array CaMeL List < Class > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 99.3625 99.9986 99.7996 99.5137 94.4915 99.963 99.9915 99.9837 99.995 102.9286
H-35	99.71025085449219	return new Array CaMeL List < Array CaMeL List < char > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 99.3625 99.9986 99.7996 99.5137 94.3631 99.9681 99.9923 99.9746 99.994 102.9346
H-35	99.70623779296875	return new Array CaMeL List < Linked CaMeL List < String > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 95.8046 99.9988 99.8109 99.5878 97.7572 99.9918 99.994 99.9865 99.9951 102.9101
H-35	99.70011138916016	return new Array CaMeL List < List < Array CaMeL List > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 96.1761 98.8556 99.2215 99.9992 99.8222 99.0416 99.9872 99.9833 99.9952 102.657
H-35	99.69767761230469	return new Array CaMeL List < Array CaMeL List < Byte > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 99.3625 99.9986 99.7996 99.5137 94.1772 99.9922 99.9905 99.9691 99.9944 102.9022
H-35	99.69747161865234	return new Array CaMeL List < Array CaMeL List < Vector > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 99.3625 99.9986 99.7996 99.5137 94.1597 99.9719 99.9921 99.9823 99.9955 102.9209
H-35	99.69276428222656	return new return new Array CaMeL List < Array CaMeL List > ( ) ;
P-35	99.8938 94.6973 99.8945 99.8548 99.9996 99.9177 99.9696 99.3905 99.9987 99.6951 99.1579 99.9954 99.9752 99.9934 102.8446
H-35	99.66891479492188	return new Array CaMeL List < Array CaMeL List < Long > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 99.3625 99.9986 99.7996 99.5137 93.6986 99.9899 99.9937 99.9756 99.9948 102.9128
H-35	99.66539091222427	return new Array CaMeL List < new Array CaMeL List < String > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 94.503 99.7215 99.9994 99.9054 99.9606 97.8782 99.9284 99.9956 99.9836 99.9949 102.9784
H-35	99.66141510009766	return new Array CaMeL List < Array CaMeL List < Boolean > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 99.3625 99.9986 99.7996 99.5137 93.5962 99.9881 99.9829 99.9795 99.9946 102.9043
H-35	99.65878295898438	return new Array CaMeL List < Array CaMeL List < ) > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 99.3625 99.9986 99.7996 99.5137 93.6454 99.8779 99.9947 99.9682 99.9966 102.9207
H-35	99.63974178538604	return new Array CaMeL List < Array CaMeL List < ( > ( ) ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 99.3625 99.9986 99.7996 99.5137 94.5746 99.3811 99.1957 99.8649 99.8231 99.9862 102.9129
H-35	99.6236801147461	return new List < Array CaMeL List < Array CaMeL List > ( ) ;
P-35	99.8938 95.2122 99.8186 99.3808 99.9995 99.8383 99.7959 99.0585 99.9992 99.6032 99.0035 99.9884 99.984 99.99 102.6067
H-35	99.61127786075367	result = new Array CaMeL List < Array CaMeL List < String > ( ) ;
P-35	99.9316 99.8341 99.7652 99.9998 99.9218 99.9598 99.5268 99.9989 99.714 99.5855 97.6513 99.9925 99.995 99.9851 99.9961 102.1859
H-35	99.60820661272321	return new Array CaMeL List < List < String > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 96.1761 98.8556 97.1632 99.9921 99.9915 99.9892 99.9954 102.8889
H-35	99.60397518382354	return new Array CaMeL List < Array CaMeL List < String > ( ) ; ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 99.3625 99.9986 99.7996 99.5137 97.5798 99.9921 99.9935 99.982 99.9951 94.6343 102.9536
H-35	99.60276884191177	return new Array CaMeL List < Array CaMeL List > ( ) ; } else ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 99.3625 99.9986 99.7996 98.9808 99.9949 99.9802 99.9965 98.5892 99.4945 94.656 102.9316
H-35	99.59682210286458	return new Array CaMeL List < Integer > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 95.8133 99.9883 99.995 99.9549 99.9956 99.9519
H-35	99.59554617745536	return new Array CaMeL List < List < Object > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 96.1761 98.8556 96.9862 99.9855 99.9872 99.9889 99.9948 102.9005
H-35	99.59414672851562	return new Array CaMeL List < List > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 96.1761 99.579 99.9952 99.9691 99.9967 99.9509
H-35	99.58346557617188	return new Array CaMeL List < Node > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 95.6538 99.9568 99.9952 99.975 99.9956 99.9622
H-35	99.55082194010417	return new Array CaMeL List < ? > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 95.6898 99.5486 99.9967 99.957 99.9923 99.9627
H-35	99.54770914713542	return new Array CaMeL List < return > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 95.3877 99.8176 99.991 99.9528 99.9935 99.9671
H-35	99.53711809430804	return new Array CaMeL List < Linked CaMeL List > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 95.8046 99.9988 99.8109 98.8404 99.9954 99.9838 99.9965 99.6264
H-35	99.53065490722656	return new Array CaMeL List < Array CaMeL List > ( ) ; } else
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 99.3625 99.9986 99.7996 98.9808 99.9949 99.9802 99.9965 98.5892 99.4945 96.8311
H-35	99.52253069196429	return new Array CaMeL List < Hash CaMeL Set > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 95.6776 99.9972 99.2996 99.1164 99.9956 99.9828 99.9969 99.7865
H-35	99.51334635416667	return new Array CaMeL List < Array CaMeL List > ( ) ; }
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 99.3625 99.9986 99.7996 98.9808 99.9949 99.9802 99.9965 98.5892 96.5352
H-35	99.51296997070312	return new Array CaMeL List < int > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 94.8196 99.9588 99.9939 99.9622 99.9947 99.9637
H-35	99.50846354166667	return new Array CaMeL List < Vector > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 94.7918 99.93 99.9953 99.9713 99.9961 99.9543
H-35	99.5072021484375	return new Array CaMeL List < Array CaMeL List ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 99.3625 99.9986 99.7996 95.5083 99.8505 99.898 99.7135
H-35	99.4995361328125	return new Array CaMeL List < Array CaMeL List > ( ) ; ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 99.3625 99.9986 99.7996 98.9808 99.9949 99.9802 99.9965 94.9705 99.9469
H-35	99.49609375	return new Array CaMeL List < Byte > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 94.6391 99.9875 99.9935 99.937 99.9946 99.9387
H-35	99.48539225260417	return new Array CaMeL List ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 96.1478 99.9138 99.9936 99.8187
H-35	99.45670572916667	return new Array CaMeL List < char > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 94.2241 99.8946 99.9922 99.9477 99.9942 99.965
H-35	99.45350138346355	return new Array CaMeL List < Class > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 94.1221 99.9285 99.9953 99.9742 99.9955 99.9636
H-35	99.45093536376953	try { return new Array CaMeL List < Array CaMeL List > ( ) ;
P-35	99.9968 99.5477 99.9017 99.9245 99.9998 99.9051 99.9586 99.4532 99.9993 99.7848 99.1243 99.9957 99.9598 99.9946 99.639
H-35	99.4478759765625	return new Array CaMeL List < Array CaMeL List >> ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 99.3625 99.9986 99.7996 94.1084 99.9905 99.9787 99.9974 99.5718
H-35	99.44099934895833	throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
P-35	99.948 97.9592 99.9999 99.8403 99.9996 99.9045 99.9986 99.6981 99.922 99.9942 99.9835
H-35	99.4299545288086	result = new Array CaMeL List < Array CaMeL List > ( ) ; }
P-35	99.9316 99.8341 99.7652 99.9998 99.9218 99.9598 99.5268 99.9989 99.714 98.8385 99.9961 99.9767 99.997 98.8206 99.2501
H-35	99.427734375	return new Array CaMeL List < Boolean > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 93.8055 99.9807 99.9896 99.9629 99.9943 99.937
H-35	99.41515299479167	return new Array CaMeL List < Array CaMeL List < ( > ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 99.3625 99.9986 99.7996 99.5137 94.5746 99.3811 99.2465 99.9696 99.9182
H-35	99.41281563895089	return new Linked CaMeL List < Array CaMeL List > ( ) ;
P-35	99.8938 94.6548 99.9998 99.7988 99.9643 99.3478 99.9985 99.8301 98.8903 99.9953 99.9876 99.9975 99.6147
H-35	99.40537516276042	return new Array CaMeL List < Long > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 93.5198 99.983 99.9954 99.9549 99.9952 99.9535
H-35	99.40414428710938	return new Array CaMeL List < long > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 93.5091 99.9756 99.9952 99.9607 99.995 99.9514
H-35	99.3953857421875	return new Array CaMeL List < Array CaMeL List > ( $NUMBER$ ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 99.3625 99.9986 99.7996 98.9808 99.9949 93.4492 99.9807 99.9971 99.9047
H-35	99.39048461914062	return new Array CaMeL List > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 94.6752 99.9942 99.9708 99.9932 99.7768
H-35	99.38961356026786	return new Hash CaMeL Set < Array CaMeL List > ( ) ;
P-35	99.8938 95.328 99.9992 99.1748 99.9755 99.199 99.9988 99.8185 98.7357 99.9956 99.9854 99.9971 99.5469
H-35	99.38328857421875	throw new Runtime CaMeL Exception ( $STRING$ ) ;
P-35	99.948 98.3194 99.9998 99.8878 99.9947 99.8178 99.8573 99.9927 99.9711
H-35	99.36502075195312	return new Array CaMeL List < ) > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 93.3012 99.7316 99.996 99.936 99.9961 99.9564
H-35	99.36483764648438	return new Array CaMeL List < Exception > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 93.0183 99.9742 99.996 99.9746 99.9954 99.9569
H-35	99.36208089192708	return new Array CaMeL List < Double > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 93.0802 99.9129 99.993 99.9574 99.9944 99.9442
H-35	99.35188802083333	return new Array CaMeL List < Short > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 92.9064 99.963 99.995 99.9501 99.9946 99.951
H-35	99.34958321707589	return new Array CaMeL List < Object > ( ) ; } else
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 97.299 99.9622 99.9954 99.9632 99.995 96.4907 99.5292 98.1966
H-35	99.3495381673177	return new Array CaMeL List < synchronized > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 92.9349 99.9426 99.9962 99.9552 99.9903 99.9125
H-35	99.3477783203125	return new Array CaMeL List < Entry > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 92.9654 99.8337 99.9938 99.9638 99.996 99.9578
H-35	99.33514404296875	return new Array CaMeL List < String > ( ) ; } else
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 97.3979 99.9893 99.9966 99.9662 99.9956 96.4455 99.5676 97.8705
H-35	99.33468627929688	return new Array CaMeL List < Thread > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 92.6586 99.9713 99.9948 99.9838 99.9946 99.9503
H-35	99.3297831217448	return new Array CaMeL List < Number > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 92.5912 99.9823 99.9961 99.9666 99.9951 99.9632
H-35	99.32150268554688	return new Array CaMeL List < / > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 92.5872 99.8969 99.9956 99.9576 99.9928 99.9653
H-35	99.3199462890625	return new Array CaMeL List < Hashtable > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 92.868 99.5832 99.9965 99.9785 99.997 99.9534
H-35	99.31893920898438	return new Array CaMeL List < float > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 92.6248 99.8353 99.9923 99.9563 99.9949 99.9607
H-35	99.31552124023438	return new Array CaMeL List < Date > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 92.8383 99.5873 99.9945 99.963 99.995 99.9455
H-35	99.31515502929688	return new List < Array CaMeL List > ( ) ;
P-35	99.8938 95.2122 99.8186 99.3808 99.9995 99.8383 98.2435 99.9932 99.9697 99.9968 99.6292
H-35	99.3120829264323	return new Array CaMeL List < while > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 92.4596 99.9629 99.9899 99.9371 99.9888 99.9438
H-35	99.31009928385417	return new Hash CaMeL Set < String > ( ) ;
P-35	99.8938 95.328 99.9992 99.1748 99.9755 97.6293 99.9912 99.9966 99.9812 99.9962 99.9489
H-35	99.30516560872395	return new Hash CaMeL Set < Object > ( ) ;
P-35	99.8938 95.328 99.9992 99.1748 99.9755 97.594 99.9725 99.9955 99.9789 99.9956 99.9479
H-35	99.29998309795673	result = new Array CaMeL List < String > ( ) ;
P-35	99.9316 99.8341 99.7652 99.9998 99.9218 99.9598 97.2959 99.9795 99.9968 99.9741 99.9962 98.8967
H-35	99.29569498697917	return new Array CaMeL List < Set > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 92.5699 99.6059 99.9952 99.9667 99.9963 99.9515
H-35	99.2905782063802	return new Array CaMeL List < boolean > ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 92.1759 99.936 99.9933 99.9699 99.9943 99.9549
H-35	99.28030160757211	return new Array CaMeL List < Object > ( ) ; ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 97.299 99.9622 99.9954 99.9632 99.995 94.0262 99.94
H-35	99.2794658954327	return new Array CaMeL List < String > ( ) ; ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 97.3979 99.9893 99.9966 99.9662 99.9956 93.8674 99.9573
H-35	99.24766956676136	throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
P-35	99.948 97.9592 99.9999 99.8403 99.9996 99.9045 99.9986 98.5612 99.9855 99.4834
H-35	99.24416281960227	return new Array CaMeL List < return ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 95.3877 97.2457 99.6578 99.9831 99.9488
H-35	99.23300170898438	return new List < String > ( ) ;
P-35	99.8938 95.2122 99.8186 97.8078 99.9656 99.9932 99.9845 99.9957 99.8523
H-35	99.16098022460938	return new Array CaMeL List < ( ) ;
P-35	99.8938 99.9006 99.9998 99.8941 99.9681 93.9872 99.4128 98.9203 99.8267
H-35	99.14248046875	return new List < Object > ( ) ;
P-35	99.8938 95.2122 99.8186 96.9743 99.8899 99.9914 99.9835 99.9946 99.8604
H-35	99.139990234375	return Array CaMeL List . EMPTY _ LIST ;
P-35	95.8164 99.9991 99.8046 99.9334 97.9411 99.9727 98.1834 99.9937 99.9492
H-35	99.0948257446289	return Collections . EMPTY _ LIST ;
P-35	95.0382 99.9916 99.5248 99.9937 98.5816 99.9944 99.8281
H-35	99.07223171657986	throw new Runtime CaMeL Exception ( ) ;
P-35	99.948 98.3194 99.9998 99.8878 99.9947 97.9964 99.9742 99.4854
H-35	98.9747085571289	return new int [ 1 ] ;
P-35	99.8938 93.6909 99.9095 98.7471 99.972 99.9585 99.8195
H-35	98.96636199951172	return new int [ 0 ] ;
P-35	99.8938 93.6909 99.9095 98.7391 99.9719 99.9638 99.7555
H-35	98.92481231689453	return new List [ 0 ] ;
P-35	99.8938 95.2122 97.3802 99.5254 99.9346 99.957 99.689
H-35	98.7840805053711	return null ;
P-35	95.706 99.9866 99.6375
H-35	98.77171834309895	return new ( ) ;
P-35	99.8938 93.7179 99.2859 99.9959 99.9305
H-35	98.37671661376953	return ) ;
P-35	93.9108 99.9014 99.8885
H-35	97.90299987792969	return true ;
P-35	92.1845 99.9854 99.6358
H-35	97.86875915527344	return false ;
P-35	92.0534 99.9842 99.6311
H-35	97.8330078125	throw null ;
P-35	95.7396 99.9827 99.5655
H-35	97.56526692708333	break ;
P-35	99.7756 99.7614
S-36	result = result + String . value CaMeL Of ( alphabet . char CaMeL At ( i ) ) ;
T-36	result = String . value CaMeL Of ( alphabet . char CaMeL At ( i ) ) + result ;
H-36	99.85553850446429	result = result + String . value CaMeL Of ( alphabet . char CaMeL At ( i ) ) ;
P-36	99.9939 99.5103 99.6273 99.5376 99.9975 99.9682 99.9993 99.9976 99.9997 99.3509 99.7495 99.7831 99.9996 99.9972 99.9989 99.9374 99.9731 99.9706 99.9161 99.9377
H-36	99.80328047902961	result = String . value CaMeL Of ( alphabet . char CaMeL At ( i ) ) ;
P-36	99.9939 98.49 99.9969 99.9672 99.9991 99.9981 99.9997 99.193 99.7256 99.7271 99.9996 99.9949 99.9989 99.9378 99.9708 99.943 99.6773 99.9287
H-36	99.7461574388587	result = result + result + String . value CaMeL Of ( alphabet . char CaMeL At ( i ) ) ;
P-36	99.9939 99.5103 99.6273 97.8359 99.378 99.4322 99.9967 99.9576 99.9992 99.9971 99.9996 99.4035 99.7103 99.8209 99.9996 99.9975 99.999 99.9426 99.9808 99.9755 99.9468 99.9368
H-36	99.71072823660714	result = alphabet + String . value CaMeL Of ( alphabet . char CaMeL At ( i ) ) ;
P-36	99.9939 96.8758 99.4538 99.4434 99.9931 99.9684 99.9993 99.9966 99.9997 99.4156 99.6269 99.716 99.9996 99.9965 99.999 99.9402 99.974 99.9703 99.9146 99.9274
H-36	99.6828125	return result + String . value CaMeL Of ( alphabet . char CaMeL At ( i ) ) ;
P-36	99.6557 99.7948 99.3495 99.9967 99.9483 99.999 99.9981 99.9998 99.2443 99.7683 99.7398 99.9996 99.9961 99.9986 99.9341 99.9718 99.9662 99.9069 99.9946
H-36	99.6819484544837	result = result + alphabet + String . value CaMeL Of ( alphabet . char CaMeL At ( i ) ) ;
P-36	99.9939 99.5103 99.6273 97.0087 98.8898 99.4389 99.9911 99.9696 99.9992 99.9963 99.9996 99.4696 99.5493 99.7423 99.9995 99.9967 99.9992 99.9447 99.9799 99.9749 99.9506 99.9326
H-36	99.68166185461956	result = String . value CaMeL Of ( alphabet . char CaMeL At ( i ) ) . length ( ) ;
P-36	99.9939 98.49 99.9969 99.9672 99.9991 99.9981 99.9997 99.193 99.7256 99.7271 99.9996 99.9949 99.9989 99.9378 99.9708 99.943 98.5258 97.8213 99.9967 99.9981 99.7892 99.8909
H-36	99.67709786551339	result = result + String . value CaMeL Of ( alphabet ) ;
P-36	99.9939 99.5103 99.6273 99.5376 99.9975 99.9682 99.9993 99.9976 99.9997 99.3509 98.1012 99.7324 99.9427
H-36	99.67050170898438	result = result + String . value CaMeL Of ( alphabet . to CaMeL String ( ) ) ;
P-36	99.9939 99.5103 99.6273 99.5376 99.9975 99.9682 99.9993 99.9976 99.9997 99.3509 99.7495 97.7046 99.9969 99.5402 99.9925 99.3027 99.8431 99.7282 99.8492
H-36	99.66560872395833	result = result + String . value CaMeL Of ( alphabet . to CaMeL String ( i ) ) ;
P-36	99.9939 99.5103 99.6273 99.5376 99.9975 99.9682 99.9993 99.9976 99.9997 99.3509 99.7495 97.7046 99.9969 99.5402 99.9925 98.6507 99.9319 99.9065 99.8961 99.9055
H-36	99.65004660866477	result = result + String . value CaMeL Of ( alphabet . to CaMeL Lower CaMeL Case ( ) ) ;
P-36	99.9939 99.5103 99.6273 99.5376 99.9975 99.9682 99.9993 99.9976 99.9997 99.3509 99.7495 97.7046 99.9969 98.5088 99.9982 99.717 99.9963 99.6758 99.8328 99.6616 99.7564
H-36	99.64534859035327	result = String . value CaMeL Of ( alphabet . char CaMeL At ( i ) ) . trim ( ) ;
P-36	99.9939 98.49 99.9969 99.9672 99.9991 99.9981 99.9997 99.193 99.7256 99.7271 99.9996 99.9949 99.9989 99.9378 99.9708 99.943 98.5258 96.8704 99.9957 99.9953 99.9255 99.874
H-36	99.64466924252717	result = result + String . value CaMeL Of ( alphabet . char CaMeL At ( i - 1 ) ) ;
P-36	99.9939 99.5103 99.6273 99.5376 99.9975 99.9682 99.9993 99.9976 99.9997 99.3509 99.7495 99.7831 99.9996 99.9972 99.9989 99.9374 95.2659 99.6692 99.9983 99.9477 99.9301 99.8471
H-36	99.64253373579545	} result = result + String . value CaMeL Of ( alphabet . char CaMeL At ( i ) ) ;
P-36	99.7262 99.9942 99.4472 99.7185 99.6247 99.9976 99.9743 99.9993 99.9974 99.9997 99.4635 99.743 99.7891 99.9996 99.9976 99.9986 99.9388 99.9733 99.9716 99.9517 99.9158
H-36	99.63977632068452	result = result + String . value CaMeL Of ( alphabet . char CaMeL At ( 0 ) ) ;
P-36	99.9939 99.5103 99.6273 99.5376 99.9975 99.9682 99.9993 99.9976 99.9997 99.3509 99.7495 99.7831 99.9996 99.9972 99.9989 95.4192 99.988 99.9666 99.8866 99.9434
H-36	99.63880504261364	result = result + String . value CaMeL Of ( alphabet . char CaMeL At ( i ) ) ; }
P-36	99.9939 99.5103 99.6273 99.5376 99.9975 99.9682 99.9993 99.9976 99.9997 99.3509 99.7495 99.7831 99.9996 99.9972 99.9989 99.9374 99.9731 99.9706 99.9161 95.4044 99.6205
H-36	99.63483220880681	return result + result + String . value CaMeL Of ( alphabet . char CaMeL At ( i ) ) ;
P-36	99.6557 99.7948 98.3092 99.7985 99.4208 99.9954 99.9318 99.9992 99.9957 99.9997 99.2484 99.7761 99.832 99.9996 99.9972 99.9987 99.9367 99.9706 99.9736 99.9441 99.9944
H-36	99.62995990953948	result = String . value CaMeL Of ( result . char CaMeL At ( i ) ) ;
P-36	99.9939 98.49 99.9969 99.9672 99.9991 99.9981 99.9997 96.4264 99.4997 99.3479 99.9996 99.9918 99.9995 99.9138 99.9791 99.9521 99.7685 99.9251
H-36	99.62994094122024	result = result + String . value CaMeL Of ( result . char CaMeL At ( i ) ) ;
P-36	99.9939 99.5103 99.6273 99.5376 99.9975 99.9682 99.9993 99.9976 99.9997 95.4737 99.2135 99.472 99.9995 99.9947 99.9995 99.9034 99.9806 99.9732 99.9324 99.9339
H-36	99.62913876488095	result = String . value CaMeL Of ( alphabet , alphabet . char CaMeL At ( i ) ) ;
P-36	99.9939 98.49 99.9969 99.9672 99.9991 99.9981 99.9997 99.193 97.4434 98.6021 99.4412 99.723 99.9992 99.9879 99.9993 99.9529 99.9821 99.9678 99.8483 99.9061
H-36	99.62643299932066	result = result + String . value CaMeL Of ( alphabet . char CaMeL At ( i , i ) ) ;
P-36	99.9939 99.5103 99.6273 99.5376 99.9975 99.9682 99.9993 99.9976 99.9997 99.3509 99.7495 99.7831 99.9996 99.9972 99.9989 99.9374 95.3228 99.2362 99.9358 99.9458 99.9407 99.8576
H-36	99.6258544921875	result = result + String . value CaMeL Of ( alphabet . char CaMeL At ( i ) ) ) ;
P-36	99.9939 99.5103 99.6273 99.5376 99.9975 99.9682 99.9993 99.9976 99.9997 99.3509 99.7495 99.7831 99.9996 99.9972 99.9989 99.9374 99.9731 99.9706 94.7772 99.9504 99.9285
H-36	99.62021484375	result = result + String . value CaMeL Of ( alphabet ) . to CaMeL String ( ) ;
P-36	99.9939 99.5103 99.6273 99.5376 99.9975 99.9682 99.9993 99.9976 99.9997 99.3509 98.1012 98.1649 99.1172 99.9777 99.7834 99.9948 99.8661 99.8609 99.8347
H-36	99.61872209821429	result = result + alphabet . char CaMeL At ( i ) ;
P-36	99.9939 99.5103 99.6273 97.0087 99.5254 99.7613 99.9988 99.9574 99.9992 99.9003 99.9536 99.797 99.9079
H-36	99.61316448709239	this . result = result + String . value CaMeL Of ( alphabet . char CaMeL At ( i ) ) ;
P-36	99.9422 99.6681 99.9942 99.4044 99.7478 99.6241 99.9971 99.9699 99.9993 99.9986 99.9998 99.5306 99.6705 99.8115 99.9996 99.9978 99.9991 99.9462 99.9808 99.9677 99.9334 99.9501
H-36	99.61159153988487	result = String . value CaMeL Of ( alphabet . to CaMeL String ( i ) ) ;
P-36	99.9939 98.49 99.9969 99.9672 99.9991 99.9981 99.9997 99.193 99.7256 98.0691 99.9967 99.5941 99.9945 98.6287 99.9235 99.8643 99.5731 99.8918
H-36	99.60893322172619	m = result + String . value CaMeL Of ( alphabet . char CaMeL At ( i ) ) ;
P-36	99.9421 99.4207 99.7771 99.6105 99.9966 99.9473 99.9991 99.9976 99.9996 99.4176 99.7637 99.7714 99.9996 99.9969 99.9989 99.9395 99.9734 99.9686 99.9184 99.933
H-36	99.60860011888587	result = result + String . value CaMeL Of ( this . alphabet . char CaMeL At ( i ) ) ;
P-36	99.9939 99.5103 99.6273 99.5376 99.9975 99.9682 99.9993 99.9976 99.9997 94.4234 99.9812 98.8909 99.8215 99.7955 99.9987 99.9886 99.9989 99.938 99.9787 99.9704 99.9289 99.9306
H-36	99.60859818892045	result = result + String . value CaMeL Of ( alphabet . char CaMeL At ( i ) ) ; ;
P-36	99.9939 99.5103 99.6273 99.5376 99.9975 99.9682 99.9993 99.9976 99.9997 99.3509 99.7495 99.7831 99.9996 99.9972 99.9989 99.9374 99.9731 99.9706 99.9161 94.4343 99.9262
H-36	99.6072009858631	result = result + String . value CaMeL Of ( alphabet ) . char CaMeL At ( i ) ;
P-36	99.9939 99.5103 99.6273 99.5376 99.9975 99.9682 99.9993 99.9976 99.9997 99.3509 98.1012 98.1649 98.3065 99.9997 99.9079 99.999 99.8857 99.9722 99.8891 99.8218
H-36	99.6063720703125	result = result . to CaMeL String ( ) + String . value CaMeL Of ( alphabet ) ;
P-36	99.9939 99.5103 98.7178 98.8492 99.9586 99.8332 99.9928 99.904 98.7462 98.9776 99.9974 99.9684 99.9992 99.9964 99.9998 99.3842 98.8744 99.8647 99.8381
H-36	99.60634977921195	result = result + String . value CaMeL Of ( alphabet . to CaMeL Lower CaMeL Case ( i ) ) ;
P-36	99.9939 99.5103 99.6273 99.5376 99.9975 99.9682 99.9993 99.9976 99.9997 99.3509 99.7495 97.7046 99.9969 98.5088 99.9982 99.717 99.9963 98.0136 99.975 99.8323 99.9048 99.8458
H-36	99.60258403577302	result = String . value CaMeL Of ( alphabet ) . char CaMeL At ( i ) ;
P-36	99.9939 98.49 99.9969 99.9672 99.9991 99.9981 99.9997 99.193 97.4852 99.1571 98.994 99.9997 99.9148 99.9992 99.8813 99.9675 99.891 99.8006
H-36	99.60097784745066	result = result . char CaMeL At ( i ) . char CaMeL At ( i ) ;
P-36	99.9939 99.5103 98.7178 98.628 99.9991 99.9295 99.9994 99.8904 99.9327 97.6871 99.01 99.9996 99.9587 99.9996 99.7871 99.9863 99.8894 99.779
H-36	99.60028366815476	result = result + String . value CaMeL Of ( parent . char CaMeL At ( i ) ) ;
P-36	99.9939 99.5103 99.6273 99.5376 99.9975 99.9682 99.9993 99.9976 99.9997 94.2442 99.5942 99.7091 99.9995 99.9969 99.9995 99.8928 99.9825 99.9683 99.9326 99.9342
H-36	99.59880981445312	result = result . to CaMeL String ( ) + alphabet . char CaMeL At ( i ) ;
P-36	99.9939 99.5103 98.7178 98.8492 99.9586 99.8332 99.9928 99.904 98.7462 98.325 99.5089 99.5119 99.9994 99.9602 99.9994 99.9094 99.9779 99.7506 99.8064
H-36	99.59830729166667	result = result + String . value CaMeL Of ( alphabet . char CaMeL At ( 1 ) ) ;
P-36	99.9939 99.5103 99.6273 99.5376 99.9975 99.9682 99.9993 99.9976 99.9997 99.3509 99.7495 99.7831 99.9996 99.9972 99.9989 94.5462 99.9869 99.9684 99.8857 99.9456
H-36	99.57835083007812	result = String . value CaMeL Of ( alphabet . char CaMeL At ( i ) ) ) ;
P-36	99.9939 98.49 99.9969 99.9672 99.9991 99.9981 99.9997 99.193 99.7256 99.7271 99.9996 99.9949 99.9989 99.9378 99.9708 99.943 95.1077 99.8743 99.9288
H-36	99.57463243272569	result = String . value CaMeL Of ( alphabet . to CaMeL String ( ) ) ;
P-36	99.9939 98.49 99.9969 99.9672 99.9991 99.9981 99.9997 99.193 99.7256 98.0691 99.9967 99.5941 99.9945 99.2941 99.7359 98.745 99.8297
H-36	99.57284691220238	result = String . value CaMeL Of ( alphabet . char CaMeL At ( i , i ) ) ;
P-36	99.9939 98.49 99.9969 99.9672 99.9991 99.9981 99.9997 99.193 99.7256 99.7271 99.9996 99.9949 99.9989 99.9378 95.5285 99.2527 99.9354 99.9193 99.8327 99.8185
H-36	99.57239350818452	result = String . value CaMeL Of ( alphabet . char CaMeL At ( i - 1 ) ) ;
P-36	99.9939 98.49 99.9969 99.9672 99.9991 99.9981 99.9997 99.193 99.7256 99.7271 99.9996 99.9949 99.9989 99.9378 95.1246 99.6736 99.9978 99.9115 99.7596 99.8105
H-36	99.56937408447266	result = result + result + String . value CaMeL Of ( alphabet ) ;
P-36	99.9939 99.5103 99.6273 97.8359 99.378 99.4322 99.9967 99.9576 99.9992 99.9971 99.9996 99.4035 98.4113 99.9225 99.9242
H-36	99.56913539341518	result = result + result . char CaMeL At ( i ) ;
P-36	99.9939 99.5103 99.6273 97.8359 99.0606 98.7177 99.9987 99.9482 99.9996 99.8819 99.96 99.8202 99.893
H-36	99.56905691964286	result = result + String . value CaMeL Of ( alphabet . to CaMeL String ( 0 ) ) ;
P-36	99.9939 99.5103 99.6273 99.5376 99.9975 99.9682 99.9993 99.9976 99.9997 99.3509 99.7495 97.7046 99.9969 99.5402 99.9925 96.8176 99.8084 99.8827 99.8488 99.9059
H-36	99.56842651367188	} result = String . value CaMeL Of ( alphabet . char CaMeL At ( i ) ) ;
P-36	99.7262 99.9942 98.643 99.9969 99.9612 99.9991 99.9986 99.9997 99.2545 99.6187 99.6878 99.9995 99.9959 99.9988 99.9384 99.9742 99.954 99.8075 99.9061
H-36	99.56705050998264	result = String . value CaMeL Of ( alphabet ) . to CaMeL String ( ) ;
P-36	99.9939 98.49 99.9969 99.9672 99.9991 99.9981 99.9997 99.193 97.4852 99.1571 98.944 99.9887 99.854 99.9962 99.7555 99.8408 99.8264
H-36	99.56622673483456	result = result + String . value CaMeL Of ( alphabet [ i ] ) ;
P-36	99.9939 99.5103 99.6273 99.5376 99.9975 99.9682 99.9993 99.9976 99.9997 99.3509 95.5104 99.9376 99.9942 99.7168 99.85 99.9137
H-36	99.56488591974431	result = result + result + String . value CaMeL Of ( alphabet . to CaMeL String ( ) ) ;
P-36	99.9939 99.5103 99.6273 97.8359 99.378 99.4322 99.9967 99.9576 99.9992 99.9971 99.9996 99.4035 99.7103 97.5471 99.9958 99.4946 99.9928 99.2551 99.8623 99.8671 99.85
H-36	99.56216591282895	result = String . value CaMeL Of ( alphabet . char CaMeL At ( 0 ) ) ;
P-36	99.9939 98.49 99.9969 99.9672 99.9991 99.9981 99.9997 99.193 99.7256 99.7271 99.9996 99.9949 99.9989 95.5838 99.983 99.9308 99.4444 99.9341
H-36	99.56016322544643	result = String . value CaMeL Of ( alphabet , String . value CaMeL Of ( alphabet ) ) ;
P-36	99.9939 98.49 99.9969 99.9672 99.9991 99.9981 99.9997 99.193 97.4434 97.704 99.9967 99.9136 99.9993 99.9497 99.9997 99.6534 99.1398 99.8574 99.8131 99.9347
H-36	99.55940551757813	result = String . value CaMeL Of ( alphabet . char CaMeL At ( i ) ) ; }
P-36	99.9939 98.49 99.9969 99.9672 99.9991 99.9981 99.9997 99.193 99.7256 99.7271 99.9996 99.9949 99.9989 99.9378 99.9708 99.943 99.6773 95.2458 99.6086
H-36	99.55785023082386	result = result . char CaMeL At ( i ) ; result = result . to CaMeL String ( ) ;
P-36	99.9939 99.5103 98.7178 98.628 99.9991 99.9295 99.9994 99.8904 99.9327 99.7564 97.2786 99.9762 99.5162 99.6921 98.4119 99.9682 99.8573 99.9931 99.9613 99.7808 99.7586
H-36	99.55633544921875	result = result . substring ( i , i ) ;
P-36	99.9939 99.5103 98.7178 98.7014 99.9976 99.8116 99.8515 98.9604 99.7 99.8481 99.8625
H-36	99.5546642485119	result = String . value CaMeL Of ( alphabet . to CaMeL Lower CaMeL Case ( i ) ) ;
P-36	99.9939 98.49 99.9969 99.9672 99.9991 99.9981 99.9997 99.193 99.7256 98.0691 99.9967 98.4179 99.9983 99.6893 99.9967 98.1876 99.972 99.7786 99.6511 99.8061
H-36	99.55362955729167	result = result . char CaMeL At ( i ) + String . value CaMeL Of ( alphabet ) ;
P-36	99.9939 99.5103 98.7178 98.628 99.9991 99.9295 99.9994 99.8904 99.9327 97.6298 98.9379 99.9981 99.9563 99.9988 99.9942 99.9999 99.4166 98.6559 99.8959 99.8208
H-36	99.5535888671875	result = result + String . value CaMeL Of ( alphabet ) . to CaMeL Lower CaMeL Case ( ) ;
P-36	99.9939 99.5103 99.6273 99.5376 99.9975 99.9682 99.9993 99.9976 99.9997 99.3509 98.1012 98.1649 99.1172 99.9777 97.9891 99.9972 99.7431 99.9966 99.9264 99.6641 99.7983
H-36	99.55339704241071	result = result . to CaMeL String ( ) ; result = result . to CaMeL String ( ) ;
P-36	99.9939 99.5103 98.7178 98.8492 99.9586 99.8332 99.9928 99.904 99.5432 97.2428 99.9652 99.4001 99.6902 98.8547 99.9947 99.9179 99.9953 99.9803 99.7803 99.7759
H-36	99.55259486607143	result = result . char CaMeL At ( i ) + alphabet . char CaMeL At ( i ) ;
P-36	99.9939 99.5103 98.7178 98.628 99.9991 99.9295 99.9994 99.8904 99.9327 97.6298 98.3048 99.728 99.4648 99.9994 99.9181 99.9996 99.915 99.9677 99.5607 99.7943
H-36	99.55201551649306	result = result + String . value CaMeL Of ( alphabet . length ( ) ) ;
P-36	99.9939 99.5103 99.6273 99.5376 99.9975 99.9682 99.9993 99.9976 99.9997 99.3509 99.7495 95.3217 99.9857 99.9946 99.3596 99.9007 99.9214
H-36	99.54977416992188	result = alphabet + String . value CaMeL Of ( alphabet . to CaMeL String ( ) ) ;
P-36	99.9939 96.8758 99.4538 99.4434 99.9931 99.9684 99.9993 99.9966 99.9997 99.4156 99.6269 98.0358 99.9971 99.6205 99.9949 99.4804 99.856 99.6965 99.8268
H-36	99.54891967773438	result = String . value CaMeL Of ( alphabet . to CaMeL Lower CaMeL Case ( ) ) ;
P-36	99.9939 98.49 99.9969 99.9672 99.9991 99.9981 99.9997 99.193 99.7256 98.0691 99.9967 98.4179 99.9983 99.6893 99.9967 99.5761 99.7418 98.6914 99.7167
H-36	99.54872349330357	result = result + alphabet . char CaMeL At ( i ) . char CaMeL At ( i ) ;
P-36	99.9939 99.5103 99.6273 97.0087 99.5254 99.7613 99.9988 99.9574 99.9992 99.9003 99.9536 97.57 98.5628 99.9995 99.9639 99.9993 99.8063 99.9888 99.8609 99.8142
H-36	99.5485610961914	result = result . substring ( i , alphabet . length ( ) ) ;
P-36	99.9939 99.5103 98.7178 98.7014 99.9976 99.8116 99.8515 98.0159 99.8325 99.6704 99.991 99.994 99.2295 99.9289 99.81
H-36	99.54653591579861	result = result . substring ( i , alphabet . length ( ) - 1 ) ;
P-36	99.9939 99.5103 98.7178 98.7014 99.9976 99.8116 99.8515 98.0159 99.8325 99.6704 99.991 99.994 99.0699 99.2546 99.9713 99.9498 99.7832
H-36	99.54384358723958	result = result . char CaMeL At ( i ) . to CaMeL String ( ) ;
P-36	99.9939 99.5103 98.7178 98.628 99.9991 99.9295 99.9994 99.8904 99.9327 97.6871 98.8559 99.9934 99.3692 99.9904 99.9747 99.8235 99.7731
H-36	99.5438296669408	result = alphabet . char CaMeL At ( i ) . char CaMeL At ( i ) ;
P-36	99.9939 96.8758 99.0982 99.7417 99.9993 99.9423 99.9987 99.8547 99.8934 97.9772 98.8117 99.9996 99.9633 99.9995 99.8256 99.9867 99.8724 99.7778
H-36	99.54150390625	result = String . value CaMeL Of ( result . to CaMeL String ( ) ) ;
P-36	99.9939 98.49 99.9969 99.9672 99.9991 99.9981 99.9997 96.4264 99.4997 98.9083 99.9961 99.7349 99.9975 99.9821 99.8836 99.3044 99.8483
H-36	99.53771362304687	result = result . char CaMeL At ( i ) . to CaMeL Lower CaMeL Case ( ) ;
P-36	99.9939 99.5103 98.7178 98.628 99.9991 99.9295 99.9994 99.8904 99.9327 97.6871 98.8559 99.9934 98.6674 99.9986 99.8047 99.9968 99.9865 99.6609 99.7812
H-36	99.5326171875	result = String . value CaMeL Of ( alphabet . char CaMeL At ( i ) ) ; ;
P-36	99.9939 98.49 99.9969 99.9672 99.9991 99.9981 99.9997 99.193 99.7256 99.7271 99.9996 99.9949 99.9989 99.9378 99.9708 99.943 99.6773 94.395 99.9237
H-36	99.52350817228618	result = result . to CaMeL String ( ) + result . to CaMeL String ( ) ;
P-36	99.9939 99.5103 98.7178 98.8492 99.9586 99.8332 99.9928 99.904 98.7462 97.9545 99.7767 98.844 99.9918 99.9313 99.9965 99.9897 99.3922 99.8426
H-36	99.51046752929688	result = result + alphabet + String . value CaMeL Of ( alphabet ) ;
P-36	99.9939 99.5103 99.6273 97.0087 98.8898 99.4389 99.9911 99.9696 99.9992 99.9963 99.9996 99.4696 98.7271 99.9001 99.9251
H-36	99.50910101996527	result = alphabet . char CaMeL At ( i ) . to CaMeL String ( ) ;
P-36	99.9939 96.8758 99.0982 99.7417 99.9993 99.9423 99.9987 99.8547 99.8934 97.9772 99.0033 99.9899 99.5551 99.9915 99.9574 99.789 99.7816
H-36	99.50325775146484	result = result + result + alphabet . char CaMeL At ( i ) ;
P-36	99.9939 99.5103 99.6273 97.8359 99.378 97.1556 99.5971 99.6511 99.9991 99.9538 99.9989 99.9104 99.9774 99.8552 99.8875
H-36	99.49728829520089	result = alphabet + String . value CaMeL Of ( alphabet ) ;
P-36	99.9939 96.8758 99.4538 99.4434 99.9931 99.9684 99.9993 99.9966 99.9997 99.4156 98.4128 99.754 99.9345
H-36	99.49367268880208	result = result + String . value CaMeL Of ( alphabet . trim ( ) ) ;
P-36	99.9939 99.5103 99.6273 99.5376 99.9975 99.9682 99.9993 99.9976 99.9997 99.3509 99.7495 94.3668 99.9911 99.9278 99.4047 99.8439 99.8993
H-36	99.49093807444854	result = result . to CaMeL String ( ) + result . length ( ) ;
P-36	99.9939 99.5103 98.7178 98.8492 99.9586 99.8332 99.9928 99.904 98.7462 97.9545 99.7767 98.8098 99.9939 99.9952 99.7235 99.8651
H-36	99.48186383928571	result = result + String . value CaMeL Of ( result ) ;
P-36	99.9939 99.5103 99.6273 99.5376 99.9975 99.9682 99.9993 99.9976 99.9997 95.4737 99.1908 99.7765 99.9528
H-36	99.4815204326923	result = result + result . to CaMeL String ( ) ;
P-36	99.9939 99.5103 99.6273 97.8359 99.0606 98.7365 99.3249 99.8729 99.9941 99.9413 99.7352 99.9061
H-36	99.47164481026786	result = result + String . value CaMeL Of ( i ) ;
P-36	99.9939 99.5103 99.6273 99.5376 99.9975 99.9682 99.9993 99.9976 99.9997 95.0501 99.7125 99.5431 99.945
H-36	99.46806989397321	result = result . substring ( i , 0 , i ) ;
P-36	99.9939 99.5103 98.7178 98.7014 99.9976 99.8116 99.8515 97.6469 99.7935 99.2162 99.8275 99.938 99.8258
H-36	99.46012878417969	result = result . substring ( i , result . length ( ) ) ;
P-36	99.9939 99.5103 98.7178 98.7014 99.9976 99.8116 99.8515 96.2771 99.9019 99.8748 99.9935 99.9975 99.2281 99.9436 99.8406
H-36	99.45359584263393	result = result + String . value CaMeL Of ( b ) ;
P-36	99.9939 99.5103 99.6273 99.5376 99.9975 99.9682 99.9993 99.9976 99.9997 94.6567 99.7594 99.6433 99.9387
H-36	99.44769287109375	result = result + String . value CaMeL Of ( alphabet + 0 ) ;
P-36	99.9939 99.5103 99.6273 99.5376 99.9975 99.9682 99.9993 99.9976 99.9997 99.3509 95.4202 98.7008 99.5689 99.8637 99.9063
H-36	99.44750213623047	result = result + result + String . value CaMeL Of ( i ) ;
P-36	99.9939 99.5103 99.6273 97.8359 99.378 99.4322 99.9967 99.9576 99.9992 99.9971 99.9996 96.2018 99.8106 99.7744 99.9246
H-36	99.43937174479167	result = String . value CaMeL Of ( alphabet [ i ] ) ;
P-36	99.9939 98.49 99.9969 99.9672 99.9991 99.9981 99.9997 99.193 95.4282 99.9095 99.9951 99.5459 99.4469 99.9062
H-36	99.43714250837054	result = result . substring ( i , i + 1 ) ;
P-36	99.9939 99.5103 98.7178 98.7014 99.9976 99.8116 99.8515 98.9604 97.8745 99.2205 99.9751 99.9369 99.8476
H-36	99.42902018229167	result = result [ i ] . char CaMeL At ( i ) ;
P-36	99.9939 99.5103 94.875 99.8577 99.8643 98.676 99.595 99.999 99.9693 99.9996 99.6863 99.9816 99.8914 99.8151
H-36	99.42802211216518	result = String . value CaMeL Of ( alphabet , alphabet ) ;
P-36	99.9939 98.49 99.9969 99.9672 99.9991 99.9981 99.9997 99.193 97.4434 98.6021 98.753 99.9077 99.9275
H-36	99.42497035435268	result = result + result . substring ( i , i ) ;
P-36	99.9939 99.5103 99.6273 97.8359 99.0606 98.3569 99.9974 99.828 99.5798 98.9143 99.7793 99.8532 99.8918
H-36	99.418701171875	result = result . char CaMeL At ( i , i ) ;
P-36	99.9939 99.5103 98.7178 98.628 99.9991 99.9295 99.9994 99.8904 96.4153 99.3077 99.9087 99.9257 99.9151
H-36	99.41392008463542	result = result . char CaMeL At ( i ) ;
P-36	99.9939 99.5103 98.7178 98.628 99.9991 99.9295 99.9994 99.8904 99.9327 99.7564 96.8887
H-36	99.41248430524554	result = alphabet + alphabet . char CaMeL At ( i ) ;
P-36	99.9939 96.8758 99.4538 97.1187 99.5014 99.6149 99.9988 99.9546 99.9992 99.8988 99.9604 99.8045 99.8791
H-36	99.40084402901786	result = String . value CaMeL Of ( alphabet , i ) ;
P-36	99.9939 98.49 99.9969 99.9672 99.9991 99.9981 99.9997 99.193 97.4434 97.4903 99.752 99.644 99.9235
H-36	99.37865271935097	return result + String . value CaMeL Of ( alphabet ) ;
P-36	99.6557 99.7948 99.3495 99.9967 99.9483 99.999 99.9981 99.9998 99.2443 97.9584 99.5914 99.9923
H-36	99.37115478515625	result = result . substring ( i , 1 ) ;
P-36	99.9939 99.5103 98.7178 98.7014 99.9976 99.8116 99.8515 96.5356 99.9092 99.8384 99.8658
H-36	99.3509854403409	result = result . to CaMeL String ( ) ;
P-36	99.9939 99.5103 98.7178 98.8492 99.9586 99.8332 99.9928 99.904 99.5432 96.8367
H-36	99.34883626302083	result = result . substring ( 0 , i ) ;
P-36	99.9939 99.5103 98.7178 98.7014 99.9976 96.4469 99.9257 99.6754 99.7957 99.8443 99.856
H-36	99.3360087076823	result = result . substring ( i , alphabet ) ;
P-36	99.9939 99.5103 98.7178 98.7014 99.9976 99.8116 99.8515 98.0159 97.895 99.9498 99.8663
H-36	99.31639515269886	result = result + result . length ( ) ;
P-36	99.9939 99.5103 99.6273 97.8359 99.0606 97.2088 99.9842 99.9904 99.6257 99.9224
H-36	99.11711968315973	result = result + result + result ;
P-36	99.9939 99.5103 99.6273 97.8359 99.378 97.8297 98.2593 99.899
S-37	if ( ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node ) ) {
T-37	if ( ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Predecessors ( ) ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node ) ) {
H-37	99.89901662427326	if ( ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 99.7497 99.9991 99.9983 99.9397 99.9901 99.9997 99.951 99.9993 99.9776 99.9616 99.6868 99.7771 99.9391 99.9981 99.9986 99.9988 99.9443 99.197 99.9774 99.9991 99.8048 99.9991 99.9991 99.9639 99.993 99.9997 99.9388 99.9994 99.9905 99.9514 99.4356 99.9604 99.77
H-37	99.88845563616071	if ( ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 99.7497 99.9991 99.9983 99.9397 99.9901 99.9997 99.951 99.9993 99.9776 99.9616 99.6868 99.7771 99.9391 99.9981 99.9986 99.9988 99.9443 99.4055 99.8519 99.999 99.9991 99.56 99.8861 99.9662 99.749
H-37	99.87802358774039	if ( ordered CaMeL Nodes . contains ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node . get CaMeL Successors ( ) ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 99.7398 99.9988 99.9986 99.1851 99.9775 99.9996 99.9288 99.999 99.9693 99.8292 99.6813 99.768 99.9327 99.9979 99.9987 99.9989 99.9426 99.9234 99.8698 99.9988 99.9993 99.5814 99.9887 99.9996 99.9489 99.9995 99.9919 99.8783 99.4759 99.9615 99.768
H-37	99.8768935785061	if ( ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node . get CaMeL Successors ( ) ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 99.7497 99.9991 99.9983 99.9397 99.9901 99.9997 99.951 99.9993 99.9776 99.9616 99.6868 99.7771 99.9391 99.9981 99.9986 99.9988 99.9443 99.4055 99.8519 99.999 99.9991 98.9578 99.9874 99.9995 99.9505 99.9994 99.99 99.8818 99.5023 99.9624 99.7872
H-37	99.85329367897727	if ( ordered CaMeL Nodes . contains ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 99.7398 99.9988 99.9986 99.1851 99.9775 99.9996 99.9288 99.999 99.9693 99.8292 99.6813 99.768 99.9327 99.9979 99.9987 99.9989 99.9426 99.9234 99.8698 99.9988 99.9993 98.9195 99.899 99.9663 99.7247
H-37	99.84583875868056	if ( ordered CaMeL Nodes . contains ( next CaMeL Node ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 99.7398 99.9988 99.9986 99.4042 99.1694 99.5927 99.8045 99.9984 99.9981 99.9985 99.947 99.9026 99.8561 99.9988 99.9991 99.9357 99.8521 99.969 99.7624
H-37	99.84357561383929	if ( ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) && ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 99.7497 99.9991 99.9983 99.9397 99.9901 99.9997 99.951 99.9993 99.9776 99.9616 99.6868 97.5276 99.9967 99.9979 99.9977 99.9296 99.2529 99.9762 99.9987 99.7493 99.9991 99.9992 99.9707 99.9938 99.9997 99.9352 99.9995 99.9937 99.9626 99.414 99.961 99.7514
H-37	99.84053178267045	if ( ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node ) ) { ordered CaMeL Nodes . add ( node ) ;
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 99.7497 99.9991 99.9983 99.9397 99.9901 99.9997 99.951 99.9993 99.9776 99.9616 99.6868 99.7771 99.9391 99.9981 99.9986 99.9988 99.9443 99.4055 99.8519 99.999 99.9991 99.56 99.8861 99.9662 97.2517 99.9963 99.9919 99.9987 99.2316 99.8278 98.3639 99.8964 99.9277 102.1506
H-37	99.83588201349431	if ( ! ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) ) {
P-37	99.998 97.4521 99.6752 99.9952 99.9941 99.9978 99.8849 98.9214 99.9905 99.9967 99.8032 99.9991 99.9986 99.9163 99.9914 99.9997 99.9539 99.9992 99.9857 99.9591 99.6498 99.8074 99.9379 99.9979 99.9984 99.9988 99.9475 99.1222 99.9794 99.999 99.8132 99.9991 99.9992 99.9677 99.9931 99.9998 99.9352 99.9995 99.9937 99.9545 99.4577 99.9566 99.7972
H-37	99.8347763433689	if ( next CaMeL Node . get CaMeL Successors ( ) . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node ) ) {
P-37	99.998 97.8094 99.9991 99.9985 99.9045 99.9537 99.9995 99.9213 99.9941 99.9763 99.992 99.7035 98.8097 99.9784 99.9947 99.8108 99.9987 99.9993 99.92 99.9935 99.9997 99.9538 99.9995 99.9917 99.9701 99.644 99.7277 99.9305 99.998 99.9986 99.9987 99.9351 99.4781 99.849 99.999 99.9992 99.4195 99.8894 99.9627 99.7645
H-37	99.8311082793445	if ( ordered CaMeL Nodes . contains ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 99.7398 99.9988 99.9986 99.1851 99.9775 99.9996 99.9288 99.999 99.9693 99.8292 99.6813 99.768 99.9327 99.9979 99.9987 99.9989 99.9426 97.3926 99.9822 99.9978 99.8057 99.9991 99.999 99.9643 99.9932 99.9997 99.9501 99.9994 99.9932 99.9482 99.4493 99.959 99.7841
H-37	99.82072932545732	if ( ordered CaMeL Nodes . contains CaMeL All ( node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 96.7478 99.9158 99.9883 99.9996 99.9291 99.9986 99.9822 99.9419 99.6714 99.7646 99.9328 99.998 99.9988 99.9989 99.9522 99.2437 99.9785 99.9991 99.8403 99.9992 99.9991 99.9012 99.9932 99.9998 99.953 99.9994 99.99 99.9575 99.4503 99.9562 99.7988
H-37	99.81914813701923	if ( ordered CaMeL Nodes . contains ( next CaMeL Node ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 99.7398 99.9988 99.9986 99.4042 99.1694 99.5927 99.8045 99.9984 99.9981 99.9985 99.947 99.9026 99.8561 99.9988 99.9991 99.9357 97.8753 99.6259 99.8231 99.9975 99.9978 99.9986 99.9555 99.9318 99.8648 99.9988 99.9991 99.9548 99.8699 99.9649 99.8351
H-37	99.81535034179687	if ( ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) && ordered CaMeL Nodes . contains ( next CaMeL Node . get CaMeL Successors ( ) ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 99.7497 99.9991 99.9983 99.9397 99.9901 99.9997 99.951 99.9993 99.9776 99.9616 99.6868 97.5276 99.9967 99.9979 99.9977 99.9296 99.3568 99.8001 99.9984 99.9991 99.0798 99.9887 99.9994 99.9527 99.9993 99.9913 99.8447 99.4464 99.9652 99.7198
H-37	99.81402587890625	if ( ! ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node ) ) {
P-37	99.998 97.4521 99.6752 99.9952 99.9941 99.9978 99.8849 98.9214 99.9905 99.9967 99.8032 99.9991 99.9986 99.9163 99.9914 99.9997 99.9539 99.9992 99.9857 99.9591 99.6498 99.8074 99.9379 99.9979 99.9984 99.9988 99.9475 99.4624 99.8509 99.999 99.9991 99.5565 99.8891 99.9646 99.7717
H-37	99.81355554917279	if ( ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) && ordered CaMeL Nodes . contains ( next CaMeL Node ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 99.7497 99.9991 99.9983 99.9397 99.9901 99.9997 99.951 99.9993 99.9776 99.9616 99.6868 97.5276 99.9967 99.9979 99.9977 99.9296 99.3568 99.8001 99.9984 99.9991 99.4871 99.886 99.9649 99.6964
H-37	99.81355365953948	if ( ordered CaMeL Nodes . contains ( next CaMeL Node . get CaMeL Successors ( ) ) && ordered CaMeL Nodes . contains ( next CaMeL Node . get CaMeL Successors ( ) ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 99.7398 99.9988 99.9986 99.1851 99.9775 99.9996 99.9288 99.999 99.9693 99.8292 99.6813 97.4352 99.9961 99.998 99.9977 99.938 99.9208 99.8315 99.9981 99.9993 99.632 99.9889 99.9995 99.9537 99.9993 99.9942 99.8881 99.435 99.9653 99.7249
H-37	99.81313941592262	if ( ! ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node . get CaMeL Successors ( ) ) ) {
P-37	99.998 97.4521 99.6752 99.9952 99.9941 99.9978 99.8849 98.9214 99.9905 99.9967 99.8032 99.9991 99.9986 99.9163 99.9914 99.9997 99.9539 99.9992 99.9857 99.9591 99.6498 99.8074 99.9379 99.9979 99.9984 99.9988 99.9475 99.4624 99.8509 99.999 99.9991 98.9638 99.9874 99.9995 99.9494 99.9995 99.9927 99.847 99.5283 99.9603 99.8009
H-37	99.8108410957532	if ( next CaMeL Node . get CaMeL Successors ( ) . contains ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node ) ) {
P-37	99.998 97.8094 99.9991 99.9985 99.9045 99.9537 99.9995 99.9213 99.9941 99.9763 99.992 99.7035 99.6371 99.8105 99.9988 99.9994 98.6208 99.985 99.9995 99.9539 99.9995 99.9893 99.8814 99.5861 99.7078 99.9235 99.9976 99.9985 99.9989 99.9322 99.9319 99.8584 99.9988 99.9993 99.0087 99.8935 99.9616 99.7392
H-37	99.80994233630952	if ( ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) )
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 99.7497 99.9991 99.9983 99.9397 99.9901 99.9997 99.951 99.9993 99.9776 99.9616 99.6868 99.7771 99.9391 99.9981 99.9986 99.9988 99.9443 99.197 99.9774 99.9991 99.8048 99.9991 99.9991 99.9639 99.993 99.9997 99.9388 99.9994 99.9905 99.9514 99.4356 96.0903
H-37	99.80920080236487	if ( ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 99.7497 99.9991 99.9983 99.9397 99.9901 99.9997 99.951 99.9993 99.9776 99.9616 99.6868 99.7771 99.9391 99.9981 99.9986 99.9988 99.9443 99.197 99.9774 99.9991 99.8048 99.9991 99.9991 96.64 99.9457 99.9495 99.7502
H-37	99.80839129192073	if ( ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains CaMeL All ( node . get CaMeL Successors ( ) ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 99.7497 99.9991 99.9983 99.9397 99.9901 99.9997 99.951 99.9993 99.9776 99.9616 99.6868 99.7771 99.9391 99.9981 99.9986 99.9988 99.9443 99.197 99.9774 99.9991 96.4423 99.8262 99.9904 99.9995 99.9075 99.999 99.9928 99.9338 99.466 99.9586 99.775
H-37	99.80836791992188	if ( ! ordered CaMeL Nodes . contains ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node . get CaMeL Successors ( ) ) ) {
P-37	99.998 97.4521 99.6752 99.9952 99.9941 99.9978 99.8849 99.5842 99.6771 99.9987 99.999 99.0242 99.9786 99.9996 99.9391 99.9989 99.9726 99.5767 99.6516 99.7947 99.9337 99.9978 99.9983 99.9988 99.9378 99.9097 99.8694 99.9988 99.9993 99.5745 99.9887 99.9995 99.9465 99.9994 99.9941 99.8064 99.4893 99.9629 99.7753
H-37	99.80769856770833	if ( next CaMeL Node . get CaMeL Successors ( ) . contains ( next CaMeL Node ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node ) ) {
P-37	99.998 97.8094 99.9991 99.9985 99.9045 99.9537 99.9995 99.9213 99.9941 99.9763 99.992 99.7035 99.6371 99.8105 99.9988 99.9994 99.7063 98.7176 99.5538 99.8314 99.9981 99.9985 99.9986 99.9357 99.9245 99.8439 99.9988 99.9992 99.9126 99.8461 99.9664 99.7648
H-37	99.80684502180233	if ( ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) ) { ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) ; }
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 99.7497 99.9991 99.9983 99.9397 99.9901 99.9997 99.951 99.9993 99.9776 99.9616 98.6778 99.9528 98.0465 99.9948 99.9947 99.9992 98.5077 99.7817 99.9152 99.9981 99.6223 99.9984 99.9993 99.9497 99.9943 99.9997 99.9457 99.9995 99.9914 99.9392 99.8904 99.5212 99.6382
H-37	99.80503951671511	if ( ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains CaMeL All ( ordered CaMeL Nodes . get CaMeL Successors ( ) ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 99.7497 99.9991 99.9983 99.9397 99.9901 99.9997 99.951 99.9993 99.9776 99.9616 99.6868 99.7771 99.9391 99.9981 99.9986 99.9988 99.9443 99.197 99.9774 99.9991 96.9236 99.9989 99.9938 99.4648 99.4388 99.8472 99.901 99.9988 99.9713 99.8848 99.6596 99.9559 99.7256
H-37	99.79912719726562	if ( ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) && next CaMeL Node . get CaMeL Successors ( ) . contains ( next CaMeL Node ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 99.7497 99.9991 99.9983 99.9397 99.9901 99.9997 99.951 99.9993 99.9776 99.9616 99.6868 96.1449 99.9944 99.998 99.9917 99.9415 99.999 99.8828 99.9978 99.9937 99.9921 99.5574 99.5717 99.8135 99.9985 99.9992 99.661 99.8073 99.9702 99.6273
H-37	99.79845081676136	if ( ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ! ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 99.7497 99.9991 99.9983 99.9397 99.9901 99.9997 99.951 99.9993 99.9776 99.9616 99.6868 99.7771 95.3763 99.8814 99.9966 99.9966 99.998 99.9304 99.2889 99.9831 99.9989 99.8294 99.9991 99.9992 99.9532 99.9929 99.9998 99.9389 99.9995 99.993 99.9615 99.4585 99.9569 99.7994
H-37	99.797119140625	if ( ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains CaMeL All ( ordered CaMeL Nodes ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 99.7497 99.9991 99.9983 99.9397 99.9901 99.9997 99.951 99.9993 99.9776 99.9616 99.6868 99.7771 99.9391 99.9981 99.9986 99.9988 99.9443 99.197 99.9774 99.9991 96.9236 99.9989 99.9938 99.113 99.8836 99.9406 99.7875
H-37	99.79670466933139	if ( ordered CaMeL Nodes . contains CaMeL All ( ordered CaMeL Nodes . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 97.1299 99.9989 99.9906 99.7806 99.6376 99.4723 99.92 99.9988 99.8124 99.8914 99.4857 99.6854 99.9144 99.9981 99.9987 99.9988 99.9546 99.2326 99.9771 99.9991 99.71 99.9991 99.999 99.81 99.9919 99.9997 99.9485 99.9994 99.9878 99.9539 99.4616 99.9595 99.7902
H-37	99.7957251764113	if ( ordered CaMeL Nodes . contains ( node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 97.3047 99.5484 99.9854 99.9997 99.9081 99.9985 99.9766 99.6286 99.7355 99.7334 99.922 99.9979 99.9987 99.9989 99.9468 99.9121 99.8706 99.9988 99.9992 99.7012 99.8846 99.9656 99.7405
H-37	99.79325939360119	if ( ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) ) { ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) ;
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 99.7497 99.9991 99.9983 99.9397 99.9901 99.9997 99.951 99.9993 99.9776 99.9616 98.6778 99.9528 98.0465 99.9948 99.9947 99.9992 98.5077 99.7817 99.9152 99.9981 99.6223 99.9984 99.9993 99.9497 99.9943 99.9997 99.9457 99.9995 99.9914 99.9392 99.8904 98.7819
H-37	99.79293915719697	if ( ordered CaMeL Nodes . contains CaMeL All ( node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 96.7478 99.9158 99.9883 99.9996 99.9291 99.9986 99.9822 99.9419 99.6714 99.7646 99.9328 99.998 99.9988 99.9989 99.9522 99.366 99.8557 99.999 99.9991 99.7513 99.8791 99.9665 99.7598
H-37	99.79132254464285	if ( ordered CaMeL Nodes . contains ( next CaMeL Node ) && ! ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 99.7398 99.9988 99.9986 99.4042 99.1694 99.5927 99.8045 99.9984 99.9981 99.9985 99.947 97.6221 99.9832 99.9979 99.7942 99.9991 99.9988 99.7549 99.9911 99.9997 99.9566 99.9993 99.9887 99.9339 99.4169 99.9587 99.7391
H-37	99.79018304286859	if ( ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains ( node . get CaMeL Successors ( ) ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 99.7497 99.9991 99.9983 99.9397 99.9901 99.9997 99.951 99.9993 99.9776 99.9616 99.6868 99.7771 99.9391 99.9981 99.9986 99.9988 99.9443 99.4055 96.8327 98.9217 99.9861 99.9994 99.9694 99.9993 99.9854 99.8419 99.4762 99.9615 99.7595
H-37	99.78993918678977	if ( ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) ) { {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 99.7497 99.9991 99.9983 99.9397 99.9901 99.9997 99.951 99.9993 99.9776 99.9616 99.6868 99.7771 99.9391 99.9981 99.9986 99.9988 99.9443 99.197 99.9774 99.9991 99.8048 99.9991 99.9991 99.9639 99.993 99.9997 99.9388 99.9994 99.9905 99.9514 99.4356 99.9604 95.4774 99.392
H-37	99.78948419744319	if ( ordered CaMeL Nodes . contains ( next CaMeL Node . get CaMeL Successors ( ) ) && next CaMeL Node . get CaMeL Successors ( ) . contains ( next CaMeL Node . get CaMeL Successors ( ) ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 99.7398 99.9988 99.9986 99.1851 99.9775 99.9996 99.9288 99.999 99.9693 99.8292 99.6813 96.1544 99.9939 99.998 99.989 99.9358 99.9989 99.8861 99.997 99.9943 99.9928 99.6104 99.8129 99.8487 99.9985 99.9993 99.3279 99.9879 99.9995 99.9479 99.9994 99.9958 99.937 99.4789 99.9588 99.6753
H-37	99.78873697916667	if ( next CaMeL Node . get CaMeL Successors ( ) . equals ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node ) ) {
P-37	99.998 97.8094 99.9991 99.9985 99.9045 99.9537 99.9995 99.9213 99.9941 99.9763 99.992 97.9153 99.8396 99.6123 99.9991 99.9993 99.2265 99.9866 99.9995 99.9548 99.9993 99.9925 99.987 99.5314 99.7028 99.9242 99.9978 99.9986 99.999 99.9413 99.9021 99.8606 99.999 99.9993 99.2817 99.8867 99.9628 99.7532
H-37	99.78854896282327	if ( next CaMeL Node . get CaMeL Successors ( ) . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) ) {
P-37	99.998 97.8094 99.9991 99.9985 99.9045 99.9537 99.9995 99.9213 99.9941 99.9763 99.992 99.7035 98.8097 99.9784 99.9947 99.8108 99.9987 99.9993 99.92 99.9935 99.9997 99.9538 99.9995 99.9917 99.9701 98.7873 99.9425 99.5059
H-37	99.78751429115853	if ( ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . equals ( next CaMeL Node . get CaMeL Successors ( ) ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 99.7497 99.9991 99.9983 99.9397 99.9901 99.9997 99.951 99.9993 99.9776 99.9616 99.6868 99.7771 99.9391 99.9981 99.9986 99.9988 95.2017 99.8225 99.8014 99.999 99.9992 99.6004 99.9898 99.9996 99.9417 99.9993 99.9917 99.9406 99.5334 99.9624 99.7708
H-37	99.7850242820946	if ( ordered CaMeL Nodes . contains ( node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node . get CaMeL Successors ( ) ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 97.3047 99.5484 99.9854 99.9997 99.9081 99.9985 99.9766 99.6286 99.7355 99.7334 99.922 99.9979 99.9987 99.9989 99.9468 99.9121 99.8706 99.9988 99.9992 98.6327 99.9856 99.9995 99.9535 99.9995 99.9934 99.8892 99.4682 99.9608 99.7882
H-37	99.78289979876894	if ( ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains ( node ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 99.7497 99.9991 99.9983 99.9397 99.9901 99.9997 99.951 99.9993 99.9776 99.9616 99.6868 99.7771 99.9391 99.9981 99.9986 99.9988 99.9443 99.4055 96.8327 99.5706 99.6759 99.8911 99.7809
H-37	99.78252563476562	if ( ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node . get CaMeL Successors ( ) ) )
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 99.7497 99.9991 99.9983 99.9397 99.9901 99.9997 99.951 99.9993 99.9776 99.9616 99.6868 99.7771 99.9391 99.9981 99.9986 99.9988 99.9443 99.4055 99.8519 99.999 99.9991 98.9578 99.9874 99.9995 99.9505 99.9994 99.99 99.8818 99.5023 96.0978
H-37	99.78221938189338	if ( ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . is CaMeL Empty ( ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 99.7497 99.9991 99.9983 99.9397 99.9901 99.9997 99.951 99.9993 99.9776 99.9616 99.6868 99.7771 99.9391 99.9981 99.9986 99.9988 95.9846 99.9723 99.3207 99.9968 99.9834 99.8794 99.9256 99.7983
H-37	99.77950528772865	if ( ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) ) { ordered CaMeL Nodes . add ( next CaMeL Node . get CaMeL Successors ( ) ) ; }
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 99.7497 99.9991 99.9983 99.9397 99.9901 99.9997 99.951 99.9993 99.9776 99.9616 98.6778 99.9528 98.0465 99.9948 99.9947 99.9992 99.132 99.8075 98.9614 99.9965 99.999 99.2066 99.9914 99.9992 99.9731 99.9995 99.9888 99.8739 99.9013 99.683 99.4439
H-37	99.7792499248798	if ( ordered CaMeL Nodes . contains ( next CaMeL Node ) && ordered CaMeL Nodes . contains ( next CaMeL Node ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 99.7398 99.9988 99.9986 99.4042 99.1694 97.9531 99.9977 99.9914 99.9975 99.9226 99.9181 99.814 99.9981 99.9991 99.9395 99.8371 99.972 99.6971
H-37	99.77875077097039	if ( ordered CaMeL Nodes . contains ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node . get CaMeL Successors ( ) ) )
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 99.7398 99.9988 99.9986 99.1851 99.9775 99.9996 99.9288 99.999 99.9693 99.8292 99.6813 99.768 99.9327 99.9979 99.9987 99.9989 99.9426 99.9234 99.8698 99.9988 99.9993 99.5814 99.9887 99.9996 99.9489 99.9995 99.9919 99.8783 99.4759 96.0792
H-37	99.77827649238782	if ( ordered CaMeL Nodes . contains CaMeL All ( node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node . get CaMeL Successors ( ) ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 96.7478 99.9158 99.9883 99.9996 99.9291 99.9986 99.9822 99.9419 99.6714 99.7646 99.9328 99.998 99.9988 99.9989 99.9522 99.366 99.8557 99.999 99.9991 98.4719 99.9873 99.9995 99.9594 99.9995 99.9876 99.8941 99.4916 99.9588 99.7927
H-37	99.77616159539474	if ( ordered CaMeL Nodes . contains ( next CaMeL Node ) && ordered CaMeL Nodes . contains ( next CaMeL Node ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 99.7398 99.9988 99.9986 99.4042 99.1694 97.9531 99.9977 99.9914 99.9975 99.9226 99.9181 99.814 99.9981 99.9991 99.9395 98.0176 99.5102 99.8463 99.9978 99.9977 99.9987 99.9564 99.9396 99.8693 99.9987 99.9991 99.9617 99.8623 99.968 99.8162
H-37	99.77467256433823	if ( ! ordered CaMeL Nodes . contains ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node ) ) {
P-37	99.998 97.4521 99.6752 99.9952 99.9941 99.9978 99.8849 99.5842 99.6771 99.9987 99.999 99.0242 99.9786 99.9996 99.9391 99.9989 99.9726 99.5767 99.6516 99.7947 99.9337 99.9978 99.9983 99.9988 99.9378 99.9097 99.8694 99.9988 99.9993 98.9319 99.8982 99.9636 99.7473
H-37	99.77439970128677	if ( ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node ) )
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 99.7497 99.9991 99.9983 99.9397 99.9901 99.9997 99.951 99.9993 99.9776 99.9616 99.6868 99.7771 99.9391 99.9981 99.9986 99.9988 99.9443 99.4055 99.8519 99.999 99.9991 99.56 99.8861 95.9489
H-37	99.77218191964286	if ( ordered CaMeL Nodes . contains CaMeL All ( ordered CaMeL Nodes . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 97.1299 99.9989 99.9906 99.7806 99.6376 99.4723 99.92 99.9988 99.8124 99.8914 99.4857 99.6854 99.9144 99.9981 99.9987 99.9988 99.9546 99.3757 99.8552 99.999 99.999 99.7529 99.8778 99.9656 99.7622
H-37	99.77107238769531	if ( ordered CaMeL Nodes . contains ( next CaMeL Node . get CaMeL Successors ( ) ) && ordered CaMeL Nodes . contains ( next CaMeL Node ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 99.7398 99.9988 99.9986 99.1851 99.9775 99.9996 99.9288 99.999 99.9693 99.8292 99.6813 97.4352 99.9961 99.998 99.9977 99.938 99.9208 99.8315 99.9981 99.9993 98.8126 99.8943 99.9638 99.6694
H-37	99.77063598632813	if ( next CaMeL Node . get CaMeL Successors ( ) . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) && ordered CaMeL Nodes . contains ( next CaMeL Node ) ) {
P-37	99.998 97.8094 99.9991 99.9985 99.9045 99.9537 99.9995 99.9213 99.9941 99.9763 99.992 99.7035 98.8097 99.9784 99.9947 99.8108 99.9987 99.9993 99.92 99.9935 99.9997 99.9538 99.9995 99.9917 99.9701 99.644 97.5908 99.9959 99.9979 99.9973 99.9199 99.3457 99.7881 99.9983 99.9991 99.3573 99.8872 99.9616 99.7104
H-37	99.768896484375	if ( ordered CaMeL Nodes . contains ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ! ordered CaMeL Nodes . contains ( next CaMeL Node . get CaMeL Successors ( ) ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 99.7398 99.9988 99.9986 99.1851 99.9775 99.9996 99.9288 99.999 99.9693 99.8292 99.6813 99.768 95.7078 99.8713 99.9971 99.9968 99.998 99.9158 99.912 99.8493 99.9987 99.9994 99.5427 99.989 99.9996 99.9493 99.9994 99.9939 99.8218 99.479 99.9624 99.7855
H-37	99.76737253289474	if ( ordered CaMeL Nodes . contains ( next CaMeL Node ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node ) && ordered CaMeL Nodes . contains ( next CaMeL Node ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 99.7398 99.9988 99.9986 99.4042 99.1694 99.5927 99.8045 99.9984 99.9981 99.9985 99.947 99.9026 99.8561 99.9988 99.9991 99.9357 97.8753 97.7201 99.9959 99.9916 99.9979 99.9354 99.9522 99.838 99.998 99.9991 99.9647 99.8655 99.9693 99.8036
H-37	99.76714324951172	if ( ordered CaMeL Nodes . contains ( ordered CaMeL Nodes . get ( i ) ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 97.4546 99.9988 99.9742 99.8906 99.8395 99.8613 98.6699 99.9917 99.8876 99.4565 99.6334 99.8623 99.9968 99.9979 99.9986 99.9332 99.9154 99.8351 99.9988 99.9992 99.8483 99.9038 99.966 99.723
H-37	99.7666015625	if ( ! ordered CaMeL Nodes . contains ( next CaMeL Node ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node ) ) {
P-37	99.998 97.4521 99.6752 99.9952 99.9941 99.9978 99.8849 99.5842 99.6771 99.9987 99.999 99.5153 99.0433 99.6646 99.7956 99.9982 99.9977 99.9985 99.9442 99.9004 99.8602 99.9987 99.9992 99.9202 99.8579 99.9677 99.7844
H-37	99.76622596153847	if ( ordered CaMeL Nodes . contains ( node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 97.3047 99.5484 99.9854 99.9997 99.9081 99.9985 99.9766 99.6286 99.7355 99.7334 99.922 99.9979 99.9987 99.9989 99.9468 97.524 99.9832 99.9979 99.8087 99.9991 99.999 99.8942 99.9926 99.9997 99.9537 99.9995 99.9905 99.9644 99.4484 99.9534 99.7793
H-37	99.76569567228618	if ( ordered CaMeL Nodes . contains ( next CaMeL Node . get CaMeL Successors ( ) ) && next CaMeL Node . get CaMeL Successors ( ) . contains ( next CaMeL Node ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 99.7398 99.9988 99.9986 99.1851 99.9775 99.9996 99.9288 99.999 99.9693 99.8292 99.6813 96.1544 99.9939 99.998 99.989 99.9358 99.9989 99.8861 99.997 99.9943 99.9928 99.6104 99.8129 99.8487 99.9985 99.9993 99.2782 99.8119 99.9678 99.6101
H-37	99.76503655849359	if ( ordered CaMeL Nodes . contains ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . equals ( next CaMeL Node . get CaMeL Successors ( ) ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 99.7398 99.9988 99.9986 99.1851 99.9775 99.9996 99.9288 99.999 99.9693 99.8292 99.6813 99.768 99.9327 99.9979 99.9987 99.9989 95.2776 99.9379 99.8337 99.9989 99.9992 99.7612 99.9895 99.9996 99.9462 99.9994 99.9925 99.9411 99.5139 99.9622 99.7676
H-37	99.764892578125	if ( ordered CaMeL Nodes . contains ( next CaMeL Node ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node . get CaMeL Successors ( ) ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 99.7398 99.9988 99.9986 99.4042 99.1694 99.5927 99.8045 99.9984 99.9981 99.9985 99.947 99.9026 99.8561 99.9988 99.9991 97.1771 99.9809 99.9994 99.948 99.9992 99.9802 99.6904 99.4771 99.9655 99.7051
H-37	99.76221381293402	if ( ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node ) ) { {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 99.7497 99.9991 99.9983 99.9397 99.9901 99.9997 99.951 99.9993 99.9776 99.9616 99.6868 99.7771 99.9391 99.9981 99.9986 99.9988 99.9443 99.4055 99.8519 99.999 99.9991 99.56 99.8861 99.9662 95.4549 99.638
H-37	99.76080157305744	if ( ordered CaMeL Nodes . contains ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains ( node . get CaMeL Successors ( ) ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 99.7398 99.9988 99.9986 99.1851 99.9775 99.9996 99.9288 99.999 99.9693 99.8292 99.6813 99.768 99.9327 99.9979 99.9987 99.9989 99.9426 99.9234 96.7 98.8079 99.9863 99.9995 99.9707 99.9992 99.9933 99.6979 99.4857 99.9627 99.7649
H-37	99.75969780815973	if ( ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ! ordered CaMeL Nodes . contains ( next CaMeL Node ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 99.7497 99.9991 99.9983 99.9397 99.9901 99.9997 99.951 99.9993 99.9776 99.9616 99.6868 99.7771 95.3763 99.8814 99.9966 99.9966 99.998 99.9304 99.324 99.8365 99.9989 99.9992 99.5991 99.8818 99.9651 99.7652
H-37	99.75896453857422	if ( next CaMeL Node . get CaMeL Successors ( ) . contains ( next CaMeL Node ) && ordered CaMeL Nodes . contains ( next CaMeL Node ) ) {
P-37	99.998 97.8094 99.9991 99.9985 99.9045 99.9537 99.9995 99.9213 99.9941 99.9763 99.992 99.7035 99.6371 99.8105 99.9988 99.9994 99.7063 98.7176 98.1123 99.9961 99.9934 99.9978 99.9056 99.9323 99.8061 99.9981 99.9993 99.9274 99.8432 99.9685 99.7249
H-37	99.75791015625	if ( ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains ( ordered CaMeL Nodes ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 99.7497 99.9991 99.9983 99.9397 99.9901 99.9997 99.951 99.9993 99.9776 99.9616 99.6868 99.7771 99.9391 99.9981 99.9986 99.9988 99.9443 99.4055 95.9705 99.9989 99.9777 98.962 99.8447 99.9588 99.7296
H-37	99.75656029485887	if ( ordered CaMeL Nodes . contains ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . contains ( node ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 99.7398 99.9988 99.9986 99.1851 99.9775 99.9996 99.9288 99.999 99.9693 99.8292 99.6813 99.768 99.9327 99.9979 99.9987 99.9989 99.9426 99.9234 96.7 99.6188 99.6989 99.876 99.7781
H-37	99.75614970439189	if ( ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node ) && ! ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 99.7497 99.9991 99.9983 97.1489 98.3294 99.4989 99.8534 99.9977 99.998 99.9984 99.9444 99.2084 99.9766 99.999 99.8016 99.9992 99.999 99.6714 99.9904 99.9997 99.9561 99.9993 99.9855 99.938 99.4432 99.9608 99.7628
H-37	99.75570565682871	if ( next CaMeL Node . get CaMeL Successors ( ) . contains ( next CaMeL Node . get CaMeL Successors ( ) ) ) {
P-37	99.998 97.8094 99.9991 99.9985 99.9045 99.9537 99.9995 99.9213 99.9941 99.9763 99.992 99.7035 99.6371 99.8105 99.9988 99.9994 98.6208 99.985 99.9995 99.9539 99.9995 99.9893 99.8814 98.9086 99.9489 99.4595
H-37	99.75223117404514	if ( ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) && ordered CaMeL Nodes . contains CaMeL All ( ordered CaMeL Nodes ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 99.7497 99.9991 99.9983 99.9397 99.9901 99.9997 99.951 99.9993 99.9776 99.9616 99.6868 97.5276 99.9967 99.9979 99.9977 99.9296 99.2529 99.9762 99.9987 97.424 99.999 99.9946 99.3552 99.8874 99.9423 99.7772
H-37	99.74825710720486	if ( ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) && ( ordered CaMeL Nodes . contains ( next CaMeL Node ) ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 99.7497 99.9991 99.9983 99.9397 99.9901 99.9997 99.951 99.9993 99.9776 99.9616 99.6868 95.6534 99.4385 99.9982 99.9973 99.9984 99.8235 99.1539 99.8362 99.9987 99.9991 99.6498 99.8168 99.7679 99.9619 99.8205
H-37	99.74444056919643	if ( ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) ) { ordered CaMeL Nodes . add ( next CaMeL Node ) ; }
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 99.7497 99.9991 99.9983 99.9397 99.9901 99.9997 99.951 99.9993 99.9776 99.9616 98.6778 99.9528 98.0465 99.9948 99.9947 99.9992 99.132 99.8075 98.9614 99.9965 99.999 99.393 99.9424 99.5911 99.2301
H-37	99.74387555803571	if ( ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . equals ( next CaMeL Node ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 99.7497 99.9991 99.9983 99.9397 99.9901 99.9997 99.951 99.9993 99.9776 99.9616 99.6868 99.7771 99.9391 99.9981 99.9986 99.9988 95.2017 99.8225 99.8014 99.999 99.9992 98.885 99.9031 99.967 99.722
H-37	99.74337948069854	if ( ordered CaMeL Nodes . contains ( ordered CaMeL Nodes . get ( next CaMeL Node ) ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 97.4546 99.9988 99.9742 99.8906 99.8395 99.8613 98.3273 99.9954 99.998 99.6781 99.9387 98.5963 99.6712 99.8784 99.9979 99.998 99.9983 99.9438 99.9216 99.841 99.9988 99.9993 99.9455 99.9014 99.9674 99.7472
H-37	99.74169049944196	if ( ordered CaMeL Nodes . contains ( next CaMeL Node ) && ! ! ordered CaMeL Nodes . contains ( next CaMeL Node ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 99.7398 99.9988 99.9986 99.4042 99.1694 99.5927 97.0062 99.7478 99.9977 99.9958 99.9978 99.9202 99.9016 99.8625 99.9987 99.9994 99.9311 99.8691 99.9681 99.7559
H-37	99.7416000366211	if ( ordered CaMeL Nodes . contains ( next CaMeL Node . get CaMeL Successors ( ) ) && ! ordered CaMeL Nodes . is CaMeL Empty ( ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 99.7398 99.9988 99.9986 99.1851 99.9775 99.9996 99.9288 99.999 99.9693 99.8292 99.6813 99.768 99.9327 99.9979 99.9987 99.9989 95.9975 99.9653 99.285 99.9967 99.9851 99.8632 99.9229 99.7996
H-37	99.73765240293561	if ( next CaMeL Node . get CaMeL Successors ( ) . equals ( next CaMeL Node ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node ) ) {
P-37	99.998 97.8094 99.9991 99.9985 99.9045 99.9537 99.9995 99.9213 99.9941 99.9763 99.992 97.9153 99.8396 99.6123 99.9991 99.9993 99.3777 98.6756 99.5016 99.8256 99.9982 99.9985 99.9986 99.94 99.8783 99.8474 99.999 99.9992 99.8449 99.8558 99.9659 99.762
H-37	99.73529815673828	if ( ordered CaMeL Nodes . contains ( ordered CaMeL Nodes . get ( 0 ) ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 97.4546 99.9988 99.9742 99.8906 99.8395 99.8613 97.6501 99.9943 99.8834 99.4806 99.6209 99.8641 99.9967 99.9981 99.9986 99.9299 99.9143 99.8393 99.9987 99.9992 99.8305 99.9029 99.9657 99.7314
H-37	99.73485565185547	if ( ordered CaMeL Nodes . contains ( next CaMeL Node ) && next CaMeL Node . get CaMeL Successors ( ) . contains ( next CaMeL Node ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 99.7398 99.9988 99.9986 99.4042 99.1694 96.0373 99.9968 99.9945 99.9549 99.9184 99.9993 99.8939 99.9979 99.9728 99.9913 99.595 99.8157 99.8443 99.9986 99.9993 99.948 99.7689 99.972 99.5937
H-37	99.73115596064815	if ( ordered CaMeL Nodes . contains ( next CaMeL Node ) || ! ordered CaMeL Nodes . contains ( next CaMeL Node ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 99.7398 99.9988 99.9986 99.4042 96.1389 99.4412 99.8162 99.9981 99.9981 99.9985 99.9526 99.9071 99.8611 99.9987 99.9992 99.941 99.8476 99.9673 99.8221
H-37	99.72725132533482	if ( ordered CaMeL Nodes . contains ( next CaMeL Node . get CaMeL Successors ( ) . get ( next CaMeL Node ) ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 99.7398 99.9988 99.9986 99.1851 99.9775 99.9996 99.9288 99.999 99.9693 98.068 98.7724 99.7885 99.4597 99.9954 99.9989 99.459 99.9309 99.7531 99.9602 99.4679
H-37	99.72641938308189	if ( ordered CaMeL Nodes . contains ( next CaMeL Node ) && ! ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 99.7398 99.9988 99.9986 99.4042 99.1694 99.5927 99.8045 99.9984 99.9981 99.9985 99.947 97.6221 99.9832 99.9979 99.7942 99.9991 99.9988 98.4705 99.9197 99.9486 99.7703
H-37	99.72097252155173	if ( ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 99.7497 99.9991 99.9983 97.1489 98.3294 99.4989 99.8534 99.9977 99.998 99.9984 99.9444 99.3962 99.8394 99.9989 99.999 99.8301 99.8463 99.9676 99.7441
H-37	99.72072265625	if ( ordered CaMeL Nodes . contains ( node ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 97.3047 98.963 99.6057 99.4484 99.7382 99.997 99.9954 99.9978 99.9349 99.8736 99.8566 99.9988 99.9991 99.8243 99.8475 99.9682 99.7529
H-37	99.7194191261574	if ( next CaMeL Node . get CaMeL Successors ( ) . equals ( next CaMeL Node . get CaMeL Successors ( ) ) ) {
P-37	99.998 97.8094 99.9991 99.9985 99.9045 99.9537 99.9995 99.9213 99.9941 99.9763 99.992 97.9153 99.8396 99.6123 99.9991 99.9993 99.2265 99.9866 99.9995 99.9548 99.9993 99.9925 99.987 99.0088 99.955 99.4403
H-37	99.71785835597827	if ( ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 99.7497 99.9991 99.9983 99.9397 99.9901 99.9997 99.951 99.9993 99.9776 99.9616 98.6778 99.9528 96.5437
H-37	99.71668294270833	if ( ordered CaMeL Nodes . contains CaMeL All ( next CaMeL Node . get CaMeL Successors ( ) . contains ( next CaMeL Node ) ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.2407 99.9906 99.9957 99.7497 99.9991 99.9983 99.9397 99.9901 99.9997 99.951 99.9993 99.9776 96.3561 98.5399 99.4463 99.747 99.9975 99.9991 99.7482 99.9227 99.7903 99.9561 99.6226
H-37	99.71533203125	if ( ordered CaMeL Nodes . contains ( node . get CaMeL Successors ( ) ) && ordered CaMeL Nodes . contains ( next CaMeL Node ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 97.3047 99.5484 99.9854 99.9997 99.9081 99.9985 99.9766 99.6286 99.7355 97.6214 99.9963 99.9977 99.9979 99.9355 99.9071 99.8362 99.9982 99.9993 99.664 99.8746 99.9656 99.6689
H-37	99.71507947198276	if ( ( ordered CaMeL Nodes . contains ( next CaMeL Node ) ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node ) ) {
P-37	99.998 95.9117 99.2679 99.9972 99.9925 99.9922 99.9369 99.2504 99.7645 99.9987 99.999 99.4899 99.5249 99.7213 99.7684 99.8438 99.9985 99.9985 99.9985 99.9593 99.9008 99.8567 99.9988 99.9993 99.9603 99.9106 99.9684 99.7681
H-37	99.71361432756696	if ( ordered CaMeL Nodes . contains ( next CaMeL Node . get CaMeL Successors ( ) . contains ( next CaMeL Node ) ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 99.7398 99.9988 99.9986 99.1851 99.9775 99.9996 99.9288 99.999 99.9693 98.068 98.0249 99.8497 99.8153 99.9974 99.9992 99.2869 99.9193 99.7755 99.9554 99.5805
H-37	99.70279947916667	if ( ordered CaMeL Nodes . contains ( next CaMeL Node . get CaMeL Successors ( ) . to CaMeL String ( ) ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 99.7398 99.9988 99.9986 99.1851 99.9775 99.9996 99.9288 99.999 99.9693 98.068 99.0181 99.9708 98.2992 99.9988 99.9896 99.9724 99.451 99.9594 99.5395
H-37	99.6963523582176	if ( ordered CaMeL Nodes . contains ( next CaMeL Node ) ) { ordered CaMeL Nodes . add ( next CaMeL Node ) ; }
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 99.7398 99.9988 99.9986 99.4042 99.3634 99.9599 97.7787 99.9973 99.9927 99.999 99.1596 99.9106 98.993 99.9965 99.9988 99.8768 99.9565 99.6416 99.1239
H-37	99.6931621844952	if ( ordered CaMeL Nodes . contains ( next CaMeL Node ) && ! ordered CaMeL Nodes . contains ( next CaMeL Node ) )
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 99.7398 99.9988 99.9986 99.4042 99.1694 99.5927 99.8045 99.9984 99.9981 99.9985 99.947 99.9026 99.8561 99.9988 99.9991 99.9357 99.8521 95.916
H-37	99.69119140625	if ( ordered CaMeL Nodes . contains ( next CaMeL Node ) && ! ordered CaMeL Nodes . contains ( node ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 99.7398 99.9988 99.9986 99.4042 99.1694 99.5927 99.8045 99.9984 99.9981 99.9985 99.947 99.9026 96.8933 99.6348 99.6435 99.8847 99.7589
H-37	99.6863262469952	if ( ordered CaMeL Nodes . contains ( next CaMeL Node ) || ordered CaMeL Nodes . contains ( next CaMeL Node ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 99.7398 99.9988 99.9986 99.4042 96.1389 98.4128 99.9976 99.9937 99.9976 99.9502 99.9221 99.8243 99.9982 99.9991 99.9411 99.8442 99.9707 99.8002
H-37	99.66626993815105	if ( ordered CaMeL Nodes . contains ( node ) && ordered CaMeL Nodes . contains ( next CaMeL Node ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 97.3047 98.963 99.6057 98.2691 99.9967 99.9926 99.998 99.9004 99.8629 99.8368 99.9983 99.9991 99.8415 99.8393 99.9715 99.6987
H-37	99.65273902529762	if ( ordered CaMeL Nodes . contains ( next CaMeL Node . get CaMeL Successors ( ) ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 99.7398 99.9988 99.9986 99.1851 99.9775 99.9996 99.9288 99.999 99.9693 99.8292 98.6895 99.9603 96.5199
H-37	99.63847423735119	if ( next CaMeL Node . get CaMeL Successors ( ) . contains ( next CaMeL Node ) ) {
P-37	99.998 97.8094 99.9991 99.9985 99.9045 99.9537 99.9995 99.9213 99.9941 99.9763 99.992 99.7035 99.6371 99.8105 99.9988 99.9994 99.7063 99.6551 99.9714 96.4174
H-37	99.53919270833333	if ( ordered CaMeL Nodes . contains ( next CaMeL Node ) ) {
P-37	99.998 99.6359 99.9985 99.9949 99.993 99.9609 99.3686 99.7398 99.9988 99.9986 99.4042 99.3634 99.9599 95.7112
S-38	return lines ;
T-38	lines . add ( text ) ; return lines ;
H-38	99.7342758178711	return lines ;
P-38	99.4852 99.9915 99.9812
H-38	99.36974080403645	} ; return lines ;
P-38	99.6087 98.6941 99.1042 99.994 99.9827
H-38	99.23702392578124	return return lines ;
P-38	97.5853 99.1627 99.9933 99.9646
H-38	99.16211700439453	} * * / return lines ;
P-38	98.0579 99.6317 98.7724 98.3937 99.6414 99.9974 99.9677
H-38	99.15283203125	} ; return return lines ;
P-38	99.6087 98.6941 97.8293 99.1394 99.9873 99.9762
H-38	99.14988199869792	} ;
P-38	99.6087 99.0061
H-38	99.08396693638393	} * * * * /
P-38	98.0579 99.6317 99.4776 99.2144 99.1066 99.2648
H-38	99.07911682128906	} * * * * * /
P-38	98.0579 99.6317 99.4776 99.2144 98.7841 99.025 99.6073
H-38	99.07766723632812	} * * * return lines ;
P-38	98.0579 99.6317 99.4776 97.3422 99.3362 99.9745 99.9664
H-38	99.04328918457031	} lines . add ( lines ;
P-38	96.8396 99.9125 98.7118 99.9416 98.5325 99.825 99.7485
H-38	99.03560965401786	else { return lines ; }
P-38	99.533 98.8869 99.5538 99.9951 99.7689 99.8073
H-38	99.02665710449219	} * * * / } ;
P-38	98.0579 99.6317 99.4776 98.6398 97.867 99.9614 99.7431
H-38	98.99978637695312	} ; if ; return lines ;
P-38	99.6087 98.0248 98.5727 98.2748 98.7191 99.9942 99.9691
H-38	98.96330915178571	} ; } return lines ;
P-38	99.6087 96.9279 98.1345 99.2674 99.9915 99.9782
H-38	98.95429338727679	} ; else return lines ;
P-38	99.6087 96.4888 98.5536 99.2291 99.9857 99.9794
H-38	98.9480692545573	} * * * /
P-38	98.0579 99.6317 99.4776 98.6398 99.0466
H-38	98.94110107421875	} ; else { return lines ;
P-38	99.6087 96.4888 98.6206 99.0182 99.3614 99.9906 99.6057
H-38	98.93993377685547	} ; return return return lines ;
P-38	99.6087 98.6941 97.8293 97.6356 98.9496 99.9963 99.971
H-38	98.93277587890626	} return lines ;
P-38	96.3329 99.5373 99.9933 99.9656
H-38	98.92660958426339	} * * / } ;
P-38	98.0579 99.6317 98.7724 97.5341 99.9757 99.6796
H-38	98.91966247558594	} * * ; return lines ;
P-38	98.0579 99.6317 96.8527 98.4509 99.5576 99.9942 99.9775
H-38	98.91357421875	return lines ; return lines ;
P-38	99.4852 99.9915 94.8619 98.6156 99.9755 99.9861
H-38	98.90506417410714	} } ; return lines ;
P-38	96.9412 99.9102 97.995 98.6739 99.9938 99.9866
H-38	98.90305001395089	} ; if return lines ;
P-38	99.6087 98.0248 97.8307 98.9672 99.2165 99.8385
H-38	98.89718627929688	} * * * * * ;
P-38	98.0579 99.6317 99.4776 99.2144 98.7841 97.4969 99.68
H-38	98.88988494873047	return Collections . EMPTY _ LIST ;
P-38	95.1122 99.9822 98.3618 99.9902 98.2229 99.9949 99.9756
H-38	98.8701883951823	return return return lines ;
P-38	97.5853 96.9996 99.2015 99.9959 99.9595
H-38	98.86892700195312	} lines . append ( lines ;
P-38	96.8396 99.9125 98.0434 99.8968 97.9194 99.7378 99.7672
H-38	98.86459786551339	return lines ; } } ;
P-38	99.4852 99.9915 94.9348 98.3397 99.9438 99.878
H-38	98.86158970424107	} * * * * ;
P-38	98.0579 99.6317 99.4776 99.2144 97.6958 99.1189
H-38	98.84639739990234	} } ;
P-38	96.9412 99.9102 99.6994
H-38	98.84470912388393	} * / return lines ;
P-38	98.0579 97.9902 97.5401 99.5174 99.9972 99.9754
H-38	98.84402465820312	} * * /
P-38	98.0579 99.6317 98.7724 98.9233
H-38	98.84272112165179	} * ; return lines ;
P-38	98.0579 97.6558 97.9185 99.4679 99.9798 99.9843
H-38	98.8423080444336	} * * * / if ;
P-38	98.0579 99.6317 99.4776 98.6398 97.3149 99.1324 99.6494
H-38	98.83613804408482	} * * return lines ;
P-38	98.0579 99.6317 96.051 99.3197 99.9835 99.9743
H-38	98.833251953125	} ; lines . close ( ;
P-38	99.6087 96.8709 99.9771 96.4064 99.8793 99.7345 99.3542
H-38	98.81887817382812	} lines . remove ( lines ;
P-38	96.8396 99.9125 96.6313 99.9373 98.8655 99.7676 99.7623
H-38	98.81490071614583	return lines ; } ;
P-38	99.4852 99.9915 94.9348 99.1909 99.8078
H-38	98.80138142903645	} * return lines ;
P-38	98.0579 96.592 99.3462 99.995 99.9823
H-38	98.80005645751953	} * * * * / ;
P-38	98.0579 99.6317 99.4776 99.2144 99.1066 96.5117 99.5658
H-38	98.78295135498047	} * * * ? * /
P-38	98.0579 99.6317 99.4776 96.2807 98.7996 99.4158 99.7654
H-38	98.78089250837054	} * * / if ;
P-38	98.0579 99.6317 98.7724 97.7892 99.1034 99.2768
H-38	98.77920532226562	} ; return in ;
P-38	99.6087 98.6941 95.7928 99.7667 99.9781
H-38	98.7740249633789	} lines . start ( lines ;
P-38	96.8396 99.9125 97.6226 99.5712 98.8681 98.9615 99.582
H-38	98.77159881591797	} lines . append ( $STRING$ ;
P-38	96.8396 99.9125 98.0434 99.8968 98.0955 99.3419 99.2084
H-38	98.7628173828125	} lines . start ( ;
P-38	96.8396 99.9125 97.6226 99.5712 99.0794 99.4797
H-38	98.75895472935268	} / * * * /
P-38	95.5654 99.916 99.4006 99.0047 99.0547 99.5364
H-38	98.75628662109375	} * * * * ? /
P-38	98.0579 99.6317 99.4776 99.2144 96.3173 98.7778 99.7388
H-38	98.75502014160156	} / * * * * /
P-38	95.5654 99.916 99.4006 99.0047 98.7548 98.9109 99.653
H-38	98.7531026204427	return return - 1 ;
P-38	97.5853 95.7095 99.8035 99.9955 99.9456
H-38	98.7431411743164	} * * * * / /
P-38	98.0579 99.6317 99.4776 99.2144 99.1066 95.9195 99.7026
H-38	98.7349141438802	} ; else if ;
P-38	99.6087 96.4888 98.6506 99.3515 99.4751
H-38	98.73170979817708	if ; return lines ;
P-38	98.2543 98.3468 99.0589 99.9876 99.977
H-38	98.70364379882812	} if return lines ;
P-38	95.8454 98.594 99.054 99.9866 99.9071
H-38	98.68922932942708	return [ 1 ] ;
P-38	93.5084 99.2655 99.9484 99.9906 99.9432
H-38	98.67279815673828	} ; }
P-38	99.6087 96.9279 99.3197
H-38	98.67240397135417	} * * * ;
P-38	98.0579 99.6317 99.4776 97.4042 98.6282
H-38	98.6707763671875	} ; return start ;
P-38	99.6087 98.6941 94.9107 99.9937 99.9826
H-38	98.65813337053571	} * * * ? /
P-38	98.0579 99.6317 99.4776 96.2807 98.979 99.3452
H-38	98.65671793619792	else { return lines ;
P-38	99.533 98.8869 99.5538 99.9951 98.2673
H-38	98.65504150390625	return return 1 ;
P-38	97.5853 96.2858 99.9893 99.9355
H-38	98.65418497721355	return lines . length ;
P-38	99.4852 94.3193 98.8935 99.7834 99.9646
H-38	98.64658028738839	* * * * * /
P-38	99.8174 99.6943 99.3987 99.0884 99.1908 99.0861
H-38	98.62922886439732	} ; if ( lines ;
P-38	99.6087 98.0248 99.521 98.518 97.0288 98.8684
H-38	98.61103057861328	} * /
P-38	98.0579 97.9902 99.5612
H-38	98.6033203125	return return false ;
P-38	97.5853 96.0159 99.9894 99.9468
H-38	98.60088500976562	} ; if ;
P-38	99.6087 98.0248 98.5727 97.9633
H-38	98.6005350748698	} * / } ;
P-38	98.0579 97.9902 97.2851 99.9541 99.481
H-38	98.59146728515626	else return lines ;
P-38	97.8044 99.5066 99.9934 99.9487
H-38	98.58746948242188	return lines ; ;
P-38	99.4852 99.9915 94.0312 99.9503
H-38	98.57518310546875	return return $NUMBER$ ;
P-38	97.5853 95.8835 99.9814 99.9465
H-38	98.54482421875	return return 0 ;
P-38	97.5853 95.7396 99.9849 99.935
H-38	98.53758239746094	return start ;
P-38	94.7063 99.9883 99.9765
H-38	98.53578694661458	} / * * /
P-38	95.5654 99.916 99.4006 98.5076 98.9902
H-38	98.53453826904297	return false ;
P-38	94.695 99.9938 99.9701
H-38	98.51415405273437	if return lines ;
P-38	96.8284 99.212 99.9738 99.7908
H-38	98.50081787109374	return lines lines ;
P-38	99.4852 93.8069 99.7933 99.9394
H-38	98.45420532226562	return return in ;
P-38	97.5853 95.6218 99.6176 99.9671
H-38	98.44405364990234	} * ;
P-38	98.0579 97.6558 99.2277
H-38	98.39876708984374	return * lines ;
P-38	95.3543 97.7441 99.4448 99.9715
H-38	98.39671325683594	return in ;
P-38	94.4622 99.6661 99.9793
H-38	98.37071228027344	return true ;
P-38	94.039 99.9938 99.9709
H-38	98.33819580078125	return out ;
P-38	94.0166 99.8764 99.9806
H-38	98.29393768310547	return list ;
P-38	93.7366 99.9807 99.9793
H-38	98.2438735961914	return 0 ;
P-38	93.5454 99.9872 99.9638
H-38	98.20053100585938	return max ;
P-38	93.3943 99.9464 99.9822
H-38	98.18052673339844	return before ;
P-38	93.2883 99.9703 99.9843
H-38	98.17849731445312	return first ;
P-38	93.3038 99.9477 99.9832
H-38	98.1480000813802	return ;
P-38	95.1333 99.8315
H-38	98.14707946777344	} ; else
P-38	99.6087 96.4888 97.656
H-38	98.13108825683594	return line ;
P-38	93.0735 99.9909 99.9807
H-38	98.11896514892578	return source ;
P-38	93.0406 99.9775 99.9786
H-38	98.11209869384766	} if ;
P-38	95.8454 98.8999 98.8682
H-38	98.09941101074219	return if ;
P-38	93.5834 99.3752 99.9599
H-38	98.05084228515625	return return ;
P-38	97.5853 95.2529 99.8859
H-38	97.79669189453125	if ;
P-38	98.2543 98.3701
H-38	97.72239176432292	break ;
P-38	99.9514 99.608
H-38	96.48388671875	}
P-38	94.133
H-38	95.74774932861328	else
P-38	95.7913
