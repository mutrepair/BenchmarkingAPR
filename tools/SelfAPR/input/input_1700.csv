bugid	patch	buggy	id	buglineNo	removeNo	filepath
0	[PATCH]    accum.append(   "\n   ").append(StringUtils.leftPad(   "   ",    nodeDepth()    -1    *    2));	[BUG]    [BUGGY]    accum.append(   "\n   ").append(StringUtils.leftPad(   "   ",    nodeDepth()    -1    *    0));    [FE]    junit.framework.AssertionFailedError:    expected:<<html>    testFormatHtml    [CONTEXT]    protected    void    indent(StringBuilder    accum)    {    [BUGGY]    accum.append(   "\n   ").append(StringUtils.leftPad(   "   ",    nodeDepth()    -1    *    0));    }    [CLASS]        Node    [METHOD]    indent    [RETURN_TYPE]    void        StringBuilder    accum    [VARIABLES]    Attributes    attributes    List    childNodes    nodes    siblings    String    attributeKey    attributeValue    baseUri    relUrl    boolean    StringBuilder    accum    Node    in    out    parentNode        	jsoup_401_Node_1_1	331	1	src/main/java/org/jsoup/nodes/Node.java
1	[PATCH]    if    (data.endsWith(   "-   "))    //    i.e.    was    -->	[BUG]    [BUGGY]    if    (false)    //    i.e.    was    -->    [FE]    junit.framework.AssertionFailedError:    expected:<.../><p><!--    comment    --[]>Hello</p><p>there</...>    but    was:<.../><p><!--    comment    --[-]>Hello</p><p>there</...>    testOuterHtml    [CONTEXT]    private    void    parseComment()    {    tq.consume(   "<!--   ");    String    data    =    tq.chompTo(   "->   ");        [BUGGY]    if    (false)    data    =    data.substring(0,    data.length()-1);    Comment    comment    =    new    Comment(data,    baseUri);    last().appendChild(comment);    }    [CLASS]        Parser    [METHOD]    parseComment    [RETURN_TYPE]    void        [VARIABLES]    TokenQueue    tq    Comment    comment    boolean    String    DQ    SQ    baseUri    bodyHtml    data    html    Tag    bodyTag    headTag    htmlTag    textareaTag    titleTag    Document    doc    LinkedList    stack        	jsoup_1114_Parser_1_1	89	1	src/main/java/org/jsoup/parser/Parser.java
2	[PATCH]    if    (isBlock    !=    tag.isBlock)    return    false;	[BUG]    [BUGGY]    if    (true)    return    false;    [FE]    junit.framework.AssertionFailedError:    expected:    org.jsoup.parser.Tag<foo>    but    was:    org.jsoup.parser.Tag<foo>    defaultSemantics    [CONTEXT]    public    boolean    equals(Object    o)    {    if    (this    ==    o)    return    true;    if    (o    ==    null    ||    getClass()    !=    o.getClass())    return    false;    Tag    tag    =    (Tag)    o;    if    (canContainBlock    !=    tag.canContainBlock)    return    false;    if    (canContainInline    !=    tag.canContainInline)    return    false;    if    (empty    !=    tag.empty)    return    false;    [BUGGY]    if    (true)    return    false;    if    (optionalClosing    !=    tag.optionalClosing)    return    false;    if    (tagName    !=    null    ?    !tagName.equals(tag.tagName)    :    tag.tagName    !=    null)    return    false;    return    true;    }    [CLASS]        Tag    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    o    [VARIABLES]    List    ancestors    Object    o    boolean    canContainBlock    canContainInline    empty    isBlock    optionalClosing    preserveWhitespace    Tag    child    defaultAncestor    tag    String    tagName    Map    tags        	jsoup_637_Tag_1_1	174	1	src/main/java/org/jsoup/parser/Tag.java
3	[PATCH]    return    siblings.size()    >    1    ?    siblings.get(0)    :    null;	[BUG]    [BUGGY]    return    siblings.size()    >    1    ?    siblings.get(1)    :    null;    [FE]    junit.framework.AssertionFailedError:    expected:<[Hello]>    but    was:<[there]>    testGetSiblings    [CONTEXT]    public    Element    firstElementSibling()    {        List<Element>    siblings    =    parent().children();    [BUGGY]    return    siblings.size()    >    1    ?    siblings.get(1)    :    null;    }    [CLASS]        Element    [METHOD]    firstElementSibling    [RETURN_TYPE]    Element        [VARIABLES]    List    siblings    Set    classNames    Tag    tag    boolean        	jsoup_155_Element_1_1	375	1	src/main/java/org/jsoup/nodes/Element.java
4	[PATCH]    return    siblings.get(index+1);	[BUG]    [BUGGY]    return    siblings.get(index+-1);    [FE]    junit.framework.AssertionFailedError:    expected:<[this]>    but    was:<[Hello]>    testGetSiblings    [CONTEXT]    public    Element    nextElementSibling()    {    List<Element>    siblings    =    parent().children();    Integer    index    =    indexInList(this,    siblings);    Validate.notNull(index);    if    (siblings.size()    >    index+1)    [BUGGY]    return    siblings.get(index+-1);    else    return    null;    }    [CLASS]        Element    [METHOD]    nextElementSibling    [RETURN_TYPE]    Element        [VARIABLES]    Integer    index    List    siblings    Set    classNames    Tag    tag    boolean        	jsoup_133_Element_1_1	348	1	src/main/java/org/jsoup/nodes/Element.java
5	[PATCH]    if    (elements.size()    >    0)	[BUG]    [BUGGY]    if    (elements.size()    >=    0)    [FE]    java.lang.IndexOutOfBoundsException:    Index:    0,    Size:    0    testGetElementById    [CONTEXT]    public    Element    getElementById(String    id)    {    Validate.notEmpty(id);    Elements    elements    =    Collector.collect(new    Evaluator.Id(id),    this);    [BUGGY]    if    (elements.size()    >=    0)    return    elements.get(0);    else    return    null;    }    [CLASS]        Element    [METHOD]    getElementById    [RETURN_TYPE]    Element        String    id    [VARIABLES]    Set    classNames    Tag    tag    String    id    boolean    Elements    elements        	jsoup_177_Element_1_1	424	1	src/main/java/org/jsoup/nodes/Element.java
6	[PATCH]    if    (accum.length()    >    0    &&    element.isBlock()    &&    !TextNode.lastCharIsWhitespace(accum))	[BUG]    [BUGGY]    if    (!TextNode.lastCharIsWhitespace(accum))    [FE]    junit.framework.AssertionFailedError:    expected:<...llo    There.    Here    is    s[]ome    text.>    but    was:<...llo    There.    Here    is    s[    ]ome    text.>    testNormalisesText    [CONTEXT]    if    (!preserveWhitespace())    {    text    =    TextNode.normaliseWhitespace(text);    if    (TextNode.lastCharIsWhitespace(accum))    text    =    TextNode.stripLeadingWhitespace(text);    }    accum.append(text);    }    else    if    (child    instanceof    Element)    {    Element    element    =    (Element)    child;    [BUGGY]    if    (!TextNode.lastCharIsWhitespace(accum))    accum.append(   "       ");    element.text(accum);    }    }    }    [CLASS]        Element    [METHOD]    text    [RETURN_TYPE]    void        StringBuilder    accum    [VARIABLES]    Set    classNames    boolean    StringBuilder    accum    Node    child    Element    element    TextNode    textNode    Tag    tag    String    text        	jsoup_204_Element_1_1	577	1	src/main/java/org/jsoup/nodes/Element.java
7	[PATCH]    while    (!queue.isEmpty()    &&    !matchesAny(seq))	[BUG]    [BUGGY]    while    (!matchesAny(seq))    [FE]    java.util.NoSuchElementException    testYahooJp    [CONTEXT]    public    String    consumeToAny(String...    seq)    {    StringBuilder    accum    =    new    StringBuilder();    [BUGGY]    while    (!matchesAny(seq))    accum.append(consume());    return    accum.toString();    }    [CLASS]        TokenQueue    [METHOD]    consumeToAny    [RETURN_TYPE]    String        seq    [VARIABLES]    String[]    seq    boolean    StringBuilder    accum    LinkedList    queue        	jsoup_1336_TokenQueue_1_1	171	1	src/main/java/org/jsoup/parser/TokenQueue.java
8	[PATCH]    return    parentNode.nodeDepth()    +    1;	[BUG]    [BUGGY]    return    parentNode.nodeDepth()    %    1;    [FE]    junit.framework.AssertionFailedError:    expected:<...ead>    testFormatHtml    [CONTEXT]    protected    int    nodeDepth()    {    if    (parentNode    ==    null)    return    0;    else    [BUGGY]    return    parentNode.nodeDepth()    %    1;    }    [CLASS]        Node    [METHOD]    nodeDepth    [RETURN_TYPE]    int        [VARIABLES]    Attributes    attributes    List    childNodes    String    attributeKey    attributeValue    baseUri    relUrl    boolean    Node    in    out    parentNode        	jsoup_357_Node_1_1	249	1	src/main/java/org/jsoup/nodes/Node.java
9	[PATCH]    if    (!e.parent().equals(c.parent()))	[BUG]    [BUGGY]    if    (!false)    [FE]    junit.framework.AssertionFailedError:    expected:<2>    but    was:<0>    mixCombinator    [CONTEXT]    private    static    Elements    filterForAdjacentSiblings(Collection<Element>    elements,    Collection<Element>    candidates)    {    Elements    siblings    =    new    Elements();    SIBLING:    for    (Element    c:    candidates)    {    for    (Element    e:    elements)    {    [BUGGY]    if    (!false)    continue;    Element    previousSib    =    c.previousElementSibling();    if    (previousSib    !=    null    &&    previousSib.equals(e))    {    siblings.add(c);    continue    SIBLING;    }    }    }    return    siblings;    }    [CLASS]        Selector    SelectorParseException    [METHOD]    filterForAdjacentSiblings    [RETURN_TYPE]    Elements        Element>    elements    Element>    candidates    [VARIABLES]    LinkedHashSet    elements    TokenQueue    tq    boolean    Element    c    e    found    p    previousSib    root    Collection    candidates    elements    String[]    combinators    String    className    combinator    id    indexS    key    query    s    subQuery    tagName    Elements    siblings        	jsoup_1495_Selector_1_1	287	1	src/main/java/org/jsoup/select/Selector.java
10	[PATCH]    if    (tq.matchChomp(   "/>   "))    {    //    close    empty    element    or    tag	[BUG]    [BUGGY]    if    (true)    {    //    close    empty    element    or    tag    [FE]    junit.framework.AssertionFailedError:    expected:<[]Yahoo!    JAPAN>    but    was:<[>]Yahoo!    JAPAN>    testYahooJp    [CONTEXT]    while    (!tq.matchesAny(   "<   ",       "/>   ",       ">   ")    &&    !tq.isEmpty())    {    Attribute    attribute    =    parseAttribute();    if    (attribute    !=    null)    attributes.put(attribute);    }    Tag    tag    =    Tag.valueOf(tagName);    Element    child    =    new    Element(tag,    baseUri,    attributes);    boolean    isEmptyElement    =    tag.isEmpty();        [BUGGY]    if    (true)    {    isEmptyElement    =    true;    }    else    {    tq.matchChomp(   ">   ");    }        if    (tag.isData())    {    String    data    =    tq.chompTo(   "</   "    +    tagName);    tq.chompTo(   ">   ");        [CLASS]        Parser    [METHOD]    parseStartTag    [RETURN_TYPE]    void        [VARIABLES]    TokenQueue    tq    boolean    isEmptyElement    Attribute    attribute    Element    child    Node    dataNode    Attributes    attributes    String    DQ    SQ    baseUri    bodyHtml    data    href    html    tagName    Tag    bodyTag    headTag    htmlTag    tag    textareaTag    titleTag    Document    doc    LinkedList    stack        	jsoup_1151_Parser_1_1	137	1	src/main/java/org/jsoup/parser/Parser.java
11	[PATCH]    return    numDiscarded    ==    0;	[BUG]    [BUGGY]    return    numDiscarded    >=    0;    [FE]    junit.framework.AssertionFailedError    testIsValid    [CONTEXT]    public    boolean    isValid(Document    dirtyDocument)    {    Validate.notNull(dirtyDocument);    Document    clean    =    Document.createShell(dirtyDocument.baseUri());    int    numDiscarded    =    copySafeNodes(dirtyDocument.body(),    clean.body());    [BUGGY]    return    numDiscarded    >=    0;    }    [CLASS]        Cleaner    ElementMeta    [METHOD]    isValid    [RETURN_TYPE]    boolean        Document    dirtyDocument    [VARIABLES]    Whitelist    whitelist    boolean    Document    clean    dirtyDocument    int    numAttribsDiscarded    numDiscarded    Element    el        	jsoup_1384_Cleaner_1_1	63	1	src/main/java/org/jsoup/safety/Cleaner.java
12	[PATCH]    tag.isBlock    =    false;	[BUG]    [BUGGY]    tag.isBlock    =    true;    [FE]    junit.framework.AssertionFailedError:    expected:<<p><[cust>Test</cust></p><p><cust><cust>Test</cust></cust></p]>>    but    was:<<p><[/p><cust>Test</cust><p></p><cust><cust>Test</cust></cust]>>    handlesUnknownInlineTags    [CONTEXT]    Validate.notNull(tagName);    tagName    =    tagName.trim().toLowerCase();    Validate.notEmpty(tagName);    synchronized    (tags)    {    Tag    tag    =    tags.get(tagName);    if    (tag    ==    null)    {        tag    =    new    Tag(tagName);    tag.setAncestor(defaultAncestor.tagName);    [BUGGY]    tag.isBlock    =    true;    tag.canContainBlock    =    true;    }    return    tag;    }    }    [CLASS]        Tag    [METHOD]    valueOf    [RETURN_TYPE]    Tag        String    tagName    [VARIABLES]    List    ancestors    boolean    canContainBlock    canContainInline    empty    isBlock    optionalClosing    preserveWhitespace    Tag    defaultAncestor    tag    String    tagName    Map    tags        	jsoup_533_Tag_1_1	55	1	src/main/java/org/jsoup/parser/Tag.java
13	[PATCH]    int    numDiscarded    =    0;	[BUG]    [BUGGY]    int    numDiscarded    =    1;    [FE]    junit.framework.AssertionFailedError    testIsValid    [CONTEXT]    private    int    copySafeNodes(Element    source,    Element    dest)    {    List<Node>    sourceChildren    =    source.childNodes();    [BUGGY]    int    numDiscarded    =    1;    for    (Node    sourceChild    :    sourceChildren)    {    if    (sourceChild    instanceof    Element)    {    Element    sourceEl    =    (Element)    sourceChild;    if    (whitelist.isSafeTag(sourceEl.tagName()))    {    ElementMeta    meta    =    createSafeElement(sourceEl);    Element    destChild    =    meta.el;    dest.appendChild(destChild);        [CLASS]        Cleaner    ElementMeta    [METHOD]    copySafeNodes    [RETURN_TYPE]    int        Element    source    Element    dest    [VARIABLES]    ElementMeta    meta    boolean    Element    dest    destChild    el    source    sourceEl    Node    sourceChild    Whitelist    whitelist    List    sourceChildren    TextNode    destText    sourceText    int    numAttribsDiscarded    numDiscarded        	jsoup_1386_Cleaner_1_1	74	1	src/main/java/org/jsoup/safety/Cleaner.java
14	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    org.jsoup.select.Selector$SelectorParseException:    Could    not    parse    query    a[href=t/2322m2]    testYahooJp    [CONTEXT]    public    boolean    matchChomp(String    seq)    {    if    (matches(seq))    {    consume(seq);    [BUGGY]    return    false;    }    else    {    return    false;    }    }    [CLASS]        TokenQueue    [METHOD]    matchChomp    [RETURN_TYPE]    boolean        String    seq    [VARIABLES]    LinkedList    queue    String    seq    boolean        	jsoup_1312_TokenQueue_1_1	107	1	src/main/java/org/jsoup/parser/TokenQueue.java
15	[PATCH]    if    (child.tagName.equals(   "base   ")    ||    child.tagName.equals(   "script   ")    ||    child.tagName.equals(   "noscript   ")    ||    child.tagName.equals(   "link   ")    ||	[BUG]    [BUGGY]    if    (true    ||    child.tagName.equals(   "noscript   ")    ||    child.tagName.equals(   "link   ")    ||    [FE]    junit.framework.AssertionFailedError:    expected:<2>    but    was:<1>    createsDocumentStructure    [CONTEXT]    if    (this.optionalClosing    &&    this.equals(child))    return    false;    if    (this.empty    ||    this.isData())    return    false;            if    (this.tagName.equals(   "head   "))    {    [BUGGY]    if    (true    ||    child.tagName.equals(   "noscript   ")    ||    child.tagName.equals(   "link   ")    ||    child.tagName.equals(   "meta   ")    ||    child.tagName.equals(   "title   ")    ||    child.tagName.equals(   "style   ")    ||    child.tagName.equals(   "object   "))    {    return    true;    }    return    false;    }        if    (this.tagName.equals(   "dt   ")    &&    child.tagName.equals(   "dd   "))    return    false;    if    (this.tagName.equals(   "dd   ")    &&    child.tagName.equals(   "dt   "))    [CLASS]        Tag    [METHOD]    canContain    [RETURN_TYPE]    boolean        Tag    child    [VARIABLES]    List    ancestors    boolean    canContainBlock    canContainInline    empty    isBlock    optionalClosing    preserveWhitespace    Tag    child    defaultAncestor    tag    String    tagName    Map    tags        	jsoup_563_Tag_1_1	85	1	src/main/java/org/jsoup/parser/Tag.java
16	[PATCH]    if    (!super.equals(o))    return    false;	[BUG]    [BUGGY]    if    (!super.equals(o))    return    true;    [FE]    junit.framework.AssertionFailedError:    expected:<...GlkAzEyBHRtcGwDZ2Ex/[t/2322m2]>    but    was:<...GlkAzEyBHRtcGwDZ2Ex/[r/mlg]>    testYahooJp    [CONTEXT]    public    boolean    equals(Object    o)    {    if    (this    ==    o)    return    true;    if    (!(o    instanceof    Element))    return    false;    [BUGGY]    if    (!super.equals(o))    return    true;    Element    element    =    (Element)    o;    if    (tag    !=    null    ?    !tag.equals(element.tag)    :    element.tag    !=    null)    return    false;    return    true;    }    [CLASS]        Element    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    o    [VARIABLES]    Object    o    Set    classNames    classes    Tag    tag    boolean    Element    element        	jsoup_292_Element_1_1	813	1	src/main/java/org/jsoup/nodes/Element.java
17	[PATCH]    result    =    31    *    result    +    (attributes    !=    null    ?    attributes.hashCode()    :    0);	[BUG]    [BUGGY]    result    =    31    *    result    /    (attributes    !=    null    ?    attributes.hashCode()    :    0);    [FE]    java.lang.ArithmeticException:    /    by    zero    testYahooJp    [CONTEXT]    public    int    hashCode()    {    int    result    =    parentNode    !=    null    ?    parentNode.hashCode()    :    0;        [BUGGY]    result    =    31    *    result    /    (attributes    !=    null    ?    attributes.hashCode()    :    0);    return    result;    }    [CLASS]        Node    [METHOD]    hashCode    [RETURN_TYPE]    int        [VARIABLES]    Attributes    attributes    List    childNodes    nodes    siblings    String    attributeKey    attributeValue    baseUri    relUrl    boolean    int    result    Node    in    out    parentNode        	jsoup_430_Node_1_1	345	1	src/main/java/org/jsoup/nodes/Node.java
18	[PATCH]    Validate.isTrue(lastChar.length()    ==    1);    //    todo:    remove    check	[BUG]    [BUGGY]    Validate.isTrue(lastChar.length()    ==    -1);    //    todo:    remove    check    [FE]    java.lang.IllegalArgumentException:    The    validated    expression    is    false    testBinary    [CONTEXT]    static    boolean    lastCharIsWhitespace(StringBuilder    sb)    {    if    (sb.length()    ==    0)    return    false;    String    lastChar    =    sb.substring(sb.length()-1,    sb.length());    [BUGGY]    Validate.isTrue(lastChar.length()    ==    -1);    return    lastChar.equals(   "       ");    }    [CLASS]        TextNode    [METHOD]    lastCharIsWhitespace    [RETURN_TYPE]    boolean        StringBuilder    sb    [VARIABLES]    StringBuilder    sb    String    TEXT_KEY    baseUri    encodedText    html    lastChar    text    boolean        	jsoup_1077_TextNode_1_1	103	1	src/main/java/org/jsoup/nodes/TextNode.java
19	[PATCH]    accum.append(   "\n   ").append(StringUtils.leftPad(   "   ",    nodeDepth()    -1    *    2));	[BUG]    [BUGGY]    accum.append(   "\n   ").append(StringUtils.leftPad(   "   ",    nodeDepth()    -1    /    2));    [FE]    junit.framework.AssertionFailedError:    expected:<<html>    testFormatHtml    [CONTEXT]    protected    void    indent(StringBuilder    accum)    {    [BUGGY]    accum.append(   "\n   ").append(StringUtils.leftPad(   "   ",    nodeDepth()    -1    /    2));    }    [CLASS]        Node    [METHOD]    indent    [RETURN_TYPE]    void        StringBuilder    accum    [VARIABLES]    Attributes    attributes    List    childNodes    nodes    siblings    String    attributeKey    attributeValue    baseUri    relUrl    boolean    StringBuilder    accum    Node    in    out    parentNode        	jsoup_406_Node_1_1	331	1	src/main/java/org/jsoup/nodes/Node.java
20	[PATCH]    if    (this    ==    o)    return    true;	[BUG]    [BUGGY]    if    (this    ==    o)    return    false;    [FE]    java.lang.NullPointerException    testYahooJp    [CONTEXT]    public    boolean    equals(Object    o)    {    [BUGGY]    if    (this    ==    o)    return    false;    if    (!(o    instanceof    Element))    return    false;    if    (!super.equals(o))    return    false;    Element    element    =    (Element)    o;    if    (tag    !=    null    ?    !tag.equals(element.tag)    :    element.tag    !=    null)    return    false;    return    true;    }    [CLASS]        Element    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    o    [VARIABLES]    Object    o    Set    classNames    classes    Tag    tag    boolean    Element    element        	jsoup_288_Element_1_1	811	1	src/main/java/org/jsoup/nodes/Element.java
21	[PATCH]    List<Character>    chars    =    queue.subList(0,    len);	[BUG]    [BUGGY]    List<Character>    chars    =    queue.subList(-1,    len);    [FE]    java.lang.IndexOutOfBoundsException:    fromIndex    =    -1    testYahooJp    [CONTEXT]    public    boolean    matches(String    seq)    {    int    len    =    seq.length();    if    (len    >    queue.size())    return    false;    [BUGGY]    List<Character>    chars    =    queue.subList(-1,    len);    char[]    seqChars    =    seq.toCharArray();    for    (int    i    =    0;    i    <    len;    i++)    {    Character    found    =    Character.toLowerCase(chars.get(i));    Character    check    =    Character.toLowerCase(seqChars[i]);    if    (!found.equals(check))    return    false;    }    return    true;    }    [CLASS]        TokenQueue    [METHOD]    matches    [RETURN_TYPE]    boolean        String    seq    [VARIABLES]    boolean    Character    check    found    List    chars    String    seq    LinkedList    queue    int    i    len    char[]    seqChars        	jsoup_1295_TokenQueue_1_1	74	1	src/main/java/org/jsoup/parser/TokenQueue.java
22	[PATCH]    result    =    31    *    result    +    (empty    ?    1    :    0);	[BUG]    [BUGGY]    result    =    31    *    result    %    (empty    ?    1    :    0);    [FE]    java.lang.ArithmeticException:    /    by    zero    testYahooJp    [CONTEXT]    public    int    hashCode()    {    int    result    =    tagName    !=    null    ?    tagName.hashCode()    :    0;    result    =    31    *    result    +    (isBlock    ?    1    :    0);    result    =    31    *    result    +    (canContainBlock    ?    1    :    0);    result    =    31    *    result    +    (canContainInline    ?    1    :    0);    result    =    31    *    result    +    (optionalClosing    ?    1    :    0);    [BUGGY]    result    =    31    *    result    %    (empty    ?    1    :    0);    return    result;    }    [CLASS]        Tag    [METHOD]    hashCode    [RETURN_TYPE]    int        [VARIABLES]    List    ancestors    boolean    canContainBlock    canContainInline    empty    isBlock    optionalClosing    preserveWhitespace    Tag    child    defaultAncestor    tag    String    tagName    Map    tags    int    result        	jsoup_730_Tag_1_1	188	1	src/main/java/org/jsoup/parser/Tag.java
23	[PATCH]    for    (int    i    =    0;    i    <    len;    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    1;    i    <    len;    i++)    {    [FE]    java.lang.IllegalStateException:    Unknown    combinator:    h    testYahooJp    [CONTEXT]    public    boolean    matches(String    seq)    {    int    len    =    seq.length();    if    (len    >    queue.size())    return    false;    List<Character>    chars    =    queue.subList(0,    len);    char[]    seqChars    =    seq.toCharArray();    [BUGGY]    for    (int    i    =    1;    i    <    len;    i++)    {    Character    found    =    Character.toLowerCase(chars.get(i));    Character    check    =    Character.toLowerCase(seqChars[i]);    if    (!found.equals(check))    return    false;    }    return    true;    }    [CLASS]        TokenQueue    [METHOD]    matches    [RETURN_TYPE]    boolean        String    seq    [VARIABLES]    boolean    Character    check    found    List    chars    String    seq    LinkedList    queue    int    i    len    char[]    seqChars        	jsoup_1296_TokenQueue_1_1	76	1	src/main/java/org/jsoup/parser/TokenQueue.java
24	[PATCH]    for    (int    i    =    nodes.size()    -    1;    i    >=    0;    i--)    {	[BUG]    [BUGGY]    for    (int    i    =    nodes.size()    %    1;    i    >=    0;    i--)    {    [FE]    junit.framework.AssertionFailedError:    expected:<<p>there</p><p>[now</p><p>]Hello</p>>    but    was:<<p>there</p><p>[]Hello</p>>    testPrependNewHtml    [CONTEXT]    public    Element    prepend(String    html)    {    Validate.notNull(html);    Element    fragment    =    Parser.parseBodyFragment(html,    baseUri).body();        List<Node>    nodes    =    fragment.childNodes();    [BUGGY]    for    (int    i    =    nodes.size()    %    1;    i    >=    0;    i--)    {    Node    node    =    nodes.get(i);    node.parentNode    =    null;    prependChild(node);    }    return    this;    }    [CLASS]        Element    [METHOD]    prepend    [RETURN_TYPE]    Element        String    html    [VARIABLES]    Set    classNames    boolean    Element    fragment    Node    node    List    nodes    Tag    tag    String    html    int    i        	jsoup_87_Element_1_1	273	1	src/main/java/org/jsoup/nodes/Element.java
25	[PATCH]    if    (eval.matches(element))	[BUG]    [BUGGY]    if    (false)    [FE]    java.lang.NullPointerException    testYahooJp    [CONTEXT]    private    static    void    accumulateMatches(Evaluator    eval,    List<Element>    elements,    Element    element)    {    [BUGGY]    if    (false)    elements.add(element);    for    (Element    child:    element.children())    accumulateMatches(eval,    elements,    child);    }    [CLASS]        Collector    [METHOD]    accumulateMatches    [RETURN_TYPE]    void        Evaluator    eval    Element>    elements    Element    element    [VARIABLES]    boolean    Element    child    element    List    elements    Evaluator    eval        	jsoup_1406_Collector_1_1	28	1	src/main/java/org/jsoup/select/Collector.java
26	[PATCH]    return    false;	[BUG]    [BUGGY]    return    true;    [FE]    java.lang.IllegalStateException:    Queue    not    long    enough    to    consume    sequence    testYahooJp    [CONTEXT]    public    boolean    matches(String    seq)    {    int    len    =    seq.length();    if    (len    >    queue.size())    [BUGGY]    return    true;    List<Character>    chars    =    queue.subList(0,    len);    char[]    seqChars    =    seq.toCharArray();    for    (int    i    =    0;    i    <    len;    i++)    {    Character    found    =    Character.toLowerCase(chars.get(i));    Character    check    =    Character.toLowerCase(seqChars[i]);    if    (!found.equals(check))    return    false;    }    return    true;    }    [CLASS]        TokenQueue    [METHOD]    matches    [RETURN_TYPE]    boolean        String    seq    [VARIABLES]    boolean    Character    check    found    List    chars    String    seq    LinkedList    queue    int    i    len    char[]    seqChars        	jsoup_1293_TokenQueue_1_1	73	1	src/main/java/org/jsoup/parser/TokenQueue.java
27	[PATCH]    if    (children.size()    >    0)	[BUG]    [BUGGY]    if    (false)    [FE]    junit.framework.AssertionFailedError:    expected:<...v><div    class=   "foo   "><[p>Hello</p></div><p>What?]</p></div></div><p>T...>    but    was:<...v><div    class=   "foo   "><[/div><p>What?</p><p>Hello]</p></div></div><p>T...>    testWrap    [CONTEXT]    private    Element    getDeepChild(Element    el)    {    List<Element>    children    =    el.children();    [BUGGY]    if    (false)    return    getDeepChild(children.get(0));    else    return    el;    }    [CLASS]        Element    [METHOD]    getDeepChild    [RETURN_TYPE]    Element        Element    el    [VARIABLES]    List    children    Set    classNames    Tag    tag    boolean    Element    el        	jsoup_119_Element_1_1	321	1	src/main/java/org/jsoup/nodes/Element.java
28	[PATCH]    return    tag.preserveWhitespace()    ||    parent()    !=    null    &&    parent().preserveWhitespace();	[BUG]    [BUGGY]    return    tag.preserveWhitespace()    ||    parent()    !=    null    ==    parent().preserveWhitespace();    [FE]    java.lang.NullPointerException    testYahooJp    [CONTEXT]    boolean    preserveWhitespace()    {    [BUGGY]    return    tag.preserveWhitespace()    ||    parent()    !=    null    ==    parent().preserveWhitespace();    }    [CLASS]        Element    [METHOD]    preserveWhitespace    [RETURN_TYPE]    boolean        [VARIABLES]    Set    classNames    Tag    tag    boolean        	jsoup_208_Element_1_1	585	1	src/main/java/org/jsoup/nodes/Element.java
29	[PATCH]    Validate.isTrue(lastChar.length()    ==    1);    //    todo:    remove    check	[BUG]    [BUGGY]    Validate.isTrue(lastChar.length()    ==    0);    //    todo:    remove    check    [FE]    java.lang.IllegalArgumentException:    The    validated    expression    is    false    testBinary    [CONTEXT]    static    boolean    lastCharIsWhitespace(StringBuilder    sb)    {    if    (sb.length()    ==    0)    return    false;    String    lastChar    =    sb.substring(sb.length()-1,    sb.length());    [BUGGY]    Validate.isTrue(lastChar.length()    ==    0);    return    lastChar.equals(   "       ");    }    [CLASS]        TextNode    [METHOD]    lastCharIsWhitespace    [RETURN_TYPE]    boolean        StringBuilder    sb    [VARIABLES]    StringBuilder    sb    String    TEXT_KEY    baseUri    encodedText    html    lastChar    text    boolean        	jsoup_1076_TextNode_1_1	103	1	src/main/java/org/jsoup/nodes/TextNode.java
30	[PATCH]    for    (int    i    =    0;    i    <    len;    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    -1;    i    <    len;    i++)    {    [FE]    junit.framework.AssertionFailedError:    expected:<[Yahoo!    JAPAN]>    but    was:<[]>    testYahooJp    [CONTEXT]    public    void    consume(String    seq)    {    if    (!matches(seq))    throw    new    IllegalStateException(   "Queue    did    not    match    expected    sequence   ");    int    len    =    seq.length();    if    (len    >    queue.size())    throw    new    IllegalStateException(   "Queue    not    long    enough    to    consume    sequence   ");    [BUGGY]    for    (int    i    =    -1;    i    <    len;    i++)    {    consume();    }    }    [CLASS]        TokenQueue    [METHOD]    consume    [RETURN_TYPE]    void        String    seq    [VARIABLES]    String    seq    boolean    LinkedList    queue    int    i    len        	jsoup_1328_TokenQueue_1_1	150	1	src/main/java/org/jsoup/parser/TokenQueue.java
31	[PATCH]    return    parentNode.nodeDepth()    +    1;	[BUG]    [BUGGY]    return    parentNode.nodeDepth()    +    -1;    [FE]    junit.framework.AssertionFailedError:    expected:<...ead>    testFormatHtml    [CONTEXT]    protected    int    nodeDepth()    {    if    (parentNode    ==    null)    return    0;    else    [BUGGY]    return    parentNode.nodeDepth()    +    -1;    }    [CLASS]        Node    [METHOD]    nodeDepth    [RETURN_TYPE]    int        [VARIABLES]    Attributes    attributes    List    childNodes    String    attributeKey    attributeValue    baseUri    relUrl    boolean    Node    in    out    parentNode        	jsoup_356_Node_1_1	249	1	src/main/java/org/jsoup/nodes/Node.java
32	[PATCH]    for    (int    i    =    stack.size()    -1;    i    >=    0;    i--)    {	[BUG]    [BUGGY]    for    (int    i    =    stack.size()    +    1;    i    >=    0;    i--)    {    [FE]    java.lang.IndexOutOfBoundsException:    Index:    3,    Size:    2    testYahooJp    [CONTEXT]    private    boolean    stackHasValidParent(Tag    childTag)    {    if    (stack.size()    ==    1    &&    childTag.equals(htmlTag))    return    true;        [BUGGY]    for    (int    i    =    stack.size()    +    1;    i    >=    0;    i--)    {    Element    el    =    stack.get(i);    Tag    parent2    =    el.tag();    if    (parent2.isValidParent(childTag))    {    return    true;    }    }    return    false;    }    [CLASS]        Parser    [METHOD]    stackHasValidParent    [RETURN_TYPE]    boolean        Tag    childTag    [VARIABLES]    TokenQueue    tq    boolean    Element    el    String    DQ    SQ    baseUri    bodyHtml    data    href    html    key    rawText    tagName    text    value    Tag    bodyTag    childTag    headTag    htmlTag    parent2    parentTag    tag    textareaTag    titleTag    Document    doc    LinkedList    stack    int    i        	jsoup_1232_Parser_1_1	245	1	src/main/java/org/jsoup/parser/Parser.java
33	[PATCH]    return    false;	[BUG]    [BUGGY]    return    true;    [FE]    junit.framework.AssertionFailedError:    expected:<[]Replaced>    but    was:<[Hello    ]Replaced>    setTextPreservesDocumentStructure    [CONTEXT]    if    (stack.size()    ==    1    &&    childTag.equals(htmlTag))    return    true;        for    (int    i    =    stack.size()    -1;    i    >=    0;    i--)    {    Element    el    =    stack.get(i);    Tag    parent2    =    el.tag();    if    (parent2.isValidParent(childTag))    {    return    true;    }    }    [BUGGY]    return    true;    }    [CLASS]        Parser    [METHOD]    stackHasValidParent    [RETURN_TYPE]    boolean        Tag    childTag    [VARIABLES]    TokenQueue    tq    boolean    Element    el    String    DQ    SQ    baseUri    bodyHtml    data    href    html    key    rawText    tagName    text    value    Tag    bodyTag    childTag    headTag    htmlTag    parent2    parentTag    tag    textareaTag    titleTag    Document    doc    LinkedList    stack    int    i        	jsoup_1242_Parser_1_1	252	1	src/main/java/org/jsoup/parser/Parser.java
34	[PATCH]    while    (!queue.isEmpty()    &&    (Character.isLetterOrDigit(c)    ||    c.equals('-')    ||    c.equals('_')))    {	[BUG]    [BUGGY]    while    ((Character.isLetterOrDigit(c)    ||    c.equals('-')    ||    c.equals('_')))    {    [FE]    java.lang.NullPointerException    filter    [CONTEXT]    public    String    consumeCssIdentifier()    {    StringBuilder    accum    =    new    StringBuilder();    Character    c    =    queue.peek();    [BUGGY]    while    ((Character.isLetterOrDigit(c)    ||    c.equals('-')    ||    c.equals('_')))    {    accum.append(queue.removeFirst());    c    =    queue.peek();    }    return    accum.toString();    }    [CLASS]        TokenQueue    [METHOD]    consumeCssIdentifier    [RETURN_TYPE]    String        [VARIABLES]    boolean    StringBuilder    accum    Character    c    LinkedList    queue        	jsoup_1363_TokenQueue_1_1	223	1	src/main/java/org/jsoup/parser/TokenQueue.java
35	[PATCH]    if    (classes.contains(className))	[BUG]    [BUGGY]    if    (false)    [FE]    junit.framework.AssertionFailedError:    expected:<mellow    []red>    but    was:<mellow    [green    ]red>    testClassUpdates    [CONTEXT]    public    Element    toggleClass(String    className)    {    Validate.notNull(className);    Set<String>    classes    =    classNames();    [BUGGY]    if    (false)    classes.remove(className);    else    classes.add(className);    classNames(classes);    return    this;    }    [CLASS]        Element    [METHOD]    toggleClass    [RETURN_TYPE]    Element        String    className    [VARIABLES]    Set    classNames    classes    Tag    tag    String    className    boolean        	jsoup_241_Element_1_1	724	1	src/main/java/org/jsoup/nodes/Element.java
36	[PATCH]    if    (tq.matchChomp(   "=   "))    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    java.lang.NullPointerException    testYahooJp    [CONTEXT]    private    Attribute    parseAttribute()    {    tq.consumeWhitespace();    String    key    =    tq.consumeAttributeKey();    String    value    =       "   ";    tq.consumeWhitespace();    [BUGGY]    if    (true)    {    tq.consumeWhitespace();    if    (tq.matchChomp(SQ))    {    value    =    tq.chompTo(SQ);    }    else    if    (tq.matchChomp(DQ))    {    value    =    tq.chompTo(DQ);    }    else    {    StringBuilder    valueAccum    =    new    StringBuilder();        while    (!tq.matchesAny(   "<   ",       "/>   ",       ">   ")    &&    !tq.matchesWhitespace()    &&    !tq.isEmpty())    {    [CLASS]        Parser    [METHOD]    parseAttribute    [RETURN_TYPE]    Attribute        [VARIABLES]    TokenQueue    tq    boolean    StringBuilder    valueAccum    String    DQ    SQ    baseUri    bodyHtml    data    href    html    key    tagName    value    Tag    bodyTag    headTag    htmlTag    tag    textareaTag    titleTag    Document    doc    LinkedList    stack        	jsoup_1176_Parser_1_1	173	1	src/main/java/org/jsoup/parser/Parser.java
37	[PATCH]    accum.append(   "\n   ").append(StringUtils.leftPad(   "   ",    nodeDepth()    -1    *    2));	[BUG]    [BUGGY]    accum.append(   "\n   ").append(StringUtils.leftPad(   "   ",    nodeDepth()    +    1    *    2));    [FE]    junit.framework.AssertionFailedError:    expected:<<html>    testFormatHtml    [CONTEXT]    protected    void    indent(StringBuilder    accum)    {    [BUGGY]    accum.append(   "\n   ").append(StringUtils.leftPad(   "   ",    nodeDepth()    +    1    *    2));    }    [CLASS]        Node    [METHOD]    indent    [RETURN_TYPE]    void        StringBuilder    accum    [VARIABLES]    Attributes    attributes    List    childNodes    nodes    siblings    String    attributeKey    attributeValue    baseUri    relUrl    boolean    StringBuilder    accum    Node    in    out    parentNode        	jsoup_409_Node_1_1	331	1	src/main/java/org/jsoup/nodes/Node.java
38	[PATCH]    if    (tagName.length()    ==    0)    {    //    doesn't    look    like    a    start    tag    after    all;    put    <    back    on    stack    and    handle    as    text	[BUG]    [BUGGY]    if    (tagName.length()    ==    -1)    {    //    doesn't    look    like    a    start    tag    after    all;    put    <    back    on    stack    and    handle    as    text    [FE]    java.lang.IllegalArgumentException:    The    validated    string    is    empty    handlesInvalidStartTags    [CONTEXT]    private    void    parseStartTag()    {    tq.consume(   "<   ");    String    tagName    =    tq.consumeWord();        [BUGGY]    if    (tagName.length()    ==    -1)    {    tq.addFirst(   "&lt;   ");    parseTextNode();    return;    }    Attributes    attributes    =    new    Attributes();    while    (!tq.matchesAny(   "<   ",       "/>   ",       ">   ")    &&    !tq.isEmpty())    {    Attribute    attribute    =    parseAttribute();    if    (attribute    !=    null)    attributes.put(attribute);    [CLASS]        Parser    [METHOD]    parseStartTag    [RETURN_TYPE]    void        [VARIABLES]    TokenQueue    tq    boolean    isEmptyElement    Attribute    attribute    Element    child    Node    dataNode    Attributes    attributes    String    DQ    SQ    baseUri    bodyHtml    data    href    html    tagName    Tag    bodyTag    headTag    htmlTag    tag    textareaTag    titleTag    Document    doc    LinkedList    stack        	jsoup_1138_Parser_1_1	120	1	src/main/java/org/jsoup/parser/Parser.java
39	[PATCH]    }    else    if    (tq.matchChomp(   ":lt(   "))    {	[BUG]    [BUGGY]    }    else    if    (true)    {    [FE]    java.lang.IllegalArgumentException:    Index    must    be    numeric    testPseudoEquals    [CONTEXT]    if    (tq.matchChomp(   "#   "))    {    return    byId();    }    else    if    (tq.matchChomp(   ".   "))    {    return    byClass();    }    else    if    (tq.matchesWord())    {    return    byTag();    }    else    if    (tq.matchChomp(   "[   "))    {    return    byAttribute();    }    else    if    (tq.matchChomp(   "*   "))    {    return    allElements();    [BUGGY]    }    else    if    (true)    {    return    indexLessThan();    }    else    if    (tq.matchChomp(   ":gt(   "))    {    return    indexGreaterThan();    }    else    if    (tq.matchChomp(   ":eq(   "))    {    return    indexEquals();    }    else    {    throw    new    SelectorParseException(   "Could    not    parse    query       "    +    query);    }    }    [CLASS]        Selector    SelectorParseException    [METHOD]    findElements    [RETURN_TYPE]    Elements        [VARIABLES]    LinkedHashSet    elements    TokenQueue    tq    String[]    combinators    String    combinator    query    s    subQuery    boolean    Element    root        	jsoup_1455_Selector_1_1	154	1	src/main/java/org/jsoup/select/Selector.java
40	[PATCH]    if    (el.hasText())	[BUG]    [BUGGY]    if    (true)    [FE]    junit.framework.AssertionFailedError    hasText    [CONTEXT]    public    boolean    hasText()    {    for    (Node    child:    childNodes)    {    if    (child    instanceof    TextNode)    {    TextNode    textNode    =    (TextNode)    child;    if    (!textNode.isBlank())    return    true;    }    else    if    (child    instanceof    Element)    {    Element    el    =    (Element)    child;    [BUGGY]    if    (true)    return    true;    }    }    return    false;    }    [CLASS]        Element    [METHOD]    hasText    [RETURN_TYPE]    boolean        [VARIABLES]    TextNode    textNode    Set    classNames    Tag    tag    boolean    Node    child    Element    el        	jsoup_223_Element_1_1	615	1	src/main/java/org/jsoup/nodes/Element.java
41	[PATCH]    if    (whitelist.isSafeAttribute(sourceTag,    sourceEl,    sourceAttr))	[BUG]    [BUGGY]    if    (false)    [FE]    junit.framework.AssertionFailedError:    expected:<<img    [alt=   "   "    ]/>>    but    was:<<img    []/>>    testHandlesEmptyAttributes    [CONTEXT]    private    ElementMeta    createSafeElement(Element    sourceEl)    {    String    sourceTag    =    sourceEl.tagName();    Attributes    destAttrs    =    new    Attributes();    Element    dest    =    new    Element(Tag.valueOf(sourceTag),    sourceEl.baseUri(),    destAttrs);    int    numDiscarded    =    0;    Attributes    sourceAttrs    =    sourceEl.attributes();    for    (Attribute    sourceAttr    :    sourceAttrs)    {    [BUGGY]    if    (false)    destAttrs.put(sourceAttr);    else    numDiscarded++;    }    Attributes    enforcedAttrs    =    whitelist.getEnforcedAttributes(sourceTag);    destAttrs.addAll(enforcedAttrs);    return    new    ElementMeta(dest,    numDiscarded);    }    [CLASS]        Cleaner    ElementMeta    [METHOD]    createSafeElement    [RETURN_TYPE]    Cleaner$ElementMeta        Element    sourceEl    [VARIABLES]    boolean    Attribute    sourceAttr    Element    dest    destChild    el    source    sourceEl    Attributes    destAttrs    enforcedAttrs    sourceAttrs    Whitelist    whitelist    String    sourceTag    int    numAttribsDiscarded    numDiscarded        	jsoup_1398_Cleaner_1_1	108	1	src/main/java/org/jsoup/safety/Cleaner.java
42	[PATCH]    return    element.elementSiblingIndex()    >    index;	[BUG]    [BUGGY]    return    element.elementSiblingIndex()    >=    index;    [FE]    junit.framework.AssertionFailedError:    expected:<2>    but    was:<4>    testPseudoGreaterThan    [CONTEXT]    public    boolean    matches(Element    element)    {    [BUGGY]    return    element.elementSiblingIndex()    >=    index;    }    [CLASS]        Evaluator    Tag    Id    Class    Attribute    AttributeWithValue    AttributeWithValueNot    AttributeWithValueStarting    AttributeWithValueEnding    AttributeWithValueContaining    AttributeKeyPair    AllElements    IndexLessThan    IndexGreaterThan    IndexEquals    IndexEvaluator    [METHOD]    matches    [RETURN_TYPE]    boolean        Element    element    [VARIABLES]    String    className    id    key    tagName    value    boolean    int    index    Element    element        	jsoup_1031_Evaluator_1_1	149	1	src/main/java/org/jsoup/nodes/Evaluator.java
43	[PATCH]    return    false;	[BUG]    [BUGGY]    return    true;    [FE]    junit.framework.AssertionFailedError    imgSemantics    [CONTEXT]    boolean    canContain(Tag    child)    {    Validate.notNull(child);    if    (child.isBlock    &&    !this.canContainBlock)    return    false;    if    (!child.isBlock    &&    !this.canContainInline)        [BUGGY]    return    true;    if    (this.optionalClosing    &&    this.equals(child))    return    false;    if    (this.empty    ||    this.isData())    return    false;            if    (this.tagName.equals(   "head   "))    {    [CLASS]        Tag    [METHOD]    canContain    [RETURN_TYPE]    boolean        Tag    child    [VARIABLES]    List    ancestors    boolean    canContainBlock    canContainInline    empty    isBlock    optionalClosing    preserveWhitespace    Tag    child    defaultAncestor    tag    String    tagName    Map    tags        	jsoup_547_Tag_1_1	74	1	src/main/java/org/jsoup/parser/Tag.java
44	[PATCH]    if    (this.parentNode    !=    null)	[BUG]    [BUGGY]    if    (true)    [FE]    org.apache.commons.lang.NotImplementedException:    Cannot    (yet)    move    nodes    in    tree    testYahooJp    [CONTEXT]    protected    void    setParentNode(Node    parentNode)    {    [BUGGY]    if    (true)    throw    new    NotImplementedException(   "Cannot    (yet)    move    nodes    in    tree   ");    this.parentNode    =    parentNode;    }    [CLASS]        Node    [METHOD]    setParentNode    [RETURN_TYPE]    void        Node    parentNode    [VARIABLES]    Attributes    attributes    List    childNodes    String    attributeKey    attributeValue    baseUri    relUrl    boolean    Node    in    parentNode        	jsoup_333_Node_1_1	212	1	src/main/java/org/jsoup/nodes/Node.java
45	[PATCH]    if    (optionalClosing    !=    tag.optionalClosing)    return    false;	[BUG]    [BUGGY]    if    (true)    return    false;    [FE]    junit.framework.AssertionFailedError:    expected:    org.jsoup.parser.Tag<foo>    but    was:    org.jsoup.parser.Tag<foo>    defaultSemantics    [CONTEXT]    public    boolean    equals(Object    o)    {    if    (this    ==    o)    return    true;    if    (o    ==    null    ||    getClass()    !=    o.getClass())    return    false;    Tag    tag    =    (Tag)    o;    if    (canContainBlock    !=    tag.canContainBlock)    return    false;    if    (canContainInline    !=    tag.canContainInline)    return    false;    if    (empty    !=    tag.empty)    return    false;    if    (isBlock    !=    tag.isBlock)    return    false;    [BUGGY]    if    (true)    return    false;    if    (tagName    !=    null    ?    !tagName.equals(tag.tagName)    :    tag.tagName    !=    null)    return    false;    return    true;    }    [CLASS]        Tag    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    o    [VARIABLES]    List    ancestors    Object    o    boolean    canContainBlock    canContainInline    empty    isBlock    optionalClosing    preserveWhitespace    Tag    child    defaultAncestor    tag    String    tagName    Map    tags        	jsoup_641_Tag_1_1	175	1	src/main/java/org/jsoup/parser/Tag.java
46	[PATCH]    return    !queue.isEmpty()    &&    Character.isLetterOrDigit(queue.peek());	[BUG]    [BUGGY]    return    !queue.isEmpty();    [FE]    java.lang.IllegalArgumentException:    The    validated    string    is    empty    testYahooJp    [CONTEXT]    public    boolean    matchesWord()    {    [BUGGY]    return    !queue.isEmpty();    }    [CLASS]        TokenQueue    [METHOD]    matchesWord    [RETURN_TYPE]    boolean        [VARIABLES]    LinkedList    queue    boolean        	jsoup_1320_TokenQueue_1_1	126	1	src/main/java/org/jsoup/parser/TokenQueue.java
47	[PATCH]    if    (sb.length()    !=    0)	[BUG]    [BUGGY]    if    (sb.length()    <    0)    [FE]    junit.framework.AssertionFailedError:    expected:<<p>Hello</p>[    html    [CONTEXT]    public    String    html()    {    StringBuilder    sb    =    new    StringBuilder();    for    (Element    element    :    contents)    {    [BUGGY]    if    (sb.length()    <    0)    sb.append(   "\n   ");    sb.append(element.html());    }    return    sb.toString();    }    [CLASS]        Elements    [METHOD]    html    [RETURN_TYPE]    String        [VARIABLES]    List    contents    elements    boolean    StringBuilder    sb    Element    element        	jsoup_941_Elements_1_1	192	1	src/main/java/org/jsoup/select/Elements.java
48	[PATCH]    result    =    31    *    result    +    (canContainBlock    ?    1    :    0);	[BUG]    [BUGGY]    result    =    31    *    result    /    (canContainBlock    ?    1    :    0);    [FE]    java.lang.ArithmeticException:    /    by    zero    testYahooJp    [CONTEXT]    public    int    hashCode()    {    int    result    =    tagName    !=    null    ?    tagName.hashCode()    :    0;    result    =    31    *    result    +    (isBlock    ?    1    :    0);    [BUGGY]    result    =    31    *    result    /    (canContainBlock    ?    1    :    0);    result    =    31    *    result    +    (canContainInline    ?    1    :    0);    result    =    31    *    result    +    (optionalClosing    ?    1    :    0);    result    =    31    *    result    +    (empty    ?    1    :    0);    return    result;    }    [CLASS]        Tag    [METHOD]    hashCode    [RETURN_TYPE]    int        [VARIABLES]    List    ancestors    boolean    canContainBlock    canContainInline    empty    isBlock    optionalClosing    preserveWhitespace    Tag    child    defaultAncestor    tag    String    tagName    Map    tags    int    result        	jsoup_682_Tag_1_1	185	1	src/main/java/org/jsoup/parser/Tag.java
49	[PATCH]    if    (child.tagName.equals(   "base   ")    ||    child.tagName.equals(   "script   ")    ||    child.tagName.equals(   "noscript   ")    ||    child.tagName.equals(   "link   ")    ||	[BUG]    [BUGGY]    if    (true    ||    child.tagName.equals(   "link   ")    ||    [FE]    junit.framework.AssertionFailedError:    expected:<2>    but    was:<1>    createsDocumentStructure    [CONTEXT]    if    (this.optionalClosing    &&    this.equals(child))    return    false;    if    (this.empty    ||    this.isData())    return    false;            if    (this.tagName.equals(   "head   "))    {    [BUGGY]    if    (true    ||    child.tagName.equals(   "link   ")    ||    child.tagName.equals(   "meta   ")    ||    child.tagName.equals(   "title   ")    ||    child.tagName.equals(   "style   ")    ||    child.tagName.equals(   "object   "))    {    return    true;    }    return    false;    }        if    (this.tagName.equals(   "dt   ")    &&    child.tagName.equals(   "dd   "))    return    false;    if    (this.tagName.equals(   "dd   ")    &&    child.tagName.equals(   "dt   "))    [CLASS]        Tag    [METHOD]    canContain    [RETURN_TYPE]    boolean        Tag    child    [VARIABLES]    List    ancestors    boolean    canContainBlock    canContainInline    empty    isBlock    optionalClosing    preserveWhitespace    Tag    child    defaultAncestor    tag    String    tagName    Map    tags        	jsoup_567_Tag_1_1	85	1	src/main/java/org/jsoup/parser/Tag.java
50	[PATCH]    if    (element.hasAttr(attributeKey))	[BUG]    [BUGGY]    if    (true)    [FE]    junit.framework.AssertionFailedError    attributes    [CONTEXT]    public    boolean    hasAttr(String    attributeKey)    {    for    (Element    element    :    contents)    {    [BUGGY]    if    (true)    return    true;    }    return    false;    }    [CLASS]        Elements    [METHOD]    hasAttr    [RETURN_TYPE]    boolean        String    attributeKey    [VARIABLES]    List    contents    elements    String    attributeKey    boolean    Element    element        	jsoup_910_Elements_1_1	54	1	src/main/java/org/jsoup/select/Elements.java
51	[PATCH]    }    else    if    (tq.matchesWord())    {	[BUG]    [BUGGY]    }    else    if    (false)    {    [FE]    org.jsoup.select.Selector$SelectorParseException:    Could    not    parse    query    html    testYahooJp    [CONTEXT]    private    Elements    findElements()    {    if    (tq.matchChomp(   "#   "))    {    return    byId();    }    else    if    (tq.matchChomp(   ".   "))    {    return    byClass();    [BUGGY]    }    else    if    (false)    {    return    byTag();    }    else    if    (tq.matchChomp(   "[   "))    {    return    byAttribute();    }    else    if    (tq.matchChomp(   "*   "))    {    return    allElements();    }    else    if    (tq.matchChomp(   ":lt(   "))    {    return    indexLessThan();    }    else    if    (tq.matchChomp(   ":gt(   "))    {    return    indexGreaterThan();    }    else    if    (tq.matchChomp(   ":eq(   "))    {    [CLASS]        Selector    SelectorParseException    [METHOD]    findElements    [RETURN_TYPE]    Elements        [VARIABLES]    LinkedHashSet    elements    TokenQueue    tq    String[]    combinators    String    combinator    query    s    subQuery    boolean    Element    root        	jsoup_1448_Selector_1_1	148	1	src/main/java/org/jsoup/select/Selector.java
52	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    java.lang.IllegalArgumentException:    The    validated    object    is    null    testYahooJp    [CONTEXT]    private    boolean    stackHasValidParent(Tag    childTag)    {    if    (stack.size()    ==    1    &&    childTag.equals(htmlTag))    return    true;        for    (int    i    =    stack.size()    -1;    i    >=    0;    i--)    {    Element    el    =    stack.get(i);    Tag    parent2    =    el.tag();    if    (parent2.isValidParent(childTag))    {    [BUGGY]    return    false;    }    }    return    false;    }    [CLASS]        Parser    [METHOD]    stackHasValidParent    [RETURN_TYPE]    boolean        Tag    childTag    [VARIABLES]    TokenQueue    tq    boolean    Element    el    String    DQ    SQ    baseUri    bodyHtml    data    href    html    key    rawText    tagName    text    value    Tag    bodyTag    childTag    headTag    htmlTag    parent2    parentTag    tag    textareaTag    titleTag    Document    doc    LinkedList    stack    int    i        	jsoup_1241_Parser_1_1	249	1	src/main/java/org/jsoup/parser/Parser.java
53	[PATCH]    if    (sb.length()    !=    0)	[BUG]    [BUGGY]    if    (sb.length()    !=    1)    [FE]    junit.framework.AssertionFailedError:    expected:<[]<p>Hello</p>    html    [CONTEXT]    public    String    html()    {    StringBuilder    sb    =    new    StringBuilder();    for    (Element    element    :    contents)    {    [BUGGY]    if    (sb.length()    !=    1)    sb.append(   "\n   ");    sb.append(element.html());    }    return    sb.toString();    }    [CLASS]        Elements    [METHOD]    html    [RETURN_TYPE]    String        [VARIABLES]    List    contents    elements    boolean    StringBuilder    sb    Element    element        	jsoup_939_Elements_1_1	192	1	src/main/java/org/jsoup/select/Elements.java
54	[PATCH]    while    (!queue.isEmpty()    &&    (Character.isLetterOrDigit(c)    ||    c.equals('-')    ||    c.equals('_')))    {	[BUG]    [BUGGY]    while    (!queue.isEmpty()    &&    (c.equals('-')    ||    c.equals('_')))    {    [FE]    java.lang.IllegalArgumentException:    The    validated    string    is    empty    testGoogleSearchIpod    [CONTEXT]    public    String    consumeCssIdentifier()    {    StringBuilder    accum    =    new    StringBuilder();    Character    c    =    queue.peek();    [BUGGY]    while    (!queue.isEmpty()    &&    (c.equals('-')    ||    c.equals('_')))    {    accum.append(queue.removeFirst());    c    =    queue.peek();    }    return    accum.toString();    }    [CLASS]        TokenQueue    [METHOD]    consumeCssIdentifier    [RETURN_TYPE]    String        [VARIABLES]    boolean    StringBuilder    accum    Character    c    LinkedList    queue        	jsoup_1354_TokenQueue_1_1	223	1	src/main/java/org/jsoup/parser/TokenQueue.java
55	[PATCH]    return    tag.preserveWhitespace()    ||    parent()    !=    null    &&    parent().preserveWhitespace();	[BUG]    [BUGGY]    return    tag.preserveWhitespace()    ||    parent().preserveWhitespace();    [FE]    java.lang.NullPointerException    testYahooJp    [CONTEXT]    boolean    preserveWhitespace()    {    [BUGGY]    return    tag.preserveWhitespace()    ||    parent().preserveWhitespace();    }    [CLASS]        Element    [METHOD]    preserveWhitespace    [RETURN_TYPE]    boolean        [VARIABLES]    Set    classNames    Tag    tag    boolean        	jsoup_211_Element_1_1	585	1	src/main/java/org/jsoup/nodes/Element.java
56	[PATCH]    if    (read    >    0)    {	[BUG]    [BUGGY]    if    (read    !=    0)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException    testYahooJp    [CONTEXT]    private    static    String    readInputStream(InputStream    inStream,    String    charsetName)    throws    IOException    {    char[]    buffer    =    new    char[0x20000];    StringBuilder    data    =    new    StringBuilder(0x20000);    Reader    inReader    =    new    InputStreamReader(inStream,    charsetName);    int    read;    do    {    read    =    inReader.read(buffer,    0,    buffer.length);    [BUGGY]    if    (read    !=    0)    {    data.append(buffer,    0,    read);    }    }    while    (read    >=    0);    return    data.toString();    }    [CLASS]        DataUtil    [METHOD]    readInputStream    [RETURN_TYPE]    String        InputStream    inStream    String    charsetName    [VARIABLES]    boolean    StringBuilder    data    InputStream    inStream    Reader    inReader    String    charsetName    int    read    char[]    buffer        	jsoup_29_DataUtil_1_1	70	1	src/main/java/org/jsoup/DataUtil.java
57	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError:    expected:<...ollow   ">Dodgy</a>    <a    [href=   "http://nice.com   "    ]rel=   "nofollow   ">Nice<...>    but    was:<...ollow   ">Dodgy</a>    <a    []rel=   "nofollow   ">Nice<...>    basicBehaviourTest    [CONTEXT]    private    boolean    testValidProtocol(Element    el,    Attribute    attr,    Set<Protocol>    protocols)    {            String    value    =    el.absUrl(attr.getKey());    attr.setValue(value);    for    (Protocol    protocol    :    protocols)    {    String    prot    =    protocol.toString()    +       ":   ";    if    (value.toString().toLowerCase().startsWith(prot))    {    [BUGGY]    return    false;    }    }    return    false;    }    [CLASS]        Whitelist    TagName    AttributeKey    AttributeValue    Protocol    TypedValue    [METHOD]    testValidProtocol    [RETURN_TYPE]    boolean        Element    el    Attribute    attr    Protocol>    protocols    [VARIABLES]    Set    attributeSet    currentSet    protSet    protocols    tagNames    boolean    Attribute    attr    Element    el    String    key    prot    protocol    tag    tagName    value    Protocol    protocol    Map    attrMap    attrProts    attributes    enforcedAttributes    protocols        	jsoup_485_Whitelist_1_1	326	1	src/main/java/org/jsoup/safety/Whitelist.java
58	[PATCH]    for    (int    i    =    0;    i    <    counter;    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    0;    i    <=    counter;    i++)    {    [FE]    junit.framework.AssertionFailedError:    expected:<17>    but    was:<1>    testSmhBizArticle    [CONTEXT]    Element    el    =    stack.get(i);    Tag    elTag    =    el.tag();    if    (elTag.equals(bodyTag)    ||    elTag.equals(htmlTag))    {    break;    }    else    if    (elTag.equals(tag))    {    elToClose    =    el;    break;    }    }    if    (elToClose    !=    null)    {    [BUGGY]    for    (int    i    =    0;    i    <=    counter;    i++)    {    stack.removeLast();    }    }    return    elToClose;    }    [CLASS]        Parser    [METHOD]    popStackToClose    [RETURN_TYPE]    Element        Tag    tag    [VARIABLES]    TokenQueue    tq    boolean    Element    el    elToClose    String    DQ    SQ    baseUri    bodyHtml    data    href    html    key    rawText    tagName    text    value    Tag    bodyTag    childTag    elTag    headTag    htmlTag    parent2    parentTag    tag    textareaTag    titleTag    Document    doc    LinkedList    stack    int    counter    i        	jsoup_1271_Parser_1_1	281	1	src/main/java/org/jsoup/parser/Parser.java
59	[PATCH]    while    (!queue.isEmpty()    &&    (Character.isLetterOrDigit(queue.peek())    ||    matchesAny(   "-   ",       "_   ",       ":   ")))    {	[BUG]    [BUGGY]    while    (!queue.isEmpty())    {    [FE]    junit.framework.AssertionFailedError:    expected:<[Yahoo!    JAPAN]>    but    was:<[]>    testYahooJp    [CONTEXT]    public    String    consumeAttributeKey()    {    StringBuilder    accum    =    new    StringBuilder();    [BUGGY]    while    (!queue.isEmpty())    {    accum.append(queue.removeFirst());    }    return    accum.toString();    }    [CLASS]        TokenQueue    [METHOD]    consumeAttributeKey    [RETURN_TYPE]    String        [VARIABLES]    StringBuilder    accum    LinkedList    queue    boolean        	jsoup_1372_TokenQueue_1_1	236	1	src/main/java/org/jsoup/parser/TokenQueue.java
60	[PATCH]    if    (canContainBlock    !=    tag.canContainBlock)    return    false;	[BUG]    [BUGGY]    if    (canContainBlock    !=    tag.canContainBlock)    return    true;    [FE]    junit.framework.AssertionFailedError:    expected:<17>    but    was:<19>    testSmhBizArticle    [CONTEXT]    public    boolean    equals(Object    o)    {    if    (this    ==    o)    return    true;    if    (o    ==    null    ||    getClass()    !=    o.getClass())    return    false;    Tag    tag    =    (Tag)    o;        [BUGGY]    if    (canContainBlock    !=    tag.canContainBlock)    return    true;    if    (canContainInline    !=    tag.canContainInline)    return    false;    if    (empty    !=    tag.empty)    return    false;    if    (isBlock    !=    tag.isBlock)    return    false;    if    (optionalClosing    !=    tag.optionalClosing)    return    false;    if    (tagName    !=    null    ?    !tagName.equals(tag.tagName)    :    tag.tagName    !=    null)    return    false;    return    true;    }    [CLASS]        Tag    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    o    [VARIABLES]    List    ancestors    Object    o    boolean    canContainBlock    canContainInline    empty    isBlock    optionalClosing    preserveWhitespace    Tag    child    defaultAncestor    tag    String    tagName    Map    tags        	jsoup_626_Tag_1_1	171	1	src/main/java/org/jsoup/parser/Tag.java
61	[PATCH]    return    !attrProts.containsKey(key)    ||    testValidProtocol(el,    attr,    attrProts.get(key));	[BUG]    [BUGGY]    return    !attrProts.containsKey(key);    [FE]    junit.framework.AssertionFailedError:    expected:<...ollow   ">Dodgy</a>    <a    [href=   "http://nice.com   "    ]rel=   "nofollow   ">Nice<...>    but    was:<...ollow   ">Dodgy</a>    <a    []rel=   "nofollow   ">Nice<...>    basicBehaviourTest    [CONTEXT]    boolean    isSafeAttribute(String    tagName,    Element    el,    Attribute    attr)    {    TagName    tag    =    TagName.valueOf(tagName);    AttributeKey    key    =    AttributeKey.valueOf(attr.getKey());    if    (attributes.containsKey(tag))    {    if    (attributes.get(tag).contains(key))    {    if    (protocols.containsKey(tag))    {    Map<AttributeKey,    Set<Protocol>>    attrProts    =    protocols.get(tag);        [BUGGY]    return    !attrProts.containsKey(key);    }    else    {    return    true;    }    }    }    else    {    return    !tagName.equals(   ":all   ")    &&    isSafeAttribute(   ":all   ",    el,    attr);    }    return    false;    }    [CLASS]        Whitelist    TagName    AttributeKey    AttributeValue    Protocol    TypedValue    [METHOD]    isSafeAttribute    [RETURN_TYPE]    boolean        String    tagName    Element    el    Attribute    attr    [VARIABLES]    AttributeKey    key    Set    attributeSet    currentSet    protSet    tagNames    boolean    TagName    tag    Attribute    attr    Element    el    String    key    protocol    tag    tagName    value    Map    attrMap    attrProts    attributes    enforcedAttributes    protocols        	jsoup_473_Whitelist_1_1	306	1	src/main/java/org/jsoup/safety/Whitelist.java
62	[PATCH]    return    getDeepChild(children.get(0));	[BUG]    [BUGGY]    return    getDeepChild(children.get(1));    [FE]    junit.framework.AssertionFailedError:    expected:<...v><div    class=   "foo   "><[p>Hello</p></div><p>What?]</p></div></div><p>T...>    but    was:<...v><div    class=   "foo   "><[/div><p>What?<p>Hello</p>]</p></div></div><p>T...>    testWrap    [CONTEXT]    private    Element    getDeepChild(Element    el)    {    List<Element>    children    =    el.children();    if    (children.size()    >    0)    [BUGGY]    return    getDeepChild(children.get(1));    else    return    el;    }    [CLASS]        Element    [METHOD]    getDeepChild    [RETURN_TYPE]    Element        Element    el    [VARIABLES]    List    children    Set    classNames    Tag    tag    boolean    Element    el        	jsoup_120_Element_1_1	322	1	src/main/java/org/jsoup/nodes/Element.java
63	[PATCH]    if    (sb.length()    !=    0)	[BUG]    [BUGGY]    if    (true)    [FE]    junit.framework.AssertionFailedError:    expected:<[]<p>Hello</p>    html    [CONTEXT]    public    String    html()    {    StringBuilder    sb    =    new    StringBuilder();    for    (Element    element    :    contents)    {    [BUGGY]    if    (true)    sb.append(   "\n   ");    sb.append(element.html());    }    return    sb.toString();    }    [CLASS]        Elements    [METHOD]    html    [RETURN_TYPE]    String        [VARIABLES]    List    contents    elements    boolean    StringBuilder    sb    Element    element        	jsoup_943_Elements_1_1	192	1	src/main/java/org/jsoup/select/Elements.java
64	[PATCH]    return    siblings.size()    >    1    ?    siblings.get(siblings.size()    -    1)    :    null;	[BUG]    [BUGGY]    return    siblings.size()    >    1    ?    siblings.get(siblings.size()    -    -1)    :    null;    [FE]    java.lang.IndexOutOfBoundsException:    Index:    7,    Size:    6    testGetSiblings    [CONTEXT]    public    Element    lastElementSibling()    {    List<Element>    siblings    =    parent().children();    [BUGGY]    return    siblings.size()    >    1    ?    siblings.get(siblings.size()    -    -1)    :    null;    }    [CLASS]        Element    [METHOD]    lastElementSibling    [RETURN_TYPE]    Element        [VARIABLES]    List    siblings    Set    classNames    Tag    tag    boolean        	jsoup_166_Element_1_1	394	1	src/main/java/org/jsoup/nodes/Element.java
65	[PATCH]    if    (last().tag().canContain(tag))	[BUG]    [BUGGY]    if    (false)    [FE]    java.lang.IllegalArgumentException:    The    validated    object    is    null    testYahooJp    [CONTEXT]    private    Element    popStackToSuitableContainer(Tag    tag)    {    while    (!stack.isEmpty())    {    [BUGGY]    if    (false)    return    last();    else    stack.removeLast();    }    return    null;    }    [CLASS]        Parser    [METHOD]    popStackToSuitableContainer    [RETURN_TYPE]    Element        Tag    tag    [VARIABLES]    TokenQueue    tq    String    DQ    SQ    baseUri    bodyHtml    data    href    html    key    rawText    tagName    text    value    Tag    bodyTag    childTag    headTag    htmlTag    parent2    parentTag    tag    textareaTag    titleTag    boolean    Document    doc    LinkedList    stack        	jsoup_1243_Parser_1_1	257	1	src/main/java/org/jsoup/parser/Parser.java
66	[PATCH]    return    element.elementSiblingIndex()    ==    index;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError:    expected:<2>    but    was:<0>    testPseudoEquals    [CONTEXT]    public    boolean    matches(Element    element)    {    [BUGGY]    return    false;    }    [CLASS]        Evaluator    Tag    Id    Class    Attribute    AttributeWithValue    AttributeWithValueNot    AttributeWithValueStarting    AttributeWithValueEnding    AttributeWithValueContaining    AttributeKeyPair    AllElements    IndexLessThan    IndexGreaterThan    IndexEquals    IndexEvaluator    [METHOD]    matches    [RETURN_TYPE]    boolean        Element    element    [VARIABLES]    String    className    id    key    tagName    value    boolean    int    index    Element    element        	jsoup_1035_Evaluator_1_1	159	1	src/main/java/org/jsoup/nodes/Evaluator.java
67	[PATCH]    while    (!queue.isEmpty()    &&    Character.isLetterOrDigit(queue.peek()))    {	[BUG]    [BUGGY]    while    (Character.isLetterOrDigit(queue.peek()))    {    [FE]    java.lang.NullPointerException    testYahooJp    [CONTEXT]    public    String    consumeWord()    {    StringBuilder    wordAccum    =    new    StringBuilder();    [BUGGY]    while    (Character.isLetterOrDigit(queue.peek()))    {    wordAccum.append(queue.removeFirst());    }    return    wordAccum.toString();    }    [CLASS]        TokenQueue    [METHOD]    consumeWord    [RETURN_TYPE]    String        [VARIABLES]    StringBuilder    wordAccum    LinkedList    queue    boolean        	jsoup_1350_TokenQueue_1_1	209	1	src/main/java/org/jsoup/parser/TokenQueue.java
68	[PATCH]    }    else    if    (tq.matches(   "<?   ")    ||    tq.matches(   "<!   "))    {	[BUG]    [BUGGY]    }    else    if    (true)    {    [FE]    java.lang.IllegalStateException:    Queue    did    not    match    expected    sequence    testYahooJp    [CONTEXT]    private    Document    parse()    {    while    (!tq.isEmpty())    {    if    (tq.matches(   "<!--   "))    {    parseComment();    }    else    if    (tq.matches(   "<![CDATA[   "))    {    parseCdata();    [BUGGY]    }    else    if    (true)    {    parseXmlDecl();    }    else    if    (tq.matches(   "</   "))    {    parseEndTag();    }    else    if    (tq.matches(   "<   "))    {    parseStartTag();    }    else    {    parseTextNode();    }    }    return    doc.normalise();    [CLASS]        Parser    [METHOD]    parse    [RETURN_TYPE]    Document        [VARIABLES]    TokenQueue    tq    String    DQ    SQ    baseUri    bodyHtml    html    Tag    bodyTag    headTag    htmlTag    textareaTag    titleTag    boolean    Document    doc    LinkedList    stack        	jsoup_1104_Parser_1_1	72	1	src/main/java/org/jsoup/parser/Parser.java
69	[PATCH]    if    (!found.equals(check))	[BUG]    [BUGGY]    if    (!true)    [FE]    java.lang.IllegalStateException:    Unknown    combinator:    h    testYahooJp    [CONTEXT]    public    boolean    matches(String    seq)    {    int    len    =    seq.length();    if    (len    >    queue.size())    return    false;    List<Character>    chars    =    queue.subList(0,    len);    char[]    seqChars    =    seq.toCharArray();    for    (int    i    =    0;    i    <    len;    i++)    {    Character    found    =    Character.toLowerCase(chars.get(i));    Character    check    =    Character.toLowerCase(seqChars[i]);    [BUGGY]    if    (!true)    return    false;    }    return    true;    }    [CLASS]        TokenQueue    [METHOD]    matches    [RETURN_TYPE]    boolean        String    seq    [VARIABLES]    boolean    Character    check    found    List    chars    String    seq    LinkedList    queue    int    i    len    char[]    seqChars        	jsoup_1302_TokenQueue_1_1	79	1	src/main/java/org/jsoup/parser/TokenQueue.java
70	[PATCH]    while    (!tq.matchesAny(   "<   ",       "/>   ",       ">   ")    &&    !tq.matchesWhitespace()    &&    !tq.isEmpty())    {	[BUG]    [BUGGY]    while    (false    &&    !tq.isEmpty())    {    [FE]    junit.framework.AssertionFailedError:    expected:<12>    but    was:<0>    testGoogleSearchIpod    [CONTEXT]    if    (tq.matchChomp(   "=   "))    {    tq.consumeWhitespace();    if    (tq.matchChomp(SQ))    {    value    =    tq.chompTo(SQ);    }    else    if    (tq.matchChomp(DQ))    {    value    =    tq.chompTo(DQ);    }    else    {    StringBuilder    valueAccum    =    new    StringBuilder();        [BUGGY]    while    (false    &&    !tq.isEmpty())    {    valueAccum.append(tq.consume());    }    value    =    valueAccum.toString();    }    tq.consumeWhitespace();    }    if    (key.length()    !=    0)    return    Attribute.createFromEncoded(key,    value);    else    {    tq.consume();        [CLASS]        Parser    [METHOD]    parseAttribute    [RETURN_TYPE]    Attribute        [VARIABLES]    TokenQueue    tq    boolean    StringBuilder    valueAccum    String    DQ    SQ    baseUri    bodyHtml    data    href    html    key    tagName    value    Tag    bodyTag    headTag    htmlTag    tag    textareaTag    titleTag    Document    doc    LinkedList    stack        	jsoup_1185_Parser_1_1	183	1	src/main/java/org/jsoup/parser/Parser.java
71	[PATCH]    if    (child.tagName.equals(   "base   ")    ||    child.tagName.equals(   "script   ")    ||    child.tagName.equals(   "noscript   ")    ||    child.tagName.equals(   "link   ")    ||	[BUG]    [BUGGY]    if    (child.tagName.equals(   "base   ")    ||    child.tagName.equals(   "script   ")    ||    child.tagName.equals(   "noscript   ")    ||    [FE]    junit.framework.AssertionFailedError:    expected:<2>    but    was:<3>    createsDocumentStructure    [CONTEXT]    if    (this.optionalClosing    &&    this.equals(child))    return    false;    if    (this.empty    ||    this.isData())    return    false;            if    (this.tagName.equals(   "head   "))    {    [BUGGY]    if    (child.tagName.equals(   "base   ")    ||    child.tagName.equals(   "script   ")    ||    child.tagName.equals(   "noscript   ")    ||    child.tagName.equals(   "meta   ")    ||    child.tagName.equals(   "title   ")    ||    child.tagName.equals(   "style   ")    ||    child.tagName.equals(   "object   "))    {    return    true;    }    return    false;    }        if    (this.tagName.equals(   "dt   ")    &&    child.tagName.equals(   "dd   "))    return    false;    if    (this.tagName.equals(   "dd   ")    &&    child.tagName.equals(   "dt   "))    [CLASS]        Tag    [METHOD]    canContain    [RETURN_TYPE]    boolean        Tag    child    [VARIABLES]    List    ancestors    boolean    canContainBlock    canContainInline    empty    isBlock    optionalClosing    preserveWhitespace    Tag    child    defaultAncestor    tag    String    tagName    Map    tags        	jsoup_569_Tag_1_1	85	1	src/main/java/org/jsoup/parser/Tag.java
72	[PATCH]    for    (int    i    =    nodes.size()    -    1;    i    >=    0;    i--)    {	[BUG]    [BUGGY]    for    (int    i    =    nodes.size()    -    1;    i    >=    -1;    i--)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testPrependNewHtml    [CONTEXT]    public    Element    prepend(String    html)    {    Validate.notNull(html);    Element    fragment    =    Parser.parseBodyFragment(html,    baseUri).body();        List<Node>    nodes    =    fragment.childNodes();    [BUGGY]    for    (int    i    =    nodes.size()    -    1;    i    >=    -1;    i--)    {    Node    node    =    nodes.get(i);    node.parentNode    =    null;    prependChild(node);    }    return    this;    }    [CLASS]        Element    [METHOD]    prepend    [RETURN_TYPE]    Element        String    html    [VARIABLES]    Set    classNames    boolean    Element    fragment    Node    node    List    nodes    Tag    tag    String    html    int    i        	jsoup_92_Element_1_1	273	1	src/main/java/org/jsoup/nodes/Element.java
73	[PATCH]    for    (int    i    =    nodes.size()    -    1;    i    >=    0;    i--)    {	[BUG]    [BUGGY]    for    (int    i    =    nodes.size()    /    1;    i    >=    0;    i--)    {    [FE]    java.lang.IndexOutOfBoundsException:    Index:    2,    Size:    2    testPrependNewHtml    [CONTEXT]    public    Element    prepend(String    html)    {    Validate.notNull(html);    Element    fragment    =    Parser.parseBodyFragment(html,    baseUri).body();        List<Node>    nodes    =    fragment.childNodes();    [BUGGY]    for    (int    i    =    nodes.size()    /    1;    i    >=    0;    i--)    {    Node    node    =    nodes.get(i);    node.parentNode    =    null;    prependChild(node);    }    return    this;    }    [CLASS]        Element    [METHOD]    prepend    [RETURN_TYPE]    Element        String    html    [VARIABLES]    Set    classNames    boolean    Element    fragment    Node    node    List    nodes    Tag    tag    String    html    int    i        	jsoup_90_Element_1_1	273	1	src/main/java/org/jsoup/nodes/Element.java
74	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError:    expected:<[Yahoo!    JAPAN]>    but    was:<[]>    testYahooJp    [CONTEXT]    if    (len    >    queue.size())    return    false;    List<Character>    chars    =    queue.subList(0,    len);    char[]    seqChars    =    seq.toCharArray();    for    (int    i    =    0;    i    <    len;    i++)    {    Character    found    =    Character.toLowerCase(chars.get(i));    Character    check    =    Character.toLowerCase(seqChars[i]);    if    (!found.equals(check))    return    false;    }    [BUGGY]    return    false;    }    [CLASS]        TokenQueue    [METHOD]    matches    [RETURN_TYPE]    boolean        String    seq    [VARIABLES]    boolean    Character    check    found    List    chars    String    seq    LinkedList    queue    int    i    len    char[]    seqChars        	jsoup_1304_TokenQueue_1_1	82	1	src/main/java/org/jsoup/parser/TokenQueue.java
75	[PATCH]    return    !contents.isEmpty()    ?    contents.get(contents.size()    -    1)    :    null;	[BUG]    [BUGGY]    return    !contents.isEmpty()    ?    contents.get(contents.size()    *    1)    :    null;    [FE]    java.lang.IndexOutOfBoundsException:    Index:    2,    Size:    2    testHasText    [CONTEXT]    public    Element    last()    {    [BUGGY]    return    !contents.isEmpty()    ?    contents.get(contents.size()    *    1)    :    null;    }    [CLASS]        Elements    [METHOD]    last    [RETURN_TYPE]    Element        [VARIABLES]    List    contents    elements    boolean        	jsoup_966_Elements_1_1	318	1	src/main/java/org/jsoup/select/Elements.java
76	[PATCH]    if    (enforcedAttributes.containsKey(tagName))    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    java.lang.NullPointerException    testHandlesEmptyAttributes    [CONTEXT]    public    Whitelist    addEnforcedAttribute(String    tag,    String    key,    String    value)    {    Validate.notEmpty(tag);    Validate.notEmpty(key);    Validate.notEmpty(value);    TagName    tagName    =    TagName.valueOf(tag);    AttributeKey    attrKey    =    AttributeKey.valueOf(key);    AttributeValue    attrVal    =    AttributeValue.valueOf(value);        [BUGGY]    if    (true)    {    enforcedAttributes.get(tagName).put(attrKey,    attrVal);    }    else    {    Map<AttributeKey,    AttributeValue>    attrMap    =    new    HashMap<AttributeKey,    AttributeValue>();    attrMap.put(attrKey,    attrVal);    enforcedAttributes.put(tagName,    attrMap);    }    return    this;    }    [CLASS]        Whitelist    TagName    AttributeKey    AttributeValue    Protocol    TypedValue    [METHOD]    addEnforcedAttribute    [RETURN_TYPE]    Whitelist        String    tag    String    key    String    value    [VARIABLES]    AttributeKey    attrKey    AttributeValue    attrVal    Set    attributeSet    currentSet    tagNames    boolean    TagName    tagName    String    key    tag    tagName    value    Map    attrMap    attributes    enforcedAttributes    protocols        	jsoup_451_Whitelist_1_1	242	1	src/main/java/org/jsoup/safety/Whitelist.java
77	[PATCH]    if    (child.tagName.equals(   "base   ")    ||    child.tagName.equals(   "script   ")    ||    child.tagName.equals(   "noscript   ")    ||    child.tagName.equals(   "link   ")    ||	[BUG]    [BUGGY]    if    (child.tagName.equals(   "base   ")    ||    child.tagName.equals(   "noscript   ")    ||    child.tagName.equals(   "link   ")    ||    [FE]    junit.framework.AssertionFailedError:    expected:<<html><head><[]script></script><nos...>    but    was:<<html><head><[/head><head><]script></script><nos...>    handlesFrames    [CONTEXT]    if    (this.optionalClosing    &&    this.equals(child))    return    false;    if    (this.empty    ||    this.isData())    return    false;            if    (this.tagName.equals(   "head   "))    {    [BUGGY]    if    (child.tagName.equals(   "base   ")    ||    child.tagName.equals(   "noscript   ")    ||    child.tagName.equals(   "link   ")    ||    child.tagName.equals(   "meta   ")    ||    child.tagName.equals(   "title   ")    ||    child.tagName.equals(   "style   ")    ||    child.tagName.equals(   "object   "))    {    return    true;    }    return    false;    }        if    (this.tagName.equals(   "dt   ")    &&    child.tagName.equals(   "dd   "))    return    false;    if    (this.tagName.equals(   "dd   ")    &&    child.tagName.equals(   "dt   "))    [CLASS]        Tag    [METHOD]    canContain    [RETURN_TYPE]    boolean        Tag    child    [VARIABLES]    List    ancestors    boolean    canContainBlock    canContainInline    empty    isBlock    optionalClosing    preserveWhitespace    Tag    child    defaultAncestor    tag    String    tagName    Map    tags        	jsoup_561_Tag_1_1	85	1	src/main/java/org/jsoup/parser/Tag.java
78	[PATCH]    if    (this.optionalClosing    &&    this.equals(child))	[BUG]    [BUGGY]    if    (false)    [FE]    junit.framework.AssertionFailedError:    expected:<2>    but    was:<1>    createsImplicitLists    [CONTEXT]    boolean    canContain(Tag    child)    {    Validate.notNull(child);    if    (child.isBlock    &&    !this.canContainBlock)    return    false;    if    (!child.isBlock    &&    !this.canContainInline)    return    false;        [BUGGY]    if    (false)    return    false;    if    (this.empty    ||    this.isData())    return    false;            if    (this.tagName.equals(   "head   "))    {    if    (child.tagName.equals(   "base   ")    ||    child.tagName.equals(   "script   ")    ||    child.tagName.equals(   "noscript   ")    ||    child.tagName.equals(   "link   ")    ||    child.tagName.equals(   "meta   ")    ||    child.tagName.equals(   "title   ")    ||    child.tagName.equals(   "style   ")    ||    child.tagName.equals(   "object   "))    {    [CLASS]        Tag    [METHOD]    canContain    [RETURN_TYPE]    boolean        Tag    child    [VARIABLES]    List    ancestors    boolean    canContainBlock    canContainInline    empty    isBlock    optionalClosing    preserveWhitespace    Tag    child    defaultAncestor    tag    String    tagName    Map    tags        	jsoup_549_Tag_1_1	76	1	src/main/java/org/jsoup/parser/Tag.java
79	[PATCH]    while    (!queue.isEmpty()    &&    (Character.isLetterOrDigit(queue.peek())    ||    matchesAny(   "-   ",       "_   ",       ":   ")))    {	[BUG]    [BUGGY]    while    (!queue.isEmpty()    &&    (Character.isLetterOrDigit(queue.peek())))    {    [FE]    junit.framework.AssertionFailedError:    expected:<[en]>    but    was:<[]>    testSmhBizArticle    [CONTEXT]    public    String    consumeAttributeKey()    {    StringBuilder    accum    =    new    StringBuilder();    [BUGGY]    while    (!queue.isEmpty()    &&    (Character.isLetterOrDigit(queue.peek())))    {    accum.append(queue.removeFirst());    }    return    accum.toString();    }    [CLASS]        TokenQueue    [METHOD]    consumeAttributeKey    [RETURN_TYPE]    String        [VARIABLES]    StringBuilder    accum    LinkedList    queue    boolean        	jsoup_1367_TokenQueue_1_1	236	1	src/main/java/org/jsoup/parser/TokenQueue.java
80	[PATCH]    if    (c.equals(p))    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<1>    but    was:<2>    deeperDescendant    [CONTEXT]    private    static    Elements    filterForDescendants(Collection<Element>    parents,    Collection<Element>    candidates)    {    Elements    children    =    new    Elements();    CHILD:    for    (Element    c    :    candidates)    {    boolean    found    =    false;    for    (Element    p    :    parents)    {    [BUGGY]    if    (false)    {    found    =    true;    continue    CHILD;    }    }    if    (!found)    children.add(c);    }    return    children;    }    [CLASS]        Selector    SelectorParseException    [METHOD]    filterForDescendants    [RETURN_TYPE]    Elements        Element>    parents    Element>    candidates    [VARIABLES]    LinkedHashSet    elements    TokenQueue    tq    boolean    found    Element    c    found    p    root    Collection    candidates    parents    String[]    combinators    String    className    combinator    id    indexS    key    query    s    subQuery    tagName    Elements    children        	jsoup_1488_Selector_1_1	271	1	src/main/java/org/jsoup/select/Selector.java
81	[PATCH]    if    (!validAncestor)    {	[BUG]    [BUGGY]    if    (!false)    {    [FE]    java.lang.IllegalArgumentException:    The    validated    object    is    null    testYahooJp    [CONTEXT]    private    Element    addChildToParent(Element    child,    boolean    isEmptyElement)    {    Element    parent    =    popStackToSuitableContainer(child.tag());    Tag    childTag    =    child.tag();    boolean    validAncestor    =    stackHasValidParent(childTag);        [BUGGY]    if    (!false)    {        Tag    parentTag    =    childTag.getImplicitParent();    Element    implicit    =    new    Element(parentTag,    baseUri);        if    (child.tag().equals(bodyTag))    {    Element    head    =    new    Element(headTag,    baseUri);    implicit.appendChild(head);    }    implicit.appendChild(child);        [CLASS]        Parser    [METHOD]    addChildToParent    [RETURN_TYPE]    Element        Element    child    boolean    isEmptyElement    [VARIABLES]    TokenQueue    tq    boolean    isEmptyElement    validAncestor    Element    child    head    implicit    parent    root    String    DQ    SQ    baseUri    bodyHtml    data    href    html    key    rawText    tagName    text    value    Tag    bodyTag    childTag    headTag    htmlTag    parentTag    tag    textareaTag    titleTag    Document    doc    LinkedList    stack        	jsoup_1204_Parser_1_1	216	1	src/main/java/org/jsoup/parser/Parser.java
82	[PATCH]    return    siblings.size()    >    1    ?    siblings.get(siblings.size()    -    1)    :    null;	[BUG]    [BUGGY]    return    siblings.size()    >    1    ?    siblings.get(siblings.size()    *    1)    :    null;    [FE]    java.lang.IndexOutOfBoundsException:    Index:    6,    Size:    6    testGetSiblings    [CONTEXT]    public    Element    lastElementSibling()    {    List<Element>    siblings    =    parent().children();    [BUGGY]    return    siblings.size()    >    1    ?    siblings.get(siblings.size()    *    1)    :    null;    }    [CLASS]        Element    [METHOD]    lastElementSibling    [RETURN_TYPE]    Element        [VARIABLES]    List    siblings    Set    classNames    Tag    tag    boolean        	jsoup_168_Element_1_1	394	1	src/main/java/org/jsoup/nodes/Element.java
83	[PATCH]    while    (!queue.isEmpty()    &&    (Character.isLetterOrDigit(c)    ||    c.equals('-')    ||    c.equals('_')))    {	[BUG]    [BUGGY]    while    (!queue.isEmpty()    ==    (Character.isLetterOrDigit(c)    ||    c.equals('-')    ||    c.equals('_')))    {    [FE]    java.lang.NullPointerException    filter    [CONTEXT]    public    String    consumeCssIdentifier()    {    StringBuilder    accum    =    new    StringBuilder();    Character    c    =    queue.peek();    [BUGGY]    while    (!queue.isEmpty()    ==    (Character.isLetterOrDigit(c)    ||    c.equals('-')    ||    c.equals('_')))    {    accum.append(queue.removeFirst());    c    =    queue.peek();    }    return    accum.toString();    }    [CLASS]        TokenQueue    [METHOD]    consumeCssIdentifier    [RETURN_TYPE]    String        [VARIABLES]    boolean    StringBuilder    accum    Character    c    LinkedList    queue        	jsoup_1360_TokenQueue_1_1	223	1	src/main/java/org/jsoup/parser/TokenQueue.java
84	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError    classes    [CONTEXT]    public    boolean    hasClass(String    className)    {    for    (Element    element    :    contents)    {    if    (element.hasClass(className))    [BUGGY]    return    false;    }    return    false;    }    [CLASS]        Elements    [METHOD]    hasClass    [RETURN_TYPE]    boolean        String    className    [VARIABLES]    List    contents    elements    String    className    boolean    Element    element        	jsoup_920_Elements_1_1	129	1	src/main/java/org/jsoup/select/Elements.java
85	[PATCH]    if    (TextNode.lastCharIsWhitespace(accum))	[BUG]    [BUGGY]    if    (true)    [FE]    junit.framework.AssertionFailedError:    expected:<Hello    There.    Here    is[    ]some    text.>    but    was:<Hello    There.    Here    is[]some    text.>    testNormalisesText    [CONTEXT]    private    void    text(StringBuilder    accum)    {    for    (Node    child    :    childNodes)    {    if    (child    instanceof    TextNode)    {    TextNode    textNode    =    (TextNode)    child;    String    text    =    textNode.getWholeText();    if    (!preserveWhitespace())    {    text    =    TextNode.normaliseWhitespace(text);    [BUGGY]    if    (true)    text    =    TextNode.stripLeadingWhitespace(text);    }    accum.append(text);    }    else    if    (child    instanceof    Element)    {    Element    element    =    (Element)    child;    if    (accum.length()    >    0    &&    element.isBlock()    &&    !TextNode.lastCharIsWhitespace(accum))    accum.append(   "       ");    element.text(accum);    }    [CLASS]        Element    [METHOD]    text    [RETURN_TYPE]    void        StringBuilder    accum    [VARIABLES]    Set    classNames    boolean    StringBuilder    accum    Node    child    Element    element    TextNode    textNode    Tag    tag    String    text        	jsoup_189_Element_1_1	570	1	src/main/java/org/jsoup/nodes/Element.java
86	[PATCH]    return    element.elementSiblingIndex()    <    index;	[BUG]    [BUGGY]    return    element.elementSiblingIndex()    <=    index;    [FE]    junit.framework.AssertionFailedError:    expected:<1>    but    was:<2>    testPseudoBetween    [CONTEXT]    public    boolean    matches(Element    element)    {    [BUGGY]    return    element.elementSiblingIndex()    <=    index;    }    [CLASS]        Evaluator    Tag    Id    Class    Attribute    AttributeWithValue    AttributeWithValueNot    AttributeWithValueStarting    AttributeWithValueEnding    AttributeWithValueContaining    AttributeKeyPair    AllElements    IndexLessThan    IndexGreaterThan    IndexEquals    IndexEvaluator    [METHOD]    matches    [RETURN_TYPE]    boolean        Element    element    [VARIABLES]    String    className    id    key    tagName    value    boolean    int    index    Element    element        	jsoup_1028_Evaluator_1_1	139	1	src/main/java/org/jsoup/nodes/Evaluator.java
87	[PATCH]    return    siblings.size()    >    1    ?    siblings.get(siblings.size()    -    1)    :    null;	[BUG]    [BUGGY]    return    false    ?    siblings.get(siblings.size()    -    1)    :    null;    [FE]    java.lang.NullPointerException    testGetSiblings    [CONTEXT]    public    Element    lastElementSibling()    {    List<Element>    siblings    =    parent().children();    [BUGGY]    return    false    ?    siblings.get(siblings.size()    -    1)    :    null;    }    [CLASS]        Element    [METHOD]    lastElementSibling    [RETURN_TYPE]    Element        [VARIABLES]    List    siblings    Set    classNames    Tag    tag    boolean        	jsoup_164_Element_1_1	394	1	src/main/java/org/jsoup/nodes/Element.java
88	[PATCH]    while    (!queue.isEmpty()    &&    (Character.isLetterOrDigit(c)    ||    c.equals('-')    ||    c.equals('_')))    {	[BUG]    [BUGGY]    while    (!queue.isEmpty()    &&    (Character.isLetterOrDigit(c)    ||    c.equals('-')))    {    [FE]    org.jsoup.select.Selector$SelectorParseException:    Could    not    parse    query    #a1-foo_bar    testCharactersInIdAndClass    [CONTEXT]    public    String    consumeCssIdentifier()    {    StringBuilder    accum    =    new    StringBuilder();    Character    c    =    queue.peek();    [BUGGY]    while    (!queue.isEmpty()    &&    (Character.isLetterOrDigit(c)    ||    c.equals('-')))    {    accum.append(queue.removeFirst());    c    =    queue.peek();    }    return    accum.toString();    }    [CLASS]        TokenQueue    [METHOD]    consumeCssIdentifier    [RETURN_TYPE]    String        [VARIABLES]    boolean    StringBuilder    accum    Character    c    LinkedList    queue        	jsoup_1357_TokenQueue_1_1	223	1	src/main/java/org/jsoup/parser/TokenQueue.java
89	[PATCH]    if    (accum.length()    >    0    &&    element.isBlock()    &&    !TextNode.lastCharIsWhitespace(accum))	[BUG]    [BUGGY]    if    (false)    [FE]    junit.framework.AssertionFailedError:    expected:<Hello[    ]Another    element>    but    was:<Hello[]Another    element>    testGetText    [CONTEXT]    if    (!preserveWhitespace())    {    text    =    TextNode.normaliseWhitespace(text);    if    (TextNode.lastCharIsWhitespace(accum))    text    =    TextNode.stripLeadingWhitespace(text);    }    accum.append(text);    }    else    if    (child    instanceof    Element)    {    Element    element    =    (Element)    child;    [BUGGY]    if    (false)    accum.append(   "       ");    element.text(accum);    }    }    }    [CLASS]        Element    [METHOD]    text    [RETURN_TYPE]    void        StringBuilder    accum    [VARIABLES]    Set    classNames    boolean    StringBuilder    accum    Node    child    Element    element    TextNode    textNode    Tag    tag    String    text        	jsoup_202_Element_1_1	577	1	src/main/java/org/jsoup/nodes/Element.java
90	[PATCH]    if    (previousSib    !=    null    &&    previousSib.equals(e))    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<2>    but    was:<0>    mixCombinator    [CONTEXT]    private    static    Elements    filterForAdjacentSiblings(Collection<Element>    elements,    Collection<Element>    candidates)    {    Elements    siblings    =    new    Elements();    SIBLING:    for    (Element    c:    candidates)    {    for    (Element    e:    elements)    {    if    (!e.parent().equals(c.parent()))    continue;    Element    previousSib    =    c.previousElementSibling();    [BUGGY]    if    (false)    {    siblings.add(c);    continue    SIBLING;    }    }    }    return    siblings;    }    [CLASS]        Selector    SelectorParseException    [METHOD]    filterForAdjacentSiblings    [RETURN_TYPE]    Elements        Element>    elements    Element>    candidates    [VARIABLES]    LinkedHashSet    elements    TokenQueue    tq    boolean    Element    c    e    found    p    previousSib    root    Collection    candidates    elements    String[]    combinators    String    className    combinator    id    indexS    key    query    s    subQuery    tagName    Elements    siblings        	jsoup_1499_Selector_1_1	290	1	src/main/java/org/jsoup/select/Selector.java
91	[PATCH]    if    (size()    >    0)	[BUG]    [BUGGY]    if    (size()    >    1)    [FE]    junit.framework.AssertionFailedError:    expected:<[Hello]>    but    was:<[]>    handlesTextArea    [CONTEXT]    public    String    val()    {    [BUGGY]    if    (size()    >    1)    return    first().val();    else    return       "   ";    }    [CLASS]        Elements    [METHOD]    val    [RETURN_TYPE]    String        [VARIABLES]    List    contents    elements    boolean        	jsoup_922_Elements_1_1	140	1	src/main/java/org/jsoup/select/Elements.java
92	[PATCH]    result    =    31    *    result    +    (canContainBlock    ?    1    :    0);	[BUG]    [BUGGY]    result    =    31    *    result    %    (canContainBlock    ?    1    :    0);    [FE]    java.lang.ArithmeticException:    /    by    zero    testYahooJp    [CONTEXT]    public    int    hashCode()    {    int    result    =    tagName    !=    null    ?    tagName.hashCode()    :    0;    result    =    31    *    result    +    (isBlock    ?    1    :    0);    [BUGGY]    result    =    31    *    result    %    (canContainBlock    ?    1    :    0);    result    =    31    *    result    +    (canContainInline    ?    1    :    0);    result    =    31    *    result    +    (optionalClosing    ?    1    :    0);    result    =    31    *    result    +    (empty    ?    1    :    0);    return    result;    }    [CLASS]        Tag    [METHOD]    hashCode    [RETURN_TYPE]    int        [VARIABLES]    List    ancestors    boolean    canContainBlock    canContainInline    empty    isBlock    optionalClosing    preserveWhitespace    Tag    child    defaultAncestor    tag    String    tagName    Map    tags    int    result        	jsoup_679_Tag_1_1	185	1	src/main/java/org/jsoup/parser/Tag.java
93	[PATCH]    return    parentNode.nodeDepth()    +    1;	[BUG]    [BUGGY]    return    parentNode.nodeDepth()    *    1;    [FE]    junit.framework.AssertionFailedError:    expected:<...ead>    testFormatHtml    [CONTEXT]    protected    int    nodeDepth()    {    if    (parentNode    ==    null)    return    0;    else    [BUGGY]    return    parentNode.nodeDepth()    *    1;    }    [CLASS]        Node    [METHOD]    nodeDepth    [RETURN_TYPE]    int        [VARIABLES]    Attributes    attributes    List    childNodes    String    attributeKey    attributeValue    baseUri    relUrl    boolean    Node    in    out    parentNode        	jsoup_358_Node_1_1	249	1	src/main/java/org/jsoup/nodes/Node.java
94	[PATCH]    if    (this.equals(tag))	[BUG]    [BUGGY]    if    (true)    [FE]    junit.framework.AssertionFailedError:    expected:<[]Replaced>    but    was:<[Hello    ]Replaced>    setTextPreservesDocumentStructure    [CONTEXT]    boolean    isValidParent(Tag    child)    {    if    (child.ancestors.isEmpty())    return    true;        for    (Tag    tag    :    child.ancestors)    {    [BUGGY]    if    (true)    return    true;    }    return    false;    }    [CLASS]        Tag    [METHOD]    isValidParent    [RETURN_TYPE]    boolean        Tag    child    [VARIABLES]    List    ancestors    boolean    canContainBlock    canContainInline    empty    isBlock    optionalClosing    preserveWhitespace    Tag    child    defaultAncestor    tag    String    tagName    Map    tags        	jsoup_611_Tag_1_1	158	1	src/main/java/org/jsoup/parser/Tag.java
95	[PATCH]    if    (sb.length()    ==    0)	[BUG]    [BUGGY]    if    (sb.length()    ==    1)    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    -1    testYahooJp    [CONTEXT]    static    boolean    lastCharIsWhitespace(StringBuilder    sb)    {    [BUGGY]    if    (sb.length()    ==    1)    return    false;    String    lastChar    =    sb.substring(sb.length()-1,    sb.length());    Validate.isTrue(lastChar.length()    ==    1);    return    lastChar.equals(   "       ");    }    [CLASS]        TextNode    [METHOD]    lastCharIsWhitespace    [RETURN_TYPE]    boolean        StringBuilder    sb    [VARIABLES]    StringBuilder    sb    String    TEXT_KEY    baseUri    encodedText    html    lastChar    text    boolean        	jsoup_1064_TextNode_1_1	100	1	src/main/java/org/jsoup/nodes/TextNode.java
96	[PATCH]    while    (!queue.isEmpty()    &&    (Character.isLetterOrDigit(c)    ||    c.equals('-')    ||    c.equals('_')))    {	[BUG]    [BUGGY]    while    (!queue.isEmpty()    &&    (true))    {    [FE]    junit.framework.AssertionFailedError:    expected:<12>    but    was:<0>    testGoogleSearchIpod    [CONTEXT]    public    String    consumeCssIdentifier()    {    StringBuilder    accum    =    new    StringBuilder();    Character    c    =    queue.peek();    [BUGGY]    while    (!queue.isEmpty()    &&    (true))    {    accum.append(queue.removeFirst());    c    =    queue.peek();    }    return    accum.toString();    }    [CLASS]        TokenQueue    [METHOD]    consumeCssIdentifier    [RETURN_TYPE]    String        [VARIABLES]    boolean    StringBuilder    accum    Character    c    LinkedList    queue        	jsoup_1359_TokenQueue_1_1	223	1	src/main/java/org/jsoup/parser/TokenQueue.java
97	[PATCH]    for    (int    i    =    nodes.size()    -    1;    i    >=    0;    i--)    {	[BUG]    [BUGGY]    for    (int    i    =    nodes.size()    -    -1;    i    >=    0;    i--)    {    [FE]    java.lang.IndexOutOfBoundsException:    Index:    3,    Size:    2    testPrependNewHtml    [CONTEXT]    public    Element    prepend(String    html)    {    Validate.notNull(html);    Element    fragment    =    Parser.parseBodyFragment(html,    baseUri).body();        List<Node>    nodes    =    fragment.childNodes();    [BUGGY]    for    (int    i    =    nodes.size()    -    -1;    i    >=    0;    i--)    {    Node    node    =    nodes.get(i);    node.parentNode    =    null;    prependChild(node);    }    return    this;    }    [CLASS]        Element    [METHOD]    prepend    [RETURN_TYPE]    Element        String    html    [VARIABLES]    Set    classNames    boolean    Element    fragment    Node    node    List    nodes    Tag    tag    String    html    int    i        	jsoup_86_Element_1_1	273	1	src/main/java/org/jsoup/nodes/Element.java
98	[PATCH]    return    !queue.isEmpty()    &&    Character.isLetterOrDigit(queue.peek());	[BUG]    [BUGGY]    return    false;    [FE]    org.jsoup.select.Selector$SelectorParseException:    Could    not    parse    query    html    testYahooJp    [CONTEXT]    public    boolean    matchesWord()    {    [BUGGY]    return    false;    }    [CLASS]        TokenQueue    [METHOD]    matchesWord    [RETURN_TYPE]    boolean        [VARIABLES]    LinkedList    queue    boolean        	jsoup_1319_TokenQueue_1_1	126	1	src/main/java/org/jsoup/parser/TokenQueue.java
99	[PATCH]    canContainBlock    =    false;	[BUG]    [BUGGY]    canContainBlock    =    true;    [FE]    junit.framework.AssertionFailedError:    expected:<...--    comment    -->Hello<[/p><p>there]</p></div></body></h...>    but    was:<...--    comment    -->Hello<[p>there</p>]</p></div></body></h...>    testOuterHtml    [CONTEXT]    private    Tag    setContainInlineOnly()    {    [BUGGY]    canContainBlock    =    true;    canContainInline    =    true;    return    this;    }    [CLASS]        Tag    [METHOD]    setContainInlineOnly    [RETURN_TYPE]    Tag        [VARIABLES]    List    ancestors    boolean    canContainBlock    canContainInline    empty    isBlock    optionalClosing    preserveWhitespace    Tag    child    defaultAncestor    inline    tag    String    tagName    Map    tags        	jsoup_824_Tag_1_1	334	1	src/main/java/org/jsoup/parser/Tag.java
100	[PATCH]    if    ((matrix.getRowDimension()    !=    1)    ||	[BUG]    [BUGGY]    if    ((matrix.getRowDimension()    !=    -1)    ||    [FE]    org.apache.commons.math3.linear.MatrixDimensionMismatchException:    got    1x4    but    expected    1x4    testSetRowMatrix    [CONTEXT]    public    void    setRowMatrix(final    int    row,    final    RealMatrix    matrix)    throws    OutOfRangeException,    MatrixDimensionMismatchException    {    MatrixUtils.checkRowIndex(this,    row);    final    int    nCols    =    getColumnDimension();    [BUGGY]    if    ((matrix.getRowDimension()    !=    -1)    ||    (matrix.getColumnDimension()    !=    nCols))    {    throw    new    MatrixDimensionMismatchException(matrix.getRowDimension(),    matrix.getColumnDimension(),    1,    nCols);    }    for    (int    i    =    0;    i    <    nCols;    ++i)    {    setEntry(row,    i,    matrix.getEntry(0,    i));    }    }    [CLASS]        AbstractRealMatrix    1    2    3    4    5    [METHOD]    setRowMatrix    [RETURN_TYPE]    void        final    int    row    RealMatrix    matrix    [VARIABLES]    RealMatrixFormat    DEFAULT_FORMAT    boolean    RealMatrix    matrix    double    columnSum    d    endRow    maxColSum    sum    value    int    col    column    columnCount    columnDimension    columns    columnsCount    endColumn    endRow    i    j    maxI    nCols    nRows    nSum    p    pos    power    r    row    rowCount    rowDimension    rows    rowsCount    startColumn    startRow        	math_45458_AbstractRealMatrix_1_1	464	1	src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
101	[PATCH]    final    double    diff    =    e.getValue()    -    v.getEntry(e.getIndex());	[BUG]    [BUGGY]    final    double    diff    =    e.getValue()    %    v.getEntry(e.getIndex());    [FE]    junit.framework.AssertionFailedError:    expected:<13.416407864998739>    but    was:<NaN>    testGetDistanceSameType    [CONTEXT]    public    double    getDistance(RealVector    v)    throws    DimensionMismatchException    {    checkVectorDimensions(v);    double    d    =    0;    Iterator<Entry>    it    =    iterator();    while    (it.hasNext())    {    final    Entry    e    =    it.next();    [BUGGY]    final    double    diff    =    e.getValue()    %    v.getEntry(e.getIndex());    d    +=    diff    *    diff;    }    return    FastMath.sqrt(d);    }    [CLASS]        RealVector    1    Entry    SparseEntryIterator    2    1    2    UnmodifiableEntry    [METHOD]    getDistance    [RETURN_TYPE]    double        RealVector    v    [VARIABLES]    Entry    current    e    next    boolean    UnmodifiableEntry    e    RealVector    v    double    d    diff    Iterator    it    int    d    dim    end    i    index    n    start        	math_12183_RealVector_1_1	401	1	src/main/java/org/apache/commons/math3/linear/RealVector.java
102	[PATCH]    final    int    lEnd    =    lStart    +    kWidth;	[BUG]    [BUGGY]    final    int    lEnd    =    lStart    /    kWidth;    [FE]    junit.framework.AssertionFailedError:    expected:<0.0>    but    was:<37.382145043201646>    testOverdetermined    [CONTEXT]    final    double[]    outBlock    =    out.blocks[blockIndex];        for    (int    kBlock    =    0;    kBlock    <    blockColumns;    ++kBlock)    {    final    int    kWidth    =    blockWidth(kBlock);    final    double[]    tBlock    =    blocks[iBlock    *    blockColumns    +    kBlock];    final    int    rStart    =    kBlock    *    BLOCK_SIZE;    int    k    =    0;    for    (int    p    =    pStart;    p    <    pEnd;    ++p)    {    final    int    lStart    =    (p    -    pStart)    *    kWidth;    [BUGGY]    final    int    lEnd    =    lStart    /    kWidth;    for    (int    q    =    qStart;    q    <    qEnd;    ++q)    {    double    sum    =    0;    int    r    =    rStart;    for    (int    l    =    lStart;    l    <    lEnd;    ++l)    {    sum    +=    tBlock[l]    *    m.getEntry(r,    q);    ++r;    }    outBlock[k]    +=    sum;    ++k;    }    [CLASS]        BlockRealMatrix    [METHOD]    multiply    [RETURN_TYPE]    BlockRealMatrix        RealMatrix    m    [VARIABLES]    boolean    RealMatrix    m    double[]    outBlock    tBlock    double    sum    ClassCastException    cce    double[][]    blockData    blocks    rawData    BlockRealMatrix    out    int    BLOCK_SIZE    blockColumns    blockIndex    blockRows    columnDimension    columns    i    iBlock    iHeight    index    jBlock    jWidth    k    kBlock    kWidth    l    lEnd    lStart    length    p    pEnd    pStart    q    qEnd    qStart    r    rStart    rowDimension    rows    long    serialVersionUID        	math_51696_BlockRealMatrix_1_1	505	1	src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
103	[PATCH]    recipb    +=    (1.0    -    yaa*recipa    -    yaa*recipb    -    yab*recipa    -    yab*recipb)    *    recip;	[BUG]    [BUGGY]    recipb    +=    (1.0    -    yaa*recipa    -    yaa    -    recipb    -    yab*recipa    -    yab*recipb)    *    recip;    [FE]    junit.framework.AssertionFailedError:    expected:<5.264247893057607>    but    was:<5.9501189083426596>    testMultiplyDifferentiable    [CONTEXT]    double    yaa    =    ya    +    temp    -    temp;    double    yab    =    ya    -    yaa;        double    recip    =    1.0/ya;    temp    =    recip    *    HEX_40000000;    double    recipa    =    recip    +    temp    -    temp;    double    recipb    =    recip    -    recipa;            [BUGGY]    recipb    +=    (1.0    -    yaa*recipa    -    yaa    -    recipb    -    yab*recipa    -    yab*recipb)    *    recip;        recipb    +=    -yb    *    recip    *    recip;    recipa    =    -recipa;    recipb    =    -recipb;        temp    =    ya    +    recipa;    yb    +=    -(temp    -    ya    -    recipa);    ya    =    temp;    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    sinh    [RETURN_TYPE]    double        double    x    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    negate    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    b    d    denom    denomb    denomr    finalRemA    finalRemB    ra    ratio    rb    recip    recipa    recipb    remA    remB    result    t    temp    x    xa    ya    yaa    yab    yb    za    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    finalK    k    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    xl        	math_110726_FastMath_1_1	519	1	src/main/java/org/apache/commons/math3/util/FastMath.java
104	[PATCH]    int    k    =    (p    -    p0)    *    jWidth    +    qStart    -    q0;	[BUG]    [BUGGY]    int    k    =    (p    /    p0)    *    jWidth    +    qStart    -    q0;    [FE]    java.lang.ArithmeticException:    /    by    zero    testWalk    [CONTEXT]    final    int    p0    =    iBlock    *    BLOCK_SIZE;    final    int    pStart    =    FastMath.max(startRow,    p0);    final    int    pEnd    =    FastMath.min((iBlock    +    1)    *    BLOCK_SIZE,    1    +    endRow);    for    (int    jBlock    =    startColumn    /    BLOCK_SIZE;    jBlock    <    1    +    endColumn    /    BLOCK_SIZE;    ++jBlock)    {    final    int    jWidth    =    blockWidth(jBlock);    final    int    q0    =    jBlock    *    BLOCK_SIZE;    final    int    qStart    =    FastMath.max(startColumn,    q0);    final    int    qEnd    =    FastMath.min((jBlock    +    1)    *    BLOCK_SIZE,    1    +    endColumn);    final    T[]    block    =    blocks[iBlock    *    blockColumns    +    jBlock];    for    (int    p    =    pStart;    p    <    pEnd;    ++p)    {    [BUGGY]    int    k    =    (p    /    p0)    *    jWidth    +    qStart    -    q0;    for    (int    q    =    qStart;    q    <    qEnd;    ++q)    {    visitor.visit(p,    q,    block[k]);    ++k;    }    }    }    }    return    visitor.end();    }        [CLASS]    	math_51166_BlockFieldMatrix_1_1	1565	1	src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
105	[PATCH]    sGradient[0]    *    jacobian[0][0]    +    sGradient[1]    *    jacobian[1][0]    +    sGradient[2]    *    jacobian[2][0],	[BUG]    [BUGGY]    sGradient[0]    *    jacobian[0][0]    +    sGradient[1]    *    jacobian[1][0]    +    sGradient[2]    *    jacobian[0][0],    [FE]    junit.framework.AssertionFailedError:    expected:<0.0>    but    was:<0.9008958962137328>    testGradient    [CONTEXT]    public    double[]    toCartesianGradient(final    double[]    sGradient)    {        computeJacobian();            return    new    double[]    {    [BUGGY]    sGradient[0]    *    jacobian[0][0]    +    sGradient[1]    *    jacobian[1][0]    +    sGradient[2]    *    jacobian[0][0],    sGradient[0]    *    jacobian[0][1]    +    sGradient[1]    *    jacobian[1][1]    +    sGradient[2]    *    jacobian[2][1],    sGradient[0]    *    jacobian[0][2]    +    sGradient[2]    *    jacobian[2][2]    };    }    [CLASS]        SphericalCoordinates    DataTransferObject    [METHOD]    toCartesianGradient    [RETURN_TYPE]    double[]        final    double[]    sGradient    [VARIABLES]    double[][]    jacobian    phiHessian    rHessian    thetaHessian    boolean    double[]    sGradient    Vector3D    v    double    cosPhi    cosTheta    phi    r    sinPhi    sinTheta    theta    x    y    z    long    serialVersionUID        	math_42512_SphericalCoordinates_1_1	170	1	src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SphericalCoordinates.java
106	[PATCH]    if    (x    <    xval[0]    ||	[BUG]    [BUGGY]    if    (x    <    xval[1]    ||    [FE]    junit.framework.AssertionFailedError    testIsValidPoint    [CONTEXT]    public    boolean    isValidPoint(double    x,    double    y)    {    [BUGGY]    if    (x    <    xval[1]    ||    x    >    xval[xval.length    -    1]    ||    y    <    yval[0]    ||    y    >    yval[yval.length    -    1])    {    return    false;    }    else    {    return    true;    }    }    [CLASS]        BicubicSplineInterpolatingFunction    [METHOD]    isValidPoint    [RETURN_TYPE]    boolean        double    x    double    y    [VARIABLES]    BicubicSplineFunction[][]    splines    boolean    double[]    beta    x    xval    y    yval    double    x    y    double[][]    AINV    d2FdXdY    dFdX    dFdY    f    BivariateFunction[][][]    partialDerivatives    int    NUM_COEFF    i    ip1    j    jp1    lastI    lastJ    xLen    yLen        	math_10155_BicubicSplineInterpolatingFunction_1_1	184	1	src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java
107	[PATCH]    hiPrec[0]    =    0.0;	[BUG]    [BUGGY]    hiPrec[0]    =    1.0;    [FE]    junit.framework.AssertionFailedError:    double    expm1(-Infinity)    expected    bff0000000000000    actual    0000000000000000    entries    [4]    test1[47]    [CONTEXT]                    if    (x    <    0.0)    {    intVal    =    (int)    -x;    if    (intVal    >    746)    {    if    (hiPrec    !=    null)    {    [BUGGY]    hiPrec[0]    =    1.0;    hiPrec[1]    =    0.0;    }    return    0.0;    }    if    (intVal    >    709)    {        final    double    result    =    exp(x+40.19140625,    extra,    hiPrec)    /    285040095144011776.0;    if    (hiPrec    !=    null)    {    hiPrec[0]    /=    285040095144011776.0;    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    exp    [RETURN_TYPE]    double        double    x    double    extra    double[]    hiPrec    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    negate    negative    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    a2    absAsinh    absAtanh    b    d    da    daa    dab    db    denom    denomb    denomr    epsilon    extra    finalRemA    finalRemB    fracPartA    fracPartB    intPartA    intPartB    na    nb    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    t    temp    tempA    tempB    tempC    x    xa    ya    yaa    yab    yb    z    za    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    finalK    intFrac    intVal    k    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    xl        	math_112009_FastMath_1_1	861	1	src/main/java/org/apache/commons/math3/util/FastMath.java
108	[PATCH]    if    (ratio    <    0.0d    ||    ratio    >    1.0d)    {	[BUG]    [BUGGY]    if    (ratio    <    0.0)    {    [FE]    junit.framework.AssertionFailedError:    Expected    exception:    org.apache.commons.math3.exception.OutOfRangeException    testRatioTooHigh    [CONTEXT]    public    UniformCrossover(final    double    ratio)    throws    OutOfRangeException    {    [BUGGY]    if    (ratio    <    0.0)    {    throw    new    OutOfRangeException(LocalizedFormats.CROSSOVER_RATE,    ratio,    0.0d,    1.0d);    }    this.ratio    =    ratio;    }    [CLASS]        UniformCrossover    [METHOD]    <init>    [RETURN_TYPE]    UniformCrossover(double)        final    double    ratio    [VARIABLES]    double    ratio    boolean        	math_33315_UniformCrossover_1_1	64	1	src/main/java/org/apache/commons/math3/genetics/UniformCrossover.java
109	[PATCH]    System.arraycopy(row_data,    0,    xrow,    1,    row_data.length);	[BUG]    [BUGGY]    System.arraycopy(row_data,    -1,    xrow,    1,    row_data.length);    [FE]    java.lang.ArrayIndexOutOfBoundsException    testHdiagConstant    [CONTEXT]    if    (this.hasIntercept)    {    xrow    =    new    double[row_data.length    +    1];    xrow[0]    =    1.0;    [BUGGY]    System.arraycopy(row_data,    -1,    xrow,    1,    row_data.length);    }    else    {    xrow    =    row_data;    }    [CLASS]        MillerUpdatingRegression    [METHOD]    getDiagonalOfHatMatrix    [RETURN_TYPE]    double        double[]    row_data    [VARIABLES]    boolean    bSkipTo40    hasIntercept    includeConstant    rankProblem    rss_set    tol_set    double[]    covmat    d    output    r    ret    rhs    rinv    rms    row_data    rss    tmp    tol    wk    work    work_sing    work_tolset    x    x_sing    xrow    y    double    X    Y    _a    _b    _w    a    b    cbar    d1    d1new    d2    d2new    di    dpi    eps    epsilon    errorTolerance    hii    rnk    sbar    sserr    sumsqy    sumxx    sumxy    sumy    sumyy    temp    tmp    total    var    w    weight    wi    wxi    xi    xk    y    yi    int[]    list    vorder    boolean[]    lindep    int    _i    _pi    _xi    base_pos    col    col1    col2    count    first    from    i    idx    in    inc    j    k    l    m    m1    m2    mp1    next    nextr    nreq    numberOfVariables    nvars    nvm    offXX    pos    pos1    pos2    rms_off    row    start    to    wrk_off    long    nobs        	math_104750_MillerUpdatingRegression_1_1	865	1	src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java
110	[PATCH]    b[j]    =    (y[j    +    1]    -    y[j])    /    h[j]    -    h[j]    *    (c[j    +    1]    +    2d    *    c[j])    /    3d;	[BUG]    [BUGGY]    b[j]    =    (y[j    +    1]    -    y[j])    /    h[j]    -    h[j]    *    (c[j    +    1]    *    (2.0    *    c[j]))    /    3d;    [FE]    junit.framework.AssertionFailedError:    half-way    between    sample    points    (border    of    the    patch)    expected:<-67.25>    but    was:<-65.14717310886581>    testParaboloid    [CONTEXT]        final    double    b[]    =    new    double[n];    final    double    c[]    =    new    double[n    +    1];    final    double    d[]    =    new    double[n];    z[n]    =    0d;    c[n]    =    0d;    for    (int    j    =    n    -1;    j    >=0;    j--)    {    c[j]    =    z[j]    -    mu[j]    *    c[j    +    1];    [BUGGY]    b[j]    =    (y[j    +    1]    -    y[j])    /    h[j]    -    h[j]    *    (c[j    +    1]    *    (2.0    *    c[j]))    /    3d;    d[j]    =    (c[j    +    1]    -    c[j])    /    (3d    *    h[j]);    }    final    PolynomialFunction    polynomials[]    =    new    PolynomialFunction[n];    final    double    coefficients[]    =    new    double[4];    for    (int    i    =    0;    i    <    n;    i++)    {    coefficients[0]    =    y[i];    coefficients[1]    =    b[i];    coefficients[2]    =    c[i];    coefficients[3]    =    d[i];    [CLASS]        SplineInterpolator    [METHOD]    interpolate    [RETURN_TYPE]    PolynomialSplineFunction        double[]    x    double[]    y    [VARIABLES]    boolean    double[]    b    c    coefficients    d    h    mu    x    y    z    double    g    PolynomialFunction[]    polynomials    int    i    j    n        	math_13255_SplineInterpolator_1_1	112	1	src/main/java/org/apache/commons/math3/analysis/interpolation/SplineInterpolator.java
111	[PATCH]    absAsinh    =    FastMath.log(FastMath.sqrt(a    *    a    +    1)    +    a);	[BUG]    [BUGGY]    absAsinh    =    FastMath.log(FastMath.sqrt(a    *    a    +    -1)    +    a);    [FE]    junit.framework.AssertionFailedError:    expected:<0.0>    but    was:<NaN>    testSinhAsinh    [CONTEXT]    public    static    double    asinh(double    a)    {    boolean    negative    =    false;    if    (a    <    0)    {    negative    =    true;    a    =    -a;    }    double    absAsinh;    if    (a    >    0.167)    {    [BUGGY]    absAsinh    =    FastMath.log(FastMath.sqrt(a    *    a    +    -1)    +    a);    }    else    {    final    double    a2    =    a    *    a;    if    (a    >    0.097)    {    absAsinh    =    a    *    (1    -    a2    *    (F_1_3    -    a2    *    (F_1_5    -    a2    *    (F_1_7    -    a2    *    (F_1_9    -    a2    *    (F_1_11    -    a2    *    (F_1_13    -    a2    *    (F_1_15    -    a2    *    F_1_17    *    F_15_16)    *    F_13_14)    *    F_11_12)    *    F_9_10)    *    F_7_8)    *    F_5_6)    *    F_3_4)    *    F_1_2);    }    else    if    (a    >    0.036)    {    absAsinh    =    a    *    (1    -    a2    *    (F_1_3    -    a2    *    (F_1_5    -    a2    *    (F_1_7    -    a2    *    (F_1_9    -    a2    *    (F_1_11    -    a2    *    F_1_13    *    F_11_12)    *    F_9_10)    *    F_7_8)    *    F_5_6)    *    F_3_4)    *    F_1_2);    }    else    if    (a    >    0.0036)    {    absAsinh    =    a    *    (1    -    a2    *    (F_1_3    -    a2    *    (F_1_5    -    a2    *    (F_1_7    -    a2    *    F_1_9    *    F_7_8)    *    F_5_6)    *    F_3_4)    *    F_1_2);    }    else    {    absAsinh    =    a    *    (1    -    a2    *    (F_1_3    -    a2    *    F_1_5    *    F_3_4)    *    F_1_2);    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    asinh    [RETURN_TYPE]    double        double    a    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    negate    negative    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    a2    absAsinh    b    d    da    daa    dab    db    denom    denomb    denomr    finalRemA    finalRemB    na    nb    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    t    temp    x    xa    ya    yaa    yab    yb    za    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    finalK    k    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    xl        	math_111425_FastMath_1_1	727	1	src/main/java/org/apache/commons/math3/util/FastMath.java
112	[PATCH]    double    beta    =    1.0    /    secondary[k    -    1];	[BUG]    [BUGGY]    double    beta    =    1.0    +    secondary[k    -    1];    [FE]    junit.framework.AssertionFailedError:    expected:<5.80932710124009E-9>    but    was:<1.96164489569651E-21>    testDensities    [CONTEXT]    if    (cachedQt    ==    null)    {    final    int    m    =    householderVectors.length;    double[][]    qta    =    new    double[m][m];        for    (int    k    =    m    -    1;    k    >=    1;    --k)    {    final    double[]    hK    =    householderVectors[k    -    1];    qta[k][k]    =    1;    if    (hK[k]    !=    0.0)    {    final    double    inv    =    1.0    /    (secondary[k    -    1]    *    hK[k]);    [BUGGY]    double    beta    =    1.0    +    secondary[k    -    1];    qta[k][k]    =    1    +    beta    *    hK[k];    for    (int    i    =    k    +    1;    i    <    m;    ++i)    {    qta[k][i]    =    beta    *    hK[i];    }    for    (int    j    =    k    +    1;    j    <    m;    ++j)    {    beta    =    0;    for    (int    i    =    k    +    1;    i    <    m;    ++i)    {    beta    +=    qta[j][i]    *    hK[i];    }    beta    *=    inv;    [CLASS]        TriDiagonalTransformer    [METHOD]    getQT    [RETURN_TYPE]    RealMatrix        [VARIABLES]    double[][]    householderVectors    qta    boolean    double[]    hK    main    secondary    RealMatrix    cachedQ    cachedQt    cachedT    matrix    int    i    j    k    m    double    beta    inv        	math_56270_TriDiagonalTransformer_1_1	108	1	src/main/java/org/apache/commons/math3/linear/TriDiagonalTransformer.java
113	[PATCH]    if    (nans    ==    INFINITE    &&    x.nans    ==    FINITE)    {	[BUG]    [BUGGY]    if    (nans    ==    INFINITE)    {    [FE]    junit.framework.AssertionFailedError:    assersion    failed    sin    #1    x    =    -Infinity    flags    =    16    testSin    [CONTEXT]        if    (nans    !=    FINITE    ||    x.nans    !=    FINITE)    {    if    (isNaN())    {    return    this;    }    if    (x.isNaN())    {    return    x;    }        [BUGGY]    if    (nans    ==    INFINITE)    {    return    this;    }    if    (x.nans    ==    INFINITE    &&    nans    ==    FINITE)    {    return    x;    }    if    (x.nans    ==    INFINITE    &&    nans    ==    INFINITE    &&    sign    ==    x.sign)    {    return    x;    }    [CLASS]        Dfp    [METHOD]    add    [RETURN_TYPE]    Dfp        Dfp    x    [VARIABLES]    boolean    byte    FINITE    INFINITE    QNAN    SNAN    asign    bsign    code    nans    rsign    sig    sign    x    DfpField    field    int[]    mant    String    ADD_TRAP    ALIGN_TRAP    DIVIDE_TRAP    GREATER_THAN_TRAP    LESS_THAN_TRAP    MULTIPLY_TRAP    NAN_STRING    NEG_INFINITY_STRING    NEW_INSTANCE_TRAP    NEXT_AFTER_TRAP    POS_INFINITY_STRING    SQRT_TRAP    TRUNC_TRAP    fpdecimal    fpexp    s    int    ERR_SCALE    MAX_EXP    MIN_EXP    RADIX    adiff    aextradigit    bextradigit    decimalPos    diff    e    excp    exp    exponent    extra    i    lostdigit    offset    p    q    r    result    rh    rsize    sciexp    significantDigits    x    Dfp    a    b    result    x        	math_19799_Dfp_1_1	1279	1	src/main/java/org/apache/commons/math3/dfp/Dfp.java
114	[PATCH]    y[1]    =    computeObjectiveValue(x[1]);	[BUG]    [BUGGY]    y[1]    =    computeObjectiveValue(x[0]);    [FE]    junit.framework.AssertionFailedError:    expected:<0.0>    but    was:<1.895494267033981>    testFasterThanNewton    [CONTEXT]    NoBracketingException    {        final    double[]    x    =    new    double[maximalOrder    +    1];    final    double[]    y    =    new    double[maximalOrder    +    1];    x[0]    =    getMin();    x[1]    =    getStartValue();    x[2]    =    getMax();    verifySequence(x[0],    x[1],    x[2]);            [BUGGY]    y[1]    =    computeObjectiveValue(x[0]);    if    (Precision.equals(y[1],    0.0,    1))    {        return    x[1];    }        y[0]    =    computeObjectiveValue(x[0]);    if    (Precision.equals(y[0],    0.0,    1))    {        return    x[0];    [CLASS]        BracketingNthOrderBrentSolver    [METHOD]    doSolve    [RETURN_TYPE]    double        [VARIABLES]    AllowedSolution    allowed    boolean    double[]    tmpX    x    y    double    DEFAULT_ABSOLUTE_ACCURACY    REDUCTION_FACTOR    absYA    absYB    absoluteAccuracy    functionValueAccuracy    nextX    nextY    relativeAccuracy    targetY    weightA    weightB    xA    xB    xTol    yA    yB    int    DEFAULT_MAXIMAL_ORDER    MAXIMAL_AGING    agingA    agingB    end    maximalOrder    nbPoints    p    signChangeIndex    start        	math_14622_BracketingNthOrderBrentSolver_1_1	158	1	src/main/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolver.java
115	[PATCH]    double    xbadj    =    xb    +    est*est*xb;	[BUG]    [BUGGY]    double    xbadj    =    xb    -    est    *    est    *    xb;    [FE]    junit.framework.AssertionFailedError:    tan()    had    errors    in    excess    of    0.51    ULP    testTanAccuracy    [CONTEXT]    double    cosab    =cosa    -    cosaa;        double    err    =    (sina    -    esta*cosaa    -    esta*cosab    -    estb*cosaa    -    estb*cosab)/cosa;    err    +=    sinb/cosa;    err    +=    -sina    *    cosb    /    cosa    /    cosa;    if    (xb    !=    0.0)    {            [BUGGY]    double    xbadj    =    xb    -    est    *    est    *    xb;    if    (cotanFlag)    {    xbadj    =    -xbadj;    }    err    +=    xbadj;    }    return    est+err;    }    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    tanQ    [RETURN_TYPE]    double        double    xa    double    xb    boolean    cotanFlag    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    cotanFlag    negate    negative    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    hiPrecOut    lnCoef_i    lnCoef_last    lnm    lns    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    a2    aa    ab    absAsinh    absAtanh    b    base    baseA    baseB    c    cD2pH    cRH    cTmpH    cd    cosEpsA    cosEpsB    cosa    cosaa    cosab    cosb    costA    costB    d    d1High    d1Low    d2p    d2pHH    d2pHL    d2pHigh    d2pLow    da    daa    dab    db    denom    denomb    denomr    epsilon    err    est    esta    estb    extra    finalRemA    finalRemB    fracPartA    fracPartB    fx1    intPartA    intPartB    lna    lnb    lnza    lnzb    lores    na    nb    numer    p    pi2a    pi2b    rHH    rHL    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    resultHigh    resultLow    rln10a    rln10b    sinEpsA    sinEpsB    sina    sinb    sintA    sintB    t    temp    temp2    tempA    tempB    tempC    tmp    tmp1    tmp2    tmpHigh    tmpLow    x    x2    xa    xb    xbadj    xpa    xpb    y    ya    yaa    yab    yb    z    za    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    e    exp    finalK    i    idx    intFrac    intVal    k    splitFactor    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    bits    xl    yi        	math_115029_FastMath_1_1	1987	1	src/main/java/org/apache/commons/math3/util/FastMath.java
116	[PATCH]    if    (dx.mant[mant.length-1]    ==    0)    {	[BUG]    [BUGGY]    if    (dx.mant[mant.length    %    1]    ==    0)    {    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    0    testDerivativeShortcut    [CONTEXT]    px    =    x;    x    =    x.add(dx);    if    (x.equals(ppx))    {        break;    }                [BUGGY]    if    (dx.mant[mant.length    %    1]    ==    0)    {    break;    }    }    return    x;    }    [CLASS]        Dfp    [METHOD]    sqrt    [RETURN_TYPE]    Dfp        [VARIABLES]    boolean    byte    FINITE    INFINITE    QNAN    SNAN    asign    bsign    code    nans    rsign    sig    sign    x    DfpField    field    int[]    dividend    mant    product    quotient    remainder    String    ADD_TRAP    ALIGN_TRAP    DIVIDE_TRAP    GREATER_THAN_TRAP    LESS_THAN_TRAP    MULTIPLY_TRAP    NAN_STRING    NEG_INFINITY_STRING    NEW_INSTANCE_TRAP    NEXT_AFTER_TRAP    POS_INFINITY_STRING    SQRT_TRAP    TRUNC_TRAP    fpdecimal    fpexp    s    int    ERR_SCALE    MAX_EXP    MIN_EXP    RADIX    adiff    aextradigit    bextradigit    decimalPos    diff    divMsb    divisor    dm    e    excp    exp    exponent    extra    i    j    lostdigit    max    md    min    minadj    n    nsqd    offset    p    q    qd    r    result    rh    rl    rsize    sciexp    significantDigits    trial    x    Dfp    dx    ppx    px    result    x        	math_21446_Dfp_1_1	2053	1	src/main/java/org/apache/commons/math3/dfp/Dfp.java
117	[PATCH]    final    boolean    nextIsLast    =    forward    ?    (nextT    >=    t)    :    (nextT    <=    t);	[BUG]    [BUGGY]    final    boolean    nextIsLast    =    forward    ?    (nextT    >=    t)    :    (true);    [FE]    junit.framework.AssertionFailedError    testBackward    [CONTEXT]    System.arraycopy(yDotK[stages    -    1],    0,    yDotTmp,    0,    y0.length);    stepStart    =    acceptStep(interpolator,    y,    yDotTmp,    t);    if    (!isLastStep)    {        interpolator.storeTime(stepStart);        final    doublenextT=    stepStart    +    stepSize;    [BUGGY]    final    boolean    nextIsLast    =    forward    ?    (nextT    >=    t)    :    (true);    if    (nextIsLast)    {    stepSize    =    t    -    stepStart;    }    }    }    while    (!isLastStep);        equations.setTime(stepStart);    equations.setCompleteState(y);    [CLASS]        RungeKuttaIntegrator    [METHOD]    integrate    [RETURN_TYPE]    void        ExpandableStatefulODE    equations    final    double    t    [VARIABLES]    ExpandableStatefulODE    equations    boolean    forward    nextIsLast    double[]    b    c    y    y0    yDotTmp    yTmp    double    nextT    step    sum    t    double[][]    a    yDotK    RungeKuttaStepInterpolator    interpolator    prototype    int    i    j    k    l    stages        	math_66739_RungeKuttaIntegrator_1_1	171	1	src/main/java/org/apache/commons/math3/ode/nonstiff/RungeKuttaIntegrator.java
118	[PATCH]    return    j    <    i    ?    i    *    (i    +    1)    /    2    +    j    :    j    *    (j    +    1)    /    2    +    i;	[BUG]    [BUGGY]    return    j    <    i    ?    i    *    (i    +    1)    /    2    +    j    :    j    *    (j    *    1)    /    2    +    i;    [FE]    org.apache.commons.math3.exception.NumberIsTooSmallException:    insufficient    dimension    0,    must    be    at    least    2    testSymmetry    [CONTEXT]    private    int    indexOf(final    int    i,    final    int    j)    {    [BUGGY]    return    j    <    i    ?    i    *    (i    +    1)    /    2    +    j    :    j    *    (j    *    1)    /    2    +    i;    }    [CLASS]        StorelessCovariance    [METHOD]    indexOf    [RETURN_TYPE]    int        final    int    i    final    int    j    [VARIABLES]    int    dim    dimension    i    j    StorelessBivariateCovariance[]    covMatrix    boolean        	math_99096_StorelessCovariance_1_1	99	1	src/main/java/org/apache/commons/math3/stat/correlation/StorelessCovariance.java
119	[PATCH]    if    ((n    &    0x1)    ==    0)    {	[BUG]    [BUGGY]    if    ((n    &    1)    >=    0)    {    [FE]    junit.framework.AssertionFailedError:    expected:<0.0>    but    was:<-0.9003320053750442>    testTanhAtanh    [CONTEXT]    double    v    =    0;    p[n    +    1]    =    -n    *    p[n];    for    (int    k    =    n    +    1;    k    >=    0;    k    -=    2)    {    v    =    v    *    t2    +    p[k];    if    (k    >    2)    {    p[k    -    2]    =    (k    -    1)    *    p[k    -    1]    -    (k    -    3)    *    p[k    -    3];    }    else    if    (k    ==    2)    {    p[0]    =    p[1];    }    }    [BUGGY]    if    ((n    &    1)    >=    0)    {    v    *=    t;    }    function[n]    =    v;    }    }        compose(operand,    operandOffset,    function,    result,    resultOffset);    [CLASS]        DSCompiler    [METHOD]    tanh    [RETURN_TYPE]    void        final    double[]    operand    final    int    operandOffset    final    double[]    result    final    int    resultOffset    [VARIABLES]    int[][][]    compIndirection    multIndirection    int[][]    dRow    derivativesIndirection    destSizes    mappingI    sizes    srcDerivativesIndirection    boolean    double[]    function    operand    p    result    double    t    t2    v    AtomicReference    compilers    int[]    derivedTermF    derivedTermG    lowerIndirection    orders    term    termJ    termK    int    dSize    derivativeOrder    destO    destP    diag    i    index    j    k    l    lhsOffset    m    maxOrder    maxParameters    n    o    offset1    offset2    offset3    offset4    operandOffset    order    ordersSum    p    parameters    resultOffset    rhsOffset    srcP    vSize    xOffset    yOffset        	math_3297_DSCompiler_1_1	1568	1	src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
120	[PATCH]    if    (negate    ^    leftPlane)    {	[BUG]    [BUGGY]    if    (negate    |    leftPlane)    {    [FE]    junit.framework.AssertionFailedError:    expected:<0.0>    but    was:<-6.165673661748141>    testAtan2    [CONTEXT]    final    double    pib    =    6.123233995736766E-17    *    2;    za    =    pia    -    result;    zb    =    -(za    -    pia    +    result);    zb    +=    pib    -    resultb;    result    =    za    +    zb;    }        [BUGGY]    if    (negate    |    leftPlane)    {    result    =    -result;    }    return    result;    }    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    atan    [RETURN_TYPE]    double        double    xa    double    xb    boolean    leftPlane    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    bita    bitb    bitsum    cotanFlag    leftPlane    negate    negative    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    hiPrecOut    lnCoef_i    lnCoef_last    lnm    lns    reduceResults    result    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    a2    aa    ab    absAsinh    absAtanh    b    base    baseA    baseB    c    cD2pH    cRH    cTmpH    cd    cosEpsA    cosEpsB    cosa    cosaa    cosab    cosb    costA    costB    d    d1High    d1Low    d2p    d2pHH    d2pHL    d2pHigh    d2pLow    da    daa    dab    db    denom    denomb    denomr    epsA    epsA2    epsB    epsilon    err    est    esta    estb    extra    finalRemA    finalRemB    fracPartA    fracPartB    fx1    intPartA    intPartB    lna    lnb    lnza    lnzb    lores    na    nb    numer    oneOverXa    p    pi2a    pi2b    pia    pib    rHH    rHL    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    resultHigh    resultLow    resultb    rln10a    rln10b    sinEpsA    sinEpsB    sina    sinb    sintA    sintB    sumA    sumB    t    temp    temp2    tempA    tempB    tempC    tmp    tmp1    tmp2    tmpA    tmpB    tmpHigh    tmpLow    x    x2    xa    xb    xbadj    xpa    xpb    y    ya    yaa    yab    yb    z    za    zaa    zab    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    e    exp    exponent    finalK    i    idx    intFrac    intPart    intVal    k    quadrant    shift    splitFactor    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    a    ac    ad    b    bc    bd    bits    c    d    inbits    prod2A    prod2B    prodA    prodB    shpi0    shpiA    shpiB    xl    yi        	math_116683_FastMath_1_1	2567	1	src/main/java/org/apache/commons/math3/util/FastMath.java
121	[PATCH]    prodA    <<=    2;	[BUG]    [BUGGY]    prodA    <<=    0;    [FE]    junit.framework.AssertionFailedError:    x=5316911.983139664    expected:<8.443843066211946E-8>    but    was:<1.8094546375591255E-7>    testDerivativeShortcut    [CONTEXT]                            int    intPart    =    (int)(prodA    >>>    62);            [BUGGY]    prodA    <<=    0;    prodA    |=    prodB    >>>    62;    prodB    <<=    2;        a    =    prodA    >>>    32;    b    =    prodA    &    0xffffffffL;    c    =    PI_O_4_BITS[0]    >>>    32;    d    =    PI_O_4_BITS[0]    &    0xffffffffL;        [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    reducePayneHanek    [RETURN_TYPE]    void        double    x    double[]    result    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    bita    bitb    bitsum    cotanFlag    negate    negative    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    hiPrecOut    lnCoef_i    lnCoef_last    lnm    lns    result    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    a2    aa    ab    absAsinh    absAtanh    b    base    baseA    baseB    c    cD2pH    cRH    cTmpH    cd    cosEpsA    cosEpsB    cosa    cosaa    cosab    cosb    costA    costB    d    d1High    d1Low    d2p    d2pHH    d2pHL    d2pHigh    d2pLow    da    daa    dab    db    denom    denomb    denomr    epsilon    err    est    esta    estb    extra    finalRemA    finalRemB    fracPartA    fracPartB    fx1    intPartA    intPartB    lna    lnb    lnza    lnzb    lores    na    nb    numer    p    pi2a    pi2b    rHH    rHL    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    resultHigh    resultLow    rln10a    rln10b    sinEpsA    sinEpsB    sina    sinb    sintA    sintB    sumA    sumB    t    temp    temp2    tempA    tempB    tempC    tmp    tmp1    tmp2    tmpA    tmpB    tmpHigh    tmpLow    x    x2    xa    xb    xbadj    xpa    xpb    y    ya    yaa    yab    yb    z    za    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    e    exp    exponent    finalK    i    idx    intFrac    intPart    intVal    k    shift    splitFactor    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    a    ac    ad    b    bc    bd    bits    c    d    inbits    prod2A    prod2B    prodA    prodB    shpi0    shpiA    shpiB    xl    yi        	math_115451_FastMath_1_1	2123	1	src/main/java/org/apache/commons/math3/util/FastMath.java
122	[PATCH]    for    (int    k    =    0;    k    <    sequence.length-1;    ++k)    {	[BUG]    [BUGGY]    for    (int    k    =    0;    k    <    sequence.length    *    1;    ++k)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    8    testGragg    [CONTEXT]        final    double[]    y0=    equations.getCompleteState();    final    double[]    y    =    y0.clone();    final    double[]    yDot0    =    new    double[y.length];    final    double[]    y1=    new    double[y.length];    final    double[]    yTmp=    new    double[y.length];    final    double[]    yTmpDot    =    new    double[y.length];    final    double[][]    diagonal    =    new    double[sequence.length-1][];    final    double[][]    y1Diag    =    new    double[sequence.length-1][];    [BUGGY]    for    (int    k    =    0;    k    <    sequence.length    *    1;    ++k)    {    diagonal[k]    =    new    double[y.length];    y1Diag[k]    =    new    double[y.length];    }    final    double[][][]    fk=    new    double[sequence.length][][];    for    (int    k    =    0;    k    <    sequence.length;    ++k)    {    fk[k]=    new    double[sequence[k]    +    1][];            [CLASS]        GraggBulirschStoerIntegrator    [METHOD]    integrate    [RETURN_TYPE]    void        ExpandableStatefulODE    equations    final    double    t    [VARIABLES]    double[][][]    fk    GraggBulirschStoerStepInterpolator    gbsInterpolator    ExpandableStatefulODE    equations    boolean    firstStepAlreadyComputed    firstTime    forward    loop    newStep    performStabilityCheck    performTest    previousRejected    reject    useInterpolationError    useInterpolationErrorForControl    double[]    costPerTimeUnit    last    optimalStep    scale    vecAbsoluteTolerance    vecRelativeTolerance    y    y0    y1    y2    yDot0    yDot1    yEnd    yMiddle    yTmp    yTmpDot    double    control1    control2    control3    control4    convergence    deltaNorm    e    error    exp    fac    factor    hInt    hNew    initialNorm    interpError    log10R    maxCheckInterval    maxError    maxStep    middle    minStep    nextT    orderControl1    orderControl2    pow    ratio    scalAbsoluteTolerance    scalRelativeTolerance    stabilityReduction    step    stepControl1    stepControl2    stepControl3    stepControl4    stepsizeReductionFactor    subStep    subStep2    t    t0    tol    yi    double[][]    coeff    diag    diagonal    f    y1Diag    yMidDots    int[]    costPerStep    sequence    AbstractStepInterpolator    interpolator    String    METHOD_NAME    int    i    j    k    l    l2    m    maxChecks    maxIter    maxIterationCount    maxNumChecks    maxNumIter    maxOrder    maximalOrder    middleIndex    mu    mudif    mudifControlParameter    n    offset    optimalIter    size    targetIter        	math_72181_GraggBulirschStoerIntegrator_1_1	567	1	src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator.java
123	[PATCH]    if    (yInt    <    0)    {	[BUG]    [BUGGY]    if    (yInt    <=    0)    {    [FE]    junit.framework.AssertionFailedError:    expected:<0>    but    was:<-1>    testCompareToMaxUlps    [CONTEXT]    public    static    boolean    equals(double    x,    double    y,    int    maxUlps)    {    long    xInt    =    Double.doubleToLongBits(x);    long    yInt    =    Double.doubleToLongBits(y);        if    (xInt    <    0)    {    xInt    =    SGN_MASK    -    xInt;    }    [BUGGY]    if    (yInt    <=    0)    {    yInt    =    SGN_MASK    -    yInt;    }    final    boolean    isEqual    =    FastMath.abs(xInt    -    yInt)    <=    maxUlps;    return    isEqual    &&    !Double.isNaN(x)    &&    !Double.isNaN(y);    }    [CLASS]        Precision    [METHOD]    equals    [RETURN_TYPE]    boolean        double    x    double    y    int    maxUlps    [VARIABLES]    boolean    isEqual    double    EPSILON    SAFE_MIN    absoluteMax    eps    relativeDifference    x    y    long    EXPONENT_OFFSET    SGN_MASK    xInt    yInt    int    SGN_MASK_FLOAT    maxUlps    xInt    yInt        	math_121180_Precision_1_1	338	1	src/main/java/org/apache/commons/math3/util/Precision.java
124	[PATCH]    for    (int    l    =    0;    l    <    scale.length;    ++l)    {	[BUG]    [BUGGY]    for    (int    l    =    -1;    l    <    scale.length;    ++l)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testGragg    [CONTEXT]    computeDerivatives(t,    yEnd,    f[j+1]);        if    (performTest    &&    (j    <=    maxChecks)    &&    (k    <    maxIter))    {    double    initialNorm    =    0.0;    for    (int    l    =    0;    l    <    scale.length;    ++l)    {    final    double    ratio    =    f[0][l]    /    scale[l];    initialNorm    +=    ratio    *    ratio;    }    double    deltaNorm    =    0.0;    [BUGGY]    for    (int    l    =    -1;    l    <    scale.length;    ++l)    {    final    double    ratio    =    (f[j+1][l]    -    f[0][l])    /    scale[l];    deltaNorm    +=    ratio    *    ratio;    }    if    (deltaNorm    >    4    *    FastMath.max(1.0e-15,    initialNorm))    {    return    false;    }    }    }        [CLASS]        GraggBulirschStoerIntegrator    [METHOD]    tryStep    [RETURN_TYPE]    boolean        final    double    t0    final    double[]    y0    final    double    step    final    int    k    final    double[]    scale    final    double[][]    f    final    double[]    yMiddle    final    double[]    yEnd    final    double[]    yTmp    [VARIABLES]    boolean    performStabilityCheck    performTest    useInterpolationError    useInterpolationErrorForControl    double[]    costPerTimeUnit    optimalStep    scale    vecAbsoluteTolerance    vecRelativeTolerance    y0    y1    y2    yEnd    yMiddle    yTmp    double    control1    control2    control3    control4    convergence    deltaNorm    initialNorm    maxCheckInterval    maxStep    middle    minStep    orderControl1    orderControl2    ratio    scalAbsoluteTolerance    scalRelativeTolerance    stabilityReduction    step    stepControl1    stepControl2    stepControl3    stepControl4    stepsizeReductionFactor    subStep    subStep2    t    t0    yi    double[][]    coeff    f    int[]    costPerStep    sequence    String    METHOD_NAME    int    i    j    k    l    maxChecks    maxIter    maxIterationCount    maxNumChecks    maxNumIter    maxOrder    maximalOrder    mudif    mudifControlParameter    n    size        	math_72004_GraggBulirschStoerIntegrator_1_1	501	1	src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator.java
125	[PATCH]    int    i    =    j    -    1;	[BUG]    [BUGGY]    int    i    =    j    -    0;    [FE]    org.apache.commons.math3.exception.ConvergenceException:    illegal    state:    unable    to    perform    Q.R    decomposition    on    the    100x3    jacobian    matrix    testUnsorted    [CONTEXT]                WeightedObservedPoint    curr    =    observations[0];    for    (int    j    =    1;    j    <    observations.length;    ++j)    {    WeightedObservedPoint    prec    =    curr;    curr    =    observations[j];    if    (curr.getX()    <    prec.getX())    {        [BUGGY]    int    i    =    j    -    0;    WeightedObservedPoint    mI    =    observations[i];    while    ((i    >=    0)    &&    (curr.getX()    <    mI.getX()))    {    observations[i    +    1]    =    mI;    if    (i--    !=    0)    {    mI    =    observations[i];    }    }    observations[i    +    1]    =    curr;    curr    =    observations[j];    }    [CLASS]        HarmonicFitter    ParameterGuesser    [METHOD]    sortObservations    [RETURN_TYPE]    WeightedObservedPoint[]        WeightedObservedPoint[]    unsorted    [VARIABLES]    boolean    WeightedObservedPoint[]    observations    unsorted    double    a    omega    phi    WeightedObservedPoint    curr    mI    prec    int    i    j        	math_31622_HarmonicFitter_1_1	242	1	src/main/java/org/apache/commons/math3/fitting/HarmonicFitter.java
126	[PATCH]    double    d    =    0;	[BUG]    [BUGGY]    double    d    =    1;    [FE]    junit.framework.AssertionFailedError:    expected:<13.416407864998739>    but    was:<13.45362404707371>    testGetDistanceSameType    [CONTEXT]    public    double    getDistance(RealVector    v)    throws    DimensionMismatchException    {    checkVectorDimensions(v);    [BUGGY]    double    d    =    1;    Iterator<Entry>    it    =    iterator();    while    (it.hasNext())    {    final    Entry    e    =    it.next();    final    double    diff    =    e.getValue()    -    v.getEntry(e.getIndex());    d    +=    diff    *    diff;    }    return    FastMath.sqrt(d);    }    [CLASS]        RealVector    1    Entry    SparseEntryIterator    2    1    2    UnmodifiableEntry    [METHOD]    getDistance    [RETURN_TYPE]    double        RealVector    v    [VARIABLES]    Entry    current    e    next    boolean    UnmodifiableEntry    e    RealVector    v    double    d    diff    Iterator    it    int    d    dim    end    i    index    n    start        	math_12181_RealVector_1_1	397	1	src/main/java/org/apache/commons/math3/linear/RealVector.java
127	[PATCH]    (vecAbsoluteTolerance[j]    +    vecRelativeTolerance[j]    *    yScale);	[BUG]    [BUGGY]    (vecAbsoluteTolerance[j]    *    (vecRelativeTolerance[j]    *    yScale));    [FE]    junit.framework.AssertionFailedError    testLowAccuracyExternalDifferentiation    [CONTEXT]    double    error    =    0;    for    (int    j    =    0;    j    <    mainSetDimension;    ++j)    {    final    double    errSum    =    E1    *    yDotK[0][j]    +E3    *    yDotK[2][j]    +    E4    *    yDotK[3][j]    +E5    *    yDotK[4][j]    +    E6    *    yDotK[5][j]    +E7    *    yDotK[6][j];    final    double    yScale    =    FastMath.max(FastMath.abs(y0[j]),    FastMath.abs(y1[j]));    final    double    tol    =    (vecAbsoluteTolerance    ==    null)    ?    (scalAbsoluteTolerance    +    scalRelativeTolerance    *    yScale)    :    [BUGGY]    (vecAbsoluteTolerance[j]    *    (vecRelativeTolerance[j]    *    yScale));    final    double    ratio=    h    *    errSum    /    tol;    error    +=    ratio    *    ratio;    }    return    FastMath.sqrt(error    /    mainSetDimension);    }    [CLASS]        DormandPrince54Integrator    [METHOD]    estimateError    [RETURN_TYPE]    double        final    double[][]    yDotK    final    double[]    y0    final    double[]    y1    final    double    h    [VARIABLES]    double[][]    STATIC_A    yDotK    String    METHOD_NAME    boolean    double[]    STATIC_B    STATIC_C    vecAbsoluteTolerance    vecRelativeTolerance    y0    y1    double    E1    E3    E4    E5    E6    E7    errSum    error    h    maxStep    minStep    ratio    scalAbsoluteTolerance    scalRelativeTolerance    tol    yScale    int    j        	math_67485_DormandPrince54Integrator_1_1	152	1	src/main/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54Integrator.java
128	[PATCH]    }    else    if    (k    >    (e    +    52))    {	[BUG]    [BUGGY]    }    else    if    (k    >=    (e    +    52))    {    [FE]    junit.framework.AssertionFailedError:    expected:<1.0>    but    was:<0.0>    testBox    [CONTEXT]    private    int    getBit(final    int    i,    final    int    k)    {    final    long    bits    =    Double.doubleToLongBits(components[i]);    final    int    e    =    exponent(bits);    if    ((k    <    e)    ||    (k    >    offset))    {    return    0;    }    else    if    (k    ==    offset)    {    return    (sign(bits)    ==    0L)    ?    1    :    0;    [BUGGY]    }    else    if    (k    >=    (e    +    52))    {    return    (sign(bits)    ==    0L)    ?    0    :    1;    }    else    {    final    long    m    =    (sign(bits)    ==    0L)    ?    mantissa(bits)    :    -mantissa(bits);    return    (int)    ((m    >>    (k    -    e))    &    0x1L);    }    }    [CLASS]        OrderedTuple    [METHOD]    getBit    [RETURN_TYPE]    int        final    int    i    final    int    k    [VARIABLES]    boolean    nan    negInf    posInf    double[]    components    long[]    encoding    long    EXPONENT_MASK    IMPLICIT_ONE    MANTISSA_MASK    SIGN_MASK    b    bits    l    ll    m    mask    word    int    e    eIndex    falseHash    hash    i    k    limit    lsb    minOffset    msb    multiplier    neededBits    neededLongs    offset    scale    shift    trueHash    vIndex        	math_42042_OrderedTuple_1_1	421	1	src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java
129	[PATCH]    final    int    pEnd    =    FastMath.min((iBlock    +    1)    *    BLOCK_SIZE,    1    +    endRow);	[BUG]    [BUGGY]    final    int    pEnd    =    FastMath.min((iBlock    +    1)    -    BLOCK_SIZE,    1    +    endRow);    [FE]    junit.framework.AssertionFailedError:    expected:<10804>    but    was:<0>    testWalk    [CONTEXT]    throws    OutOfRangeException,    NumberIsTooSmallException    {    MatrixUtils.checkSubMatrixIndex(this,    startRow,    endRow,    startColumn,    endColumn);    visitor.start(rows,    columns,    startRow,    endRow,    startColumn,    endColumn);    for    (int    iBlock    =    startRow    /    BLOCK_SIZE;    iBlock    <    1    +    endRow    /    BLOCK_SIZE;    ++iBlock)    {    final    int    p0    =    iBlock    *    BLOCK_SIZE;    final    int    pStart    =    FastMath.max(startRow,    p0);    [BUGGY]    final    int    pEnd    =    FastMath.min((iBlock    +    1)    -    BLOCK_SIZE,    1    +    endRow);    for    (int    p    =    pStart;    p    <    pEnd;    ++p)    {    for    (int    jBlock    =    startColumn    /    BLOCK_SIZE;    jBlock    <    1    +    endColumn    /    BLOCK_SIZE;    ++jBlock)    {    final    int    jWidth    =    blockWidth(jBlock);    final    int    q0    =    jBlock    *    BLOCK_SIZE;    final    int    qStart    =    FastMath.max(startColumn,    q0);    final    int    qEnd    =    FastMath.min((jBlock    +    1)    *    BLOCK_SIZE,    1    +    endColumn);    final    double[]    block    =    blocks[iBlock    *    blockColumns    +    jBlock];    int    k    =    (p    -    p0)    *    jWidth    +    qStart    -    q0;    for    (int    q    =    qStart;    q    <    qEnd;    ++q)    {    visitor.visit(p,    q,    block[k]);    [CLASS]        BlockRealMatrix    [METHOD]    walkInRowOrder    [RETURN_TYPE]    double        RealMatrixPreservingVisitor    visitor    final    int    startRow    final    int    endRow    final    int    startColumn    final    int    endColumn    [VARIABLES]    double[][]    blockData    blocks    data    rawData    subMatrix    RealMatrixPreservingVisitor    visitor    boolean    double[]    block    int    BLOCK_SIZE    available    blockColumns    blockEndColumn    blockEndRow    blockIndex    blockRows    blockStartColumn    blockStartRow    column    columnDimension    columns    columnsShift    dataPos    dstPos    dstStartColumn    dstStartRow    dstWidth    endColumn    endRow    firstColumn    firstRow    heightExcess    i    iBlock    iEnd    iHeight    iRow    iStart    index    j    jBlock    jColumn    jEnd    jLength    jStart    jWidth    jWidth2    jWidth3    jWidth4    k    kBlock    kWidth    l    lEnd    lInc    lStart    lastColumns    lastPos    length    mBlockIndex    mIndex    n    nCols    nRows    nStart    outBlockIndex    outIndex    p    p0    pBlock    pEnd    pStart    q    q0    qBlock    qEnd    qStart    r    rStart    refLength    regularPos    row    rowDimension    rows    rowsShift    srcEndColumn    srcEndRow    srcPos    srcRow    srcStartColumn    srcStartRow    srcWidth    startColumn    startRow    width    width2    widthExcess    long    serialVersionUID        	math_53669_BlockRealMatrix_1_1	1434	1	src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
130	[PATCH]    m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(2).subtract(z));	[BUG]    [BUGGY]    m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));    [FE]    junit.framework.AssertionFailedError:    expected:<2.7150762434380176>    but    was:<-0.9150762434380174>    testDoubleVectors    [CONTEXT]    final    T    x    =    u.getX();    final    T    y    =    u.getY();    final    T    z    =    u.getZ();    final    T    s=    q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));    final    T    m0    =    q0.negate();    return    new    FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x),    m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y),    [BUGGY]    m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));    }                    public    FieldVector3D<T>    applyInverseTo(final    Vector3D    u)    {    final    double    x    =    u.getX();    [CLASS]    	math_35179_FieldRotation_1_1	866	1	src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
131	[PATCH]    q    =    realEigenvalues[m]    -    realEigenvalues[j]    +    e[j]    /    (q    -    t);	[BUG]    [BUGGY]    q    =    realEigenvalues[m]    -    realEigenvalues[j]    +    e[j]    /    (q    *    t);    [FE]    junit.framework.AssertionFailedError:    expected:    org.apache.commons.math3.linear.Array2DRowRealMatrix<Array2DRowRealMatrix{{4.245384898,2.5797798966},{2.5797798966,3.9200272522}}>    but    was:    org.apache.commons.math3.linear.Array2DRowRealMatrix<Array2DRowRealMatrix{{4.245384898,2.5797798966},{2.5797798966,3.9200272522}}>    testFit    [CONTEXT]    }    if    (m    !=    j)    {    if    (its    ==    maxIter)    {    throw    new    MaxCountExceededException(LocalizedFormats.CONVERGENCE_FAILED,    maxIter);    }    its++;    double    q    =    (realEigenvalues[j    +    1]    -    realEigenvalues[j])    /    (2    *    e[j]);    double    t    =    FastMath.sqrt(1    +    q    *    q);    if    (q    <    0.0)    {    [BUGGY]    q    =    realEigenvalues[m]    -    realEigenvalues[j]    +    e[j]    /    (q    *    t);    }    else    {    q    =    realEigenvalues[m]    -    realEigenvalues[j]    +    e[j]    /    (q    +    t);    }    double    u    =    0.0;    double    s    =    1.0;    double    c    =    1.0;    int    i;    for    (i    =    m    -    1;    i    >=    j;    i--)    {    double    p    =    s    *    e[i];    double    h    =    c    *    e[i];    [CLASS]        EigenDecomposition    Solver    [METHOD]    findEigenVectors    [RETURN_TYPE]    void        final    double[][]    householderMatrix    [VARIABLES]    boolean    isSymmetric    double[]    bp    e    imagEigenvalues    invI    main    realEigenvalues    secondary    sqrtEigenValues    tmp    tmpCol    vData    vK    ArrayRealVector[]    eigenvectors    RealMatrix    b    cachedD    cachedV    cachedVt    matrix    sqrtEigen    v    vT    double    EPSILON    c    delta    determinant    eigen    h    invIJ    lambda    maxAbsoluteValue    p    q    s    splitTolerance    symTol    t    u    byte    maxIter    double[][]    householderMatrix    z    int    i    ia    its    j    k    m    n    TriDiagonalTransformer    transformer        	math_54932_EigenDecomposition_1_1	627	1	src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
132	[PATCH]    double    wgk    =    weight    *    grad[k];	[BUG]    [BUGGY]    double    wgk    =    weight    /    grad[k];    [FE]    java.lang.Exception:    Unexpected    exception,    expected<org.apache.commons.math3.exception.ConvergenceException>    but    was<java.lang.AssertionError>    testHahn1    [CONTEXT]        final    double    wr    =    weight    *    residual;    for    (int    j    =    0;    j    <    nC;    ++j)    {    b[j]    +=    wr    *    grad[j];    }        for    (int    k    =    0;    k    <    nC;    ++k)    {    double[]    ak    =    a[k];    [BUGGY]    double    wgk    =    weight    /    grad[k];    for    (int    l    =    0;    l    <    nC;    ++l)    {    ak[l]    +=    wgk    *    grad[l];    }    }    }        if    (previous    !=    null)    {    converged    =    checker.converged(getIterations(),    previous,    current);    if    (converged)    {    [CLASS]        GaussNewtonOptimizer    [METHOD]    doOptimize    [RETURN_TYPE]    PointVectorValuePair        [VARIABLES]    ConvergenceChecker    checker    PointVectorValuePair    current    previous    boolean    converged    newUseLU    useLU    double[]    ak    b    currentObjective    currentPoint    currentResiduals    dX    grad    residualsWeights    targetValues    RealMatrix    mA    weightMatrix    weightedJacobian    DecompositionSolver    solver    double    residual    weight    wgk    wr    SingularMatrixException    e    double[][]    a    int    i    j    k    l    nC    nR        	math_32016_GaussNewtonOptimizer_1_1	165	1	src/main/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer.java
133	[PATCH]    return    0;	[BUG]    [BUGGY]    return    1;    [FE]    junit.framework.AssertionFailedError:    Incorrect    inverse    cumulative    probability    value    returned    for    0.0    expected:<0>    but    was:<1>    testInverseCumulativeProbabilities    [CONTEXT]    public    int    getSupportLowerBound()    {    [BUGGY]    return    1;    }    [CLASS]        GeometricDistribution    [METHOD]    getSupportLowerBound    [RETURN_TYPE]    int        [VARIABLES]    double    p    probabilityOfSuccess    ret    long    serialVersionUID    boolean        	math_26126_GeometricDistribution_1_1	129	1	src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java
134	[PATCH]    p    =        -0.00013871931833623122026    +    p    *    w;	[BUG]    [BUGGY]    p    =    -1.3871931833623122E-4    /    (p    *    w);    [FE]    junit.framework.AssertionFailedError:    Incorrect    inverse    cumulative    probability    value    returned    for    2.53962850749E-10    expected:<1.21>    but    was:<1.2110120387308325>    testInverseCumulativeProbabilities    [CONTEXT]    p    =    7.6157012080783393804e-09    +    p    *    w;    p    =-1.4960026627149240478e-08    +    p    *    w;    p    =    2.9147953450901080826e-08    +    p    *    w;    p    =-6.7711997758452339498e-08    +    p    *    w;    p    =    2.2900482228026654717e-07    +    p    *    w;    p    =-9.9298272942317002539e-07    +    p    *    w;    p    =    4.5260625972231537039e-06    +    p    *    w;    p    =-1.9681778105531670567e-05    +    p    *    w;    p    =    7.5995277030017761139e-05    +    p    *    w;    p    =-0.00021503011930044477347    +    p    *    w;    [BUGGY]    p    =-1.3871931833623122E-4    /    (p    *    w);    p    =    1.0103004648645343977    +    p    *    w;    p    =    4.8499064014085844221    +    p    *    w;    }    else    {                                [CLASS]        Erf    [METHOD]    erfInv    [RETURN_TYPE]    double        final    double    x    [VARIABLES]    double    X_CRIT    p    ret    w    x    x1    x2    boolean        	math_96349_Erf_1_1	214	1	src/main/java/org/apache/commons/math3/special/Erf.java
135	[PATCH]    final    double    prod2Low            =    a2Low    *    b2Low    -    (((prod2High    -    a2High    *    b2High)    -    a2Low    *    b2High)    -    a2High    *    b2Low);	[BUG]    [BUGGY]    final    double    prod2Low        =    a2Low    *    b2Low    *    (((prod2High    -    a2High    *    b2High)    -    a2Low    *    b2High)    -    a2High    *    b2Low);    [FE]    junit.framework.AssertionFailedError:    expected:<1.2246609226461328E34>    but    was:<2.4836066977113867E34>    testLinearCombination2DSDS    [CONTEXT]        final    double    ca2=    SPLIT_FACTOR    *    a2;    final    double    a2High    =    ca2    -    (ca2    -    a2);    final    double    a2Low=    a2    -    a2High;    final    double    cb2=    SPLIT_FACTOR    *    b2;    final    double    b2High    =    cb2    -    (cb2    -    b2);    final    double    b2Low=    b2    -    b2High;        final    double    prod2High=    a2    *    b2;    [BUGGY]    final    double    prod2Low    =    a2Low    *    b2Low    *    (((prod2High    -    a2High    *    b2High)    -    a2Low    *    b2High)    -    a2High    *    b2Low);        final    double    ca3=    SPLIT_FACTOR    *    a3;    final    double    a3High    =    ca3    -    (ca3    -    a3);    final    double    a3Low=    a3    -    a3High;    final    double    cb3=    SPLIT_FACTOR    *    b3;    final    double    b3High    =    cb3    -    (cb3    -    b3);    final    double    b3Low=    b3    -    b3High;            [CLASS]        MathArrays    OrderDirection    1    2    Position    [METHOD]    linearCombination    [RETURN_TYPE]    double        final    double    a1    final    double    b1    final    double    a2    final    double    b2    final    double    a3    final    double    b3    final    double    a4    final    double    b4    [VARIABLES]    boolean    Position    HEAD    TAIL    int    SPLIT_FACTOR    comp    i    index    j    len    lenMinusOne    max    numElements    startIndex    sum    yListLen    OrderDirection    DECREASING    INCREASING    dir    double    a1    a1High    a1Low    a2    a2High    a2Low    a3    a3High    a3Low    a4    a4High    a4Low    b1    b1High    b1Low    b2    b2High    b2Low    b3    b3High    b3Low    b4    b4High    b4Low    ca1    ca2    ca3    ca4    cb1    cb2    cb3    cb4    prod1High    prod1Low    prod2High    prod2Low    prod3High    prod3Low    prod4High    prod4Low    result    s1234High    s1234Low    s1234Prime    s123High    s123Low    s123Prime    s12High    s12Low    s12Prime        	math_6938_MathArrays_1_1	1119	1	src/main/java/org/apache/commons/math3/util/MathArrays.java
136	[PATCH]    final    int    widthExcess    =    jWidth    +    columnsShift    -    BLOCK_SIZE;	[BUG]    [BUGGY]    final    int    widthExcess    =    jWidth    +    columnsShift    +    BLOCK_SIZE;    [FE]    java.lang.ArrayIndexOutOfBoundsException    testGetSetMatrixLarge    [CONTEXT]    for    (int    jBlock    =    0;    jBlock    <    out.blockColumns;    ++jBlock)    {    final    int    jWidth    =    out.blockWidth(jBlock);        final    int    outIndex    =    iBlock    *    out.blockColumns    +    jBlock;    final    double[]    outBlock    =    out.blocks[outIndex];    final    int    index    =    pBlock    *    blockColumns    +    qBlock;    final    int    width    =    blockWidth(qBlock);    final    int    heightExcess    =    iHeight    +    rowsShift    -    BLOCK_SIZE;    [BUGGY]    final    int    widthExcess    =    jWidth    +    columnsShift    +    BLOCK_SIZE;    if    (heightExcess    >    0)    {        if    (widthExcess    >    0)    {        final    int    width2    =    blockWidth(qBlock    +    1);    copyBlockPart(blocks[index],    width,    rowsShift,    BLOCK_SIZE,    columnsShift,    BLOCK_SIZE,    outBlock,    jWidth,    0,    0);    copyBlockPart(blocks[index    +    1],    width2,    [CLASS]        BlockRealMatrix    [METHOD]    getSubMatrix    [RETURN_TYPE]    BlockRealMatrix        final    int    startRow    final    int    endRow    final    int    startColumn    final    int    endColumn    [VARIABLES]    double[][]    blockData    blocks    data    rawData    BlockRealMatrix    out    boolean    double[]    outBlock    int    BLOCK_SIZE    blockColumns    blockIndex    blockRows    blockStartColumn    blockStartRow    columnDimension    columns    columnsShift    dataPos    endColumn    endRow    heightExcess    i    iBlock    iHeight    index    j    jBlock    jWidth    jWidth2    jWidth3    jWidth4    k    kBlock    kWidth    l    lEnd    lStart    lastColumns    lastPos    length    n    nStart    outIndex    p    pBlock    pEnd    pStart    q    qBlock    qEnd    qStart    r    rStart    regularPos    rowDimension    rows    rowsShift    startColumn    startRow    width    width2    widthExcess    long    serialVersionUID        	math_52074_BlockRealMatrix_1_1	695	1	src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
137	[PATCH]    return    FastMath.sqrt(dx    *    dx    +    dy    *    dy    +    dz    *    dz);	[BUG]    [BUGGY]    return    FastMath.sqrt(dx    *    dx    +    dy    *    dy    +    dz    -    dz);    [FE]    junit.framework.AssertionFailedError    testAccurateCrossProduct    [CONTEXT]    public    double    distance(Vector<Euclidean3D>    v)    {    final    Vector3D    v3    =    (Vector3D)    v;    final    double    dx    =    v3.x    -    x;    final    double    dy    =    v3.y    -    y;    final    double    dz    =    v3.z    -    z;    [BUGGY]    return    FastMath.sqrt(dx    *    dx    +    dy    *    dy    +    dz    -    dz);    }    [CLASS]        Vector3D    [METHOD]    distance    [RETURN_TYPE]    double        Euclidean3D>    v    [VARIABLES]    boolean    Vector3D    MINUS_I    MINUS_J    MINUS_K    NEGATIVE_INFINITY    NaN    PLUS_I    PLUS_J    PLUS_K    POSITIVE_INFINITY    ZERO    rhs    u    u1    u2    u3    u4    v1    v2    v3    Vector    v    double    a    a1    a2    a3    a4    alpha    cosDelta    delta    dot    dx    dy    dz    factor    inverse    normProduct    s    threshold    x    y    z    long    serialVersionUID        	math_39385_Vector3D_1_1	483	1	src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
138	[PATCH]    if    (observed1[i]    ==    0    &&    observed2[i]    ==    0)    {	[BUG]    [BUGGY]    if    (observed2[i]    ==    0)    {    [FE]    org.apache.commons.math3.exception.ZeroException:    observed    counts    are    both    zero    for    entry    0    testRootLogLikelihood    [CONTEXT]        long    countSum1    =    0;    long    countSum2    =    0;        final    long[]    collSums    =    new    long[observed1.length];    final    long[][]    k    =    new    long[2][observed1.length];    for    (int    i    =    0;    i    <    observed1.length;    i++)    {    [BUGGY]    if    (observed2[i]    ==    0)    {    throw    new    ZeroException(LocalizedFormats.OBSERVED_COUNTS_BOTTH_ZERO_FOR_ENTRY,    i);    }    else    {    countSum1    +=    observed1[i];    countSum2    +=    observed2[i];    collSums[i]    =    observed1[i]    +    observed2[i];    k[0][i]    =    observed1[i];    k[1][i]    =    observed2[i];    }    }        [CLASS]        GTest    [METHOD]    gDataSetsComparison    [RETURN_TYPE]    double        final    long[]    observed1    final    long[]    observed2    [VARIABLES]    boolean    long[]    collSums    observed1    observed2    rowSums    double    sum    long[][]    k    long    countSum1    countSum2    int    i        	math_101725_GTest_1_1	372	1	src/main/java/org/apache/commons/math3/stat/inference/GTest.java
139	[PATCH]    for    (int    i    =    0;    i    <    order;    ++i)    {	[BUG]    [BUGGY]    for    (int    i    =    -1;    i    <    order;    ++i)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testToDifferentiableMultivariateFunction    [CONTEXT]    private    static    int[][]    compileSizes(final    int    parameters,    final    int    order,    final    DSCompiler    valueCompiler)    {    final    int[][]    sizes    =    new    int[parameters    +    1][order    +    1];    if    (parameters    ==    0)    {    Arrays.fill(sizes[0],    1);    }    else    {    System.arraycopy(valueCompiler.sizes,    0,    sizes,    0,    parameters);    sizes[parameters][0]    =    1;    [BUGGY]    for    (int    i    =    -1;    i    <    order;    ++i)    {    sizes[parameters][i    +    1]    =    sizes[parameters][i]    +    sizes[parameters    -    1][i    +    1];    }    }    return    sizes;    }    [CLASS]        DSCompiler    [METHOD]    compileSizes    [RETURN_TYPE]    int[][]        final    int    parameters    final    int    order    DSCompiler    valueCompiler    [VARIABLES]    int[][][]    compIndirection    multIndirection    int[][]    derivativesIndirection    sizes    boolean    AtomicReference    compilers    int[]    lowerIndirection    int    diag    i    maxOrder    maxParameters    o    order    p    parameters    DSCompiler    valueCompiler        	math_1200_DSCompiler_1_1	248	1	src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
140	[PATCH]    for    (int    col    =    0;    col    <    columnCount;    ++col)    {	[BUG]    [BUGGY]    for    (int    col    =    1;    col    <    columnCount;    ++col)    {    [FE]    org.apache.commons.math3.linear.SingularMatrixException:    matrix    is    singular    testFit    [CONTEXT]    public    RealMatrix    scalarMultiply(final    double    d)    {    final    int    rowCount=    getRowDimension();    final    int    columnCount    =    getColumnDimension();    final    RealMatrix    out    =    createMatrix(rowCount,    columnCount);    for    (int    row    =    0;    row    <    rowCount;    ++row)    {    [BUGGY]    for    (int    col    =    1;    col    <    columnCount;    ++col)    {    out.setEntry(row,    col,    getEntry(row,    col)    *    d);    }    }    return    out;    }    [CLASS]        AbstractRealMatrix    1    2    3    4    5    [METHOD]    scalarMultiply    [RETURN_TYPE]    RealMatrix        final    double    d    [VARIABLES]    RealMatrixFormat    DEFAULT_FORMAT    boolean    RealMatrix    out    double    columnSum    d    endRow    maxColSum    sum    int    col    columnCount    columnDimension    row    rowCount    rowDimension    startColumn    startRow        	math_45113_AbstractRealMatrix_1_1	130	1	src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
141	[PATCH]    if    (nRows    ==    0)    {	[BUG]    [BUGGY]    if    (nRows    >=    0)    {    [FE]    org.apache.commons.math3.exception.NoDataException:    matrix    must    have    at    least    one    row    testSetSubMatrix    [CONTEXT]        public    void    setSubMatrix(final    T[][]    subMatrix,    final    int    row,    final    int    column)    throws    DimensionMismatchException,    OutOfRangeException,    NoDataException,    NullArgumentException    {    if    (subMatrix    ==    null)    {    throw    new    NullArgumentException();    }    final    int    nRows    =    subMatrix.length;    [BUGGY]    if    (nRows    >=    0)    {    throw    new    NoDataException(LocalizedFormats.AT_LEAST_ONE_ROW);    }    final    int    nCols    =    subMatrix[0].length;    if    (nCols    ==    0)    {    throw    new    NoDataException(LocalizedFormats.AT_LEAST_ONE_COLUMN);    }    for    (int    r    =    1;    r    <    nRows;    ++r)    {    if    (subMatrix[r].length    !=    nCols)    {    [CLASS]    	math_44383_AbstractFieldMatrix_1_1	463	1	src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java
142	[PATCH]    final    double    v1    =    (FastMath.log(x1)    -    scale)    /    denom;	[BUG]    [BUGGY]    final    double    v1    =    (FastMath.log(x1)    -    scale)    %    denom;    [FE]    junit.framework.AssertionFailedError:    expected:<0.0>    but    was:<0.2104225384842741>    testQuantiles    [CONTEXT]    throws    NumberIsTooLargeException    {    if    (x0    >    x1)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,    x0,    x1,    true);    }    if    (x0    <=    0    ||    x1    <=    0)    {    return    super.probability(x0,    x1);    }    final    double    denom    =    shape    *    SQRT2;    final    double    v0    =    (FastMath.log(x0)    -    scale)    /    denom;    [BUGGY]    final    double    v1    =    (FastMath.log(x1)    -    scale)    %    denom;    return    0.5    *    Erf.erf(v0,    v1);    }    [CLASS]        LogNormalDistribution    [METHOD]    probability    [RETURN_TYPE]    double        double    x0    double    x1    [VARIABLES]    double    DEFAULT_INVERSE_ABSOLUTE_ACCURACY    SQRT2    SQRT2PI    denom    dev    inverseCumAccuracy    scale    shape    solverAbsoluteAccuracy    v0    v1    x    x0    x1    long    serialVersionUID    boolean        	math_26880_LogNormalDistribution_1_1	230	1	src/main/java/org/apache/commons/math3/distribution/LogNormalDistribution.java
143	[PATCH]    for    (int    i    =    0;    i    <    doubles.length;    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    1;    i    <    doubles.length;    i++)    {    [FE]    java.lang.NullPointerException    testConstrainedRosen    [CONTEXT]    private    int[]    sortedIndices(final    double[]    doubles)    {    final    DoubleIndex[]    dis    =    new    DoubleIndex[doubles.length];    [BUGGY]    for    (int    i    =    1;    i    <    doubles.length;    i++)    {    dis[i]    =    new    DoubleIndex(doubles[i],    i);    }    Arrays.sort(dis);    final    int[]    indices    =    new    int[doubles.length];    for    (int    i    =    0;    i    <    doubles.length;    i++)    {    indices[i]    =    dis[i].index;    }    return    indices;    }    [CLASS]        CMAESOptimizer    Sigma    PopulationSize    DoubleIndex    FitnessFunction    [METHOD]    sortedIndices    [RETURN_TYPE]    int[]        final    double[]    doubles    [VARIABLES]    boolean    DEFAULT_ISACTIVECMA    generateStatistics    hsig    isActiveCMA    isMinimize    isRepairMode    double[]    doubles    fitness    fitnessHistory    guess    init    inputSigma    lB    pcCol    s    sigma    sqrtDiagC    uB    vals    RealMatrix    B    BD    C    Cneg    D    arnorms    arnormsInv    arnormsReverse    arnormsSorted    arpos    artmp    arx    arxk    arz    arzneg    bestArx    bestArz    diagC    diagD    insigma    pc    ps    roneu    weights    xmean    xold    zmean    double    DEFAULT_STOPFITNESS    bestFitness    bestValue    cc    ccov1    ccov1Sep    ccovmu    ccovmuSep    chiN    cs    damps    historyBest    historyWorst    logMu2    mueff    negalphaold    negccov    negcovMax    negminresidualvariance    normps    oldFac    sigma    stopFitness    stopTolFun    stopTolHistFun    stopTolUpX    stopTolX    sumw    sumwq    tfac    val    value    valueRange    w    worstFitness    List    statisticsDHistory    statisticsFitnessHistory    statisticsMeanHistory    statisticsSigmaHistory    DoubleIndex[]    dis    int[]    indices    int    DEFAULT_CHECKFEASABLECOUNT    DEFAULT_DIAGONALONLY    DEFAULT_MAXITERATIONS    checkFeasableCount    diagonalOnly    dimension    historySize    i    index    iterations    k    lambda    maxEval    maxIterations    mu    size    RandomGenerator    DEFAULT_RANDOMGENERATOR    random        	math_83773_CMAESOptimizer_1_1	945	1	src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
144	[PATCH]    plus.merge(merged.plus,    leafMerger,    merged,    true);	[BUG]    [BUGGY]    plus.merge(merged.plus,    leafMerger,    merged,    false);    [FE]    junit.framework.AssertionFailedError:    expected:<5.0>    but    was:<Infinity>    testMultiple    [CONTEXT]    if    (parentTree    !=    null)    {    merged.parent    =    parentTree;    if    (isPlusChild)    {    parentTree.plus    =    merged;    }    else    {    parentTree.minus    =    merged;    }    }            [BUGGY]    plus.merge(merged.plus,    leafMerger,    merged,    false);    minus.merge(merged.minus,    leafMerger,    merged,    false);    merged.condense();    if    (merged.cut    !=    null)    {    merged.cut    =    merged.fitToCell(merged.cut.getHyperplane().wholeHyperplane());    }    return    merged;    }    [CLASS]        BSPTree    [METHOD]    merge    [RETURN_TYPE]    BSPTree        BSPTree<S>    tree    LeafMerger<S>    leafMerger    BSPTree<S>    parentTree    final    boolean    isPlusChild    [VARIABLES]    BSPTree    merged    minus    parent    parentTree    plus    tree    Object    attribute    boolean    isPlusChild    LeafMerger    leafMerger    SubHyperplane    chopped    cut    s    sub        	math_33560_BSPTree_1_1	404	1	src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java
145	[PATCH]    final    double    F    =    msbg    /    mswg;	[BUG]    [BUGGY]    final    double    F    =    msbg    +    mswg;    [FE]    junit.framework.AssertionFailedError:    ANOVA    P-value    expected:<6.959446E-6>    but    was:<0.0>    testAnovaPValueSummaryStatistics    [CONTEXT]    dfwg    +=    num    -    1;    final    double    ss    =    sumsq    -    ((sum    *    sum)    /    num);    sswg    +=    ss;    }    final    double    sst    =    totsumsq    -    ((totsum    *    totsum)    /    totnum);    final    double    ssbg    =    sst    -    sswg;    final    int    dfbg    =    categoryData.size()    -    1;    final    double    msbg    =    ssbg    /    dfbg;    final    double    mswg    =    sswg    /    dfwg;    [BUGGY]    final    double    F    =    msbg    +    mswg;    return    new    AnovaStats(dfbg,    dfwg,    F);    }    [CLASS]        OneWayAnova    AnovaStats    [METHOD]    anovaStats    [RETURN_TYPE]    OneWayAnova$AnovaStats        SummaryStatistics>    categoryData    final    boolean    allowOneElementData    [VARIABLES]    Collection    categoryData    SummaryStatistics    array    data    boolean    allowOneElementData    double    F    alpha    msbg    mswg    ss    ssbg    sst    sswg    sum    sumsq    totsum    totsumsq    val    int    dfbg    dfwg    num    totnum        	math_102263_OneWayAnova_1_1	320	1	src/main/java/org/apache/commons/math3/stat/inference/OneWayAnova.java
146	[PATCH]    res.setEntry(key,    entries.get(key)    -    iter.value());	[BUG]    [BUGGY]    res.setEntry(key,    entries.get(key)    *    iter.value());    [FE]    junit.framework.AssertionFailedError:    entry    #16,    left    =    Infinity,    right    =    Infinity    expected:<NaN>    but    was:<Infinity>    testSubtractSameType    [CONTEXT]    public    OpenMapRealVector    subtract(OpenMapRealVector    v)    throws    DimensionMismatchException    {    checkVectorDimensions(v.getDimension());    OpenMapRealVector    res    =    copy();    Iterator    iter    =    v.getEntries().iterator();    while    (iter.hasNext())    {    iter.advance();    int    key    =    iter.key();    if    (entries.containsKey(key))    {    [BUGGY]    res.setEntry(key,    entries.get(key)    *    iter.value());    }    else    {    res.setEntry(key,    -iter.value());    }    }    return    res;    }    [CLASS]        OpenMapRealVector    OpenMapEntry    OpenMapSparseIterator    [METHOD]    subtract    [RETURN_TYPE]    OpenMapRealVector        OpenMapRealVector    v    [VARIABLES]    Entry    current    boolean    double    DEFAULT_ZERO_TOLERANCE    d    delta    epsilon    max    res    value    x    y    Iterator    iter    OpenMapRealVector    res    v    OpenIntToDoubleHashMap    entries    randomAccess    long    serialVersionUID    int    dimension    end    expectedSize    i    index    key    n    resize    virtualSize        	math_59965_OpenMapRealVector_1_1	645	1	src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
147	[PATCH]    int    blockIndex    =    0;	[BUG]    [BUGGY]    int    blockIndex    =    -1;    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testSeveralBlocks    [CONTEXT]    }        @Override    public    FieldMatrix<T>    transpose()    {    final    int    nRows    =    getRowDimension();    final    int    nCols    =    getColumnDimension();    final    BlockFieldMatrix<T>    out    =    new    BlockFieldMatrix<T>(getField(),    nCols,    nRows);            [BUGGY]    int    blockIndex    =    -1;    for    (int    iBlock    =    0;    iBlock    <    blockColumns;    ++iBlock)    {    for    (int    jBlock    =    0;    jBlock    <    blockRows;    ++jBlock)    {        final    T[]    outBlock    =    out.blocks[blockIndex];    final    T[]    tBlock    =    blocks[jBlock    *    blockColumns    +    iBlock];    final    intpStart    =    iBlock    *    BLOCK_SIZE;    final    intpEnd    =    FastMath.min(pStart    +    BLOCK_SIZE,    columns);    final    intqStart    =    jBlock    *    BLOCK_SIZE;    final    intqEnd    =    FastMath.min(qStart    +    BLOCK_SIZE,    rows);    [CLASS]    	math_50246_BlockFieldMatrix_1_1	1227	1	src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
148	[PATCH]    phiHessian[2][2]    =    2    *    rho    *    zOr3    /    r;	[BUG]    [BUGGY]    phiHessian[-2][2]    =    2    *    rho    *    zOr3    /    r;    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -2    testHessian    [CONTEXT]    final    double    rho2r2=    rho    *    rhor2;    final    double    rhor4    =    rhor2    *    r2;    final    double    rho3r4=    rhor4    *    rho2;    final    double    r2P2rho2=    3    *    rho2    +    z2;    phiHessian    =    new    double[3][3];    phiHessian[0][0]    =    z    *    (rho2r2    -    x2    *    r2P2rho2)    /    rho3r4;    phiHessian[1][0]    =    -x    *    y    *    z    *    r2P2rho2    /    rho3r4;    phiHessian[2][0]    =    x    *    (rho2    -    z2)    /    rhor4;    phiHessian[1][1]    =    z    *    (rho2r2    -    y2    *    r2P2rho2)    /    rho3r4;    phiHessian[2][1]    =    y    *    (rho2    -    z2)    /    rhor4;    [BUGGY]    phiHessian[-2][2]    =    2    *    rho    *    zOr3    /    r;        phiHessian[0][1]    =    phiHessian[1][0];    phiHessian[0][2]    =    phiHessian[2][0];    phiHessian[1][2]    =    phiHessian[2][1];    }    }    [CLASS]        SphericalCoordinates    DataTransferObject    [METHOD]    computeHessians    [RETURN_TYPE]    void        [VARIABLES]    double[][]    cHessian    hj    jacobian    phiHessian    rHessian    sHessian    thetaHessian    boolean    Vector3D    v    double    cosPhi    cosTheta    phi    r    r2    r2P2rho2    rho    rho2    rho2r2    rho3r4    rhor2    rhor4    sinPhi    sinTheta    theta    x    x2    xOr    xOr3    xOrho2    y    y2    yOr    yOr3    yOrho2    z    z2    zOr    zOr3    long    serialVersionUID        	math_43918_SphericalCoordinates_1_1	336	1	src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SphericalCoordinates.java
149	[PATCH]    return    (((-0.5    *    FastMath.log(b)    +    HALF_LOG_TWO_PI)    +    w)    -    u)    -    v;	[BUG]    [BUGGY]    return    (((-0.5    -    FastMath.log(b)    +    HALF_LOG_TWO_PI)    +    w)    -    u)    -    v;    [FE]    junit.framework.AssertionFailedError:    expected:<250000>    but    was:<249999>    testMath718    [CONTEXT]    final    double    a    =    FastMath.min(p,    q);    final    double    b    =    FastMath.max(p,    q);    if    (a    >=    10.0)    {    final    double    w    =    sumDeltaMinusDeltaSum(a,    b);    final    double    h    =    a    /    b;    final    double    c    =    h    /    (1.0    +    h);    final    double    u    =    -(a    -    0.5)    *    FastMath.log(c);    final    double    v    =    b    *    FastMath.log1p(h);    if    (u    <=    v)    {    [BUGGY]    return    (((-0.5    -    FastMath.log(b)    +    HALF_LOG_TWO_PI)    +    w)    -    u)    -    v;    }    else    {    return    (((-0.5    *    FastMath.log(b)    +    HALF_LOG_TWO_PI)    +    w)    -    v)    -    u;    }    }    else    if    (a    >    2.0)    {    if    (b    >    1000.0)    {    final    int    n    =    (int)    FastMath.floor(a    -    1.0);    double    prod    =    1.0;    double    ared    =    a;    for    (int    i    =    0;    i    <    n;    i++)    {    ared    -=    1.0;    [CLASS]        Beta    1    [METHOD]    logBeta    [RETURN_TYPE]    double        final    double    p    final    double    q    [VARIABLES]    boolean    double[]    DELTA    s    double    DEFAULT_EPSILON    HALF_LOG_TWO_PI    a    ared    b    bred    c    d    epsilon    h    m    p    prod    prod1    prod2    q    q2    ret    sqrtT    t    u    v    w    x    z    int    i    n        	math_95239_Beta_1_1	433	1	src/main/java/org/apache/commons/math3/special/Beta.java
150	[PATCH]    if    (steps[j]    ==    0)    {	[BUG]    [BUGGY]    if    (steps[j]    ==    1)    {    [FE]    org.apache.commons.math3.exception.ZeroException:    equal    vertices    0    and    {1}    in    simplex    configuration    testStartSimplexInsideRange    [CONTEXT]    throw    new    ZeroException();    }    dimension    =    steps.length;            startConfiguration    =    new    double[dimension][dimension];    for    (int    i    =    0;    i    <    dimension;    i++)    {    final    double[]    vertexI    =    startConfiguration[i];    for    (int    j    =    0;    j    <    i    +    1;    j++)    {    [BUGGY]    if    (steps[j]    ==    1)    {    throw    new    ZeroException(LocalizedFormats.EQUAL_VERTICES_IN_SIMPLEX);    }    System.arraycopy(steps,    0,    vertexI,    0,    j    +    1);    }    }    }    [CLASS]        AbstractSimplex    [METHOD]    <init>    [RETURN_TYPE]    AbstractSimplex(double[])        final    double[]    steps    [VARIABLES]    PointValuePair[]    simplex    double[][]    startConfiguration    boolean    double[]    steps    vertexI    int    dimension    i    j    n        	math_82266_AbstractSimplex_1_1	114	1	src/main/java/org/apache/commons/math3/optimization/direct/AbstractSimplex.java
151	[PATCH]    final    double    midPoint    =    min    +    0.5    *    diff;	[BUG]    [BUGGY]    final    double    midPoint    =    min    %    (0.5    *    diff);    [FE]    org.apache.commons.math3.exception.MaxCountExceededException:    illegal    state:    maximal    count    (4)    exceeded    testLowAccuracy    [CONTEXT]    protected    double    doIntegrate()    throws    MathIllegalArgumentException,    TooManyEvaluationsException,    MaxCountExceededException    {    final    double    min    =    getMin();    final    double    diff    =    getMax()    -    min;    [BUGGY]    final    double    midPoint    =    min    %    (0.5    *    diff);    double    oldt    =    diff    *    computeObjectiveValue(midPoint);    while    (true)    {    iterations.incrementCount();    final    int    i    =    iterations.getCount();    final    double    t    =    stage(i,    oldt,    min,    diff);    if    (i    >=    getMinimalIterationCount())    {    final    double    delta    =    FastMath.abs(t    -    oldt);    final    double    rLimit    =    [CLASS]        MidPointIntegrator    [METHOD]    doIntegrate    [RETURN_TYPE]    double        [VARIABLES]    int    MIDPOINT_MAX_ITERATIONS_COUNT    i    maximalIterationCount    minimalIterationCount    n    double    delta    diff    midPoint    min    oldt    rLimit    t    boolean        	math_8363_MidPointIntegrator_1_1	149	1	src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java
152	[PATCH]    sumX    +=    factor    *    (x0    +    x1);	[BUG]    [BUGGY]    sumX    +=    factor    *    (x0    *    x1);    [FE]    junit.framework.AssertionFailedError:    expected:<0.5>    but    was:<0.4166666666666667>    testBox    [CONTEXT]    for    (Vector2D[]    loop    :    v)    {    double    x1    =    loop[loop.length    -    1].getX();    double    y1    =    loop[loop.length    -    1].getY();    for    (final    Vector2D    point    :    loop)    {    final    double    x0    =    x1;    final    double    y0    =    y1;    x1    =    point.getX();    y1    =    point.getY();    final    double    factor    =    x0    *    y1    -    y0    *    x1;    sum+=    factor;    [BUGGY]    sumX    +=    factor    *    (x0    *    x1);    sumY    +=    factor    *    (y0    +    y1);    }    }    if    (sum    <    0)    {        setSize(Double.POSITIVE_INFINITY);    setBarycenter(Vector2D.NaN);    }    else    {    setSize(sum    /    2);    [CLASS]        PolygonsSet    Vertex    Edge    ComparableSegment    SegmentsBuilder    [METHOD]    computeGeometricalProperties    [RETURN_TYPE]    void        [VARIABLES]    Line    line    line1    line2    splitLine    Vertex    end    splitPoint    splitVertex    start    vertex    BSPTree    node    parent    tree    boolean    Vector2D    end    location    maxMax    maxMin    minMax    minMin    point    start    double    factor    sum    sumX    sumY    x0    x1    y0    y1    AVLTree    sorted    List    edges    lines    minusList    plusList    OrderedTuple    sortingKey    Vector2D[][]    v    vertices    Vector2D[]    loop    Edge    edge    endHalf    incoming    inserted    outgoing    startHalf        	math_40536_PolygonsSet_1_1	556	1	src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
153	[PATCH]    y[2]    =    f.value(x[2]);	[BUG]    [BUGGY]    y[2]    =    f.value(x[-2]);    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -2    testConvergenceOnFunctionAccuracy    [CONTEXT]    if    (y[0].multiply(y[1]).negativeOrNull())    {        nbPoints=    2;    signChangeIndex    =    1;    }    else    {        evaluations.incrementCount();    [BUGGY]    y[2]    =    f.value(x[-2]);    if    (y[2].isZero())    {        return    x[2];    }    if    (y[1].multiply(y[2]).negativeOrNull())    {        nbPoints=    3;    signChangeIndex    =    2;    }    else    {    [CLASS]        BracketingNthOrderBrentSolverDFP    [METHOD]    solve    [RETURN_TYPE]    Dfp        final    int    maxEval    UnivariateDfpFunction    f    Dfp    min    Dfp    max    Dfp    startValue    AllowedSolution    allowedSolution    [VARIABLES]    AllowedSolution    allowedSolution    boolean    Incrementor    evaluations    UnivariateDfpFunction    f    int    MAXIMAL_AGING    agingA    agingB    end    maxEval    maximalOrder    nbPoints    signChangeIndex    start    Dfp[]    tmpX    x    y    Dfp    absXA    absXB    absYA    absYB    absoluteAccuracy    functionValueAccuracy    max    maxX    maxY    min    nan    nextX    nextY    relativeAccuracy    startValue    targetY    xA    xB    xTol    yA    yB    zero        	math_18018_BracketingNthOrderBrentSolverDFP_1_1	227	1	src/main/java/org/apache/commons/math3/dfp/BracketingNthOrderBrentSolverDFP.java
154	[PATCH]    for    (int    i    =    0;    i    <    m1.getRowDimension();    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    -1;    i    <    m1.getRowDimension();    i++)    {    [FE]    org.apache.commons.math3.exception.OutOfRangeException:    row    index    (-1)    testConstrainedRosen    [CONTEXT]    private    static    void    copyColumn(final    RealMatrix    m1,    int    col1,    RealMatrix    m2,    int    col2)    {    [BUGGY]    for    (int    i    =    -1;    i    <    m1.getRowDimension();    i++)    {    m2.setEntry(i,    col2,    m1.getEntry(i,    col1));    }    }    [CLASS]        CMAESOptimizer    Sigma    PopulationSize    DoubleIndex    FitnessFunction    [METHOD]    copyColumn    [RETURN_TYPE]    void        RealMatrix    m1    int    col1    RealMatrix    m2    int    col2    [VARIABLES]    boolean    DEFAULT_ISACTIVECMA    generateStatistics    hsig    isActiveCMA    isMinimize    isRepairMode    double[]    doubles    fitness    fitnessHistory    guess    init    inputSigma    lB    pcCol    point    repaired    s    sigma    sqrtDiagC    uB    vals    x    RealMatrix    B    BD    C    Cneg    D    arnorms    arnormsInv    arnormsReverse    arnormsSorted    arpos    artmp    arx    arxk    arz    arzneg    bestArx    bestArz    diagC    diagD    insigma    m    m1    m2    n    pc    ps    roneu    weights    xmean    xold    zmean    double    DEFAULT_STOPFITNESS    bestFitness    bestValue    cc    ccov1    ccov1Sep    ccovmu    ccovmuSep    chiN    cs    damps    diff    e    historyBest    historyWorst    logMu2    mueff    negalphaold    negccov    negcovMax    negminresidualvariance    normps    oldFac    penalty    sigma    stopFitness    stopTolFun    stopTolHistFun    stopTolUpX    stopTolX    sum    sumw    sumwq    tfac    val    value    valueRange    w    worstFitness    List    statisticsDHistory    statisticsFitnessHistory    statisticsMeanHistory    statisticsSigmaHistory    int    DEFAULT_CHECKFEASABLECOUNT    DEFAULT_DIAGONALONLY    DEFAULT_MAXITERATIONS    c    checkFeasableCount    col1    col2    diagonalOnly    dimension    historySize    i    index    iterations    k    lambda    maxEval    maxIterations    mu    r    size    RandomGenerator    DEFAULT_RANDOMGENERATOR    random        	math_84019_CMAESOptimizer_1_1	1254	1	src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
155	[PATCH]    final    int    q0    =    jBlock    *    BLOCK_SIZE;	[BUG]    [BUGGY]    final    int    q0    =    jBlock    +    BLOCK_SIZE;    [FE]    junit.framework.AssertionFailedError:    expected:<1.0517578125>    but    was:<1.05078125>    testWalk    [CONTEXT]    throws    OutOfRangeException,    NumberIsTooSmallException    {    MatrixUtils.checkSubMatrixIndex(this,    startRow,    endRow,    startColumn,    endColumn);    visitor.start(rows,    columns,    startRow,    endRow,    startColumn,    endColumn);    for    (int    iBlock    =    startRow    /    BLOCK_SIZE;    iBlock    <    1    +    endRow    /    BLOCK_SIZE;    ++iBlock)    {    final    int    p0    =    iBlock    *    BLOCK_SIZE;    final    int    pStart    =    FastMath.max(startRow,    p0);    final    int    pEnd    =    FastMath.min((iBlock    +    1)    *    BLOCK_SIZE,    1    +    endRow);    for    (int    jBlock    =    startColumn    /    BLOCK_SIZE;    jBlock    <    1    +    endColumn    /    BLOCK_SIZE;    ++jBlock)    {    final    int    jWidth    =    blockWidth(jBlock);    [BUGGY]    final    int    q0    =    jBlock    +    BLOCK_SIZE;    final    int    qStart    =    FastMath.max(startColumn,    q0);    final    int    qEnd    =    FastMath.min((jBlock    +    1)    *    BLOCK_SIZE,    1    +    endColumn);    final    double[]    block    =    blocks[iBlock    *    blockColumns    +    jBlock];    for    (int    p    =    pStart;    p    <    pEnd;    ++p)    {    int    k    =    (p    -    p0)    *    jWidth    +    qStart    -    q0;    for    (int    q    =    qStart;    q    <    qEnd;    ++q)    {    visitor.visit(p,    q,    block[k]);    ++k;    }    }    [CLASS]        BlockRealMatrix    [METHOD]    walkInOptimizedOrder    [RETURN_TYPE]    double        RealMatrixPreservingVisitor    visitor    final    int    startRow    final    int    endRow    final    int    startColumn    final    int    endColumn    [VARIABLES]    double[][]    blockData    blocks    data    rawData    subMatrix    RealMatrixPreservingVisitor    visitor    boolean    double[]    block    int    BLOCK_SIZE    available    blockColumns    blockEndColumn    blockEndRow    blockIndex    blockRows    blockStartColumn    blockStartRow    column    columnDimension    columns    columnsShift    dataPos    dstPos    dstStartColumn    dstStartRow    dstWidth    endColumn    endRow    firstColumn    firstRow    heightExcess    i    iBlock    iEnd    iHeight    iRow    iStart    index    j    jBlock    jColumn    jEnd    jLength    jStart    jWidth    jWidth2    jWidth3    jWidth4    k    kBlock    kWidth    l    lEnd    lInc    lStart    lastColumns    lastPos    length    mBlockIndex    mIndex    n    nCols    nRows    nStart    outBlockIndex    outIndex    p    p0    pBlock    pEnd    pStart    q    q0    qBlock    qEnd    qStart    r    rStart    refLength    regularPos    row    rowDimension    rows    rowsShift    srcEndColumn    srcEndRow    srcPos    srcRow    srcStartColumn    srcStartRow    srcWidth    startColumn    startRow    width    width2    widthExcess    long    serialVersionUID        	math_54023_BlockRealMatrix_1_1	1549	1	src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
156	[PATCH]    }    else    if    (agingB    >=    MAXIMAL_AGING)    {	[BUG]    [BUGGY]    }    else    if    (true)    {    [FE]    org.apache.commons.math3.exception.MaxCountExceededException:    illegal    state:    maximal    count    (20)    exceeded    testConvergenceOnFunctionAccuracy    [CONTEXT]        throw    new    MathInternalError(null);    }    }        Dfp    targetY;    if    (agingA    >=    MAXIMAL_AGING)    {        targetY    =    yB.divide(16).negate();    [BUGGY]    }    else    if    (true)    {        targetY    =    yA.divide(16).negate();    }    else    {        targetY    =    zero;    }        Dfp    nextX;    int    start    =    0;    [CLASS]        BracketingNthOrderBrentSolverDFP    [METHOD]    solve    [RETURN_TYPE]    Dfp        final    int    maxEval    UnivariateDfpFunction    f    Dfp    min    Dfp    max    Dfp    startValue    AllowedSolution    allowedSolution    [VARIABLES]    AllowedSolution    allowedSolution    boolean    Incrementor    evaluations    UnivariateDfpFunction    f    int    MAXIMAL_AGING    agingA    agingB    end    maxEval    maximalOrder    nbPoints    signChangeIndex    start    Dfp[]    tmpX    x    y    Dfp    absXA    absXB    absYA    absYB    absoluteAccuracy    functionValueAccuracy    max    maxX    maxY    min    nan    nextX    nextY    relativeAccuracy    startValue    targetY    xA    xB    xTol    yA    yB    zero        	math_18081_BracketingNthOrderBrentSolverDFP_1_1	290	1	src/main/java/org/apache/commons/math3/dfp/BracketingNthOrderBrentSolverDFP.java
157	[PATCH]    }    else    if    (k    ==    2)    {	[BUG]    [BUGGY]    }    else    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<0.0>    but    was:<-0.9900332889206208>    testTanAtan    [CONTEXT]    final    double    t2    =    t    *    t;    for    (int    n    =    1;    n    <=    order;    ++n)    {        double    v    =    0;    p[n    +    1]    =    n    *    p[n];    for    (int    k    =    n    +    1;    k    >=    0;    k    -=    2)    {    v    =    v    *    t2    +    p[k];    if    (k    >    2)    {    p[k    -    2]    =    (k    -    1)    *    p[k    -    1]    +    (k    -    3)    *    p[k    -    3];    [BUGGY]    }    else    if    (false)    {    p[0]    =    p[1];    }    }    if    ((n    &    0x1)    ==    0)    {    v    *=    t;    }    function[n]    =    v;    }    [CLASS]        DSCompiler    [METHOD]    tan    [RETURN_TYPE]    void        final    double[]    operand    final    int    operandOffset    final    double[]    result    final    int    resultOffset    [VARIABLES]    int[][][]    compIndirection    multIndirection    int[][]    dRow    derivativesIndirection    destSizes    mappingI    sizes    srcDerivativesIndirection    boolean    double[]    function    operand    p    result    double    t    t2    v    AtomicReference    compilers    int[]    derivedTermF    derivedTermG    lowerIndirection    orders    term    termJ    termK    int    dSize    derivativeOrder    destO    destP    diag    i    index    j    k    l    lhsOffset    m    maxOrder    maxParameters    n    o    offset1    offset2    offset3    offset4    operandOffset    order    ordersSum    p    parameters    resultOffset    rhsOffset    srcP    vSize    xOffset    yOffset        	math_2447_DSCompiler_1_1	1235	1	src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
158	[PATCH]    p[k    -    1]    =    (n    -    k    +    2)    *    p[k    -    2]    -    (k    -    1)    *    p[k    -    1];	[BUG]    [BUGGY]    p[k    -    1]    =    (n    -    k    +    2)    *    p[k    -    0]    -    (k    -    1)    *    p[k    -    1];    [FE]    junit.framework.AssertionFailedError:    x=-10.0    expected:<4.539580773595168E-5>    but    was:<4.5391685990113204E-5>    testCompareDerivativeSigmoid    [CONTEXT]    final    double    inv    =    1    /    (1    +    exp);    double    coeff    =    hi    -    lo;    for    (int    n    =    0;    n    <    f.length;    ++n)    {        double    v    =    0;    p[n]    =    1;    for    (int    k    =    n;    k    >=    0;    --k)    {    v    =    v    *    exp    +    p[k];    if    (k    >    1)    {    [BUGGY]    p[k    -    1]    =    (n    -    k    +    2)    *    p[k    -    0]    -    (k    -    1)    *    p[k    -    1];    }    else    {    p[0]    =    0;    }    }    coeff    *=    inv;    f[n]    =    coeff    *    v;    }        [CLASS]        Sigmoid    Parametric    [METHOD]    value    [RETURN_TYPE]    DerivativeStructure        DerivativeStructure    t    [VARIABLES]    DerivativeStructure    t    boolean    double[]    f    p    double    coeff    exp    hi    inv    invExp1    lo    v    x    int    k    n        	math_5130_Sigmoid_1_1	199	1	src/main/java/org/apache/commons/math3/analysis/function/Sigmoid.java
159	[PATCH]    Precision.equals(matT[i    +    1][i],    0.0,    EPSILON))    {	[BUG]    [BUGGY]    Precision.equals(matT[i    +    1][i],    1.0,    EPSILON))    {    [FE]    junit.framework.AssertionFailedError:    The    norm    of    (X-Y)    is    too    large:    85.87194543953775,    matrix=Array2DRowRealMatrix{{-1.0,1.0,-1.0,1.0},{-8.0,4.0,-2.0,1.0},{27.0,9.0,3.0,1.0},{64.0,16.0,4.0,1.0}}    testUnsymmetric    [CONTEXT]    private    SchurTransformer    transformToSchur(final    RealMatrix    matrix)    {    final    SchurTransformer    schurTransform    =    new    SchurTransformer(matrix);    final    double[][]    matT    =    schurTransform.getT().getData();    realEigenvalues    =    new    double[matT.length];    imagEigenvalues    =    new    double[matT.length];    for    (int    i    =    0;    i    <    realEigenvalues.length;    i++)    {    if    (i    ==    (realEigenvalues.length    -    1)    ||    [BUGGY]    Precision.equals(matT[i    +    1][i],    1.0,    EPSILON))    {    realEigenvalues[i]    =    matT[i][i];    }    else    {    final    double    x    =    matT[i    +    1][i    +    1];    final    double    p    =    0.5    *    (matT[i][i]    -    x);    final    double    z    =    FastMath.sqrt(FastMath.abs(p    *    p    +    matT[i    +    1][i]    *    matT[i][i    +    1]));    realEigenvalues[i]    =    x    +    p;    imagEigenvalues[i]    =    z;    realEigenvalues[i    +    1]    =    x    +    p;    imagEigenvalues[i    +    1]    =    -z;    i++;    [CLASS]        EigenDecomposition    Solver    [METHOD]    transformToSchur    [RETURN_TYPE]    SchurTransformer        RealMatrix    matrix    [VARIABLES]    boolean    isSymmetric    SchurTransformer    schurTransform    double[]    bp    e    imagEigenvalues    invI    main    realEigenvalues    secondary    sqrtEigenValues    tmp    tmpCol    vData    vK    ArrayRealVector[]    eigenvectors    RealMatrix    b    cachedD    cachedV    cachedVt    matrix    sqrtEigen    v    vT    double    EPSILON    c    delta    determinant    eigen    h    invIJ    lambda    maxAbsoluteValue    p    q    s    splitTolerance    symTol    t    u    x    z    byte    maxIter    double[][]    matT    int    i    TriDiagonalTransformer    transformer        	math_55308_EigenDecomposition_1_1	738	1	src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
160	[PATCH]    for    (int    col    =    in    +    1;    col    <    nvars;    col++)    {	[BUG]    [BUGGY]    for    (int    col    =    in    %    1;    col    <    nvars;    col++)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testPCorr    [CONTEXT]    double    sumyy;    final    int    offXX    =    (nvars    -    in)    *    (nvars    -    in    -    1)    /    2;    if    (in    <    -1    ||    in    >=    nvars)    {    return    null;    }    final    int    nvm    =    nvars    -    1;    final    int    base_pos    =    r.length    -    (nvm    -    in)    *    (nvm    -    in    +    1)    /    2;    if    (d[in]    >    0.0)    {    rms[in    +    rms_off]    =    1.0    /    Math.sqrt(d[in]);    }    [BUGGY]    for    (int    col    =    in    %    1;    col    <    nvars;    col++)    {    pos    =    base_pos    +    col    -    1    -    in;    sumxx    =    d[col];    for    (int    row    =    in;    row    <    col;    row++)    {    sumxx    +=    d[row]    *    r[pos]    *    r[pos];    pos    +=    nvars    -    row    -    2;    }    if    (sumxx    >    0.0)    {    rms[col    +    rms_off]    =    1.0    /    Math.sqrt(sumxx);    }    else    {    rms[col    +    rms_off]    =    0.0;    [CLASS]        MillerUpdatingRegression    [METHOD]    getPartialCorrelations    [RETURN_TYPE]    double[]        int    in    [VARIABLES]    boolean    hasIntercept    includeConstant    rankProblem    rss_set    tol_set    double[]    covmat    d    output    r    ret    rhs    rinv    rms    rss    tmp    tol    work    work_sing    work_tolset    x    x_sing    y    double    _a    _b    _w    a    b    di    dpi    eps    epsilon    errorTolerance    rnk    sserr    sumsqy    sumxx    sumxy    sumy    sumyy    temp    tmp    total    var    w    weight    wi    wxi    xi    xk    y    yi    int[]    vorder    boolean[]    lindep    int    _pi    _xi    base_pos    col    col1    col2    i    in    j    k    nextr    nreq    numberOfVariables    nvars    nvm    offXX    pos    pos1    pos2    rms_off    row    start    wrk_off    long    nobs        	math_104077_MillerUpdatingRegression_1_1	630	1	src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java
161	[PATCH]    double    inv    =    1.0    /    FastMath.sqrt(q0    *    q0    +    q1    *    q1    +    q2    *    q2    +    q3    *    q3);	[BUG]    [BUGGY]    double    inv    =    1.0    *    FastMath.sqrt(q0    *    q0    +    q1    *    q1    +    q2    *    q2    +    q3    *    q3);    [FE]    junit.framework.AssertionFailedError:    expected:<NaN>    but    was:<2.4900699380907003>    testPolarForm    [CONTEXT]    public    Rotation(double    q0,    double    q1,    double    q2,    double    q3,    boolean    needsNormalization)    {    if    (needsNormalization)    {        [BUGGY]    double    inv    =    1.0    *    FastMath.sqrt(q0    *    q0    +    q1    *    q1    +    q2    *    q2    +    q3    *    q3);    q0    *=    inv;    q1    *=    inv;    q2    *=    inv;    q3    *=    inv;    }    this.q0    =    q0;    this.q1    =    q1;    this.q2    =    q2;    this.q3    =    q3;    [CLASS]        Rotation    [METHOD]    <init>    [RETURN_TYPE]    Rotation(double,double,double,double,boolean)        double    q0    double    q1    double    q2    double    q3    boolean    needsNormalization    [VARIABLES]    boolean    needsNormalization    Rotation    IDENTITY    double    inv    q0    q1    q2    q3    long    serialVersionUID        	math_36003_Rotation_1_1	140	1	src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
162	[PATCH]    double    denomr    =    1.0    /    denom;	[BUG]    [BUGGY]    double    denomr    =    1.0    %    denom;    [FE]    junit.framework.AssertionFailedError:    expected:<0.0>    but    was:<5.262929486337525E-4>    testCoshDefinition    [CONTEXT]    }    else    {    double    hiPrec[]    =    new    double[2];    expm1(x,    hiPrec);    double    ya    =    hiPrec[0]    +    hiPrec[1];    double    yb    =    -(ya    -    hiPrec[0]    -    hiPrec[1]);        double    denom    =    1.0    +    ya;    [BUGGY]    double    denomr    =    1.0    %    denom;    double    denomb    =    -(denom    -    1.0    -    ya)    +    yb;    double    ratio    =    ya    *    denomr;    double    temp    =    ratio    *    HEX_40000000;    double    ra    =    ratio    +    temp    -    temp;    double    rb    =    ratio    -    ra;    temp    =    denom    *    HEX_40000000;    double    za    =    denom    +    temp    -    temp;    double    zb    =    denom    -    za;        [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    sinh    [RETURN_TYPE]    double        double    x    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    negate    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    b    d    denom    denomb    denomr    finalRemA    finalRemB    ra    ratio    rb    recip    recipa    recipb    remA    remB    result    t    temp    x    xa    ya    yaa    yab    yb    za    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    finalK    k    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    xl        	math_110838_FastMath_1_1	546	1	src/main/java/org/apache/commons/math3/util/FastMath.java
163	[PATCH]    for    (int    jBlock    =    0;    jBlock    <    blockRows;    ++jBlock)    {	[BUG]    [BUGGY]    for    (int    jBlock    =    -1;    jBlock    <    blockRows;    ++jBlock)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -2    testSeveralBlocks    [CONTEXT]        @Override    public    FieldMatrix<T>    transpose()    {    final    int    nRows    =    getRowDimension();    final    int    nCols    =    getColumnDimension();    final    BlockFieldMatrix<T>    out    =    new    BlockFieldMatrix<T>(getField(),    nCols,    nRows);        int    blockIndex    =    0;    for    (int    iBlock    =    0;    iBlock    <    blockColumns;    ++iBlock)    {    [BUGGY]    for    (int    jBlock    =    -1;    jBlock    <    blockRows;    ++jBlock)    {        final    T[]    outBlock    =    out.blocks[blockIndex];    final    T[]    tBlock    =    blocks[jBlock    *    blockColumns    +    iBlock];    final    intpStart    =    iBlock    *    BLOCK_SIZE;    final    intpEnd    =    FastMath.min(pStart    +    BLOCK_SIZE,    columns);    final    intqStart    =    jBlock    *    BLOCK_SIZE;    final    intqEnd    =    FastMath.min(qStart    +    BLOCK_SIZE,    rows);    int    k    =    0;    for    (int    p    =    pStart;    p    <    pEnd;    ++p)    {    [CLASS]    	math_50253_BlockFieldMatrix_1_1	1229	1	src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
164	[PATCH]    rHessian[0][0]    =    y    *    yOr3    +    z    *    zOr3;	[BUG]    [BUGGY]    rHessian[0][0]    =    y    *    yOr3    *    (z    *    zOr3);    [FE]    junit.framework.AssertionFailedError:    0.1311261673164622    expected:<0.0>    but    was:<-0.0015578312483024727>    testHessian    [CONTEXT]    final    double    yOr=    y    /    r;    final    double    zOr=    z    /    r;    final    double    xOrho2    =    x    /    rho2;    final    double    yOrho2    =    y    /    rho2;    final    double    xOr3    =    xOr    /    r2;    final    double    yOr3    =    yOr    /    r2;    final    double    zOr3    =    zOr    /    r2;        rHessian    =    new    double[3][3];    [BUGGY]    rHessian[0][0]    =    y    *    yOr3    *    (z    *    zOr3);    rHessian[1][0]    =    -x    *    yOr3;    rHessian[2][0]    =    -z    *    xOr3;    rHessian[1][1]    =    x    *    xOr3    +    z    *    zOr3;    rHessian[2][1]    =    -y    *    zOr3;    rHessian[2][2]    =    x    *    xOr3    +    y    *    yOr3;        rHessian[0][1]    =    rHessian[1][0];    rHessian[0][2]    =    rHessian[2][0];    rHessian[1][2]    =    rHessian[2][1];    [CLASS]        SphericalCoordinates    DataTransferObject    [METHOD]    computeHessians    [RETURN_TYPE]    void        [VARIABLES]    double[][]    cHessian    hj    jacobian    phiHessian    rHessian    sHessian    thetaHessian    boolean    Vector3D    v    double    cosPhi    cosTheta    phi    r    r2    r2P2rho2    rho    rho2    rho2r2    rho3r4    rhor2    rhor4    sinPhi    sinTheta    theta    x    x2    xOr    xOr3    xOrho2    y    y2    yOr    yOr3    yOrho2    z    z2    zOr    zOr3    long    serialVersionUID        	math_43632_SphericalCoordinates_1_1	303	1	src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SphericalCoordinates.java
165	[PATCH]    if    (b.getDimension()    !=    m)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    org.apache.commons.math3.exception.DimensionMismatchException:    2    !=    2    testPlane    [CONTEXT]    public    RealVector    solve(RealVector    b)    {    final    int    n    =    qrt.length;    final    int    m    =    qrt[0].length;    [BUGGY]    if    (true)    {    throw    new    DimensionMismatchException(b.getDimension(),    m);    }    if    (!isNonSingular())    {    throw    new    SingularMatrixException();    }    final    double[]    x    =    new    double[n];    final    double[]    y    =    b.toArray();            [CLASS]        QRDecomposition    Solver    [METHOD]    solve    [RETURN_TYPE]    RealVector        RealVector    b    [VARIABLES]    boolean    double[]    qrtCol    qrtMinor    qrtRow    rDiag    x    y    RealMatrix    cachedH    cachedQ    cachedQT    cachedR    matrix    double    a    alpha    c    diag    dotProduct    threshold    xNormSqr    yRow    RealVector    b    double[][]    ha    matrix    qrt    qta    ra    int    i    m    minor    n    row        	math_60252_QRDecomposition_1_1	343	1	src/main/java/org/apache/commons/math3/linear/QRDecomposition.java
166	[PATCH]    for    (int    jBlock    =    startColumn    /    BLOCK_SIZE;    jBlock    <    1    +    endColumn    /    BLOCK_SIZE;    ++jBlock)    {	[BUG]    [BUGGY]    for    (int    jBlock    =    startColumn    /    BLOCK_SIZE;    jBlock    <    1    %    (endColumn    /    BLOCK_SIZE);    ++jBlock)    {    [FE]    junit.framework.AssertionFailedError:    expected:<10804>    but    was:<5180>    testWalk    [CONTEXT]    final    int    startRow,    final    int    endRow,    final    int    startColumn,    final    int    endColumn)    throws    OutOfRangeException,    NumberIsTooSmallException    {    checkSubMatrixIndex(startRow,    endRow,    startColumn,    endColumn);    visitor.start(rows,    columns,    startRow,    endRow,    startColumn,    endColumn);    for    (int    iBlock    =    startRow    /    BLOCK_SIZE;    iBlock    <    1    +    endRow    /    BLOCK_SIZE;    ++iBlock)    {    final    int    p0    =    iBlock    *    BLOCK_SIZE;    final    int    pStart    =    FastMath.max(startRow,    p0);    final    int    pEnd    =    FastMath.min((iBlock    +    1)    *    BLOCK_SIZE,    1    +    endRow);    for    (int    p    =    pStart;    p    <    pEnd;    ++p)    {    [BUGGY]    for    (int    jBlock    =    startColumn    /    BLOCK_SIZE;    jBlock    <    1    %    (endColumn    /    BLOCK_SIZE);    ++jBlock)    {    final    int    jWidth    =    blockWidth(jBlock);    final    int    q0    =    jBlock    *    BLOCK_SIZE;    final    int    qStart    =    FastMath.max(startColumn,    q0);    final    int    qEnd    =    FastMath.min((jBlock    +    1)    *    BLOCK_SIZE,    1    +    endColumn);    final    T[]    block    =    blocks[iBlock    *    blockColumns    +    jBlock];    int    k    =    (p    -    p0)    *    jWidth    +    qStart    -    q0;    for    (int    q    =    qStart;    q    <    qEnd;    ++q)    {    visitor.visit(p,    q,    block[k]);    ++k;    }    [CLASS]    	math_50800_BlockFieldMatrix_1_1	1449	1	src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
167	[PATCH]    pos    =    base_pos    +    col    -    1    -    in;	[BUG]    [BUGGY]    pos    =    base_pos    *    col    -    1    -    in;    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testPCorr    [CONTEXT]    final    int    offXX    =    (nvars    -    in)    *    (nvars    -    in    -    1)    /    2;    if    (in    <    -1    ||    in    >=    nvars)    {    return    null;    }    final    int    nvm    =    nvars    -    1;    final    int    base_pos    =    r.length    -    (nvm    -    in)    *    (nvm    -    in    +    1)    /    2;    if    (d[in]    >    0.0)    {    rms[in    +    rms_off]    =    1.0    /    Math.sqrt(d[in]);    }    for    (int    col    =    in    +    1;    col    <    nvars;    col++)    {    [BUGGY]    pos    =    base_pos    *    col    -    1    -    in;    sumxx    =    d[col];    for    (int    row    =    in;    row    <    col;    row++)    {    sumxx    +=    d[row]    *    r[pos]    *    r[pos];    pos    +=    nvars    -    row    -    2;    }    if    (sumxx    >    0.0)    {    rms[col    +    rms_off]    =    1.0    /    Math.sqrt(sumxx);    }    else    {    rms[col    +    rms_off]    =    0.0;    }    [CLASS]        MillerUpdatingRegression    [METHOD]    getPartialCorrelations    [RETURN_TYPE]    double[]        int    in    [VARIABLES]    boolean    hasIntercept    includeConstant    rankProblem    rss_set    tol_set    double[]    covmat    d    output    r    ret    rhs    rinv    rms    rss    tmp    tol    work    work_sing    work_tolset    x    x_sing    y    double    _a    _b    _w    a    b    di    dpi    eps    epsilon    errorTolerance    rnk    sserr    sumsqy    sumxx    sumxy    sumy    sumyy    temp    tmp    total    var    w    weight    wi    wxi    xi    xk    y    yi    int[]    vorder    boolean[]    lindep    int    _pi    _xi    base_pos    col    col1    col2    i    in    j    k    nextr    nreq    numberOfVariables    nvars    nvm    offXX    pos    pos1    pos2    rms_off    row    start    wrk_off    long    nobs        	math_104085_MillerUpdatingRegression_1_1	631	1	src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java
168	[PATCH]    dataR[destOddStartIndex    +    r]    =    grR    -    (wSubN0ToRR    *    hrR    -    wSubN0ToRI    *    hrI);	[BUG]    [BUGGY]    dataR[destOddStartIndex    +    r]    =    grR    -    (wSubN0ToRR    *    hrR    -    wSubN0ToRI    %    hrI);    [FE]    junit.framework.AssertionFailedError:    expected:<4.0>    but    was:<NaN>    testAdHocData[0]    [CONTEXT]    for    (int    r    =    0;    r    <    lastN0;    r++)    {    double    grR    =    dataR[destEvenStartIndex    +    r];    double    grI    =    dataI[destEvenStartIndex    +    r];    double    hrR    =    dataR[destOddStartIndex    +    r];    double    hrI    =    dataI[destOddStartIndex    +    r];        dataR[destEvenStartIndex    +    r]    =    grR    +    wSubN0ToRR    *    hrR    -    wSubN0ToRI    *    hrI;    dataI[destEvenStartIndex    +    r]    =    grI    +    wSubN0ToRR    *    hrI    +    wSubN0ToRI    *    hrR;        [BUGGY]    dataR[destOddStartIndex    +    r]    =    grR    -    (wSubN0ToRR    *    hrR    -    wSubN0ToRI    %    hrI);    dataI[destOddStartIndex    +    r]    =    grI    -    (wSubN0ToRR    *    hrI    +    wSubN0ToRI    *    hrR);        double    nextWsubN0ToRR    =    wSubN0ToRR    *    wSubN0R    -    wSubN0ToRI    *    wSubN0I;    double    nextWsubN0ToRI    =    wSubN0ToRR    *    wSubN0I    +    wSubN0ToRI    *    wSubN0R;    wSubN0ToRR    =    nextWsubN0ToRR;    wSubN0ToRI    =    nextWsubN0ToRI;    }    }        [CLASS]        FastFourierTransformer    MultiDimensionalComplexMatrix    [METHOD]    transformInPlace    [RETURN_TYPE]    void        final    double[][]    dataRI    DftNormalization    normalization    TransformType    type    [VARIABLES]    boolean    double[]    W_SUB_N_I    W_SUB_N_R    a    b    dataI    dataR    double    grI    grR    hrI    hrR    nextWsubN0ToRI    nextWsubN0ToRR    srcI0    srcI1    srcI2    srcI3    srcR0    srcR1    srcR2    srcR3    wSubN0I    wSubN0R    wSubN0ToRI    wSubN0ToRR    double[][]    dataRI    DftNormalization    normalization    int[]    dimensionSize    Object    lastDimension    multiDimensionalComplexArray    TransformType    type    long    serialVersionUID    int    destEvenStartIndex    destOddStartIndex    i0    i1    i2    i3    lastLogN0    lastN0    logN0    n    n0    r        	math_107533_FastFourierTransformer_1_1	344	1	src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java
169	[PATCH]    if        ((v2.getZ().getReal()    <    -0.9999999999)    ||    (v2.getZ().getReal()    >    0.9999999999))    {	[BUG]    [BUGGY]    if    ((false)    ||    (v2.getZ().getReal()    >    0.9999999999))    {    [FE]    junit.framework.AssertionFailedError:    an    exception    should    have    been    caught    testSingularities    [CONTEXT]    if    (order    ==    RotationOrder.XYZ)    {                    final    FieldVector3D<T>    v1    =    applyTo(vector(0,    0,    1));    final    FieldVector3D<T>    v2    =    applyInverseTo(vector(1,    0,    0));    [BUGGY]    if((false)    ||    (v2.getZ().getReal()    >    0.9999999999))    {    throw    new    CardanEulerSingularityException(true);    }    return    buildArray(v1.getY().negate().atan2(v1.getZ()),    v2.getZ().asin(),    v2.getY().negate().atan2(v2.getX()));    }    else    if    (order    ==    RotationOrder.XZY)    {                [CLASS]    	math_34700_FieldRotation_1_1	503	1	src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
170	[PATCH]    blockColumns    =    (columns    +    BLOCK_SIZE    -    1)    /    BLOCK_SIZE;	[BUG]    [BUGGY]    blockColumns    =    (columns    %    BLOCK_SIZE    -    1)    /    BLOCK_SIZE;    [FE]    java.lang.ArrayIndexOutOfBoundsException    testPlane    [CONTEXT]    public    BlockRealMatrix(final    int    rows,    final    int    columns)    throws    NotStrictlyPositiveException    {    super(rows,    columns);    this.rows    =    rows;    this.columns    =    columns;        blockRows    =    (rows    +    BLOCK_SIZE    -    1)    /    BLOCK_SIZE;    [BUGGY]    blockColumns    =    (columns    %    BLOCK_SIZE    -    1)    /    BLOCK_SIZE;        blocks    =    createBlocksLayout(rows,    columns);    }    [CLASS]        BlockRealMatrix    [METHOD]    <init>    [RETURN_TYPE]    BlockRealMatrix(int,int)        final    int    rows    final    int    columns    [VARIABLES]    double[][]    blocks    boolean    int    BLOCK_SIZE    blockColumns    blockRows    columns    rows    long    serialVersionUID        	math_51232_BlockRealMatrix_1_1	104	1	src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
171	[PATCH]    ret    =    1.0    -    regularizedGammaQ(a,    x,    epsilon,    maxIterations);	[BUG]    [BUGGY]    ret    =    1.0    %    regularizedGammaQ(a,    x,    epsilon,    maxIterations);    [FE]    junit.framework.AssertionFailedError:    Incorrect    cumulative    probability    value    returned    for    5.472917    expected:<0.999>    but    was:<9.998738513425608E-4>    testSmallDf    [CONTEXT]    int    maxIterations)    {    double    ret;    if    (Double.isNaN(a)    ||    Double.isNaN(x)    ||    (a    <=    0.0)    ||    (x    <    0.0))    {    ret    =    Double.NaN;    }    else    if    (x    ==    0.0)    {    ret    =    0.0;    }    else    if    (x    >=    a    +    1)    {            [BUGGY]    ret    =    1.0    %    regularizedGammaQ(a,    x,    epsilon,    maxIterations);    }    else    {        double    n    =    0.0;    double    an    =    1.0    /    a;    double    sum    =    an;    while    (FastMath.abs(an/sum)    >    epsilon    &&    n    <    maxIterations    &&    sum    <    Double.POSITIVE_INFINITY)    {        n    =    n    +    1.0;    [CLASS]        Gamma    1    [METHOD]    regularizedGammaP    [RETURN_TYPE]    double        double    a    double    x    double    epsilon    int    maxIterations    [VARIABLES]    boolean    double[]    LANCZOS    double    C_LIMIT    DEFAULT_EPSILON    GAMMA    HALF_LOG_2_PI    INV_GAMMA1P_M1_A0    INV_GAMMA1P_M1_A1    INV_GAMMA1P_M1_B1    INV_GAMMA1P_M1_B2    INV_GAMMA1P_M1_B3    INV_GAMMA1P_M1_B4    INV_GAMMA1P_M1_B5    INV_GAMMA1P_M1_B6    INV_GAMMA1P_M1_B7    INV_GAMMA1P_M1_B8    INV_GAMMA1P_M1_C    INV_GAMMA1P_M1_C0    INV_GAMMA1P_M1_C1    INV_GAMMA1P_M1_C10    INV_GAMMA1P_M1_C11    INV_GAMMA1P_M1_C12    INV_GAMMA1P_M1_C13    INV_GAMMA1P_M1_C2    INV_GAMMA1P_M1_C3    INV_GAMMA1P_M1_C4    INV_GAMMA1P_M1_C5    INV_GAMMA1P_M1_C6    INV_GAMMA1P_M1_C7    INV_GAMMA1P_M1_C8    INV_GAMMA1P_M1_C9    INV_GAMMA1P_M1_P0    INV_GAMMA1P_M1_P1    INV_GAMMA1P_M1_P2    INV_GAMMA1P_M1_P3    INV_GAMMA1P_M1_P4    INV_GAMMA1P_M1_P5    INV_GAMMA1P_M1_P6    INV_GAMMA1P_M1_Q1    INV_GAMMA1P_M1_Q2    INV_GAMMA1P_M1_Q3    INV_GAMMA1P_M1_Q4    LANCZOS_G    SQRT_TWO_PI    S_LIMIT    a    an    epsilon    n    prod    ret    sum    tmp    x    int    maxIterations        	math_96579_Gamma_1_1	323	1	src/main/java/org/apache/commons/math3/special/Gamma.java
172	[PATCH]    remB    =    -(remA    -    xa    -    a);	[BUG]    [BUGGY]    remB    =    -(remA    -    xa    +    a);    [FE]    junit.framework.AssertionFailedError:    expected:<-1.5947795819319734>    but    was:<195.40542197182324>    testAddDifferentiable    [CONTEXT]            int    k    =    (int)(xa    *    0.6366197723675814);        double    remA;    double    remB;    while    (true)    {    double    a    =    -k    *    1.570796251296997;    remA    =    xa    +    a;    [BUGGY]    remB    =    -(remA    -    xa    +    a);    a    =    -k    *    7.549789948768648E-8;    double    b    =    remA;    remA    =    a    +    b;    remB    +=    -(remA    -    b    -    a);    a    =    -k    *    6.123233995736766E-17;    b    =    remA;    remA    =    a    +    b;    remB    +=    -(remA    -    b    -    a);    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    <init>    [RETURN_TYPE]    FastMath$CodyWaite(double)        double    xa    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    b    finalRemA    finalRemB    remA    remB    xa    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    finalK    k    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG        	math_119032_FastMath_1_1	3836	1	src/main/java/org/apache/commons/math3/util/FastMath.java
173	[PATCH]    final    double    fourTheta                        =    4    *    theta;	[BUG]    [BUGGY]    final    double    fourTheta            =    -4    *    theta;    [FE]    junit.framework.AssertionFailedError    testBackward    [CONTEXT]    for    (int    i    =    0;    i    <    interpolatedState.length;    ++i)    {    final    double    yDot1=    yDotK[0][i];    final    double    yDot23    =    yDotK[1][i]    +    yDotK[2][i];    final    double    yDot4=    yDotK[3][i];    interpolatedState[i]    =    previousState[i]    +    coeff1*    yDot1    +    coeff23    *    yDot23    +    coeff4*    yDot4;    interpolatedDerivatives[i]    =    coeffDot1    *    yDot1    +    coeffDot23    *    yDot23    +    coeffDot4    *    yDot4;    }    }    else    {    [BUGGY]    final    double    fourTheta=    -4    *    theta;    final    double    s    =    oneMinusThetaH    /    6.0;    final    double    coeff1=    s    *    ((-fourTheta    +    5)    *    theta    -    1);    final    double    coeff23    =    s    *    ((    fourTheta    -    2)    *    theta    -    2);    final    double    coeff4=    s    *    ((-fourTheta    -    1)    *    theta    -    1);    for    (int    i    =    0;    i    <    interpolatedState.length;    ++i)    {    final    double    yDot1=    yDotK[0][i];    final    double    yDot23    =    yDotK[1][i]    +    yDotK[2][i];    final    double    yDot4=    yDotK[3][i];    interpolatedState[i]    =    currentState[i]    +    coeff1*    yDot1    +    coeff23    *    yDot23    +    coeff4*    yDot4;    [CLASS]        ClassicalRungeKuttaStepInterpolator    [METHOD]    computeInterpolatedStateAndDerivatives    [RETURN_TYPE]    void        final    double    theta    final    double    oneMinusThetaH    [VARIABLES]    boolean    long    serialVersionUID    double    coeff1    coeff23    coeff4    coeffDot1    coeffDot23    coeffDot4    fourTheta    fourTheta2    oneMinus2Theta    oneMinusTheta    oneMinusThetaH    s    theta    yDot1    yDot23    yDot4    int    i        	math_67019_ClassicalRungeKuttaStepInterpolator_1_1	116	1	src/main/java/org/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java
174	[PATCH]    return    new    Vector1D(cos    *    p2.getX()    +    sin    *    p2.getY());	[BUG]    [BUGGY]    return    new    Vector1D(cos    *    p2.getX()    +    sin    /    p2.getY());    [FE]    junit.framework.AssertionFailedError:    expected:<1.0>    but    was:<Infinity>    testBox    [CONTEXT]    public    Vector1D    toSubSpace(final    Vector<Euclidean2D>    point)    {    Vector2D    p2    =    (Vector2D)    point;    [BUGGY]    return    new    Vector1D(cos    *    p2.getX()    +    sin    /    p2.getY());    }    [CLASS]        Line    LineTransform    [METHOD]    toSubSpace    [RETURN_TYPE]    Vector1D        Euclidean2D>    point    [VARIABLES]    boolean    Vector2D    p2    Vector    point    double    alpha    angle    c11    c1X    c1Y    cX1    cXX    cXY    cY1    cYX    cYY    cos    d    dx    dy    originOffset    sin        	math_40961_Line_1_1	182	1	src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
175	[PATCH]    double    yb    =    -(ya    -    hiPrec[0]    -    hiPrec[1]);	[BUG]    [BUGGY]    double    yb    =    -(ya    /    hiPrec[0]    -    hiPrec[1]);    [FE]    junit.framework.AssertionFailedError:    expected:<0.0>    but    was:<-0.22933755750961127>    testTanhAtanh    [CONTEXT]    negate    =    true;    }    double    result;    if    (x    >=    0.5)    {    double    hiPrec[]    =    new    double[2];        exp(x*2.0,    0.0,    hiPrec);    double    ya    =    hiPrec[0]    +    hiPrec[1];    [BUGGY]    double    yb    =    -(ya    /    hiPrec[0]    -    hiPrec[1]);        double    na    =    -1.0    +    ya;    double    nb    =    -(na    +    1.0    -    ya);    double    temp    =    na    +    yb;    nb    +=    -(temp    -    na    -    yb);    na    =    temp;        double    da    =    1.0    +    ya;    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    tanh    [RETURN_TYPE]    double        double    x    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    negate    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    b    d    da    daa    dab    db    denom    denomb    denomr    finalRemA    finalRemB    na    nb    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    t    temp    x    xa    ya    yaa    yab    yb    za    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    finalK    k    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    xl        	math_111056_FastMath_1_1	623	1	src/main/java/org/apache/commons/math3/util/FastMath.java
176	[PATCH]    rawdigits[p++]    =    (char)    (((mant[i])    %    10)    +    '0');	[BUG]    [BUGGY]    rawdigits[p++]    =    (char)    (((mant[i])    %    0)    +    '0');    [FE]    java.lang.ArithmeticException:    /    by    zero    testToString    [CONTEXT]    int    e;    int    ae;    int    shf;        p    =    0;    for    (int    i    =    mant.length    -    1;    i    >=    0;    i--)    {    rawdigits[p++]    =    (char)    ((mant[i]    /    1000)    +    '0');    rawdigits[p++]    =    (char)    (((mant[i]    /    100)    %10)    +    '0');    rawdigits[p++]    =    (char)    (((mant[i]    /    10)    %    10)    +    '0');    [BUGGY]    rawdigits[p++]    =    (char)    (((mant[i])    %    0)    +    '0');    }        for    (p    =    0;    p    <    rawdigits.length;    p++)    {    if    (rawdigits[p]    !=    '0')    {    break;    }    }    shf    =    p;        [CLASS]        Dfp    [METHOD]    dfp2sci    [RETURN_TYPE]    String        [VARIABLES]    boolean    byte    FINITE    INFINITE    QNAN    SNAN    asign    bsign    code    nans    rsign    sig    sign    x    DfpField    field    int[]    dividend    mant    product    quotient    remainder    String    ADD_TRAP    ALIGN_TRAP    DIVIDE_TRAP    GREATER_THAN_TRAP    LESS_THAN_TRAP    MULTIPLY_TRAP    NAN_STRING    NEG_INFINITY_STRING    NEW_INSTANCE_TRAP    NEXT_AFTER_TRAP    POS_INFINITY_STRING    SQRT_TRAP    TRUNC_TRAP    fpdecimal    fpexp    s    int    ERR_SCALE    MAX_EXP    MIN_EXP    RADIX    adiff    ae    aextradigit    bextradigit    decimalPos    diff    divMsb    divisor    dm    e    excp    exp    exponent    extra    i    j    lostdigit    max    md    min    minadj    n    nsqd    offset    p    q    qd    r    result    rh    rl    rsize    sciexp    shf    significantDigits    trial    x    char[]    outputbuffer    rawdigits        	math_21554_Dfp_1_1	2102	1	src/main/java/org/apache/commons/math3/dfp/Dfp.java
177	[PATCH]    if    ((v2.getZ().getReal()    <    -0.9999999999)    ||    (v2.getZ().getReal()    >    0.9999999999))    {	[BUG]    [BUGGY]    if    ((v2.getZ().getReal()    <    -0.9999999999)    ||    (v2.getZ().getReal()    >    (-0.9999999999)))    {    [FE]    org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException:    Cardan    angles    singularity    testAngles    [CONTEXT]    }    else    if    (order    ==    RotationOrder.YXZ)    {                        final    FieldVector3D<T>    v1    =    applyTo(vector(0,    0,    1));    final    FieldVector3D<T>    v2    =    applyInverseTo(vector(0,    1,    0));    [BUGGY]    if    ((v2.getZ().getReal()    <    -0.9999999999)    ||    (v2.getZ().getReal()    >    (-0.9999999999)))    {    throw    new    CardanEulerSingularityException(true);    }    return    buildArray(v1.getX().atan2(v1.getZ()),    v2.getZ().asin().negate(),    v2.getX().atan2(v2.getY()));    }    else    if    (order    ==    RotationOrder.YZX)    {                [CLASS]    	math_34760_FieldRotation_1_1	535	1	src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
178	[PATCH]    this(1    /    (sigma    *    FastMath.sqrt(2    *    Math.PI)),    mean,    sigma);	[BUG]    [BUGGY]    this(1    -    (sigma    *    FastMath.sqrt(2    *    Math.PI)),    mean,    sigma);    [FE]    junit.framework.AssertionFailedError:    expected:<6.939E-18>    but    was:<4.0132565492620005>    testGaussian    [CONTEXT]    public    Gaussian(double    mean,    double    sigma)    throws    NotStrictlyPositiveException    {    [BUGGY]    this(1    -    (sigma    *    FastMath.sqrt(2    *    Math.PI)),    mean,    sigma);    }    [CLASS]        Gaussian    Parametric    [METHOD]    <init>    [RETURN_TYPE]    Gaussian(double,double)        double    mean    double    sigma    [VARIABLES]    double    i2s2    is    mean    norm    sigma    boolean        	math_4262_Gaussian_1_1	83	1	src/main/java/org/apache/commons/math3/analysis/function/Gaussian.java
179	[PATCH]    double    result    =    xb    *    factb    +    xb    *    facta    +    xa    *    factb    +    xa    *    facta;	[BUG]    [BUGGY]    double    result    =    xb    *    factb    /    (xb    *    facta)    +    xa    *    factb    +    xa    *    facta;    [FE]    junit.framework.AssertionFailedError:    expected:<0.017453292519943295>    but    was:<NaN>    testToRadiansDefinition    [CONTEXT]    return    x;    }        final    double    facta    =    0.01745329052209854;    final    double    factb    =    1.997844754509471E-9;    double    xa    =    doubleHighPart(x);    double    xb    =    x    -    xa;        [BUGGY]    double    result    =    xb    *    factb    /    (xb    *    facta)    +    xa    *    factb    +    xa    *    facta;    if    (result    ==    0)    {    result    =    result    *    x;    }    return    result;    }    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    toRadians    [RETURN_TYPE]    double        double    x    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    bita    bitb    bitsum    cotanFlag    leftPlane    negate    negative    subnormal    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    hiPrecOut    lnCoef_i    lnCoef_last    lnm    lns    reduceResults    result    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    a2    aa    ab    absAsinh    absAtanh    b    base    baseA    baseB    c    cD2pH    cRH    cTmpH    cd    cosEpsA    cosEpsB    cosa    cosaa    cosab    cosb    costA    costB    d    d1High    d1Low    d2p    d2pHH    d2pHL    d2pHigh    d2pLow    da    daa    dab    db    denom    denomb    denomr    dx    epsA    epsA2    epsB    epsilon    err    est    esta    estb    extra    facta    factb    finalRemA    finalRemB    fracPartA    fracPartB    fx1    intPartA    intPartB    invx    invy    lna    lnb    lnza    lnzb    lores    mant    na    nb    numer    oneOverXa    p    p2    pi2a    pi2b    pia    pib    r    rHH    rHL    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    resultHigh    resultLow    resultb    rln10a    rln10b    sinEpsA    sinEpsB    sina    sinb    sintA    sintB    sumA    sumB    t    temp    temp2    tempA    tempB    tempC    tmp    tmp1    tmp2    tmpA    tmpB    tmpHigh    tmpLow    x    x2    xa    xb    xbadj    xpa    xpb    xs    y    ya    yaa    yab    yb    z    za    zaa    zab    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    e    exp    exp3    exponent    finalK    i    idx    intFrac    intPart    intVal    k    quadrant    shift    splitFactor    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    a    ac    ad    b    bc    bd    bits    c    d    inbits    prod2A    prod2B    prodA    prodB    shpi0    shpiA    shpiB    xl    yi        	math_117954_FastMath_1_1	2957	1	src/main/java/org/apache/commons/math3/util/FastMath.java
180	[PATCH]    sum2    +=    entry    *    entry;	[BUG]    [BUGGY]    sum2    +=    entry    /    entry;    [FE]    junit.framework.AssertionFailedError:    testData    Frobenius    norm    expected:<10.816653826391969>    but    was:<NaN>    testFrobeniusNorm    [CONTEXT]    public    double    getFrobeniusNorm()    {    double    sum2    =    0;    for    (int    blockIndex    =    0;    blockIndex    <    blocks.length;    ++blockIndex)    {    for    (final    double    entry    :    blocks[blockIndex])    {    [BUGGY]    sum2    +=    entry    /    entry;    }    }    return    FastMath.sqrt(sum2);    }    [CLASS]        BlockRealMatrix    [METHOD]    getFrobeniusNorm    [RETURN_TYPE]    double        [VARIABLES]    double[][]    blockData    blocks    data    rawData    boolean    int    BLOCK_SIZE    blockColumns    blockIndex    blockRows    columnDimension    columns    dataPos    i    iBlock    iHeight    index    j    jBlock    jWidth    jWidth2    jWidth3    jWidth4    k    kBlock    kWidth    l    lEnd    lStart    lastColumns    lastPos    length    n    nStart    p    pEnd    pStart    q    qEnd    qStart    r    rStart    regularPos    rowDimension    rows    long    serialVersionUID    double    entry    sum2        	math_51995_BlockRealMatrix_1_1	655	1	src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
181	[PATCH]    new    BigFraction(2    *    (k    +    v    -    1)    *    (k    +    w    -    1)    *    twoKvw,    den)	[BUG]    [BUGGY]    new    BigFraction(2    *    (k    -    v    -    1)    *    (k    +    w    -    1)    *    twoKvw,    den)    [FE]    junit.framework.AssertionFailedError:    I(2,    0)    =    1.0    expected:<0.0>    but    was:<1.0>    testJacobiOrthogonality    [CONTEXT]    k++;    final    int    kvw=    k    +    v    +    w;    final    int    twoKvw    =    kvw    +    k;    final    int    twoKvwM1    =    twoKvw    -    1;    final    int    twoKvwM2    =    twoKvw    -    2;    final    int    den=    2    *    k    *kvw    *    twoKvwM2;    return    new    BigFraction[]    {    new    BigFraction(twoKvwM1    *    (v    *    v    -    w    *    w),    den),    new    BigFraction(twoKvwM1    *    twoKvw    *    twoKvwM2,    den),    [BUGGY]    new    BigFraction(2    *    (k    -    v    -    1)    *    (k    +    w    -    1)    *    twoKvw,    den)    };    }    });    }    [CLASS]        PolynomialsUtils    1    2    3    4    5    JacobiKey    [METHOD]    createJacobiPolynomial    [RETURN_TYPE]    PolynomialFunction        final    int    degree    final    int    v    final    int    w    [VARIABLES]    List    CHEBYSHEV_COEFFICIENTS    HERMITE_COEFFICIENTS    LAGUERRE_COEFFICIENTS    LEGENDRE_COEFFICIENTS    list    BigFraction[]    coeffs    boolean    Map    JACOBI_COEFFICIENTS    int    degree    den    k    kP1    kvw    twoKvw    twoKvwM1    twoKvwM2    v    w    JacobiKey    key        	math_13742_PolynomialsUtils_1_1	248	1	src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtils.java
182	[PATCH]    quat[0]    =    inv    *    (ort[2][0]    -    ort[0][2]);	[BUG]    [BUGGY]    quat[-1]    =    inv    *    (ort[2][0]    -    ort[0][2]);    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testMatrix    [CONTEXT]    double    inv    =    0.25    /    quat[1];    quat[0]    =    inv    *    (ort[1][2]    -    ort[2][1]);    quat[2]    =    inv    *    (ort[0][1]    +    ort[1][0]);    quat[3]    =    inv    *    (ort[0][2]    +    ort[2][0]);    }    else    {    s    =    ort[1][1]    -    ort[0][0]    -    ort[2][2];    if    (s    >    -0.19)    {        quat[2]    =    0.5    *    FastMath.sqrt(s    +    1.0);    double    inv    =    0.25    /    quat[2];    [BUGGY]    quat[-1]    =    inv    *    (ort[2][0]    -    ort[0][2]);    quat[1]    =    inv    *    (ort[0][1]    +    ort[1][0]);    quat[3]    =    inv    *    (ort[2][1]    +    ort[1][2]);    }    else    {        s    =    ort[2][2]    -    ort[0][0]    -    ort[1][1];    quat[3]    =    0.5    *    FastMath.sqrt(s    +    1.0);    double    inv    =    0.25    /    quat[3];    quat[0]    =    inv    *    (ort[0][1]    -    ort[1][0]);    quat[1]    =    inv    *    (ort[0][2]    +    ort[2][0]);    quat[2]    =    inv    *    (ort[2][1]    +    ort[1][2]);    [CLASS]        Rotation    [METHOD]    mat2quat    [RETURN_TYPE]    double[]        final    double[][]    ort    [VARIABLES]    double[][]    ort    boolean    double[]    quat    Rotation    IDENTITY    composed    r1    r2    r3    double    alpha1    alpha2    alpha3    angle    coeff    det    dot    halfAngle    inv    norm    normProduct    q0    q1    q2    q3    s    threshold    long    serialVersionUID        	math_36558_Rotation_1_1	431	1	src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
183	[PATCH]    double    yb    =    -(ya    -    hiPrec[0]    -    hiPrec[1]);	[BUG]    [BUGGY]    double    yb    =    -(ya    *    hiPrec[0]    -    hiPrec[1]);    [FE]    junit.framework.AssertionFailedError:    expected:<5.264247893057607>    but    was:<-3.7437021399210595>    testMultiplyDifferentiable    [CONTEXT]    }    }    final    double    hiPrec[]    =    new    double[2];    if    (x    <    0.0)    {    x    =    -x;    }    exp(x,    0.0,    hiPrec);    double    ya    =    hiPrec[0]    +    hiPrec[1];    [BUGGY]    double    yb    =    -(ya    *    hiPrec[0]    -    hiPrec[1]);    double    temp    =    ya    *    HEX_40000000;    double    yaa    =    ya    +    temp    -    temp;    double    yab    =    ya    -    yaa;        double    recip    =    1.0/ya;    temp    =    recip    *    HEX_40000000;    double    recipa    =    recip    +    temp    -    temp;    double    recipb    =    recip    -    recipa;    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    cosh    [RETURN_TYPE]    double        double    x    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    b    d    finalRemA    finalRemB    recip    recipa    recipb    remA    remB    result    t    temp    x    xa    ya    yaa    yab    yb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    finalK    k    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    xl        	math_110425_FastMath_1_1	427	1	src/main/java/org/apache/commons/math3/util/FastMath.java
184	[PATCH]    double    xK    =    diag[k]    *    currentPoint[k];	[BUG]    [BUGGY]    double    xK    =    diag[k]    +    currentPoint[k];    [FE]    junit.framework.AssertionFailedError:    expected:<53.1572792>    but    was:<41.65361749708177>    testMath519    [CONTEXT]    delta    =    2    *    lmNorm;    lmPar    *=    0.5;    }        if    (ratio    >=    1.0e-4)    {        firstIteration    =    false;    xNorm    =    0;    for    (int    k    =    0;    k    <    nC;    ++k)    {    [BUGGY]    double    xK    =    diag[k]    +    currentPoint[k];    xNorm    +=    xK    *    xK;    }    xNorm    =    FastMath.sqrt(xNorm);        if    (checker    !=    null    &&    checker.converged(getIterations(),    previous,    current))    {    setCost(currentCost);    return    current;    }    }    else    {    [CLASS]        LevenbergMarquardtOptimizer    [METHOD]    doOptimize    [RETURN_TYPE]    PointVectorValuePair        [VARIABLES]    PointVectorValuePair    current    previous    ConvergenceChecker    checker    boolean    firstIteration    double[]    beta    currentObjective    currentPoint    currentResiduals    diag    diagR    jacNorm    lmDir    oldObj    oldRes    oldX    qtf    tmpVec    weightedResidual    work1    work2    work3    RealMatrix    weightMatrixSqrt    double    TWO_EPS    actRed    coeff1    coeff2    costRelativeTolerance    currentCost    delta    dirDer    dirJ    dk    initialStepBoundFactor    lmNorm    lmPar    maxCosine    orthoTolerance    parRelativeTolerance    pc2    preRed    previousCost    qrRankingThreshold    r    ratio    s    sum    threshold    tmp    xK    xNorm    xk    double[][]    weightedJacobian    int[]    permutation    int    i    j    k    nC    nR    pj    pk    rank    solvedCols        	math_80944_LevenbergMarquardtOptimizer_1_1	488	1	src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java
185	[PATCH]    final    double    b1High                    =    cb1    -    (cb1    -    b1);	[BUG]    [BUGGY]    final    double    b1High            =    cb1    *    (cb1    -    b1);    [FE]    junit.framework.AssertionFailedError:    expected:<1.2246609226461328E34>    but    was:<4.868599899441976E50>    testLinearCombination2DSDS    [CONTEXT]                        final    double    ca1=    SPLIT_FACTOR    *    a1;    final    double    a1High    =    ca1    -    (ca1    -    a1);    final    double    a1Low=    a1    -    a1High;    final    double    cb1=    SPLIT_FACTOR    *    b1;    [BUGGY]    final    double    b1High    =    cb1    *    (cb1    -    b1);    final    double    b1Low=    b1    -    b1High;        final    double    prod1High=    a1    *    b1;    final    double    prod1Low    =    a1Low    *    b1Low    -    (((prod1High    -    a1High    *    b1High)    -    a1Low    *    b1High)    -    a1High    *    b1Low);        final    double    ca2=    SPLIT_FACTOR    *    a2;    final    double    a2High    =    ca2    -    (ca2    -    a2);    final    double    a2Low=    a2    -    a2High;    [CLASS]        MathArrays    OrderDirection    1    2    Position    [METHOD]    linearCombination    [RETURN_TYPE]    double        final    double    a1    final    double    b1    final    double    a2    final    double    b2    final    double    a3    final    double    b3    final    double    a4    final    double    b4    [VARIABLES]    boolean    Position    HEAD    TAIL    int    SPLIT_FACTOR    comp    i    index    j    len    lenMinusOne    max    numElements    startIndex    sum    yListLen    OrderDirection    DECREASING    INCREASING    dir    double    a1    a1High    a1Low    a2    a2High    a2Low    a3    a3High    a3Low    a4    a4High    a4Low    b1    b1High    b1Low    b2    b2High    b2Low    b3    b3High    b3Low    b4    b4High    b4Low    ca1    ca2    ca3    ca4    cb1    cb2    cb3    cb4    prod1High    prod1Low    prod2High    prod2Low    prod3High    prod3Low    prod4High    prod4Low    result    s1234High    s1234Low    s1234Prime    s123High    s123Low    s123Prime    s12High    s12Low    s12Prime        	math_6830_MathArrays_1_1	1102	1	src/main/java/org/apache/commons/math3/util/MathArrays.java
186	[PATCH]    d[r][c]    =    m.getEntry(r,    c)    /    n.getEntry(r,    c);	[BUG]    [BUGGY]    d[r][c]    =    m.getEntry(r,    c)    +    n.getEntry(r,    c);    [FE]    junit.framework.AssertionFailedError:    expected:<0.0>    but    was:<17.71064024951457>    testConstrainedRosen    [CONTEXT]    private    static    RealMatrix    divide(final    RealMatrix    m,    final    RealMatrix    n)    {    final    double[][]    d    =    new    double[m.getRowDimension()][m.getColumnDimension()];    for    (int    r    =    0;    r    <    m.getRowDimension();    r++)    {    for    (int    c    =    0;    c    <    m.getColumnDimension();    c++)    {    [BUGGY]    d[r][c]    =    m.getEntry(r,    c)    +    n.getEntry(r,    c);    }    }    return    new    Array2DRowRealMatrix(d,    false);    }    [CLASS]        CMAESOptimizer    Sigma    PopulationSize    DoubleIndex    FitnessFunction    [METHOD]    divide    [RETURN_TYPE]    RealMatrix        RealMatrix    m    RealMatrix    n    [VARIABLES]    boolean    generateStatistics    hsig    isActiveCMA    isMinimize    isRepairMode    double[]    doubles    fitness    fitnessHistory    guess    init    inputSigma    lB    pcCol    point    repaired    s    sigma    sqrtDiagC    uB    vals    x    RealMatrix    B    BD    C    Cneg    D    arnorms    arnormsInv    arnormsReverse    arnormsSorted    arpos    artmp    arx    arxk    arz    arzneg    bestArx    bestArz    diagC    diagD    insigma    m    n    pc    ps    roneu    weights    xmean    xold    zmean    double    bestFitness    bestValue    cc    ccov1    ccov1Sep    ccovmu    ccovmuSep    chiN    cs    damps    diff    e    historyBest    historyWorst    logMu2    mueff    negalphaold    negccov    negcovMax    negminresidualvariance    normps    oldFac    penalty    sigma    stopFitness    stopTolFun    stopTolHistFun    stopTolUpX    stopTolX    sumw    sumwq    tfac    val    value    valueRange    w    worstFitness    double[][]    d    List    statisticsDHistory    statisticsFitnessHistory    statisticsMeanHistory    statisticsSigmaHistory    int    c    checkFeasableCount    diagonalOnly    dimension    historySize    i    index    iterations    k    lambda    maxIterations    mu    r    size    RandomGenerator    random        	math_78971_CMAESOptimizer_1_1	1041	1	src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
187	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    org.apache.commons.math3.linear.SingularMatrixException:    matrix    is    singular    testExamples    [CONTEXT]    public    boolean    containsKey(final    int    key)    {    final    int    hash=    hashOf(key);    int    index    =    hash    &    mask;    if    (containsKey(key,    index))    {    [BUGGY]    return    false;    }    if    (states[index]    ==    FREE)    {    return    false;    }    int    j    =    index;    for    (int    perturb    =    perturb(hash);    states[index]    !=    FREE;    perturb    >>=    PERTURB_SHIFT)    {    j    =    probe(perturb,    j);    index    =    j    &    mask;    [CLASS]        OpenIntToDoubleHashMap    Iterator    [METHOD]    containsKey    [RETURN_TYPE]    boolean        final    int    key    [VARIABLES]    byte[]    states    boolean    double[]    values    byte    FREE    FULL    REMOVED    double    missingEntries    int[]    keys    float    LOAD_FACTOR    long    serialVersionUID    int    DEFAULT_EXPECTED_SIZE    PERTURB_SHIFT    RESIZE_MULTIPLIER    capacity    count    current    expectedSize    hash    i    index    j    key    length    mask    next    perturb    powerOfTwo    referenceCount    size        	math_59412_OpenIntToDoubleHashMap_1_1	210	1	src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
188	[PATCH]    previousState[i]    +    theta    *    h    *    (v1[i]    +    eta    *    (v2[i]    +    theta    *    (v3[i]    +    eta    *    v4[i])));	[BUG]    [BUGGY]    previousState[i]    +    theta    *    h    *    (v1[i]    /    (eta    *    (v2[i]    +    theta    *    (v3[i]    +    eta    *    v4[i]))));    [FE]    junit.framework.AssertionFailedError    testRandomAccess    [CONTEXT]        final    double    eta    =    1    -    theta;    final    double    twoTheta    =    2    *    theta;    final    double    dot2    =    1    -    twoTheta;    final    double    dot3    =    theta    *    (2    -    3    *    theta);    final    double    dot4    =    twoTheta    *    (1    +    theta    *    (twoTheta    -    3));    if    ((previousState    !=    null)    &&    (theta    <=    0.5))    {    for    (int    i    =    0;    i    <    interpolatedState.length;    ++i)    {    interpolatedState[i]    =    [BUGGY]    previousState[i]    +    theta    *    h    *    (v1[i]    /    (eta    *    (v2[i]    +    theta    *    (v3[i]    +    eta    *    v4[i]))));    interpolatedDerivatives[i]    =    v1[i]    +    dot2    *    v2[i]    +    dot3    *    v3[i]    +    dot4    *    v4[i];    }    }    else    {    for    (int    i    =    0;    i    <    interpolatedState.length;    ++i)    {    interpolatedState[i]    =    currentState[i]    -    oneMinusThetaH    *    (v1[i]    -    theta    *    (v2[i]    +    theta    *    (v3[i]    +    eta    *    v4[i])));    interpolatedDerivatives[i]    =    v1[i]    +    dot2    *    v2[i]    +    dot3    *    v3[i]    +    dot4    *    v4[i];    }    }        [CLASS]        DormandPrince54StepInterpolator    [METHOD]    computeInterpolatedStateAndDerivatives    [RETURN_TYPE]    void        final    double    theta    final    double    oneMinusThetaH    [VARIABLES]    boolean    forward    vectorsInitialized    double[]    v1    v2    v3    v4    y    double    A70    A72    A73    A74    A75    D0    D2    D3    D4    D5    D6    dot2    dot3    dot4    eta    oneMinusThetaH    t    theta    twoTheta    yDot0    yDot2    yDot3    yDot4    yDot5    yDot6    long    serialVersionUID    int    i        	math_68080_DormandPrince54StepInterpolator_1_1	210	1	src/main/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54StepInterpolator.java
189	[PATCH]    p    =    p    *    x2    +    -0.16666666666666666;	[BUG]    [BUGGY]    p    =    p    *    x2    +    +0.16666666666666666;    [FE]    junit.framework.AssertionFailedError:    expected:<-0.7450503051988026>    but    was:<-0.7450799042767889>    testMultiplyDifferentiable    [CONTEXT]    private    static    double    polySine(final    double    x)    {    double    x2    =    x*x;    double    p    =    2.7553817452272217E-6;    p    =    p    *    x2    +    -1.9841269659586505E-4;    p    =    p    *    x2    +    0.008333333333329196;    [BUGGY]    p    =    p    *    x2    +    +0.16666666666666666;            p    =    p    *    x2    *    x;    return    p;    }    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    polySine    [RETURN_TYPE]    double        final    double    x    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    negate    negative    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    hiPrecOut    lnCoef_i    lnCoef_last    lnm    lns    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    a2    aa    ab    absAsinh    absAtanh    b    base    baseA    baseB    c    cD2pH    cRH    cTmpH    cd    d    d1High    d1Low    d2p    d2pHH    d2pHL    d2pHigh    d2pLow    da    daa    dab    db    denom    denomb    denomr    epsilon    extra    finalRemA    finalRemB    fracPartA    fracPartB    fx1    intPartA    intPartB    lna    lnb    lnza    lnzb    lores    na    nb    numer    p    rHH    rHL    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    resultHigh    resultLow    rln10a    rln10b    t    temp    tempA    tempB    tempC    tmp    tmp1    tmp2    tmpHigh    tmpLow    x    x2    xa    xb    xpa    xpb    y    ya    yaa    yab    yb    z    za    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    e    exp    finalK    i    intFrac    intVal    k    splitFactor    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    bits    xl    yi        	math_114384_FastMath_1_1	1685	1	src/main/java/org/apache/commons/math3/util/FastMath.java
190	[PATCH]    return    FastMath.sqrt(getChiSquare()    /    rows);	[BUG]    [BUGGY]    return    FastMath.sqrt(getChiSquare()    +    rows);    [FE]    junit.framework.AssertionFailedError    testMath372    [CONTEXT]    public    double    getRMS()    {    [BUGGY]    return    FastMath.sqrt(getChiSquare()    +    rows);    }    [CLASS]        AbstractLeastSquaresOptimizer    [METHOD]    getRMS    [RETURN_TYPE]    double        [VARIABLES]    boolean    double[]    objective    params    point    res    residuals    weightedResiduals    MultivariateDifferentiableVectorFunction    jF    RealMatrix    weightMatrixSqrt    weightedJacobian    double    DEFAULT_SINGULARITY_THRESHOLD    cost    double[][]    jacobianData    weightedResidualJacobian    int    cols    i    j    jacobianEvaluations    nC    nR    rows        	math_86193_AbstractLeastSquaresOptimizer_1_1	240	1	src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java
191	[PATCH]    for    (int    i    =    0;    i    <    n;    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    1;    i    <    n;    i++)    {    [FE]    junit.framework.AssertionFailedError:    expected:<-0.3133>    but    was:<-0.4177863742936748>    testPaired    [CONTEXT]    public    static    double    sumDifference(final    double[]    sample1,    final    double[]    sample2)    throws    DimensionMismatchException,    NoDataException    {    int    n    =    sample1.length;    if    (n    !=    sample2.length)    {    throw    new    DimensionMismatchException(n,    sample2.length);    }    if    (n    <=    0)    {    throw    new    NoDataException(LocalizedFormats.INSUFFICIENT_DIMENSION);    }    double    result    =    0;    [BUGGY]    for    (int    i    =    1;    i    <    n;    i++)    {    result    +=    sample1[i]    -    sample2[i];    }    return    result;    }    [CLASS]        StatUtils    [METHOD]    sumDifference    [RETURN_TYPE]    double        final    double[]    sample1    final    double[]    sample2    [VARIABLES]    Percentile    PERCENTILE    boolean    double[]    sample1    sample2    double    result    GeometricMean    GEOMETRIC_MEAN    UnivariateStatistic    MAX    MEAN    MIN    PRODUCT    SUM    SUM_OF_LOGS    SUM_OF_SQUARES    Variance    VARIANCE    int    i    n        	math_97829_StatUtils_1_1	714	1	src/main/java/org/apache/commons/math3/stat/StatUtils.java
192	[PATCH]    for    (int    col    =    m    -    1;    col    >=    0;    col--)    {	[BUG]    [BUGGY]    for    (int    col    =    m    +    1;    col    >=    0;    col--)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    4    testExamples    [CONTEXT]        for    (int    col    =    0;    col    <    m;    col++)    {    final    T    bpCol    =    bp[col];    for    (int    i    =    col    +    1;    i    <    m;    i++)    {    bp[i]    =    bp[i].subtract(bpCol.multiply(lu[i][col]));    }    }            [BUGGY]    for    (int    col    =    m    +    1;    col    >=    0;    col--)    {    bp[col]    =    bp[col].divide(lu[col][col]);    final    T    bpCol    =    bp[col];    for    (int    i    =    0;    i    <    col;    i++)    {    bp[i]    =    bp[i].subtract(bpCol.multiply(lu[i][col]));    }    }    return    new    ArrayFieldVector<T>(bp,    false);    }        [CLASS]    	math_58006_FieldLUDecomposition_1_1	369	1	src/main/java/org/apache/commons/math3/linear/FieldLUDecomposition.java
193	[PATCH]    if    (divisor.isInfinite()    &&    !isInfinite())    {	[BUG]    [BUGGY]    if    (divisor.isInfinite())    {    [FE]    junit.framework.AssertionFailedError:    expected:<0.0>    but    was:<NaN>    testScalarDivideInf    [CONTEXT]    if    (isNaN    ||    divisor.isNaN)    {    return    NaN;    }    final    double    c    =    divisor.getReal();    final    double    d    =    divisor.getImaginary();    if    (c    ==    0.0    &&    d    ==    0.0)    {    return    NaN;    }        [BUGGY]    if    (divisor.isInfinite())    {    return    ZERO;    }    if    (FastMath.abs(c)    <    FastMath.abs(d))    {    double    q    =    c    /    d;    double    denominator    =    c    *    q    +    d;    return    createComplex((real    *    q    +    imaginary)    /    denominator,    (imaginary    *    q    -    real)    /    denominator);    }    else    {    double    q    =    d    /    c;    [CLASS]        Complex    [METHOD]    divide    [RETURN_TYPE]    Complex        Complex    divisor    [VARIABLES]    boolean    isInfinite    isNaN    double    addend    c    d    denominator    imaginary    q    real    long    serialVersionUID    Complex    I    INF    NaN    ONE    ZERO    addend    divisor        	math_15736_Complex_1_1	259	1	src/main/java/org/apache/commons/math3/complex/Complex.java
194	[PATCH]    if    (cycle++    %    2    !=    0)    {	[BUG]    [BUGGY]    if    (cycle++    %    2    <    0)    {    [FE]    junit.framework.AssertionFailedError:    arrays    first    differed    at    element    [0];    expected:<1>    but    was:<9>    testCrossoverExample2    [CONTEXT]    while    (idx    !=    indices.get(0))    {        indices.add(idx);        item    =    parent2Rep.get(idx);        idx    =    parent1Rep.indexOf(item);    }            [BUGGY]    if    (cycle++    %    2    <    0)    {    for    (int    i    :    indices)    {    T    tmp    =    child1Rep.get(i);    child1Rep.set(i,    child2Rep.get(i));    child2Rep.set(i,    tmp);    }    }    visitedIndices.addAll(indices);        idx    =    (indices.get(0)    +    1)    %    length;    [CLASS]        CycleCrossover    [METHOD]    mate    [RETURN_TYPE]    ChromosomePair        AbstractListChromosome<T>    first    AbstractListChromosome<T>    second    [VARIABLES]    AbstractListChromosome    first    second    List    child1Rep    child2Rep    indices    parent1Rep    parent2Rep    boolean    randomStart    Set    visitedIndices    T    item    tmp    int    cycle    i    idx    length        	math_32847_CycleCrossover_1_1	160	1	src/main/java/org/apache/commons/math3/genetics/CycleCrossover.java
195	[PATCH]    double    c    =    a    +    t;	[BUG]    [BUGGY]    double    c    =    a    /    t;    [FE]    junit.framework.AssertionFailedError:    expected:<0.0>    but    was:<1.1102230246251565E-16>    testTanAtan    [CONTEXT]                    double    a    =    0;    double    b    =    0;        double    t    =    sintA;    [BUGGY]    double    c    =    a    /    t;    double    d    =    -(c    -    a    -    t);    a    =    c;    b    =    b    +    d;    t    =    costA*sinEpsA;    c    =    a    +    t;    d    =    -(c    -    a    -    t);    a    =    c;    b    =    b    +    d;        [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    tanQ    [RETURN_TYPE]    double        double    xa    double    xb    boolean    cotanFlag    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    cotanFlag    negate    negative    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    hiPrecOut    lnCoef_i    lnCoef_last    lnm    lns    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    a2    aa    ab    absAsinh    absAtanh    b    base    baseA    baseB    c    cD2pH    cRH    cTmpH    cd    cosEpsA    cosEpsB    cosa    cosaa    cosab    cosb    costA    costB    d    d1High    d1Low    d2p    d2pHH    d2pHL    d2pHigh    d2pLow    da    daa    dab    db    denom    denomb    denomr    epsilon    err    est    esta    estb    extra    finalRemA    finalRemB    fracPartA    fracPartB    fx1    intPartA    intPartB    lna    lnb    lnza    lnzb    lores    na    nb    numer    p    pi2a    pi2b    rHH    rHL    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    resultHigh    resultLow    rln10a    rln10b    sinEpsA    sinEpsB    sina    sinb    sintA    sintB    t    temp    temp2    tempA    tempB    tempC    tmp    tmp1    tmp2    tmpHigh    tmpLow    x    x2    xa    xb    xbadj    xpa    xpb    y    ya    yaa    yab    yb    z    za    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    e    exp    finalK    i    idx    intFrac    intVal    k    splitFactor    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    bits    xl    yi        	math_114694_FastMath_1_1	1912	1	src/main/java/org/apache/commons/math3/util/FastMath.java
196	[PATCH]    ret    =    0;	[BUG]    [BUGGY]    ret    =    -1;    [FE]    junit.framework.AssertionFailedError:    probability    for    -1.0    expected:<0.0>    but    was:<-1.0>    testProbabilities    [CONTEXT]    public    double    cumulativeProbability(double    x)    {    double    ret;    if    (x    <=    0)    {    [BUGGY]    ret    =    -1;    }    else    {    ret    =    Gamma.regularizedGammaP(shape,    x    /    scale);    }    return    ret;    }    [CLASS]        GammaDistribution    [METHOD]    cumulativeProbability    [RETURN_TYPE]    double        double    x    [VARIABLES]    double    DEFAULT_INVERSE_ABSOLUTE_ACCURACY    aux    aux1    aux2    aux3    densityPrefactor1    densityPrefactor2    inverseCumAccuracy    maxLogY    minY    ret    scale    shape    shiftedShape    solverAbsoluteAccuracy    x    y    long    serialVersionUID    boolean        	math_25233_GammaDistribution_1_1	277	1	src/main/java/org/apache/commons/math3/distribution/GammaDistribution.java
197	[PATCH]    p    =            2.9234449089955446044e-06    +    p    *    w;	[BUG]    [BUGGY]    p    =        2.9234449089955446044e-06    +    p    -    w;    [FE]    junit.framework.AssertionFailedError:    expected:<4.0>    but    was:<4.00000002639017>    testMath280    [CONTEXT]    p    =0.24015818242558961693    +    p    *    w;    p    =    1.6536545626831027356    +    p    *    w;    }    else    if    (w    <    16.0)    {    w    =    FastMath.sqrt(w)    -    3.25;    p    =    2.2137376921775787049e-09;    p    =    9.0756561938885390979e-08    +    p    *    w;    p    =-2.7517406297064545428e-07    +    p    *    w;    p    =    1.8239629214389227755e-08    +    p    *    w;    p    =    1.5027403968909827627e-06    +    p    *    w;    p    =    -4.013867526981545969e-06    +    p    *    w;    [BUGGY]    p    =    2.9234449089955446044e-06    +    p    -    w;    p    =    1.2475304481671778723e-05    +    p    *    w;    p    =-4.7318229009055733981e-05    +    p    *    w;    p    =    6.8284851459573175448e-05    +    p    *    w;    p    =    2.4031110387097893999e-05    +    p    *    w;    p    =    -0.0003550375203628474796    +    p    *    w;    p    =    0.00095328937973738049703    +    p    *    w;    p    =    -0.0016882755560235047313    +    p    *    w;    p    =0.0024914420961078508066    +    p    *    w;    p    =    -0.0037512085075692412107    +    p    *    w;    p    =    0.005370914553590063617    +    p    *    w;    [CLASS]        Erf    [METHOD]    erfInv    [RETURN_TYPE]    double        final    double    x    [VARIABLES]    double    X_CRIT    p    ret    w    x    x1    x2    boolean        	math_96034_Erf_1_1	185	1	src/main/java/org/apache/commons/math3/special/Erf.java
198	[PATCH]    return    z4    >>>    (32    -    bits);	[BUG]    [BUGGY]    return    z4    >>>    (32    +    bits);    [FE]    junit.framework.AssertionFailedError:    expected:<1.0>    but    was:<1.0000000000000004>    testDerivativesWithInverseFunction    [CONTEXT]    final    int    z0    =    v[indexRm1];    final    int    z1    =    v0^    (vM1    ^    (vM1    >>>    8));    final    int    z2    =    (vM2    ^    (vM2    <<    19))    ^    (vM3    ^    (vM3    <<    14));    final    int    z3    =    z1^    z2;    final    int    z4    =    (z0    ^    (z0    <<    11))    ^    (z1    ^    (z1    <<    7))    ^    (z2    ^    (z2    <<    13));    v[index]    =    z3;    v[indexRm1]=    z4;    index=    indexRm1;        [BUGGY]    return    z4    >>>    (32    +    bits);    }    [CLASS]        Well1024a    [METHOD]    next    [RETURN_TYPE]    int        final    int    bits    [VARIABLES]    long    seed    serialVersionUID    int    K    M1    M2    M3    bits    indexRm1    seed    v0    vM1    vM2    vM3    z0    z1    z2    z3    z4    boolean        	math_94075_Well1024a_1_1	103	1	src/main/java/org/apache/commons/math3/random/Well1024a.java
199	[PATCH]    if    (g    >=    0)    {	[BUG]    [BUGGY]    if    (g    ==    0)    {    [FE]    junit.framework.AssertionFailedError:    expected:<2>    but    was:<1>    testTwoOppositeFilters    [CONTEXT]    case    MINUS    :    if    (g    <=    0)    {            return    Transformer.MIN;    }    else    {        return    previous;    }    case    MIN    :    [BUGGY]    if    (g    ==    0)    {            return    Transformer.PLUS;    }    else    {        return    previous;    }    case    MAX    :    if    (g    >=    0)    {        [CLASS]        FilterType    1    2    [METHOD]    selectTransformer    [RETURN_TYPE]    Transformer        Transformer    previous    final    double    g    final    boolean    forward    [VARIABLES]    FilterType    TRIGGER_ONLY_DECREASING_EVENTS    TRIGGER_ONLY_INCREASING_EVENTS    Transformer    previous    boolean    forward    double    g        	math_65860_FilterType_1_1	305	1	src/main/java/org/apache/commons/math3/ode/events/FilterType.java
200	[PATCH]    if    (opt.equals(    option.getLongOpt()))	[BUG]    [BUGGY]    if    (true)    [FE]    junit.framework.ComparisonFailure:    expected:<[property]>    but    was:<[mybuild.xml]>    testAnt    [CONTEXT]    private    Option    resolveOption(    String    opt    )    {    opt    =    Util.stripLeadingHyphens(opt);    for    (    Iterator    it    =    options.iterator();    it.hasNext();    )    {    Option    option    =    (Option)    it.next();    if    (opt.equals(option.getOpt()))    {    return    option;    }    [BUGGY]    if    (true)    {    return    option;    }    }    return    null;    }    [CLASS]        CommandLine    [METHOD]    resolveOption    [RETURN_TYPE]    Option        String    opt    [VARIABLES]    Iterator    it    List    args    Option    option    Set    options    String    opt    boolean        	cli_147_CommandLine_1_1	173	1	src/java/org/apache/commons/cli/CommandLine.java
201	[PATCH]    int    x    =    0;	[BUG]    [BUGGY]    int    x    =    -1;    [FE]    junit.framework.AssertionFailedError:    Unexpected    Exception:    -1    test13666    [CONTEXT]    else    {    optBuf.append('    ');    }    }    prefixList.add(optBuf);    max    =    (optBuf.length()    >    max)    ?    optBuf.length()    :    max;    }        [BUGGY]    int    x    =    -1;    for    (Iterator    i    =    optList.iterator();    i.hasNext();)    {    option    =    (Option)    i.next();    optBuf    =    new    StringBuffer(prefixList.get(x++).toString());    if    (optBuf.length()    <    max)    {    optBuf.append(createPadding(max    -    optBuf.length()));    }    [CLASS]        HelpFormatter    OptionComparator    [METHOD]    renderOptions    [RETURN_TYPE]    StringBuffer        StringBuffer    sb    int    width    Options    options    int    leftPad    int    descPad    [VARIABLES]    Options    options    StringBuffer    optBuf    sb    boolean    Iterator    i    List    optList    prefixList    Option    option    String    DEFAULT_ARG_NAME    DEFAULT_LONG_OPT_PREFIX    DEFAULT_OPT_PREFIX    DEFAULT_SYNTAX_PREFIX    app    cmdLineSyntax    defaultArgName    defaultLongOptPrefix    defaultNewLine    defaultOptPrefix    defaultSyntaxPrefix    dpad    footer    header    lpad    name    newline    prefix    text    int    DEFAULT_DESC_PAD    DEFAULT_LEFT_PAD    DEFAULT_WIDTH    argPos    defaultDescPad    defaultLeftPad    defaultWidth    descPad    leftPad    max    nextLineTabStop    padding    width    x        	cli_573_HelpFormatter_1_1	700	1	src/java/org/apache/commons/cli/HelpFormatter.java
202	[PATCH]    if    ((header    !=    null)    &&    (header.trim().length()    >    0))	[BUG]    [BUGGY]    if    ((header.trim().length()    >    0))    [FE]    junit.framework.AssertionFailedError:    Unexpected    Exception:    null    test13666    [CONTEXT]    if    (autoUsage)    {    printUsage(pw,    width,    cmdLineSyntax,    options);    }    else    {    printUsage(pw,    width,    cmdLineSyntax);    }        [BUGGY]    if    ((header.trim().length()    >    0))    {    printWrapped(pw,    width,    header);    }    printOptions(pw,    width,    options,    leftPad,    descPad);    if    ((footer    !=    null)    &&    (footer.trim().length()    >    0))    {    printWrapped(pw,    width,    footer);    }    [CLASS]        HelpFormatter    OptionComparator    [METHOD]    printHelp    [RETURN_TYPE]    void        PrintWriter    pw    int    width    String    cmdLineSyntax    String    header    Options    options    int    leftPad    int    descPad    String    footer    boolean    autoUsage    [VARIABLES]    Options    options    String    DEFAULT_ARG_NAME    DEFAULT_LONG_OPT_PREFIX    DEFAULT_OPT_PREFIX    DEFAULT_SYNTAX_PREFIX    cmdLineSyntax    defaultArgName    defaultLongOptPrefix    defaultNewLine    defaultOptPrefix    defaultSyntaxPrefix    footer    header    name    newline    prefix    boolean    autoUsage    int    DEFAULT_DESC_PAD    DEFAULT_LEFT_PAD    DEFAULT_WIDTH    defaultDescPad    defaultLeftPad    defaultWidth    descPad    leftPad    padding    width    PrintWriter    pw        	cli_476_HelpFormatter_1_1	409	1	src/java/org/apache/commons/cli/HelpFormatter.java
203	[PATCH]    return    (this.numberOfArgs    >    0)    ||    (numberOfArgs    ==    UNLIMITED_VALUES);	[BUG]    [BUGGY]    return    (this.numberOfArgs    >    0)    ||    (false);    [FE]    java.lang.NullPointerException    testAnt    [CONTEXT]    public    boolean    hasArg()    {    [BUGGY]    return    (this.numberOfArgs    >    0)    ||    (false);    }    [CLASS]        Option    [METHOD]    hasArg    [RETURN_TYPE]    boolean        [VARIABLES]    boolean    hasArg    optionalArg    required    ArrayList    values    char    valuesep    Object    type    String    argName    description    longOpt    opt    int    UNINITIALIZED    UNLIMITED_VALUES    numberOfArgs        	cli_177_Option_1_1	261	1	src/java/org/apache/commons/cli/Option.java
204	[PATCH]    if    (pos    ==    -1)	[BUG]    [BUGGY]    if    (pos    >=    -1)    [FE]    junit.framework.ComparisonFailure:    single    line    text    expected:<This    is    a[    testPrintWrapped    [CONTEXT]    {    int    pos    =    findWrapPos(text,    width,    0);        [BUGGY]    if    (pos    >=    -1)    {    sb.append(rtrim(text));    return    sb;    }    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);            final    String    padding    =    createPadding(nextLineTabStop);    [CLASS]        HelpFormatter    OptionComparator    [METHOD]    renderWrappedText    [RETURN_TYPE]    StringBuffer        StringBuffer    sb    int    width    int    nextLineTabStop    String    text    [VARIABLES]    StringBuffer    sb    String    DEFAULT_ARG_NAME    DEFAULT_LONG_OPT_PREFIX    DEFAULT_OPT_PREFIX    DEFAULT_SYNTAX_PREFIX    app    cmdLineSyntax    defaultArgName    defaultLongOptPrefix    defaultNewLine    defaultOptPrefix    defaultSyntaxPrefix    dpad    footer    header    lpad    name    newline    padding    prefix    text    boolean    int    DEFAULT_DESC_PAD    DEFAULT_LEFT_PAD    DEFAULT_WIDTH    argPos    defaultDescPad    defaultLeftPad    defaultWidth    descPad    leftPad    max    nextLineTabStop    padding    pos    width    x        	cli_598_HelpFormatter_1_1	748	1	src/java/org/apache/commons/cli/HelpFormatter.java
205	[PATCH]    return    (isValidChar(c)    ||    (c    ==    '    ')    ||    (c    ==    '?')    ||    c    ==    '@');	[BUG]    [BUGGY]    return    (isValidChar(c)    ||    (c    >=    '    ')    ||    (c    ==    '?')    ||    c    ==    '@');    [FE]    junit.framework.AssertionFailedError:    IllegalArgumentException    not    caught    testIllegalOptions    [CONTEXT]    private    static    boolean    isValidOpt(char    c)    {    [BUGGY]    return    (isValidChar(c)    ||    (c    >=    '    ')    ||    (c    ==    '?')    ||    c    ==    '@');    }    [CLASS]        OptionValidator    [METHOD]    isValidOpt    [RETURN_TYPE]    boolean        char    c    [VARIABLES]    boolean    char    c        	cli_821_OptionValidator_1_1	87	1	src/java/org/apache/commons/cli/OptionValidator.java
206	[PATCH]    else    if    ((startPos    +    width)    >=    text.length())	[BUG]    [BUGGY]    else    if    ((startPos    -    width)    >=    text.length())    [FE]    junit.framework.AssertionFailedError:    Unexpected    Exception:    String    index    out    of    range:    74    test13666    [CONTEXT]    {    int    pos    =    -1;        if    (((pos    =    text.indexOf('\n',    startPos))    !=    -1    &&    pos    <=    width)    ||    ((pos    =    text.indexOf('\t',    startPos))    !=    -1    &&    pos    <=    width))    {    return    pos+1;    }    [BUGGY]    else    if    ((startPos    -    width)    >=    text.length())    {    return    -1;    }            pos    =    startPos    +    width;    char    c;        [CLASS]        HelpFormatter    OptionComparator    [METHOD]    findWrapPos    [RETURN_TYPE]    int        String    text    int    width    int    startPos    [VARIABLES]    char    c    String    DEFAULT_ARG_NAME    DEFAULT_LONG_OPT_PREFIX    DEFAULT_OPT_PREFIX    DEFAULT_SYNTAX_PREFIX    app    cmdLineSyntax    defaultArgName    defaultLongOptPrefix    defaultNewLine    defaultOptPrefix    defaultSyntaxPrefix    dpad    footer    header    lpad    name    newline    padding    prefix    text    boolean    int    DEFAULT_DESC_PAD    DEFAULT_LEFT_PAD    DEFAULT_WIDTH    argPos    defaultDescPad    defaultLeftPad    defaultWidth    descPad    leftPad    max    nextLineTabStop    padding    pos    startPos    width    x        	cli_653_HelpFormatter_1_1	799	1	src/java/org/apache/commons/cli/HelpFormatter.java
207	[PATCH]    while    ((pos    >    0)    &&    Character.isWhitespace(s.charAt(pos    -    1)))	[BUG]    [BUGGY]    while    ((pos    >=    0)    &&    Character.isWhitespace(s.charAt(pos    -    1)))    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    -1    test21215    [CONTEXT]    protected    String    rtrim(String    s)    {    if    ((s    ==    null)    ||    (s.length()    ==    0))    {    return    s;    }    int    pos    =    s.length();        [BUGGY]    while    ((pos    >=    0)    &&    Character.isWhitespace(s.charAt(pos    -    1)))    {    --pos;    }    return    s.substring(0,    pos);    }    [CLASS]        HelpFormatter    OptionComparator    [METHOD]    rtrim    [RETURN_TYPE]    String        String    s    [VARIABLES]    int    DEFAULT_DESC_PAD    DEFAULT_LEFT_PAD    DEFAULT_WIDTH    argPos    defaultDescPad    defaultLeftPad    defaultWidth    descPad    i    leftPad    len    max    nextLineTabStop    padding    pos    startPos    width    x    String    DEFAULT_ARG_NAME    DEFAULT_LONG_OPT_PREFIX    DEFAULT_OPT_PREFIX    DEFAULT_SYNTAX_PREFIX    app    cmdLineSyntax    defaultArgName    defaultLongOptPrefix    defaultNewLine    defaultOptPrefix    defaultSyntaxPrefix    dpad    footer    header    lpad    name    newline    padding    prefix    s    text    boolean        	cli_735_HelpFormatter_1_1	870	1	src/java/org/apache/commons/cli/HelpFormatter.java
208	[PATCH]    return    false;	[BUG]    [BUGGY]    return    true;    [FE]    junit.framework.ComparisonFailure:    flag    a    expected:<foo>    but    was:<null>    testSimplePattern    [CONTEXT]    public    static    boolean    isValueCode(char    ch)    {    if    ((ch    !=    '@')    &&    (ch    !=    ':')    &&    (ch    !=    '%')    &&    (ch    !=    '+')    &&    (ch    !=    '#')    &&    (ch    !=    '<')    &&    (ch    !=    '>')    &&    (ch    !=    '*')    &&    (ch    !=    '/')    &&    (ch    !=    '!'))    {    [BUGGY]    return    true;    }    return    true;    }    [CLASS]        PatternOptionBuilder    [METHOD]    isValueCode    [RETURN_TYPE]    boolean        char    ch    [VARIABLES]    char    ch    Class    CLASS_VALUE    DATE_VALUE    EXISTING_FILE_VALUE    FILES_VALUE    FILE_VALUE    NUMBER_VALUE    OBJECT_VALUE    STRING_VALUE    URL_VALUE    boolean        	cli_934_PatternOptionBuilder_1_1	142	1	src/java/org/apache/commons/cli/PatternOptionBuilder.java
209	[PATCH]    else    if    ((startPos    +    width)    >=    text.length())	[BUG]    [BUGGY]    else    if    ((startPos    %    width)    >=    text.length())    [FE]    junit.framework.AssertionFailedError:    Unexpected    Exception:    String    index    out    of    range:    74    test13666    [CONTEXT]    {    int    pos    =    -1;        if    (((pos    =    text.indexOf('\n',    startPos))    !=    -1    &&    pos    <=    width)    ||    ((pos    =    text.indexOf('\t',    startPos))    !=    -1    &&    pos    <=    width))    {    return    pos+1;    }    [BUGGY]    else    if    ((startPos    %    width)    >=    text.length())    {    return    -1;    }            pos    =    startPos    +    width;    char    c;        [CLASS]        HelpFormatter    OptionComparator    [METHOD]    findWrapPos    [RETURN_TYPE]    int        String    text    int    width    int    startPos    [VARIABLES]    char    c    String    DEFAULT_ARG_NAME    DEFAULT_LONG_OPT_PREFIX    DEFAULT_OPT_PREFIX    DEFAULT_SYNTAX_PREFIX    app    cmdLineSyntax    defaultArgName    defaultLongOptPrefix    defaultNewLine    defaultOptPrefix    defaultSyntaxPrefix    dpad    footer    header    lpad    name    newline    padding    prefix    text    boolean    int    DEFAULT_DESC_PAD    DEFAULT_LEFT_PAD    DEFAULT_WIDTH    argPos    defaultDescPad    defaultLeftPad    defaultWidth    descPad    leftPad    max    nextLineTabStop    padding    pos    startPos    width    x        	cli_651_HelpFormatter_1_1	799	1	src/java/org/apache/commons/cli/HelpFormatter.java
210	[PATCH]    return    (values    ==    null)    ?    null    :    values[0];	[BUG]    [BUGGY]    return    (false)    ?    null    :    values[0];    [FE]    junit.framework.AssertionFailedError:    NullPointer    caught:    null    test11680    [CONTEXT]    public    String    getOptionValue(String    opt)    {    String[]    values    =    getOptionValues(opt);        [BUGGY]    return    (false)    ?    null    :    values[0];    }    [CLASS]        CommandLine    [METHOD]    getOptionValue    [RETURN_TYPE]    String        String    opt    [VARIABLES]    List    args    Set    options    String    opt    String[]    values    boolean        	cli_138_CommandLine_1_1	124	1	src/java/org/apache/commons/cli/CommandLine.java
211	[PATCH]    &&    (c    !=    '\n')    &&    (c    !=    '\r'))	[BUG]    [BUGGY]    &&    (c    !=    '\n')    &&    (c    <    '\r'))    [FE]    junit.framework.ComparisonFailure:    single    line    text    expected:<This    is    a[    testPrintWrapped    [CONTEXT]    return    -1;    }            pos    =    startPos    +    width;    char    c;    while    ((pos    >=    startPos)    &&    ((c    =    text.charAt(pos))    !=    '    ')    [BUGGY]    &&    (c    !=    '\n')    &&    (c    <    '\r'))    {    --pos;    }        if    (pos    >    startPos)    {    return    pos;    }        [CLASS]        HelpFormatter    OptionComparator    [METHOD]    findWrapPos    [RETURN_TYPE]    int        String    text    int    width    int    startPos    [VARIABLES]    char    c    String    DEFAULT_ARG_NAME    DEFAULT_LONG_OPT_PREFIX    DEFAULT_OPT_PREFIX    DEFAULT_SYNTAX_PREFIX    app    cmdLineSyntax    defaultArgName    defaultLongOptPrefix    defaultNewLine    defaultOptPrefix    defaultSyntaxPrefix    dpad    footer    header    lpad    name    newline    padding    prefix    text    boolean    int    DEFAULT_DESC_PAD    DEFAULT_LEFT_PAD    DEFAULT_WIDTH    argPos    defaultDescPad    defaultLeftPad    defaultWidth    descPad    leftPad    max    nextLineTabStop    padding    pos    startPos    width    x        	cli_678_HelpFormatter_1_1	811	1	src/java/org/apache/commons/cli/HelpFormatter.java
212	[PATCH]    while    ((pos    >    0)    &&    Character.isWhitespace(s.charAt(pos    -    1)))	[BUG]    [BUGGY]    while    ((pos    >    0))    [FE]    junit.framework.ComparisonFailure:    expected:<[usage:    dir    test13666    [CONTEXT]    protected    String    rtrim(String    s)    {    if    ((s    ==    null)    ||    (s.length()    ==    0))    {    return    s;    }    int    pos    =    s.length();        [BUGGY]    while    ((pos    >    0))    {    --pos;    }    return    s.substring(0,    pos);    }    [CLASS]        HelpFormatter    OptionComparator    [METHOD]    rtrim    [RETURN_TYPE]    String        String    s    [VARIABLES]    int    DEFAULT_DESC_PAD    DEFAULT_LEFT_PAD    DEFAULT_WIDTH    argPos    defaultDescPad    defaultLeftPad    defaultWidth    descPad    i    leftPad    len    max    nextLineTabStop    padding    pos    startPos    width    x    String    DEFAULT_ARG_NAME    DEFAULT_LONG_OPT_PREFIX    DEFAULT_OPT_PREFIX    DEFAULT_SYNTAX_PREFIX    app    cmdLineSyntax    defaultArgName    defaultLongOptPrefix    defaultNewLine    defaultOptPrefix    defaultSyntaxPrefix    dpad    footer    header    lpad    name    newline    padding    prefix    s    text    boolean        	cli_745_HelpFormatter_1_1	870	1	src/java/org/apache/commons/cli/HelpFormatter.java
213	[PATCH]    return    shortOpts.containsKey(opt)    ||    longOpts.containsKey(opt);	[BUG]    [BUGGY]    return    shortOpts.containsKey(opt);    [FE]    junit.framework.AssertionFailedError:    org.apache.commons.cli.UnrecognizedOptionException:    Unrecognized    option:    --enable-a    testSimpleLong    [CONTEXT]    public    boolean    hasOption(String    opt)    {    opt    =    Util.stripLeadingHyphens(opt);        [BUGGY]    return    shortOpts.containsKey(opt);    }    [CLASS]        Options    [METHOD]    hasOption    [RETURN_TYPE]    boolean        String    opt    [VARIABLES]    List    opts    requiredOpts    String    opt    boolean    Map    longOpts    optionGroups    shortOpts        	cli_128_Options_1_1	244	1	src/java/org/apache/commons/cli/Options.java
214	[PATCH]    if    ((ch    !=    '@')    &&    (ch    !=    ':')    &&    (ch    !=    '%')    &&    (ch    !=    '+')	[BUG]    [BUGGY]    if    ((true)    &&    (ch    !=    ':')    &&    (ch    !=    '%')    &&    (ch    !=    '+')    [FE]    junit.framework.AssertionFailedError:    object    flag    b    expected:<[]>    but    was:<null>    testSimplePattern    [CONTEXT]    public    static    boolean    isValueCode(char    ch)    {    [BUGGY]    if    ((true)    &&    (ch    !=    ':')    &&    (ch    !=    '%')    &&    (ch    !=    '+')    &&    (ch    !=    '#')    &&    (ch    !=    '<')    &&    (ch    !=    '>')    &&    (ch    !=    '*')    &&    (ch    !=    '/')    &&    (ch    !=    '!'))    {    return    false;    }    return    true;    }    [CLASS]        PatternOptionBuilder    [METHOD]    isValueCode    [RETURN_TYPE]    boolean        char    ch    [VARIABLES]    char    ch    Class    CLASS_VALUE    DATE_VALUE    EXISTING_FILE_VALUE    FILES_VALUE    FILE_VALUE    NUMBER_VALUE    OBJECT_VALUE    STRING_VALUE    URL_VALUE    boolean        	cli_870_PatternOptionBuilder_1_1	138	1	src/java/org/apache/commons/cli/PatternOptionBuilder.java
215	[PATCH]    optBuf.append(createPadding(max    -    optBuf.length()));	[BUG]    [BUGGY]    optBuf.append(createPadding(max    +    optBuf.length()));    [FE]    junit.framework.ComparisonFailure:    multiple    wrapped    options    expected:<...dd    dddd    testPrintOptions    [CONTEXT]    int    x    =    0;    for    (Iterator    i    =    optList.iterator();    i.hasNext();)    {    option    =    (Option)    i.next();    optBuf    =    new    StringBuffer(prefixList.get(x++).toString());    if    (optBuf.length()    <    max)    {    [BUGGY]    optBuf.append(createPadding(max    +    optBuf.length()));    }    optBuf.append(dpad);    int    nextLineTabStop    =    max    +    descPad;    if    (option.getDescription()    !=    null)    {    optBuf.append(option.getDescription());    }    [CLASS]        HelpFormatter    OptionComparator    [METHOD]    renderOptions    [RETURN_TYPE]    StringBuffer        StringBuffer    sb    int    width    Options    options    int    leftPad    int    descPad    [VARIABLES]    Options    options    StringBuffer    optBuf    sb    boolean    Iterator    i    List    optList    prefixList    Option    option    String    DEFAULT_ARG_NAME    DEFAULT_LONG_OPT_PREFIX    DEFAULT_OPT_PREFIX    DEFAULT_SYNTAX_PREFIX    app    cmdLineSyntax    defaultArgName    defaultLongOptPrefix    defaultNewLine    defaultOptPrefix    defaultSyntaxPrefix    dpad    footer    header    lpad    name    newline    prefix    text    int    DEFAULT_DESC_PAD    DEFAULT_LEFT_PAD    DEFAULT_WIDTH    argPos    defaultDescPad    defaultLeftPad    defaultWidth    descPad    leftPad    max    nextLineTabStop    padding    width    x        	cli_579_HelpFormatter_1_1	709	1	src/java/org/apache/commons/cli/HelpFormatter.java
216	[PATCH]    char    ch    =    opt.charAt(0);	[BUG]    [BUGGY]    char    ch    =    opt.charAt(1);    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    1    testAnt    [CONTEXT]    {        if    (opt    ==    null)    {    return;    }        else    if    (opt.length()    ==    1)    {    [BUGGY]    char    ch    =    opt.charAt(1);    if    (!isValidOpt(ch))    {    throw    new    IllegalArgumentException(   "illegal    option    value    '   "    +    ch    +       "'   ");    }    }        else    [CLASS]        OptionValidator    [METHOD]    validateOption    [RETURN_TYPE]    void        String    opt    [VARIABLES]    boolean    char    ch    String    opt    int    i    char[]    chars        	cli_809_OptionValidator_1_1	52	1	src/java/org/apache/commons/cli/OptionValidator.java
217	[PATCH]    if    (option.hasArg())	[BUG]    [BUGGY]    if    (true)    [FE]    junit.framework.ComparisonFailure:    simple    non-wrapped    option    expected:<    -a    []    aaaa    aaaa    aaaa    aaa...>    but    was:<    -a    [<arg>    ]    aaaa    aaaa    aaaa    aaa...>    testPrintOptions    [CONTEXT]    optBuf.append(lpad).append(defaultOptPrefix)    .append(option.getOpt());    if    (option.hasLongOpt())    {    optBuf.append(',').append(defaultLongOptPrefix)    .append(option.getLongOpt());    }    }        [BUGGY]    if    (true)    {    if    (option.hasArgName())    {    optBuf.append(   "    <   ").append(option.getArgName()).append(   ">   ");    }    else    {    optBuf.append('    ');    }    }    [CLASS]        HelpFormatter    OptionComparator    [METHOD]    renderOptions    [RETURN_TYPE]    StringBuffer        StringBuffer    sb    int    width    Options    options    int    leftPad    int    descPad    [VARIABLES]    Options    options    StringBuffer    optBuf    sb    boolean    Iterator    i    List    optList    prefixList    Option    option    String    DEFAULT_ARG_NAME    DEFAULT_LONG_OPT_PREFIX    DEFAULT_OPT_PREFIX    DEFAULT_SYNTAX_PREFIX    app    cmdLineSyntax    defaultArgName    defaultLongOptPrefix    defaultNewLine    defaultOptPrefix    defaultSyntaxPrefix    dpad    footer    header    lpad    name    newline    prefix    text    int    DEFAULT_DESC_PAD    DEFAULT_LEFT_PAD    DEFAULT_WIDTH    argPos    defaultDescPad    defaultLeftPad    defaultWidth    descPad    leftPad    max    nextLineTabStop    padding    width    x        	cli_562_HelpFormatter_1_1	684	1	src/java/org/apache/commons/cli/HelpFormatter.java
218	[PATCH]    if    (pos    ==    -1)	[BUG]    [BUGGY]    if    (false)    [FE]    junit.framework.AssertionFailedError:    Unexpected    Exception:    String    index    out    of    range:    -1    test13666    [CONTEXT]    {    int    pos    =    findWrapPos(text,    width,    0);        [BUGGY]    if    (false)    {    sb.append(rtrim(text));    return    sb;    }    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);            final    String    padding    =    createPadding(nextLineTabStop);    [CLASS]        HelpFormatter    OptionComparator    [METHOD]    renderWrappedText    [RETURN_TYPE]    StringBuffer        StringBuffer    sb    int    width    int    nextLineTabStop    String    text    [VARIABLES]    StringBuffer    sb    String    DEFAULT_ARG_NAME    DEFAULT_LONG_OPT_PREFIX    DEFAULT_OPT_PREFIX    DEFAULT_SYNTAX_PREFIX    app    cmdLineSyntax    defaultArgName    defaultLongOptPrefix    defaultNewLine    defaultOptPrefix    defaultSyntaxPrefix    dpad    footer    header    lpad    name    newline    padding    prefix    text    boolean    int    DEFAULT_DESC_PAD    DEFAULT_LEFT_PAD    DEFAULT_WIDTH    argPos    defaultDescPad    defaultLeftPad    defaultWidth    descPad    leftPad    max    nextLineTabStop    padding    pos    width    x        	cli_599_HelpFormatter_1_1	748	1	src/java/org/apache/commons/cli/HelpFormatter.java
219	[PATCH]    return    (this.numberOfArgs    >    1)	[BUG]    [BUGGY]    return    (this.numberOfArgs    >    -1)    [FE]    junit.framework.AssertionFailedError    testTwoCompleteOptions    [CONTEXT]    public    boolean    hasArgs()    {    [BUGGY]    return    (this.numberOfArgs    >    -1)    ||    (this.numberOfArgs    ==    UNLIMITED_VALUES);    }    [CLASS]        Option    [METHOD]    hasArgs    [RETURN_TYPE]    boolean        [VARIABLES]    boolean    hasArg    optionalArg    required    ArrayList    values    char    valuesep    Object    type    String    argName    description    longOpt    opt    int    UNINITIALIZED    UNLIMITED_VALUES    numberOfArgs        	cli_196_Option_1_1	343	1	src/java/org/apache/commons/cli/Option.java
220	[PATCH]    else    if    (ch    ==    '+')	[BUG]    [BUGGY]    else    if    (false)    [FE]    junit.framework.AssertionFailedError:    class    flag    f    expected:<class    java.util.Calendar>    but    was:<null>    testSimplePattern    [CONTEXT]    return    PatternOptionBuilder.OBJECT_VALUE;    }    else    if    (ch    ==    ':')    {    return    PatternOptionBuilder.STRING_VALUE;    }    else    if    (ch    ==    '%')    {    return    PatternOptionBuilder.NUMBER_VALUE;    }    [BUGGY]    else    if    (false)    {    return    PatternOptionBuilder.CLASS_VALUE;    }    else    if    (ch    ==    '#')    {    return    PatternOptionBuilder.DATE_VALUE;    }    else    if    (ch    ==    '<')    {    return    PatternOptionBuilder.EXISTING_FILE_VALUE;    [CLASS]        PatternOptionBuilder    [METHOD]    getValueClass    [RETURN_TYPE]    Object        char    ch    [VARIABLES]    char    ch    Class    CLASS_VALUE    DATE_VALUE    EXISTING_FILE_VALUE    FILES_VALUE    FILE_VALUE    NUMBER_VALUE    OBJECT_VALUE    STRING_VALUE    URL_VALUE    boolean        	cli_852_PatternOptionBuilder_1_1	101	1	src/java/org/apache/commons/cli/PatternOptionBuilder.java
221	[PATCH]    return    str.substring(2,    str.length());	[BUG]    [BUGGY]    return    str.substring(-2,    str.length());    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    -2    testLs    [CONTEXT]    static    String    stripLeadingHyphens(String    str)    {    if    (str.startsWith(   "--   "))    {    [BUGGY]    return    str.substring(-2,    str.length());    }    else    if    (str.startsWith(   "-   "))    {    return    str.substring(1,    str.length());    }    return    str;    }    [CLASS]        Util    [METHOD]    stripLeadingHyphens    [RETURN_TYPE]    String        String    str    [VARIABLES]    boolean    String    str        	cli_1098_Util_1_1	37	1	src/java/org/apache/commons/cli/Util.java
222	[PATCH]    boolean    eatTheRest    =    false;	[BUG]    [BUGGY]    boolean    eatTheRest    =    true;    [FE]    junit.framework.AssertionFailedError:    Unexpected    exception:Unrecognized    option:    -Dproperty=value    testAnt    [CONTEXT]    {    init();        [BUGGY]    boolean    eatTheRest    =    true;    Option    currentOption    =    null;    for    (int    i    =    0;    i    <    arguments.length;    i++)    {    if    (   "--   ".equals(arguments[i]))    {    eatTheRest    =    true;    tokens.add(   "--   ");    }    else    if    (   "-   ".equals(arguments[i]))    [CLASS]        GnuParser    [METHOD]    flatten    [RETURN_TYPE]    String[]        Options    options    String[]    arguments    boolean    stopAtNonOption    [VARIABLES]    ArrayList    tokens    Options    options    Option    currentOption    option    specialOption    String[]    arguments    boolean    eatTheRest    stopAtNonOption    int    i        	cli_342_GnuParser_1_1	66	1	src/java/org/apache/commons/cli/GnuParser.java
223	[PATCH]    result    =    31    *    result    +    (    longOpt    !=    null    ?    longOpt.hashCode()    :    0    );	[BUG]    [BUGGY]    result    =    31    /    result    +    (    longOpt    !=    null    ?    longOpt.hashCode()    :    0    );    [FE]    java.lang.ArithmeticException:    /    by    zero    testLs    [CONTEXT]    public    int    hashCode()    {    int    result;    result    =    (    opt    !=    null    ?    opt.hashCode()    :    0    );    [BUGGY]    result    =    31    /    result    +    (    longOpt    !=    null    ?    longOpt.hashCode()    :    0    );    return    result;    }    [CLASS]        Option    [METHOD]    hashCode    [RETURN_TYPE]    int        [VARIABLES]    boolean    hasArg    optionalArg    required    ArrayList    values    char    sep    valuesep    Object    o    type    String    argName    defaultValue    description    longOpt    opt    value    int    UNINITIALIZED    UNLIMITED_VALUES    index    num    numberOfArgs    result        	cli_311_Option_1_1	630	1	src/java/org/apache/commons/cli/Option.java
224	[PATCH]    if    (stopAtNonOption)	[BUG]    [BUGGY]    if    (false)    [FE]    junit.framework.AssertionFailedError:    Confirm    3    extra    args:    1    testStop    [CONTEXT]    {    processOption(t,    iterator);    }    }        else    {    cmd.addArg(t);        [BUGGY]    if    (false)    {    eatTheRest    =    true;    }    }    [CLASS]        Parser    [METHOD]    parse    [RETURN_TYPE]    CommandLine        Options    options    String[]    arguments    Properties    properties    boolean    stopAtNonOption    [VARIABLES]    Options    options    opts    CommandLine    cmd    boolean    eatTheRest    stopAtNonOption    List    requiredOptions    tokenList    String[]    arguments    String    str    t    Properties    properties    ListIterator    iterator        	cli_33_Parser_1_1	194	1	src/java/org/apache/commons/cli/Parser.java
225	[PATCH]    arguments    =    new    String[0];	[BUG]    [BUGGY]    arguments    =    new    String[-1];    [FE]    java.lang.NegativeArraySizeException    testPropertyOptionSingularValue    [CONTEXT]    {        this.options    =    options;    requiredOptions    =    options.getRequiredOptions();    cmd    =    new    CommandLine();    boolean    eatTheRest    =    false;    if    (arguments    ==    null)    {    [BUGGY]    arguments    =    new    String[-1];    }    List    tokenList    =    Arrays.asList(flatten(this.options,    arguments,    stopAtNonOption));    ListIterator    iterator    =    tokenList.listIterator();        while    (iterator.hasNext())    [CLASS]        Parser    [METHOD]    parse    [RETURN_TYPE]    CommandLine        Options    options    String[]    arguments    Properties    properties    boolean    stopAtNonOption    [VARIABLES]    Options    options    opts    CommandLine    cmd    boolean    eatTheRest    stopAtNonOption    List    requiredOptions    tokenList    String[]    arguments    String    str    t    Properties    properties    ListIterator    iterator        	cli_9_Parser_1_1	142	1	src/java/org/apache/commons/cli/Parser.java
226	[PATCH]    options.getOption(arguments[i].substring(0,    2));	[BUG]    [BUGGY]    options.getOption(arguments[i].substring(0,    -2));    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    -2    testAnt    [CONTEXT]    if    (option    ==    null)    {        Option    specialOption    =    [BUGGY]    options.getOption(arguments[i].substring(0,    -2));    if    (specialOption    !=    null)    {    tokens.add(arguments[i].substring(0,    2));    tokens.add(arguments[i].substring(2));    }    else    if    (stopAtNonOption)    {    eatTheRest    =    true;    tokens.add(arguments[i]);    [CLASS]        GnuParser    [METHOD]    flatten    [RETURN_TYPE]    String[]        Options    options    String[]    arguments    boolean    stopAtNonOption    [VARIABLES]    ArrayList    tokens    Options    options    Option    currentOption    option    specialOption    String[]    arguments    boolean    eatTheRest    stopAtNonOption    int    i        	cli_362_GnuParser_1_1	89	1	src/java/org/apache/commons/cli/GnuParser.java
227	[PATCH]    else    if    ((startPos    +    width)    >=    text.length())	[BUG]    [BUGGY]    else    if    ((startPos    *    width)    >=    text.length())    [FE]    junit.framework.AssertionFailedError:    Unexpected    Exception:    String    index    out    of    range:    74    test13666    [CONTEXT]    {    int    pos    =    -1;        if    (((pos    =    text.indexOf('\n',    startPos))    !=    -1    &&    pos    <=    width)    ||    ((pos    =    text.indexOf('\t',    startPos))    !=    -1    &&    pos    <=    width))    {    return    pos+1;    }    [BUGGY]    else    if    ((startPos    *    width)    >=    text.length())    {    return    -1;    }            pos    =    startPos    +    width;    char    c;        [CLASS]        HelpFormatter    OptionComparator    [METHOD]    findWrapPos    [RETURN_TYPE]    int        String    text    int    width    int    startPos    [VARIABLES]    char    c    String    DEFAULT_ARG_NAME    DEFAULT_LONG_OPT_PREFIX    DEFAULT_OPT_PREFIX    DEFAULT_SYNTAX_PREFIX    app    cmdLineSyntax    defaultArgName    defaultLongOptPrefix    defaultNewLine    defaultOptPrefix    defaultSyntaxPrefix    dpad    footer    header    lpad    name    newline    padding    prefix    text    boolean    int    DEFAULT_DESC_PAD    DEFAULT_LEFT_PAD    DEFAULT_WIDTH    argPos    defaultDescPad    defaultLeftPad    defaultWidth    descPad    leftPad    max    nextLineTabStop    padding    pos    startPos    width    x        	cli_652_HelpFormatter_1_1	799	1	src/java/org/apache/commons/cli/HelpFormatter.java
228	[PATCH]    if    (!hasOption)	[BUG]    [BUGGY]    if    (!false)    [FE]    junit.framework.AssertionFailedError:    Unexpected    exception:Unrecognized    option:    -buildfile    testAnt    [CONTEXT]    {    boolean    hasOption    =    options.hasOption(arg);            [BUGGY]    if    (!false)    {    throw    new    UnrecognizedOptionException(   "Unrecognized    option:       "    +    arg);    }        final    Option    opt    =    options.getOption(arg);                [CLASS]        Parser    [METHOD]    processOption    [RETURN_TYPE]    void        String    arg    ListIterator    iter    [VARIABLES]    Options    options    opts    CommandLine    cmd    boolean    hasOption    OptionGroup    group    List    requiredOptions    tokenList    Option    opt    String    arg    ListIterator    iter        	cli_87_Parser_1_1	366	1	src/java/org/apache/commons/cli/Parser.java
229	[PATCH]    tokens.add(token.substring(0,    token.indexOf('=')));	[BUG]    [BUGGY]    tokens.add(token.substring(-1,    token.indexOf('=')));    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    -1    testLs    [CONTEXT]    if    (token.startsWith(   "--   "))    {    if    (token.indexOf('=')    !=    -1)    {    [BUGGY]    tokens.add(token.substring(-1,    token.indexOf('=')));    tokens.add(token.substring(token.indexOf('=')    +    1,    token.length()));    }    else    {    tokens.add(token);    }    }            [CLASS]        PosixParser    [METHOD]    flatten    [RETURN_TYPE]    String[]        Options    options    String[]    arguments    boolean    stopAtNonOption    [VARIABLES]    Options    options    boolean    eatTheRest    stopAtNonOption    ArrayList    tokens    Iterator    iter    Option    currentOption    String[]    arguments    String    token    int    tokenLength        	cli_987_PosixParser_1_1	115	1	src/java/org/apache/commons/cli/PosixParser.java
230	[PATCH]    arguments    =    new    String[0];	[BUG]    [BUGGY]    arguments    =    new    String[1];    [FE]    java.lang.NullPointerException    testPropertyOptionSingularValue    [CONTEXT]    {        this.options    =    options;    requiredOptions    =    options.getRequiredOptions();    cmd    =    new    CommandLine();    boolean    eatTheRest    =    false;    if    (arguments    ==    null)    {    [BUGGY]    arguments    =    new    String[1];    }    List    tokenList    =    Arrays.asList(flatten(this.options,    arguments,    stopAtNonOption));    ListIterator    iterator    =    tokenList.listIterator();        while    (iterator.hasNext())    [CLASS]        Parser    [METHOD]    parse    [RETURN_TYPE]    CommandLine        Options    options    String[]    arguments    Properties    properties    boolean    stopAtNonOption    [VARIABLES]    Options    options    opts    CommandLine    cmd    boolean    eatTheRest    stopAtNonOption    List    requiredOptions    tokenList    String[]    arguments    String    str    t    Properties    properties    ListIterator    iterator        	cli_8_Parser_1_1	142	1	src/java/org/apache/commons/cli/Parser.java
231	[PATCH]    if    (options.hasOption(str)    &&    str.startsWith(   "-   "))	[BUG]    [BUGGY]    if    (options.hasOption(str))    [FE]    junit.framework.AssertionFailedError:    org.apache.commons.cli.MissingArgumentException:    Missing    argument    for    option:attr    testOptionWithArgument    [CONTEXT]    while    (iter.hasNext())    {    String    str    =    (String)    iter.next();            [BUGGY]    if    (options.hasOption(str))    {    iter.previous();    break;    }        try    {    opt.addValue(    Util.stripLeadingAndTrailingQuotes(str)    );    }    [CLASS]        Parser    [METHOD]    processArgs    [RETURN_TYPE]    void        Option    opt    ListIterator    iter    [VARIABLES]    Options    options    opts    CommandLine    cmd    RuntimeException    exp    boolean    List    requiredOptions    tokenList    Option    opt    String    str    ListIterator    iter        	cli_77_Parser_1_1	323	1	src/java/org/apache/commons/cli/Parser.java
232	[PATCH]    int    nextLineTabStop    =    max    +    descPad;	[BUG]    [BUGGY]    int    nextLineTabStop    =    max    *    descPad;    [FE]    junit.framework.ComparisonFailure:    simple    wrapped    option    expected:<...aaa    aaaa    aaaa    testPrintOptions    [CONTEXT]    option    =    (Option)    i.next();    optBuf    =    new    StringBuffer(prefixList.get(x++).toString());    if    (optBuf.length()    <    max)    {    optBuf.append(createPadding(max    -    optBuf.length()));    }    optBuf.append(dpad);        [BUGGY]    int    nextLineTabStop    =    max    *    descPad;    if    (option.getDescription()    !=    null)    {    optBuf.append(option.getDescription());    }    renderWrappedText(sb,    width,    nextLineTabStop,    optBuf.toString());    if    (i.hasNext())    {    [CLASS]        HelpFormatter    OptionComparator    [METHOD]    renderOptions    [RETURN_TYPE]    StringBuffer        StringBuffer    sb    int    width    Options    options    int    leftPad    int    descPad    [VARIABLES]    Options    options    StringBuffer    optBuf    sb    boolean    Iterator    i    List    optList    prefixList    Option    option    String    DEFAULT_ARG_NAME    DEFAULT_LONG_OPT_PREFIX    DEFAULT_OPT_PREFIX    DEFAULT_SYNTAX_PREFIX    app    cmdLineSyntax    defaultArgName    defaultLongOptPrefix    defaultNewLine    defaultOptPrefix    defaultSyntaxPrefix    dpad    footer    header    lpad    name    newline    prefix    text    int    DEFAULT_DESC_PAD    DEFAULT_LEFT_PAD    DEFAULT_WIDTH    argPos    defaultDescPad    defaultLeftPad    defaultWidth    descPad    leftPad    max    nextLineTabStop    padding    width    x        	cli_584_HelpFormatter_1_1	714	1	src/java/org/apache/commons/cli/HelpFormatter.java
233	[PATCH]    OptionBuilder.numberOfArgs    =    (hasArg    ==    true)    ?    1    :    Option.UNINITIALIZED;	[BUG]    [BUGGY]    OptionBuilder.numberOfArgs    =    (hasArg    ==    true)    ?    -1    :    Option.UNINITIALIZED;    [FE]    junit.framework.ComparisonFailure:    flag    a    expected:<foo>    but    was:<null>    testSimplePattern    [CONTEXT]    public    static    OptionBuilder    hasArg(boolean    hasArg)    {    [BUGGY]    OptionBuilder.numberOfArgs    =    (hasArg    ==    true)    ?    -1    :    Option.UNINITIALIZED;    return    instance;    }    [CLASS]        OptionBuilder    [METHOD]    hasArg    [RETURN_TYPE]    OptionBuilder        boolean    hasArg    [VARIABLES]    boolean    hasArg    optionalArg    required    OptionBuilder    instance    char    valuesep    Object    type    String    argName    description    longopt    newLongopt    int    numberOfArgs        	cli_771_OptionBuilder_1_1	117	1	src/java/org/apache/commons/cli/OptionBuilder.java
234	[PATCH]    for    (int    i    =    1;    i    <    tokenLength;    i++)	[BUG]    [BUGGY]    for    (int    i    =    0;    i    <    tokenLength;    i++)    [FE]    java.lang.NullPointerException    test11458    [CONTEXT]    {    int    tokenLength    =    token.length();        [BUGGY]    for    (int    i    =    0;    i    <    tokenLength;    i++)    {    String    ch    =    String.valueOf(token.charAt(i));    boolean    hasOption    =    options.hasOption(ch);    if    (hasOption)    {    tokens.add(   "-   "    +    ch);    currentOption    =    options.getOption(ch);    if    (currentOption.hasArg()    &&    (token.length()    !=    (i    +    1)))    [CLASS]        PosixParser    [METHOD]    burstToken    [RETURN_TYPE]    void        String    token    boolean    stopAtNonOption    [VARIABLES]    ArrayList    tokens    Options    options    Option    currentOption    boolean    eatTheRest    hasOption    stopAtNonOption    String    ch    token    int    i    tokenLength        	cli_1045_PosixParser_1_1	282	1	src/java/org/apache/commons/cli/PosixParser.java
235	[PATCH]    return    str.substring(1,    str.length());	[BUG]    [BUGGY]    return    str.substring(-1,    str.length());    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    -1    testAnt    [CONTEXT]    static    String    stripLeadingHyphens(String    str)    {    if    (str.startsWith(   "--   "))    {    return    str.substring(2,    str.length());    }    else    if    (str.startsWith(   "-   "))    {    [BUGGY]    return    str.substring(-1,    str.length());    }    return    str;    }    [CLASS]        Util    [METHOD]    stripLeadingHyphens    [RETURN_TYPE]    String        String    str    [VARIABLES]    boolean    String    str        	cli_1102_Util_1_1	41	1	src/java/org/apache/commons/cli/Util.java
236	[PATCH]    if    ((cmdLineSyntax    ==    null)    ||    (cmdLineSyntax.length()    ==    0))	[BUG]    [BUGGY]    if    ((cmdLineSyntax    ==    null)    ||    (cmdLineSyntax.length()    >=    0))    [FE]    junit.framework.AssertionFailedError:    Unexpected    Exception:    cmdLineSyntax    not    provided    test13666    [CONTEXT]    {    [BUGGY]    if    ((cmdLineSyntax    ==    null)    ||    (cmdLineSyntax.length()    >=    0))    {    throw    new    IllegalArgumentException(   "cmdLineSyntax    not    provided   ");    }    if    (autoUsage)    {    printUsage(pw,    width,    cmdLineSyntax,    options);    }    else    {    [CLASS]        HelpFormatter    OptionComparator    [METHOD]    printHelp    [RETURN_TYPE]    void        PrintWriter    pw    int    width    String    cmdLineSyntax    String    header    Options    options    int    leftPad    int    descPad    String    footer    boolean    autoUsage    [VARIABLES]    Options    options    String    DEFAULT_ARG_NAME    DEFAULT_LONG_OPT_PREFIX    DEFAULT_OPT_PREFIX    DEFAULT_SYNTAX_PREFIX    cmdLineSyntax    defaultArgName    defaultLongOptPrefix    defaultNewLine    defaultOptPrefix    defaultSyntaxPrefix    footer    header    name    newline    prefix    boolean    autoUsage    int    DEFAULT_DESC_PAD    DEFAULT_LEFT_PAD    DEFAULT_WIDTH    defaultDescPad    defaultLeftPad    defaultWidth    descPad    leftPad    padding    width    PrintWriter    pw        	cli_457_HelpFormatter_1_1	395	1	src/java/org/apache/commons/cli/HelpFormatter.java
237	[PATCH]    if    (hasArg)	[BUG]    [BUGGY]    if    (true)    [FE]    junit.framework.AssertionFailedError:    Unexpected    exception:Missing    argument    for    option:projecthelp    testAnt    [CONTEXT]    String    description)    throws    IllegalArgumentException    {        OptionValidator.validateOption(opt);    this.opt    =    opt;    this.longOpt    =    longOpt;            [BUGGY]    if    (true)    {    this.numberOfArgs    =    1;    }    this.hasArg    =    hasArg;    this.description    =    description;    }    [CLASS]        Option    [METHOD]    <init>    [RETURN_TYPE]    String)        String    opt    String    longOpt    boolean    hasArg    String    description    [VARIABLES]    boolean    hasArg    optionalArg    required    ArrayList    values    char    valuesep    Object    type    String    argName    description    longOpt    opt    int    UNINITIALIZED    UNLIMITED_VALUES    numberOfArgs        	cli_157_Option_1_1	133	1	src/java/org/apache/commons/cli/Option.java
238	[PATCH]    return    (this.argName    !=    null    &&    this.argName.length()    >    0);	[BUG]    [BUGGY]    return    (false);    [FE]    junit.framework.ComparisonFailure:    expected:<usage:    dir    test13666    [CONTEXT]    public    boolean    hasArgName()    {    [BUGGY]    return    (false);    }    [CLASS]        Option    [METHOD]    hasArgName    [RETURN_TYPE]    boolean        [VARIABLES]    boolean    hasArg    optionalArg    required    ArrayList    values    char    valuesep    Object    type    String    argName    description    longOpt    opt    int    UNINITIALIZED    UNLIMITED_VALUES    numberOfArgs        	cli_192_Option_1_1	333	1	src/java/org/apache/commons/cli/Option.java
239	[PATCH]    return    hasNoValues()    ?    null    :    (String)    this.values.get(0);	[BUG]    [BUGGY]    return    true    ?    null    :    (String)    this.values.get(0);    [FE]    junit.framework.ComparisonFailure:    expected:<null>    but    was:<c>    test15046    [CONTEXT]    public    String    getValue()    {    [BUGGY]    return    true    ?    null    :    (String)    this.values.get(0);    }    [CLASS]        Option    [METHOD]    getValue    [RETURN_TYPE]    String        [VARIABLES]    boolean    hasArg    optionalArg    required    ArrayList    values    char    sep    valuesep    Object    type    String    argName    description    longOpt    opt    value    int    UNINITIALIZED    UNLIMITED_VALUES    index    num    numberOfArgs        	cli_263_Option_1_1	495	1	src/java/org/apache/commons/cli/Option.java
240	[PATCH]    if    ((s    ==    null)    ||    (s.length()    ==    0))	[BUG]    [BUGGY]    if    (true)    [FE]    junit.framework.ComparisonFailure:    expected:<usage:    foobar[]    test21215    [CONTEXT]    protected    String    rtrim(String    s)    {    [BUGGY]    if    (true)    {    return    s;    }    int    pos    =    s.length();    while    ((pos    >    0)    &&    Character.isWhitespace(s.charAt(pos    -    1)))    {    --pos;    }    [CLASS]        HelpFormatter    OptionComparator    [METHOD]    rtrim    [RETURN_TYPE]    String        String    s    [VARIABLES]    int    DEFAULT_DESC_PAD    DEFAULT_LEFT_PAD    DEFAULT_WIDTH    argPos    defaultDescPad    defaultLeftPad    defaultWidth    descPad    i    leftPad    len    max    nextLineTabStop    padding    pos    startPos    width    x    String    DEFAULT_ARG_NAME    DEFAULT_LONG_OPT_PREFIX    DEFAULT_OPT_PREFIX    DEFAULT_SYNTAX_PREFIX    app    cmdLineSyntax    defaultArgName    defaultLongOptPrefix    defaultNewLine    defaultOptPrefix    defaultSyntaxPrefix    dpad    footer    header    lpad    name    newline    padding    prefix    s    text    boolean        	cli_731_HelpFormatter_1_1	863	1	src/java/org/apache/commons/cli/HelpFormatter.java
241	[PATCH]    if    ((opt.getValues()    ==    null)    &&    !opt.hasOptionalArg())	[BUG]    [BUGGY]    if    (!opt.hasOptionalArg())    [FE]    junit.framework.AssertionFailedError:    Unexpected    exception:Missing    argument    for    option:buildfile    testAnt    [CONTEXT]    {    opt.addValue(    Util.stripLeadingAndTrailingQuotes(str)    );    }    catch    (RuntimeException    exp)    {    iter.previous();    break;    }    }        [BUGGY]    if    (!opt.hasOptionalArg())    {    throw    new    MissingArgumentException(   "Missing    argument    for    option:   "    +    opt.getKey());    }    }    [CLASS]        Parser    [METHOD]    processArgs    [RETURN_TYPE]    void        Option    opt    ListIterator    iter    [VARIABLES]    Options    options    opts    CommandLine    cmd    RuntimeException    exp    boolean    List    requiredOptions    tokenList    Option    opt    String    str    ListIterator    iter        	cli_86_Parser_1_1	341	1	src/java/org/apache/commons/cli/Parser.java
242	[PATCH]    if    (currentOption.hasArg()    &&    (token.length()    !=    (i    +    1)))	[BUG]    [BUGGY]    if    (currentOption.hasArg()    &&    (token.length()    !=    (i    +    0)))    [FE]    junit.framework.AssertionFailedError:    Confirm    MissingArgumentException    caught    testMissingArg    [CONTEXT]    if    (hasOption)    {    tokens.add(   "-   "    +    ch);    currentOption    =    options.getOption(ch);        [BUGGY]    if    (currentOption.hasArg()    &&    (token.length()    !=    (i    +    0)))    {    tokens.add(token.substring(i    +    1));    break;    }    }    else    if    (stopAtNonOption)    {    process(token.substring(i));    }    [CLASS]        PosixParser    [METHOD]    burstToken    [RETURN_TYPE]    void        String    token    boolean    stopAtNonOption    [VARIABLES]    ArrayList    tokens    Options    options    Option    currentOption    boolean    eatTheRest    hasOption    stopAtNonOption    String    ch    token    int    i    tokenLength        	cli_1054_PosixParser_1_1	292	1	src/java/org/apache/commons/cli/PosixParser.java
243	[PATCH]    result    =    31    *    result    +    (    longOpt    !=    null    ?    longOpt.hashCode()    :    0    );	[BUG]    [BUGGY]    result    =    31    *    result    /    (longOpt    !=    null    ?    longOpt.hashCode()    :    0);    [FE]    java.lang.ArithmeticException:    /    by    zero    testAnt    [CONTEXT]    public    int    hashCode()    {    int    result;    result    =    (    opt    !=    null    ?    opt.hashCode()    :    0    );    [BUGGY]    result    =    31    *    result    /    (longOpt    !=    null    ?    longOpt.hashCode()    :    0);    return    result;    }    [CLASS]        Option    [METHOD]    hashCode    [RETURN_TYPE]    int        [VARIABLES]    boolean    hasArg    optionalArg    required    ArrayList    values    char    sep    valuesep    Object    o    type    String    argName    defaultValue    description    longOpt    opt    value    int    UNINITIALIZED    UNLIMITED_VALUES    index    num    numberOfArgs    result        	cli_318_Option_1_1	630	1	src/java/org/apache/commons/cli/Option.java
244	[PATCH]    if    ((numberOfArgs    >    0)    &&    (values.size()    >    (numberOfArgs    -    1)))	[BUG]    [BUGGY]    if    ((numberOfArgs    >    0)    &&    (values.size()    >=    (numberOfArgs    -    1)))    [FE]    junit.framework.AssertionFailedError:    Unexpected    exception:Missing    argument    for    option:buildfile    testAnt    [CONTEXT]    private    void    add(String    value)    {    [BUGGY]    if    ((numberOfArgs    >    0)    &&    (values.size()    >=    (numberOfArgs    -    1)))    {    throw    new    RuntimeException(   "Cannot    add    value,    list    full.   ");    }            this.values.add(value);    }    [CLASS]        Option    [METHOD]    add    [RETURN_TYPE]    void        String    value    [VARIABLES]    boolean    hasArg    optionalArg    required    ArrayList    values    char    sep    valuesep    Object    type    String    argName    description    longOpt    opt    value    int    UNINITIALIZED    UNLIMITED_VALUES    index    num    numberOfArgs        	cli_255_Option_1_1	476	1	src/java/org/apache/commons/cli/Option.java
245	[PATCH]    else    if    (ch    ==    ':')	[BUG]    [BUGGY]    else    if    (ch    >=    ':')    [FE]    junit.framework.AssertionFailedError:    file    flag    e    expected:<build.xml>    but    was:<build.xml>    testSimplePattern    [CONTEXT]    {    if    (ch    ==    '@')    {    return    PatternOptionBuilder.OBJECT_VALUE;    }    [BUGGY]    else    if    (ch    >=    ':')    {    return    PatternOptionBuilder.STRING_VALUE;    }    else    if    (ch    ==    '%')    {    return    PatternOptionBuilder.NUMBER_VALUE;    }    else    if    (ch    ==    '+')    {    return    PatternOptionBuilder.CLASS_VALUE;    [CLASS]        PatternOptionBuilder    [METHOD]    getValueClass    [RETURN_TYPE]    Object        char    ch    [VARIABLES]    char    ch    Class    CLASS_VALUE    DATE_VALUE    EXISTING_FILE_VALUE    FILES_VALUE    FILE_VALUE    NUMBER_VALUE    OBJECT_VALUE    STRING_VALUE    URL_VALUE    boolean        	cli_845_PatternOptionBuilder_1_1	93	1	src/java/org/apache/commons/cli/PatternOptionBuilder.java
246	[PATCH]    if    (group.isRequired())	[BUG]    [BUGGY]    if    (true)    [FE]    junit.framework.AssertionFailedError:    Unexpected    exception:    [-rep    description    for    this    option,    -exec    description    for    this    option]    test12210    [CONTEXT]    public    Options    addOptionGroup(OptionGroup    group)    {    Iterator    options    =    group.getOptions().iterator();        [BUGGY]    if    (true)    {    requiredOpts.add(group);    }    while    (options.hasNext())    {    Option    option    =    (Option)    options.next();            [CLASS]        Options    [METHOD]    addOptionGroup    [RETURN_TYPE]    Options        OptionGroup    group    [VARIABLES]    Iterator    options    List    requiredOpts    Option    option    OptionGroup    group    boolean    Map    longOpts    optionGroups    shortOpts        	cli_102_Options_1_1	73	1	src/java/org/apache/commons/cli/Options.java
247	[PATCH]    while    ((pos    >    0)    &&    Character.isWhitespace(s.charAt(pos    -    1)))	[BUG]    [BUGGY]    while    ((pos    >    0)    &&    Character.isWhitespace(s.charAt(pos    *    1)))    [FE]    junit.framework.AssertionFailedError:    Unexpected    Exception:    String    index    out    of    range:    10    test13666    [CONTEXT]    protected    String    rtrim(String    s)    {    if    ((s    ==    null)    ||    (s.length()    ==    0))    {    return    s;    }    int    pos    =    s.length();        [BUGGY]    while    ((pos    >    0)    &&    Character.isWhitespace(s.charAt(pos    *    1)))    {    --pos;    }    return    s.substring(0,    pos);    }    [CLASS]        HelpFormatter    OptionComparator    [METHOD]    rtrim    [RETURN_TYPE]    String        String    s    [VARIABLES]    int    DEFAULT_DESC_PAD    DEFAULT_LEFT_PAD    DEFAULT_WIDTH    argPos    defaultDescPad    defaultLeftPad    defaultWidth    descPad    i    leftPad    len    max    nextLineTabStop    padding    pos    startPos    width    x    String    DEFAULT_ARG_NAME    DEFAULT_LONG_OPT_PREFIX    DEFAULT_OPT_PREFIX    DEFAULT_SYNTAX_PREFIX    app    cmdLineSyntax    defaultArgName    defaultLongOptPrefix    defaultNewLine    defaultOptPrefix    defaultSyntaxPrefix    dpad    footer    header    lpad    name    newline    padding    prefix    s    text    boolean        	cli_740_HelpFormatter_1_1	870	1	src/java/org/apache/commons/cli/HelpFormatter.java
248	[PATCH]    if    ((numberOfArgs    >    0)    &&    (values.size()    >    (numberOfArgs    -    1)))	[BUG]    [BUGGY]    if    (false)    [FE]    junit.framework.AssertionFailedError:    Confirm    size    of    extra    args    testSimpleLong    [CONTEXT]    private    void    add(String    value)    {    [BUGGY]    if    (false)    {    throw    new    RuntimeException(   "Cannot    add    value,    list    full.   ");    }            this.values.add(value);    }    [CLASS]        Option    [METHOD]    add    [RETURN_TYPE]    void        String    value    [VARIABLES]    boolean    hasArg    optionalArg    required    ArrayList    values    char    sep    valuesep    Object    type    String    argName    description    longOpt    opt    value    int    UNINITIALIZED    UNLIMITED_VALUES    index    num    numberOfArgs        	cli_258_Option_1_1	476	1	src/java/org/apache/commons/cli/Option.java
249	[PATCH]    if    ((numberOfArgs    >    0)    &&    (values.size()    >    (numberOfArgs    -    1)))	[BUG]    [BUGGY]    if    ((numberOfArgs    >    0)    &&    (values.size()    >    (numberOfArgs    %    1)))    [FE]    java.lang.ArrayIndexOutOfBoundsException:    1    testLongOptionalNArgValues    [CONTEXT]    private    void    add(String    value)    {    [BUGGY]    if    ((numberOfArgs    >    0)    &&    (values.size()    >    (numberOfArgs    %    1)))    {    throw    new    RuntimeException(   "Cannot    add    value,    list    full.   ");    }            this.values.add(value);    }    [CLASS]        Option    [METHOD]    add    [RETURN_TYPE]    void        String    value    [VARIABLES]    boolean    hasArg    optionalArg    required    ArrayList    values    char    sep    valuesep    Object    type    String    argName    description    longOpt    opt    value    int    UNINITIALIZED    UNLIMITED_VALUES    index    num    numberOfArgs        	cli_250_Option_1_1	476	1	src/java/org/apache/commons/cli/Option.java
250	[PATCH]    if    (opt.isRequired())	[BUG]    [BUGGY]    if    (false)    [FE]    junit.framework.AssertionFailedError:    Unexpected    exception:    org.apache.commons.cli.MissingOptionException:f    test13935    [CONTEXT]    {    throw    new    UnrecognizedOptionException(   "Unrecognized    option:       "    +    arg);    }        final    Option    opt    =    options.getOption(arg);                [BUGGY]    if    (false)    {    requiredOptions.remove(opt.getKey());    }            if    (options.getOptionGroup(opt)    !=    null)    {    OptionGroup    group    =    options.getOptionGroup(opt);        [CLASS]        Parser    [METHOD]    processOption    [RETURN_TYPE]    void        String    arg    ListIterator    iter    [VARIABLES]    Options    options    opts    CommandLine    cmd    boolean    hasOption    OptionGroup    group    List    requiredOptions    tokenList    Option    opt    String    arg    ListIterator    iter        	cli_89_Parser_1_1	377	1	src/java/org/apache/commons/cli/Parser.java
251	[PATCH]    if    (opt.hasArg())	[BUG]    [BUGGY]    if    (false)    [FE]    junit.framework.AssertionFailedError    test31148    [CONTEXT]    if    (!cmd.hasOption(option))    {    Option    opt    =    options.getOption(option);        String    value    =    properties.getProperty(option);        [BUGGY]    if    (false)    {    if    ((opt.getValues()    ==    null)    ||    (opt.getValues().length    ==    0))    {    try    {    opt.addValue(value);    }    catch    (RuntimeException    exp)    {    [CLASS]        Parser    [METHOD]    processProperties    [RETURN_TYPE]    void        Properties    properties    [VARIABLES]    Options    options    opts    CommandLine    cmd    Enumeration    e    RuntimeException    exp    boolean    List    requiredOptions    tokenList    Option    opt    String    option    value    Properties    properties        	cli_47_Parser_1_1	246	1	src/java/org/apache/commons/cli/Parser.java
252	[PATCH]    while    ((pos    >    0)    &&    Character.isWhitespace(s.charAt(pos    -    1)))	[BUG]    [BUGGY]    while    ((pos    >    0)    &&    Character.isWhitespace(s.charAt(pos    +    1)))    [FE]    junit.framework.AssertionFailedError:    Unexpected    Exception:    String    index    out    of    range:    11    test13666    [CONTEXT]    protected    String    rtrim(String    s)    {    if    ((s    ==    null)    ||    (s.length()    ==    0))    {    return    s;    }    int    pos    =    s.length();        [BUGGY]    while    ((pos    >    0)    &&    Character.isWhitespace(s.charAt(pos    +    1)))    {    --pos;    }    return    s.substring(0,    pos);    }    [CLASS]        HelpFormatter    OptionComparator    [METHOD]    rtrim    [RETURN_TYPE]    String        String    s    [VARIABLES]    int    DEFAULT_DESC_PAD    DEFAULT_LEFT_PAD    DEFAULT_WIDTH    argPos    defaultDescPad    defaultLeftPad    defaultWidth    descPad    i    leftPad    len    max    nextLineTabStop    padding    pos    startPos    width    x    String    DEFAULT_ARG_NAME    DEFAULT_LONG_OPT_PREFIX    DEFAULT_OPT_PREFIX    DEFAULT_SYNTAX_PREFIX    app    cmdLineSyntax    defaultArgName    defaultLongOptPrefix    defaultNewLine    defaultOptPrefix    defaultSyntaxPrefix    dpad    footer    header    lpad    name    newline    padding    prefix    s    text    boolean        	cli_741_HelpFormatter_1_1	870	1	src/java/org/apache/commons/cli/HelpFormatter.java
253	[PATCH]    if    (this.options.hasOption(token))	[BUG]    [BUGGY]    if    (false)    [FE]    junit.framework.AssertionFailedError:    Confirm    -p    is    set    testOptionAndOptionWithArgument    [CONTEXT]    private    void    processOptionToken(String    token,    boolean    stopAtNonOption)    {    [BUGGY]    if    (false)    {    currentOption    =    this.options.getOption(token);    tokens.add(token);    }    else    if    (stopAtNonOption)    {    eatTheRest    =    true;    }    }    [CLASS]        PosixParser    [METHOD]    processOptionToken    [RETURN_TYPE]    void        String    token    boolean    stopAtNonOption    [VARIABLES]    ArrayList    tokens    Options    options    Option    currentOption    boolean    eatTheRest    stopAtNonOption    String    token        	cli_1037_PosixParser_1_1	241	1	src/java/org/apache/commons/cli/PosixParser.java
254	[PATCH]    return    (values    ==    null)    ?    null    :    values[0];	[BUG]    [BUGGY]    return    (values    ==    null)    ?    null    :    values[-1];    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testAnt    [CONTEXT]    public    String    getOptionValue(String    opt)    {    String[]    values    =    getOptionValues(opt);        [BUGGY]    return    (values    ==    null)    ?    null    :    values[-1];    }    [CLASS]        CommandLine    [METHOD]    getOptionValue    [RETURN_TYPE]    String        String    opt    [VARIABLES]    List    args    Set    options    String    opt    String[]    values    boolean        	cli_140_CommandLine_1_1	124	1	src/java/org/apache/commons/cli/CommandLine.java
255	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    java.lang.IllegalArgumentException:    illegal    option    value    ':'    testSimplePattern    [CONTEXT]    public    static    boolean    isValueCode(char    ch)    {    if    ((ch    !=    '@')    &&    (ch    !=    ':')    &&    (ch    !=    '%')    &&    (ch    !=    '+')    &&    (ch    !=    '#')    &&    (ch    !=    '<')    &&    (ch    !=    '>')    &&    (ch    !=    '*')    &&    (ch    !=    '/')    &&    (ch    !=    '!'))    {    return    false;    }        [BUGGY]    return    false;    }    [CLASS]        PatternOptionBuilder    [METHOD]    isValueCode    [RETURN_TYPE]    boolean        char    ch    [VARIABLES]    char    ch    Class    CLASS_VALUE    DATE_VALUE    EXISTING_FILE_VALUE    FILES_VALUE    FILE_VALUE    NUMBER_VALUE    OBJECT_VALUE    STRING_VALUE    URL_VALUE    boolean        	cli_935_PatternOptionBuilder_1_1	145	1	src/java/org/apache/commons/cli/PatternOptionBuilder.java
256	[PATCH]    if    (   "--   ".equals(arguments[i]))	[BUG]    [BUGGY]    if    (true)    [FE]    java.lang.NullPointerException    testAnt    [CONTEXT]    {    init();    boolean    eatTheRest    =    false;    Option    currentOption    =    null;    for    (int    i    =    0;    i    <    arguments.length;    i++)    {    [BUGGY]    if    (true)    {    eatTheRest    =    true;    tokens.add(   "--   ");    }    else    if    (   "-   ".equals(arguments[i]))    {    tokens.add(   "-   ");    }    else    if    (arguments[i].startsWith(   "-   "))    {    [CLASS]        GnuParser    [METHOD]    flatten    [RETURN_TYPE]    String[]        Options    options    String[]    arguments    boolean    stopAtNonOption    [VARIABLES]    ArrayList    tokens    Options    options    Option    currentOption    option    specialOption    String[]    arguments    boolean    eatTheRest    stopAtNonOption    int    i        	cli_349_GnuParser_1_1	71	1	src/java/org/apache/commons/cli/GnuParser.java
257	[PATCH]    for    (int    i    =    0;    i    <    chars.length;    i++)	[BUG]    [BUGGY]    for    (int    i    =    -1;    i    <    chars.length;    i++)    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testAnt    [CONTEXT]    throw    new    IllegalArgumentException(   "illegal    option    value    '   "    +    ch    +       "'   ");    }    }        else    {    char[]    chars    =    opt.toCharArray();        [BUGGY]    for    (int    i    =    -1;    i    <    chars.length;    i++)    {    if    (!isValidChar(chars[i]))    {    throw    new    IllegalArgumentException(       "opt    contains    illegal    character    value    '   "    +    chars[i]    +       "'   ");    }    }    }    [CLASS]        OptionValidator    [METHOD]    validateOption    [RETURN_TYPE]    void        String    opt    [VARIABLES]    boolean    char    ch    String    opt    int    i    char[]    chars        	cli_814_OptionValidator_1_1	66	1	src/java/org/apache/commons/cli/OptionValidator.java
258	[PATCH]    if    ((footer    !=    null)    &&    (footer.trim().length()    >    0))	[BUG]    [BUGGY]    if    ((footer    !=    null)    &&    (false))    [FE]    junit.framework.ComparisonFailure:    expected:<...ge:    foobar    test21215    [CONTEXT]    printUsage(pw,    width,    cmdLineSyntax);    }    if    ((header    !=    null)    &&    (header.trim().length()    >    0))    {    printWrapped(pw,    width,    header);    }    printOptions(pw,    width,    options,    leftPad,    descPad);        [BUGGY]    if    ((footer    !=    null)    &&    (false))    {    printWrapped(pw,    width,    footer);    }    }    [CLASS]        HelpFormatter    OptionComparator    [METHOD]    printHelp    [RETURN_TYPE]    void        PrintWriter    pw    int    width    String    cmdLineSyntax    String    header    Options    options    int    leftPad    int    descPad    String    footer    boolean    autoUsage    [VARIABLES]    Options    options    String    DEFAULT_ARG_NAME    DEFAULT_LONG_OPT_PREFIX    DEFAULT_OPT_PREFIX    DEFAULT_SYNTAX_PREFIX    cmdLineSyntax    defaultArgName    defaultLongOptPrefix    defaultNewLine    defaultOptPrefix    defaultSyntaxPrefix    footer    header    name    newline    prefix    boolean    autoUsage    int    DEFAULT_DESC_PAD    DEFAULT_LEFT_PAD    DEFAULT_WIDTH    defaultDescPad    defaultLeftPad    defaultWidth    descPad    leftPad    padding    width    PrintWriter    pw        	cli_484_HelpFormatter_1_1	416	1	src/java/org/apache/commons/cli/HelpFormatter.java
259	[PATCH]    for    (int    i    =    0;    i    <    len;    ++i)	[BUG]    [BUGGY]    for    (int    i    =    -1;    i    <    len;    ++i)    [FE]    junit.framework.ComparisonFailure:    expected:<usage:    dir    test13666    [CONTEXT]    protected    String    createPadding(int    len)    {    StringBuffer    sb    =    new    StringBuffer(len);        [BUGGY]    for    (int    i    =    -1;    i    <    len;    ++i)    {    sb.append('    ');    }    return    sb.toString();    }    [CLASS]        HelpFormatter    OptionComparator    [METHOD]    createPadding    [RETURN_TYPE]    String        int    len    [VARIABLES]    StringBuffer    sb    String    DEFAULT_ARG_NAME    DEFAULT_LONG_OPT_PREFIX    DEFAULT_OPT_PREFIX    DEFAULT_SYNTAX_PREFIX    app    cmdLineSyntax    defaultArgName    defaultLongOptPrefix    defaultNewLine    defaultOptPrefix    defaultSyntaxPrefix    dpad    footer    header    lpad    name    newline    padding    prefix    text    boolean    int    DEFAULT_DESC_PAD    DEFAULT_LEFT_PAD    DEFAULT_WIDTH    argPos    defaultDescPad    defaultLeftPad    defaultWidth    descPad    i    leftPad    len    max    nextLineTabStop    padding    pos    startPos    width    x        	cli_717_HelpFormatter_1_1	846	1	src/java/org/apache/commons/cli/HelpFormatter.java
260	[PATCH]    if    ((numberOfArgs    >    0)    &&    (values.size()    >    (numberOfArgs    -    1)))	[BUG]    [BUGGY]    if    ((numberOfArgs    >    0)    &&    (values.size()    >    (numberOfArgs    -    0)))    [FE]    junit.framework.AssertionFailedError:    Confirm    size    of    extra    args    testSimpleLong    [CONTEXT]    private    void    add(String    value)    {    [BUGGY]    if    ((numberOfArgs    >    0)    &&    (values.size()    >    (numberOfArgs    -    0)))    {    throw    new    RuntimeException(   "Cannot    add    value,    list    full.   ");    }            this.values.add(value);    }    [CLASS]        Option    [METHOD]    add    [RETURN_TYPE]    void        String    value    [VARIABLES]    boolean    hasArg    optionalArg    required    ArrayList    values    char    sep    valuesep    Object    type    String    argName    description    longOpt    opt    value    int    UNINITIALIZED    UNLIMITED_VALUES    index    num    numberOfArgs        	cli_248_Option_1_1	476	1	src/java/org/apache/commons/cli/Option.java
261	[PATCH]    if    (opt.hasArg())	[BUG]    [BUGGY]    if    (false)    [FE]    java.lang.NullPointerException    testAnt    [CONTEXT]    if    (group.isRequired())    {    requiredOptions.remove(group);    }    group.setSelected(opt);    }            [BUGGY]    if    (false)    {    processArgs(opt,    iter);    }            cmd.addOption(opt);    }    [CLASS]        Parser    [METHOD]    processOption    [RETURN_TYPE]    void        String    arg    ListIterator    iter    [VARIABLES]    Options    options    opts    CommandLine    cmd    boolean    hasOption    OptionGroup    group    List    requiredOptions    tokenList    Option    opt    String    arg    ListIterator    iter        	cli_97_Parser_1_1	397	1	src/java/org/apache/commons/cli/Parser.java
262	[PATCH]    return    str.substring(1,    str.length());	[BUG]    [BUGGY]    return    str.substring(0,    str.length());    [FE]    junit.framework.AssertionFailedError:    Unexpected    exception:Unrecognized    option:    -buildfile    testAnt    [CONTEXT]    static    String    stripLeadingHyphens(String    str)    {    if    (str.startsWith(   "--   "))    {    return    str.substring(2,    str.length());    }    else    if    (str.startsWith(   "-   "))    {    [BUGGY]    return    str.substring(0,    str.length());    }    return    str;    }    [CLASS]        Util    [METHOD]    stripLeadingHyphens    [RETURN_TYPE]    String        String    str    [VARIABLES]    boolean    String    str        	cli_1101_Util_1_1	41	1	src/java/org/apache/commons/cli/Util.java
263	[PATCH]    sb.append(rtrim(text.substring(0,    pos))).append(defaultNewLine);	[BUG]    [BUGGY]    sb.append(rtrim(text.substring(1,    pos))).append(defaultNewLine);    [FE]    junit.framework.ComparisonFailure:    multi    line    text    expected:<aaaa    aaaa    aaaa    testPrintWrapped    [CONTEXT]    text    =    padding    +    text.substring(pos).trim();    pos    =    findWrapPos(text,    width,    nextLineTabStop);    if    (pos    ==    -1)    {    sb.append(text);    return    sb;    }        [BUGGY]    sb.append(rtrim(text.substring(1,    pos))).append(defaultNewLine);    }    [CLASS]        HelpFormatter    OptionComparator    [METHOD]    renderWrappedText    [RETURN_TYPE]    StringBuffer        StringBuffer    sb    int    width    int    nextLineTabStop    String    text    [VARIABLES]    StringBuffer    sb    String    DEFAULT_ARG_NAME    DEFAULT_LONG_OPT_PREFIX    DEFAULT_OPT_PREFIX    DEFAULT_SYNTAX_PREFIX    app    cmdLineSyntax    defaultArgName    defaultLongOptPrefix    defaultNewLine    defaultOptPrefix    defaultSyntaxPrefix    dpad    footer    header    lpad    name    newline    padding    prefix    text    boolean    int    DEFAULT_DESC_PAD    DEFAULT_LEFT_PAD    DEFAULT_WIDTH    argPos    defaultDescPad    defaultLeftPad    defaultWidth    descPad    leftPad    max    nextLineTabStop    padding    pos    width    x        	cli_612_HelpFormatter_1_1	772	1	src/java/org/apache/commons/cli/HelpFormatter.java
264	[PATCH]    else    if    (PatternOptionBuilder.FILE_VALUE    ==    clazz)	[BUG]    [BUGGY]    else    if    (false)    [FE]    junit.framework.AssertionFailedError:    file    flag    e    expected:<build.xml>    but    was:<null>    testSimplePattern    [CONTEXT]    return    createNumber(str);    }    else    if    (PatternOptionBuilder.DATE_VALUE    ==    clazz)    {    return    createDate(str);    }    else    if    (PatternOptionBuilder.CLASS_VALUE    ==    clazz)    {    return    createClass(str);    }    [BUGGY]    else    if    (false)    {    return    createFile(str);    }    else    if    (PatternOptionBuilder.EXISTING_FILE_VALUE    ==    clazz)    {    return    createFile(str);    }    else    if    (PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    createFiles(str);    [CLASS]        TypeHandler    [METHOD]    createValue    [RETURN_TYPE]    Object        String    str    Class    clazz    [VARIABLES]    boolean    Class    clazz    String    str        	cli_1083_TypeHandler_1_1	83	1	src/java/org/apache/commons/cli/TypeHandler.java
265	[PATCH]    if    ((header    !=    null)    &&    (header.trim().length()    >    0))	[BUG]    [BUGGY]    if    (false)    [FE]    junit.framework.ComparisonFailure:    expected:<usage:    foobar    test21215    [CONTEXT]    if    (autoUsage)    {    printUsage(pw,    width,    cmdLineSyntax,    options);    }    else    {    printUsage(pw,    width,    cmdLineSyntax);    }        [BUGGY]    if    (false)    {    printWrapped(pw,    width,    header);    }    printOptions(pw,    width,    options,    leftPad,    descPad);    if    ((footer    !=    null)    &&    (footer.trim().length()    >    0))    {    printWrapped(pw,    width,    footer);    }    [CLASS]        HelpFormatter    OptionComparator    [METHOD]    printHelp    [RETURN_TYPE]    void        PrintWriter    pw    int    width    String    cmdLineSyntax    String    header    Options    options    int    leftPad    int    descPad    String    footer    boolean    autoUsage    [VARIABLES]    Options    options    String    DEFAULT_ARG_NAME    DEFAULT_LONG_OPT_PREFIX    DEFAULT_OPT_PREFIX    DEFAULT_SYNTAX_PREFIX    cmdLineSyntax    defaultArgName    defaultLongOptPrefix    defaultNewLine    defaultOptPrefix    defaultSyntaxPrefix    footer    header    name    newline    prefix    boolean    autoUsage    int    DEFAULT_DESC_PAD    DEFAULT_LEFT_PAD    DEFAULT_WIDTH    defaultDescPad    defaultLeftPad    defaultWidth    descPad    leftPad    padding    width    PrintWriter    pw        	cli_474_HelpFormatter_1_1	409	1	src/java/org/apache/commons/cli/HelpFormatter.java
266	[PATCH]    while    (index    !=    -1)	[BUG]    [BUGGY]    while    (index    !=    1)    [FE]    junit.framework.ComparisonFailure:    expected:<[value]>    but    was:<[property1]>    testAnt    [CONTEXT]        if    (hasValueSeparator())    {        char    sep    =    getValueSeparator();        int    index    =    value.indexOf(sep);            [BUGGY]    while    (index    !=    1)    {        if    (values.size()    ==    (numberOfArgs    -    1))    {    break;    }            add(value.substring(0,    index));    [CLASS]        Option    [METHOD]    processValue    [RETURN_TYPE]    void        String    value    [VARIABLES]    boolean    hasArg    optionalArg    required    ArrayList    values    char    sep    valuesep    Object    type    String    argName    description    longOpt    opt    value    int    UNINITIALIZED    UNLIMITED_VALUES    index    num    numberOfArgs        	cli_218_Option_1_1	438	1	src/java/org/apache/commons/cli/Option.java
267	[PATCH]    tokens.add(arguments[i].substring(2));	[BUG]    [BUGGY]    tokens.add(arguments[i].substring(-2));    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    -2    testAnt    [CONTEXT]    if    (option    ==    null)    {        Option    specialOption    =    options.getOption(arguments[i].substring(0,    2));    if    (specialOption    !=    null)    {    tokens.add(arguments[i].substring(0,    2));    [BUGGY]    tokens.add(arguments[i].substring(-2));    }    else    if    (stopAtNonOption)    {    eatTheRest    =    true;    tokens.add(arguments[i]);    }    else    {    tokens.add(arguments[i]);    }    [CLASS]        GnuParser    [METHOD]    flatten    [RETURN_TYPE]    String[]        Options    options    String[]    arguments    boolean    stopAtNonOption    [VARIABLES]    ArrayList    tokens    Options    options    Option    currentOption    option    specialOption    String[]    arguments    boolean    eatTheRest    stopAtNonOption    int    i        	cli_370_GnuParser_1_1	94	1	src/java/org/apache/commons/cli/GnuParser.java
268	[PATCH]    if    ((numberOfArgs    >    0)    &&    (values.size()    >    (numberOfArgs    -    1)))	[BUG]    [BUGGY]    if    ((numberOfArgs    >    1)    &&    (values.size()    >    (numberOfArgs    -    1)))    [FE]    junit.framework.AssertionFailedError:    Confirm    size    of    extra    args    testSimpleLong    [CONTEXT]    private    void    add(String    value)    {    [BUGGY]    if    ((numberOfArgs    >    1)    &&    (values.size()    >    (numberOfArgs    -    1)))    {    throw    new    RuntimeException(   "Cannot    add    value,    list    full.   ");    }            this.values.add(value);    }    [CLASS]        Option    [METHOD]    add    [RETURN_TYPE]    void        String    value    [VARIABLES]    boolean    hasArg    optionalArg    required    ArrayList    values    char    sep    valuesep    Object    type    String    argName    description    longOpt    opt    value    int    UNINITIALIZED    UNLIMITED_VALUES    index    num    numberOfArgs        	cli_243_Option_1_1	476	1	src/java/org/apache/commons/cli/Option.java
269	[PATCH]    str    =    str.substring(0,    str.length()-1);	[BUG]    [BUGGY]    str    =    str.substring(0,    str.length()    /    1);    [FE]    junit.framework.ComparisonFailure:    expected:<Two    Words[]>    but    was:<Two    Words[   "]>    test15648    [CONTEXT]    static    String    stripLeadingAndTrailingQuotes(String    str)    {    if    (str.startsWith(   "\   "   "))    {    str    =    str.substring(1,    str.length());    }    if    (str.endsWith(   "\   "   "))    {    [BUGGY]    str    =    str.substring(0,    str.length()    /    1);    }    return    str;    }    [CLASS]        Util    [METHOD]    stripLeadingAndTrailingQuotes    [RETURN_TYPE]    String        String    str    [VARIABLES]    boolean    String    str        	cli_1117_Util_1_1	62	1	src/java/org/apache/commons/cli/Util.java
270	[PATCH]    else    if    (   "-   ".equals(t))	[BUG]    [BUGGY]    else    if    (true)    [FE]    java.lang.NullPointerException    testAnt    [CONTEXT]    {    String    t    =    (String)    iterator.next();        if    (   "--   ".equals(t))    {    eatTheRest    =    true;    }            [BUGGY]    else    if    (true)    {    if    (stopAtNonOption)    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    }    [CLASS]        Parser    [METHOD]    parse    [RETURN_TYPE]    CommandLine        Options    options    String[]    arguments    Properties    properties    boolean    stopAtNonOption    [VARIABLES]    Options    options    opts    CommandLine    cmd    boolean    eatTheRest    stopAtNonOption    List    requiredOptions    tokenList    String[]    arguments    String    str    t    Properties    properties    ListIterator    iterator        	cli_16_Parser_1_1	163	1	src/java/org/apache/commons/cli/Parser.java
271	[PATCH]    printHelp(defaultWidth,    cmdLineSyntax,    null,    options,    null,    false);	[BUG]    [BUGGY]    printHelp(defaultWidth,    cmdLineSyntax,    null,    options,    null,    true);    [FE]    junit.framework.ComparisonFailure:    expected:<usage:    dir[]    test13666    [CONTEXT]    public    void    printHelp(String    cmdLineSyntax,    Options    options)    {    [BUGGY]    printHelp(defaultWidth,    cmdLineSyntax,    null,    options,    null,    true);    }    [CLASS]        HelpFormatter    OptionComparator    [METHOD]    printHelp    [RETURN_TYPE]    void        String    cmdLineSyntax    Options    options    [VARIABLES]    Options    options    String    DEFAULT_ARG_NAME    DEFAULT_LONG_OPT_PREFIX    DEFAULT_OPT_PREFIX    DEFAULT_SYNTAX_PREFIX    cmdLineSyntax    defaultArgName    defaultLongOptPrefix    defaultNewLine    defaultOptPrefix    defaultSyntaxPrefix    name    newline    prefix    boolean    int    DEFAULT_DESC_PAD    DEFAULT_LEFT_PAD    DEFAULT_WIDTH    defaultDescPad    defaultLeftPad    defaultWidth    padding    width        	cli_441_HelpFormatter_1_1	256	1	src/java/org/apache/commons/cli/HelpFormatter.java
272	[PATCH]    pos    =    startPos    +    width;	[BUG]    [BUGGY]    pos    =    startPos    -    width;    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    -3    testFindWrapPos    [CONTEXT]    }        if    (pos    >    startPos)    {    return    pos;    }                [BUGGY]    pos    =    startPos    -    width;    while    ((pos    <=    text.length())    &&    ((c    =    text.charAt(pos))    !=    '    ')    &&    (c    !=    '\n')    &&    (c    !=    '\r'))    {    ++pos;    }    return    (pos    ==    text.length())?    (-1)    :    pos;    }    [CLASS]        HelpFormatter    OptionComparator    [METHOD]    findWrapPos    [RETURN_TYPE]    int        String    text    int    width    int    startPos    [VARIABLES]    char    c    String    DEFAULT_ARG_NAME    DEFAULT_LONG_OPT_PREFIX    DEFAULT_OPT_PREFIX    DEFAULT_SYNTAX_PREFIX    app    cmdLineSyntax    defaultArgName    defaultLongOptPrefix    defaultNewLine    defaultOptPrefix    defaultSyntaxPrefix    dpad    footer    header    lpad    name    newline    padding    prefix    text    boolean    int    DEFAULT_DESC_PAD    DEFAULT_LEFT_PAD    DEFAULT_WIDTH    argPos    defaultDescPad    defaultLeftPad    defaultWidth    descPad    leftPad    max    nextLineTabStop    padding    pos    startPos    width    x        	cli_689_HelpFormatter_1_1	824	1	src/java/org/apache/commons/cli/HelpFormatter.java
273	[PATCH]    else    if    (t.startsWith(   "-   "))	[BUG]    [BUGGY]    else    if    (false)    [FE]    java.lang.NullPointerException    testAnt    [CONTEXT]    {    eatTheRest    =    true;    }    else    {    cmd.addArg(t);    }    }            [BUGGY]    else    if    (false)    {    if    (stopAtNonOption    &&    !options.hasOption(t))    {    eatTheRest    =    true;    cmd.addArg(t);    }    else    {    processOption(t,    iterator);    }    [CLASS]        Parser    [METHOD]    parse    [RETURN_TYPE]    CommandLine        Options    options    String[]    arguments    Properties    properties    boolean    stopAtNonOption    [VARIABLES]    Options    options    opts    CommandLine    cmd    boolean    eatTheRest    stopAtNonOption    List    requiredOptions    tokenList    String[]    arguments    String    str    t    Properties    properties    ListIterator    iterator        	cli_22_Parser_1_1	176	1	src/java/org/apache/commons/cli/Parser.java
274	[PATCH]    for    (int    i    =    0;    i    <    sz;    i++)	[BUG]    [BUGGY]    for    (int    i    =    1;    i    <    sz;    i++)    [FE]    junit.framework.ComparisonFailure:    flag    a    expected:<foo>    but    was:<null>    testSimplePattern    [CONTEXT]    {    int    sz    =    pattern.length();    char    opt    =    '    ';    char    ch    =    '    ';    boolean    required    =    false;    Object    type    =    null;    Options    options    =    new    Options();        [BUGGY]    for    (int    i    =    1;    i    <    sz;    i++)    {    ch    =    pattern.charAt(i);            if    (!isValueCode(ch))    {    if    (opt    !=    '    ')    {    OptionBuilder.hasArg(type    !=    null);    [CLASS]        PatternOptionBuilder    [METHOD]    parsePattern    [RETURN_TYPE]    Options        String    pattern    [VARIABLES]    Options    options    boolean    required    char    ch    opt    Class    CLASS_VALUE    DATE_VALUE    EXISTING_FILE_VALUE    FILES_VALUE    FILE_VALUE    NUMBER_VALUE    OBJECT_VALUE    STRING_VALUE    URL_VALUE    Object    type    String    pattern    int    i    sz        	cli_937_PatternOptionBuilder_1_1	166	1	src/java/org/apache/commons/cli/PatternOptionBuilder.java
275	[PATCH]    tokens.add(token.substring(i    +    1));	[BUG]    [BUGGY]    tokens.add(token.substring(i    /    1));    [FE]    junit.framework.ComparisonFailure:    expected:<[b]value>    but    was:<[]value>    test11456    [CONTEXT]    if    (hasOption)    {    tokens.add(   "-   "    +    ch);    currentOption    =    options.getOption(ch);    if    (currentOption.hasArg()    &&    (token.length()    !=    (i    +    1)))    {    [BUGGY]    tokens.add(token.substring(i    /    1));    break;    }    }    else    if    (stopAtNonOption)    {    process(token.substring(i));    }    else    {    [CLASS]        PosixParser    [METHOD]    burstToken    [RETURN_TYPE]    void        String    token    boolean    stopAtNonOption    [VARIABLES]    ArrayList    tokens    Options    options    Option    currentOption    boolean    eatTheRest    hasOption    stopAtNonOption    String    ch    token    int    i    tokenLength        	cli_1072_PosixParser_1_1	294	1	src/java/org/apache/commons/cli/PosixParser.java
276	[PATCH]    optionalArg    =    false;	[BUG]    [BUGGY]    optionalArg    =    true;    [FE]    junit.framework.AssertionFailedError:    MissingArgumentException    not    caught.    test13425    [CONTEXT]    {    description    =    null;    argName    =       "arg   ";    longopt    =    null;    type    =    null;    required    =    false;    numberOfArgs    =    Option.UNINITIALIZED;            [BUGGY]    optionalArg    =    true;    valuesep    =    (char)    0;    }    [CLASS]        OptionBuilder    [METHOD]    reset    [RETURN_TYPE]    void        [VARIABLES]    boolean    optionalArg    required    OptionBuilder    instance    char    valuesep    Object    type    String    argName    description    longopt    int    numberOfArgs        	cli_757_OptionBuilder_1_1	79	1	src/java/org/apache/commons/cli/OptionBuilder.java
277	[PATCH]    return    (this.numberOfArgs    >    0)    ||    (numberOfArgs    ==    UNLIMITED_VALUES);	[BUG]    [BUGGY]    return    (this.numberOfArgs    >    0)    ||    (numberOfArgs    >=    UNLIMITED_VALUES);    [FE]    junit.framework.AssertionFailedError:    Unexpected    exception:Missing    argument    for    option:projecthelp    testAnt    [CONTEXT]    public    boolean    hasArg()    {    [BUGGY]    return    (this.numberOfArgs    >    0)    ||    (numberOfArgs    >=    UNLIMITED_VALUES);    }    [CLASS]        Option    [METHOD]    hasArg    [RETURN_TYPE]    boolean        [VARIABLES]    boolean    hasArg    optionalArg    required    ArrayList    values    char    valuesep    Object    type    String    argName    description    longOpt    opt    int    UNINITIALIZED    UNLIMITED_VALUES    numberOfArgs        	cli_176_Option_1_1	261	1	src/java/org/apache/commons/cli/Option.java
278	[PATCH]    if    (   "--   ".equals(t))	[BUG]    [BUGGY]    if    (false)    [FE]    junit.framework.AssertionFailedError:    org.apache.commons.cli.UnrecognizedOptionException:    Unrecognized    option:    --    testDoubleDash    [CONTEXT]    while    (iterator.hasNext())    {    String    t    =    (String)    iterator.next();            [BUGGY]    if    (false)    {    eatTheRest    =    true;    }        else    if    (   "-   ".equals(t))    {    if    (stopAtNonOption)    {    eatTheRest    =    true;    [CLASS]        Parser    [METHOD]    parse    [RETURN_TYPE]    CommandLine        Options    options    String[]    arguments    Properties    properties    boolean    stopAtNonOption    [VARIABLES]    Options    options    opts    CommandLine    cmd    boolean    eatTheRest    stopAtNonOption    List    requiredOptions    tokenList    String[]    arguments    String    str    t    Properties    properties    ListIterator    iterator        	cli_11_Parser_1_1	157	1	src/java/org/apache/commons/cli/Parser.java
279	[PATCH]    if    ((header    !=    null)    &&    (header.trim().length()    >    0))	[BUG]    [BUGGY]    if    ((header    !=    null)    &&    (false))    [FE]    junit.framework.ComparisonFailure:    expected:<usage:    foobar    test21215    [CONTEXT]    if    (autoUsage)    {    printUsage(pw,    width,    cmdLineSyntax,    options);    }    else    {    printUsage(pw,    width,    cmdLineSyntax);    }        [BUGGY]    if    ((header    !=    null)    &&    (false))    {    printWrapped(pw,    width,    header);    }    printOptions(pw,    width,    options,    leftPad,    descPad);    if    ((footer    !=    null)    &&    (footer.trim().length()    >    0))    {    printWrapped(pw,    width,    footer);    }    [CLASS]        HelpFormatter    OptionComparator    [METHOD]    printHelp    [RETURN_TYPE]    void        PrintWriter    pw    int    width    String    cmdLineSyntax    String    header    Options    options    int    leftPad    int    descPad    String    footer    boolean    autoUsage    [VARIABLES]    Options    options    String    DEFAULT_ARG_NAME    DEFAULT_LONG_OPT_PREFIX    DEFAULT_OPT_PREFIX    DEFAULT_SYNTAX_PREFIX    cmdLineSyntax    defaultArgName    defaultLongOptPrefix    defaultNewLine    defaultOptPrefix    defaultSyntaxPrefix    footer    header    name    newline    prefix    boolean    autoUsage    int    DEFAULT_DESC_PAD    DEFAULT_LEFT_PAD    DEFAULT_WIDTH    defaultDescPad    defaultLeftPad    defaultWidth    descPad    leftPad    padding    width    PrintWriter    pw        	cli_472_HelpFormatter_1_1	409	1	src/java/org/apache/commons/cli/HelpFormatter.java
280	[PATCH]    while    ((pos    >=    startPos)    &&    ((c    =    text.charAt(pos))    !=    '    ')	[BUG]    [BUGGY]    while    ((pos    ==    startPos)    &&    ((c    =    text.charAt(pos))    !=    '    ')    [FE]    junit.framework.ComparisonFailure:    single    line    text    expected:<This    is    a[    testPrintWrapped    [CONTEXT]    {    return    -1;    }            pos    =    startPos    +    width;    char    c;        [BUGGY]    while    ((pos    ==    startPos)    &&    ((c    =    text.charAt(pos))    !=    '    ')    &&    (c    !=    '\n')    &&    (c    !=    '\r'))    {    --pos;    }        if    (pos    >    startPos)    {    return    pos;    }    [CLASS]        HelpFormatter    OptionComparator    [METHOD]    findWrapPos    [RETURN_TYPE]    int        String    text    int    width    int    startPos    [VARIABLES]    char    c    String    DEFAULT_ARG_NAME    DEFAULT_LONG_OPT_PREFIX    DEFAULT_OPT_PREFIX    DEFAULT_SYNTAX_PREFIX    app    cmdLineSyntax    defaultArgName    defaultLongOptPrefix    defaultNewLine    defaultOptPrefix    defaultSyntaxPrefix    dpad    footer    header    lpad    name    newline    padding    prefix    text    boolean    int    DEFAULT_DESC_PAD    DEFAULT_LEFT_PAD    DEFAULT_WIDTH    argPos    defaultDescPad    defaultLeftPad    defaultWidth    descPad    leftPad    max    nextLineTabStop    padding    pos    startPos    width    x        	cli_665_HelpFormatter_1_1	810	1	src/java/org/apache/commons/cli/HelpFormatter.java
281	[PATCH]    tokens.add(token.substring(i    +    1));	[BUG]    [BUGGY]    tokens.add(token.substring(i    +    -1));    [FE]    junit.framework.ComparisonFailure:    expected:<[-b]value>    but    was:<[]value>    test11456    [CONTEXT]    if    (hasOption)    {    tokens.add(   "-   "    +    ch);    currentOption    =    options.getOption(ch);    if    (currentOption.hasArg()    &&    (token.length()    !=    (i    +    1)))    {    [BUGGY]    tokens.add(token.substring(i    +    -1));    break;    }    }    else    if    (stopAtNonOption)    {    process(token.substring(i));    }    else    {    [CLASS]        PosixParser    [METHOD]    burstToken    [RETURN_TYPE]    void        String    token    boolean    stopAtNonOption    [VARIABLES]    ArrayList    tokens    Options    options    Option    currentOption    boolean    eatTheRest    hasOption    stopAtNonOption    String    ch    token    int    i    tokenLength        	cli_1068_PosixParser_1_1	294	1	src/java/org/apache/commons/cli/PosixParser.java
282	[PATCH]    str    =    str.substring(0,    str.length()-1);	[BUG]    [BUGGY]    str    =    str.substring(-1,    str.length()-1);    [FE]    org.apache.commons.cli.MissingArgumentException:    Missing    argument    for    option:m    test15648    [CONTEXT]    static    String    stripLeadingAndTrailingQuotes(String    str)    {    if    (str.startsWith(   "\   "   "))    {    str    =    str.substring(1,    str.length());    }    if    (str.endsWith(   "\   "   "))    {    [BUGGY]    str    =    str.substring(-1,    str.length()-1);    }    return    str;    }    [CLASS]        Util    [METHOD]    stripLeadingAndTrailingQuotes    [RETURN_TYPE]    String        String    str    [VARIABLES]    boolean    String    str        	cli_1111_Util_1_1	62	1	src/java/org/apache/commons/cli/Util.java
283	[PATCH]    if    ((opt.getValues()    ==    null)    &&    !opt.hasOptionalArg())	[BUG]    [BUGGY]    if    ((opt.getValues()    ==    null))    [FE]    junit.framework.AssertionFailedError:    Unexpected    Exception:    Missing    argument    for    option:a    test11456    [CONTEXT]    {    opt.addValue(    Util.stripLeadingAndTrailingQuotes(str)    );    }    catch    (RuntimeException    exp)    {    iter.previous();    break;    }    }        [BUGGY]    if    ((opt.getValues()    ==    null))    {    throw    new    MissingArgumentException(   "Missing    argument    for    option:   "    +    opt.getKey());    }    }    [CLASS]        Parser    [METHOD]    processArgs    [RETURN_TYPE]    void        Option    opt    ListIterator    iter    [VARIABLES]    Options    options    opts    CommandLine    cmd    RuntimeException    exp    boolean    List    requiredOptions    tokenList    Option    opt    String    str    ListIterator    iter        	cli_85_Parser_1_1	341	1	src/java/org/apache/commons/cli/Parser.java
284	[PATCH]    pos    =    startPos    +    width;	[BUG]    [BUGGY]    pos    =    startPos    -    width;    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    15    testPrintWrapped    [CONTEXT]    {    return    pos+1;    }    else    if    ((startPos    +    width)    >=    text.length())    {    return    -1;    }            [BUGGY]    pos    =    startPos    -    width;    char    c;    while    ((pos    >=    startPos)    &&    ((c    =    text.charAt(pos))    !=    '    ')    &&    (c    !=    '\n')    &&    (c    !=    '\r'))    {    --pos;    }            [CLASS]        HelpFormatter    OptionComparator    [METHOD]    findWrapPos    [RETURN_TYPE]    int        String    text    int    width    int    startPos    [VARIABLES]    char    c    String    DEFAULT_ARG_NAME    DEFAULT_LONG_OPT_PREFIX    DEFAULT_OPT_PREFIX    DEFAULT_SYNTAX_PREFIX    app    cmdLineSyntax    defaultArgName    defaultLongOptPrefix    defaultNewLine    defaultOptPrefix    defaultSyntaxPrefix    dpad    footer    header    lpad    name    newline    padding    prefix    text    boolean    int    DEFAULT_DESC_PAD    DEFAULT_LEFT_PAD    DEFAULT_WIDTH    argPos    defaultDescPad    defaultLeftPad    defaultWidth    descPad    leftPad    max    nextLineTabStop    padding    pos    startPos    width    x        	cli_662_HelpFormatter_1_1	806	1	src/java/org/apache/commons/cli/HelpFormatter.java
285	[PATCH]    return    hasNoValues()    ?    null    :    (String)    this.values.get(index);	[BUG]    [BUGGY]    return    true    ?    null    :    (String)    this.values.get(index);    [FE]    junit.framework.ComparisonFailure:    expected:<null>    but    was:<file1>    test11458    [CONTEXT]    public    String    getValue(int    index)    throws    IndexOutOfBoundsException    {    [BUGGY]    return    true    ?    null    :    (String)    this.values.get(index);    }    [CLASS]        Option    [METHOD]    getValue    [RETURN_TYPE]    String        int    index    [VARIABLES]    boolean    hasArg    optionalArg    required    ArrayList    values    char    sep    valuesep    Object    type    String    argName    description    longOpt    opt    value    int    UNINITIALIZED    UNLIMITED_VALUES    index    num    numberOfArgs        	cli_267_Option_1_1	513	1	src/java/org/apache/commons/cli/Option.java
286	[PATCH]    while    ((pos    >    0)    &&    Character.isWhitespace(s.charAt(pos    -    1)))	[BUG]    [BUGGY]    while    ((pos    >    0)    &&    Character.isWhitespace(s.charAt(pos    /    1)))    [FE]    junit.framework.AssertionFailedError:    Unexpected    Exception:    String    index    out    of    range:    10    test13666    [CONTEXT]    protected    String    rtrim(String    s)    {    if    ((s    ==    null)    ||    (s.length()    ==    0))    {    return    s;    }    int    pos    =    s.length();        [BUGGY]    while    ((pos    >    0)    &&    Character.isWhitespace(s.charAt(pos    /    1)))    {    --pos;    }    return    s.substring(0,    pos);    }    [CLASS]        HelpFormatter    OptionComparator    [METHOD]    rtrim    [RETURN_TYPE]    String        String    s    [VARIABLES]    int    DEFAULT_DESC_PAD    DEFAULT_LEFT_PAD    DEFAULT_WIDTH    argPos    defaultDescPad    defaultLeftPad    defaultWidth    descPad    i    leftPad    len    max    nextLineTabStop    padding    pos    startPos    width    x    String    DEFAULT_ARG_NAME    DEFAULT_LONG_OPT_PREFIX    DEFAULT_OPT_PREFIX    DEFAULT_SYNTAX_PREFIX    app    cmdLineSyntax    defaultArgName    defaultLongOptPrefix    defaultNewLine    defaultOptPrefix    defaultSyntaxPrefix    dpad    footer    header    lpad    name    newline    padding    prefix    s    text    boolean        	cli_742_HelpFormatter_1_1	870	1	src/java/org/apache/commons/cli/HelpFormatter.java
287	[PATCH]    printWrapped(pw,    width,    0,    text);	[BUG]    [BUGGY]    printWrapped(pw,    width,    -1,    text);    [FE]    java.lang.NegativeArraySizeException    test21215    [CONTEXT]    public    void    printWrapped(PrintWriter    pw,    int    width,    String    text)    {    [BUGGY]    printWrapped(pw,    width,    -1,    text);    }    [CLASS]        HelpFormatter    OptionComparator    [METHOD]    printWrapped    [RETURN_TYPE]    void        PrintWriter    pw    int    width    String    text    [VARIABLES]    String    DEFAULT_ARG_NAME    DEFAULT_LONG_OPT_PREFIX    DEFAULT_OPT_PREFIX    DEFAULT_SYNTAX_PREFIX    app    cmdLineSyntax    defaultArgName    defaultLongOptPrefix    defaultNewLine    defaultOptPrefix    defaultSyntaxPrefix    footer    header    name    newline    prefix    text    boolean    int    DEFAULT_DESC_PAD    DEFAULT_LEFT_PAD    DEFAULT_WIDTH    argPos    defaultDescPad    defaultLeftPad    defaultWidth    descPad    leftPad    padding    width    PrintWriter    pw        	cli_546_HelpFormatter_1_1	607	1	src/java/org/apache/commons/cli/HelpFormatter.java
288	[PATCH]    if    (values.size()    ==    (numberOfArgs    -    1))	[BUG]    [BUGGY]    if    (values.size()    >=    (numberOfArgs    -    1))    [FE]    junit.framework.ComparisonFailure:    expected:<property[]>    but    was:<property[=value]>    testAnt    [CONTEXT]    while    (index    !=    -1)    {        [BUGGY]    if    (values.size()    >=    (numberOfArgs    -    1))    {    break;    }            add(value.substring(0,    index));            [CLASS]        Option    [METHOD]    processValue    [RETURN_TYPE]    void        String    value    [VARIABLES]    boolean    hasArg    optionalArg    required    ArrayList    values    char    sep    valuesep    Object    type    String    argName    description    longOpt    opt    value    int    UNINITIALIZED    UNLIMITED_VALUES    index    num    numberOfArgs        	cli_229_Option_1_1	441	1	src/java/org/apache/commons/cli/Option.java
289	[PATCH]    if    ((ch    !=    '@')    &&    (ch    !=    ':')    &&    (ch    !=    '%')    &&    (ch    !=    '+')	[BUG]    [BUGGY]    if    (false    &&    (ch    !=    '+')    [FE]    junit.framework.ComparisonFailure:    flag    a    expected:<foo>    but    was:<null>    testSimplePattern    [CONTEXT]    public    static    boolean    isValueCode(char    ch)    {    [BUGGY]    if    (false    &&    (ch    !=    '+')    &&    (ch    !=    '#')    &&    (ch    !=    '<')    &&    (ch    !=    '>')    &&    (ch    !=    '*')    &&    (ch    !=    '/')    &&    (ch    !=    '!'))    {    return    false;    }    return    true;    }    [CLASS]        PatternOptionBuilder    [METHOD]    isValueCode    [RETURN_TYPE]    boolean        char    ch    [VARIABLES]    char    ch    Class    CLASS_VALUE    DATE_VALUE    EXISTING_FILE_VALUE    FILES_VALUE    FILE_VALUE    NUMBER_VALUE    OBJECT_VALUE    STRING_VALUE    URL_VALUE    boolean        	cli_882_PatternOptionBuilder_1_1	138	1	src/java/org/apache/commons/cli/PatternOptionBuilder.java
290	[PATCH]    if    (options.getOptionGroup(opt)    !=    null)	[BUG]    [BUGGY]    if    (true)    [FE]    java.lang.NullPointerException    testAnt    [CONTEXT]            if    (opt.isRequired())    {    requiredOptions.remove(opt.getKey());    }                [BUGGY]    if    (true)    {    OptionGroup    group    =    options.getOptionGroup(opt);    if    (group.isRequired())    {    requiredOptions.remove(group);    }    group.setSelected(opt);    }    [CLASS]        Parser    [METHOD]    processOption    [RETURN_TYPE]    void        String    arg    ListIterator    iter    [VARIABLES]    Options    options    opts    CommandLine    cmd    boolean    hasOption    OptionGroup    group    List    requiredOptions    tokenList    Option    opt    String    arg    ListIterator    iter        	cli_92_Parser_1_1	384	1	src/java/org/apache/commons/cli/Parser.java
291	[PATCH]    if    (stopAtNonOption)	[BUG]    [BUGGY]    if    (false)    [FE]    junit.framework.AssertionFailedError:    Confirm    2    extra    args:    3    testStop    [CONTEXT]    tokens.add(token);    }        else    {    burstToken(token,    stopAtNonOption);    }    }    else    {    [BUGGY]    if    (false)    {    process(token);    }    else    {    tokens.add(token);    }    }    [CLASS]        PosixParser    [METHOD]    flatten    [RETURN_TYPE]    String[]        Options    options    String[]    arguments    boolean    stopAtNonOption    [VARIABLES]    Options    options    boolean    eatTheRest    stopAtNonOption    ArrayList    tokens    Iterator    iter    Option    currentOption    String[]    arguments    String    token    int    tokenLength        	cli_1012_PosixParser_1_1	149	1	src/java/org/apache/commons/cli/PosixParser.java
292	[PATCH]    return    shortOpts.containsKey(opt)    ||    longOpts.containsKey(opt);	[BUG]    [BUGGY]    return    longOpts.containsKey(opt);    [FE]    junit.framework.AssertionFailedError:    Unexpected    exception:Unrecognized    option:    -buildfile    testAnt    [CONTEXT]    public    boolean    hasOption(String    opt)    {    opt    =    Util.stripLeadingHyphens(opt);        [BUGGY]    return    longOpts.containsKey(opt);    }    [CLASS]        Options    [METHOD]    hasOption    [RETURN_TYPE]    boolean        String    opt    [VARIABLES]    List    opts    requiredOpts    String    opt    boolean    Map    longOpts    optionGroups    shortOpts        	cli_129_Options_1_1	244	1	src/java/org/apache/commons/cli/Options.java
293	[PATCH]    if    (!isValidChar(chars[i]))	[BUG]    [BUGGY]    if    (!false)    [FE]    java.lang.IllegalArgumentException:    opt    contains    illegal    character    value    'h'    testAnt    [CONTEXT]    }    }        else    {    char[]    chars    =    opt.toCharArray();    for    (int    i    =    0;    i    <    chars.length;    i++)    {    [BUGGY]    if    (!false)    {    throw    new    IllegalArgumentException(       "opt    contains    illegal    character    value    '   "    +    chars[i]    +       "'   ");    }    }    }    [CLASS]        OptionValidator    [METHOD]    validateOption    [RETURN_TYPE]    void        String    opt    [VARIABLES]    boolean    char    ch    String    opt    int    i    char[]    chars        	cli_818_OptionValidator_1_1	68	1	src/java/org/apache/commons/cli/OptionValidator.java
294	[PATCH]    if    (token.startsWith(   "--   "))	[BUG]    [BUGGY]    if    (true)    [FE]    junit.framework.ComparisonFailure:    expected:<null>    but    was:<value>    test11456    [CONTEXT]    while    (iter.hasNext())    {        token    =    (String)    iter.next();            [BUGGY]    if    (true)    {    if    (token.indexOf('=')    !=    -1)    {    tokens.add(token.substring(0,    token.indexOf('=')));    tokens.add(token.substring(token.indexOf('=')    +    1,    token.length()));    }    else    {    tokens.add(token);    [CLASS]        PosixParser    [METHOD]    flatten    [RETURN_TYPE]    String[]        Options    options    String[]    arguments    boolean    stopAtNonOption    [VARIABLES]    Options    options    boolean    eatTheRest    stopAtNonOption    ArrayList    tokens    Iterator    iter    Option    currentOption    String[]    arguments    String    token    int    tokenLength        	cli_980_PosixParser_1_1	111	1	src/java/org/apache/commons/cli/PosixParser.java
295	[PATCH]    if    (!isValueCode(ch))	[BUG]    [BUGGY]    if    (!true)    [FE]    junit.framework.ComparisonFailure:    flag    a    expected:<foo>    but    was:<null>    testSimplePattern    [CONTEXT]    Object    type    =    null;    Options    options    =    new    Options();    for    (int    i    =    0;    i    <    sz;    i++)    {    ch    =    pattern.charAt(i);                [BUGGY]    if    (!true)    {    if    (opt    !=    '    ')    {    OptionBuilder.hasArg(type    !=    null);    OptionBuilder.isRequired(required);    OptionBuilder.withType(type);        options.addOption(OptionBuilder.create(opt));    required    =    false;    [CLASS]        PatternOptionBuilder    [METHOD]    parsePattern    [RETURN_TYPE]    Options        String    pattern    [VARIABLES]    Options    options    boolean    required    char    ch    opt    Class    CLASS_VALUE    DATE_VALUE    EXISTING_FILE_VALUE    FILES_VALUE    FILE_VALUE    NUMBER_VALUE    OBJECT_VALUE    STRING_VALUE    URL_VALUE    Object    type    String    pattern    int    i    sz        	cli_944_PatternOptionBuilder_1_1	172	1	src/java/org/apache/commons/cli/PatternOptionBuilder.java
296	[PATCH]    else    if    (   "-   ".equals(token))	[BUG]    [BUGGY]    else    if    (false)    [FE]    junit.framework.AssertionFailedError:    org.apache.commons.cli.MissingArgumentException:    Missing    argument    for    option:b    testSingleDash    [CONTEXT]    tokens.add(token.substring(token.indexOf('=')    +    1,    token.length()));    }    else    {    tokens.add(token);    }    }            [BUGGY]    else    if    (false)    {    processSingleHyphen(token);    }    else    if    (token.startsWith(   "-   "))    {    int    tokenLength    =    token.length();    if    (tokenLength    ==    2)    {    processOptionToken(token,    stopAtNonOption);    [CLASS]        PosixParser    [METHOD]    flatten    [RETURN_TYPE]    String[]        Options    options    String[]    arguments    boolean    stopAtNonOption    [VARIABLES]    Options    options    boolean    eatTheRest    stopAtNonOption    ArrayList    tokens    Iterator    iter    Option    currentOption    String[]    arguments    String    token    int    tokenLength        	cli_997_PosixParser_1_1	126	1	src/java/org/apache/commons/cli/PosixParser.java
297	[PATCH]    for    (int    i    =    0;    i    <    len;    ++i)	[BUG]    [BUGGY]    for    (int    i    =    1;    i    <    len;    ++i)    [FE]    junit.framework.ComparisonFailure:    expected:<usage:    dir    test13666    [CONTEXT]    protected    String    createPadding(int    len)    {    StringBuffer    sb    =    new    StringBuffer(len);        [BUGGY]    for    (int    i    =    1;    i    <    len;    ++i)    {    sb.append('    ');    }    return    sb.toString();    }    [CLASS]        HelpFormatter    OptionComparator    [METHOD]    createPadding    [RETURN_TYPE]    String        int    len    [VARIABLES]    StringBuffer    sb    String    DEFAULT_ARG_NAME    DEFAULT_LONG_OPT_PREFIX    DEFAULT_OPT_PREFIX    DEFAULT_SYNTAX_PREFIX    app    cmdLineSyntax    defaultArgName    defaultLongOptPrefix    defaultNewLine    defaultOptPrefix    defaultSyntaxPrefix    dpad    footer    header    lpad    name    newline    padding    prefix    text    boolean    int    DEFAULT_DESC_PAD    DEFAULT_LEFT_PAD    DEFAULT_WIDTH    argPos    defaultDescPad    defaultLeftPad    defaultWidth    descPad    i    leftPad    len    max    nextLineTabStop    padding    pos    startPos    width    x        	cli_716_HelpFormatter_1_1	846	1	src/java/org/apache/commons/cli/HelpFormatter.java
298	[PATCH]    return    getKey().charAt(0);	[BUG]    [BUGGY]    return    getKey().charAt(1);    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    1    test11458    [CONTEXT]    public    int    getId()    {    [BUGGY]    return    getKey().charAt(1);    }    [CLASS]        Option    [METHOD]    getId    [RETURN_TYPE]    int        [VARIABLES]    boolean    hasArg    optionalArg    required    ArrayList    values    char    valuesep    Object    type    String    argName    description    longOpt    opt    int    UNINITIALIZED    UNLIMITED_VALUES    numberOfArgs        	cli_163_Option_1_1	151	1	src/java/org/apache/commons/cli/Option.java
299	[PATCH]    if    (eatTheRest)	[BUG]    [BUGGY]    if    (false)    [FE]    junit.framework.AssertionFailedError:    Confirm    2    extra    args:    3    testStop    [CONTEXT]    private    void    gobble(Iterator    iter)    {    [BUGGY]    if    (false)    {    while    (iter.hasNext())    {    tokens.add(iter.next());    }    }    }    [CLASS]        PosixParser    [METHOD]    gobble    [RETURN_TYPE]    void        Iterator    iter    [VARIABLES]    ArrayList    tokens    Iterator    iter    Options    options    Option    currentOption    boolean    eatTheRest    stopAtNonOption        	cli_1017_PosixParser_1_1	172	1	src/java/org/apache/commons/cli/PosixParser.java
300	[PATCH]    if    (ascii[jj    -    bits]    ==    '1')    {	[BUG]    [BUGGY]    if    (ascii[jj    -    bits]    <=    '1')    {    [FE]    junit.framework.ComparisonFailure:    expected:<[ ]>    but    was:<[�]>    testDecodeObject    [CONTEXT]    return    EMPTY_BYTE_ARRAY;    }        byte[]    l_raw    =    new    byte[ascii.length    >>    3];                    for    (int    ii    =    0,    jj    =    ascii.length    -    1;    ii    <    l_raw.length;    ii++,    jj    -=    8)    {    for    (int    bits    =    0;    bits    <    BITS.length;    ++bits)    {    [BUGGY]    if    (ascii[jj    -    bits]    <=    '1')    {    l_raw[ii]    |=    BITS[bits];    }    }    }    return    l_raw;    }    [CLASS]        BinaryCodec    [METHOD]    fromAscii    [RETURN_TYPE]    byte[]        byte[]    ascii    [VARIABLES]    byte[]    EMPTY_BYTE_ARRAY    ascii    l_raw    raw    int[]    BITS    boolean    int    BIT_0    BIT_1    BIT_2    BIT_3    BIT_4    BIT_5    BIT_6    BIT_7    bits    ii    jj    char[]    EMPTY_CHAR_ARRAY    ascii        	codec_952_BinaryCodec_1_1	205	1	src/java/org/apache/commons/codec/binary/BinaryCodec.java
301	[PATCH]    if    (index    >    0    &&    !isVowel(charAt(value,    index    -    1)))    {	[BUG]    [BUGGY]    if    (index    >    0    &&    !isVowel(charAt(value,    index    -    0)))    {    [FE]    junit.framework.AssertionFailedError:    Expected    match    [288]    playwrite    and    playwright    testIsDoubleMetaphoneEqualWithMATCHES    [CONTEXT]    int    index)    {    [BUGGY]    if    (index    >    0    &&    !isVowel(charAt(value,    index    -    0)))    {    result.append('K');    index    +=    2;    }    else    if    (index    ==    0)    {    if    (charAt(value,    index    +    2)    ==    'I')    {    result.append('J');    }    else    {    result.append('K');    }    index    +=    2;    }    else    if    ((index    >    1    &&    contains(value,    index    -    2,    1,       "B   ",       "H   ",       "D   "))    ||    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    handleGH    [RETURN_TYPE]    int        String    value    DoubleMetaphoneResult    result    int    index    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    value    value1    value2    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    boolean    int    index    maxCodeLen    maxLength    DoubleMetaphoneResult    result        	codec_1959_DoubleMetaphone_1_1	477	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
302	[PATCH]    if    (ascii[jj    -    bits]    ==    '1')    {	[BUG]    [BUGGY]    if    (ascii[jj    *    bits]    ==    '1')    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    14    testDecodeObject    [CONTEXT]    return    EMPTY_BYTE_ARRAY;    }        byte[]    l_raw    =    new    byte[ascii.length    >>    3];                    for    (int    ii    =    0,    jj    =    ascii.length    -    1;    ii    <    l_raw.length;    ii++,    jj    -=    8)    {    for    (int    bits    =    0;    bits    <    BITS.length;    ++bits)    {    [BUGGY]    if    (ascii[jj    *    bits]    ==    '1')    {    l_raw[ii]    |=    BITS[bits];    }    }    }    return    l_raw;    }    [CLASS]        BinaryCodec    [METHOD]    fromAscii    [RETURN_TYPE]    byte[]        byte[]    ascii    [VARIABLES]    byte[]    EMPTY_BYTE_ARRAY    ascii    l_raw    raw    int[]    BITS    boolean    int    BIT_0    BIT_1    BIT_2    BIT_3    BIT_4    BIT_5    BIT_6    BIT_7    bits    ii    jj    char[]    EMPTY_CHAR_ARRAY    ascii        	codec_949_BinaryCodec_1_1	205	1	src/java/org/apache/commons/codec/binary/BinaryCodec.java
303	[PATCH]    encodedData[encodedIndex    +    2]    =    lookUpBase64Alphabet[l    <<    2];	[BUG]    [BUGGY]    encodedData[encodedIndex    +    2]    =    lookUpBase64Alphabet[l    <<    -2];    [FE]    java.lang.ArrayIndexOutOfBoundsException:    1073741824    testEncodeDecodeSmall    [CONTEXT]    b1    =    binaryData[dataIndex];    b2    =    binaryData[dataIndex    +    1];    l    =    (byte)    (b2    &    0x0f);    k    =    (byte)    (b1    &    0x03);    byte    val1    =    ((b1    &    SIGN)    ==    0)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);    byte    val2    =    ((b2    &    SIGN)    ==    0)    ?    (byte)    (b2    >>    4)    :    (byte)    ((b2)    >>    4    ^    0xf0);    encodedData[encodedIndex]    =    lookUpBase64Alphabet[val1];    encodedData[encodedIndex    +    1]    =    lookUpBase64Alphabet[val2    |    (k    <<    4)];    [BUGGY]    encodedData[encodedIndex    +    2]    =    lookUpBase64Alphabet[l    <<    -2];    encodedData[encodedIndex    +    3]    =    PAD;    }    if    (isChunked)    {        if    (chunksSoFar    <    chunckCount)    {    System.arraycopy(CHUNK_SEPARATOR,    0,    encodedData,    encodedDataLength    -    CHUNK_SEPARATOR.length,    CHUNK_SEPARATOR.length);    }    }    [CLASS]        Base64    [METHOD]    encodeBase64    [RETURN_TYPE]    byte[]        byte[]    binaryData    boolean    isChunked    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    binaryData    encodedData    lookUpBase64Alphabet    pArray    boolean    isChunked    byte    PAD    b1    b2    b3    k    l    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    length    nextSeparatorIndex    long    binaryDataLength    encodedDataLengthLong    fewerThan24bits    lengthDataBits    tripletCount        	codec_528_Base64_1_1	370	1	src/java/org/apache/commons/codec/binary/Base64.java
304	[PATCH]    return    alternate    ?    result.getAlternate()    :    result.getPrimary();	[BUG]    [BUGGY]    return    true    ?    result.getAlternate()    :    result.getPrimary();    [FE]    junit.framework.AssertionFailedError:    Expected    match    [0]    Accosinly    and    Occasionally    testIsDoubleMetaphoneEqualWithMATCHES    [CONTEXT]    break;    case    'Z':    index    =    handleZ(value,    result,    index,    slavoGermanic);    break;    default:    index++;    break;    }    }        [BUGGY]    return    true    ?    result.getAlternate()    :    result.getPrimary();    }    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    doubleMetaphone    [RETURN_TYPE]    String        String    value    boolean    alternate    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    value    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    boolean    alternate    slavoGermanic    int    index    maxCodeLen    maxLength    DoubleMetaphoneResult    result        	codec_1404_DoubleMetaphone_1_1	190	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
305	[PATCH]    return    0;	[BUG]    [BUGGY]    return    1;    [FE]    junit.framework.AssertionFailedError:    Code    does    not    equals    zero    expected:<0>    but    was:<1>    testGetMappingCodeNonLetter    [CONTEXT]    char    getMappingCode(char    c)    {    if    (!Character.isLetter(c))    {    [BUGGY]    return    1;    }    return    this.soundexMapping[Character.toUpperCase(c)    -    'A'];    }    [CLASS]        RefinedSoundex    [METHOD]    getMappingCode    [RETURN_TYPE]    char        char    c    [VARIABLES]    char    c    RefinedSoundex    US_ENGLISH    boolean    char[]    US_ENGLISH_MAPPING    mapping    soundexMapping        	codec_3833_RefinedSoundex_1_1	142	1	src/java/org/apache/commons/codec/language/RefinedSoundex.java
306	[PATCH]    index    =    charAt(value,    index    +    1)    ==    'F'    ?    index    +    2    :    index    +    1;	[BUG]    [BUGGY]    index    =    charAt(value,    index    /    1)    ==    'F'    ?    index    +    2    :    index    +    1;    [FE]    junit.framework.ComparisonFailure:    expected:<KXF[S]>    but    was:<KXF[K]>    testDoubleMetaphone    [CONTEXT]    index++;    break;    case    'C':    index    =    handleC(value,    result,    index);    break;    case    'D':    index    =    handleD(value,    result,    index);    break;    case    'F':    result.append('F');    [BUGGY]    index    =    charAt(value,    index    /    1)    ==    'F'    ?    index    +    2    :    index    +    1;    break;    case    'G':    index    =    handleG(value,    result,    index,    slavoGermanic);    break;    case    'H':    index    =    handleH(value,    result,    index);    break;    case    'J':    index    =    handleJ(value,    result,    index,    slavoGermanic);    break;    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    doubleMetaphone    [RETURN_TYPE]    String        String    value    boolean    alternate    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    value    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    boolean    alternate    slavoGermanic    int    index    maxCodeLen    maxLength    DoubleMetaphoneResult    result        	codec_1264_DoubleMetaphone_1_1	124	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
307	[PATCH]    encodedDataLengthLong    +=    chunckCount    *    CHUNK_SEPARATOR.length;	[BUG]    [BUGGY]    encodedDataLengthLong    +=    chunckCount    +    CHUNK_SEPARATOR.length;    [FE]    junit.framework.ComparisonFailure:    expected:<AA==[]    testSingletonsChunked    [CONTEXT]    encodedDataLengthLong    =    tripletCount    *    4;    }                if    (isChunked)    {    chunckCount    =    (CHUNK_SEPARATOR.length    ==    0    ?    0    :    (int)    Math    .ceil((float)    encodedDataLengthLong    /    CHUNK_SIZE));    [BUGGY]    encodedDataLengthLong    +=    chunckCount    +    CHUNK_SEPARATOR.length;    }    if    (encodedDataLengthLong    >    Integer.MAX_VALUE)    {    throw    new    IllegalArgumentException(       "Input    array    too    big,    output    array    would    be    bigger    than    Integer.MAX_VALUE=   "    +    Integer.MAX_VALUE);    }    int    encodedDataLength    =    (int)    encodedDataLengthLong;    byte    encodedData[]    =    new    byte[encodedDataLength];    byte    k    =    0,    l    =    0,    b1    =    0,    b2    =    0,    b3    =    0;    [CLASS]        Base64    [METHOD]    encodeBase64    [RETURN_TYPE]    byte[]        byte[]    binaryData    boolean    isChunked    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    binaryData    encodedData    lookUpBase64Alphabet    pArray    boolean    isChunked    byte    PAD    b1    b2    b3    k    l    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    length    nextSeparatorIndex    long    binaryDataLength    encodedDataLengthLong    fewerThan24bits    lengthDataBits    tripletCount        	codec_197_Base64_1_1	289	1	src/java/org/apache/commons/codec/binary/Base64.java
308	[PATCH]    while    (base64Data[lastData    -    1]    ==    PAD)    {	[BUG]    [BUGGY]    while    (base64Data[lastData    -    0]    ==    PAD)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    64    testKnownDecodings    [CONTEXT]    byte    b1    =    0,    b2    =    0,    b3    =    0,    b4    =    0,    marker0    =    0,    marker1    =    0;            int    encodedIndex    =    0;    int    dataIndex    =    0;    {        int    lastData    =    base64Data.length;        [BUGGY]    while    (base64Data[lastData    -    0]    ==    PAD)    {    if    (--lastData    ==    0)    {    return    new    byte[0];    }    }    decodedData    =    new    byte[lastData    -    numberQuadruple];    }    for    (int    i    =    0;    i    <    numberQuadruple;    i++)    {    dataIndex    =    i    *    4;    marker0    =    base64Data[dataIndex    +    2];    [CLASS]        Base64    [METHOD]    decodeBase64    [RETURN_TYPE]    byte[]        byte[]    base64Data    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    base64Data    binaryData    decodedData    encodedData    lookUpBase64Alphabet    pArray    boolean    byte    PAD    b1    b2    b3    b4    k    l    marker0    marker1    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    lastData    length    nextSeparatorIndex    numberQuadruple        	codec_579_Base64_1_1	413	1	src/java/org/apache/commons/codec/binary/Base64.java
309	[PATCH]    byte    val2    =    ((b2    &    SIGN)    ==    0)    ?    (byte)    (b2    >>    4)    :    (byte)    ((b2)    >>    4    ^    0xf0);	[BUG]    [BUGGY]    byte    val2    =    ((b2    &    SIGN)    <=    0)    ?    (byte)    (b2    >>    4)    :    (byte)    ((b2)    >>    4    ^    0xf0);    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -4    testEncodeDecodeSmall    [CONTEXT]    encodedData[encodedIndex    +    2]    =    PAD;    encodedData[encodedIndex    +    3]    =    PAD;    }    else    if    (fewerThan24bits    ==    SIXTEENBIT)    {    b1    =    binaryData[dataIndex];    b2    =    binaryData[dataIndex    +    1];    l    =    (byte)    (b2    &    0x0f);    k    =    (byte)    (b1    &    0x03);    byte    val1    =    ((b1    &    SIGN)    ==    0)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);    [BUGGY]    byte    val2    =    ((b2    &    SIGN)    <=    0)    ?    (byte)    (b2    >>    4)    :    (byte)    ((b2)    >>    4    ^    0xf0);    encodedData[encodedIndex]    =    lookUpBase64Alphabet[val1];    encodedData[encodedIndex    +    1]    =    lookUpBase64Alphabet[val2    |    (k    <<    4)];    encodedData[encodedIndex    +    2]    =    lookUpBase64Alphabet[l    <<    2];    encodedData[encodedIndex    +    3]    =    PAD;    }    if    (isChunked)    {        if    (chunksSoFar    <    chunckCount)    {    [CLASS]        Base64    [METHOD]    encodeBase64    [RETURN_TYPE]    byte[]        byte[]    binaryData    boolean    isChunked    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    binaryData    encodedData    lookUpBase64Alphabet    pArray    boolean    isChunked    byte    PAD    b1    b2    b3    k    l    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    length    nextSeparatorIndex    long    binaryDataLength    encodedDataLengthLong    fewerThan24bits    lengthDataBits    tripletCount        	codec_492_Base64_1_1	366	1	src/java/org/apache/commons/codec/binary/Base64.java
310	[PATCH]    result    =    true;	[BUG]    [BUGGY]    result    =    false;    [FE]    junit.framework.AssertionFailedError:    Expected    match    between    cookie    and    quick    (use    alternate:    false)    testIsDoubleMetaphoneEqualBasic    [CONTEXT]    protected    static    boolean    contains(String    value,    int    start,    int    length,    String[]    criteria)    {    boolean    result    =    false;    if    (start    >=    0    &&    start    +    length    <=    value.length())    {    String    target    =    value.substring(start,    start    +    length);    for    (int    i    =    0;    i    <    criteria.length;    i++)    {    if    (target.equals(criteria[i]))    {    [BUGGY]    result    =    false;    break;    }    }    }    return    result;    }    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    contains    [RETURN_TYPE]    boolean        String    value    int    start    int    length    String[]    criteria    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    criteria    criteria1    criteria2    criteria3    criteria4    criteria5    criteria6    input    target    value    value1    value2    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    criteria    boolean    result    int    i    index    length    maxCodeLen    maxLength    start        	codec_3308_DoubleMetaphone_1_1	1017	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
311	[PATCH]    }    else    if    (contains(value,    index,    2,       "TH   ")    ||    contains(value,    index,	[BUG]    [BUGGY]    }    else    if    (contains(value,    index,    0,       "TH   ")    ||    contains(value,    index,    [FE]    junit.framework.ComparisonFailure:    expected:<[0]>    but    was:<[T]>    testDoubleMetaphone    [CONTEXT]    private    int    handleT(String    value,    DoubleMetaphoneResult    result,    int    index)    {    if    (contains(value,    index,    4,       "TION   "))    {    result.append('X');    index    +=    3;    }    else    if    (contains(value,    index,    3,       "TIA   ",       "TCH   "))    {    result.append('X');    index    +=    3;    [BUGGY]    }    else    if    (contains(value,    index,    0,       "TH   ")    ||    contains(value,    index,    3,       "TTH   "))    {    if    (contains(value,    index    +    2,    2,       "OM   ",       "AM   ")    ||        contains(value,    0,    4,       "VAN       ",       "VON       ")    ||    contains(value,    0,    3,       "SCH   "))    {    result.append('T');    }    else    {    result.append('0',    'T');    }    index    +=    2;    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    handleT    [RETURN_TYPE]    int        String    value    DoubleMetaphoneResult    result    int    index    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    value    value1    value2    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    boolean    int    index    maxCodeLen    maxLength    DoubleMetaphoneResult    result        	codec_2641_DoubleMetaphone_1_1	706	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
312	[PATCH]    index    =    contains(value,    index    +    1,    1,       "S   ",       "Z   ")    ?    index    +    2    :    index    +    1;	[BUG]    [BUGGY]    index    =    contains(value,    index    +    1,    1,       "S   ",       "Z   ")    ?    index    +    2    :    index    +    0;    [FE]    junit.framework.AssertionFailedError:    Expected    match    [0]    Accosinly    and    Occasionally    testIsDoubleMetaphoneEqualWithMATCHES    [CONTEXT]    }    else    if    (contains(value,    index,    2,       "SC   "))    {    index    =    handleSC(value,    result,    index);    }    else    {    if    (index    ==    value.length()    -    1    &&    contains(value,    index    -    2,    2,       "AI   ",       "OI   ")){        result.appendAlternate('S');    }    else    {    result.append('S');    }    [BUGGY]    index    =    contains(value,    index    +    1,    1,       "S   ",       "Z   ")    ?    index    +    2    :    index    +    0;    }    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    handleS    [RETURN_TYPE]    int        String    value    DoubleMetaphoneResult    result    int    index    boolean    slavoGermanic    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    value    value1    value2    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    boolean    slavoGermanic    int    index    maxCodeLen    maxLength    DoubleMetaphoneResult    result        	codec_2547_DoubleMetaphone_1_1	657	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
313	[PATCH]    System.arraycopy(CHUNK_SEPARATOR,    0,    encodedData,    encodedIndex,    CHUNK_SEPARATOR.length);	[BUG]    [BUGGY]    System.arraycopy(CHUNK_SEPARATOR,    -1,    encodedData,    encodedIndex,    CHUNK_SEPARATOR.length);    [FE]    java.lang.ArrayIndexOutOfBoundsException    testKnownEncodings    [CONTEXT]    encodedData[encodedIndex    +    1]    =    lookUpBase64Alphabet[val2    |    (k    <<    4)];    encodedData[encodedIndex    +    2]    =    lookUpBase64Alphabet[(l    <<    2)    |    val3];    encodedData[encodedIndex    +    3]    =    lookUpBase64Alphabet[b3    &    0x3f];    encodedIndex    +=    4;        if    (isChunked)    {        if    (encodedIndex    ==    nextSeparatorIndex)    {    [BUGGY]    System.arraycopy(CHUNK_SEPARATOR,    -1,    encodedData,    encodedIndex,    CHUNK_SEPARATOR.length);    chunksSoFar++;    nextSeparatorIndex    =    (CHUNK_SIZE    *    (chunksSoFar    +    1))    +    (chunksSoFar    *    CHUNK_SEPARATOR.length);    encodedIndex    +=    CHUNK_SEPARATOR.length;    }    }    }        dataIndex    =    i    *    3;        [CLASS]        Base64    [METHOD]    encodeBase64    [RETURN_TYPE]    byte[]        byte[]    binaryData    boolean    isChunked    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    binaryData    encodedData    lookUpBase64Alphabet    pArray    boolean    isChunked    byte    PAD    b1    b2    b3    k    l    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    length    nextSeparatorIndex    long    binaryDataLength    encodedDataLengthLong    fewerThan24bits    lengthDataBits    tripletCount        	codec_364_Base64_1_1	337	1	src/java/org/apache/commons/codec/binary/Base64.java
314	[PATCH]    contains(value,    index    -    3,    1,       "C   ",       "G   ",       "L   ",       "R   ",       "T   "))    {	[BUG]    [BUGGY]    contains(value,    index    -    3,    -1,       "C   ",       "G   ",       "L   ",       "R   ",       "T   "))    {    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    -1    testIsDoubleMetaphoneEqualExtended3    [CONTEXT]    }    else    if    ((index    >    1    &&    contains(value,    index    -    2,    1,       "B   ",       "H   ",       "D   "))    ||    (index    >    2    &&    contains(value,    index    -    3,    1,       "B   ",       "H   ",       "D   "))    ||    (index    >    3    &&    contains(value,    index    -    4,    1,       "B   ",       "H   ")))    {        index    +=    2;    }    else    {    if    (index    >    2    &&    charAt(value,    index    -    1)    ==    'U'    &&    [BUGGY]    contains(value,    index    -    3,    -1,       "C   ",       "G   ",       "L   ",       "R   ",       "T   "))    {        result.append('F');    }    else    if    (index    >    0    &&    charAt(value,    index    -    1)    !=    'I')    {    result.append('K');    }    index    +=    2;    }    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    handleGH    [RETURN_TYPE]    int        String    value    DoubleMetaphoneResult    result    int    index    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    value    value1    value2    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    boolean    int    index    maxCodeLen    maxLength    DoubleMetaphoneResult    result        	codec_2079_DoubleMetaphone_1_1	494	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
315	[PATCH]    return    new    byte[0];	[BUG]    [BUGGY]    return    new    byte[-1];    [FE]    java.lang.NegativeArraySizeException    testDecodePadOnlyChunked    [CONTEXT]        int    encodedIndex    =    0;    int    dataIndex    =    0;    {        int    lastData    =    base64Data.length;        while    (base64Data[lastData    -    1]    ==    PAD)    {    if    (--lastData    ==    0)    {    [BUGGY]    return    new    byte[-1];    }    }    decodedData    =    new    byte[lastData    -    numberQuadruple];    }    for    (int    i    =    0;    i    <    numberQuadruple;    i++)    {    dataIndex    =    i    *    4;    marker0    =    base64Data[dataIndex    +    2];    marker1    =    base64Data[dataIndex    +    3];        [CLASS]        Base64    [METHOD]    decodeBase64    [RETURN_TYPE]    byte[]        byte[]    base64Data    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    base64Data    binaryData    decodedData    encodedData    lookUpBase64Alphabet    pArray    boolean    byte    PAD    b1    b2    b3    b4    k    l    marker0    marker1    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    lastData    length    nextSeparatorIndex    numberQuadruple        	codec_594_Base64_1_1	415	1	src/java/org/apache/commons/codec/binary/Base64.java
316	[PATCH]    byte    val1    =    ((b1    &    SIGN)    ==    0)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);	[BUG]    [BUGGY]    byte    val1    =    ((b1    &    SIGN)    <=    0)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -23    testEncodeDecodeSmall    [CONTEXT]    }        dataIndex    =    i    *    3;    if    (fewerThan24bits    ==    EIGHTBIT)    {    b1    =    binaryData[dataIndex];    k    =    (byte)    (b1    &    0x03);            [BUGGY]    byte    val1    =    ((b1    &    SIGN)    <=    0)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);    encodedData[encodedIndex]    =    lookUpBase64Alphabet[val1];    encodedData[encodedIndex    +    1]    =    lookUpBase64Alphabet[k    <<    4];    encodedData[encodedIndex    +    2]    =    PAD;    encodedData[encodedIndex    +    3]    =    PAD;    }    else    if    (fewerThan24bits    ==    SIXTEENBIT)    {    b1    =    binaryData[dataIndex];    b2    =    binaryData[dataIndex    +    1];    l    =    (byte)    (b2    &    0x0f);    k    =    (byte)    (b1    &    0x03);    [CLASS]        Base64    [METHOD]    encodeBase64    [RETURN_TYPE]    byte[]        byte[]    binaryData    boolean    isChunked    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    binaryData    encodedData    lookUpBase64Alphabet    pArray    boolean    isChunked    byte    PAD    b1    b2    b3    k    l    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    length    nextSeparatorIndex    long    binaryDataLength    encodedDataLengthLong    fewerThan24bits    lengthDataBits    tripletCount        	codec_407_Base64_1_1	353	1	src/java/org/apache/commons/codec/binary/Base64.java
317	[PATCH]    byte    val3    =    ((b3    &    SIGN)    ==    0)    ?    (byte)    (b3    >>    6)    :    (byte)    ((b3)    >>    6    ^    0xfc);	[BUG]    [BUGGY]    byte    val3    =    ((b3    &    SIGN)    ==    0)    ?    (byte)    (b3    >>    6)    :    (byte)    ((b3)    >>    -6    ^    0xfc);    [FE]    junit.framework.AssertionFailedError:    -22,67,-65,-63    equals    -22,67,-1,-63    testEncodeDecodeSmall    [CONTEXT]    b2    =    binaryData[dataIndex    +    1];    b3    =    binaryData[dataIndex    +    2];            l    =    (byte)    (b2    &    0x0f);    k    =    (byte)    (b1    &    0x03);    byte    val1    =    ((b1    &    SIGN)    ==    0)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);    byte    val2    =    ((b2    &    SIGN)    ==    0)    ?    (byte)    (b2    >>    4)    :    (byte)    ((b2)    >>    4    ^    0xf0);    [BUGGY]    byte    val3    =    ((b3    &    SIGN)    ==    0)    ?    (byte)    (b3    >>    6)    :    (byte)    ((b3)    >>    -6    ^    0xfc);    encodedData[encodedIndex]    =    lookUpBase64Alphabet[val1];                encodedData[encodedIndex    +    1]    =    lookUpBase64Alphabet[val2    |    (k    <<    4)];    encodedData[encodedIndex    +    2]    =    lookUpBase64Alphabet[(l    <<    2)    |    val3];    encodedData[encodedIndex    +    3]    =    lookUpBase64Alphabet[b3    &    0x3f];    encodedIndex    +=    4;    [CLASS]        Base64    [METHOD]    encodeBase64    [RETURN_TYPE]    byte[]        byte[]    binaryData    boolean    isChunked    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    binaryData    encodedData    lookUpBase64Alphabet    pArray    boolean    isChunked    byte    PAD    b1    b2    b3    k    l    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    length    nextSeparatorIndex    long    binaryDataLength    encodedDataLengthLong    fewerThan24bits    lengthDataBits    tripletCount        	codec_310_Base64_1_1	321	1	src/java/org/apache/commons/codec/binary/Base64.java
318	[PATCH]    encodedData[encodedIndex    +    3]    =    PAD;	[BUG]    [BUGGY]    encodedData[encodedIndex    /    3]    =    PAD;    [FE]    junit.framework.ComparisonFailure:    expected:<[AA==]    testSingletonsChunked    [CONTEXT]    if    (fewerThan24bits    ==    EIGHTBIT)    {    b1    =    binaryData[dataIndex];    k    =    (byte)    (b1    &    0x03);            byte    val1    =    ((b1    &    SIGN)    ==    0)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);    encodedData[encodedIndex]    =    lookUpBase64Alphabet[val1];    encodedData[encodedIndex    +    1]    =    lookUpBase64Alphabet[k    <<    4];    encodedData[encodedIndex    +    2]    =    PAD;    [BUGGY]    encodedData[encodedIndex    /    3]    =    PAD;    }    else    if    (fewerThan24bits    ==    SIXTEENBIT)    {    b1    =    binaryData[dataIndex];    b2    =    binaryData[dataIndex    +    1];    l    =    (byte)    (b2    &    0x0f);    k    =    (byte)    (b1    &    0x03);    byte    val1    =    ((b1    &    SIGN)    ==    0)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);    byte    val2    =    ((b2    &    SIGN)    ==    0)    ?    (byte)    (b2    >>    4)    :    (byte)    ((b2)    >>    4    ^    0xf0);        [CLASS]        Base64    [METHOD]    encodeBase64    [RETURN_TYPE]    byte[]        byte[]    binaryData    boolean    isChunked    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    binaryData    encodedData    lookUpBase64Alphabet    pArray    boolean    isChunked    byte    PAD    b1    b2    b3    k    l    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    length    nextSeparatorIndex    long    binaryDataLength    encodedDataLengthLong    fewerThan24bits    lengthDataBits    tripletCount        	codec_446_Base64_1_1	357	1	src/java/org/apache/commons/codec/binary/Base64.java
319	[PATCH]    int    index    =    ch    -    'A';	[BUG]    [BUGGY]    int    index    =    ch    %    'A';    [FE]    junit.framework.AssertionFailedError:    Expected    IllegalArgumentException    not    thrown    testUsMappingEWithAcute    [CONTEXT]    private    char    map(char    ch)    {    [BUGGY]    int    index    =    ch    %    'A';    if    (index    <    0    ||    index    >=    this.getSoundexMapping().length)    {    throw    new    IllegalArgumentException(   "The    character    is    not    mapped:       "    +    ch);    }    return    this.getSoundexMapping()[index];    }    [CLASS]        Soundex    [METHOD]    map    [RETURN_TYPE]    char        char    ch    [VARIABLES]    char    ch    Soundex    US_ENGLISH    String    US_ENGLISH_MAPPING_STRING    pString    s1    s2    str    boolean    int    index    maxLength    char[]    US_ENGLISH_MAPPING    mapping    soundexMapping        	codec_3920_Soundex_1_1	212	1	src/java/org/apache/commons/codec/language/Soundex.java
320	[PATCH]    l_ascii[jj    -    bits]    =    '0';	[BUG]    [BUGGY]    l_ascii[jj    +    bits]    =    '0';    [FE]    java.lang.ArrayIndexOutOfBoundsException:    8    testToAsciiBytes    [CONTEXT]    }        byte[]    l_ascii    =    new    byte[raw.length    <<    3];                    for    (int    ii    =    0,    jj    =    l_ascii.length    -    1;    ii    <    raw.length;    ii++,    jj    -=    8)    {    for    (int    bits    =    0;    bits    <    BITS.length;    ++bits)    {    if    ((raw[ii]    &    BITS[bits])    ==    0)    {    [BUGGY]    l_ascii[jj    +    bits]    =    '0';    }    else    {    l_ascii[jj    -    bits]    =    '1';    }    }    }    return    l_ascii;    }    [CLASS]        BinaryCodec    [METHOD]    toAsciiBytes    [RETURN_TYPE]    byte[]        byte[]    raw    [VARIABLES]    byte[]    EMPTY_BYTE_ARRAY    ascii    l_ascii    l_raw    raw    int[]    BITS    boolean    int    BIT_0    BIT_1    BIT_2    BIT_3    BIT_4    BIT_5    BIT_6    BIT_7    bits    ii    jj    char[]    EMPTY_CHAR_ARRAY    ascii        	codec_997_BinaryCodec_1_1	235	1	src/java/org/apache/commons/codec/binary/BinaryCodec.java
321	[PATCH]    (FRONTV.indexOf(local.charAt(n    +    1))    >=    0)    &&	[BUG]    [BUGGY]    (FRONTV.indexOf(local.charAt(n    /    1))    >=    0)    &&    [FE]    junit.framework.AssertionFailedError:    Source:    John,    should    have    same    Metaphone    as:    Gena    testIsMetaphoneEqualJohn    [CONTEXT]    (    regionMatch(local,    n,       "GN   ")    ||    regionMatch(local,    n,       "GNED   ")    )    )    {    break;    }    if    (isPreviousChar(local,    n,    'G'))    {    hard    =    true    ;    }    else    {    hard    =    false    ;    }    if    (!isLastChar(wdsz,    n)    &&    [BUGGY]    (FRONTV.indexOf(local.charAt(n    /    1))    >=    0)    &&    (!hard))    {    code.append('J');    }    else    {    code.append('K');    }    break    ;    case    'H':    if    (isLastChar(wdsz,    n))    {    break    ;    }    [CLASS]        Metaphone    [METHOD]    metaphone    [RETURN_TYPE]    String        String    txt    [VARIABLES]    char    symb    StringBuffer    code    local    String    FRONTV    VARSON    VOWELS    txt    boolean    hard    int    maxCodeLen    n    wdsz    char[]    inwd        	codec_3633_Metaphone_1_1	219	1	src/java/org/apache/commons/codec/language/Metaphone.java
322	[PATCH]    encodedDataLengthLong    =    (tripletCount    +    1)    *    4;	[BUG]    [BUGGY]    encodedDataLengthLong    =    (tripletCount    +    1)    -    4;    [FE]    java.lang.NegativeArraySizeException    testSingletonsChunked    [CONTEXT]    public    static    byte[]    encodeBase64(byte[]    binaryData,    boolean    isChunked)    {    long    binaryDataLength    =    binaryData.length;    long    lengthDataBits    =    binaryDataLength    *    EIGHTBIT;    long    fewerThan24bits    =    lengthDataBits    %    TWENTYFOURBITGROUP;    long    tripletCount    =    lengthDataBits    /    TWENTYFOURBITGROUP;    long    encodedDataLengthLong    =    0;    int    chunckCount    =    0;    if    (fewerThan24bits    !=    0)    {        [BUGGY]    encodedDataLengthLong    =    (tripletCount    +    1)    -    4;    }    else    {        encodedDataLengthLong    =    tripletCount    *    4;    }                if    (isChunked)    {        [CLASS]        Base64    [METHOD]    encodeBase64    [RETURN_TYPE]    byte[]        byte[]    binaryData    boolean    isChunked    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    binaryData    encodedData    lookUpBase64Alphabet    pArray    boolean    isChunked    byte    PAD    b1    b2    b3    k    l    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    length    nextSeparatorIndex    long    binaryDataLength    encodedDataLengthLong    fewerThan24bits    lengthDataBits    tripletCount        	codec_172_Base64_1_1	276	1	src/java/org/apache/commons/codec/binary/Base64.java
323	[PATCH]    byte[]    resizedBytes    =    new    byte[bitlen    /    8];	[BUG]    [BUGGY]    byte[]    resizedBytes    =    new    byte[bitlen    +    8];    [FE]    junit.framework.ComparisonFailure:    expected:<...cuo67Jg7mtqEm2TRuOMU[=]>    but    was:<...cuo67Jg7mtqEm2TRuOMU[AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]>    testCodeInteger1    [CONTEXT]    int    startSrc    =    0;    int    len    =    bigBytes.length;        if((bigInt.bitLength()    %    8)    ==    0)    {    startSrc    =    1;    len--;    }    int    startDst    =    bitlen    /    8    -    len;        [BUGGY]    byte[]    resizedBytes    =    new    byte[bitlen    +    8];    System.arraycopy(bigBytes,    startSrc,    resizedBytes,    startDst,    len);    return    resizedBytes;    }    [CLASS]        Base64    [METHOD]    toIntegerBytes    [RETURN_TYPE]    byte[]        BigInteger    bigInt    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    base64Data    bigBytes    binaryData    data    decodedData    encodedData    groomedData    lookUpBase64Alphabet    pArray    packedData    resizedBytes    BigInteger    bigInt    boolean    byte    PAD    b1    b2    b3    b4    k    l    marker0    marker1    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    bitlen    bytesCopied    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    lastData    len    length    nextSeparatorIndex    numberQuadruple    startDst    startSrc        	codec_867_Base64_1_1	594	1	src/java/org/apache/commons/codec/binary/Base64.java
324	[PATCH]    index    =    charAt(value,    index    +    1)    ==    'F'    ?    index    +    2    :    index    +    1;	[BUG]    [BUGGY]    index    =    false    ?    index    +    2    :    index    +    1;    [FE]    junit.framework.AssertionFailedError:    Expected    match    [3]    Steffen    and    Stephen    testIsDoubleMetaphoneEqualWithMATCHES    [CONTEXT]    index++;    break;    case    'C':    index    =    handleC(value,    result,    index);    break;    case    'D':    index    =    handleD(value,    result,    index);    break;    case    'F':    result.append('F');    [BUGGY]    index    =    false    ?    index    +    2    :    index    +    1;    break;    case    'G':    index    =    handleG(value,    result,    index,    slavoGermanic);    break;    case    'H':    index    =    handleH(value,    result,    index);    break;    case    'J':    index    =    handleJ(value,    result,    index,    slavoGermanic);    break;    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    doubleMetaphone    [RETURN_TYPE]    String        String    value    boolean    alternate    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    value    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    boolean    alternate    slavoGermanic    int    index    maxCodeLen    maxLength    DoubleMetaphoneResult    result        	codec_1267_DoubleMetaphone_1_1	124	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
325	[PATCH]    index    +=    2;	[BUG]    [BUGGY]    index    +=    0;    [FE]    junit.framework.AssertionFailedError:    Expected    match    [175]    heighth    and    height    testIsDoubleMetaphoneEqualWithMATCHES    [CONTEXT]    }    else    if    (contains(value,    index,    2,       "TH   ")    ||    contains(value,    index,    3,       "TTH   "))    {    if    (contains(value,    index    +    2,    2,       "OM   ",       "AM   ")    ||        contains(value,    0,    4,       "VAN       ",       "VON       ")    ||    contains(value,    0,    3,       "SCH   "))    {    result.append('T');    }    else    {    result.append('0',    'T');    }    [BUGGY]    index    +=    0;    }    else    {    result.append('T');    index    =    contains(value,    index    +    1,    1,       "T   ",       "D   ")    ?    index    +    2    :    index    +    1;    }    return    index;    }    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    handleT    [RETURN_TYPE]    int        String    value    DoubleMetaphoneResult    result    int    index    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    value    value1    value2    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    boolean    int    index    maxCodeLen    maxLength    DoubleMetaphoneResult    result        	codec_2675_DoubleMetaphone_1_1	716	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
326	[PATCH]    buffer.write((char)    ((u    <<    4)    +    l));	[BUG]    [BUGGY]    buffer.write((char)    ((u    <<    4)    -    l));    [FE]    junit.framework.ComparisonFailure:    expected:<[Всем_привет]>    but    was:<[Ў�ЫФAСπШЮЫ�~]>    testUTF8RoundTrip    [CONTEXT]    ByteArrayOutputStream    buffer    =    new    ByteArrayOutputStream();    for    (int    i    =    0;    i    <    bytes.length;    i++)    {    int    b    =    bytes[i];    if    (b    ==    ESCAPE_CHAR)    {    try    {    int    u    =    Character.digit((char)    bytes[++i],    16);    int    l    =    Character.digit((char)    bytes[++i],    16);    if    (u    ==    -1    ||    l    ==    -1)    {    throw    new    DecoderException(   "Invalid    quoted-printable    encoding   ");    }    [BUGGY]    buffer.write((char)    ((u    <<    4)    -    l));    }    catch    (ArrayIndexOutOfBoundsException    e)    {    throw    new    DecoderException(   "Invalid    quoted-printable    encoding   ");    }    }    else    {    buffer.write(b);    }    }    return    buffer.toByteArray();    }    [CLASS]        QuotedPrintableCodec    [METHOD]    decodeQuotedPrintable    [RETURN_TYPE]    byte[]        byte[]    bytes    [VARIABLES]    byte[]    bytes    boolean    byte    ESCAPE_CHAR    SPACE    TAB    BitSet    PRINTABLE_CHARS    printable    String    charset    ByteArrayOutputStream    buffer    ArrayIndexOutOfBoundsException    e    int    b    i    l    u        	codec_4286_QuotedPrintableCodec_1_1	189	1	src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java
327	[PATCH]    byte    val2    =    ((b2    &    SIGN)    ==    0)    ?    (byte)    (b2    >>    4)    :    (byte)    ((b2)    >>    4    ^    0xf0);	[BUG]    [BUGGY]    byte    val2    =    ((b2    &    SIGN)    ==    0)    ?    (byte)    (b2    >>    4)    :    (byte)    ((b2)    <<    4    ^    0xf0);    [FE]    java.lang.ArrayIndexOutOfBoundsException:    64    testEncodeDecodeSmall    [CONTEXT]    encodedData[encodedIndex    +    2]    =    PAD;    encodedData[encodedIndex    +    3]    =    PAD;    }    else    if    (fewerThan24bits    ==    SIXTEENBIT)    {    b1    =    binaryData[dataIndex];    b2    =    binaryData[dataIndex    +    1];    l    =    (byte)    (b2    &    0x0f);    k    =    (byte)    (b1    &    0x03);    byte    val1    =    ((b1    &    SIGN)    ==    0)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);    [BUGGY]    byte    val2    =    ((b2    &    SIGN)    ==    0)    ?    (byte)    (b2    >>    4)    :    (byte)    ((b2)    <<    4    ^    0xf0);    encodedData[encodedIndex]    =    lookUpBase64Alphabet[val1];    encodedData[encodedIndex    +    1]    =    lookUpBase64Alphabet[val2    |    (k    <<    4)];    encodedData[encodedIndex    +    2]    =    lookUpBase64Alphabet[l    <<    2];    encodedData[encodedIndex    +    3]    =    PAD;    }    if    (isChunked)    {        if    (chunksSoFar    <    chunckCount)    {    [CLASS]        Base64    [METHOD]    encodeBase64    [RETURN_TYPE]    byte[]        byte[]    binaryData    boolean    isChunked    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    binaryData    encodedData    lookUpBase64Alphabet    pArray    boolean    isChunked    byte    PAD    b1    b2    b3    k    l    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    length    nextSeparatorIndex    long    binaryDataLength    encodedDataLengthLong    fewerThan24bits    lengthDataBits    tripletCount        	codec_501_Base64_1_1	366	1	src/java/org/apache/commons/codec/binary/Base64.java
328	[PATCH]    if    (inwd[1]    ==    'N')    {	[BUG]    [BUGGY]    if    (inwd[1]    <=    'N')    {    [FE]    junit.framework.AssertionFailedError:    Expected    match    between    Gary    and    Cahra    testIsMetaphoneEqual2    [CONTEXT]    char[]    inwd    =    txt.toUpperCase(java.util.Locale.ENGLISH).toCharArray()    ;    StringBuffer    local    =    new    StringBuffer(40);    StringBuffer    code    =    new    StringBuffer(10)    ;        switch(inwd[0])    {    case    'K'    :    case    'G'    :    case    'P'    :    /*    looking    for    KN,    etc*/    [BUGGY]    if    (inwd[1]    <=    'N')    {    local.append(inwd,    1,    inwd.length    -    1);    }    else    {    local.append(inwd);    }    break;    case    'A':    /*    looking    for    AE    */    if    (inwd[1]    ==    'E')    {    local.append(inwd,    1,    inwd.length    -    1);    }    else    {    local.append(inwd);    [CLASS]        Metaphone    [METHOD]    metaphone    [RETURN_TYPE]    String        String    txt    [VARIABLES]    char    symb    StringBuffer    code    local    String    FRONTV    VARSON    VOWELS    txt    boolean    hard    int    maxCodeLen    n    wdsz    char[]    inwd        	codec_3385_Metaphone_1_1	100	1	src/java/org/apache/commons/codec/language/Metaphone.java
329	[PATCH]    index    =    charAt(value,    index    +    1)    ==    'Z'    ?    index    +    2    :    index    +    1;	[BUG]    [BUGGY]    index    =    charAt(value,    index    +    1)    ==    'Z'    ?    index    +    2    :    index    *    1;    [FE]    junit.framework.AssertionFailedError:    Expected    match    [88]    crasy    and    crazy    testIsDoubleMetaphoneEqualWithMATCHES    [CONTEXT]    if    (charAt(value,    index    +    1)    ==    'H')    {        result.append('J');    index    +=    2;    }    else    {    if    (contains(value,    index    +    1,    2,       "ZO   ",       "ZI   ",       "ZA   ")    ||    (slavoGermanic    &&    (index    >    0    &&    charAt(value,    index    -    1)    !=    'T')))    {    result.append(   "S   ",       "TS   ");    }    else    {    result.append('S');    }    [BUGGY]    index    =    charAt(value,    index    +    1)    ==    'Z'    ?    index    +    2    :    index    *    1;    }    return    index;    }    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    handleZ    [RETURN_TYPE]    int        String    value    DoubleMetaphoneResult    result    int    index    boolean    slavoGermanic    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    value    value1    value2    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    boolean    slavoGermanic    int    index    maxCodeLen    maxLength    DoubleMetaphoneResult    result        	codec_2923_DoubleMetaphone_1_1	799	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
330	[PATCH]    int    u    =    Character.digit((char)    bytes[++i],    16);	[BUG]    [BUGGY]    int    u    =    Character.digit((char)    bytes[++i],    -16);    [FE]    org.apache.commons.codec.DecoderException:    Invalid    quoted-printable    encoding    testUTF8RoundTrip    [CONTEXT]    public    static    final    byte[]    decodeQuotedPrintable(byte[]    bytes)    throws    DecoderException    {    if    (bytes    ==    null)    {    return    null;    }    ByteArrayOutputStream    buffer    =    new    ByteArrayOutputStream();    for    (int    i    =    0;    i    <    bytes.length;    i++)    {    int    b    =    bytes[i];    if    (b    ==    ESCAPE_CHAR)    {    try    {    [BUGGY]    int    u    =    Character.digit((char)    bytes[++i],    -16);    int    l    =    Character.digit((char)    bytes[++i],    16);    if    (u    ==    -1    ||    l    ==    -1)    {    throw    new    DecoderException(   "Invalid    quoted-printable    encoding   ");    }    buffer.write((char)    ((u    <<    4)    +    l));    }    catch    (ArrayIndexOutOfBoundsException    e)    {    throw    new    DecoderException(   "Invalid    quoted-printable    encoding   ");    }    }    else    {    buffer.write(b);    [CLASS]        QuotedPrintableCodec    [METHOD]    decodeQuotedPrintable    [RETURN_TYPE]    byte[]        byte[]    bytes    [VARIABLES]    byte[]    bytes    boolean    byte    ESCAPE_CHAR    SPACE    TAB    BitSet    PRINTABLE_CHARS    printable    String    charset    ByteArrayOutputStream    buffer    ArrayIndexOutOfBoundsException    e    int    b    i    l    u        	codec_4263_QuotedPrintableCodec_1_1	184	1	src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java
331	[PATCH]    startSrc    =    1;	[BUG]    [BUGGY]    startSrc    =    -1;    [FE]    java.lang.ArrayIndexOutOfBoundsException    testCodeInteger1    [CONTEXT]    (((bigInt.bitLength()    /    8)    +    1)    ==    (bitlen    /    8)))    {    return    bigBytes;    }        int    startSrc    =    0;    int    len    =    bigBytes.length;        if((bigInt.bitLength()    %    8)    ==    0)    {    [BUGGY]    startSrc    =    -1;    len--;    }    int    startDst    =    bitlen    /    8    -    len;    byte[]    resizedBytes    =    new    byte[bitlen    /    8];    System.arraycopy(bigBytes,    startSrc,    resizedBytes,    startDst,    len);    return    resizedBytes;    }    [CLASS]        Base64    [METHOD]    toIntegerBytes    [RETURN_TYPE]    byte[]        BigInteger    bigInt    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    base64Data    bigBytes    binaryData    data    decodedData    encodedData    groomedData    lookUpBase64Alphabet    pArray    packedData    resizedBytes    BigInteger    bigInt    boolean    byte    PAD    b1    b2    b3    b4    k    l    marker0    marker1    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    bitlen    bytesCopied    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    lastData    len    length    nextSeparatorIndex    numberQuadruple    startDst    startSrc        	codec_850_Base64_1_1	589	1	src/java/org/apache/commons/codec/binary/Base64.java
332	[PATCH]    int    index    =    isSilentStart(value)    ?    1    :    0;	[BUG]    [BUGGY]    int    index    =    isSilentStart(value)    ?    1    :    -1;    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    -1    testComparatorWithDoubleMetaphone    [CONTEXT]    public    String    doubleMetaphone(String    value,    boolean    alternate)    {    value    =    cleanInput(value);    if    (value    ==    null)    {    return    null;    }    boolean    slavoGermanic    =    isSlavoGermanic(value);    [BUGGY]    int    index    =    isSilentStart(value)    ?    1    :    -1;    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult(this.getMaxCodeLen());    while    (!result.isComplete()    &&    index    <=    value.length()    -    1)    {    switch    (value.charAt(index))    {    case    'A':    case    'E':    case    'I':    case    'O':    case    'U':    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    doubleMetaphone    [RETURN_TYPE]    String        String    value    boolean    alternate    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    value    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    boolean    alternate    slavoGermanic    int    index    maxCodeLen    maxLength    DoubleMetaphoneResult    result        	codec_1216_DoubleMetaphone_1_1	93	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
333	[PATCH]    (FRONTV.indexOf(local.charAt(n    +    1))    >=    0)    &&	[BUG]    [BUGGY]    (true)    &&    [FE]    junit.framework.AssertionFailedError:    Expected    match    between    Gary    and    Cahra    testIsMetaphoneEqual2    [CONTEXT]    (    regionMatch(local,    n,       "GN   ")    ||    regionMatch(local,    n,       "GNED   ")    )    )    {    break;    }    if    (isPreviousChar(local,    n,    'G'))    {    hard    =    true    ;    }    else    {    hard    =    false    ;    }    if    (!isLastChar(wdsz,    n)    &&    [BUGGY]    (true)    &&    (!hard))    {    code.append('J');    }    else    {    code.append('K');    }    break    ;    case    'H':    if    (isLastChar(wdsz,    n))    {    break    ;    }    [CLASS]        Metaphone    [METHOD]    metaphone    [RETURN_TYPE]    String        String    txt    [VARIABLES]    char    symb    StringBuffer    code    local    String    FRONTV    VARSON    VOWELS    txt    boolean    hard    int    maxCodeLen    n    wdsz    char[]    inwd        	codec_3638_Metaphone_1_1	219	1	src/java/org/apache/commons/codec/language/Metaphone.java
334	[PATCH]    if    (b    ==    ESCAPE_CHAR)    {	[BUG]    [BUGGY]    if    (b    >=    ESCAPE_CHAR)    {    [FE]    org.apache.commons.codec.DecoderException:    Invalid    quoted-printable    encoding    testUTF8RoundTrip    [CONTEXT]    public    static    final    byte[]    decodeQuotedPrintable(byte[]    bytes)    throws    DecoderException    {    if    (bytes    ==    null)    {    return    null;    }    ByteArrayOutputStream    buffer    =    new    ByteArrayOutputStream();    for    (int    i    =    0;    i    <    bytes.length;    i++)    {    int    b    =    bytes[i];    [BUGGY]    if    (b    >=    ESCAPE_CHAR)    {    try    {    int    u    =    Character.digit((char)    bytes[++i],    16);    int    l    =    Character.digit((char)    bytes[++i],    16);    if    (u    ==    -1    ||    l    ==    -1)    {    throw    new    DecoderException(   "Invalid    quoted-printable    encoding   ");    }    buffer.write((char)    ((u    <<    4)    +    l));    }    catch    (ArrayIndexOutOfBoundsException    e)    {    throw    new    DecoderException(   "Invalid    quoted-printable    encoding   ");    }    [CLASS]        QuotedPrintableCodec    [METHOD]    decodeQuotedPrintable    [RETURN_TYPE]    byte[]        byte[]    bytes    [VARIABLES]    byte[]    bytes    boolean    byte    ESCAPE_CHAR    SPACE    TAB    BitSet    PRINTABLE_CHARS    printable    String    charset    ByteArrayOutputStream    buffer    ArrayIndexOutOfBoundsException    e    int    b    i    l    u        	codec_4260_QuotedPrintableCodec_1_1	182	1	src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java
335	[PATCH]    while    (!result.isComplete()    &&    index    <=    value.length()    -    1)    {	[BUG]    [BUGGY]    while    (!result.isComplete()    &&    index    <=    value.length()    %    1)    {    [FE]    junit.framework.AssertionFailedError:    Expected    match    [265]    nemonic    and    pneumonic    testIsDoubleMetaphoneEqualWithMATCHES    [CONTEXT]    value    =    cleanInput(value);    if    (value    ==    null)    {    return    null;    }    boolean    slavoGermanic    =    isSlavoGermanic(value);    int    index    =    isSilentStart(value)    ?    1    :    0;    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult(this.getMaxCodeLen());        [BUGGY]    while    (!result.isComplete()    &&    index    <=    value.length()    %    1)    {    switch    (value.charAt(index))    {    case    'A':    case    'E':    case    'I':    case    'O':    case    'U':    case    'Y':    index    =    handleAEIOUY(value,    result,    index);    break;    case    'B':    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    doubleMetaphone    [RETURN_TYPE]    String        String    value    boolean    alternate    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    value    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    boolean    alternate    slavoGermanic    int    index    maxCodeLen    maxLength    DoubleMetaphoneResult    result        	codec_1219_DoubleMetaphone_1_1	97	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
336	[PATCH]    if    (digit    ==    -1)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    An    exception    wasn't    thrown    when    trying    to    decode    an    illegal    character    testDecodeBadCharacterPos0    [CONTEXT]    protected    static    int    toDigit(char    ch,    int    index)    throws    DecoderException    {    int    digit    =    Character.digit(ch,    16);    [BUGGY]    if    (false)    {    throw    new    DecoderException(   "Illegal    hexadecimal    charcter       "    +    ch    +       "    at    index       "    +    index);    }    return    digit;    }    [CLASS]        Hex    [METHOD]    toDigit    [RETURN_TYPE]    int        char    ch    int    index    [VARIABLES]    char    ch    boolean    int    digit    index    char[]    DIGITS    data        	codec_1094_Hex_1_1	87	1	src/java/org/apache/commons/codec/binary/Hex.java
337	[PATCH]    for    (int    ii    =    0,    jj    =    ascii.length    -    1;    ii    <    l_raw.length;    ii++,    jj    -=    8)    {	[BUG]    [BUGGY]    for    (int    ii    =    0,    jj    =    ascii.length    -    0;    ii    <    l_raw.length;    ii++,    jj    -=    8)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    8    testToByteArrayFromString    [CONTEXT]    public    static    byte[]    fromAscii(char[]    ascii)    {    if    (ascii    ==    null    ||    ascii.length    ==    0)    {    return    EMPTY_BYTE_ARRAY;    }        byte[]    l_raw    =    new    byte[ascii.length    >>    3];                    [BUGGY]    for    (int    ii    =    0,    jj    =    ascii.length    -    0;    ii    <    l_raw.length;    ii++,    jj    -=    8)    {    for    (int    bits    =    0;    bits    <    BITS.length;    ++bits)    {    if    (ascii[jj    -    bits]    ==    '1')    {    l_raw[ii]    |=    BITS[bits];    }    }    }    return    l_raw;    }    [CLASS]        BinaryCodec    [METHOD]    fromAscii    [RETURN_TYPE]    byte[]        char[]    ascii    [VARIABLES]    byte[]    EMPTY_BYTE_ARRAY    ascii    l_raw    raw    int[]    BITS    boolean    int    BIT_0    BIT_1    BIT_2    BIT_3    BIT_4    BIT_5    BIT_6    BIT_7    bits    ii    jj    char[]    EMPTY_CHAR_ARRAY    ascii        	codec_892_BinaryCodec_1_1	176	1	src/java/org/apache/commons/codec/binary/BinaryCodec.java
338	[PATCH]    if    ((symb    !=    'C')    &&    (isPreviousChar(    local,    n,    symb    ))    )    {	[BUG]    [BUGGY]    if    (false    )    {    [FE]    junit.framework.AssertionFailedError:    Source:    Paris,    should    have    same    Metaphone    as:    Perris    testIsMetaphoneEqualParis    [CONTEXT]    while    ((code.length()    <    this.getMaxCodeLen())    &&    (n    <    wdsz)    )    {    char    symb    =    local.charAt(n)    ;        [BUGGY]    if    (false    )    {    n++    ;    }    else    {    switch(symb)    {    case    'A'    :    case    'E'    :    case    'I'    :    case    'O'    :    case    'U'    :    if    (n    ==    0)    {    code.append(symb);    }    break    ;    case    'B'    :    if    (    isPreviousChar(local,    n,    'M')    &&    [CLASS]        Metaphone    [METHOD]    metaphone    [RETURN_TYPE]    String        String    txt    [VARIABLES]    char    symb    StringBuffer    code    local    String    FRONTV    VARSON    VOWELS    txt    boolean    hard    int    maxCodeLen    n    wdsz    char[]    inwd        	codec_3466_Metaphone_1_1	140	1	src/java/org/apache/commons/codec/language/Metaphone.java
339	[PATCH]    Character.forDigit((b    >>    4)    &    0xF,    16));	[BUG]    [BUGGY]    Character.forDigit((b    >>    4)    &    0,    16));    [FE]    junit.framework.ComparisonFailure:    expected:<%[D0%92%D1%81%D0%B5%D0%BC_%D0%BF%D1%80%D0%B8%D0%B2%D0%B5%D1%8]2>    but    was:<%[00%02%01%01%00%05%00%0C_%00%0F%01%00%00%08%00%02%00%05%01%0]2>    testUTF8RoundTrip    [CONTEXT]    if    (urlsafe.get(b))    {    if    (b    ==    '    ')    {    b    =    '+';    }    buffer.write(b);    }    else    {    buffer.write('%');    char    hex1    =    Character.toUpperCase(    [BUGGY]    Character.forDigit((b    >>    4)    &    0,    16));    char    hex2    =    Character.toUpperCase(    Character.forDigit(b    &    0xF,    16));    buffer.write(hex1);    buffer.write(hex2);    }    [CLASS]        URLCodec    [METHOD]    encodeUrl    [RETURN_TYPE]    byte[]        BitSet    urlsafe    byte[]    bytes    [VARIABLES]    byte[]    bytes    boolean    byte    ESCAPE_CHAR    BitSet    WWW_FORM_URL    urlsafe    char    hex1    hex2    String    charset    ByteArrayOutputStream    buffer    int    b    i        	codec_4348_URLCodec_1_1	135	1	src/java/org/apache/commons/codec/net/URLCodec.java
340	[PATCH]    if    (start    >=    0    &&    start    +    length    <=    value.length())    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    Expected    match    between    cookie    and    quick    (use    alternate:    false)    testIsDoubleMetaphoneEqualBasic    [CONTEXT]    protected    static    boolean    contains(String    value,    int    start,    int    length,    String[]    criteria)    {    boolean    result    =    false;    [BUGGY]    if    (false)    {    String    target    =    value.substring(start,    start    +    length);    for    (int    i    =    0;    i    <    criteria.length;    i++)    {    if    (target.equals(criteria[i]))    {    result    =    true;    break;    }    }    }    return    result;    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    contains    [RETURN_TYPE]    boolean        String    value    int    start    int    length    String[]    criteria    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    criteria    criteria1    criteria2    criteria3    criteria4    criteria5    criteria6    input    target    value    value1    value2    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    criteria    boolean    result    int    i    index    length    maxCodeLen    maxLength    start        	codec_3294_DoubleMetaphone_1_1	1012	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
341	[PATCH]    if    (b    ==    '+')    {	[BUG]    [BUGGY]    if    (b    <=    '+')    {    [FE]    junit.framework.ComparisonFailure:    expected:<[Всем_привет]>    but    was:<[    D0    92    D1    81    D0    B5    D0    BC_    D0    BF    D1    80    D0    B8    D0    B2    D0    B5    D1    82]>    testUTF8RoundTrip    [CONTEXT]    {    if    (bytes    ==    null)    {    return    null;    }    ByteArrayOutputStream    buffer    =    new    ByteArrayOutputStream();    for    (int    i    =    0;    i    <    bytes.length;    i++)    {    int    b    =    bytes[i];    [BUGGY]    if    (b    <=    '+')    {    buffer.write('    ');    }    else    if    (b    ==    '%')    {    try    {    int    u    =    Character.digit((char)bytes[++i],    16);    int    l    =    Character.digit((char)bytes[++i],    16);    if    (u    ==    -1    ||    l    ==    -1)    {    throw    new    DecoderException(   "Invalid    URL    encoding   ");    }    buffer.write((char)((u    <<    4)    +    l));    }    catch(ArrayIndexOutOfBoundsException    e)    {    [CLASS]        URLCodec    [METHOD]    decodeUrl    [RETURN_TYPE]    byte[]        byte[]    bytes    [VARIABLES]    byte[]    bytes    boolean    byte    ESCAPE_CHAR    BitSet    WWW_FORM_URL    urlsafe    String    charset    ByteArrayOutputStream    buffer    ArrayIndexOutOfBoundsException    e    int    b    i    l    u        	codec_4368_URLCodec_1_1	164	1	src/java/org/apache/commons/codec/net/URLCodec.java
342	[PATCH]    while    (!result.isComplete()    &&    index    <=    value.length()    -    1)    {	[BUG]    [BUGGY]    while    (!result.isComplete()    &&    index    <    value.length()    -    1)    {    [FE]    junit.framework.AssertionFailedError:    Expected    match    [20]    amature    and    amateur    testIsDoubleMetaphoneEqualWithMATCHES    [CONTEXT]    value    =    cleanInput(value);    if    (value    ==    null)    {    return    null;    }    boolean    slavoGermanic    =    isSlavoGermanic(value);    int    index    =    isSilentStart(value)    ?    1    :    0;    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult(this.getMaxCodeLen());        [BUGGY]    while    (!result.isComplete()    &&    index    <    value.length()    -    1)    {    switch    (value.charAt(index))    {    case    'A':    case    'E':    case    'I':    case    'O':    case    'U':    case    'Y':    index    =    handleAEIOUY(value,    result,    index);    break;    case    'B':    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    doubleMetaphone    [RETURN_TYPE]    String        String    value    boolean    alternate    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    value    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    boolean    alternate    slavoGermanic    int    index    maxCodeLen    maxLength    DoubleMetaphoneResult    result        	codec_1223_DoubleMetaphone_1_1	97	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
343	[PATCH]    .ceil((float)    encodedDataLengthLong    /    CHUNK_SIZE));	[BUG]    [BUGGY]    .ceil((float)encodedDataLengthLong    %    CHUNK_SIZE));    [FE]    junit.framework.ComparisonFailure:    expected:<AA==[]    testSingletonsChunked    [CONTEXT]        encodedDataLengthLong    =    tripletCount    *    4;    }                if    (isChunked)    {    chunckCount    =    (CHUNK_SEPARATOR.length    ==    0    ?    0    :    (int)    Math    [BUGGY]    .ceil((float)encodedDataLengthLong    %    CHUNK_SIZE));    encodedDataLengthLong    +=    chunckCount    *    CHUNK_SEPARATOR.length;    }    if    (encodedDataLengthLong    >    Integer.MAX_VALUE)    {    throw    new    IllegalArgumentException(       "Input    array    too    big,    output    array    would    be    bigger    than    Integer.MAX_VALUE=   "    +    Integer.MAX_VALUE);    }    int    encodedDataLength    =    (int)    encodedDataLengthLong;    byte    encodedData[]    =    new    byte[encodedDataLength];        [CLASS]        Base64    [METHOD]    encodeBase64    [RETURN_TYPE]    byte[]        byte[]    binaryData    boolean    isChunked    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    binaryData    encodedData    lookUpBase64Alphabet    pArray    boolean    isChunked    byte    PAD    b1    b2    b3    k    l    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    length    nextSeparatorIndex    long    binaryDataLength    encodedDataLengthLong    fewerThan24bits    lengthDataBits    tripletCount        	codec_191_Base64_1_1	288	1	src/java/org/apache/commons/codec/binary/Base64.java
344	[PATCH]    int    index    =    isSilentStart(value)    ?    1    :    0;	[BUG]    [BUGGY]    int    index    =    isSilentStart(value)    ?    -1    :    0;    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    -1    testIsDoubleMetaphoneEqualExtended3    [CONTEXT]    public    String    doubleMetaphone(String    value,    boolean    alternate)    {    value    =    cleanInput(value);    if    (value    ==    null)    {    return    null;    }    boolean    slavoGermanic    =    isSlavoGermanic(value);    [BUGGY]    int    index    =    isSilentStart(value)    ?    -1    :    0;    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult(this.getMaxCodeLen());    while    (!result.isComplete()    &&    index    <=    value.length()    -    1)    {    switch    (value.charAt(index))    {    case    'A':    case    'E':    case    'I':    case    'O':    case    'U':    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    doubleMetaphone    [RETURN_TYPE]    String        String    value    boolean    alternate    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    value    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    boolean    alternate    slavoGermanic    int    index    maxCodeLen    maxLength    DoubleMetaphoneResult    result        	codec_1214_DoubleMetaphone_1_1	93	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
345	[PATCH]    }    else    if    (marker1    ==    PAD)    {	[BUG]    [BUGGY]    }    else    if    (false)    {    [FE]    junit.framework.ComparisonFailure:    expected:<...    3,    4,    5,    6,    7,    8,    9[    }]>    but    was:<...    3,    4,    5,    6,    7,    8,    9[  ]>    testKnownDecodings    [CONTEXT]        b3    =    base64Alphabet[marker0];    b4    =    base64Alphabet[marker1];    decodedData[encodedIndex]    =    (byte)    (b1    <<    2    |    b2    >>    4);    decodedData[encodedIndex    +    1]    =    (byte)    (((b2    &    0xf)    <<    4)    |    ((b3    >>    2)    &    0xf));    decodedData[encodedIndex    +    2]    =    (byte)    (b3    <<    6    |    b4);    }    else    if    (marker0    ==    PAD)    {        decodedData[encodedIndex]    =    (byte)    (b1    <<    2    |    b2    >>    4);    [BUGGY]    }    else    if    (false)    {        b3    =    base64Alphabet[marker0];    decodedData[encodedIndex]    =    (byte)    (b1    <<    2    |    b2    >>    4);    decodedData[encodedIndex    +    1]    =    (byte)    (((b2    &    0xf)    <<    4)    |    ((b3    >>    2)    &    0xf));    }    encodedIndex    +=    3;    }    return    decodedData;    }    [CLASS]        Base64    [METHOD]    decodeBase64    [RETURN_TYPE]    byte[]        byte[]    base64Data    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    base64Data    binaryData    decodedData    encodedData    lookUpBase64Alphabet    pArray    boolean    byte    PAD    b1    b2    b3    b4    k    l    marker0    marker1    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    lastData    length    nextSeparatorIndex    numberQuadruple        	codec_711_Base64_1_1	440	1	src/java/org/apache/commons/codec/binary/Base64.java
346	[PATCH]    matches    =    string.charAt(index    +    1)    ==    c;	[BUG]    [BUGGY]    matches    =    string.charAt(index    +    -1)    ==    c;    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    -1    testTranslateOfSCHAndCH    [CONTEXT]    private    boolean    isNextChar(StringBuffer    string,    int    index,    char    c)    {    boolean    matches    =    false;    if(    index    >=    0    &&    index    <    string.length()    -    1    )    {    [BUGGY]    matches    =    string.charAt(index    +    -1)    ==    c;    }    return    matches;    }    [CLASS]        Metaphone    [METHOD]    isNextChar    [RETURN_TYPE]    boolean        StringBuffer    string    int    index    char    c    [VARIABLES]    char    c    StringBuffer    string    String    FRONTV    VARSON    VOWELS    txt    boolean    matches    int    index    maxCodeLen    n    wdsz        	codec_3784_Metaphone_1_1	332	1	src/java/org/apache/commons/codec/language/Metaphone.java
347	[PATCH]    dataIndex    =    i    *    3;	[BUG]    [BUGGY]    dataIndex    =    i    %    3;    [FE]    junit.framework.AssertionFailedError:    Dest    string    doesn't    eausl    original    testDiscardWhitespace    [CONTEXT]    byte    k    =    0,    l    =    0,    b1    =    0,    b2    =    0,    b3    =    0;    int    encodedIndex    =    0;    int    dataIndex    =    0;    int    i    =    0;    int    nextSeparatorIndex    =    CHUNK_SIZE;    int    chunksSoFar    =    0;        for    (i    =    0;    i    <    tripletCount;    i++)    {    [BUGGY]    dataIndex    =    i    %    3;    b1    =    binaryData[dataIndex];    b2    =    binaryData[dataIndex    +    1];    b3    =    binaryData[dataIndex    +    2];            l    =    (byte)    (b2    &    0x0f);    k    =    (byte)    (b1    &    0x03);    byte    val1    =    ((b1    &    SIGN)    ==    0)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);    [CLASS]        Base64    [METHOD]    encodeBase64    [RETURN_TYPE]    byte[]        byte[]    binaryData    boolean    isChunked    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    binaryData    encodedData    lookUpBase64Alphabet    pArray    boolean    isChunked    byte    PAD    b1    b2    b3    k    l    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    length    nextSeparatorIndex    long    binaryDataLength    encodedDataLengthLong    fewerThan24bits    lengthDataBits    tripletCount        	codec_230_Base64_1_1	309	1	src/java/org/apache/commons/codec/binary/Base64.java
348	[PATCH]    return    charAt(value,    index    +    1)    ==    'R'    ?    index    +    2    :    index    +    1;	[BUG]    [BUGGY]    return    charAt(value,    index    -    1)    ==    'R'    ?    index    +    2    :    index    +    1;    [FE]    junit.framework.AssertionFailedError:    Expected    match    [57]    burracracy    and    bureaucracy    testIsDoubleMetaphoneEqualWithMATCHES    [CONTEXT]    DoubleMetaphoneResult    result,    int    index,    boolean    slavoGermanic)    {    if    (index    ==    value.length()    -    1    &&    !slavoGermanic    &&    contains(value,    index    -    2,    2,       "IE   ")    &&    !contains(value,    index    -    4,    2,       "ME   ",       "MA   "))    {    result.appendAlternate('R');    }    else    {    result.append('R');    }    [BUGGY]    return    charAt(value,    index    -    1)    ==    'R'    ?    index    +    2    :    index    +    1;    }    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    handleR    [RETURN_TYPE]    int        String    value    DoubleMetaphoneResult    result    int    index    boolean    slavoGermanic    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    value    value1    value2    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    boolean    slavoGermanic    int    index    maxCodeLen    maxLength    DoubleMetaphoneResult    result        	codec_2375_DoubleMetaphone_1_1	606	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
349	[PATCH]    (index    >    3    &&    contains(value,    index    -    4,    1,       "B   ",       "H   ")))    {	[BUG]    [BUGGY]    (index    >    3    &&    contains(value,    index    +    4,    1,       "B   ",       "H   ")))    {    [FE]    junit.framework.AssertionFailedError:    Expected    match    [371]    thruout    and    throughout    testIsDoubleMetaphoneEqualWithMATCHES    [CONTEXT]    index    +=    2;    }    else    if    (index    ==    0)    {    if    (charAt(value,    index    +    2)    ==    'I')    {    result.append('J');    }    else    {    result.append('K');    }    index    +=    2;    }    else    if    ((index    >    1    &&    contains(value,    index    -    2,    1,       "B   ",       "H   ",       "D   "))    ||    (index    >    2    &&    contains(value,    index    -    3,    1,       "B   ",       "H   ",       "D   "))    ||    [BUGGY]    (index    >    3    &&    contains(value,    index    +    4,    1,       "B   ",       "H   ")))    {        index    +=    2;    }    else    {    if    (index    >    2    &&    charAt(value,    index    -    1)    ==    'U'    &&    contains(value,    index    -    3,    1,       "C   ",       "G   ",       "L   ",       "R   ",       "T   "))    {        result.append('F');    }    else    if    (index    >    0    &&    charAt(value,    index    -    1)    !=    'I')    {    result.append('K');    }    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    handleGH    [RETURN_TYPE]    int        String    value    DoubleMetaphoneResult    result    int    index    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    value    value1    value2    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    boolean    int    index    maxCodeLen    maxLength    DoubleMetaphoneResult    result        	codec_2039_DoubleMetaphone_1_1	489	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
350	[PATCH]    Character.forDigit((b    >>    4)    &    0xF,    16));	[BUG]    [BUGGY]    Character.forDigit((b    >>    4)    &    0xF,    -16));    [FE]    junit.framework.ComparisonFailure:    expected:<%[D0%92%D1%81%D0%B5%D0%BC_%D0%BF%D1%80%D0%B8%D0%B2%D0%B5%D1%8]2>    but    was:<%[ 0% 2% 1% 1% 0% 5% 0% C_% 0% F% 1% 0% 0% 8% 0% 2% 0% 5% 1% ]2>    testUTF8RoundTrip    [CONTEXT]    if    (urlsafe.get(b))    {    if    (b    ==    '    ')    {    b    =    '+';    }    buffer.write(b);    }    else    {    buffer.write('%');    char    hex1    =    Character.toUpperCase(    [BUGGY]    Character.forDigit((b    >>    4)    &    0xF,    -16));    char    hex2    =    Character.toUpperCase(    Character.forDigit(b    &    0xF,    16));    buffer.write(hex1);    buffer.write(hex2);    }    [CLASS]        URLCodec    [METHOD]    encodeUrl    [RETURN_TYPE]    byte[]        BitSet    urlsafe    byte[]    bytes    [VARIABLES]    byte[]    bytes    boolean    byte    ESCAPE_CHAR    BitSet    WWW_FORM_URL    urlsafe    char    hex1    hex2    String    charset    ByteArrayOutputStream    buffer    int    b    i        	codec_4353_URLCodec_1_1	135	1	src/java/org/apache/commons/codec/net/URLCodec.java
351	[PATCH]    for    (int    ii    =    0,    jj    =    l_ascii.length    -    1;    ii    <    raw.length;    ii++,    jj    -=    8)    {	[BUG]    [BUGGY]    for    (int    ii    =    0,    jj    =    l_ascii.length    -    1;    ii    <    raw.length;    ii++,    jj    -=    0)    {    [FE]    junit.framework.ComparisonFailure:    expected:<[00000000]00000000>    but    was:<[        ]00000000>    testToAsciiChars    [CONTEXT]    public    static    char[]    toAsciiChars(byte[]    raw)    {    if    (raw    ==    null    ||    raw.length    ==    0)    {    return    EMPTY_CHAR_ARRAY;    }        char[]    l_ascii    =    new    char[raw.length    <<    3];                    [BUGGY]    for    (int    ii    =    0,    jj    =    l_ascii.length    -    1;    ii    <    raw.length;    ii++,    jj    -=    0)    {    for    (int    bits    =    0;    bits    <    BITS.length;    ++bits)    {    if    ((raw[ii]    &    BITS[bits])    ==    0)    {    l_ascii[jj    -    bits]    =    '0';    }    else    {    l_ascii[jj    -    bits]    =    '1';    }    }    }    return    l_ascii;    }    [CLASS]        BinaryCodec    [METHOD]    toAsciiChars    [RETURN_TYPE]    char[]        byte[]    raw    [VARIABLES]    byte[]    EMPTY_BYTE_ARRAY    ascii    l_ascii    l_raw    raw    int[]    BITS    boolean    int    BIT_0    BIT_1    BIT_2    BIT_3    BIT_4    BIT_5    BIT_6    BIT_7    bits    ii    jj    char[]    EMPTY_CHAR_ARRAY    ascii    l_ascii        	codec_1030_BinaryCodec_1_1	262	1	src/java/org/apache/commons/codec/binary/BinaryCodec.java
352	[PATCH]    if    (contains(value,    index    +    1,    2,       "    C   ",       "    Q   ",       "    G   "))    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError:    Expected    match    [12]    acord    and    accord    testIsDoubleMetaphoneEqualWithMATCHES    [CONTEXT]    }    else    if    (contains(value,    index,    2,       "CI   ",       "CE   ",       "CY   "))    {        if    (contains(value,    index,    3,       "CIO   ",       "CIE   ",       "CIA   "))    {    result.append('S',    'X');    }    else    {    result.append('S');    }    index    +=    2;    }    else    {    result.append('K');    [BUGGY]    if    (true)    {        index    +=    3;    }    else    if    (contains(value,    index    +    1,    1,       "C   ",       "K   ",       "Q   ")    &&    !contains(value,    index    +    1,    2,       "CE   ",       "CI   "))    {    index    +=    2;    }    else    {    index++;    }    }    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    handleC    [RETURN_TYPE]    int        String    value    DoubleMetaphoneResult    result    int    index    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    value    value1    value2    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    boolean    int    index    maxCodeLen    maxLength    DoubleMetaphoneResult    result        	codec_1528_DoubleMetaphone_1_1	318	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
353	[PATCH]    encodedDataLengthLong    =    tripletCount    *    4;	[BUG]    [BUGGY]    encodedDataLengthLong    =    tripletCount    -    4;    [FE]    java.lang.NegativeArraySizeException    testTriplets    [CONTEXT]    if    (fewerThan24bits    !=    0)    {        encodedDataLengthLong    =    (tripletCount    +    1)    *    4;    }    else    {        [BUGGY]    encodedDataLengthLong    =    tripletCount    -    4;    }    [CLASS]        Base64    [METHOD]    encodeBase64    [RETURN_TYPE]    byte[]        byte[]    binaryData    boolean    isChunked    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    binaryData    encodedData    lookUpBase64Alphabet    pArray    boolean    isChunked    byte    PAD    b1    b2    b3    k    l    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    length    nextSeparatorIndex    long    binaryDataLength    encodedDataLengthLong    fewerThan24bits    lengthDataBits    tripletCount        	codec_179_Base64_1_1	279	1	src/java/org/apache/commons/codec/binary/Base64.java
354	[PATCH]    index    =    charAt(value,    index    +    1)    ==    'F'    ?    index    +    2    :    index    +    1;	[BUG]    [BUGGY]    index    =    charAt(value,    index    +    0)    ==    'F'    ?    index    +    2    :    index    +    1;    [FE]    junit.framework.ComparisonFailure:    expected:<KXF[S]>    but    was:<KXF[K]>    testDoubleMetaphone    [CONTEXT]    index++;    break;    case    'C':    index    =    handleC(value,    result,    index);    break;    case    'D':    index    =    handleD(value,    result,    index);    break;    case    'F':    result.append('F');    [BUGGY]    index    =    charAt(value,    index    +    0)    ==    'F'    ?    index    +    2    :    index    +    1;    break;    case    'G':    index    =    handleG(value,    result,    index,    slavoGermanic);    break;    case    'H':    index    =    handleH(value,    result,    index);    break;    case    'J':    index    =    handleJ(value,    result,    index,    slavoGermanic);    break;    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    doubleMetaphone    [RETURN_TYPE]    String        String    value    boolean    alternate    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    value    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    boolean    alternate    slavoGermanic    int    index    maxCodeLen    maxLength    DoubleMetaphoneResult    result        	codec_1259_DoubleMetaphone_1_1	124	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
355	[PATCH]    index    =    conditionM0(value,    index)    ?    index    +    2    :    index    +    1;	[BUG]    [BUGGY]    index    =    conditionM0(value,    index)    ?    index    +    2    :    index    +    -1;    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    -1    testIsDoubleMetaphoneEqualExtended3    [CONTEXT]    break;    case    'K':    result.append('K');    index    =    charAt(value,    index    +    1)    ==    'K'    ?    index    +    2    :    index    +    1;    break;    case    'L':    index    =    handleL(value,    result,    index);    break;    case    'M':    result.append('M');    [BUGGY]    index    =    conditionM0(value,    index)    ?    index    +    2    :    index    +    -1;    break;    case    'N':    result.append('N');    index    =    charAt(value,    index    +    1)    ==    'N'    ?    index    +    2    :    index    +    1;    break;    case    '\u00D1':        result.append('N');    index++;    break;    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    doubleMetaphone    [RETURN_TYPE]    String        String    value    boolean    alternate    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    value    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    boolean    alternate    slavoGermanic    int    index    maxCodeLen    maxLength    DoubleMetaphoneResult    result        	codec_1318_DoubleMetaphone_1_1	144	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
356	[PATCH]    String    substring    =    string.substring(    index,    index    +    test.length());	[BUG]    [BUGGY]    String    substring    =    string.substring(    index,    index    *    test.length());    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    18    testTranslateOfSCHAndCH    [CONTEXT]    private    boolean    regionMatch(StringBuffer    string,    int    index,    String    test)    {    boolean    matches    =    false;    if(    index    >=    0    &&    (index    +    test.length()    -    1)    <    string.length()    )    {    [BUGGY]    String    substring    =    string.substring(    index,    index    *    test.length());    matches    =    substring.equals(    test    );    }    return    matches;    }    [CLASS]        Metaphone    [METHOD]    regionMatch    [RETURN_TYPE]    boolean        StringBuffer    string    int    index    String    test    [VARIABLES]    StringBuffer    string    String    FRONTV    VARSON    VOWELS    substring    test    txt    boolean    matches    int    index    maxCodeLen    n    wdsz        	codec_3817_Metaphone_1_1	341	1	src/java/org/apache/commons/codec/language/Metaphone.java
357	[PATCH]    contains(value,    index    -    1,    5,       "UCCEE   ",       "UCCES   "))    {	[BUG]    [BUGGY]    contains(value,    index    -    1,    -5,       "UCCEE   ",       "UCCES   "))    {    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    -5    testIsDoubleMetaphoneEqualExtended3    [CONTEXT]    private    int    handleCC(String    value,    DoubleMetaphoneResult    result,    int    index)    {    if    (contains(value,    index    +    2,    1,       "I   ",       "E   ",       "H   ")    &&    !contains(value,    index    +    2,    2,       "HU   "))    {        if    ((index    ==    1    &&    charAt(value,    index    -    1)    ==    'A')    ||    [BUGGY]    contains(value,    index    -    1,    -5,       "UCCEE   ",       "UCCES   "))    {        result.append(   "KS   ");    }    else    {        result.append('X');    }    index    +=    3;    }    else    {    result.append('K');    index    +=    2;    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    handleCC    [RETURN_TYPE]    int        String    value    DoubleMetaphoneResult    result    int    index    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    value    value1    value2    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    boolean    int    index    maxCodeLen    maxLength    DoubleMetaphoneResult    result        	codec_1601_DoubleMetaphone_1_1	342	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
358	[PATCH]    byte    val1    =    ((b1    &    SIGN)    ==    0)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);	[BUG]    [BUGGY]    byte    val1    =    ((b1    &    SIGN)    ==    -1)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -64    testSingletonsChunked    [CONTEXT]    }        dataIndex    =    i    *    3;    if    (fewerThan24bits    ==    EIGHTBIT)    {    b1    =    binaryData[dataIndex];    k    =    (byte)    (b1    &    0x03);            [BUGGY]    byte    val1    =    ((b1    &    SIGN)    ==    -1)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);    encodedData[encodedIndex]    =    lookUpBase64Alphabet[val1];    encodedData[encodedIndex    +    1]    =    lookUpBase64Alphabet[k    <<    4];    encodedData[encodedIndex    +    2]    =    PAD;    encodedData[encodedIndex    +    3]    =    PAD;    }    else    if    (fewerThan24bits    ==    SIXTEENBIT)    {    b1    =    binaryData[dataIndex];    b2    =    binaryData[dataIndex    +    1];    l    =    (byte)    (b2    &    0x0f);    k    =    (byte)    (b1    &    0x03);    [CLASS]        Base64    [METHOD]    encodeBase64    [RETURN_TYPE]    byte[]        byte[]    binaryData    boolean    isChunked    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    binaryData    encodedData    lookUpBase64Alphabet    pArray    boolean    isChunked    byte    PAD    b1    b2    b3    k    l    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    length    nextSeparatorIndex    long    binaryDataLength    encodedDataLengthLong    fewerThan24bits    lengthDataBits    tripletCount        	codec_406_Base64_1_1	353	1	src/java/org/apache/commons/codec/binary/Base64.java
359	[PATCH]    decodedData[encodedIndex    +    1]    =    (byte)    (((b2    &    0xf)    <<    4)    |    ((b3    >>    2)    &    0xf));	[BUG]    [BUGGY]    decodedData[encodedIndex    +    1]    =    (byte)    (((b2    &    15)    >>    4)    |    ((b3    >>    2)    &    0xf));    [FE]    junit.framework.ComparisonFailure:    expected:<...3,    4,    5,    6,    7,    8,    9    [}]>    but    was:<...3,    4,    5,    6,    7,    8,    9    [    testKnownDecodings    [CONTEXT]    decodedData[encodedIndex    +    1]    =    (byte)    (((b2    &    0xf)    <<    4)    |    ((b3    >>    2)    &    0xf));    decodedData[encodedIndex    +    2]    =    (byte)    (b3    <<    6    |    b4);    }    else    if    (marker0    ==    PAD)    {        decodedData[encodedIndex]    =    (byte)    (b1    <<    2    |    b2    >>    4);    }    else    if    (marker1    ==    PAD)    {        b3    =    base64Alphabet[marker0];    decodedData[encodedIndex]    =    (byte)    (b1    <<    2    |    b2    >>    4);    [BUGGY]    decodedData[encodedIndex    +    1]    =    (byte)    (((b2    &    15)    >>    4)    |    ((b3    >>    2)    &    0xf));    }    encodedIndex    +=    3;    }    return    decodedData;    }    [CLASS]        Base64    [METHOD]    decodeBase64    [RETURN_TYPE]    byte[]        byte[]    base64Data    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    base64Data    binaryData    decodedData    encodedData    lookUpBase64Alphabet    pArray    boolean    byte    PAD    b1    b2    b3    b4    k    l    marker0    marker1    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    lastData    length    nextSeparatorIndex    numberQuadruple        	codec_736_Base64_1_1	445	1	src/java/org/apache/commons/codec/binary/Base64.java
360	[PATCH]    if    ((raw[ii]    &    BITS[bits])    ==    0)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.ComparisonFailure:    expected:<[00000000]>    but    was:<[11111111]>    testToAsciiChars    [CONTEXT]    return    EMPTY_CHAR_ARRAY;    }        char[]    l_ascii    =    new    char[raw.length    <<    3];                    for    (int    ii    =    0,    jj    =    l_ascii.length    -    1;    ii    <    raw.length;    ii++,    jj    -=    8)    {    for    (int    bits    =    0;    bits    <    BITS.length;    ++bits)    {    [BUGGY]    if    (false)    {    l_ascii[jj    -    bits]    =    '0';    }    else    {    l_ascii[jj    -    bits]    =    '1';    }    }    }    return    l_ascii;    }    [CLASS]        BinaryCodec    [METHOD]    toAsciiChars    [RETURN_TYPE]    char[]        byte[]    raw    [VARIABLES]    byte[]    EMPTY_BYTE_ARRAY    ascii    l_ascii    l_raw    raw    int[]    BITS    boolean    int    BIT_0    BIT_1    BIT_2    BIT_3    BIT_4    BIT_5    BIT_6    BIT_7    bits    ii    jj    char[]    EMPTY_CHAR_ARRAY    ascii    l_ascii        	codec_1043_BinaryCodec_1_1	264	1	src/java/org/apache/commons/codec/binary/BinaryCodec.java
361	[PATCH]    for    (int    i    =    0;    i    <    data.length;    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    -1;    i    <    data.length;    i++)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testEncodeDecodeBlanks    [CONTEXT]    protected    byte[]    doEncoding(byte[]    bytes)    {    if    (bytes    ==    null)    {    return    null;    }    byte[]    data    =    QuotedPrintableCodec.encodeQuotedPrintable(PRINTABLE_CHARS,    bytes);    if    (this.encodeBlanks)    {    [BUGGY]    for    (int    i    =    -1;    i    <    data.length;    i++)    {    if    (data[i]    ==    BLANK)    {    data[i]    =    UNDERSCORE;    }    }    }    return    data;    }    [CLASS]        QCodec    [METHOD]    doEncoding    [RETURN_TYPE]    byte[]        byte[]    bytes    [VARIABLES]    BitSet    PRINTABLE_CHARS    byte[]    bytes    data    boolean    encodeBlanks    String    charset    byte    BLANK    UNDERSCORE    int    i        	codec_4151_QCodec_1_1	139	1	src/java/org/apache/commons/codec/net/QCodec.java
362	[PATCH]    int    incount    =    1,    count    =    1;	[BUG]    [BUGGY]    int    incount    =    1,    count    =    0;    [FE]    junit.framework.ComparisonFailure:    expected:<[H452]>    but    was:<[4520]>    testBadCharacters    [CONTEXT]    public    String    soundex(String    str)    {    if    (str    ==    null)    {    return    null;    }    str    =    SoundexUtils.clean(str);    if    (str.length()    ==    0)    {    return    str;    }    char    out[]    =    {'0',    '0',    '0',    '0'};    char    last,    mapped;    [BUGGY]    int    incount    =    1,    count    =    0;    out[0]    =    str.charAt(0);        last    =    getMappingCode(str,    0);    while    ((incount    <    str.length())    &&    (count    <    out.length))    {    mapped    =    getMappingCode(str,    incount++);    if    (mapped    !=    0)    {    if    ((mapped    !=    '0')    &&    (mapped    !=    last))    {    out[count++]    =    mapped;    }    last    =    mapped;    [CLASS]        Soundex    [METHOD]    soundex    [RETURN_TYPE]    String        String    str    [VARIABLES]    char    last    mapped    Soundex    US_ENGLISH    String    US_ENGLISH_MAPPING_STRING    pString    s1    s2    str    boolean    int    count    incount    index    maxLength    char[]    US_ENGLISH_MAPPING    mapping    out    soundexMapping        	codec_3947_Soundex_1_1	259	1	src/java/org/apache/commons/codec/language/Soundex.java
363	[PATCH]    contains(value,    index,    2,       "WH   ")))    {	[BUG]    [BUGGY]    contains(value,    index,    0,       "WH   ")))    {    [FE]    junit.framework.AssertionFailedError:    Expected    match    [397]    whard    and    ward    testIsDoubleMetaphoneEqualWithMATCHES    [CONTEXT]    if    (contains(value,    index,    2,       "WR   "))    {        result.append('R');    index    +=    2;    }    else    {    if    (index    ==    0    &&    (isVowel(charAt(value,    index    +    1))    ||    [BUGGY]    contains(value,    index,    0,       "WH   ")))    {    if    (isVowel(charAt(value,    index    +    1)))    {        result.append('A',    'F');    }    else    {        result.append('A');    }    index++;    }    else    if    ((index    ==    value.length()    -    1    &&    isVowel(charAt(value,    index    -    1)))    ||    contains(value,    index    -    1,    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    handleW    [RETURN_TYPE]    int        String    value    DoubleMetaphoneResult    result    int    index    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    value    value1    value2    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    boolean    int    index    maxCodeLen    maxLength    DoubleMetaphoneResult    result        	codec_2721_DoubleMetaphone_1_1	736	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
364	[PATCH]    encodedData[encodedIndex    +    1]    =    lookUpBase64Alphabet[k    <<    4];	[BUG]    [BUGGY]    encodedData[encodedIndex    +    1]    =    lookUpBase64Alphabet[k    <<    -4];    [FE]    java.lang.ArrayIndexOutOfBoundsException:    268435456    testSingletonsChunked    [CONTEXT]        dataIndex    =    i    *    3;    if    (fewerThan24bits    ==    EIGHTBIT)    {    b1    =    binaryData[dataIndex];    k    =    (byte)    (b1    &    0x03);            byte    val1    =    ((b1    &    SIGN)    ==    0)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);    encodedData[encodedIndex]    =    lookUpBase64Alphabet[val1];    [BUGGY]    encodedData[encodedIndex    +    1]    =    lookUpBase64Alphabet[k    <<    -4];    encodedData[encodedIndex    +    2]    =    PAD;    encodedData[encodedIndex    +    3]    =    PAD;    }    else    if    (fewerThan24bits    ==    SIXTEENBIT)    {    b1    =    binaryData[dataIndex];    b2    =    binaryData[dataIndex    +    1];    l    =    (byte)    (b2    &    0x0f);    k    =    (byte)    (b1    &    0x03);    byte    val1    =    ((b1    &    SIGN)    ==    0)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);    [CLASS]        Base64    [METHOD]    encodeBase64    [RETURN_TYPE]    byte[]        byte[]    binaryData    boolean    isChunked    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    binaryData    encodedData    lookUpBase64Alphabet    pArray    boolean    isChunked    byte    PAD    b1    b2    b3    k    l    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    length    nextSeparatorIndex    long    binaryDataLength    encodedDataLengthLong    fewerThan24bits    lengthDataBits    tripletCount        	codec_430_Base64_1_1	355	1	src/java/org/apache/commons/codec/binary/Base64.java
365	[PATCH]    isVowel(local,n+1))    {	[BUG]    [BUGGY]    isVowel(local,n    *    1))    {    [FE]    junit.framework.ComparisonFailure:    expected:<[W]X>    but    was:<[]X>    testTCH    [CONTEXT]    if    (regionMatch(local,n,   "TH   "))    {    code.append('0');    }    else    {    code.append('T');    }    break    ;    case    'V'    :    code.append('F');    break    ;    case    'W'    :    case    'Y'    :    if    (!isLastChar(wdsz,n)    &&    [BUGGY]    isVowel(local,n    *    1))    {    code.append(symb);    }    break    ;    case    'X'    :    code.append('K');    code.append('S');    break    ;    case    'Z'    :    code.append('S');    break    ;    }    n++    ;    [CLASS]        Metaphone    [METHOD]    metaphone    [RETURN_TYPE]    String        String    txt    [VARIABLES]    char    symb    StringBuffer    code    local    String    FRONTV    VARSON    VOWELS    txt    boolean    hard    int    maxCodeLen    n    wdsz    char[]    inwd        	codec_3720_Metaphone_1_1	296	1	src/java/org/apache/commons/codec/language/Metaphone.java
366	[PATCH]    buffer.write((char)((u    <<    4)    +    l));	[BUG]    [BUGGY]    buffer.write((char)((u    <<    0)    +    l));    [FE]    junit.framework.ComparisonFailure:    expected:<[Всем_привет]>    but    was:<[    testUTF8RoundTrip    [CONTEXT]    int    b    =    bytes[i];    if    (b    ==    '+')    {    buffer.write('    ');    }    else    if    (b    ==    '%')    {    try    {    int    u    =    Character.digit((char)bytes[++i],    16);    int    l    =    Character.digit((char)bytes[++i],    16);    if    (u    ==    -1    ||    l    ==    -1)    {    throw    new    DecoderException(   "Invalid    URL    encoding   ");    }    [BUGGY]    buffer.write((char)((u    <<    0)    +    l));    }    catch(ArrayIndexOutOfBoundsException    e)    {    throw    new    DecoderException(   "Invalid    URL    encoding   ");    }    }    else    {    buffer.write(b);    }    }    return    buffer.toByteArray();    }    [CLASS]        URLCodec    [METHOD]    decodeUrl    [RETURN_TYPE]    byte[]        byte[]    bytes    [VARIABLES]    byte[]    bytes    boolean    byte    ESCAPE_CHAR    BitSet    WWW_FORM_URL    urlsafe    String    charset    ByteArrayOutputStream    buffer    ArrayIndexOutOfBoundsException    e    int    b    i    l    u        	codec_4393_URLCodec_1_1	173	1	src/java/org/apache/commons/codec/net/URLCodec.java
367	[PATCH]    for    (int    i    =    0;    i    <    bytes.length;    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    -1;    i    <    bytes.length;    i++)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testUTF8RoundTrip    [CONTEXT]    public    static    final    byte[]    encodeQuotedPrintable(BitSet    printable,    byte[]    bytes)    {    if    (bytes    ==    null)    {    return    null;    }    if    (printable    ==    null)    {    printable    =    PRINTABLE_CHARS;    }    ByteArrayOutputStream    buffer    =    new    ByteArrayOutputStream();    [BUGGY]    for    (int    i    =    -1;    i    <    bytes.length;    i++)    {    int    b    =    bytes[i];    if    (b    <    0)    {    b    =    256    +    b;    }    if    (printable.get(b))    {    buffer.write(b);    }    else    {    encodeQuotedPrintable(b,    buffer);    }    }    [CLASS]        QuotedPrintableCodec    [METHOD]    encodeQuotedPrintable    [RETURN_TYPE]    byte[]        BitSet    printable    byte[]    bytes    [VARIABLES]    byte[]    bytes    boolean    byte    ESCAPE_CHAR    SPACE    TAB    BitSet    PRINTABLE_CHARS    printable    String    charset    ByteArrayOutputStream    buffer    int    b    i        	codec_4233_QuotedPrintableCodec_1_1	146	1	src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java
368	[PATCH]    if    ((txt    ==    null)    ||    (txt.length()    ==    0))    {	[BUG]    [BUGGY]    if    ((txt    ==    null)    ||    (txt.length()    ==    1))    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    0    testEncodeEmpty    [CONTEXT]    public    String    metaphone(String    txt)    {    boolean    hard    =    false    ;    [BUGGY]    if    ((txt    ==    null)    ||    (txt.length()    ==    1))    {    return       "   "    ;    }        if    (txt.length()    ==    1)    {    return    txt.toUpperCase(java.util.Locale.ENGLISH)    ;    }    char[]    inwd    =    txt.toUpperCase(java.util.Locale.ENGLISH).toCharArray()    ;    StringBuffer    local    =    new    StringBuffer(40);        [CLASS]        Metaphone    [METHOD]    metaphone    [RETURN_TYPE]    String        String    txt    [VARIABLES]    char    symb    StringBuffer    code    local    String    FRONTV    VARSON    VOWELS    txt    boolean    hard    int    maxCodeLen    n    wdsz    char[]    inwd        	codec_3363_Metaphone_1_1	83	1	src/java/org/apache/commons/codec/language/Metaphone.java
369	[PATCH]    encodedData[encodedIndex    +    1]    =    lookUpBase64Alphabet[val2    |    (k    <<    4)];	[BUG]    [BUGGY]    encodedData[encodedIndex    +    1]    =    lookUpBase64Alphabet[val2    |    (k    <<    -4)];    [FE]    java.lang.ArrayIndexOutOfBoundsException:    268435458    testDiscardWhitespace    [CONTEXT]    k    =    (byte)    (b1    &    0x03);    byte    val1    =    ((b1    &    SIGN)    ==    0)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);    byte    val2    =    ((b2    &    SIGN)    ==    0)    ?    (byte)    (b2    >>    4)    :    (byte)    ((b2)    >>    4    ^    0xf0);    byte    val3    =    ((b3    &    SIGN)    ==    0)    ?    (byte)    (b3    >>    6)    :    (byte)    ((b3)    >>    6    ^    0xfc);    encodedData[encodedIndex]    =    lookUpBase64Alphabet[val1];                [BUGGY]    encodedData[encodedIndex    +    1]    =    lookUpBase64Alphabet[val2    |    (k    <<    -4)];    encodedData[encodedIndex    +    2]    =    lookUpBase64Alphabet[(l    <<    2)    |    val3];    encodedData[encodedIndex    +    3]    =    lookUpBase64Alphabet[b3    &    0x3f];    encodedIndex    +=    4;        if    (isChunked)    {        if    (encodedIndex    ==    nextSeparatorIndex)    {    System.arraycopy(CHUNK_SEPARATOR,    0,    encodedData,    encodedIndex,    CHUNK_SEPARATOR.length);    [CLASS]        Base64    [METHOD]    encodeBase64    [RETURN_TYPE]    byte[]        byte[]    binaryData    boolean    isChunked    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    binaryData    encodedData    lookUpBase64Alphabet    pArray    boolean    isChunked    byte    PAD    b1    b2    b3    k    l    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    length    nextSeparatorIndex    long    binaryDataLength    encodedDataLengthLong    fewerThan24bits    lengthDataBits    tripletCount        	codec_325_Base64_1_1	327	1	src/java/org/apache/commons/codec/binary/Base64.java
370	[PATCH]    (FRONTV.indexOf(local.charAt(n    +    2))    >=    0))    {    //    DGE    DGI    DGY    ->    J	[BUG]    [BUGGY]    (FRONTV.indexOf(local.charAt(n    +    0))    >=    0))    {    //    DGE    DGI    DGY    ->    J    [FE]    junit.framework.ComparisonFailure:    expected:<T[]J>    but    was:<T[T]J>    testTranslateToJOfDGEOrDGIOrDGY    [CONTEXT]    }    else    {    code.append('X');    }    }    else    {    code.append('K');    }    break    ;    case    'D'    :    if    (!isLastChar(wdsz,    n    +    1)    &&    isNextChar(local,    n,    'G')    &&    [BUGGY]    (FRONTV.indexOf(local.charAt(n    +    0))    >=    0))    {    code.append('J');    n    +=    2    ;    }    else    {    code.append('T');    }    break    ;    case    'G'    :    if    (isLastChar(wdsz,    n    +    1)    &&    isNextChar(local,    n,    'H'))    {    break;    }    [CLASS]        Metaphone    [METHOD]    metaphone    [RETURN_TYPE]    String        String    txt    [VARIABLES]    char    symb    StringBuffer    code    local    String    FRONTV    VARSON    VOWELS    txt    boolean    hard    int    maxCodeLen    n    wdsz    char[]    inwd        	codec_3559_Metaphone_1_1	192	1	src/java/org/apache/commons/codec/language/Metaphone.java
371	[PATCH]    index    =    charAt(value,    index    +    1)    ==    'B'    ?    index    +    2    :    index    +    1;	[BUG]    [BUGGY]    index    =    charAt(value,    index    +    0)    ==    'B'    ?    index    +    2    :    index    +    1;    [FE]    junit.framework.AssertionFailedError:    Expected    match    [42]    bbrose    and    browse    testIsDoubleMetaphoneEqualWithMATCHES    [CONTEXT]    case    'A':    case    'E':    case    'I':    case    'O':    case    'U':    case    'Y':    index    =    handleAEIOUY(value,    result,    index);    break;    case    'B':    result.append('P');    [BUGGY]    index    =    charAt(value,    index    +    0)    ==    'B'    ?    index    +    2    :    index    +    1;    break;    case    '\u00C7':        result.append('S');    index++;    break;    case    'C':    index    =    handleC(value,    result,    index);    break;    case    'D':    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    doubleMetaphone    [RETURN_TYPE]    String        String    value    boolean    alternate    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    value    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    boolean    alternate    slavoGermanic    int    index    maxCodeLen    maxLength    DoubleMetaphoneResult    result        	codec_1232_DoubleMetaphone_1_1	109	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
372	[PATCH]    }    else    if    (charAt(value,    index    +    1)    ==    'N')    {	[BUG]    [BUGGY]    }    else    if    (charAt(value,    index    /    1)    ==    'N')    {    [FE]    junit.framework.AssertionFailedError:    Expected    match    [320]    reconise    and    recognize    testIsDoubleMetaphoneEqualWithMATCHES    [CONTEXT]    boolean    slavoGermanic)    {    if    (charAt(value,    index    +    1)    ==    'H')    {    index    =    handleGH(value,    result,    index);    [BUGGY]    }    else    if    (charAt(value,    index    /    1)    ==    'N')    {    if    (index    ==    1    &&    isVowel(charAt(value,    0))    &&    !slavoGermanic)    {    result.append(   "KN   ",       "N   ");    }    else    if    (!contains(value,    index    +    2,    2,       "EY   ")    &&    charAt(value,    index    +    1)    !=    'Y'    &&    !slavoGermanic)    {    result.append(   "N   ",       "KN   ");    }    else    {    result.append(   "KN   ");    }    index    =    index    +    2;    }    else    if    (contains(value,    index    +    1,    2,       "LI   ")    &&    !slavoGermanic)    {    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    handleG    [RETURN_TYPE]    int        String    value    DoubleMetaphoneResult    result    int    index    boolean    slavoGermanic    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    value    value1    value2    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    boolean    slavoGermanic    int    index    maxCodeLen    maxLength    DoubleMetaphoneResult    result        	codec_1718_DoubleMetaphone_1_1	424	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
373	[PATCH]    value.indexOf(   "CZ   ")    >    -1    ||    value.indexOf(   "WITZ   ")    >    -1;	[BUG]    [BUGGY]    value.indexOf(   "CZ   ")    >=    -1    ||    value.indexOf(   "WITZ   ")    >    -1;    [FE]    junit.framework.AssertionFailedError:    Expected    match    [115]    disition    and    decision    testIsDoubleMetaphoneEqualWithMATCHES    [CONTEXT]    private    boolean    isSlavoGermanic(String    value)    {    return    value.indexOf('W')    >    -1    ||    value.indexOf('K')    >    -1    ||    [BUGGY]    value.indexOf(   "CZ   ")    >=    -1    ||    value.indexOf(   "WITZ   ")    >    -1;    }    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    isSlavoGermanic    [RETURN_TYPE]    boolean        String    value    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    value    value1    value2    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    boolean    int    index    maxCodeLen    maxLength        	codec_3231_DoubleMetaphone_1_1	889	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
374	[PATCH]    for    (int    i    =    0;    i    <    numberQuadruple;    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    1;    i    <    numberQuadruple;    i++)    {    [FE]    junit.framework.ComparisonFailure:    expected:<[The    quick    brown    fox    jumped    over    the    lazy    dogs.]>    but    was:<[    quick    brown    fox    jumped    over    the    lazy    dogs.   ]>    testKnownDecodings    [CONTEXT]    int    lastData    =    base64Data.length;        while    (base64Data[lastData    -    1]    ==    PAD)    {    if    (--lastData    ==    0)    {    return    new    byte[0];    }    }    decodedData    =    new    byte[lastData    -    numberQuadruple];    }        [BUGGY]    for    (int    i    =    1;    i    <    numberQuadruple;    i++)    {    dataIndex    =    i    *    4;    marker0    =    base64Data[dataIndex    +    2];    marker1    =    base64Data[dataIndex    +    3];    b1    =    base64Alphabet[base64Data[dataIndex]];    b2    =    base64Alphabet[base64Data[dataIndex    +    1]];    if    (marker0    !=    PAD    &&    marker1    !=    PAD)    {        b3    =    base64Alphabet[marker0];    [CLASS]        Base64    [METHOD]    decodeBase64    [RETURN_TYPE]    byte[]        byte[]    base64Data    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    base64Data    binaryData    decodedData    encodedData    lookUpBase64Alphabet    pArray    boolean    byte    PAD    b1    b2    b3    b4    k    l    marker0    marker1    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    lastData    length    nextSeparatorIndex    numberQuadruple        	codec_600_Base64_1_1	421	1	src/java/org/apache/commons/codec/binary/Base64.java
375	[PATCH]    int    l    =    Character.digit((char)bytes[++i],    16);	[BUG]    [BUGGY]    int    l    =    Character.digit((char)bytes[++i],    -16);    [FE]    org.apache.commons.codec.DecoderException:    Invalid    URL    encoding    testUTF8RoundTrip    [CONTEXT]    return    null;    }    ByteArrayOutputStream    buffer    =    new    ByteArrayOutputStream();    for    (int    i    =    0;    i    <    bytes.length;    i++)    {    int    b    =    bytes[i];    if    (b    ==    '+')    {    buffer.write('    ');    }    else    if    (b    ==    '%')    {    try    {    int    u    =    Character.digit((char)bytes[++i],    16);    [BUGGY]    int    l    =    Character.digit((char)bytes[++i],    -16);    if    (u    ==    -1    ||    l    ==    -1)    {    throw    new    DecoderException(   "Invalid    URL    encoding   ");    }    buffer.write((char)((u    <<    4)    +    l));    }    catch(ArrayIndexOutOfBoundsException    e)    {    throw    new    DecoderException(   "Invalid    URL    encoding   ");    }    }    else    {    buffer.write(b);    }    [CLASS]        URLCodec    [METHOD]    decodeUrl    [RETURN_TYPE]    byte[]        byte[]    bytes    [VARIABLES]    byte[]    bytes    boolean    byte    ESCAPE_CHAR    BitSet    WWW_FORM_URL    urlsafe    String    charset    ByteArrayOutputStream    buffer    ArrayIndexOutOfBoundsException    e    int    b    i    l    u        	codec_4378_URLCodec_1_1	169	1	src/java/org/apache/commons/codec/net/URLCodec.java
376	[PATCH]    for    (int    bits    =    0;    bits    <    BITS.length;    ++bits)    {	[BUG]    [BUGGY]    for    (int    bits    =    -1;    bits    <    BITS.length;    ++bits)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testToAsciiChars    [CONTEXT]    if    (raw    ==    null    ||    raw.length    ==    0)    {    return    EMPTY_CHAR_ARRAY;    }        char[]    l_ascii    =    new    char[raw.length    <<    3];                    for    (int    ii    =    0,    jj    =    l_ascii.length    -    1;    ii    <    raw.length;    ii++,    jj    -=    8)    {    [BUGGY]    for    (int    bits    =    -1;    bits    <    BITS.length;    ++bits)    {    if    ((raw[ii]    &    BITS[bits])    ==    0)    {    l_ascii[jj    -    bits]    =    '0';    }    else    {    l_ascii[jj    -    bits]    =    '1';    }    }    }    return    l_ascii;    }    [CLASS]        BinaryCodec    [METHOD]    toAsciiChars    [RETURN_TYPE]    char[]        byte[]    raw    [VARIABLES]    byte[]    EMPTY_BYTE_ARRAY    ascii    l_ascii    l_raw    raw    int[]    BITS    boolean    int    BIT_0    BIT_1    BIT_2    BIT_3    BIT_4    BIT_5    BIT_6    BIT_7    bits    ii    jj    char[]    EMPTY_CHAR_ARRAY    ascii    l_ascii        	codec_1033_BinaryCodec_1_1	263	1	src/java/org/apache/commons/codec/binary/BinaryCodec.java
377	[PATCH]    }    else    if    (contains(value,    index,    2,       "CI   ",       "CE   ",       "CY   "))    {	[BUG]    [BUGGY]    }    else    if    (true)    {    [FE]    junit.framework.AssertionFailedError:    Expected    match    between    cookie    and    quick    (use    alternate:    false)    testIsDoubleMetaphoneEqualBasic    [CONTEXT]        result.append('X');    index    +=    3;    }    else    if    (contains(value,    index,    2,       "CC   ")    &&    !(index    ==    1    &&    charAt(value,    0)    ==    'M'))    {        return    handleCC(value,    result,    index);    }    else    if    (contains(value,    index,    2,       "CK   ",       "CG   ",       "CQ   "))    {    result.append('K');    index    +=    2;    [BUGGY]    }    else    if    (true)    {        if    (contains(value,    index,    3,       "CIO   ",       "CIE   ",       "CIA   "))    {    result.append('S',    'X');    }    else    {    result.append('S');    }    index    +=    2;    }    else    {    result.append('K');    if    (contains(value,    index    +    1,    2,       "    C   ",       "    Q   ",       "    G   "))    {    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    handleC    [RETURN_TYPE]    int        String    value    DoubleMetaphoneResult    result    int    index    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    value    value1    value2    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    boolean    int    index    maxCodeLen    maxLength    DoubleMetaphoneResult    result        	codec_1508_DoubleMetaphone_1_1	308	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
378	[PATCH]    byte    val1    =    ((b1    &    SIGN)    ==    0)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);	[BUG]    [BUGGY]    byte    val1    =    ((b1    &    SIGN)    ==    0)    ?    (byte)    (b1    <<    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);    [FE]    junit.framework.ComparisonFailure:    expected:<[A]Q==    testSingletonsChunked    [CONTEXT]    }        dataIndex    =    i    *    3;    if    (fewerThan24bits    ==    EIGHTBIT)    {    b1    =    binaryData[dataIndex];    k    =    (byte)    (b1    &    0x03);            [BUGGY]    byte    val1    =    ((b1    &    SIGN)    ==    0)    ?    (byte)    (b1    <<    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);    encodedData[encodedIndex]    =    lookUpBase64Alphabet[val1];    encodedData[encodedIndex    +    1]    =    lookUpBase64Alphabet[k    <<    4];    encodedData[encodedIndex    +    2]    =    PAD;    encodedData[encodedIndex    +    3]    =    PAD;    }    else    if    (fewerThan24bits    ==    SIXTEENBIT)    {    b1    =    binaryData[dataIndex];    b2    =    binaryData[dataIndex    +    1];    l    =    (byte)    (b2    &    0x0f);    k    =    (byte)    (b1    &    0x03);    [CLASS]        Base64    [METHOD]    encodeBase64    [RETURN_TYPE]    byte[]        byte[]    binaryData    boolean    isChunked    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    binaryData    encodedData    lookUpBase64Alphabet    pArray    boolean    isChunked    byte    PAD    b1    b2    b3    k    l    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    length    nextSeparatorIndex    long    binaryDataLength    encodedDataLengthLong    fewerThan24bits    lengthDataBits    tripletCount        	codec_412_Base64_1_1	353	1	src/java/org/apache/commons/codec/binary/Base64.java
379	[PATCH]    byte[]    out    =    new    byte[len    >>    1];	[BUG]    [BUGGY]    byte[]    out    =    new    byte[len    >>    0];    [FE]    junit.framework.AssertionFailedError    testEncodeDecodeRandom    [CONTEXT]    public    static    byte[]    decodeHex(char[]    data)    throws    DecoderException    {    int    len    =    data.length;    if    ((len    &    0x01)    !=    0)    {    throw    new    DecoderException(   "Odd    number    of    characters.   ");    }        [BUGGY]    byte[]    out    =    new    byte[len    >>    0];        for    (int    i    =    0,    j    =    0;    j    <    len;    i++)    {    int    f    =    toDigit(data[j],    j)    <<    4;    j++;    f    =    f    |    toDigit(data[j],    j);    j++;    out[i]    =    (byte)    (f    &    0xFF);    }        [CLASS]        Hex    [METHOD]    decodeHex    [RETURN_TYPE]    byte[]        char[]    data    [VARIABLES]    byte[]    out    boolean    int    f    i    j    len    char[]    DIGITS    data        	codec_1063_Hex_1_1	63	1	src/java/org/apache/commons/codec/binary/Hex.java
380	[PATCH]    int    digit    =    Character.digit(ch,    16);	[BUG]    [BUGGY]    int    digit    =    Character.digit(ch,    0);    [FE]    org.apache.commons.codec.DecoderException:    Illegal    hexadecimal    charcter    4    at    index    0    testEncodeDecodeRandom    [CONTEXT]    protected    static    int    toDigit(char    ch,    int    index)    throws    DecoderException    {    [BUGGY]    int    digit    =    Character.digit(ch,    0);    if    (digit    ==    -1)    {    throw    new    DecoderException(   "Illegal    hexadecimal    charcter       "    +    ch    +       "    at    index       "    +    index);    }    return    digit;    }    [CLASS]        Hex    [METHOD]    toDigit    [RETURN_TYPE]    int        char    ch    int    index    [VARIABLES]    char    ch    boolean    int    digit    index    char[]    DIGITS    data        	codec_1088_Hex_1_1	86	1	src/java/org/apache/commons/codec/binary/Hex.java
381	[PATCH]    out[j++]    =    DIGITS[    0x0F    &    data[i]    ];	[BUG]    [BUGGY]    out[j++]    =    DIGITS[    15    |    data[i]    ];    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -65    testEncodeDecodeRandom    [CONTEXT]    public    static    char[]    encodeHex(byte[]    data)    {    int    l    =    data.length;    char[]    out    =    new    char[l    <<    1];        for    (int    i    =    0,    j    =    0;    i    <    l;    i++)    {    out[j++]    =    DIGITS[(0xF0    &    data[i])    >>>    4    ];    [BUGGY]    out[j++]    =    DIGITS[    15    |    data[i]    ];    }    return    out;    }    [CLASS]        Hex    [METHOD]    encodeHex    [RETURN_TYPE]    char[]        byte[]    data    [VARIABLES]    byte[]    data    boolean    int    i    j    l    char[]    DIGITS    data    out        	codec_1118_Hex_1_1	111	1	src/java/org/apache/commons/codec/binary/Hex.java
382	[PATCH]    for    (int    i    =    0;    i    <    lengthToMatch;    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    0;    i    <=    lengthToMatch;    i++)    {    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    0    testDifference    [CONTEXT]    static    int    differenceEncoded(String    es1,    String    es2)    {    if    (es1    ==    null    ||    es2    ==    null)    {    return    0;    }    int    lengthToMatch    =    Math.min(es1.length(),    es2.length());    int    diff    =    0;    [BUGGY]    for    (int    i    =    0;    i    <=    lengthToMatch;    i++)    {    if    (es1.charAt(i)    ==    es2.charAt(i))    {    diff++;    }    }    return    diff;    }    [CLASS]        SoundexUtils    [METHOD]    differenceEncoded    [RETURN_TYPE]    int        String    es1    String    es2    [VARIABLES]    boolean    String    es1    es2    int    diff    i    lengthToMatch        	codec_4021_SoundexUtils_1_1	115	1	src/java/org/apache/commons/codec/language/SoundexUtils.java
383	[PATCH]    index    =    charAt(value,    index    +    1)    ==    'V'    ?    index    +    2    :    index    +    1;	[BUG]    [BUGGY]    index    =    charAt(value,    index    +    1)    ==    'V'    ?    index    +    2    :    index    *    1;    [FE]    junit.framework.AssertionFailedError:    Expected    match    between    Steven    and    Stefan    (use    alternate:    false)    testIsDoubleMetaphoneEqualBasic    [CONTEXT]    index    =    handleR(value,    result,    index,    slavoGermanic);    break;    case    'S':    index    =    handleS(value,    result,    index,    slavoGermanic);    break;    case    'T':    index    =    handleT(value,    result,    index);    break;    case    'V':    result.append('F');    [BUGGY]    index    =    charAt(value,    index    +    1)    ==    'V'    ?    index    +    2    :    index    *    1;    break;    case    'W':    index    =    handleW(value,    result,    index);    break;    case    'X':    index    =    handleX(value,    result,    index);    break;    case    'Z':    index    =    handleZ(value,    result,    index,    slavoGermanic);    break;    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    doubleMetaphone    [RETURN_TYPE]    String        String    value    boolean    alternate    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    value    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    boolean    alternate    slavoGermanic    int    index    maxCodeLen    maxLength    DoubleMetaphoneResult    result        	codec_1395_DoubleMetaphone_1_1	173	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
384	[PATCH]    if    (charAt(value,    index    +    1)    ==    'H')    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    Expected    match    [288]    playwrite    and    playwright    testIsDoubleMetaphoneEqualWithMATCHES    [CONTEXT]    boolean    slavoGermanic)    {    [BUGGY]    if    (false)    {    index    =    handleGH(value,    result,    index);    }    else    if    (charAt(value,    index    +    1)    ==    'N')    {    if    (index    ==    1    &&    isVowel(charAt(value,    0))    &&    !slavoGermanic)    {    result.append(   "KN   ",       "N   ");    }    else    if    (!contains(value,    index    +    2,    2,       "EY   ")    &&    charAt(value,    index    +    1)    !=    'Y'    &&    !slavoGermanic)    {    result.append(   "N   ",       "KN   ");    }    else    {    result.append(   "KN   ");    }    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    handleG    [RETURN_TYPE]    int        String    value    DoubleMetaphoneResult    result    int    index    boolean    slavoGermanic    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    value    value1    value2    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    boolean    slavoGermanic    int    index    maxCodeLen    maxLength    DoubleMetaphoneResult    result        	codec_1711_DoubleMetaphone_1_1	422	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
385	[PATCH]    encodedData[encodedIndex    +    3]    =    PAD;	[BUG]    [BUGGY]    encodedData[encodedIndex    -    3]    =    PAD;    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -3    testSingletonsChunked    [CONTEXT]    if    (fewerThan24bits    ==    EIGHTBIT)    {    b1    =    binaryData[dataIndex];    k    =    (byte)    (b1    &    0x03);            byte    val1    =    ((b1    &    SIGN)    ==    0)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);    encodedData[encodedIndex]    =    lookUpBase64Alphabet[val1];    encodedData[encodedIndex    +    1]    =    lookUpBase64Alphabet[k    <<    4];    encodedData[encodedIndex    +    2]    =    PAD;    [BUGGY]    encodedData[encodedIndex    -    3]    =    PAD;    }    else    if    (fewerThan24bits    ==    SIXTEENBIT)    {    b1    =    binaryData[dataIndex];    b2    =    binaryData[dataIndex    +    1];    l    =    (byte)    (b2    &    0x0f);    k    =    (byte)    (b1    &    0x03);    byte    val1    =    ((b1    &    SIGN)    ==    0)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);    byte    val2    =    ((b2    &    SIGN)    ==    0)    ?    (byte)    (b2    >>    4)    :    (byte)    ((b2)    >>    4    ^    0xf0);        [CLASS]        Base64    [METHOD]    encodeBase64    [RETURN_TYPE]    byte[]        byte[]    binaryData    boolean    isChunked    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    binaryData    encodedData    lookUpBase64Alphabet    pArray    boolean    isChunked    byte    PAD    b1    b2    b3    k    l    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    length    nextSeparatorIndex    long    binaryDataLength    encodedDataLengthLong    fewerThan24bits    lengthDataBits    tripletCount        	codec_445_Base64_1_1	357	1	src/java/org/apache/commons/codec/binary/Base64.java
386	[PATCH]    String    target    =    value.substring(start,    start    +    length);	[BUG]    [BUGGY]    String    target    =    value.substring(start,    start    -    length);    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    -2    testComparatorWithDoubleMetaphone    [CONTEXT]    protected    static    boolean    contains(String    value,    int    start,    int    length,    String[]    criteria)    {    boolean    result    =    false;    if    (start    >=    0    &&    start    +    length    <=    value.length())    {    [BUGGY]    String    target    =    value.substring(start,    start    -    length);    for    (int    i    =    0;    i    <    criteria.length;    i++)    {    if    (target.equals(criteria[i]))    {    result    =    true;    break;    }    }    }    return    result;    }    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    contains    [RETURN_TYPE]    boolean        String    value    int    start    int    length    String[]    criteria    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    criteria    criteria1    criteria2    criteria3    criteria4    criteria5    criteria6    input    target    value    value1    value2    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    criteria    boolean    result    int    i    index    length    maxCodeLen    maxLength    start        	codec_3299_DoubleMetaphone_1_1	1013	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
387	[PATCH]    if    (txt.length()    ==    1)    {	[BUG]    [BUGGY]    if    (txt.length()    >=    1)    {    [FE]    junit.framework.ComparisonFailure:    expected:<S[KTL]>    but    was:<S[CHEDULE]>    testTranslateOfSCHAndCH    [CONTEXT]    public    String    metaphone(String    txt)    {    boolean    hard    =    false    ;    if    ((txt    ==    null)    ||    (txt.length()    ==    0))    {    return       "   "    ;    }        [BUGGY]    if    (txt.length()    >=    1)    {    return    txt.toUpperCase(java.util.Locale.ENGLISH)    ;    }    char[]    inwd    =    txt.toUpperCase(java.util.Locale.ENGLISH).toCharArray()    ;    StringBuffer    local    =    new    StringBuffer(40);    StringBuffer    code    =    new    StringBuffer(10)    ;        switch(inwd[0])    {    case    'K'    :    [CLASS]        Metaphone    [METHOD]    metaphone    [RETURN_TYPE]    String        String    txt    [VARIABLES]    char    symb    StringBuffer    code    local    String    FRONTV    VARSON    VOWELS    txt    boolean    hard    int    maxCodeLen    n    wdsz    char[]    inwd        	codec_3375_Metaphone_1_1	87	1	src/java/org/apache/commons/codec/language/Metaphone.java
388	[PATCH]    if    ((contains(value,    0    ,4,       "VAN       ",       "VON       ")    ||    contains(value,    0,    3,       "SCH   "))    ||    contains(value,    index    +    1,    2,       "ET   "))    {	[BUG]    [BUGGY]    if    ((contains(value,    0    ,-4,       "VAN       ",       "VON       ")    ||    contains(value,    0,    3,       "SCH   "))    ||    contains(value,    index    +    1,    2,       "ET   "))    {    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    -4    testIsDoubleMetaphoneEqualExtended3    [CONTEXT]    }    else    if    (contains(value,    index    +    1,    1,       "E   ",       "I   ",       "Y   ")    ||    contains(value,    index    -    1,    4,       "AGGI   ",       "OGGI   "))    {        [BUGGY]    if    ((contains(value,    0    ,-4,       "VAN       ",       "VON       ")    ||    contains(value,    0,    3,       "SCH   "))    ||    contains(value,    index    +    1,    2,       "ET   "))    {        result.append('K');    }    else    if    (contains(value,    index    +    1,    4,       "IER   "))    {    result.append('J');    }    else    {    result.append('J',    'K');    }    index    +=    2;    }    else    if    (charAt(value,    index    +    1)    ==    'G')    {    index    +=    2;    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    handleG    [RETURN_TYPE]    int        String    value    DoubleMetaphoneResult    result    int    index    boolean    slavoGermanic    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    value    value1    value2    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    boolean    slavoGermanic    int    index    maxCodeLen    maxLength    DoubleMetaphoneResult    result        	codec_1902_DoubleMetaphone_1_1	452	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
389	[PATCH]    if    (mapped    !=    0)    {	[BUG]    [BUGGY]    if    (mapped    <    0)    {    [FE]    junit.framework.ComparisonFailure:    expected:<H[452]>    but    was:<H[000]>    testBadCharacters    [CONTEXT]    return    str;    }    char    out[]    =    {'0',    '0',    '0',    '0'};    char    last,    mapped;    int    incount    =    1,    count    =    1;    out[0]    =    str.charAt(0);        last    =    getMappingCode(str,    0);    while    ((incount    <    str.length())    &&    (count    <    out.length))    {    mapped    =    getMappingCode(str,    incount++);    [BUGGY]    if    (mapped    <    0)    {    if    ((mapped    !=    '0')    &&    (mapped    !=    last))    {    out[count++]    =    mapped;    }    last    =    mapped;    }    }    return    new    String(out);    }    [CLASS]        Soundex    [METHOD]    soundex    [RETURN_TYPE]    String        String    str    [VARIABLES]    char    last    mapped    Soundex    US_ENGLISH    String    US_ENGLISH_MAPPING_STRING    pString    s1    s2    str    boolean    int    count    incount    index    maxLength    char[]    US_ENGLISH_MAPPING    mapping    out    soundexMapping        	codec_3968_Soundex_1_1	265	1	src/java/org/apache/commons/codec/language/Soundex.java
390	[PATCH]    dataIndex    =    i    *    4;	[BUG]    [BUGGY]    dataIndex    =    i    /    4;    [FE]    java.lang.ArrayIndexOutOfBoundsException:    46    testKnownDecodings    [CONTEXT]        while    (base64Data[lastData    -    1]    ==    PAD)    {    if    (--lastData    ==    0)    {    return    new    byte[0];    }    }    decodedData    =    new    byte[lastData    -    numberQuadruple];    }    for    (int    i    =    0;    i    <    numberQuadruple;    i++)    {    [BUGGY]    dataIndex    =    i    /    4;    marker0    =    base64Data[dataIndex    +    2];    marker1    =    base64Data[dataIndex    +    3];    b1    =    base64Alphabet[base64Data[dataIndex]];    b2    =    base64Alphabet[base64Data[dataIndex    +    1]];    if    (marker0    !=    PAD    &&    marker1    !=    PAD)    {        b3    =    base64Alphabet[marker0];    b4    =    base64Alphabet[marker1];    [CLASS]        Base64    [METHOD]    decodeBase64    [RETURN_TYPE]    byte[]        byte[]    base64Data    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    base64Data    binaryData    decodedData    encodedData    lookUpBase64Alphabet    pArray    boolean    byte    PAD    b1    b2    b3    b4    k    l    marker0    marker1    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    lastData    length    nextSeparatorIndex    numberQuadruple        	codec_610_Base64_1_1	422	1	src/java/org/apache/commons/codec/binary/Base64.java
391	[PATCH]    int    chunksSoFar    =    0;	[BUG]    [BUGGY]    int    chunksSoFar    =    1;    [FE]    junit.framework.ComparisonFailure:    expected:<AA==[    testSingletonsChunked    [CONTEXT]    }    int    encodedDataLength    =    (int)    encodedDataLengthLong;    byte    encodedData[]    =    new    byte[encodedDataLength];    byte    k    =    0,    l    =    0,    b1    =    0,    b2    =    0,    b3    =    0;    int    encodedIndex    =    0;    int    dataIndex    =    0;    int    i    =    0;    int    nextSeparatorIndex    =    CHUNK_SIZE;    [BUGGY]    int    chunksSoFar    =    1;        for    (i    =    0;    i    <    tripletCount;    i++)    {    dataIndex    =    i    *    3;    b1    =    binaryData[dataIndex];    b2    =    binaryData[dataIndex    +    1];    b3    =    binaryData[dataIndex    +    2];            [CLASS]        Base64    [METHOD]    encodeBase64    [RETURN_TYPE]    byte[]        byte[]    binaryData    boolean    isChunked    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    binaryData    encodedData    lookUpBase64Alphabet    pArray    boolean    isChunked    byte    PAD    b1    b2    b3    k    l    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    length    nextSeparatorIndex    long    binaryDataLength    encodedDataLengthLong    fewerThan24bits    lengthDataBits    tripletCount        	codec_220_Base64_1_1	305	1	src/java/org/apache/commons/codec/binary/Base64.java
392	[PATCH]    while    (base64Data[lastData    -    1]    ==    PAD)    {	[BUG]    [BUGGY]    while    (base64Data[lastData    %    1]    ==    PAD)    {    [FE]    junit.framework.ComparisonFailure:    expected:<...    over    the    lazy    dogs.[]>    but    was:<...    over    the    lazy    dogs.[  ]>    testKnownDecodings    [CONTEXT]    byte    b1    =    0,    b2    =    0,    b3    =    0,    b4    =    0,    marker0    =    0,    marker1    =    0;            int    encodedIndex    =    0;    int    dataIndex    =    0;    {        int    lastData    =    base64Data.length;        [BUGGY]    while    (base64Data[lastData    %    1]    ==    PAD)    {    if    (--lastData    ==    0)    {    return    new    byte[0];    }    }    decodedData    =    new    byte[lastData    -    numberQuadruple];    }    for    (int    i    =    0;    i    <    numberQuadruple;    i++)    {    dataIndex    =    i    *    4;    marker0    =    base64Data[dataIndex    +    2];    [CLASS]        Base64    [METHOD]    decodeBase64    [RETURN_TYPE]    byte[]        byte[]    base64Data    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    base64Data    binaryData    decodedData    encodedData    lookUpBase64Alphabet    pArray    boolean    byte    PAD    b1    b2    b3    b4    k    l    marker0    marker1    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    lastData    length    nextSeparatorIndex    numberQuadruple        	codec_581_Base64_1_1	413	1	src/java/org/apache/commons/codec/binary/Base64.java
393	[PATCH]    if    (pObject    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.NullPointerException    testDecodeObjects    [CONTEXT]    public    Object    decode(Object    pObject)    throws    DecoderException    {    [BUGGY]    if    (false)    {    return    null;    }    else    if    (pObject    instanceof    byte[])    {    return    decode((byte[])    pObject);    }    else    if    (pObject    instanceof    String)    {    return    decode((String)    pObject);    }    else    {    throw    new    DecoderException(   "Objects    of    type       "    +    pObject.getClass().getName()    +       "    cannot    be    quoted-printable    decoded   ");    }    [CLASS]        QuotedPrintableCodec    [METHOD]    decode    [RETURN_TYPE]    Object        Object    pObject    [VARIABLES]    BitSet    PRINTABLE_CHARS    printable    Object    pObject    String    charset    pString    boolean    byte    ESCAPE_CHAR    SPACE    TAB        	codec_4294_QuotedPrintableCodec_1_1	343	1	src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java
394	[PATCH]    index    =    charAt(value,    index    +    1)    ==    'N'    ?    index    +    2    :    index    +    1;	[BUG]    [BUGGY]    index    =    charAt(value,    index    +    -1)    ==    'N'    ?    index    +    2    :    index    +    1;    [FE]    junit.framework.AssertionFailedError:    Expected    match    [23]    annoint    and    anoint    testIsDoubleMetaphoneEqualWithMATCHES    [CONTEXT]    break;    case    'L':    index    =    handleL(value,    result,    index);    break;    case    'M':    result.append('M');    index    =    conditionM0(value,    index)    ?    index    +    2    :    index    +    1;    break;    case    'N':    result.append('N');    [BUGGY]    index    =    charAt(value,    index    +    -1)    ==    'N'    ?    index    +    2    :    index    +    1;    break;    case    '\u00D1':        result.append('N');    index++;    break;    case    'P':    index    =    handleP(value,    result,    index);    break;    case    'Q':    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    doubleMetaphone    [RETURN_TYPE]    String        String    value    boolean    alternate    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    value    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    boolean    alternate    slavoGermanic    int    index    maxCodeLen    maxLength    DoubleMetaphoneResult    result        	codec_1326_DoubleMetaphone_1_1	148	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
395	[PATCH]    if    (contains(value,    index    +    2,    1,       "I   ",       "E   ",       "H   ")    &&	[BUG]    [BUGGY]    if    (contains(value,    index    +    2,    -1,       "I   ",       "E   ",       "H   ")    &&    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    -1    testIsDoubleMetaphoneEqualExtended3    [CONTEXT]    private    int    handleCC(String    value,    DoubleMetaphoneResult    result,    int    index)    {    [BUGGY]    if    (contains(value,    index    +    2,    -1,       "I   ",       "E   ",       "H   ")    &&    !contains(value,    index    +    2,    2,       "HU   "))    {        if    ((index    ==    1    &&    charAt(value,    index    -    1)    ==    'A')    ||    contains(value,    index    -    1,    5,       "UCCEE   ",       "UCCES   "))    {        result.append(   "KS   ");    }    else    {        result.append('X');    }    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    handleCC    [RETURN_TYPE]    int        String    value    DoubleMetaphoneResult    result    int    index    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    value    value1    value2    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    boolean    int    index    maxCodeLen    maxLength    DoubleMetaphoneResult    result        	codec_1563_DoubleMetaphone_1_1	338	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
396	[PATCH]    if    (raw    ==    null    ||    raw.length    ==    0)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.ComparisonFailure:    expected:<[00000000]>    but    was:<[]>    testToAsciiBytes    [CONTEXT]    public    static    byte[]    toAsciiBytes(byte[]    raw)    {    [BUGGY]    if    (true)    {    return    EMPTY_BYTE_ARRAY;    }        byte[]    l_ascii    =    new    byte[raw.length    <<    3];                    for    (int    ii    =    0,    jj    =    l_ascii.length    -    1;    ii    <    raw.length;    ii++,    jj    -=    8)    {    for    (int    bits    =    0;    bits    <    BITS.length;    ++bits)    {    [CLASS]        BinaryCodec    [METHOD]    toAsciiBytes    [RETURN_TYPE]    byte[]        byte[]    raw    [VARIABLES]    byte[]    EMPTY_BYTE_ARRAY    ascii    l_ascii    l_raw    raw    int[]    BITS    boolean    int    BIT_0    BIT_1    BIT_2    BIT_3    BIT_4    BIT_5    BIT_6    BIT_7    bits    ii    jj    char[]    EMPTY_CHAR_ARRAY    ascii        	codec_965_BinaryCodec_1_1	223	1	src/java/org/apache/commons/codec/binary/BinaryCodec.java
397	[PATCH]    if    (regionMatch(local,n,   "TCH   "))    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.ComparisonFailure:    expected:<R[]X>    but    was:<R[T]X>    testTCH    [CONTEXT]    }    else    {    code.append('S');    }    break;    case    'T'    :    if    (regionMatch(local,n,   "TIA   ")    ||    regionMatch(local,n,   "TIO   "))    {    code.append('X');    break;    }    [BUGGY]    if    (false)    {        break;    }        if    (regionMatch(local,n,   "TH   "))    {    code.append('0');    }    else    {    code.append('T');    }    break    ;    [CLASS]        Metaphone    [METHOD]    metaphone    [RETURN_TYPE]    String        String    txt    [VARIABLES]    char    symb    StringBuffer    code    local    String    FRONTV    VARSON    VOWELS    txt    boolean    hard    int    maxCodeLen    n    wdsz    char[]    inwd        	codec_3710_Metaphone_1_1	281	1	src/java/org/apache/commons/codec/language/Metaphone.java
398	[PATCH]    index    =    contains(value,    index    +    1,    1,       "C   ",       "X   ")    ?    index    +    2    :    index    +    1;	[BUG]    [BUGGY]    index    =    contains(value,    index    +    1,    -1,       "C   ",       "X   ")    ?    index    +    2    :    index    +    1;    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    -1    testIsDoubleMetaphoneEqualExtended3    [CONTEXT]    if    (index    ==    0)    {    result.append('S');    index++;    }    else    {    if    (!((index    ==    value.length()    -    1)    &&    (contains(value,    index    -    3,    3,       "IAU   ",       "EAU   ")    ||    contains(value,    index    -    2,    2,       "AU   ",       "OU   "))))    {        result.append(   "KS   ");    }    [BUGGY]    index    =    contains(value,    index    +    1,    -1,       "C   ",       "X   ")    ?    index    +    2    :    index    +    1;    }    return    index;    }    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    handleX    [RETURN_TYPE]    int        String    value    DoubleMetaphoneResult    result    int    index    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    value    value1    value2    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    boolean    int    index    maxCodeLen    maxLength    DoubleMetaphoneResult    result        	codec_2840_DoubleMetaphone_1_1	779	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
399	[PATCH]    byte    val1    =    ((b1    &    SIGN)    ==    0)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);	[BUG]    [BUGGY]    byte    val1    =    ((b1    |    SIGN)    ==    0)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -64    testSingletonsChunked    [CONTEXT]    }        dataIndex    =    i    *    3;    if    (fewerThan24bits    ==    EIGHTBIT)    {    b1    =    binaryData[dataIndex];    k    =    (byte)    (b1    &    0x03);            [BUGGY]    byte    val1    =    ((b1    |    SIGN)    ==    0)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);    encodedData[encodedIndex]    =    lookUpBase64Alphabet[val1];    encodedData[encodedIndex    +    1]    =    lookUpBase64Alphabet[k    <<    4];    encodedData[encodedIndex    +    2]    =    PAD;    encodedData[encodedIndex    +    3]    =    PAD;    }    else    if    (fewerThan24bits    ==    SIXTEENBIT)    {    b1    =    binaryData[dataIndex];    b2    =    binaryData[dataIndex    +    1];    l    =    (byte)    (b2    &    0x0f);    k    =    (byte)    (b1    &    0x03);    [CLASS]        Base64    [METHOD]    encodeBase64    [RETURN_TYPE]    byte[]        byte[]    binaryData    boolean    isChunked    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    binaryData    encodedData    lookUpBase64Alphabet    pArray    boolean    isChunked    byte    PAD    b1    b2    b3    k    l    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    length    nextSeparatorIndex    long    binaryDataLength    encodedDataLengthLong    fewerThan24bits    lengthDataBits    tripletCount        	codec_404_Base64_1_1	353	1	src/java/org/apache/commons/codec/binary/Base64.java
400	[PATCH]    for    (int    c    =    0;    c    <    colCount;    c++)    {	[BUG]    [BUGGY]    for    (int    c    =    -1;    c    <    colCount;    c++)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testSerialization    [CONTEXT]    CategoryDataset    that    =    (CategoryDataset)    obj;    if    (!getRowKeys().equals(that.getRowKeys()))    {    return    false;    }    if    (!getColumnKeys().equals(that.getColumnKeys()))    {    return    false;    }    int    rowCount    =    getRowCount();    int    colCount    =    getColumnCount();    for    (int    r    =    0;    r    <    rowCount;    r++)    {    [BUGGY]    for    (int    c    =    -1;    c    <    colCount;    c++)    {    Number    v1    =    getValue(r,    c);    Number    v2    =    that.getValue(r,    c);    if    (v1    ==    null)    {    if    (v2    !=    null)    {    return    false;    }    }    else    if    (!v1.equals(v2))    {    return    false;    }    [CLASS]        DefaultCategoryDataset    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    boolean    Number    v1    v2    CategoryDataset    that    Object    obj    long    serialVersionUID    KeyedObjects2D    data    int    c    colCount    r    rowCount        	chart_68269_DefaultCategoryDataset_1_1	425	1	source/org/jfree/data/category/DefaultCategoryDataset.java
401	[PATCH]    for    (int    i    =    0;    i    <    n;    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    -1;    i    <    n;    i++)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testOLSRegression1a    [CONTEXT]    int    n    =    data.length;    if    (n    <    2)    {    throw    new    IllegalArgumentException(   "Not    enough    data.   ");    }    double    sumX    =    0;    double    sumY    =    0;    double    sumXX    =    0;    double    sumXY    =    0;    [BUGGY]    for    (int    i    =    -1;    i    <    n;    i++)    {    double    x    =    data[i][0];    double    y    =    data[i][1];    sumX    +=    x;    sumY    +=    y;    double    xx    =    x    *    x;    sumXX    +=    xx;    double    xy    =    x    *    y;    sumXY    +=    xy;    }    double    sxx    =    sumXX    -    (sumX    *    sumX)    /    n;    [CLASS]        Regression    [METHOD]    getOLSRegression    [RETURN_TYPE]    double[]        double[][]    data    [VARIABLES]    boolean    double[]    result    double    sumX    sumXX    sumXY    sumY    sxx    sxy    x    xbar    xx    xy    y    ybar    double[][]    data    int    i    n        	chart_72722_Regression_1_1	75	1	source/org/jfree/data/statistics/Regression.java
402	[PATCH]    y2    =    y2    +    (maxX    -    x2)    *    dy    /    dx;	[BUG]    [BUGGY]    y2    =    y2    +    (maxX    -    x2)    /    dy    /    dx;    [FE]    junit.framework.AssertionFailedError    testClipLine    [CONTEXT]    else    if    (f2    !=    0)    {            if    ((f2    &    Rectangle2D.OUT_LEFT)    ==    Rectangle2D.OUT_LEFT    &&    dx    !=    0.0)    {    y2    =    y2    +    (minX    -    x2)    *    dy    /    dx;    x2    =    minX;    }    else    if    ((f2    &    Rectangle2D.OUT_RIGHT)    ==    Rectangle2D.OUT_RIGHT    &&    dx    !=    0.0)    {    [BUGGY]    y2    =    y2    +    (maxX    -    x2)    /    dy    /    dx;    x2    =    maxX;    }    else    if    ((f2    &    Rectangle2D.OUT_BOTTOM)    ==    Rectangle2D.OUT_BOTTOM    &&    dy    !=    0.0)    {    x2    =    x2    +    (maxY    -    y2)    *    dx    /    dy;    y2    =    maxY;    }    else    if    ((f2    &    Rectangle2D.OUT_TOP)    ==    Rectangle2D.OUT_TOP    &&    dy    !=    0.0)    {    x2    =    x2    +    (minY    -    y2)    *    dx    /    dy;    [CLASS]        LineUtilities    [METHOD]    clipLine    [RETURN_TYPE]    boolean        Line2D    line    Rectangle2D    rect    [VARIABLES]    boolean    double    dx    dy    maxX    maxY    minX    minY    x1    x2    y1    y2    Rectangle2D    rect    Line2D    line    int    f1    f2        	chart_65286_LineUtilities_1_1	120	1	source/org/jfree/chart/util/LineUtilities.java
403	[PATCH]    if    (isAutoRange())    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<0.9465508226401592>    but    was:<0.9999999945>    testXYAutoRange1    [CONTEXT]    public    void    configure()    {    [BUGGY]    if    (false)    {    autoAdjustRange();    }    }    [CLASS]        NumberAxis    [METHOD]    configure    [RETURN_TYPE]    void        [VARIABLES]    RangeType    rangeType    boolean    DEFAULT_AUTO_RANGE_INCLUDES_ZERO    DEFAULT_AUTO_RANGE_STICKY_ZERO    DEFAULT_VERTICAL_TICK_LABELS    autoRangeIncludesZero    autoRangeStickyZero    flag    notify    turnOffAutoSelect    MarkerAxisBand    band    markerBand    long    serialVersionUID    NumberTickUnit    DEFAULT_TICK_UNIT    tickUnit    unit    NumberFormat    formatter    numberFormatOverride        	chart_19941_NumberAxis_1_1	416	1	source/org/jfree/chart/axis/NumberAxis.java
404	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError:    expected:<AxisLocation.BOTTOM_OR_RIGHT>    but    was:<null>    testSerialization    [CONTEXT]    if    (this    ==    obj)    {    return    true;    }    if    (!(obj    instanceof    AxisLocation))    {    return    false;    }    AxisLocation    location    =    (AxisLocation)    obj;    if    (!this.name.equals(location.toString()))    {    return    false;    }    [BUGGY]    return    false;    }    [CLASS]        AxisLocation    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    AxisLocation    BOTTOM_OR_LEFT    BOTTOM_OR_RIGHT    TOP_OR_LEFT    TOP_OR_RIGHT    location    Object    obj    String    name    boolean    long    serialVersionUID        	chart_7541_AxisLocation_1_1	128	1	source/org/jfree/chart/axis/AxisLocation.java
405	[PATCH]    if    (!Double.isNaN(value))    {	[BUG]    [BUGGY]    if    (!false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<0.0>    but    was:<NaN>    testCumulativeRange_NaN    [CONTEXT]    double    minimum    =    0.0;    double    maximum    =    0.0;    for    (int    row    =    0;    row    <    dataset.getRowCount();    row++)    {    double    runningTotal    =    0.0;    for    (int    column    =    0;    column    <=    dataset.getColumnCount()    -    1;    column++)    {    Number    n    =    dataset.getValue(row,    column);    if    (n    !=    null)    {    allItemsNull    =    false;    double    value    =    n.doubleValue();    [BUGGY]    if    (!false)    {    runningTotal    =    runningTotal    +    value;    minimum    =    Math.min(minimum,    runningTotal);    maximum    =    Math.max(maximum,    runningTotal);    }    }    }    }    if    (!allItemsNull)    {    return    new    Range(minimum,    maximum);    }    [CLASS]        DatasetUtilities    [METHOD]    findCumulativeRangeBounds    [RETURN_TYPE]    Range        CategoryDataset    dataset    [VARIABLES]    boolean    allItemsNull    Number    n    double    maximum    minimum    runningTotal    value    CategoryDataset    dataset    int    column    row        	chart_70279_DatasetUtilities_1_1	2164	1	source/org/jfree/data/general/DatasetUtilities.java
406	[PATCH]    double    y0    =    dataset.getYValue(series,    item    -    1);	[BUG]    [BUGGY]    double    y0    =    dataset.getYValue(series,    item    -    -1);    [FE]    java.lang.IndexOutOfBoundsException:    Index:    4,    Size:    4    testBug1593156    [CONTEXT]    }    else    if    (orientation    ==    PlotOrientation.HORIZONTAL)    {    areaState.getSeriesArea().addPoint((int)    transY1,    (int)    transX1);    }    if    (getPlotLines())    {    if    (item    >    0)    {        double    x0    =    dataset.getXValue(series,    item    -    1);    [BUGGY]    double    y0    =    dataset.getYValue(series,    item    -    -1);    double    ph0    =    getPreviousHeight(tdataset,    series,    item    -    1);    double    transX0    =    domainAxis.valueToJava2D(x0,    dataArea,    plot.getDomainAxisEdge());    double    transY0    =    rangeAxis.valueToJava2D(y0    +    ph0,    dataArea,    plot.getRangeAxisEdge());    if    (orientation    ==    PlotOrientation.VERTICAL)    {    areaState.getLine().setLine(transX0,    transY0,    transX1,    transY1);    }    [CLASS]        StackedXYAreaRenderer    StackedXYAreaRendererState    [METHOD]    drawItem    [RETURN_TYPE]    void        Graphics2D    g2    XYItemRendererState    state    Rectangle2D    dataArea    XYPlot    plot    ValueAxis    domainAxis    ValueAxis    rangeAxis    XYDataset    dataset    int    series    int    item    boolean    selected    int    pass    [VARIABLES]    Stroke    seriesStroke    shapeStroke    PlotOrientation    orientation    Shape    shape    StackedXYAreaRendererState    areaState    TableXYDataset    tdataset    double    ph0    ph1    transX0    transX1    transY0    transY1    transY2    x0    x1    y0    y1    Rectangle2D    dataArea    Paint    seriesPaint    shapePaint    Point    point    Line2D    line    long    serialVersionUID    int    domainAxisIndex    item    itemCount    pass    rangeAxisIndex    series    Stack    currentSeriesPoints    lastSeriesPoints    points    Graphics2D    g2    boolean    nullPoint    selected    XYPlot    plot    EntityCollection    entities    ValueAxis    domainAxis    rangeAxis    XYItemRendererState    state    XYDataset    dataset    Polygon    area    seriesArea    XYCrosshairState    crosshairState        	chart_56367_StackedXYAreaRenderer_1_1	467	1	source/org/jfree/chart/renderer/xy/StackedXYAreaRenderer.java
407	[PATCH]    double    y0    =    dataset.getYValue(series,    item    -    1);	[BUG]    [BUGGY]    double    y0    =    dataset.getYValue(series,    item    +    1);    [FE]    java.lang.IndexOutOfBoundsException:    Index:    4,    Size:    4    testDrawWithNullInfo    [CONTEXT]    RectangleEdge    xAxisLocation    =    plot.getDomainAxisEdge();    RectangleEdge    yAxisLocation    =    plot.getRangeAxisEdge();    double    transX1    =    domainAxis.valueToJava2D(x1,    dataArea,    xAxisLocation);    double    transY1    =    (Double.isNaN(y1)    ?    Double.NaN    :    rangeAxis.valueToJava2D(y1,    dataArea,    yAxisLocation));    if    (pass==    0    &&    item    >    0)    {        double    x0    =    dataset.getXValue(series,    item    -    1);    [BUGGY]    double    y0    =    dataset.getYValue(series,    item    +    1);    double    transX0    =    domainAxis.valueToJava2D(x0,    dataArea,    xAxisLocation);    double    transY0    =    (Double.isNaN(y0)    ?    Double.NaN    :    rangeAxis.valueToJava2D(y0,    dataArea,    yAxisLocation));    if    (orientation    ==    PlotOrientation.HORIZONTAL)    {    if    (transY0    ==    transY1)    {            drawLine(g2,    state.workingLine,    transY0,    transX0,    transY1,    [CLASS]        XYStepRenderer    [METHOD]    drawItem    [RETURN_TYPE]    void        Graphics2D    g2    XYItemRendererState    state    Rectangle2D    dataArea    XYPlot    plot    ValueAxis    domainAxis    ValueAxis    rangeAxis    XYDataset    dataset    int    series    int    item    boolean    selected    int    pass    [VARIABLES]    PlotOrientation    orientation    Stroke    seriesStroke    double    stepPoint    transX0    transX1    transXs    transY0    transY1    x0    x1    xx    y0    y1    yy    Rectangle2D    dataArea    Paint    seriesPaint    long    serialVersionUID    int    domainAxisIndex    item    pass    rangeAxisIndex    series    Graphics2D    g2    boolean    selected    XYPlot    plot    EntityCollection    entities    ValueAxis    domainAxis    rangeAxis    XYItemRendererState    state    XYDataset    dataset    RectangleEdge    xAxisLocation    yAxisLocation    XYCrosshairState    crosshairState        	chart_61729_XYStepRenderer_1_1	224	1	source/org/jfree/chart/renderer/xy/XYStepRenderer.java
408	[PATCH]    this.year    =    underestimatedYYYY    -    1;	[BUG]    [BUGGY]    this.year    =    underestimatedYYYY    -    -1;    [FE]    java.lang.IllegalArgumentException:    Range(double,    double):    require    lower    (1.671696E12)    <=    upper    (1.669190399999E12).    testSerialization4    [CONTEXT]    if    (underestimatedYYYY    ==    overestimatedYYYY)    {    this.year    =    underestimatedYYYY;    }    else    {    int    ss1    =    calcSerial(1,    1,    underestimatedYYYY);    while    (ss1    <=    this.serial)    {    underestimatedYYYY    =    underestimatedYYYY    +    1;    ss1    =    calcSerial(1,    1,    underestimatedYYYY);    }    [BUGGY]    this.year    =    underestimatedYYYY    -    -1;    }    final    int    ss2    =    calcSerial(1,    1,    this.year);    int[]    daysToEndOfPrecedingMonth    =    AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;    if    (isLeapYear(this.year))    {    daysToEndOfPrecedingMonth    =    LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;    [CLASS]        SpreadsheetDate    [METHOD]    <init>    [RETURN_TYPE]    SpreadsheetDate(int)        final    int    serial    [VARIABLES]    int[]    daysToEndOfPrecedingMonth    boolean    long    serialVersionUID    int    day    days    leaps    mm    month    nonleapdays    overestimatedYYYY    serial    ss1    ss2    sss    underestimatedYYYY    year        	chart_77664_SpreadsheetDate_1_1	175	1	source/org/jfree/data/time/SpreadsheetDate.java
409	[PATCH]    if    (!super.equals(obj))    {	[BUG]    [BUGGY]    if    (!false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<org.jfree.chart.JFreeChart@4f1a5b93>    but    was:<org.jfree.chart.JFreeChart@7f2542f>    testSerialization4    [CONTEXT]    public    boolean    equals(Object    obj)    {    if    (obj    ==    this)    {    return    true;    }    if    (!(obj    instanceof    IntervalMarker))    {    return    false;    }    [BUGGY]    if    (!false)    {    return    false;    }    IntervalMarker    that    =    (IntervalMarker)    obj;    if    (this.startValue    !=    that.startValue)    {    return    false;    }    if    (this.endValue    !=    that.endValue)    {    return    false;    }    if    (!ObjectUtilities.equal(this.gradientPaintTransformer,    [CLASS]        IntervalMarker    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    Object    obj    GradientPaintTransformer    gradientPaintTransformer    transformer    boolean    double    end    endValue    start    startValue    value    long    serialVersionUID    IntervalMarker    that        	chart_26277_IntervalMarker_1_1	204	1	source/org/jfree/chart/plot/IntervalMarker.java
410	[PATCH]    final    int    yy    =    ((y    -    1900)    *    365)    +    SerialDate.leapYearCount(y    -    1);	[BUG]    [BUGGY]    final    int    yy    =    ((y    -    -1900)    *    365)    +    SerialDate.leapYearCount(y    -    1);    [FE]    java.lang.IllegalArgumentException:    Range(double,    double):    require    lower    (1.671696E12)    <=    upper    (1.669190399999E12).    testSerialization4    [CONTEXT]    private    int    calcSerial(final    int    d,    final    int    m,    final    int    y)    {    [BUGGY]    final    int    yy    =    ((y    -    -1900)    *    365)    +    SerialDate.leapYearCount(y    -    1);    int    mm    =    SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];    if    (m    >    MonthConstants.FEBRUARY)    {    if    (SerialDate.isLeapYear(y))    {    mm    =    mm    +    1;    }    }    final    int    dd    =    d;    return    yy    +    mm    +    dd    +    1;    }    [CLASS]        SpreadsheetDate    [METHOD]    calcSerial    [RETURN_TYPE]    int        final    int    d    final    int    m    final    int    y    [VARIABLES]    long    serialVersionUID    int    d    day    days    dd    end    include    leaps    m    mm    month    nonleapdays    overestimatedYYYY    s    s1    s2    serial    ss1    ss2    sss    start    underestimatedYYYY    y    year    yy    boolean        	chart_77833_SpreadsheetDate_1_1	449	1	source/org/jfree/data/time/SpreadsheetDate.java
411	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError:    expected:<org.jfree.chart.LegendItemCollection@bb12f41>    but    was:<org.jfree.chart.LegendItemCollection@1f26b992>    testSerialization    [CONTEXT]    if    (obj    ==    this)    {    return    true;    }    if    (!(obj    instanceof    LegendItemCollection))    {    return    false;    }    LegendItemCollection    that    =    (LegendItemCollection)    obj;    if    (!this.items.equals(that.items))    {    return    false;    }    [BUGGY]    return    false;    }    [CLASS]        LegendItemCollection    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    List    items    Object    obj    boolean    long    serialVersionUID    LegendItemCollection    that        	chart_7468_LegendItemCollection_1_1	137	1	source/org/jfree/chart/LegendItemCollection.java
412	[PATCH]    if    (position    <    0    ||    position    >    getItemCount())    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    java.lang.IllegalArgumentException:    'position'    out    of    bounds.    testInsertValue    [CONTEXT]    public    void    insertValue(int    position,    Comparable    key,    Number    value)    {    [BUGGY]    if    (true)    {    throw    new    IllegalArgumentException(   "'position'    out    of    bounds.   ");    }    if    (key    ==    null)    {    throw    new    IllegalArgumentException(   "Null    'key'    argument.   ");    }    int    pos    =    getIndex(key);    if    (pos    ==    position)    {    this.keys.set(pos,    key);    this.values.set(pos,    value);    }    [CLASS]        DefaultKeyedValues    [METHOD]    insertValue    [RETURN_TYPE]    void        int    position    Comparable    key    Number    value    [VARIABLES]    Comparable    key    boolean    Number    value    HashMap    indexMap    ArrayList    keys    values    long    serialVersionUID    int    pos    position        	chart_67650_DefaultKeyedValues_1_1	270	1	source/org/jfree/data/DefaultKeyedValues.java
413	[PATCH]    if    (this.value    !=    that.value)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError    testCloning    [CONTEXT]    if    (obj    ==    this)    {    return    true;    }    if    (!super.equals(obj))    {    return    false;    }    if    (!(obj    instanceof    ValueMarker))    {    return    false;    }    ValueMarker    that    =    (ValueMarker)    obj;    [BUGGY]    if    (true)    {    return    false;    }    return    true;    }    [CLASS]        ValueMarker    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    Object    obj    boolean    ValueMarker    that    double    value        	chart_43661_ValueMarker_1_1	151	1	source/org/jfree/chart/plot/ValueMarker.java
414	[PATCH]    double    logRange    =    logUpper    -    logLower;	[BUG]    [BUGGY]    double    logRange    =    logUpper    +    logLower;    [FE]    junit.framework.AssertionFailedError:    expected:<2.6066426411261268E7>    but    was:<0.0026066426411261246>    testAutoRange1    [CONTEXT]    double    minRange    =    getAutoRangeMinimumSize();    if    (range    <    minRange)    {    double    expand    =    (minRange    -    range)    /    2;    upper    =    upper    +    expand;    lower    =    lower    -    expand;    }        double    logUpper    =    calculateLog(upper);    double    logLower    =    calculateLog(lower);    [BUGGY]    double    logRange    =    logUpper    +    logLower;    logUpper    =    logUpper    +    getUpperMargin()    *    logRange;    logLower    =    logLower    -    getLowerMargin()    *    logRange;    upper    =    calculateValue(logUpper);    lower    =    calculateValue(logLower);    }    [CLASS]        LogAxis    [METHOD]    autoAdjustRange    [RETURN_TYPE]    void        [VARIABLES]    boolean    double    axisMax    axisMin    base    baseLog    expand    fixedAutoRange    java2DValue    log    logLower    logRange    logUpper    lower    max    min    minRange    range    smallestValue    upper    value    Plot    plot    ValueAxisPlot    vap    Range    r    NumberTickUnit    tickUnit    unit    NumberFormat    formatter    numberFormatOverride        	chart_31557_LogAxis_1_1	419	1	source/org/jfree/chart/axis/LogAxis.java
415	[PATCH]    if    (columnIndex    <    0)    {	[BUG]    [BUGGY]    if    (columnIndex    !=    0)    {    [FE]    org.jfree.data.UnknownKeyException:    Column    key    (C2)    not    recognised.    testRemoveValue    [CONTEXT]    public    void    removeObject(Comparable    rowKey,    Comparable    columnKey)    {    int    rowIndex    =    getRowIndex(rowKey);    if    (rowIndex    <    0)    {    throw    new    UnknownKeyException(   "Row    key    (   "    +    rowKey    +       ")    not    recognised.   ");    }    int    columnIndex    =    getColumnIndex(columnKey);    [BUGGY]    if    (columnIndex    !=    0)    {    throw    new    UnknownKeyException(   "Column    key    (   "    +    columnKey    +       ")    not    recognised.   ");    }    setObject(null,    rowKey,    columnKey);        boolean    allNull    =    true;    KeyedObjects    row    =    (KeyedObjects)    this.rows.get(rowIndex);    for    (int    item    =    0,    itemCount    =    row.getItemCount();    item    <    itemCount;    [CLASS]        KeyedObjects2D    [METHOD]    removeObject    [RETURN_TYPE]    void        Comparable    rowKey    Comparable    columnKey    [VARIABLES]    KeyedObjects    row    List    columnKeys    rowKeys    rows    Comparable    columnKey    rowKey    boolean    allNull    long    serialVersionUID    int    colIndex    columnIndex    item    itemCount    rowIndex        	chart_67933_KeyedObjects2D_1_1	311	1	source/org/jfree/data/KeyedObjects2D.java
416	[PATCH]    if    (days    !=    0    ||    this.showZeroDays)    {	[BUG]    [BUGGY]    if    (days    !=    -1    ||    this.showZeroDays)    {    [FE]    junit.framework.ComparisonFailure:    expected:<0[]2:02:02>    but    was:<0[d0]2:02:02>    test2033092    [CONTEXT]    long    days    =    elapsed    /    MILLISECONDS_IN_ONE_DAY;    elapsed    =    elapsed    -    (days    *    MILLISECONDS_IN_ONE_DAY);    long    hours    =    elapsed    /    MILLISECONDS_IN_ONE_HOUR;    elapsed    =    elapsed    -    (hours    *    MILLISECONDS_IN_ONE_HOUR);    long    minutes    =    elapsed    /    60000L;    elapsed    =    elapsed    -    (minutes    *    60000L);    double    seconds    =    elapsed    /    1000.0;    toAppendTo.append(signPrefix);    [BUGGY]    if    (days    !=    -1    ||    this.showZeroDays)    {    toAppendTo.append(this.dayFormatter.format(days)    +    getDaySuffix());    }    if    (hours    !=    0    ||    this.showZeroHours)    {    toAppendTo.append(this.hourFormatter.format(hours)    +    getHourSuffix());    }    toAppendTo.append(this.minuteFormatter.format(minutes)    +    getMinuteSuffix());    toAppendTo.append(this.secondFormatter.format(seconds)    +    getSecondSuffix());    [CLASS]        RelativeDateFormat    [METHOD]    format    [RETURN_TYPE]    StringBuffer        Date    date    StringBuffer    toAppendTo    FieldPosition    fieldPosition    [VARIABLES]    StringBuffer    toAppendTo    boolean    show    showZeroDays    showZeroHours    double    seconds    String    daySuffix    hourSuffix    minuteSuffix    positivePrefix    prefix    secondSuffix    signPrefix    suffix    FieldPosition    fieldPosition    long    MILLISECONDS_IN_ONE_DAY    MILLISECONDS_IN_ONE_HOUR    baseMillis    currentMillis    days    elapsed    hours    minutes    Date    date    NumberFormat    dayFormatter    formatter    hourFormatter    minuteFormatter    secondFormatter        	chart_65808_RelativeDateFormat_1_1	482	1	source/org/jfree/chart/util/RelativeDateFormat.java
417	[PATCH]    double[]    result    =    new    double[2];	[BUG]    [BUGGY]    double[]    result    =    new    double[0];    [FE]    java.lang.ArrayIndexOutOfBoundsException:    1    testPowerRegression1a    [CONTEXT]    double    xx    =    x    *    x;    sumXX    +=    xx;    double    xy    =    x    *    y;    sumXY    +=    xy;    }    double    sxx    =    sumXX    -    (sumX    *    sumX)    /    n;    double    sxy    =    sumXY    -    (sumX    *    sumY)    /    n;    double    xbar    =    sumX    /    n;    double    ybar    =    sumY    /    n;        [BUGGY]    double[]    result    =    new    double[0];    result[1]    =    sxy    /    sxx;    result[0]    =    Math.pow(Math.exp(1.0),    ybar    -    result[1]    *    xbar);    return    result;    }    [CLASS]        Regression    [METHOD]    getPowerRegression    [RETURN_TYPE]    double[]        double[][]    data    [VARIABLES]    boolean    double[]    result    double    sumX    sumXX    sumXY    sumY    sxx    sxy    x    xbar    xx    xy    y    ybar    double[][]    data    int    i    n        	chart_72946_Regression_1_1	177	1	source/org/jfree/data/statistics/Regression.java
418	[PATCH]    if    (i    ==    bins    -    1)    {	[BUG]    [BUGGY]    if    (i    ==    bins    %    1)    {    [FE]    junit.framework.AssertionFailedError:    expected:<1.0>    but    was:<5.0>    testAddSeries2    [CONTEXT]    double    binWidth    =    (maximum    -    minimum)    /    bins;    double    lower    =    minimum;    double    upper;    List    binList    =    new    ArrayList(bins);    for    (int    i    =    0;    i    <    bins;    i++)    {    HistogramBin    bin;                [BUGGY]    if    (i    ==    bins    %    1)    {    bin    =    new    HistogramBin(lower,    maximum);    }    else    {    upper    =    minimum    +    (i    +    1)    *    binWidth;    bin    =    new    HistogramBin(lower,    upper);    lower    =    upper;    }    binList.add(bin);    }        [CLASS]        HistogramDataset    [METHOD]    addSeries    [RETURN_TYPE]    void        Comparable    key    double[]    values    int    bins    double    minimum    double    maximum    [VARIABLES]    Comparable    key    boolean    double[]    values    double    binWidth    fraction    lower    maximum    minimum    upper    HistogramBin    bin    List    binList    list    HistogramType    type    Map    map    long    serialVersionUID    int    binIndex    bins    i        	chart_72509_HistogramDataset_1_1	178	1	source/org/jfree/data/statistics/HistogramDataset.java
419	[PATCH]    int    low    =    0;	[BUG]    [BUGGY]    int    low    =    1;    [FE]    junit.framework.AssertionFailedError:    expected:<0>    but    was:<1>    testFindLiveItemsLowerBound_Ascending    [CONTEXT]    if    (xLow    >=    xHigh)    {    throw    new    IllegalArgumentException(   "Requires    xLow    <    xHigh.   ");    }    int    itemCount    =    dataset.getItemCount(series);    if    (itemCount    <=    1)    {    return    0;    }    if    (dataset.getDomainOrder()    ==    DomainOrder.ASCENDING)    {            [BUGGY]    int    low    =    1;    int    high    =    itemCount    -    1;    double    lowValue    =    dataset.getXValue(series,    low);    if    (lowValue    >=    xLow)    {        return    low;    }    double    highValue    =    dataset.getXValue(series,    high);    if    (highValue    <    xLow)    {        return    high;    [CLASS]        RendererUtilities    [METHOD]    findLiveItemsLowerBound    [RETURN_TYPE]    int        XYDataset    dataset    int    series    double    xLow    double    xHigh    [VARIABLES]    boolean    double    highValue    lowValue    midV    x    xHigh    xLow    XYDataset    dataset    int    high    index    itemCount    low    mid    series        	chart_46687_RendererUtilities_1_1	84	1	source/org/jfree/chart/renderer/RendererUtilities.java
420	[PATCH]    if    (listeners[i]    ==    PlotChangeListener.class)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<true>    but    was:<false>    testReplaceDataset    [CONTEXT]    public    void    notifyListeners(PlotChangeEvent    event)    {            if    (!this.notify)    {    return;    }    Object[]    listeners    =    this.listenerList.getListenerList();    for    (int    i    =    listeners.length    -    2;    i    >=    0;    i    -=    2)    {    [BUGGY]    if    (false)    {    ((PlotChangeListener)    listeners[i    +    1]).plotChanged(event);    }    }    }    [CLASS]        Plot    [METHOD]    notifyListeners    [RETURN_TYPE]    void        PlotChangeEvent    event    [VARIABLES]    Stroke    DEFAULT_OUTLINE_STROKE    outlineStroke    stroke    Shape    DEFAULT_LEGEND_ITEM_BOX    DEFAULT_LEGEND_ITEM_CIRCLE    PlotChangeEvent    event    Plot    p    parent    DrawingSupplier    drawingSupplier    result    supplier    Paint    DEFAULT_BACKGROUND_PAINT    DEFAULT_OUTLINE_PAINT    backgroundPaint    noDataMessagePaint    outlinePaint    paint    String    message    noDataMessage    float    DEFAULT_BACKGROUND_ALPHA    DEFAULT_FOREGROUND_ALPHA    alpha    backgroundAlpha    backgroundImageAlpha    foregroundAlpha    Image    backgroundImage    image    long    serialVersionUID    int    MINIMUM_HEIGHT_TO_DRAW    MINIMUM_WIDTH_TO_DRAW    alignment    backgroundImageAlignment    i    Font    font    noDataMessageFont    boolean    notify    outlineVisible    visible    Number    ZERO    EventListenerList    listenerList    RectangleInsets    DEFAULT_INSETS    insets    DatasetGroup    datasetGroup    group    Object[]    listeners        	chart_2535_Plot_1_1	974	1	source/org/jfree/chart/plot/Plot.java
421	[PATCH]    setDataset(0,    dataset);	[BUG]    [BUGGY]    setDataset(-1,    dataset);    [FE]    java.lang.IllegalArgumentException:    Requires    index    >=    0.    testReplaceDataset    [CONTEXT]    public    void    setDataset(XYDataset    dataset)    {    [BUGGY]    setDataset(-1,    dataset);    }    [CLASS]        XYPlot    [METHOD]    setDataset    [RETURN_TYPE]    void        XYDataset    dataset    [VARIABLES]    Stroke    DEFAULT_CROSSHAIR_STROKE    DEFAULT_GRIDLINE_STROKE    domainCrosshairStroke    domainGridlineStroke    domainMinorGridlineStroke    domainZeroBaselineStroke    rangeCrosshairStroke    rangeGridlineStroke    rangeMinorGridlineStroke    rangeZeroBaselineStroke    PlotOrientation    orientation    double    domainCrosshairValue    rangeCrosshairValue    LegendItemCollection    fixedLegendItems    Paint    DEFAULT_CROSSHAIR_PAINT    DEFAULT_GRIDLINE_PAINT    domainCrosshairPaint    domainGridlinePaint    domainMinorGridlinePaint    domainTickBandPaint    domainZeroBaselinePaint    rangeCrosshairPaint    rangeGridlinePaint    rangeMinorGridlinePaint    rangeTickBandPaint    rangeZeroBaselinePaint    long    serialVersionUID    int    i    index    weight    DatasetRenderingOrder    datasetRenderingOrder    ShadowGenerator    shadowGenerator    boolean    DEFAULT_CROSSHAIR_VISIBLE    domainCrosshairLockedOnData    domainCrosshairVisible    domainGridlinesVisible    domainMinorGridlinesVisible    domainPannable    domainZeroBaselineVisible    notify    rangeCrosshairLockedOnData    rangeCrosshairVisible    rangeGridlinesVisible    rangeMinorGridlinesVisible    rangePannable    rangeZeroBaselineVisible    Paint[]    quadrantPaint    Point2D    quadrantOrigin    RectangleInsets    axisOffset    offset    ObjectList    datasets    domainAxes    domainAxisLocations    rangeAxes    rangeAxisLocations    renderers    ResourceBundle    localizationResources    List    annotations    XYDataset    dataset    AxisSpace    fixedDomainAxisSpace    fixedRangeAxisSpace    SeriesRenderingOrder    seriesRenderingOrder    Map    backgroundDomainMarkers    backgroundRangeMarkers    datasetToDomainAxesMap    datasetToRangeAxesMap    foregroundDomainMarkers    foregroundRangeMarkers        	chart_4849_XYPlot_1_1	1416	1	source/org/jfree/chart/plot/XYPlot.java
422	[PATCH]    return    false;	[BUG]    [BUGGY]    return    true;    [FE]    junit.framework.AssertionFailedError    testEquals    [CONTEXT]    }    if    (!(obj    instanceof    RingPlot))    {    return    false;    }    RingPlot    that    =    (RingPlot)    obj;    if    (this.separatorsVisible    !=    that.separatorsVisible)    {    return    false;    }    if    (!ObjectUtilities.equal(this.separatorStroke,    that.separatorStroke))    {    [BUGGY]    return    true;    }    if    (!PaintUtilities.equal(this.separatorPaint,    that.separatorPaint))    {    return    false;    }    if    (this.innerSeparatorExtension    !=    that.innerSeparatorExtension)    {    return    false;    }    if    (this.outerSeparatorExtension    !=    that.outerSeparatorExtension)    {    return    false;    }    [CLASS]        RingPlot    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    Stroke    outlineStroke    separatorStroke    stroke    boolean    separatorsVisible    visible    RingPlot    that    double    angle    angle1    angle2    depth    ep    innerSeparatorExtension    mep    outerSeparatorExtension    percent    sectionDepth    shadowXOffset    shadowYOffset    value    Object    obj    Paint    outlinePaint    paint    separatorPaint    shadowPaint    long    serialVersionUID        	chart_43580_RingPlot_1_1	491	1	source/org/jfree/chart/plot/RingPlot.java
423	[PATCH]    this.foregroundPaint    =    new    Color(100,    100,    150);	[BUG]    [BUGGY]    this.foregroundPaint    =    new    Color(100,    -100,    150);    [FE]    java.lang.IllegalArgumentException:    Color    parameter    outside    of    expected    range:    Green    testSerialization    [CONTEXT]    public    ArcDialFrame(double    startAngle,    double    extent)    {    this.backgroundPaint    =    Color.gray;    [BUGGY]    this.foregroundPaint    =    new    Color(100,    -100,    150);    this.stroke    =    new    BasicStroke(2.0f);    this.innerRadius    =    0.25;    this.outerRadius    =    0.75;    this.startAngle    =    startAngle;    this.extent    =    extent;    }    [CLASS]        ArcDialFrame    [METHOD]    <init>    [RETURN_TYPE]    ArcDialFrame(double,double)        double    startAngle    double    extent    [VARIABLES]    Stroke    stroke    Paint    backgroundPaint    foregroundPaint    boolean    double    extent    innerRadius    outerRadius    startAngle    long    serialVersionUID        	chart_44740_ArcDialFrame_1_1	130	1	source/org/jfree/chart/plot/dial/ArcDialFrame.java
424	[PATCH]    return    1;	[BUG]    [BUGGY]    return    -1;    [FE]    junit.framework.AssertionFailedError:    expected:<A>    but    was:<C>    testSortByValueAscending    [CONTEXT]    c1    =    (Comparable)    n1;    }    Comparable    c2    =       "FALLBACK   ";    if    (n2    instanceof    Comparable)    {    c2    =    (Comparable)    n2;    }    if    (n2    ==    null)    {    return    -1;    }    if    (n1    ==    null)    {    [BUGGY]    return    -1;    }    if    (this.order.equals(SortOrder.ASCENDING))    {    return    c1.compareTo(c2);    }    else    if    (this.order.equals(SortOrder.DESCENDING))    {    return    c2.compareTo(c1);    }    else    {    throw    new    IllegalArgumentException(   "Unrecognised    sort    order.   ");    }    [CLASS]        KeyedObjectComparator    [METHOD]    compare    [RETURN_TYPE]    int        Object    o1    Object    o2    [VARIABLES]    KeyedObject    ko1    ko2    SortOrder    order    Object    n1    n2    o1    o2    Comparable    c1    c2    boolean    KeyedObjectComparatorType    type        	chart_67778_KeyedObjectComparator_1_1	140	1	source/org/jfree/data/KeyedObjectComparator.java
425	[PATCH]    return    this.year    *    12L    +    this.month;	[BUG]    [BUGGY]    return    this.year    *    0L    +    this.month;    [FE]    junit.framework.AssertionFailedError:    expected:<24001>    but    was:<1>    testGetSerialIndex    [CONTEXT]    public    long    getSerialIndex()    {    [BUGGY]    return    this.year    *    0L    +    this.month;    }    [CLASS]        Month    [METHOD]    getSerialIndex    [RETURN_TYPE]    long        [VARIABLES]    long    firstMillisecond    lastMillisecond    serialVersionUID    int    month    year    boolean        	chart_75883_Month_1_1	300	1	source/org/jfree/data/time/Month.java
426	[PATCH]    return    false;	[BUG]    [BUGGY]    return    true;    [FE]    junit.framework.AssertionFailedError    testEquals    [CONTEXT]    }    if    (this.crosshairDatasetIndex    !=    that.crosshairDatasetIndex)    {    return    false;    }    if    (!ObjectUtilities.equal(this.domainCrosshairColumnKey,    that.domainCrosshairColumnKey))    {    return    false;    }    if    (!ObjectUtilities.equal(this.domainCrosshairRowKey,    that.domainCrosshairRowKey))    {    [BUGGY]    return    true;    }    if    (!PaintUtilities.equal(this.domainCrosshairPaint,    that.domainCrosshairPaint))    {    return    false;    }    if    (!ObjectUtilities.equal(this.domainCrosshairStroke,    that.domainCrosshairStroke))    {    return    false;    }    if    (this.rangeMinorGridlinesVisible    [CLASS]        CategoryPlot    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    Stroke    DEFAULT_CROSSHAIR_STROKE    DEFAULT_GRIDLINE_STROKE    domainCrosshairStroke    domainGridlineStroke    gridStroke    rangeCrosshairStroke    rangeGridlineStroke    rangeMinorGridlineStroke    rangeZeroBaselineStroke    stroke    PlotOrientation    orientation    Comparable    category    columnKey    domainCrosshairColumnKey    domainCrosshairRowKey    key    rowKey    double    adj    anchorValue    anchorY    cursor    factor    java2D    length    lowerPercent    percent    range    rangeCrosshairValue    scaledRange    sourceY    upperPercent    value    xx    y    yy    LegendItemCollection    fixedLegendItems    items    result    SortOrder    columnRenderingOrder    order    rowRenderingOrder    Paint    DEFAULT_CROSSHAIR_PAINT    DEFAULT_GRIDLINE_PAINT    domainCrosshairPaint    domainGridlinePaint    gridPaint    paint    rangeCrosshairPaint    rangeGridlinePaint    rangeMinorGridlinePaint    rangeZeroBaselinePaint    TreeMap    datasetToDomainAxesMap    datasetToRangeAxesMap    long    serialVersionUID    Font    DEFAULT_VALUE_LABEL_FONT    int    axisIndex    c    column    columnCount    count    crosshairDatasetIndex    datasetCount    datasetIndex    i    index    pass    passCount    rangeAxisCount    rangeIndex    result    row    rowCount    weight    x    x0    x1    y    y0    y1    CategoryPlot    that    DatasetRenderingOrder    order    renderingOrder    CategoryAnchor    anchor    domainGridlinePosition    position    ShadowGenerator    generator    shadowGenerator    boolean    DEFAULT_CROSSHAIR_VISIBLE    DEFAULT_DOMAIN_GRIDLINES_VISIBLE    DEFAULT_RANGE_GRIDLINES_VISIBLE    b1    b2    domainCrosshairVisible    domainGridlinesVisible    draw    drawSharedDomainAxis    flag    foundData    hasData    notify    paintLine    pannable    rangeCrosshairLockedOnData    rangeCrosshairVisible    rangeGridlinesVisible    rangeMinorGridlinesVisible    rangePannable    rangeZeroBaselineVisible    removed    selected    useAnchor    visible    RectangleInsets    axisOffset    insets    offset    ObjectList    datasets    domainAxes    domainAxisLocations    rangeAxes    rangeAxisLocations    renderers    ResourceBundle    localizationResources    List    annotations    axisIndices    datasets    indices    mappedAxes    mappedDatasets    result    ticks    Object    obj    AxisSpace    fixedDomainAxisSpace    fixedRangeAxisSpace    space    Map    axisStateMap    backgroundDomainMarkers    backgroundRangeMarkers    foregroundDomainMarkers    foregroundRangeMarkers        	chart_4370_CategoryPlot_1_1	5043	1	source/org/jfree/chart/plot/CategoryPlot.java
427	[PATCH]    h[3]    =    h[2];	[BUG]    [BUGGY]    h[3]    =    h[0];    [FE]    junit.framework.AssertionFailedError:    expected:<45.6>    but    was:<91.2>    testSizingWithWidthConstraint    [CONTEXT]    RectangleConstraint    c3    =    new    RectangleConstraint(0.0,    new    Range(Math.min(w[2],    maxW),    maxW),    LengthConstraintType.RANGE,    0.0,    null,    LengthConstraintType.NONE);    Size2D    size    =    this.rightBlock.arrange(g2,    c3);    w[3]    =    size.width;    h[3]    =    size.height;    }    h[2]    =    Math.max(h[2],    h[3]);    [BUGGY]    h[3]    =    h[0];    if    (this.centerBlock    !=    null)    {    RectangleConstraint    c4    =    new    RectangleConstraint(width    -    w[2]    -    w[3],    null,    LengthConstraintType.FIXED,    0.0,    null,    LengthConstraintType.NONE);    Size2D    size    =    this.centerBlock.arrange(g2,    c4);    w[4]    =    size.width;    h[4]    =    size.height;    }    double    height    =    h[0]    +    h[1]    +    Math.max(h[2],    Math.max(h[3],    h[4]));    [CLASS]        BorderArrangement    [METHOD]    arrangeFN    [RETURN_TYPE]    Size2D        BlockContainer    container    Graphics2D    g2    double    width    [VARIABLES]    Size2D    size    boolean    double[]    h    w    BlockContainer    container    double    height    maxW    width    Block    block    bottomBlock    centerBlock    leftBlock    rightBlock    topBlock    RectangleConstraint    c1    c2    c3    c4    long    serialVersionUID    Graphics2D    g2        	chart_35228_BorderArrangement_1_1	312	1	source/org/jfree/chart/block/BorderArrangement.java
428	[PATCH]    for    (int    s    =    0;    s    <    seriesCount;    s++)    {	[BUG]    [BUGGY]    for    (int    s    =    -1;    s    <    seriesCount;    s++)    {    [FE]    java.lang.IllegalArgumentException:    Index    outside    valid    range.    testDrawWithNullInfo    [CONTEXT]    public    int    indexOf(Comparable    seriesKey)    {    int    seriesCount    =    getSeriesCount();    [BUGGY]    for    (int    s    =    -1;    s    <    seriesCount;    s++)    {    if    (getSeriesKey(s).equals(seriesKey))    {    return    s;    }    }    return    -1;    }    [CLASS]        AbstractSeriesDataset    [METHOD]    indexOf    [RETURN_TYPE]    int        Comparable    seriesKey    [VARIABLES]    Comparable    seriesKey    boolean    long    serialVersionUID    int    s    seriesCount        	chart_68613_AbstractSeriesDataset_1_1	99	1	source/org/jfree/data/general/AbstractSeriesDataset.java
429	[PATCH]    double    sxy    =    sumXY    -    (sumX    *    sumY)    /    n;	[BUG]    [BUGGY]    double    sxy    =    sumXY    +    (sumX    *    sumY)    /    n;    [FE]    junit.framework.AssertionFailedError:    expected:<0.2568093>    but    was:<-184.6637988916135>    testOLSRegression1a    [CONTEXT]    double    x    =    data[i][0];    double    y    =    data[i][1];    sumX    +=    x;    sumY    +=    y;    double    xx    =    x    *    x;    sumXX    +=    xx;    double    xy    =    x    *    y;    sumXY    +=    xy;    }    double    sxx    =    sumXX    -    (sumX    *    sumX)    /    n;    [BUGGY]    double    sxy    =    sumXY    +    (sumX    *    sumY)    /    n;    double    xbar    =    sumX    /    n;    double    ybar    =    sumY    /    n;    double[]    result    =    new    double[2];    result[1]    =    sxy    /    sxx;    result[0]    =    ybar    -    result[1]    *    xbar;    return    result;    }    [CLASS]        Regression    [METHOD]    getOLSRegression    [RETURN_TYPE]    double[]        double[][]    data    [VARIABLES]    boolean    double[]    result    double    sumX    sumXX    sumXY    sumY    sxx    sxy    x    xbar    xx    xy    y    ybar    double[][]    data    int    i    n        	chart_72764_Regression_1_1	86	1	source/org/jfree/data/statistics/Regression.java
430	[PATCH]    drawRotatedString(text,    g2,    x    +    textAdj[0],    y    +    textAdj[1],    angle,	[BUG]    [BUGGY]    drawRotatedString(text,    g2,    x    +    textAdj[0],    y    +    textAdj[-1],    angle,    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testDrawWithNullInfo    [CONTEXT]    public    static    void    drawRotatedString(String    text,    Graphics2D    g2,    float    x,    float    y,    TextAnchor    textAnchor,    double    angle,    float    rotationX,    float    rotationY)    {    if    (text    ==    null    ||    text.equals(   "   "))    {    return;    }    float[]    textAdj    =    deriveTextBoundsAnchorOffsets(g2,    text,    textAnchor);    [BUGGY]    drawRotatedString(text,    g2,    x    +    textAdj[0],    y    +    textAdj[-1],    angle,    rotationX,    rotationY);    }    [CLASS]        TextUtilities    [METHOD]    drawRotatedString    [RETURN_TYPE]    void        String    text    Graphics2D    g2    float    x    float    y    TextAnchor    textAnchor    double    angle    float    rotationX    float    rotationY    [VARIABLES]    TextAnchor    textAnchor    boolean    firstWord    moreInputToProcess    use    useDrawRotatedStringWorkaround    useFontMetricsGetStringBounds    double    angle    String    text    float    rotationX    rotationY    x    y    Graphics2D    g2    float[]    textAdj        	chart_62373_TextUtilities_1_1	527	1	source/org/jfree/chart/text/TextUtilities.java
431	[PATCH]    return    false;	[BUG]    [BUGGY]    return    true;    [FE]    junit.framework.AssertionFailedError    testEquals    [CONTEXT]    if    (!PaintUtilities.equal(this.minorTickPaint,    that.minorTickPaint))    {    return    false;    }    if    (!this.minorTickStroke.equals(that.minorTickStroke))    {    return    false;    }    if    (this.tickLabelsVisible    !=    that.tickLabelsVisible)    {    return    false;    }    if    (this.tickLabelOffset    !=    that.tickLabelOffset)    {    [BUGGY]    return    true;    }    if    (!this.tickLabelFont.equals(that.tickLabelFont))    {    return    false;    }    if    (!PaintUtilities.equal(this.tickLabelPaint,    that.tickLabelPaint))    {    return    false;    }    return    super.equals(obj);    }    [CLASS]        StandardDialScale    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    Stroke    majorTickStroke    minorTickStroke    stroke    boolean    firstLabel    firstTickLabelVisible    tickLabelsVisible    visible    double    angle    extent    increment    length    lower    lowerBound    majorTickIncrement    majorTickLength    minorTickIncrement    minorTickLength    offset    radius    range    startAngle    tickLabelOffset    tickRadius    unit    upper    upperBound    v    value    vv    Object    obj    Paint    majorTickPaint    minorTickPaint    paint    tickLabelPaint    long    serialVersionUID    int    count    i    minorTickCount    Font    font    tickLabelFont    NumberFormat    formatter    tickLabelFormatter    StandardDialScale    that        	chart_46120_StandardDialScale_1_1	927	1	source/org/jfree/chart/plot/dial/StandardDialScale.java
432	[PATCH]    return    false;	[BUG]    [BUGGY]    return    true;    [FE]    junit.framework.AssertionFailedError    testEquals    [CONTEXT]    if    (this.drawCloseTicks    !=    that.drawCloseTicks)    {    return    false;    }    if    (!PaintUtilities.equal(this.openTickPaint,    that.openTickPaint))    {    return    false;    }    if    (!PaintUtilities.equal(this.closeTickPaint,    that.closeTickPaint))    {    return    false;    }    if    (this.tickLength    !=    that.tickLength)    {    [BUGGY]    return    true;    }    if    (!super.equals(obj))    {    return    false;    }    return    true;    }    [CLASS]        HighLowRenderer    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    Object    obj    boolean    draw    drawCloseTicks    drawOpenTicks    selected    Paint    closeTickPaint    itemPaint    openTickPaint    paint    HighLowRenderer    that    double    delta    length    tickLength    x    x0    xx    xx0    y    y0    yClose    yHigh    yLow    yOpen    yy    yy0    yyClose    yyHigh    yyLow    yyOpen    long    serialVersionUID        	chart_56182_HighLowRenderer_1_1	484	1	source/org/jfree/chart/renderer/xy/HighLowRenderer.java
433	[PATCH]    for    (int    c    =    0;    c    <    columnCount;    c++)    {	[BUG]    [BUGGY]    for    (int    c    =    0;    c    <=    columnCount;    c++)    {    [FE]    junit.framework.AssertionFailedError    testDrawWithNullMedian    [CONTEXT]    return    true;    }    int    rowCount    =    dataset.getRowCount();    int    columnCount    =    dataset.getColumnCount();    if    (rowCount    ==    0    ||    columnCount    ==    0)    {    return    true;    }    for    (int    r    =    0;    r    <    rowCount;    r++)    {    [BUGGY]    for    (int    c    =    0;    c    <=    columnCount;    c++)    {    if    (dataset.getValue(r,    c)    !=    null)    {    return    false;    }    }    }    return    true;    }    [CLASS]        DatasetUtilities    [METHOD]    isEmptyOrNull    [RETURN_TYPE]    boolean        CategoryDataset    dataset    [VARIABLES]    boolean    CategoryDataset    dataset    int    c    columnCount    r    rowCount        	chart_69545_DatasetUtilities_1_1	611	1	source/org/jfree/data/general/DatasetUtilities.java
434	[PATCH]    return    false;	[BUG]    [BUGGY]    return    true;    [FE]    junit.framework.AssertionFailedError    testEquals    [CONTEXT]    public    boolean    equals(Object    obj)    {    if    (obj    ==    this)    {    return    true;    }    if    (!(obj    instanceof    StandardPieSectionLabelGenerator))    {    [BUGGY]    return    true;    }    StandardPieSectionLabelGenerator    that    =    (StandardPieSectionLabelGenerator)    obj;    if    (!this.attributedLabels.equals(that.attributedLabels))    {    return    false;    }    if    (!super.equals(obj))    {    return    false;    }    return    true;    [CLASS]        StandardPieSectionLabelGenerator    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    ObjectList    attributedLabels    Object    obj    StandardPieSectionLabelGenerator    that    String    DEFAULT_SECTION_LABEL_FORMAT    labelFormat    boolean    long    serialVersionUID        	chart_38878_StandardPieSectionLabelGenerator_1_1	226	1	source/org/jfree/chart/labels/StandardPieSectionLabelGenerator.java
435	[PATCH]    return    false;	[BUG]    [BUGGY]    return    true;    [FE]    junit.framework.AssertionFailedError    testEquals    [CONTEXT]    return    true;    }    if    (!(obj    instanceof    XYDifferenceRenderer))    {    return    false;    }    if    (!super.equals(obj))    {    return    false;    }    XYDifferenceRenderer    that    =    (XYDifferenceRenderer)    obj;    if    (!PaintUtilities.equal(this.positivePaint,    that.positivePaint))    {    [BUGGY]    return    true;    }    if    (!PaintUtilities.equal(this.negativePaint,    that.negativePaint))    {    return    false;    }    if    (this.shapesVisible    !=    that.shapesVisible)    {    return    false;    }    if    (!ShapeUtilities.equal(this.legendLine,    that.legendLine))    {    return    false;    }    [CLASS]        XYDifferenceRenderer    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    Object    obj    XYDifferenceRenderer    that    boolean    b_colinear    b_fastForwardDone    b_impliedZeroSubtrahend    b_intersect    b_minuendAdvanced    b_minuendAtIntersect    b_minuendDone    b_minuendFastForward    b_positive    b_subtrahendAdvanced    b_subtrahendAtIntersect    b_subtrahendDone    b_subtrahendFastForward    b_useMinuend    flag    round    roundXCoordinates    selected    shapes    shapesVisible    x_impliedZeroSubtrahend    x_positive    Shape    l_entityArea    l_shape    legendLine    line    Paint    l_seriesPaint    labelPaint    negativePaint    paint    positivePaint    long    serialVersionUID        	chart_60485_XYDifferenceRenderer_1_1	1166	1	source/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java
436	[PATCH]    if    (this.labelTextAnchor    !=    that.labelTextAnchor)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError    testSerialization    [CONTEXT]    }    if    (!ObjectUtilities.equal(this.labelFont,    that.labelFont))    {    return    false;    }    if    (!PaintUtilities.equal(this.labelPaint,    that.labelPaint))    {    return    false;    }    if    (this.labelAnchor    !=    that.labelAnchor)    {    return    false;    }    [BUGGY]    if    (true)    {    return    false;    }    if    (!ObjectUtilities.equal(this.labelOffset,    that.labelOffset))    {    return    false;    }    if    (!this.labelOffsetType.equals(that.labelOffsetType))    {    return    false;    }    return    true;    }    [CLASS]        Marker    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    Stroke    outlineStroke    stroke    TextAnchor    anchor    labelTextAnchor    LengthAdjustmentType    adj    labelOffsetType    RectangleAnchor    anchor    labelAnchor    Paint    labelPaint    outlinePaint    paint    String    label    Marker    that    float    alpha    long    serialVersionUID    Font    font    labelFont    boolean    EventListenerList    listenerList    RectangleInsets    labelOffset    offset    Object    obj        	chart_10790_Marker_1_1	623	1	source/org/jfree/chart/plot/Marker.java
437	[PATCH]    if    (this.legendItemToolTipGenerator    !=    null)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError    testDrawWithNullInfo    [CONTEXT]        if    (!isSeriesVisible(series)    ||    !isSeriesVisibleInLegend(series))    {    return    null;    }    CategoryDataset    dataset    =    p.getDataset(datasetIndex);    String    label    =    this.legendItemLabelGenerator.generateLabel(dataset,    series);    String    description    =    label;    String    toolTipText    =    null;    [BUGGY]    if    (true)    {    toolTipText    =    this.legendItemToolTipGenerator.generateLabel(    dataset,    series);    }    String    urlText    =    null;    if    (this.legendItemURLGenerator    !=    null)    {    urlText    =    this.legendItemURLGenerator.generateLabel(dataset,    series);    }    Shape    shape    =    lookupLegendShape(series);    Paint    paint    =    lookupSeriesPaint(series);    [CLASS]        AbstractCategoryItemRenderer    [METHOD]    getLegendItem    [RETURN_TYPE]    LegendItem        int    datasetIndex    int    series    [VARIABLES]    Stroke    outlineStroke    Shape    shape    CategoryURLGenerator    baseURLGenerator    generator    CategoryItemLabelGenerator    baseItemLabelGenerator    generator    String    description    label    toolTipText    urlText    Paint    labelPaint    outlinePaint    paint    long    serialVersionUID    CategoryPlot    p    plot    int    column    columnCount    columnIndex    datasetIndex    row    rowCount    s    series    seriesCount    visibleSeriesCount    boolean    LegendItem    item    CategorySeriesLabelGenerator    generator    legendItemLabelGenerator    legendItemToolTipGenerator    legendItemURLGenerator    CategoryToolTipGenerator    baseToolTipGenerator    generator    result    CategoryDataset    dataset    ObjectList    itemLabelGeneratorList    toolTipGeneratorList    urlGeneratorList    List    backgroundAnnotations    foregroundAnnotations    visibleSeriesKeys        	chart_24236_AbstractCategoryItemRenderer_1_1	1434	1	source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java
438	[PATCH]    if    (this.fixedDomainAxisSpace    !=    null)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError    test2275695    [CONTEXT]    AxisSpace    space)    {    if    (space    ==    null)    {    space    =    new    AxisSpace();    }            [BUGGY]    if    (true)    {    if    (this.orientation    ==    PlotOrientation.HORIZONTAL)    {    space.ensureAtLeast(    this.fixedDomainAxisSpace.getLeft(),    RectangleEdge.LEFT);    space.ensureAtLeast(this.fixedDomainAxisSpace.getRight(),    RectangleEdge.RIGHT);    }    else    if    (this.orientation    ==    PlotOrientation.VERTICAL)    {    space.ensureAtLeast(this.fixedDomainAxisSpace.getTop(),    RectangleEdge.TOP);    space.ensureAtLeast(this.fixedDomainAxisSpace.getBottom(),    [CLASS]        CategoryPlot    [METHOD]    calculateDomainAxisSpace    [RETURN_TYPE]    AxisSpace        Graphics2D    g2    Rectangle2D    plotArea    AxisSpace    space    [VARIABLES]    PlotOrientation    orientation    Comparable    domainCrosshairColumnKey    domainCrosshairRowKey    key    long    serialVersionUID    Font    DEFAULT_VALUE_LABEL_FONT    CategoryAnchor    domainGridlinePosition    position    ShadowGenerator    generator    shadowGenerator    List    annotations    axisIndices    indices    AxisSpace    fixedDomainAxisSpace    fixedRangeAxisSpace    space    Axis    xAxis    Stroke    DEFAULT_CROSSHAIR_STROKE    DEFAULT_GRIDLINE_STROKE    domainCrosshairStroke    domainGridlineStroke    rangeCrosshairStroke    rangeGridlineStroke    rangeMinorGridlineStroke    rangeZeroBaselineStroke    stroke    double    anchorValue    java2D    percent    range    rangeCrosshairValue    scaledRange    value    LegendItemCollection    fixedLegendItems    items    result    Rectangle2D    plotArea    SortOrder    columnRenderingOrder    order    rowRenderingOrder    Paint    DEFAULT_CROSSHAIR_PAINT    DEFAULT_GRIDLINE_PAINT    domainCrosshairPaint    domainGridlinePaint    paint    rangeCrosshairPaint    rangeGridlinePaint    rangeMinorGridlinePaint    rangeZeroBaselinePaint    TreeMap    datasetToDomainAxesMap    datasetToRangeAxesMap    int    axisIndex    count    crosshairDatasetIndex    datasetIndex    i    index    result    weight    x    y    Graphics2D    g2    DatasetRenderingOrder    order    renderingOrder    boolean    DEFAULT_CROSSHAIR_VISIBLE    DEFAULT_DOMAIN_GRIDLINES_VISIBLE    DEFAULT_RANGE_GRIDLINES_VISIBLE    domainCrosshairVisible    domainGridlinesVisible    drawSharedDomainAxis    flag    notify    rangeCrosshairLockedOnData    rangeCrosshairVisible    rangeGridlinesVisible    rangeMinorGridlinesVisible    rangePannable    rangeZeroBaselineVisible    removed    visible    RectangleInsets    axisOffset    offset    ObjectList    datasets    domainAxes    domainAxisLocations    rangeAxes    rangeAxisLocations    renderers    ResourceBundle    localizationResources    Map    backgroundDomainMarkers    backgroundRangeMarkers    foregroundDomainMarkers    foregroundRangeMarkers    RectangleEdge    domainEdge    edge        	chart_3657_CategoryPlot_1_1	3449	1	source/org/jfree/chart/plot/CategoryPlot.java
439	[PATCH]    this.data.add(-index    -    1,    item);	[BUG]    [BUGGY]    this.data.add(-index    %    1,    item);    [FE]    junit.framework.AssertionFailedError:    expected:<1.1>    but    was:<-1.1>    testGetMinY    [CONTEXT]    if    (item.getPeriod().compareTo(last)    >    0)    {    this.data.add(item);    added    =    true;    }    else    {    int    index    =    Collections.binarySearch(this.data,    item);    if    (index    <    0)    {    [BUGGY]    this.data.add(-index    %    1,    item);    added    =    true;    }    else    {    StringBuffer    b    =    new    StringBuffer();    b.append(   "You    are    attempting    to    add    an    observation    for       ");    b.append(   "the    time    period       ");    b.append(item.getPeriod().toString());    b.append(   "    but    the    series    already    contains    an    observation   ");    b.append(   "    for    that    time    period.    Duplicates    are    not       ");    b.append(   "permitted.Try    using    the    addOrUpdate()    method.   ");    [CLASS]        TimeSeries    [METHOD]    add    [RETURN_TYPE]    void        TimeSeriesDataItem    item    boolean    notify    [VARIABLES]    StringBuffer    b    boolean    added    notify    double    maxY    minY    TimeSeriesDataItem    d    item    Class    c    timePeriodClass    List    data    String    DEFAULT_DOMAIN_DESCRIPTION    DEFAULT_RANGE_DESCRIPTION    description    domain    old    range    RegularTimePeriod    last    long    maximumItemAge    periods    serialVersionUID    int    count    i    index    maximum    maximumItemCount        	chart_76690_TimeSeries_1_1	611	1	source/org/jfree/data/time/TimeSeries.java
440	[PATCH]    if    (!this.domainAxisLocations.equals(that.domainAxisLocations))    {	[BUG]    [BUGGY]    if    (!false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<org.jfree.chart.JFreeChart@340c5fb6>    but    was:<org.jfree.chart.JFreeChart@69f9b561>    testSerialization4    [CONTEXT]    XYPlot    that    =    (XYPlot)    obj;    if    (this.weight    !=    that.weight)    {    return    false;    }    if    (this.orientation    !=    that.orientation)    {    return    false;    }    if    (!this.domainAxes.equals(that.domainAxes))    {    return    false;    }    [BUGGY]    if    (!false)    {    return    false;    }    if    (this.rangeCrosshairLockedOnData    !=    that.rangeCrosshairLockedOnData)    {    return    false;    }    if    (this.domainGridlinesVisible    !=    that.domainGridlinesVisible)    {    return    false;    }    if    (this.rangeGridlinesVisible    !=    that.rangeGridlinesVisible)    {    [CLASS]        XYPlot    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    Stroke    DEFAULT_CROSSHAIR_STROKE    DEFAULT_GRIDLINE_STROKE    domainCrosshairStroke    domainGridlineStroke    domainMinorGridlineStroke    domainZeroBaselineStroke    gridStroke    rangeCrosshairStroke    rangeGridlineStroke    rangeMinorGridlineStroke    rangeZeroBaselineStroke    stroke    PlotOrientation    orient    orientation    double    anchorX    anchorY    current    cursor    domainCrosshairValue    end    factor    hvalue    lowerPercent    percent    previous    rangeCrosshairValue    sourceX    sourceY    upperPercent    value    vvalue    x    xmax    xmin    xx    xxmax    xxmin    y    ymax    ymin    yy    yymax    yymin    LegendItemCollection    fixedLegendItems    items    result    Paint    DEFAULT_CROSSHAIR_PAINT    DEFAULT_GRIDLINE_PAINT    bandPaint    domainCrosshairPaint    domainGridlinePaint    domainMinorGridlinePaint    domainTickBandPaint    domainZeroBaselinePaint    gridPaint    paint    rangeCrosshairPaint    rangeGridlinePaint    rangeMinorGridlinePaint    rangeTickBandPaint    rangeZeroBaselinePaint    long    serialVersionUID    int    axisIndex    count    datasetIndex    domainAxisCount    domainIndex    firstItem    i    index    item    lastItem    pass    passCount    rangeAxisCount    rangeIndex    rendererCount    result    series    seriesCount    upper    weight    x    x0    x1    xAxisIndex    y    y0    y1    yAxisIndex    DatasetRenderingOrder    datasetRenderingOrder    order    ShadowGenerator    generator    shadowGenerator    boolean    DEFAULT_CROSSHAIR_VISIBLE    b1    b2    domainCrosshairLockedOnData    domainCrosshairVisible    domainGridlinesVisible    domainMinorGridlinesVisible    domainPannable    domainZeroBaselineVisible    fillBand    flag    foundData    isDomainAxis    notify    paintLine    pannable    rangeCrosshairLockedOnData    rangeCrosshairVisible    rangeGridlinesVisible    rangeMinorGridlinesVisible    rangePannable    rangeZeroBaselineVisible    removed    selected    somethingToDraw    useAnchor    visible    Paint[]    quadrantPaint    XYPlot    that    Point2D    anchor    origin    quadrantOrigin    source    RectangleInsets    axisOffset    insets    offset    ObjectList    datasets    domainAxes    domainAxisLocations    rangeAxes    rangeAxisLocations    renderers    ResourceBundle    localizationResources    List    annotations    axisIndices    includedAnnotations    indices    mappedAxes    mappedDatasets    result    ticks    Object    obj    AxisSpace    fixedDomainAxisSpace    fixedRangeAxisSpace    space    SeriesRenderingOrder    order    seriesOrder    seriesRenderingOrder    Map    axisStateMap    backgroundDomainMarkers    backgroundRangeMarkers    datasetToDomainAxesMap    datasetToRangeAxesMap    foregroundDomainMarkers    foregroundRangeMarkers        	chart_6256_XYPlot_1_1	5446	1	source/org/jfree/chart/plot/XYPlot.java
441	[PATCH]    y2    =    y2    +    (maxX    -    x2)    *    dy    /    dx;	[BUG]    [BUGGY]    y2    =    y2    %    ((maxX    -    x2)    *    dy    /    dx);    [FE]    junit.framework.AssertionFailedError    testClipLine    [CONTEXT]    else    if    (f2    !=    0)    {            if    ((f2    &    Rectangle2D.OUT_LEFT)    ==    Rectangle2D.OUT_LEFT    &&    dx    !=    0.0)    {    y2    =    y2    +    (minX    -    x2)    *    dy    /    dx;    x2    =    minX;    }    else    if    ((f2    &    Rectangle2D.OUT_RIGHT)    ==    Rectangle2D.OUT_RIGHT    &&    dx    !=    0.0)    {    [BUGGY]    y2    =    y2    %    ((maxX    -    x2)    *    dy    /    dx);    x2    =    maxX;    }    else    if    ((f2    &    Rectangle2D.OUT_BOTTOM)    ==    Rectangle2D.OUT_BOTTOM    &&    dy    !=    0.0)    {    x2    =    x2    +    (maxY    -    y2)    *    dx    /    dy;    y2    =    maxY;    }    else    if    ((f2    &    Rectangle2D.OUT_TOP)    ==    Rectangle2D.OUT_TOP    &&    dy    !=    0.0)    {    x2    =    x2    +    (minY    -    y2)    *    dx    /    dy;    [CLASS]        LineUtilities    [METHOD]    clipLine    [RETURN_TYPE]    boolean        Line2D    line    Rectangle2D    rect    [VARIABLES]    boolean    double    dx    dy    maxX    maxY    minX    minY    x1    x2    y1    y2    Rectangle2D    rect    Line2D    line    int    f1    f2        	chart_65291_LineUtilities_1_1	120	1	source/org/jfree/chart/util/LineUtilities.java
442	[PATCH]    final    int    index    =    this.lines.size()    -    1;	[BUG]    [BUGGY]    final    int    index    =    this.lines.size()    -    -1;    [FE]    java.lang.IndexOutOfBoundsException:    Index:    2,    Size:    1    testDrawWithNullInfo2    [CONTEXT]    public    TextLine    getLastLine()    {    TextLine    last    =    null;    [BUGGY]    final    int    index    =    this.lines.size()    -    -1;    if    (index    >=    0)    {    last    =    (TextLine)    this.lines.get(index);    }    return    last;    }    [CLASS]        TextBlock    [METHOD]    getLastLine    [RETURN_TYPE]    TextLine        [VARIABLES]    List    lines    boolean    TextLine    last    long    serialVersionUID    HorizontalAlignment    alignment    lineAlignment    int    index        	chart_6981_TextBlock_1_1	138	1	source/org/jfree/chart/text/TextBlock.java
443	[PATCH]    boolean    firstParameter    =    url.indexOf(   "?   ")    ==    -1;	[BUG]    [BUGGY]    boolean    firstParameter    =    url.indexOf(   "?   ")    ==    0;    [FE]    junit.framework.ComparisonFailure:    expected:<index.html[?]series=R1&amp;catego...>    but    was:<index.html[&amp;]series=R1&amp;catego...>    testGenerateURL    [CONTEXT]    public    String    generateURL(CategoryDataset    dataset,    int    series,    int    category)    {    String    url    =    this.prefix;    Comparable    seriesKey    =    dataset.getRowKey(series);    Comparable    categoryKey    =    dataset.getColumnKey(category);    [BUGGY]    boolean    firstParameter    =    url.indexOf(   "?   ")    ==    0;    url    +=    firstParameter    ?       "?   "    :       "&amp;   ";    url    +=    this.seriesParameterName    +       "=   ";    String    seriesKeyStr    =    null;    try    {    seriesKeyStr    =    URLEncoder.encode(seriesKey.toString(),       "UTF-8   ");    }    catch    (UnsupportedEncodingException    e)    {    seriesKeyStr    =    seriesKey.toString();    }    String    categoryKeyStr    =    null;    [CLASS]        StandardCategoryURLGenerator    [METHOD]    generateURL    [RETURN_TYPE]    String        CategoryDataset    dataset    int    series    int    category    [VARIABLES]    Comparable    categoryKey    seriesKey    boolean    firstParameter    CategoryDataset    dataset    UnsupportedEncodingException    e    String    categoryKeyStr    categoryParameterName    prefix    seriesKeyStr    seriesParameterName    url    long    serialVersionUID    int    category    series        	chart_64259_StandardCategoryURLGenerator_1_1	148	1	source/org/jfree/chart/urls/StandardCategoryURLGenerator.java
444	[PATCH]    if    (this.maxEndIndex    >=    0)    {	[BUG]    [BUGGY]    if    (this.maxEndIndex    >=    -1)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testGetDomainBoundsWithoutInterval    [CONTEXT]    long    minEnd    =    getDataItem(this.minEndIndex).getPeriod().getEnd()    .getTime();    if    (end    <    minEnd)    {    this.minEndIndex    =    index;    }    }    else    {    this.minEndIndex    =    index;    }        [BUGGY]    if    (this.maxEndIndex    >=    -1)    {    long    maxEnd    =    getDataItem(this.maxEndIndex).getPeriod().getEnd()    .getTime();    if    (end    >    maxEnd)    {    this.maxEndIndex    =    index;    }    }    else    {    this.maxEndIndex    =    index;    }        [CLASS]        TimePeriodValues    [METHOD]    updateBounds    [RETURN_TYPE]    void        TimePeriod    period    int    index    [VARIABLES]    List    data    String    DEFAULT_DOMAIN_DESCRIPTION    DEFAULT_RANGE_DESCRIPTION    description    domain    old    range    boolean    long    e    end    maxEnd    maxMiddle    maxStart    middle    minEnd    minMiddle    minStart    s    serialVersionUID    start    int    index    maxEndIndex    maxMiddleIndex    maxStartIndex    minEndIndex    minMiddleIndex    minStartIndex    TimePeriod    period        	chart_78034_TimePeriodValues_1_1	324	1	source/org/jfree/data/time/TimePeriodValues.java
445	[PATCH]    if    (rowIndex    >=    0)    {	[BUG]    [BUGGY]    if    (rowIndex    >    0)    {    [FE]    junit.framework.AssertionFailedError:    expected:<2.6066426411261268E7>    but    was:<1.2589254117941687E7>    testAutoRange1    [CONTEXT]    Comparable    columnKey)    {    if    (rowKey    ==    null)    {    throw    new    IllegalArgumentException(   "Null    'rowKey'    argument.   ");    }    if    (columnKey    ==    null)    {    throw    new    IllegalArgumentException(   "Null    'columnKey'    argument.   ");    }    KeyedObjects    row;    int    rowIndex    =    this.rowKeys.indexOf(rowKey);    [BUGGY]    if    (rowIndex    >    0)    {    row    =    (KeyedObjects)    this.rows.get(rowIndex);    }    else    {    this.rowKeys.add(rowKey);    row    =    new    KeyedObjects();    this.rows.add(row);    }    row.setObject(columnKey,    object);    int    columnIndex    =    this.columnKeys.indexOf(columnKey);    if    (columnIndex    <    0)    {    [CLASS]        KeyedObjects2D    [METHOD]    setObject    [RETURN_TYPE]    void        Object    object    Comparable    rowKey    Comparable    columnKey    [VARIABLES]    Comparable    columnKey    rowKey    boolean    KeyedObjects    row    List    columnKeys    rowKeys    rows    Object    object    long    serialVersionUID    int    columnIndex    rowIndex        	chart_67915_KeyedObjects2D_1_1	278	1	source/org/jfree/data/KeyedObjects2D.java
446	[PATCH]    minimumPercent,    2);	[BUG]    [BUGGY]    minimumPercent,    -2);    [FE]    junit.framework.AssertionFailedError:    expected:<0>    but    was:<1>    testLimitPieDataset    [CONTEXT]    public    static    PieDataset    createConsolidatedPieDataset(PieDataset    source,    Comparable    key,    double    minimumPercent)    {    return    DatasetUtilities.createConsolidatedPieDataset(source,    key,    [BUGGY]    minimumPercent,    -2);    }    [CLASS]        DatasetUtilities    [METHOD]    createConsolidatedPieDataset    [RETURN_TYPE]    PieDataset        PieDataset    source    Comparable    key    double    minimumPercent    [VARIABLES]    Comparable    key    boolean    PieDataset    source    double    minimumPercent        	chart_69349_DatasetUtilities_1_1	289	1	source/org/jfree/data/general/DatasetUtilities.java
447	[PATCH]    else    if    (this.equals(RectangleAnchor.LEFT))    {	[BUG]    [BUGGY]    else    if    (true)    {    [FE]    junit.framework.AssertionFailedError:    expected:<org.jfree.chart.axis.CategoryAxis3D@2d8c326f>    but    was:<org.jfree.chart.axis.CategoryAxis3D@2d8c326f>    testSerialization    [CONTEXT]    RectangleAnchor    result    =    null;    if    (this.equals(RectangleAnchor.CENTER))    {    result    =    RectangleAnchor.CENTER;    }    else    if    (this.equals(RectangleAnchor.TOP))    {    result    =    RectangleAnchor.TOP;    }    else    if    (this.equals(RectangleAnchor.BOTTOM))    {    result    =    RectangleAnchor.BOTTOM;    }    [BUGGY]    else    if    (true)    {    result    =    RectangleAnchor.LEFT;    }    else    if    (this.equals(RectangleAnchor.RIGHT))    {    result    =    RectangleAnchor.RIGHT;    }    else    if    (this.equals(RectangleAnchor.TOP_LEFT))    {    result    =    RectangleAnchor.TOP_LEFT;    }    else    if    (this.equals(RectangleAnchor.TOP_RIGHT))    {    result    =    RectangleAnchor.TOP_RIGHT;    [CLASS]        RectangleAnchor    [METHOD]    readResolve    [RETURN_TYPE]    Object        [VARIABLES]    RectangleAnchor    BOTTOM    BOTTOM_LEFT    BOTTOM_RIGHT    CENTER    LEFT    RIGHT    TOP    TOP_LEFT    TOP_RIGHT    anchor    order    result    String    name    boolean    long    serialVersionUID        	chart_7777_RectangleAnchor_1_1	278	1	source/org/jfree/chart/util/RectangleAnchor.java
448	[PATCH]    if    (this.stepPoint    !=    that.stepPoint)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError:    expected:<org.jfree.chart.renderer.xy.XYStepRenderer@631755f9>    but    was:<org.jfree.chart.renderer.xy.XYStepRenderer@631755f9>    testSerialization    [CONTEXT]    public    boolean    equals(Object    obj)    {    if    (obj    ==    this)    {    return    true;    }    if    (!(obj    instanceof    XYLineAndShapeRenderer))    {    return    false;    }    XYStepRenderer    that    =    (XYStepRenderer)    obj;    [BUGGY]    if    (true)    {    return    false;    }    return    super.equals(obj);    }    [CLASS]        XYStepRenderer    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    Object    obj    XYStepRenderer    that    boolean    double    stepPoint    transX0    transX1    transXs    transY0    transY1    x0    x1    xx    y0    y1    yy    long    serialVersionUID        	chart_61811_XYStepRenderer_1_1	336	1	source/org/jfree/chart/renderer/xy/XYStepRenderer.java
449	[PATCH]    if    (!isSeriesVisible(series)    ||    !isSeriesVisibleInLegend(series))    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    java.lang.NullPointerException    testGetLegendItemSeriesIndex    [CONTEXT]            public    LegendItem    getLegendItem(int    datasetIndex,    int    series)    {    CategoryPlot    cp    =    getPlot();    if    (cp    ==    null)    {    return    null;    }            [BUGGY]    if    (true)    {    return    null;    }    CategoryDataset    dataset    =    cp.getDataset(datasetIndex);    String    label    =    getLegendItemLabelGenerator().generateLabel(dataset,    series);    String    description    =    label;    String    toolTipText    =    null;    if    (getLegendItemToolTipGenerator()    !=    null)    {    toolTipText    =    getLegendItemToolTipGenerator().generateLabel(    [CLASS]    	chart_23507_BarRenderer_1_1	894	1	source/org/jfree/chart/renderer/category/BarRenderer.java
450	[PATCH]    return    (edge    ==    RectangleEdge.LEFT    ||    edge    ==    RectangleEdge.RIGHT);	[BUG]    [BUGGY]    return    (edge    ==    RectangleEdge.LEFT);    [FE]    junit.framework.AssertionFailedError    testJava2DToValue    [CONTEXT]    public    static    boolean    isLeftOrRight(RectangleEdge    edge)    {    [BUGGY]    return    (edge    ==    RectangleEdge.LEFT);    }    [CLASS]        RectangleEdge    [METHOD]    isLeftOrRight    [RETURN_TYPE]    boolean        RectangleEdge    edge    [VARIABLES]    String    name    boolean    long    serialVersionUID    RectangleEdge    BOTTOM    LEFT    RIGHT    TOP    edge    order        	chart_7182_RectangleEdge_1_1	149	1	source/org/jfree/chart/util/RectangleEdge.java
451	[PATCH]    double    sxx    =    sumXX    -    (sumX    *    sumX)    /    n;	[BUG]    [BUGGY]    double    sxx    =    sumXX    /    ((sumX    *    sumX)    /    n);    [FE]    junit.framework.AssertionFailedError:    expected:<0.91045813>    but    was:<1.7359962259199393>    testPowerRegression1b    [CONTEXT]    for    (int    i    =    0;    i    <    n;    i++)    {    double    x    =    Math.log(data.getXValue(series,    i));    double    y    =    Math.log(data.getYValue(series,    i));    sumX    +=    x;    sumY    +=    y;    double    xx    =    x    *    x;    sumXX    +=    xx;    double    xy    =    x    *    y;    sumXY    +=    xy;    }    [BUGGY]    double    sxx    =    sumXX    /    ((sumX    *    sumX)    /    n);    double    sxy    =    sumXY    -    (sumX    *    sumY)    /    n;    double    xbar    =    sumX    /    n;    double    ybar    =    sumY    /    n;    double[]    result    =    new    double[2];    result[1]    =    sxy    /    sxx;    result[0]    =    Math.pow(Math.exp(1.0),    ybar    -    result[1]    *    xbar);    return    result;        [CLASS]        Regression    [METHOD]    getPowerRegression    [RETURN_TYPE]    double[]        XYDataset    data    int    series    [VARIABLES]    boolean    double[]    result    double    sumX    sumXX    sumXY    sumY    sxx    sxy    x    xbar    xx    xy    y    ybar    XYDataset    data    int    i    n    series        	chart_73011_Regression_1_1	216	1	source/org/jfree/data/statistics/Regression.java
452	[PATCH]    if    (polygon.length    %    2    !=    0)    {	[BUG]    [BUGGY]    if    (polygon.length    %    2    !=    -1)    {    [FE]    java.lang.IllegalArgumentException:    The    'polygon'    array    must    contain    an    even    number    of    items.    testSerialization    [CONTEXT]    public    XYPolygonAnnotation(double[]    polygon,    Stroke    stroke,    Paint    outlinePaint,    Paint    fillPaint)    {    super();    if    (polygon    ==    null)    {    throw    new    IllegalArgumentException(   "Null    'polygon'    argument.   ");    }    [BUGGY]    if    (polygon.length    %    2    !=    -1)    {    throw    new    IllegalArgumentException(   "The    'polygon'    array    must       "    +       "contain    an    even    number    of    items.   ");    }    this.polygon    =    (double[])    polygon.clone();    this.stroke    =    stroke;    this.outlinePaint    =    outlinePaint;    this.fillPaint    =    fillPaint;    }    [CLASS]        XYPolygonAnnotation    [METHOD]    <init>    [RETURN_TYPE]    Paint)        double[]    polygon    Stroke    stroke    Paint    outlinePaint    Paint    fillPaint    [VARIABLES]    Stroke    stroke    Paint    fillPaint    outlinePaint    boolean    double[]    polygon    long    serialVersionUID        	chart_28318_XYPolygonAnnotation_1_1	141	1	source/org/jfree/chart/annotations/XYPolygonAnnotation.java
453	[PATCH]    DateTickUnitType.HOUR,    1,    f3));	[BUG]    [BUGGY]    DateTickUnitType.HOUR,    -1,    f3));    [FE]    java.lang.IllegalArgumentException:    Requires    'rollMultiple'    >    0.    testSetMaximumDate    [CONTEXT]    DateTickUnitType.MINUTE,    5,    f3));        units.add(new    DateTickUnit(DateTickUnitType.HOUR,    1,    DateTickUnitType.MINUTE,    5,    f3));    units.add(new    DateTickUnit(DateTickUnitType.HOUR,    2,    DateTickUnitType.MINUTE,    10,    f3));    units.add(new    DateTickUnit(DateTickUnitType.HOUR,    4,    DateTickUnitType.MINUTE,    30,    f3));    units.add(new    DateTickUnit(DateTickUnitType.HOUR,    6,    [BUGGY]    DateTickUnitType.HOUR,    -1,    f3));    units.add(new    DateTickUnit(DateTickUnitType.HOUR,    12,    DateTickUnitType.HOUR,    1,    f4));        units.add(new    DateTickUnit(DateTickUnitType.DAY,    1,    DateTickUnitType.HOUR,    1,    f5));    units.add(new    DateTickUnit(DateTickUnitType.DAY,    2,    DateTickUnitType.HOUR,    1,    f5));    units.add(new    DateTickUnit(DateTickUnitType.DAY,    7,    DateTickUnitType.DAY,    1,    f5));    [CLASS]        DateAxis    DefaultTimeline    [METHOD]    createStandardDateTickUnits    [RETURN_TYPE]    TickUnitSource        TimeZone    zone    Locale    locale    [VARIABLES]    DateTickMarkPosition    position    tickMarkPosition    Locale    locale    DateRange    DEFAULT_DATE_RANGE    r    range    Timeline    DEFAULT_TIMELINE    timeline    TimeZone    timeZone    zone    TickUnits    units    boolean    DateTickUnit    DEFAULT_DATE_TICK_UNIT    tickUnit    unit    double    DEFAULT_AUTO_RANGE_MINIMUM_SIZE_IN_MILLISECONDS    axisMax    axisMin    java2DValue    lower    max    maxX    maxY    min    minX    minY    result    upper    value    DateFormat    dateFormatOverride    f1    f2    f3    f4    f5    f6    f7    formatter    long    from    length    maxMillis    millis    millisecond    minMillis    newMaxMillis    newMinMillis    serialVersionUID    to    value    Date    DEFAULT_ANCHOR_DATE    d0    d1    d2    d3    date    dd    from    lower    maxDate    maximumDate    minDate    mm    oldMax    oldMin    previous    result    standardDate    to    upper        	chart_30462_DateAxis_1_1	1226	1	source/org/jfree/chart/axis/DateAxis.java
454	[PATCH]    if    (!this.tickLabelFont.equals(font))    {	[BUG]    [BUGGY]    if    (!true)    {    [FE]    junit.framework.AssertionFailedError    testEquals    [CONTEXT]    public    void    setTickLabelFont(Font    font)    {    if    (font    ==    null)    {    throw    new    IllegalArgumentException(   "Null    'font'    argument.   ");    }        [BUGGY]    if    (!true)    {    this.tickLabelFont    =    font;    fireChangeEvent();    }    }    [CLASS]        Axis    [METHOD]    setTickLabelFont    [RETURN_TYPE]    void        Font    font    [VARIABLES]    Stroke    DEFAULT_AXIS_LINE_STROKE    DEFAULT_TICK_MARK_STROKE    axisLineStroke    stroke    tickMarkStroke    boolean    DEFAULT_AXIS_VISIBLE    DEFAULT_TICK_LABELS_VISIBLE    DEFAULT_TICK_MARKS_VISIBLE    axisLineVisible    flag    minorTickMarksVisible    notify    tickLabelsVisible    tickMarksVisible    visible    double    angle    fixedDimension    labelAngle    Plot    plot    EventListenerList    listenerList    RectangleInsets    DEFAULT_AXIS_LABEL_INSETS    DEFAULT_TICK_LABEL_INSETS    insets    labelInsets    tickLabelInsets    Paint    DEFAULT_AXIS_LABEL_PAINT    DEFAULT_AXIS_LINE_PAINT    DEFAULT_TICK_LABEL_PAINT    DEFAULT_TICK_MARK_PAINT    axisLinePaint    labelPaint    paint    tickLabelPaint    tickMarkPaint    String    existing    label    labelToolTip    labelURL    text    url    float    DEFAULT_TICK_MARK_INSIDE_LENGTH    DEFAULT_TICK_MARK_OUTSIDE_LENGTH    minorTickMarkInsideLength    minorTickMarkOutsideLength    tickMarkInsideLength    tickMarkOutsideLength    long    serialVersionUID    Font    DEFAULT_AXIS_LABEL_FONT    DEFAULT_TICK_LABEL_FONT    font    labelFont    tickLabelFont        	chart_9333_Axis_1_1	765	1	source/org/jfree/chart/axis/Axis.java
455	[PATCH]    this.labelInfo    =    new    PeriodAxisLabelInfo[2];	[BUG]    [BUGGY]    this.labelInfo    =    new    PeriodAxisLabelInfo[0];    [FE]    java.lang.ArrayIndexOutOfBoundsException:    0    testSerialization    [CONTEXT]    this.locale    =    locale;    this.calendar    =    Calendar.getInstance(timeZone,    locale);    this.first.peg(this.calendar);    this.last.peg(this.calendar);    this.autoRangeTimePeriodClass    =    first.getClass();    this.majorTickTimePeriodClass    =    first.getClass();    this.minorTickMarksVisible    =    false;    this.minorTickTimePeriodClass    =    RegularTimePeriod.downsize(    this.majorTickTimePeriodClass);    setAutoRange(true);    [BUGGY]    this.labelInfo    =    new    PeriodAxisLabelInfo[0];    this.labelInfo[0]    =    new    PeriodAxisLabelInfo(Month.class,    new    SimpleDateFormat(   "MMM   ",    locale));    this.labelInfo[1]    =    new    PeriodAxisLabelInfo(Year.class,    new    SimpleDateFormat(   "yyyy   ",    locale));    }    [CLASS]        PeriodAxis    [METHOD]    <init>    [RETURN_TYPE]    Locale)        String    label    RegularTimePeriod    first    RegularTimePeriod    last    TimeZone    timeZone    Locale    locale    [VARIABLES]    Locale    locale    TimeZone    timeZone    Stroke    minorTickMarkStroke    boolean    minorTickMarksVisible    PeriodAxisLabelInfo[]    labelInfo    Calendar    calendar    Class    autoRangeTimePeriodClass    majorTickTimePeriodClass    minorTickTimePeriodClass    RegularTimePeriod    first    last    Paint    minorTickMarkPaint    String    label    float    minorTickMarkInsideLength    minorTickMarkOutsideLength    long    serialVersionUID        	chart_21532_PeriodAxis_1_1	238	1	source/org/jfree/chart/axis/PeriodAxis.java
456	[PATCH]    double    step    =    (end    -    start)    /    (samples    -    1);	[BUG]    [BUGGY]    double    step    =    (end    -    start)    %    (samples    -    1);    [FE]    junit.framework.AssertionFailedError:    expected:<1.0>    but    was:<0.0>    testSampleFunction2D    [CONTEXT]    throw    new    IllegalArgumentException(   "Null    'seriesKey'    argument.   ");    }    if    (start    >=    end)    {    throw    new    IllegalArgumentException(   "Requires    'start'    <    'end'.   ");    }    if    (samples    <    2)    {    throw    new    IllegalArgumentException(   "Requires    'samples'    >    1   ");    }    XYSeries    series    =    new    XYSeries(seriesKey);    [BUGGY]    double    step    =    (end    -    start)    %    (samples    -    1);    for    (int    i    =    0;    i    <    samples;    i++)    {    double    x    =    start    +    (step    *    i);    series.add(x,    f.getValue(x));    }    return    series;    }    [CLASS]        DatasetUtilities    [METHOD]    sampleFunction2DToSeries    [RETURN_TYPE]    XYSeries        Function2D    f    double    start    double    end    int    samples    Comparable    seriesKey    [VARIABLES]    XYSeries    series    Comparable    seriesKey    boolean    double    end    start    step    x    Function2D    f    int    i    samples        	chart_69481_DatasetUtilities_1_1	549	1	source/org/jfree/data/general/DatasetUtilities.java
457	[PATCH]    return    false;	[BUG]    [BUGGY]    return    true;    [FE]    junit.framework.AssertionFailedError    testEquals    [CONTEXT]    public    boolean    equals(Object    obj)    {    if    (obj    ==    this)    {    return    true;    }    if    (!(obj    instanceof    StandardBarPainter))    {    [BUGGY]    return    true;    }    return    true;    }    [CLASS]        StandardBarPainter    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    boolean    Object    obj        	chart_52697_StandardBarPainter_1_1	210	1	source/org/jfree/chart/renderer/category/StandardBarPainter.java
458	[PATCH]    if    (this.datasets.size()    >    index)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<2>    but    was:<0>    testGetLegendItems    [CONTEXT]    public    XYDataset    getDataset(int    index)    {    XYDataset    result    =    null;    [BUGGY]    if    (false)    {    result    =    (XYDataset)    this.datasets.get(index);    }    return    result;    }    [CLASS]        XYPlot    [METHOD]    getDataset    [RETURN_TYPE]    XYDataset        int    index    [VARIABLES]    Stroke    DEFAULT_CROSSHAIR_STROKE    DEFAULT_GRIDLINE_STROKE    domainCrosshairStroke    domainGridlineStroke    domainMinorGridlineStroke    domainZeroBaselineStroke    rangeCrosshairStroke    rangeGridlineStroke    rangeMinorGridlineStroke    rangeZeroBaselineStroke    PlotOrientation    orientation    double    domainCrosshairValue    rangeCrosshairValue    LegendItemCollection    fixedLegendItems    Paint    DEFAULT_CROSSHAIR_PAINT    DEFAULT_GRIDLINE_PAINT    domainCrosshairPaint    domainGridlinePaint    domainMinorGridlinePaint    domainTickBandPaint    domainZeroBaselinePaint    rangeCrosshairPaint    rangeGridlinePaint    rangeMinorGridlinePaint    rangeTickBandPaint    rangeZeroBaselinePaint    long    serialVersionUID    int    i    index    weight    DatasetRenderingOrder    datasetRenderingOrder    ShadowGenerator    shadowGenerator    boolean    DEFAULT_CROSSHAIR_VISIBLE    domainCrosshairLockedOnData    domainCrosshairVisible    domainGridlinesVisible    domainMinorGridlinesVisible    domainPannable    domainZeroBaselineVisible    notify    rangeCrosshairLockedOnData    rangeCrosshairVisible    rangeGridlinesVisible    rangeMinorGridlinesVisible    rangePannable    rangeZeroBaselineVisible    Paint[]    quadrantPaint    Point2D    quadrantOrigin    RectangleInsets    axisOffset    offset    ObjectList    datasets    domainAxes    domainAxisLocations    rangeAxes    rangeAxisLocations    renderers    ResourceBundle    localizationResources    List    annotations    XYDataset    result    AxisSpace    fixedDomainAxisSpace    fixedRangeAxisSpace    SeriesRenderingOrder    seriesRenderingOrder    Map    backgroundDomainMarkers    backgroundRangeMarkers    datasetToDomainAxesMap    datasetToRangeAxesMap    foregroundDomainMarkers    foregroundRangeMarkers        	chart_4846_XYPlot_1_1	1400	1	source/org/jfree/chart/plot/XYPlot.java
459	[PATCH]    x1    =    x1    +    (minY    -    y1)    *    dx    /    dy;	[BUG]    [BUGGY]    x1    =    x1    +    (minY    -    y1)    *    dx    +    dy;    [FE]    junit.framework.AssertionFailedError    testClipLine    [CONTEXT]    y1    =    y1    +    (maxX    -    x1)    *    dy    /    dx;    x1    =    maxX;    }    else    if    ((f1    &    Rectangle2D.OUT_BOTTOM)    ==    Rectangle2D.OUT_BOTTOM    &&    dy    !=    0.0)    {    x1    =    x1    +    (maxY    -    y1)    *    dx    /    dy;    y1    =    maxY;    }    else    if    ((f1    &    Rectangle2D.OUT_TOP)    ==    Rectangle2D.OUT_TOP    &&    dy    !=    0.0)    {    [BUGGY]    x1    =    x1    +    (minY    -    y1)    *    dx    +    dy;    y1    =    minY;    }    f1    =    rect.outcode(x1,    y1);    }    else    if    (f2    !=    0)    {            if    ((f2    &    Rectangle2D.OUT_LEFT)    ==    Rectangle2D.OUT_LEFT    &&    dx    !=    0.0)    {    y2    =    y2    +    (minX    -    x2)    *    dy    /    dx;    [CLASS]        LineUtilities    [METHOD]    clipLine    [RETURN_TYPE]    boolean        Line2D    line    Rectangle2D    rect    [VARIABLES]    boolean    double    dx    dy    maxX    maxY    minX    minY    x1    x2    y1    y2    Rectangle2D    rect    Line2D    line    int    f1    f2        	chart_65219_LineUtilities_1_1	105	1	source/org/jfree/chart/util/LineUtilities.java
460	[PATCH]    if    (segment    !=    null)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError    testNullValueInDataset    [CONTEXT]    outlinePaint,    outlineStroke,    false,    true);    }    cat++;    }        cat    =    0;    iterator    =    arcList.iterator();    while    (iterator.hasNext())    {    Arc2D    segment    =    (Arc2D)    iterator.next();    [BUGGY]    if    (true)    {    Comparable    key    =    getSectionKey(cat);    paint    =    lookupSectionPaint(key,    false);    outlinePaint    =    lookupSectionOutlinePaint(key,    false);    outlineStroke    =    lookupSectionOutlineStroke(key,    false);    drawSide(g2,    pieArea,    segment,    front,    back,    paint,    outlinePaint,    outlineStroke,    true,    false);    }    cat++;    }        [CLASS]        PiePlot3D    [METHOD]    draw    [RETURN_TYPE]    void        Graphics2D    g2    Rectangle2D    plotArea    Point2D    anchor    PlotState    parentState    PlotRenderingInfo    info    [VARIABLES]    Comparable    currentKey    key    Shape    oldClip    savedClip    ArrayList    arcList    String    text    tip    url    Arc2D    segment    upperArc    long    serialVersionUID    Font    sfont    Ellipse2D    bottom    top    Number    dataValue    Point2D    anchor    p1    FontMetrics    fm    Iterator    iterator    List    keys    sectionKeys    Polygon    polygon    PiePlotState    state    PieSectionEntity    entity    Stroke    outlineStroke    Composite    originalComposite    PlotRenderingInfo    info    double    angle1    angle2    arcX    arcY    depthFactor    direction    factor    gapHorizontal    gapPercent    gapVertical    h1    hGap    hh    igx1    igx2    igy1    igy2    labelPercent    linkH    linkW    linkX    linkY    maximumExplodePercent    min    percent    runningTotal    startAngle    totalValue    v1    vGap    value    vv    Rectangle2D    adjustedPlotArea    explodeArea    linkArea    linkAreaXX    lower    originalPlotArea    pieArea    plotArea    upper    int[]    xs    ys    Paint    outlinePaint    paint    Double    arc    int    cat    categoryCount    categoryIndex    depth    sectionIndex    stringWidth    Graphics2D    g2    Area    a    b    back    front    pie    boolean    darker    darkerSides    PieToolTipGenerator    tipster    PieDataset    dataset    EntityCollection    entities    RectangleInsets    insets    PlotState    parentState        	chart_43045_PiePlot3D_1_1	517	1	source/org/jfree/chart/plot/PiePlot3D.java
461	[PATCH]    for    (int    i    =    0;    i    <    count;    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    0;    i    <=    count;    i++)    {    [FE]    junit.framework.AssertionFailedError:    expected:<org.jfree.chart.JFreeChart@538b3c88>    but    was:<null>    testSerialization3    [CONTEXT]    private    void    readObject(ObjectInputStream    stream)    throws    IOException,    ClassNotFoundException    {    stream.defaultReadObject();    int    count    =    stream.readInt();    [BUGGY]    for    (int    i    =    0;    i    <=    count;    i++)    {    final    int    index    =    stream.readInt();    if    (index    !=    -1)    {    setPaint(index,    SerialUtilities.readPaint(stream));    }    }    }    [CLASS]        PaintList    [METHOD]    readObject    [RETURN_TYPE]    void        ObjectInputStream    stream    [VARIABLES]    boolean    int    count    i    index    ObjectInputStream    stream        	chart_12117_PaintList_1_1	171	1	source/org/jfree/chart/util/PaintList.java
462	[PATCH]    if    (!this.blocks.equals(that.blocks))    {	[BUG]    [BUGGY]    if    (!true)    {    [FE]    junit.framework.AssertionFailedError    testEquals    [CONTEXT]    if    (!(obj    instanceof    BlockContainer))    {    return    false;    }    if    (!super.equals(obj))    {    return    false;    }    BlockContainer    that    =    (BlockContainer)    obj;    if    (!this.arrangement.equals(that.arrangement))    {    return    false;    }    [BUGGY]    if    (!true)    {    return    false;    }    return    true;    }    [CLASS]        BlockContainer    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    List    blocks    Object    obj    boolean    long    serialVersionUID    Arrangement    arrangement    BlockContainer    that        	chart_7836_BlockContainer_1_1	263	1	source/org/jfree/chart/block/BlockContainer.java
463	[PATCH]    if    ((series    <    0)    ||    (series    >=    getSeriesCount()))    {	[BUG]    [BUGGY]    if    ((series    <=    0)    ||    (series    >=    getSeriesCount()))    {    [FE]    java.lang.IllegalArgumentException:    Series    index    out    of    bounds.    testRemoveSeries    [CONTEXT]    public    void    removeSeries(int    series)    {    [BUGGY]    if    ((series    <=    0)    ||    (series    >=    getSeriesCount()))    {    throw    new    IllegalArgumentException(   "Series    index    out    of    bounds.   ");    }        XYSeries    ts    =    (XYSeries)    this.data.get(series);    ts.removeChangeListener(this);    this.data.remove(series);    fireDatasetChanged(new    DatasetChangeInfo());        }    [CLASS]        XYSeriesCollection    [METHOD]    removeSeries    [RETURN_TYPE]    void        int    series    [VARIABLES]    XYSeries    ts    List    data    boolean    IntervalXYDelegate    intervalDelegate    long    serialVersionUID    int    series        	chart_80749_XYSeriesCollection_1_1	164	1	source/org/jfree/data/xy/XYSeriesCollection.java
464	[PATCH]    if    (keyIndex    >=    0)    {	[BUG]    [BUGGY]    if    (keyIndex    ==    0)    {    [FE]    junit.framework.AssertionFailedError:    expected:<AAA>    but    was:<null>    testSetObject    [CONTEXT]    public    void    setObject(Comparable    key,    Object    object)    {    int    keyIndex    =    getIndex(key);    [BUGGY]    if    (keyIndex    ==    0)    {    KeyedObject    ko    =    (KeyedObject)    this.data.get(keyIndex);    ko.setObject(object);    }    else    {    KeyedObject    ko    =    new    KeyedObject(key,    object);    this.data.add(ko);    }    }    [CLASS]        KeyedObjects    [METHOD]    setObject    [RETURN_TYPE]    void        Comparable    key    Object    object    [VARIABLES]    KeyedObject    ko    Comparable    key    boolean    List    data    result    Object    object    long    serialVersionUID    int    keyIndex        	chart_67813_KeyedObjects_1_1	206	1	source/org/jfree/data/KeyedObjects.java
465	[PATCH]    if    (!info.periodClass.equals(this.periodClass))    {	[BUG]    [BUGGY]    if    (!false)    {    [FE]    junit.framework.AssertionFailedError    testSerialization    [CONTEXT]    public    boolean    equals(Object    obj)    {    if    (obj    ==    this)    {    return    true;    }    if    (obj    instanceof    PeriodAxisLabelInfo)    {    PeriodAxisLabelInfo    info    =    (PeriodAxisLabelInfo)    obj;    [BUGGY]    if    (!false)    {    return    false;    }    if    (!info.dateFormat.equals(this.dateFormat))    {    return    false;    }    if    (!info.padding.equals(this.padding))    {    return    false;    }    if    (!info.labelFont.equals(this.labelFont))    {    return    false;    [CLASS]        PeriodAxisLabelInfo    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    Stroke    DEFAULT_DIVIDER_STROKE    dividerStroke    boolean    drawDividers    PeriodAxisLabelInfo    info    DateFormat    dateFormat    RectangleInsets    DEFAULT_INSETS    padding    Class    periodClass    Object    obj    Paint    DEFAULT_DIVIDER_PAINT    DEFAULT_LABEL_PAINT    dividerPaint    labelPaint    long    serialVersionUID    Font    DEFAULT_FONT    labelFont        	chart_25962_PeriodAxisLabelInfo_1_1	303	1	source/org/jfree/chart/axis/PeriodAxisLabelInfo.java
466	[PATCH]    return    false;	[BUG]    [BUGGY]    return    true;    [FE]    junit.framework.AssertionFailedError    testEquals    [CONTEXT]    return    true;    }    if    (!(obj    instanceof    LogAxis))    {    return    false;    }    LogAxis    that    =    (LogAxis)    obj;    if    (this.base    !=    that.base)    {    return    false;    }    if    (this.smallestValue    !=    that.smallestValue)    {    [BUGGY]    return    true;    }    return    super.equals(obj);    }    [CLASS]        LogAxis    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    Object    obj    LogAxis    that    boolean    double    adj    axisMax    axisMin    base    baseLog    current    cursor    end    expand    fixedAutoRange    guess    java2DValue    l    length    log    log1    log2    logA    logB    logLower    logRange    logUpper    lower    lowerPercent    max    min    minRange    minorV    next    one    percent    range    result    smallestValue    start    tickLabelHeight    tickLabelWidth    unit1Width    unit2Height    unit2Width    unitHeight    upper    upperPercent    v    value    w1    w2    NumberTickUnit    tickUnit    unit    unit2    NumberFormat    formatter    numberFormatOverride        	chart_31842_LogAxis_1_1	879	1	source/org/jfree/chart/axis/LogAxis.java
467	[PATCH]    double    sumY    =    0;	[BUG]    [BUGGY]    double    sumY    =    -1;    [FE]    junit.framework.AssertionFailedError:    expected:<0.91045813>    but    was:<0.02549209487624623>    testPowerRegression1a    [CONTEXT]    public    static    double[]    getPowerRegression(double[][]    data)    {    int    n    =    data.length;    if    (n    <    2)    {    throw    new    IllegalArgumentException(   "Not    enough    data.   ");    }    double    sumX    =    0;    [BUGGY]    double    sumY    =    -1;    double    sumXX    =    0;    double    sumXY    =    0;    for    (int    i    =    0;    i    <    n;    i++)    {    double    x    =    Math.log(data[i][0]);    double    y    =    Math.log(data[i][1]);    sumX    +=    x;    sumY    +=    y;    double    xx    =    x    *    x;    sumXX    +=    xx;    double    xy    =    x    *    y;    [CLASS]        Regression    [METHOD]    getPowerRegression    [RETURN_TYPE]    double[]        double[][]    data    [VARIABLES]    boolean    double[]    result    double    sumX    sumXX    sumXY    sumY    sxx    sxy    x    xbar    xx    xy    y    ybar    double[][]    data    int    i    n        	chart_72888_Regression_1_1	159	1	source/org/jfree/data/statistics/Regression.java
468	[PATCH]    Object[]    result    =    new    Object[4];	[BUG]    [BUGGY]    Object[]    result    =    new    Object[0];    [FE]    junit.framework.AssertionFailedError    testNullValueInDataset    [CONTEXT]    protected    Object[]    createItemArray(PieDataset    dataset,    Comparable    key)    {    [BUGGY]    Object[]    result    =    new    Object[0];    double    total    =    DatasetUtilities.calculatePieDatasetTotal(dataset);    result[0]    =    key.toString();    Number    value    =    dataset.getValue(key);    if    (value    !=    null)    {    result[1]    =    this.numberFormat.format(value);    }    else    {    result[1]    =       "null   ";    }    double    percent    =    0.0;    [CLASS]        AbstractPieItemLabelGenerator    [METHOD]    createItemArray    [RETURN_TYPE]    Object[]        PieDataset    dataset    Comparable    key    [VARIABLES]    Comparable    key    boolean    Number    value    PieDataset    dataset    double    percent    total    v    String    labelFormat    long    serialVersionUID    Object[]    result    NumberFormat    numberFormat    percentFormat        	chart_38164_AbstractPieItemLabelGenerator_1_1	146	1	source/org/jfree/chart/labels/AbstractPieItemLabelGenerator.java
469	[PATCH]    this.intervalPositionFactor    =    0.5;	[BUG]    [BUGGY]    this.intervalPositionFactor    =    0.0;    [FE]    junit.framework.AssertionFailedError    testFindDomainBounds    [CONTEXT]    public    IntervalXYDelegate(XYDataset    dataset,    boolean    autoWidth)    {    if    (dataset    ==    null)    {    throw    new    IllegalArgumentException(   "Null    'dataset'    argument.   ");    }    this.dataset    =    dataset;    this.autoWidth    =    autoWidth;    [BUGGY]    this.intervalPositionFactor    =    0.0;    this.autoIntervalWidth    =    Double.POSITIVE_INFINITY;    this.fixedIntervalWidth    =    1.0;    }    [CLASS]        IntervalXYDelegate    [METHOD]    <init>    [RETURN_TYPE]    XYDataset,boolean)        XYDataset    dataset    boolean    autoWidth    [VARIABLES]    XYDataset    dataset    boolean    autoWidth    double    autoIntervalWidth    fixedIntervalWidth    intervalPositionFactor    long    serialVersionUID        	chart_79073_IntervalXYDelegate_1_1	138	1	source/org/jfree/data/xy/IntervalXYDelegate.java
470	[PATCH]    return    this.day.getSerialIndex()    *    24L    +    this.hour;	[BUG]    [BUGGY]    return    this.day.getSerialIndex()    *    24L    /    this.hour;    [FE]    junit.framework.AssertionFailedError:    expected:<876625>    but    was:<876624>    testGetSerialIndex    [CONTEXT]    public    long    getSerialIndex()    {    [BUGGY]    return    this.day.getSerialIndex()    *    24L    /    this.hour;    }    [CLASS]        Hour    [METHOD]    getSerialIndex    [RETURN_TYPE]    long        [VARIABLES]    boolean    Day    day    nextDay    prevDay    byte    hour    long    firstMillisecond    lastMillisecond    serialVersionUID    int    FIRST_HOUR_IN_DAY    LAST_HOUR_IN_DAY    day    hour    month    year        	chart_75095_Hour_1_1	307	1	source/org/jfree/data/time/Hour.java
471	[PATCH]    if    (count    >    0)    {	[BUG]    [BUGGY]    if    (count    >=    0)    {    [FE]    java.lang.IndexOutOfBoundsException:    Index:    0,    Size:    0    testHashCode    [CONTEXT]    public    int    hashCode()    {    int    result    =    super.hashCode();            int    count    =    getItemCount();    [BUGGY]    if    (count    >=    0)    {    XYDataItem    item    =    getRawDataItem(0);    result    =    29    *    result    +    item.hashCode();    }    if    (count    >    1)    {    XYDataItem    item    =    getRawDataItem(count    -    1);    result    =    29    *    result    +    item.hashCode();    }    if    (count    >    2)    {    XYDataItem    item    =    getRawDataItem(count    /    2);    result    =    29    *    result    +    item.hashCode();    [CLASS]        XYSeries    [METHOD]    hashCode    [RETURN_TYPE]    int        [VARIABLES]    List    data    boolean    allowDuplicateXValues    autoSort    itemContributesToXBounds    itemContributesToYBounds    iterate    notify    double    a    b    maxX    maxY    minX    minY    oldY    x    y    yy    long    serialVersionUID    int    count    end    i    index    itemCount    maximum    maximumItemCount    remove    result    size    start    XYDataItem    item        	chart_70615_XYSeries_1_1	988	1	source/org/jfree/data/xy/XYSeries.java
472	[PATCH]    res    =    (Math.pow(10,    val    +    1.0)    -    10.0)    /    9.0;    //invert    adjustLog10	[BUG]    [BUGGY]    res    =    (Math.pow(10,    val    +    1.0)    -    10.0)    %    9.0;    //invert    adjustLog10    [FE]    junit.framework.AssertionFailedError:    pow(log(x))    =    x    expected:<5.0>    but    was:<8.999999999999979>    testAdjustedLog10    [CONTEXT]    public    double    adjustedPow10(double    val)    {    boolean    negFlag    =    (val    <    0.0);    if    (negFlag)    {    val    =    -val;    }    double    res;    if    (val    <    1.0)    {    [BUGGY]    res    =    (Math.pow(10,    val    +    1.0)    -    10.0)    %    9.0;    //invert    adjustLog10    }    else    {    res    =    Math.pow(10,    val);    }    return    negFlag    ?    (-res)    :    res;    }    [CLASS]        LogarithmicAxis    [METHOD]    adjustedPow10    [RETURN_TYPE]    double        double    val    [VARIABLES]    boolean    allowNegativesFlag    autoRangeNextLogFlag    expTickLabelsFlag    flag    flgVal    log10TickLabelsFlag    negFlag    smallLogFlag    strictValuesFlag    double    LOG10_VALUE    SMALL_LOG_VALUE    lowerVal    res    val    long    serialVersionUID    NumberFormat    numberFormatterObj        	chart_32076_LogarithmicAxis_1_1	392	1	source/org/jfree/chart/axis/LogarithmicAxis.java
473	[PATCH]    if    ((series    <    0)    ||    (series    >=    getSeriesCount()))    {	[BUG]    [BUGGY]    if    ((series    <    1)    ||    (series    >=    getSeriesCount()))    {    [FE]    java.lang.IllegalArgumentException:    DefaultIntervalCategoryDataset.getValue():    series    index    out    of    range.    testDrawWithNullInfo    [CONTEXT]    public    Number    getStartValue(int    series,    int    category)    {            [BUGGY]    if    ((series    <    1)    ||    (series    >=    getSeriesCount()))    {    throw    new    IllegalArgumentException(       "DefaultIntervalCategoryDataset.getValue():       "    +       "series    index    out    of    range.   ");    }    if    ((category    <    0)    ||    (category    >=    getCategoryCount()))    {    throw    new    IllegalArgumentException(       "DefaultIntervalCategoryDataset.getValue():       "    +       "category    index    out    of    range.   ");    }    [CLASS]        DefaultIntervalCategoryDataset    [METHOD]    getStartValue    [RETURN_TYPE]    Number        int    series    int    category    [VARIABLES]    Number[][]    endData    ends    startData    starts    boolean    int    category    series    Comparable[]    categoryKeys    seriesKeys        	chart_68419_DefaultIntervalCategoryDataset_1_1	437	1	source/org/jfree/data/category/DefaultIntervalCategoryDataset.java
474	[PATCH]    units.add(new    DateTickUnit(DateTickUnitType.MINUTE,    30,	[BUG]    [BUGGY]    units.add(new    DateTickUnit(DateTickUnitType.MINUTE,    0,    [FE]    java.lang.IllegalArgumentException:    Requires    'multiple'    >    0.    testSetMaximumDate    [CONTEXT]    units.add(new    DateTickUnit(DateTickUnitType.MINUTE,    2,    DateTickUnitType.SECOND,    10,    f3));    units.add(new    DateTickUnit(DateTickUnitType.MINUTE,    5,    DateTickUnitType.MINUTE,    1,    f3));    units.add(new    DateTickUnit(DateTickUnitType.MINUTE,    10,    DateTickUnitType.MINUTE,    1,    f3));    units.add(new    DateTickUnit(DateTickUnitType.MINUTE,    15,    DateTickUnitType.MINUTE,    5,    f3));    units.add(new    DateTickUnit(DateTickUnitType.MINUTE,    20,    DateTickUnitType.MINUTE,    5,    f3));    [BUGGY]    units.add(new    DateTickUnit(DateTickUnitType.MINUTE,    0,    DateTickUnitType.MINUTE,    5,    f3));        units.add(new    DateTickUnit(DateTickUnitType.HOUR,    1,    DateTickUnitType.MINUTE,    5,    f3));    units.add(new    DateTickUnit(DateTickUnitType.HOUR,    2,    DateTickUnitType.MINUTE,    10,    f3));    units.add(new    DateTickUnit(DateTickUnitType.HOUR,    4,    DateTickUnitType.MINUTE,    30,    f3));    units.add(new    DateTickUnit(DateTickUnitType.HOUR,    6,    [CLASS]        DateAxis    DefaultTimeline    [METHOD]    createStandardDateTickUnits    [RETURN_TYPE]    TickUnitSource        TimeZone    zone    Locale    locale    [VARIABLES]    DateTickMarkPosition    position    tickMarkPosition    Locale    locale    DateRange    DEFAULT_DATE_RANGE    r    range    Timeline    DEFAULT_TIMELINE    timeline    TimeZone    timeZone    zone    TickUnits    units    boolean    DateTickUnit    DEFAULT_DATE_TICK_UNIT    tickUnit    unit    double    DEFAULT_AUTO_RANGE_MINIMUM_SIZE_IN_MILLISECONDS    axisMax    axisMin    java2DValue    lower    max    maxX    maxY    min    minX    minY    result    upper    value    DateFormat    dateFormatOverride    f1    f2    f3    f4    f5    f6    f7    formatter    long    from    length    maxMillis    millis    millisecond    minMillis    newMaxMillis    newMinMillis    serialVersionUID    to    value    Date    DEFAULT_ANCHOR_DATE    d0    d1    d2    d3    date    dd    from    lower    maxDate    maximumDate    minDate    mm    oldMax    oldMin    previous    result    standardDate    to    upper        	chart_30439_DateAxis_1_1	1215	1	source/org/jfree/chart/axis/DateAxis.java
475	[PATCH]    if    (data.length    !=    6)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    java.lang.IllegalArgumentException:    The    'data'    array    must    have    length    ==    6.    testFindDomainBounds    [CONTEXT]    public    void    addSeries(Comparable    seriesKey,    double[][]    data)    {    if    (seriesKey    ==    null)    {    throw    new    IllegalArgumentException(       "The    'seriesKey'    cannot    be    null.   ");    }    if    (data    ==    null)    {    throw    new    IllegalArgumentException(   "The    'data'    is    null.   ");    }    [BUGGY]    if    (true)    {    throw    new    IllegalArgumentException(       "The    'data'    array    must    have    length    ==    6.   ");    }    int    length    =    data[0].length;    if    (length    !=    data[1].length    ||    length    !=    data[2].length    ||    length    !=    data[3].length    ||    length    !=    data[4].length    ||    length    !=    data[5].length)    {    throw    new    IllegalArgumentException(       "The    'data'    array    must    contain    six    arrays    with    equal    length.   ");    }    [CLASS]        DefaultIntervalXYDataset    [METHOD]    addSeries    [RETURN_TYPE]    void        Comparable    seriesKey    double[][]    data    [VARIABLES]    double[][]    data    List    seriesKeys    seriesList    Comparable    seriesKey    boolean    int    length    seriesIndex        	chart_79349_DefaultIntervalXYDataset_1_1	414	1	source/org/jfree/data/xy/DefaultIntervalXYDataset.java
476	[PATCH]    return    false;	[BUG]    [BUGGY]    return    true;    [FE]    junit.framework.AssertionFailedError    testEquals    [CONTEXT]    if    (!ObjectUtilities.equal(this.domainCrosshairColumnKey,    that.domainCrosshairColumnKey))    {    return    false;    }    if    (!ObjectUtilities.equal(this.domainCrosshairRowKey,    that.domainCrosshairRowKey))    {    return    false;    }    if    (!PaintUtilities.equal(this.domainCrosshairPaint,    that.domainCrosshairPaint))    {    [BUGGY]    return    true;    }    if    (!ObjectUtilities.equal(this.domainCrosshairStroke,    that.domainCrosshairStroke))    {    return    false;    }    if    (this.rangeMinorGridlinesVisible    !=    that.rangeMinorGridlinesVisible)    {    return    false;    }    if    (!PaintUtilities.equal(this.rangeMinorGridlinePaint,    [CLASS]        CategoryPlot    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    Stroke    DEFAULT_CROSSHAIR_STROKE    DEFAULT_GRIDLINE_STROKE    domainCrosshairStroke    domainGridlineStroke    gridStroke    rangeCrosshairStroke    rangeGridlineStroke    rangeMinorGridlineStroke    rangeZeroBaselineStroke    stroke    PlotOrientation    orientation    Comparable    category    columnKey    domainCrosshairColumnKey    domainCrosshairRowKey    key    rowKey    double    adj    anchorValue    anchorY    cursor    factor    java2D    length    lowerPercent    percent    range    rangeCrosshairValue    scaledRange    sourceY    upperPercent    value    xx    y    yy    LegendItemCollection    fixedLegendItems    items    result    SortOrder    columnRenderingOrder    order    rowRenderingOrder    Paint    DEFAULT_CROSSHAIR_PAINT    DEFAULT_GRIDLINE_PAINT    domainCrosshairPaint    domainGridlinePaint    gridPaint    paint    rangeCrosshairPaint    rangeGridlinePaint    rangeMinorGridlinePaint    rangeZeroBaselinePaint    TreeMap    datasetToDomainAxesMap    datasetToRangeAxesMap    long    serialVersionUID    Font    DEFAULT_VALUE_LABEL_FONT    int    axisIndex    c    column    columnCount    count    crosshairDatasetIndex    datasetCount    datasetIndex    i    index    pass    passCount    rangeAxisCount    rangeIndex    result    row    rowCount    weight    x    x0    x1    y    y0    y1    CategoryPlot    that    DatasetRenderingOrder    order    renderingOrder    CategoryAnchor    anchor    domainGridlinePosition    position    ShadowGenerator    generator    shadowGenerator    boolean    DEFAULT_CROSSHAIR_VISIBLE    DEFAULT_DOMAIN_GRIDLINES_VISIBLE    DEFAULT_RANGE_GRIDLINES_VISIBLE    b1    b2    domainCrosshairVisible    domainGridlinesVisible    draw    drawSharedDomainAxis    flag    foundData    hasData    notify    paintLine    pannable    rangeCrosshairLockedOnData    rangeCrosshairVisible    rangeGridlinesVisible    rangeMinorGridlinesVisible    rangePannable    rangeZeroBaselineVisible    removed    selected    useAnchor    visible    RectangleInsets    axisOffset    insets    offset    ObjectList    datasets    domainAxes    domainAxisLocations    rangeAxes    rangeAxisLocations    renderers    ResourceBundle    localizationResources    List    annotations    axisIndices    datasets    indices    mappedAxes    mappedDatasets    result    ticks    Object    obj    AxisSpace    fixedDomainAxisSpace    fixedRangeAxisSpace    space    Map    axisStateMap    backgroundDomainMarkers    backgroundRangeMarkers    foregroundDomainMarkers    foregroundRangeMarkers        	chart_4373_CategoryPlot_1_1	5047	1	source/org/jfree/chart/plot/CategoryPlot.java
477	[PATCH]    double    xbar    =    sumX    /    n;	[BUG]    [BUGGY]    double    xbar    =    sumX    -    n;    [FE]    junit.framework.AssertionFailedError:    expected:<0.2568093>    but    was:<-12.713420547799373>    testOLSRegression1b    [CONTEXT]    double    y    =    data.getYValue(series,    i);    sumX    +=    x;    sumY    +=    y;    double    xx    =    x    *    x;    sumXX    +=    xx;    double    xy    =    x    *    y;    sumXY    +=    xy;    }    double    sxx    =    sumXX    -    (sumX    *    sumX)    /    n;    double    sxy    =    sumXY    -    (sumX    *    sumY)    /    n;    [BUGGY]    double    xbar    =    sumX    -    n;    double    ybar    =    sumY    /    n;    double[]    result    =    new    double[2];    result[1]    =    sxy    /    sxx;    result[0]    =    ybar    -    result[1]    *    xbar;    return    result;    }    [CLASS]        Regression    [METHOD]    getOLSRegression    [RETURN_TYPE]    double[]        XYDataset    data    int    series    [VARIABLES]    boolean    double[]    result    double    sumX    sumXX    sumXY    sumY    sxx    sxy    x    xbar    xx    xy    y    ybar    XYDataset    data    int    i    n    series        	chart_72853_Regression_1_1	131	1	source/org/jfree/data/statistics/Regression.java
478	[PATCH]    if    (!ShapeUtilities.equal(this.shape,    that.shape))    {	[BUG]    [BUGGY]    if    (!false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<org.jfree.chart.LegendItemCollection@bb12f41>    but    was:<org.jfree.chart.LegendItemCollection@6335f04a>    testSerialization    [CONTEXT]    if    (!AttributedStringUtilities.equal(this.attributedLabel,    that.attributedLabel))    {    return    false;    }    if    (!ObjectUtilities.equal(this.description,    that.description))    {    return    false;    }    if    (this.shapeVisible    !=    that.shapeVisible)    {    return    false;    }    [BUGGY]    if    (!false)    {    return    false;    }    if    (this.shapeFilled    !=    that.shapeFilled)    {    return    false;    }    if    (!PaintUtilities.equal(this.fillPaint,    that.fillPaint))    {    return    false;    }    if    (!ObjectUtilities.equal(this.fillPaintTransformer,    that.fillPaintTransformer))    {    [CLASS]        LegendItem    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    Comparable    key    seriesKey    Stroke    UNUSED_STROKE    lineStroke    outlineStroke    stroke    Shape    UNUSED_SHAPE    line    shape    GradientPaintTransformer    fillPaintTransformer    transformer    Dataset    dataset    String    description    label    text    toolTipText    urlText    Paint    fillPaint    labelPaint    linePaint    outlinePaint    paint    long    serialVersionUID    int    beginIndex    count    datasetIndex    endIndex    i    index    series    Font    font    labelFont    AttributedString    attributedLabel    label    boolean    lineVisible    shapeFilled    shapeOutlineVisible    shapeVisible    visible    LegendItem    that    Object    obj        	chart_7987_LegendItem_1_1	1069	1	source/org/jfree/chart/LegendItem.java
479	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError    testSerialization    [CONTEXT]    return    false;    }    if    (!this.workingCalendar.getTimeZone().equals(    that.workingCalendar.getTimeZone())    )    {    return    false;    }    if    (!this.values.equals(that.values))    {    return    false;    }    [BUGGY]    return    false;    }    [CLASS]        TimeTableXYDataset    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    DefaultKeyedValues2D    values    TimePeriodAnchor    anchor    xPosition    Object    obj    boolean    domainIsPointsInTime    flag    includeInterval    notify    TimeTableXYDataset    that    Calendar    workingCalendar        	chart_78502_TimeTableXYDataset_1_1	589	1	source/org/jfree/data/time/TimeTableXYDataset.java
480	[PATCH]    long    y    =    shiftedSegmentedValue    /    this.segmentsGroupSize;	[BUG]    [BUGGY]    long    y    =    shiftedSegmentedValue    -    this.segmentsGroupSize;    [FE]    junit.framework.AssertionFailedError:    expected:<144>    but    was:<1088>    testMs2BaseTimelineTranslations    [CONTEXT]    int    p;    while    ((p    =    binarySearchExceptionSegments(segment))    >=    0)    {    segment    =    getSegment(millisecond    =    ((Segment)    this.exceptionSegments.get(p)).getSegmentEnd()    +    1);    }    result    =    toTimelineValue(millisecond);    }    else    {    long    shiftedSegmentedValue    =    millisecond    -    this.startTime;    long    x    =    shiftedSegmentedValue    %    this.segmentsGroupSize;    [BUGGY]    long    y    =    shiftedSegmentedValue    -    this.segmentsGroupSize;    long    wholeExceptionsBeforeDomainValue    =    getExceptionSegmentCount(this.startTime,    millisecond    -    1);                                [CLASS]        SegmentedTimeline    Segment    SegmentRange    BaseTimelineSegmentRange    [METHOD]    toTimelineValue    [RETURN_TYPE]    long        long    millisecond    [VARIABLES]    TimeZone    DEFAULT_TIME_ZONE    NO_DST_TIME_ZONE    z    boolean    adjust    adjustForDaylightSaving    SegmentedTimeline    baseTimeline    timeline    Calendar    cal    workingCalendar    workingCalendarNoDST    List    exceptionSegments    long    DAY_SEGMENT_SIZE    FIFTEEN_MINUTE_SEGMENT_SIZE    FIRST_MONDAY_AFTER_1900    HOUR_SEGMENT_SIZE    MINUTE_SEGMENT_SIZE    fromDomainValue    fromMillisecond    groupIndex    groupMilliseconds    millisecond    rawMilliseconds    result    segmentCount    segmentEnd    segmentNumber    segmentSize    segmentStart    segmentsExcludedSize    segmentsGroupSize    segmentsIncludedSize    serialVersionUID    shiftedSegmentedValue    startTime    toDomainValue    toMillisecond    wholeExceptionsBeforeDomainValue    x    y    int    groupSegmentCount    offset    p    segmentsExcluded    segmentsIncluded    Segment    segment        	chart_34120_SegmentedTimeline_1_1	615	1	source/org/jfree/chart/axis/SegmentedTimeline.java
481	[PATCH]    if    (!ObjectUtilities.equal(this.urlText,    that.urlText))    {	[BUG]    [BUGGY]    if    (!false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<org.jfree.chart.annotations.XYTitleAnnotation@dc6d7743>    but    was:<org.jfree.chart.annotations.XYTitleAnnotation@dc6d7743>    testSerialization    [CONTEXT]    }    if    (this.maximumLinesToDisplay    !=    that.maximumLinesToDisplay)    {    return    false;    }    if    (this.expandToFitSpace    !=    that.expandToFitSpace)    {    return    false;    }    if    (!ObjectUtilities.equal(this.toolTipText,    that.toolTipText))    {    return    false;    }    [BUGGY]    if    (!false)    {    return    false;    }    return    super.equals(obj);    }    [CLASS]        TextTitle    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    TextTitle    that    boolean    expand    expandToFitSpace    Object    obj    Paint    DEFAULT_TEXT_PAINT    backgroundPaint    paint    String    text    toolTipText    urlText    TextBlock    content    long    serialVersionUID    Font    DEFAULT_FONT    font    HorizontalAlignment    alignment    horizontalAlignment    textAlignment    int    max    maximumLinesToDisplay        	chart_2061_TextTitle_1_1	864	1	source/org/jfree/chart/title/TextTitle.java
482	[PATCH]    result[1]    =    sxy    /    sxx;	[BUG]    [BUGGY]    result[1]    =    sxy    *    sxx;    [FE]    junit.framework.AssertionFailedError:    expected:<0.2568093>    but    was:<-8.998334998121617>    testOLSRegression1a    [CONTEXT]    sumXX    +=    xx;    double    xy    =    x    *    y;    sumXY    +=    xy;    }    double    sxx    =    sumXX    -    (sumX    *    sumX)    /    n;    double    sxy    =    sumXY    -    (sumX    *    sumY)    /    n;    double    xbar    =    sumX    /    n;    double    ybar    =    sumY    /    n;    double[]    result    =    new    double[2];    [BUGGY]    result[1]    =    sxy    *    sxx;    result[0]    =    ybar    -    result[1]    *    xbar;    return    result;    }    [CLASS]        Regression    [METHOD]    getOLSRegression    [RETURN_TYPE]    double[]        double[][]    data    [VARIABLES]    boolean    double[]    result    double    sumX    sumXX    sumXY    sumY    sxx    sxy    x    xbar    xx    xy    y    ybar    double[][]    data    int    i    n        	chart_72779_Regression_1_1	91	1	source/org/jfree/data/statistics/Regression.java
483	[PATCH]    if    (this.data.size()    >    0)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.IndexOutOfBoundsException:    Index:    0,    Size:    0    testClone    [CONTEXT]    public    TimePeriodValues    createCopy(int    start,    int    end)    throws    CloneNotSupportedException    {    TimePeriodValues    copy    =    (TimePeriodValues)    super.clone();    copy.data    =    new    ArrayList();    [BUGGY]    if    (false)    {    for    (int    index    =    start;    index    <=    end;    index++)    {    TimePeriodValue    item    =    (TimePeriodValue)    this.data.get(index);    TimePeriodValue    clone    =    (TimePeriodValue)    item.clone();    try    {    copy.add(clone);    }    catch    (SeriesException    e)    {    System.err.println(   "Failed    to    add    cloned    item.   ");    }    }    [CLASS]        TimePeriodValues    [METHOD]    createCopy    [RETURN_TYPE]    TimePeriodValues        int    start    int    end    [VARIABLES]    boolean    List    data    String    DEFAULT_DOMAIN_DESCRIPTION    DEFAULT_RANGE_DESCRIPTION    description    domain    old    range    SeriesException    e    TimePeriodValues    copy    TimePeriodValue    clone    item    long    e    end    maxEnd    maxMiddle    maxStart    middle    minEnd    minMiddle    minStart    s    serialVersionUID    start    int    count    end    i    index    maxEndIndex    maxMiddleIndex    maxStartIndex    minEndIndex    minMiddleIndex    minStartIndex    result    start        	chart_78215_TimePeriodValues_1_1	501	1	source/org/jfree/data/time/TimePeriodValues.java
484	[PATCH]    double    sxx    =    sumXX    -    (sumX    *    sumX)    /    n;	[BUG]    [BUGGY]    double    sxx    =    sumXX    -    (sumX    -    sumX)    /    n;    [FE]    junit.framework.AssertionFailedError:    expected:<0.91045813>    but    was:<2.2513541832784845>    testPowerRegression1a    [CONTEXT]    for    (int    i    =    0;    i    <    n;    i++)    {    double    x    =    Math.log(data[i][0]);    double    y    =    Math.log(data[i][1]);    sumX    +=    x;    sumY    +=    y;    double    xx    =    x    *    x;    sumXX    +=    xx;    double    xy    =    x    *    y;    sumXY    +=    xy;    }    [BUGGY]    double    sxx    =    sumXX    -    (sumX    -    sumX)    /    n;    double    sxy    =    sumXY    -    (sumX    *    sumY)    /    n;    double    xbar    =    sumX    /    n;    double    ybar    =    sumY    /    n;    double[]    result    =    new    double[2];    result[1]    =    sxy    /    sxx;    result[0]    =    Math.pow(Math.exp(1.0),    ybar    -    result[1]    *    xbar);    return    result;        [CLASS]        Regression    [METHOD]    getPowerRegression    [RETURN_TYPE]    double[]        double[][]    data    [VARIABLES]    boolean    double[]    result    double    sumX    sumXX    sumXY    sumY    sxx    sxy    x    xbar    xx    xy    y    ybar    double[][]    data    int    i    n        	chart_72916_Regression_1_1	172	1	source/org/jfree/data/statistics/Regression.java
485	[PATCH]    double    sxy    =    sumXY    -    (sumX    *    sumY)    /    n;	[BUG]    [BUGGY]    double    sxy    =    sumXY    -    (sumX    +    sumY)    /    n;    [FE]    junit.framework.AssertionFailedError:    expected:<0.2568093>    but    was:<-85.71687004867006>    testOLSRegression1a    [CONTEXT]    double    x    =    data[i][0];    double    y    =    data[i][1];    sumX    +=    x;    sumY    +=    y;    double    xx    =    x    *    x;    sumXX    +=    xx;    double    xy    =    x    *    y;    sumXY    +=    xy;    }    double    sxx    =    sumXX    -    (sumX    *    sumX)    /    n;    [BUGGY]    double    sxy    =    sumXY    -    (sumX    +    sumY)    /    n;    double    xbar    =    sumX    /    n;    double    ybar    =    sumY    /    n;    double[]    result    =    new    double[2];    result[1]    =    sxy    /    sxx;    result[0]    =    ybar    -    result[1]    *    xbar;    return    result;    }    [CLASS]        Regression    [METHOD]    getOLSRegression    [RETURN_TYPE]    double[]        double[][]    data    [VARIABLES]    boolean    double[]    result    double    sumX    sumXX    sumXY    sumY    sxx    sxy    x    xbar    xx    xy    y    ybar    double[][]    data    int    i    n        	chart_72755_Regression_1_1	86	1	source/org/jfree/data/statistics/Regression.java
486	[PATCH]    if    (index    >=    this.objects.length)    {	[BUG]    [BUGGY]    if    (index    ==    this.objects.length)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    11    testEquals    [CONTEXT]    protected    void    set(int    index,    Object    object)    {    if    (index    <    0)    {    throw    new    IllegalArgumentException(   "Requires    index    >=    0.   ");    }    [BUGGY]    if    (index    ==    this.objects.length)    {    Object[]    enlarged    =    new    Object[index    +    this.increment];    System.arraycopy(this.objects,    0,    enlarged,    0,    this.objects.length);    this.objects    =    enlarged;    }    this.objects[index]    =    object;    this.size    =    Math.max(this.size,    index    +    1);    }    [CLASS]        AbstractObjectList    [METHOD]    set    [RETURN_TYPE]    void        int    index    Object    object    [VARIABLES]    Object    object    boolean    long    serialVersionUID    int    DEFAULT_INITIAL_CAPACITY    increment    index    initialCapacity    size    Object[]    enlarged    objects        	chart_8077_AbstractObjectList_1_1	126	1	source/org/jfree/chart/util/AbstractObjectList.java
487	[PATCH]    if    (selectionState    ==    null    &&    info    !=    null)    {	[BUG]    [BUGGY]    if    (selectionState    ==    null    &&    true)    {    [FE]    junit.framework.AssertionFailedError    testDrawWithNullInfo    [CONTEXT]    XYItemRendererState    state    =    createState(info);        XYDatasetSelectionState    selectionState    =    null;    if    (dataset    instanceof    SelectableXYDataset)    {    SelectableXYDataset    sxyd    =    (SelectableXYDataset)    dataset;    selectionState    =    sxyd.getSelectionState();    }            [BUGGY]    if    (selectionState    ==    null    &&    true)    {    ChartRenderingInfo    cri    =    info.getOwner();    if    (cri    !=    null)    {    RenderingSource    rs    =    cri.getRenderingSource();    selectionState    =    (XYDatasetSelectionState)    rs.getSelectionState(dataset);    }    }    state.setSelectionState(selectionState);    return    state;    [CLASS]        AbstractXYItemRenderer    [METHOD]    initialise    [RETURN_TYPE]    XYItemRendererState        Graphics2D    g2    Rectangle2D    dataArea    XYPlot    plot    XYDataset    dataset    PlotRenderingInfo    info    [VARIABLES]    PlotRenderingInfo    info    SelectableXYDataset    sxyd    XYURLGenerator    baseURLGenerator    XYDatasetSelectionState    selectionState    Rectangle2D    dataArea    long    serialVersionUID    XYSeriesLabelGenerator    legendItemLabelGenerator    legendItemToolTipGenerator    legendItemURLGenerator    Graphics2D    g2    boolean    XYPlot    plot    RenderingSource    rs    ChartRenderingInfo    cri    ObjectList    itemLabelGeneratorList    toolTipGeneratorList    urlGeneratorList    XYItemLabelGenerator    baseItemLabelGenerator    List    backgroundAnnotations    foregroundAnnotations    XYDataset    dataset    XYItemRendererState    state    XYToolTipGenerator    baseToolTipGenerator        	chart_24900_AbstractXYItemRenderer_1_1	329	1	source/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java
488	[PATCH]    mid    =    (low    +    high)    /    2;	[BUG]    [BUGGY]    mid    =    (low    +    high)    *    2;    [FE]    junit.framework.AssertionFailedError:    expected:<0>    but    was:<2>    testFindLiveItemsUpperBound_Ascending    [CONTEXT]    if    (midV    <=    xHigh)    {    low    =    mid;    }    else    {    high    =    mid;    }    [CLASS]        RendererUtilities    [METHOD]    findLiveItemsUpperBound    [RETURN_TYPE]    int        XYDataset    dataset    int    series    double    xLow    double    xHigh    [VARIABLES]    boolean    double    highValue    lowValue    midV    x    xHigh    xLow    XYDataset    dataset    int    high    index    itemCount    low    mid    series        	chart_46864_RendererUtilities_1_1	198	1	source/org/jfree/chart/renderer/RendererUtilities.java
489	[PATCH]    double    height    =    h[0]    +    h[1]    +    centerHeight;	[BUG]    [BUGGY]    double    height    =    h[1]    +    h[1]    +    centerHeight;    [FE]    junit.framework.AssertionFailedError:    expected:<45.6>    but    was:<91.2>    testSizing    [CONTEXT]    h[3]    =    h[2];    if    (this.centerBlock    !=    null)    {    Size2D    size    =    this.centerBlock.arrange(g2,    RectangleConstraint.NONE);    w[4]    =    size.width;    h[4]    =    size.height;    }    double    width    =    Math.max(w[0],    Math.max(w[1],    w[2]    +    w[4]    +    w[3]));    double    centerHeight    =    Math.max(h[2],    Math.max(h[3],    h[4]));    [BUGGY]    double    height    =    h[1]    +    h[1]    +    centerHeight;    if    (this.topBlock    !=    null)    {    this.topBlock.setBounds(new    Rectangle2D.Double(0.0,    0.0,    width,    h[0]));    }    if    (this.bottomBlock    !=    null)    {    this.bottomBlock.setBounds(new    Rectangle2D.Double(0.0,    height    -    h[1],    width,    h[1]));    }    if    (this.leftBlock    !=    null)    {    this.leftBlock.setBounds(new    Rectangle2D.Double(0.0,    h[0],    w[2],    [CLASS]        BorderArrangement    [METHOD]    arrangeNN    [RETURN_TYPE]    Size2D        BlockContainer    container    Graphics2D    g2    [VARIABLES]    Size2D    size    boolean    double[]    h    w    BlockContainer    container    double    centerHeight    height    width    Block    block    bottomBlock    centerBlock    leftBlock    rightBlock    topBlock    long    serialVersionUID    Graphics2D    g2        	chart_35093_BorderArrangement_1_1	218	1	source/org/jfree/chart/block/BorderArrangement.java
490	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError:    expected:<PlotOrientation.HORIZONTAL>    but    was:<PlotOrientation.HORIZONTAL>    testSerialization    [CONTEXT]    public    boolean    equals(Object    obj)    {    if    (this    ==    obj)    {    [BUGGY]    return    false;    }    if    (!(obj    instanceof    PlotOrientation))    {    return    false;    }    PlotOrientation    orientation    =    (PlotOrientation)    obj;    if    (!this.name.equals(orientation.toString()))    {    return    false;    }    return    true;    }    [CLASS]        PlotOrientation    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    PlotOrientation    HORIZONTAL    VERTICAL    orientation    Object    obj    String    name    boolean    long    serialVersionUID        	chart_7519_PlotOrientation_1_1	95	1	source/org/jfree/chart/plot/PlotOrientation.java
491	[PATCH]    return    false;	[BUG]    [BUGGY]    return    true;    [FE]    junit.framework.AssertionFailedError    testEquals    [CONTEXT]    if    (this.baseRadius    !=    that.baseRadius)    {    return    false;    }    if    (this.arrowLength    !=    that.arrowLength)    {    return    false;    }    if    (this.arrowWidth    !=    that.arrowWidth)    {    return    false;    }    if    (!this.arrowPaint.equals(that.arrowPaint))    {    [BUGGY]    return    true;    }    if    (!ObjectUtilities.equal(this.arrowStroke,    that.arrowStroke))    {    return    false;    }    if    (this.labelOffset    !=    that.labelOffset)    {    return    false;    }    return    true;    }    [CLASS]        CategoryPointerAnnotation    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    CategoryPointerAnnotation    that    Stroke    arrowStroke    stroke    boolean    double    DEFAULT_ARROW_LENGTH    DEFAULT_ARROW_WIDTH    DEFAULT_BASE_RADIUS    DEFAULT_LABEL_OFFSET    DEFAULT_TIP_RADIUS    angle    arrowBaseX    arrowBaseY    arrowLeftX    arrowLeftY    arrowLength    arrowRightX    arrowRightY    arrowWidth    baseRadius    endX    endY    j2DX    j2DY    labelOffset    labelX    labelY    length    offset    radius    startX    startY    temp    tipRadius    value    width    Object    obj    Paint    arrowPaint    paint    long    serialVersionUID        	chart_26744_CategoryPointerAnnotation_1_1	466	1	source/org/jfree/chart/annotations/CategoryPointerAnnotation.java
492	[PATCH]    h[3]    =    size.height;	[BUG]    [BUGGY]    h[-3]    =    size.height;    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -3    testSizing    [CONTEXT]    h[1]    =    size.height;    }    if    (this.leftBlock    !=    null)    {    Size2D    size    =    this.leftBlock.arrange(g2,    RectangleConstraint.NONE);    w[2]    =    size.width;    h[2]    =    size.height;    }    if    (this.rightBlock    !=    null)    {    Size2D    size    =    this.rightBlock.arrange(g2,    RectangleConstraint.NONE);    w[3]    =    size.width;    [BUGGY]    h[-3]    =    size.height;    }    h[2]    =    Math.max(h[2],    h[3]);    h[3]    =    h[2];    if    (this.centerBlock    !=    null)    {    Size2D    size    =    this.centerBlock.arrange(g2,    RectangleConstraint.NONE);    w[4]    =    size.width;    h[4]    =    size.height;    [CLASS]        BorderArrangement    [METHOD]    arrangeNN    [RETURN_TYPE]    Size2D        BlockContainer    container    Graphics2D    g2    [VARIABLES]    Size2D    size    boolean    double[]    h    w    BlockContainer    container    double    centerHeight    height    width    Block    block    bottomBlock    centerBlock    leftBlock    rightBlock    topBlock    long    serialVersionUID    Graphics2D    g2        	chart_35048_BorderArrangement_1_1	204	1	source/org/jfree/chart/block/BorderArrangement.java
493	[PATCH]    for    (int    seriesIndex    =    0;    seriesIndex    <    seriesCount;    seriesIndex++)    {	[BUG]    [BUGGY]    for    (int    seriesIndex    =    -1;    seriesIndex    <    seriesCount;    seriesIndex++)    {    [FE]    junit.framework.AssertionFailedError    testDrawWithNullInfo    [CONTEXT]    private    void    calculateMaxValue(int    seriesCount,    int    catCount)    {    double    v    =    0;    Number    nV    =    null;        [BUGGY]    for    (int    seriesIndex    =    -1;    seriesIndex    <    seriesCount;    seriesIndex++)    {    for    (int    catIndex    =    0;    catIndex    <    catCount;    catIndex++)    {    nV    =    getPlotValue(seriesIndex,    catIndex);    if    (nV    !=    null)    {    v    =    nV.doubleValue();    if    (v    >    this.maxValue)    {    this.maxValue    =    v;    }    }    }    }    [CLASS]        SpiderWebPlot    [METHOD]    calculateMaxValue    [RETURN_TYPE]    void        int    seriesCount    int    catCount    [VARIABLES]    Stroke    DEFAULT_LABEL_OUTLINE_STROKE    axisLineStroke    baseSeriesOutlineStroke    result    seriesOutlineStroke    stroke    PaintList    seriesOutlinePaintList    seriesPaintList    TableOrder    dataExtractOrder    extract    order    Shape    legendItemShape    savedClip    shape    StrokeList    seriesOutlineStrokeList    double    DEFAULT_AXIS_LABEL_GAP    DEFAULT_HEAD    DEFAULT_INTERIOR_GAP    DEFAULT_MAX_VALUE    DEFAULT_START_ANGLE    H    MAX_INTERIOR_GAP    W    X    Y    angle    angrad    axisLabelGap    gap    gapHorizontal    gapVertical    headH    headPercent    headW    interiorGap    length    maxValue    min    percent    startAngle    v    value    x    y    CategoryURLGenerator    generator    urlGenerator    CategoryItemLabelGenerator    generator    labelGenerator    Paint    DEFAULT_LABEL_BACKGROUND_PAINT    DEFAULT_LABEL_OUTLINE_PAINT    DEFAULT_LABEL_PAINT    DEFAULT_LABEL_SHADOW_PAINT    axisLinePaint    baseSeriesOutlinePaint    baseSeriesPaint    labelPaint    outlinePaint    p    paint    result    seriesOutlinePaint    seriesPaint    Rotation    direction    long    serialVersionUID    Font    DEFAULT_LABEL_FONT    font    labelFont    int    catCount    catIndex    seriesCount    seriesIndex    boolean    flag    webFilled    Number    nV    CategoryDataset    dataset    CategoryToolTipGenerator    generator    toolTipGenerator        	chart_17386_SpiderWebPlot_1_1	1252	1	source/org/jfree/chart/plot/SpiderWebPlot.java
494	[PATCH]    if    (this.columnRadius    !=    that.columnRadius)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError    testSerialization    [CONTEXT]    }    if    (!equal(this.subrangeInfo,    that.subrangeInfo))    {    return    false;    }    if    (this.useSubrangePaint    !=    that.useSubrangePaint)    {    return    false;    }    if    (this.bulbRadius    !=    that.bulbRadius)    {    return    false;    }    [BUGGY]    if    (true)    {    return    false;    }    if    (this.gap    !=    that.gap)    {    return    false;    }    for    (int    i    =    0;    i    <    this.subrangePaint.length;    i++)    {    if    (!PaintUtilities.equal(this.subrangePaint[i],    that.subrangePaint[i]))    {    return    false;    }    [CLASS]        ThermometerPlot    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    Stroke    rangeIndicatorStroke    s    subrangeIndicatorStroke    thermometerStroke    double    DEFAULT_LOWER_BOUND    DEFAULT_UPPER_BOUND    current    cursor    d    displayHigh    displayLow    ds    hi    high    low    lower    lowerBound    percent    rangeHigh    rangeLow    upper    upperBound    value    x    y    String[]    UNITS    ValueDataset    dataset    existing    Paint    mercuryPaint    paint    result    thermometerPaint    valuePaint    long    serialVersionUID    int    AXIS_GAP    BULB    BULB_DIAMETER    BULB_RADIUS    COLUMN_DIAMETER    COLUMN_RADIUS    CRITICAL    DEFAULT_BULB_RADIUS    DEFAULT_COLUMN_RADIUS    DEFAULT_GAP    DISPLAY_HIGH    DISPLAY_LOW    GAP_DIAMETER    GAP_RADIUS    LEFT    NONE    NORMAL    RANGE_HIGH    RANGE_LOW    RIGHT    UNITS_CELCIUS    UNITS_FAHRENHEIT    UNITS_KELVIN    UNITS_NONE    WARNING    axisLocation    bulbRadius    columnRadius    drawWidth    gap    i    j    k    l    location    midX    midY    r    range    stemBottom    stemTop    stringWidth    subrange    tickX1    u    units    valueLocation    Font    f    valueFont    boolean    flag    followDataInSubranges    subrangeIndicatorsVisible    useSubrangePaint    Paint[]    subrangePaint    ValueAxis    axis    rangeAxis    ThermometerPlot    that    double[][]    subrangeInfo    RectangleInsets    insets    padding    ResourceBundle    localizationResources    Object    obj    NumberFormat    formatter    valueFormat        	chart_19344_ThermometerPlot_1_1	1514	1	source/org/jfree/chart/plot/ThermometerPlot.java
495	[PATCH]    if    (result    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<org.jfree.chart.renderer.xy.XYLineAndShapeRenderer@354dd86c>    but    was:<null>    testGetRendererForDataset    [CONTEXT]    public    XYItemRenderer    getRendererForDataset(XYDataset    dataset)    {    XYItemRenderer    result    =    null;    for    (int    i    =    0;    i    <    this.datasets.size();    i++)    {    if    (this.datasets.get(i)    ==    dataset)    {    result    =    (XYItemRenderer)    this.renderers.get(i);    [BUGGY]    if    (false)    {    result    =    getRenderer();    }    break;    }    }    return    result;    }    [CLASS]        XYPlot    [METHOD]    getRendererForDataset    [RETURN_TYPE]    XYItemRenderer        XYDataset    dataset    [VARIABLES]    Stroke    DEFAULT_CROSSHAIR_STROKE    DEFAULT_GRIDLINE_STROKE    domainCrosshairStroke    domainGridlineStroke    domainMinorGridlineStroke    domainZeroBaselineStroke    rangeCrosshairStroke    rangeGridlineStroke    rangeMinorGridlineStroke    rangeZeroBaselineStroke    PlotOrientation    orientation    double    domainCrosshairValue    rangeCrosshairValue    LegendItemCollection    fixedLegendItems    Paint    DEFAULT_CROSSHAIR_PAINT    DEFAULT_GRIDLINE_PAINT    domainCrosshairPaint    domainGridlinePaint    domainMinorGridlinePaint    domainTickBandPaint    domainZeroBaselinePaint    rangeCrosshairPaint    rangeGridlinePaint    rangeMinorGridlinePaint    rangeTickBandPaint    rangeZeroBaselinePaint    long    serialVersionUID    int    axisIndex    count    i    index    result    weight    DatasetRenderingOrder    datasetRenderingOrder    order    ShadowGenerator    shadowGenerator    boolean    DEFAULT_CROSSHAIR_VISIBLE    domainCrosshairLockedOnData    domainCrosshairVisible    domainGridlinesVisible    domainMinorGridlinesVisible    domainPannable    domainZeroBaselineVisible    notify    rangeCrosshairLockedOnData    rangeCrosshairVisible    rangeGridlinesVisible    rangeMinorGridlinesVisible    rangePannable    rangeZeroBaselineVisible    Paint[]    quadrantPaint    Point2D    quadrantOrigin    RectangleInsets    axisOffset    offset    ObjectList    datasets    domainAxes    domainAxisLocations    rangeAxes    rangeAxisLocations    renderers    ResourceBundle    localizationResources    List    annotations    axisIndices    indices    XYDataset    dataset    AxisSpace    fixedDomainAxisSpace    fixedRangeAxisSpace    XYItemRenderer    result    SeriesRenderingOrder    order    seriesRenderingOrder    Map    backgroundDomainMarkers    backgroundRangeMarkers    datasetToDomainAxesMap    datasetToRangeAxesMap    foregroundDomainMarkers    foregroundRangeMarkers        	chart_4947_XYPlot_1_1	1771	1	source/org/jfree/chart/plot/XYPlot.java
496	[PATCH]    log    =    axisMin    +    (java2DValue    -    min)    /    (max    -    min)	[BUG]    [BUGGY]    log    =    axisMin    +    (java2DValue    -    min)    /    (max    %    min)    [FE]    junit.framework.AssertionFailedError:    expected:<94.3874312681693>    but    was:<1.1048543456039757>    testTranslateJava2DToValue    [CONTEXT]    if    (isInverted())    {    log    =    axisMax    -    (java2DValue    -    min)    /    (max    -    min)        }    else    {    [BUGGY]    log    =    axisMin    +    (java2DValue    -    min)    /    (max    %    min)        }    [CLASS]        LogAxis    [METHOD]    java2DToValue    [RETURN_TYPE]    double        double    java2DValue    Rectangle2D    area    RectangleEdge    edge    [VARIABLES]    boolean    double    axisMax    axisMin    base    baseLog    java2DValue    log    max    min    smallestValue    value    Rectangle2D    area    Range    range    NumberTickUnit    tickUnit    unit    NumberFormat    formatter    numberFormatOverride    RectangleEdge    edge        	chart_31428_LogAxis_1_1	325	1	source/org/jfree/chart/axis/LogAxis.java
497	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError    testCloning    [CONTEXT]    public    static    boolean    equal(final    Object    o1,    final    Object    o2)    {    if    (o1    ==    o2)    {    [BUGGY]    return    false;    }    if    (o1    !=    null)    {    return    o1.equals(o2);    }    else    {    return    false;    }    }    [CLASS]        ObjectUtilities    [METHOD]    equal    [RETURN_TYPE]    boolean        Object    o1    Object    o2    [VARIABLES]    ClassLoader    classLoader    Object    o1    o2    String    CLASS_CONTEXT    THREAD_CONTEXT    classLoaderSource    boolean        	chart_65423_ObjectUtilities_1_1	126	1	source/org/jfree/chart/util/ObjectUtilities.java
498	[PATCH]    return    seriesData[2][item];	[BUG]    [BUGGY]    return    seriesData[-2][item];    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -2    testFindDomainBounds    [CONTEXT]    public    double    getEndXValue(int    series,    int    item)    {    double[][]    seriesData    =    (double[][])    this.seriesList.get(series);    [BUGGY]    return    seriesData[-2][item];    }    [CLASS]        DefaultIntervalXYDataset    [METHOD]    getEndXValue    [RETURN_TYPE]    double        int    series    int    item    [VARIABLES]    double[][]    seriesData    List    seriesKeys    seriesList    boolean    int    item    series        	chart_79338_DefaultIntervalXYDataset_1_1	222	1	source/org/jfree/data/xy/DefaultIntervalXYDataset.java
499	[PATCH]    calendar.set(Calendar.MILLISECOND,    999);	[BUG]    [BUGGY]    calendar.set(Calendar.MILLISECOND,    -999);    [FE]    junit.framework.AssertionFailedError:    expected:<3>    but    was:<4>    testBug2201869    [CONTEXT]    public    long    getLastMillisecond(Calendar    calendar)    {    int    eom    =    SerialDate.lastDayOfMonth(this.month,    this.year);    calendar.set(this.year,    this.month    -    1,    eom,    23,    59,    59);    [BUGGY]    calendar.set(Calendar.MILLISECOND,    -999);            return    calendar.getTime().getTime();    }    [CLASS]        Month    [METHOD]    getLastMillisecond    [RETURN_TYPE]    long        Calendar    calendar    [VARIABLES]    boolean    long    firstMillisecond    lastMillisecond    serialVersionUID    int    eom    month    result    year    Calendar    calendar        	chart_75979_Month_1_1	431	1	source/org/jfree/data/time/Month.java
500	[PATCH]    ix    =    0;	[BUG]    [BUGGY]    ix    =    -1;    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testFloatArray    [CONTEXT]    }    ArrayBuilders.FloatBuilder    builder    =    ctxt.getArrayBuilders().getFloatBuilder();    float[]    chunk    =    builder.resetAndStart();    int    ix    =    0;    while    (jp.nextToken()    !=    JsonToken.END_ARRAY)    {        float    value    =    _parseFloatPrimitive(jp,    ctxt);    if    (ix    >=    chunk.length)    {    chunk    =    builder.appendCompletedChunk(chunk,    ix);    [BUGGY]    ix    =    -1;    }    chunk[ix++]    =    value;    }    return    builder.completeAndClearBuffer(chunk,    ix);    }    [CLASS]        PrimitiveArrayDeserializers    CharDeser    BooleanDeser    ByteDeser    ShortDeser    IntDeser    LongDeser    FloatDeser    DoubleDeser    [METHOD]    deserialize    [RETURN_TYPE]    float[]        JsonParser    jp    DeserializationContext    ctxt    [VARIABLES]    LongDeser    instance    IntDeser    instance    boolean    FloatBuilder    builder    DeserializationContext    ctxt    float    value    long    serialVersionUID    value    int    ix    JsonParser    jp    float[]    chunk        	jacksondatabind_9593_PrimitiveArrayDeserializers_1_1	444	1	src/main/java/com/fasterxml/jackson/databind/deser/std/PrimitiveArrayDeserializers.java
501	[PATCH]    if    (Enum.class.isAssignableFrom(raw))    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    Expected    token    VALUE_STRING,    current    token    START_OBJECT    testComplexObject    [CONTEXT]        JsonSerializer<?>    ser    =    findOptionalStdSerializer(prov,    type,    beanDesc,    staticTyping);    if    (ser    !=    null)    {    return    ser;    }    if    (Number.class.isAssignableFrom(raw))    {    return    NumberSerializers.NumberSerializer.instance;    }    [BUGGY]    if    (false)    {    return    buildEnumSerializer(prov.getConfig(),    type,    beanDesc);    }    if    (Calendar.class.isAssignableFrom(raw))    {    return    CalendarSerializer.instance;    }    if    (java.util.Date.class.isAssignableFrom(raw))    {    return    DateSerializer.instance;    }    return    null;    }    [CLASS]        BasicSerializerFactory    [METHOD]    findSerializerByPrimaryType    [RETURN_TYPE]    JsonSerializer        SerializerProvider    prov    JavaType    type    BeanDescription    beanDesc    boolean    staticTyping    [VARIABLES]    SerializerFactoryConfig    _factoryConfig    config    JavaType    type    boolean    staticTyping    HashMap    _concrete    _concreteLazy    BeanDescription    beanDesc    Class    raw    JsonSerializer    ser    SerializerProvider    prov        	jacksondatabind_12025_BasicSerializerFactory_1_1	385	1	src/main/java/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java
502	[PATCH]    false,    null);	[BUG]    [BUGGY]    true,    null);    [FE]    com.fasterxml.jackson.databind.RuntimeJsonMappingException:    Can    not    deserialize    instance    of    int[]    out    of    VALUE_NUMBER_INT    token    testNonRootArraysUsingParser    [CONTEXT]    public    <T>    MappingIterator<T>    readValues(JsonParser    jp,    JavaType    valueType)    throws    IOException,    JsonProcessingException    {    DeserializationConfig    config    =    getDeserializationConfig();    DeserializationContext    ctxt    =    createDeserializationContext(jp,    config);    JsonDeserializer<?>    deser    =    _findRootDeserializer(ctxt,    valueType);        return    new    MappingIterator<T>(valueType,    jp,    ctxt,    deser,    [BUGGY]    true,    null);    }    [CLASS]        ObjectMapper    DefaultTyping    DefaultTypeResolverBuilder    1    [METHOD]    readValues    [RETURN_TYPE]    <T>        JsonParser    jp    JavaType    valueType    [VARIABLES]    RootNameLookup    _rootNames    SerializerFactory    _serializerFactory    f    DefaultDeserializationContext    _deserializationContext    dc    SubtypeResolver    _subtypeResolver    str    HashMap    _mixInAnnotations    mixins    SerializationConfig    _serializationConfig    config    DefaultSerializerProvider    _serializerProvider    p    sp    AnnotationIntrospector    DEFAULT_ANNOTATION_INTROSPECTOR    ai    deserializerAI    serializerAI    JsonFactory    _jsonFactory    jf    DeserializationConfig    _deserializationConfig    cfg    config    JsonDeserializer    deser    InjectableValues    _injectableValues    injectableValues    long    serialVersionUID    ClassIntrospector    DEFAULT_INTROSPECTOR    ci    JavaType    JSON_NODE_TYPE    baseType    t    valueType    PrettyPrinter    _defaultPrettyPrinter    boolean    VisibilityChecker    STD_VISIBILITY_CHECKER    vc    DeserializationContext    ctxt    BaseSettings    DEFAULT_BASE    DefaultTyping    JAVA_LANG_OBJECT    NON_CONCRETE_AND_ARRAYS    NON_FINAL    OBJECT_AND_NON_CONCRETE    _appliesFor    applicability    dti    t    TypeFactory    _typeFactory    f    ConcurrentHashMap    _rootDeserializers    JsonParser    jp        	jacksondatabind_4808_ObjectMapper_1_1	1676	1	src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java
503	[PATCH]    if    (hasStringCreator)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.ComparisonFailure:    expected:<TEST>    but    was:<null>    testIOException    [CONTEXT]    int    len    =    _beanProperties.size();    pending    =    new    Object[len    +    len];    }    pending[pendingIx++]    =    prop;    pending[pendingIx++]    =    prop.deserialize(jp,    ctxt);    continue;    }        if    (PROP_NAME_MESSAGE.equals(propName))    {    [BUGGY]    if    (false)    {    throwable    =    _valueInstantiator.createFromString(ctxt,    jp.getText());        if    (pending    !=    null)    {    for    (int    i    =    0,    len    =    pendingIx;    i    <    len;    i    +=    2)    {    prop    =    (SettableBeanProperty)pending[i];    prop.set(throwable,    pending[i+1]);    }    pending    =    null;    }    continue;    [CLASS]        ThrowableDeserializer    [METHOD]    deserializeFromObject    [RETURN_TYPE]    Object        JsonParser    jp    DeserializationContext    ctxt    [VARIABLES]    boolean    hasDefaultCtor    hasStringCreator    SettableBeanProperty    prop    DeserializationContext    ctxt    Object    throwable    String    PROP_NAME_MESSAGE    propName    long    serialVersionUID    Object[]    pending    int    i    len    pendingIx    JsonParser    jp        	jacksondatabind_9914_ThrowableDeserializer_1_1	114	1	src/main/java/com/fasterxml/jackson/databind/deser/std/ThrowableDeserializer.java
504	[PATCH]    c    =    dateStr.charAt(len-9);	[BUG]    [BUGGY]    c    =    dateStr.charAt(len    +    9);    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    37    testDateUtil    [CONTEXT]    StringBuilder    sb    =    new    StringBuilder(dateStr);    sb.delete(len-3,    len-2);    dateStr    =    sb.toString();    }    else    if    (c    ==    '+'    ||    c    ==    '-')    {        dateStr    +=       "00   ";    }        len    =    dateStr.length();        [BUGGY]    c    =    dateStr.charAt(len    +    9);    if    (Character.isDigit(c))    {    StringBuilder    sb    =    new    StringBuilder(dateStr);    sb.insert(len-5,       ".000   ");    dateStr    =    sb.toString();    }    df    =    _formatISO8601;    if    (_formatISO8601    ==    null)    {    df    =    _formatISO8601    =    _cloneFormat(DATE_FORMAT_ISO8601);    }    [CLASS]        StdDateFormat    [METHOD]    parseAsISO8601    [RETURN_TYPE]    Date        String    dateStr    ParsePosition    pos    [VARIABLES]    TimeZone    DEFAULT_TIMEZONE    _timezone    tz    boolean    StringBuilder    sb    DateFormat    DATE_FORMAT_ISO8601    DATE_FORMAT_ISO8601_Z    DATE_FORMAT_PLAIN    DATE_FORMAT_RFC1123    _formatISO8601    _formatISO8601_z    _formatPlain    _formatRFC1123    df    char    c    StdDateFormat    instance    String    DATE_FORMAT_STR_ISO8601    DATE_FORMAT_STR_ISO8601_Z    DATE_FORMAT_STR_PLAIN    DATE_FORMAT_STR_RFC1123    dateStr    f    String[]    ALL_FORMATS    int    len    timeLen    ParsePosition    pos        	jacksondatabind_14712_StdDateFormat_1_1	330	1	src/main/java/com/fasterxml/jackson/databind/util/StdDateFormat.java
505	[PATCH]    while    (b    ==    null    &&    _nextBucketIndex    <    _buckets.length)    {	[BUG]    [BUGGY]    while    (b    ==    null    &&    false)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    No    _valueDeserializer    assigned    testObjectMapper    [CONTEXT]    public    SettableBeanProperty    next()    {    Bucket    curr    =    _currentBucket;    if    (curr    ==    null)    {    throw    new    NoSuchElementException();    }        Bucket    b    =    curr.next;    [BUGGY]    while    (b    ==    null    &&    false)    {    b    =    _buckets[_nextBucketIndex++];    }    _currentBucket    =    b;    return    curr.value;    }    [CLASS]        BeanPropertyMap    Bucket    IteratorImpl    [METHOD]    next    [RETURN_TYPE]    SettableBeanProperty        [VARIABLES]    boolean    SettableBeanProperty    newProperty    oldProp    prop    property    value    Bucket[]    _buckets    buckets    newBuckets    Bucket    _currentBucket    b    bucket    curr    next    root    tail    String    key    name    newName    propName    long    serialVersionUID    int    _hashMask    _nextBucketIndex    _size    bcount    bucketCount    count    foundIndex    i    index    len    needed    result    size        	jacksondatabind_7411_BeanPropertyMap_1_1	388	1	src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java
506	[PATCH]    if    (_primaryMixIn    !=    null)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    java.lang.NullPointerException    testFormatForParsers    [CONTEXT]    if    (creatorMethods    ==    null)    {    _creatorMethods    =    Collections.emptyList();    }    else    {    _creatorMethods    =    creatorMethods;        [BUGGY]    if    (true)    {    _addFactoryMixIns(_primaryMixIn);    }        if    (_annotationIntrospector    !=    null)    {        for    (int    i    =    _creatorMethods.size();    --i    >=    0;    )    {    if    (_annotationIntrospector.hasIgnoreMarker(_creatorMethods.get(i)))    {    _creatorMethods.remove(i);    }    }    [CLASS]        AnnotatedClass    [METHOD]    resolveCreators    [RETURN_TYPE]    void        [VARIABLES]    Constructor    ctor    Constructor[]    declaredCtors    AnnotationIntrospector    _annotationIntrospector    aintr    AnnotatedMethodMap    _memberMethods    Method    m    int    i    AnnotationMap[]    NO_ANNOTATION_MAPS    MixInResolver    _mixInResolver    mir    boolean    _creatorsResolved    AnnotatedConstructor    _defaultConstructor    AnnotationMap    _classAnnotations    ann    classAnnotations    Class    _class    _primaryMixIn    acls    cls    List    _constructors    _creatorMethods    _fields    _superTypes    constructors    creatorMethods    superTypes        	jacksondatabind_1809_AnnotatedClass_1_1	389	1	src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java
507	[PATCH]    if    (o    ==    this)    return    true;	[BUG]    [BUGGY]    if    (o    ==    this)    return    false;    [FE]    junit.framework.AssertionFailedError    testArrayType    [CONTEXT]    public    boolean    equals(Object    o)    {    [BUGGY]    if    (o    ==    this)    return    false;    if    (o    ==    null)    return    false;    if    (o.getClass()    !=    getClass())    return    false;    ArrayType    other    =    (ArrayType)    o;    return    _componentType.equals(other._componentType);    }    [CLASS]        ArrayType    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    o    [VARIABLES]    ArrayType    other    JavaType    _componentType    componentType    newCompType    Object    _emptyArray    emptyInstance    h    o    typeHandler    valueHandler    boolean    long    serialVersionUID        	jacksondatabind_2654_ArrayType_1_1	250	1	src/main/java/com/fasterxml/jackson/databind/type/ArrayType.java
508	[PATCH]    if    (parameterTypes.length    !=    2)    {	[BUG]    [BUGGY]    if    (parameterTypes.length    !=    -2)    {    [FE]    java.lang.IllegalArgumentException:    Need    exactly    2    parameter    types    for    Map    types    (java.util.Map)    testParametricTypes    [CONTEXT]        if    (parametrized.isArray())    {        if    (parameterTypes.length    !=    1)    {    throw    new    IllegalArgumentException(   "Need    exactly    1    parameter    type    for    arrays    (   "+parametrized.getName()+   ")   ");    }    resultType    =    constructArrayType(parameterTypes[0]);    }    else    if    (Map.class.isAssignableFrom(parametrized))    {    [BUGGY]    if    (parameterTypes.length    !=    -2)    {    throw    new    IllegalArgumentException(   "Need    exactly    2    parameter    types    for    Map    types    (   "+parametrized.getName()+   ")   ");    }    resultType    =    constructMapType((Class<Map<?,?>>)parametrized,    parameterTypes[0],    parameterTypes[1]);    }    else    if    (Collection.class.isAssignableFrom(parametrized))    {    if    (parameterTypes.length    !=    1)    {    throw    new    IllegalArgumentException(   "Need    exactly    1    parameter    type    for    Collection    types    (   "+parametrized.getName()+   ")   ");    }    resultType    =    constructCollectionType((Class<Collection<?>>)parametrized,    parameterTypes[0]);    }    else    {    [CLASS]        TypeFactory    [METHOD]    constructParametricType    [RETURN_TYPE]    JavaType        Class<?>    parametrized    parameterTypes    [VARIABLES]    TypeModifier[]    _modifiers    mods    SimpleType    CORE_TYPE_BOOL    CORE_TYPE_INT    CORE_TYPE_LONG    CORE_TYPE_STRING    JavaType    resultType    TypeParser    _parser    p    boolean    HierarchicType    _cachedArrayListType    _cachedHashMapType    subType    superType    LRUMap    _typeCache    JavaType[]    NO_TYPES    parameterTypes    pt    result    Class    parametrized    TypeFactory    instance    long    serialVersionUID        	jacksondatabind_707_TypeFactory_1_1	584	1	src/main/java/com/fasterxml/jackson/databind/type/TypeFactory.java
509	[PATCH]    if    (_valueInstantiator.canCreateUsingDelegate())    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    java.lang.IllegalArgumentException:    Invalid    delegate-creator    definition    for    [simple    type,    class    com.fasterxml.jackson.databind.TestHandlerInstantiation$TypeIdBean]:    value    instantiator    (com.fasterxml.jackson.databind.deser.std.StdValueInstantiator)    returned    true    for    'canCreateUsingDelegate()',    but    null    for    'getDelegateType()'    testTypeIdResolver    [CONTEXT]    }    }        if    (_anySetter    !=    null    &&    !_anySetter.hasValueDeserializer())    {    _anySetter    =    _anySetter.withValueDeserializer(findDeserializer(ctxt,    _anySetter.getType(),    _anySetter.getProperty()));    }            [BUGGY]    if    (true)    {    JavaType    delegateType    =    _valueInstantiator.getDelegateType(ctxt.getConfig());    if    (delegateType    ==    null)    {    throw    new    IllegalArgumentException(   "Invalid    delegate-creator    definition    for       "+_beanType    +   ":    value    instantiator    (   "+_valueInstantiator.getClass().getName()    +   ")    returned    true    for    'canCreateUsingDelegate()',    but    null    for    'getDelegateType()'   ");    }    AnnotatedWithParams    delegateCreator    =    _valueInstantiator.getDelegateCreator();        BeanProperty.Std    property    =    new    BeanProperty.Std(null,    delegateType,    null,    _classAnnotations,    delegateCreator,    false);    [CLASS]        BeanDeserializerBase    [METHOD]    resolve    [RETURN_TYPE]    void        DeserializationContext    ctxt    [VARIABLES]    UnwrappedPropertyHandler    _unwrappedPropertyHandler    unwrapped    Std    property    Shape    _serializationShape    SettableBeanProperty    origProp    prop    u    ValueInjector[]    _injectables    HashMap    _subDeserializers    ValueInstantiator    _valueInstantiator    ObjectIdReader    _objectIdReader    oir    Builder    extTypes    SettableBeanProperty[]    creatorProps    JsonDeserializer    _delegateDeserializer    cd    deser    PropertyBasedCreator    _propertyBasedCreator    long    serialVersionUID    SettableAnyProperty    _anySetter    JavaType    _beanType    delegateType    AnnotatedWithParams    delegateCreator    Annotations    _classAnnotations    boolean    _ignoreAllUnknown    _needViewProcesing    _nonStandardCreation    _vanillaProcessing    hasViews    ignoreAllUnknown    BeanPropertyMap    _beanProperties    properties    DeserializationContext    ctxt    TypeDeserializer    typeDeser    Map    _backRefs    backRefs    ExternalTypeHandler    _externalTypeIdHandler    HashSet    _ignorableProps    ignorableProps        	jacksondatabind_6618_BeanDeserializerBase_1_1	491	1	src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java
510	[PATCH]    int    seconds    =    parseInt(date,    offset    +=    1,    offset    +=    2);	[BUG]    [BUGGY]    int    seconds    =    parseInt(date,    offset    +=    1,    offset    +=    -2);    [FE]    java.lang.IllegalArgumentException:    Failed    to    parse    date    2007-08-13T19:51:23Z    testParse    [CONTEXT]    int    day    =    parseInt(date,    offset    +=    1,    offset    +=    2);    checkOffset(date,    offset,    'T');        int    hour    =    parseInt(date,    offset    +=    1,    offset    +=    2);    checkOffset(date,    offset,    ':');    int    minutes    =    parseInt(date,    offset    +=    1,    offset    +=    2);    checkOffset(date,    offset,    ':');        [BUGGY]    int    seconds    =    parseInt(date,    offset    +=    1,    offset    +=    -2);        int    milliseconds    =    0;    if    (date.charAt(offset)    ==    '.')    {    checkOffset(date,    offset,    '.');    milliseconds    =    parseInt(date,    offset    +=    1,    offset    +=    3);    }        String    timezoneId;    char    timezoneIndicator    =    date.charAt(offset);    [CLASS]        ISO8601Utils    [METHOD]    parse    [RETURN_TYPE]    Date        String    date    [VARIABLES]    TimeZone    TIMEZONE_GMT    timezone    tz    boolean    IndexOutOfBoundsException    e    Calendar    calendar    char    timezoneIndicator    NumberFormatException    e    String    GMT_ID    date    timezoneId    int    day    hour    milliseconds    minutes    month    offset    seconds    year    IllegalArgumentException    e        	jacksondatabind_14362_ISO8601Utils_1_1	146	1	src/main/java/com/fasterxml/jackson/databind/util/ISO8601Utils.java
511	[PATCH]    if    ((dd    ==    _delegateDeserializer)    &&    (vd    ==    _valueDeserializer)    &&    (vtd    ==    _valueTypeDeserializer))    {	[BUG]    [BUGGY]    if    ((dd    ==    _delegateDeserializer)    &&    (vtd    ==    _valueTypeDeserializer))    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    (was    java.lang.NullPointerException)    (through    reference    chain:    com.fasterxml.jackson.databind.SetterlessWithValue[   "value_list   "])    testWithGetterAsSetter    [CONTEXT]    protected    CollectionDeserializer    withResolved(JsonDeserializer<?>    dd,    JsonDeserializer<?>    vd,    TypeDeserializer    vtd)    {    [BUGGY]    if    ((dd    ==    _delegateDeserializer)    &&    (vtd    ==    _valueTypeDeserializer))    {    return    this;    }    return    new    CollectionDeserializer(_collectionType,    (JsonDeserializer<Object>)    vd,    vtd,    _valueInstantiator,    (JsonDeserializer<Object>)    dd);    }    [CLASS]        CollectionDeserializer    [METHOD]    withResolved    [RETURN_TYPE]    CollectionDeserializer        JsonDeserializer<?>    dd    JsonDeserializer<?>    vd    TypeDeserializer    vtd    [VARIABLES]    JavaType    _collectionType    collectionType    boolean    JsonDeserializer    _delegateDeserializer    _valueDeserializer    dd    delegateDeser    valueDeser    vd    TypeDeserializer    _valueTypeDeserializer    valueTypeDeser    vtd    ValueInstantiator    _valueInstantiator    valueInstantiator    long    serialVersionUID        	jacksondatabind_8725_CollectionDeserializer_1_1	111	1	src/main/java/com/fasterxml/jackson/databind/deser/std/CollectionDeserializer.java
512	[PATCH]    JavaType    idType    =    provider.getTypeFactory().findTypeParameters(type,    ObjectIdGenerator.class)[0];	[BUG]    [BUGGY]    JavaType    idType    =    provider.getTypeFactory().findTypeParameters(type,    ObjectIdGenerator.class)[-1];    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    -1    (through    reference    chain:    com.fasterxml.jackson.databind.struct.IdWrapperCustom[   "node   "])    testCustomPropertyViaProperty    [CONTEXT]                        objectIdInfo    =    intr.findObjectReferenceInfo(accessor,    objectIdInfo);    ObjectIdGenerator<?>    gen;    Class<?>    implClass    =    objectIdInfo.getGeneratorType();    JavaType    type    =    provider.constructType(implClass);    [BUGGY]    JavaType    idType    =    provider.getTypeFactory().findTypeParameters(type,    ObjectIdGenerator.class)[-1];        if    (implClass    ==    ObjectIdGenerators.PropertyGenerator.class)    {    String    propName    =    objectIdInfo.getPropertyName();    BeanPropertyWriter    idProp    =    null;    for    (int    i    =    0,    len    =    _props.length    ;;    ++i)    {    if    (i    ==    len)    {    throw    new    IllegalArgumentException(   "Invalid    Object    Id    definition    for       "+_handledType.getName()    +   ":    can    not    find    property    with    name    '   "+propName+   "'   ");    }    [CLASS]        BeanSerializerBase    [METHOD]    createContextual    [RETURN_TYPE]    JsonSerializer        SerializerProvider    provider    BeanProperty    property    [VARIABLES]    ObjectIdGenerator    gen    Shape    _serializationShape    shape    BeanSerializerBase    contextual    AnnotatedMember    _typeId    accessor    AnnotationIntrospector    intr    String[]    ignorals    String    propName    JsonSerializer    ser    ObjectIdInfo    objectIdInfo    BeanPropertyWriter[]    NO_PROPS    _filteredProps    _props    filteredProperties    fpropsIn    properties    props    propsIn    result    AnyGetterWriter    _anyGetterWriter    int    i    len    BeanProperty    property    JavaType    idType    type    ObjectIdWriter    _objectIdWriter    objectIdWriter    oiw    boolean    Value    format    Object    _propertyFilterId    convDef    Class    implClass    SerializerProvider    provider    BeanPropertyWriter    fp    idProp    prop        	jacksondatabind_4175_BeanSerializerBase_1_1	386	1	src/main/java/com/fasterxml/jackson/databind/ser/std/BeanSerializerBase.java
513	[PATCH]    if    (objectIdInfo    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    (was    java.lang.NullPointerException)    (through    reference    chain:    com.fasterxml.jackson.databind.TypeIdBeanWrapper[   "bean   "])    testTypeIdResolver    [CONTEXT]    ObjectIdWriter    oiw    =    _objectIdWriter;    String[]    ignorals    =    null;    final    AnnotationIntrospector    intr    =    provider.getAnnotationIntrospector();    final    AnnotatedMember    accessor    =    (property    ==    null    ||    intr    ==    null)    ?    null    :    property.getMember();        if    (accessor    !=    null)    {    ignorals    =    intr.findPropertiesToIgnore(accessor);    ObjectIdInfo    objectIdInfo    =    intr.findObjectIdInfo(accessor);    [BUGGY]    if    (false)    {        if    (oiw    !=    null)    {    objectIdInfo    =    intr.findObjectReferenceInfo(accessor,    new    ObjectIdInfo(   "   ",    null,    null));    oiw    =    _objectIdWriter.withAlwaysAsId(objectIdInfo.getAlwaysAsId());    }    }    else    {                    [CLASS]        BeanSerializerBase    [METHOD]    createContextual    [RETURN_TYPE]    JsonSerializer        SerializerProvider    provider    BeanProperty    property    [VARIABLES]    ObjectIdGenerator    gen    Shape    _serializationShape    shape    BeanSerializerBase    contextual    AnnotatedMember    _typeId    accessor    AnnotationIntrospector    intr    String[]    ignorals    String    propName    JsonSerializer    ser    ObjectIdInfo    objectIdInfo    BeanPropertyWriter[]    NO_PROPS    _filteredProps    _props    filteredProperties    fpropsIn    properties    props    propsIn    result    AnyGetterWriter    _anyGetterWriter    int    i    len    BeanProperty    property    JavaType    idType    type    ObjectIdWriter    _objectIdWriter    objectIdWriter    oiw    boolean    Value    format    Object    _propertyFilterId    convDef    Class    implClass    SerializerProvider    provider    BeanPropertyWriter    fp    idProp    prop        	jacksondatabind_4169_BeanSerializerBase_1_1	369	1	src/main/java/com/fasterxml/jackson/databind/ser/std/BeanSerializerBase.java
514	[PATCH]    for    (int    i    =    1;    i    <    len;    ++i)    {	[BUG]    [BUGGY]    for    (int    i    =    1;    i    <=    len;    ++i)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    1    testInvalid    [CONTEXT]    public    String    toString()    {    StringBuilder    sb    =    new    StringBuilder();    sb.append('[');    final    int    len    =    _readers.length;    if    (len    >    0)    {    sb.append(_readers[0].getFactory().getFormatName());    [BUGGY]    for    (int    i    =    1;    i    <=    len;    ++i)    {    sb.append(   ",       ");    sb.append(_readers[i].getFactory().getFormatName());    }    }    sb.append(']');    return    sb.toString();    }    [CLASS]        DataFormatReaders    AccessorForReader    Match    [METHOD]    toString    [RETURN_TYPE]    String        [VARIABLES]    byte[]    _bufferedData    buffer    buffered    fullInputData    inputDocument    boolean    StringBuilder    sb    InputStream    _originalStream    in    ObjectReader    _match    match    MatchStrength    _matchStrength    _minimalMatch    _optimalMatch    minMatch    optMatch    strength    ObjectReader[]    _readers    detectors    r    readers    int    DEFAULT_MAX_INPUT_LOOKAHEAD    _bufferedLength    _bufferedStart    _maxInputLookahead    bufferedLength    bufferedStart    i    len    lookaheadBytes    maxInputLookahead    offset    start        	jacksondatabind_5423_DataFormatReaders_1_1	200	1	src/main/java/com/fasterxml/jackson/databind/deser/DataFormatReaders.java
515	[PATCH]    if    (refName    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.IllegalArgumentException:    Can    not    handle    managed/back    reference    'null':    type    for    value    deserializer    is    not    BeanDeserializer    or    ContainerDeserializerBase,    but    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer    testTypeIdResolver    [CONTEXT]    {    String    refName    =    prop.getManagedReferenceName();    [BUGGY]    if    (false)    {    return    prop;    }    JsonDeserializer<?>    valueDeser    =    prop.getValueDeserializer();    SettableBeanProperty    backProp    =    null;    boolean    isContainer    =    false;    if    (valueDeser    instanceof    BeanDeserializerBase)    {    backProp    =    ((BeanDeserializerBase)    valueDeser).findBackReference(refName);    }    else    if    (valueDeser    instanceof    ContainerDeserializerBase<?>)    {    JsonDeserializer<?>    contentDeser    =    ((ContainerDeserializerBase<?>)    valueDeser).getContentDeserializer();    if    (!(contentDeser    instanceof    BeanDeserializerBase))    {    [CLASS]        BeanDeserializerBase    [METHOD]    _resolveManagedReferenceProperty    [RETURN_TYPE]    SettableBeanProperty        DeserializationContext    ctxt    SettableBeanProperty    prop    [VARIABLES]    UnwrappedPropertyHandler    _unwrappedPropertyHandler    unwrapped    Shape    _serializationShape    shape    SettableBeanProperty    backProp    prop    ValueInjector[]    _injectables    HashMap    _subDeserializers    ValueInstantiator    _valueInstantiator    ObjectIdReader    _objectIdReader    oir    String    deserName    refName    JsonDeserializer    _delegateDeserializer    cd    contentDeser    deser    ser    valueDeser    PropertyBasedCreator    _propertyBasedCreator    long    serialVersionUID    SettableAnyProperty    _anySetter    JavaType    _beanType    backRefType    delegateType    idType    referredType    type    Annotations    _classAnnotations    boolean    _ignoreAllUnknown    _needViewProcesing    _nonStandardCreation    _vanillaProcessing    hasViews    ignoreAllUnknown    isContainer    BeanPropertyMap    _beanProperties    properties    DeserializationContext    ctxt    Map    _backRefs    backRefs    ExternalTypeHandler    _externalTypeIdHandler    HashSet    _ignorableProps    ignorableProps    newIgnored        	jacksondatabind_6682_BeanDeserializerBase_1_1	632	1	src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java
516	[PATCH]    int    index    =    key.hashCode()    &    hashMask;	[BUG]    [BUGGY]    int    index    =    key.hashCode()    ^    hashMask;    [FE]    java.lang.ArrayIndexOutOfBoundsException:    1107274224    testReconfiguringOfWrapping    [CONTEXT]    public    JsonSerializerMap(Map<TypeKey,JsonSerializer<Object>>    serializers)    {    int    size    =    findSize(serializers.size());    _size    =    size;    int    hashMask    =    (size-1);    Bucket[]    buckets    =    new    Bucket[size];    for    (Map.Entry<TypeKey,JsonSerializer<Object>>    entry    :    serializers.entrySet())    {    TypeKey    key    =    entry.getKey();    [BUGGY]    int    index    =    key.hashCode()    ^    hashMask;    buckets[index]    =    new    Bucket(buckets[index],    key,    entry.getValue());    }    _buckets    =    buckets;    }    [CLASS]        JsonSerializerMap    Bucket    [METHOD]    <init>    [RETURN_TYPE]    Map)        Object>>    serializers    [VARIABLES]    Entry    entry    boolean    Bucket[]    _buckets    buckets    Bucket    next    TypeKey    key    JsonSerializer    value    Map    serializers    int    _size    hashMask    index    size        	jacksondatabind_3887_JsonSerializerMap_1_1	25	1	src/main/java/com/fasterxml/jackson/databind/ser/impl/JsonSerializerMap.java
517	[PATCH]    if    (ann    !=    null)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    java.lang.NullPointerException    testFormatForParsers    [CONTEXT]    public    String    findSerializationName(AnnotatedMethod    am)    {        JsonGetter    ann    =    am.getAnnotation(JsonGetter.class);    [BUGGY]    if    (true)    {    return    ann.value();    }    JsonProperty    pann    =    am.getAnnotation(JsonProperty.class);    if    (pann    !=    null)    {    return    pann.value();    }                    [CLASS]        JacksonAnnotationIntrospector    [METHOD]    findSerializationName    [RETURN_TYPE]    String        AnnotatedMethod    am    [VARIABLES]    JsonProperty    pann    boolean    AnnotatedMethod    am    JsonGetter    ann    long    serialVersionUID        	jacksondatabind_10967_JacksonAnnotationIntrospector_1_1	532	1	src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java
518	[PATCH]    if    (sb    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.NullPointerException    testFormatForParsers    [CONTEXT]    return    null;    }        StringBuilder    sb    =    null;    for    (int    i    =    0;    i    <    len;    ++i)    {    char    upper    =    basename.charAt(i);    char    lower    =    Character.toLowerCase(upper);    if    (upper    ==    lower)    {    break;    }    [BUGGY]    if    (false)    {    sb    =    new    StringBuilder(basename);    }    sb.setCharAt(i,    lower);    }    return    (sb    ==    null)    ?    basename    :    sb.toString();    }    [CLASS]        BeanUtil    [METHOD]    manglePropertyName    [RETURN_TYPE]    String        String    basename    [VARIABLES]    boolean    StringBuilder    sb    char    lower    upper    String    basename    int    i    len        	jacksondatabind_14044_BeanUtil_1_1	187	1	src/main/java/com/fasterxml/jackson/databind/util/BeanUtil.java
519	[PATCH]    if    (t    ==    JsonToken.VALUE_NUMBER_INT    ||    t    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    //    coercing    should    work    too	[BUG]    [BUGGY]    if    (true)    {    //    coercing    should    work    too    [FE]    com.fasterxml.jackson.core.JsonParseException:    Current    token    (VALUE_STRING)    not    numeric,    can    not    use    numeric    value    accessors    testEmptyStringForWrappers    [CONTEXT]    {        JsonToken    t    =    jp.getCurrentToken();        [BUGGY]    if    (true)    {    return    jp.getFloatValue();    }        if    (t    ==    JsonToken.VALUE_STRING)    {    String    text    =    jp.getText().trim();    if    (text.length()    ==    0)    {    return    (Float)    getEmptyValue();    }    switch    (text.charAt(0))    {    case    'I':    [CLASS]        StdDeserializer    [METHOD]    _parseFloat    [RETURN_TYPE]    Float        JsonParser    jp    DeserializationContext    ctxt    [VARIABLES]    boolean    DeserializationContext    ctxt    Class    _valueClass    vc    JsonToken    t    String    text    long    l    serialVersionUID    IllegalArgumentException    iae    JsonParser    jp        	jacksondatabind_7120_StdDeserializer_1_1	392	1	src/main/java/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java
520	[PATCH]    if    (type.isEnumType())    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    com.fasterxml.jackson.databind.exc.InvalidFormatException:    Can    not    construct    Map    key    of    type    com.fasterxml.jackson.databind.deser.TestEnumDeserialization$TestEnum    from    String       "NO-SUCH-VALUE   ":    not    a    valid    representation:    null    testAllowUnknownEnumValuesAsMapKeysReadAsNull    [CONTEXT]    BeanDescription    beanDesc    =    config.introspectClassAnnotations(type.getRawClass());    for    (KeyDeserializers    d:    _factoryConfig.keyDeserializers())    {    deser    =    d.findKeyDeserializer(type,    config,    beanDesc);    if    (deser    !=    null)    {    break;    }    }    }        if    (deser    ==    null)    {    [BUGGY]    if    (false)    {    return    _createEnumKeyDeserializer(ctxt,    type);    }    deser    =    StdKeyDeserializers.findStringBasedKeyDeserializer(config,    type);    }        if    (deser    !=    null)    {    if    (_factoryConfig.hasDeserializerModifiers())    {    for    (BeanDeserializerModifier    mod    :    _factoryConfig.deserializerModifiers())    {    deser    =    mod.modifyKeyDeserializer(config,    type,    deser);    [CLASS]        BasicDeserializerFactory    [METHOD]    createKeyDeserializer    [RETURN_TYPE]    KeyDeserializer        DeserializationContext    ctxt    JavaType    type    [VARIABLES]    BeanDeserializerModifier    mod    JavaType    type    boolean    DeserializerFactoryConfig    _factoryConfig    config    HashMap    _collectionFallbacks    _mapFallbacks    BeanDescription    beanDesc    DeserializationContext    ctxt    KeyDeserializers    d    Class    CLASS_CHAR_BUFFER    CLASS_ITERABLE    CLASS_OBJECT    CLASS_STRING    cls    collectionClass    currClass    enumClass    fallback    instClass    kt    mapClass    nextCls    nodeClass    prevCls    raw    returnType    type    DeserializationConfig    config    KeyDeserializer    deser        	jacksondatabind_6060_BasicDeserializerFactory_1_1	1197	1	src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java
521	[PATCH]    return    (ix    <    0)    ?    n    :    n.substring(ix+1);	[BUG]    [BUGGY]    return    (ix    !=    0)    ?    n    :    n.substring(ix+1);    [FE]    junit.framework.ComparisonFailure:    expected:<{   "@type   ":   "[]TestSubtypes$SubD   ",   "...>    but    was:<{   "@type   ":   "[com.fasterxml.jackson.databind.jsontype.]TestSubtypes$SubD   ",   "...>    testSerialization    [CONTEXT]    protected    static    String    _defaultTypeId(Class<?>    cls)    {    String    n    =    cls.getName();    int    ix    =    n.lastIndexOf('.');    [BUGGY]    return    (ix    !=    0)    ?    n    :    n.substring(ix+1);    }    [CLASS]        TypeNameIdResolver    [METHOD]    _defaultTypeId    [RETURN_TYPE]    String        Class<?>    cls    [VARIABLES]    MapperConfig    _config    config    Class    cls    String    n    boolean    HashMap    _idToType    _typeToId    idToType    typeToId    int    ix        	jacksondatabind_11403_TypeNameIdResolver_1_1	156	1	src/main/java/com/fasterxml/jackson/databind/jsontype/impl/TypeNameIdResolver.java
522	[PATCH]    int    i    =    0;	[BUG]    [BUGGY]    int    i    =    1;    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Unexpected    JSON    values;    expected    at    most    2    properties    (in    JSON    Array)    testSimpleBuilder    [CONTEXT]    {    if    (_nonStandardCreation)    {    return    _deserializeWithCreator(jp,    ctxt);    }    Object    builder    =    _valueInstantiator.createUsingDefault(ctxt);    if    (_injectables    !=    null)    {    injectValues(ctxt,    builder);    }    Class<?>    activeView    =    _needViewProcesing    ?    ctxt.getActiveView()    :    null;    final    SettableBeanProperty[]    props    =    _orderedProperties;    [BUGGY]    int    i    =    1;    final    int    propCount    =    props.length;    while    (true)    {    if    (jp.nextToken()    ==    JsonToken.END_ARRAY)    {    return    builder;    }    if    (i    ==    propCount)    {    break;    }    SettableBeanProperty    prop    =    props[i];    ++i;    [CLASS]        BeanAsArrayBuilderDeserializer    [METHOD]    _deserializeNonVanilla    [RETURN_TYPE]    Object        JsonParser    jp    DeserializationContext    ctxt    [VARIABLES]    BeanDeserializerBase    _delegate    delegate    boolean    AnnotatedMethod    _buildMethod    buildMethod    SettableBeanProperty    prop    DeserializationContext    ctxt    SettableBeanProperty[]    _orderedProperties    ordered    props    Object    builder    Class    activeView    long    serialVersionUID    int    i    propCount    Exception    e    JsonParser    jp        	jacksondatabind_8514_BeanAsArrayBuilderDeserializer_1_1	217	1	src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanAsArrayBuilderDeserializer.java
523	[PATCH]    return    false;	[BUG]    [BUGGY]    return    true;    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Can    not    construct    instance    of    org.w3c.dom.Document,    problem:    abstract    types    either    need    to    be    mapped    to    concrete    types,    have    custom    deserializer,    or    be    instantiated    with    additional    type    information    testDeserializeNonNS    [CONTEXT]    if    (supertype.getName().startsWith(prefix))    {    return    true;    }    }        for    (Class<?>    cls    =    rawType;    cls    !=    null;    cls    =    cls.getSuperclass())    {    if    (hasInterfaceStartingWith(cls,    prefix))    {    return    true;    }    }    [BUGGY]    return    true;    }    [CLASS]        OptionalHandlerFactory    [METHOD]    hasSupertypeStartingWith    [RETURN_TYPE]    boolean        Class<?>    rawType    String    prefix    [VARIABLES]    OptionalHandlerFactory    instance    Class    cls    rawType    supertype    String    CLASS_NAME_DOM_DOCUMENT    CLASS_NAME_DOM_NODE    DESERIALIZERS_FOR_JAVAX_XML    DESERIALIZER_FOR_DOM_DOCUMENT    DESERIALIZER_FOR_DOM_NODE    PACKAGE_PREFIX_JAVAX_XML    SERIALIZERS_FOR_JAVAX_XML    SERIALIZER_FOR_DOM_NODE    className    classNameToImplement    factoryName    interfaceToImplement    prefix    boolean    long    serialVersionUID        	jacksondatabind_10130_OptionalHandlerFactory_1_1	154	1	src/main/java/com/fasterxml/jackson/databind/ext/OptionalHandlerFactory.java
524	[PATCH]    if    (paramCount    ==    (paramAnns.length    +    1))    {	[BUG]    [BUGGY]    if    (paramCount    ==    (paramAnns.length    +    0))    {    [FE]    java.lang.IllegalStateException:    Internal    error:    constructor    for    com.fasterxml.jackson.databind.introspect.TestPOJOPropertiesCollector$Issue701Bean    has    mismatch:    2    parameters;    1    sets    of    annotations    testInnerClassWithAnnotationsInCreator    [CONTEXT]    Class<?>    dc    =    ctor.getDeclaringClass();        if    (dc.isEnum()    &&    (paramCount    ==    paramAnns.length    +    2))    {    Annotation[][]    old    =    paramAnns;    paramAnns    =    new    Annotation[old.length+2][];    System.arraycopy(old,    0,    paramAnns,    2,    old.length);    resolvedAnnotations    =    _collectRelevantAnnotations(paramAnns);    }    else    if    (dc.isMemberClass())    {        [BUGGY]    if    (paramCount    ==    (paramAnns.length    +    0))    {        Annotation[][]    old    =    paramAnns;    paramAnns    =    new    Annotation[old.length+1][];    System.arraycopy(old,    0,    paramAnns,    1,    old.length);    resolvedAnnotations    =    _collectRelevantAnnotations(paramAnns);    }    }    if    (resolvedAnnotations    ==    null)    {    throw    new    IllegalStateException(   "Internal    error:    constructor    for       "+ctor.getDeclaringClass().getName()    +   "    has    mismatch:       "+paramCount+   "    parameters;       "+paramAnns.length+   "    sets    of    annotations   ");    [CLASS]        AnnotatedClass    [METHOD]    _constructConstructor    [RETURN_TYPE]    AnnotatedConstructor        Constructor<?>    ctor    boolean    defaultCtor    [VARIABLES]    AnnotationMap[]    NO_ANNOTATION_MAPS    resolvedAnnotations    MixInResolver    _mixInResolver    mir    boolean    _creatorsResolved    defaultCtor    AnnotatedConstructor    _defaultConstructor    AnnotationMap    _classAnnotations    ann    annotations    classAnnotations    Constructor    ctor    AnnotationIntrospector    _annotationIntrospector    aintr    Annotation[][]    old    paramAnns    Class    _class    _primaryMixIn    acls    c    cls    dc    mixInCls    mixin    parent    targetClass    toMask    List    _constructors    _creatorMethods    _fields    _superTypes    constructors    creatorMethods    parents    superTypes    AnnotatedMethodMap    _memberMethods    methods    mixIns    mixins    int    paramCount        	jacksondatabind_1981_AnnotatedClass_1_1	775	1	src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java
525	[PATCH]    }    else    if    (   "nativeMethod   ".equals(propName))    {	[BUG]    [BUGGY]    }    else    if    (false)    {    [FE]    com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException:    Unrecognized    field       "nativeMethod   "    (class    java.lang.StackTraceElement),    not    marked    as    ignorable    testWithNullMessage    [CONTEXT]    }    else    if    (   "fileName   ".equals(propName))    {    fileName    =    jp.getText();    }    else    if    (   "lineNumber   ".equals(propName))    {    if    (t.isNumeric())    {    lineNumber    =    jp.getIntValue();    }    else    {    throw    JsonMappingException.from(jp,       "Non-numeric    token    (   "+t+   ")    for    property    'lineNumber'   ");    }    }    else    if    (   "methodName   ".equals(propName))    {    methodName    =    jp.getText();    [BUGGY]    }    else    if    (false)    {        }    else    {    handleUnknownProperty(jp,    ctxt,    _valueClass,    propName);    }    }    return    new    StackTraceElement(className,    methodName,    fileName,    lineNumber);    }    throw    ctxt.mappingException(_valueClass,    t);    }    [CLASS]        JdkDeserializers    UUIDDeserializer    URLDeserializer    URIDeserializer    CurrencyDeserializer    PatternDeserializer    LocaleDeserializer    InetAddressDeserializer    CharsetDeserializer    FileDeserializer    AtomicReferenceDeserializer    AtomicBooleanDeserializer    StackTraceElementDeserializer    [METHOD]    deserialize    [RETURN_TYPE]    StackTraceElement        JsonParser    jp    DeserializationContext    ctxt    [VARIABLES]    StackTraceElementDeserializer    instance    CurrencyDeserializer    instance    FileDeserializer    instance    LocaleDeserializer    instance    String    className    fileName    methodName    propName    JsonDeserializer    _valueDeserializer    deser    int    lineNumber    URLDeserializer    instance    JavaType    _referencedType    referencedType    boolean    UUIDDeserializer    instance    URIDeserializer    instance    InetAddressDeserializer    instance    AtomicBooleanDeserializer    instance    DeserializationContext    ctxt    JsonToken    t    CharsetDeserializer    instance    PatternDeserializer    instance    HashSet    _classNames    JsonParser    jp        	jacksondatabind_9044_JdkDeserializers_1_1	411	1	src/main/java/com/fasterxml/jackson/databind/deser/std/JdkDeserializers.java
526	[PATCH]    return    (value    ==    null)    ||    (value.length()    ==    0);	[BUG]    [BUGGY]    return    (value    ==    null)    ||    (value.length()    ==    1);    [FE]    junit.framework.ComparisonFailure:    expected:<{[]}>    but    was:<{[   "str   ":   "   "]}>    testEmptyInclusion    [CONTEXT]    public    boolean    isEmpty(String    value)    {    [BUGGY]    return    (value    ==    null)    ||    (value.length()    ==    1);    }    [CLASS]        StringSerializer    [METHOD]    isEmpty    [RETURN_TYPE]    boolean        String    value    [VARIABLES]    boolean    String    value        	jacksondatabind_13923_StringSerializer_1_1	32	1	src/main/java/com/fasterxml/jackson/databind/ser/std/StringSerializer.java
527	[PATCH]    public    boolean    hasAbstractTypeResolvers()    {    return    _abstractTypeResolvers.length    >    0;    }	[BUG]    [BUGGY]    public    boolean    hasAbstractTypeResolvers()    {    return    false;    }    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Unexpected    token    (END_OBJECT),    expected    FIELD_NAME:    missing    property    '#type'    that    is    to    contain    type    id    (for    class    com.fasterxml.jackson.databind.jsontype.TestSubtypes$SuperTypeWithoutDefault)    testDefaultImplViaModule    [CONTEXT]    public    boolean    hasDeserializerModifiers()    {    return    _modifiers.length    >    0;    }    [CLASS]        DeserializerFactoryConfig    [METHOD]    hasDeserializerModifiers    [RETURN_TYPE]    boolean        [VARIABLES]    AbstractTypeResolver[]    NO_ABSTRACT_TYPE_RESOLVERS    _abstractTypeResolvers    all    atr    ValueInstantiators[]    NO_VALUE_INSTANTIATORS    _valueInstantiators    all    vi    Deserializers[]    NO_DESERIALIZERS    _additionalDeserializers    all    allAdditionalDeserializers    boolean    KeyDeserializers[]    DEFAULT_KEY_DESERIALIZERS    _additionalKeyDeserializers    all    allAdditionalKeyDeserializers    long    serialVersionUID    BeanDeserializerModifier[]    NO_MODIFIERS    _modifiers    all    modifiers        	jacksondatabind_5492_DeserializerFactoryConfig_1_1	183	1	src/main/java/com/fasterxml/jackson/databind/cfg/DeserializerFactoryConfig.java
528	[PATCH]    int    month    =    parseInt(date,    offset    +=    1,    offset    +=    2);	[BUG]    [BUGGY]    int    month    =    parseInt(date,    offset    +=    1,    offset    +=    -2);    [FE]    java.lang.IllegalArgumentException:    Failed    to    parse    date    2007-08-13T19:51:23Z    testParse    [CONTEXT]    public    static    Date    parse(String    date)    {    try    {    int    offset    =    0;        int    year    =    parseInt(date,    offset,    offset    +=    4);    checkOffset(date,    offset,    '-');            [BUGGY]    int    month    =    parseInt(date,    offset    +=    1,    offset    +=    -2);    checkOffset(date,    offset,    '-');        int    day    =    parseInt(date,    offset    +=    1,    offset    +=    2);    checkOffset(date,    offset,    'T');        int    hour    =    parseInt(date,    offset    +=    1,    offset    +=    2);    checkOffset(date,    offset,    ':');        [CLASS]        ISO8601Utils    [METHOD]    parse    [RETURN_TYPE]    Date        String    date    [VARIABLES]    TimeZone    TIMEZONE_GMT    timezone    tz    boolean    IndexOutOfBoundsException    e    Calendar    calendar    char    timezoneIndicator    NumberFormatException    e    String    GMT_ID    date    timezoneId    int    day    hour    milliseconds    minutes    month    offset    seconds    year    IllegalArgumentException    e        	jacksondatabind_14342_ISO8601Utils_1_1	132	1	src/main/java/com/fasterxml/jackson/databind/util/ISO8601Utils.java
529	[PATCH]    if    (activeView    ==    null    ||    _view.isAssignableFrom(activeView))    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.ComparisonFailure:    expected:<[1,[null],3]>    but    was:<[1,[2],3]>    testWithView    [CONTEXT]    public    void    serializeAsColumn(Object    bean,    JsonGenerator    jgen,    SerializerProvider    prov)    throws    Exception    {    Class<?>    activeView    =    prov.getActiveView();    [BUGGY]    if    (true)    {    _delegate.serializeAsColumn(bean,    jgen,    prov);    }    else    {    _delegate.serializeAsPlaceholder(bean,    jgen,    prov);    }    }    [CLASS]        FilteredBeanPropertyWriter    SingleView    MultiView    [METHOD]    serializeAsColumn    [RETURN_TYPE]    void        Object    bean    JsonGenerator    jgen    SerializerProvider    prov    [VARIABLES]    Class[]    _views    views    viewsToIncludeIn    boolean    JsonGenerator    jgen    Class    _view    activeView    view    Object    bean    SerializerProvider    prov    BeanPropertyWriter    _delegate    base    delegate        	jacksondatabind_12461_FilteredBeanPropertyWriter_1_1	73	1	src/main/java/com/fasterxml/jackson/databind/ser/impl/FilteredBeanPropertyWriter.java
530	[PATCH]    padInt(formatted,    calendar.get(Calendar.MONTH)    +    1,       "MM   ".length());	[BUG]    [BUGGY]    padInt(formatted,    calendar.get(Calendar.MONTH)    +    0,       "MM   ".length());    [FE]    junit.framework.ComparisonFailure:    expected:<2007-0[8]-13T19:51:23Z>    but    was:<2007-0[7]-13T19:51:23Z>    testFormat    [CONTEXT]    calendar.setTime(date);        int    capacity    =       "yyyy-MM-ddThh:mm:ss   ".length();    capacity    +=    millis    ?       ".sss   ".length()    :    0;    capacity    +=    tz.getRawOffset()    ==    0    ?       "Z   ".length()    :       "+hh:mm   ".length();    StringBuilder    formatted    =    new    StringBuilder(capacity);    padInt(formatted,    calendar.get(Calendar.YEAR),       "yyyy   ".length());    formatted.append('-');    [BUGGY]    padInt(formatted,    calendar.get(Calendar.MONTH)    +    0,       "MM   ".length());    formatted.append('-');    padInt(formatted,    calendar.get(Calendar.DAY_OF_MONTH),       "dd   ".length());    formatted.append('T');    padInt(formatted,    calendar.get(Calendar.HOUR_OF_DAY),       "hh   ".length());    formatted.append(':');    padInt(formatted,    calendar.get(Calendar.MINUTE),       "mm   ".length());    formatted.append(':');    padInt(formatted,    calendar.get(Calendar.SECOND),       "ss   ".length());    if    (millis)    {    formatted.append('.');    [CLASS]        ISO8601Utils    [METHOD]    format    [RETURN_TYPE]    String        Date    date    boolean    millis    TimeZone    tz    [VARIABLES]    TimeZone    TIMEZONE_GMT    tz    boolean    millis    StringBuilder    formatted    Calendar    calendar    String    GMT_ID    Date    date    int    capacity    hours    minutes    offset        	jacksondatabind_14264_ISO8601Utils_1_1	81	1	src/main/java/com/fasterxml/jackson/databind/util/ISO8601Utils.java
531	[PATCH]    if    (!_class.isAssignableFrom(subclass))    {	[BUG]    [BUGGY]    if    (!true)    {    [FE]    junit.framework.AssertionFailedError:    Expected    an    exception    with    one    of    substrings    ([is    not    assignable    to]):    got    one    with    message       "Unrecognized    field       "123   "    (class    com.fasterxml.jackson.databind.deser.TestValueAnnotations$BrokenMapKeyHolder),    not    marked    as    ignorable    (one    known    property:       "strings   "])    testOverrideKeyClassInvalid    [CONTEXT]    protected    void    _assertSubclass(Class<?>    subclass,    Class<?>    superClass)    {    [BUGGY]    if    (!true)    {    throw    new    IllegalArgumentException(   "Class       "+subclass.getName()+   "    is    not    assignable    to       "+_class.getName());    }    }    [CLASS]        JavaType    [METHOD]    _assertSubclass    [RETURN_TYPE]    void        Class<?>    subclass    Class<?>    superClass    [VARIABLES]    Class    _class    clz    contentClass    raw    subclass    superClass    superclass    Object    _typeHandler    _valueHandler    h    typeHandler    valueHandler    boolean    _asStatic    asStatic    long    serialVersionUID    int    _hashCode    additionalHash    index    mod        	jacksondatabind_173_JavaType_1_1	427	1	src/main/java/com/fasterxml/jackson/databind/JavaType.java
532	[PATCH]    if    (name.startsWith(   "get   "))    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException:    Unrecognized    field       "tring   "    (class    com.fasterxml.jackson.databind.TestObjectMapperBeanDeserializer$TestBean),    not    marked    as    ignorable    (5    known    properties:    ,       "desc   ",       "x   ",       "y   ",       "uri   ",       "misc   "])    testSimpleBean    [CONTEXT]    public    static    String    okNameForRegularGetter(AnnotatedMethod    am,    String    name)    {    [BUGGY]    if    (true)    {                                if    (   "getCallbacks   ".equals(name))    {    if    (isCglibGetCallbacks(am))    {    return    null;    [CLASS]        BeanUtil    [METHOD]    okNameForRegularGetter    [RETURN_TYPE]    String        AnnotatedMethod    am    String    name    [VARIABLES]    boolean    AnnotatedMethod    am    String    name        	jacksondatabind_13968_BeanUtil_1_1	29	1	src/main/java/com/fasterxml/jackson/databind/util/BeanUtil.java
533	[PATCH]    String    name    =    (pn    ==    null)    ?    null    :    pn.getSimpleName();	[BUG]    [BUGGY]    String    name    =    (false)    ?    null    :    pn.getSimpleName();    [FE]    java.lang.NullPointerException    testWithFactoryAndDelegate    [CONTEXT]    }    }        AnnotatedParameter    nonAnnotatedParam    =    null;    CreatorProperty[]    properties    =    new    CreatorProperty[argCount];    int    namedCount    =    0;    int    injectCount    =    0;    for    (int    i    =    0;    i    <    argCount;    ++i)    {    AnnotatedParameter    param    =    factory.getParameter(i);    PropertyName    pn    =    (param    ==    null)    ?    null    :    intr.findNameForDeserialization(param);    [BUGGY]    String    name    =    (false)    ?    null    :    pn.getSimpleName();    Object    injectId    =    intr.findInjectableValueId(param);    if    (name    !=    null    &&    name.length()    >    0)    {    ++namedCount;    properties[i]    =    constructCreatorProperty(ctxt,    beanDesc,    name,    i,    param,    injectId);    }    else    if    (injectId    !=    null)    {    ++injectCount;    properties[i]    =    constructCreatorProperty(ctxt,    beanDesc,    name,    i,    param,    injectId);    }    else    if    (nonAnnotatedParam    ==    null)    {    nonAnnotatedParam    =    param;    }    [CLASS]        BasicDeserializerFactory    [METHOD]    _addDeserializerFactoryMethods    [RETURN_TYPE]    void        DeserializationContext    ctxt    BeanDescription    beanDesc    VisibilityChecker<?>    vchecker    AnnotationIntrospector    intr    CreatorCollector    creators    [VARIABLES]    PropertyName    pn    CreatorProperty[]    properties    DeserializerFactoryConfig    _factoryConfig    config    AnnotatedMethod    factory    HashMap    _collectionFallbacks    _mapFallbacks    AnnotatedParameter    nonAnnotatedParam    param    BeanDescription    beanDesc    AnnotationIntrospector    intr    DeserializationConfig    config    String    name    int    argCount    i    injectCount    namedCount    boolean    isCreator    VisibilityChecker    vchecker    DeserializationContext    ctxt    Class    CLASS_CHAR_BUFFER    CLASS_ITERABLE    CLASS_OBJECT    CLASS_STRING    currClass    instClass    nextCls    prevCls    type    CreatorCollector    creators    Object    injectId        	jacksondatabind_5805_BasicDeserializerFactory_1_1	551	1	src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java
534	[PATCH]    if    (ann    !=    null)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    java.lang.NullPointerException    testPojoWriting    [CONTEXT]    public    Boolean    hasRequiredMarker(AnnotatedMember    m)    {    JsonProperty    ann    =    m.getAnnotation(JsonProperty.class);    [BUGGY]    if    (true)    {    return    ann.required();    }    return    null;    }    [CLASS]        JacksonAnnotationIntrospector    [METHOD]    hasRequiredMarker    [RETURN_TYPE]    Boolean        AnnotatedMember    m    [VARIABLES]    AnnotatedMember    m    JsonProperty    ann    boolean    long    serialVersionUID        	jacksondatabind_10899_JacksonAnnotationIntrospector_1_1	185	1	src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java
535	[PATCH]    if    (!Modifier.isStatic(type.getModifiers()))    {	[BUG]    [BUGGY]    if    (!false)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    No    suitable    constructor    found    for    type    [simple    type,    class    com.fasterxml.jackson.databind.jsontype.TestAbstractTypeNames$BeanWithAnon$1]:    can    not    instantiate    from    JSON    object    (need    to    add/enable    type    information?)    testInnerClassWithType    [CONTEXT]    public    static    Class<?>    getOuterClass(Class<?>    type)    {        try    {        if    (type.getEnclosingMethod()    !=    null)    {    return    null;    }    [BUGGY]    if    (!false)    {    return    type.getEnclosingClass();    }    }    catch    (SecurityException    e)    {    }    catch    (NullPointerException    e)    {    }    return    null;    }    [CLASS]        ClassUtil    EnumTypeLocator    [METHOD]    getOuterClass    [RETURN_TYPE]    Class        Class<?>    type    [VARIABLES]    Field    enumMapTypeField    enumSetTypeField    EnumTypeLocator    instance    Class    type    SecurityException    e    boolean    NullPointerException    e        	jacksondatabind_14087_ClassUtil_1_1	126	1	src/main/java/com/fasterxml/jackson/databind/util/ClassUtil.java
536	[PATCH]    if    (propertyCtor    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.NullPointerException    testAnnotatedCtor    [CONTEXT]    }    }    String[]    ctorPropNames    =    null;    AnnotatedConstructor    propertyCtor    =    null;    for    (BeanPropertyDefinition    propDef    :    beanDesc.findProperties())    {    if    (propDef.getConstructorParameter()    !=    null)    {    AnnotatedParameter    param    =    propDef.getConstructorParameter();    AnnotatedWithParams    owner    =    param.getOwner();    if    (owner    instanceof    AnnotatedConstructor)    {    [BUGGY]    if    (false)    {    propertyCtor    =    (AnnotatedConstructor)    owner;    ctorPropNames    =    new    String[propertyCtor.getParameterCount()];    }    ctorPropNames[param.getIndex()]    =    propDef.getName();    }    }    }    for    (AnnotatedConstructor    ctor    :    beanDesc.getConstructors())    {    int    argCount    =    ctor.getParameterCount();    [CLASS]        BasicDeserializerFactory    [METHOD]    _addDeserializerConstructors    [RETURN_TYPE]    void        DeserializationContext    ctxt    BeanDescription    beanDesc    VisibilityChecker<?>    vchecker    AnnotationIntrospector    intr    CreatorCollector    creators    [VARIABLES]    PropertyName    pn    CreatorProperty[]    properties    DeserializerFactoryConfig    _factoryConfig    config    HashMap    _collectionFallbacks    _mapFallbacks    AnnotatedParameter    nonAnnotatedParam    param    BeanDescription    beanDesc    AnnotationIntrospector    intr    String[]    ctorPropNames    String    name    int    argCount    i    injectCount    namedCount    AnnotatedWithParams    owner    AnnotatedConstructor    ctor    defaultCtor    propertyCtor    boolean    isCreator    isVisible    VisibilityChecker    vchecker    BeanPropertyDefinition    propDef    DeserializationContext    ctxt    Class    CLASS_CHAR_BUFFER    CLASS_ITERABLE    CLASS_OBJECT    CLASS_STRING    currClass    instClass    nextCls    prevCls    CreatorCollector    creators    Object    injectId        	jacksondatabind_5580_BasicDeserializerFactory_1_1	380	1	src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java
537	[PATCH]    if    (t    ==    JsonToken.VALUE_STRING)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Can    not    deserialize    instance    of    java.util.Date    out    of    VALUE_STRING    token    testDateUtil    [CONTEXT]    protected    java.util.Date    _parseDate(JsonParser    jp,    DeserializationContext    ctxt)    throws    IOException,    JsonProcessingException    {    JsonToken    t    =    jp.getCurrentToken();    if    (t    ==    JsonToken.VALUE_NUMBER_INT)    {    return    new    java.util.Date(jp.getLongValue());    }    if    (t    ==    JsonToken.VALUE_NULL)    {    return    (java.util.Date)    getNullValue();    }    [BUGGY]    if    (false)    {    String    value    =    null;    try    {        value    =    jp.getText().trim();    if    (value.length()    ==    0)    {    return    (Date)    getEmptyValue();    }    return    ctxt.parseDate(value);    }    catch    (IllegalArgumentException    iae)    {    throw    ctxt.weirdStringException(value,    _valueClass,    [CLASS]        StdDeserializer    [METHOD]    _parseDate    [RETURN_TYPE]    Date        JsonParser    jp    DeserializationContext    ctxt    [VARIABLES]    boolean    DeserializationContext    ctxt    Class    _valueClass    vc    JsonToken    t    String    value    long    l    serialVersionUID    IllegalArgumentException    iae    JsonParser    jp        	jacksondatabind_7225_StdDeserializer_1_1	568	1	src/main/java/com/fasterxml/jackson/databind/deser/std/StdDeserializer.java
538	[PATCH]    if    (name    !=    null)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Could    not    find    creator    property    with    name    'null'    (in    class    com.fasterxml.jackson.databind.TestJDKSerialization$MyPojo)    testObjectMapper    [CONTEXT]    }    for    (AnnotatedMethod    factory    :    _classDef.getStaticMethods())    {    if    (_creatorProperties    ==    null)    {    _creatorProperties    =    new    LinkedList<POJOPropertyBuilder>();    }    for    (int    i    =    0,    len    =    factory.getParameterCount();    i    <    len;    ++i)    {    AnnotatedParameter    param    =    factory.getParameter(i);    PropertyName    pn    =    ai.findNameForDeserialization(param);    String    name    =    (pn    ==    null)    ?    null    :    pn.getSimpleName();        [BUGGY]    if    (true)    {        POJOPropertyBuilder    prop    =    _property(name);    prop.addCtor(param,    name,    true,    false);    _creatorProperties.add(prop);    }    }    }    }    [CLASS]        POJOPropertiesCollector    [METHOD]    _addCreators    [RETURN_TYPE]    void        [VARIABLES]    PropertyName    pn    AnnotatedMethod    factory    AnnotatedParameter    param    AnnotationIntrospector    _annotationIntrospector    ai    intr    MapperConfig    _config    config    String    _mutatorPrefix    explName    implName    mutatorPrefix    name    LinkedList    _anyGetters    _anySetters    _creatorProperties    _jsonValueGetters    int    i    len    LinkedHashMap    _injectables    _properties    JavaType    _type    type    boolean    _forSerialization    forSerialization    ignored    pruneFinalFields    sort    visible    AnnotatedConstructor    ctor    AnnotatedClass    _classDef    classDef    VisibilityChecker    _visibilityChecker    POJOPropertyBuilder    prop    HashSet    _ignoredPropertyNames        	jacksondatabind_10418_POJOPropertiesCollector_1_1	440	1	src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java
539	[PATCH]    if    (cls    !=    NoClass.class)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Illegal    concrete-type    annotation    for    method    'value':    class    com.fasterxml.jackson.databind.annotation.NoClass    not    a    super-type    of    (declared)    class    java.lang.String    testContextualViaAnnotation    [CONTEXT]    public    Class<?>    findSerializationType(Annotated    am)    {    JsonSerialize    ann    =    am.getAnnotation(JsonSerialize.class);    if    (ann    !=    null)    {    Class<?>    cls    =    ann.as();    [BUGGY]    if    (true)    {    return    cls;    }    }    return    null;    }    [CLASS]        JacksonAnnotationIntrospector    [METHOD]    findSerializationType    [RETURN_TYPE]    Class        Annotated    am    [VARIABLES]    JsonSerialize    ann    Annotated    am    Class    cls    boolean    long    serialVersionUID        	jacksondatabind_10934_JacksonAnnotationIntrospector_1_1	361	1	src/main/java/com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java
540	[PATCH]    if    (builder    !=    null)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Unrecognized    Type:    [null]    testKeyDeserializer    [CONTEXT]        JavaType    newType    =    modifyTypeByAnnotation(ctxt,    beanDesc.getClassInfo(),    type);    if    (newType    !=    type)    {    type    =    newType;    beanDesc    =    config.introspect(newType);    }        Class<?>    builder    =    beanDesc.findPOJOBuilder();    [BUGGY]    if    (true)    {    return    (JsonDeserializer<Object>)    factory.createBuilderBasedDeserializer(    ctxt,    type,    beanDesc,    builder);    }        Converter<Object,Object>    conv    =    beanDesc.findDeserializationConverter();    if    (conv    ==    null)    {    return    (JsonDeserializer<Object>)    _createDeserializer2(ctxt,    factory,    type,    beanDesc);    }        [CLASS]        DeserializerCache    [METHOD]    _createDeserializer    [RETURN_TYPE]    JsonDeserializer        DeserializationContext    ctxt    DeserializerFactory    factory    JavaType    type    [VARIABLES]    DeserializerFactory    factory    JavaType    delegateType    newType    type    boolean    HashMap    _incompleteDeserializers    BeanDescription    beanDesc    DeserializationContext    ctxt    Converter    conv    DeserializationConfig    config    Class    builder    ConcurrentHashMap    _cachedDeserializers    JsonDeserializer    deser    long    serialVersionUID        	jacksondatabind_2942_DeserializerCache_1_1	346	1	src/main/java/com/fasterxml/jackson/databind/deser/DeserializerCache.java
541	[PATCH]    idType    =    ctxt.getTypeFactory().findTypeParameters(type,    ObjectIdGenerator.class)[0];	[BUG]    [BUGGY]    idType    =    ctxt.getTypeFactory().findTypeParameters(type,    ObjectIdGenerator.class)[-1];    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testIssue877    [CONTEXT]    String    propName    =    objectIdInfo.getPropertyName();    idProp    =    builder.findProperty(propName);    if    (idProp    ==    null)    {    throw    new    IllegalArgumentException(   "Invalid    Object    Id    definition    for       "    +beanDesc.getBeanClass().getName()+   ":    can    not    find    property    with    name    '   "+propName+   "'   ");    }    idType    =    idProp.getType();    gen    =    new    PropertyBasedObjectIdGenerator(objectIdInfo.getScope());    }    else    {    JavaType    type    =    ctxt.constructType(implClass);    [BUGGY]    idType    =    ctxt.getTypeFactory().findTypeParameters(type,    ObjectIdGenerator.class)[-1];    idProp    =    null;    gen    =    ctxt.objectIdGeneratorInstance(beanDesc.getClassInfo(),    objectIdInfo);    }    [CLASS]        BeanDeserializerFactory    [METHOD]    addObjectIdReader    [RETURN_TYPE]    void        DeserializationContext    ctxt    BeanDescription    beanDesc    BeanDeserializerBuilder    builder    [VARIABLES]    ObjectIdGenerator    gen    Class[]    INIT_CAUSE_PARAMS    NO_VIEWS    SettableBeanProperty    idProp    BeanDescription    beanDesc    String    propName    ObjectIdInfo    objectIdInfo    JsonDeserializer    deser    long    serialVersionUID    BeanDeserializerBuilder    builder    JavaType    idType    type    boolean    BeanDeserializerFactory    instance    DeserializationContext    ctxt    Class    implClass        	jacksondatabind_8114_BeanDeserializerFactory_1_1	381	1	src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java
542	[PATCH]    if    (!tokens.hasMoreTokens())    {	[BUG]    [BUGGY]    if    (!false)    {    [FE]    java.lang.IllegalArgumentException:    Failed    to    parse    type    'java.lang.String'    (remaining:    'java.lang.String'):    Unexpected    end-of-string    testJavaType    [CONTEXT]    protected    JavaType    parseType(MyTokenizer    tokens)    throws    IllegalArgumentException    {    [BUGGY]    if    (!false)    {    throw    _problem(tokens,       "Unexpected    end-of-string   ");    }    Class<?>    base    =    findClass(tokens.nextToken(),    tokens);        if    (tokens.hasMoreTokens())    {    String    token    =    tokens.nextToken();    if    (   "<   ".equals(token))    {    return    _factory._fromParameterizedClass(base,    parseTypes(tokens));    }        [CLASS]        TypeParser    MyTokenizer    [METHOD]    parseType    [RETURN_TYPE]    JavaType        MyTokenizer    tokens    [VARIABLES]    MyTokenizer    tokens    boolean    Class    base    String    _input    _pushbackToken    canonical    str    token    TypeFactory    _factory    f    long    serialVersionUID    int    _index        	jacksondatabind_2467_TypeParser_1_1	41	1	src/main/java/com/fasterxml/jackson/databind/type/TypeParser.java
543	[PATCH]    if    (dc.isEnum()    &&    (paramCount    ==    paramAnns.length    +    2))    {	[BUG]    [BUGGY]    if    (dc.isEnum()    &&    (paramCount    ==    paramAnns.length    +    -2))    {    [FE]    java.lang.IllegalStateException:    Internal    error:    constructor    for    com.fasterxml.jackson.databind.ser.TestEnumSerialization$NOT_OK    has    mismatch:    3    parameters;    1    sets    of    annotations    testAnnotationsOnEnumCtor    [CONTEXT]                AnnotationMap[]    resolvedAnnotations    =    null;    if    (paramCount    !=    paramAnns.length)    {            Class<?>    dc    =    ctor.getDeclaringClass();        [BUGGY]    if    (dc.isEnum()    &&    (paramCount    ==    paramAnns.length    +    -2))    {    Annotation[][]    old    =    paramAnns;    paramAnns    =    new    Annotation[old.length+2][];    System.arraycopy(old,    0,    paramAnns,    2,    old.length);    resolvedAnnotations    =    _collectRelevantAnnotations(paramAnns);    }    else    if    (dc.isMemberClass())    {        if    (paramCount    ==    (paramAnns.length    +    1))    {        Annotation[][]    old    =    paramAnns;    paramAnns    =    new    Annotation[old.length+1][];    [CLASS]        AnnotatedClass    [METHOD]    _constructConstructor    [RETURN_TYPE]    AnnotatedConstructor        Constructor<?>    ctor    boolean    defaultCtor    [VARIABLES]    AnnotationMap[]    NO_ANNOTATION_MAPS    resolvedAnnotations    MixInResolver    _mixInResolver    mir    boolean    _creatorsResolved    defaultCtor    AnnotatedConstructor    _defaultConstructor    AnnotationMap    _classAnnotations    ann    annotations    classAnnotations    Constructor    ctor    AnnotationIntrospector    _annotationIntrospector    aintr    Annotation[][]    old    paramAnns    Class    _class    _primaryMixIn    acls    c    cls    dc    mixInCls    mixin    parent    targetClass    toMask    List    _constructors    _creatorMethods    _fields    _superTypes    constructors    creatorMethods    parents    superTypes    AnnotatedMethodMap    _memberMethods    methods    mixIns    mixins    int    paramCount        	jacksondatabind_1954_AnnotatedClass_1_1	768	1	src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java
544	[PATCH]    _serializationConfig    =    state    ?	[BUG]    [BUGGY]    _serializationConfig    =    false    ?    [FE]    junit.framework.ComparisonFailure:    expected:<[{   "x   ":3[]}]>    but    was:<[{   "x   ":3[,   "y   ":5]}]>    testStaticTypingWithArray    [CONTEXT]    public    ObjectMapper    configure(MapperFeature    f,    boolean    state)    {    [BUGGY]    _serializationConfig    =    false    ?    _serializationConfig.with(f)    :    _serializationConfig.without(f);    _deserializationConfig    =    state    ?    _deserializationConfig.with(f)    :    _deserializationConfig.without(f);    return    this;    }    [CLASS]        ObjectMapper    DefaultTyping    DefaultTypeResolverBuilder    1    [METHOD]    configure    [RETURN_TYPE]    ObjectMapper        MapperFeature    f    boolean    state    [VARIABLES]    RootNameLookup    _rootNames    SerializerFactory    _serializerFactory    f    DefaultDeserializationContext    _deserializationContext    dc    SubtypeResolver    _subtypeResolver    str    HashMap    _mixInAnnotations    mixins    SerializationConfig    _serializationConfig    config    DefaultSerializerProvider    _serializerProvider    p    sp    AnnotationIntrospector    DEFAULT_ANNOTATION_INTROSPECTOR    ai    deserializerAI    serializerAI    JsonFactory    _jsonFactory    jf    DeserializationConfig    _deserializationConfig    config    InjectableValues    _injectableValues    injectableValues    long    serialVersionUID    ClassIntrospector    DEFAULT_INTROSPECTOR    ci    JavaType    JSON_NODE_TYPE    baseType    t    PrettyPrinter    _defaultPrettyPrinter    boolean    state    VisibilityChecker    STD_VISIBILITY_CHECKER    vc    BaseSettings    DEFAULT_BASE    DefaultTyping    JAVA_LANG_OBJECT    NON_CONCRETE_AND_ARRAYS    NON_FINAL    OBJECT_AND_NON_CONCRETE    _appliesFor    applicability    dti    t    TypeFactory    _typeFactory    f    ConcurrentHashMap    _rootDeserializers    MapperFeature    f        	jacksondatabind_4777_ObjectMapper_1_1	1326	1	src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java
545	[PATCH]    return    (_serFeatures    &    f.getMask())    !=    0;	[BUG]    [BUGGY]    return    true;    [FE]    junit.framework.ComparisonFailure:    expected:<{[   "x   ":4]}>    but    was:<{[    testPojoWriting    [CONTEXT]    public    final    boolean    isEnabled(SerializationFeature    f)    {    [BUGGY]    return    true;    }    [CLASS]        SerializationConfig    [METHOD]    isEnabled    [RETURN_TYPE]    boolean        SerializationFeature    f    [VARIABLES]    Include    _serializationInclusion    incl    boolean    SerializationFeature    f    long    serialVersionUID    int    _serFeatures    mapperFeatures    newMapperFlags    newSerFeatures    serFeatures    FilterProvider    _filterProvider    filterProvider    filters        	jacksondatabind_975_SerializationConfig_1_1	453	1	src/main/java/com/fasterxml/jackson/databind/SerializationConfig.java
546	[PATCH]    for    (int    i    =    0;    i    <    len;    ++i)    {	[BUG]    [BUGGY]    for    (int    i    =    -1;    i    <    len;    ++i)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    -1    (through    reference    chain:    com.fasterxml.jackson.databind.filter.WrapperWithPropIgnore[   "value   "])    testIgnoreViaOnlyProps    [CONTEXT]        HashSet<String>    ignoredSet    =    ArrayBuilders.arrayToSet(toIgnore);    final    BeanPropertyWriter[]    propsIn    =    src._props;    final    BeanPropertyWriter[]    fpropsIn    =    src._filteredProps;    final    int    len    =    propsIn.length;    ArrayList<BeanPropertyWriter>    propsOut    =    new    ArrayList<BeanPropertyWriter>(len);    ArrayList<BeanPropertyWriter>    fpropsOut    =    (fpropsIn    ==    null)    ?    null    :    new    ArrayList<BeanPropertyWriter>(len);        [BUGGY]    for    (int    i    =    -1;    i    <    len;    ++i)    {    BeanPropertyWriter    bpw    =    propsIn[i];        if    (ignoredSet.contains(bpw.getName()))    {    continue;    }    propsOut.add(bpw);    if    (fpropsIn    !=    null)    {    fpropsOut.add(fpropsIn[i]);    }    }    [CLASS]        BeanSerializerBase    [METHOD]    <init>    [RETURN_TYPE]    String[])        BeanSerializerBase    src    String[]    toIgnore    [VARIABLES]    Shape    _serializationShape    BeanSerializerBase    src    AnnotatedMember    _typeId    ArrayList    fpropsOut    propsOut    String[]    toIgnore    BeanPropertyWriter[]    NO_PROPS    _filteredProps    _props    filteredProperties    fpropsIn    properties    propsIn    AnyGetterWriter    _anyGetterWriter    int    i    len    ObjectIdWriter    _objectIdWriter    objectIdWriter    boolean    Object    _propertyFilterId    BeanPropertyWriter    bpw    HashSet    ignoredSet        	jacksondatabind_4073_BeanSerializerBase_1_1	166	1	src/main/java/com/fasterxml/jackson/databind/ser/std/BeanSerializerBase.java
547	[PATCH]    return    true;    //    sure    is	[BUG]    [BUGGY]    return    false;    //    sure    is    [FE]    com.fasterxml.jackson.core.JsonGenerationException:    Can    not    write    a    field    name,    expecting    a    value    testDeepUnwrappingSerialize    [CONTEXT]    public    boolean    isUnwrappingSerializer()    {    [BUGGY]    return    false;    }    [CLASS]        UnwrappingBeanSerializer    [METHOD]    isUnwrappingSerializer    [RETURN_TYPE]    boolean        [VARIABLES]    NameTransformer    _nameTransformer    transformer    boolean        	jacksondatabind_12938_UnwrappingBeanSerializer_1_1	59	1	src/main/java/com/fasterxml/jackson/databind/ser/impl/UnwrappingBeanSerializer.java
548	[PATCH]    if    (_anySetter    !=    null    &&    !_anySetter.hasValueDeserializer())    {	[BUG]    [BUGGY]    if    (!_anySetter.hasValueDeserializer())    {    [FE]    java.lang.NullPointerException    testTypeIdResolver    [CONTEXT]    }    extTypes.addExternal(prop,    typeDeser);        _beanProperties.remove(prop);    continue;    }    }    }            [BUGGY]    if    (!_anySetter.hasValueDeserializer())    {    _anySetter    =    _anySetter.withValueDeserializer(findDeserializer(ctxt,    _anySetter.getType(),    _anySetter.getProperty()));    }        if    (_valueInstantiator.canCreateUsingDelegate())    {    JavaType    delegateType    =    _valueInstantiator.getDelegateType(ctxt.getConfig());    if    (delegateType    ==    null)    {    throw    new    IllegalArgumentException(   "Invalid    delegate-creator    definition    for       "+_beanType    +   ":    value    instantiator    (   "+_valueInstantiator.getClass().getName()    [CLASS]        BeanDeserializerBase    [METHOD]    resolve    [RETURN_TYPE]    void        DeserializationContext    ctxt    [VARIABLES]    UnwrappedPropertyHandler    _unwrappedPropertyHandler    unwrapped    Std    property    Shape    _serializationShape    SettableBeanProperty    origProp    prop    u    ValueInjector[]    _injectables    HashMap    _subDeserializers    ValueInstantiator    _valueInstantiator    ObjectIdReader    _objectIdReader    oir    Builder    extTypes    SettableBeanProperty[]    creatorProps    JsonDeserializer    _delegateDeserializer    cd    deser    PropertyBasedCreator    _propertyBasedCreator    long    serialVersionUID    SettableAnyProperty    _anySetter    JavaType    _beanType    delegateType    AnnotatedWithParams    delegateCreator    Annotations    _classAnnotations    boolean    _ignoreAllUnknown    _needViewProcesing    _nonStandardCreation    _vanillaProcessing    hasViews    ignoreAllUnknown    BeanPropertyMap    _beanProperties    properties    DeserializationContext    ctxt    TypeDeserializer    typeDeser    Map    _backRefs    backRefs    ExternalTypeHandler    _externalTypeIdHandler    HashSet    _ignorableProps    ignorableProps        	jacksondatabind_6615_BeanDeserializerBase_1_1	485	1	src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java
549	[PATCH]    if    (ch    <    '0'    ||    ch    >    '9')    break;	[BUG]    [BUGGY]    if    (ch    <    '0')    break;    [FE]    java.lang.NumberFormatException:    For    input    string:       "foobar   "    testInvalid    [CONTEXT]    {    if    (looksLikeISO8601(dateStr))    {    return    parseAsISO8601(dateStr,    pos);    }                int    i    =    dateStr.length();    while    (--i    >=    0)    {    char    ch    =    dateStr.charAt(i);    [BUGGY]    if    (ch    <    '0')    break;    }    if    (i    <    0)    {    if    (NumberInput.inLongRange(dateStr,    false))    {    return    new    Date(Long.parseLong(dateStr));    }    }        return    parseAsRFC1123(dateStr,    pos);    }    [CLASS]        StdDateFormat    [METHOD]    parse    [RETURN_TYPE]    Date        String    dateStr    ParsePosition    pos    [VARIABLES]    TimeZone    DEFAULT_TIMEZONE    _timezone    tz    boolean    DateFormat    DATE_FORMAT_ISO8601    DATE_FORMAT_ISO8601_Z    DATE_FORMAT_PLAIN    DATE_FORMAT_RFC1123    _formatISO8601    _formatISO8601_z    _formatPlain    _formatRFC1123    char    ch    StdDateFormat    instance    String    DATE_FORMAT_STR_ISO8601    DATE_FORMAT_STR_ISO8601_Z    DATE_FORMAT_STR_PLAIN    DATE_FORMAT_STR_RFC1123    dateStr    f    String[]    ALL_FORMATS    int    i    ParsePosition    pos        	jacksondatabind_14590_StdDateFormat_1_1	240	1	src/main/java/com/fasterxml/jackson/databind/util/StdDateFormat.java
550	[PATCH]    int    month    =    parseInt(date,    offset    +=    1,    offset    +=    2);	[BUG]    [BUGGY]    int    month    =    parseInt(date,    offset    +=    -1,    offset    +=    2);    [FE]    java.lang.IllegalArgumentException:    Failed    to    parse    date    2007-08-13T19:51:23Z    testParse    [CONTEXT]    public    static    Date    parse(String    date)    {    try    {    int    offset    =    0;        int    year    =    parseInt(date,    offset,    offset    +=    4);    checkOffset(date,    offset,    '-');            [BUGGY]    int    month    =    parseInt(date,    offset    +=    -1,    offset    +=    2);    checkOffset(date,    offset,    '-');        int    day    =    parseInt(date,    offset    +=    1,    offset    +=    2);    checkOffset(date,    offset,    'T');        int    hour    =    parseInt(date,    offset    +=    1,    offset    +=    2);    checkOffset(date,    offset,    ':');        [CLASS]        ISO8601Utils    [METHOD]    parse    [RETURN_TYPE]    Date        String    date    [VARIABLES]    TimeZone    TIMEZONE_GMT    timezone    tz    boolean    IndexOutOfBoundsException    e    Calendar    calendar    char    timezoneIndicator    NumberFormatException    e    String    GMT_ID    date    timezoneId    int    day    hour    milliseconds    minutes    month    offset    seconds    year    IllegalArgumentException    e        	jacksondatabind_14340_ISO8601Utils_1_1	132	1	src/main/java/com/fasterxml/jackson/databind/util/ISO8601Utils.java
551	[PATCH]    int    minutes    =    Math.abs((offset    /    (60    *    1000))    %    60);	[BUG]    [BUGGY]    int    minutes    =    Math.abs((offset    /    (0    *    1000))    %    60);    [FE]    java.lang.ArithmeticException:    /    by    zero    testFormatTimeZone    [CONTEXT]    formatted.append(':');    padInt(formatted,    calendar.get(Calendar.SECOND),       "ss   ".length());    if    (millis)    {    formatted.append('.');    padInt(formatted,    calendar.get(Calendar.MILLISECOND),       "sss   ".length());    }    int    offset    =    tz.getOffset(calendar.getTimeInMillis());    if    (offset    !=    0)    {    int    hours    =    Math.abs((offset    /    (60    *    1000))    /    60);    [BUGGY]    int    minutes    =    Math.abs((offset    /    (0    *    1000))    %    60);    formatted.append(offset    <    0    ?    '-'    :    '+');    padInt(formatted,    hours,       "hh   ".length());    formatted.append(':');    padInt(formatted,    minutes,       "mm   ".length());    }    else    {    formatted.append('Z');    }    return    formatted.toString();    }    [CLASS]        ISO8601Utils    [METHOD]    format    [RETURN_TYPE]    String        Date    date    boolean    millis    TimeZone    tz    [VARIABLES]    TimeZone    TIMEZONE_GMT    tz    boolean    millis    StringBuilder    formatted    Calendar    calendar    String    GMT_ID    Date    date    int    capacity    hours    minutes    offset        	jacksondatabind_14306_ISO8601Utils_1_1	98	1	src/main/java/com/fasterxml/jackson/databind/util/ISO8601Utils.java
552	[PATCH]    if    (_propertyIndex    !=    -1)    {	[BUG]    [BUGGY]    if    (_propertyIndex    !=    0)    {    [FE]    java.lang.IllegalStateException:    Property    'bean'    already    had    index    (-1),    trying    to    assign    0    testTypeIdResolver    [CONTEXT]    public    void    assignIndex(int    index)    {    [BUGGY]    if    (_propertyIndex    !=    0)    {    throw    new    IllegalStateException(   "Property    '   "+getName()+   "'    already    had    index    (   "+_propertyIndex+   "),    trying    to    assign       "+index);    }    _propertyIndex    =    index;    }    [CLASS]        SettableBeanProperty    [METHOD]    assignIndex    [RETURN_TYPE]    void        int    index    [VARIABLES]    PropertyName    _wrapperName    wrapper    JavaType    _type    type    Annotations    _contextAnnotations    contextAnnotations    boolean    _isRequired    isRequired    NullProvider    _nullProvider    String    _managedReferenceName    _propName    n    newName    propName    ViewMatcher    _viewMatcher    JsonDeserializer    MISSING_VALUE_DESERIALIZER    _valueDeserializer    deser    TypeDeserializer    _valueTypeDeserializer    typeDeser    long    serialVersionUID    int    _propertyIndex    index        	jacksondatabind_3470_SettableBeanProperty_1_1	266	1	src/main/java/com/fasterxml/jackson/databind/deser/SettableBeanProperty.java
553	[PATCH]    if    (_interfaceMappings    !=    null)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    java.lang.NullPointerException    testDelegating    [CONTEXT]    {    Class<?>    cls    =    type.getRawClass();    ClassKey    key    =    new    ClassKey(cls);    JsonSerializer<?>    ser    =    null;        if    (cls.isInterface())    {    [BUGGY]    if    (true)    {    ser    =    _interfaceMappings.get(key);    if    (ser    !=    null)    {    return    ser;    }    }    }    else    {    if    (_classMappings    !=    null)    {    ser    =    _classMappings.get(key);    if    (ser    !=    null)    {    return    ser;    [CLASS]        SimpleSerializers    [METHOD]    findSerializer    [RETURN_TYPE]    JsonSerializer        SerializationConfig    config    JavaType    type    BeanDescription    beanDesc    [VARIABLES]    JavaType    type    boolean    HashMap    _classMappings    _interfaceMappings    SerializationConfig    config    BeanDescription    beanDesc    ClassKey    key    Class    cls    curr    JsonSerializer    ser    long    serialVersionUID        	jacksondatabind_11531_SimpleSerializers_1_1	127	1	src/main/java/com/fasterxml/jackson/databind/module/SimpleSerializers.java
554	[PATCH]    if    (_typeParameters    !=    null    &&    _typeParameters.length    >    0)    {	[BUG]    [BUGGY]    if    (_typeParameters.length    >    0)    {    [FE]    java.lang.NullPointerException    testKeyDeserializer    [CONTEXT]    protected    String    buildCanonicalName()    {    StringBuilder    sb    =    new    StringBuilder();    sb.append(_class.getName());    [BUGGY]    if    (_typeParameters.length    >    0)    {    sb.append('<');    boolean    first    =    true;    for    (JavaType    t    :    _typeParameters)    {    if    (first)    {    first    =    false;    }    else    {    sb.append(',');    }    sb.append(t.toCanonical());    }    [CLASS]        SimpleType    [METHOD]    buildCanonicalName    [RETURN_TYPE]    String        [VARIABLES]    JavaType[]    _typeParameters    typeParams    JavaType    t    String[]    _typeNames    typeNames    boolean    first    StringBuilder    sb    long    serialVersionUID        	jacksondatabind_2313_SimpleType_1_1	139	1	src/main/java/com/fasterxml/jackson/databind/type/SimpleType.java
555	[PATCH]    if    (supertype.getName().startsWith(prefix))    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.ComparisonFailure:    expected:<[   "-P15DT19H58M1S   "]>    but    was:<[{   "years   ":0,   "months   ":0,   "days   ":15,   "hours   ":19,   "minutes   ":58,   "seconds   ":1,   "value   ":1367881.0,   "sign   ":-1,   "xmlschemaType   ":   "{http://www.w3.org/2003/11/xpath-datatypes}dayTimeDuration   "}]>    testDurationSer    [CONTEXT]    private    boolean    hasSupertypeStartingWith(Class<?>    rawType,    String    prefix)    {        for    (Class<?>    supertype    =    rawType.getSuperclass();    supertype    !=    null;    supertype    =    supertype.getSuperclass())    {    [BUGGY]    if    (false)    {    return    true;    }    }        for    (Class<?>    cls    =    rawType;    cls    !=    null;    cls    =    cls.getSuperclass())    {    if    (hasInterfaceStartingWith(cls,    prefix))    {    return    true;    }    }    return    false;    [CLASS]        OptionalHandlerFactory    [METHOD]    hasSupertypeStartingWith    [RETURN_TYPE]    boolean        Class<?>    rawType    String    prefix    [VARIABLES]    OptionalHandlerFactory    instance    Class    cls    rawType    supertype    String    CLASS_NAME_DOM_DOCUMENT    CLASS_NAME_DOM_NODE    DESERIALIZERS_FOR_JAVAX_XML    DESERIALIZER_FOR_DOM_DOCUMENT    DESERIALIZER_FOR_DOM_NODE    PACKAGE_PREFIX_JAVAX_XML    SERIALIZERS_FOR_JAVAX_XML    SERIALIZER_FOR_DOM_NODE    className    classNameToImplement    factoryName    interfaceToImplement    prefix    boolean    long    serialVersionUID        	jacksondatabind_10123_OptionalHandlerFactory_1_1	144	1	src/main/java/com/fasterxml/jackson/databind/ext/OptionalHandlerFactory.java
556	[PATCH]    if    (contentClass    ==    _elementType.getRawClass())    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    expected    same:<[collection    type;    class    java.util.List,    contains    [simple    type,    class    java.lang.String]]>    was    not:<[collection    type;    class    java.util.List,    contains    [simple    type,    class    java.lang.String]]>    testCollectionType    [CONTEXT]    public    JavaType    narrowContentsBy(Class<?>    contentClass)    {        [BUGGY]    if    (false)    {    return    this;    }    return    new    CollectionType(_class,    _elementType.narrowBy(contentClass),    _valueHandler,    _typeHandler,    _asStatic);    }    [CLASS]        CollectionType    [METHOD]    narrowContentsBy    [RETURN_TYPE]    JavaType        Class<?>    contentClass    [VARIABLES]    long    serialVersionUID    Class    contentClass    boolean        	jacksondatabind_2659_CollectionType_1_1	34	1	src/main/java/com/fasterxml/jackson/databind/type/CollectionType.java
557	[PATCH]    }    else    if    (typeDeser    ==    null)    {	[BUG]    [BUGGY]    }    else    if    (false)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    (was    java.lang.NullPointerException)    (through    reference    chain:    com.fasterxml.jackson.databind.SetterlessWithValue[   "value_list   "])    testWithGetterAsSetter    [CONTEXT]    JsonDeserializer<Object>    valueDes    =    _valueDeserializer;    JsonToken    t;    final    TypeDeserializer    typeDeser    =    _valueTypeDeserializer;    while    ((t    =    jp.nextToken())    !=    JsonToken.END_ARRAY)    {    Object    value;    if    (t    ==    JsonToken.VALUE_NULL)    {    value    =    null;    [BUGGY]    }    else    if    (false)    {    value    =    valueDes.deserialize(jp,    ctxt);    }    else    {    value    =    valueDes.deserializeWithType(jp,    ctxt,    typeDeser);    }    result.add(value);    }    return    result;    }    [CLASS]        CollectionDeserializer    [METHOD]    deserialize    [RETURN_TYPE]    Collection        JsonParser    jp    DeserializationContext    ctxt    Object>    result    [VARIABLES]    JavaType    _collectionType    collectionType    delegateType    boolean    ValueInstantiator    _valueInstantiator    valueInstantiator    DeserializationContext    ctxt    Collection    result    JsonToken    t    Object    value    JsonDeserializer    _delegateDeserializer    _valueDeserializer    dd    delegateDeser    valueDes    valueDeser    vd    TypeDeserializer    _valueTypeDeserializer    typeDeser    valueTypeDeser    vtd    long    serialVersionUID    JsonParser    jp        	jacksondatabind_8755_CollectionDeserializer_1_1	229	1	src/main/java/com/fasterxml/jackson/databind/deser/std/CollectionDeserializer.java
558	[PATCH]    if    (t    ==    JsonToken.VALUE_NUMBER_INT    ||    t    ==    JsonToken.VALUE_NUMBER_FLOAT)    {	[BUG]    [BUGGY]    if    (t    ==    JsonToken.VALUE_NUMBER_INT)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Can    not    deserialize    instance    of    java.math.BigDecimal    out    of    VALUE_NUMBER_FLOAT    token    testBigDecimal    [CONTEXT]    public    BigDecimal    deserialize(JsonParser    jp,    DeserializationContext    ctxt)    throws    IOException,    JsonProcessingException    {    JsonToken    t    =    jp.getCurrentToken();    [BUGGY]    if    (t    ==    JsonToken.VALUE_NUMBER_INT)    {    return    jp.getDecimalValue();    }        if    (t    ==    JsonToken.VALUE_STRING)    {    String    text    =    jp.getText().trim();    if    (text.length()    ==    0)    {    return    null;    }    try    {    return    new    BigDecimal(text);    [CLASS]        NumberDeserializers    PrimitiveOrWrapperDeserializer    BooleanDeserializer    ByteDeserializer    ShortDeserializer    CharacterDeserializer    IntegerDeserializer    LongDeserializer    FloatDeserializer    DoubleDeserializer    NumberDeserializer    BigIntegerDeserializer    BigDecimalDeserializer    [METHOD]    deserialize    [RETURN_TYPE]    BigDecimal        JsonParser    jp    DeserializationContext    ctxt    [VARIABLES]    IntegerDeserializer    primitiveInstance    wrapperInstance    CharacterDeserializer    primitiveInstance    wrapperInstance    FloatDeserializer    primitiveInstance    wrapperInstance    String    text    long    serialVersionUID    value    ShortDeserializer    primitiveInstance    wrapperInstance    BigDecimalDeserializer    instance    NumberDeserializer    instance    boolean    T    _nullValue    nvl    LongDeserializer    primitiveInstance    wrapperInstance    BigIntegerDeserializer    instance    BooleanDeserializer    primitiveInstance    wrapperInstance    DeserializationContext    ctxt    JsonToken    t    ByteDeserializer    primitiveInstance    wrapperInstance    DoubleDeserializer    primitiveInstance    wrapperInstance    IllegalArgumentException    iae    HashSet    _classNames    JsonParser    jp        	jacksondatabind_9333_NumberDeserializers_1_1	573	1	src/main/java/com/fasterxml/jackson/databind/deser/std/NumberDeserializers.java
559	[PATCH]    if    (converterClass    ==    Converter.None.class    ||    converterClass    ==    NoClass.class)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Can    not    deserialize    instance    of    com.fasterxml.jackson.databind.convert.TestConvertingDeserializer$ConvertingBean    out    of    START_ARRAY    token    testClassAnnotationForLists    [CONTEXT]    }    if    (converterDef    instanceof    Converter<?,?>)    {    return    (Converter<Object,Object>)    converterDef;    }    if    (!(converterDef    instanceof    Class))    {    throw    new    IllegalStateException(   "AnnotationIntrospector    returned    Converter    definition    of    type       "    +converterDef.getClass().getName()+   ";    expected    type    Converter    or    Class<Converter>    instead   ");    }    Class<?>    converterClass    =    (Class<?>)converterDef;        [BUGGY]    if    (true)    {    return    null;    }    if    (!Converter.class.isAssignableFrom(converterClass))    {    throw    new    IllegalStateException(   "AnnotationIntrospector    returned    Class       "    +converterClass.getName()+   ";    expected    Class<Converter>   ");    }    HandlerInstantiator    hi    =    _config.getHandlerInstantiator();    Converter<?,?>    conv    =    (hi    ==    null)    ?    null    :    hi.converterInstance(_config,    _classInfo,    converterClass);    if    (conv    ==    null)    {    conv    =    (Converter<?,?>)    ClassUtil.createInstance(converterClass,    [CLASS]        BasicBeanDescription    [METHOD]    _createConverter    [RETURN_TYPE]    Converter        Object    converterDef    [VARIABLES]    HandlerInstantiator    hi    Set    _ignoredPropertyNames    AnnotatedMethod    _anySetterMethod    _jsonValueMethod    am    AnnotationIntrospector    _annotationIntrospector    AnnotatedMember    _anyGetter    am    MapperConfig    _config    config    ObjectIdInfo    _objectIdInfo    TypeBindings    _bindings    boolean    AnnotatedClass    _classInfo    ac    classDef    Converter    conv    List    _properties    candidates    l    names    props    Object    converterDef    Class    converterClass    Map    _injectables        	jacksondatabind_10261_BasicBeanDescription_1_1	596	1	src/main/java/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java
560	[PATCH]    if    ((injectId    ==    null)    &&    (name    ==    null    ||    name.length()    ==    0))    {    //    not    property    based	[BUG]    [BUGGY]    if    (false)    {    //    not    property    based    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Can    not    instantiate    value    of    type    [simple    type,    class    com.fasterxml.jackson.databind.TestObjectMapperBeanDeserializer$FactoryValueBean]    from    Long    integral    number;    no    single-long-arg    constructor/factory    method    testFromLongFactory    [CONTEXT]    }    continue;    }        if    (argCount    ==    1)    {    AnnotatedParameter    param    =    factory.getParameter(0);    PropertyName    pn    =    (param    ==    null)    ?    null    :    intr.findNameForDeserialization(param);    String    name    =    (pn    ==    null)    ?    null    :    pn.getSimpleName();    Object    injectId    =    intr.findInjectableValueId(param);        [BUGGY]    if    (false)    {    _handleSingleArgumentFactory(config,    beanDesc,    vchecker,    intr,    creators,    factory,    isCreator);        continue;    }        }    else    {        if    (!intr.hasCreatorAnnotation(factory))    {    continue;    [CLASS]        BasicDeserializerFactory    [METHOD]    _addDeserializerFactoryMethods    [RETURN_TYPE]    void        DeserializationContext    ctxt    BeanDescription    beanDesc    VisibilityChecker<?>    vchecker    AnnotationIntrospector    intr    CreatorCollector    creators    [VARIABLES]    PropertyName    pn    CreatorProperty[]    properties    DeserializerFactoryConfig    _factoryConfig    config    AnnotatedMethod    factory    HashMap    _collectionFallbacks    _mapFallbacks    AnnotatedParameter    nonAnnotatedParam    param    BeanDescription    beanDesc    AnnotationIntrospector    intr    DeserializationConfig    config    String    name    int    argCount    i    injectCount    namedCount    boolean    isCreator    VisibilityChecker    vchecker    DeserializationContext    ctxt    Class    CLASS_CHAR_BUFFER    CLASS_ITERABLE    CLASS_OBJECT    CLASS_STRING    currClass    instClass    nextCls    prevCls    type    CreatorCollector    creators    Object    injectId        	jacksondatabind_5789_BasicDeserializerFactory_1_1	530	1	src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java
561	[PATCH]    while    (--i    >=    0)    {	[BUG]    [BUGGY]    while    (--i    >=    1)    {    [FE]    com.fasterxml.jackson.databind.exc.InvalidFormatException:    Can    not    construct    instance    of    java.util.Date    from    String    value    '1321992375446':    not    a    valid    representation    (error:    Failed    to    parse    Date    value    '1321992375446':    Can    not    parse    date       "1321992375446   ":    not    compatible    with    any    of    standard    forms    (   "yyyy-MM-dd'T'HH:mm:ss.SSSZ   ",       "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'   ",       "EEE,    dd    MMM    yyyy    HH:mm:ss    zzz   ",       "yyyy-MM-dd   "))    testDateUtilWithStringTimestamp    [CONTEXT]    public    Date    parse(String    dateStr,    ParsePosition    pos)    {    if    (looksLikeISO8601(dateStr))    {    return    parseAsISO8601(dateStr,    pos);    }                int    i    =    dateStr.length();    [BUGGY]    while    (--i    >=    1)    {    char    ch    =    dateStr.charAt(i);    if    (ch    <    '0'    ||    ch    >    '9')    break;    }    if    (i    <    0)    {    if    (NumberInput.inLongRange(dateStr,    false))    {    return    new    Date(Long.parseLong(dateStr));    }    }        return    parseAsRFC1123(dateStr,    pos);    [CLASS]        StdDateFormat    [METHOD]    parse    [RETURN_TYPE]    Date        String    dateStr    ParsePosition    pos    [VARIABLES]    TimeZone    DEFAULT_TIMEZONE    _timezone    tz    boolean    DateFormat    DATE_FORMAT_ISO8601    DATE_FORMAT_ISO8601_Z    DATE_FORMAT_PLAIN    DATE_FORMAT_RFC1123    _formatISO8601    _formatISO8601_z    _formatPlain    _formatRFC1123    char    ch    StdDateFormat    instance    String    DATE_FORMAT_STR_ISO8601    DATE_FORMAT_STR_ISO8601_Z    DATE_FORMAT_STR_PLAIN    DATE_FORMAT_STR_RFC1123    dateStr    f    String[]    ALL_FORMATS    int    i    ParsePosition    pos        	jacksondatabind_14578_StdDateFormat_1_1	238	1	src/main/java/com/fasterxml/jackson/databind/util/StdDateFormat.java
562	[PATCH]    return    (_value    >=    Integer.MIN_VALUE    &&    _value    <=    Integer.MAX_VALUE);	[BUG]    [BUGGY]    return    (_value    ==    Integer.MIN_VALUE    &&    _value    <=    Integer.MAX_VALUE);    [FE]    junit.framework.AssertionFailedError    testFloat    [CONTEXT]    @Override    public    boolean    canConvertToInt()    {    [BUGGY]    return    (_value    ==    Integer.MIN_VALUE    &&    _value    <=    Integer.MAX_VALUE);    }    [CLASS]        FloatNode    [METHOD]    canConvertToInt    [RETURN_TYPE]    boolean        [VARIABLES]    float    _value    v    boolean        	jacksondatabind_11672_FloatNode_1_1	55	1	src/main/java/com/fasterxml/jackson/databind/node/FloatNode.java
563	[PATCH]    TypeIdResolver    idRes    =    idResolver(config,    baseType,    subtypes,    false,    true);	[BUG]    [BUGGY]    TypeIdResolver    idRes    =    idResolver(config,    baseType,    subtypes,    false,    false);    [FE]    java.lang.IllegalArgumentException    testPolymorphicTest    [CONTEXT]    public    TypeDeserializer    buildTypeDeserializer(DeserializationConfig    config,    JavaType    baseType,    Collection<NamedType>    subtypes)    {    if    (_idType    ==    JsonTypeInfo.Id.NONE)    {    return    null;    }        [BUGGY]    TypeIdResolver    idRes    =    idResolver(config,    baseType,    subtypes,    false,    false);        switch    (_includeAs)    {    case    WRAPPER_ARRAY:    return    new    AsArrayTypeDeserializer(baseType,    idRes,    _typeProperty,    _typeIdVisible,    _defaultImpl);    case    PROPERTY:    return    new    AsPropertyTypeDeserializer(baseType,    idRes,    _typeProperty,    _typeIdVisible,    _defaultImpl);    case    WRAPPER_OBJECT:    [CLASS]        StdTypeResolverBuilder    [METHOD]    buildTypeDeserializer    [RETURN_TYPE]    TypeDeserializer        DeserializationConfig    config    JavaType    baseType    NamedType>    subtypes    [VARIABLES]    As    _includeAs    JavaType    baseType    boolean    _typeIdVisible    Collection    subtypes    Class    _defaultImpl    DeserializationConfig    config    Id    _idType    idType    String    _typeProperty    TypeIdResolver    _customIdResolver    idRes        	jacksondatabind_4972_StdTypeResolverBuilder_1_1	102	1	src/main/java/com/fasterxml/jackson/databind/jsontype/impl/StdTypeResolverBuilder.java
564	[PATCH]    if    (config.getAnnotationIntrospector().hasCreatorAnnotation(factory))    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    com.fasterxml.jackson.databind.exc.InvalidFormatException:    Can    not    construct    Map    key    of    type    com.fasterxml.jackson.databind.deser.TestEnumDeserialization$EnumWithCreator    from    String       "enumA   ":    not    a    valid    representation:    Can    not    construct    Map    key    of    type    com.fasterxml.jackson.databind.deser.TestEnumDeserialization$EnumWithCreator    from    String       "enumA   ":    not    one    of    values    for    Enum    class    testEnumWithCreatorMaps    [CONTEXT]    Class<?>    enumClass    =    type.getRawClass();        JsonDeserializer<?>    custom    =    _findCustomEnumDeserializer(enumClass,    config,    beanDesc);    if    (custom    !=    null)    {    return    StdKeyDeserializers.constructDelegatingKeyDeserializer(config,    type,    des);    }    EnumResolver<?>    enumRes    =    constructEnumResolver(enumClass,    config,    beanDesc.findJsonValueMethod());        for    (AnnotatedMethod    factory    :    beanDesc.getFactoryMethods())    {    [BUGGY]    if    (false)    {    int    argCount    =    factory.getParameterCount();    if    (argCount    ==    1)    {    Class<?>    returnType    =    factory.getRawReturnType();        if    (returnType.isAssignableFrom(enumClass))    {        if    (factory.getGenericParameterType(0)    !=    String.class)    {    throw    new    IllegalArgumentException(   "Parameter    #0    type    for    factory    method    (   "+factory+   ")    not    suitable,    must    be    java.lang.String   ");    }    if    (config.canOverrideAccessModifiers())    {    [CLASS]        BasicDeserializerFactory    [METHOD]    _createEnumKeyDeserializer    [RETURN_TYPE]    KeyDeserializer        DeserializationContext    ctxt    JavaType    type    [VARIABLES]    JavaType    type    boolean    DeserializerFactoryConfig    _factoryConfig    config    AnnotatedMethod    factory    HashMap    _collectionFallbacks    _mapFallbacks    BeanDescription    beanDesc    DeserializationContext    ctxt    Class    CLASS_CHAR_BUFFER    CLASS_ITERABLE    CLASS_OBJECT    CLASS_STRING    cls    collectionClass    currClass    enumClass    fallback    instClass    kt    mapClass    nextCls    nodeClass    prevCls    raw    returnType    type    DeserializationConfig    config    EnumResolver    enumRes    JsonDeserializer    custom    des    int    argCount        	jacksondatabind_6069_BasicDeserializerFactory_1_1	1234	1	src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java
565	[PATCH]    int    i    =    0;	[BUG]    [BUGGY]    int    i    =    -1;    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    -1    (through    reference    chain:    com.fasterxml.jackson.databind.jsontype.MapHolder[   "map   "]->java.util.HashMap[   "key   "]->java.util.ArrayList[?])    testJackson428    [CONTEXT]    {    final    int    len    =    value.size();    if    (len    ==    0)    {    return;    }    [BUGGY]    int    i    =    -1;    try    {    final    TypeSerializer    typeSer    =    _valueTypeSerializer;    PropertySerializerMap    serializers    =    _dynamicSerializers;    for    (;    i    <    len;    ++i)    {    Object    elem    =    value.get(i);    if    (elem    ==    null)    {    provider.defaultSerializeNull(jgen);    }    else    {    Class<?>    cc    =    elem.getClass();    JsonSerializer<Object>    serializer    =    serializers.serializerFor(cc);    [CLASS]        IndexedListSerializer    [METHOD]    serializeTypedContents    [RETURN_TYPE]    void        List<?>    value    JsonGenerator    jgen    SerializerProvider    provider    [VARIABLES]    boolean    PropertySerializerMap    serializers    TypeSerializer    typeSer    JsonGenerator    jgen    List    value    Object    elem    Class    cc    JsonSerializer    serializer    SerializerProvider    provider    int    i    len    Exception    e        	jacksondatabind_12547_IndexedListSerializer_1_1	142	1	src/main/java/com/fasterxml/jackson/databind/ser/impl/IndexedListSerializer.java
566	[PATCH]    }    else    if    (_currToken    ==    JsonToken.START_ARRAY)    {	[BUG]    [BUGGY]    }    else    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    Expected    token    END_ARRAY,    current    token    START_ARRAY    testParser    [CONTEXT]    public    JsonParser    skipChildren()    throws    IOException,    JsonParseException    {    if    (_currToken    ==    JsonToken.START_OBJECT)    {    _startContainer    =    false;    _currToken    =    JsonToken.END_OBJECT;    [BUGGY]    }    else    if    (false)    {    _startContainer    =    false;    _currToken    =    JsonToken.END_ARRAY;    }    return    this;    }    [CLASS]        TreeTraversingParser    [METHOD]    skipChildren    [RETURN_TYPE]    JsonParser        [VARIABLES]    NodeCursor    _nodeCursor    JsonToken    _nextToken    boolean    _closed    _startContainer    ObjectCodec    _objectCodec    c    codec        	jacksondatabind_11924_TreeTraversingParser_1_1	173	1	src/main/java/com/fasterxml/jackson/databind/node/TreeTraversingParser.java
567	[PATCH]    if    (desc    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.NullPointerException    testWithGetterAsSetter    [CONTEXT]    public    BasicBeanDescription    forCreation(DeserializationConfig    cfg,    JavaType    type,    MixInResolver    r)    {    BasicBeanDescription    desc    =    _findCachedDesc(type);    [BUGGY]    if    (false)    {    desc    =    BasicBeanDescription.forDeserialization(    collectProperties(cfg,    type,    r,    false,       "set   "));    }    return    desc;    }    [CLASS]        BasicClassIntrospector    [METHOD]    forCreation    [RETURN_TYPE]    BasicBeanDescription        DeserializationConfig    cfg    JavaType    type    MixInResolver    r    [VARIABLES]    JavaType    type    MixInResolver    r    boolean    DeserializationConfig    cfg    BasicClassIntrospector    instance    long    serialVersionUID    BasicBeanDescription    BOOLEAN_DESC    INT_DESC    LONG_DESC    STRING_DESC    desc        	jacksondatabind_10861_BasicClassIntrospector_1_1	101	1	src/main/java/com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.java
568	[PATCH]    int    newDeserFeatures    =    (_deserFeatures    |    feature.getMask());	[BUG]    [BUGGY]    int    newDeserFeatures    =    (_deserFeatures    &    feature.getMask());    [FE]    junit.framework.AssertionFailedError    testCopy    [CONTEXT]    public    DeserializationConfig    with(DeserializationFeature    feature)    {    [BUGGY]    int    newDeserFeatures    =    (_deserFeatures    &    feature.getMask());    return    (newDeserFeatures    ==    _deserFeatures)    ?    this    :    new    DeserializationConfig(this,    _mapperFeatures,    newDeserFeatures);    }    [CLASS]        DeserializationConfig    [METHOD]    with    [RETURN_TYPE]    DeserializationConfig        DeserializationFeature    feature    [VARIABLES]    LinkedNode    _problemHandlers    problemHandlers    DeserializationFeature    feature    boolean    long    serialVersionUID    int    _deserFeatures    deserFeatures    mapperFeatures    newDeserFeatures    newMapperFlags    JsonNodeFactory    _nodeFactory    f        	jacksondatabind_22_DeserializationConfig_1_1	327	1	src/main/java/com/fasterxml/jackson/databind/DeserializationConfig.java
569	[PATCH]    anyViews    =    true;	[BUG]    [BUGGY]    anyViews    =    false;    [FE]    junit.framework.AssertionFailedError:    expected:<100>    but    was:<10>    testUpdatingWithViews    [CONTEXT]    propertyMap.assignIndexes();                boolean    anyViews    =    !_defaultViewInclusion;    if    (!anyViews)    {    for    (SettableBeanProperty    prop    :    props)    {    if    (prop.hasViews())    {    [BUGGY]    anyViews    =    false;    break;    }    }    }        if    (_objectIdReader    !=    null)    {                [CLASS]        BeanDeserializerBuilder    [METHOD]    build    [RETURN_TYPE]    JsonDeserializer        [VARIABLES]    AnnotatedMethod    _buildMethod    buildMethod    SettableBeanProperty    prop    HashMap    _backRefProperties    src    ValueInstantiator    _valueInstantiator    inst    BeanDescription    _beanDesc    beanDesc    ObjectIdReader    _objectIdReader    r    ObjectIdValueProperty    prop    SettableAnyProperty    _anySetter    s    boolean    _defaultViewInclusion    _ignoreAllUnknown    allowOverride    anyViews    ignore    BeanPropertyMap    propertyMap    Value    _builderConfig    config    Collection    props    List    _injectables    Map    _properties    HashSet    _ignorableProps        	jacksondatabind_3863_BeanDeserializerBuilder_1_1	335	1	src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBuilder.java
570	[PATCH]    return    _value    ?    1.0    :    0.0;	[BUG]    [BUGGY]    return    true    ?    1.0    :    0.0;    [FE]    junit.framework.AssertionFailedError:    expected:<0.0>    but    was:<1.0>    testBoolean    [CONTEXT]    public    double    asDouble(double    defaultValue)    {    [BUGGY]    return    true    ?    1.0    :    0.0;    }    [CLASS]        BooleanNode    [METHOD]    asDouble    [RETURN_TYPE]    double        double    defaultValue    [VARIABLES]    BooleanNode    FALSE    TRUE    double    defaultValue    boolean    _value    b    defaultValue    v        	jacksondatabind_1096_BooleanNode_1_1	70	1	src/main/java/com/fasterxml/jackson/databind/node/BooleanNode.java
571	[PATCH]    if    (t    ==    JsonToken.VALUE_STRING)    {    //    let's    do    implicit    re-parse	[BUG]    [BUGGY]    if    (false)    {    //    let's    do    implicit    re-parse    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Can    not    deserialize    instance    of    java.math.BigDecimal    out    of    VALUE_STRING    token    testViaFactoryUsingString    [CONTEXT]    public    BigDecimal    deserialize(JsonParser    jp,    DeserializationContext    ctxt)    throws    IOException,    JsonProcessingException    {    JsonToken    t    =    jp.getCurrentToken();    if    (t    ==    JsonToken.VALUE_NUMBER_INT    ||    t    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    return    jp.getDecimalValue();    }        [BUGGY]    if    (false)    {    String    text    =    jp.getText().trim();    if    (text.length()    ==    0)    {    return    null;    }    try    {    return    new    BigDecimal(text);    }    catch    (IllegalArgumentException    iae)    {    throw    ctxt.weirdStringException(text,    _valueClass,       "not    a    valid    representation   ");    }    }    [CLASS]        NumberDeserializers    PrimitiveOrWrapperDeserializer    BooleanDeserializer    ByteDeserializer    ShortDeserializer    CharacterDeserializer    IntegerDeserializer    LongDeserializer    FloatDeserializer    DoubleDeserializer    NumberDeserializer    BigIntegerDeserializer    BigDecimalDeserializer    [METHOD]    deserialize    [RETURN_TYPE]    BigDecimal        JsonParser    jp    DeserializationContext    ctxt    [VARIABLES]    IntegerDeserializer    primitiveInstance    wrapperInstance    CharacterDeserializer    primitiveInstance    wrapperInstance    FloatDeserializer    primitiveInstance    wrapperInstance    String    text    long    serialVersionUID    value    ShortDeserializer    primitiveInstance    wrapperInstance    BigDecimalDeserializer    instance    NumberDeserializer    instance    boolean    T    _nullValue    nvl    LongDeserializer    primitiveInstance    wrapperInstance    BigIntegerDeserializer    instance    BooleanDeserializer    primitiveInstance    wrapperInstance    DeserializationContext    ctxt    JsonToken    t    ByteDeserializer    primitiveInstance    wrapperInstance    DoubleDeserializer    primitiveInstance    wrapperInstance    IllegalArgumentException    iae    HashSet    _classNames    JsonParser    jp        	jacksondatabind_9336_NumberDeserializers_1_1	577	1	src/main/java/com/fasterxml/jackson/databind/deser/std/NumberDeserializers.java
572	[PATCH]    if    (objectId.writeAsId(jgen,    provider,    w))    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    expected    same:<com.fasterxml.jackson.databind.struct.TestObjectId$ColumnMetadata@37f09a1b>    was    not:<com.fasterxml.jackson.databind.struct.TestObjectId$ColumnMetadata@2a4bd855>    testColumnMetadata    [CONTEXT]    {    final    ObjectIdWriter    w    =    _objectIdWriter;    WritableObjectId    objectId    =    provider.findObjectId(bean,    w.generator);        [BUGGY]    if    (false)    {    return;    }        Object    id    =    objectId.generateId(bean);    if    (w.alwaysAsId)    {    w.serializer.serialize(id,    jgen,    provider);    return;    }    if    (startEndObject)    {    jgen.writeStartObject();    [CLASS]        BeanSerializerBase    [METHOD]    _serializeWithObjectId    [RETURN_TYPE]    void        Object    bean    JsonGenerator    jgen    SerializerProvider    provider    boolean    startEndObject    [VARIABLES]    ObjectIdWriter    _objectIdWriter    objectIdWriter    oiw    w    Shape    _serializationShape    shape    boolean    startEndObject    AnnotatedMember    _typeId    accessor    JsonGenerator    jgen    Object    _propertyFilterId    bean    convDef    id    SerializerProvider    provider    BeanPropertyWriter[]    NO_PROPS    _filteredProps    _props    filteredProperties    fpropsIn    properties    props    propsIn    result    AnyGetterWriter    _anyGetterWriter    WritableObjectId    objectId        	jacksondatabind_4245_BeanSerializerBase_1_1	509	1	src/main/java/com/fasterxml/jackson/databind/ser/std/BeanSerializerBase.java
573	[PATCH]    &&    ((AnnotatedMethod)    _member).getParameterCount()    ==    1)    {	[BUG]    [BUGGY]    &&    ((AnnotatedMethod)    _member).getParameterCount()    ==    0)    {    [FE]    java.lang.NullPointerException    testWithNullMessage    [CONTEXT]    public    AnnotatedMethod    getSetter()    {    if    ((_member    instanceof    AnnotatedMethod)    [BUGGY]    &&    ((AnnotatedMethod)    _member).getParameterCount()    ==    0)    {    return    (AnnotatedMethod)    _member;    }    return    null;    }    [CLASS]        SimpleBeanPropertyDefinition    [METHOD]    getSetter    [RETURN_TYPE]    AnnotatedMethod        [VARIABLES]    AnnotationIntrospector    _introspector    intr    AnnotatedMember    _member    member    String    _name    name    newName    boolean        	jacksondatabind_14511_SimpleBeanPropertyDefinition_1_1	148	1	src/main/java/com/fasterxml/jackson/databind/util/SimpleBeanPropertyDefinition.java
574	[PATCH]    return    false;	[BUG]    [BUGGY]    return    true;    [FE]    junit.framework.ComparisonFailure:    expected:<{   "employees   ":[[{   "id   ":1,   "name   ":   "First   ",   "manager   ":null,   "reports   ":[2]},{   "id   ":2,   "name   ":   "Second   ",   "manager   ":1,   "reports   ":[]}]]}>    but    was:<{   "employees   ":[[]]}>    testMixedRefsIssue188    [CONTEXT]    public    boolean    writeAsId(JsonGenerator    jgen,    SerializerProvider    provider,    ObjectIdWriter    w)    throws    IOException,    JsonGenerationException    {    if    (id    !=    null    &&    (idWritten    ||    w.alwaysAsId))    {    w.serializer.serialize(id,    jgen,    provider);    return    true;    }    [BUGGY]    return    true;    }    [CLASS]        WritableObjectId    [METHOD]    writeAsId    [RETURN_TYPE]    boolean        JsonGenerator    jgen    SerializerProvider    provider    ObjectIdWriter    w    [VARIABLES]    JsonGenerator    jgen    ObjectIdGenerator    generator    Object    id    boolean    idWritten    ObjectIdWriter    w    SerializerProvider    provider        	jacksondatabind_3631_WritableObjectId_1_1	35	1	src/main/java/com/fasterxml/jackson/databind/ser/impl/WritableObjectId.java
575	[PATCH]    props.add(0,    idProp);	[BUG]    [BUGGY]    props.add(1,    idProp);    [FE]    junit.framework.ComparisonFailure:    expected:<{   "[customId   ":123,   "value   ":-19],   "next   ":123}>    but    was:<{   "[value   ":-19,   "customId   ":123],   "next   ":123}>    testCustomPropertyForClass    [CONTEXT]    +   ":    can    not    find    property    with    name    '   "+propName+   "'   ");    }    BeanPropertyWriter    prop    =    props.get(i);    if    (propName.equals(prop.getName()))    {    idProp    =    prop;                if    (i    >    0)    {    props.remove(i);    [BUGGY]    props.add(1,    idProp);    }    break;    }    }    JavaType    idType    =    idProp.getType();    gen    =    new    PropertyBasedObjectIdGenerator(objectIdInfo,    idProp);        return    ObjectIdWriter.construct(idType,    null,    gen,    objectIdInfo.getAlwaysAsId());    }    [CLASS]        BeanSerializerFactory    [METHOD]    constructObjectIdHandler    [RETURN_TYPE]    ObjectIdWriter        SerializerProvider    prov    BeanDescription    beanDesc    BeanPropertyWriter>    props    [VARIABLES]    ObjectIdGenerator    gen    BeanDescription    beanDesc    BeanSerializerFactory    instance    String    propName    ObjectIdInfo    objectIdInfo    long    serialVersionUID    int    i    len    JavaType    idType    type    boolean    List    props    Class    implClass    SerializerProvider    prov    BeanPropertyWriter    idProp    prop        	jacksondatabind_12258_BeanSerializerFactory_1_1	476	1	src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java
576	[PATCH]    if    (o.getClass()    !=    getClass())    return    false;	[BUG]    [BUGGY]    if    (true)    return    false;    [FE]    junit.framework.ComparisonFailure:    expected:<[NameA=]1>    but    was:<[]1>    testSimpleWithAnnotations    [CONTEXT]    public    boolean    equals(Object    o)    {    if    (o    ==    this)    return    true;    if    (o    ==    null)    return    false;    [BUGGY]    if    (true)    return    false;    ClassKey    other    =    (ClassKey)    o;                    return    (other._className.equals(_className))    &&    (other._class.getClassLoader()    ==    _class.getClassLoader());        return    other._class    ==    _class;    [CLASS]        ClassKey    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    o    [VARIABLES]    boolean    ClassKey    other    Class    _class    clz    Object    o    String    _className    long    serialVersionUID    int    _hashCode        	jacksondatabind_229_ClassKey_1_1	80	1	src/main/java/com/fasterxml/jackson/databind/type/ClassKey.java
577	[PATCH]    AnnotationMap    ann    =    _mergeAnnotations(0,    _fields,    _getters);	[BUG]    [BUGGY]    AnnotationMap    ann    =    _mergeAnnotations(1,    _fields,    _getters);    [FE]    java.lang.NullPointerException    testDeserializer    [CONTEXT]    _fields    =    _fields.withValue(_fields.value.withAnnotations(ann));    }    }    else    {    if    (_ctorParameters    !=    null)    {    AnnotationMap    ann    =    _mergeAnnotations(0,    _ctorParameters,    _setters,    _fields,    _getters);    _ctorParameters    =    _ctorParameters.withValue(_ctorParameters.value.withAnnotations(ann));    }    else    if    (_setters    !=    null)    {    AnnotationMap    ann    =    _mergeAnnotations(0,    _setters,    _fields,    _getters);    _setters    =    _setters.withValue(_setters.value.withAnnotations(ann));    }    else    if    (_fields    !=    null)    {    [BUGGY]    AnnotationMap    ann    =    _mergeAnnotations(1,    _fields,    _getters);    _fields    =    _fields.withValue(_fields.value.withAnnotations(ann));    }    }    }    [CLASS]        POJOPropertyBuilder    1    2    3    4    5    Linked    [METHOD]    mergeAnnotations    [RETURN_TYPE]    void        boolean    forSerialization    [VARIABLES]    AnnotationIntrospector    _annotationIntrospector    annotationIntrospector    Linked    _ctorParameters    _fields    _getters    _setters    chain1    chain2    curr    n    next    boolean    _forSerialization    forSerialization    force    ignored    isMarkedIgnored    isVisible    visible    String    _internalName    _name    ename    explName    explicitName    internalName    newName    T    v    value    AnnotationMap    ann        	jacksondatabind_10732_POJOPropertyBuilder_1_1	498	1	src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java
578	[PATCH]    if    (_annotationIntrospector.hasIgnoreMarker(_defaultConstructor))    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Can    not    construct    instance    of    com.fasterxml.jackson.databind.TestHandlerInstantiation$MyMap,    problem:    No    default    constructor    found    testKeyDeserializer    [CONTEXT]    }    }                        if    (_annotationIntrospector    !=    null)    {    if    (_defaultConstructor    !=    null)    {    [BUGGY]    if    (true)    {    _defaultConstructor    =    null;    }    }    if    (_constructors    !=    null)    {        for    (int    i    =    _constructors.size();    --i    >=    0;    )    {    if    (_annotationIntrospector.hasIgnoreMarker(_constructors.get(i)))    {    _constructors.remove(i);    }    }    [CLASS]        AnnotatedClass    [METHOD]    resolveCreators    [RETURN_TYPE]    void        [VARIABLES]    Constructor    ctor    Constructor[]    declaredCtors    AnnotationIntrospector    _annotationIntrospector    aintr    AnnotatedMethodMap    _memberMethods    Method    m    int    i    AnnotationMap[]    NO_ANNOTATION_MAPS    MixInResolver    _mixInResolver    mir    boolean    _creatorsResolved    AnnotatedConstructor    _defaultConstructor    AnnotationMap    _classAnnotations    ann    classAnnotations    Class    _class    _primaryMixIn    acls    cls    List    _constructors    _creatorMethods    _fields    _superTypes    constructors    creatorMethods    superTypes        	jacksondatabind_1788_AnnotatedClass_1_1	357	1	src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java
579	[PATCH]    _additionalKeySerializers    =    (allAdditionalKeySerializers    ==    null)    ?	[BUG]    [BUGGY]    _additionalKeySerializers    =    (false)    ?    [FE]    java.lang.NullPointerException    testKeyDeserializer    [CONTEXT]    protected    SerializerFactoryConfig(Serializers[]    allAdditionalSerializers,    Serializers[]    allAdditionalKeySerializers,    BeanSerializerModifier[]    modifiers)    {    _additionalSerializers    =    (allAdditionalSerializers    ==    null)    ?    NO_SERIALIZERS    :    allAdditionalSerializers;    [BUGGY]    _additionalKeySerializers    =    (false)    ?    NO_SERIALIZERS    :    allAdditionalKeySerializers;    _modifiers    =    (modifiers    ==    null)    ?    NO_MODIFIERS    :    modifiers;    }    [CLASS]        SerializerFactoryConfig    [METHOD]    <init>    [RETURN_TYPE]    BeanSerializerModifier[])        Serializers[]    allAdditionalSerializers    Serializers[]    allAdditionalKeySerializers    BeanSerializerModifier[]    modifiers    [VARIABLES]    BeanSerializerModifier[]    NO_MODIFIERS    _modifiers    modifiers    boolean    Serializers[]    NO_SERIALIZERS    _additionalKeySerializers    _additionalSerializers    allAdditionalKeySerializers    allAdditionalSerializers    long    serialVersionUID        	jacksondatabind_5503_SerializerFactoryConfig_1_1	50	1	src/main/java/com/fasterxml/jackson/databind/cfg/SerializerFactoryConfig.java
580	[PATCH]    if    (B    !=    null)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    java.lang.NullPointerException    testTypeIdResolver    [CONTEXT]    {    final    SettableBeanProperty[]    creatorProps    =    builder.getValueInstantiator().getFromObjectArguments(ctxt.getConfig());        AnnotationIntrospector    intr    =    ctxt.getAnnotationIntrospector();    boolean    ignoreAny    =    false;    {    Boolean    B    =    intr.findIgnoreUnknownProperties(beanDesc.getClassInfo());    [BUGGY]    if    (true)    {    ignoreAny    =    B.booleanValue();    builder.setIgnoreUnknownProperties(ignoreAny);    }    }        Set<String>    ignored    =    ArrayBuilders.arrayToSet(intr.findPropertiesToIgnore(beanDesc.getClassInfo()));    for    (String    propName    :    ignored)    {    builder.addIgnorable(propName);    }        [CLASS]        BeanDeserializerFactory    [METHOD]    addBeanProps    [RETURN_TYPE]    void        DeserializationContext    ctxt    BeanDescription    beanDesc    BeanDeserializerBuilder    builder    [VARIABLES]    BeanDeserializerModifier    mod    Class[]    INIT_CAUSE_PARAMS    NO_VIEWS    views    Set    ignored    AnnotatedMethod    anySetter    getter    SettableBeanProperty    cp    prop    BeanDescription    beanDesc    AnnotationIntrospector    intr    SettableBeanProperty[]    creatorProps    String    name    propName    long    serialVersionUID    BeanDeserializerBuilder    builder    Type    propertyType    boolean    ignoreAny    useGettersAsSetters    BeanDeserializerFactory    instance    BeanPropertyDefinition    propDef    DeserializationContext    ctxt    Collection    ignored2    List    propDefs    Class    rawPropertyType    Boolean    B        	jacksondatabind_8135_BeanDeserializerFactory_1_1	491	1	src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java
581	[PATCH]    if    (value    >=    0    &&    value    <=    0xFFFF)    {	[BUG]    [BUGGY]    if    (value    >=    0    &&    value    <=    0)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Can    not    deserialize    instance    of    char    out    of    VALUE_NUMBER_INT    token    testCharacterWrapper    [CONTEXT]    public    Character    deserialize(JsonParser    jp,    DeserializationContext    ctxt)    throws    IOException,    JsonProcessingException    {    JsonToken    t    =    jp.getCurrentToken();    int    value;    if    (t    ==    JsonToken.VALUE_NUMBER_INT)    {    value    =    jp.getIntValue();    [BUGGY]    if    (value    >=    0    &&    value    <=    0)    {    return    Character.valueOf((char)    value);    }    }    else    if    (t    ==    JsonToken.VALUE_STRING)    {        String    text    =    jp.getText();    if    (text.length()    ==    1)    {    return    Character.valueOf(text.charAt(0));    }        if    (text.length()    ==    0)    {    [CLASS]        NumberDeserializers    PrimitiveOrWrapperDeserializer    BooleanDeserializer    ByteDeserializer    ShortDeserializer    CharacterDeserializer    IntegerDeserializer    LongDeserializer    FloatDeserializer    DoubleDeserializer    NumberDeserializer    BigIntegerDeserializer    BigDecimalDeserializer    [METHOD]    deserialize    [RETURN_TYPE]    Character        JsonParser    jp    DeserializationContext    ctxt    [VARIABLES]    IntegerDeserializer    primitiveInstance    wrapperInstance    CharacterDeserializer    primitiveInstance    wrapperInstance    FloatDeserializer    primitiveInstance    wrapperInstance    String    text    long    serialVersionUID    int    value    ShortDeserializer    primitiveInstance    wrapperInstance    BigDecimalDeserializer    instance    NumberDeserializer    instance    boolean    T    _nullValue    nvl    LongDeserializer    primitiveInstance    wrapperInstance    BigIntegerDeserializer    instance    BooleanDeserializer    primitiveInstance    wrapperInstance    DeserializationContext    ctxt    JsonToken    t    ByteDeserializer    primitiveInstance    wrapperInstance    DoubleDeserializer    primitiveInstance    wrapperInstance    HashSet    _classNames    JsonParser    jp        	jacksondatabind_9266_NumberDeserializers_1_1	283	1	src/main/java/com/fasterxml/jackson/databind/deser/std/NumberDeserializers.java
582	[PATCH]    JavaType    elemType    =    (type.containedTypeCount()    >    0)    ?    type.containedType(0)    :    TypeFactory.unknownType();	[BUG]    [BUGGY]    JavaType    elemType    =    (type.containedTypeCount()    >    0)    ?    type.containedType(1)    :    TypeFactory.unknownType();    [FE]    java.lang.NullPointerException    testIterableWithStrings    [CONTEXT]        if    (rawType    ==    CLASS_OBJECT)    {    return    UntypedObjectDeserializer.instance;    }    if    (rawType    ==    CLASS_STRING    ||    rawType    ==    CLASS_CHAR_BUFFER)    {    return    StringDeserializer.instance;    }    if    (rawType    ==    CLASS_ITERABLE)    {        TypeFactory    tf    =    ctxt.getTypeFactory();    [BUGGY]    JavaType    elemType    =    (type.containedTypeCount()    >    0)    ?    type.containedType(1)    :    TypeFactory.unknownType();    CollectionType    ct    =    tf.constructCollectionType(Collection.class,    elemType);        return    createCollectionDeserializer(ctxt,    ct,    beanDesc);    }        JsonDeserializer<?>    deser    =    NumberDeserializers.find(rawType,    clsName);    if    (deser    ==    null)    {    deser    =    DateDeserializers.find(rawType,    clsName);    if    (deser    ==    null)    {    deser    =    JdkDeserializers.find(rawType,    clsName);    [CLASS]        BasicDeserializerFactory    [METHOD]    findDefaultDeserializer    [RETURN_TYPE]    JsonDeserializer        DeserializationContext    ctxt    JavaType    type    BeanDescription    beanDesc    [VARIABLES]    JavaType    elemType    type    boolean    DeserializerFactoryConfig    _factoryConfig    config    HashMap    _collectionFallbacks    _mapFallbacks    BeanDescription    beanDesc    CollectionType    ct    DeserializationContext    ctxt    Class    CLASS_CHAR_BUFFER    CLASS_ITERABLE    CLASS_OBJECT    CLASS_STRING    cls    collectionClass    currClass    enumClass    fallback    instClass    kt    mapClass    nextCls    nodeClass    prevCls    raw    rawType    returnType    type    String    clsName    TypeFactory    tf    JsonDeserializer    deser        	jacksondatabind_6103_BasicDeserializerFactory_1_1	1345	1	src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java
583	[PATCH]    if    (objectIdInfo    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.NullPointerException    testPojoWriting    [CONTEXT]    {    ObjectIdInfo    objectIdInfo    =    beanDesc.getObjectIdInfo();    [BUGGY]    if    (false)    {    return    null;    }    ObjectIdGenerator<?>    gen;    Class<?>    implClass    =    objectIdInfo.getGeneratorType();        if    (implClass    ==    ObjectIdGenerators.PropertyGenerator.class)    {    String    propName    =    objectIdInfo.getPropertyName();    BeanPropertyWriter    idProp    =    null;        [CLASS]        BeanSerializerFactory    [METHOD]    constructObjectIdHandler    [RETURN_TYPE]    ObjectIdWriter        SerializerProvider    prov    BeanDescription    beanDesc    BeanPropertyWriter>    props    [VARIABLES]    ObjectIdGenerator    gen    BeanDescription    beanDesc    BeanSerializerFactory    instance    String    propName    ObjectIdInfo    objectIdInfo    long    serialVersionUID    int    i    len    JavaType    idType    type    boolean    List    props    Class    implClass    SerializerProvider    prov    BeanPropertyWriter    idProp    prop        	jacksondatabind_12242_BeanSerializerFactory_1_1	452	1	src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java
584	[PATCH]    if    (node    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.NullPointerException    testIgnoreOver    [CONTEXT]    private    <T>    Linked<T>    _removeIgnored(Linked<T>    node)    {    [BUGGY]    if    (false)    {    return    node;    }    return    node.withoutIgnored();    }    [CLASS]        POJOPropertyBuilder    1    2    3    4    5    Linked    [METHOD]    _removeIgnored    [RETURN_TYPE]    <T>        Linked<T>    node    [VARIABLES]    AnnotationIntrospector    _annotationIntrospector    annotationIntrospector    Linked    _ctorParameters    _fields    _getters    _setters    chain1    chain2    curr    n    next    node    boolean    _forSerialization    forSerialization    force    ignored    isMarkedIgnored    isVisible    visible    String    _internalName    _name    ename    explName    explicitName    internalName    newName    T    v    value        	jacksondatabind_10740_POJOPropertyBuilder_1_1	518	1	src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java
585	[PATCH]    int    foundIndex    =    -1;	[BUG]    [BUGGY]    int    foundIndex    =    0;    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    No    _valueDeserializer    assigned    testSimpleBean    [CONTEXT]    {    String    name    =    property.getName();    int    index    =    name.hashCode()    &    (_buckets.length-1);                Bucket    tail    =    null;    [BUGGY]    int    foundIndex    =    0;    for    (Bucket    bucket    =    _buckets[index];    bucket    !=    null;    bucket    =    bucket.next)    {        if    (foundIndex    <    0    &&    bucket.key.equals(name))    {    foundIndex    =    bucket.index;    }    else    {    tail    =    new    Bucket(tail,    bucket.key,    bucket.value,    bucket.index);    }    }        [CLASS]        BeanPropertyMap    Bucket    IteratorImpl    [METHOD]    replace    [RETURN_TYPE]    void        SettableBeanProperty    property    [VARIABLES]    boolean    SettableBeanProperty    newProperty    oldProp    prop    property    value    Bucket[]    _buckets    buckets    newBuckets    Bucket    _currentBucket    b    bucket    next    root    tail    String    key    name    newName    propName    long    serialVersionUID    int    _hashMask    _nextBucketIndex    _size    bcount    bucketCount    count    foundIndex    i    index    len    needed    result    size        	jacksondatabind_7354_BeanPropertyMap_1_1	249	1	src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java
586	[PATCH]    if    ((mod    &    (Modifier.INTERFACE    |    Modifier.ABSTRACT))    ==    0)    {	[BUG]    [BUGGY]    if    ((mod    ^    (Modifier.INTERFACE    |    Modifier.ABSTRACT))    ==    0)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Can    not    construct    instance    of    com.fasterxml.jackson.databind.TestHandlerInstantiation$MyMap,    problem:    No    default    constructor    found    testKeyDeserializer    [CONTEXT]    public    boolean    isConcrete()    {    int    mod    =    _class.getModifiers();    [BUGGY]    if    ((mod    ^    (Modifier.INTERFACE    |    Modifier.ABSTRACT))    ==    0)    {    return    true;    }                if    (_class.isPrimitive())    {    return    true;    }    return    false;    }    [CLASS]        JavaType    [METHOD]    isConcrete    [RETURN_TYPE]    boolean        [VARIABLES]    Class    _class    clz    contentClass    raw    subclass    superclass    Object    _typeHandler    _valueHandler    h    typeHandler    valueHandler    boolean    _asStatic    asStatic    long    serialVersionUID    int    _hashCode    additionalHash    mod        	jacksondatabind_144_JavaType_1_1	251	1	src/main/java/com/fasterxml/jackson/databind/JavaType.java
587	[PATCH]    ObjectIdGenerator<?>    gen    =    (hi    ==    null)    ?    null    :    hi.objectIdGeneratorInstance(config,    annotated,    implClass);	[BUG]    [BUGGY]    ObjectIdGenerator<?>    gen    =    (false)    ?    null    :    hi.objectIdGeneratorInstance(config,    annotated,    implClass);    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    (was    java.lang.NullPointerException)    (through    reference    chain:    com.fasterxml.jackson.databind.jsontype.ListWrapper[   "myList   "]->java.util.ArrayList[0])    testIssue877    [CONTEXT]    public    ObjectIdGenerator<?>    objectIdGeneratorInstance(Annotated    annotated,    ObjectIdInfo    objectIdInfo)    throws    JsonMappingException    {    Class<?>    implClass    =    objectIdInfo.getGeneratorType();    final    MapperConfig<?>    config    =    getConfig();    HandlerInstantiator    hi    =    config.getHandlerInstantiator();    [BUGGY]    ObjectIdGenerator<?>    gen    =    (false)    ?    null    :    hi.objectIdGeneratorInstance(config,    annotated,    implClass);    if    (gen    ==    null)    {    gen    =    (ObjectIdGenerator<?>)    ClassUtil.createInstance(implClass,    config.canOverrideAccessModifiers());    }    return    gen.forScope(objectIdInfo.getScope());    }    [CLASS]        DatabindContext    [METHOD]    objectIdGeneratorInstance    [RETURN_TYPE]    ObjectIdGenerator        Annotated    annotated    ObjectIdInfo    objectIdInfo    [VARIABLES]    HandlerInstantiator    hi    Annotated    annotated    ObjectIdGenerator    gen    boolean    MapperConfig    config    Class    implClass    ObjectIdInfo    objectIdInfo        	jacksondatabind_1059_DatabindContext_1_1	118	1	src/main/java/com/fasterxml/jackson/databind/DatabindContext.java
588	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Can    not    instantiate    value    of    type    [simple    type,    class    com.fasterxml.jackson.databind.TestObjectMapperBeanDeserializer$FactoryValueBean]    from    Long    integral    number;    no    single-long-arg    constructor/factory    method    testFromLongFactory    [CONTEXT]    }                    if    (_annotationIntrospector.hasCreatorAnnotation(am))    {    return    true;    }    if    (   "valueOf   ".equals(am.getName()))    {    [BUGGY]    return    false;    }    return    false;    }    [CLASS]        BasicBeanDescription    [METHOD]    isFactoryMethod    [RETURN_TYPE]    boolean        AnnotatedMethod    am    [VARIABLES]    Set    _ignoredPropertyNames    boolean    AnnotatedMethod    _anySetterMethod    _jsonValueMethod    am    AnnotatedClass    _classInfo    ac    classDef    AnnotationIntrospector    _annotationIntrospector    AnnotatedMember    _anyGetter    am    MapperConfig    _config    config    List    _properties    candidates    props    Class    rt    ObjectIdInfo    _objectIdInfo    Map    _injectables    TypeBindings    _bindings        	jacksondatabind_10213_BasicBeanDescription_1_1	467	1	src/main/java/com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java
589	[PATCH]    if    (jp.getCurrentToken()    ==    JsonToken.START_ARRAY)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Unexpected    token    (START_ARRAY),    expected    FIELD_NAME:    missing    property    '@class'    that    is    to    contain    type    id    (for    class    com.fasterxml.jackson.databind.deser.TestMapDeserialization$ITestType)    testEnumPolymorphicSerializationTest    [CONTEXT]    jp.nextToken();    }    return    deser.deserialize(jp,    ctxt);    }        Object    result    =    TypeDeserializer.deserializeIfNatural(jp,    ctxt,    _baseType);    if    (result    !=    null)    {    return    result;    }        [BUGGY]    if    (false)    {    return    super.deserializeTypedFromAny(jp,    ctxt);    }    throw    ctxt.wrongTokenException(jp,    JsonToken.FIELD_NAME,       "missing    property    '   "+_typePropertyName+   "'    that    is    to    contain    type    id(for    class       "+baseTypeName()+   ")   ");    }    [CLASS]        AsPropertyTypeDeserializer    [METHOD]    _deserializeTypedUsingDefaultImpl    [RETURN_TYPE]    Object        JsonParser    jp    DeserializationContext    ctxt    TokenBuffer    tb    [VARIABLES]    boolean    TokenBuffer    tb    DeserializationContext    ctxt    Object    result    JsonDeserializer    deser    long    serialVersionUID    JsonParser    jp        	jacksondatabind_11194_AsPropertyTypeDeserializer_1_1	138	1	src/main/java/com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java
590	[PATCH]    return    false;	[BUG]    [BUGGY]    return    true;    [FE]    com.fasterxml.jackson.databind.exc.InvalidFormatException:    Can    not    construct    instance    of    java.util.Date    from    String    value    '1984-11-13T00:00:09':    not    a    valid    representation    (error:    Failed    to    parse    Date    value    '1984-11-13T00:00:09':    Can    not    parse    date       "1984-11-13T00:00:09   ":    not    compatible    with    any    of    standard    forms    (   "yyyy-MM-dd'T'HH:mm:ss.SSSZ   ",       "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'   ",       "EEE,    dd    MMM    yyyy    HH:mm:ss    zzz   ",       "yyyy-MM-dd   "))    testDateUtilISO8601NoTimezone    [CONTEXT]        int    len    =    str.length();    if    (len    >=    6)    {    char    c    =    str.charAt(len-6);    if    (c    ==    '+'    ||    c    ==    '-')    return    true;    c    =    str.charAt(len-5);    if    (c    ==    '+'    ||    c    ==    '-')    return    true;    c    =    str.charAt(len-3);    if    (c    ==    '+'    ||    c    ==    '-')    return    true;    }    [BUGGY]    return    true;    }    [CLASS]        StdDateFormat    [METHOD]    hasTimeZone    [RETURN_TYPE]    boolean        String    str    [VARIABLES]    TimeZone    DEFAULT_TIMEZONE    _timezone    tz    boolean    DateFormat    DATE_FORMAT_ISO8601    DATE_FORMAT_ISO8601_Z    DATE_FORMAT_PLAIN    DATE_FORMAT_RFC1123    _formatISO8601    _formatISO8601_z    _formatPlain    _formatRFC1123    df    char    c    StdDateFormat    instance    String    DATE_FORMAT_STR_ISO8601    DATE_FORMAT_STR_ISO8601_Z    DATE_FORMAT_STR_PLAIN    DATE_FORMAT_STR_RFC1123    dateStr    f    str    String[]    ALL_FORMATS    int    len        	jacksondatabind_14807_StdDateFormat_1_1	384	1	src/main/java/com/fasterxml/jackson/databind/util/StdDateFormat.java
591	[PATCH]    String[]    propertyOrder    =    (intr    ==    null)    ?    null    :    intr.findSerializationPropertyOrder(_classDef);	[BUG]    [BUGGY]    String[]    propertyOrder    =    (false)    ?    null    :    intr.findSerializationPropertyOrder(_classDef);    [FE]    java.lang.NullPointerException    testEnumsWhenDisabled    [CONTEXT]    if    (alpha    ==    null)    {    sort    =    _config.shouldSortPropertiesAlphabetically();    }    else    {    sort    =    alpha.booleanValue();    }    [CLASS]        POJOPropertiesCollector    [METHOD]    _sortProperties    [RETURN_TYPE]    void        [VARIABLES]    AnnotationIntrospector    _annotationIntrospector    intr    MapperConfig    _config    config    String    _mutatorPrefix    mutatorPrefix    name    String[]    propertyOrder    LinkedList    _anyGetters    _anySetters    _creatorProperties    _jsonValueGetters    int    size    LinkedHashMap    _injectables    _properties    JavaType    _type    type    boolean    _forSerialization    forSerialization    sort    AnnotatedClass    _classDef    classDef    VisibilityChecker    _visibilityChecker    POJOPropertyBuilder    prop    w    Boolean    alpha    Map    all    ordered    HashSet    _ignoredPropertyNames        	jacksondatabind_10326_POJOPropertiesCollector_1_1	294	1	src/main/java/com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java
592	[PATCH]    char    c    =    str.charAt(len-6);	[BUG]    [BUGGY]    char    c    =    str.charAt(len    %    6);    [FE]    com.fasterxml.jackson.databind.exc.InvalidFormatException:    Can    not    construct    instance    of    java.util.Date    from    String    value    '1972-12-28T00:00:00.000+00:00':    not    a    valid    representation    (error:    Failed    to    parse    Date    value    '1972-12-28T00:00:00.000+00:00':    Can    not    parse    date       "1972-12-28T00:00:00.000+00:00   ":    not    compatible    with    any    of    standard    forms    (   "yyyy-MM-dd'T'HH:mm:ss.SSSZ   ",       "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'   ",       "EEE,    dd    MMM    yyyy    HH:mm:ss    zzz   ",       "yyyy-MM-dd   "))    testDateUtilISO8601    [CONTEXT]    private    final    static    boolean    hasTimeZone(String    str)    {        int    len    =    str.length();    if    (len    >=    6)    {    [BUGGY]    char    c    =    str.charAt(len    %    6);    if    (c    ==    '+'    ||    c    ==    '-')    return    true;    c    =    str.charAt(len-5);    if    (c    ==    '+'    ||    c    ==    '-')    return    true;    c    =    str.charAt(len-3);    if    (c    ==    '+'    ||    c    ==    '-')    return    true;    }    return    false;    }    [CLASS]        StdDateFormat    [METHOD]    hasTimeZone    [RETURN_TYPE]    boolean        String    str    [VARIABLES]    TimeZone    DEFAULT_TIMEZONE    _timezone    tz    boolean    DateFormat    DATE_FORMAT_ISO8601    DATE_FORMAT_ISO8601_Z    DATE_FORMAT_PLAIN    DATE_FORMAT_RFC1123    _formatISO8601    _formatISO8601_z    _formatPlain    _formatRFC1123    df    char    c    StdDateFormat    instance    String    DATE_FORMAT_STR_ISO8601    DATE_FORMAT_STR_ISO8601_Z    DATE_FORMAT_STR_PLAIN    DATE_FORMAT_STR_RFC1123    dateStr    f    str    String[]    ALL_FORMATS    int    len        	jacksondatabind_14756_StdDateFormat_1_1	377	1	src/main/java/com/fasterxml/jackson/databind/util/StdDateFormat.java
593	[PATCH]    if    (t    ==    JsonToken.VALUE_NULL)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.ComparisonFailure:    expected:<[funny]>    but    was:<[text]>    testCustomRootNulls    [CONTEXT]    {    try    {    Object    result;    JsonToken    t    =    _initForReading(jp);    [BUGGY]    if    (false)    {        DeserializationContext    ctxt    =    createDeserializationContext(jp,    getDeserializationConfig());    result    =    _findRootDeserializer(ctxt,    valueType).getNullValue();    }    else    if    (t    ==    JsonToken.END_ARRAY    ||    t    ==    JsonToken.END_OBJECT)    {    result    =    null;    }    else    {    DeserializationConfig    cfg    =    getDeserializationConfig();    DeserializationContext    ctxt    =    createDeserializationContext(jp,    cfg);    JsonDeserializer<Object>    deser    =    _findRootDeserializer(ctxt,    valueType);    [CLASS]        ObjectMapper    DefaultTyping    DefaultTypeResolverBuilder    1    [METHOD]    _readMapAndClose    [RETURN_TYPE]    Object        JsonParser    jp    JavaType    valueType    [VARIABLES]    RootNameLookup    _rootNames    DefaultDeserializationContext    _deserializationContext    dc    HashMap    _mixInAnnotations    mixins    DefaultSerializerProvider    _serializerProvider    p    sp    AnnotationIntrospector    DEFAULT_ANNOTATION_INTROSPECTOR    ai    deserializerAI    serializerAI    JsonFactory    _jsonFactory    jf    DeserializationConfig    _deserializationConfig    cfg    config    deserConfig    JsonDeserializer    deser    long    serialVersionUID    PrettyPrinter    _defaultPrettyPrinter    pp    VisibilityChecker    STD_VISIBILITY_CHECKER    vc    DeserializationContext    ctxt    JsonToken    t    DefaultTyping    JAVA_LANG_OBJECT    NON_CONCRETE_AND_ARRAYS    NON_FINAL    OBJECT_AND_NON_CONCRETE    _appliesFor    applicability    dti    t    ConcurrentHashMap    _rootDeserializers    JsonParser    jp    SerializerFactory    _serializerFactory    f    SubtypeResolver    _subtypeResolver    str    SerializationConfig    _serializationConfig    cfg    config    IOException    ioe    InjectableValues    _injectableValues    injectableValues    ClassIntrospector    DEFAULT_INTROSPECTOR    ci    JavaType    JSON_NODE_TYPE    baseType    rootType    t    toValueType    type    valueType    boolean    Object    result    BaseSettings    DEFAULT_BASE    TypeFactory    _typeFactory    f        	jacksondatabind_4933_ObjectMapper_1_1	2874	1	src/main/java/com/fasterxml/jackson/databind/ObjectMapper.java
594	[PATCH]    }    else    if    (   "lineNumber   ".equals(propName))    {	[BUG]    [BUGGY]    }    else    if    (true)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Non-numeric    token    (VALUE_STRING)    for    property    'lineNumber'    testWithNullMessage    [CONTEXT]    if    (t    ==    JsonToken.START_OBJECT)    {    String    className    =       "   ",    methodName    =       "   ",    fileName    =       "   ";    int    lineNumber    =    -1;    while    ((t    =    jp.nextValue())    !=    JsonToken.END_OBJECT)    {    String    propName    =    jp.getCurrentName();    if    (   "className   ".equals(propName))    {    className    =    jp.getText();    }    else    if    (   "fileName   ".equals(propName))    {    fileName    =    jp.getText();    [BUGGY]    }    else    if    (true)    {    if    (t.isNumeric())    {    lineNumber    =    jp.getIntValue();    }    else    {    throw    JsonMappingException.from(jp,       "Non-numeric    token    (   "+t+   ")    for    property    'lineNumber'   ");    }    }    else    if    (   "methodName   ".equals(propName))    {    methodName    =    jp.getText();    }    else    if    (   "nativeMethod   ".equals(propName))    {        }    else    {    [CLASS]        JdkDeserializers    UUIDDeserializer    URLDeserializer    URIDeserializer    CurrencyDeserializer    PatternDeserializer    LocaleDeserializer    InetAddressDeserializer    CharsetDeserializer    FileDeserializer    AtomicReferenceDeserializer    AtomicBooleanDeserializer    StackTraceElementDeserializer    [METHOD]    deserialize    [RETURN_TYPE]    StackTraceElement        JsonParser    jp    DeserializationContext    ctxt    [VARIABLES]    StackTraceElementDeserializer    instance    CurrencyDeserializer    instance    FileDeserializer    instance    LocaleDeserializer    instance    String    className    fileName    methodName    propName    JsonDeserializer    _valueDeserializer    deser    int    lineNumber    URLDeserializer    instance    JavaType    _referencedType    referencedType    boolean    UUIDDeserializer    instance    URIDeserializer    instance    InetAddressDeserializer    instance    AtomicBooleanDeserializer    instance    DeserializationContext    ctxt    JsonToken    t    CharsetDeserializer    instance    PatternDeserializer    instance    HashSet    _classNames    JsonParser    jp        	jacksondatabind_9037_JdkDeserializers_1_1	403	1	src/main/java/com/fasterxml/jackson/databind/deser/std/JdkDeserializers.java
595	[PATCH]    if    (!wrap    ||    !(t    instanceof    JsonMappingException))    {	[BUG]    [BUGGY]    if    (!wrap)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Current    token    (VALUE_STRING)    not    numeric,    can    not    use    numeric    value    accessors    testDeserializeDecimalProperException    [CONTEXT]    while    (t    instanceof    InvocationTargetException    &&    t.getCause()    !=    null)    {    t    =    t.getCause();    }        if    (t    instanceof    Error)    {    throw    (Error)    t;    }    boolean    wrap    =    (ctxt    ==    null)    ||    ctxt.isEnabled(DeserializationFeature.WRAP_EXCEPTIONS);        if    (t    instanceof    IOException)    {    [BUGGY]    if    (!wrap)    {    throw    (IOException)    t;    }    }    else    if    (!wrap)    {    if    (t    instanceof    RuntimeException)    {    throw    (RuntimeException)    t;    }    }        throw    JsonMappingException.wrapWithPath(t,    bean,    fieldName);    }    [CLASS]        BeanDeserializerBase    [METHOD]    wrapAndThrow    [RETURN_TYPE]    void        Throwable    t    Object    bean    String    fieldName    DeserializationContext    ctxt    [VARIABLES]    UnwrappedPropertyHandler    _unwrappedPropertyHandler    unwrapped    Shape    _serializationShape    shape    ValueInjector[]    _injectables    HashMap    _subDeserializers    ValueInstantiator    _valueInstantiator    vi    ObjectIdReader    _objectIdReader    oir    String    fieldName    JsonDeserializer    _delegateDeserializer    cd    contentDeser    deser    orig    ser    subDeser    unwrapping    valueDeser    PropertyBasedCreator    _propertyBasedCreator    long    serialVersionUID    SettableAnyProperty    _anySetter    JavaType    _beanType    backRefType    delegateType    idType    referredType    type    Annotations    _classAnnotations    boolean    _ignoreAllUnknown    _needViewProcesing    _nonStandardCreation    _vanillaProcessing    hasViews    ignoreAllUnknown    isContainer    value    wrap    BeanPropertyMap    _beanProperties    properties    Throwable    t    DeserializationContext    ctxt    Object    bean    Map    _backRefs    backRefs    ExternalTypeHandler    _externalTypeIdHandler    HashSet    _ignorableProps    ignorableProps    newIgnored        	jacksondatabind_6863_BeanDeserializerBase_1_1	1323	1	src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java
596	[PATCH]    TypeIdResolver    idRes    =    idResolver(config,    baseType,    subtypes,    false,    true);	[BUG]    [BUGGY]    TypeIdResolver    idRes    =    idResolver(config,    baseType,    subtypes,    true,    true);    [FE]    java.lang.IllegalArgumentException    testPolymorphicTest    [CONTEXT]    public    TypeDeserializer    buildTypeDeserializer(DeserializationConfig    config,    JavaType    baseType,    Collection<NamedType>    subtypes)    {    if    (_idType    ==    JsonTypeInfo.Id.NONE)    {    return    null;    }        [BUGGY]    TypeIdResolver    idRes    =    idResolver(config,    baseType,    subtypes,    true,    true);        switch    (_includeAs)    {    case    WRAPPER_ARRAY:    return    new    AsArrayTypeDeserializer(baseType,    idRes,    _typeProperty,    _typeIdVisible,    _defaultImpl);    case    PROPERTY:    return    new    AsPropertyTypeDeserializer(baseType,    idRes,    _typeProperty,    _typeIdVisible,    _defaultImpl);    case    WRAPPER_OBJECT:    [CLASS]        StdTypeResolverBuilder    [METHOD]    buildTypeDeserializer    [RETURN_TYPE]    TypeDeserializer        DeserializationConfig    config    JavaType    baseType    NamedType>    subtypes    [VARIABLES]    As    _includeAs    JavaType    baseType    boolean    _typeIdVisible    Collection    subtypes    Class    _defaultImpl    DeserializationConfig    config    Id    _idType    idType    String    _typeProperty    TypeIdResolver    _customIdResolver    idRes        	jacksondatabind_4971_StdTypeResolverBuilder_1_1	102	1	src/main/java/com/fasterxml/jackson/databind/jsontype/impl/StdTypeResolverBuilder.java
597	[PATCH]    if    (key.equals(bucket.key))    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError:    Expected    an    exception    with    one    of    substrings    ([overflow]):    got    one    with    message       "java.util.ArrayList    cannot    be    cast    to    [I   "    testOverflows    [CONTEXT]                if    (bucket    ==    null)    {    return    null;    }    if    (key.equals(bucket.key))    {    return    bucket.value;    }    while    ((bucket    =    bucket.next)    !=    null)    {    [BUGGY]    if    (true)    {    return    bucket.value;    }    }    return    null;    }    [CLASS]        JsonSerializerMap    Bucket    [METHOD]    find    [RETURN_TYPE]    JsonSerializer        TypeKey    key    [VARIABLES]    TypeKey    key    JsonSerializer    value    boolean    Bucket[]    _buckets    buckets    Bucket    bucket    next    int    _size    hashMask    index    needed    result    size        	jacksondatabind_3926_JsonSerializerMap_1_1	65	1	src/main/java/com/fasterxml/jackson/databind/ser/impl/JsonSerializerMap.java
598	[PATCH]    if    (propName    ==    null    ||    propName.length()    ==    0)    {	[BUG]    [BUGGY]    if    (propName.length()    ==    0)    {    [FE]    java.lang.NullPointerException    testWithCtorAndDelegate    [CONTEXT]    {                                [BUGGY]    if    (propName.length()    ==    0)    {    _propName    =       "   ";    }    else    {    _propName    =    InternCache.instance.intern(propName);    }    _type    =    type;    _wrapperName    =    wrapper;    _isRequired    =    isRequired;    _contextAnnotations    =    contextAnnotations;    _viewMatcher    =    null;        [CLASS]        SettableBeanProperty    [METHOD]    <init>    [RETURN_TYPE]    Annotations,boolean)        String    propName    JavaType    type    PropertyName    wrapper    TypeDeserializer    typeDeser    Annotations    contextAnnotations    boolean    isRequired    [VARIABLES]    PropertyName    _wrapperName    wrapper    JavaType    _type    type    Annotations    _contextAnnotations    contextAnnotations    boolean    _isRequired    isRequired    NullProvider    _nullProvider    String    _managedReferenceName    _propName    propName    ViewMatcher    _viewMatcher    JsonDeserializer    MISSING_VALUE_DESERIALIZER    _valueDeserializer    TypeDeserializer    _valueTypeDeserializer    typeDeser    long    serialVersionUID    int    _propertyIndex        	jacksondatabind_3437_SettableBeanProperty_1_1	145	1	src/main/java/com/fasterxml/jackson/databind/deser/SettableBeanProperty.java
599	[PATCH]    if    (java.nio.charset.Charset.class.isAssignableFrom(raw))    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.ComparisonFailure:    expected:<[   "UTF-8   "]>    but    was:<[{   "registered   ":true}]>    testCharset    [CONTEXT]    Class<?>    raw    =    type.getRawClass();        if    (InetAddress.class.isAssignableFrom(raw))    {    return    InetAddressSerializer.instance;    }        if    (TimeZone.class.isAssignableFrom(raw))    {    return    TimeZoneSerializer.instance;    }        [BUGGY]    if    (false)    {    return    ToStringSerializer.instance;    }        JsonSerializer<?>    ser    =    findOptionalStdSerializer(prov,    type,    beanDesc,    staticTyping);    if    (ser    !=    null)    {    return    ser;    }    if    (Number.class.isAssignableFrom(raw))    {    [CLASS]        BasicSerializerFactory    [METHOD]    findSerializerByPrimaryType    [RETURN_TYPE]    JsonSerializer        SerializerProvider    prov    JavaType    type    BeanDescription    beanDesc    boolean    staticTyping    [VARIABLES]    SerializerFactoryConfig    _factoryConfig    config    JavaType    type    boolean    staticTyping    HashMap    _concrete    _concreteLazy    BeanDescription    beanDesc    Class    raw    JsonSerializer    ser    SerializerProvider    prov        	jacksondatabind_12020_BasicSerializerFactory_1_1	372	1	src/main/java/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java
600	[PATCH]    if    (--open    ==    0)    {	[BUG]    [BUGGY]    if    (--open    ==    -1)    {    [FE]    junit.framework.AssertionFailedError:    expected:<END_ARRAY>    but    was:<null>    testSkipping    [CONTEXT]        return    this;    }    switch    (t)    {    case    START_OBJECT:    case    START_ARRAY:    ++open;    break;    case    END_OBJECT:    case    END_ARRAY:    [BUGGY]    if    (--open    ==    -1)    {    return    this;    }    break;    }    }    }    [CLASS]        ParserMinimalBase    [METHOD]    skipChildren    [RETURN_TYPE]    JsonParser        [VARIABLES]    JsonToken    _currToken    _lastClearedToken    t    int    INT_APOSTROPHE    INT_ASTERISK    INT_BACKSLASH    INT_COLON    INT_COMMA    INT_CR    INT_LBRACKET    INT_LCURLY    INT_LF    INT_QUOTE    INT_RBRACKET    INT_RCURLY    INT_SLASH    INT_SPACE    INT_TAB    INT_b    INT_f    INT_n    INT_r    INT_t    INT_u    features    open    boolean        	jacksoncore_3742_ParserMinimalBase_1_1	165	1	src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java
601	[PATCH]    int    ch    =    (int)    b    &    0xFF;	[BUG]    [BUGGY]    int    ch    =    (int)b    ^    255;    [FE]    junit.framework.AssertionFailedError    testSimpleValidArray    [CONTEXT]    private    static    int    skipSpace(InputAccessor    acc,    byte    b)    throws    IOException    {    while    (true)    {    [BUGGY]    int    ch    =    (int)b    ^    255;    if    (!(ch    ==    '    '    ||    ch    ==    '\r'    ||    ch    ==    '\n'    ||    ch    ==    '\t'))    {    return    ch;    }    if    (!acc.hasMoreBytes())    {    return    -1;    }    b    =    acc.nextByte();    ch    =    (int)    b    &    0xFF;    }    }    [CLASS]        ByteSourceJsonBootstrapper    [METHOD]    skipSpace    [RETURN_TYPE]    int        InputAccessor    acc    byte    b    [VARIABLES]    byte[]    _inputBuffer    inputBuffer    boolean    _bigEndian    _bufferRecyclable    canonicalize    foundEncoding    intern    byte    UTF8_BOM_1    UTF8_BOM_2    UTF8_BOM_3    b    InputStream    _in    in    IOContext    _context    ctxt    InputAccessor    acc    int    _bytesPerChar    _inputEnd    _inputProcessed    _inputPtr    ch    i    i16    inputLen    inputStart    len    parserFeatures    quad        	jacksoncore_7175_ByteSourceJsonBootstrapper_1_1	368	1	src/main/java/com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.java
602	[PATCH]    if    (c    ==    INT_APOSTROPHE    ||    codes[c]    !=    0)    {	[BUG]    [BUGGY]    if    (c    ==    INT_APOSTROPHE    ||    codes[c]    !=    1)    {    [FE]    com.fasterxml.jackson.core.JsonParseException:    Invalid    UTF-8    start    byte    0x62    testSingleQuotesEnabled    [CONTEXT]    }    int    max    =    _inputEnd;    {    int    max2    =    _inputPtr    +    (outBuf.length    -    outPtr);    if    (max2    <    max)    {    max    =    max2;    }    }    while    (_inputPtr    <    max)    {    c    =    (int)    inputBuffer[_inputPtr++]    &    0xFF;    [BUGGY]    if    (c    ==    INT_APOSTROPHE    ||    codes[c]    !=    1)    {    break    ascii_loop;    }    outBuf[outPtr++]    =    (char)    c;    }    }        if    (c    ==    INT_APOSTROPHE)    {    break    main_loop;    }    [CLASS]        UTF8StreamJsonParser    [METHOD]    _handleApostropheValue    [RETURN_TYPE]    JsonToken        [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    codes    quads    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    byteIx    byteLen    c    ch    ch2    cix    count    currQuad    currQuadBytes    decodedData    defaultValue    end    expLen    features    fractLen    i    intLen    intPartLength    integerPartLength    ix    lastQuad    lastQuadBytes    len    max    max2    minAvailable    nameLen    needed    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    q1    q2    qlen    start    char[]    outBuf        	jacksoncore_13462_UTF8StreamJsonParser_1_1	2321	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
603	[PATCH]    bbuf[outputPtr++]    =    (byte)    (0x80    |    ((ch    >>    6)    &    0x3f));	[BUG]    [BUGGY]    bbuf[outputPtr++]    =    (byte)    (0x80    |    ((ch    >>    6)    |    63));    [FE]    junit.framework.ComparisonFailure:    expected:<[   "chars:    [ ]/[[ሴ]]   "]>    but    was:<[   "chars:    [ ]/[[���]]   "]>    testAboveAsciiEscapeWithUTF8Stream    [CONTEXT]    if    (ch    >=    SURR1_FIRST    &&    ch    <=    SURR2_LAST)    {    bbuf[outputPtr++]    =    BYTE_BACKSLASH;    bbuf[outputPtr++]    =    BYTE_u;    bbuf[outputPtr++]    =    HEX_CHARS[(ch    >>    12)    &    0xF];    bbuf[outputPtr++]    =    HEX_CHARS[(ch    >>    8)    &    0xF];    bbuf[outputPtr++]    =    HEX_CHARS[(ch    >>    4)    &    0xF];    bbuf[outputPtr++]    =    HEX_CHARS[ch    &    0xF];    }    else    {    bbuf[outputPtr++]    =    (byte)    (0xe0    |    (ch    >>    12));    [BUGGY]    bbuf[outputPtr++]    =    (byte)    (0x80    |    ((ch    >>    6)    |    63));    bbuf[outputPtr++]    =    (byte)    (0x80    |    (ch    &    0x3f));    }    return    outputPtr;    }    [CLASS]        UTF8JsonGenerator    [METHOD]    _outputMultiByteChar    [RETURN_TYPE]    int        int    ch    int    outputPtr    [VARIABLES]    byte[]    FALSE_BYTES    HEX_CHARS    NULL_BYTES    TRUE_BYTES    _entityBuffer    _outputBuffer    bbuf    buf    bytes    data    encodingBuffer    input    keyword    outputBuffer    raw    readBuffer    text    utf8    boolean    _bufferRecyclable    addQuotes    bufferRecyclable    commaBefore    state    byte    BYTE_0    BYTE_BACKSLASH    BYTE_COLON    BYTE_COMMA    BYTE_LBRACKET    BYTE_LCURLY    BYTE_QUOTE    BYTE_RBRACKET    BYTE_RCURLY    BYTE_u    b    OutputStream    _outputStream    out    int    MAX_BYTES_TO_BUFFER    SURR1_FIRST    SURR1_LAST    SURR2_FIRST    SURR2_LAST    _charBufferLength    _outputEnd    _outputMaxContiguous    _outputTail    amount    b24    blen    bytes    bytesDone    bytesLeft    c    ch    chunksBeforeLF    count    dataLength    end    escape    features    i    inputEnd    inputLeft    inputLen    inputOffset    inputPtr    lastFullOffset    left    len    len2    len3    length    maxRead    maxUnescaped    missing    offset    outputEnd    outputOffset    outputPtr    ptr    remainingChars    safeInputEnd    safeOutputEnd    start    status    surr1    surr2    totalLen    char[]    _charBuffer    buf    cbuf    text        	jacksoncore_10892_UTF8JsonGenerator_1_1	1793	1	src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java
604	[PATCH]    return    findName(_quadBuffer,    qlen,    q,    2);	[BUG]    [BUGGY]    return    findName(_quadBuffer,    qlen,    q,    -2);    [FE]    junit.framework.ComparisonFailure:    expected:<...atin1-fully-¾-develo[p¨d]>    but    was:<...atin1-fully-¾-develo[]>    testUtf8Name2Bytes    [CONTEXT]    if    (i    ==    INT_QUOTE)    {    return    findName(_quadBuffer,    qlen,    q,    1);    }    return    parseEscapedFieldName(_quadBuffer,    qlen,    q,    i,    1);    }    q    =    (q    <<    8)    |    i;    i    =    _inputBuffer[_inputPtr++]    &    0xFF;    if    (codes[i]    !=    0)    {    if    (i    ==    INT_QUOTE)    {    [BUGGY]    return    findName(_quadBuffer,    qlen,    q,    -2);    }    return    parseEscapedFieldName(_quadBuffer,    qlen,    q,    i,    2);    }    q    =    (q    <<    8)    |    i;    i    =    _inputBuffer[_inputPtr++]    &    0xFF;    if    (codes[i]    !=    0)    {    if    (i    ==    INT_QUOTE)    {    return    findName(_quadBuffer,    qlen,    q,    3);    }    [CLASS]        UTF8StreamJsonParser    [METHOD]    parseLongFieldName    [RETURN_TYPE]    Name        int    q    [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    codes    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    c    ch    count    decodedData    defaultValue    end    expLen    features    fractLen    i    intLen    intPartLength    integerPartLength    len    minAvailable    nameLen    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    q2    qlen    start        	jacksoncore_12371_UTF8StreamJsonParser_1_1	1540	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
605	[PATCH]    x    =    (x    <<    8)    |    (wordBytes[i]    &    0xFF);	[BUG]    [BUGGY]    x    =    (x    >>>    8)    |    (wordBytes[i]    &    0xFF);    [FE]    junit.framework.AssertionFailedError:    expected:<8192>    but    was:<16384>    testSyntheticWithBytes    [CONTEXT]    protected    static    int[]    calcQuads(byte[]    wordBytes)    {    int    blen    =    wordBytes.length;    int[]    result    =    new    int[(blen    +    3)    /    4];    for    (int    i    =    0;    i    <    blen;    ++i)    {    int    x    =    wordBytes[i]    &    0xFF;    if    (++i    <    blen)    {    x    =    (x    <<    8)    |    (wordBytes[i]    &    0xFF);    if    (++i    <    blen)    {    [BUGGY]    x    =    (x    >>>    8)    |    (wordBytes[i]    &    0xFF);    if    (++i    <    blen)    {    x    =    (x    <<    8)    |    (wordBytes[i]    &    0xFF);    }    }    }    result[i    >>    2]    =    x;    }    return    result;    }    [CLASS]        BytesToNameCanonicalizer    TableInfo    Bucket    [METHOD]    calcQuads    [RETURN_TYPE]    int[]        byte[]    wordBytes    [VARIABLES]    byte[]    wordBytes    boolean    _collListShared    _intern    _mainHashShared    _mainNamesShared    _needRehash    canonicalize    intern    Bucket[]    _collList    collList    Bucket    _next    bucket    next    BytesToNameCanonicalizer    _parent    parent    src    AtomicReference    _tableInfo    int[]    _mainHash    mainHash    quads    result    int    DEFAULT_TABLE_SIZE    INITIAL_COLLISION_LEN    LAST_VALID_BUCKET    MAX_COLL_CHAIN_FOR_REUSE    MAX_COLL_CHAIN_LENGTH    MAX_ENTRIES_FOR_REUSE    MAX_TABLE_SIZE    MIN_HASH_SIZE    MULT    MULT2    MULT3    _collCount    _collEnd    _count    _hashSeed    _length    _longestCollisionList    _mainHashMask    blen    childCount    collCount    collEnd    count    curr    firstQuad    hash    hashSeed    hashSize    i    ix    longestCollisionList    mainHashMask    q1    q2    qlen    secondQuad    seed    val    x    Name[]    _mainNames    mainNames    Name    _name    name    symbol        	jacksoncore_1620_BytesToNameCanonicalizer_1_1	727	1	src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java
606	[PATCH]    int    avail    =    _end    -    _ptr;	[BUG]    [BUGGY]    int    avail    =    _end    %    _ptr;    [FE]    java.lang.ArithmeticException:    /    by    zero    testSimpleValidArray    [CONTEXT]    public    int    read(byte[]    b,    int    off,    int    len)    throws    IOException    {    if    (_buffer    !=    null)    {    [BUGGY]    int    avail    =    _end    %    _ptr;    if    (len    >    avail)    {    len    =    avail;    }    System.arraycopy(_buffer,    _ptr,    b,    off,    len);    _ptr    +=    len;    if    (_ptr    >=    _end)    {    freeMergedBuffer();    }    return    len;    }    [CLASS]        MergedStream    [METHOD]    read    [RETURN_TYPE]    int        byte[]    b    int    off    int    len    [VARIABLES]    byte[]    _buffer    b    buf    IOContext    _context    context    boolean    InputStream    _in    in    int    _end    _ptr    avail    c    end    len    off    readlimit    start        	jacksoncore_4825_MergedStream_1_1	90	1	src/main/java/com/fasterxml/jackson/core/io/MergedStream.java
607	[PATCH]    q2    =    (q2    <<    8)    |    i;	[BUG]    [BUGGY]    q2    =    (q2    >>>    8)    |    i;    [FE]    junit.framework.ComparisonFailure:    expected:<Thum[bnai]l>    but    was:<Thum[  bo]l>    testSpecExampleFully    [CONTEXT]    return    parseFieldName(_quad1,    q2,    i,    2);    }    q2    =    (q2    <<    8)    |    i;    i    =    _inputBuffer[_inputPtr++]    &    0xFF;    if    (codes[i]    !=    0)    {    if    (i    ==    INT_QUOTE)    {    return    findName(_quad1,    q2,    3);    }    return    parseFieldName(_quad1,    q2,    i,    3);    }    [BUGGY]    q2    =    (q2    >>>    8)    |    i;    i    =    _inputBuffer[_inputPtr++]    &    0xFF;    if    (codes[i]    !=    0)    {    if    (i    ==    INT_QUOTE)    {    return    findName(_quad1,    q2,    4);    }    return    parseFieldName(_quad1,    q2,    i,    4);    }    _quadBuffer[0]    =    _quad1;    _quadBuffer[1]    =    q2;    return    parseLongFieldName(i);    [CLASS]        UTF8StreamJsonParser    [METHOD]    parseMediumFieldName    [RETURN_TYPE]    Name        int    q2    final    int[]    codes    [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    codes    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    c    ch    count    decodedData    defaultValue    end    expLen    features    fractLen    i    intLen    intPartLength    integerPartLength    len    minAvailable    nameLen    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    q2    start        	jacksoncore_12292_UTF8StreamJsonParser_1_1	1498	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
608	[PATCH]    System.arraycopy(c,    start,    _currentSegment,    0,    amount);	[BUG]    [BUGGY]    System.arraycopy(c,    start,    _currentSegment,    -1,    amount);    [FE]    java.lang.ArrayIndexOutOfBoundsException    testLongAppend    [CONTEXT]    start    +=    max;    len    -=    max;    }                    do    {    expand(len);    int    amount    =    Math.min(_currentSegment.length,    len);    [BUGGY]    System.arraycopy(c,    start,    _currentSegment,    -1,    amount);    _currentSize    +=    amount;    start    +=    amount;    len    -=    amount;    }    while    (len    >    0);    }    [CLASS]        TextBuffer    [METHOD]    append    [RETURN_TYPE]    void        char[]    c    int    start    int    len    [VARIABLES]    boolean    _hasSegments    BufferRecycler    _allocator    allocator    ArrayList    _segments    String    _resultString    value    int    MAX_SEGMENT_LEN    MIN_SEGMENT_LEN    _currentSize    _inputLen    _inputStart    _segmentSize    amount    currLen    i    len    max    needed    segLen    start    char[]    NO_CHARS    _currentSegment    _inputBuffer    _resultArray    buf    c    curr    result        	jacksoncore_2665_TextBuffer_1_1	474	1	src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java
609	[PATCH]    if    (_inputPtr    >=    _inputEnd)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    java.io.IOException:    Failed    (variant    MIME,    data    length    1):    Unexpected    end-of-input    in    VALUE_STRING    testBase64UsingInputStream    [CONTEXT]    loadMoreGuaranteed();    }    ch    =    _inputBuffer[_inputPtr++]    &    0xFF;    bits    =    b64variant.decodeBase64Char(ch);    if    (bits    <    0)    {    bits    =    _decodeBase64Escape(b64variant,    ch,    1);    }    decodedData    =    (decodedData    <<    6)    |    bits;            [BUGGY]    if    (true)    {    loadMoreGuaranteed();    }    ch    =    _inputBuffer[_inputPtr++]    &    0xFF;    bits    =    b64variant.decodeBase64Char(ch);        if    (bits    <    0)    {    if    (bits    !=    Base64Variant.BASE64_VALUE_PADDING)    {        if    (ch    ==    '   "'    &&    !b64variant.usesPadding())    {    [CLASS]        UTF8StreamJsonParser    [METHOD]    _decodeBase64    [RETURN_TYPE]    byte[]        Base64Variant    b64variant    [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    neg    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    Base64Variant    b64variant    int[]    _quadBuffer    arr    codes    quads    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    ByteArrayBuilder    builder    int    _quad1    amount    bits    byteIx    byteLen    c    c1    ch    ch2    cix    code    count    currQuad    currQuadBytes    d    decodedData    defaultValue    digit    end    expLen    features    firstByte    fractLen    i    intLen    intPartLength    integerPartLength    ix    lastQuad    lastQuadBytes    len    mask    max    max2    minAvailable    more    nameLen    needed    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    q1    q2    qlen    start    value        	jacksoncore_14481_UTF8StreamJsonParser_1_1	3090	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
610	[PATCH]    buffer[ptr++]    =    _base64ToAsciiC[b24    &    0x3F];	[BUG]    [BUGGY]    buffer[ptr++]    =    _base64ToAsciiC[b24    &    0];    [FE]    junit.framework.ComparisonFailure:    expected:<[   "U29[tZSBjb250ZW50IHNvIHRoYXQgd2UgY2FuIHRlc3QgZW5jb2Rpbmcgb2YgYmFzZTY0IGRhdGE7\nIG11c3QgYmUgbG9uZyBlbm91Z2ggaW5jbHVkZSBhIGxpbmUgd3JhcCBvciB0d28uLi5Tb21lIGNv\nbnRlbnQgc28gdGhhdCB3ZSBjYW4gdGVzdCBlbmNvZGluZyBvZiBiYXNlNjQgZGF0YTsgbXVzdCBi\nZSBsb25nIGVub3VnaCBpbmNsdWRlIGEgbGluZSB3cmFwIG9yIHR3by4uLlNvbWUgY29udGVudCBz\nbyB0aGF0IHdlIGNhbiB0ZXN0IGVuY29kaW5nIG9mIGJhc2U2NCBkYXRhOyBtdXN0IGJlIGxvbmcg\nZW5vdWdoIGluY2x1ZGUgYSBsaW5lIHdyYXAgb3IgdHdvLi4uU29tZSBjb250ZW50IHNvIHRoYXQg\nd2UgY2FuIHRlc3QgZW5jb2Rpbmcgb2YgYmFzZTY0IGRhdGE7IG11c3QgYmUgbG9uZyBlbm91Z2gg\naW5jbHVkZSBhIGxpbmUgd3JhcCBvciB0d28u]Li4=   "]>    but    was:<[   "U29[AZSBAb25AZW5AIHNAIHRAYXQAd2UAY2FAIHRAc3QAZW5Ab2RAbmcAb2YAYmFAZTYAIGRAdGEA\nIG1Ac3QAYmUAbG9AZyBAbm9AZ2gAaW5AbHVAZSBAIGxAbmUAd3JAcCBAciBAd28ALi5Ab21AIGNA\nbnRAbnQAc28AdGhAdCBAZSBAYW4AdGVAdCBAbmNAZGlAZyBAZiBAYXNANjQAZGFAYTsAbXVAdCBA\nZSBAb25AIGVAb3VAaCBAbmNAdWRAIGEAbGlAZSBAcmFAIG9AIHRAby4ALlNAbWUAY29AdGVAdCBA\nbyBAaGFAIHdAIGNAbiBAZXNAIGVAY29AaW5AIG9AIGJAc2UANCBAYXRAOyBAdXNAIGJAIGxAbmcA\nZW5AdWdAIGlAY2xAZGUAYSBAaW5AIHdAYXAAb3IAdHdALi4AU29AZSBAb25AZW5AIHNAIHRAYXQA\nd2UAY2FAIHRAc3QAZW5Ab2RAbmcAb2YAYmFAZTYAIGRAdGEAIG1Ac3QAYmUAbG9AZyBAbm9AZ2gA\naW5AbHVAZSBAIGxAbmUAd3JAcCBAciBAd28A]Li4=   "]>    testStreamingWrites    [CONTEXT]    public    int    encodeBase64Chunk(int    b24,    char[]    buffer,    int    ptr)    {    buffer[ptr++]    =    _base64ToAsciiC[(b24    >>    18)    &    0x3F];    buffer[ptr++]    =    _base64ToAsciiC[(b24    >>    12)    &    0x3F];    buffer[ptr++]    =    _base64ToAsciiC[(b24    >>    6)    &    0x3F];    [BUGGY]    buffer[ptr++]    =    _base64ToAsciiC[b24    &    0];    return    ptr;    }    [CLASS]        Base64Variant    [METHOD]    encodeBase64Chunk    [RETURN_TYPE]    int        int    b24    char[]    buffer    int    ptr    [VARIABLES]    byte[]    _base64ToAsciiB    srcB    boolean    _usesPadding    usesPadding    char    PADDING_CHAR_NONE    _paddingChar    alpha    c    paddingChar    int[]    _asciiToBase64    srcV    String    _name    base64Alphabet    name    int    BASE64_VALUE_INVALID    BASE64_VALUE_PADDING    INT_SPACE    _maxLineLength    alphaLen    b24    ch    i    maxLineLength    ptr    value    long    serialVersionUID    char[]    _base64ToAsciiC    buffer    srcC        	jacksoncore_91_Base64Variant_1_1	248	1	src/main/java/com/fasterxml/jackson/core/Base64Variant.java
611	[PATCH]    num    =    (num    *    10)    +    (c    -    '0');	[BUG]    [BUGGY]    num    =    (num    /    10)    +    (c    -    '0');    [FE]    junit.framework.AssertionFailedError:    expected:<27>    but    was:<7>    testIntParsingWithStrings    [CONTEXT]    }    if    (c    >    '9'    ||    c    <    '0')    {    return    Integer.parseInt(str);    }    int    num    =    c    -    '0';    if    (offset    <    length)    {    c    =    str.charAt(offset++);    if    (c    >    '9'    ||    c    <    '0')    {    return    Integer.parseInt(str);    }    [BUGGY]    num    =    (num    /    10)    +    (c    -    '0');    if    (offset    <    length)    {    c    =    str.charAt(offset++);    if    (c    >    '9'    ||    c    <    '0')    {    return    Integer.parseInt(str);    }    num    =    (num    *    10)    +    (c    -    '0');        if    (offset    <    length)    {    do    {    c    =    str.charAt(offset++);    [CLASS]        NumberInput    [METHOD]    parseInt    [RETURN_TYPE]    int        String    str    [VARIABLES]    char    c    String    MAX_LONG_STR    MIN_LONG_STR_NO_SIGN    NASTY_SMALL_DOUBLE    str    boolean    negative    long    L_BILLION    int    length    num    offset        	jacksoncore_5078_NumberInput_1_1	95	1	src/main/java/com/fasterxml/jackson/core/io/NumberInput.java
612	[PATCH]    int    outputCount    =    0;	[BUG]    [BUGGY]    int    outputCount    =    1;    [FE]    junit.framework.AssertionFailedError:    expected:<1>    but    was:<2>    testStreaming    [CONTEXT]    {    int    outputPtr    =    0;    final    int    outputEnd    =    buffer.length    -    3;    [BUGGY]    int    outputCount    =    1;    while    (true)    {        char    ch;    do    {    if    (_inputPtr    >=    _inputEnd)    {    loadMoreGuaranteed();    }    ch    =    _inputBuffer[_inputPtr++];    }    while    (ch    <=    INT_SPACE);    [CLASS]        ReaderBasedJsonParser    [METHOD]    _readBinary    [RETURN_TYPE]    int        Base64Variant    b64variant    OutputStream    out    byte[]    buffer    [VARIABLES]    byte[]    buffer    boolean    _tokenIncomplete    OutputStream    out    char    ch    Reader    _reader    r    Base64Variant    b64variant    ObjectCodec    _objectCodec    c    codec    CharsToNameCanonicalizer    _symbols    st    int    _hashSeed    bits    count    decodedData    features    nameLen    origPtr    outputCount    outputEnd    outputPtr    char[]    _inputBuffer    buf        	jacksoncore_7552_ReaderBasedJsonParser_1_1	405	1	src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
613	[PATCH]    int    byteLen    =    (qlen    <<    2)    -    4    +    lastQuadBytes;	[BUG]    [BUGGY]    int    byteLen    =    (qlen    <<    2)    -    4    -    lastQuadBytes;    [FE]    junit.framework.ComparisonFailure:    expected:<[b]>    but    was:<[]>    testStreaming    [CONTEXT]    {                        [BUGGY]    int    byteLen    =    (qlen    <<    2)    -    4    -    lastQuadBytes;                        int    lastQuad;    if    (lastQuadBytes    <    4)    {    lastQuad    =    quads[qlen-1];    [CLASS]        UTF8StreamJsonParser    [METHOD]    addName    [RETURN_TYPE]    Name        int[]    quads    int    qlen    int    lastQuadBytes    [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    codes    quads    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    String    baseName    int    _quad1    amount    bits    byteIx    byteLen    c    ch    ch2    cix    count    currQuad    currQuadBytes    decodedData    defaultValue    end    expLen    features    fractLen    i    intLen    intPartLength    integerPartLength    ix    lastQuad    lastQuadBytes    len    minAvailable    nameLen    needed    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    q1    q2    qlen    start    char[]    cbuf        	jacksoncore_12908_UTF8StreamJsonParser_1_1	1953	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
614	[PATCH]    hash    =    (hash    *    MULT3)    ^    quads[i];	[BUG]    [BUGGY]    hash    =    (hash    *    MULT3)    |    quads[i];    [FE]    junit.framework.AssertionFailedError:    expected:<1686>    but    was:<1693>    testSyntheticWithBytes    [CONTEXT]    int    hash    =    quads[0]    ^    _hashSeed;    hash    +=    (hash    >>>    9);    hash    *=    MULT;    hash    +=    quads[1];    hash    *=    MULT2;    hash    +=    (hash    >>>    15);    hash    ^=    quads[2];    hash    +=    (hash    >>>    17);    for    (int    i    =    3;    i    <    qlen;    ++i)    {    [BUGGY]    hash    =    (hash    *    MULT3)    |    quads[i];        hash    +=    (hash    >>>    3);    hash    ^=    (hash    <<    7);    }        hash    +=    (hash    >>>    15);    hash    ^=    (hash    <<    9);    return    hash;    }    [CLASS]        BytesToNameCanonicalizer    TableInfo    Bucket    [METHOD]    calcHash    [RETURN_TYPE]    int        int[]    quads    int    qlen    [VARIABLES]    boolean    _collListShared    _intern    _mainHashShared    _mainNamesShared    _needRehash    canonicalize    intern    Bucket[]    _collList    collList    Bucket    _next    bucket    next    BytesToNameCanonicalizer    _parent    parent    src    AtomicReference    _tableInfo    int[]    _mainHash    mainHash    quads    int    DEFAULT_TABLE_SIZE    INITIAL_COLLISION_LEN    LAST_VALID_BUCKET    MAX_COLL_CHAIN_FOR_REUSE    MAX_COLL_CHAIN_LENGTH    MAX_ENTRIES_FOR_REUSE    MAX_TABLE_SIZE    MIN_HASH_SIZE    MULT    MULT2    MULT3    _collCount    _collEnd    _count    _hashSeed    _length    _longestCollisionList    _mainHashMask    childCount    collCount    collEnd    count    curr    firstQuad    hash    hashSeed    hashSize    i    ix    longestCollisionList    mainHashMask    q1    q2    qlen    secondQuad    seed    val    Name[]    _mainNames    mainNames    Name    _name    name    symbol        	jacksoncore_1557_BytesToNameCanonicalizer_1_1	705	1	src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java
615	[PATCH]    if    (ch    <=    0x7F)    {	[BUG]    [BUGGY]    if    (ch    <=    -127)    {    [FE]    junit.framework.ComparisonFailure:    expected:<[   "chars:    [ []/[ሴ]]   "]>    but    was:<[   "chars:    [ [������ሴ��]   "]>    testAboveAsciiEscapeWithUTF8Stream    [CONTEXT]    _flushBuffer();    }    int    outputPtr    =    _outputTail;    final    byte[]    outputBuffer    =    _outputBuffer;    final    int[]    escCodes    =    _outputEscapes;    while    (offset    <    end)    {    int    ch    =    cbuf[offset++];    [BUGGY]    if    (ch    <=    -127)    {    if    (escCodes[ch]    ==    0)    {    outputBuffer[outputPtr++]    =    (byte)    ch;    continue;    }    int    escape    =    escCodes[ch];    if    (escape    >    0)    {    outputBuffer[outputPtr++]    =    BYTE_BACKSLASH;    outputBuffer[outputPtr++]    =    (byte)    escape;    }    else    {        [CLASS]        UTF8JsonGenerator    [METHOD]    _writeStringSegment2    [RETURN_TYPE]    void        final    char[]    cbuf    int    offset    final    int    end    [VARIABLES]    byte[]    FALSE_BYTES    HEX_CHARS    NULL_BYTES    TRUE_BYTES    _entityBuffer    _outputBuffer    bbuf    buf    bytes    data    encodingBuffer    keyword    outputBuffer    raw    text    boolean    _bufferRecyclable    addQuotes    bufferRecyclable    commaBefore    state    byte    BYTE_0    BYTE_BACKSLASH    BYTE_COLON    BYTE_COMMA    BYTE_LBRACKET    BYTE_LCURLY    BYTE_QUOTE    BYTE_RBRACKET    BYTE_RCURLY    BYTE_u    b    OutputStream    _outputStream    out    int[]    escCodes    int    MAX_BYTES_TO_BUFFER    SURR1_FIRST    SURR1_LAST    SURR2_FIRST    SURR2_LAST    _charBufferLength    _outputEnd    _outputMaxContiguous    _outputTail    blen    bytes    ch    dataLength    end    escape    features    i    left    len    len2    len3    length    missing    offset    outputOffset    outputPtr    start    status    totalLen    char[]    _charBuffer    buf    cbuf    text        	jacksoncore_10049_UTF8JsonGenerator_1_1	1266	1	src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java
616	[PATCH]    if    (_inputPtr    >=    _inputEnd    &&    !loadMore())    {	[BUG]    [BUGGY]    if    (_inputPtr    >=    _inputEnd    ==    !loadMore())    {    [FE]    com.fasterxml.jackson.core.JsonParseException:    Unexpected    character    ('.'    (code    46))    in    numeric    value:    Decimal    point    not    followed    by    a    digit    testParsingOfLongerSequences    [CONTEXT]    reportInvalidNumber(   "Missing    integer    part    (next    char       "+_getCharDesc(c)+   ")   ");    }    int    fractLen    =    0;        if    (c    ==    '.')    {    outBuf[outPtr++]    =    c;    fract_loop:    while    (true)    {    [BUGGY]    if    (_inputPtr    >=    _inputEnd    ==    !loadMore())    {    eof    =    true;    break    fract_loop;    }    c    =    _inputBuffer[_inputPtr++];    if    (c    <    INT_0    ||    c    >    INT_9)    {    break    fract_loop;    }    ++fractLen;    if    (outPtr    >=    outBuf.length)    {    outBuf    =    _textBuffer.finishCurrentSegment();    [CLASS]        ReaderBasedJsonParser    [METHOD]    parseNumberText2    [RETURN_TYPE]    JsonToken        boolean    negative    [VARIABLES]    boolean    _tokenIncomplete    eof    inObject    negative    char    c    Reader    _reader    r    ObjectCodec    _objectCodec    c    codec    CharsToNameCanonicalizer    _symbols    st    int    _hashSeed    bits    ch    count    decodedData    defaultValue    expLen    features    fractLen    i    inputLen    intLen    len    nameLen    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    startPtr    char[]    _inputBuffer    buf    outBuf        	jacksoncore_8080_ReaderBasedJsonParser_1_1	1011	1	src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
617	[PATCH]    if    (_inputPtr    >=    _inputEnd    &&    !loadMore())    {	[BUG]    [BUGGY]    if    (_inputPtr    >=    _inputEnd    ==    !loadMore())    {    [FE]    junit.framework.AssertionFailedError:    Expected    token    VALUE_NUMBER_FLOAT,    current    token    VALUE_NUMBER_INT    testParsingOfLongerSequences    [CONTEXT]        int_loop:    while    (c    >=    '0'    &&    c    <=    '9')    {    ++intLen;    if    (outPtr    >=    outBuf.length)    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    outBuf[outPtr++]    =    c;    [BUGGY]    if    (_inputPtr    >=    _inputEnd    ==    !loadMore())    {        c    =    CHAR_NULL;    eof    =    true;    break    int_loop;    }    c    =    _inputBuffer[_inputPtr++];    }        if    (intLen    ==    0)    {    reportInvalidNumber(   "Missing    integer    part    (next    char       "+_getCharDesc(c)+   ")   ");    [CLASS]        ReaderBasedJsonParser    [METHOD]    parseNumberText2    [RETURN_TYPE]    JsonToken        boolean    negative    [VARIABLES]    boolean    _tokenIncomplete    eof    inObject    negative    char    c    Reader    _reader    r    ObjectCodec    _objectCodec    c    codec    CharsToNameCanonicalizer    _symbols    st    int    _hashSeed    bits    ch    count    decodedData    defaultValue    expLen    features    fractLen    i    inputLen    intLen    len    nameLen    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    startPtr    char[]    _inputBuffer    buf    outBuf        	jacksoncore_8057_ReaderBasedJsonParser_1_1	991	1	src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
618	[PATCH]    if    (index    ==    0)    {    //    whitespace    only    allowed    to    be    skipped    between    triplets	[BUG]    [BUGGY]    if    (index    ==    1)    {    //    whitespace    only    allowed    to    be    skipped    between    triplets    [FE]    com.fasterxml.jackson.core.JsonParseException:    Failed    to    decode    VALUE_STRING    as    base64    (MIME-NO-LINEFEEDS):    Illegal    white    space    character    (code    0xa)    as    character    #1    of    4-char    base64    unit:    can    only    used    between    units    testWithEscaped    [CONTEXT]    protected    final    int    _decodeBase64Escape(Base64Variant    b64variant,    char    ch,    int    index)    throws    IOException,    JsonParseException    {        if    (ch    !=    '\\')    {    throw    reportInvalidBase64Char(b64variant,    ch,    index);    }    char    unescaped    =    _decodeEscaped();        if    (unescaped    <=    INT_SPACE)    {    [BUGGY]    if    (index    ==    1)    {    return    -1;    }    }        int    bits    =    b64variant.decodeBase64Char(unescaped);    if    (bits    <    0)    {    throw    reportInvalidBase64Char(b64variant,    unescaped,    index);    }    return    bits;    }    [CLASS]        ParserBase    [METHOD]    _decodeBase64Escape    [RETURN_TYPE]    int        Base64Variant    b64variant    char    ch    int    index    [VARIABLES]    double    MAX_INT_D    MAX_LONG_D    MIN_INT_D    MIN_LONG_D    _numberDouble    value    ByteArrayBuilder    _byteArrayBuilder    int    INT_0    INT_1    INT_2    INT_3    INT_4    INT_5    INT_6    INT_7    INT_8    INT_9    INT_DECIMAL_POINT    INT_E    INT_MINUS    INT_PLUS    INT_e    NR_BIGDECIMAL    NR_BIGINT    NR_DOUBLE    NR_INT    NR_LONG    NR_UNKNOWN    _currInputRow    _currInputRowStart    _expLength    _fractLength    _inputEnd    _inputPtr    _intLength    _numTypesValid    _numberInt    _tokenInputCol    _tokenInputRow    actCh    bits    ch    col    expLen    expType    features    fractLen    i    index    intLen    len    offset    result    unescaped    long    MAX_INT_L    MIN_INT_L    _currInputProcessed    _numberLong    _tokenInputTotal    l    BigDecimal    BD_MAX_INT    BD_MAX_LONG    BD_MIN_INT    BD_MIN_LONG    _numberBigDecimal    char[]    _nameCopyBuffer    buf    JsonReadContext    _parsingContext    ctxt    parent    byte[]    _binaryValue    boolean    _closed    _nameCopied    _numberNegative    negative    TextBuffer    _textBuffer    char    CHAR_NULL    ch    expCh    unescaped    IOContext    _ioContext    ctxt    BigInteger    BI_MAX_INT    BI_MAX_LONG    BI_MIN_INT    BI_MIN_LONG    _numberBigInt    Base64Variant    b64variant    JsonToken    _nextToken        	jacksoncore_3692_ParserBase_1_1	1053	1	src/main/java/com/fasterxml/jackson/core/base/ParserBase.java
619	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    com.fasterxml.jackson.core.JsonParseException:    Unexpected    end-of-input    in    field    name    testIssue34    [CONTEXT]    throws    IOException    {    _currInputProcessed    +=    _inputEnd;    _currInputRowStart    -=    _inputEnd;    if    (_inputStream    !=    null)    {    int    count    =    _inputStream.read(_inputBuffer,    0,    _inputBuffer.length);    if    (count    >    0)    {    _inputPtr    =    0;    _inputEnd    =    count;    [BUGGY]    return    false;    }        _closeInput();        if    (count    ==    0)    {    throw    new    IOException(   "InputStream.read()    returned    0    characters    when    trying    to    read       "+_inputBuffer.length+   "    bytes   ");    }    }    return    false;    }    [CLASS]        UTF8StreamJsonParser    [METHOD]    loadMore    [RETURN_TYPE]    boolean        [VARIABLES]    byte[]    _inputBuffer    inputBuffer    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    count    end    features    origPtr    start        	jacksoncore_11043_UTF8StreamJsonParser_1_1	174	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
620	[PATCH]    for    (int    i    =    0;    i    <    cmpLen;    ++i)    {	[BUG]    [BUGGY]    for    (int    i    =    -1;    i    <    cmpLen;    ++i)    {    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    -1    testLongBoundsChecks    [CONTEXT]    public    static    boolean    inLongRange(String    numberStr,    boolean    negative)    {    String    cmpStr    =    negative    ?    MIN_LONG_STR_NO_SIGN    :    MAX_LONG_STR;    int    cmpLen    =    cmpStr.length();    int    actualLen    =    numberStr.length();    if    (actualLen    <    cmpLen)    return    true;    if    (actualLen    >    cmpLen)    return    false;            [BUGGY]    for    (int    i    =    -1;    i    <    cmpLen;    ++i)    {    int    diff    =    numberStr.charAt(i)    -    cmpStr.charAt(i);    if    (diff    !=    0)    {    return    (diff    <    0);    }    }    return    true;    }    [CLASS]        NumberInput    [METHOD]    inLongRange    [RETURN_TYPE]    boolean        String    numberStr    boolean    negative    [VARIABLES]    String    MAX_LONG_STR    MIN_LONG_STR_NO_SIGN    NASTY_SMALL_DOUBLE    cmpStr    numberStr    str    boolean    negative    long    L_BILLION    val    int    actualLen    cmpLen    diff    i        	jacksoncore_5223_NumberInput_1_1	180	1	src/main/java/com/fasterxml/jackson/core/io/NumberInput.java
621	[PATCH]    if    (!firstOk)    {	[BUG]    [BUGGY]    if    (!false)    {    [FE]    com.fasterxml.jackson.core.JsonParseException:    Unexpected    character    ('@'    (code    64)):    was    expecting    either    valid    name    character    (for    unquoted    name)    or    double-quote    (for    quoted)    to    start    field    name    testNonStandardNameChars    [CONTEXT]    if    (i    <    maxCode)    {    firstOk    =    (codes[i]    ==    0)    &&    (i    <    INT_0    ||    i    >    INT_9);    }    else    {    firstOk    =    Character.isJavaIdentifierPart((char)    i);    }    [CLASS]        ReaderBasedJsonParser    [METHOD]    _handleUnusualFieldName    [RETURN_TYPE]    String        int    i    [VARIABLES]    boolean    _tokenIncomplete    eof    firstOk    inObject    negative    Reader    _reader    r    int[]    codes    ObjectCodec    _objectCodec    c    codec    CharsToNameCanonicalizer    _symbols    st    int    _hashSeed    bits    ch    count    decodedData    defaultValue    endChar    expLen    features    fractLen    hash    i    inputLen    intLen    len    maxCode    nameLen    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    start    startPtr    char[]    _inputBuffer    buf    outBuf        	jacksoncore_8404_ReaderBasedJsonParser_1_1	1281	1	src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
622	[PATCH]    if    (bits    <    0)    {    //    reached    the    end,    fair    and    square?	[BUG]    [BUGGY]    if    (bits    <=    0)    {    //    reached    the    end,    fair    and    square?    [FE]    java.lang.IllegalArgumentException:    Illegal    character    'A'    (code    0x41)    in    base64    content    testStreaming    [CONTEXT]    while    (true)    {        int    ch;    do    {    if    (_inputPtr    >=    _inputEnd)    {    loadMoreGuaranteed();    }    ch    =    (int)    _inputBuffer[_inputPtr++]    &    0xFF;    }    while    (ch    <=    INT_SPACE);    int    bits    =    b64variant.decodeBase64Char(ch);    [BUGGY]    if    (bits    <=    0)    {    if    (ch    ==    INT_QUOTE)    {    break;    }    bits    =    _decodeBase64Escape(b64variant,    ch,    0);    if    (bits    <    0)    {    continue;    }    }            [CLASS]        UTF8StreamJsonParser    [METHOD]    _readBinary    [RETURN_TYPE]    int        Base64Variant    b64variant    OutputStream    out    byte[]    buffer    [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    inputBuffer    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    OutputStream    out    Base64Variant    b64variant    int[]    _quadBuffer    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    ch    count    decodedData    end    features    minAvailable    nameLen    origPtr    outputCount    outputEnd    outputPtr    start        	jacksoncore_11226_UTF8StreamJsonParser_1_1	483	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
623	[PATCH]    i    =    _inputBuffer[_inputPtr++]    &    0xFF;	[BUG]    [BUGGY]    i    =    _inputBuffer[_inputPtr++]    ^    255;    [FE]    com.fasterxml.jackson.core.JsonParseException:    Invalid    UTF-8    start    byte    0x93    testSpecExampleFully    [CONTEXT]    }    q2    =    (q2    <<    8)    |    i;    i    =    _inputBuffer[_inputPtr++]    &    0xFF;    if    (codes[i]    !=    0)    {    if    (i    ==    INT_QUOTE)    {    return    findName(_quad1,    q2,    3);    }    return    parseFieldName(_quad1,    q2,    i,    3);    }    q2    =    (q2    <<    8)    |    i;    [BUGGY]    i    =    _inputBuffer[_inputPtr++]    ^    255;    if    (codes[i]    !=    0)    {    if    (i    ==    INT_QUOTE)    {    return    findName(_quad1,    q2,    4);    }    return    parseFieldName(_quad1,    q2,    i,    4);    }    _quadBuffer[0]    =    _quad1;    _quadBuffer[1]    =    q2;    return    parseLongFieldName(i);    }    [CLASS]        UTF8StreamJsonParser    [METHOD]    parseMediumFieldName    [RETURN_TYPE]    Name        int    q2    final    int[]    codes    [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    codes    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    c    ch    count    decodedData    defaultValue    end    expLen    features    fractLen    i    intLen    intPartLength    integerPartLength    len    minAvailable    nameLen    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    q2    start        	jacksoncore_12298_UTF8StreamJsonParser_1_1	1499	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
624	[PATCH]    str.getChars(offset,    offset+amount,    _currentSegment,    0);	[BUG]    [BUGGY]    str.getChars(offset,    offset+amount,    _currentSegment,    -1);    [FE]    java.lang.ArrayIndexOutOfBoundsException    testLongAppend    [CONTEXT]    len    -=    max;    offset    +=    max;    }                    do    {    expand(len);    int    amount    =    Math.min(_currentSegment.length,    len);    [BUGGY]    str.getChars(offset,    offset+amount,    _currentSegment,    -1);    _currentSize    +=    amount;    offset    +=    amount;    len    -=    amount;    }    while    (len    >    0);    }    [CLASS]        TextBuffer    [METHOD]    append    [RETURN_TYPE]    void        String    str    int    offset    int    len    [VARIABLES]    boolean    _hasSegments    BufferRecycler    _allocator    allocator    ArrayList    _segments    String    _resultString    str    value    int    MAX_SEGMENT_LEN    MIN_SEGMENT_LEN    _currentSize    _inputLen    _inputStart    _segmentSize    amount    currLen    i    len    max    needed    offset    segLen    start    char[]    NO_CHARS    _currentSegment    _inputBuffer    _resultArray    buf    c    curr    result        	jacksoncore_2714_TextBuffer_1_1	511	1	src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java
625	[PATCH]    int    c    =    _buffer[_ptr++]    &    0xFF;	[BUG]    [BUGGY]    int    c    =    _buffer[_ptr++]    &    0;    [FE]    junit.framework.AssertionFailedError:    expected:<65>    but    was:<0>    testSimple    [CONTEXT]    public    int    read()    throws    IOException    {    if    (_buffer    !=    null)    {    [BUGGY]    int    c    =    _buffer[_ptr++]    &    0;    if    (_ptr    >=    _end)    {    freeMergedBuffer();    }    return    c;    }    return    _in.read();    }    [CLASS]        MergedStream    [METHOD]    read    [RETURN_TYPE]    int        [VARIABLES]    byte[]    _buffer    buf    IOContext    _context    context    boolean    InputStream    _in    in    int    _end    _ptr    c    end    readlimit    start        	jacksoncore_4814_MergedStream_1_1	71	1	src/main/java/com/fasterxml/jackson/core/io/MergedStream.java
626	[PATCH]    int    amount    =    _buffer.length    -    _ptr;	[BUG]    [BUGGY]    int    amount    =    _buffer.length    %    _ptr;    [FE]    java.lang.ArithmeticException:    /    by    zero    testSimpleValidArray    [CONTEXT]    public    boolean    hasMoreBytes()    throws    IOException    {    if    (_ptr    <    _bufferedEnd)    {    return    true;    }    if    (_in    ==    null)    {    return    false;    }    [BUGGY]    int    amount    =    _buffer.length    %    _ptr;    if    (amount    <    1)    {    return    false;    }    int    count    =    _in.read(_buffer,    _ptr,    amount);    if    (count    <=    0)    {    return    false;    }    _bufferedEnd    +=    count;    return    true;    }    [CLASS]        Std    [METHOD]    hasMoreBytes    [RETURN_TYPE]    boolean        [VARIABLES]    byte[]    _buffer    buffer    inputDocument    boolean    InputStream    _in    in    int    _bufferedEnd    _bufferedStart    _ptr    amount    count    len    start        	jacksoncore_1985_InputAccessor_1_1	110	1	src/main/java/com/fasterxml/jackson/core/format/InputAccessor.java
627	[PATCH]    if    (c    <    INT_0    ||    c    >    INT_9)    {	[BUG]    [BUGGY]    if    (false    ||    c    >    INT_9)    {    [FE]    junit.framework.AssertionFailedError:    Expected    token    VALUE_NUMBER_INT,    current    token    END_ARRAY    testSimpleValidArray    [CONTEXT]    end    =    _inputEnd;    }        while    (true)    {    if    (_inputPtr    >=    end)    {        return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    c    =    (int)    _inputBuffer[_inputPtr++]    &    0xFF;    [BUGGY]    if    (false    ||    c    >    INT_9)    {    break;    }    ++intLen;    if    (outPtr    >=    outBuf.length)    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    outBuf[outPtr++]    =    (char)    c;    }    if    (c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    [CLASS]        UTF8StreamJsonParser    [METHOD]    parseNumberText    [RETURN_TYPE]    JsonToken        int    c    [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    match    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    c    ch    count    decodedData    defaultValue    end    features    i    intLen    len    minAvailable    nameLen    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    start    char[]    outBuf        	jacksoncore_11822_UTF8StreamJsonParser_1_1	1218	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
628	[PATCH]    _quoteBuffer[2]    =    '0';	[BUG]    [BUGGY]    _quoteBuffer[-2]    =    '0';    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -2    testQuoteAsString    [CONTEXT]    public    JsonStringEncoder()    {    _quoteBuffer    =    new    char[6];    _quoteBuffer[0]    =    '\\';    [BUGGY]    _quoteBuffer[-2]    =    '0';    _quoteBuffer[3]    =    '0';    }    [CLASS]        JsonStringEncoder    [METHOD]    <init>    [RETURN_TYPE]    JsonStringEncoder()        [VARIABLES]    byte[]    HEX_BYTES    boolean    TextBuffer    _textBuffer    ThreadLocal    _threadEncoder    ByteArrayBuilder    _byteBuilder    int    INT_0    INT_BACKSLASH    INT_U    SURR1_FIRST    SURR1_LAST    SURR2_FIRST    SURR2_LAST    char[]    HEX_CHARS    _quoteBuffer        	jacksoncore_4247_JsonStringEncoder_1_1	67	1	src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java
629	[PATCH]    return    -1;	[BUG]    [BUGGY]    return    0;    [FE]    com.fasterxml.jackson.core.JsonParseException:    Unexpected    character    ((CTRL-CHAR,    code    0)):    expected    a    valid    value    (number,    String,    array,    object,    'true',    'false'    or    'null')    testBase64UsingReader    [CONTEXT]    _skipLF();    }    else    if    (i    ==    INT_CR)    {    _skipCR();    }    else    if    (i    !=    INT_TAB)    {    _throwInvalidSpace(i);    }    }    }        _handleEOF();    [BUGGY]    return    0;    }    [CLASS]        ReaderBasedJsonParser    [METHOD]    _skipWSOrEnd    [RETURN_TYPE]    int        [VARIABLES]    boolean    _tokenIncomplete    eof    firstOk    inObject    negative    Reader    _reader    r    ObjectCodec    _objectCodec    c    codec    CharsToNameCanonicalizer    _symbols    st    int    _hashSeed    bits    ch    count    decodedData    defaultValue    endChar    expLen    features    fractLen    hash    i    inputLen    inputPtr    intLen    len    maxCode    nameLen    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    start    startPtr    char[]    _inputBuffer    buf    inputBuffer    outBuf        	jacksoncore_8781_ReaderBasedJsonParser_1_1	1685	1	src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
630	[PATCH]    if    (lastQuadBytes    <    4)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.ComparisonFailure:    expected:<[b]>    but    was:<[ ]>    testStreaming    [CONTEXT]        int    byteLen    =    (qlen    <<    2)    -    4    +    lastQuadBytes;                        int    lastQuad;        [BUGGY]    if    (false)    {    lastQuad    =    quads[qlen-1];        quads[qlen-1]    =    (lastQuad    <<    ((4    -    lastQuadBytes)    <<    3));    }    else    {    lastQuad    =    0;    }        char[]    cbuf    =    _textBuffer.emptyAndGetCurrentSegment();    int    cix    =    0;    [CLASS]        UTF8StreamJsonParser    [METHOD]    addName    [RETURN_TYPE]    Name        int[]    quads    int    qlen    int    lastQuadBytes    [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    codes    quads    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    String    baseName    int    _quad1    amount    bits    byteIx    byteLen    c    ch    ch2    cix    count    currQuad    currQuadBytes    decodedData    defaultValue    end    expLen    features    fractLen    i    intLen    intPartLength    integerPartLength    ix    lastQuad    lastQuadBytes    len    minAvailable    nameLen    needed    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    q1    q2    qlen    start    char[]    cbuf        	jacksoncore_12914_UTF8StreamJsonParser_1_1	1962	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
631	[PATCH]    hash    ^=    (hash    >>>    15);    //    try    mixing    first    and    second    byte    pairs    first	[BUG]    [BUGGY]    hash    ^=    (hash    >>>    -15);    //    try    mixing    first    and    second    byte    pairs    first    [FE]    junit.framework.AssertionFailedError:    expected:<1686>    but    was:<1705>    testSyntheticWithBytes    [CONTEXT]    public    int    calcHash(int    firstQuad,    int    secondQuad)    {                int    hash    =    firstQuad;    [BUGGY]    hash    ^=    (hash    >>>    -15);    hash    +=    (secondQuad    *    MULT);    hash    ^=    _hashSeed;    hash    +=    (hash    >>>    7);    return    hash;    }    [CLASS]        BytesToNameCanonicalizer    TableInfo    Bucket    [METHOD]    calcHash    [RETURN_TYPE]    int        int    firstQuad    int    secondQuad    [VARIABLES]    boolean    _collListShared    _intern    _mainHashShared    _mainNamesShared    _needRehash    canonicalize    intern    Bucket[]    _collList    collList    Bucket    _next    bucket    next    BytesToNameCanonicalizer    _parent    parent    src    AtomicReference    _tableInfo    int[]    _mainHash    mainHash    quads    int    DEFAULT_TABLE_SIZE    INITIAL_COLLISION_LEN    LAST_VALID_BUCKET    MAX_COLL_CHAIN_FOR_REUSE    MAX_COLL_CHAIN_LENGTH    MAX_ENTRIES_FOR_REUSE    MAX_TABLE_SIZE    MIN_HASH_SIZE    MULT    MULT2    MULT3    _collCount    _collEnd    _count    _hashSeed    _length    _longestCollisionList    _mainHashMask    childCount    collCount    collEnd    count    curr    firstQuad    hash    hashSeed    hashSize    ix    longestCollisionList    mainHashMask    q1    q2    qlen    secondQuad    seed    val    Name[]    _mainNames    mainNames    Name    _name    name    symbol        	jacksoncore_1500_BytesToNameCanonicalizer_1_1	676	1	src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java
632	[PATCH]    |    ((_inputBuffer[_inputPtr+2]    &    0xFF)    <<    8)	[BUG]    [BUGGY]    |    ((_inputBuffer[_inputPtr+2]    &    0xFF)    <<    0)    [FE]    com.fasterxml.jackson.core.JsonParseException:    Invalid    UTF-8    start    byte    0xbb    testUtf8BOMHandling    [CONTEXT]                                if    (ensureLoaded(4))    {    int    quad    =(_inputBuffer[_inputPtr]    <<    24)    |    ((_inputBuffer[_inputPtr+1]    &    0xFF)    <<    16)    [BUGGY]    |    ((_inputBuffer[_inputPtr+2]    &    0xFF)    <<    0)    |    (_inputBuffer[_inputPtr+3]    &    0xFF);    if    (handleBOM(quad))    {    foundEncoding    =    true;    }    else    {                        [CLASS]        ByteSourceJsonBootstrapper    [METHOD]    detectEncoding    [RETURN_TYPE]    JsonEncoding        [VARIABLES]    byte[]    _inputBuffer    inputBuffer    boolean    _bigEndian    _bufferRecyclable    foundEncoding    JsonEncoding    enc    byte    UTF8_BOM_1    UTF8_BOM_2    UTF8_BOM_3    InputStream    _in    in    IOContext    _context    ctxt    int    _bytesPerChar    _inputEnd    _inputProcessed    _inputPtr    i16    inputLen    inputStart    quad        	jacksoncore_6979_ByteSourceJsonBootstrapper_1_1	132	1	src/main/java/com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.java
633	[PATCH]    if    (inputEnd    <    3)    {    //    required    to    try    to    read    to    have    at    least    3    bytes	[BUG]    [BUGGY]    if    (inputEnd    !=    3)    {    //    required    to    try    to    read    to    have    at    least    3    bytes    [FE]    junit.framework.ComparisonFailure:    expected:<[   "U2[9tZSBjb250ZW50IHNvIHRoYXQgd2UgY2FuIHRlc3QgZW5jb2Rpbmcgb2YgYmFzZTY0IGRhdGE7\nIG11c3QgYmUgbG9uZyBlbm91Z2ggaW5jbHVkZSBhIGxpbmUgd3JhcCBvciB0d28uLi5Tb21lIGNv\nbnRlbnQgc28gdGhhdCB3ZSBjYW4gdGVzdCBlbmNvZGluZyBvZiBiYXNlNjQgZGF0YTsgbXVzdCBi\nZSBsb25nIGVub3VnaCBpbmNsdWRlIGEgbGluZSB3cmFwIG9yIHR3by4uLlNvbWUgY29udGVudCBz\nbyB0aGF0IHdlIGNhbiB0ZXN0IGVuY29kaW5nIG9mIGJhc2U2NCBkYXRhOyBtdXN0IGJlIGxvbmcg\nZW5vdWdoIGluY2x1ZGUgYSBsaW5lIHdyYXAgb3IgdHdvLi4uU29tZSBjb250ZW50IHNvIHRoYXQg\nd2UgY2FuIHRlc3QgZW5jb2Rpbmcgb2YgYmFzZTY0IGRhdGE7IG11c3QgYmUgbG9uZyBlbm91Z2gg\naW5jbHVkZSBhIGxpbmUgd3JhcCBvciB0d28uLi4]=   "]>    but    was:<[   "U2[8]=   "]>    testStreamingWrites    [CONTEXT]        int    safeOutputEnd    =    _outputEnd    -    6;    int    chunksBeforeLF    =    b64variant.getMaxLineLength()    >>    2;        while    (true)    {    if    (inputPtr    >    lastFullOffset)    {    inputEnd    =    _readMore(data,    readBuffer,    inputPtr,    inputEnd,    readBuffer.length);    inputPtr    =    0;    [BUGGY]    if    (inputEnd    !=    3)    {    break;    }    lastFullOffset    =    inputEnd-3;    }    if    (_outputTail    >    safeOutputEnd)    {    _flushBuffer();    }        int    b24    =    ((int)    readBuffer[inputPtr++])    <<    8;    b24    |=    ((int)    readBuffer[inputPtr++])    &    0xFF;    [CLASS]        WriterBasedJsonGenerator    [METHOD]    _writeBinary    [RETURN_TYPE]    int        Base64Variant    b64variant    InputStream    data    byte[]    readBuffer    [VARIABLES]    byte[]    readBuffer    SerializableString    _currentEscape    name    sstr    text    boolean    InputStream    data    Base64Variant    b64variant    int    SHORT_WRITE    _outputEnd    _outputHead    _outputTail    amount    b24    bytes    bytesDone    bytesLeft    chunksBeforeLF    dataLength    end    escCode    escLen    escLimit    features    flushLen    i    inputEnd    inputLeft    inputPtr    lastFullOffset    len    length    max    maxNonEscaped    missing    newAmount    offset    ptr    qlen    room    safeInputEnd    safeOutputEnd    segmentLen    start    status    textLen    Writer    _writer    w    char[]    HEX_CHARS    _entityBuffer    _outputBuffer    buf    quoted    text        	jacksoncore_15932_WriterBasedJsonGenerator_1_1	1567	1	src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java
634	[PATCH]    (((Double.isNaN(d)    ||    Double.isInfinite(d))	[BUG]    [BUGGY]    (((Double.isInfinite(d))    [FE]    junit.framework.ComparisonFailure:    expected:<{   "double   ":[   "NaN   "]}    {   "float   ":   "NaN   "}>    but    was:<{   "double   ":[NaN]}    {   "float   ":   "NaN   "}>    testNonNumericQuoting    [CONTEXT]    public    void    writeNumber(double    d)    throws    IOException,    JsonGenerationException    {    if    (_cfgNumbersAsStrings    ||        [BUGGY]    (((Double.isInfinite(d))    &&    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))))    {    writeString(String.valueOf(d));    return;    }        _verifyValueWrite(   "write    number   ");    writeRaw(String.valueOf(d));    }    [CLASS]        WriterBasedJsonGenerator    [METHOD]    writeNumber    [RETURN_TYPE]    void        double    d    [VARIABLES]    SerializableString    _currentEscape    name    sstr    text    boolean    int    SHORT_WRITE    _outputEnd    _outputHead    _outputTail    amount    bytes    dataLength    features    i    len    length    missing    offset    qlen    room    start    status    Writer    _writer    w    double    d    char[]    HEX_CHARS    _entityBuffer    _outputBuffer    quoted    text        	jacksoncore_15061_WriterBasedJsonGenerator_1_1	677	1	src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java
635	[PATCH]    int    second    =    length    -    first;	[BUG]    [BUGGY]    int    second    =    length    /    first;    [FE]    java.lang.ArithmeticException:    /    by    zero    testQuoteLongAsString    [CONTEXT]    int    length    =    (escCode    <    0)    ?    _appendNumericEscape(d,    _quoteBuffer)    :    _appendNamedEscape(escCode,    _quoteBuffer);    ;    if    ((outPtr    +    length)    >    outputBuffer.length)    {    int    first    =    outputBuffer.length    -    outPtr;    if    (first    >    0)    {    System.arraycopy(_quoteBuffer,    0,    outputBuffer,    outPtr,    first);    }    outputBuffer    =    textBuffer.finishCurrentSegment();    [BUGGY]    int    second    =    length    /    first;    System.arraycopy(_quoteBuffer,    first,    outputBuffer,    0,    second);    outPtr    =    second;    }    else    {    System.arraycopy(_quoteBuffer,    0,    outputBuffer,    outPtr,    length);    outPtr    +=    length;    }    }    textBuffer.setCurrentLength(outPtr);    return    textBuffer.contentsAsArray();    }    [CLASS]        JsonStringEncoder    [METHOD]    quoteAsString    [RETURN_TYPE]    char[]        String    input    [VARIABLES]    byte[]    HEX_BYTES    boolean    TextBuffer    _textBuffer    textBuffer    ThreadLocal    _threadEncoder    char    c    d    int[]    escCodes    ByteArrayBuilder    _byteBuilder    String    input    int    INT_0    INT_BACKSLASH    INT_U    SURR1_FIRST    SURR1_LAST    SURR2_FIRST    SURR2_LAST    escCode    escCodeCount    first    inPtr    inputLen    length    outPtr    second    char[]    HEX_CHARS    _quoteBuffer    outputBuffer        	jacksoncore_4316_JsonStringEncoder_1_1	141	1	src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java
636	[PATCH]    for    (int    i    =    0;    i    <    4;    ++i)    {	[BUG]    [BUGGY]    for    (int    i    =    1;    i    <    4;    ++i)    {    [FE]    com.fasterxml.jackson.core.JsonParseException:    Failed    to    decode    VALUE_STRING    as    base64    (MIME-NO-LINEFEEDS):    Illegal    white    space    character    (code    0x4)    as    character    #2    of    4-char    base64    unit:    can    only    used    between    units    testWithEscaped    [CONTEXT]    case    INT_u:    break;    default:    return    _handleUnrecognizedCharacterEscape((char)    _decodeCharForError(c));    }        int    value    =    0;    [BUGGY]    for    (int    i    =    1;    i    <    4;    ++i)    {    if    (_inputPtr    >=    _inputEnd)    {    if    (!loadMore())    {    _reportInvalidEOF(   "    in    character    escape    sequence   ");    }    }    int    ch    =    (int)    _inputBuffer[_inputPtr++];    int    digit    =    CharTypes.charToHex(ch);    if    (digit    <    0)    {    _reportUnexpectedChar(ch,       "expected    a    hex-digit    for    character    escape    sequence   ");    }    [CLASS]        UTF8StreamJsonParser    [METHOD]    _decodeEscaped    [RETURN_TYPE]    char        [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    neg    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    codes    quads    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    byteIx    byteLen    c    ch    ch2    cix    code    count    currQuad    currQuadBytes    decodedData    defaultValue    digit    end    expLen    features    fractLen    i    intLen    intPartLength    integerPartLength    ix    lastQuad    lastQuadBytes    len    max    max2    minAvailable    nameLen    needed    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    q1    q2    qlen    start    value        	jacksoncore_13866_UTF8StreamJsonParser_1_1	2739	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
637	[PATCH]    if    ((_numTypesValid    &    NR_LONG)    ==    0)    {	[BUG]    [BUGGY]    if    ((_numTypesValid    |    NR_LONG)    ==    0)    {    [FE]    junit.framework.AssertionFailedError:    expected:<1>    but    was:<0>    testLongWrite    [CONTEXT]    public    long    getLongValue()    throws    IOException,    JsonParseException    {    if    ((_numTypesValid    &    NR_LONG)    ==    0)    {    if    (_numTypesValid    ==    NR_UNKNOWN)    {    _parseNumericValue(NR_LONG);    }    [BUGGY]    if    ((_numTypesValid    |    NR_LONG)    ==    0)    {    convertNumberToLong();    }    }    return    _numberLong;    }    [CLASS]        ParserBase    [METHOD]    getLongValue    [RETURN_TYPE]    long        [VARIABLES]    double    MAX_INT_D    MAX_LONG_D    MIN_INT_D    MIN_LONG_D    _numberDouble    value    ByteArrayBuilder    _byteArrayBuilder    int    INT_0    INT_1    INT_2    INT_3    INT_4    INT_5    INT_6    INT_7    INT_8    INT_9    INT_DECIMAL_POINT    INT_E    INT_MINUS    INT_PLUS    INT_e    NR_BIGDECIMAL    NR_BIGINT    NR_DOUBLE    NR_INT    NR_LONG    NR_UNKNOWN    _currInputRow    _currInputRowStart    _expLength    _fractLength    _inputEnd    _inputPtr    _intLength    _numTypesValid    _numberInt    _tokenInputCol    _tokenInputRow    actCh    col    expLen    features    fractLen    intLen    long    MAX_INT_L    MIN_INT_L    _currInputProcessed    _numberLong    _tokenInputTotal    BigDecimal    BD_MAX_INT    BD_MAX_LONG    BD_MIN_INT    BD_MIN_LONG    _numberBigDecimal    char[]    _nameCopyBuffer    buf    JsonReadContext    _parsingContext    ctxt    parent    byte[]    _binaryValue    boolean    _closed    _nameCopied    _numberNegative    negative    TextBuffer    _textBuffer    char    CHAR_NULL    expCh    IOContext    _ioContext    ctxt    BigInteger    BI_MAX_INT    BI_MAX_LONG    BI_MIN_INT    BI_MIN_LONG    _numberBigInt    JsonToken    _nextToken        	jacksoncore_3279_ParserBase_1_1	656	1	src/main/java/com/fasterxml/jackson/core/base/ParserBase.java
638	[PATCH]    if    (strength    ==    null    ||    strength.ordinal()    <    _minimalMatch.ordinal())    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError    testSimpleValidArray    [CONTEXT]    private    DataFormatMatcher    _findFormat(InputAccessor.Std    acc)    throws    IOException    {    JsonFactory    bestMatch    =    null;    MatchStrength    bestMatchStrength    =    null;    for    (JsonFactory    f    :    _detectors)    {    acc.reset();    MatchStrength    strength    =    f.hasFormat(acc);        [BUGGY]    if    (true)    {    continue;    }        if    (bestMatch    !=    null)    {    if    (bestMatchStrength.ordinal()    >=    strength.ordinal())    {    continue;    }    }        bestMatch    =    f;    [CLASS]        DataFormatDetector    [METHOD]    _findFormat    [RETURN_TYPE]    DataFormatMatcher        Std    acc    [VARIABLES]    JsonFactory    bestMatch    f    Std    acc    MatchStrength    _minimalMatch    _optimalMatch    bestMatchStrength    minMatch    optMatch    strength    boolean    int    DEFAULT_MAX_INPUT_LOOKAHEAD    _maxInputLookahead    i    len    lookaheadBytes    maxInputLookahead    offset    JsonFactory[]    _detectors    detectors        	jacksoncore_3940_DataFormatDetector_1_1	193	1	src/main/java/com/fasterxml/jackson/core/format/DataFormatDetector.java
639	[PATCH]    _mainHashMask    =    (newLen    -    1);	[BUG]    [BUGGY]    _mainHashMask    =    (newLen    +    1);    [FE]    java.lang.ArrayIndexOutOfBoundsException:    129    testLargeUnquoted    [CONTEXT]                if    (newLen    >    MAX_TABLE_SIZE)    {    nukeSymbols();    return;    }    _mainHash    =    new    int[newLen];    [BUGGY]    _mainHashMask    =    (newLen    +    1);    Name[]    oldNames    =    _mainNames;    _mainNames    =    new    Name[newLen];    int    symbolsSeen    =    0;    for    (int    i    =    0;    i    <    len;    ++i)    {    Name    symbol    =    oldNames[i];    if    (symbol    !=    null)    {    ++symbolsSeen;    int    hash    =    symbol.hashCode();    int    ix    =    (hash    &    _mainHashMask);    _mainNames[ix]    =    symbol;    [CLASS]        BytesToNameCanonicalizer    TableInfo    Bucket    [METHOD]    rehash    [RETURN_TYPE]    void        [VARIABLES]    boolean    _collListShared    _intern    _mainHashShared    _mainNamesShared    _needRehash    canonicalize    intern    Bucket[]    _collList    collList    oldBuckets    Bucket    _next    bucket    curr    newB    next    BytesToNameCanonicalizer    _parent    parent    src    AtomicReference    _tableInfo    int[]    _mainHash    mainHash    oldMainHash    quads    result    int    DEFAULT_TABLE_SIZE    INITIAL_COLLISION_LEN    LAST_VALID_BUCKET    MAX_COLL_CHAIN_FOR_REUSE    MAX_COLL_CHAIN_LENGTH    MAX_ENTRIES_FOR_REUSE    MAX_TABLE_SIZE    MIN_HASH_SIZE    MULT    MULT2    MULT3    _collCount    _collEnd    _count    _hashSeed    _length    _longestCollisionList    _mainHashMask    blen    bucket    childCount    collCount    collEnd    count    curr    entryValue    firstQuad    hash    hashQuarter    hashSeed    hashSize    i    ix    len    longestCollisionList    mainHashMask    maxColl    newLen    oldEnd    q1    q2    qlen    secondQuad    seed    symbolsSeen    val    x    Name[]    _mainNames    mainNames    oldNames    Name    _name    name    symbol        	jacksoncore_1753_BytesToNameCanonicalizer_1_1	890	1	src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java
640	[PATCH]    if    (_intern)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError:    expected    not    same    testInterningWithStreams    [CONTEXT]    public    Name    addName(String    symbolStr,    int[]    quads,    int    qlen)    {    [BUGGY]    if    (true)    {    symbolStr    =    InternCache.instance.intern(symbolStr);    }    int    hash;    if    (qlen    <    3)    {    hash    =    (qlen    ==    1)    ?    calcHash(quads[0])    :    calcHash(quads[0],    quads[1]);    }    else    {    hash    =    calcHash(quads,    qlen);    }    Name    symbol    =    constructName(hash,    symbolStr,    quads,    qlen);    _addSymbol(hash,    symbol);    [CLASS]        BytesToNameCanonicalizer    TableInfo    Bucket    [METHOD]    addName    [RETURN_TYPE]    Name        String    symbolStr    int[]    quads    int    qlen    [VARIABLES]    boolean    _collListShared    _intern    _mainHashShared    _mainNamesShared    _needRehash    canonicalize    intern    Bucket[]    _collList    collList    Bucket    _next    bucket    next    BytesToNameCanonicalizer    _parent    parent    src    AtomicReference    _tableInfo    int[]    _mainHash    mainHash    quads    String    symbolStr    int    DEFAULT_TABLE_SIZE    INITIAL_COLLISION_LEN    LAST_VALID_BUCKET    MAX_COLL_CHAIN_FOR_REUSE    MAX_COLL_CHAIN_LENGTH    MAX_ENTRIES_FOR_REUSE    MAX_TABLE_SIZE    MIN_HASH_SIZE    MULT    MULT2    MULT3    _collCount    _collEnd    _count    _hashSeed    _length    _longestCollisionList    _mainHashMask    childCount    collCount    collEnd    count    curr    firstQuad    hash    hashSeed    hashSize    ix    longestCollisionList    mainHashMask    q1    q2    qlen    secondQuad    seed    val    Name[]    _mainNames    mainNames    Name    _name    name    symbol        	jacksoncore_1468_BytesToNameCanonicalizer_1_1	628	1	src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java
641	[PATCH]    if    (c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {	[BUG]    [BUGGY]    if    (c    ==    '.'    ||    c    >=    'e'    ||    c    ==    'E')    {    [FE]    junit.framework.AssertionFailedError:    expected:<VALUE_NUMBER_FLOAT>    but    was:<VALUE_NUMBER_INT>    testNextFieldName    [CONTEXT]    if    (c    <    INT_0    ||    c    >    INT_9)    {    break;    }    ++intLen;    if    (outPtr    >=    outBuf.length)    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    outBuf[outPtr++]    =    (char)    c;    }    [BUGGY]    if    (c    ==    '.'    ||    c    >=    'e'    ||    c    ==    'E')    {    return    _parseFloatText(outBuf,    outPtr,    c,    negative,    intLen);    }    --_inputPtr;    _textBuffer.setCurrentLength(outPtr);        return    resetInt(negative,    intLen);    }    [CLASS]        UTF8StreamJsonParser    [METHOD]    parseNumberText    [RETURN_TYPE]    JsonToken        int    c    [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    match    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    c    ch    count    decodedData    defaultValue    end    features    i    intLen    len    minAvailable    nameLen    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    start    char[]    outBuf        	jacksoncore_11843_UTF8StreamJsonParser_1_1	1228	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
642	[PATCH]    num    =    (num    *    10)    +    (digitChars[offset]    -    '0');	[BUG]    [BUGGY]    num    =    (num    *    10)    +    (digitChars[offset]    *    '0');    [FE]    junit.framework.AssertionFailedError:    expected:<-12005002294>    but    was:<-12007400294>    testLongWrite    [CONTEXT]        if    (++offset    <    len)    {    num    =    (num    *    10)    +    (digitChars[offset]    -    '0');    if    (++offset    <    len)    {    num    =    (num    *    10)    +    (digitChars[offset]    -    '0');    if    (++offset    <    len)    {    num    =    (num    *    10)    +    (digitChars[offset]    -    '0');    if    (++offset    <    len)    {    num    =    (num    *    10)    +    (digitChars[offset]    -    '0');    if    (++offset    <    len)    {    [BUGGY]    num    =    (num    *    10)    +    (digitChars[offset]    *    '0');    if    (++offset    <    len)    {    num    =    (num    *    10)    +    (digitChars[offset]    -    '0');    if    (++offset    <    len)    {    num    =    (num    *    10)    +    (digitChars[offset]    -    '0');    if    (++offset    <    len)    {    num    =    (num    *    10)    +    (digitChars[offset]    -    '0');    }    }    }    }    [CLASS]        NumberInput    [METHOD]    parseInt    [RETURN_TYPE]    int        char[]    digitChars    int    offset    int    len    [VARIABLES]    String    MAX_LONG_STR    MIN_LONG_STR_NO_SIGN    NASTY_SMALL_DOUBLE    boolean    long    L_BILLION    int    len    num    offset    char[]    digitChars        	jacksoncore_4954_NumberInput_1_1	42	1	src/main/java/com/fasterxml/jackson/core/io/NumberInput.java
643	[PATCH]    System.arraycopy(curr,    0,    result,    offset,    currLen);	[BUG]    [BUGGY]    System.arraycopy(curr,    -1,    result,    offset,    currLen);    [FE]    java.lang.ArrayIndexOutOfBoundsException    testQuoteLongAsString    [CONTEXT]    int    size    =    size();    if    (size    <    1)    {    return    NO_CHARS;    }    int    offset    =    0;    final    char[]    result    =    _charArray(size);    if    (_segments    !=    null)    {    for    (int    i    =    0,    len    =    _segments.size();    i    <    len;    ++i)    {    char[]    curr    =    (char[])    _segments.get(i);    int    currLen    =    curr.length;    [BUGGY]    System.arraycopy(curr,    -1,    result,    offset,    currLen);    offset    +=    currLen;    }    }    System.arraycopy(_currentSegment,    0,    result,    offset,    _currentSize);    return    result;    }    [CLASS]        TextBuffer    [METHOD]    buildResultArray    [RETURN_TYPE]    char[]        [VARIABLES]    boolean    _hasSegments    BufferRecycler    _allocator    allocator    ArrayList    _segments    String    _resultString    str    value    int    MAX_SEGMENT_LEN    MIN_SEGMENT_LEN    _currentSize    _inputLen    _inputStart    _segmentSize    amount    currLen    i    len    max    minNewSegmentSize    needExtra    needed    newLen    offset    oldLen    segLen    sharedLen    size    sizeAddition    start    char[]    NO_CHARS    _currentSegment    _inputBuffer    _resultArray    buf    c    curr    inputBuf    result        	jacksoncore_2885_TextBuffer_1_1	706	1	src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java
644	[PATCH]    return    ((c    <<    6)    |    (d    &    0x3F))    -    0x10000;	[BUG]    [BUGGY]    return    ((c    <<    6)    |    (d    &    -63))    -    0x10000;    [FE]    junit.framework.ComparisonFailure:    expected:<[😃]>    but    was:<[﾿?]>    testSurrogates    [CONTEXT]    loadMoreGuaranteed();    }    d    =    (int)    _inputBuffer[_inputPtr++];    if    ((d    &    0xC0)    !=    0x080)    {    _reportInvalidOther(d    &    0xFF,    _inputPtr);    }                    [BUGGY]    return    ((c    <<    6)    |    (d    &    -63))    -    0x10000;    }    [CLASS]        UTF8StreamJsonParser    [METHOD]    _decodeUtf8_4    [RETURN_TYPE]    int        int    c    [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    neg    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    codes    quads    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    byteIx    byteLen    c    c1    ch    ch2    cix    code    count    currQuad    currQuadBytes    d    decodedData    defaultValue    digit    end    expLen    features    firstByte    fractLen    i    intLen    intPartLength    integerPartLength    ix    lastQuad    lastQuadBytes    len    max    max2    minAvailable    nameLen    needed    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    q1    q2    qlen    start    value        	jacksoncore_14266_UTF8StreamJsonParser_1_1	2896	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
645	[PATCH]    return    _symbols.findSymbol(_inputBuffer,    start,    ptr    -    start,    hash);	[BUG]    [BUGGY]    return    _symbols.findSymbol(_inputBuffer,    start,    ptr    +    start,    hash);    [FE]    junit.framework.ComparisonFailure:    expected:<@type[]>    but    was:<@type[    :       "]>    testNonStandardNameChars    [CONTEXT]    int    hash    =    _hashSeed;    final    int    inputLen    =    _inputEnd;    if    (ptr    <    inputLen)    {    do    {    int    ch    =    _inputBuffer[ptr];    if    (ch    <    maxCode)    {    if    (codes[ch]    !=    0)    {    int    start    =    _inputPtr-1;    _inputPtr    =    ptr;    [BUGGY]    return    _symbols.findSymbol(_inputBuffer,    start,    ptr    +    start,    hash);    }    }    else    if    (!Character.isJavaIdentifierPart((char)    ch))    {    int    start    =    _inputPtr-1;    _inputPtr    =    ptr;    return    _symbols.findSymbol(_inputBuffer,    start,    ptr    -    start,    hash);    }    hash    =    (hash    *    CharsToNameCanonicalizer.HASH_MULT)    +    ch;    ++ptr;    }    while    (ptr    <    inputLen);    }    [CLASS]        ReaderBasedJsonParser    [METHOD]    _handleUnusualFieldName    [RETURN_TYPE]    String        int    i    [VARIABLES]    boolean    _tokenIncomplete    eof    firstOk    inObject    negative    Reader    _reader    r    int[]    codes    ObjectCodec    _objectCodec    c    codec    CharsToNameCanonicalizer    _symbols    st    int    _hashSeed    bits    ch    count    decodedData    defaultValue    endChar    expLen    features    fractLen    hash    i    inputLen    intLen    len    maxCode    nameLen    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    start    startPtr    char[]    _inputBuffer    buf    outBuf        	jacksoncore_8427_ReaderBasedJsonParser_1_1	1295	1	src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
646	[PATCH]    if    ((_outputTail    +        6    *    (end    -    offset))    >    _outputEnd)    {	[BUG]    [BUGGY]    if    ((_outputTail    +    6    -    (end    -    offset))    >    _outputEnd)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    4000    testLongerRandomSingleChunk    [CONTEXT]    {        [BUGGY]    if    ((_outputTail    +6    -    (end    -    offset))    >    _outputEnd)    {    _flushBuffer();    }    int    outputPtr    =    _outputTail;    final    byte[]    outputBuffer    =    _outputBuffer;    final    int[]    escCodes    =    _outputEscapes;    while    (offset    <    end)    {    int    ch    =    cbuf[offset++];    [CLASS]        UTF8JsonGenerator    [METHOD]    _writeStringSegment2    [RETURN_TYPE]    void        final    char[]    cbuf    int    offset    final    int    end    [VARIABLES]    byte[]    FALSE_BYTES    HEX_CHARS    NULL_BYTES    TRUE_BYTES    _entityBuffer    _outputBuffer    bbuf    buf    bytes    data    encodingBuffer    keyword    outputBuffer    raw    text    boolean    _bufferRecyclable    addQuotes    bufferRecyclable    commaBefore    state    byte    BYTE_0    BYTE_BACKSLASH    BYTE_COLON    BYTE_COMMA    BYTE_LBRACKET    BYTE_LCURLY    BYTE_QUOTE    BYTE_RBRACKET    BYTE_RCURLY    BYTE_u    b    OutputStream    _outputStream    out    int[]    escCodes    int    MAX_BYTES_TO_BUFFER    SURR1_FIRST    SURR1_LAST    SURR2_FIRST    SURR2_LAST    _charBufferLength    _outputEnd    _outputMaxContiguous    _outputTail    blen    bytes    ch    dataLength    end    escape    features    i    left    len    len2    len3    length    missing    offset    outputOffset    outputPtr    start    status    totalLen    char[]    _charBuffer    buf    cbuf    text        	jacksoncore_10035_UTF8JsonGenerator_1_1	1255	1	src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java
647	[PATCH]    buf[++ptr]    =    HEX_CHARS[hi    &    0xF];	[BUG]    [BUGGY]    buf[++ptr]    =    HEX_CHARS[hi    |    15];    [FE]    java.lang.ArrayIndexOutOfBoundsException:    31    testAboveAsciiEscapeWithReader    [CONTEXT]    if    (_outputTail    >=    6)    {    char[]    buf    =    _outputBuffer;    int    ptr    =    _outputTail    -    6;    _outputHead    =    ptr;    buf[ptr]    =    '\\';    buf[++ptr]    =    'u';        if    (ch    >    0xFF)    {    int    hi    =    (ch    >>    8)    &    0xFF;    buf[++ptr]    =    HEX_CHARS[hi    >>    4];    [BUGGY]    buf[++ptr]    =    HEX_CHARS[hi    |    15];    ch    &=    0xFF;    }    else    {    buf[++ptr]    =    '0';    buf[++ptr]    =    '0';    }    buf[++ptr]    =    HEX_CHARS[ch    >>    4];    buf[++ptr]    =    HEX_CHARS[ch    &    0xF];    return;    }        [CLASS]        WriterBasedJsonGenerator    [METHOD]    _prependOrWriteCharacterEscape    [RETURN_TYPE]    void        char    ch    int    escCode    [VARIABLES]    SerializableString    _currentEscape    name    sstr    text    boolean    char    ch    String    escape    int    SHORT_WRITE    _outputEnd    _outputHead    _outputTail    amount    b24    bytes    bytesDone    bytesLeft    chunksBeforeLF    count    dataLength    end    escCode    escLen    escLimit    features    flushLen    hi    i    inputEnd    inputLeft    inputPtr    lastFullOffset    len    length    lo    max    maxNonEscaped    maxRead    missing    newAmount    offset    ptr    qlen    room    safeInputEnd    safeOutputEnd    segmentLen    start    status    textLen    Writer    _writer    w    char[]    HEX_CHARS    _entityBuffer    _outputBuffer    buf    quoted    text        	jacksoncore_16132_WriterBasedJsonGenerator_1_1	1695	1	src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java
648	[PATCH]    if    (!maybeDirty())    {	[BUG]    [BUGGY]    if    (!false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<2>    but    was:<0>    testCharSymbolsWithClose    [CONTEXT]    public    void    release()    {        [BUGGY]    if    (!false)    {    return;    }    if    (_parent    !=    null)    {    _parent.mergeChild(this);                    _dirty    =    false;    }    [CLASS]        CharsToNameCanonicalizer    Bucket    [METHOD]    release    [RETURN_TYPE]    void        [VARIABLES]    boolean    _canonicalize    _dirty    _intern    canonicalize    intern    Bucket[]    _buckets    buckets    Bucket    _next    next    CharsToNameCanonicalizer    _parent    child    parent    sBootstrapSymbolTable    String[]    _symbols    symbols    String    _symbol    symbol    int    DEFAULT_TABLE_SIZE    HASH_MULT    MAX_COLL_CHAIN_FOR_REUSE    MAX_COLL_CHAIN_LENGTH    MAX_ENTRIES_FOR_REUSE    MAX_TABLE_SIZE    _hashSeed    _indexMask    _length    _longestCollisionList    _size    _sizeThreshold    arrayLen    hashAreaSize    hashSeed    initialSize    longestColl    longestCollisionList    seed    size        	jacksoncore_1009_CharsToNameCanonicalizer_1_1	380	1	src/main/java/com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer.java
649	[PATCH]    if    ((d    &    0xC0)    !=    0x080)    {	[BUG]    [BUGGY]    if    ((d    |    192)    !=    0x080)    {    [FE]    com.fasterxml.jackson.core.JsonParseException:    Invalid    UTF-8    middle    byte    0xb8    testLongText    [CONTEXT]    private    int    _decodeUtf8_3fast(int    c1)    throws    IOException,    JsonParseException    {    c1    &=    0x0F;    int    d    =    (int)    _inputBuffer[_inputPtr++];    if    ((d    &    0xC0)    !=    0x080)    {    _reportInvalidOther(d    &    0xFF,    _inputPtr);    }    int    c    =    (c1    <<    6)    |    (d    &    0x3F);    d    =    (int)    _inputBuffer[_inputPtr++];    [BUGGY]    if    ((d    |    192)    !=    0x080)    {    _reportInvalidOther(d    &    0xFF,    _inputPtr);    }    c    =    (c    <<    6)    |    (d    &    0x3F);    return    c;    }    [CLASS]        UTF8StreamJsonParser    [METHOD]    _decodeUtf8_3fast    [RETURN_TYPE]    int        int    c1    [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    neg    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    codes    quads    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    byteIx    byteLen    c    c1    ch    ch2    cix    code    count    currQuad    currQuadBytes    d    decodedData    defaultValue    digit    end    expLen    features    firstByte    fractLen    i    intLen    intPartLength    integerPartLength    ix    lastQuad    lastQuadBytes    len    max    max2    minAvailable    nameLen    needed    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    q1    q2    qlen    start    value        	jacksoncore_14157_UTF8StreamJsonParser_1_1	2854	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
650	[PATCH]    buffer[ptr++]    =    _base64ToAsciiC[b24    &    0x3F];	[BUG]    [BUGGY]    buffer[ptr++]    =    _base64ToAsciiC[b24    ^    63];    [FE]    java.lang.ArrayIndexOutOfBoundsException:    5467986    testStreamingWrites    [CONTEXT]    public    int    encodeBase64Chunk(int    b24,    char[]    buffer,    int    ptr)    {    buffer[ptr++]    =    _base64ToAsciiC[(b24    >>    18)    &    0x3F];    buffer[ptr++]    =    _base64ToAsciiC[(b24    >>    12)    &    0x3F];    buffer[ptr++]    =    _base64ToAsciiC[(b24    >>    6)    &    0x3F];    [BUGGY]    buffer[ptr++]    =    _base64ToAsciiC[b24    ^    63];    return    ptr;    }    [CLASS]        Base64Variant    [METHOD]    encodeBase64Chunk    [RETURN_TYPE]    int        int    b24    char[]    buffer    int    ptr    [VARIABLES]    byte[]    _base64ToAsciiB    srcB    boolean    _usesPadding    usesPadding    char    PADDING_CHAR_NONE    _paddingChar    alpha    c    paddingChar    int[]    _asciiToBase64    srcV    String    _name    base64Alphabet    name    int    BASE64_VALUE_INVALID    BASE64_VALUE_PADDING    INT_SPACE    _maxLineLength    alphaLen    b24    ch    i    maxLineLength    ptr    value    long    serialVersionUID    char[]    _base64ToAsciiC    buffer    srcC        	jacksoncore_93_Base64Variant_1_1	248	1	src/main/java/com/fasterxml/jackson/core/Base64Variant.java
651	[PATCH]    for    (int    i    =    0;    i    <    cmpLen;    ++i)    {	[BUG]    [BUGGY]    for    (int    i    =    0;    i    <=    cmpLen;    ++i)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    20    testLongWrite    [CONTEXT]    public    static    boolean    inLongRange(char[]    digitChars,    int    offset,    int    len,    boolean    negative)    {    String    cmpStr    =    negative    ?    MIN_LONG_STR_NO_SIGN    :    MAX_LONG_STR;    int    cmpLen    =    cmpStr.length();    if    (len    <    cmpLen)    return    true;    if    (len    >    cmpLen)    return    false;        [BUGGY]    for    (int    i    =    0;    i    <=    cmpLen;    ++i)    {    int    diff    =    digitChars[offset+i]    -    cmpStr.charAt(i);    if    (diff    !=    0)    {    return    (diff    <    0);    }    }    return    true;    }    [CLASS]        NumberInput    [METHOD]    inLongRange    [RETURN_TYPE]    boolean        char[]    digitChars    int    offset    int    len    boolean    negative    [VARIABLES]    String    MAX_LONG_STR    MIN_LONG_STR_NO_SIGN    NASTY_SMALL_DOUBLE    cmpStr    str    boolean    negative    long    L_BILLION    val    int    cmpLen    diff    i    len    offset    char[]    digitChars        	jacksoncore_5191_NumberInput_1_1	155	1	src/main/java/com/fasterxml/jackson/core/io/NumberInput.java
652	[PATCH]    if    (escape    >    0)    {    //    2-char    escape,    fine	[BUG]    [BUGGY]    if    (escape    !=    0)    {    //    2-char    escape,    fine    [FE]    com.fasterxml.jackson.core.JsonParseException:    Invalid    UTF-8    start    byte    0xff    testLongerRandomSingleChunk    [CONTEXT]    final    int[]    escCodes    =    _outputEscapes;    while    (offset    <    end)    {    int    ch    =    cbuf[offset++];    if    (ch    <=    0x7F)    {    if    (escCodes[ch]    ==    0)    {    outputBuffer[outputPtr++]    =    (byte)    ch;    continue;    }    int    escape    =    escCodes[ch];    [BUGGY]    if    (escape    !=    0)    {    outputBuffer[outputPtr++]    =    BYTE_BACKSLASH;    outputBuffer[outputPtr++]    =    (byte)    escape;    }    else    {        outputPtr    =    _writeGenericEscape(ch,    outputPtr);    }    continue;    }    if    (ch    <=    0x7FF)    {    outputBuffer[outputPtr++]    =    (byte)    (0xc0    |    (ch    >>    6));    [CLASS]        UTF8JsonGenerator    [METHOD]    _writeStringSegment2    [RETURN_TYPE]    void        final    char[]    cbuf    int    offset    final    int    end    [VARIABLES]    byte[]    FALSE_BYTES    HEX_CHARS    NULL_BYTES    TRUE_BYTES    _entityBuffer    _outputBuffer    bbuf    buf    bytes    data    encodingBuffer    keyword    outputBuffer    raw    text    boolean    _bufferRecyclable    addQuotes    bufferRecyclable    commaBefore    state    byte    BYTE_0    BYTE_BACKSLASH    BYTE_COLON    BYTE_COMMA    BYTE_LBRACKET    BYTE_LCURLY    BYTE_QUOTE    BYTE_RBRACKET    BYTE_RCURLY    BYTE_u    b    OutputStream    _outputStream    out    int[]    escCodes    int    MAX_BYTES_TO_BUFFER    SURR1_FIRST    SURR1_LAST    SURR2_FIRST    SURR2_LAST    _charBufferLength    _outputEnd    _outputMaxContiguous    _outputTail    blen    bytes    ch    dataLength    end    escape    features    i    left    len    len2    len3    length    missing    offset    outputOffset    outputPtr    start    status    totalLen    char[]    _charBuffer    buf    cbuf    text        	jacksoncore_10061_UTF8JsonGenerator_1_1	1272	1	src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java
653	[PATCH]    if    (qlen    >=    quads.length)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    java.lang.NegativeArraySizeException    testStreamReaderParser    [CONTEXT]    private    Name    findName(int[]    quads,    int    qlen,    int    lastQuad,    int    lastQuadBytes)    throws    JsonParseException    {    [BUGGY]    if    (true)    {    _quadBuffer    =    quads    =    growArrayBy(quads,    quads.length);    }    quads[qlen++]    =    lastQuad;    Name    name    =    _symbols.findName(quads,    qlen);    if    (name    ==    null)    {    return    addName(quads,    qlen,    lastQuadBytes);    }    return    name;    }    [CLASS]        UTF8StreamJsonParser    [METHOD]    findName    [RETURN_TYPE]    Name        int[]    quads    int    qlen    int    lastQuad    int    lastQuadBytes    [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    codes    quads    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    c    ch    count    currQuad    currQuadBytes    decodedData    defaultValue    end    expLen    features    fractLen    i    intLen    intPartLength    integerPartLength    lastQuad    lastQuadBytes    len    minAvailable    nameLen    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    q1    q2    qlen    start    Name    name        	jacksoncore_12892_UTF8StreamJsonParser_1_1	1928	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
654	[PATCH]    hash    ^=    (hash    <<    7);	[BUG]    [BUGGY]    hash    ^=    (hash    <<    0);    [FE]    java.lang.IllegalStateException:    Longest    collision    chain    in    symbol    table    (of    size    4255)    now    exceeds    maximum,    255    --    suspect    a    DoS    attack    based    on    hash    collisions    testStreamReaderParser    [CONTEXT]    hash    +=    quads[1];    hash    *=    MULT2;    hash    +=    (hash    >>>    15);    hash    ^=    quads[2];    hash    +=    (hash    >>>    17);    for    (int    i    =    3;    i    <    qlen;    ++i)    {    hash    =    (hash    *    MULT3)    ^    quads[i];        hash    +=    (hash    >>>    3);    [BUGGY]    hash    ^=    (hash    <<    0);    }        hash    +=    (hash    >>>    15);    hash    ^=    (hash    <<    9);    return    hash;    }    [CLASS]        BytesToNameCanonicalizer    TableInfo    Bucket    [METHOD]    calcHash    [RETURN_TYPE]    int        int[]    quads    int    qlen    [VARIABLES]    boolean    _collListShared    _intern    _mainHashShared    _mainNamesShared    _needRehash    canonicalize    intern    Bucket[]    _collList    collList    Bucket    _next    bucket    next    BytesToNameCanonicalizer    _parent    parent    src    AtomicReference    _tableInfo    int[]    _mainHash    mainHash    quads    int    DEFAULT_TABLE_SIZE    INITIAL_COLLISION_LEN    LAST_VALID_BUCKET    MAX_COLL_CHAIN_FOR_REUSE    MAX_COLL_CHAIN_LENGTH    MAX_ENTRIES_FOR_REUSE    MAX_TABLE_SIZE    MIN_HASH_SIZE    MULT    MULT2    MULT3    _collCount    _collEnd    _count    _hashSeed    _length    _longestCollisionList    _mainHashMask    childCount    collCount    collEnd    count    curr    firstQuad    hash    hashSeed    hashSize    i    ix    longestCollisionList    mainHashMask    q1    q2    qlen    secondQuad    seed    val    Name[]    _mainNames    mainNames    Name    _name    name    symbol        	jacksoncore_1564_BytesToNameCanonicalizer_1_1	708	1	src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java
655	[PATCH]    int    i    =    (int)    _inputBuffer[_inputPtr++]    &    0xFF;	[BUG]    [BUGGY]    int    i    =    (int)    _inputBuffer[_inputPtr++]    &    0;    [FE]    com.fasterxml.jackson.core.JsonParseException:    Illegal    character    ((CTRL-CHAR,    code    0)):    only    regular    white    space    (\r,    \n,    \t)    is    allowed    between    tokens    testCommentsWithUTF8    [CONTEXT]    {        final    int[]    codes    =    CharTypes.getInputCodeComment();        main_loop:    while    ((_inputPtr    <    _inputEnd)    ||    loadMore())    {    [BUGGY]    int    i    =    (int)    _inputBuffer[_inputPtr++]    &    0;    int    code    =    codes[i];    if    (code    !=    0)    {    switch    (code)    {    case    INT_ASTERISK:    if    (_inputPtr    >=    _inputEnd    &&    !loadMore())    {    break    main_loop;    }    if    (_inputBuffer[_inputPtr]    ==    INT_SLASH)    {    ++_inputPtr;    return;    [CLASS]        UTF8StreamJsonParser    [METHOD]    _skipCComment    [RETURN_TYPE]    void        [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    neg    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    codes    quads    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    byteIx    byteLen    c    ch    ch2    cix    code    count    currQuad    currQuadBytes    decodedData    defaultValue    end    expLen    features    fractLen    i    intLen    intPartLength    integerPartLength    ix    lastQuad    lastQuadBytes    len    max    max2    minAvailable    nameLen    needed    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    q1    q2    qlen    start        	jacksoncore_13809_UTF8StreamJsonParser_1_1	2628	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
656	[PATCH]    }    else    if    (i    <=    INT_QUOTE)    {	[BUG]    [BUGGY]    }    else    if    (i    ==    INT_QUOTE)    {    [FE]    junit.framework.AssertionFailedError:    Expected    an    exception    for    un-escaped    linefeed    in    string    value    testMissingEscaping    [CONTEXT]    }    char    c    =    _inputBuffer[_inputPtr++];    int    i    =    (int)    c;    if    (i    <=    INT_BACKSLASH)    {    if    (i    ==    INT_BACKSLASH)    {                    c    =    _decodeEscaped();    [BUGGY]    }    else    if    (i    ==    INT_QUOTE)    {    if    (i    ==    INT_QUOTE)    {    break;    }    if    (i    <    INT_SPACE)    {    _throwUnquotedSpace(i,       "string    value   ");    }    }    }        if    (outPtr    >=    outBuf.length)    {    [CLASS]        ReaderBasedJsonParser    [METHOD]    _finishString2    [RETURN_TYPE]    void        [VARIABLES]    boolean    _tokenIncomplete    eof    firstOk    inObject    negative    char    c    Reader    _reader    r    ObjectCodec    _objectCodec    c    codec    CharsToNameCanonicalizer    _symbols    st    int    _hashSeed    bits    ch    count    decodedData    defaultValue    endChar    expLen    features    fractLen    hash    i    inputLen    intLen    len    maxCode    nameLen    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    start    startPtr    char[]    _inputBuffer    buf    outBuf        	jacksoncore_8656_ReaderBasedJsonParser_1_1	1542	1	src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
657	[PATCH]    if    (_inputBuffer[_inputPtr]    ==    INT_SLASH)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    com.fasterxml.jackson.core.JsonParseException:    Unexpected    end-of-input    in    a    comment    testCommentsWithUTF8    [CONTEXT]    main_loop:    while    ((_inputPtr    <    _inputEnd)    ||    loadMore())    {    int    i    =    (int)    _inputBuffer[_inputPtr++]    &    0xFF;    int    code    =    codes[i];    if    (code    !=    0)    {    switch    (code)    {    case    INT_ASTERISK:    if    (_inputPtr    >=    _inputEnd    &&    !loadMore())    {    break    main_loop;    }    [BUGGY]    if    (false)    {    ++_inputPtr;    return;    }    break;    case    INT_LF:    _skipLF();    break;    case    INT_CR:    _skipCR();    break;    [CLASS]        UTF8StreamJsonParser    [METHOD]    _skipCComment    [RETURN_TYPE]    void        [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    neg    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    codes    quads    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    byteIx    byteLen    c    ch    ch2    cix    code    count    currQuad    currQuadBytes    decodedData    defaultValue    end    expLen    features    fractLen    i    intLen    intPartLength    integerPartLength    ix    lastQuad    lastQuadBytes    len    max    max2    minAvailable    nameLen    needed    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    q1    q2    qlen    start        	jacksoncore_13827_UTF8StreamJsonParser_1_1	2636	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
658	[PATCH]    int    c    =    (c1    <<    6)    |    (d    &    0x3F);	[BUG]    [BUGGY]    int    c    =    (c1    <<    6)    |    (d    &    -63);    [FE]    junit.framework.AssertionFailedError:    Long    text    differs    testLongText    [CONTEXT]    private    int    _decodeUtf8_3fast(int    c1)    throws    IOException,    JsonParseException    {    c1    &=    0x0F;    int    d    =    (int)    _inputBuffer[_inputPtr++];    if    ((d    &    0xC0)    !=    0x080)    {    _reportInvalidOther(d    &    0xFF,    _inputPtr);    }    [BUGGY]    int    c    =    (c1    <<    6)    |    (d    &    -63);    d    =    (int)    _inputBuffer[_inputPtr++];    if    ((d    &    0xC0)    !=    0x080)    {    _reportInvalidOther(d    &    0xFF,    _inputPtr);    }    c    =    (c    <<    6)    |    (d    &    0x3F);    return    c;    }    [CLASS]        UTF8StreamJsonParser    [METHOD]    _decodeUtf8_3fast    [RETURN_TYPE]    int        int    c1    [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    neg    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    codes    quads    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    byteIx    byteLen    c    c1    ch    ch2    cix    code    count    currQuad    currQuadBytes    d    decodedData    defaultValue    digit    end    expLen    features    firstByte    fractLen    i    intLen    intPartLength    integerPartLength    ix    lastQuad    lastQuadBytes    len    max    max2    minAvailable    nameLen    needed    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    q1    q2    qlen    start    value        	jacksoncore_14148_UTF8StreamJsonParser_1_1	2852	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
659	[PATCH]    int    length    =    maxRead    -    inputEnd;	[BUG]    [BUGGY]    int    length    =    maxRead    %    inputEnd;    [FE]    java.lang.ArithmeticException:    /    by    zero    testStreamingWrites    [CONTEXT]        int    i    =    0;    while    (inputPtr    <    inputEnd)    {    readBuffer[i++]=    readBuffer[inputPtr++];    }    inputPtr    =    0;    inputEnd    =    i;    maxRead    =    Math.min(maxRead,    readBuffer.length);    do    {    [BUGGY]    int    length    =    maxRead    %    inputEnd;    if    (length    ==    0)    {    break;    }    int    count    =    in.read(readBuffer,    inputEnd,    length);    if    (count    <    0)    {    return    inputEnd;    }    inputEnd    +=    count;    }    while    (inputEnd    <    3);    return    inputEnd;    [CLASS]        WriterBasedJsonGenerator    [METHOD]    _readMore    [RETURN_TYPE]    int        InputStream    in    byte[]    readBuffer    int    inputPtr    int    inputEnd    int    maxRead    [VARIABLES]    byte[]    readBuffer    SerializableString    _currentEscape    name    sstr    text    boolean    InputStream    in    int    SHORT_WRITE    _outputEnd    _outputHead    _outputTail    amount    b24    bytes    bytesDone    bytesLeft    chunksBeforeLF    count    dataLength    end    escCode    escLen    escLimit    features    flushLen    i    inputEnd    inputLeft    inputPtr    lastFullOffset    len    length    max    maxNonEscaped    maxRead    missing    newAmount    offset    ptr    qlen    room    safeInputEnd    safeOutputEnd    segmentLen    start    status    textLen    Writer    _writer    w    char[]    HEX_CHARS    _entityBuffer    _outputBuffer    buf    quoted    text        	jacksoncore_16023_WriterBasedJsonGenerator_1_1	1619	1	src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java
660	[PATCH]    num    =    (num    *    10)    +    (digitChars[offset]    -    '0');	[BUG]    [BUGGY]    num    =    (num    %    10)    +    (digitChars[offset]    -    '0');    [FE]    junit.framework.AssertionFailedError:    expected:<-12005002294>    but    was:<-12000000013>    testLongWrite    [CONTEXT]    num    =    (num    *    10)    +    (digitChars[offset]    -    '0');    if    (++offset    <    len)    {    num    =    (num    *    10)    +    (digitChars[offset]    -    '0');    if    (++offset    <    len)    {    num    =    (num    *    10)    +    (digitChars[offset]    -    '0');    if    (++offset    <    len)    {    num    =    (num    *    10)    +    (digitChars[offset]    -    '0');    if    (++offset    <    len)    {    num    =    (num    *    10)    +    (digitChars[offset]    -    '0');    if    (++offset    <    len)    {    [BUGGY]    num    =    (num    %    10)    +    (digitChars[offset]    -    '0');    }    }    }    }    }    }    }    }    return    num;    }    [CLASS]        NumberInput    [METHOD]    parseInt    [RETURN_TYPE]    int        char[]    digitChars    int    offset    int    len    [VARIABLES]    String    MAX_LONG_STR    MIN_LONG_STR_NO_SIGN    NASTY_SMALL_DOUBLE    boolean    long    L_BILLION    int    len    num    offset    char[]    digitChars        	jacksoncore_5003_NumberInput_1_1	48	1	src/main/java/com/fasterxml/jackson/core/io/NumberInput.java
661	[PATCH]    if    (ctxt.inArray())    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    com.fasterxml.jackson.core.JsonGenerationException:    Current    context    not    an    ARRAY    but    ROOT    testStreamingWrites    [CONTEXT]    super.close();                    if    (_outputBuffer    !=    null    &&    isEnabled(Feature.AUTO_CLOSE_JSON_CONTENT))    {    while    (true)    {    JsonStreamContext    ctxt    =    getOutputContext();    [BUGGY]    if    (true)    {    writeEndArray();    }    else    if    (ctxt.inObject())    {    writeEndObject();    }    else    {    break;    }    }    }    _flushBuffer();        [CLASS]        WriterBasedJsonGenerator    [METHOD]    close    [RETURN_TYPE]    void        [VARIABLES]    SerializableString    _currentEscape    name    sstr    text    boolean    int    SHORT_WRITE    _outputEnd    _outputHead    _outputTail    amount    bytes    dataLength    features    i    len    length    missing    offset    ptr    qlen    room    start    status    Writer    _writer    w    JsonStreamContext    ctxt    char[]    HEX_CHARS    _entityBuffer    _outputBuffer    buf    quoted    text        	jacksoncore_15182_WriterBasedJsonGenerator_1_1	881	1	src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java
662	[PATCH]    if    (value    <    10)    {	[BUG]    [BUGGY]    if    (value    !=    10)    {    [FE]    com.fasterxml.jackson.core.JsonParseException:    Unexpected    character    ('='    (code    61))    in    numeric    value:    expected    digit    (0-9)    to    follow    minus    sign,    for    valid    numeric    value    testRootIntsWrite    [CONTEXT]            return    outputLong((long)    value,    buffer,    offset);    }    buffer[offset++]    =    '-';    value    =    -value;    }    if    (value    <    MILLION)    {    if    (value    <    1000)    {    [BUGGY]    if    (value    !=    10)    {    buffer[offset++]    =    (char)    ('0'    +    value);    }    else    {    offset    =    outputLeadingTriplet(value,    buffer,    offset);    }    }    else    {    int    thousands    =    value    /    1000;    value    -=    (thousands    *    1000);    offset    =    outputLeadingTriplet(thousands,    buffer,    offset);    offset    =    outputFullTriplet(value,    buffer,    offset);    }    [CLASS]        NumberOutput    [METHOD]    outputInt    [RETURN_TYPE]    int        int    value    char[]    buffer    int    offset    [VARIABLES]    byte[]    FULL_TRIPLETS_B    boolean    hasBillions    char    NULL_CHAR    String    SMALLEST_LONG    String[]    sSmallIntStrs    sSmallIntStrs2    int    BILLION    MILLION    newValue    offset    ones    thousands    value    long    MAX_INT_AS_LONG    MIN_INT_AS_LONG    TEN_BILLION_L    THOUSAND_L    char[]    FULL_TRIPLETS    LEADING_TRIPLETS    buffer        	jacksoncore_5460_NumberOutput_1_1	83	1	src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java
663	[PATCH]    if    (ptr    >    5    &&    ptr    <    end)    {    //    fits,    prepend    to    buffer	[BUG]    [BUGGY]    if    (ptr    >=    5    &&    ptr    <    end)    {    //    fits,    prepend    to    buffer    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testWriteLongCustomEscapes    [CONTEXT]    char[]    ent    =    _entityBuffer;    if    (ent    ==    null)    {    ent    =    _allocateEntityBuffer();    }    ent[1]    =    (char)    escCode;    _writer.write(ent,    0,    2);    }    return    ptr;    }    if    (escCode    !=    CharacterEscapes.ESCAPE_CUSTOM)    {        [BUGGY]    if    (ptr    >=    5    &&    ptr    <    end)    {    ptr    -=    6;    buffer[ptr++]    =    '\\';    buffer[ptr++]    =    'u';        if    (ch    >    0xFF)    {    int    hi    =    (ch    >>    8)    &    0xFF;    buffer[ptr++]    =    HEX_CHARS[hi    >>    4];    buffer[ptr++]    =    HEX_CHARS[hi    &    0xF];    ch    &=    0xFF;    }    else    {    [CLASS]        WriterBasedJsonGenerator    [METHOD]    _prependOrWriteCharacterEscape    [RETURN_TYPE]    int        char[]    buffer    int    ptr    int    end    char    ch    int    escCode    [VARIABLES]    SerializableString    _currentEscape    name    sstr    text    boolean    char    ch    String    escape    int    SHORT_WRITE    _outputEnd    _outputHead    _outputTail    amount    b24    bytes    bytesDone    bytesLeft    chunksBeforeLF    count    dataLength    end    escCode    escLen    escLimit    features    flushLen    hi    i    inputEnd    inputLeft    inputPtr    lastFullOffset    len    length    lo    max    maxNonEscaped    maxRead    missing    newAmount    offset    ptr    qlen    room    safeInputEnd    safeOutputEnd    segmentLen    start    status    textLen    Writer    _writer    w    char[]    HEX_CHARS    _entityBuffer    _outputBuffer    buf    buffer    ent    quoted    text        	jacksoncore_16280_WriterBasedJsonGenerator_1_1	1773	1	src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java
664	[PATCH]    b24    |=    ((int)    readBuffer[inputPtr++])    &    0xFF;	[BUG]    [BUGGY]    b24    |=    ((int)readBuffer[inputPtr++])    |    255;    [FE]    junit.framework.ComparisonFailure:    expected:<[   "U[29tZSBjb250ZW50IHNvIHRoYXQgd2UgY2FuIHRlc3QgZW5jb2Rpbmcgb2YgYmFzZTY0IGRhdGE7\nIG11c3QgYmUgbG9uZyBlbm91Z2ggaW5jbHVkZSBhIGxpbmUgd3JhcCBvciB0d28uLi5Tb21lIGNv\nbnRlbnQgc28gdGhhdCB3ZSBjYW4gdGVzdCBlbmNvZGluZyBvZiBiYXNlNjQgZGF0YTsgbXVzdCBi\nZSBsb25nIGVub3VnaCBpbmNsdWRlIGEgbGluZSB3cmFwIG9yIHR3by4uLlNvbWUgY29udGVudCBz\nbyB0aGF0IHdlIGNhbiB0ZXN0IGVuY29kaW5nIG9mIGJhc2U2NCBkYXRhOyBtdXN0IGJlIGxvbmcg\nZW5vdWdoIGluY2x1ZGUgYSBsaW5lIHdyYXAgb3IgdHdvLi4uU29tZSBjb250ZW50IHNvIHRoYXQg\nd2UgY2FuIHRlc3QgZW5jb2Rpbmcgb2YgYmFzZTY0IGRhdGE7IG11c3QgYmUgbG9uZyBlbm91Z2gg\naW5jbHVkZSBhIGxpbmUgd3JhcCBvciB0d2]8uLi4=   "]>    but    was:<[   "U[/9tZf9jb/90Zf90IP9vIP9oYf8gd/8gY/9uIP9lc/8gZf9jb/9pbv8gb/8gYv9zZf80IP9hdP87\nIP91c/8gYv8gbP9uZ/9lbv91Z/8gaf9jbP9kZf9hIP9pbv8gd/9hcP9vcv90d/8uLv9Tb/9lIP9v\nbv9lbv8gc/8gdP9hdP93Zf9jYf8gdP9zdP9lbv9vZP9uZ/9vZv9iYf9lNv8gZP90Yf8gbf9zdP9i\nZf9sb/9nIP9ub/9naP9pbv9sdf9lIP8gbP9uZf93cv9wIP9yIP93b/8uLv9vbf8gY/9udP9udP9z\nb/90aP90IP9lIP9hbv90Zf90IP9uY/9kaf9nIP9mIP9hc/82NP9kYf9hO/9tdf90IP9lIP9vbv8g\nZf9vdf9oIP9uY/91ZP8gYf9saf9lIP9yYf8gb/8gdP9vLv8uU/9tZf9jb/90Zf90IP9vIP9oYf8g\nd/8gY/9uIP9lc/8gZf9jb/9pbv8gb/8gYv9zZf80IP9hdP87IP91c/8gYv8gbP9uZ/9lbv91Z/8g\naf9jbP9kZf9hIP9pbv8gd/9hcP9vcv90d/]8uLi4=   "]>    testStreamingWrites    [CONTEXT]    inputPtr    =    0;    if    (inputEnd    <    3)    {    break;    }    lastFullOffset    =    inputEnd-3;    }    if    (_outputTail    >    safeOutputEnd)    {    _flushBuffer();    }    int    b24    =    ((int)    readBuffer[inputPtr++])    <<    8;    [BUGGY]    b24    |=    ((int)readBuffer[inputPtr++])    |    255;    b24    =    (b24    <<    8)    |    (((int)    readBuffer[inputPtr++])    &    0xFF);    bytesLeft    -=    3;    _outputTail    =    b64variant.encodeBase64Chunk(b24,    _outputBuffer,    _outputTail);    if    (--chunksBeforeLF    <=    0)    {    _outputBuffer[_outputTail++]    =    '\\';    _outputBuffer[_outputTail++]    =    'n';    chunksBeforeLF    =    b64variant.getMaxLineLength()    >>    2;    }    }        [CLASS]        WriterBasedJsonGenerator    [METHOD]    _writeBinary    [RETURN_TYPE]    int        Base64Variant    b64variant    InputStream    data    byte[]    readBuffer    int    bytesLeft    [VARIABLES]    byte[]    readBuffer    SerializableString    _currentEscape    name    sstr    text    boolean    InputStream    data    Base64Variant    b64variant    int    SHORT_WRITE    _outputEnd    _outputHead    _outputTail    amount    b24    bytes    bytesLeft    chunksBeforeLF    dataLength    end    escCode    escLen    escLimit    features    flushLen    i    inputEnd    inputLeft    inputPtr    lastFullOffset    len    length    max    maxNonEscaped    missing    newAmount    offset    ptr    qlen    room    safeInputEnd    safeOutputEnd    segmentLen    start    status    textLen    Writer    _writer    w    char[]    HEX_CHARS    _entityBuffer    _outputBuffer    buf    quoted    text        	jacksoncore_15836_WriterBasedJsonGenerator_1_1	1514	1	src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java
665	[PATCH]    buffer[ptr++]    =    HEX_CHARS[hi    &    0xF];	[BUG]    [BUGGY]    buffer[ptr++]    =    HEX_CHARS[hi    ^    15];    [FE]    java.lang.ArrayIndexOutOfBoundsException:    133    testWriteLongCustomEscapes    [CONTEXT]    }    if    (escCode    !=    CharacterEscapes.ESCAPE_CUSTOM)    {    if    (ptr    >    5    &&    ptr    <    end)    {    ptr    -=    6;    buffer[ptr++]    =    '\\';    buffer[ptr++]    =    'u';        if    (ch    >    0xFF)    {    int    hi    =    (ch    >>    8)    &    0xFF;    buffer[ptr++]    =    HEX_CHARS[hi    >>    4];    [BUGGY]    buffer[ptr++]    =    HEX_CHARS[hi    ^    15];    ch    &=    0xFF;    }    else    {    buffer[ptr++]    =    '0';    buffer[ptr++]    =    '0';    }    buffer[ptr++]    =    HEX_CHARS[ch    >>    4];    buffer[ptr]    =    HEX_CHARS[ch    &    0xF];    ptr    -=    5;    }    else    {        [CLASS]        WriterBasedJsonGenerator    [METHOD]    _prependOrWriteCharacterEscape    [RETURN_TYPE]    int        char[]    buffer    int    ptr    int    end    char    ch    int    escCode    [VARIABLES]    SerializableString    _currentEscape    name    sstr    text    boolean    char    ch    String    escape    int    SHORT_WRITE    _outputEnd    _outputHead    _outputTail    amount    b24    bytes    bytesDone    bytesLeft    chunksBeforeLF    count    dataLength    end    escCode    escLen    escLimit    features    flushLen    hi    i    inputEnd    inputLeft    inputPtr    lastFullOffset    len    length    lo    max    maxNonEscaped    maxRead    missing    newAmount    offset    ptr    qlen    room    safeInputEnd    safeOutputEnd    segmentLen    start    status    textLen    Writer    _writer    w    char[]    HEX_CHARS    _entityBuffer    _outputBuffer    buf    buffer    ent    quoted    text        	jacksoncore_16314_WriterBasedJsonGenerator_1_1	1781	1	src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java
666	[PATCH]    int    c    =    (int)    inputBuffer[ptr]    &    0xFF;	[BUG]    [BUGGY]    int    c    =    (int)inputBuffer[ptr]    |    255;    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testSurrogates    [CONTEXT]    loadMoreGuaranteed();    ptr    =    _inputPtr;    }    int    outPtr    =    0;    char[]    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    final    int[]    codes    =    sInputCodesUtf8;    final    int    max    =    Math.min(_inputEnd,    (ptr    +    outBuf.length));    final    byte[]    inputBuffer    =    _inputBuffer;    while    (ptr    <    max)    {    [BUGGY]    int    c    =    (int)inputBuffer[ptr]    |    255;    if    (codes[c]    !=    0)    {    if    (c    ==    INT_QUOTE)    {    _inputPtr    =    ptr+1;    _textBuffer.setCurrentLength(outPtr);    return;    }    break;    }    ++ptr;    outBuf[outPtr++]    =    (char)    c;    [CLASS]        UTF8StreamJsonParser    [METHOD]    _finishString    [RETURN_TYPE]    void        [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    codes    quads    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    byteIx    byteLen    c    ch    ch2    cix    count    currQuad    currQuadBytes    decodedData    defaultValue    end    expLen    features    fractLen    i    intLen    intPartLength    integerPartLength    ix    lastQuad    lastQuadBytes    len    max    minAvailable    nameLen    needed    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    q1    q2    qlen    start    char[]    outBuf        	jacksoncore_13249_UTF8StreamJsonParser_1_1	2077	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
667	[PATCH]    while    (offset    <    len)    {	[BUG]    [BUGGY]    while    (offset    <=    len)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    6    testBasicEscaping    [CONTEXT]    return;    }                    len    +=    offset;    final    int[]    escCodes    =    _outputEscapes;    final    int    escLen    =    escCodes.length;    [BUGGY]    while    (offset    <=    len)    {    int    start    =    offset;    while    (true)    {    char    c    =    text[offset];    if    (c    <    escLen    &&    escCodes[c]    !=    0)    {    break;    }    if    (++offset    >=    len)    {    break;    }    [CLASS]        WriterBasedJsonGenerator    [METHOD]    _writeString    [RETURN_TYPE]    void        char[]    text    int    offset    int    len    [VARIABLES]    SerializableString    _currentEscape    name    sstr    text    boolean    char    c    int[]    escCodes    int    SHORT_WRITE    _outputEnd    _outputHead    _outputTail    amount    bytes    dataLength    end    escLen    features    flushLen    i    len    length    max    missing    newAmount    offset    ptr    qlen    room    segmentLen    start    status    textLen    Writer    _writer    w    char[]    HEX_CHARS    _entityBuffer    _outputBuffer    buf    quoted    text        	jacksoncore_15337_WriterBasedJsonGenerator_1_1	1095	1	src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java
668	[PATCH]    i    =    _inputBuffer[_inputPtr++]    &    0xFF;	[BUG]    [BUGGY]    i    =    _inputBuffer[_inputPtr++]    &    -255;    [FE]    com.fasterxml.jackson.core.JsonParseException:    Illegal    unquoted    character    ((CTRL-CHAR,    code    0)):    has    to    be    escaped    using    backslash    to    be    included    in    name    testSpecExampleFully    [CONTEXT]    }    q2    =    (q2    <<    8)    |    i;    i    =    _inputBuffer[_inputPtr++]    &    0xFF;    if    (codes[i]    !=    0)    {    if    (i    ==    INT_QUOTE)    {    return    findName(_quad1,    q2,    3);    }    return    parseFieldName(_quad1,    q2,    i,    3);    }    q2    =    (q2    <<    8)    |    i;    [BUGGY]    i    =    _inputBuffer[_inputPtr++]    &    -255;    if    (codes[i]    !=    0)    {    if    (i    ==    INT_QUOTE)    {    return    findName(_quad1,    q2,    4);    }    return    parseFieldName(_quad1,    q2,    i,    4);    }    _quadBuffer[0]    =    _quad1;    _quadBuffer[1]    =    q2;    return    parseLongFieldName(i);    }    [CLASS]        UTF8StreamJsonParser    [METHOD]    parseMediumFieldName    [RETURN_TYPE]    Name        int    q2    final    int[]    codes    [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    codes    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    c    ch    count    decodedData    defaultValue    end    expLen    features    fractLen    i    intLen    intPartLength    integerPartLength    len    minAvailable    nameLen    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    q2    start        	jacksoncore_12297_UTF8StreamJsonParser_1_1	1499	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
669	[PATCH]    int    inputLeft    =    inputEnd    -    inputPtr;    //    0,    1    or    2	[BUG]    [BUGGY]    int    inputLeft    =    inputEnd    *    inputPtr;    //    0,    1    or    2    [FE]    junit.framework.AssertionFailedError:    expected:<1>    but    was:<0>    testStreaming    [CONTEXT]    _outputTail    =    b64variant.encodeBase64Chunk(b24,    _outputBuffer,    _outputTail);    if    (--chunksBeforeLF    <=    0)    {        _outputBuffer[_outputTail++]    =    '\\';    _outputBuffer[_outputTail++]    =    'n';    chunksBeforeLF    =    b64variant.getMaxLineLength()    >>    2;    }    }            [BUGGY]    int    inputLeft    =    inputEnd    *    inputPtr;    if    (inputLeft    >    0)    {    if    (_outputTail    >    safeOutputEnd)    {    _flushBuffer();    }    int    b24    =    ((int)    input[inputPtr++])    <<    16;    if    (inputLeft    ==    2)    {    b24    |=    (((int)    input[inputPtr++])    &    0xFF)    <<    8;    }    _outputTail    =    b64variant.encodeBase64Partial(b24,    inputLeft,    _outputBuffer,    _outputTail);    }    [CLASS]        UTF8JsonGenerator    [METHOD]    _writeBinary    [RETURN_TYPE]    void        Base64Variant    b64variant    byte[]    input    int    inputPtr    final    int    inputEnd    [VARIABLES]    byte[]    FALSE_BYTES    HEX_CHARS    NULL_BYTES    TRUE_BYTES    _entityBuffer    _outputBuffer    bbuf    buf    bytes    data    encodingBuffer    input    keyword    outputBuffer    raw    text    utf8    boolean    _bufferRecyclable    addQuotes    bufferRecyclable    commaBefore    state    byte    BYTE_0    BYTE_BACKSLASH    BYTE_COLON    BYTE_COMMA    BYTE_LBRACKET    BYTE_LCURLY    BYTE_QUOTE    BYTE_RBRACKET    BYTE_RCURLY    BYTE_u    b    OutputStream    _outputStream    out    Base64Variant    b64variant    int    MAX_BYTES_TO_BUFFER    SURR1_FIRST    SURR1_LAST    SURR2_FIRST    SURR2_LAST    _charBufferLength    _outputEnd    _outputMaxContiguous    _outputTail    b24    blen    bytes    ch    chunksBeforeLF    dataLength    end    escape    features    i    inputEnd    inputLeft    inputPtr    left    len    len2    len3    length    maxUnescaped    missing    offset    outputEnd    outputOffset    outputPtr    ptr    remainingChars    safeInputEnd    safeOutputEnd    start    status    totalLen    char[]    _charBuffer    buf    cbuf    text        	jacksoncore_10439_UTF8JsonGenerator_1_1	1567	1	src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java
670	[PATCH]    if    (c    <    escCodeCount    &&    escCodes[c]    !=    0)    {	[BUG]    [BUGGY]    if    (c    <    escCodeCount    &&    escCodes[c]    !=    1)    {    [FE]    java.lang.AssertionError:    array    lengths    differed,    expected.length=6    actual.length=12    testQuoteAsString    [CONTEXT]    final    int    escCodeCount    =    escCodes.length;    int    inPtr    =    0;    final    int    inputLen    =    input.length();    int    outPtr    =    0;    outer_loop:    while    (inPtr    <    inputLen)    {    tight_loop:    while    (true)    {    char    c    =    input.charAt(inPtr);    [BUGGY]    if    (c    <    escCodeCount    &&    escCodes[c]    !=    1)    {    break    tight_loop;    }    if    (outPtr    >=    outputBuffer.length)    {    outputBuffer    =    textBuffer.finishCurrentSegment();    outPtr    =    0;    }    outputBuffer[outPtr++]    =    c;    if    (++inPtr    >=    inputLen)    {    break    outer_loop;    }    [CLASS]        JsonStringEncoder    [METHOD]    quoteAsString    [RETURN_TYPE]    char[]        String    input    [VARIABLES]    byte[]    HEX_BYTES    boolean    TextBuffer    _textBuffer    textBuffer    ThreadLocal    _threadEncoder    char    c    d    int[]    escCodes    ByteArrayBuilder    _byteBuilder    String    input    int    INT_0    INT_BACKSLASH    INT_U    SURR1_FIRST    SURR1_LAST    SURR2_FIRST    SURR2_LAST    escCode    escCodeCount    first    inPtr    inputLen    length    outPtr    second    char[]    HEX_CHARS    _quoteBuffer    outputBuffer        	jacksoncore_4268_JsonStringEncoder_1_1	116	1	src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java
671	[PATCH]    _pastLen    =    0;	[BUG]    [BUGGY]    _pastLen    =    1;    [FE]    java.lang.RuntimeException:    Internal    error:    total    len    assumed    to    be    301,    copied    300    bytes    testInArray    [CONTEXT]    public    void    reset()    {    [BUGGY]    _pastLen    =    1;    _currBlockPtr    =    0;    if    (!_pastBlocks.isEmpty())    {    _pastBlocks.clear();    }    }    [CLASS]        ByteArrayBuilder    [METHOD]    reset    [RETURN_TYPE]    void        [VARIABLES]    byte[]    NO_BYTES    _currBlock    BufferRecycler    _bufferRecycler    br    boolean    int    DEFAULT_BLOCK_ARRAY_SIZE    INITIAL_BLOCK_SIZE    MAX_BLOCK_SIZE    _currBlockPtr    _pastLen    firstBlockSize    LinkedList    _pastBlocks        	jacksoncore_555_ByteArrayBuilder_1_1	77	1	src/main/java/com/fasterxml/jackson/core/util/ByteArrayBuilder.java
672	[PATCH]    if    (i    <=    INT_BACKSLASH)    {	[BUG]    [BUGGY]    if    (i    ==    INT_BACKSLASH)    {    [FE]    com.fasterxml.jackson.core.JsonParseException:    Unexpected    end-of-input:    was    expecting    closing    quote    for    a    string    value    testCommentsWithUTF8    [CONTEXT]    if    (inputPtr    >=    inputLen)    {    _inputPtr    =    inputPtr;    if    (!loadMore())    {    _reportInvalidEOF(   ":    was    expecting    closing    quote    for    a    string    value   ");    }    inputPtr    =    _inputPtr;    inputLen    =    _inputEnd;    }    char    c    =    inputBuffer[inputPtr++];    int    i    =    (int)    c;    [BUGGY]    if    (i    ==    INT_BACKSLASH)    {    if    (i    ==    INT_BACKSLASH)    {                    _inputPtr    =    inputPtr;    c    =    _decodeEscaped();    inputPtr    =    _inputPtr;    inputLen    =    _inputEnd;    }    else    if    (i    <=    INT_QUOTE)    {    [CLASS]        ReaderBasedJsonParser    [METHOD]    _skipString    [RETURN_TYPE]    void        [VARIABLES]    boolean    _tokenIncomplete    eof    firstOk    inObject    negative    char    c    Reader    _reader    r    ObjectCodec    _objectCodec    c    codec    CharsToNameCanonicalizer    _symbols    st    int    _hashSeed    bits    ch    count    decodedData    defaultValue    endChar    expLen    features    fractLen    hash    i    inputLen    inputPtr    intLen    len    maxCode    nameLen    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    start    startPtr    char[]    _inputBuffer    buf    inputBuffer    outBuf        	jacksoncore_8686_ReaderBasedJsonParser_1_1	1587	1	src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
673	[PATCH]    _tokenIncomplete    =    false;	[BUG]    [BUGGY]    _tokenIncomplete    =    true;    [FE]    com.fasterxml.jackson.core.JsonParseException:    Unexpected    end-of-input    in    VALUE_STRING    testBase64UsingInputStream    [CONTEXT]    if    (_tokenIncomplete)    {    try    {    _binaryValue    =    _decodeBase64(b64variant);    }    catch    (IllegalArgumentException    iae)    {    throw    _constructError(   "Failed    to    decode    VALUE_STRING    as    base64    (   "+b64variant+   "):       "+iae.getMessage());    }                [BUGGY]    _tokenIncomplete    =    true;    }    else    {    if    (_binaryValue    ==    null)    {    @SuppressWarnings(   "resource   ")    ByteArrayBuilder    builder    =    _getByteArrayBuilder();    _decodeBase64(getText(),    builder,    b64variant);    _binaryValue    =    builder.toByteArray();    }    }    [CLASS]        UTF8StreamJsonParser    [METHOD]    getBinaryValue    [RETURN_TYPE]    byte[]        Base64Variant    b64variant    [VARIABLES]    byte[]    _inputBuffer    buf    inputBuffer    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    Base64Variant    b64variant    int[]    _quadBuffer    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    ByteArrayBuilder    builder    int    _quad1    amount    count    end    features    minAvailable    nameLen    origPtr    start    IllegalArgumentException    iae        	jacksoncore_11190_UTF8StreamJsonParser_1_1	434	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
674	[PATCH]    if    ((_outputTail    +    11)    >=    _outputEnd)    {	[BUG]    [BUGGY]    if    ((_outputTail    /    11)    >=    _outputEnd)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    2000    testLongerObjects    [CONTEXT]    public    void    writeNumber(int    i)    throws    IOException,    JsonGenerationException    {    _verifyValueWrite(   "write    number   ");    if    (_cfgNumbersAsStrings)    {    _writeQuotedInt(i);    return;    }        [BUGGY]    if    ((_outputTail    /    11)    >=    _outputEnd)    {    _flushBuffer();    }    _outputTail    =    NumberOutput.outputInt(i,    _outputBuffer,    _outputTail);    }    [CLASS]        WriterBasedJsonGenerator    [METHOD]    writeNumber    [RETURN_TYPE]    void        int    i    [VARIABLES]    SerializableString    _currentEscape    name    sstr    text    boolean    int    SHORT_WRITE    _outputEnd    _outputHead    _outputTail    amount    bytes    dataLength    features    i    len    length    missing    offset    qlen    room    start    status    Writer    _writer    w    char[]    HEX_CHARS    _entityBuffer    _outputBuffer    quoted    text        	jacksoncore_15005_WriterBasedJsonGenerator_1_1	614	1	src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java
675	[PATCH]    if    ((_outputTail    +        6    *    (end    -    offset))    >    _outputEnd)    {	[BUG]    [BUGGY]    if    ((_outputTail    +    -6    *    (end    -    offset))    >    _outputEnd)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    4000    testLongerRandomSingleChunk    [CONTEXT]    {        [BUGGY]    if    ((_outputTail    +-6    *    (end    -    offset))    >    _outputEnd)    {    _flushBuffer();    }    int    outputPtr    =    _outputTail;    final    byte[]    outputBuffer    =    _outputBuffer;    final    int[]    escCodes    =    _outputEscapes;    while    (offset    <    end)    {    int    ch    =    cbuf[offset++];    [CLASS]        UTF8JsonGenerator    [METHOD]    _writeStringSegment2    [RETURN_TYPE]    void        final    char[]    cbuf    int    offset    final    int    end    [VARIABLES]    byte[]    FALSE_BYTES    HEX_CHARS    NULL_BYTES    TRUE_BYTES    _entityBuffer    _outputBuffer    bbuf    buf    bytes    data    encodingBuffer    keyword    outputBuffer    raw    text    boolean    _bufferRecyclable    addQuotes    bufferRecyclable    commaBefore    state    byte    BYTE_0    BYTE_BACKSLASH    BYTE_COLON    BYTE_COMMA    BYTE_LBRACKET    BYTE_LCURLY    BYTE_QUOTE    BYTE_RBRACKET    BYTE_RCURLY    BYTE_u    b    OutputStream    _outputStream    out    int[]    escCodes    int    MAX_BYTES_TO_BUFFER    SURR1_FIRST    SURR1_LAST    SURR2_FIRST    SURR2_LAST    _charBufferLength    _outputEnd    _outputMaxContiguous    _outputTail    blen    bytes    ch    dataLength    end    escape    features    i    left    len    len2    len3    length    missing    offset    outputOffset    outputPtr    start    status    totalLen    char[]    _charBuffer    buf    cbuf    text        	jacksoncore_10028_UTF8JsonGenerator_1_1	1255	1	src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java
676	[PATCH]    outBuf[outPtr++]    =    (byte)    (0x80    |    ((c    >>    6)    &    0x3f));	[BUG]    [BUGGY]    outBuf[outPtr++]    =    (byte)    (0x80    |    ((c    >>    6)    |    63));    [FE]    junit.framework.AssertionFailedError:    expected:<15>    but    was:<19>    testSimple    [CONTEXT]    if    (c    <    0x800)    {    outBuf[outPtr++]    =    (byte)    (0xc0    |    (c    >>    6));    outBuf[outPtr++]    =    (byte)    (0x80    |    (c    &    0x3f));    }    else    {        if    (c    <    SURR1_FIRST    ||    c    >    SURR2_LAST)    {    outBuf[outPtr++]    =    (byte)    (0xe0    |    (c    >>    12));    [BUGGY]    outBuf[outPtr++]    =    (byte)    (0x80    |    ((c    >>    6)    |    63));    outBuf[outPtr++]    =    (byte)    (0x80    |    (c    &    0x3f));    continue;    }        if    (c    >    SURR1_LAST)    {    _outPtr    =    outPtr;    illegalSurrogate(c);    }    _surrogate    =    c;        [CLASS]        UTF8Writer    [METHOD]    write    [RETURN_TYPE]    void        char[]    cbuf    int    off    int    len    [VARIABLES]    byte[]    _outBuffer    buf    outBuf    boolean    OutputStream    _out    out    char    second    IOContext    _context    ctxt    int    SURR1_FIRST    SURR1_LAST    SURR2_FIRST    SURR2_LAST    _outBufferEnd    _outPtr    _surrogate    c    code    len    maxInCount    maxOutCount    off    outBufLast    outPtr    char[]    cbuf        	jacksoncore_6468_UTF8Writer_1_1	171	1	src/main/java/com/fasterxml/jackson/core/io/UTF8Writer.java
677	[PATCH]    if    ((_numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {	[BUG]    [BUGGY]    if    ((_numTypesValid    &    NR_BIGDECIMAL)    ==    1)    {    [FE]    junit.framework.AssertionFailedError:    expected:<12345678907>    but    was:<null>    testSimpleLong    [CONTEXT]    public    BigDecimal    getDecimalValue()    throws    IOException,    JsonParseException    {    if    ((_numTypesValid    &    NR_BIGDECIMAL)    ==    0)    {    if    (_numTypesValid    ==    NR_UNKNOWN)    {    _parseNumericValue(NR_BIGDECIMAL);    }    [BUGGY]    if    ((_numTypesValid    &    NR_BIGDECIMAL)    ==    1)    {    convertNumberToBigDecimal();    }    }    return    _numberBigDecimal;    }    [CLASS]        ParserBase    [METHOD]    getDecimalValue    [RETURN_TYPE]    BigDecimal        [VARIABLES]    double    MAX_INT_D    MAX_LONG_D    MIN_INT_D    MIN_LONG_D    _numberDouble    value    ByteArrayBuilder    _byteArrayBuilder    int    INT_0    INT_1    INT_2    INT_3    INT_4    INT_5    INT_6    INT_7    INT_8    INT_9    INT_DECIMAL_POINT    INT_E    INT_MINUS    INT_PLUS    INT_e    NR_BIGDECIMAL    NR_BIGINT    NR_DOUBLE    NR_INT    NR_LONG    NR_UNKNOWN    _currInputRow    _currInputRowStart    _expLength    _fractLength    _inputEnd    _inputPtr    _intLength    _numTypesValid    _numberInt    _tokenInputCol    _tokenInputRow    actCh    col    expLen    features    fractLen    intLen    long    MAX_INT_L    MIN_INT_L    _currInputProcessed    _numberLong    _tokenInputTotal    BigDecimal    BD_MAX_INT    BD_MAX_LONG    BD_MIN_INT    BD_MIN_LONG    _numberBigDecimal    char[]    _nameCopyBuffer    buf    JsonReadContext    _parsingContext    ctxt    parent    byte[]    _binaryValue    boolean    _closed    _nameCopied    _numberNegative    negative    TextBuffer    _textBuffer    char    CHAR_NULL    expCh    IOContext    _ioContext    ctxt    BigInteger    BI_MAX_INT    BI_MAX_LONG    BI_MIN_INT    BI_MIN_LONG    _numberBigInt    JsonToken    _nextToken        	jacksoncore_3337_ParserBase_1_1	713	1	src/main/java/com/fasterxml/jackson/core/base/ParserBase.java
678	[PATCH]    if    (outPtr    >=    outBuf.length)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.ComparisonFailure:    expected:<   "[name   "]>    but    was:<   "[                                                                                                                                                                                                       n                                                                                                                                                                                                                                                                                                           a                                                                                                                                                                                                                                                                                                                                                                                                                                                                 m                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  e                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      "                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ]>    testSimple    [CONTEXT]    if    (i    <    INT_SPACE)    {    _throwUnquotedSpace(i,       "name   ");    }    }    }    hash    =    (hash    *    CharsToNameCanonicalizer.HASH_MULT)    +    i;        outBuf[outPtr++]    =    c;            [BUGGY]    if    (true)    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    }    _textBuffer.setCurrentLength(outPtr);    {    TextBuffer    tb    =    _textBuffer;    char[]    buf    =    tb.getTextBuffer();    int    start    =    tb.getTextOffset();    int    len    =    tb.size();    [CLASS]        ReaderBasedJsonParser    [METHOD]    _parseFieldName2    [RETURN_TYPE]    String        int    startPtr    int    hash    int    endChar    [VARIABLES]    boolean    _tokenIncomplete    eof    inObject    negative    TextBuffer    tb    char    c    Reader    _reader    r    ObjectCodec    _objectCodec    c    codec    CharsToNameCanonicalizer    _symbols    st    int    _hashSeed    bits    ch    count    decodedData    defaultValue    endChar    expLen    features    fractLen    hash    i    inputLen    intLen    len    maxCode    nameLen    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    start    startPtr    char[]    _inputBuffer    buf    outBuf        	jacksoncore_8366_ReaderBasedJsonParser_1_1	1237	1	src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
679	[PATCH]    if    (ch    ==    '   "')    {	[BUG]    [BUGGY]    if    (ch    >=    '\   "')    {    [FE]    junit.framework.AssertionFailedError:    Expected    an    exception    for    unclosed    ARRAY    testInvalid    [CONTEXT]    int    ptr    =    _inputPtr;    final    int    inputLen    =    _inputEnd;    if    (ptr    <    inputLen)    {    final    int[]    codes    =    CharTypes.getInputCodeLatin1();    final    int    maxCode    =    codes.length;    do    {    int    ch    =    _inputBuffer[ptr];    if    (ch    <    maxCode    &&    codes[ch]    !=    0)    {    [BUGGY]    if    (ch    >=    '\   "')    {    _textBuffer.resetWithShared(_inputBuffer,    _inputPtr,    (ptr-_inputPtr));    _inputPtr    =    ptr+1;        return;    }    break;    }    ++ptr;    }    while    (ptr    <    inputLen);    }    [CLASS]        ReaderBasedJsonParser    [METHOD]    _finishString    [RETURN_TYPE]    void        [VARIABLES]    boolean    _tokenIncomplete    eof    firstOk    inObject    negative    Reader    _reader    r    int[]    codes    ObjectCodec    _objectCodec    c    codec    CharsToNameCanonicalizer    _symbols    st    int    _hashSeed    bits    ch    count    decodedData    defaultValue    endChar    expLen    features    fractLen    hash    i    inputLen    intLen    len    maxCode    nameLen    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    start    startPtr    char[]    _inputBuffer    buf    outBuf        	jacksoncore_8617_ReaderBasedJsonParser_1_1	1501	1	src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
680	[PATCH]    buf[++ptr]    =    HEX_CHARS[ch    &    0xF];	[BUG]    [BUGGY]    buf[++ptr]    =    HEX_CHARS[ch    |    15];    [FE]    java.lang.ArrayIndexOutOfBoundsException:    175    testAboveAsciiEscapeWithReader    [CONTEXT]    if    (ch    >    0xFF)    {    int    hi    =    (ch    >>    8)    &    0xFF;    buf[++ptr]    =    HEX_CHARS[hi    >>    4];    buf[++ptr]    =    HEX_CHARS[hi    &    0xF];    ch    &=    0xFF;    }    else    {    buf[++ptr]    =    '0';    buf[++ptr]    =    '0';    }    buf[++ptr]    =    HEX_CHARS[ch    >>    4];    [BUGGY]    buf[++ptr]    =    HEX_CHARS[ch    |    15];    return;    }        char[]    buf    =    _entityBuffer;    if    (buf    ==    null)    {    buf    =    _allocateEntityBuffer();    }    _outputHead    =    _outputTail;    if    (ch    >    0xFF)    {    int    hi    =    (ch    >>    8)    &    0xFF;    [CLASS]        WriterBasedJsonGenerator    [METHOD]    _prependOrWriteCharacterEscape    [RETURN_TYPE]    void        char    ch    int    escCode    [VARIABLES]    SerializableString    _currentEscape    name    sstr    text    boolean    char    ch    String    escape    int    SHORT_WRITE    _outputEnd    _outputHead    _outputTail    amount    b24    bytes    bytesDone    bytesLeft    chunksBeforeLF    count    dataLength    end    escCode    escLen    escLimit    features    flushLen    hi    i    inputEnd    inputLeft    inputPtr    lastFullOffset    len    length    lo    max    maxNonEscaped    maxRead    missing    newAmount    offset    ptr    qlen    room    safeInputEnd    safeOutputEnd    segmentLen    start    status    textLen    Writer    _writer    w    char[]    HEX_CHARS    _entityBuffer    _outputBuffer    buf    quoted    text        	jacksoncore_16147_WriterBasedJsonGenerator_1_1	1702	1	src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java
681	[PATCH]    return    findName(_quad1,    q2,    2);	[BUG]    [BUGGY]    return    findName(_quad1,    q2,    -2);    [FE]    junit.framework.ComparisonFailure:    expected:<He[ight]>    but    was:<He[]>    testSpecExampleFully    [CONTEXT]    if    (codes[i]    !=    0)    {    if    (i    ==    INT_QUOTE)    {    return    findName(_quad1,    q2,    1);    }    return    parseFieldName(_quad1,    q2,    i,    1);    }    q2    =    (q2    <<    8)    |    i;    i    =    _inputBuffer[_inputPtr++]    &    0xFF;    if    (codes[i]    !=    0)    {    if    (i    ==    INT_QUOTE)    {        [BUGGY]    return    findName(_quad1,    q2,    -2);    }    return    parseFieldName(_quad1,    q2,    i,    2);    }    q2    =    (q2    <<    8)    |    i;    i    =    _inputBuffer[_inputPtr++]    &    0xFF;    if    (codes[i]    !=    0)    {    if    (i    ==    INT_QUOTE)    {    return    findName(_quad1,    q2,    3);    }    return    parseFieldName(_quad1,    q2,    i,    3);    [CLASS]        UTF8StreamJsonParser    [METHOD]    parseMediumFieldName    [RETURN_TYPE]    Name        int    q2    final    int[]    codes    [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    codes    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    c    ch    count    decodedData    defaultValue    end    expLen    features    fractLen    i    intLen    intPartLength    integerPartLength    len    minAvailable    nameLen    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    q2    start        	jacksoncore_12262_UTF8StreamJsonParser_1_1	1486	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
682	[PATCH]    if    (c    >=    0x80)    {	[BUG]    [BUGGY]    if    (c    >=    0)    {    [FE]    junit.framework.AssertionFailedError:    expected:<30>    but    was:<32>    testSimple    [CONTEXT]    if    (maxInCount    >    maxOutCount)    {    maxInCount    =    maxOutCount;    }    maxInCount    +=    off;    ascii_loop:    while    (true)    {    if    (off    >=    maxInCount)    {    continue    output_loop;    }    c    =    str.charAt(off++);    [BUGGY]    if    (c    >=    0)    {    break    ascii_loop;    }    outBuf[outPtr++]    =    (byte)    c;    }    }        if    (c    <    0x800)    {    outBuf[outPtr++]    =    (byte)    (0xc0    |    (c    >>    6));    outBuf[outPtr++]    =    (byte)    (0x80    |    (c    &    0x3f));    [CLASS]        UTF8Writer    [METHOD]    write    [RETURN_TYPE]    void        String    str    int    off    int    len    [VARIABLES]    byte[]    _outBuffer    buf    outBuf    boolean    OutputStream    _out    out    char    second    IOContext    _context    ctxt    String    str    int    SURR1_FIRST    SURR1_LAST    SURR2_FIRST    SURR2_LAST    _outBufferEnd    _outPtr    _surrogate    c    code    len    maxInCount    maxOutCount    off    outBufLast    outPtr    ptr        	jacksoncore_6746_UTF8Writer_1_1	304	1	src/main/java/com/fasterxml/jackson/core/io/UTF8Writer.java
683	[PATCH]    return    (offset    +    len);	[BUG]    [BUGGY]    return    (offset    -    len);    [FE]    junit.framework.AssertionFailedError:    Document       "   "    yielded    no    tokens    testLongWrite    [CONTEXT]                if    (value    >    MIN_INT_AS_LONG)    {    return    outputInt((int)    value,    buffer,    offset);    }    if    (value    ==    Long.MIN_VALUE)    {        int    len    =    SMALLEST_LONG.length();    SMALLEST_LONG.getChars(0,    len,    buffer,    offset);    [BUGGY]    return    (offset    -    len);    }    buffer[offset++]    =    '-';    value    =    -value;    }    else    {    if    (value    <=    MAX_INT_AS_LONG)    {    return    outputInt((int)    value,    buffer,    offset);    }    }            [CLASS]        NumberOutput    [METHOD]    outputLong    [RETURN_TYPE]    int        long    value    char[]    buffer    int    offset    [VARIABLES]    byte[]    FULL_TRIPLETS_B    buffer    boolean    char    NULL_CHAR    String    SMALLEST_LONG    String[]    sSmallIntStrs    sSmallIntStrs2    int    BILLION    MILLION    ivalue    len    newValue    offset    ones    origOffset    ptr    thousands    triplet    value    long    MAX_INT_AS_LONG    MIN_INT_AS_LONG    TEN_BILLION_L    THOUSAND_L    newValue    value    char[]    FULL_TRIPLETS    LEADING_TRIPLETS    buffer        	jacksoncore_5642_NumberOutput_1_1	197	1	src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java
684	[PATCH]    c    =    (int)    inputBuffer[ptr++]    &    0xFF;	[BUG]    [BUGGY]    c    =    (int)inputBuffer[ptr++]    |    255;    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testLongText    [CONTEXT]    if    (ptr    >=    _inputEnd)    {    loadMoreGuaranteed();    ptr    =    _inputPtr;    }    if    (outPtr    >=    outBuf.length)    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    final    int    max    =    Math.min(_inputEnd,    (ptr    +    (outBuf.length    -    outPtr)));    while    (ptr    <    max)    {    [BUGGY]    c    =    (int)inputBuffer[ptr++]    |    255;    if    (codes[c]    !=    0)    {    _inputPtr    =    ptr;    break    ascii_loop;    }    outBuf[outPtr++]    =    (char)    c;    }    _inputPtr    =    ptr;    }        if    (c    ==    INT_QUOTE)    {    [CLASS]        UTF8StreamJsonParser    [METHOD]    _finishString2    [RETURN_TYPE]    void        char[]    outBuf    int    outPtr    [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    codes    quads    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    byteIx    byteLen    c    ch    ch2    cix    count    currQuad    currQuadBytes    decodedData    defaultValue    end    expLen    features    fractLen    i    intLen    intPartLength    integerPartLength    ix    lastQuad    lastQuadBytes    len    max    minAvailable    nameLen    needed    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    q1    q2    qlen    start    char[]    outBuf        	jacksoncore_13296_UTF8StreamJsonParser_1_1	2118	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
685	[PATCH]    text.getChars(offset,    offset+len,    cbuf,    0);	[BUG]    [BUGGY]    text.getChars(offset,    offset    %    len,    cbuf,    0);    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    -500    testLongerRandomSingleChunk    [CONTEXT]    private    final    void    _writeStringSegments(String    text)    throws    IOException,    JsonGenerationException    {    int    left    =    text.length();    int    offset    =    0;    final    char[]    cbuf    =    _charBuffer;    while    (left    >    0)    {    int    len    =    Math.min(_outputMaxContiguous,    left);    [BUGGY]    text.getChars(offset,    offset    %    len,    cbuf,    0);    if    ((_outputTail    +    len)    >    _outputEnd)    {    _flushBuffer();    }    _writeStringSegment(cbuf,    0,    len);    offset    +=    len;    left    -=    len;    }    }    [CLASS]        UTF8JsonGenerator    [METHOD]    _writeStringSegments    [RETURN_TYPE]    void        String    text    [VARIABLES]    byte[]    FALSE_BYTES    HEX_CHARS    NULL_BYTES    TRUE_BYTES    _entityBuffer    _outputBuffer    bbuf    buf    bytes    data    encodingBuffer    keyword    outputBuffer    raw    text    boolean    _bufferRecyclable    addQuotes    bufferRecyclable    commaBefore    state    byte    BYTE_0    BYTE_BACKSLASH    BYTE_COLON    BYTE_COMMA    BYTE_LBRACKET    BYTE_LCURLY    BYTE_QUOTE    BYTE_RBRACKET    BYTE_RCURLY    BYTE_u    b    OutputStream    _outputStream    out    String    text    int    MAX_BYTES_TO_BUFFER    SURR1_FIRST    SURR1_LAST    SURR2_FIRST    SURR2_LAST    _charBufferLength    _outputEnd    _outputMaxContiguous    _outputTail    blen    bytes    ch    dataLength    end    features    i    left    len    len2    len3    length    missing    offset    outputOffset    start    status    char[]    _charBuffer    buf    cbuf    text        	jacksoncore_9958_UTF8JsonGenerator_1_1	1167	1	src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java
686	[PATCH]    bbuf[outputPtr++]    =    HEX_CHARS[hi    >>    4];	[BUG]    [BUGGY]    bbuf[outputPtr++]    =    HEX_CHARS[hi    >>    -4];    [FE]    junit.framework.ComparisonFailure:    expected:<...   "chars:    [\u00A0]/[\u[1]234]   "]>    but    was:<...   "chars:    [\u00A0]/[\u[0]234]   "]>    testAboveAsciiEscapeWithUTF8Stream    [CONTEXT]    private    int    _writeGenericEscape(int    charToEscape,    int    outputPtr)    throws    IOException    {    final    byte[]    bbuf    =    _outputBuffer;    bbuf[outputPtr++]    =    BYTE_BACKSLASH;    bbuf[outputPtr++]    =    BYTE_u;    if    (charToEscape    >    0xFF)    {    int    hi    =    (charToEscape    >>    8)    &    0xFF;    [BUGGY]    bbuf[outputPtr++]    =    HEX_CHARS[hi    >>    -4];    bbuf[outputPtr++]    =    HEX_CHARS[hi    &    0xF];    charToEscape    &=    0xFF;    }    else    {    bbuf[outputPtr++]    =    BYTE_0;    bbuf[outputPtr++]    =    BYTE_0;    }        bbuf[outputPtr++]    =    HEX_CHARS[charToEscape    >>    4];    bbuf[outputPtr++]    =    HEX_CHARS[charToEscape    &    0xF];    return    outputPtr;    [CLASS]        UTF8JsonGenerator    [METHOD]    _writeGenericEscape    [RETURN_TYPE]    int        int    charToEscape    int    outputPtr    [VARIABLES]    byte[]    FALSE_BYTES    HEX_CHARS    NULL_BYTES    TRUE_BYTES    _entityBuffer    _outputBuffer    bbuf    buf    bytes    data    encodingBuffer    input    keyword    outputBuffer    raw    readBuffer    text    utf8    boolean    _bufferRecyclable    addQuotes    bufferRecyclable    commaBefore    state    byte    BYTE_0    BYTE_BACKSLASH    BYTE_COLON    BYTE_COMMA    BYTE_LBRACKET    BYTE_LCURLY    BYTE_QUOTE    BYTE_RBRACKET    BYTE_RCURLY    BYTE_u    b    OutputStream    _outputStream    out    int    MAX_BYTES_TO_BUFFER    SURR1_FIRST    SURR1_LAST    SURR2_FIRST    SURR2_LAST    _charBufferLength    _outputEnd    _outputMaxContiguous    _outputTail    amount    b24    blen    bytes    bytesDone    bytesLeft    c    ch    charToEscape    chunksBeforeLF    count    dataLength    end    escape    features    hi    i    inputEnd    inputLeft    inputLen    inputOffset    inputPtr    lastFullOffset    left    len    len2    len3    length    maxRead    maxUnescaped    missing    offset    outputEnd    outputOffset    outputPtr    ptr    remainingChars    safeInputEnd    safeOutputEnd    start    status    surr1    surr2    totalLen    char[]    _charBuffer    buf    cbuf    text        	jacksoncore_10972_UTF8JsonGenerator_1_1	1832	1	src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java
687	[PATCH]    if    (ch    <    '0'    ||    ch    >    '9')    {	[BUG]    [BUGGY]    if    (ch    >    '9')    {    [FE]    com.fasterxml.jackson.core.JsonParseException:    Invalid    numeric    value:    Leading    zeroes    not    allowed    testLongWrite    [CONTEXT]    {        if    (_inputPtr    >=    _inputEnd    &&    !loadMore())    {    return    '0';    }    char    ch    =    _inputBuffer[_inputPtr];        [BUGGY]    if    (ch    >    '9')    {    return    '0';    }    if    (!isEnabled(Feature.ALLOW_NUMERIC_LEADING_ZEROS))    {    reportInvalidNumber(   "Leading    zeroes    not    allowed   ");    }        ++_inputPtr;    if    (ch    ==    INT_0)    {    while    (_inputPtr    <    _inputEnd    ||    loadMore())    {    ch    =    _inputBuffer[_inputPtr];    [CLASS]        ReaderBasedJsonParser    [METHOD]    _verifyNoLeadingZeroes    [RETURN_TYPE]    char        [VARIABLES]    boolean    _tokenIncomplete    eof    inObject    negative    char    ch    Reader    _reader    r    ObjectCodec    _objectCodec    c    codec    CharsToNameCanonicalizer    _symbols    st    int    _hashSeed    bits    ch    count    decodedData    defaultValue    expLen    features    fractLen    i    inputLen    intLen    len    nameLen    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    startPtr    char[]    _inputBuffer    buf    outBuf        	jacksoncore_8212_ReaderBasedJsonParser_1_1	1096	1	src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
688	[PATCH]    int    startPtr    =    ptr-1;    //    to    include    sign/digit    already    read	[BUG]    [BUGGY]    int    startPtr    =    ptr-0;    //    to    include    sign/digit    already    read    [FE]    junit.framework.AssertionFailedError:    expected:<1>    but    was:<-16>    testCommentsEnabled    [CONTEXT]    {                        boolean    negative    =    (ch    ==    INT_MINUS);    int    ptr    =    _inputPtr;    [BUGGY]    int    startPtr    =    ptr-0;    final    int    inputLen    =    _inputEnd;    dummy_loop:    do    {    if    (negative)    {    if    (ptr    >=    _inputEnd)    {    break    dummy_loop;    }    ch    =    _inputBuffer[ptr++];        [CLASS]        ReaderBasedJsonParser    [METHOD]    parseNumberText    [RETURN_TYPE]    JsonToken        int    ch    [VARIABLES]    boolean    _tokenIncomplete    inObject    negative    Reader    _reader    r    ObjectCodec    _objectCodec    c    codec    CharsToNameCanonicalizer    _symbols    st    int    _hashSeed    bits    ch    count    decodedData    defaultValue    expLen    features    fractLen    i    inputLen    intLen    len    nameLen    origPtr    outputCount    outputEnd    outputPtr    ptr    startPtr    char[]    _inputBuffer    buf        	jacksoncore_7882_ReaderBasedJsonParser_1_1	850	1	src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
689	[PATCH]    if    (c    ==    INT_APOSTROPHE    ||    codes[c]    !=    0)    {	[BUG]    [BUGGY]    if    (c    ==    INT_APOSTROPHE)    {    [FE]    junit.framework.ComparisonFailure:    expected:<16[']>    but    was:<16[\]>    testSingleQuotesEnabled    [CONTEXT]    }    int    max    =    _inputEnd;    {    int    max2    =    _inputPtr    +    (outBuf.length    -    outPtr);    if    (max2    <    max)    {    max    =    max2;    }    }    while    (_inputPtr    <    max)    {    c    =    (int)    inputBuffer[_inputPtr++]    &    0xFF;    [BUGGY]    if    (c    ==    INT_APOSTROPHE)    {    break    ascii_loop;    }    outBuf[outPtr++]    =    (char)    c;    }    }        if    (c    ==    INT_APOSTROPHE)    {    break    main_loop;    }    [CLASS]        UTF8StreamJsonParser    [METHOD]    _handleApostropheValue    [RETURN_TYPE]    JsonToken        [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    codes    quads    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    byteIx    byteLen    c    ch    ch2    cix    count    currQuad    currQuadBytes    decodedData    defaultValue    end    expLen    features    fractLen    i    intLen    intPartLength    integerPartLength    ix    lastQuad    lastQuadBytes    len    max    max2    minAvailable    nameLen    needed    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    q1    q2    qlen    start    char[]    outBuf        	jacksoncore_13468_UTF8StreamJsonParser_1_1	2321	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
690	[PATCH]    _textBuffer.resetWithShared(_inputBuffer,    _inputPtr,    (ptr-_inputPtr));	[BUG]    [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,    _inputPtr,    (ptr    +    _inputPtr));    [FE]    junit.framework.ComparisonFailure:    expected:<a[]>    but    was:<a[   ",   "Pöllö   ":   "b   "},{   "Pöllö   ":   "c   ",]>    testSimple    [CONTEXT]    final    int    inputLen    =    _inputEnd;    if    (ptr    <    inputLen)    {    final    int[]    codes    =    CharTypes.getInputCodeLatin1();    final    int    maxCode    =    codes.length;    do    {    int    ch    =    _inputBuffer[ptr];    if    (ch    <    maxCode    &&    codes[ch]    !=    0)    {    if    (ch    ==    '   "')    {    [BUGGY]    _textBuffer.resetWithShared(_inputBuffer,    _inputPtr,    (ptr    +    _inputPtr));    _inputPtr    =    ptr+1;        return;    }    break;    }    ++ptr;    }    while    (ptr    <    inputLen);    }        [CLASS]        ReaderBasedJsonParser    [METHOD]    _finishString    [RETURN_TYPE]    void        [VARIABLES]    boolean    _tokenIncomplete    eof    firstOk    inObject    negative    Reader    _reader    r    int[]    codes    ObjectCodec    _objectCodec    c    codec    CharsToNameCanonicalizer    _symbols    st    int    _hashSeed    bits    ch    count    decodedData    defaultValue    endChar    expLen    features    fractLen    hash    i    inputLen    intLen    len    maxCode    nameLen    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    start    startPtr    char[]    _inputBuffer    buf    outBuf        	jacksoncore_8621_ReaderBasedJsonParser_1_1	1502	1	src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
691	[PATCH]    ch    =    _inputBuffer[_inputPtr++]    &    0xFF;	[BUG]    [BUGGY]    ch    =    _inputBuffer[_inputPtr++]    ^    255;    [FE]    com.fasterxml.jackson.core.JsonParseException:    Unexpected    end-of-input    in    field    name    testSingleQuotesEnabled    [CONTEXT]    }    quads[qlen++]    =    currQuad;    currQuad    =    ch;    currQuadBytes    =    1;    }    if    (_inputPtr    >=    _inputEnd)    {    if    (!loadMore())    {    _reportInvalidEOF(   "    in    field    name   ");    }    }    [BUGGY]    ch    =    _inputBuffer[_inputPtr++]    ^    255;    }    if    (currQuadBytes    >    0)    {    if    (qlen    >=    quads.length)    {    _quadBuffer    =    quads    =    growArrayBy(quads,    quads.length);    }    quads[qlen++]    =    currQuad;    }    Name    name    =    _symbols.findName(quads,    qlen);    if    (name    ==    null)    {    [CLASS]        UTF8StreamJsonParser    [METHOD]    _parseApostropheFieldName    [RETURN_TYPE]    Name        [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    codes    quads    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    c    ch    count    currQuad    currQuadBytes    decodedData    defaultValue    end    expLen    features    fractLen    i    intLen    intPartLength    integerPartLength    lastQuadBytes    len    minAvailable    nameLen    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    q1    q2    qlen    start    Name    name        	jacksoncore_12860_UTF8StreamJsonParser_1_1	1876	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
692	[PATCH]    int    c    =    (c1    <<    6)    |    (d    &    0x3F);	[BUG]    [BUGGY]    int    c    =    (c1    >>>    6)    |    (d    &    0x3F);    [FE]    junit.framework.AssertionFailedError:    Long    text    differs    testLongText    [CONTEXT]    private    int    _decodeUtf8_3fast(int    c1)    throws    IOException,    JsonParseException    {    c1    &=    0x0F;    int    d    =    (int)    _inputBuffer[_inputPtr++];    if    ((d    &    0xC0)    !=    0x080)    {    _reportInvalidOther(d    &    0xFF,    _inputPtr);    }    [BUGGY]    int    c    =    (c1    >>>    6)    |    (d    &    0x3F);    d    =    (int)    _inputBuffer[_inputPtr++];    if    ((d    &    0xC0)    !=    0x080)    {    _reportInvalidOther(d    &    0xFF,    _inputPtr);    }    c    =    (c    <<    6)    |    (d    &    0x3F);    return    c;    }    [CLASS]        UTF8StreamJsonParser    [METHOD]    _decodeUtf8_3fast    [RETURN_TYPE]    int        int    c1    [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    neg    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    codes    quads    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    byteIx    byteLen    c    c1    ch    ch2    cix    code    count    currQuad    currQuadBytes    d    decodedData    defaultValue    digit    end    expLen    features    firstByte    fractLen    i    intLen    intPartLength    integerPartLength    ix    lastQuad    lastQuadBytes    len    max    max2    minAvailable    nameLen    needed    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    q1    q2    qlen    start    value        	jacksoncore_14146_UTF8StreamJsonParser_1_1	2852	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
693	[PATCH]    return    -1;	[BUG]    [BUGGY]    return    1;    [FE]    com.fasterxml.jackson.core.JsonParseException:    Failed    to    decode    VALUE_STRING    as    base64    (MIME-NO-LINEFEEDS):    Unexpected    padding    character    ('=')    as    character    #1    of    4-char    base64    unit:    padding    only    legal    as    3rd    or    4th    character    testWithEscaped    [CONTEXT]    throws    IOException,    JsonParseException    {        if    (ch    !=    '\\')    {    throw    reportInvalidBase64Char(b64variant,    ch,    index);    }    int    unescaped    =    _decodeEscaped();        if    (unescaped    <=    INT_SPACE)    {    if    (index    ==    0)    {        [BUGGY]    return    1;    }    }        int    bits    =    b64variant.decodeBase64Char(unescaped);    if    (bits    <    0)    {    throw    reportInvalidBase64Char(b64variant,    unescaped,    index);    }    return    bits;    }    [CLASS]        ParserBase    [METHOD]    _decodeBase64Escape    [RETURN_TYPE]    int        Base64Variant    b64variant    int    ch    int    index    [VARIABLES]    double    MAX_INT_D    MAX_LONG_D    MIN_INT_D    MIN_LONG_D    _numberDouble    value    ByteArrayBuilder    _byteArrayBuilder    int    INT_0    INT_1    INT_2    INT_3    INT_4    INT_5    INT_6    INT_7    INT_8    INT_9    INT_DECIMAL_POINT    INT_E    INT_MINUS    INT_PLUS    INT_e    NR_BIGDECIMAL    NR_BIGINT    NR_DOUBLE    NR_INT    NR_LONG    NR_UNKNOWN    _currInputRow    _currInputRowStart    _expLength    _fractLength    _inputEnd    _inputPtr    _intLength    _numTypesValid    _numberInt    _tokenInputCol    _tokenInputRow    actCh    bits    ch    col    expLen    expType    features    fractLen    i    index    intLen    len    offset    result    unescaped    long    MAX_INT_L    MIN_INT_L    _currInputProcessed    _numberLong    _tokenInputTotal    l    BigDecimal    BD_MAX_INT    BD_MAX_LONG    BD_MIN_INT    BD_MIN_LONG    _numberBigDecimal    char[]    _nameCopyBuffer    buf    JsonReadContext    _parsingContext    ctxt    parent    byte[]    _binaryValue    boolean    _closed    _nameCopied    _numberNegative    negative    TextBuffer    _textBuffer    char    CHAR_NULL    expCh    IOContext    _ioContext    ctxt    BigInteger    BI_MAX_INT    BI_MAX_LONG    BI_MIN_INT    BI_MIN_LONG    _numberBigInt    Base64Variant    b64variant    JsonToken    _nextToken        	jacksoncore_3680_ParserBase_1_1	1032	1	src/main/java/com/fasterxml/jackson/core/base/ParserBase.java
694	[PATCH]    byteIx    =    (ix    &    3);	[BUG]    [BUGGY]    byteIx    =    (ix    &    0);    [FE]    com.fasterxml.jackson.core.JsonParseException:    Invalid    UTF-8    middle    byte    0x50    testSimple    [CONTEXT]    }    else    {    _reportInvalidInitial(ch);    needed    =    ch    =    1;    }    if    ((ix    +    needed)    >    byteLen)    {    _reportInvalidEOF(   "    in    field    name   ");    }        int    ch2    =    quads[ix    >>    2];        [BUGGY]    byteIx    =    (ix    &    0);    ch2    =    (ch2    >>    ((3    -    byteIx)    <<    3));    ++ix;    if    ((ch2    &    0xC0)    !=    0x080)    {    _reportInvalidOther(ch2);    }    ch    =    (ch    <<    6)    |    (ch2    &    0x3F);    if    (needed    >    1)    {    ch2    =    quads[ix    >>    2];    byteIx    =    (ix    &    3);    [CLASS]        UTF8StreamJsonParser    [METHOD]    addName    [RETURN_TYPE]    Name        int[]    quads    int    qlen    int    lastQuadBytes    [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    codes    quads    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    String    baseName    int    _quad1    amount    bits    byteIx    byteLen    c    ch    ch2    cix    count    currQuad    currQuadBytes    decodedData    defaultValue    end    expLen    features    fractLen    i    intLen    intPartLength    integerPartLength    ix    lastQuad    lastQuadBytes    len    minAvailable    nameLen    needed    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    q1    q2    qlen    start    char[]    cbuf        	jacksoncore_13037_UTF8StreamJsonParser_1_1	2001	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
695	[PATCH]    _length    =    (next    ==    null)    ?    1    :    next._length+1;	[BUG]    [BUGGY]    _length    =    (next    ==    null)    ?    1    :    next._length    %    1;    [FE]    junit.framework.AssertionFailedError:    expected:<9>    but    was:<1>    testSyntheticWithBytes    [CONTEXT]    Bucket(Name    name,    Bucket    next)    {    _name    =    name;    _next    =    next;    [BUGGY]    _length    =    (next    ==    null)    ?    1    :    next._length    %    1;    }    [CLASS]        BytesToNameCanonicalizer    TableInfo    Bucket    [METHOD]    <init>    [RETURN_TYPE]    BytesToNameCanonicalizer$Bucket)        Name    name    Bucket    next    [VARIABLES]    boolean    _collListShared    _intern    _mainHashShared    _mainNamesShared    _needRehash    intern    Bucket[]    _collList    collList    Bucket    _next    next    BytesToNameCanonicalizer    _parent    parent    src    AtomicReference    _tableInfo    int[]    _mainHash    mainHash    int    DEFAULT_TABLE_SIZE    INITIAL_COLLISION_LEN    LAST_VALID_BUCKET    MAX_COLL_CHAIN_FOR_REUSE    MAX_COLL_CHAIN_LENGTH    MAX_ENTRIES_FOR_REUSE    MAX_TABLE_SIZE    MIN_HASH_SIZE    MULT    MULT2    MULT3    _collCount    _collEnd    _count    _hashSeed    _length    _longestCollisionList    _mainHashMask    collCount    collEnd    count    curr    hashSize    longestCollisionList    mainHashMask    seed    Name[]    _mainNames    mainNames    Name    _name    name        	jacksoncore_1936_BytesToNameCanonicalizer_1_1	1157	1	src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java
696	[PATCH]    bbuf[outputPtr++]    =    HEX_CHARS[(ch    >>    8)    &    0xF];	[BUG]    [BUGGY]    bbuf[outputPtr++]    =    HEX_CHARS[(ch    >>    0)    &    0xF];    [FE]    junit.framework.AssertionFailedError:    Strings    differ    at    position    #551    (len    76194):    expected    char    0xd8e1,    actual    0xd1e1    testLongerRandomSingleChunk    [CONTEXT]    private    int    _outputMultiByteChar(int    ch,    int    outputPtr)    throws    IOException    {    byte[]    bbuf    =    _outputBuffer;    if    (ch    >=    SURR1_FIRST    &&    ch    <=    SURR2_LAST)    {    bbuf[outputPtr++]    =    BYTE_BACKSLASH;    bbuf[outputPtr++]    =    BYTE_u;    bbuf[outputPtr++]    =    HEX_CHARS[(ch    >>    12)    &    0xF];    [BUGGY]    bbuf[outputPtr++]    =    HEX_CHARS[(ch    >>    0)    &    0xF];    bbuf[outputPtr++]    =    HEX_CHARS[(ch    >>    4)    &    0xF];    bbuf[outputPtr++]    =    HEX_CHARS[ch    &    0xF];    }    else    {    bbuf[outputPtr++]    =    (byte)    (0xe0    |    (ch    >>    12));    bbuf[outputPtr++]    =    (byte)    (0x80    |    ((ch    >>    6)    &    0x3f));    bbuf[outputPtr++]    =    (byte)    (0x80    |    (ch    &    0x3f));    }    return    outputPtr;    }    [CLASS]        UTF8JsonGenerator    [METHOD]    _outputMultiByteChar    [RETURN_TYPE]    int        int    ch    int    outputPtr    [VARIABLES]    byte[]    FALSE_BYTES    HEX_CHARS    NULL_BYTES    TRUE_BYTES    _entityBuffer    _outputBuffer    bbuf    buf    bytes    data    encodingBuffer    input    keyword    outputBuffer    raw    readBuffer    text    utf8    boolean    _bufferRecyclable    addQuotes    bufferRecyclable    commaBefore    state    byte    BYTE_0    BYTE_BACKSLASH    BYTE_COLON    BYTE_COMMA    BYTE_LBRACKET    BYTE_LCURLY    BYTE_QUOTE    BYTE_RBRACKET    BYTE_RCURLY    BYTE_u    b    OutputStream    _outputStream    out    int    MAX_BYTES_TO_BUFFER    SURR1_FIRST    SURR1_LAST    SURR2_FIRST    SURR2_LAST    _charBufferLength    _outputEnd    _outputMaxContiguous    _outputTail    amount    b24    blen    bytes    bytesDone    bytesLeft    c    ch    chunksBeforeLF    count    dataLength    end    escape    features    i    inputEnd    inputLeft    inputLen    inputOffset    inputPtr    lastFullOffset    left    len    len2    len3    length    maxRead    maxUnescaped    missing    offset    outputEnd    outputOffset    outputPtr    ptr    remainingChars    safeInputEnd    safeOutputEnd    start    status    surr1    surr2    totalLen    char[]    _charBuffer    buf    cbuf    text        	jacksoncore_10851_UTF8JsonGenerator_1_1	1788	1	src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java
697	[PATCH]    while    (inputPtr    <=    safeInputEnd)    {	[BUG]    [BUGGY]    while    (inputPtr    <    safeInputEnd)    {    [FE]    junit.framework.AssertionFailedError:    expected:<3>    but    was:<1>    testStreaming    [CONTEXT]    {        int    safeInputEnd    =    inputEnd    -    3;        int    safeOutputEnd    =    _outputEnd    -    6;    int    chunksBeforeLF    =    b64variant.getMaxLineLength()    >>    2;            [BUGGY]    while    (inputPtr    <    safeInputEnd)    {    if    (_outputTail    >    safeOutputEnd)    {    _flushBuffer();    }        int    b24    =    ((int)    input[inputPtr++])    <<    8;    b24    |=    ((int)    input[inputPtr++])    &    0xFF;    b24    =    (b24    <<    8)    |    (((int)    input[inputPtr++])    &    0xFF);    _outputTail    =    b64variant.encodeBase64Chunk(b24,    _outputBuffer,    _outputTail);    if    (--chunksBeforeLF    <=    0)    {        [CLASS]        UTF8JsonGenerator    [METHOD]    _writeBinary    [RETURN_TYPE]    void        Base64Variant    b64variant    byte[]    input    int    inputPtr    final    int    inputEnd    [VARIABLES]    byte[]    FALSE_BYTES    HEX_CHARS    NULL_BYTES    TRUE_BYTES    _entityBuffer    _outputBuffer    bbuf    buf    bytes    data    encodingBuffer    input    keyword    outputBuffer    raw    text    utf8    boolean    _bufferRecyclable    addQuotes    bufferRecyclable    commaBefore    state    byte    BYTE_0    BYTE_BACKSLASH    BYTE_COLON    BYTE_COMMA    BYTE_LBRACKET    BYTE_LCURLY    BYTE_QUOTE    BYTE_RBRACKET    BYTE_RCURLY    BYTE_u    b    OutputStream    _outputStream    out    Base64Variant    b64variant    int    MAX_BYTES_TO_BUFFER    SURR1_FIRST    SURR1_LAST    SURR2_FIRST    SURR2_LAST    _charBufferLength    _outputEnd    _outputMaxContiguous    _outputTail    b24    blen    bytes    ch    chunksBeforeLF    dataLength    end    escape    features    i    inputEnd    inputLeft    inputPtr    left    len    len2    len3    length    maxUnescaped    missing    offset    outputEnd    outputOffset    outputPtr    ptr    remainingChars    safeInputEnd    safeOutputEnd    start    status    totalLen    char[]    _charBuffer    buf    cbuf    text        	jacksoncore_10398_UTF8JsonGenerator_1_1	1549	1	src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java
698	[PATCH]    if    (!(ch    ==    '    '    ||    ch    ==    '\r'    ||    ch    ==    '\n'    ||    ch    ==    '\t'))    {	[BUG]    [BUGGY]    if    (!(ch    ==    '    '    ||    ch    ==    '\r'    ||    ch    ==    '\n'    ||    ch    >=    '\t'))    {    [FE]    junit.framework.AssertionFailedError    testSimpleValidArray    [CONTEXT]    private    static    int    skipSpace(InputAccessor    acc,    byte    b)    throws    IOException    {    while    (true)    {    int    ch    =    (int)    b    &    0xFF;    [BUGGY]    if    (!(ch    ==    '    '    ||    ch    ==    '\r'    ||    ch    ==    '\n'    ||    ch    >=    '\t'))    {    return    ch;    }    if    (!acc.hasMoreBytes())    {    return    -1;    }    b    =    acc.nextByte();    ch    =    (int)    b    &    0xFF;    }    }    [CLASS]        ByteSourceJsonBootstrapper    [METHOD]    skipSpace    [RETURN_TYPE]    int        InputAccessor    acc    byte    b    [VARIABLES]    byte[]    _inputBuffer    inputBuffer    boolean    _bigEndian    _bufferRecyclable    canonicalize    foundEncoding    intern    byte    UTF8_BOM_1    UTF8_BOM_2    UTF8_BOM_3    b    InputStream    _in    in    IOContext    _context    ctxt    InputAccessor    acc    int    _bytesPerChar    _inputEnd    _inputProcessed    _inputPtr    ch    i    i16    inputLen    inputStart    len    parserFeatures    quad        	jacksoncore_7195_ByteSourceJsonBootstrapper_1_1	369	1	src/main/java/com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.java
699	[PATCH]    |    (_inputBuffer[_inputPtr+3]    &    0xFF);	[BUG]    [BUGGY]    |    (_inputBuffer[_inputPtr    *    3]    &    0xFF);    [FE]    java.lang.ArrayIndexOutOfBoundsException:    150    testBytesAsSource    [CONTEXT]                            if    (ensureLoaded(4))    {    int    quad    =(_inputBuffer[_inputPtr]    <<    24)    |    ((_inputBuffer[_inputPtr+1]    &    0xFF)    <<    16)    |    ((_inputBuffer[_inputPtr+2]    &    0xFF)    <<    8)    [BUGGY]    |    (_inputBuffer[_inputPtr    *    3]    &    0xFF);    if    (handleBOM(quad))    {    foundEncoding    =    true;    }    else    {                            [CLASS]        ByteSourceJsonBootstrapper    [METHOD]    detectEncoding    [RETURN_TYPE]    JsonEncoding        [VARIABLES]    byte[]    _inputBuffer    inputBuffer    boolean    _bigEndian    _bufferRecyclable    foundEncoding    JsonEncoding    enc    byte    UTF8_BOM_1    UTF8_BOM_2    UTF8_BOM_3    InputStream    _in    in    IOContext    _context    ctxt    int    _bytesPerChar    _inputEnd    _inputProcessed    _inputPtr    i16    inputLen    inputStart    quad        	jacksoncore_6988_ByteSourceJsonBootstrapper_1_1	133	1	src/main/java/com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.java
700	[PATCH]    if    (wrapperName    ==    null    ||    wrapperName    ==    PropertyName.NO_NAME)    {	[BUG]    [BUGGY]    if    (false    ||    wrapperName    ==    PropertyName.NO_NAME)    {    [FE]    java.lang.NullPointerException    testNoElementWrapper    [CONTEXT]                if    (!TypeUtil.isIndexedType(bpw.getType()))    {    continue;    }    PropertyName    wrappedName    =    PropertyName.construct(bpw.getName(),    ns);    PropertyName    wrapperName    =    bpw.getWrapperName();            [BUGGY]    if    (false    ||    wrapperName    ==    PropertyName.NO_NAME)    {    continue;    }        String    localName    =    wrapperName.getSimpleName();    if    (localName    ==    null    ||    localName.length()    ==    0)    {    wrapperName    =    wrappedName;    }    beanProperties.set(i,    new    XmlBeanPropertyWriter(bpw,    wrapperName,    wrappedName));    }    return    beanProperties;    [CLASS]        XmlBeanSerializerModifier    [METHOD]    changeProperties    [RETURN_TYPE]    List        SerializationConfig    config    BeanDescription    beanDesc    BeanPropertyWriter>    beanProperties    [VARIABLES]    PropertyName    wrappedName    wrapperName    boolean    SerializationConfig    config    BeanDescription    beanDesc    AnnotationIntrospector    intr    AnnotatedMember    member    List    beanProperties    String    localName    ns    Boolean    isAttribute    isCData    isText    BeanPropertyWriter    bpw    long    serialVersionUID    int    i    len        	jacksonxml_1945_XmlBeanSerializerModifier_1_1	61	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerModifier.java
701	[PATCH]    if    (_nextToken    !=    null)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    (was    java.lang.NullPointerException)    (through    reference    chain:    com.fasterxml.jackson.dataformat.xml.MediaItem[   "content   "]->com.fasterxml.jackson.dataformat.xml.Content[   "persons   "]->java.util.ArrayList[0])    testRoundtrip    [CONTEXT]    {    _binaryValue    =    null;    [BUGGY]    if    (true)    {    JsonToken    t    =    _nextToken;    _currToken    =    t;    _nextToken    =    null;        if    (t    ==    JsonToken.VALUE_STRING)    {    return    _currText;    }    _updateState(t);    return    null;    [CLASS]        FromXmlParser    Feature    [METHOD]    nextTextValue    [RETURN_TYPE]    String        [VARIABLES]    byte[]    _binaryValue    boolean    _closed    _defaultState    _mayBeLeaf    defaultState    state    Set    _namesToWrap    namesToWrap    XmlReadContext    _parsingContext    ctxt    parent    XmlTokenStream    _xmlTokens    IOContext    _ioContext    ctxt    JsonToken    _nextToken    t    String    DEFAULT_UNNAMED_TEXT_PROPERTY    _cfgNameForTextElement    _currText    name    ObjectCodec    _objectCodec    c    codec    ByteArrayBuilder    _byteArrayBuilder    int    _formatFeatures    _mask    flags    genericParserFeatures    mask    token    values    xmlFeatures        	jacksonxml_523_FromXmlParser_1_1	598	1	src/main/java/com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java
702	[PATCH]    if    (name.endsWith(   "[]   "))    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.ComparisonFailure:    expected:<<NonNullBe[an><name>Bob</name></NonNullBean]>>    but    was:<<NonNullBe[s><name>Bob</name></NonNullBes]>>    testNullSuppression    [CONTEXT]    {    StringBuilder    sb;    int    changes    =    0;        [BUGGY]    if    (true)    {    do    {    name    =    name.substring(0,    name.length()    -    2);    ++changes;    }    while    (name.endsWith(   "[]   "));    sb    =    new    StringBuilder(name);        if    (name.endsWith(   "s   "))    {    sb.append(   "es   ");    }    else    {    sb.append('s');    [CLASS]        StaxUtil    [METHOD]    sanitizeXmlTypeName    [RETURN_TYPE]    String        String    name    [VARIABLES]    boolean    StringBuilder    sb    char    c    String    name    int    changes    i    len        	jacksonxml_2092_StaxUtil_1_1	37	1	src/main/java/com/fasterxml/jackson/dataformat/xml/util/StaxUtil.java
703	[PATCH]    if    (_initialized)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.io.IOException:    javax.xml.stream.XMLStreamException:    Can    not    output    XML    declaration,    after    other    output    has    already    been    done.    testIssue54    [CONTEXT]    public    void    initGenerator()throws    IOException    {    [BUGGY]    if    (false)    {    return;    }    _initialized    =    true;    try    {    if    (Feature.WRITE_XML_1_1.enabledIn(_formatFeatures))    {    _xmlWriter.writeStartDocument(   "UTF-8   ",       "1.1   ");    }    else    if    (Feature.WRITE_XML_DECLARATION.enabledIn(_formatFeatures))    {    _xmlWriter.writeStartDocument(   "UTF-8   ",       "1.0   ");    }    else    {    return;    [CLASS]        ToXmlGenerator    Feature    [METHOD]    initGenerator    [RETURN_TYPE]    void        [VARIABLES]    XMLStreamWriter2    _xmlWriter    boolean    _defaultState    _initialized    _nextIsAttribute    _nextIsCData    _nextIsUnwrapped    _stax2Emulation    defaultState    XMLStreamException    e    XMLStreamWriter    _originalXmlWriter    sw    QName    _nextName    IOContext    _ioContext    ctxt    XmlPrettyPrinter    _xmlPrettyPrinter    String    DEFAULT_UNKNOWN_ELEMENT    Feature    WRITE_XML_1_1    WRITE_XML_DECLARATION    f    int    _formatFeatures    _mask    flags    stdFeatures    xmlFeatures    LinkedList    _elementNameStack        	jacksonxml_693_ToXmlGenerator_1_1	191	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java
704	[PATCH]    if    (c    >=    'A'    &&    c    <=    'Z')    continue;	[BUG]    [BUGGY]    if    (c    ==    'A'    &&    c    <=    'Z')    continue;    [FE]    junit.framework.ComparisonFailure:    expected:<<[NonNullBean><name>Bob</name></NonNullB]ean>>    but    was:<<[_on_ull_ean><name>Bob</name></_on_ull_]ean>>    testNullSuppression    [CONTEXT]    }    else    {    sb.append('s');    }    }    else    {    sb    =    new    StringBuilder(name);    }    for    (int    i    =    0,    len    =    name.length();    i    <    len;    ++i)    {    char    c    =    name.charAt(i);    if    (c    >    127)    continue;    if    (c    >=    'a'    &&    c    <=    'z')    continue;    [BUGGY]    if    (c    ==    'A'    &&    c    <=    'Z')    continue;    if    (c    >=    '0'    &&    c    <=    '9')    continue;    if    (c    ==    '_'    ||    c    ==    '.'    ||    c    ==    '-')    continue;        ++changes;    if    (c    ==    '$')    {    sb.setCharAt(i,    '.');    }    else    {    sb.setCharAt(i,    '_');    }    }    [CLASS]        StaxUtil    [METHOD]    sanitizeXmlTypeName    [RETURN_TYPE]    String        String    name    [VARIABLES]    boolean    StringBuilder    sb    char    c    String    name    int    changes    i    len        	jacksonxml_2127_StaxUtil_1_1	56	1	src/main/java/com/fasterxml/jackson/dataformat/xml/util/StaxUtil.java
705	[PATCH]    if    (i    ==    attrCount    &&    !(isAttribute    &&    isUnwrappingSerializer()))    {	[BUG]    [BUGGY]    if    (i    ==    attrCount)    {    [FE]    junit.framework.ComparisonFailure:    expected:<...ttributes    name=   "Joe   "[    loc.x=   "15   "    loc.y=   "27   "/]>>    but    was:<...ttributes    name=   "Joe   "[><loc.x>15</loc.x><loc.y>27</loc.y></UnwrappingWithAttributes]>>    testUnwrappingWithAttribute    [CONTEXT]    }    final    int    textIndex    =    _textPropertyIndex;    final    QName[]    xmlNames    =    _xmlNames;    int    i    =    0;    final    BitSet    cdata    =    _cdata;    try    {    for    (final    int    len    =    props.length;    i    <    len;    ++i)    {            [BUGGY]    if    (i    ==    attrCount)    {    xgen.setNextIsAttribute(false);    }        if    (i    ==    textIndex)    {    xgen.setNextIsUnwrapped(true);    }    xgen.setNextName(xmlNames[i]);    BeanPropertyWriter    prop    =    props[i];    if    (prop    !=    null)    {    if    ((cdata    !=    null)    &&    cdata.get(i))    {    [CLASS]        XmlBeanSerializerBase    [METHOD]    serializeFields    [RETURN_TYPE]    void        Object    bean    JsonGenerator    gen0    SerializerProvider    provider    [VARIABLES]    QName[]    _xmlNames    xmlNames    BitSet    _cdata    cdata    String    KEY_XML_INFO    name    ns    BeanPropertyWriter[]    props    int    _attributeCount    _textPropertyIndex    attrCount    i    len    textIndex    Exception    e    boolean    isAttribute    JsonMappingException    mapE    ToXmlGenerator    xgen    JsonGenerator    gen0    Object    bean    SerializerProvider    provider    BeanPropertyWriter    prop    StackOverflowError    e        	jacksonxml_1717_XmlBeanSerializerBase_1_1	187	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerBase.java
706	[PATCH]    if    (c    >=    '0'    &&    c    <=    '9')    continue;	[BUG]    [BUGGY]    if    (c    ==    '0'    &&    c    <=    '9')    continue;    [FE]    junit.framework.ComparisonFailure:    expected:<<Issue[44Bean    first=   "abc   "><second>13</second></Issue44]Bean>>    but    was:<<Issue[__Bean    first=   "abc   "><second>13</second></Issue__]Bean>>    testIssue44    [CONTEXT]    sb.append('s');    }    }    else    {    sb    =    new    StringBuilder(name);    }    for    (int    i    =    0,    len    =    name.length();    i    <    len;    ++i)    {    char    c    =    name.charAt(i);    if    (c    >    127)    continue;    if    (c    >=    'a'    &&    c    <=    'z')    continue;    if    (c    >=    'A'    &&    c    <=    'Z')    continue;    [BUGGY]    if    (c    ==    '0'    &&    c    <=    '9')    continue;    if    (c    ==    '_'    ||    c    ==    '.'    ||    c    ==    '-')    continue;        ++changes;    if    (c    ==    '$')    {    sb.setCharAt(i,    '.');    }    else    {    sb.setCharAt(i,    '_');    }    }    if    (changes    ==    0)    {    [CLASS]        StaxUtil    [METHOD]    sanitizeXmlTypeName    [RETURN_TYPE]    String        String    name    [VARIABLES]    boolean    StringBuilder    sb    char    c    String    name    int    changes    i    len        	jacksonxml_2137_StaxUtil_1_1	57	1	src/main/java/com/fasterxml/jackson/dataformat/xml/util/StaxUtil.java
707	[PATCH]    if    (_typeSerializer    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    (was    java.lang.NullPointerException)    (through    reference    chain:    com.fasterxml.jackson.dataformat.xml.MediaItem[   "content   "]->com.fasterxml.jackson.dataformat.xml.Content[   "persons   "])    testRoundtrip    [CONTEXT]    }    }    final    ToXmlGenerator    xmlGen    =    (jgen    instanceof    ToXmlGenerator)    ?    (ToXmlGenerator)    jgen    :    null;            if    (xmlGen    !=    null)    {    xmlGen.startWrappedValue(_wrapperQName,    _wrappedQName);    }    jgen.writeFieldName(_name);    [BUGGY]    if    (false)    {    ser.serialize(value,    jgen,    prov);    }    else    {    ser.serializeWithType(value,    jgen,    prov,    _typeSerializer);    }    if    (xmlGen    !=    null)    {    xmlGen.finishWrappedValue(_wrapperQName,    _wrappedQName);    }    }    [CLASS]        XmlBeanPropertyWriter    [METHOD]    serializeAsField    [RETURN_TYPE]    void        Object    bean    JsonGenerator    jgen    SerializerProvider    prov    [VARIABLES]    boolean    QName    _wrappedQName    _wrapperQName    PropertySerializerMap    map    ToXmlGenerator    xmlGen    JsonGenerator    jgen    Object    bean    value    Class    cls    JsonSerializer    ser    SerializerProvider    prov    long    serialVersionUID        	jacksonxml_1913_XmlBeanPropertyWriter_1_1	144	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanPropertyWriter.java
708	[PATCH]    for    (int    i    =    0,    len    =    matchStr.length();    i    <    len;    ++i)    {	[BUG]    [BUGGY]    for    (int    i    =    0,    len    =    matchStr.length();    i    <=    len;    ++i)    {    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    6    testSimpleValidDoctype    [CONTEXT]    private    final    static    MatchStrength    tryMatch(InputAccessor    acc,    String    matchStr,    MatchStrength    fullMatchStrength)    throws    IOException    {    [BUGGY]    for    (int    i    =    0,    len    =    matchStr.length();    i    <=    len;    ++i)    {    if    (!acc.hasMoreBytes())    {    return    MatchStrength.INCONCLUSIVE;    }    if    (acc.nextByte()    !=    matchStr.charAt(i))    {    return    MatchStrength.NO_MATCH;    }    }    return    fullMatchStrength;    }    [CLASS]        XmlFactory    [METHOD]    tryMatch    [RETURN_TYPE]    MatchStrength        InputAccessor    acc    String    matchStr    MatchStrength    fullMatchStrength    [VARIABLES]    XMLOutputFactory    _xmlOutputFactory    f    outf    xmlOut    boolean    byte    BYTE_D    BYTE_EXCL    BYTE_HYPHEN    BYTE_LT    BYTE_QMARK    BYTE_l    BYTE_m    BYTE_x    UTF8_BOM_1    UTF8_BOM_2    UTF8_BOM_3    b    String    FORMAT_NAME_XML    _cfgNameForTextElement    _jdkXmlInFactory    _jdkXmlOutFactory    content    matchStr    name    nameForTextElem    MatchStrength    fullMatchStrength    InputAccessor    acc    long    serialVersionUID    int    DEFAULT_XML_GENERATOR_FEATURE_FLAGS    DEFAULT_XML_PARSER_FEATURE_FLAGS    _xmlGeneratorFeatures    _xmlParserFeatures    ch    i    len    offset    xgFeatures    xpFeatures    XMLInputFactory    _xmlInputFactory    f    inf    xmlIn        	jacksonxml_282_XmlFactory_1_1	789	1	src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java
709	[PATCH]    if    (i    ==    attrCount    &&    !(isAttribute    &&    isUnwrappingSerializer()))    {	[BUG]    [BUGGY]    if    (i    ==    attrCount    &&    !(isUnwrappingSerializer()))    {    [FE]    junit.framework.ComparisonFailure:    expected:<...ame=   "Joe   "    loc.x=   "15   "[><loc.y>27</loc.y></UnwrappingSubWithAttributes]>>    but    was:<...ame=   "Joe   "    loc.x=   "15   "[    loc.y=   "27   "/]>>    testUnwrappingSubWithAttribute    [CONTEXT]    }    final    int    textIndex    =    _textPropertyIndex;    final    QName[]    xmlNames    =    _xmlNames;    int    i    =    0;    final    BitSet    cdata    =    _cdata;    try    {    for    (final    int    len    =    props.length;    i    <    len;    ++i)    {            [BUGGY]    if    (i    ==    attrCount    &&    !(isUnwrappingSerializer()))    {    xgen.setNextIsAttribute(false);    }        if    (i    ==    textIndex)    {    xgen.setNextIsUnwrapped(true);    }    xgen.setNextName(xmlNames[i]);    BeanPropertyWriter    prop    =    props[i];    if    (prop    !=    null)    {    if    ((cdata    !=    null)    &&    cdata.get(i))    {    [CLASS]        XmlBeanSerializerBase    [METHOD]    serializeFields    [RETURN_TYPE]    void        Object    bean    JsonGenerator    gen0    SerializerProvider    provider    [VARIABLES]    QName[]    _xmlNames    xmlNames    BitSet    _cdata    cdata    String    KEY_XML_INFO    name    ns    BeanPropertyWriter[]    props    int    _attributeCount    _textPropertyIndex    attrCount    i    len    textIndex    Exception    e    boolean    isAttribute    JsonMappingException    mapE    ToXmlGenerator    xgen    JsonGenerator    gen0    Object    bean    SerializerProvider    provider    BeanPropertyWriter    prop    StackOverflowError    e        	jacksonxml_1714_XmlBeanSerializerBase_1_1	187	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerBase.java
710	[PATCH]    if    (_xmlPrettyPrinter    !=    null)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    (was    java.lang.NullPointerException)    (through    reference    chain:    com.fasterxml.jackson.dataformat.xml.FiveMinuteUser[   "userImage   "])    testRoundTripWithJacksonExample    [CONTEXT]    }    else    if    (checkNextIsUnwrapped())    {        _xmlWriter.writeBinary(data,    offset,    len);    }    else    {    [BUGGY]    if    (true)    {    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,    _nextName.getNamespaceURI(),    _nextName.getLocalPart(),    data,    offset,    len);    }    else    {    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(),    _nextName.getLocalPart());    _xmlWriter.writeBinary(data,    offset,    len);    _xmlWriter.writeEndElement();    }    }    [CLASS]        ToXmlGenerator    Feature    [METHOD]    writeBinary    [RETURN_TYPE]    void        Base64Variant    b64variant    byte[]    data    int    offset    int    len    [VARIABLES]    QName    _nextName    name    wrappedName    wrapperName    String    DEFAULT_UNKNOWN_ELEMENT    fieldName    name    ns    text    value    Feature    WRITE_XML_1_1    WRITE_XML_DECLARATION    f    int    _formatFeatures    _mask    count    flags    len    length    mask    newF    offset    oldF    stdFeatures    values    xmlFeatures    LinkedList    _elementNameStack    byte[]    data    fullBuffer    XMLStreamWriter2    _xmlWriter    boolean    _defaultState    _initialized    _nextIsAttribute    _nextIsCData    _nextIsUnwrapped    _stax2Emulation    defaultState    isAttribute    isCData    isUnwrapped    state    XMLStreamException    e    XMLStreamWriter    _originalXmlWriter    sw    IOContext    _ioContext    ctxt    Base64Variant    b64variant    XmlPrettyPrinter    _xmlPrettyPrinter        	jacksonxml_890_ToXmlGenerator_1_1	741	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java
711	[PATCH]    int    i    =    0;	[BUG]    [BUGGY]    int    i    =    -1;    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    -1    testIssue44    [CONTEXT]    final    boolean    isAttribute    =    xgen._nextIsAttribute;    final    int    attrCount    =    _attributeCount;    if    (attrCount    >    0)    {    xgen.setNextIsAttribute(true);    }    final    int    textIndex    =    _textPropertyIndex;    final    QName[]    xmlNames    =    _xmlNames;    final    BitSet    cdata    =    _cdata;        [BUGGY]    int    i    =    -1;    try    {    for    (final    int    len    =    props.length;    i    <    len;    ++i)    {            if    (i    ==    attrCount    &&    !(isAttribute    &&    isUnwrappingSerializer()))    {    xgen.setNextIsAttribute(false);    }        if    (i    ==    textIndex)    {    xgen.setNextIsUnwrapped(true);    [CLASS]        XmlBeanSerializerBase    [METHOD]    serializeFieldsFiltered    [RETURN_TYPE]    void        Object    bean    JsonGenerator    gen0    SerializerProvider    provider    [VARIABLES]    QName[]    _xmlNames    xmlNames    BitSet    _cdata    cdata    String    KEY_XML_INFO    name    ns    BeanPropertyWriter[]    props    int    _attributeCount    _textPropertyIndex    attrCount    i    len    textIndex    Exception    e    boolean    isAttribute    JsonMappingException    mapE    ToXmlGenerator    xgen    JsonGenerator    gen0    Object    bean    PropertyFilter    filter    SerializerProvider    provider    BeanPropertyWriter    prop    StackOverflowError    e        	jacksonxml_1773_XmlBeanSerializerBase_1_1	264	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerBase.java
712	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.ComparisonFailure:    expected:<<Simple    a=   "13   ">[something]</Simple>>    but    was:<<Simple    a=   "13   ">[<value>something</value>]</Simple>>    testAsTextWithJAXB    [CONTEXT]    protected    boolean    checkNextIsUnwrapped()    {    if    (_nextIsUnwrapped)    {    _nextIsUnwrapped    =    false;    [BUGGY]    return    false;    }    return    false;    }    [CLASS]        ToXmlGenerator    Feature    [METHOD]    checkNextIsUnwrapped    [RETURN_TYPE]    boolean        [VARIABLES]    XMLStreamWriter2    _xmlWriter    boolean    _defaultState    _initialized    _nextIsAttribute    _nextIsCData    _nextIsUnwrapped    _stax2Emulation    defaultState    isAttribute    isCData    isUnwrapped    state    usePlain    value    XMLStreamWriter    _originalXmlWriter    sw    QName    _nextName    name    wrappedName    wrapperName    IOContext    _ioContext    ctxt    XmlPrettyPrinter    _xmlPrettyPrinter    String    DEFAULT_UNKNOWN_ELEMENT    encodedValue    fieldName    name    ns    text    typeMsg    value    Feature    WRITE_XML_1_1    WRITE_XML_DECLARATION    f    int    _formatFeatures    _mask    count    flags    i    len    length    mask    newF    offset    oldF    status    stdFeatures    values    xmlFeatures    LinkedList    _elementNameStack        	jacksonxml_1074_ToXmlGenerator_1_1	1123	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java
713	[PATCH]    if    (!(ch    ==    '    '    ||    ch    ==    '\r'    ||    ch    ==    '\n'    ||    ch    ==    '\t'))    {	[BUG]    [BUGGY]    if    (!(ch    ==    '\r'    ||    ch    ==    '\n'    ||    ch    ==    '\t'))    {    [FE]    junit.framework.AssertionFailedError    testSimpleValidComment    [CONTEXT]    private    final    static    int    skipSpace(InputAccessor    acc,    byte    b)    throws    IOException    {    while    (true)    {    int    ch    =    (int)    b    &    0xFF;    [BUGGY]    if    (!(ch    ==    '\r'    ||    ch    ==    '\n'    ||    ch    ==    '\t'))    {    return    ch;    }    if    (!acc.hasMoreBytes())    {    return    -1;    }    b    =    acc.nextByte();    ch    =    (int)    b    &    0xFF;    }    }    [CLASS]        XmlFactory    [METHOD]    skipSpace    [RETURN_TYPE]    int        InputAccessor    acc    byte    b    [VARIABLES]    XMLOutputFactory    _xmlOutputFactory    f    outf    xmlOut    boolean    byte    BYTE_D    BYTE_EXCL    BYTE_HYPHEN    BYTE_LT    BYTE_QMARK    BYTE_l    BYTE_m    BYTE_x    UTF8_BOM_1    UTF8_BOM_2    UTF8_BOM_3    b    String    FORMAT_NAME_XML    _cfgNameForTextElement    _jdkXmlInFactory    _jdkXmlOutFactory    content    matchStr    name    nameForTextElem    InputAccessor    acc    long    serialVersionUID    int    DEFAULT_XML_GENERATOR_FEATURE_FLAGS    DEFAULT_XML_PARSER_FEATURE_FLAGS    _xmlGeneratorFeatures    _xmlParserFeatures    ch    i    len    offset    xgFeatures    xpFeatures    XMLInputFactory    _xmlInputFactory    f    inf    xmlIn        	jacksonxml_301_XmlFactory_1_1	804	1	src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java
714	[PATCH]    if    (localName    ==    null    ||    localName.length()    ==    0)    {	[BUG]    [BUGGY]    if    (localName    ==    null    ||    localName.length()    ==    1)    {    [FE]    junit.framework.ComparisonFailure:    expected:<<[p><name>Jay</name><child><name>Junior</name></child></p]>>    but    was:<<[MyPerson2><name>Jay</name><child><name>Junior</name></child></MyPerson2]>>    testNoElementWrapper    [CONTEXT]    AnnotatedClass    ac    =    beanDesc.getClassInfo();    String    localName    =    null;    String    ns    =    null;    PropertyName    root    =    intr.findRootName(ac);    if    (root    !=    null)    {    localName    =    root.getSimpleName();    ns    =    root.getNamespace();    }        [BUGGY]    if    (localName    ==    null    ||    localName.length()    ==    1)    {            localName    =    StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());    return    new    QName(   "   ",    localName);    }        if    (ns    ==    null    ||    ns.length()    ==    0)    {    ns    =    findNamespace(intr,    ac);    }    if    (ns    ==    null)    {        [CLASS]        XmlRootNameLookup    [METHOD]    _findRootName    [RETURN_TYPE]    QName        Class<?>    rootType    MapperConfig<?>    config    [VARIABLES]    PropertyName    root    boolean    AnnotatedClass    ac    LRUMap    _rootNames    BeanDescription    beanDesc    AnnotationIntrospector    intr    MapperConfig    config    Class    rootType    String    localName    ns    long    serialVersionUID        	jacksonxml_2056_XmlRootNameLookup_1_1	77	1	src/main/java/com/fasterxml/jackson/dataformat/xml/util/XmlRootNameLookup.java
715	[PATCH]    if    (_mayBeLeaf)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.ComparisonFailure:    expected:<[123-456-7890]>    but    was:<[NOT    SET]>    testOptionalAttr    [CONTEXT]    _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    return    (_currToken    =    JsonToken.START_OBJECT);    }    _parsingContext.setCurrentName(_xmlTokens.getLocalName());    return    (_currToken    =    JsonToken.FIELD_NAME);    case    XmlTokenStream.XML_ATTRIBUTE_VALUE:    _currText    =    _xmlTokens.getText();    return    (_currToken    =    JsonToken.VALUE_STRING);    case    XmlTokenStream.XML_TEXT:    _currText    =    _xmlTokens.getText();    [BUGGY]    if    (true)    {    _mayBeLeaf    =    false;                        _xmlTokens.skipEndElement();    if    (_parsingContext.inArray())    {    if    (_isEmpty(_currText))    {        [CLASS]        FromXmlParser    Feature    [METHOD]    nextToken    [RETURN_TYPE]    JsonToken        [VARIABLES]    byte[]    _binaryValue    boolean    _closed    _defaultState    _mayBeLeaf    defaultState    state    Set    _namesToWrap    namesToWrap    XmlReadContext    _parsingContext    ctxt    parent    XmlTokenStream    _xmlTokens    IOContext    _ioContext    ctxt    JsonToken    _nextToken    t    String    DEFAULT_UNNAMED_TEXT_PROPERTY    _cfgNameForTextElement    _currText    name    ObjectCodec    _objectCodec    c    codec    ByteArrayBuilder    _byteArrayBuilder    int    _formatFeatures    _mask    flags    genericParserFeatures    mask    token    values    xmlFeatures        	jacksonxml_493_FromXmlParser_1_1	542	1	src/main/java/com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java
716	[PATCH]    if    (sr.getEventType()    !=    XMLStreamConstants.START_ELEMENT)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException:    Unrecognized    field       "   "    (class    com.fasterxml.jackson.dataformat.xml.XmlTestBase$NameBean),    not    marked    as    ignorable    (3    known    properties:       "first   ",       "last   ",       "age   "])    testSimpleRead    [CONTEXT]    public    FromXmlParser    createParser(XMLStreamReader    sr)    throws    IOException    {        [BUGGY]    if    (true)    {    try    {    sr    =    _initializeXmlReader(sr);    }    catch    (XMLStreamException    e)    {    return    StaxUtil.throwXmlAsIOException(e);    }    }        FromXmlParser    xp    =    new    FromXmlParser(_createContext(sr,    false),    _generatorFeatures,    _xmlGeneratorFeatures,    _objectCodec,    sr);    [CLASS]        XmlFactory    [METHOD]    createParser    [RETURN_TYPE]    FromXmlParser        XMLStreamReader    sr    [VARIABLES]    XMLOutputFactory    _xmlOutputFactory    f    outf    xmlOut    XMLStreamReader    sr    boolean    XMLStreamException    e    byte    BYTE_D    BYTE_EXCL    BYTE_HYPHEN    BYTE_LT    BYTE_QMARK    BYTE_l    BYTE_m    BYTE_x    UTF8_BOM_1    UTF8_BOM_2    UTF8_BOM_3    FromXmlParser    xp    String    FORMAT_NAME_XML    _cfgNameForTextElement    _jdkXmlInFactory    _jdkXmlOutFactory    content    name    nameForTextElem    long    serialVersionUID    int    DEFAULT_XML_GENERATOR_FEATURE_FLAGS    DEFAULT_XML_PARSER_FEATURE_FLAGS    _xmlGeneratorFeatures    _xmlParserFeatures    xgFeatures    xpFeatures    XMLInputFactory    _xmlInputFactory    f    inf    xmlIn        	jacksonxml_169_XmlFactory_1_1	489	1	src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java
717	[PATCH]    if    (i    ==    attrCount    &&    !(isAttribute    &&    isUnwrappingSerializer()))    {	[BUG]    [BUGGY]    if    (i    ==    attrCount    &&    !(isAttribute    ==    isUnwrappingSerializer()))    {    [FE]    junit.framework.ComparisonFailure:    expected:<...t><NameBean    age=   "13   "[><first>Grizabella</first><last>Glamour</last></NameBean><NameBean    age=   "17   "><first>Growl</first><last>Tiger</last></NameBean]></root>>    but    was:<...t><NameBean    age=   "13   "[    first=   "Grizabella   "    last=   "Glamour   "/><NameBean    age=   "17   "    first=   "Growl   "    last=   "Tiger   "/]></root>>    testSimple    [CONTEXT]    }    final    int    textIndex    =    _textPropertyIndex;    final    QName[]    xmlNames    =    _xmlNames;    int    i    =    0;    final    BitSet    cdata    =    _cdata;    try    {    for    (final    int    len    =    props.length;    i    <    len;    ++i)    {            [BUGGY]    if    (i    ==    attrCount    &&    !(isAttribute    ==    isUnwrappingSerializer()))    {    xgen.setNextIsAttribute(false);    }        if    (i    ==    textIndex)    {    xgen.setNextIsUnwrapped(true);    }    xgen.setNextName(xmlNames[i]);    BeanPropertyWriter    prop    =    props[i];    if    (prop    !=    null)    {    if    ((cdata    !=    null)    &&    cdata.get(i))    {    [CLASS]        XmlBeanSerializerBase    [METHOD]    serializeFields    [RETURN_TYPE]    void        Object    bean    JsonGenerator    gen0    SerializerProvider    provider    [VARIABLES]    QName[]    _xmlNames    xmlNames    BitSet    _cdata    cdata    String    KEY_XML_INFO    name    ns    BeanPropertyWriter[]    props    int    _attributeCount    _textPropertyIndex    attrCount    i    len    textIndex    Exception    e    boolean    isAttribute    JsonMappingException    mapE    ToXmlGenerator    xgen    JsonGenerator    gen0    Object    bean    SerializerProvider    provider    BeanPropertyWriter    prop    StackOverflowError    e        	jacksonxml_1711_XmlBeanSerializerBase_1_1	187	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerBase.java
718	[PATCH]    if    (name    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    No    serializer    found    for    class    com.fasterxml.jackson.dataformat.xml.misc.TextValueTest$TextOnlyBean    and    no    properties    discovered    to    create    BeanSerializer    (to    avoid    exception,    disable    SerializationFeature.FAIL_ON_EMPTY_BEANS)    )    (through    reference    chain:    com.fasterxml.jackson.dataformat.xml.misc.TextOnlyWrapper[   "a   "])    testTextOnlyPojo    [CONTEXT]    public    PropertyName    findNameForSerialization(Annotated    a)    {    PropertyName    name    =    _findXmlName(a);    [BUGGY]    if    (false)    {    name    =    super.findNameForSerialization(a);    if    (name    ==    null)    {    if    (a.hasAnnotation(JacksonXmlText.class))    {    return    PropertyName.USE_DEFAULT;    }    }    }    return    name;    }    [CLASS]        JacksonXmlAnnotationIntrospector    [METHOD]    findNameForSerialization    [RETURN_TYPE]    PropertyName        Annotated    a    [VARIABLES]    Annotated    a    PropertyName    name    boolean    DEFAULT_USE_WRAPPER    _cfgDefaultUseWrapper    b    defaultUseWrapper    long    serialVersionUID        	jacksonxml_43_JacksonXmlAnnotationIntrospector_1_1	151	1	src/main/java/com/fasterxml/jackson/dataformat/xml/JacksonXmlAnnotationIntrospector.java
719	[PATCH]    if    (typeIdPropName    ==    null    ||    typeIdPropName.length()    ==    0)    {	[BUG]    [BUGGY]    if    (typeIdPropName    ==    null    ||    typeIdPropName.length()    ==    1)    {    [FE]    junit.framework.ComparisonFailure:    expected:<...peWithClassProperty    [_class]=   "com.fasterxml.jack...>    but    was:<...peWithClassProperty    []=   "com.fasterxml.jack...>    testAsClassProperty    [CONTEXT]    public    StdTypeResolverBuilder    typeProperty(String    typeIdPropName)    {        [BUGGY]    if    (typeIdPropName    ==    null    ||    typeIdPropName.length()    ==    1)    {    typeIdPropName    =    _idType.getDefaultPropertyName();    }    _typeProperty    =    StaxUtil.sanitizeXmlTypeName(typeIdPropName);    return    this;    }    [CLASS]        XmlTypeResolverBuilder    XmlClassNameIdResolver    XmlMinimalClassNameIdResolver    [METHOD]    typeProperty    [RETURN_TYPE]    StdTypeResolverBuilder        String    typeIdPropName    [VARIABLES]    boolean    String    typeIdPropName        	jacksonxml_1485_XmlTypeResolverBuilder_1_1	37	1	src/main/java/com/fasterxml/jackson/dataformat/xml/XmlTypeResolverBuilder.java
720	[PATCH]    if    (moveBy    >    0)    {	[BUG]    [BUGGY]    if    (moveBy    >    1)    {    [FE]    junit.framework.ComparisonFailure:    expected:<<problem    [id=   "x   "><description>Stuff</description]></problem>>    but    was:<<problem    [description=   "Stuff   "><id>x</id]></problem>>    testAttributeAndElement    [CONTEXT]    for    (int    i    =    0,    len    =    properties.length;    i    <    len;    ++i)    {    BeanPropertyWriter    bpw    =    properties[i];    if    (!_isAttribute(bpw))    {    continue;    }        int    moveBy    =    i    -    attrCount;    [BUGGY]    if    (moveBy    >    1)    {    System.arraycopy(properties,    attrCount,    properties,    attrCount    +    1,    moveBy);    properties[attrCount]    =    bpw;    if    (filteredProperties    !=    null)    {    BeanPropertyWriter    fbpw    =    filteredProperties[i];    System.arraycopy(filteredProperties,    attrCount,    filteredProperties,    attrCount+1,    moveBy);    filteredProperties[attrCount]    =    fbpw;    }    }    ++attrCount;    }    [CLASS]        XmlBeanSerializerBase    [METHOD]    _orderAttributesFirst    [RETURN_TYPE]    int        BeanPropertyWriter[]    properties    BeanPropertyWriter[]    filteredProperties    [VARIABLES]    QName[]    _xmlNames    xmlNames    boolean    BitSet    _cdata    cdata    String    KEY_XML_INFO    name    ns    BeanPropertyWriter[]    filteredProperties    properties    BeanPropertyWriter    bpw    fbpw    int    _attributeCount    _textPropertyIndex    attrCount    i    len    moveBy    textIndex        	jacksonxml_1869_XmlBeanSerializerBase_1_1	382	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerBase.java
721	[PATCH]    for    (int    i    =    0,    len    =    _props.length;    i    <    len;    ++i)    {	[BUG]    [BUGGY]    for    (int    i    =    1,    len    =    _props.length;    i    <    len;    ++i)    {    [FE]    junit.framework.ComparisonFailure:    expected:<<TextOnlyWrapper><a>[foo</a><b>bar]</b></TextOnlyWrappe...>    but    was:<<TextOnlyWrapper><a>[<textValue>foo</textValue></a><b><textValue>bar</textValue>]</b></TextOnlyWrappe...>    testTextOnlyPojo    [CONTEXT]    cdata    =    new    BitSet(len);    }    cdata.set(i);    }    }    _cdata    =    cdata;        _xmlNames    =    new    QName[_props.length];    int    textIndex    =    -1;    [BUGGY]    for    (int    i    =    1,    len    =    _props.length;    i    <    len;    ++i)    {    BeanPropertyWriter    bpw    =    _props[i];    XmlInfo    info    =    (XmlInfo)    bpw.getInternalSetting(KEY_XML_INFO);    String    ns    =    null;    if    (info    !=    null)    {    ns    =    info.getNamespace();    if    (textIndex    <    0    &&    info.isText())    {    textIndex    =    i;    }    }    _xmlNames[i]    =    new    QName((ns    ==    null)    ?       "   "    :    ns,    bpw.getName());    [CLASS]        XmlBeanSerializerBase    [METHOD]    <init>    [RETURN_TYPE]    BeanSerializerBase)        BeanSerializerBase    src    [VARIABLES]    QName[]    _xmlNames    boolean    BeanSerializerBase    src    BitSet    _cdata    cdata    String    KEY_XML_INFO    ns    XmlInfo    info    BeanPropertyWriter    bpw    int    _attributeCount    _textPropertyIndex    attrCount    i    len    textIndex        	jacksonxml_1670_XmlBeanSerializerBase_1_1	93	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerBase.java
722	[PATCH]    if    (_currentState    !=    XML_ATTRIBUTE_NAME    ||    _nextAttributeIndex    !=    0)    {	[BUG]    [BUGGY]    if    (_currentState    !=    XML_ATTRIBUTE_NAME    ||    _nextAttributeIndex    !=    -1)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Can    not    deserialize    instance    of    java.lang.String    out    of    START_OBJECT    token    testStringArrayWithAttribute    [CONTEXT]    {        [BUGGY]    if    (_currentState    !=    XML_ATTRIBUTE_NAME    ||    _nextAttributeIndex    !=    -1)    {    return    null;    }    try    {    String    text    =    _collectUntilTag();            if    (_xmlReader.getEventType()    ==    XMLStreamReader.END_ELEMENT)    {    if    (text    ==    null)    {    text    =       "   ";    }    [CLASS]        XmlTokenStream    [METHOD]    convertToString    [RETURN_TYPE]    String        [VARIABLES]    boolean    XMLStreamException    e    ElementWrapper    _currentWrapper    XMLStreamReader2    _xmlReader    Object    _sourceReference    sourceRef    String    _localName    _namespaceURI    _nextLocalName    _nextNamespaceURI    _textValue    text    int    REPLAY_END    REPLAY_START_DELAYED    REPLAY_START_DUP    XML_ATTRIBUTE_NAME    XML_ATTRIBUTE_VALUE    XML_END    XML_END_ELEMENT    XML_START_ELEMENT    XML_TEXT    _attributeCount    _currentState    _nextAttributeIndex    _repeatElement    type        	jacksonxml_1178_XmlTokenStream_1_1	268	1	src/main/java/com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream.java
723	[PATCH]    sb.replace(ix,    ix+1,       "..   ");	[BUG]    [BUGGY]    sb.replace(ix,    ix    *    1,       "..   ");    [FE]    junit.framework.ComparisonFailure:    expected:<...lymorphicTypesTest..[]SubTypeWithClassProp...>    but    was:<...lymorphicTypesTest..[$]SubTypeWithClassProp...>    testAsClassProperty    [CONTEXT]    protected    static    String    encodeXmlClassName(String    className)    {                int    ix    =    className.lastIndexOf('$');    if    (ix    >=    0)    {    StringBuilder    sb    =    new    StringBuilder(className);    do    {    [BUGGY]    sb.replace(ix,    ix    *    1,       "..   ");    ix    =    className.lastIndexOf('$',    ix-1);    }    while    (ix    >=    0);    className    =    sb.toString();    }    return    className;    }    [CLASS]        XmlTypeResolverBuilder    XmlClassNameIdResolver    XmlMinimalClassNameIdResolver    [METHOD]    encodeXmlClassName    [RETURN_TYPE]    String        String    className    [VARIABLES]    boolean    StringBuilder    sb    String    className    int    ix        	jacksonxml_1505_XmlTypeResolverBuilder_1_1	83	1	src/main/java/com/fasterxml/jackson/dataformat/xml/XmlTypeResolverBuilder.java
724	[PATCH]    if    (!(ch    ==    '    '    ||    ch    ==    '\r'    ||    ch    ==    '\n'    ||    ch    ==    '\t'))    {	[BUG]    [BUGGY]    if    (!(true    ||    ch    ==    '\n'    ||    ch    ==    '\t'))    {    [FE]    junit.framework.AssertionFailedError    testSimpleValidComment    [CONTEXT]    private    final    static    int    skipSpace(InputAccessor    acc,    byte    b)    throws    IOException    {    while    (true)    {    int    ch    =    (int)    b    &    0xFF;    [BUGGY]    if    (!(true    ||    ch    ==    '\n'    ||    ch    ==    '\t'))    {    return    ch;    }    if    (!acc.hasMoreBytes())    {    return    -1;    }    b    =    acc.nextByte();    ch    =    (int)    b    &    0xFF;    }    }    [CLASS]        XmlFactory    [METHOD]    skipSpace    [RETURN_TYPE]    int        InputAccessor    acc    byte    b    [VARIABLES]    XMLOutputFactory    _xmlOutputFactory    f    outf    xmlOut    boolean    byte    BYTE_D    BYTE_EXCL    BYTE_HYPHEN    BYTE_LT    BYTE_QMARK    BYTE_l    BYTE_m    BYTE_x    UTF8_BOM_1    UTF8_BOM_2    UTF8_BOM_3    b    String    FORMAT_NAME_XML    _cfgNameForTextElement    _jdkXmlInFactory    _jdkXmlOutFactory    content    matchStr    name    nameForTextElem    InputAccessor    acc    long    serialVersionUID    int    DEFAULT_XML_GENERATOR_FEATURE_FLAGS    DEFAULT_XML_PARSER_FEATURE_FLAGS    _xmlGeneratorFeatures    _xmlParserFeatures    ch    i    len    offset    xgFeatures    xpFeatures    XMLInputFactory    _xmlInputFactory    f    inf    xmlIn        	jacksonxml_302_XmlFactory_1_1	804	1	src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java
725	[PATCH]    if    (_justHadStartElement)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Can    not    instantiate    value    of    type    [simple    type,    class    com.fasterxml.jackson.dataformat.xml.misc.EmptyPolymorphicTest$EmptyProxy]    from    String    value    ('    testEmpty    [CONTEXT]    public    void    writeEndObject(JsonGenerator    gen,    int    nrOfEntries)    throws    IOException    {    if    (!_objectIndenter.isInline())    {    --_nesting;    }        [BUGGY]    if    (false)    {    _justHadStartElement    =    false;    }    else    {    _objectIndenter.writeIndentation(gen,    _nesting);    }    ((ToXmlGenerator)    gen)._handleEndObject();    }    [CLASS]        DefaultXmlPrettyPrinter    NopIndenter    FixedSpaceIndenter    Lf2SpacesIndenter    [METHOD]    writeEndObject    [RETURN_TYPE]    void        JsonGenerator    gen    int    nrOfEntries    [VARIABLES]    Indenter    _arrayIndenter    _objectIndenter    i    boolean    _justHadStartElement    _spacesInObjectEntries    b    JsonGenerator    gen    String    SYSTEM_LINE_SEPARATOR    long    serialVersionUID    int    SPACE_COUNT    _nesting    level    nrOfEntries    nrOfValues    char[]    SPACES        	jacksonxml_1330_DefaultXmlPrettyPrinter_1_1	212	1	src/main/java/com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter.java
726	[PATCH]    if    (ns    ==    null    ||    ns.length()    ==    0)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError:    Expected    XML    to    begin    with    '<person    xmlns=',    instead    got:    <person><wstxns1:name    xmlns:wstxns1=   "http://example.org/person   ">hello</wstxns1:name></person>    testRootNamespace    [CONTEXT]    ns    =    root.getNamespace();    }        if    (localName    ==    null    ||    localName.length()    ==    0)    {            localName    =    StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());    return    new    QName(   "   ",    localName);    }        [BUGGY]    if    (true)    {    ns    =    findNamespace(intr,    ac);    }    if    (ns    ==    null)    {    ns    =       "   ";    }    return    new    QName(ns,    localName);    }    [CLASS]        XmlRootNameLookup    [METHOD]    _findRootName    [RETURN_TYPE]    QName        Class<?>    rootType    MapperConfig<?>    config    [VARIABLES]    PropertyName    root    boolean    AnnotatedClass    ac    LRUMap    _rootNames    BeanDescription    beanDesc    AnnotationIntrospector    intr    MapperConfig    config    Class    rootType    String    localName    ns    long    serialVersionUID        	jacksonxml_2075_XmlRootNameLookup_1_1	84	1	src/main/java/com/fasterxml/jackson/dataformat/xml/util/XmlRootNameLookup.java
727	[PATCH]    if    (_xmlReader.getEventType()    ==    XMLStreamReader.START_ELEMENT)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.NullPointerException    testRoundtrip    [CONTEXT]    case    XML_START_ELEMENT:    if    (_nextAttributeIndex    <    _attributeCount)    {    _localName    =    _xmlReader.getAttributeLocalName(_nextAttributeIndex);    _namespaceURI    =    _xmlReader.getAttributeNamespace(_nextAttributeIndex);    _textValue    =    _xmlReader.getAttributeValue(_nextAttributeIndex);    return    (_currentState    =    XML_ATTRIBUTE_NAME);    }        String    text    =    _collectUntilTag();        [BUGGY]    if    (false)    {    return    _initStartElement();    }        if    (text    !=    null)    {    _textValue    =    text;    return    (_currentState    =    XML_TEXT);    }    return    _handleEndElement();    case    XML_ATTRIBUTE_NAME:        [CLASS]        XmlTokenStream    [METHOD]    _next    [RETURN_TYPE]    int        [VARIABLES]    XMLStreamReader2    _xmlReader    Object    _sourceReference    sourceRef    String    _localName    _namespaceURI    _nextLocalName    _nextNamespaceURI    _textValue    text    boolean    int    REPLAY_END    REPLAY_START_DELAYED    REPLAY_START_DUP    XML_ATTRIBUTE_NAME    XML_ATTRIBUTE_VALUE    XML_END    XML_END_ELEMENT    XML_START_ELEMENT    XML_TEXT    _attributeCount    _currentState    _nextAttributeIndex    _repeatElement    type    ElementWrapper    _currentWrapper        	jacksonxml_1210_XmlTokenStream_1_1	319	1	src/main/java/com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream.java
728	[PATCH]    if    (f.enabledByDefault())    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.ComparisonFailure:    expected:<<[]NonNullBean><name>Bo...>    but    was:<<[?xml    version='1.1'    encoding='UTF-8'?><]NonNullBean><name>Bo...>    testNullSuppression    [CONTEXT]    public    static    int    collectDefaults()    {    int    flags    =    0;    for    (Feature    f    :    values())    {    [BUGGY]    if    (true)    {    flags    |=    f.getMask();    }    }    return    flags;    }    [CLASS]        ToXmlGenerator    Feature    [METHOD]    collectDefaults    [RETURN_TYPE]    int        [VARIABLES]    XMLStreamWriter2    _xmlWriter    boolean    _defaultState    _initialized    _nextIsAttribute    _nextIsCData    _nextIsUnwrapped    _stax2Emulation    defaultState    XMLStreamWriter    _originalXmlWriter    sw    QName    _nextName    IOContext    _ioContext    ctxt    XmlPrettyPrinter    _xmlPrettyPrinter    String    DEFAULT_UNKNOWN_ELEMENT    Feature    WRITE_XML_1_1    WRITE_XML_DECLARATION    f    int    _formatFeatures    _mask    flags    stdFeatures    xmlFeatures    LinkedList    _elementNameStack        	jacksonxml_674_ToXmlGenerator_1_1	73	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java
729	[PATCH]    if    (localName    ==    null    ||    localName.length()    ==    0)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.ComparisonFailure:    expected:<<Wrapper><Point[s><Point><x>1</x><y>2</y></Point></Points]></Wrapper>>    but    was:<<Wrapper><Point[><Point><x>1</x><y>2</y></Point></Point]></Wrapper>>    testAnnotationSharing    [CONTEXT]    public    PropertyName    findWrapperName(Annotated    ann)    {    JacksonXmlElementWrapper    w    =    ann.getAnnotation(JacksonXmlElementWrapper.class);    if    (w    !=    null)    {        if    (!w.useWrapping())    {    return    PropertyName.NO_NAME;    }        String    localName    =    w.localName();    [BUGGY]    if    (true)    {    return    PropertyName.USE_DEFAULT;    }    return    PropertyName.construct(w.localName(),    w.namespace());    }                if    (_cfgDefaultUseWrapper)    {    return    PropertyName.USE_DEFAULT;    }    [CLASS]        JacksonXmlAnnotationIntrospector    [METHOD]    findWrapperName    [RETURN_TYPE]    PropertyName        Annotated    ann    [VARIABLES]    Annotated    ann    boolean    DEFAULT_USE_WRAPPER    _cfgDefaultUseWrapper    defaultUseWrapper    String    localName    JacksonXmlElementWrapper    w    long    serialVersionUID        	jacksonxml_14_JacksonXmlAnnotationIntrospector_1_1	55	1	src/main/java/com/fasterxml/jackson/dataformat/xml/JacksonXmlAnnotationIntrospector.java
730	[PATCH]    _mayBeLeaf    =    true;	[BUG]    [BUGGY]    _mayBeLeaf    =    false;    [FE]    com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException:    Unrecognized    field       "player   "    (class    com.fasterxml.jackson.dataformat.xml.MediaItem),    not    marked    as    ignorable    (2    known    properties:       "images   ",       "content   "])    testRoundtrip    [CONTEXT]        while    (token    ==    XmlTokenStream.XML_START_ELEMENT)    {    if    (_mayBeLeaf)    {    _nextToken    =    JsonToken.FIELD_NAME;    _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    _currToken    =    JsonToken.START_OBJECT;    return    null;    }    if    (_parsingContext.inArray())    {    token    =    _xmlTokens.next();    [BUGGY]    _mayBeLeaf    =    false;    continue;    }    String    name    =    _xmlTokens.getLocalName();    _parsingContext.setCurrentName(name);    if    (_namesToWrap    !=    null    &&    _namesToWrap.contains(name))    {    _xmlTokens.repeatStartElement();    }    _mayBeLeaf    =    true;    _currToken    =    JsonToken.FIELD_NAME;    return    null;    [CLASS]        FromXmlParser    Feature    [METHOD]    nextTextValue    [RETURN_TYPE]    String        [VARIABLES]    byte[]    _binaryValue    boolean    _closed    _defaultState    _mayBeLeaf    defaultState    state    Set    _namesToWrap    namesToWrap    XmlReadContext    _parsingContext    ctxt    parent    XmlTokenStream    _xmlTokens    IOContext    _ioContext    ctxt    JsonToken    _nextToken    t    String    DEFAULT_UNNAMED_TEXT_PROPERTY    _cfgNameForTextElement    _currText    name    ObjectCodec    _objectCodec    c    codec    ByteArrayBuilder    _byteArrayBuilder    int    _formatFeatures    _mask    flags    genericParserFeatures    mask    token    values    xmlFeatures        	jacksonxml_543_FromXmlParser_1_1	623	1	src/main/java/com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java
731	[PATCH]    if    (_elementNameStack.isEmpty()    &&    (_xmlPrettyPrinter    !=    null))    {	[BUG]    [BUGGY]    if    ((_xmlPrettyPrinter    !=    null))    {    [FE]    junit.framework.ComparisonFailure:    expected:<...pe>    testMultiLevel172    [CONTEXT]        if    (_elementNameStack.isEmpty())    {    throw    new    JsonGenerationException(   "Can    not    write    END_ELEMENT    without    open    START_ELEMENT   ");    }    _nextName    =    _elementNameStack.removeLast();    try    {        _nextIsAttribute    =    false;    _xmlWriter.writeEndElement();        [BUGGY]    if    ((_xmlPrettyPrinter    !=    null))    {        if    (!_stax2Emulation)    {    _xmlPrettyPrinter.writePrologLinefeed(_xmlWriter);    }    }    }    catch    (XMLStreamException    e)    {    StaxUtil.throwXmlAsIOException(e);    }    }    [CLASS]        ToXmlGenerator    Feature    [METHOD]    _handleEndObject    [RETURN_TYPE]    void        [VARIABLES]    XMLStreamWriter2    _xmlWriter    boolean    _defaultState    _initialized    _nextIsAttribute    _nextIsCData    _nextIsUnwrapped    _stax2Emulation    defaultState    isAttribute    isCData    isUnwrapped    state    XMLStreamException    e    XMLStreamWriter    _originalXmlWriter    sw    QName    _nextName    name    wrappedName    wrapperName    IOContext    _ioContext    ctxt    XmlPrettyPrinter    _xmlPrettyPrinter    String    DEFAULT_UNKNOWN_ELEMENT    fieldName    name    ns    value    Feature    WRITE_XML_1_1    WRITE_XML_DECLARATION    f    int    _formatFeatures    _mask    count    flags    mask    newF    oldF    stdFeatures    values    xmlFeatures    LinkedList    _elementNameStack        	jacksonxml_812_ToXmlGenerator_1_1	546	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java
732	[PATCH]    int    moveBy    =    i    -    attrCount;	[BUG]    [BUGGY]    int    moveBy    =    i    *    attrCount;    [FE]    junit.framework.ComparisonFailure:    expected:<<root><NameBean    [age=   "13   "><first>Grizabella</first><last>Glamour</last></NameBean><NameBean    age=   "17   "><first>Growl</first><last>Tiger</last]></NameBean></root>>    but    was:<<root><NameBean    [first=   "Grizabella   "><last>Glamour</last><age>13</age></NameBean><NameBean    first=   "Growl   "><last>Tiger</last><age>17</age]></NameBean></root>>    testSimple    [CONTEXT]    int    attrCount    =    0;    for    (int    i    =    0,    len    =    properties.length;    i    <    len;    ++i)    {    BeanPropertyWriter    bpw    =    properties[i];    if    (!_isAttribute(bpw))    {    continue;    }            [BUGGY]    int    moveBy    =    i    *    attrCount;    if    (moveBy    >    0)    {    System.arraycopy(properties,    attrCount,    properties,    attrCount    +    1,    moveBy);    properties[attrCount]    =    bpw;    if    (filteredProperties    !=    null)    {    BeanPropertyWriter    fbpw    =    filteredProperties[i];    System.arraycopy(filteredProperties,    attrCount,    filteredProperties,    attrCount+1,    moveBy);    filteredProperties[attrCount]    =    fbpw;    }    }    ++attrCount;    [CLASS]        XmlBeanSerializerBase    [METHOD]    _orderAttributesFirst    [RETURN_TYPE]    int        BeanPropertyWriter[]    properties    BeanPropertyWriter[]    filteredProperties    [VARIABLES]    QName[]    _xmlNames    xmlNames    boolean    BitSet    _cdata    cdata    String    KEY_XML_INFO    name    ns    BeanPropertyWriter[]    filteredProperties    properties    BeanPropertyWriter    bpw    fbpw    int    _attributeCount    _textPropertyIndex    attrCount    i    len    moveBy    textIndex        	jacksonxml_1866_XmlBeanSerializerBase_1_1	381	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerBase.java
733	[PATCH]    if    (b    ==    BYTE_QMARK)    {    //    <?	[BUG]    [BUGGY]    if    (b    <=    BYTE_QMARK)    {    //    <?    [FE]    junit.framework.AssertionFailedError    testSimpleValidComment    [CONTEXT]        if    (b    !=    BYTE_LT)    {    return    MatchStrength.NO_MATCH;    }    }    if    (!acc.hasMoreBytes())    {    return    MatchStrength.INCONCLUSIVE;    }    b    =    acc.nextByte();        [BUGGY]    if    (b    <=    BYTE_QMARK)    {    b    =    acc.nextByte();    if    (b    ==    BYTE_x)    {    if    (maybeXmlDecl)    {    if    (acc.hasMoreBytes()    &&    acc.nextByte()    ==    BYTE_m)    {    if    (acc.hasMoreBytes()    &&    acc.nextByte()    ==    BYTE_l)    {    return    MatchStrength.FULL_MATCH;    }    }    }        [CLASS]        XmlFactory    [METHOD]    hasXMLFormat    [RETURN_TYPE]    MatchStrength        InputAccessor    acc    [VARIABLES]    XMLOutputFactory    _xmlOutputFactory    f    outf    xmlOut    boolean    maybeXmlDecl    byte    BYTE_D    BYTE_EXCL    BYTE_HYPHEN    BYTE_LT    BYTE_QMARK    BYTE_l    BYTE_m    BYTE_x    UTF8_BOM_1    UTF8_BOM_2    UTF8_BOM_3    b    String    FORMAT_NAME_XML    _cfgNameForTextElement    _jdkXmlInFactory    _jdkXmlOutFactory    content    name    nameForTextElem    InputAccessor    acc    long    serialVersionUID    int    DEFAULT_XML_GENERATOR_FEATURE_FLAGS    DEFAULT_XML_PARSER_FEATURE_FLAGS    _xmlGeneratorFeatures    _xmlParserFeatures    ch    len    offset    xgFeatures    xpFeatures    XMLInputFactory    _xmlInputFactory    f    inf    xmlIn        	jacksonxml_226_XmlFactory_1_1	728	1	src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java
734	[PATCH]    if    ((cdata    !=    null)    &&    cdata.get(i))    {	[BUG]    [BUGGY]    if    ((cdata    !=    null)    ==    cdata.get(i))    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    (was    java.lang.NullPointerException)    (through    reference    chain:    com.fasterxml.jackson.dataformat.xml.deser.Issue44Bean[   "first   "])    testIssue44    [CONTEXT]    if    (i    ==    attrCount    &&    !(isAttribute    &&    isUnwrappingSerializer()))    {    xgen.setNextIsAttribute(false);    }        if    (i    ==    textIndex)    {    xgen.setNextIsUnwrapped(true);    }    xgen.setNextName(xmlNames[i]);    BeanPropertyWriter    prop    =    props[i];    if    (prop    !=    null)    {        [BUGGY]    if    ((cdata    !=    null)    ==    cdata.get(i))    {    xgen.setNextIsCData(true);    filter.serializeAsField(bean,    xgen,    provider,    prop);    xgen.setNextIsCData(false);    }    else    {    filter.serializeAsField(bean,    xgen,    provider,    prop);    }    }    }    if    (_anyGetterWriter    !=    null)    {        [CLASS]        XmlBeanSerializerBase    [METHOD]    serializeFieldsFiltered    [RETURN_TYPE]    void        Object    bean    JsonGenerator    gen0    SerializerProvider    provider    [VARIABLES]    QName[]    _xmlNames    xmlNames    BitSet    _cdata    cdata    String    KEY_XML_INFO    name    ns    BeanPropertyWriter[]    props    int    _attributeCount    _textPropertyIndex    attrCount    i    len    textIndex    Exception    e    boolean    isAttribute    JsonMappingException    mapE    ToXmlGenerator    xgen    JsonGenerator    gen0    Object    bean    PropertyFilter    filter    SerializerProvider    provider    BeanPropertyWriter    prop    StackOverflowError    e        	jacksonxml_1798_XmlBeanSerializerBase_1_1	279	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerBase.java
735	[PATCH]    int    attrCount    =    0;	[BUG]    [BUGGY]    int    attrCount    =    1;    [FE]    junit.framework.ComparisonFailure:    expected:<...ue44Bean    first=   "abc   "[><second>13</second></Issue44Bean]>>    but    was:<...ue44Bean    first=   "abc   "[    second=   "13   "/]>>    testIssue44    [CONTEXT]    {    [BUGGY]    int    attrCount    =    1;    for    (int    i    =    0,    len    =    properties.length;    i    <    len;    ++i)    {    BeanPropertyWriter    bpw    =    properties[i];    if    (!_isAttribute(bpw))    {    continue;    }        int    moveBy    =    i    -    attrCount;    [CLASS]        XmlBeanSerializerBase    [METHOD]    _orderAttributesFirst    [RETURN_TYPE]    int        BeanPropertyWriter[]    properties    BeanPropertyWriter[]    filteredProperties    [VARIABLES]    QName[]    _xmlNames    xmlNames    boolean    BitSet    _cdata    cdata    String    KEY_XML_INFO    name    ns    BeanPropertyWriter[]    filteredProperties    properties    BeanPropertyWriter    bpw    fbpw    int    _attributeCount    _textPropertyIndex    attrCount    i    len    moveBy    textIndex        	jacksonxml_1856_XmlBeanSerializerBase_1_1	371	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerBase.java
736	[PATCH]    @Override    public    boolean    enabledIn(int    flags)    {    return    (flags    &    getMask())    !=    0;    }	[BUG]    [BUGGY]    @Override    public    boolean    enabledIn(int    flags)    {    return    (flags    &    getMask())    !=    1;    }    [FE]    junit.framework.ComparisonFailure:    expected:<<[]NonNullBean><name>Bo...>    but    was:<<[?xml    version='1.1'    encoding='UTF-8'?><]NonNullBean><name>Bo...>    testNullSuppression    [CONTEXT]    @Override    public    boolean    enabledByDefault()    {    return    _defaultState;    }    [CLASS]        ToXmlGenerator    Feature    [METHOD]    enabledByDefault    [RETURN_TYPE]    boolean        [VARIABLES]    XMLStreamWriter2    _xmlWriter    boolean    _defaultState    _initialized    _nextIsAttribute    _nextIsCData    _nextIsUnwrapped    _stax2Emulation    defaultState    XMLStreamWriter    _originalXmlWriter    sw    QName    _nextName    IOContext    _ioContext    ctxt    XmlPrettyPrinter    _xmlPrettyPrinter    String    DEFAULT_UNKNOWN_ELEMENT    Feature    WRITE_XML_1_1    WRITE_XML_DECLARATION    f    int    _formatFeatures    _mask    flags    stdFeatures    xmlFeatures    LinkedList    _elementNameStack        	jacksonxml_682_ToXmlGenerator_1_1	87	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java
737	[PATCH]    if    ((cdata    !=    null)    &&    cdata.get(i))    {	[BUG]    [BUGGY]    if    ((true)    &&    cdata.get(i))    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    (was    java.lang.NullPointerException)    (through    reference    chain:    com.fasterxml.jackson.dataformat.xml.MediaItem[   "content   "])    testRoundtrip    [CONTEXT]    if    (i    ==    attrCount    &&    !(isAttribute    &&    isUnwrappingSerializer()))    {    xgen.setNextIsAttribute(false);    }        if    (i    ==    textIndex)    {    xgen.setNextIsUnwrapped(true);    }    xgen.setNextName(xmlNames[i]);    BeanPropertyWriter    prop    =    props[i];    if    (prop    !=    null)    {        [BUGGY]    if    ((true)    &&    cdata.get(i))    {    xgen.setNextIsCData(true);    prop.serializeAsField(bean,    xgen,    provider);    xgen.setNextIsCData(false);    }    else    {    prop.serializeAsField(bean,    xgen,    provider);    }    }            if    (i    ==    textIndex)    {    [CLASS]        XmlBeanSerializerBase    [METHOD]    serializeFields    [RETURN_TYPE]    void        Object    bean    JsonGenerator    gen0    SerializerProvider    provider    [VARIABLES]    QName[]    _xmlNames    xmlNames    BitSet    _cdata    cdata    String    KEY_XML_INFO    name    ns    BeanPropertyWriter[]    props    int    _attributeCount    _textPropertyIndex    attrCount    i    len    textIndex    Exception    e    boolean    isAttribute    JsonMappingException    mapE    ToXmlGenerator    xgen    JsonGenerator    gen0    Object    bean    SerializerProvider    provider    BeanPropertyWriter    prop    StackOverflowError    e        	jacksonxml_1728_XmlBeanSerializerBase_1_1	197	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerBase.java
738	[PATCH]    if    (_mayBeLeaf)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.ComparisonFailure:    expected:<[content]>    but    was:<[]>    testRoundtrip    [CONTEXT]    _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    return    (_currToken    =    JsonToken.START_OBJECT);    }    _parsingContext.setCurrentName(_xmlTokens.getLocalName());    return    (_currToken    =    JsonToken.FIELD_NAME);    case    XmlTokenStream.XML_ATTRIBUTE_VALUE:    _currText    =    _xmlTokens.getText();    return    (_currToken    =    JsonToken.VALUE_STRING);    case    XmlTokenStream.XML_TEXT:    _currText    =    _xmlTokens.getText();    [BUGGY]    if    (false)    {    _mayBeLeaf    =    false;                        _xmlTokens.skipEndElement();    if    (_parsingContext.inArray())    {    if    (_isEmpty(_currText))    {        [CLASS]        FromXmlParser    Feature    [METHOD]    nextToken    [RETURN_TYPE]    JsonToken        [VARIABLES]    byte[]    _binaryValue    boolean    _closed    _defaultState    _mayBeLeaf    defaultState    state    Set    _namesToWrap    namesToWrap    XmlReadContext    _parsingContext    ctxt    parent    XmlTokenStream    _xmlTokens    IOContext    _ioContext    ctxt    JsonToken    _nextToken    t    String    DEFAULT_UNNAMED_TEXT_PROPERTY    _cfgNameForTextElement    _currText    name    ObjectCodec    _objectCodec    c    codec    ByteArrayBuilder    _byteArrayBuilder    int    _formatFeatures    _mask    flags    genericParserFeatures    mask    token    values    xmlFeatures        	jacksonxml_492_FromXmlParser_1_1	542	1	src/main/java/com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java
739	[PATCH]    if    (wrapperName    !=    null    &&    wrapperName    !=    PropertyName.NO_NAME)    {	[BUG]    [BUGGY]    if    (wrapperName    !=    PropertyName.NO_NAME)    {    [FE]    java.lang.NullPointerException    testPolyIdList178    [CONTEXT]        BeanPropertyDefinition    newProp    =    prop.withSimpleName(_cfgNameForTextValue);    if    (newProp    !=    prop)    {    propDefs.set(i,    newProp);    }    continue;    }        PropertyName    wrapperName    =    prop.getWrapperName();        [BUGGY]    if    (wrapperName    !=    PropertyName.NO_NAME)    {    String    localName    =    wrapperName.getSimpleName();    if    ((localName    !=    null    &&    localName.length()    >    0)    &&    !localName.equals(prop.getName()))    {        if    (changed    ==    0)    {    propDefs    =    new    ArrayList<BeanPropertyDefinition>(propDefs);    }    ++changed;    propDefs.set(i,    prop.withSimpleName(localName));    continue;    [CLASS]        XmlBeanDeserializerModifier    [METHOD]    updateProperties    [RETURN_TYPE]    List        DeserializationConfig    config    BeanDescription    beanDesc    BeanPropertyDefinition>    propDefs    [VARIABLES]    PropertyName    wrapperName    boolean    BeanDescription    beanDesc    AnnotationIntrospector    intr    BeanPropertyDefinition    newProp    prop    AnnotatedMember    acc    DeserializationConfig    config    List    propDefs    String    _cfgNameForTextValue    localName    nameForTextValue    Boolean    b    long    serialVersionUID    int    changed    i    propCount        	jacksonxml_1584_XmlBeanDeserializerModifier_1_1	62	1	src/main/java/com/fasterxml/jackson/dataformat/xml/deser/XmlBeanDeserializerModifier.java
740	[PATCH]    if    (validXmlNameStartChar(acc,    b))    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError    testSimpleValidPI    [CONTEXT]    if    (acc.hasMoreBytes()    &&    acc.nextByte()    ==    BYTE_m)    {    if    (acc.hasMoreBytes()    &&    acc.nextByte()    ==    BYTE_l)    {    return    MatchStrength.FULL_MATCH;    }    }    }        return    MatchStrength.SOLID_MATCH;    }        [BUGGY]    if    (false)    {    return    MatchStrength.SOLID_MATCH;    }    }    else    if    (b    ==    BYTE_EXCL)    {                if    (!acc.hasMoreBytes())    {    return    MatchStrength.INCONCLUSIVE;    }    b    =    acc.nextByte();    [CLASS]        XmlFactory    [METHOD]    hasXMLFormat    [RETURN_TYPE]    MatchStrength        InputAccessor    acc    [VARIABLES]    XMLOutputFactory    _xmlOutputFactory    f    outf    xmlOut    boolean    maybeXmlDecl    byte    BYTE_D    BYTE_EXCL    BYTE_HYPHEN    BYTE_LT    BYTE_QMARK    BYTE_l    BYTE_m    BYTE_x    UTF8_BOM_1    UTF8_BOM_2    UTF8_BOM_3    b    String    FORMAT_NAME_XML    _cfgNameForTextElement    _jdkXmlInFactory    _jdkXmlOutFactory    content    name    nameForTextElem    InputAccessor    acc    long    serialVersionUID    int    DEFAULT_XML_GENERATOR_FEATURE_FLAGS    DEFAULT_XML_PARSER_FEATURE_FLAGS    _xmlGeneratorFeatures    _xmlParserFeatures    ch    len    offset    xgFeatures    xpFeatures    XMLInputFactory    _xmlInputFactory    f    inf    xmlIn        	jacksonxml_249_XmlFactory_1_1	742	1	src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java
741	[PATCH]    if    (xgen.getOutputContext().inRoot())    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.ComparisonFailure:    expected:<<items><[item><num>13</num></item><item><num>456</num></item]></items>>    but    was:<<items><[Value><num>13</num></Value><Value><num>456</num></Value]></items>>    testIssue54    [CONTEXT]    protected    void    _initWithRootName(ToXmlGenerator    xgen,    QName    rootName)    throws    IOException    {                    if    (!xgen.setNextNameIfMissing(rootName))    {        [BUGGY]    if    (true)    {    xgen.setNextName(rootName);    }    }    xgen.initGenerator();    String    ns    =    rootName.getNamespaceURI();                    if    (ns    !=    null    &&    ns.length()    >    0)    {    [CLASS]        XmlSerializerProvider    [METHOD]    _initWithRootName    [RETURN_TYPE]    void        ToXmlGenerator    xgen    QName    rootName    [VARIABLES]    boolean    XMLStreamException    e    QName    ROOT_NAME_FOR_NULL    rootName    ToXmlGenerator    xgen    XmlRootNameLookup    _rootNameLookup    rootNames    String    ns    long    serialVersionUID        	jacksonxml_2023_XmlSerializerProvider_1_1	222	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java
742	[PATCH]    sb.replace(ix,    ix+2,       "$   ");	[BUG]    [BUGGY]    sb.replace(ix,    ix    %    2,       "$   ");    [FE]    java.lang.StringIndexOutOfBoundsException:    start    >    end    testAsClassProperty    [CONTEXT]    protected    static    String    decodeXmlClassName(String    className)    {    int    ix    =    className.lastIndexOf(   "..   ");    if    (ix    >=    0)    {    StringBuilder    sb    =    new    StringBuilder(className);    do    {    [BUGGY]    sb.replace(ix,    ix    %    2,       "$   ");    ix    =    className.lastIndexOf(   "..   ",    ix-1);    }    while    (ix    >=    0);    className    =    sb.toString();    }    return    className;    }    [CLASS]        XmlTypeResolverBuilder    XmlClassNameIdResolver    XmlMinimalClassNameIdResolver    [METHOD]    decodeXmlClassName    [RETURN_TYPE]    String        String    className    [VARIABLES]    boolean    StringBuilder    sb    String    className    int    ix        	jacksonxml_1529_XmlTypeResolverBuilder_1_1	101	1	src/main/java/com/fasterxml/jackson/dataformat/xml/XmlTypeResolverBuilder.java
743	[PATCH]    if    (_cfgDefaultUseWrapper)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException:    Unrecognized    field       "RecordedAtTime   "    (class    com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedListsTest$VehicleMonitoringDelivery),    not    marked    as    ignorable    (3    known    properties:       "ValidUntil   ",       "VehicleActivity   ",       "ResponseTimestamp   "])    testNested1_2b    [CONTEXT]        String    localName    =    w.localName();    if    (localName    ==    null    ||    localName.length()    ==    0)    {    return    PropertyName.USE_DEFAULT;    }    return    PropertyName.construct(w.localName(),    w.namespace());    }                [BUGGY]    if    (true)    {    return    PropertyName.USE_DEFAULT;    }    return    null;    }    [CLASS]        JacksonXmlAnnotationIntrospector    [METHOD]    findWrapperName    [RETURN_TYPE]    PropertyName        Annotated    ann    [VARIABLES]    Annotated    ann    boolean    DEFAULT_USE_WRAPPER    _cfgDefaultUseWrapper    defaultUseWrapper    String    localName    JacksonXmlElementWrapper    w    long    serialVersionUID        	jacksonxml_16_JacksonXmlAnnotationIntrospector_1_1	63	1	src/main/java/com/fasterxml/jackson/dataformat/xml/JacksonXmlAnnotationIntrospector.java
744	[PATCH]    if    (b    !=    null    &&    b.booleanValue())    {	[BUG]    [BUGGY]    if    (true    &&    b.booleanValue())    {    [FE]    java.lang.NullPointerException    testRoundtrip    [CONTEXT]        if    (acc    ==    null)    {    continue;    }                        Boolean    b    =    AnnotationUtil.findIsTextAnnotation(intr,    acc);    [BUGGY]    if    (true    &&    b.booleanValue())    {        BeanPropertyDefinition    newProp    =    prop.withSimpleName(_cfgNameForTextValue);    if    (newProp    !=    prop)    {    propDefs.set(i,    newProp);    }    continue;    }        PropertyName    wrapperName    =    prop.getWrapperName();        [CLASS]        XmlBeanDeserializerModifier    [METHOD]    updateProperties    [RETURN_TYPE]    List        DeserializationConfig    config    BeanDescription    beanDesc    BeanPropertyDefinition>    propDefs    [VARIABLES]    PropertyName    wrapperName    boolean    BeanDescription    beanDesc    AnnotationIntrospector    intr    BeanPropertyDefinition    newProp    prop    AnnotatedMember    acc    DeserializationConfig    config    List    propDefs    String    _cfgNameForTextValue    localName    nameForTextValue    Boolean    b    long    serialVersionUID    int    changed    i    propCount        	jacksonxml_1572_XmlBeanDeserializerModifier_1_1	51	1	src/main/java/com/fasterxml/jackson/dataformat/xml/deser/XmlBeanDeserializerModifier.java
745	[PATCH]    if    (ns    ==    null    ||    ns.length()    ==    0)    {	[BUG]    [BUGGY]    if    (ns    ==    null    ||    ns.length()    >=    0)    {    [FE]    junit.framework.AssertionFailedError:    Expected    XML    to    begin    with    '<person    xmlns=',    instead    got:    <person><wstxns1:name    xmlns:wstxns1=   "http://example.org/person   ">hello</wstxns1:name></person>    testRootNamespace    [CONTEXT]    ns    =    root.getNamespace();    }        if    (localName    ==    null    ||    localName.length()    ==    0)    {            localName    =    StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());    return    new    QName(   "   ",    localName);    }        [BUGGY]    if    (ns    ==    null    ||    ns.length()    >=    0)    {    ns    =    findNamespace(intr,    ac);    }    if    (ns    ==    null)    {    ns    =       "   ";    }    return    new    QName(ns,    localName);    }    [CLASS]        XmlRootNameLookup    [METHOD]    _findRootName    [RETURN_TYPE]    QName        Class<?>    rootType    MapperConfig<?>    config    [VARIABLES]    PropertyName    root    boolean    AnnotatedClass    ac    LRUMap    _rootNames    BeanDescription    beanDesc    AnnotationIntrospector    intr    MapperConfig    config    Class    rootType    String    localName    ns    long    serialVersionUID        	jacksonxml_2070_XmlRootNameLookup_1_1	84	1	src/main/java/com/fasterxml/jackson/dataformat/xml/util/XmlRootNameLookup.java
746	[PATCH]    if    (str.charAt(i)    >    '    ')    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.ComparisonFailure:    expected:<[123-456-7890]>    but    was:<[NOT    SET]>    testOptionalAttr    [CONTEXT]    protected    boolean    _isEmpty(String    str)    {    int    len    =    (str    ==    null)    ?    0    :    str.length();    if    (len    >    0)    {    for    (int    i    =    0;    i    <    len;    ++i)    {    [BUGGY]    if    (false)    {    return    false;    }    }    }    return    true;    }    [CLASS]        FromXmlParser    Feature    [METHOD]    _isEmpty    [RETURN_TYPE]    boolean        String    str    [VARIABLES]    byte[]    _binaryValue    boolean    _closed    _defaultState    _mayBeLeaf    defaultState    state    Set    _namesToWrap    namesToWrap    XmlReadContext    _parsingContext    ctxt    parent    XmlTokenStream    _xmlTokens    IOContext    _ioContext    ctxt    JsonToken    _nextToken    t    String    DEFAULT_UNNAMED_TEXT_PROPERTY    _cfgNameForTextElement    _currText    defValue    name    str    text    ObjectCodec    _objectCodec    c    codec    ByteArrayBuilder    _byteArrayBuilder    builder    int    _formatFeatures    _mask    flags    genericParserFeatures    i    len    mask    token    values    xmlFeatures        	jacksonxml_666_FromXmlParser_1_1	953	1	src/main/java/com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java
747	[PATCH]    if    (type.isContainerType())    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException:    Unrecognized    field       "item   "    (class    com.fasterxml.jackson.dataformat.xml.MediaItem),    not    marked    as    ignorable    (2    known    properties:       "images   ",       "content   "])    testRoundtrip    [CONTEXT]    public    static    boolean    isIndexedType(JavaType    type)    {    [BUGGY]    if    (true)    {    Class<?>    cls    =    type.getRawClass();            if    (cls    ==    byte[].class    ||    cls    ==    char[].class)    {    return    false;    }        if    (Map.class.isAssignableFrom(cls))    {    return    false;    }    [CLASS]        TypeUtil    [METHOD]    isIndexedType    [RETURN_TYPE]    boolean        JavaType    type    [VARIABLES]    JavaType    type    boolean    Class    cls        	jacksonxml_2176_TypeUtil_1_1	16	1	src/main/java/com/fasterxml/jackson/dataformat/xml/util/TypeUtil.java
748	[PATCH]    boolean    maybeXmlDecl    =    (b    ==    BYTE_LT);	[BUG]    [BUGGY]    boolean    maybeXmlDecl    =    (b    <=    BYTE_LT);    [FE]    junit.framework.AssertionFailedError    testSimpleValidComment    [CONTEXT]    }    if    (acc.nextByte()    !=    UTF8_BOM_3)    {    return    MatchStrength.NO_MATCH;    }    if    (!acc.hasMoreBytes())    {    return    MatchStrength.INCONCLUSIVE;    }    b    =    acc.nextByte();    }        [BUGGY]    boolean    maybeXmlDecl    =    (b    <=    BYTE_LT);    if    (!maybeXmlDecl)    {    int    ch    =    skipSpace(acc,    b);    if    (ch    <    0)    {    return    MatchStrength.INCONCLUSIVE;    }    b    =    (byte)    ch;        if    (b    !=    BYTE_LT)    {    return    MatchStrength.NO_MATCH;    }    [CLASS]        XmlFactory    [METHOD]    hasXMLFormat    [RETURN_TYPE]    MatchStrength        InputAccessor    acc    [VARIABLES]    XMLOutputFactory    _xmlOutputFactory    f    outf    xmlOut    boolean    maybeXmlDecl    byte    BYTE_D    BYTE_EXCL    BYTE_HYPHEN    BYTE_LT    BYTE_QMARK    BYTE_l    BYTE_m    BYTE_x    UTF8_BOM_1    UTF8_BOM_2    UTF8_BOM_3    b    String    FORMAT_NAME_XML    _cfgNameForTextElement    _jdkXmlInFactory    _jdkXmlOutFactory    content    name    nameForTextElem    InputAccessor    acc    long    serialVersionUID    int    DEFAULT_XML_GENERATOR_FEATURE_FLAGS    DEFAULT_XML_PARSER_FEATURE_FLAGS    _xmlGeneratorFeatures    _xmlParserFeatures    ch    len    offset    xgFeatures    xpFeatures    XMLInputFactory    _xmlInputFactory    f    inf    xmlIn        	jacksonxml_209_XmlFactory_1_1	711	1	src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java
749	[PATCH]    if    (_binaryValue    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.NullPointerException    testTwoBinaryProps    [CONTEXT]    public    byte[]    getBinaryValue(Base64Variant    b64variant)    throws    IOException    {    if    (_currToken    !=    JsonToken.VALUE_STRING    &&    (_currToken    !=    JsonToken.VALUE_EMBEDDED_OBJECT    ||    _binaryValue    ==    null))    {    _reportError(   "Current    token    (   "+_currToken+   ")    not    VALUE_STRING    or    VALUE_EMBEDDED_OBJECT,    can    not    access    as    binary   ");    }                [BUGGY]    if    (false)    {    try    {    _binaryValue    =    _decodeBase64(b64variant);    }    catch    (IllegalArgumentException    iae)    {    throw    _constructError(   "Failed    to    decode    VALUE_STRING    as    base64    (   "+b64variant+   "):       "+iae.getMessage());    }    }    return    _binaryValue;    }    [CLASS]        FromXmlParser    Feature    [METHOD]    getBinaryValue    [RETURN_TYPE]    byte[]        Base64Variant    b64variant    [VARIABLES]    Set    _namesToWrap    namesToWrap    XmlReadContext    _parsingContext    ctxt    parent    String    DEFAULT_UNNAMED_TEXT_PROPERTY    _cfgNameForTextElement    _currText    defValue    name    str    text    ObjectCodec    _objectCodec    c    codec    ByteArrayBuilder    _byteArrayBuilder    int    _formatFeatures    _mask    flags    genericParserFeatures    mask    token    values    xmlFeatures    byte[]    _binaryValue    boolean    _closed    _defaultState    _mayBeLeaf    defaultState    state    XmlTokenStream    _xmlTokens    IOContext    _ioContext    ctxt    Base64Variant    b64variant    JsonToken    _nextToken    t    IllegalArgumentException    iae        	jacksonxml_634_FromXmlParser_1_1	832	1	src/main/java/com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java
750	[PATCH]    while    (level    >    SPACE_COUNT)    {    //    should    never    happen    but...	[BUG]    [BUGGY]    while    (level    !=    SPACE_COUNT)    {    //    should    never    happen    but...    [FE]    java.lang.OutOfMemoryError:    Java    heap    space    testRoundtrip    [CONTEXT]    public    void    writeIndentation(JsonGenerator    jg,    int    level)    throws    IOException    {    jg.writeRaw(SYSTEM_LINE_SEPARATOR);    level    +=    level;        [BUGGY]    while    (level    !=    SPACE_COUNT)    {    jg.writeRaw(SPACES,    0,    SPACE_COUNT);    level    -=    SPACES.length;    }    jg.writeRaw(SPACES,    0,    level);    }    [CLASS]        DefaultXmlPrettyPrinter    NopIndenter    FixedSpaceIndenter    Lf2SpacesIndenter    [METHOD]    writeIndentation    [RETURN_TYPE]    void        JsonGenerator    jg    int    level    [VARIABLES]    Indenter    _arrayIndenter    _objectIndenter    i    boolean    _justHadStartElement    _spacesInObjectEntries    b    isCData    value    JsonGenerator    jg    String    SYSTEM_LINE_SEPARATOR    localName    nsURI    text    long    serialVersionUID    value    int    SPACE_COUNT    _nesting    len    level    nrOfEntries    nrOfValues    offset    value    char[]    SPACES    buffer        	jacksonxml_1471_DefaultXmlPrettyPrinter_1_1	522	1	src/main/java/com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter.java
751	[PATCH]    if    (type    ==    REPLAY_START_DELAYED)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.IllegalStateException:    Unrecognized    type    to    repeat:    3    testWithTwoAttributes    [CONTEXT]    }    if    (type    ==    REPLAY_END)    {        _localName    =    _xmlReader.getLocalName();    _namespaceURI    =    _xmlReader.getNamespaceURI();    if    (_currentWrapper    !=    null)    {    _currentWrapper    =    _currentWrapper.getParent();    }    return    XML_END_ELEMENT;    }    [BUGGY]    if    (false)    {    if    (_currentWrapper    !=    null)    {    _currentWrapper    =    _currentWrapper.intermediateWrapper();    }    _localName    =    _nextLocalName;    _namespaceURI    =    _nextNamespaceURI;    _nextLocalName    =    null;    _nextNamespaceURI    =    null;            [CLASS]        XmlTokenStream    [METHOD]    _handleRepeatElement    [RETURN_TYPE]    int        [VARIABLES]    XMLStreamReader2    _xmlReader    Object    _sourceReference    sourceRef    String    _localName    _namespaceURI    _nextLocalName    _nextNamespaceURI    _textValue    localName    ns    text    boolean    int    REPLAY_END    REPLAY_START_DELAYED    REPLAY_START_DUP    XML_ATTRIBUTE_NAME    XML_ATTRIBUTE_VALUE    XML_END    XML_END_ELEMENT    XML_START_ELEMENT    XML_TEXT    _attributeCount    _currentState    _nextAttributeIndex    _repeatElement    type    ElementWrapper    _currentWrapper        	jacksonxml_1248_XmlTokenStream_1_1	452	1	src/main/java/com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream.java
752	[PATCH]    if    (ns    ==    null    ||    ns.isEmpty())    {	[BUG]    [BUGGY]    if    (ns    ==    null    !=    ns.isEmpty())    {    [FE]    java.lang.NullPointerException    testRenamedRootItem    [CONTEXT]    protected    QName    _rootNameFromConfig()    {    PropertyName    name    =    _config.getFullRootName();    if    (name    ==    null)    {    return    null;    }    String    ns    =    name.getNamespace();    [BUGGY]    if    (ns    ==    null    !=    ns.isEmpty())    {    return    new    QName(name.getSimpleName());    }    return    new    QName(ns,    name.getSimpleName());    }    [CLASS]        XmlSerializerProvider    [METHOD]    _rootNameFromConfig    [RETURN_TYPE]    QName        [VARIABLES]    XmlRootNameLookup    _rootNameLookup    rootNames    PropertyName    name    String    ns    boolean    QName    ROOT_NAME_FOR_NULL    rootName    long    serialVersionUID        	jacksonxml_2040_XmlSerializerProvider_1_1	248	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java
753	[PATCH]    if    (ch    >=    'A')    {    //    in    theory,    colon    could    be;    in    practice    it    should    never    be    valid    (wrt    namespace)	[BUG]    [BUGGY]    if    (ch    ==    'A')    {    //    in    theory,    colon    could    be;    in    practice    it    should    never    be    valid    (wrt    namespace)    [FE]    junit.framework.AssertionFailedError    testSimpleValidPI    [CONTEXT]    private    final    static    boolean    validXmlNameStartChar(InputAccessor    acc,    byte    b)    throws    IOException    {                int    ch    =    (int)    b    &    0xFF;    [BUGGY]    if    (ch    ==    'A')    {        return    true;    }    return    false;    }    [CLASS]        XmlFactory    [METHOD]    validXmlNameStartChar    [RETURN_TYPE]    boolean        InputAccessor    acc    byte    b    [VARIABLES]    XMLOutputFactory    _xmlOutputFactory    f    outf    xmlOut    boolean    byte    BYTE_D    BYTE_EXCL    BYTE_HYPHEN    BYTE_LT    BYTE_QMARK    BYTE_l    BYTE_m    BYTE_x    UTF8_BOM_1    UTF8_BOM_2    UTF8_BOM_3    b    String    FORMAT_NAME_XML    _cfgNameForTextElement    _jdkXmlInFactory    _jdkXmlOutFactory    content    name    nameForTextElem    InputAccessor    acc    long    serialVersionUID    int    DEFAULT_XML_GENERATOR_FEATURE_FLAGS    DEFAULT_XML_PARSER_FEATURE_FLAGS    _xmlGeneratorFeatures    _xmlParserFeatures    ch    len    offset    xgFeatures    xpFeatures    XMLInputFactory    _xmlInputFactory    f    inf    xmlIn        	jacksonxml_274_XmlFactory_1_1	779	1	src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java
754	[PATCH]    if    (c    ==    '_'    ||    c    ==    '.'    ||    c    ==    '-')    continue;	[BUG]    [BUGGY]    if    (true)    continue;    [FE]    junit.framework.ComparisonFailure:    expected:<...peWithClassProperty    [_]class=   "com.fasterxml...>    but    was:<...peWithClassProperty    [@]class=   "com.fasterxml...>    testAsClassProperty    [CONTEXT]    }    }    else    {    sb    =    new    StringBuilder(name);    }    for    (int    i    =    0,    len    =    name.length();    i    <    len;    ++i)    {    char    c    =    name.charAt(i);    if    (c    >    127)    continue;    if    (c    >=    'a'    &&    c    <=    'z')    continue;    if    (c    >=    'A'    &&    c    <=    'Z')    continue;    if    (c    >=    '0'    &&    c    <=    '9')    continue;    [BUGGY]    if    (true)    continue;        ++changes;    if    (c    ==    '$')    {    sb.setCharAt(i,    '.');    }    else    {    sb.setCharAt(i,    '_');    }    }    if    (changes    ==    0)    {    return    name;    [CLASS]        StaxUtil    [METHOD]    sanitizeXmlTypeName    [RETURN_TYPE]    String        String    name    [VARIABLES]    boolean    StringBuilder    sb    char    c    String    name    int    changes    i    len        	jacksonxml_2163_StaxUtil_1_1	58	1	src/main/java/com/fasterxml/jackson/dataformat/xml/util/StaxUtil.java
755	[PATCH]    if    (wrapperName    !=    null    &&    wrapperName    !=    PropertyName.NO_NAME)    {	[BUG]    [BUGGY]    if    (wrapperName    !=    null    &&    true)    {    [FE]    com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException:    Unrecognized    field       "   "    (class    com.fasterxml.jackson.dataformat.xml.lists.EmptyListDeserTest$Entry),    not    marked    as    ignorable    (one    known    property:       "id   "])    testEmptyList    [CONTEXT]    SettableBeanProperty    prop    =    it.next();                JavaType    type    =    prop.getType();    if    (!TypeUtil.isIndexedType(type))    {    continue;    }    PropertyName    wrapperName    =    prop.getWrapperName();        [BUGGY]    if    (wrapperName    !=    null    &&    true)    {    continue;    }    if    (unwrappedNames    ==    null)    {    unwrappedNames    =    new    HashSet<String>();    }        unwrappedNames.add(prop.getName());    }        if    (unwrappedNames    ==    null)    {    [CLASS]        WrapperHandlingDeserializer    [METHOD]    createContextual    [RETURN_TYPE]    JsonDeserializer        DeserializationContext    ctxt    BeanProperty    property    [VARIABLES]    PropertyName    wrapperName    JavaType    _type    type    Set    _namesToWrap    namesToWrap    BeanDeserializerBase    newDelegatee    boolean    SettableBeanProperty    prop    Iterator    it    DeserializationContext    ctxt    JsonDeserializer    del    long    serialVersionUID    BeanProperty    property    HashSet    unwrappedNames        	jacksonxml_1550_WrapperHandlingDeserializer_1_1	93	1	src/main/java/com/fasterxml/jackson/dataformat/xml/deser/WrapperHandlingDeserializer.java
756	[PATCH]    if    (!TypeUtil.isIndexedType(type))    {	[BUG]    [BUGGY]    if    (!true)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Current    state    not    XML_START_ELEMENT    (1)    but    3    (through    reference    chain:    com.fasterxml.jackson.dataformat.xml.jaxb.Company[   "computers   "]->java.util.ArrayList[0])    testPolyIdList178    [CONTEXT]        Iterator<SettableBeanProperty>    it    =    newDelegatee.properties();    HashSet<String>    unwrappedNames    =    null;    while    (it.hasNext())    {    SettableBeanProperty    prop    =    it.next();                JavaType    type    =    prop.getType();    [BUGGY]    if    (!true)    {    continue;    }    PropertyName    wrapperName    =    prop.getWrapperName();        if    (wrapperName    !=    null    &&    wrapperName    !=    PropertyName.NO_NAME)    {    continue;    }    if    (unwrappedNames    ==    null)    {    unwrappedNames    =    new    HashSet<String>();    }    [CLASS]        WrapperHandlingDeserializer    [METHOD]    createContextual    [RETURN_TYPE]    JsonDeserializer        DeserializationContext    ctxt    BeanProperty    property    [VARIABLES]    PropertyName    wrapperName    JavaType    _type    type    Set    _namesToWrap    namesToWrap    BeanDeserializerBase    newDelegatee    boolean    SettableBeanProperty    prop    Iterator    it    DeserializationContext    ctxt    JsonDeserializer    del    long    serialVersionUID    BeanProperty    property    HashSet    unwrappedNames        	jacksonxml_1548_WrapperHandlingDeserializer_1_1	88	1	src/main/java/com/fasterxml/jackson/dataformat/xml/deser/WrapperHandlingDeserializer.java
757	[PATCH]    int    textIndex    =    -1;	[BUG]    [BUGGY]    int    textIndex    =    0;    [FE]    junit.framework.AssertionFailedError:    expected:<com.fasterxml.jackson.dataformat.xml.XmlTestBase$FiveMinuteUser@6d303498>    but    was:<com.fasterxml.jackson.dataformat.xml.XmlTestBase$FiveMinuteUser@6ba7383d>    testRoundTripWithJacksonExample    [CONTEXT]    if    (cdata    ==    null)    {    cdata    =    new    BitSet(len);    }    cdata.set(i);    }    }    _cdata    =    cdata;        _xmlNames    =    new    QName[_props.length];    [BUGGY]    int    textIndex    =    0;    for    (int    i    =    0,    len    =    _props.length;    i    <    len;    ++i)    {    BeanPropertyWriter    bpw    =    _props[i];    XmlInfo    info    =    (XmlInfo)    bpw.getInternalSetting(KEY_XML_INFO);    String    ns    =    null;    if    (info    !=    null)    {    ns    =    info.getNamespace();    if    (textIndex    <    0    &&    info.isText())    {    textIndex    =    i;    }    }    [CLASS]        XmlBeanSerializerBase    [METHOD]    <init>    [RETURN_TYPE]    BeanSerializerBase)        BeanSerializerBase    src    [VARIABLES]    QName[]    _xmlNames    boolean    BeanSerializerBase    src    BitSet    _cdata    cdata    String    KEY_XML_INFO    ns    XmlInfo    info    BeanPropertyWriter    bpw    int    _attributeCount    _textPropertyIndex    attrCount    i    len    textIndex        	jacksonxml_1668_XmlBeanSerializerBase_1_1	92	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerBase.java
758	[PATCH]    if    ((localName    !=    null    &&    localName.length()    >    0)	[BUG]    [BUGGY]    if    ((localName    !=    null    &&    false)    [FE]    com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException:    Unrecognized    field       "computers   "    (class    com.fasterxml.jackson.dataformat.xml.jaxb.JAXBObjectId170Test$Company),    not    marked    as    ignorable    (2    known    properties:       "computer   ",       "employee   "])    testPolyIdList178    [CONTEXT]    if    (newProp    !=    prop)    {    propDefs.set(i,    newProp);    }    continue;    }        PropertyName    wrapperName    =    prop.getWrapperName();    if    (wrapperName    !=    null    &&    wrapperName    !=    PropertyName.NO_NAME)    {    String    localName    =    wrapperName.getSimpleName();    [BUGGY]    if    ((localName    !=    null    &&    false)    &&    !localName.equals(prop.getName()))    {        if    (changed    ==    0)    {    propDefs    =    new    ArrayList<BeanPropertyDefinition>(propDefs);    }    ++changed;    propDefs.set(i,    prop.withSimpleName(localName));    continue;    }        [CLASS]        XmlBeanDeserializerModifier    [METHOD]    updateProperties    [RETURN_TYPE]    List        DeserializationConfig    config    BeanDescription    beanDesc    BeanPropertyDefinition>    propDefs    [VARIABLES]    PropertyName    wrapperName    boolean    BeanDescription    beanDesc    AnnotationIntrospector    intr    BeanPropertyDefinition    newProp    prop    AnnotatedMember    acc    DeserializationConfig    config    List    propDefs    String    _cfgNameForTextValue    localName    nameForTextValue    Boolean    b    long    serialVersionUID    int    changed    i    propCount        	jacksonxml_1590_XmlBeanDeserializerModifier_1_1	64	1	src/main/java/com/fasterxml/jackson/dataformat/xml/deser/XmlBeanDeserializerModifier.java
759	[PATCH]    if    (name    !=    null    &&    namesToWrap.contains(name))    {	[BUG]    [BUGGY]    if    (name    !=    null)    {    [FE]    com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException:    Unrecognized    field       "Config   "    (class    com.fasterxml.jackson.dataformat.xml.lists.EmptyListDeserTest$Config),    not    marked    as    ignorable    (2    known    properties:       "entry   ",       "id   "])    testEmptyList    [CONTEXT]    public    void    addVirtualWrapping(Set<String>    namesToWrap)    {                String    name    =    _xmlTokens.getLocalName();    [BUGGY]    if    (name    !=    null)    {    _xmlTokens.repeatStartElement();    }    _namesToWrap    =    namesToWrap;    _parsingContext.setNamesToWrap(namesToWrap);    }    [CLASS]        FromXmlParser    Feature    [METHOD]    addVirtualWrapping    [RETURN_TYPE]    void        String>    namesToWrap    [VARIABLES]    byte[]    _binaryValue    boolean    _closed    _defaultState    _mayBeLeaf    defaultState    state    Set    _namesToWrap    namesToWrap    XmlReadContext    _parsingContext    XmlTokenStream    _xmlTokens    IOContext    _ioContext    ctxt    JsonToken    _nextToken    String    DEFAULT_UNNAMED_TEXT_PROPERTY    _cfgNameForTextElement    _currText    name    ObjectCodec    _objectCodec    c    codec    ByteArrayBuilder    _byteArrayBuilder    int    _formatFeatures    _mask    flags    genericParserFeatures    mask    values    xmlFeatures        	jacksonxml_381_FromXmlParser_1_1	304	1	src/main/java/com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java
760	[PATCH]    if    (ns    !=    null    &&    ns.length()    >    0)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    Expected    XML    to    begin    with    '<person    xmlns=',    instead    got:    <wstxns1:person    xmlns:wstxns1=   "http://example.org/person   "><wstxns1:name>hello</wstxns1:name></wstxns1:person>    testRootNamespace    [CONTEXT]    if    (xgen.getOutputContext().inRoot())    {    xgen.setNextName(rootName);    }    }    xgen.initGenerator();    String    ns    =    rootName.getNamespaceURI();                    [BUGGY]    if    (false)    {    try    {    xgen.getStaxWriter().setDefaultNamespace(ns);    }    catch    (XMLStreamException    e)    {    StaxUtil.throwXmlAsIOException(e);    }    }    }    [CLASS]        XmlSerializerProvider    [METHOD]    _initWithRootName    [RETURN_TYPE]    void        ToXmlGenerator    xgen    QName    rootName    [VARIABLES]    boolean    XMLStreamException    e    QName    ROOT_NAME_FOR_NULL    rootName    ToXmlGenerator    xgen    XmlRootNameLookup    _rootNameLookup    rootNames    String    ns    long    serialVersionUID        	jacksonxml_2033_XmlSerializerProvider_1_1	232	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java
761	[PATCH]    if    (ctxt    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.NullPointerException    testRoundtrip    [CONTEXT]    public    final    XmlReadContext    createChildObjectContext(int    lineNr,    int    colNr)    {    XmlReadContext    ctxt    =    _child;    [BUGGY]    if    (false)    {    _child    =    ctxt    =    new    XmlReadContext(this,    TYPE_OBJECT,    lineNr,    colNr);    return    ctxt;    }    ctxt.reset(TYPE_OBJECT,    lineNr,    colNr);    return    ctxt;    }    [CLASS]        XmlReadContext    [METHOD]    createChildObjectContext    [RETURN_TYPE]    XmlReadContext        int    lineNr    int    colNr    [VARIABLES]    Set    _namesToWrap    String    _currentName    _wrappedName    boolean    XmlReadContext    _child    _parent    ctxt    parent    int    _columnNr    _lineNr    colNr    lineNr    type        	jacksonxml_1097_XmlReadContext_1_1	100	1	src/main/java/com/fasterxml/jackson/dataformat/xml/deser/XmlReadContext.java
762	[PATCH]    if    (typeIdPropName    ==    null    ||    typeIdPropName.length()    ==    0)    {	[BUG]    [BUGGY]    if    (typeIdPropName    ==    null    ||    typeIdPropName.length()    >=    0)    {    [FE]    junit.framework.ComparisonFailure:    expected:<<dynaBean    [class]=   "TestSerializationA...>    but    was:<<dynaBean    [_type]=   "TestSerializationA...>    testIssue117AnySetterAttrs    [CONTEXT]    public    StdTypeResolverBuilder    typeProperty(String    typeIdPropName)    {        [BUGGY]    if    (typeIdPropName    ==    null    ||    typeIdPropName.length()    >=    0)    {    typeIdPropName    =    _idType.getDefaultPropertyName();    }    _typeProperty    =    StaxUtil.sanitizeXmlTypeName(typeIdPropName);    return    this;    }    [CLASS]        XmlTypeResolverBuilder    XmlClassNameIdResolver    XmlMinimalClassNameIdResolver    [METHOD]    typeProperty    [RETURN_TYPE]    StdTypeResolverBuilder        String    typeIdPropName    [VARIABLES]    boolean    String    typeIdPropName        	jacksonxml_1488_XmlTypeResolverBuilder_1_1	37	1	src/main/java/com/fasterxml/jackson/dataformat/xml/XmlTypeResolverBuilder.java
763	[PATCH]    if    (_repeatElement    !=    0)    {	[BUG]    [BUGGY]    if    (_repeatElement    !=    1)    {    [FE]    java.lang.IllegalStateException:    Unrecognized    type    to    repeat:    0    testRoundtrip    [CONTEXT]    public    int    next()    throws    IOException    {    [BUGGY]    if    (_repeatElement    !=    1)    {    return    (_currentState    =    _handleRepeatElement());    }    try    {    return    _next();    }    catch    (XMLStreamException    e)    {    StaxUtil.throwXmlAsIOException(e);    return    -1;    }    }    [CLASS]        XmlTokenStream    [METHOD]    next    [RETURN_TYPE]    int        [VARIABLES]    boolean    XMLStreamException    e    ElementWrapper    _currentWrapper    XMLStreamReader2    _xmlReader    Object    _sourceReference    sourceRef    String    _localName    _namespaceURI    _nextLocalName    _nextNamespaceURI    _textValue    int    REPLAY_END    REPLAY_START_DELAYED    REPLAY_START_DUP    XML_ATTRIBUTE_NAME    XML_ATTRIBUTE_VALUE    XML_END    XML_END_ELEMENT    XML_START_ELEMENT    XML_TEXT    _attributeCount    _currentState    _nextAttributeIndex    _repeatElement        	jacksonxml_1127_XmlTokenStream_1_1	158	1	src/main/java/com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream.java
764	[PATCH]    for    (int    i    =    0,    len    =    _props.length;    i    <    len;    ++i)    {	[BUG]    [BUGGY]    for    (int    i    =    -1,    len    =    _props.length;    i    <    len;    ++i)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testRoundtrip    [CONTEXT]    for    (BeanPropertyWriter    bpw    :    _props)    {    if    (_isAttribute(bpw))    {    attrCount    =    _orderAttributesFirst(_props,    _filteredProps);    break;    }    }    _attributeCount    =    attrCount;        BitSet    cdata    =    null;    [BUGGY]    for    (int    i    =    -1,    len    =    _props.length;    i    <    len;    ++i)    {    BeanPropertyWriter    bpw    =    _props[i];    if    (_isCData(bpw))    {    if    (cdata    ==    null)    {    cdata    =    new    BitSet(len);    }    cdata.set(i);    }    }    _cdata    =    cdata;        [CLASS]        XmlBeanSerializerBase    [METHOD]    <init>    [RETURN_TYPE]    BeanSerializerBase)        BeanSerializerBase    src    [VARIABLES]    QName[]    _xmlNames    boolean    BeanSerializerBase    src    BitSet    _cdata    cdata    String    KEY_XML_INFO    ns    XmlInfo    info    BeanPropertyWriter    bpw    int    _attributeCount    _textPropertyIndex    attrCount    i    len    textIndex        	jacksonxml_1659_XmlBeanSerializerBase_1_1	79	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerBase.java
765	[PATCH]    if    (rootName    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.NullPointerException    testRoundTripWithJacksonExample    [CONTEXT]    if    (xgen    ==    null)    {    asArray    =    false;    }    else    {    QName    rootName    =    _rootNameFromConfig();    [BUGGY]    if    (false)    {    rootName    =    _rootNameLookup.findRootName(cls,    _config);    }    _initWithRootName(xgen,    rootName);    asArray    =    TypeUtil.isIndexedType(cls);    if    (asArray)    {    _startRootArray(xgen,    rootName);    }    }    [CLASS]        XmlSerializerProvider    [METHOD]    serializeValue    [RETURN_TYPE]    void        JsonGenerator    gen    Object    value    [VARIABLES]    boolean    asArray    QName    ROOT_NAME_FOR_NULL    rootName    ToXmlGenerator    xgen    XmlRootNameLookup    _rootNameLookup    rootNames    JsonGenerator    gen    Object    value    Class    cls    JsonSerializer    ser    IOException    ioe    String    msg    long    serialVersionUID    Exception    e        	jacksonxml_1967_XmlSerializerProvider_1_1	79	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java
766	[PATCH]    if    (cdata    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.NullPointerException    testCDataString    [CONTEXT]    break;    }    }    _attributeCount    =    attrCount;        BitSet    cdata    =    null;    for    (int    i    =    0,    len    =    _props.length;    i    <    len;    ++i)    {    BeanPropertyWriter    bpw    =    _props[i];    if    (_isCData(bpw))    {    [BUGGY]    if    (false)    {    cdata    =    new    BitSet(len);    }    cdata.set(i);    }    }    _cdata    =    cdata;        _xmlNames    =    new    QName[_props.length];    int    textIndex    =    -1;    [CLASS]        XmlBeanSerializerBase    [METHOD]    <init>    [RETURN_TYPE]    BeanSerializerBase)        BeanSerializerBase    src    [VARIABLES]    QName[]    _xmlNames    boolean    BeanSerializerBase    src    BitSet    _cdata    cdata    String    KEY_XML_INFO    ns    XmlInfo    info    BeanPropertyWriter    bpw    int    _attributeCount    _textPropertyIndex    attrCount    i    len    textIndex        	jacksonxml_1665_XmlBeanSerializerBase_1_1	82	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerBase.java
767	[PATCH]    if    (_currentState    !=    XML_ATTRIBUTE_NAME    ||    _nextAttributeIndex    !=    0)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Can    not    deserialize    instance    of    java.lang.String    out    of    START_OBJECT    token    testStringArrayWithAttribute    [CONTEXT]    {        [BUGGY]    if    (true)    {    return    null;    }    try    {    String    text    =    _collectUntilTag();            if    (_xmlReader.getEventType()    ==    XMLStreamReader.END_ELEMENT)    {    if    (text    ==    null)    {    text    =       "   ";    }    [CLASS]        XmlTokenStream    [METHOD]    convertToString    [RETURN_TYPE]    String        [VARIABLES]    boolean    XMLStreamException    e    ElementWrapper    _currentWrapper    XMLStreamReader2    _xmlReader    Object    _sourceReference    sourceRef    String    _localName    _namespaceURI    _nextLocalName    _nextNamespaceURI    _textValue    text    int    REPLAY_END    REPLAY_START_DELAYED    REPLAY_START_DUP    XML_ATTRIBUTE_NAME    XML_ATTRIBUTE_VALUE    XML_END    XML_END_ELEMENT    XML_START_ELEMENT    XML_TEXT    _attributeCount    _currentState    _nextAttributeIndex    _repeatElement    type        	jacksonxml_1185_XmlTokenStream_1_1	268	1	src/main/java/com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream.java
768	[PATCH]    if    (_anyGetterWriter    !=    null)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    (was    java.lang.NullPointerException)    (through    reference    chain:    com.fasterxml.jackson.dataformat.xml.MediaItem[   "content   "]->com.fasterxml.jackson.dataformat.xml.Content[   "[anySetter]   "])    testRoundtrip    [CONTEXT]    }    else    {    prop.serializeAsField(bean,    xgen,    provider);    }    }            if    (i    ==    textIndex)    {    xgen.setNextIsUnwrapped(false);    }    }    [BUGGY]    if    (true)    {            xgen.setNextIsAttribute(false);    _anyGetterWriter.getAndSerialize(bean,    xgen,    provider);    }    }    catch    (Exception    e)    {    String    name    =    (i    ==    props.length)    ?       "[anySetter]   "    :    props[i].getName();    wrapAndThrow(provider,    e,    bean,    name);    }    catch    (StackOverflowError    e)    {    JsonMappingException    mapE    =    JsonMappingException.from(gen0,    [CLASS]        XmlBeanSerializerBase    [METHOD]    serializeFields    [RETURN_TYPE]    void        Object    bean    JsonGenerator    gen0    SerializerProvider    provider    [VARIABLES]    QName[]    _xmlNames    xmlNames    BitSet    _cdata    cdata    String    KEY_XML_INFO    name    ns    BeanPropertyWriter[]    props    int    _attributeCount    _textPropertyIndex    attrCount    i    len    textIndex    Exception    e    boolean    isAttribute    JsonMappingException    mapE    ToXmlGenerator    xgen    JsonGenerator    gen0    Object    bean    SerializerProvider    provider    BeanPropertyWriter    prop    StackOverflowError    e        	jacksonxml_1744_XmlBeanSerializerBase_1_1	211	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerBase.java
769	[PATCH]    int    attrCount    =    0;	[BUG]    [BUGGY]    int    attrCount    =    1;    [FE]    junit.framework.ComparisonFailure:    expected:<<Individual[><name>Jay</name><offspring><kid><name>Junior</name]><offspring/></kid><...>    but    was:<<Individual[    name=   "Jay   "><offspring><kid    name=   "Junior   "]><offspring/></kid><...>    testElementWrapper    [CONTEXT]    {    super(src);                    [BUGGY]    int    attrCount    =    1;    for    (BeanPropertyWriter    bpw    :    _props)    {    if    (_isAttribute(bpw))    {    attrCount    =    _orderAttributesFirst(_props,    _filteredProps);    break;    }    }    _attributeCount    =    attrCount;        BitSet    cdata    =    null;    [CLASS]        XmlBeanSerializerBase    [METHOD]    <init>    [RETURN_TYPE]    BeanSerializerBase)        BeanSerializerBase    src    [VARIABLES]    QName[]    _xmlNames    boolean    BeanSerializerBase    src    BitSet    _cdata    cdata    String    KEY_XML_INFO    ns    XmlInfo    info    BeanPropertyWriter    bpw    int    _attributeCount    _textPropertyIndex    attrCount    i    len    textIndex        	jacksonxml_1653_XmlBeanSerializerBase_1_1	68	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerBase.java
770	[PATCH]    if    (_cfgNameForTextElement    !=    null)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    java.lang.IllegalStateException:    Missing    name,    in    state:    FIELD_NAME    testOptionalAttr    [CONTEXT]    {    XMLStreamReader    sr;    try    {    sr    =    _xmlInputFactory.createXMLStreamReader(r);    sr    =    _initializeXmlReader(sr);    }    catch    (XMLStreamException    e)    {    return    StaxUtil.throwXmlAsIOException(e);    }    FromXmlParser    xp    =    new    FromXmlParser(ctxt,    _generatorFeatures,    _xmlGeneratorFeatures,    _objectCodec,    sr);    [BUGGY]    if    (true)    {    xp.setXMLTextElementName(_cfgNameForTextElement);    }    return    xp;    }    [CLASS]        XmlFactory    [METHOD]    _createParser    [RETURN_TYPE]    FromXmlParser        Reader    r    IOContext    ctxt    [VARIABLES]    XMLOutputFactory    _xmlOutputFactory    f    outf    xmlOut    XMLStreamReader    sr    boolean    XMLStreamException    e    byte    BYTE_D    BYTE_EXCL    BYTE_HYPHEN    BYTE_LT    BYTE_QMARK    BYTE_l    BYTE_m    BYTE_x    UTF8_BOM_1    UTF8_BOM_2    UTF8_BOM_3    Reader    r    IOContext    ctxt    FromXmlParser    xp    String    FORMAT_NAME_XML    _cfgNameForTextElement    _jdkXmlInFactory    _jdkXmlOutFactory    content    name    nameForTextElem    long    serialVersionUID    int    DEFAULT_XML_GENERATOR_FEATURE_FLAGS    DEFAULT_XML_PARSER_FEATURE_FLAGS    _xmlGeneratorFeatures    _xmlParserFeatures    xgFeatures    xpFeatures    XMLInputFactory    _xmlInputFactory    f    inf    xmlIn        	jacksonxml_178_XmlFactory_1_1	561	1	src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java
771	[PATCH]    if    (asArray)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Unexpected    IOException    (of    type    java.io.IOException):    javax.xml.stream.XMLStreamException:    Trying    to    output    second    root,    <SampleResources>    testArraySerialization    [CONTEXT]    if    (xgen    ==    null)    {    asArray    =    false;    }    else    {    QName    rootName    =    _rootNameFromConfig();    if    (rootName    ==    null)    {    rootName    =    _rootNameLookup.findRootName(cls,    _config);    }    _initWithRootName(xgen,    rootName);    asArray    =    TypeUtil.isIndexedType(cls);    [BUGGY]    if    (false)    {    _startRootArray(xgen,    rootName);    }    }    [CLASS]        XmlSerializerProvider    [METHOD]    serializeValue    [RETURN_TYPE]    void        JsonGenerator    gen    Object    value    [VARIABLES]    boolean    asArray    QName    ROOT_NAME_FOR_NULL    rootName    ToXmlGenerator    xgen    XmlRootNameLookup    _rootNameLookup    rootNames    JsonGenerator    gen    Object    value    Class    cls    JsonSerializer    ser    IOException    ioe    String    msg    long    serialVersionUID    Exception    e        	jacksonxml_1970_XmlSerializerProvider_1_1	84	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java
772	[PATCH]    if    (b    ==    BYTE_HYPHEN)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError    testSimpleValidComment    [CONTEXT]    return    MatchStrength.SOLID_MATCH;    }    }    else    if    (b    ==    BYTE_EXCL)    {                if    (!acc.hasMoreBytes())    {    return    MatchStrength.INCONCLUSIVE;    }    b    =    acc.nextByte();    [BUGGY]    if    (false)    {    if    (!acc.hasMoreBytes())    {    return    MatchStrength.INCONCLUSIVE;    }    if    (acc.nextByte()    ==    BYTE_HYPHEN)    {    return    MatchStrength.SOLID_MATCH;    }    }    else    if    (b    ==    BYTE_D)    {    return    tryMatch(acc,       "OCTYPE   ",    MatchStrength.SOLID_MATCH);    }    }    else    {    [CLASS]        XmlFactory    [METHOD]    hasXMLFormat    [RETURN_TYPE]    MatchStrength        InputAccessor    acc    [VARIABLES]    XMLOutputFactory    _xmlOutputFactory    f    outf    xmlOut    boolean    maybeXmlDecl    byte    BYTE_D    BYTE_EXCL    BYTE_HYPHEN    BYTE_LT    BYTE_QMARK    BYTE_l    BYTE_m    BYTE_x    UTF8_BOM_1    UTF8_BOM_2    UTF8_BOM_3    b    String    FORMAT_NAME_XML    _cfgNameForTextElement    _jdkXmlInFactory    _jdkXmlOutFactory    content    name    nameForTextElem    InputAccessor    acc    long    serialVersionUID    int    DEFAULT_XML_GENERATOR_FEATURE_FLAGS    DEFAULT_XML_PARSER_FEATURE_FLAGS    _xmlGeneratorFeatures    _xmlParserFeatures    ch    len    offset    xgFeatures    xpFeatures    XMLInputFactory    _xmlInputFactory    f    inf    xmlIn        	jacksonxml_259_XmlFactory_1_1	753	1	src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java
773	[PATCH]    if    (ix    >=    0)    {	[BUG]    [BUGGY]    if    (ix    ==    0)    {    [FE]    java.lang.IllegalArgumentException:    Invalid    type    id    'com.fasterxml.jackson.dataformat.xml.misc.PolymorphicTypesTest..SubTypeWithClassProperty'    (for    id    type    'Id.class'):    no    such    class    found    testAsClassProperty    [CONTEXT]    protected    static    String    decodeXmlClassName(String    className)    {    int    ix    =    className.lastIndexOf(   "..   ");    [BUGGY]    if    (ix    ==    0)    {    StringBuilder    sb    =    new    StringBuilder(className);    do    {    sb.replace(ix,    ix+2,       "$   ");    ix    =    className.lastIndexOf(   "..   ",    ix-1);    }    while    (ix    >=    0);    className    =    sb.toString();    }    return    className;    }    [CLASS]        XmlTypeResolverBuilder    XmlClassNameIdResolver    XmlMinimalClassNameIdResolver    [METHOD]    decodeXmlClassName    [RETURN_TYPE]    String        String    className    [VARIABLES]    boolean    StringBuilder    sb    String    className    int    ix        	jacksonxml_1524_XmlTypeResolverBuilder_1_1	98	1	src/main/java/com/fasterxml/jackson/dataformat/xml/XmlTypeResolverBuilder.java
774	[PATCH]    if    (b    !=    null    &&    b.booleanValue())    {	[BUG]    [BUGGY]    if    (b.booleanValue())    {    [FE]    java.lang.NullPointerException    testRoundtrip    [CONTEXT]    if    (m    !=    null)    {        PropertyName    n    =    prop.getFullName();    if    (_cfgNameForTextValue.equals(n.getSimpleName()))    {        textProp    =    prop;    continue;    }        Boolean    b    =    AnnotationUtil.findIsAttributeAnnotation(ai,    m);    [BUGGY]    if    (b.booleanValue())    {    continue;    }    }        return    null;    }    return    textProp;    }    [CLASS]        XmlBeanDeserializerModifier    [METHOD]    _findSoleTextProp    [RETURN_TYPE]    SettableBeanProperty        DeserializationConfig    config    SettableBeanProperty>    propIt    [VARIABLES]    PropertyName    n    boolean    SettableBeanProperty    prop    textProp    Iterator    propIt    AnnotationIntrospector    ai    AnnotatedMember    m    DeserializationConfig    config    String    _cfgNameForTextValue    localName    nameForTextValue    Boolean    b    long    serialVersionUID        	jacksonxml_1618_XmlBeanDeserializerModifier_1_1	123	1	src/main/java/com/fasterxml/jackson/dataformat/xml/deser/XmlBeanDeserializerModifier.java
775	[PATCH]    if    (_cfgPrettyPrinter    !=    null)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    (was    java.lang.NullPointerException)    (through    reference    chain:    com.fasterxml.jackson.dataformat.xml.MediaItem[   "content   "]->com.fasterxml.jackson.dataformat.xml.Content[   "persons   "])    testRoundtrip    [CONTEXT]    public    final    void    writeStartArray()    throws    IOException    {    _verifyValueWrite(   "start    an    array   ");    _writeContext    =    _writeContext.createChildArrayContext();    [BUGGY]    if    (true)    {    _cfgPrettyPrinter.writeStartArray(this);    }    else    {        }    }    [CLASS]        ToXmlGenerator    Feature    [METHOD]    writeStartArray    [RETURN_TYPE]    void        [VARIABLES]    XMLStreamWriter2    _xmlWriter    boolean    _defaultState    _initialized    _nextIsAttribute    _nextIsCData    _nextIsUnwrapped    _stax2Emulation    defaultState    isAttribute    isCData    isUnwrapped    state    XMLStreamWriter    _originalXmlWriter    sw    QName    _nextName    name    wrappedName    wrapperName    IOContext    _ioContext    ctxt    XmlPrettyPrinter    _xmlPrettyPrinter    String    DEFAULT_UNKNOWN_ELEMENT    fieldName    name    ns    value    Feature    WRITE_XML_1_1    WRITE_XML_DECLARATION    f    int    _formatFeatures    _mask    flags    mask    newF    oldF    stdFeatures    values    xmlFeatures    LinkedList    _elementNameStack        	jacksonxml_773_ToXmlGenerator_1_1	469	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java
776	[PATCH]    if    (ix    >=    0)    {	[BUG]    [BUGGY]    if    (ix    ==    0)    {    [FE]    junit.framework.ComparisonFailure:    expected:<...PolymorphicTypesTest[..]SubTypeWithClassProp...>    but    was:<...PolymorphicTypesTest[$]SubTypeWithClassProp...>    testAsClassProperty    [CONTEXT]    protected    static    String    encodeXmlClassName(String    className)    {                int    ix    =    className.lastIndexOf('$');    [BUGGY]    if    (ix    ==    0)    {    StringBuilder    sb    =    new    StringBuilder(className);    do    {    sb.replace(ix,    ix+1,       "..   ");    ix    =    className.lastIndexOf('$',    ix-1);    }    while    (ix    >=    0);    className    =    sb.toString();    }    return    className;    }    [CLASS]        XmlTypeResolverBuilder    XmlClassNameIdResolver    XmlMinimalClassNameIdResolver    [METHOD]    encodeXmlClassName    [RETURN_TYPE]    String        String    className    [VARIABLES]    boolean    StringBuilder    sb    String    className    int    ix        	jacksonxml_1499_XmlTypeResolverBuilder_1_1	80	1	src/main/java/com/fasterxml/jackson/dataformat/xml/XmlTypeResolverBuilder.java
777	[PATCH]    if    (_wrapperName    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    (was    java.lang.NullPointerException)    (through    reference    chain:    com.fasterxml.jackson.dataformat.xml.lists.Values[   "value   "])    testCollection    [CONTEXT]    public    boolean    matchesWrapper(String    localName,    String    ns)    {        [BUGGY]    if    (false)    {    return    true;    }    if    (ns    ==    null)    {    ns    =       "   ";    }    return    _wrapperName.equals(localName)    &&    _wrapperNamespace.equals(ns);    }    [CLASS]        ElementWrapper    [METHOD]    matchesWrapper    [RETURN_TYPE]    boolean        String    localName    String    ns    [VARIABLES]    ElementWrapper    _parent    parent    String    _wrapperName    _wrapperNamespace    localName    ns    wrapperLocalName    wrapperNamespace    boolean        	jacksonxml_1283_ElementWrapper_1_1	68	1	src/main/java/com/fasterxml/jackson/dataformat/xml/deser/ElementWrapper.java
778	[PATCH]    if    (c    >=    '0'    &&    c    <=    '9')    continue;	[BUG]    [BUGGY]    if    (c    >=    '0'    &&    c    ==    '9')    continue;    [FE]    junit.framework.ComparisonFailure:    expected:<<Issue[44Bean    first=   "abc   "><second>13</second></Issue44]Bean>>    but    was:<<Issue[__Bean    first=   "abc   "><second>13</second></Issue__]Bean>>    testIssue44    [CONTEXT]    sb.append('s');    }    }    else    {    sb    =    new    StringBuilder(name);    }    for    (int    i    =    0,    len    =    name.length();    i    <    len;    ++i)    {    char    c    =    name.charAt(i);    if    (c    >    127)    continue;    if    (c    >=    'a'    &&    c    <=    'z')    continue;    if    (c    >=    'A'    &&    c    <=    'Z')    continue;    [BUGGY]    if    (c    >=    '0'    &&    c    ==    '9')    continue;    if    (c    ==    '_'    ||    c    ==    '.'    ||    c    ==    '-')    continue;        ++changes;    if    (c    ==    '$')    {    sb.setCharAt(i,    '.');    }    else    {    sb.setCharAt(i,    '_');    }    }    if    (changes    ==    0)    {    [CLASS]        StaxUtil    [METHOD]    sanitizeXmlTypeName    [RETURN_TYPE]    String        String    name    [VARIABLES]    boolean    StringBuilder    sb    char    c    String    name    int    changes    i    len        	jacksonxml_2141_StaxUtil_1_1	57	1	src/main/java/com/fasterxml/jackson/dataformat/xml/util/StaxUtil.java
779	[PATCH]    if    (ctxt.inArray())    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    com.fasterxml.jackson.core.JsonGenerationException:    Current    context    not    an    ARRAY    but    ROOT    testRoundtrip    [CONTEXT]    super.close();                    if    (isEnabled(JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT))    {    try    {    while    (true)    {    JsonStreamContext    ctxt    =    getOutputContext();    [BUGGY]    if    (true)    {    writeEndArray();    }    else    if    (ctxt.inObject())    {    writeEndObject();    }    else    {    break;    }    }    }    catch    (ArrayIndexOutOfBoundsException    e)    {            [CLASS]        ToXmlGenerator    Feature    [METHOD]    close    [RETURN_TYPE]    void        [VARIABLES]    QName    _nextName    name    wrappedName    wrapperName    String    DEFAULT_UNKNOWN_ELEMENT    encodedValue    fieldName    name    ns    text    typeMsg    value    Feature    WRITE_XML_1_1    WRITE_XML_DECLARATION    f    int    _formatFeatures    _mask    count    flags    i    len    length    mask    newF    offset    oldF    status    stdFeatures    values    xmlFeatures    LinkedList    _elementNameStack    XMLStreamWriter2    _xmlWriter    boolean    _defaultState    _initialized    _nextIsAttribute    _nextIsCData    _nextIsUnwrapped    _stax2Emulation    defaultState    isAttribute    isCData    isUnwrapped    state    usePlain    value    XMLStreamException    e    XMLStreamWriter    _originalXmlWriter    sw    IOContext    _ioContext    ctxt    XmlPrettyPrinter    _xmlPrettyPrinter    ArrayIndexOutOfBoundsException    e    JsonStreamContext    ctxt        	jacksonxml_1058_ToXmlGenerator_1_1	1077	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java
780	[PATCH]    if    (name    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Can    not    instantiate    value    of    type    [simple    type,    class    com.fasterxml.jackson.dataformat.xml.misc.TextValueTest$TextOnlyBean]    from    String    value    ('foo');    no    single-String    constructor/factory    method    testTextOnlyPojo    [CONTEXT]    public    PropertyName    findNameForDeserialization(Annotated    a)    {    PropertyName    name    =    _findXmlName(a);    if    (name    ==    null)    {    name    =    super.findNameForDeserialization(a);    [BUGGY]    if    (false)    {    if    (a.hasAnnotation(JacksonXmlText.class))    {    return    PropertyName.USE_DEFAULT;    }    }    }    return    name;    }    [CLASS]        JacksonXmlAnnotationIntrospector    [METHOD]    findNameForDeserialization    [RETURN_TYPE]    PropertyName        Annotated    a    [VARIABLES]    Annotated    a    PropertyName    name    boolean    DEFAULT_USE_WRAPPER    _cfgDefaultUseWrapper    b    defaultUseWrapper    long    serialVersionUID        	jacksonxml_50_JacksonXmlAnnotationIntrospector_1_1	168	1	src/main/java/com/fasterxml/jackson/dataformat/xml/JacksonXmlAnnotationIntrospector.java
781	[PATCH]    if    (a.hasAnnotation(JacksonXmlText.class))    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException:    Unrecognized    field       "_player   "    (class    com.fasterxml.jackson.dataformat.xml.MediaItem$Content),    not    marked    as    ignorable    (11    known    properties:       "size   ",       "duration   ",       "width   ",       "height   ",       "title   ",       "uri   ",       "bitrate   ",       "persons   ",       "player   ",       "format   ",       "copyright   "])    testRoundtrip    [CONTEXT]    public    PropertyName    findNameForSerialization(Annotated    a)    {    PropertyName    name    =    _findXmlName(a);    if    (name    ==    null)    {    name    =    super.findNameForSerialization(a);    if    (name    ==    null)    {    [BUGGY]    if    (true)    {    return    PropertyName.USE_DEFAULT;    }    }    }    return    name;    }    [CLASS]        JacksonXmlAnnotationIntrospector    [METHOD]    findNameForSerialization    [RETURN_TYPE]    PropertyName        Annotated    a    [VARIABLES]    Annotated    a    PropertyName    name    boolean    DEFAULT_USE_WRAPPER    _cfgDefaultUseWrapper    b    defaultUseWrapper    long    serialVersionUID        	jacksonxml_47_JacksonXmlAnnotationIntrospector_1_1	154	1	src/main/java/com/fasterxml/jackson/dataformat/xml/JacksonXmlAnnotationIntrospector.java
782	[PATCH]    if    (_xmlPrettyPrinter    !=    null)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    (was    java.lang.NullPointerException)    (through    reference    chain:    com.fasterxml.jackson.dataformat.xml.FiveMinuteUser[   "verified   "])    testRoundTripWithJacksonExample    [CONTEXT]    if    (_nextName    ==    null)    {    handleMissingName();    }    try    {    if    (_nextIsAttribute)    {    _xmlWriter.writeBooleanAttribute(null,    _nextName.getNamespaceURI(),    _nextName.getLocalPart(),    value);    }    else    if    (checkNextIsUnwrapped())    {        _xmlWriter.writeBoolean(value);    }    else    {    [BUGGY]    if    (true)    {    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,    _nextName.getNamespaceURI(),    _nextName.getLocalPart(),    value);    }    else    {    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(),    _nextName.getLocalPart());    _xmlWriter.writeBoolean(value);    _xmlWriter.writeEndElement();    }    }    }    catch    (XMLStreamException    e)    {    [CLASS]        ToXmlGenerator    Feature    [METHOD]    writeBoolean    [RETURN_TYPE]    void        boolean    value    [VARIABLES]    XMLStreamWriter2    _xmlWriter    boolean    _defaultState    _initialized    _nextIsAttribute    _nextIsCData    _nextIsUnwrapped    _stax2Emulation    defaultState    isAttribute    isCData    isUnwrapped    state    value    XMLStreamException    e    XMLStreamWriter    _originalXmlWriter    sw    QName    _nextName    name    wrappedName    wrapperName    IOContext    _ioContext    ctxt    XmlPrettyPrinter    _xmlPrettyPrinter    String    DEFAULT_UNKNOWN_ELEMENT    fieldName    name    ns    text    value    Feature    WRITE_XML_1_1    WRITE_XML_DECLARATION    f    int    _formatFeatures    _mask    count    flags    len    length    mask    newF    offset    oldF    stdFeatures    values    xmlFeatures    LinkedList    _elementNameStack        	jacksonxml_925_ToXmlGenerator_1_1	789	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java
783	[PATCH]    int    newF    =    (_formatFeatures    &    ~mask)    |    (values    &    mask);	[BUG]    [BUGGY]    int    newF    =    (_formatFeatures    &    ~mask)    |    (values    ^    mask);    [FE]    junit.framework.ComparisonFailure:    expected:<<[?xml    version=   "1.0   "    encoding=   "UTF-8   "?>    testMultiLevel172    [CONTEXT]    public    JsonGenerator    overrideFormatFeatures(int    values,    int    mask)    {    int    oldF    =    _formatFeatures;    [BUGGY]    int    newF    =    (_formatFeatures    &    ~mask)    |    (values    ^    mask);    if    (oldF    !=    newF)    {    _formatFeatures    =    newF;    }    return    this;    }    [CLASS]        ToXmlGenerator    Feature    [METHOD]    overrideFormatFeatures    [RETURN_TYPE]    JsonGenerator        int    values    int    mask    [VARIABLES]    XMLStreamWriter2    _xmlWriter    boolean    _defaultState    _initialized    _nextIsAttribute    _nextIsCData    _nextIsUnwrapped    _stax2Emulation    defaultState    XMLStreamWriter    _originalXmlWriter    sw    QName    _nextName    IOContext    _ioContext    ctxt    XmlPrettyPrinter    _xmlPrettyPrinter    String    DEFAULT_UNKNOWN_ELEMENT    Feature    WRITE_XML_1_1    WRITE_XML_DECLARATION    f    int    _formatFeatures    _mask    flags    mask    newF    oldF    stdFeatures    values    xmlFeatures    LinkedList    _elementNameStack        	jacksonxml_717_ToXmlGenerator_1_1	276	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java
784	[PATCH]    if    (cls    ==    byte[].class    ||    cls    ==    char[].class)    {	[BUG]    [BUGGY]    if    (false    ||    cls    ==    char[].class)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Can    not    deserialize    instance    of    byte    out    of    VALUE_STRING    token    testRoundTripWithJacksonExample    [CONTEXT]    public    static    boolean    isIndexedType(JavaType    type)    {    if    (type.isContainerType())    {    Class<?>    cls    =    type.getRawClass();            [BUGGY]    if    (false    ||    cls    ==    char[].class)    {    return    false;    }        if    (Map.class.isAssignableFrom(cls))    {    return    false;    }    return    true;    }    return    false;    }    [CLASS]        TypeUtil    [METHOD]    isIndexedType    [RETURN_TYPE]    boolean        JavaType    type    [VARIABLES]    JavaType    type    boolean    Class    cls        	jacksonxml_2177_TypeUtil_1_1	20	1	src/main/java/com/fasterxml/jackson/dataformat/xml/util/TypeUtil.java
785	[PATCH]    if    (!(ch    ==    '    '    ||    ch    ==    '\r'    ||    ch    ==    '\n'    ||    ch    ==    '\t'))    {	[BUG]    [BUGGY]    if    (!(ch    ==    '    '    ||    ch    >=    '\r'    ||    ch    ==    '\n'    ||    ch    ==    '\t'))    {    [FE]    junit.framework.AssertionFailedError    testSimpleValidComment    [CONTEXT]    private    final    static    int    skipSpace(InputAccessor    acc,    byte    b)    throws    IOException    {    while    (true)    {    int    ch    =    (int)    b    &    0xFF;    [BUGGY]    if    (!(ch    ==    '    '    ||    ch    >=    '\r'    ||    ch    ==    '\n'    ||    ch    ==    '\t'))    {    return    ch;    }    if    (!acc.hasMoreBytes())    {    return    -1;    }    b    =    acc.nextByte();    ch    =    (int)    b    &    0xFF;    }    }    [CLASS]        XmlFactory    [METHOD]    skipSpace    [RETURN_TYPE]    int        InputAccessor    acc    byte    b    [VARIABLES]    XMLOutputFactory    _xmlOutputFactory    f    outf    xmlOut    boolean    byte    BYTE_D    BYTE_EXCL    BYTE_HYPHEN    BYTE_LT    BYTE_QMARK    BYTE_l    BYTE_m    BYTE_x    UTF8_BOM_1    UTF8_BOM_2    UTF8_BOM_3    b    String    FORMAT_NAME_XML    _cfgNameForTextElement    _jdkXmlInFactory    _jdkXmlOutFactory    content    matchStr    name    nameForTextElem    InputAccessor    acc    long    serialVersionUID    int    DEFAULT_XML_GENERATOR_FEATURE_FLAGS    DEFAULT_XML_PARSER_FEATURE_FLAGS    _xmlGeneratorFeatures    _xmlParserFeatures    ch    i    len    offset    xgFeatures    xpFeatures    XMLInputFactory    _xmlInputFactory    f    inf    xmlIn        	jacksonxml_297_XmlFactory_1_1	804	1	src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java
786	[PATCH]    int    newF    =    (_formatFeatures    &    ~mask)    |    (values    &    mask);	[BUG]    [BUGGY]    int    newF    =    (_formatFeatures    |    ~mask)    |    (values    &    mask);    [FE]    junit.framework.ComparisonFailure:    expected:<<?xml    version=   "1.[0]   "    encoding=   "UTF-8   "?>...>    but    was:<<?xml    version=   "1.[1]   "    encoding=   "UTF-8   "?>...>    testMultiLevel172    [CONTEXT]    public    JsonGenerator    overrideFormatFeatures(int    values,    int    mask)    {    int    oldF    =    _formatFeatures;    [BUGGY]    int    newF    =    (_formatFeatures    |    ~mask)    |    (values    &    mask);    if    (oldF    !=    newF)    {    _formatFeatures    =    newF;    }    return    this;    }    [CLASS]        ToXmlGenerator    Feature    [METHOD]    overrideFormatFeatures    [RETURN_TYPE]    JsonGenerator        int    values    int    mask    [VARIABLES]    XMLStreamWriter2    _xmlWriter    boolean    _defaultState    _initialized    _nextIsAttribute    _nextIsCData    _nextIsUnwrapped    _stax2Emulation    defaultState    XMLStreamWriter    _originalXmlWriter    sw    QName    _nextName    IOContext    _ioContext    ctxt    XmlPrettyPrinter    _xmlPrettyPrinter    String    DEFAULT_UNKNOWN_ELEMENT    Feature    WRITE_XML_1_1    WRITE_XML_DECLARATION    f    int    _formatFeatures    _mask    flags    mask    newF    oldF    stdFeatures    values    xmlFeatures    LinkedList    _elementNameStack        	jacksonxml_716_ToXmlGenerator_1_1	276	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java
787	[PATCH]    if    (_nextIsAttribute)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.ComparisonFailure:    expected:<<Individual[    identifier=   "1   "]><givenName>Jay</giv...>    but    was:<<Individual[><identifier>1</identifier]><givenName>Jay</giv...>    testPersonAsXml    [CONTEXT]    public    void    writeNumber(long    l)    throws    IOException    {    _verifyValueWrite(   "write    number   ");    if    (_nextName    ==    null)    {    handleMissingName();    }    try    {    [BUGGY]    if    (false)    {    _xmlWriter.writeLongAttribute(null,    _nextName.getNamespaceURI(),    _nextName.getLocalPart(),    l);    }    else    if    (checkNextIsUnwrapped())    {    _xmlWriter.writeLong(l);    }    else    {    if    (_xmlPrettyPrinter    !=    null)    {    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,    _nextName.getNamespaceURI(),    _nextName.getLocalPart(),    l);    }    else    {    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(),    _nextName.getLocalPart());    [CLASS]        ToXmlGenerator    Feature    [METHOD]    writeNumber    [RETURN_TYPE]    void        long    l    [VARIABLES]    XMLStreamWriter2    _xmlWriter    boolean    _defaultState    _initialized    _nextIsAttribute    _nextIsCData    _nextIsUnwrapped    _stax2Emulation    defaultState    isAttribute    isCData    isUnwrapped    state    value    XMLStreamException    e    XMLStreamWriter    _originalXmlWriter    sw    QName    _nextName    name    wrappedName    wrapperName    IOContext    _ioContext    ctxt    XmlPrettyPrinter    _xmlPrettyPrinter    String    DEFAULT_UNKNOWN_ELEMENT    fieldName    name    ns    text    value    Feature    WRITE_XML_1_1    WRITE_XML_DECLARATION    f    int    _formatFeatures    _mask    count    flags    i    len    length    mask    newF    offset    oldF    stdFeatures    values    xmlFeatures    LinkedList    _elementNameStack    long    l        	jacksonxml_960_ToXmlGenerator_1_1	869	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java
788	[PATCH]    if    (c    >    127)    continue;	[BUG]    [BUGGY]    if    (c    >    0)    continue;    [FE]    junit.framework.ComparisonFailure:    expected:<...peWithClassProperty    [_]class=   "com.fasterxml...>    but    was:<...peWithClassProperty    [@]class=   "com.fasterxml...>    testAsClassProperty    [CONTEXT]    if    (name.endsWith(   "s   "))    {    sb.append(   "es   ");    }    else    {    sb.append('s');    }    }    else    {    sb    =    new    StringBuilder(name);    }    for    (int    i    =    0,    len    =    name.length();    i    <    len;    ++i)    {    char    c    =    name.charAt(i);    [BUGGY]    if    (c    >    0)    continue;    if    (c    >=    'a'    &&    c    <=    'z')    continue;    if    (c    >=    'A'    &&    c    <=    'Z')    continue;    if    (c    >=    '0'    &&    c    <=    '9')    continue;    if    (c    ==    '_'    ||    c    ==    '.'    ||    c    ==    '-')    continue;        ++changes;    if    (c    ==    '$')    {    sb.setCharAt(i,    '.');    }    else    {    sb.setCharAt(i,    '_');    [CLASS]        StaxUtil    [METHOD]    sanitizeXmlTypeName    [RETURN_TYPE]    String        String    name    [VARIABLES]    boolean    StringBuilder    sb    char    c    String    name    int    changes    i    len        	jacksonxml_2112_StaxUtil_1_1	54	1	src/main/java/com/fasterxml/jackson/dataformat/xml/util/StaxUtil.java
789	[PATCH]    if    (_nextIsUnwrapped)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.ComparisonFailure:    expected:<<Simple    a=   "13   ">[something]</Simple>>    but    was:<<Simple    a=   "13   ">[<value>something</value>]</Simple>>    testAsTextWithJAXB    [CONTEXT]    protected    boolean    checkNextIsUnwrapped()    {    [BUGGY]    if    (false)    {    _nextIsUnwrapped    =    false;    return    true;    }    return    false;    }    [CLASS]        ToXmlGenerator    Feature    [METHOD]    checkNextIsUnwrapped    [RETURN_TYPE]    boolean        [VARIABLES]    XMLStreamWriter2    _xmlWriter    boolean    _defaultState    _initialized    _nextIsAttribute    _nextIsCData    _nextIsUnwrapped    _stax2Emulation    defaultState    isAttribute    isCData    isUnwrapped    state    usePlain    value    XMLStreamWriter    _originalXmlWriter    sw    QName    _nextName    name    wrappedName    wrapperName    IOContext    _ioContext    ctxt    XmlPrettyPrinter    _xmlPrettyPrinter    String    DEFAULT_UNKNOWN_ELEMENT    encodedValue    fieldName    name    ns    text    typeMsg    value    Feature    WRITE_XML_1_1    WRITE_XML_DECLARATION    f    int    _formatFeatures    _mask    count    flags    i    len    length    mask    newF    offset    oldF    status    stdFeatures    values    xmlFeatures    LinkedList    _elementNameStack        	jacksonxml_1070_ToXmlGenerator_1_1	1121	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java
790	[PATCH]    }    else    if    (checkNextIsUnwrapped())    {	[BUG]    [BUGGY]    }    else    if    (true)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Can    not    deserialize    instance    of    java.util.ArrayList    out    of    VALUE_STRING    token    testRoundtrip    [CONTEXT]    {    _verifyValueWrite(   "write    String    value   ");    if    (_nextName    ==    null)    {    handleMissingName();    }    try    {    if    (_nextIsAttribute)    {    _xmlWriter.writeAttribute(_nextName.getNamespaceURI(),    _nextName.getLocalPart(),    text);    [BUGGY]    }    else    if    (true)    {                if(_nextIsCData)    {    _xmlWriter.writeCData(text);    }    else    {    _xmlWriter.writeCharacters(text);    }    }    else    if    (_xmlPrettyPrinter    !=    null)    {    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,    [CLASS]        ToXmlGenerator    Feature    [METHOD]    writeString    [RETURN_TYPE]    void        String    text    [VARIABLES]    XMLStreamWriter2    _xmlWriter    boolean    _defaultState    _initialized    _nextIsAttribute    _nextIsCData    _nextIsUnwrapped    _stax2Emulation    defaultState    isAttribute    isCData    isUnwrapped    state    XMLStreamException    e    XMLStreamWriter    _originalXmlWriter    sw    QName    _nextName    name    wrappedName    wrapperName    IOContext    _ioContext    ctxt    XmlPrettyPrinter    _xmlPrettyPrinter    String    DEFAULT_UNKNOWN_ELEMENT    fieldName    name    ns    text    value    Feature    WRITE_XML_1_1    WRITE_XML_DECLARATION    f    int    _formatFeatures    _mask    count    flags    mask    newF    oldF    stdFeatures    values    xmlFeatures    LinkedList    _elementNameStack        	jacksonxml_825_ToXmlGenerator_1_1	579	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java
791	[PATCH]    _mask    =    (1    <<    ordinal());	[BUG]    [BUGGY]    _mask    =    (1    >>    ordinal());    [FE]    junit.framework.ComparisonFailure:    expected:<<[]StringBean><text>abc...>    but    was:<<[?xml    version='1.1'    encoding='UTF-8'?><]StringBean><text>abc...>    testXml11Declaration    [CONTEXT]    private    Feature(boolean    defaultState)    {    _defaultState    =    defaultState;    [BUGGY]    _mask    =    (1    >>    ordinal());    }    [CLASS]        ToXmlGenerator    Feature    [METHOD]    <init>    [RETURN_TYPE]    ToXmlGenerator$Feature(boolean)        boolean    defaultState    [VARIABLES]    XMLStreamWriter2    _xmlWriter    boolean    _defaultState    _initialized    _nextIsAttribute    _nextIsCData    _nextIsUnwrapped    _stax2Emulation    defaultState    XMLStreamWriter    _originalXmlWriter    QName    _nextName    IOContext    _ioContext    XmlPrettyPrinter    _xmlPrettyPrinter    String    DEFAULT_UNKNOWN_ELEMENT    Feature    WRITE_XML_1_1    WRITE_XML_DECLARATION    int    _formatFeatures    _mask    LinkedList    _elementNameStack        	jacksonxml_678_ToXmlGenerator_1_1	82	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java
792	[PATCH]    }    else    if    (ctxt.inObject())    {	[BUG]    [BUGGY]    }    else    if    (true)    {    [FE]    com.fasterxml.jackson.core.JsonGenerationException:    Current    context    not    an    object    but    ROOT    testRoundtrip    [CONTEXT]                    if    (isEnabled(JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT))    {    try    {    while    (true)    {    JsonStreamContext    ctxt    =    getOutputContext();    if    (ctxt.inArray())    {    writeEndArray();    [BUGGY]    }    else    if    (true)    {    writeEndObject();    }    else    {    break;    }    }    }    catch    (ArrayIndexOutOfBoundsException    e)    {                throw    new    JsonGenerationException(e);    [CLASS]        ToXmlGenerator    Feature    [METHOD]    close    [RETURN_TYPE]    void        [VARIABLES]    QName    _nextName    name    wrappedName    wrapperName    String    DEFAULT_UNKNOWN_ELEMENT    encodedValue    fieldName    name    ns    text    typeMsg    value    Feature    WRITE_XML_1_1    WRITE_XML_DECLARATION    f    int    _formatFeatures    _mask    count    flags    i    len    length    mask    newF    offset    oldF    status    stdFeatures    values    xmlFeatures    LinkedList    _elementNameStack    XMLStreamWriter2    _xmlWriter    boolean    _defaultState    _initialized    _nextIsAttribute    _nextIsCData    _nextIsUnwrapped    _stax2Emulation    defaultState    isAttribute    isCData    isUnwrapped    state    usePlain    value    XMLStreamException    e    XMLStreamWriter    _originalXmlWriter    sw    IOContext    _ioContext    ctxt    XmlPrettyPrinter    _xmlPrettyPrinter    ArrayIndexOutOfBoundsException    e    JsonStreamContext    ctxt        	jacksonxml_1061_ToXmlGenerator_1_1	1079	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java
793	[PATCH]    if    (acc.nextByte()    ==    BYTE_HYPHEN)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError    testSimpleValidComment    [CONTEXT]            if    (!acc.hasMoreBytes())    {    return    MatchStrength.INCONCLUSIVE;    }    b    =    acc.nextByte();    if    (b    ==    BYTE_HYPHEN)    {    if    (!acc.hasMoreBytes())    {    return    MatchStrength.INCONCLUSIVE;    }    [BUGGY]    if    (false)    {    return    MatchStrength.SOLID_MATCH;    }    }    else    if    (b    ==    BYTE_D)    {    return    tryMatch(acc,       "OCTYPE   ",    MatchStrength.SOLID_MATCH);    }    }    else    {        if    (validXmlNameStartChar(acc,    b))    {    return    MatchStrength.SOLID_MATCH;    }    [CLASS]        XmlFactory    [METHOD]    hasXMLFormat    [RETURN_TYPE]    MatchStrength        InputAccessor    acc    [VARIABLES]    XMLOutputFactory    _xmlOutputFactory    f    outf    xmlOut    boolean    maybeXmlDecl    byte    BYTE_D    BYTE_EXCL    BYTE_HYPHEN    BYTE_LT    BYTE_QMARK    BYTE_l    BYTE_m    BYTE_x    UTF8_BOM_1    UTF8_BOM_2    UTF8_BOM_3    b    String    FORMAT_NAME_XML    _cfgNameForTextElement    _jdkXmlInFactory    _jdkXmlOutFactory    content    name    nameForTextElem    InputAccessor    acc    long    serialVersionUID    int    DEFAULT_XML_GENERATOR_FEATURE_FLAGS    DEFAULT_XML_PARSER_FEATURE_FLAGS    _xmlGeneratorFeatures    _xmlParserFeatures    ch    len    offset    xgFeatures    xpFeatures    XMLInputFactory    _xmlInputFactory    f    inf    xmlIn        	jacksonxml_264_XmlFactory_1_1	757	1	src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java
794	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError    testSimpleValidPI    [CONTEXT]    private    final    static    boolean    validXmlNameStartChar(InputAccessor    acc,    byte    b)    throws    IOException    {                int    ch    =    (int)    b    &    0xFF;    if    (ch    >=    'A')    {            [BUGGY]    return    false;    }    return    false;    }    [CLASS]        XmlFactory    [METHOD]    validXmlNameStartChar    [RETURN_TYPE]    boolean        InputAccessor    acc    byte    b    [VARIABLES]    XMLOutputFactory    _xmlOutputFactory    f    outf    xmlOut    boolean    byte    BYTE_D    BYTE_EXCL    BYTE_HYPHEN    BYTE_LT    BYTE_QMARK    BYTE_l    BYTE_m    BYTE_x    UTF8_BOM_1    UTF8_BOM_2    UTF8_BOM_3    b    String    FORMAT_NAME_XML    _cfgNameForTextElement    _jdkXmlInFactory    _jdkXmlOutFactory    content    name    nameForTextElem    InputAccessor    acc    long    serialVersionUID    int    DEFAULT_XML_GENERATOR_FEATURE_FLAGS    DEFAULT_XML_PARSER_FEATURE_FLAGS    _xmlGeneratorFeatures    _xmlParserFeatures    ch    len    offset    xgFeatures    xpFeatures    XMLInputFactory    _xmlInputFactory    f    inf    xmlIn        	jacksonxml_277_XmlFactory_1_1	781	1	src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java
795	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Can    not    deserialize    instance    of    java.util.ArrayList    out    of    VALUE_STRING    token    testRoundtrip    [CONTEXT]    Class<?>    cls    =    type.getRawClass();            if    (cls    ==    byte[].class    ||    cls    ==    char[].class)    {    return    false;    }        if    (Map.class.isAssignableFrom(cls))    {    return    false;    }    [BUGGY]    return    false;    }    return    false;    }    [CLASS]        TypeUtil    [METHOD]    isIndexedType    [RETURN_TYPE]    boolean        JavaType    type    [VARIABLES]    JavaType    type    boolean    Class    cls        	jacksonxml_2187_TypeUtil_1_1	27	1	src/main/java/com/fasterxml/jackson/dataformat/xml/util/TypeUtil.java
796	[PATCH]    if    (acc.nextByte()    !=    matchStr.charAt(i))    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError    testSimpleValidDoctype    [CONTEXT]    private    final    static    MatchStrength    tryMatch(InputAccessor    acc,    String    matchStr,    MatchStrength    fullMatchStrength)    throws    IOException    {    for    (int    i    =    0,    len    =    matchStr.length();    i    <    len;    ++i)    {    if    (!acc.hasMoreBytes())    {    return    MatchStrength.INCONCLUSIVE;    }    [BUGGY]    if    (true)    {    return    MatchStrength.NO_MATCH;    }    }    return    fullMatchStrength;    }    [CLASS]        XmlFactory    [METHOD]    tryMatch    [RETURN_TYPE]    MatchStrength        InputAccessor    acc    String    matchStr    MatchStrength    fullMatchStrength    [VARIABLES]    XMLOutputFactory    _xmlOutputFactory    f    outf    xmlOut    boolean    byte    BYTE_D    BYTE_EXCL    BYTE_HYPHEN    BYTE_LT    BYTE_QMARK    BYTE_l    BYTE_m    BYTE_x    UTF8_BOM_1    UTF8_BOM_2    UTF8_BOM_3    b    String    FORMAT_NAME_XML    _cfgNameForTextElement    _jdkXmlInFactory    _jdkXmlOutFactory    content    matchStr    name    nameForTextElem    MatchStrength    fullMatchStrength    InputAccessor    acc    long    serialVersionUID    int    DEFAULT_XML_GENERATOR_FEATURE_FLAGS    DEFAULT_XML_PARSER_FEATURE_FLAGS    _xmlGeneratorFeatures    _xmlParserFeatures    ch    i    len    offset    xgFeatures    xpFeatures    XMLInputFactory    _xmlInputFactory    f    inf    xmlIn        	jacksonxml_288_XmlFactory_1_1	793	1	src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java
797	[PATCH]    if    (_cfgPrettyPrinter    !=    null)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    (was    java.lang.NullPointerException)    (through    reference    chain:    com.fasterxml.jackson.dataformat.xml.MediaItem[   "content   "])    testRoundtrip    [CONTEXT]    public    final    void    writeEndObject()    throws    IOException    {    if    (!_writeContext.inObject())    {    _reportError(   "Current    context    not    an    object    but       "+_writeContext.getTypeDesc());    }    _writeContext    =    _writeContext.getParent();    [BUGGY]    if    (true)    {        int    count    =    _nextIsAttribute    ?    0    :    _writeContext.getEntryCount();    _cfgPrettyPrinter.writeEndObject(this,    count);    }    else    {    _handleEndObject();    }    }    [CLASS]        ToXmlGenerator    Feature    [METHOD]    writeEndObject    [RETURN_TYPE]    void        [VARIABLES]    XMLStreamWriter2    _xmlWriter    boolean    _defaultState    _initialized    _nextIsAttribute    _nextIsCData    _nextIsUnwrapped    _stax2Emulation    defaultState    isAttribute    isCData    isUnwrapped    state    XMLStreamWriter    _originalXmlWriter    sw    QName    _nextName    name    wrappedName    wrapperName    IOContext    _ioContext    ctxt    XmlPrettyPrinter    _xmlPrettyPrinter    String    DEFAULT_UNKNOWN_ELEMENT    fieldName    name    ns    value    Feature    WRITE_XML_1_1    WRITE_XML_DECLARATION    f    int    _formatFeatures    _mask    count    flags    mask    newF    oldF    stdFeatures    values    xmlFeatures    LinkedList    _elementNameStack        	jacksonxml_790_ToXmlGenerator_1_1	509	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java
798	[PATCH]    if    (!acc.hasMoreBytes())    {	[BUG]    [BUGGY]    if    (!false)    {    [FE]    junit.framework.AssertionFailedError    testSimpleValidComment    [CONTEXT]    return    MatchStrength.SOLID_MATCH;    }        if    (validXmlNameStartChar(acc,    b))    {    return    MatchStrength.SOLID_MATCH;    }    }    else    if    (b    ==    BYTE_EXCL)    {                [BUGGY]    if    (!false)    {    return    MatchStrength.INCONCLUSIVE;    }    b    =    acc.nextByte();    if    (b    ==    BYTE_HYPHEN)    {    if    (!acc.hasMoreBytes())    {    return    MatchStrength.INCONCLUSIVE;    }    if    (acc.nextByte()    ==    BYTE_HYPHEN)    {    return    MatchStrength.SOLID_MATCH;    }    [CLASS]        XmlFactory    [METHOD]    hasXMLFormat    [RETURN_TYPE]    MatchStrength        InputAccessor    acc    [VARIABLES]    XMLOutputFactory    _xmlOutputFactory    f    outf    xmlOut    boolean    maybeXmlDecl    byte    BYTE_D    BYTE_EXCL    BYTE_HYPHEN    BYTE_LT    BYTE_QMARK    BYTE_l    BYTE_m    BYTE_x    UTF8_BOM_1    UTF8_BOM_2    UTF8_BOM_3    b    String    FORMAT_NAME_XML    _cfgNameForTextElement    _jdkXmlInFactory    _jdkXmlOutFactory    content    name    nameForTextElem    InputAccessor    acc    long    serialVersionUID    int    DEFAULT_XML_GENERATOR_FEATURE_FLAGS    DEFAULT_XML_PARSER_FEATURE_FLAGS    _xmlGeneratorFeatures    _xmlParserFeatures    ch    len    offset    xgFeatures    xpFeatures    XMLInputFactory    _xmlInputFactory    f    inf    xmlIn        	jacksonxml_254_XmlFactory_1_1	749	1	src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java
799	[PATCH]    if    (_currToken    !=    JsonToken.VALUE_STRING    &&	[BUG]    [BUGGY]    if    (true    &&    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Current    token    (VALUE_STRING)    not    VALUE_STRING    or    VALUE_EMBEDDED_OBJECT,    can    not    access    as    binary    testTwoBinaryProps    [CONTEXT]    public    byte[]    getBinaryValue(Base64Variant    b64variant)    throws    IOException    {    [BUGGY]    if    (true    &&    (_currToken    !=    JsonToken.VALUE_EMBEDDED_OBJECT    ||    _binaryValue    ==    null))    {    _reportError(   "Current    token    (   "+_currToken+   ")    not    VALUE_STRING    or    VALUE_EMBEDDED_OBJECT,    can    not    access    as    binary   ");    }                if    (_binaryValue    ==    null)    {    try    {    _binaryValue    =    _decodeBase64(b64variant);    }    catch    (IllegalArgumentException    iae)    {    [CLASS]        FromXmlParser    Feature    [METHOD]    getBinaryValue    [RETURN_TYPE]    byte[]        Base64Variant    b64variant    [VARIABLES]    Set    _namesToWrap    namesToWrap    XmlReadContext    _parsingContext    ctxt    parent    String    DEFAULT_UNNAMED_TEXT_PROPERTY    _cfgNameForTextElement    _currText    defValue    name    str    text    ObjectCodec    _objectCodec    c    codec    ByteArrayBuilder    _byteArrayBuilder    int    _formatFeatures    _mask    flags    genericParserFeatures    mask    token    values    xmlFeatures    byte[]    _binaryValue    boolean    _closed    _defaultState    _mayBeLeaf    defaultState    state    XmlTokenStream    _xmlTokens    IOContext    _ioContext    ctxt    Base64Variant    b64variant    JsonToken    _nextToken    t    IllegalArgumentException    iae        	jacksonxml_622_FromXmlParser_1_1	825	1	src/main/java/com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java
800	[PATCH]    if    (ignoreVersionsAfter    !=    VersionConstants.IGNORE_VERSIONS)    {	[BUG]    [BUGGY]    if    (ignoreVersionsAfter    <    VersionConstants.IGNORE_VERSIONS)    {    [FE]    junit.framework.ComparisonFailure:    expected:<[]>    but    was:<[{   "d   ":3,   "c   ":2,   "a   ":0,   "b   ":1}]>    testIgnoreLaterVersionClassSerialization    [CONTEXT]    List<ExclusionStrategy>    deserializationStrategies    =    new    LinkedList<ExclusionStrategy>(exclusionStrategies);    serializationStrategies.add(modifierBasedExclusionStrategy);    deserializationStrategies.add(modifierBasedExclusionStrategy);    if    (!serializeInnerClasses)    {    serializationStrategies.add(innerClassExclusionStrategy);    deserializationStrategies.add(innerClassExclusionStrategy);    }    [BUGGY]    if    (ignoreVersionsAfter    <    VersionConstants.IGNORE_VERSIONS)    {    serializationStrategies.add(new    VersionExclusionStrategy(ignoreVersionsAfter));    deserializationStrategies.add(new    VersionExclusionStrategy(ignoreVersionsAfter));    }    if    (excludeFieldsWithoutExposeAnnotation)    {    serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);    deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);    }    ExclusionStrategy    serializationExclusionStrategy    =    new    DisjunctionExclusionStrategy(serializationStrategies);    ExclusionStrategy    deserializationExclusionStrategy    =    [CLASS]        GsonBuilder    [METHOD]    create    [RETURN_TYPE]    Gson        [VARIABLES]    MappedObjectConstructor    objConstructor    ExposeAnnotationSerializationExclusionStrategy    exposeAnnotationSerializationExclusionStrategy    ModifierBasedExclusionStrategy    modifierBasedExclusionStrategy    InnerClassExclusionStrategy    innerClassExclusionStrategy    double    ignoreVersionsAfter    LongSerializationPolicy    longSerializationPolicy    serializationPolicy    Gson    gson    String    datePattern    pattern    int    dateStyle    style    timeStyle    ExposeAnnotationDeserializationExclusionStrategy    exposeAnnotationDeserializationExclusionStrategy    boolean    escapeHtmlChars    excludeFieldsWithoutExposeAnnotation    generateNonExecutableJson    prettyPrinting    serializeInnerClasses    serializeNulls    serializeSpecialFloatingPointValues    Collection    exclusionStrategies    FieldNamingStrategy2    fieldNamingPolicy    fieldNamingStrategy    List    deserializationStrategies    serializationStrategies    ExclusionStrategy    deserializationExclusionStrategy    serializationExclusionStrategy    ParameterizedTypeHandlerMap    customDeserializers    customInstanceCreators    customSerializers    deserializers    instanceCreators    serializers        	gson_1716_GsonBuilder_1_1	512	1	gson/src/main/java/com/google/gson/GsonBuilder.java
801	[PATCH]    if    (context    ==    JsonScope.NONEMPTY_OBJECT)    {    //    first    in    object	[BUG]    [BUGGY]    if    (false)    {    //    first    in    object    [FE]    java.lang.IllegalStateException:    Nesting    problem:    [NONEMPTY_DOCUMENT,    NONEMPTY_OBJECT]    testReadWriteTwoObjects    [CONTEXT]    private    void    beforeName()    throws    IOException    {    JsonScope    context    =    peek();    [BUGGY]    if    (false)    {    out.write(',');    }    else    if    (context    !=    JsonScope.EMPTY_OBJECT)    {    throw    new    IllegalStateException(   "Nesting    problem:       "    +    stack);    }    newline();    replaceTop(JsonScope.DANGLING_NAME);    }    [CLASS]        JsonWriter    [METHOD]    beforeName    [RETURN_TYPE]    void        [VARIABLES]    List    stack    boolean    htmlSafe    lenient    value    String    closeBracket    indent    name    openBracket    separator    string    value    JsonScope    context    Writer    out        	gson_974_JsonWriter_1_1	503	1	gson/src/main/java/com/google/gson/stream/JsonWriter.java
802	[PATCH]    return    element    ==    null    ?    JsonNull.createJsonNull()    :    element;	[BUG]    [BUGGY]    return    false    ?    JsonNull.createJsonNull()    :    element;    [FE]    junit.framework.AssertionFailedError    testSerializerReturnsNull    [CONTEXT]    Pair<JsonSerializer<?>,ObjectTypePair>    pair    =    objTypePair.getMatchingHandler(serializers);    if    (pair    ==    null)    {    return    null;    }    JsonSerializer    serializer    =    pair.first;    objTypePair    =    pair.second;    start(objTypePair);    try    {    JsonElement    element    =    serializer.serialize(objTypePair.getObject(),    objTypePair.getType(),    context);    [BUGGY]    return    false    ?    JsonNull.createJsonNull()    :    element;    }    finally    {    end(objTypePair);    }    }    [CLASS]        JsonSerializationVisitor    [METHOD]    findAndInvokeCustomSerializer    [RETURN_TYPE]    JsonElement        ObjectTypePair    objTypePair    [VARIABLES]    boolean    serializeNulls    JsonElement    childElement    element    json    root    JsonSerializationContext    context    ObjectTypePair    objTypePair    MemoryRefStack    ancestors    JsonSerializer    serializer    ParameterizedTypeHandlerMap    serializers    ObjectNavigatorFactory    factory    Pair    pair        	gson_1926_JsonSerializationVisitor_1_1	186	1	gson/src/main/java/com/google/gson/JsonSerializationVisitor.java
803	[PATCH]    if    (context    !=    nonempty    &&    context    !=    empty)    {	[BUG]    [BUGGY]    if    (context    !=    nonempty    &&    true)    {    [FE]    java.lang.IllegalStateException:    Nesting    problem:    [NONEMPTY_DOCUMENT,    EMPTY_OBJECT]    testUserDefinedExclusionPolicies    [CONTEXT]    private    JsonWriter    close(JsonScope    empty,    JsonScope    nonempty,    String    closeBracket)    throws    IOException    {    JsonScope    context    =    peek();    [BUGGY]    if    (context    !=    nonempty    &&    true)    {    throw    new    IllegalStateException(   "Nesting    problem:       "    +    stack);    }    stack.remove(stack.size()    -    1);    if    (context    ==    nonempty)    {    newline();    }    out.write(closeBracket);    return    this;    }    [CLASS]        JsonWriter    [METHOD]    close    [RETURN_TYPE]    JsonWriter        JsonScope    empty    JsonScope    nonempty    String    closeBracket    [VARIABLES]    List    stack    boolean    htmlSafe    lenient    String    closeBracket    indent    openBracket    separator    JsonScope    context    empty    nonempty    Writer    out        	gson_869_JsonWriter_1_1	276	1	gson/src/main/java/com/google/gson/stream/JsonWriter.java
804	[PATCH]    checkArgument(obj    !=    null);	[BUG]    [BUGGY]    checkArgument(true);    [FE]    junit.framework.AssertionFailedError:    Null    separator    string    is    not    supported    testInvalidInstantiation    [CONTEXT]    public    static    void    checkNotNull(Object    obj)    {    [BUGGY]    checkArgument(true);    }    [CLASS]        Preconditions    [METHOD]    checkNotNull    [RETURN_TYPE]    void        Object    obj    [VARIABLES]    boolean    Object    obj        	gson_2068_Preconditions_1_1	34	1	gson/src/main/java/com/google/gson/Preconditions.java
805	[PATCH]    return    toRawClass(castedType.getUpperBounds()[0]);	[BUG]    [BUGGY]    return    toRawClass(castedType.getUpperBounds()[-1]);    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testWildcardPrimitiveCollectionSerilaization    [CONTEXT]    return    (Class<?>)    type;    }    else    if    (type    instanceof    ParameterizedType)    {    ParameterizedType    actualType    =    (ParameterizedType)type;    return    toRawClass(actualType.getRawType());    }    else    if    (type    instanceof    GenericArrayType)    {    GenericArrayType    actualType    =    (GenericArrayType)    type;    Class<?>    rawClass    =    toRawClass(actualType.getGenericComponentType());    return    wrapWithArray(rawClass);    }    else    if    (type    instanceof    WildcardType)    {    WildcardType    castedType    =    (WildcardType)    type;    [BUGGY]    return    toRawClass(castedType.getUpperBounds()[-1]);    }    else    {    throw    new    IllegalArgumentException(   "Type    \'   "    +    type    +       "\'    is    not    a    Class,       "    +       "ParameterizedType,    or    GenericArrayType.    Can't    extract    class.   ");    }    }    [CLASS]        TypeUtils    [METHOD]    toRawClass    [RETURN_TYPE]    Class        Type    type    [VARIABLES]    ParameterizedType    actualType    Type    type    WildcardType    castedType    boolean    Class    rawClass    GenericArrayType    actualType        	gson_2208_TypeUtils_1_1	81	1	gson/src/main/java/com/google/gson/TypeUtils.java
806	[PATCH]    if    (child    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.NullPointerException    testCollectionOfObjectWithNullSerialization    [CONTEXT]    public    JsonElement    serialize(Collection    src,    Type    typeOfSrc,    JsonSerializationContext    context)    {    if    (src    ==    null)    {    return    JsonNull.createJsonNull();    }    JsonArray    array    =    new    JsonArray();    Type    childGenericType    =    null;    if    (typeOfSrc    instanceof    ParameterizedType)    {    childGenericType    =    new    TypeInfoCollection(typeOfSrc).getElementType();    }    for    (Object    child    :    src)    {    [BUGGY]    if    (false)    {    array.add(JsonNull.createJsonNull());    }    else    {    Type    childType    =    (childGenericType    ==    null    ||    childGenericType    ==    Object.class)    ?    child.getClass()    :    childGenericType;    JsonElement    element    =    context.serialize(child,    childType);    array.add(element);    }    }    return    array;    }    [CLASS]        DefaultTypeAdapters    DefaultDateTypeAdapter    DefaultJavaSqlDateTypeAdapter    DefaultTimestampDeserializer    DefaultTimeTypeAdapter    GregorianCalendarTypeAdapter    EnumTypeAdapter    UrlTypeAdapter    UriTypeAdapter    UuidTypeAdapter    LocaleTypeAdapter    CollectionTypeAdapter    PropertiesCreator    MapTypeAdapter    BigDecimalTypeAdapter    BigIntegerTypeAdapter    NumberTypeAdapter    LongSerializer    LongDeserializer    IntegerTypeAdapter    ShortTypeAdapter    ByteTypeAdapter    FloatSerializer    FloatDeserializer    DoubleSerializer    DoubleDeserializer    CharacterTypeAdapter    StringTypeAdapter    BooleanTypeAdapter    TreeSetCreator    HashSetCreator    [METHOD]    serialize    [RETURN_TYPE]    JsonElement        Collection    src    Type    typeOfSrc    JsonSerializationContext    context    [VARIABLES]    LocaleTypeAdapter    LOCALE_TYPE_ADAPTER    IntegerTypeAdapter    INTEGER_TYPE_ADAPTER    BigIntegerTypeAdapter    BIG_INTEGER_TYPE_ADAPTER    TreeSetCreator    TREE_SET_CREATOR    StringTypeAdapter    STRING_TYPE_ADAPTER    LongSerializationPolicy    longSerializationPolicy    String    DAY_OF_MONTH    HOUR_OF_DAY    MINUTE    MONTH    SECOND    YEAR    country    dateFormatAsString    datePattern    language    locale    variant    DefaultDateTypeAdapter    DATE_TYPE_ADAPTER    UriTypeAdapter    URI_TYPE_ADAPTER    CollectionTypeAdapter    COLLECTION_TYPE_ADAPTER    MapTypeAdapter    MAP_TYPE_ADAPTER    BigDecimalTypeAdapter    BIG_DECIMAL_TYPE_ADAPTER    DefaultTimeTypeAdapter    TIME_TYPE_ADAPTER    UuidTypeAdapter    UUUID_TYPE_ADAPTER    FloatDeserializer    FLOAT_TYPE_ADAPTER    HashSetCreator    HASH_SET_CREATOR    ShortTypeAdapter    SHORT_TYPE_ADAPTER    ByteTypeAdapter    BYTE_TYPE_ADAPTER    DefaultJavaSqlDateTypeAdapter    JAVA_SQL_DATE_TYPE_ADAPTER    PropertiesCreator    PROPERTIES_CREATOR    JsonArray    array    BooleanTypeAdapter    BOOLEAN_TYPE_ADAPTER    Type    childGenericType    childType    typeOfSrc    boolean    serializeSpecialDoubleValues    serializeSpecialFloatingPointValues    LongDeserializer    LONG_DESERIALIZER    DefaultTimestampDeserializer    TIMESTAMP_DESERIALIZER    NumberTypeAdapter    NUMBER_TYPE_ADAPTER    JsonElement    element    EnumTypeAdapter    ENUM_TYPE_ADAPTER    DateFormat    format    JsonSerializationContext    context    GregorianCalendarTypeAdapter    GREGORIAN_CALENDAR_TYPE_ADAPTER    Collection    src    UrlTypeAdapter    URL_TYPE_ADAPTER    Object    child    CharacterTypeAdapter    CHARACTER_TYPE_ADAPTER    DoubleDeserializer    DOUBLE_TYPE_ADAPTER    ParameterizedTypeHandlerMap    DEFAULT_DESERIALIZERS    DEFAULT_INSTANCE_CREATORS    DEFAULT_SERIALIZERS    map    serializers        	gson_190_DefaultTypeAdapters_1_1	522	1	gson/src/main/java/com/google/gson/DefaultTypeAdapters.java
807	[PATCH]    .append(HEX_CHARS[(codePoint    >>>    12)    &    0xf])	[BUG]    [BUGGY]    .append(HEX_CHARS[(codePoint    >>>    12)    |    15])    [FE]    junit.framework.ComparisonFailure:    expected:<123\u[003e456\u0]03c>    but    was:<123\u[f03e456\uf]03c>    testGreaterThanAndLessThanEscaping    [CONTEXT]                    char[]    surrogates    =    Character.toChars(codePoint);    appendHexJavaScriptRepresentation(surrogates[0],    out);    appendHexJavaScriptRepresentation(surrogates[1],    out);    return;    }    out.append(   "\\u   ")    [BUGGY]    .append(HEX_CHARS[(codePoint    >>>    12)    |    15])    .append(HEX_CHARS[(codePoint    >>>    8)    &    0xf])    .append(HEX_CHARS[(codePoint    >>>    4)    &    0xf])    .append(HEX_CHARS[codePoint    &    0xf]);    }    [CLASS]        Escaper    [METHOD]    appendHexJavaScriptRepresentation    [RETURN_TYPE]    void        int    codePoint    Appendable    out    [VARIABLES]    Set    HTML_ESCAPE_CHARS    JS_ESCAPE_CHARS    boolean    escapeHtmlCharacters    int    codePoint    char[]    HEX_CHARS    surrogates    Appendable    out        	gson_456_Escaper_1_1	155	1	gson/src/main/java/com/google/gson/Escaper.java
808	[PATCH]    if    (value    ==    null    ||    (token    !=    JsonToken.STRING    &&    token    !=    JsonToken.NUMBER))    {	[BUG]    [BUGGY]    if    (value    ==    null)    {    [FE]    junit.framework.AssertionFailedError    testNullLiteralIsNotAString    [CONTEXT]    public    String    nextString()    throws    IOException    {    peek();    [BUGGY]    if    (value    ==    null)    {    throw    new    IllegalStateException(   "Expected    a    string    but    was       "    +    peek());    }    String    result    =    value;    advance();    return    result;    }    [CLASS]        JsonReader    [METHOD]    nextString    [RETURN_TYPE]    String        [VARIABLES]    boolean    hasToken    lenient    skipping    Reader    in    List    stack    JsonToken    expected    firstToken    result    token    String    name    result    value    int    i    limit    pos    char[]    NON_EXECUTE_PREFIX    buffer        	gson_1087_JsonReader_1_1	461	1	gson/src/main/java/com/google/gson/stream/JsonReader.java
809	[PATCH]    if    (typeAsClass.isAssignableFrom(actualClass))    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.ComparisonFailure:    expected:<[Sub]Serializer>    but    was:<[Base]Serializer>    testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances    [CONTEXT]    static    Type    getActualTypeIfMoreSpecific(Type    type,    Class<?>    actualClass)    {    if    (type    instanceof    Class<?>)    {    Class<?>    typeAsClass    =    (Class<?>)    type;    [BUGGY]    if    (false)    {    type    =    actualClass;    }    if    (type    ==    Object.class)    {    type    =    actualClass;    }    }    return    type;    }    [CLASS]        ObjectTypePair    [METHOD]    getActualTypeIfMoreSpecific    [RETURN_TYPE]    Type        Type    type    Class<?>    actualClass    [VARIABLES]    Type    actualType    type    Object    obj    Class    actualClass    typeAsClass    boolean    preserveType        	gson_1554_ObjectTypePair_1_1	87	1	gson/src/main/java/com/google/gson/ObjectTypePair.java
810	[PATCH]    return    new    String(buffer,    start,    pos    -    start);	[BUG]    [BUGGY]    return    new    String(buffer,    start,    pos    %    start);    [FE]    com.google.gson.JsonSyntaxException:    com.google.gson.stream.MalformedJsonException:    Expected    literal    value    near    {   "   ":true}    testReadPropertyWithEmptyStringName    [CONTEXT]    case    ',':    case    '    ':    case    '\t':    case    '\f':    case    '\r':    case    '\n':    pos--;    if    (skipping)    {    return       "skipped!   ";    }    else    if    (builder    ==    null)    {    [BUGGY]    return    new    String(buffer,    start,    pos    %    start);    }    else    {    builder.append(buffer,    start,    pos    -    start);    return    builder.toString();    }    }    }    if    (builder    ==    null)    {    builder    =    new    StringBuilder();    }    [CLASS]        JsonReader    [METHOD]    nextLiteral    [RETURN_TYPE]    String        [VARIABLES]    boolean    firstElement    hasToken    lenient    result    skipping    StringBuilder    builder    Reader    in    List    stack    JsonToken    expected    firstToken    result    token    String    name    result    toFind    value    int    c    count    i    limit    minimum    pos    quote    result    start    total    char[]    NON_EXECUTE_PREFIX    buffer        	gson_1454_JsonReader_1_1	1001	1	gson/src/main/java/com/google/gson/stream/JsonReader.java
811	[PATCH]    hasToken    =    true;	[BUG]    [BUGGY]    hasToken    =    false;    [FE]    java.lang.IllegalStateException:    Expected    a    string    but    was    END_OBJECT    testDefaultTypeAdapterThrowsParseException    [CONTEXT]    private    JsonToken    readLiteral()    throws    IOException    {    String    literal    =    nextLiteral();    if    (literal.length()    ==    0)    {    throw    syntaxError(   "Expected    literal    value   ");    }    value    =    literal;    [BUGGY]    hasToken    =    false;    return    token    =    null;    }    [CLASS]        JsonReader    [METHOD]    readLiteral    [RETURN_TYPE]    JsonToken        [VARIABLES]    boolean    firstElement    hasToken    lenient    result    skipping    Reader    in    List    stack    JsonToken    expected    firstToken    result    token    String    hex    literal    name    result    toFind    value    int    c    count    i    limit    minimum    pos    quote    result    start    total    char[]    NON_EXECUTE_PREFIX    buffer        	gson_1509_JsonReader_1_1	1078	1	gson/src/main/java/com/google/gson/stream/JsonReader.java
812	[PATCH]    .append(HEX_CHARS[codePoint    &    0xf]);	[BUG]    [BUGGY]    .append(HEX_CHARS[codePoint    |    15]);    [FE]    java.lang.ArrayIndexOutOfBoundsException:    63    testGreaterThanAndLessThanEscaping    [CONTEXT]        char[]    surrogates    =    Character.toChars(codePoint);    appendHexJavaScriptRepresentation(surrogates[0],    out);    appendHexJavaScriptRepresentation(surrogates[1],    out);    return;    }    out.append(   "\\u   ")    .append(HEX_CHARS[(codePoint    >>>    12)    &    0xf])    .append(HEX_CHARS[(codePoint    >>>    8)    &    0xf])    .append(HEX_CHARS[(codePoint    >>>    4)    &    0xf])    [BUGGY]    .append(HEX_CHARS[codePoint    |    15]);    }    }    [CLASS]    	gson_476_Escaper_1_1	158	1	gson/src/main/java/com/google/gson/Escaper.java
813	[PATCH]    if    (longValue    >=    Integer.MIN_VALUE    &&    longValue    <=    Integer.MAX_VALUE)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<1>    but    was:<1>    testArrayOfPrimitivesAsObjectsDeserialization    [CONTEXT]    static    Number    stringToNumber(String    value)    {    try    {    long    longValue    =    Long.parseLong(value);    [BUGGY]    if    (false)    {    return    (int)    longValue;    }    return    longValue;    }    catch    (NumberFormatException    ignored)    {    }    try    {    return    new    BigDecimal(value);    }    catch    (NumberFormatException    ignored)    {    return    Double.parseDouble(value);        [CLASS]        JsonPrimitive    [METHOD]    stringToNumber    [RETURN_TYPE]    Number        String    value    [VARIABLES]    Class[]    PRIMITIVE_TYPES    boolean    BigInteger    INTEGER_MAX    LONG_MAX    NumberFormatException    ignored    Object    primitive    value    String    value    long    longValue        	gson_629_JsonPrimitive_1_1	155	1	gson/src/main/java/com/google/gson/JsonPrimitive.java
814	[PATCH]    if    (isJsonArray())    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.IllegalStateException:    This    is    not    a    JSON    Array.    testParseComments    [CONTEXT]    public    JsonArray    getAsJsonArray()    {    [BUGGY]    if    (false)    {    return    (JsonArray)    this;    }    throw    new    IllegalStateException(   "This    is    not    a    JSON    Array.   ");    }    [CLASS]        JsonElement    [METHOD]    getAsJsonArray    [RETURN_TYPE]    JsonArray        [VARIABLES]    Escaper    BASIC_ESCAPER    boolean        	gson_341_JsonElement_1_1	96	1	gson/src/main/java/com/google/gson/JsonElement.java
815	[PATCH]    if    (constructor.getParameterTypes().length    ==    0)    {	[BUG]    [BUGGY]    if    (constructor.getParameterTypes().length    ==    1)    {    [FE]    java.lang.RuntimeException:    No-args    constructor    for    class    com.google.gson.common.TestTypes$BagOfPrimitives    does    not    exist.    Register    an    InstanceCreator    with    Gson    for    this    type    to    fix    this    problem.    testReadWriteTwoObjects    [CONTEXT]    private    <T>    Constructor<T>    getNoArgsConstructor(Type    typeOfT)    {    TypeInfo    typeInfo    =    new    TypeInfo(typeOfT);    Class<T>    clazz    =    (Class<T>)    typeInfo.getRawClass();    Constructor<T>[]    declaredConstructors    =    (Constructor<T>[])    clazz.getDeclaredConstructors();    AccessibleObject.setAccessible(declaredConstructors,    true);    for    (Constructor<T>    constructor    :    declaredConstructors)    {    [BUGGY]    if    (constructor.getParameterTypes().length    ==    1)    {    return    constructor;    }    }    return    null;    }    [CLASS]        MappedObjectConstructor    [METHOD]    getNoArgsConstructor    [RETURN_TYPE]    <T>        Type    typeOfT    [VARIABLES]    Type    typeOfT    boolean    Constructor    constructor    Constructor[]    declaredConstructors    Class    clazz    Logger    log    ParameterizedTypeHandlerMap    instanceCreatorMap    instanceCreators    TypeInfo    typeInfo        	gson_840_MappedObjectConstructor_1_1	87	1	gson/src/main/java/com/google/gson/MappedObjectConstructor.java
816	[PATCH]    for    (int    i    =    1;    i    <    stack.size();    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    1;    i    <=    stack.size();    i++)    {    [FE]    junit.framework.ComparisonFailure:    expected:<[    testWriteMixedStreamed    [CONTEXT]    private    void    newline()    throws    IOException    {    if    (indent    ==    null)    {    return;    }    out.write(   "\n   ");    [BUGGY]    for    (int    i    =    1;    i    <=    stack.size();    i++)    {    out.write(indent);    }    }    [CLASS]        JsonWriter    [METHOD]    newline    [RETURN_TYPE]    void        [VARIABLES]    List    stack    boolean    htmlSafe    lenient    value    String    closeBracket    indent    name    openBracket    separator    string    value    Writer    out    int    i        	gson_971_JsonWriter_1_1	492	1	gson/src/main/java/com/google/gson/stream/JsonWriter.java
817	[PATCH]    return    elements.get(0).getAsDouble();	[BUG]    [BUGGY]    return    elements.get(1).getAsDouble();    [FE]    com.google.gson.JsonParseException:    The    JsonDeserializer    DoubleDeserializer    failed    to    deserialized    json    object    [-122.08]    given    the    type    double    testPrimitiveDoubleAutoboxedInASingleElementArrayDeserialization    [CONTEXT]    public    double    getAsDouble()    {    if    (elements.size()    ==    1)    {    [BUGGY]    return    elements.get(1).getAsDouble();    }    throw    new    IllegalStateException();    }    [CLASS]        JsonArray    [METHOD]    getAsDouble    [RETURN_TYPE]    double        [VARIABLES]    List    elements    boolean        	gson_527_JsonArray_1_1	147	1	gson/src/main/java/com/google/gson/JsonArray.java
818	[PATCH]    ^    (owner    ==    null    ?    0    :    owner.hashCode())	[BUG]    [BUGGY]    ^    (false    ?    0    :    owner.hashCode())    [FE]    java.lang.NullPointerException    testOurTypeFunctionality    [CONTEXT]    public    int    hashCode()    {    return    Arrays.hashCode(actualTypeArguments)    [BUGGY]    ^    (false    ?    0    :    owner.hashCode())    ^    (rawType    ==    null    ?    0    :    rawType.hashCode());    }    [CLASS]        ParameterizedTypeImpl    [METHOD]    hashCode    [RETURN_TYPE]    int        [VARIABLES]    Type[]    actualTypeArguments    Type    owner    rawType    thatOwner    thatRawType    boolean        	gson_2058_ParameterizedTypeImpl_1_1	88	1	gson/src/main/java/com/google/gson/ParameterizedTypeImpl.java
819	[PATCH]    .append(HEX_CHARS[(codePoint    >>>    12)    &    0xf])	[BUG]    [BUGGY]    .append(HEX_CHARS[(codePoint    >>>    12)    &    -15])    [FE]    junit.framework.ComparisonFailure:    expected:<123\u[2]029    456>    but    was:<123\u[0]029    456>    testParagraphSeparatorEscaping    [CONTEXT]                    char[]    surrogates    =    Character.toChars(codePoint);    appendHexJavaScriptRepresentation(surrogates[0],    out);    appendHexJavaScriptRepresentation(surrogates[1],    out);    return;    }    out.append(   "\\u   ")    [BUGGY]    .append(HEX_CHARS[(codePoint    >>>    12)    &    -15])    .append(HEX_CHARS[(codePoint    >>>    8)    &    0xf])    .append(HEX_CHARS[(codePoint    >>>    4)    &    0xf])    .append(HEX_CHARS[codePoint    &    0xf]);    }    [CLASS]        Escaper    [METHOD]    appendHexJavaScriptRepresentation    [RETURN_TYPE]    void        int    codePoint    Appendable    out    [VARIABLES]    Set    HTML_ESCAPE_CHARS    JS_ESCAPE_CHARS    boolean    escapeHtmlCharacters    int    codePoint    char[]    HEX_CHARS    surrogates    Appendable    out        	gson_454_Escaper_1_1	155	1	gson/src/main/java/com/google/gson/Escaper.java
820	[PATCH]    return    (modifiers    &    modifier)    !=    0;	[BUG]    [BUGGY]    return    (modifiers    |    modifier)    !=    0;    [FE]    junit.framework.AssertionFailedError    testModifiers    [CONTEXT]    public    boolean    hasModifier(int    modifier)    {    [BUGGY]    return    (modifiers    |    modifier)    !=    0;    }    [CLASS]        FieldAttributes    [METHOD]    hasModifier    [RETURN_TYPE]    boolean        int    modifier    [VARIABLES]    Field    f    field    Type    genericType    boolean    isSynthetic    Collection    annotations    Class    annotation    declaredType    declaringClazz    String    MAX_CACHE_PROPERTY_NAME    name    propertyValue    int    defaultMaxCacheSize    modifier    modifiers    Cache    ANNOTATION_CACHE        	gson_18_FieldAttributes_1_1	178	1	gson/src/main/java/com/google/gson/FieldAttributes.java
821	[PATCH]    .append(HEX_CHARS[(codePoint    >>>    12)    &    0xf])	[BUG]    [BUGGY]    .append(HEX_CHARS[(codePoint    >>>    12)    &    0])    [FE]    junit.framework.ComparisonFailure:    expected:<123\u[2]029    456>    but    was:<123\u[0]029    456>    testParagraphSeparatorEscaping    [CONTEXT]                    char[]    surrogates    =    Character.toChars(codePoint);    appendHexJavaScriptRepresentation(surrogates[0],    out);    appendHexJavaScriptRepresentation(surrogates[1],    out);    return;    }    out.append(   "\\u   ")    [BUGGY]    .append(HEX_CHARS[(codePoint    >>>    12)    &    0])    .append(HEX_CHARS[(codePoint    >>>    8)    &    0xf])    .append(HEX_CHARS[(codePoint    >>>    4)    &    0xf])    .append(HEX_CHARS[codePoint    &    0xf]);    }    [CLASS]        Escaper    [METHOD]    appendHexJavaScriptRepresentation    [RETURN_TYPE]    void        int    codePoint    Appendable    out    [VARIABLES]    Set    HTML_ESCAPE_CHARS    JS_ESCAPE_CHARS    boolean    escapeHtmlCharacters    int    codePoint    char[]    HEX_CHARS    surrogates    Appendable    out        	gson_453_Escaper_1_1	155	1	gson/src/main/java/com/google/gson/Escaper.java
822	[PATCH]    if    (builder    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.NullPointerException    testUrlDeserialization    [CONTEXT]    if    (skipping)    {    return       "skipped!   ";    }    else    if    (builder    ==    null)    {    return    new    String(buffer,    start,    pos    -    start    -    1);    }    else    {    builder.append(buffer,    start,    pos    -    start    -    1);    return    builder.toString();    }    }    else    if    (c    ==    '\\')    {    [BUGGY]    if    (false)    {    builder    =    new    StringBuilder();    }    builder.append(buffer,    start,    pos    -    start    -    1);    builder.append(readEscapeCharacter());    start    =    pos;    }    }    if    (builder    ==    null)    {    builder    =    new    StringBuilder();    [CLASS]        JsonReader    [METHOD]    nextString    [RETURN_TYPE]    String        char    quote    [VARIABLES]    boolean    firstElement    hasToken    lenient    result    skipping    StringBuilder    builder    char    quote    Reader    in    List    stack    JsonToken    expected    firstToken    result    token    String    name    result    toFind    value    int    c    count    i    limit    minimum    pos    quote    result    start    total    char[]    NON_EXECUTE_PREFIX    buffer        	gson_1422_JsonReader_1_1	949	1	gson/src/main/java/com/google/gson/stream/JsonReader.java
823	[PATCH]    return    codePoint    <    0x20	[BUG]    [BUGGY]    return    codePoint    <    -32    [FE]    junit.framework.ComparisonFailure:    expected:<123[\n]456>    but    was:<123[    testNewlineEscaping    [CONTEXT]    private    static    boolean    isControlCharacter(int    codePoint)    {        [BUGGY]    return    codePoint    <    -32    ||    codePoint    ==    0x2028    ||    codePoint    ==    0x2029    ||    (codePoint    >=    0x7f    &&    codePoint    <=    0x9f);    }    [CLASS]        Escaper    [METHOD]    isControlCharacter    [RETURN_TYPE]    boolean        int    codePoint    [VARIABLES]    Set    HTML_ESCAPE_CHARS    JS_ESCAPE_CHARS    boolean    escapeHtmlCharacters    int    codePoint    char[]    HEX_CHARS        	gson_401_Escaper_1_1	136	1	gson/src/main/java/com/google/gson/Escaper.java
824	[PATCH]    &&    (clazz.isAnonymousClass()    ||    clazz.isLocalClass());	[BUG]    [BUGGY]    &&    (true);    [FE]    junit.framework.AssertionFailedError:    expected:<[a,    b,    c]>    but    was:<[]>    testParseComments    [CONTEXT]    private    boolean    isAnonymousOrLocal(Class<?>    clazz)    {    return    !Enum.class.isAssignableFrom(clazz)    [BUGGY]    &&    (true);    }    [CLASS]        AnonymousAndLocalClassExclusionStrategy    [METHOD]    isAnonymousOrLocal    [RETURN_TYPE]    boolean        Class<?>    clazz    [VARIABLES]    boolean    Class    clazz        	gson_4_AnonymousAndLocalClassExclusionStrategy_1_1	37	1	gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java
825	[PATCH]    builder.append(buffer,    start,    pos    -    start);	[BUG]    [BUGGY]    builder.append(buffer,    start,    pos    /    start);    [FE]    java.lang.ArithmeticException:    /    by    zero    testTypeAdapterThrowsException    [CONTEXT]    }    else    {    builder.append(buffer,    start,    pos    -    start);    return    builder.toString();    }    }    }    if    (builder    ==    null)    {    builder    =    new    StringBuilder();    }    [BUGGY]    builder.append(buffer,    start,    pos    /    start);    }    while    (fillBuffer(1));    return    builder.toString();    }    [CLASS]        JsonReader    [METHOD]    nextLiteral    [RETURN_TYPE]    String        [VARIABLES]    boolean    firstElement    hasToken    lenient    result    skipping    StringBuilder    builder    Reader    in    List    stack    JsonToken    expected    firstToken    result    token    String    name    result    toFind    value    int    c    count    i    limit    minimum    pos    quote    result    start    total    char[]    NON_EXECUTE_PREFIX    buffer        	gson_1468_JsonReader_1_1	1012	1	gson/src/main/java/com/google/gson/stream/JsonReader.java
826	[PATCH]    if    (token    !=    JsonToken.NAME)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    java.lang.IllegalStateException:    Expected    a    name    but    was    NAME    testDefaultTypeAdapterThrowsParseException    [CONTEXT]    public    String    nextName()    throws    IOException    {    quickPeek();    [BUGGY]    if    (true)    {    throw    new    IllegalStateException(   "Expected    a    name    but    was       "    +    peek());    }    String    result    =    name;    advance();    return    result;    }    [CLASS]        JsonReader    [METHOD]    nextName    [RETURN_TYPE]    String        [VARIABLES]    boolean    hasToken    lenient    skipping    Reader    in    List    stack    JsonToken    expected    firstToken    result    token    String    name    result    value    int    i    limit    pos    char[]    NON_EXECUTE_PREFIX    buffer        	gson_1076_JsonReader_1_1	443	1	gson/src/main/java/com/google/gson/stream/JsonReader.java
827	[PATCH]    if    (strategy.shouldSkipClass(clazz))    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError    testSkipFieldsWithMixedTrueAndFalse    [CONTEXT]    public    boolean    shouldSkipClass(Class<?>    clazz)    {    for    (ExclusionStrategy    strategy    :    strategies)    {    [BUGGY]    if    (false)    {    return    true;    }    }    return    false;    }    [CLASS]        DisjunctionExclusionStrategy    [METHOD]    shouldSkipClass    [RETURN_TYPE]    boolean        Class<?>    clazz    [VARIABLES]    Collection    strategies    Class    clazz    ExclusionStrategy    strategy    boolean        	gson_762_DisjunctionExclusionStrategy_1_1	46	1	gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java
828	[PATCH]    if    (c    <=    0x1F)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.ComparisonFailure:    expected:<   "[blah]   ">    but    was:<   "[\u0062\u006c\u0061\u0068]   ">    testTypeAdapterDoesNotAffectNonAdaptedTypes    [CONTEXT]    case    '=':    case    '\'':    if    (htmlSafe)    {    out.write(String.format(   "\\u%04x   ",    (int)    c));    }    else    {    out.write(c);    }    break;    default:    [BUGGY]    if    (true)    {    out.write(String.format(   "\\u%04x   ",    (int)    c));    }    else    {    out.write(c);    }    break;    }    }    out.write(   "\   "   ");    }    [CLASS]        JsonWriter    [METHOD]    string    [RETURN_TYPE]    void        String    value    [VARIABLES]    char    c    List    stack    boolean    htmlSafe    lenient    value    String    closeBracket    indent    name    openBracket    separator    string    value    Writer    out    int    i    length        	gson_962_JsonWriter_1_1	475	1	gson/src/main/java/com/google/gson/stream/JsonWriter.java
829	[PATCH]    builder.append(buffer,    start,    pos    -    start    -    1);	[BUG]    [BUGGY]    builder.append(buffer,    start,    pos    -    start    -    0);    [FE]    junit.framework.ComparisonFailure:    expected:<http:[//google.com]/>    but    was:<http:[\/\/google.com\]/>    testUrlDeserialization    [CONTEXT]    return    new    String(buffer,    start,    pos    -    start    -    1);    }    else    {    builder.append(buffer,    start,    pos    -    start    -    1);    return    builder.toString();    }    }    else    if    (c    ==    '\\')    {    if    (builder    ==    null)    {    builder    =    new    StringBuilder();    }    [BUGGY]    builder.append(buffer,    start,    pos    -    start    -    0);    builder.append(readEscapeCharacter());    start    =    pos;    }    }    if    (builder    ==    null)    {    builder    =    new    StringBuilder();    }    builder.append(buffer,    start,    pos    -    start);    }    while    (fillBuffer(1));    [CLASS]        JsonReader    [METHOD]    nextString    [RETURN_TYPE]    String        char    quote    [VARIABLES]    boolean    firstElement    hasToken    lenient    result    skipping    StringBuilder    builder    char    quote    Reader    in    List    stack    JsonToken    expected    firstToken    result    token    String    name    result    toFind    value    int    c    count    i    limit    minimum    pos    quote    result    start    total    char[]    NON_EXECUTE_PREFIX    buffer        	gson_1428_JsonReader_1_1	952	1	gson/src/main/java/com/google/gson/stream/JsonReader.java
830	[PATCH]    while    ((total    =    in.read(buffer,    limit,    buffer.length    -    limit))    !=    -1)    {	[BUG]    [BUGGY]    while    ((total    =    in.read(buffer,    limit,    buffer.length    %    limit))    !=    -1)    {    [FE]    java.lang.ArithmeticException:    /    by    zero    testParseComments    [CONTEXT]    private    boolean    fillBuffer(int    minimum)    throws    IOException    {    if    (limit    !=    pos)    {    limit    -=    pos;    System.arraycopy(buffer,    pos,    buffer,    0,    limit);    }    else    {    limit    =    0;    }    pos    =    0;    int    total;    [BUGGY]    while    ((total    =    in.read(buffer,    limit,    buffer.length    %    limit))    !=    -1)    {    limit    +=    total;    if    (limit    >=    minimum)    {    return    true;    }    }    return    false;    }    [CLASS]        JsonReader    [METHOD]    fillBuffer    [RETURN_TYPE]    boolean        int    minimum    [VARIABLES]    boolean    firstElement    hasToken    lenient    result    skipping    Reader    in    List    stack    JsonToken    expected    firstToken    result    token    String    name    result    value    int    c    count    i    limit    minimum    pos    quote    result    total    char[]    NON_EXECUTE_PREFIX    buffer        	gson_1300_JsonReader_1_1	824	1	gson/src/main/java/com/google/gson/stream/JsonReader.java
831	[PATCH]    if    (members.containsKey(memberName))    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.NullPointerException    testReadPropertyWithEmptyStringName    [CONTEXT]    public    JsonElement    get(String    memberName)    {    [BUGGY]    if    (false)    {    JsonElement    member    =    members.get(memberName);    return    member    ==    null    ?    JsonNull.createJsonNull()    :    member;    }    return    null;    }    [CLASS]        JsonObject    [METHOD]    get    [RETURN_TYPE]    JsonElement        String    memberName    [VARIABLES]    String    memberName    boolean    Map    members    JsonElement    member        	gson_488_JsonObject_1_1	154	1	gson/src/main/java/com/google/gson/JsonObject.java
832	[PATCH]    json.setLenient(true);	[BUG]    [BUGGY]    json.setLenient(false);    [FE]    com.google.gson.JsonSyntaxException:    com.google.gson.stream.MalformedJsonException:    Use    JsonReader.setLenient(true)    to    accept    malformed    JSON    near    {a:10,b:'c'}    testParseReader    [CONTEXT]    public    JsonElement    parse(JsonReader    json)    throws    JsonParseException    {    boolean    lenient    =    json.isLenient();    [BUGGY]    json.setLenient(false);    try    {    return    Streams.parse(json);    }    catch    (StackOverflowError    e)    {    throw    new    JsonParseException(   "Failed    parsing    JSON    source:       "    +    json    +       "    to    Json   ",    e);    }    catch    (OutOfMemoryError    e)    {    throw    new    JsonParseException(   "Failed    parsing    JSON    source:       "    +    json    +       "    to    Json   ",    e);    }    catch    (JsonParseException    e)    {    if    (e.getCause()    instanceof    EOFException)    {    return    JsonNull.createJsonNull();    }    [CLASS]        JsonParser    [METHOD]    parse    [RETURN_TYPE]    JsonElement        JsonReader    json    [VARIABLES]    boolean    lenient    JsonReader    json    JsonParseException    e    StackOverflowError    e    OutOfMemoryError    e        	gson_1860_JsonParser_1_1	64	1	gson/src/main/java/com/google/gson/JsonParser.java
833	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError    testClassAndFieldAreAtSameVersion    [CONTEXT]    private    boolean    isValidUntil(Until    annotation)    {    if    (annotation    !=    null)    {    double    annotationVersion    =    annotation.value();    if    (annotationVersion    <=    version)    {    return    false;    }    }    [BUGGY]    return    false;    }    [CLASS]        VersionExclusionStrategy    [METHOD]    isValidUntil    [RETURN_TYPE]    boolean        Until    annotation    [VARIABLES]    double    annotationVersion    version    Until    annotation    boolean        	gson_2232_VersionExclusionStrategy_1_1	65	1	gson/src/main/java/com/google/gson/VersionExclusionStrategy.java
834	[PATCH]    AccessibleObject.setAccessible(declaredConstructors,    true);	[BUG]    [BUGGY]    AccessibleObject.setAccessible(declaredConstructors,    false);    [FE]    java.lang.RuntimeException:    Unable    to    invoke    no-args    constructor    for    class    com.google.gson.functional.CircularReferenceTest$ContainsReferenceToSelfType.    Register    an    InstanceCreator    with    Gson    for    this    type    may    fix    this    problem.    testDirectedAcyclicGraphDeserialization    [CONTEXT]    private    <T>    Constructor<T>    getNoArgsConstructor(Type    typeOfT)    {    TypeInfo    typeInfo    =    new    TypeInfo(typeOfT);    Class<T>    clazz    =    (Class<T>)    typeInfo.getRawClass();    Constructor<T>[]    declaredConstructors    =    (Constructor<T>[])    clazz.getDeclaredConstructors();    [BUGGY]    AccessibleObject.setAccessible(declaredConstructors,    false);    for    (Constructor<T>    constructor    :    declaredConstructors)    {    if    (constructor.getParameterTypes().length    ==    0)    {    return    constructor;    }    }    return    null;    }    [CLASS]        MappedObjectConstructor    [METHOD]    getNoArgsConstructor    [RETURN_TYPE]    <T>        Type    typeOfT    [VARIABLES]    Type    typeOfT    boolean    Constructor    constructor    Constructor[]    declaredConstructors    Class    clazz    Logger    log    ParameterizedTypeHandlerMap    instanceCreatorMap    instanceCreators    TypeInfo    typeInfo        	gson_838_MappedObjectConstructor_1_1	85	1	gson/src/main/java/com/google/gson/MappedObjectConstructor.java
835	[PATCH]    if    (!Character.isSupplementaryCodePoint(codepoint))    {	[BUG]    [BUGGY]    if    (!true)    {    [FE]    junit.framework.ComparisonFailure:    expected:<123[\]   "456>    but    was:<123[]   "456>    testDoubleQuoteEscaping    [CONTEXT]    private    boolean    mustEscapeCharInJsString(int    codepoint)    {    [BUGGY]    if    (!true)    {    char    c    =    (char)    codepoint;    return    JS_ESCAPE_CHARS.contains(c)    ||    (escapeHtmlCharacters    &&    HTML_ESCAPE_CHARS.contains(c));    }    return    false;    }    [CLASS]        Escaper    [METHOD]    mustEscapeCharInJsString    [RETURN_TYPE]    boolean        int    codepoint    [VARIABLES]    char    c    Set    HTML_ESCAPE_CHARS    JS_ESCAPE_CHARS    boolean    escapeHtmlCharacters    int    codepoint    char[]    HEX_CHARS        	gson_390_Escaper_1_1	126	1	gson/src/main/java/com/google/gson/Escaper.java
836	[PATCH]    for    (int    i    =    1;    i    <    stack.size();    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    -1;    i    <    stack.size();    i++)    {    [FE]    junit.framework.ComparisonFailure:    expected:<[    testWriteMixedStreamed    [CONTEXT]    private    void    newline()    throws    IOException    {    if    (indent    ==    null)    {    return;    }    out.write(   "\n   ");    [BUGGY]    for    (int    i    =    -1;    i    <    stack.size();    i++)    {    out.write(indent);    }    }    [CLASS]        JsonWriter    [METHOD]    newline    [RETURN_TYPE]    void        [VARIABLES]    List    stack    boolean    htmlSafe    lenient    value    String    closeBracket    indent    name    openBracket    separator    string    value    Writer    out    int    i        	gson_969_JsonWriter_1_1	492	1	gson/src/main/java/com/google/gson/stream/JsonWriter.java
837	[PATCH]    if    (elements.size()    ==    1)    {	[BUG]    [BUGGY]    if    (elements.size()    ==    -1)    {    [FE]    com.google.gson.JsonParseException:    The    JsonDeserializer    DoubleDeserializer    failed    to    deserialized    json    object    [-122.08]    given    the    type    double    testPrimitiveDoubleAutoboxedInASingleElementArrayDeserialization    [CONTEXT]    public    double    getAsDouble()    {    [BUGGY]    if    (elements.size()    ==    -1)    {    return    elements.get(0).getAsDouble();    }    throw    new    IllegalStateException();    }    [CLASS]        JsonArray    [METHOD]    getAsDouble    [RETURN_TYPE]    double        [VARIABLES]    List    elements    boolean        	gson_523_JsonArray_1_1	146	1	gson/src/main/java/com/google/gson/JsonArray.java
838	[PATCH]    builder.append(buffer,    start,    pos    -    start    -    1);	[BUG]    [BUGGY]    builder.append(buffer,    start,    (pos    -    start)    %    1);    [FE]    com.google.gson.JsonSyntaxException:    java.net.MalformedURLException:    no    protocol:    ///    testUrlDeserialization    [CONTEXT]    return    new    String(buffer,    start,    pos    -    start    -    1);    }    else    {    builder.append(buffer,    start,    pos    -    start    -    1);    return    builder.toString();    }    }    else    if    (c    ==    '\\')    {    if    (builder    ==    null)    {    builder    =    new    StringBuilder();    }    [BUGGY]    builder.append(buffer,    start,    (pos    -    start)    %    1);    builder.append(readEscapeCharacter());    start    =    pos;    }    }    if    (builder    ==    null)    {    builder    =    new    StringBuilder();    }    builder.append(buffer,    start,    pos    -    start);    }    while    (fillBuffer(1));    [CLASS]        JsonReader    [METHOD]    nextString    [RETURN_TYPE]    String        char    quote    [VARIABLES]    boolean    firstElement    hasToken    lenient    result    skipping    StringBuilder    builder    char    quote    Reader    in    List    stack    JsonToken    expected    firstToken    result    token    String    name    result    toFind    value    int    c    count    i    limit    minimum    pos    quote    result    start    total    char[]    NON_EXECUTE_PREFIX    buffer        	gson_1430_JsonReader_1_1	952	1	gson/src/main/java/com/google/gson/stream/JsonReader.java
839	[PATCH]    if    (country    ==    null    &&    variant    ==    null)    {	[BUG]    [BUGGY]    if    (variant    ==    null)    {    [FE]    junit.framework.AssertionFailedError:    expected:<fr_CA>    but    was:<fr>    testLocaleDeserializationWithLanguageCountry    [CONTEXT]    String    variant    =    null;    if    (tokenizer.hasMoreElements())    {    language    =    tokenizer.nextToken();    }    if    (tokenizer.hasMoreElements())    {    country    =    tokenizer.nextToken();    }    if    (tokenizer.hasMoreElements())    {    variant    =    tokenizer.nextToken();    }    [BUGGY]    if    (variant    ==    null)    {    return    new    Locale(language);    }    else    if    (variant    ==    null)    {    return    new    Locale(language,    country);    }    else    {    return    new    Locale(language,    country,    variant);    }    }    [CLASS]        DefaultTypeAdapters    DefaultDateTypeAdapter    DefaultJavaSqlDateTypeAdapter    DefaultTimestampDeserializer    DefaultTimeTypeAdapter    GregorianCalendarTypeAdapter    EnumTypeAdapter    UrlTypeAdapter    UriTypeAdapter    UuidTypeAdapter    LocaleTypeAdapter    CollectionTypeAdapter    PropertiesCreator    MapTypeAdapter    BigDecimalTypeAdapter    BigIntegerTypeAdapter    NumberTypeAdapter    LongSerializer    LongDeserializer    IntegerTypeAdapter    ShortTypeAdapter    ByteTypeAdapter    FloatSerializer    FloatDeserializer    DoubleSerializer    DoubleDeserializer    CharacterTypeAdapter    StringTypeAdapter    BooleanTypeAdapter    TreeSetCreator    HashSetCreator    [METHOD]    deserialize    [RETURN_TYPE]    Locale        JsonElement    json    Type    typeOfT    JsonDeserializationContext    context    [VARIABLES]    LocaleTypeAdapter    LOCALE_TYPE_ADAPTER    IntegerTypeAdapter    INTEGER_TYPE_ADAPTER    BigIntegerTypeAdapter    BIG_INTEGER_TYPE_ADAPTER    TreeSetCreator    TREE_SET_CREATOR    StringTypeAdapter    STRING_TYPE_ADAPTER    LongSerializationPolicy    longSerializationPolicy    String    DAY_OF_MONTH    HOUR_OF_DAY    MINUTE    MONTH    SECOND    YEAR    country    dateFormatAsString    datePattern    language    locale    variant    DefaultDateTypeAdapter    DATE_TYPE_ADAPTER    UriTypeAdapter    URI_TYPE_ADAPTER    JsonDeserializationContext    context    CollectionTypeAdapter    COLLECTION_TYPE_ADAPTER    MapTypeAdapter    MAP_TYPE_ADAPTER    BigDecimalTypeAdapter    BIG_DECIMAL_TYPE_ADAPTER    DefaultTimeTypeAdapter    TIME_TYPE_ADAPTER    UuidTypeAdapter    UUUID_TYPE_ADAPTER    FloatDeserializer    FLOAT_TYPE_ADAPTER    HashSetCreator    HASH_SET_CREATOR    ShortTypeAdapter    SHORT_TYPE_ADAPTER    ByteTypeAdapter    BYTE_TYPE_ADAPTER    DefaultJavaSqlDateTypeAdapter    JAVA_SQL_DATE_TYPE_ADAPTER    PropertiesCreator    PROPERTIES_CREATOR    BooleanTypeAdapter    BOOLEAN_TYPE_ADAPTER    Type    typeOfT    StringTokenizer    tokenizer    boolean    serializeSpecialDoubleValues    serializeSpecialFloatingPointValues    LongDeserializer    LONG_DESERIALIZER    DefaultTimestampDeserializer    TIMESTAMP_DESERIALIZER    NumberTypeAdapter    NUMBER_TYPE_ADAPTER    JsonElement    json    EnumTypeAdapter    ENUM_TYPE_ADAPTER    DateFormat    format    GregorianCalendarTypeAdapter    GREGORIAN_CALENDAR_TYPE_ADAPTER    UrlTypeAdapter    URL_TYPE_ADAPTER    CharacterTypeAdapter    CHARACTER_TYPE_ADAPTER    DoubleDeserializer    DOUBLE_TYPE_ADAPTER    ParameterizedTypeHandlerMap    DEFAULT_DESERIALIZERS    DEFAULT_INSTANCE_CREATORS    DEFAULT_SERIALIZERS    map    serializers        	gson_186_DefaultTypeAdapters_1_1	494	1	gson/src/main/java/com/google/gson/DefaultTypeAdapters.java
840	[PATCH]    stack.set(stack.size()    -    1,    newTop);	[BUG]    [BUGGY]    stack.set(stack.size()    -    -1,    newTop);    [FE]    java.lang.IndexOutOfBoundsException:    Index:    2,    Size:    1    testParseComments    [CONTEXT]    private    void    replaceTop(JsonScope    newTop)    {    [BUGGY]    stack.set(stack.size()    -    -1,    newTop);    }    [CLASS]        JsonReader    [METHOD]    replaceTop    [RETURN_TYPE]    void        JsonScope    newTop    [VARIABLES]    boolean    hasToken    lenient    result    skipping    JsonScope    newTop    Reader    in    List    stack    JsonToken    expected    firstToken    result    token    String    name    result    value    int    count    i    limit    pos    result    char[]    NON_EXECUTE_PREFIX    buffer        	gson_1211_JsonReader_1_1	665	1	gson/src/main/java/com/google/gson/stream/JsonReader.java
841	[PATCH]    }    else    if    (builder    ==    null)    {	[BUG]    [BUGGY]    }    else    if    (false)    {    [FE]    java.lang.NullPointerException    testParseComments    [CONTEXT]    StringBuilder    builder    =    null;    do    {        int    start    =    pos;    while    (pos    <    limit)    {    int    c    =    buffer[pos++];    if    (c    ==    quote)    {    if    (skipping)    {    return       "skipped!   ";    [BUGGY]    }    else    if    (false)    {    return    new    String(buffer,    start,    pos    -    start    -    1);    }    else    {    builder.append(buffer,    start,    pos    -    start    -    1);    return    builder.toString();    }    }    else    if    (c    ==    '\\')    {    if    (builder    ==    null)    {    builder    =    new    StringBuilder();    }    [CLASS]        JsonReader    [METHOD]    nextString    [RETURN_TYPE]    String        char    quote    [VARIABLES]    boolean    firstElement    hasToken    lenient    result    skipping    StringBuilder    builder    char    quote    Reader    in    List    stack    JsonToken    expected    firstToken    result    token    String    name    result    toFind    value    int    c    count    i    limit    minimum    pos    quote    result    start    total    char[]    NON_EXECUTE_PREFIX    buffer        	gson_1397_JsonReader_1_1	941	1	gson/src/main/java/com/google/gson/stream/JsonReader.java
842	[PATCH]    if    (elements.size()    ==    1)    {	[BUG]    [BUGGY]    if    (elements.size()    ==    0)    {    [FE]    com.google.gson.JsonParseException:    The    JsonDeserializer    DoubleDeserializer    failed    to    deserialized    json    object    [-122.08]    given    the    type    double    testPrimitiveDoubleAutoboxedInASingleElementArrayDeserialization    [CONTEXT]    public    double    getAsDouble()    {    [BUGGY]    if    (elements.size()    ==    0)    {    return    elements.get(0).getAsDouble();    }    throw    new    IllegalStateException();    }    [CLASS]        JsonArray    [METHOD]    getAsDouble    [RETURN_TYPE]    double        [VARIABLES]    List    elements    boolean        	gson_522_JsonArray_1_1	146	1	gson/src/main/java/com/google/gson/JsonArray.java
843	[PATCH]    ||    codePoint    ==    0x2028        //    Line    separator	[BUG]    [BUGGY]    ||    false    //    Line    separator    [FE]    junit.framework.AssertionFailedError    testRequiredEscapingUnicodeCharacter    [CONTEXT]    private    static    boolean    isControlCharacter(int    codePoint)    {        return    codePoint    <    0x20    [BUGGY]    ||    false    ||    codePoint    ==    0x2029    ||    (codePoint    >=    0x7f    &&    codePoint    <=    0x9f);    }    [CLASS]        Escaper    [METHOD]    isControlCharacter    [RETURN_TYPE]    boolean        int    codePoint    [VARIABLES]    Set    HTML_ESCAPE_CHARS    JS_ESCAPE_CHARS    boolean    escapeHtmlCharacters    int    codePoint    char[]    HEX_CHARS        	gson_409_Escaper_1_1	137	1	gson/src/main/java/com/google/gson/Escaper.java
844	[PATCH]    if    (!visitedWithCustomHandler)    {	[BUG]    [BUGGY]    if    (!true)    {    [FE]    junit.framework.ComparisonFailure:    expected:<[{}]>    but    was:<[]>    testUserDefinedExclusionPolicies    [CONTEXT]    public    void    accept(Visitor    visitor)    {    TypeInfo    objTypeInfo    =    new    TypeInfo(objTypePair.type);    if    (exclusionStrategy.shouldSkipClass(objTypeInfo.getRawClass()))    {    return;    }    boolean    visitedWithCustomHandler    =    visitor.visitUsingCustomHandler(objTypePair);    [BUGGY]    if    (!true)    {    Object    obj    =    objTypePair.getObject();    Object    objectToVisit    =    (obj    ==    null)    ?    visitor.getTarget()    :    obj;    if    (objectToVisit    ==    null)    {    return;    }    objTypePair.setObject(objectToVisit);    visitor.start(objTypePair);    try    {    if    (objTypeInfo.isArray())    {    visitor.visitArray(objectToVisit,    objTypePair.type);    [CLASS]        ObjectNavigator    [METHOD]    accept    [RETURN_TYPE]    void        Visitor    visitor    [VARIABLES]    boolean    visitedWithCustomHandler    Visitor    visitor    ObjectTypePair    currObjTypePair    node    objTypePair    Object    obj    objectToVisit    Class    curr    topLevelClass    ExclusionStrategy    exclusionStrategy    TypeInfo    objTypeInfo        	gson_1586_ObjectNavigator_1_1	107	1	gson/src/main/java/com/google/gson/ObjectNavigator.java
845	[PATCH]    if    (c    ==    quote)    {	[BUG]    [BUGGY]    if    (c    <=    quote)    {    [FE]    junit.framework.ComparisonFailure:    expected:<[        ]>    but    was:<[]>    testParseEmptyString    [CONTEXT]    private    String    nextString(char    quote)    throws    IOException    {    StringBuilder    builder    =    null;    do    {        int    start    =    pos;    while    (pos    <    limit)    {    int    c    =    buffer[pos++];        [BUGGY]    if    (c    <=    quote)    {    if    (skipping)    {    return       "skipped!   ";    }    else    if    (builder    ==    null)    {    return    new    String(buffer,    start,    pos    -    start    -    1);    }    else    {    builder.append(buffer,    start,    pos    -    start    -    1);    return    builder.toString();    }    }    else    if    (c    ==    '\\')    {    [CLASS]        JsonReader    [METHOD]    nextString    [RETURN_TYPE]    String        char    quote    [VARIABLES]    boolean    firstElement    hasToken    lenient    result    skipping    StringBuilder    builder    char    quote    Reader    in    List    stack    JsonToken    expected    firstToken    result    token    String    name    result    toFind    value    int    c    count    i    limit    minimum    pos    quote    result    start    total    char[]    NON_EXECUTE_PREFIX    buffer        	gson_1392_JsonReader_1_1	938	1	gson/src/main/java/com/google/gson/stream/JsonReader.java
846	[PATCH]    modifiable    =    false;	[BUG]    [BUGGY]    modifiable    =    true;    [FE]    junit.framework.AssertionFailedError:    Can    not    register    handlers    when    map    is    unmodifiable    testMakeUnmodifiable    [CONTEXT]    public    synchronized    void    makeUnmodifiable()    {    [BUGGY]    modifiable    =    true;    }    [CLASS]        ParameterizedTypeHandlerMap    [METHOD]    makeUnmodifiable    [RETURN_TYPE]    void        [VARIABLES]    List    typeHierarchyList    boolean    modifiable    Logger    logger    Map    map        	gson_293_ParameterizedTypeHandlerMap_1_1	118	1	gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java
847	[PATCH]    if    (buffer[pos    +    c]    !=    toFind.charAt(c))    {	[BUG]    [BUGGY]    if    (buffer[pos    %    c]    !=    toFind.charAt(c))    {    [FE]    java.lang.ArithmeticException:    /    by    zero    testParseComments    [CONTEXT]    private    boolean    skipTo(String    toFind)    throws    IOException    {    outer:    for    (;    pos    +    toFind.length()    <    limit    ||    fillBuffer(toFind.length());    pos++)    {    for    (int    c    =    0;    c    <    toFind.length();    c++)    {    [BUGGY]    if    (buffer[pos    %    c]    !=    toFind.charAt(c))    {    continue    outer;    }    }    return    true;    }    return    false;    }    [CLASS]        JsonReader    [METHOD]    skipTo    [RETURN_TYPE]    boolean        String    toFind    [VARIABLES]    boolean    firstElement    hasToken    lenient    result    skipping    Reader    in    List    stack    JsonToken    expected    firstToken    result    token    String    name    result    toFind    value    int    c    count    i    limit    minimum    pos    quote    result    total    char[]    NON_EXECUTE_PREFIX    buffer        	gson_1380_JsonReader_1_1	911	1	gson/src/main/java/com/google/gson/stream/JsonReader.java
848	[PATCH]    if    (capitalizeFirstLetter    &&    !Character.isUpperCase(firstCharacter))    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.ComparisonFailure:    expected:<_[B]lah>    but    was:<_[b]lah>    testFieldStartsWithUnderscore    [CONTEXT]    fieldNameBuilder.append(firstCharacter);    firstCharacter    =    target.charAt(++index);    }    if    (index    ==    target.length())    {    return    fieldNameBuilder.toString();    }    boolean    capitalizeFirstLetter    =    (letterModifier    ==    LetterModifier.UPPER);    [BUGGY]    if    (false)    {    String    modifiedTarget    =    modifyString(Character.toUpperCase(firstCharacter),    target,    ++index);    return    fieldNameBuilder.append(modifiedTarget).toString();    }    else    if    (!capitalizeFirstLetter    &&    Character.isUpperCase(firstCharacter))    {    String    modifiedTarget    =    modifyString(Character.toLowerCase(firstCharacter),    target,    ++index);    return    fieldNameBuilder.append(modifiedTarget).toString();    }    else    {    return    target;    }    }    [CLASS]        ModifyFirstLetterNamingPolicy    LetterModifier    [METHOD]    translateName    [RETURN_TYPE]    String        String    target    Type    fieldType    Annotation>    annotations    [VARIABLES]    Type    fieldType    boolean    capitalizeFirstLetter    StringBuilder    fieldNameBuilder    char    firstCharacter    Collection    annotations    LetterModifier    LOWER    UPPER    letterModifier    modifier    String    modifiedTarget    target    int    index        	gson_2031_ModifyFirstLetterNamingPolicy_1_1	91	1	gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java
849	[PATCH]    }    else    if    (json.isJsonObject())    {	[BUG]    [BUGGY]    }    else    if    (false)    {    [FE]    com.google.gson.JsonParseException:    Failed    parsing    JSON    source:    {   "longValue   ":1,   "intValue   ":1,   "booleanValue   ":true,   "stringValue   ":   "one   "}    to    Json    testReadWriteTwoObjects    [CONTEXT]    public    <T>    T    deserialize(JsonElement    json,    Type    typeOfT)    throws    JsonParseException    {    if    (json    ==    null    ||    json.isJsonNull())    {    return    null;    }    else    if    (json.isJsonArray())    {    return    (T)    fromJsonArray(typeOfT,    json.getAsJsonArray(),    this);    [BUGGY]    }    else    if    (false)    {    return    (T)    fromJsonObject(typeOfT,    json.getAsJsonObject(),    this);    }    else    if    (json.isJsonPrimitive())    {    return    (T)    fromJsonPrimitive(typeOfT,    json.getAsJsonPrimitive(),    this);    }    else    {    throw    new    JsonParseException(   "Failed    parsing    JSON    source:       "    +    json    +       "    to    Json   ");    }    }    [CLASS]        JsonDeserializationContextDefault    [METHOD]    deserialize    [RETURN_TYPE]    <T>        JsonElement    json    Type    typeOfT    [VARIABLES]    MappedObjectConstructor    objectConstructor    Type    typeOfT    boolean    ParameterizedTypeHandlerMap    deserializers    ObjectNavigatorFactory    navigatorFactory    JsonElement    json        	gson_1812_JsonDeserializationContextDefault_1_1	50	1	gson/src/main/java/com/google/gson/JsonDeserializationContextDefault.java
850	[PATCH]    if    (elements.size()    ==    1)    {	[BUG]    [BUGGY]    if    (elements.size()    ==    0)    {    [FE]    com.google.gson.JsonParseException:    The    JsonDeserializer    LongDeserializer    failed    to    deserialized    json    object    [1]    given    the    type    long    testPrimitiveLongAutoboxedInASingleElementArrayDeserialization    [CONTEXT]    public    long    getAsLong()    {    [BUGGY]    if    (elements.size()    ==    0)    {    return    elements.get(0).getAsLong();    }    throw    new    IllegalStateException();    }    [CLASS]        JsonArray    [METHOD]    getAsLong    [RETURN_TYPE]    long        [VARIABLES]    List    elements    boolean        	gson_550_JsonArray_1_1	212	1	gson/src/main/java/com/google/gson/JsonArray.java
851	[PATCH]    if    (token    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.NullPointerException    testDefaultTypeAdapterThrowsParseException    [CONTEXT]    public    JsonToken    peek()    throws    IOException    {    quickPeek();        [BUGGY]    if    (false)    {    decodeLiteral();    }    return    token;    }    [CLASS]        JsonReader    [METHOD]    peek    [RETURN_TYPE]    JsonToken        [VARIABLES]    boolean    hasToken    lenient    skipping    Reader    in    List    stack    JsonToken    expected    token    String    name    value    int    limit    pos    char[]    NON_EXECUTE_PREFIX    buffer        	gson_1016_JsonReader_1_1	342	1	gson/src/main/java/com/google/gson/stream/JsonReader.java
852	[PATCH]    addAsArrayElement(new    ObjectTypePair(child,    childType,    false));	[BUG]    [BUGGY]    addAsArrayElement(new    ObjectTypePair(child,    childType,    true));    [FE]    junit.framework.AssertionFailedError    testObjectArrayWithNonPrimitivesSerialization    [CONTEXT]    assignToRoot(new    JsonArray());    int    length    =    Array.getLength(array);    TypeInfoArray    fieldTypeInfo    =    TypeInfoFactory.getTypeInfoForArray(arrayType);    Type    componentType    =    fieldTypeInfo.getSecondLevelType();    for    (int    i    =    0;    i    <    length;    ++i)    {    Object    child    =    Array.get(array,    i);    Type    childType    =    componentType;                [BUGGY]    addAsArrayElement(new    ObjectTypePair(child,    childType,    true));    }    }    [CLASS]        JsonSerializationVisitor    [METHOD]    visitArray    [RETURN_TYPE]    void        Object    array    Type    arrayType    [VARIABLES]    TypeInfoArray    fieldTypeInfo    Type    arrayType    childType    componentType    boolean    serializeNulls    JsonElement    root    JsonSerializationContext    context    MemoryRefStack    ancestors    Object    array    child    ParameterizedTypeHandlerMap    serializers    ObjectNavigatorFactory    factory    int    i    length        	gson_1890_JsonSerializationVisitor_1_1	82	1	gson/src/main/java/com/google/gson/JsonSerializationVisitor.java
853	[PATCH]    return    context.serialize(src,    typeOfSrc,    true);	[BUG]    [BUGGY]    return    context.serialize(src,    typeOfSrc,    false);    [FE]    junit.framework.AssertionFailedError:    Expected:    <null>    but    was:       "Sub   "    testBaseSerializedAsBaseWhenSpecifiedWithExplicitType    [CONTEXT]    public    JsonElement    toJsonTree(Object    src,    Type    typeOfSrc)    {    if    (src    ==    null)    {    return    JsonNull.createJsonNull();    }    JsonSerializationContextDefault    context    =    new    JsonSerializationContextDefault(    createDefaultObjectNavigatorFactory(serializationStrategy),    serializeNulls,    serializers);    [BUGGY]    return    context.serialize(src,    typeOfSrc,    false);    }    [CLASS]        Gson    [METHOD]    toJsonTree    [RETURN_TYPE]    JsonElement        Object    src    Type    typeOfSrc    [VARIABLES]    MappedObjectConstructor    objectConstructor    Type    typeOfSrc    boolean    DEFAULT_JSON_NON_EXECUTABLE    generateNonExecutableGson    generateNonExecutableJson    htmlSafe    prettyPrinting    serializeNulls    ModifierBasedExclusionStrategy    DEFAULT_MODIFIER_BASED_EXCLUSION_STRATEGY    JsonSerializationContextDefault    context    FieldNamingStrategy2    DEFAULT_NAMING_POLICY    fieldNamingPolicy    Object    src    String    JSON_NON_EXECUTABLE_PREFIX    NULL_STRING    ExclusionStrategy    DEFAULT_EXCLUSION_STRATEGY    deserializationStrategy    serializationStrategy    strategy    AnonymousAndLocalClassExclusionStrategy    DEFAULT_ANON_LOCAL_CLASS_EXCLUSION_STRATEGY    ParameterizedTypeHandlerMap    deserializers    serializers    SyntheticFieldExclusionStrategy    DEFAULT_SYNTHETIC_FIELD_EXCLUSION_STRATEGY        	gson_792_Gson_1_1	231	1	gson/src/main/java/com/google/gson/Gson.java
854	[PATCH]    ||    (codePoint    >=    0x7f    &&    codePoint    <=    0x9f);	[BUG]    [BUGGY]    ||    (codePoint    >=    0x7f    &&    codePoint    ==    159);    [FE]    junit.framework.AssertionFailedError    testControlCharBlockEscaping    [CONTEXT]    ||    (escapeHtmlCharacters    &&    HTML_ESCAPE_CHARS.contains(c));    }    return    false;    }    private    static    boolean    isControlCharacter(int    codePoint)    {        return    codePoint    <    0x20    ||    codePoint    ==    0x2028    ||    codePoint    ==    0x2029    [BUGGY]    ||    (codePoint    >=    0x7f    &&    codePoint    ==    159);    }    private    static    void    appendHexJavaScriptRepresentation(int    codePoint,    Appendable    out)    throws    IOException    {    if    (Character.isSupplementaryCodePoint(codePoint))    {                    char[]    surrogates    =    Character.toChars(codePoint);    [CLASS]    	gson_431_Escaper_1_1	139	1	gson/src/main/java/com/google/gson/Escaper.java
855	[PATCH]    if    (Character.isUpperCase(character)    &&    translation.length()    !=    0)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.ComparisonFailure:    expected:<Test[_Name_Begins_With_]Capital>    but    was:<Test[NameBeginsWith]Capital>    testNameBeginsWithCapital    [CONTEXT]    protected    String    translateName(String    target,    Type    fieldType,    Collection<Annotation>    annnotations)    {    StringBuilder    translation    =    new    StringBuilder();    for    (int    i    =    0;    i    <    target.length();    i++)    {    char    character    =    target.charAt(i);    [BUGGY]    if    (false)    {    translation.append(separatorString);    }    translation.append(character);    }    return    translation.toString();    }    [CLASS]        CamelCaseSeparatorNamingPolicy    [METHOD]    translateName    [RETURN_TYPE]    String        String    target    Type    fieldType    Annotation>    annnotations    [VARIABLES]    Type    fieldType    boolean    StringBuilder    translation    char    character    Collection    annnotations    String    separatorString    target    int    i        	gson_76_CamelCaseSeparatorNamingPolicy_1_1	65	1	gson/src/main/java/com/google/gson/CamelCaseSeparatorNamingPolicy.java
856	[PATCH]    return    new    String(buffer,    start,    pos    -    start    -    1);	[BUG]    [BUGGY]    return    new    String(buffer,    start,    pos    %    start    -    1);    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    -1    testDefaultTypeAdapterThrowsParseException    [CONTEXT]    do    {        int    start    =    pos;    while    (pos    <    limit)    {    int    c    =    buffer[pos++];    if    (c    ==    quote)    {    if    (skipping)    {    return       "skipped!   ";    }    else    if    (builder    ==    null)    {    [BUGGY]    return    new    String(buffer,    start,    pos    %    start    -    1);    }    else    {    builder.append(buffer,    start,    pos    -    start    -    1);    return    builder.toString();    }    }    else    if    (c    ==    '\\')    {    if    (builder    ==    null)    {    builder    =    new    StringBuilder();    }    builder.append(buffer,    start,    pos    -    start    -    1);    [CLASS]        JsonReader    [METHOD]    nextString    [RETURN_TYPE]    String        char    quote    [VARIABLES]    boolean    firstElement    hasToken    lenient    result    skipping    StringBuilder    builder    char    quote    Reader    in    List    stack    JsonToken    expected    firstToken    result    token    String    name    result    toFind    value    int    c    count    i    limit    minimum    pos    quote    result    start    total    char[]    NON_EXECUTE_PREFIX    buffer        	gson_1398_JsonReader_1_1	942	1	gson/src/main/java/com/google/gson/stream/JsonReader.java
857	[PATCH]    if    (c    ==    '\r'    ||    c    ==    '\n')    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    com.google.gson.JsonSyntaxException:    com.google.gson.stream.MalformedJsonException:    Unterminated    array    near    [    testParseComments    [CONTEXT]    private    void    skipToEndOfLine()    throws    IOException    {    while    (pos    <    limit    ||    fillBuffer(1))    {    char    c    =    buffer[pos++];    [BUGGY]    if    (true)    {    break;    }    }    }    [CLASS]        JsonReader    [METHOD]    skipToEndOfLine    [RETURN_TYPE]    void        [VARIABLES]    boolean    firstElement    hasToken    lenient    result    skipping    char    c    Reader    in    List    stack    JsonToken    expected    firstToken    result    token    String    name    result    value    int    c    count    i    limit    minimum    pos    quote    result    total    char[]    NON_EXECUTE_PREFIX    buffer        	gson_1363_JsonReader_1_1	901	1	gson/src/main/java/com/google/gson/stream/JsonReader.java
858	[PATCH]    return    codePoint    <    0x20	[BUG]    [BUGGY]    return    false    [FE]    junit.framework.ComparisonFailure:    expected:<123[\n]456>    but    was:<123[    testNewlineEscaping    [CONTEXT]    private    static    boolean    isControlCharacter(int    codePoint)    {        [BUGGY]    return    false    ||    codePoint    ==    0x2028    ||    codePoint    ==    0x2029    ||    (codePoint    >=    0x7f    &&    codePoint    <=    0x9f);    }    [CLASS]        Escaper    [METHOD]    isControlCharacter    [RETURN_TYPE]    boolean        int    codePoint    [VARIABLES]    Set    HTML_ESCAPE_CHARS    JS_ESCAPE_CHARS    boolean    escapeHtmlCharacters    int    codePoint    char[]    HEX_CHARS        	gson_404_Escaper_1_1	136	1	gson/src/main/java/com/google/gson/Escaper.java
859	[PATCH]    if    (buffer[pos    +    i]    !=    NON_EXECUTE_PREFIX[i])    {	[BUG]    [BUGGY]    if    (buffer[pos    %    i]    !=    NON_EXECUTE_PREFIX[i])    {    [FE]    java.lang.ArithmeticException:    /    by    zero    testParseComments    [CONTEXT]    private    void    consumeNonExecutePrefix()    throws    IOException    {        nextNonWhitespace();    pos--;    if    (pos    +    NON_EXECUTE_PREFIX.length    >    limit    &&    !fillBuffer(NON_EXECUTE_PREFIX.length))    {    return;    }    for    (int    i    =    0;    i    <    NON_EXECUTE_PREFIX.length;    i++)    {    [BUGGY]    if    (buffer[pos    %    i]    !=    NON_EXECUTE_PREFIX[i])    {    return;    }    }        pos    +=    NON_EXECUTE_PREFIX.length;    }    [CLASS]        JsonReader    [METHOD]    consumeNonExecutePrefix    [RETURN_TYPE]    void        [VARIABLES]    boolean    hasToken    lenient    skipping    Reader    in    List    stack    JsonToken    expected    firstToken    token    String    name    value    int    i    limit    pos    char[]    NON_EXECUTE_PREFIX    buffer        	gson_1061_JsonReader_1_1	411	1	gson/src/main/java/com/google/gson/stream/JsonReader.java
860	[PATCH]    return    number    instanceof    BigInteger    ||    number    instanceof    Long    ||    number    instanceof    Integer	[BUG]    [BUGGY]    return    number    instanceof    BigInteger    ||    number    instanceof    Long    [FE]    junit.framework.AssertionFailedError:    expected:<10>    but    was:<10>    testByteEqualsInteger    [CONTEXT]    private    static    boolean    isIntegral(JsonPrimitive    primitive)    {    if    (primitive.value    instanceof    Number)    {    Number    number    =    (Number)    primitive.value;    [BUGGY]    return    number    instanceof    BigInteger    ||    number    instanceof    Long    ||    number    instanceof    Short    ||    number    instanceof    Byte;    }    return    false;    }    [CLASS]        JsonPrimitive    [METHOD]    isIntegral    [RETURN_TYPE]    boolean        JsonPrimitive    primitive    [VARIABLES]    BigInteger    INTEGER_MAX    LONG_MAX    big    Object    obj    primitive    target    value    Class[]    PRIMITIVE_TYPES    boolean    Number    number    JsonPrimitive    primitive        	gson_720_JsonPrimitive_1_1	371	1	gson/src/main/java/com/google/gson/JsonPrimitive.java
861	[PATCH]    this.generateNonExecutableJson    =    true;	[BUG]    [BUGGY]    this.generateNonExecutableJson    =    false;    [FE]    junit.framework.AssertionFailedError    testJsonWithNonExectuableTokenSerialization    [CONTEXT]    public    GsonBuilder    generateNonExecutableJson()    {    [BUGGY]    this.generateNonExecutableJson    =    false;    return    this;    }    [CLASS]        GsonBuilder    [METHOD]    generateNonExecutableJson    [RETURN_TYPE]    GsonBuilder        [VARIABLES]    ExposeAnnotationSerializationExclusionStrategy    exposeAnnotationSerializationExclusionStrategy    ModifierBasedExclusionStrategy    modifierBasedExclusionStrategy    InnerClassExclusionStrategy    innerClassExclusionStrategy    double    ignoreVersionsAfter    LongSerializationPolicy    longSerializationPolicy    String    datePattern    int    dateStyle    timeStyle    ExposeAnnotationDeserializationExclusionStrategy    exposeAnnotationDeserializationExclusionStrategy    boolean    escapeHtmlChars    excludeFieldsWithoutExposeAnnotation    generateNonExecutableJson    prettyPrinting    serializeInnerClasses    serializeNulls    serializeSpecialFloatingPointValues    Collection    exclusionStrategies    FieldNamingStrategy2    fieldNamingPolicy    ParameterizedTypeHandlerMap    deserializers    instanceCreators    serializers        	gson_1657_GsonBuilder_1_1	153	1	gson/src/main/java/com/google/gson/GsonBuilder.java
862	[PATCH]    return    getDefaultSerializers(false,    LongSerializationPolicy.DEFAULT);	[BUG]    [BUGGY]    return    getDefaultSerializers(true,    LongSerializationPolicy.DEFAULT);    [FE]    junit.framework.AssertionFailedError    testWriteLenient    [CONTEXT]    static    ParameterizedTypeHandlerMap<JsonSerializer<?>>    getDefaultSerializers()    {    [BUGGY]    return    getDefaultSerializers(true,    LongSerializationPolicy.DEFAULT);    }    [CLASS]        DefaultTypeAdapters    DefaultDateTypeAdapter    DefaultJavaSqlDateTypeAdapter    DefaultTimestampDeserializer    DefaultTimeTypeAdapter    GregorianCalendarTypeAdapter    EnumTypeAdapter    UrlTypeAdapter    UriTypeAdapter    UuidTypeAdapter    LocaleTypeAdapter    CollectionTypeAdapter    PropertiesCreator    MapTypeAdapter    BigDecimalTypeAdapter    BigIntegerTypeAdapter    NumberTypeAdapter    LongSerializer    LongDeserializer    IntegerTypeAdapter    ShortTypeAdapter    ByteTypeAdapter    FloatSerializer    FloatDeserializer    DoubleSerializer    DoubleDeserializer    CharacterTypeAdapter    StringTypeAdapter    BooleanTypeAdapter    TreeSetCreator    HashSetCreator    [METHOD]    getDefaultSerializers    [RETURN_TYPE]    ParameterizedTypeHandlerMap        [VARIABLES]    LocaleTypeAdapter    LOCALE_TYPE_ADAPTER    IntegerTypeAdapter    INTEGER_TYPE_ADAPTER    BigIntegerTypeAdapter    BIG_INTEGER_TYPE_ADAPTER    TreeSetCreator    TREE_SET_CREATOR    StringTypeAdapter    STRING_TYPE_ADAPTER    LongSerializationPolicy    longSerializationPolicy    String    DAY_OF_MONTH    HOUR_OF_DAY    MINUTE    MONTH    SECOND    YEAR    datePattern    DefaultDateTypeAdapter    DATE_TYPE_ADAPTER    UriTypeAdapter    URI_TYPE_ADAPTER    CollectionTypeAdapter    COLLECTION_TYPE_ADAPTER    MapTypeAdapter    MAP_TYPE_ADAPTER    BigDecimalTypeAdapter    BIG_DECIMAL_TYPE_ADAPTER    DefaultTimeTypeAdapter    TIME_TYPE_ADAPTER    UuidTypeAdapter    UUUID_TYPE_ADAPTER    FloatDeserializer    FLOAT_TYPE_ADAPTER    HashSetCreator    HASH_SET_CREATOR    ShortTypeAdapter    SHORT_TYPE_ADAPTER    ByteTypeAdapter    BYTE_TYPE_ADAPTER    DefaultJavaSqlDateTypeAdapter    JAVA_SQL_DATE_TYPE_ADAPTER    PropertiesCreator    PROPERTIES_CREATOR    BooleanTypeAdapter    BOOLEAN_TYPE_ADAPTER    boolean    serializeSpecialDoubleValues    serializeSpecialFloatingPointValues    LongDeserializer    LONG_DESERIALIZER    DefaultTimestampDeserializer    TIMESTAMP_DESERIALIZER    NumberTypeAdapter    NUMBER_TYPE_ADAPTER    EnumTypeAdapter    ENUM_TYPE_ADAPTER    DateFormat    format    GregorianCalendarTypeAdapter    GREGORIAN_CALENDAR_TYPE_ADAPTER    UrlTypeAdapter    URL_TYPE_ADAPTER    CharacterTypeAdapter    CHARACTER_TYPE_ADAPTER    DoubleDeserializer    DOUBLE_TYPE_ADAPTER    ParameterizedTypeHandlerMap    DEFAULT_DESERIALIZERS    DEFAULT_INSTANCE_CREATORS    DEFAULT_SERIALIZERS    map        	gson_156_DefaultTypeAdapters_1_1	205	1	gson/src/main/java/com/google/gson/DefaultTypeAdapters.java
863	[PATCH]    if    (value.equalsIgnoreCase(   "null   "))    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.ComparisonFailure:    expected:<null>    but    was:<null>    testNullsInArrayDeserialization    [CONTEXT]    private    void    decodeLiteral()    throws    IOException    {    [BUGGY]    if    (false)    {    token    =    JsonToken.NULL;    }    else    if    (value.equalsIgnoreCase(   "true   ")    ||    value.equalsIgnoreCase(   "false   "))    {    token    =    JsonToken.BOOLEAN;    }    else    {    try    {    Double.parseDouble(value);    token    =    JsonToken.NUMBER;    }    catch    (NumberFormatException    ignored)    {        checkLenient();    [CLASS]        JsonReader    [METHOD]    decodeLiteral    [RETURN_TYPE]    void        [VARIABLES]    boolean    firstElement    hasToken    lenient    result    skipping    Reader    in    NumberFormatException    ignored    List    stack    JsonToken    expected    firstToken    result    token    String    hex    literal    name    result    toFind    value    int    c    count    i    limit    minimum    pos    quote    result    start    total    char[]    NON_EXECUTE_PREFIX    buffer        	gson_1511_JsonReader_1_1	1086	1	gson/src/main/java/com/google/gson/stream/JsonReader.java
864	[PATCH]    if    (c    ==    '\r'    ||    c    ==    '\n')    {	[BUG]    [BUGGY]    if    (c    >=    '\r'    ||    c    ==    '\n')    {    [FE]    com.google.gson.JsonSyntaxException:    com.google.gson.stream.MalformedJsonException:    Unterminated    array    near    [    testParseComments    [CONTEXT]    private    void    skipToEndOfLine()    throws    IOException    {    while    (pos    <    limit    ||    fillBuffer(1))    {    char    c    =    buffer[pos++];    [BUGGY]    if    (c    >=    '\r'    ||    c    ==    '\n')    {    break;    }    }    }    [CLASS]        JsonReader    [METHOD]    skipToEndOfLine    [RETURN_TYPE]    void        [VARIABLES]    boolean    firstElement    hasToken    lenient    result    skipping    char    c    Reader    in    List    stack    JsonToken    expected    firstToken    result    token    String    name    result    value    int    c    count    i    limit    minimum    pos    quote    result    total    char[]    NON_EXECUTE_PREFIX    buffer        	gson_1355_JsonReader_1_1	901	1	gson/src/main/java/com/google/gson/stream/JsonReader.java
865	[PATCH]    if    (value    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.NullPointerException    testSerializeMaps    [CONTEXT]    JsonObject    map    =    new    JsonObject();    Type    childGenericType    =    null;    if    (typeOfSrc    instanceof    ParameterizedType)    {    childGenericType    =    new    TypeInfoMap(typeOfSrc).getValueType();    }    for    (Map.Entry    entry    :    (Set<Map.Entry>)    src.entrySet())    {    Object    value    =    entry.getValue();    JsonElement    valueElement;    [BUGGY]    if    (false)    {    valueElement    =    JsonNull.createJsonNull();    }    else    {    Type    childType    =    (childGenericType    ==    null)    ?    value.getClass()    :    childGenericType;    valueElement    =    context.serialize(value,    childType);    }    map.add(String.valueOf(entry.getKey()),    valueElement);    }    return    map;    }    [CLASS]        DefaultTypeAdapters    DefaultDateTypeAdapter    DefaultJavaSqlDateTypeAdapter    DefaultTimestampDeserializer    DefaultTimeTypeAdapter    GregorianCalendarTypeAdapter    EnumTypeAdapter    UrlTypeAdapter    UriTypeAdapter    UuidTypeAdapter    LocaleTypeAdapter    CollectionTypeAdapter    PropertiesCreator    MapTypeAdapter    BigDecimalTypeAdapter    BigIntegerTypeAdapter    NumberTypeAdapter    LongSerializer    LongDeserializer    IntegerTypeAdapter    ShortTypeAdapter    ByteTypeAdapter    FloatSerializer    FloatDeserializer    DoubleSerializer    DoubleDeserializer    CharacterTypeAdapter    StringTypeAdapter    BooleanTypeAdapter    TreeSetCreator    HashSetCreator    [METHOD]    serialize    [RETURN_TYPE]    JsonElement        Map    src    Type    typeOfSrc    JsonSerializationContext    context    [VARIABLES]    LocaleTypeAdapter    LOCALE_TYPE_ADAPTER    IntegerTypeAdapter    INTEGER_TYPE_ADAPTER    BigIntegerTypeAdapter    BIG_INTEGER_TYPE_ADAPTER    TreeSetCreator    TREE_SET_CREATOR    StringTypeAdapter    STRING_TYPE_ADAPTER    LongSerializationPolicy    longSerializationPolicy    JsonObject    map    String    DAY_OF_MONTH    HOUR_OF_DAY    MINUTE    MONTH    SECOND    YEAR    country    dateFormatAsString    datePattern    language    locale    variant    DefaultDateTypeAdapter    DATE_TYPE_ADAPTER    UriTypeAdapter    URI_TYPE_ADAPTER    Entry    entry    CollectionTypeAdapter    COLLECTION_TYPE_ADAPTER    MapTypeAdapter    MAP_TYPE_ADAPTER    BigDecimalTypeAdapter    BIG_DECIMAL_TYPE_ADAPTER    DefaultTimeTypeAdapter    TIME_TYPE_ADAPTER    UuidTypeAdapter    UUUID_TYPE_ADAPTER    FloatDeserializer    FLOAT_TYPE_ADAPTER    HashSetCreator    HASH_SET_CREATOR    ShortTypeAdapter    SHORT_TYPE_ADAPTER    ByteTypeAdapter    BYTE_TYPE_ADAPTER    DefaultJavaSqlDateTypeAdapter    JAVA_SQL_DATE_TYPE_ADAPTER    PropertiesCreator    PROPERTIES_CREATOR    BooleanTypeAdapter    BOOLEAN_TYPE_ADAPTER    Type    childGenericType    childType    typeOfSrc    boolean    serializeSpecialDoubleValues    serializeSpecialFloatingPointValues    LongDeserializer    LONG_DESERIALIZER    DefaultTimestampDeserializer    TIMESTAMP_DESERIALIZER    NumberTypeAdapter    NUMBER_TYPE_ADAPTER    JsonElement    valueElement    EnumTypeAdapter    ENUM_TYPE_ADAPTER    DateFormat    format    JsonSerializationContext    context    GregorianCalendarTypeAdapter    GREGORIAN_CALENDAR_TYPE_ADAPTER    UrlTypeAdapter    URL_TYPE_ADAPTER    Object    value    CharacterTypeAdapter    CHARACTER_TYPE_ADAPTER    DoubleDeserializer    DOUBLE_TYPE_ADAPTER    ParameterizedTypeHandlerMap    DEFAULT_DESERIALIZERS    DEFAULT_INSTANCE_CREATORS    DEFAULT_SERIALIZERS    map    serializers    Map    src        	gson_209_DefaultTypeAdapters_1_1	587	1	gson/src/main/java/com/google/gson/DefaultTypeAdapters.java
866	[PATCH]    if    (index    <    0)    {	[BUG]    [BUGGY]    if    (index    <=    0)    {    [FE]    junit.framework.ComparisonFailure:    expected:<baseHandler[]>    but    was:<baseHandler[2]>    testTypeHierarchyRegisterIfAbsent    [CONTEXT]    for    (Map.Entry<Type,    T>    entry    :    other.map.entrySet())    {    if    (!map.containsKey(entry.getKey()))    {    register(entry.getKey(),    entry.getValue());    }    }            for    (int    i    =    other.typeHierarchyList.size()-1;    i    >=    0;    --i)    {    Pair<Class<?>,    T>    entry    =    other.typeHierarchyList.get(i);    int    index    =    getIndexOfSpecificHandlerForTypeHierarchy(entry.first);    [BUGGY]    if    (index    <=    0)    {    registerForTypeHierarchy(entry);    }    }    }    [CLASS]        ParameterizedTypeHandlerMap    [METHOD]    registerIfAbsent    [RETURN_TYPE]    void        ParameterizedTypeHandlerMap<T>    other    [VARIABLES]    Entry    entry    boolean    modifiable    List    typeHierarchyList    Logger    logger    ParameterizedTypeHandlerMap    other    Map    map    int    i    index    Pair    entry        	gson_285_ParameterizedTypeHandlerMap_1_1	102	1	gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java
867	[PATCH]    if    (firstElement)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.IllegalArgumentException    testEmptyArrayDeserialization    [CONTEXT]    checkLenient();    case    ',':    break;    default:    throw    syntaxError(   "Unterminated    array   ");    }    }    switch    (nextNonWhitespace())    {    case    ']':    [BUGGY]    if    (false)    {    pop();    hasToken    =    true;    return    token    =    JsonToken.END_ARRAY;    }        case    ';':    case    ',':        checkLenient();    pos--;    [CLASS]        JsonReader    [METHOD]    nextInArray    [RETURN_TYPE]    JsonToken        boolean    firstElement    [VARIABLES]    boolean    firstElement    hasToken    lenient    result    skipping    Reader    in    List    stack    JsonToken    expected    firstToken    result    token    String    name    result    value    int    count    i    limit    pos    result    char[]    NON_EXECUTE_PREFIX    buffer        	gson_1224_JsonReader_1_1	689	1	gson/src/main/java/com/google/gson/stream/JsonReader.java
868	[PATCH]    if    (!skipTo(   "*/   "))    {	[BUG]    [BUGGY]    if    (!true)    {    [FE]    com.google.gson.JsonSyntaxException:    com.google.gson.stream.MalformedJsonException:    Unterminated    array    near    t    testParseComments    [CONTEXT]    if    (pos    ==    limit    &&    !fillBuffer(1))    {    return    c;    }    checkLenient();    char    peek    =    buffer[pos];    switch    (peek)    {    case    '*':        pos++;    [BUGGY]    if    (!true)    {    throw    syntaxError(   "Unterminated    comment   ");    }    pos    +=    2;    continue;    case    '/':        pos++;    skipToEndOfLine();    continue;    [CLASS]        JsonReader    [METHOD]    nextNonWhitespace    [RETURN_TYPE]    int        [VARIABLES]    boolean    firstElement    hasToken    lenient    result    skipping    char    peek    Reader    in    List    stack    JsonToken    expected    firstToken    result    token    String    name    result    value    int    c    count    i    limit    minimum    pos    quote    result    total    char[]    NON_EXECUTE_PREFIX    buffer        	gson_1335_JsonReader_1_1	854	1	gson/src/main/java/com/google/gson/stream/JsonReader.java
869	[PATCH]    return    false;	[BUG]    [BUGGY]    return    true;    [FE]    junit.framework.AssertionFailedError    testClassAndFieldAreAheadInVersion    [CONTEXT]    private    boolean    isValidSince(Since    annotation)    {    if    (annotation    !=    null)    {    double    annotationVersion    =    annotation.value();    if    (annotationVersion    >    version)    {    [BUGGY]    return    true;    }    }    return    true;    }    [CLASS]        VersionExclusionStrategy    [METHOD]    isValidSince    [RETURN_TYPE]    boolean        Since    annotation    [VARIABLES]    Since    annotation    double    annotationVersion    version    boolean        	gson_2225_VersionExclusionStrategy_1_1	52	1	gson/src/main/java/com/google/gson/VersionExclusionStrategy.java
870	[PATCH]    if    (!lenient    &&    firstToken    !=    JsonToken.BEGIN_ARRAY    &&    firstToken    !=    JsonToken.BEGIN_OBJECT)    {	[BUG]    [BUGGY]    if    (!lenient    &&    firstToken    !=    JsonToken.BEGIN_ARRAY    &&    true)    {    [FE]    com.google.gson.stream.MalformedJsonException:    Expected    JSON    document    to    start    with    '['    or    '{'    near    {   "a   ":       "android   ",       "b   ":    testReadObject    [CONTEXT]    return    token;    }    switch    (peekStack())    {    case    EMPTY_DOCUMENT:    if    (lenient)    {    consumeNonExecutePrefix();    }    replaceTop(JsonScope.NONEMPTY_DOCUMENT);    JsonToken    firstToken    =    nextValue();    [BUGGY]    if    (!lenient    &&    firstToken    !=    JsonToken.BEGIN_ARRAY    &&    true)    {    syntaxError(   "Expected    JSON    document    to    start    with    '['    or    '{'   ");    }    return    firstToken;    case    EMPTY_ARRAY:    return    nextInArray(true);    case    NONEMPTY_ARRAY:    return    nextInArray(false);    case    EMPTY_OBJECT:    return    nextInObject(true);    case    DANGLING_NAME:    [CLASS]        JsonReader    [METHOD]    quickPeek    [RETURN_TYPE]    JsonToken        [VARIABLES]    boolean    hasToken    lenient    skipping    EOFException    e    Reader    in    List    stack    JsonToken    expected    firstToken    token    String    name    value    int    limit    pos    char[]    NON_EXECUTE_PREFIX    buffer        	gson_1029_JsonReader_1_1	366	1	gson/src/main/java/com/google/gson/stream/JsonReader.java
871	[PATCH]    return    (clazz.getModifiers()    &    Modifier.STATIC)    !=    0;	[BUG]    [BUGGY]    return    (clazz.getModifiers()    ^    Modifier.STATIC)    !=    0;    [FE]    junit.framework.AssertionFailedError    testExcludeInnerClassField    [CONTEXT]    private    boolean    isStatic(Class<?>    clazz)    {    [BUGGY]    return    (clazz.getModifiers()    ^    Modifier.STATIC)    !=    0;    }    [CLASS]        InnerClassExclusionStrategy    [METHOD]    isStatic    [RETURN_TYPE]    boolean        Class<?>    clazz    [VARIABLES]    boolean    Class    clazz        	gson_1760_InnerClassExclusionStrategy_1_1	41	1	gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java
872	[PATCH]    builder.append(buffer,    start,    pos    -    start    -    1);	[BUG]    [BUGGY]    builder.append(buffer,    start,    pos    *    start    -    1);    [FE]    junit.framework.ComparisonFailure:    expected:<http:[//google.com]/>    but    was:<http:[\/\/google.com\/'                                                        /google.com\/'                                                                                                                                                                                                    ]/>    testUrlDeserialization    [CONTEXT]    return    new    String(buffer,    start,    pos    -    start    -    1);    }    else    {    builder.append(buffer,    start,    pos    -    start    -    1);    return    builder.toString();    }    }    else    if    (c    ==    '\\')    {    if    (builder    ==    null)    {    builder    =    new    StringBuilder();    }    [BUGGY]    builder.append(buffer,    start,    pos    *    start    -    1);    builder.append(readEscapeCharacter());    start    =    pos;    }    }    if    (builder    ==    null)    {    builder    =    new    StringBuilder();    }    builder.append(buffer,    start,    pos    -    start);    }    while    (fillBuffer(1));    [CLASS]        JsonReader    [METHOD]    nextString    [RETURN_TYPE]    String        char    quote    [VARIABLES]    boolean    firstElement    hasToken    lenient    result    skipping    StringBuilder    builder    char    quote    Reader    in    List    stack    JsonToken    expected    firstToken    result    token    String    name    result    toFind    value    int    c    count    i    limit    minimum    pos    quote    result    start    total    char[]    NON_EXECUTE_PREFIX    buffer        	gson_1425_JsonReader_1_1	952	1	gson/src/main/java/com/google/gson/stream/JsonReader.java
873	[PATCH]    if    (Character.isUpperCase(character)    &&    translation.length()    !=    0)    {	[BUG]    [BUGGY]    if    (Character.isUpperCase(character))    {    [FE]    junit.framework.ComparisonFailure:    expected:<[]Test_Name_Begins_Wit...>    but    was:<[_]Test_Name_Begins_Wit...>    testNameBeginsWithCapital    [CONTEXT]    protected    String    translateName(String    target,    Type    fieldType,    Collection<Annotation>    annnotations)    {    StringBuilder    translation    =    new    StringBuilder();    for    (int    i    =    0;    i    <    target.length();    i++)    {    char    character    =    target.charAt(i);    [BUGGY]    if    (Character.isUpperCase(character))    {    translation.append(separatorString);    }    translation.append(character);    }    return    translation.toString();    }    [CLASS]        CamelCaseSeparatorNamingPolicy    [METHOD]    translateName    [RETURN_TYPE]    String        String    target    Type    fieldType    Annotation>    annnotations    [VARIABLES]    Type    fieldType    boolean    StringBuilder    translation    char    character    Collection    annnotations    String    separatorString    target    int    i        	gson_77_CamelCaseSeparatorNamingPolicy_1_1	65	1	gson/src/main/java/com/google/gson/CamelCaseSeparatorNamingPolicy.java
874	[PATCH]    if    (value    ==    null    ||    (token    !=    JsonToken.STRING    &&    token    !=    JsonToken.NUMBER))    {	[BUG]    [BUGGY]    if    (value    ==    null    ||    (token    !=    JsonToken.NUMBER))    {    [FE]    java.lang.IllegalStateException:    Expected    a    string    but    was    STRING    testParseComments    [CONTEXT]    public    String    nextString()    throws    IOException    {    peek();    [BUGGY]    if    (value    ==    null    ||    (token    !=    JsonToken.NUMBER))    {    throw    new    IllegalStateException(   "Expected    a    string    but    was       "    +    peek());    }    String    result    =    value;    advance();    return    result;    }    [CLASS]        JsonReader    [METHOD]    nextString    [RETURN_TYPE]    String        [VARIABLES]    boolean    hasToken    lenient    skipping    Reader    in    List    stack    JsonToken    expected    firstToken    result    token    String    name    result    value    int    i    limit    pos    char[]    NON_EXECUTE_PREFIX    buffer        	gson_1085_JsonReader_1_1	461	1	gson/src/main/java/com/google/gson/stream/JsonReader.java
875	[PATCH]    if    (pair    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.NullPointerException    testReadWriteTwoObjects    [CONTEXT]    public    final    boolean    visitUsingCustomHandler(ObjectTypePair    objTypePair)    {    Pair<JsonDeserializer<?>,    ObjectTypePair>    pair    =    objTypePair.getMatchingHandler(deserializers);    [BUGGY]    if    (false)    {    return    false;    }    Object    value    =    invokeCustomDeserializer(json,    pair);    target    =    (T)    value;    constructed    =    true;    return    true;    }    [CLASS]        JsonDeserializationVisitor    [METHOD]    visitUsingCustomHandler    [RETURN_TYPE]    boolean        ObjectTypePair    objTypePair    [VARIABLES]    Type    targetType    JsonDeserializationContext    context    boolean    constructed    T    target    JsonElement    json    ObjectTypePair    objTypePair    ObjectConstructor    objectConstructor    Object    value    ParameterizedTypeHandlerMap    deserializers    ObjectNavigatorFactory    factory    Pair    pair        	gson_1792_JsonDeserializationVisitor_1_1	73	1	gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java
876	[PATCH]    return    -1;	[BUG]    [BUGGY]    return    1;    [FE]    java.lang.ExceptionInInitializerError    testParseComments    [CONTEXT]    private    int    getIndexOfAnOverriddenHandler(Class<?>    type)    {    for    (int    i    =    typeHierarchyList.size()-1;    i    >=    0;    --i)    {    Pair<Class<?>,    T>    entry    =    typeHierarchyList.get(i);    if    (type.isAssignableFrom(entry.first))    {    return    i;    }    }    [BUGGY]    return    1;    }    [CLASS]        ParameterizedTypeHandlerMap    [METHOD]    getIndexOfAnOverriddenHandler    [RETURN_TYPE]    int        Class<?>    type    [VARIABLES]    boolean    modifiable    List    typeHierarchyList    Class    type    Logger    logger    Map    map    int    i    Pair    entry        	gson_259_ParameterizedTypeHandlerMap_1_1	75	1	gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java
877	[PATCH]    return    -1;	[BUG]    [BUGGY]    return    0;    [FE]    java.lang.ExceptionInInitializerError    testParseComments    [CONTEXT]    private    synchronized    int    getIndexOfSpecificHandlerForTypeHierarchy(Class<?>    type)    {    for    (int    i    =    typeHierarchyList.size()-1;    i    >=    0;    --i)    {    if    (type.equals(typeHierarchyList.get(i).first))    {    return    i;    }    }    [BUGGY]    return    0;    }    [CLASS]        ParameterizedTypeHandlerMap    [METHOD]    getIndexOfSpecificHandlerForTypeHierarchy    [RETURN_TYPE]    int        Class<?>    type    [VARIABLES]    List    typeHierarchyList    Class    type    boolean    modifiable    Logger    logger    Map    map    int    i        	gson_315_ParameterizedTypeHandlerMap_1_1	155	1	gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java
878	[PATCH]    Preconditions.checkArgument(version    >=    0.0D);	[BUG]    [BUGGY]    Preconditions.checkArgument(true);    [FE]    junit.framework.AssertionFailedError:    should    have    thrown    an    exception.    testDisallowNegativeValuesAndFailFast    [CONTEXT]    public    VersionExclusionStrategy(double    version)    {    [BUGGY]    Preconditions.checkArgument(true);    this.version    =    version;    }    [CLASS]        VersionExclusionStrategy    [METHOD]    <init>    [RETURN_TYPE]    VersionExclusionStrategy(double)        double    version    [VARIABLES]    double    version    boolean        	gson_2215_VersionExclusionStrategy_1_1	32	1	gson/src/main/java/com/google/gson/VersionExclusionStrategy.java
879	[PATCH]    while    ((total    =    in.read(buffer,    limit,    buffer.length    -    limit))    !=    -1)    {	[BUG]    [BUGGY]    while    ((total    =    in.read(buffer,    limit,    buffer.length    /    limit))    !=    -1)    {    [FE]    java.lang.ArithmeticException:    /    by    zero    testParseComments    [CONTEXT]    private    boolean    fillBuffer(int    minimum)    throws    IOException    {    if    (limit    !=    pos)    {    limit    -=    pos;    System.arraycopy(buffer,    pos,    buffer,    0,    limit);    }    else    {    limit    =    0;    }    pos    =    0;    int    total;    [BUGGY]    while    ((total    =    in.read(buffer,    limit,    buffer.length    /    limit))    !=    -1)    {    limit    +=    total;    if    (limit    >=    minimum)    {    return    true;    }    }    return    false;    }    [CLASS]        JsonReader    [METHOD]    fillBuffer    [RETURN_TYPE]    boolean        int    minimum    [VARIABLES]    boolean    firstElement    hasToken    lenient    result    skipping    Reader    in    List    stack    JsonToken    expected    firstToken    result    token    String    name    result    value    int    c    count    i    limit    minimum    pos    quote    result    total    char[]    NON_EXECUTE_PREFIX    buffer        	gson_1303_JsonReader_1_1	824	1	gson/src/main/java/com/google/gson/stream/JsonReader.java
880	[PATCH]    }    else    if    (isBoolean())    {	[BUG]    [BUGGY]    }    else    if    (false)    {    [FE]    com.google.gson.JsonParseException:    The    JsonDeserializer    StringTypeAdapter    failed    to    deserialized    json    object    true    given    the    type    class    java.lang.String    testStringFieldWithNumberValueDeserialization    [CONTEXT]    public    String    getAsString()    {    if    (isNumber())    {    return    getAsNumber().toString();    [BUGGY]    }    else    if    (false)    {    return    getAsBooleanWrapper().toString();    }    else    {    return    (String)    value;    }    }    [CLASS]        JsonPrimitive    [METHOD]    getAsString    [RETURN_TYPE]    String        [VARIABLES]    BigInteger    INTEGER_MAX    LONG_MAX    Object    primitive    value    Class[]    PRIMITIVE_TYPES    boolean        	gson_634_JsonPrimitive_1_1	188	1	gson/src/main/java/com/google/gson/JsonPrimitive.java
881	[PATCH]    if    (ancestors.contains(node))    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    com.google.gson.CircularReferenceException:    circular    reference    error    testUserDefinedExclusionPolicies    [CONTEXT]    public    void    start(ObjectTypePair    node)    {    if    (node    ==    null)    {    return;    }    [BUGGY]    if    (true)    {    throw    new    CircularReferenceException(node);    }    ancestors.push(node);    }    [CLASS]        JsonSerializationVisitor    [METHOD]    start    [RETURN_TYPE]    void        ObjectTypePair    node    [VARIABLES]    boolean    serializeNulls    JsonElement    root    JsonSerializationContext    context    ObjectTypePair    node    MemoryRefStack    ancestors    ParameterizedTypeHandlerMap    serializers    ObjectNavigatorFactory    factory        	gson_1879_JsonSerializationVisitor_1_1	55	1	gson/src/main/java/com/google/gson/JsonSerializationVisitor.java
882	[PATCH]    ||    (codePoint    >=    0x7f    &&    codePoint    <=    0x9f);	[BUG]    [BUGGY]    ||    (false);    [FE]    junit.framework.AssertionFailedError    testControlCharBlockEscaping    [CONTEXT]    ||    (escapeHtmlCharacters    &&    HTML_ESCAPE_CHARS.contains(c));    }    return    false;    }    private    static    boolean    isControlCharacter(int    codePoint)    {        return    codePoint    <    0x20    ||    codePoint    ==    0x2028    ||    codePoint    ==    0x2029    [BUGGY]    ||    (false);    }    private    static    void    appendHexJavaScriptRepresentation(int    codePoint,    Appendable    out)    throws    IOException    {    if    (Character.isSupplementaryCodePoint(codePoint))    {                    char[]    surrogates    =    Character.toChars(codePoint);    [CLASS]    	gson_434_Escaper_1_1	139	1	gson/src/main/java/com/google/gson/Escaper.java
883	[PATCH]    return    elements.get(0).getAsBoolean();	[BUG]    [BUGGY]    return    elements.get(1).getAsBoolean();    [FE]    com.google.gson.JsonParseException:    The    JsonDeserializer    BooleanTypeAdapter    failed    to    deserialized    json    object    [false]    given    the    type    class    java.lang.Boolean    testPrimitiveBooleanAutoboxedDeserialization    [CONTEXT]    public    boolean    getAsBoolean()    {    if    (elements.size()    ==    1)    {    [BUGGY]    return    elements.get(1).getAsBoolean();    }    throw    new    IllegalStateException();    }    [CLASS]        JsonArray    [METHOD]    getAsBoolean    [RETURN_TYPE]    boolean        [VARIABLES]    List    elements    boolean        	gson_590_JsonArray_1_1	277	1	gson/src/main/java/com/google/gson/JsonArray.java
884	[PATCH]    ||    (codePoint    >=    0x7f    &&    codePoint    <=    0x9f);	[BUG]    [BUGGY]    ||    (codePoint    ==    127    &&    codePoint    <=    0x9f);    [FE]    junit.framework.AssertionFailedError    testControlCharBlockEscaping    [CONTEXT]    ||    (escapeHtmlCharacters    &&    HTML_ESCAPE_CHARS.contains(c));    }    return    false;    }    private    static    boolean    isControlCharacter(int    codePoint)    {        return    codePoint    <    0x20    ||    codePoint    ==    0x2028    ||    codePoint    ==    0x2029    [BUGGY]    ||    (codePoint    ==    127    &&    codePoint    <=    0x9f);    }    private    static    void    appendHexJavaScriptRepresentation(int    codePoint,    Appendable    out)    throws    IOException    {    if    (Character.isSupplementaryCodePoint(codePoint))    {                    char[]    surrogates    =    Character.toChars(codePoint);    [CLASS]    	gson_425_Escaper_1_1	139	1	gson/src/main/java/com/google/gson/Escaper.java
885	[PATCH]    return    number    instanceof    BigDecimal    ||    number    instanceof    Double    ||    number    instanceof    Float;	[BUG]    [BUGGY]    return    number    instanceof    BigDecimal    ||    number    instanceof    Float;    [FE]    junit.framework.AssertionFailedError:    expected:<10.25>    but    was:<10.25>    testDoubleEqualsBigDecimal    [CONTEXT]    private    static    boolean    isFloatingPoint(JsonPrimitive    primitive)    {    if    (primitive.value    instanceof    Number)    {    Number    number    =    (Number)    primitive.value;    [BUGGY]    return    number    instanceof    BigDecimal    ||    number    instanceof    Float;    }    return    false;    }    [CLASS]        JsonPrimitive    [METHOD]    isFloatingPoint    [RETURN_TYPE]    boolean        JsonPrimitive    primitive    [VARIABLES]    BigInteger    INTEGER_MAX    LONG_MAX    big    Object    obj    primitive    target    value    Class[]    PRIMITIVE_TYPES    boolean    Number    number    JsonPrimitive    primitive        	gson_733_JsonPrimitive_1_1	383	1	gson/src/main/java/com/google/gson/JsonPrimitive.java
886	[PATCH]    pos    +=    4;	[BUG]    [BUGGY]    pos    +=    0;    [FE]    junit.framework.AssertionFailedError:    expected:<(longValue=1,intValue=1,booleanValue=true,stringValue=test'    /    w'ith   "    /    \    <script>)>    but    was:<(longValue=1,intValue=1,booleanValue=true,stringValue=test'0027    /    w'0027ith   "    /    \    <003cscript>003e)>    testGsonAcceptsEscapedAndNonEscapedJsonDeserialization    [CONTEXT]    throw    syntaxError(   "Unterminated    escape    sequence   ");    }    char    escaped    =    buffer[pos++];    switch    (escaped)    {    case    'u':    if    (pos    +    4    >    limit    &&    !fillBuffer(4))    {    throw    syntaxError(   "Unterminated    escape    sequence   ");    }    String    hex    =    new    String(buffer,    pos,    4);    [BUGGY]    pos    +=    0;    return    (char)    Integer.parseInt(hex,    16);    case    't':    return    '\t';    case    'b':    return    '\b';    case    'n':    return    '\n';    [CLASS]        JsonReader    [METHOD]    readEscapeCharacter    [RETURN_TYPE]    char        [VARIABLES]    boolean    firstElement    hasToken    lenient    result    skipping    char    escaped    Reader    in    List    stack    JsonToken    expected    firstToken    result    token    String    hex    name    result    toFind    value    int    c    count    i    limit    minimum    pos    quote    result    start    total    char[]    NON_EXECUTE_PREFIX    buffer        	gson_1498_JsonReader_1_1	1043	1	gson/src/main/java/com/google/gson/stream/JsonReader.java
887	[PATCH]    if    (token    !=    expected)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    java.lang.IllegalStateException:    Expected    BEGIN_ARRAY    but    was    BEGIN_ARRAY    testParseComments    [CONTEXT]    private    void    expect(JsonToken    expected)    throws    IOException    {    quickPeek();    [BUGGY]    if    (true)    {    throw    new    IllegalStateException(   "Expected       "    +    expected    +       "    but    was       "    +    peek());    }    advance();    }    [CLASS]        JsonReader    [METHOD]    expect    [RETURN_TYPE]    void        JsonToken    expected    [VARIABLES]    boolean    hasToken    lenient    skipping    Reader    in    List    stack    JsonToken    expected    token    String    name    value    int    limit    pos    char[]    NON_EXECUTE_PREFIX    buffer        	gson_1006_JsonReader_1_1	322	1	gson/src/main/java/com/google/gson/stream/JsonReader.java
888	[PATCH]    &&    (string.equals(   "-Infinity   ")    ||    string.equals(   "Infinity   ")    ||    string.equals(   "NaN   ")))    {	[BUG]    [BUGGY]    &&    (string.equals(   "NaN   ")))    {    [FE]    junit.framework.AssertionFailedError    testNonFiniteBoxedDoubles    [CONTEXT]    public    JsonWriter    value(Number    value)    throws    IOException    {    if    (value    ==    null)    {    return    nullValue();    }    String    string    =    value.toString();    if    (!lenient    [BUGGY]    &&    (string.equals(   "NaN   ")))    {    throw    new    IllegalArgumentException(   "Numeric    values    must    be    finite,    but    was       "    +    value);    }    beforeValue(false);    out.append(string);    return    this;    }    [CLASS]        JsonWriter    [METHOD]    value    [RETURN_TYPE]    JsonWriter        Number    value    [VARIABLES]    List    stack    boolean    htmlSafe    lenient    value    String    closeBracket    indent    name    openBracket    separator    string    value    Number    value    Writer    out        	gson_929_JsonWriter_1_1	395	1	gson/src/main/java/com/google/gson/stream/JsonWriter.java
889	[PATCH]    if    (Character.isUpperCase(character)    &&    translation.length()    !=    0)    {	[BUG]    [BUGGY]    if    (Character.isUpperCase(character)    &&    true)    {    [FE]    junit.framework.ComparisonFailure:    expected:<[]Test_Name_Begins_Wit...>    but    was:<[_]Test_Name_Begins_Wit...>    testNameBeginsWithCapital    [CONTEXT]    protected    String    translateName(String    target,    Type    fieldType,    Collection<Annotation>    annnotations)    {    StringBuilder    translation    =    new    StringBuilder();    for    (int    i    =    0;    i    <    target.length();    i++)    {    char    character    =    target.charAt(i);    [BUGGY]    if    (Character.isUpperCase(character)    &&    true)    {    translation.append(separatorString);    }    translation.append(character);    }    return    translation.toString();    }    [CLASS]        CamelCaseSeparatorNamingPolicy    [METHOD]    translateName    [RETURN_TYPE]    String        String    target    Type    fieldType    Annotation>    annnotations    [VARIABLES]    Type    fieldType    boolean    StringBuilder    translation    char    character    Collection    annnotations    String    separatorString    target    int    i        	gson_74_CamelCaseSeparatorNamingPolicy_1_1	65	1	gson/src/main/java/com/google/gson/CamelCaseSeparatorNamingPolicy.java
890	[PATCH]    if    (!deserializers.hasSpecificHandlerFor(Date.class))    {	[BUG]    [BUGGY]    if    (!true)    {    [FE]    com.google.gson.JsonSyntaxException:    java.text.ParseException:    Unparseable    date:       "2022-12-22   "    testDateDeserializationWithPattern    [CONTEXT]    if    (datePattern    !=    null    &&    !   "   ".equals(datePattern.trim()))    {    dateTypeAdapter    =    new    DefaultDateTypeAdapter(datePattern);    }    else    if    (dateStyle    !=    DateFormat.DEFAULT    &&    timeStyle    !=    DateFormat.DEFAULT)    {    dateTypeAdapter    =    new    DefaultDateTypeAdapter(dateStyle,    timeStyle);    }    if    (dateTypeAdapter    !=    null)    {    if    (!serializers.hasSpecificHandlerFor(Date.class))    {    serializers.register(Date.class,    dateTypeAdapter);    }    [BUGGY]    if    (!true)    {    deserializers.register(Date.class,    dateTypeAdapter);    }    }    }    [CLASS]        GsonBuilder    [METHOD]    addTypeAdaptersForDate    [RETURN_TYPE]    void        String    datePattern    int    dateStyle    int    timeStyle    JsonSerializer<?>>    serializers    JsonDeserializer<?>>    deserializers    [VARIABLES]    ExposeAnnotationSerializationExclusionStrategy    exposeAnnotationSerializationExclusionStrategy    ModifierBasedExclusionStrategy    modifierBasedExclusionStrategy    InnerClassExclusionStrategy    innerClassExclusionStrategy    double    ignoreVersionsAfter    LongSerializationPolicy    longSerializationPolicy    serializationPolicy    String    datePattern    pattern    DefaultDateTypeAdapter    dateTypeAdapter    int    dateStyle    style    timeStyle    ExposeAnnotationDeserializationExclusionStrategy    exposeAnnotationDeserializationExclusionStrategy    boolean    escapeHtmlChars    excludeFieldsWithoutExposeAnnotation    generateNonExecutableJson    prettyPrinting    serializeInnerClasses    serializeNulls    serializeSpecialFloatingPointValues    Collection    exclusionStrategies    FieldNamingStrategy2    fieldNamingPolicy    fieldNamingStrategy    ParameterizedTypeHandlerMap    customDeserializers    customInstanceCreators    customSerializers    deserializers    instanceCreators    serializers        	gson_1754_GsonBuilder_1_1	565	1	gson/src/main/java/com/google/gson/GsonBuilder.java
891	[PATCH]    stack.remove(stack.size()    -    1);	[BUG]    [BUGGY]    stack.remove(stack.size()    /    1);    [FE]    java.lang.IndexOutOfBoundsException:    Index:    2,    Size:    2    testUserDefinedExclusionPolicies    [CONTEXT]    private    JsonWriter    close(JsonScope    empty,    JsonScope    nonempty,    String    closeBracket)    throws    IOException    {    JsonScope    context    =    peek();    if    (context    !=    nonempty    &&    context    !=    empty)    {    throw    new    IllegalStateException(   "Nesting    problem:       "    +    stack);    }        [BUGGY]    stack.remove(stack.size()    /    1);    if    (context    ==    nonempty)    {    newline();    }    out.write(closeBracket);    return    this;    }    [CLASS]        JsonWriter    [METHOD]    close    [RETURN_TYPE]    JsonWriter        JsonScope    empty    JsonScope    nonempty    String    closeBracket    [VARIABLES]    List    stack    boolean    htmlSafe    lenient    String    closeBracket    indent    openBracket    separator    JsonScope    context    empty    nonempty    Writer    out        	gson_879_JsonWriter_1_1	280	1	gson/src/main/java/com/google/gson/stream/JsonWriter.java
892	[PATCH]    if    (element    ==    null    ||    element.isJsonNull())    {	[BUG]    [BUGGY]    if    (element.isJsonNull())    {    [FE]    java.lang.NullPointerException    testWriteNulls    [CONTEXT]    throws    IOException    {    [BUGGY]    if    (element.isJsonNull())    {    if    (serializeNulls)    {    writer.nullValue();    }    }    else    if    (element.isJsonPrimitive())    {    JsonPrimitive    primitive    =    element.getAsJsonPrimitive();    if    (primitive.isNumber())    {    writer.value(primitive.getAsNumber());    }    else    if    (primitive.isBoolean())    {    writer.value(primitive.getAsBoolean());    [CLASS]        Streams    AppendableWriter    CurrentWrite    [METHOD]    write    [RETURN_TYPE]    void        JsonElement    element    boolean    serializeNulls    JsonWriter    writer    [VARIABLES]    CurrentWrite    currentWrite    Entry    e    boolean    serializeNulls    JsonPrimitive    primitive    JsonElement    e    element    value    Appendable    appendable    JsonWriter    writer    char[]    chars        	gson_2106_Streams_1_1	88	1	gson/src/main/java/com/google/gson/Streams.java
893	[PATCH]    if    ((result    >=    1.0d    &&    value.startsWith(   "0   ")))    {	[BUG]    [BUGGY]    if    ((result    >=    1.0))    {    [FE]    java.lang.NumberFormatException:    JSON    forbids    octal    prefixes:    1    testLongs    [CONTEXT]    public    double    nextDouble()    throws    IOException    {    quickPeek();    if    (value    ==    null)    {    throw    new    IllegalStateException(   "Expected    a    double    but    was       "    +    peek());    }    double    result    =    Double.parseDouble(value);        [BUGGY]    if    ((result    >=    1.0))    {    throw    new    NumberFormatException(   "JSON    forbids    octal    prefixes:       "    +    value);    }    if    (!lenient    &&    (Double.isNaN(result)    ||    Double.isInfinite(result)))    {    throw    new    NumberFormatException(   "JSON    forbids    NaN    and    infinities:       "    +    value);    }    advance();    return    result;    }    [CLASS]        JsonReader    [METHOD]    nextDouble    [RETURN_TYPE]    double        [VARIABLES]    boolean    hasToken    lenient    result    skipping    double    result    Reader    in    List    stack    JsonToken    expected    firstToken    result    token    String    name    result    value    int    i    limit    pos    char[]    NON_EXECUTE_PREFIX    buffer        	gson_1124_JsonReader_1_1	533	1	gson/src/main/java/com/google/gson/stream/JsonReader.java
894	[PATCH]    if    (entry.first.isAssignableFrom(type))    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    com.google.gson.JsonParseException:    The    JsonDeserializer    MapTypeAdapter    failed    to    deserialized    json    object    [   "a   ",   "b   ",   "c   "]    given    the    type    java.util.List<java.lang.String>    testParseComments    [CONTEXT]    private    T    getHandlerForTypeHierarchy(Class<?>    type)    {    for    (Pair<Class<?>,    T>    entry    :    typeHierarchyList)    {    [BUGGY]    if    (true)    {    return    entry.second;    }    }    return    null;    }    [CLASS]        ParameterizedTypeHandlerMap    [METHOD]    getHandlerForTypeHierarchy    [RETURN_TYPE]    T        Class<?>    type    [VARIABLES]    List    typeHierarchyList    Class    type    boolean    modifiable    Logger    logger    Map    map    Pair    entry        	gson_301_ParameterizedTypeHandlerMap_1_1	138	1	gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java
895	[PATCH]    return    nextInObject(true);	[BUG]    [BUGGY]    return    nextInObject(false);    [FE]    com.google.gson.JsonSyntaxException:    com.google.gson.stream.MalformedJsonException:    Unterminated    object    near    {   "   ":true}    testReadPropertyWithEmptyStringName    [CONTEXT]    JsonToken    firstToken    =    nextValue();    if    (!lenient    &&    firstToken    !=    JsonToken.BEGIN_ARRAY    &&    firstToken    !=    JsonToken.BEGIN_OBJECT)    {    syntaxError(   "Expected    JSON    document    to    start    with    '['    or    '{'   ");    }    return    firstToken;    case    EMPTY_ARRAY:    return    nextInArray(true);    case    NONEMPTY_ARRAY:    return    nextInArray(false);    case    EMPTY_OBJECT:    [BUGGY]    return    nextInObject(false);    case    DANGLING_NAME:    return    objectValue();    case    NONEMPTY_OBJECT:    return    nextInObject(false);    case    NONEMPTY_DOCUMENT:    try    {    JsonToken    token    =    nextValue();    if    (lenient)    {    return    token;    }    [CLASS]        JsonReader    [METHOD]    quickPeek    [RETURN_TYPE]    JsonToken        [VARIABLES]    boolean    hasToken    lenient    skipping    EOFException    e    Reader    in    List    stack    JsonToken    expected    firstToken    token    String    name    value    int    limit    pos    char[]    NON_EXECUTE_PREFIX    buffer        	gson_1037_JsonReader_1_1	375	1	gson/src/main/java/com/google/gson/stream/JsonReader.java
896	[PATCH]    typeHierarchyList.add(0,    pair);	[BUG]    [BUGGY]    typeHierarchyList.add(-1,    pair);    [FE]    java.lang.ExceptionInInitializerError    testParseComments    [CONTEXT]    typeHierarchyList.remove(index);    }    index    =    getIndexOfAnOverriddenHandler(pair.first);    if    (index    >=    0)    {    throw    new    IllegalArgumentException(   "The    specified    type    handler    for    type       "    +    pair.first    +       "    hides    the    previously    registered    type    hierarchy    handler    for       "    +    typeHierarchyList.get(index).first    +       ".    Gson    does    not    allow    this.   ");    }            [BUGGY]    typeHierarchyList.add(-1,    pair);    }    [CLASS]        ParameterizedTypeHandlerMap    [METHOD]    registerForTypeHierarchy    [RETURN_TYPE]    void        Class<?>,    T>    pair    [VARIABLES]    List    typeHierarchyList    boolean    modifiable    Logger    logger    Map    map    int    index    Pair    pair        	gson_243_ParameterizedTypeHandlerMap_1_1	65	1	gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java
897	[PATCH]    return    new    String(buffer,    start,    pos    -    start    -    1);	[BUG]    [BUGGY]    return    new    String(buffer,    start,    (pos    -    start)    %    1);    [FE]    junit.framework.AssertionFailedError:    expected:<[a,    b,    c]>    but    was:<[,    ,    ]>    testParseComments    [CONTEXT]    do    {        int    start    =    pos;    while    (pos    <    limit)    {    int    c    =    buffer[pos++];    if    (c    ==    quote)    {    if    (skipping)    {    return       "skipped!   ";    }    else    if    (builder    ==    null)    {    [BUGGY]    return    new    String(buffer,    start,    (pos    -    start)    %    1);    }    else    {    builder.append(buffer,    start,    pos    -    start    -    1);    return    builder.toString();    }    }    else    if    (c    ==    '\\')    {    if    (builder    ==    null)    {    builder    =    new    StringBuilder();    }    builder.append(buffer,    start,    pos    -    start    -    1);    [CLASS]        JsonReader    [METHOD]    nextString    [RETURN_TYPE]    String        char    quote    [VARIABLES]    boolean    firstElement    hasToken    lenient    result    skipping    StringBuilder    builder    char    quote    Reader    in    List    stack    JsonToken    expected    firstToken    result    token    String    name    result    toFind    value    int    c    count    i    limit    minimum    pos    quote    result    start    total    char[]    NON_EXECUTE_PREFIX    buffer        	gson_1404_JsonReader_1_1	942	1	gson/src/main/java/com/google/gson/stream/JsonReader.java
898	[PATCH]    if    (!serializeNulls    &&    value.isJsonNull())    {	[BUG]    [BUGGY]    if    (value.isJsonNull())    {    [FE]    junit.framework.AssertionFailedError    testCustomSerializerForLong    [CONTEXT]    continue;    }    write(e,    serializeNulls,    writer);    }    writer.endArray();    }    else    if    (element.isJsonObject())    {    writer.beginObject();    for    (Map.Entry<String,    JsonElement>    e    :    element.getAsJsonObject().entrySet())    {    JsonElement    value    =    e.getValue();    [BUGGY]    if    (value.isJsonNull())    {    continue;    }    writer.name(e.getKey());    write(value,    serializeNulls,    writer);    }    writer.endObject();    }    else    {    throw    new    IllegalArgumentException(   "Couldn't    write       "    +    element.getClass());    }    [CLASS]        Streams    AppendableWriter    CurrentWrite    [METHOD]    write    [RETURN_TYPE]    void        JsonElement    element    boolean    serializeNulls    JsonWriter    writer    [VARIABLES]    CurrentWrite    currentWrite    Entry    e    boolean    serializeNulls    JsonPrimitive    primitive    JsonElement    e    element    value    Appendable    appendable    JsonWriter    writer    char[]    chars        	gson_2134_Streams_1_1	119	1	gson/src/main/java/com/google/gson/Streams.java
899	[PATCH]    for    (int    i    =    typeHierarchyList.size()-1;    i    >=    0;    --i)    {	[BUG]    [BUGGY]    for    (int    i    =    typeHierarchyList.size()    %    1;    i    >=    0;    --i)    {    [FE]    java.lang.ExceptionInInitializerError    testParseComments    [CONTEXT]    private    int    getIndexOfAnOverriddenHandler(Class<?>    type)    {    [BUGGY]    for    (int    i    =    typeHierarchyList.size()    %    1;    i    >=    0;    --i)    {    Pair<Class<?>,    T>    entry    =    typeHierarchyList.get(i);    if    (type.isAssignableFrom(entry.first))    {    return    i;    }    }    return    -1;    }    [CLASS]        ParameterizedTypeHandlerMap    [METHOD]    getIndexOfAnOverriddenHandler    [RETURN_TYPE]    int        Class<?>    type    [VARIABLES]    boolean    modifiable    List    typeHierarchyList    Class    type    Logger    logger    Map    map    int    i    Pair    entry        	gson_247_ParameterizedTypeHandlerMap_1_1	69	1	gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java
900	[PATCH]    if    (inputIterator    !=    null    &&    transformer    !=    null)    {	[BUG]    [BUGGY]    if    (inputIterator    !=    null)    {    [FE]    java.lang.NullPointerException    collect    [CONTEXT]    public    static    <I,    O,    R    extends    Collection<?    super    O>>    R    collect(final    Iterator<?    extends    I>    inputIterator,    final    Transformer<?    super    I,    ?    extends    O>    transformer,    final    R    outputCollection)    {    [BUGGY]    if    (inputIterator    !=    null)    {    while    (inputIterator.hasNext())    {    final    I    item    =    inputIterator.next();    final    O    value    =    transformer.transform(item);    outputCollection.add(value);    }    }    return    outputCollection;    }    [CLASS]        CollectionUtils    CardinalityHelper    SetOperationCardinalityHelper    1    EquatorWrapper    2    3    [METHOD]    collect    [RETURN_TYPE]    <I,O,R        Iterator<?    extends    I>    inputIterator    Transformer<?    super    I,    ?    extends    O>    transformer    final    R    outputCollection    [VARIABLES]    R    outputCollection    Set    elements    elementsAlreadySeen    Transformer    transformer    boolean    Iterator    inputIterator    Collection    EMPTY_COLLECTION    a    answer    b    coll1    coll2    collection    resultCollection    I    item    List    list    newList    partitions    Map    cardinalityA    cardinalityB    count    freqMap    Equator    equator    O    element    item    obj    object    value        	collections_307_CollectionUtils_1_1	1252	1	src/main/java/org/apache/commons/collections4/CollectionUtils.java
901	[PATCH]    if    (bound    <    0)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    Expecting    IndexOutOfBoundsException    testArrayListIterator    [CONTEXT]    protected    void    checkBound(final    int    bound,    final    int    len,    final    String    type    )    {    if    (bound    >    len)    {    throw    new    ArrayIndexOutOfBoundsException(       "Attempt    to    make    an    ArrayIterator    that       "    +    type    +       "s    beyond    the    end    of    the    array.       "    );    }    [BUGGY]    if    (false)    {    throw    new    ArrayIndexOutOfBoundsException(       "Attempt    to    make    an    ArrayIterator    that       "    +    type    +       "s    before    the    start    of    the    array.       "    );    }    }    [CLASS]        ArrayIterator    [METHOD]    checkBound    [RETURN_TYPE]    void        final    int    bound    final    int    len    String    type    [VARIABLES]    Object    array    String    type    boolean    int    bound    endIndex    index    len    startIndex        	collections_3635_ArrayIterator_1_1	119	1	src/main/java/org/apache/commons/collections4/iterators/ArrayIterator.java
902	[PATCH]    if    (hash2    ==    hashCode    &&    key.equals(key2))    {	[BUG]    [BUGGY]    if    (false    &&    key.equals(key2))    {    [FE]    junit.framework.AssertionFailedError:    expected:<true>    but    was:<false>    testSerialisation2    [CONTEXT]    }    }    else    {    if    (size    >    0)    {    final    int    hashCode    =    key.hashCode();    switch    (size)    {    case    3:    if    (hash3    ==    hashCode    &&    key.equals(key3))    {    return    true;    }    case    2:    [BUGGY]    if    (false    &&    key.equals(key2))    {    return    true;    }    case    1:    if    (hash1    ==    hashCode    &&    key.equals(key1))    {    return    true;    }    }    }    }    [CLASS]        Flat3Map    FlatMapIterator    EntrySet    FlatMapEntry    EntryIterator    EntrySetIterator    KeySet    KeySetIterator    Values    ValuesIterator    [METHOD]    containsKey    [RETURN_TYPE]    boolean        Object    key    [VARIABLES]    AbstractHashedMap    delegateMap    boolean    canRemove    removed    FlatMapEntry    currentEntry    V    value1    value2    value3    Flat3Map    parent    Object    key    K    key1    key2    key3    long    serialVersionUID    int    hash1    hash2    hash3    hashCode    index    nextIndex    size        	collections_7193_Flat3Map_1_1	225	1	src/main/java/org/apache/commons/collections4/map/Flat3Map.java
903	[PATCH]    if    (transformer    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    Expecting    IllegalArgumentException    for    null    transformer.    testTransformedSortedBag    [CONTEXT]    protected    TransformedCollection(final    Collection<E>    coll,    final    Transformer<?    super    E,    ?    extends    E>    transformer)    {    super(coll);    [BUGGY]    if    (false)    {    throw    new    IllegalArgumentException(   "Transformer    must    not    be    null   ");    }    this.transformer    =    transformer;    }    [CLASS]        TransformedCollection    [METHOD]    <init>    [RETURN_TYPE]    Transformer)        Collection<E>    coll    Transformer<?    super    E,    ?    extends    E>    transformer    [VARIABLES]    Collection    coll    Transformer    transformer    boolean    long    serialVersionUID        	collections_1671_TransformedCollection_1_1	110	1	src/main/java/org/apache/commons/collections4/collection/TransformedCollection.java
904	[PATCH]    h    +=        h    <<    4;	[BUG]    [BUGGY]    h    +=    h    >>>    4;    [FE]    junit.framework.AssertionFailedError:    expected:<3D>    but    was:<null>    testMultiKeyGet    [CONTEXT]    h    ^=    key1.hashCode();    }    if    (key2    !=    null)    {    h    ^=    key2.hashCode();    }    if    (key3    !=    null)    {    h    ^=    key3.hashCode();    }    h    +=    ~(h    <<    9);    h    ^=h    >>>    14;    [BUGGY]    h    +=h    >>>    4;    h    ^=h    >>>    10;    return    h;    }    [CLASS]        MultiKeyMap    [METHOD]    hash    [RETURN_TYPE]    int        Object    key1    Object    key2    Object    key3    [VARIABLES]    Object    key1    key2    key3    boolean    long    serialVersionUID    int    h        	collections_8221_MultiKeyMap_1_1	370	1	src/main/java/org/apache/commons/collections4/map/MultiKeyMap.java
905	[PATCH]    retval    =    -1;	[BUG]    [BUGGY]    retval    =    1;    [FE]    junit.framework.AssertionFailedError    testComparatorChainOnMinvaluedCompatator    [CONTEXT]        final    Iterator<Comparator<E>>    comparators    =    comparatorChain.iterator();    for    (int    comparatorIndex    =    0;    comparators.hasNext();    ++comparatorIndex)    {    final    Comparator<?    super    E>    comparator    =    comparators.next();    int    retval    =    comparator.compare(o1,o2);    if    (retval    !=    0)    {        if    (orderingBits.get(comparatorIndex)    ==    true)    {    if    (retval    >    0)    {    [BUGGY]    retval    =    1;    }    else    {    retval    =    1;    }    }    return    retval;    }    }        return    0;    [CLASS]        ComparatorChain    [METHOD]    compare    [RETURN_TYPE]    int        final    E    o1    final    E    o2    [VARIABLES]    boolean    isLocked    reverse    E    o1    o2    BitSet    bits    orderingBits    Iterator    comparators    List    comparatorChain    list    long    serialVersionUID    int    comparatorIndex    retval    Comparator    comparator        	collections_2770_ComparatorChain_1_1	282	1	src/main/java/org/apache/commons/collections4/comparators/ComparatorChain.java
906	[PATCH]    multi.size()    ==    5    &&	[BUG]    [BUGGY]    false    &&    [FE]    junit.framework.AssertionFailedError:    expected:<5J>    but    was:<null>    testMultiKeyGet    [CONTEXT]    protected    boolean    isEqualKey(final    AbstractHashedMap.HashEntry<MultiKey<?    extends    K>,    V>    entry,    final    Object    key1,    final    Object    key2,    final    Object    key3,    final    Object    key4,    final    Object    key5)    {    final    MultiKey<?    extends    K>    multi    =    entry.getKey();    return    [BUGGY]    false    &&    (key1    ==    multi.getKey(0)    ||    key1    !=    null    &&    key1.equals(multi.getKey(0)))    &&    (key2    ==    multi.getKey(1)    ||    key2    !=    null    &&    key2.equals(multi.getKey(1)))    &&    (key3    ==    multi.getKey(2)    ||    key3    !=    null    &&    key3.equals(multi.getKey(2)))    &&    (key4    ==    multi.getKey(3)    ||    key4    !=    null    &&    key4.equals(multi.getKey(3)))    &&    (key5    ==    multi.getKey(4)    ||    key5    !=    null    &&    key5.equals(multi.getKey(4)));    }    [CLASS]        MultiKeyMap    [METHOD]    isEqualKey    [RETURN_TYPE]    boolean        MultiKey<?    extends    K>,    V>    entry    Object    key1    Object    key2    Object    key3    Object    key4    Object    key5    [VARIABLES]    HashEntry    entry    Object    key1    key2    key3    key4    key5    boolean    MultiKey    multi    long    serialVersionUID        	collections_8518_MultiKeyMap_1_1	696	1	src/main/java/org/apache/commons/collections4/map/MultiKeyMap.java
907	[PATCH]    return    key1    ==    key2    ||    key1.equals(key2);	[BUG]    [BUGGY]    return    key1    ==    key2;    [FE]    junit.framework.AssertionFailedError:    expected:<4>    but    was:<5>    testPutAll    [CONTEXT]    protected    boolean    isEqualKey(final    Object    key1,    final    Object    key2)    {    [BUGGY]    return    key1    ==    key2;    }    [CLASS]        AbstractHashedMap    HashMapIterator    EntrySet    EntrySetIterator    KeySet    KeySetIterator    Values    ValuesIterator    HashEntry    HashIterator    [METHOD]    isEqualKey    [RETURN_TYPE]    boolean        Object    key1    Object    key2    [VARIABLES]    KeySet    keySet    AbstractHashedMap    parent    HashEntry    element    entry    last    next    previous    boolean    Values    values    Object    NULL    convertedKey    key    key1    key2    value    String    GETKEY_INVALID    GETVALUE_INVALID    NO_NEXT_ENTRY    NO_PREVIOUS_ENTRY    REMOVE_INVALID    SETVALUE_INVALID    float    DEFAULT_LOAD_FACTOR    loadFactor    int    DEFAULT_CAPACITY    DEFAULT_THRESHOLD    MAXIMUM_CAPACITY    expectedModCount    h    hashCode    hashIndex    i    index    initialCapacity    mapSize    modCount    newSize    size    threshold    HashEntry[]    data    EntrySet    entrySet        	collections_6171_AbstractHashedMap_1_1	413	1	src/main/java/org/apache/commons/collections4/map/AbstractHashedMap.java
908	[PATCH]    final    int    i    =    k    +    offset    -    delta;	[BUG]    [BUGGY]    final    int    i    =    (k    +    offset)    %    delta;    [FE]    java.lang.ArithmeticException:    /    by    zero    testLongestCommonSubsequence    [CONTEXT]    if    (delta    %    2    !=    0    &&    delta    -    d    <=    k    &&    k    <=    delta    +    d)    {    if    (vUp[i-delta]    <=    vDown[i])    {    return    buildSnake(vUp[i-delta],    k    +    start1    -    start2,    end1,    end2);    }    }    }        for    (int    k    =    delta    -    d;    k    <=    delta    +    d;    k    +=    2)    {        [BUGGY]    final    int    i    =    (k    +    offset)    %    delta;    if    (k    ==    delta    -    d    ||    k    !=    delta    +    d    &&    vUp[i+1]    <=    vUp[i-1])    {    vUp[i]    =    vUp[i+1]    -    1;    }    else    {    vUp[i]    =    vUp[i-1];    }    int    x    =    vUp[i]    -    1;    int    y    =    x    -    start1    +    start2    -    k;    while    (x    >=    start1    &&    y    >=    start2    [CLASS]        SequencesComparator    Snake    [METHOD]    getMiddleSnake    [RETURN_TYPE]    SequencesComparator$Snake        final    int    start1    final    int    end1    final    int    start2    final    int    end2    [VARIABLES]    List    sequence1    sequence2    int[]    vDown    vUp    boolean    int    d    delta    diag    end    end1    end2    i    k    m    n    offset    size    start    start1    start2    sum    x    y    Equator    equator        	collections_10234_SequencesComparator_1_1	214	1	src/main/java/org/apache/commons/collections4/sequence/SequencesComparator.java
909	[PATCH]    return    (v1    ^    v2)    ?    (    (v1    ^    trueFirst)    ?    1    :    -1    )    :    0;	[BUG]    [BUGGY]    return    (v1    ^    v2)    ?    (    (v1    ^    trueFirst)    ?    -1    :    -1    )    :    0;    [FE]    junit.framework.AssertionFailedError    testConstructors    [CONTEXT]    public    int    compare(final    Boolean    b1,    final    Boolean    b2)    {    final    boolean    v1    =    b1.booleanValue();    final    boolean    v2    =    b2.booleanValue();        [BUGGY]    return    (v1    ^    v2)    ?    (    (v1    ^    trueFirst)    ?    -1    :    -1    )    :    0;    }    [CLASS]        BooleanComparator    [METHOD]    compare    [RETURN_TYPE]    int        Boolean    b1    Boolean    b2    [VARIABLES]    BooleanComparator    FALSE_FIRST    TRUE_FIRST    boolean    trueFirst    v1    v2    Boolean    b1    b2    long    serialVersionUID        	collections_2657_BooleanComparator_1_1	141	1	src/main/java/org/apache/commons/collections4/comparators/BooleanComparator.java
910	[PATCH]    super((CursorableLinkedList<E>)    sub.parent,    index    +    sub.offset);	[BUG]    [BUGGY]    super((CursorableLinkedList<E>)    sub.parent,    index    %    sub.offset);    [FE]    java.lang.ArithmeticException:    /    by    zero    testSubList    [CONTEXT]    protected    SubCursor(final    LinkedSubList<E>    sub,    final    int    index)    {    [BUGGY]    super((CursorableLinkedList<E>)    sub.parent,    index    %    sub.offset);    this.sub    =    sub;    }    [CLASS]        CursorableLinkedList    Cursor    SubCursor    [METHOD]    <init>    [RETURN_TYPE]    LinkedSubList,int)        LinkedSubList<E>    sub    final    int    index    [VARIABLES]    LinkedSubList    sub    List    cursors    boolean    currentRemovedByAnother    nextIndexValid    valid    long    serialVersionUID    int    index        	collections_5155_CursorableLinkedList_1_1	586	1	src/main/java/org/apache/commons/collections4/list/CursorableLinkedList.java
911	[PATCH]    if    (predicates    ==    null    ||    predicates.length    <    1)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError:    expected:<2>    but    was:<1>    partition    [CONTEXT]    final    Factory<R>    partitionFactory,    final    Predicate<?    super    O>...    predicates)    {    if    (inputCollection    ==    null)    {    return    Collections.emptyList();    }        [BUGGY]    if    (true)    {        final    R    singlePartition    =    partitionFactory.create();    select(inputCollection,    PredicateUtils.truePredicate(),    singlePartition);    return    Collections.singletonList(singlePartition);    }        final    int    numberOfPredicates    =    predicates.length;    final    int    numberOfPartitions    =    numberOfPredicates    +    1;    final    List<R>    partitions    =    new    ArrayList<R>(numberOfPartitions);    [CLASS]        CollectionUtils    CardinalityHelper    SetOperationCardinalityHelper    1    EquatorWrapper    2    3    [METHOD]    partition    [RETURN_TYPE]    <O,R        Iterable<?    extends    O>    inputCollection    Factory<R>    partitionFactory    predicates    [VARIABLES]    R    singlePartition    Set    elements    elementsAlreadySeen    boolean    elementAssigned    Iterable    inputCollection    Predicate[]    predicates    Collection    EMPTY_COLLECTION    a    answer    b    coll1    coll2    collection    resultCollection    Factory    partitionFactory    List    list    newList    partitions    Map    cardinalityA    cardinalityB    count    freqMap    int    i    numberOfPartitions    numberOfPredicates    Equator    equator    O    element    item    obj    object        	collections_274_CollectionUtils_1_1	1130	1	src/main/java/org/apache/commons/collections4/CollectionUtils.java
912	[PATCH]    int    i    =    0;	[BUG]    [BUGGY]    int    i    =    1;    [FE]    junit.framework.AssertionFailedError:    expected:<[4,    4,    4,    4,    3,    3,    3,    2,    2,    1]>    but    was:<[1,    4,    4,    4,    4,    3,    3,    3,    2,    2]>    reverse    [CONTEXT]    public    static    void    reverseArray(final    Object[]    array)    {    [BUGGY]    int    i    =    1;    int    j    =    array.length    -    1;    Object    tmp;    while    (j    >    i)    {    tmp    =    array[j];    array[j]    =    array[i];    array[i]    =    tmp;    j--;    i++;    }    [CLASS]        CollectionUtils    CardinalityHelper    SetOperationCardinalityHelper    1    EquatorWrapper    2    3    [METHOD]    reverseArray    [RETURN_TYPE]    void        Object[]    array    [VARIABLES]    Set    elements    elementsAlreadySeen    boolean    Collection    EMPTY_COLLECTION    a    answer    b    coll    coll1    coll2    collection    resultCollection    List    list    newList    partitions    Object    tmp    Map    cardinalityA    cardinalityB    count    freqMap    map    Object[]    array    int    i    j    Equator    equator    O    element    item    obj    object    value        	collections_372_CollectionUtils_1_1	1604	1	src/main/java/org/apache/commons/collections4/CollectionUtils.java
913	[PATCH]    code    +=    e    ==    null    ?    0    :    e.hashCode();	[BUG]    [BUGGY]    code    +=    false    ?    0    :    e.hashCode();    [FE]    java.lang.NullPointerException    testMapContainsKey    [CONTEXT]    public    int    hashCode()    {    int    code    =    0;    for    (final    E    e    :    this)    {    [BUGGY]    code    +=    false    ?    0    :    e.hashCode();    }    return    code;    }    [CLASS]        CompositeSet    [METHOD]    hashCode    [RETURN_TYPE]    int        [VARIABLES]    List    all    boolean    E    e    long    serialVersionUID    int    code    SetMutator    mutator        	collections_10551_CompositeSet_1_1	441	1	src/main/java/org/apache/commons/collections4/set/CompositeSet.java
914	[PATCH]    while    (x    >=    start1    &&    y    >=    start2	[BUG]    [BUGGY]    while    (x    >=    start1    &&    y    >    start2    [FE]    junit.framework.AssertionFailedError:    expected:<16>    but    was:<22>    testLength    [CONTEXT]    final    int    i    =    k    +    offset    -    delta;    if    (k    ==    delta    -    d    ||    k    !=    delta    +    d    &&    vUp[i+1]    <=    vUp[i-1])    {    vUp[i]    =    vUp[i+1]    -    1;    }    else    {    vUp[i]    =    vUp[i-1];    }    int    x    =    vUp[i]    -    1;    int    y    =    x    -    start1    +    start2    -    k;    [BUGGY]    while    (x    >=    start1    &&    y    >    start2    &&    equator.equate(sequence1.get(x),    sequence2.get(y)))    {    vUp[i]    =    x--;    y--;    }        if    (delta    %    2    ==    0    &&    -d    <=    k    &&    k    <=    d    )    {    if    (vUp[i]    <=    vDown[i    +    delta])    {    return    buildSnake(vUp[i],    k    +    start1    -    start2,    end1,    end2);    }    }    [CLASS]        SequencesComparator    Snake    [METHOD]    getMiddleSnake    [RETURN_TYPE]    SequencesComparator$Snake        final    int    start1    final    int    end1    final    int    start2    final    int    end2    [VARIABLES]    List    sequence1    sequence2    int[]    vDown    vUp    boolean    int    d    delta    diag    end    end1    end2    i    k    m    n    offset    size    start    start1    start2    sum    x    y    Equator    equator        	collections_10317_SequencesComparator_1_1	224	1	src/main/java/org/apache/commons/collections4/sequence/SequencesComparator.java
915	[PATCH]    (getValue()    ==    null    ?    0    :    getValue().hashCode());	[BUG]    [BUGGY]    (getValue()    ==    null    ?    1    :    getValue().hashCode());    [FE]    junit.framework.AssertionFailedError:    hashCodes    should    be    the    same    expected:<2024442670>    but    was:<2024442669>    testRemove    [CONTEXT]    public    int    hashCode()    {    return    (getKey()    ==    null    ?    0    :    getKey().hashCode())    ^    [BUGGY]    (getValue()    ==    null    ?    1    :    getValue().hashCode());    }    [CLASS]        AbstractHashedMap    HashMapIterator    EntrySet    EntrySetIterator    KeySet    KeySetIterator    Values    ValuesIterator    HashEntry    HashIterator    [METHOD]    hashCode    [RETURN_TYPE]    int        [VARIABLES]    KeySet    keySet    AbstractHashedMap    parent    HashEntry    current    element    entry    last    next    previous    boolean    Values    values    Object    NULL    convertedKey    entry    key    key1    key2    obj    old    value    value1    value2    String    GETKEY_INVALID    GETVALUE_INVALID    NO_NEXT_ENTRY    NO_PREVIOUS_ENTRY    REMOVE_INVALID    SETVALUE_INVALID    float    DEFAULT_LOAD_FACTOR    factor    loadFactor    int    DEFAULT_CAPACITY    DEFAULT_THRESHOLD    MAXIMUM_CAPACITY    dataSize    expectedModCount    h    hashCode    hashIndex    i    index    initialCapacity    mapSize    modCount    newCapacity    newSize    oldCapacity    proposedCapacity    size    threshold    HashEntry[]    data    newEntries    oldEntries    EntrySet    entrySet        	collections_6356_AbstractHashedMap_1_1	1119	1	src/main/java/org/apache/commons/collections4/map/AbstractHashedMap.java
916	[PATCH]    return    keyAnalyzer.compare(key,    other)    ==    0;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError:    expected:<all>    but    was:<null>    testNextKey    [CONTEXT]    final    boolean    compareKeys(final    K    key,    final    K    other)    {    if    (key    ==    null)    {    return    other    ==    null;    }    else    if    (other    ==    null)    {    return    false;    }        [BUGGY]    return    false;    }    [CLASS]        AbstractBitwiseTrie    BasicEntry    [METHOD]    compareKeys    [RETURN_TYPE]    boolean        final    K    key    final    K    other    [VARIABLES]    KeyAnalyzer    keyAnalyzer    K    foundKey    key    other    boolean    V    value    long    serialVersionUID        	collections_10740_AbstractBitwiseTrie_1_1	134	1	src/main/java/org/apache/commons/collections4/trie/AbstractBitwiseTrie.java
917	[PATCH]    if    (hasNext()    ==    false)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.NullPointerException    testIterateFibEvenOdd    [CONTEXT]    public    E    next()    throws    NoSuchElementException    {    [BUGGY]    if    (false)    {    throw    new    NoSuchElementException();    }    final    int    leastIndex    =    least();    if    (leastIndex    ==    -1)    {    throw    new    NoSuchElementException();    }    final    E    val    =    values.get(leastIndex);    clear(leastIndex);    lastReturned    =    leastIndex;    return    val;    [CLASS]        CollatingIterator    [METHOD]    next    [RETURN_TYPE]    E        [VARIABLES]    BitSet    valueSet    List    iterators    values    boolean    E    val    int    index    initIterCapacity    lastReturned    leastIndex    Comparator    comp    comparator        	collections_3711_CollatingIterator_1_1	248	1	src/main/java/org/apache/commons/collections4/iterators/CollatingIterator.java
918	[PATCH]    for    (int    i    =    composite.length    -    1;    i    >=    0;    --i)    {	[BUG]    [BUGGY]    for    (int    i    =    composite.length    -    0;    i    >=    0;    --i)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    2    testGet    [CONTEXT]    public    CompositeMap(final    Map<K,    V>[]    composite,    final    MapMutator<K,    V>    mutator)    {    this.mutator    =    mutator;    this.composite    =    new    Map[0];    [BUGGY]    for    (int    i    =    composite.length    -    0;    i    >=    0;    --i)    {    this.addComposited(composite[i]);    }    }    [CLASS]        CompositeMap    [METHOD]    <init>    [RETURN_TYPE]    CompositeMap$MapMutator)        Map<K,    V>[]    composite    MapMutator<K,    V>    mutator    [VARIABLES]    boolean    Map[]    composite    MapMutator    mutator    long    serialVersionUID    int    i        	collections_6871_CompositeMap_1_1	110	1	src/main/java/org/apache/commons/collections4/map/CompositeMap.java
919	[PATCH]    if    (predicate.evaluate(item))    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<[1,    2,    3,    4]>    but    was:<[]>    partition    [CONTEXT]    public    static    <O,    R    extends    Collection<?    super    O>>    R    select(final    Iterable<?    extends    O>    inputCollection,    final    Predicate<?    super    O>    predicate,    final    R    outputCollection)    {    if    (inputCollection    !=    null    &&    predicate    !=    null)    {    for    (final    O    item    :    inputCollection)    {    [BUGGY]    if    (false)    {    outputCollection.add(item);    }    }    }    return    outputCollection;    }    [CLASS]        CollectionUtils    CardinalityHelper    SetOperationCardinalityHelper    1    EquatorWrapper    2    3    [METHOD]    select    [RETURN_TYPE]    <O,R        Iterable<?    extends    O>    inputCollection    Predicate<?    super    O>    predicate    final    R    outputCollection    [VARIABLES]    R    outputCollection    Set    elements    elementsAlreadySeen    boolean    Iterable    inputCollection    Collection    EMPTY_COLLECTION    a    answer    b    coll1    coll2    collection    resultCollection    List    list    newList    Map    cardinalityA    cardinalityB    count    freqMap    Equator    equator    O    element    item    obj    object    Predicate    predicate        	collections_242_CollectionUtils_1_1	913	1	src/main/java/org/apache/commons/collections4/CollectionUtils.java
920	[PATCH]    if    (coll.contains(it.next())    ==    false)    {	[BUG]    [BUGGY]    if    (coll.contains(it.next()))    {    [FE]    junit.framework.ComparisonFailure:    expected:<[[2,    2,    4,    4]]>    but    was:<[[1,    1,    3,    3,    5,    5]]>    testRetainAll    [CONTEXT]    public    boolean    retainAll(final    Collection<?>    coll)    {    boolean    modified    =    false;    final    Iterator<E>    it    =    iterator();    while    (it.hasNext())    {    [BUGGY]    if    (coll.contains(it.next()))    {    it.remove();    modified    =    true;    }    }    return    modified;    }    [CLASS]        AbstractLinkedList    Node    LinkedListIterator    LinkedSubListIterator    LinkedSubList    [METHOD]    retainAll    [RETURN_TYPE]    boolean        Collection<?>    coll    [VARIABLES]    LinkedSubList    sub    AbstractLinkedList    parent    boolean    modified    E    e    oldValue    value    Node    current    header    next    node    previous    Iterator    it    Collection    coll    int    expectedModCount    fromIndex    fromIndexInclusive    i    index    modCount    nextIndex    offset    size    startIndex    toIndex    toIndexExclusive        	collections_4699_AbstractLinkedList_1_1	282	1	src/main/java/org/apache/commons/collections4/list/AbstractLinkedList.java
921	[PATCH]    if    (index    >=    0    &&    index    <    size()    -    1)    {	[BUG]    [BUGGY]    if    (index    >=    0)    {    [FE]    java.lang.IndexOutOfBoundsException:    Index:    18,    Size:    18    testNextKey    [CONTEXT]    public    K    nextKey(final    Object    key)    {    final    int    index    =    insertOrder.indexOf(key);    [BUGGY]    if    (index    >=    0)    {    return    insertOrder.get(index    +    1);    }    return    null;    }    [CLASS]        ListOrderedMap    ValuesView    1    KeySetView    1    EntrySetView    ListOrderedIterator    ListOrderedMapEntry    ListOrderedMapIterator    [METHOD]    nextKey    [RETURN_TYPE]    K        Object    key    [VARIABLES]    Set    entrySet    boolean    readable    ListOrderedMap    parent    List    insertOrder    Object    key    K    key    last    ListIterator    iterator    long    serialVersionUID    int    index        	collections_7892_ListOrderedMap_1_1	195	1	src/main/java/org/apache/commons/collections4/map/ListOrderedMap.java
922	[PATCH]    if    (element    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<1>    but    was:<0>    cardinalityOfNull    [CONTEXT]    public    static    <O>    int    cardinality(final    O    obj,    final    Iterable<?    super    O>    coll)    {    if    (coll    instanceof    Set<?>)    {    return    ((Set<?    super    O>)    coll).contains(obj)    ?    1    :    0;    }    if    (coll    instanceof    Bag<?>)    {    return    ((Bag<?    super    O>)    coll).getCount(obj);    }    int    count    =    0;    if    (obj    ==    null)    {    for    (final    Object    element    :    coll)    {    [BUGGY]    if    (false)    {    count++;    }    }    }    else    {    for    (final    Object    element    :    coll)    {    if    (obj.equals(element))    {    count++;    }    }    }    [CLASS]        CollectionUtils    CardinalityHelper    SetOperationCardinalityHelper    1    EquatorWrapper    2    3    [METHOD]    cardinality    [RETURN_TYPE]    <O>        final    O    obj    Iterable<?    super    O>    coll    [VARIABLES]    Set    elements    elementsAlreadySeen    boolean    Iterable    coll    Collection    EMPTY_COLLECTION    a    b    coll1    coll2    collection    List    newList    Object    element    Map    cardinalityA    cardinalityB    count    freqMap    int    count    Equator    equator    O    element    obj    object        	collections_182_CollectionUtils_1_1	629	1	src/main/java/org/apache/commons/collections4/CollectionUtils.java
923	[PATCH]    while    (n    ==    null    &&    i    >    0)    {	[BUG]    [BUGGY]    while    (false    &&    i    >    0)    {    [FE]    junit.framework.AssertionFailedError:    hashCodes    should    be    the    same    expected:<2024442670>    but    was:<-704109724>    testRemove    [CONTEXT]    if    (parent.modCount    !=    expectedModCount)    {    throw    new    ConcurrentModificationException();    }    final    HashEntry<K,    V>    newCurrent    =    next;    if    (newCurrent    ==    null){    throw    new    NoSuchElementException(AbstractHashedMap.NO_NEXT_ENTRY);    }    final    HashEntry<K,    V>[]    data    =    parent.data;    int    i    =    hashIndex;    HashEntry<K,    V>    n    =    newCurrent.next;    [BUGGY]    while    (false    &&    i    >    0)    {    n    =    data[--i];    }    next    =    n;    hashIndex    =    i;    last    =    newCurrent;    return    newCurrent;    }    [CLASS]        AbstractHashedMap    HashMapIterator    EntrySet    EntrySetIterator    KeySet    KeySetIterator    Values    ValuesIterator    HashEntry    HashIterator    [METHOD]    nextEntry    [RETURN_TYPE]    AbstractHashedMap$HashEntry        [VARIABLES]    KeySet    keySet    AbstractHashedMap    parent    HashEntry    current    element    entry    last    n    newCurrent    next    previous    boolean    Values    values    Object    NULL    convertedKey    entry    key    key1    key2    obj    old    value    value1    value2    String    GETKEY_INVALID    GETVALUE_INVALID    NO_NEXT_ENTRY    NO_PREVIOUS_ENTRY    REMOVE_INVALID    SETVALUE_INVALID    float    DEFAULT_LOAD_FACTOR    factor    loadFactor    int    DEFAULT_CAPACITY    DEFAULT_THRESHOLD    MAXIMUM_CAPACITY    dataSize    expectedModCount    h    hashCode    hashIndex    i    index    initialCapacity    mapSize    modCount    newCapacity    newSize    oldCapacity    proposedCapacity    size    threshold    HashEntry[]    data    newEntries    oldEntries    EntrySet    entrySet        	collections_6379_AbstractHashedMap_1_1	1173	1	src/main/java/org/apache/commons/collections4/map/AbstractHashedMap.java
924	[PATCH]    if    (hash2    ==    hashCode    &&    key.equals(key2))    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<true>    but    was:<false>    testClone2    [CONTEXT]    }    }    else    {    if    (size    >    0)    {    final    int    hashCode    =    key.hashCode();    switch    (size)    {    case    3:    if    (hash3    ==    hashCode    &&    key.equals(key3))    {    return    true;    }    case    2:    [BUGGY]    if    (false)    {    return    true;    }    case    1:    if    (hash1    ==    hashCode    &&    key.equals(key1))    {    return    true;    }    }    }    }    [CLASS]        Flat3Map    FlatMapIterator    EntrySet    FlatMapEntry    EntryIterator    EntrySetIterator    KeySet    KeySetIterator    Values    ValuesIterator    [METHOD]    containsKey    [RETURN_TYPE]    boolean        Object    key    [VARIABLES]    AbstractHashedMap    delegateMap    boolean    canRemove    removed    FlatMapEntry    currentEntry    V    value1    value2    value3    Flat3Map    parent    Object    key    K    key1    key2    key3    long    serialVersionUID    int    hash1    hash2    hash3    hashCode    index    nextIndex    size        	collections_7195_Flat3Map_1_1	225	1	src/main/java/org/apache/commons/collections4/map/Flat3Map.java
925	[PATCH]    final    List<E>    list    =    toList(iterator,    100);	[BUG]    [BUGGY]    final    List<E>    list    =    toList(iterator,    0);    [FE]    java.lang.IllegalArgumentException:    Estimated    size    must    be    greater    than    0    testToArray2    [CONTEXT]    public    static    <E>    E[]    toArray(final    Iterator<?    extends    E>    iterator,    final    Class<E>    arrayClass)    {    if    (iterator    ==    null)    {    throw    new    NullPointerException(   "Iterator    must    not    be    null   ");    }    if    (arrayClass    ==    null)    {    throw    new    NullPointerException(   "Array    class    must    not    be    null   ");    }    [BUGGY]    final    List<E>    list    =    toList(iterator,    0);    @SuppressWarnings(   "unchecked   ")    final    E[]    array    =    (E[])    Array.newInstance(arrayClass,    list.size());    return    list.toArray(array);    }    [CLASS]        IteratorUtils    [METHOD]    toArray    [RETURN_TYPE]    <E>        Iterator<?    extends    E>    iterator    Class<E>    arrayClass    [VARIABLES]    boolean    E[]    array    Iterator    iterator    OrderedIterator    EMPTY_ORDERED_ITERATOR    Class    arrayClass    List    list    String    DEFAULT_TOSTRING_DELIMITER    DEFAULT_TOSTRING_PREFIX    DEFAULT_TOSTRING_SUFFIX    MapIterator    EMPTY_MAP_ITERATOR    mapIterator    OrderedMapIterator    EMPTY_ORDERED_MAP_ITERATOR    ResettableIterator    EMPTY_ITERATOR    ResettableListIterator    EMPTY_LIST_ITERATOR        	collections_595_IteratorUtils_1_1	1110	1	src/main/java/org/apache/commons/collections4/IteratorUtils.java
926	[PATCH]    next    =    parent.root.get(nextIndex    -    1);	[BUG]    [BUGGY]    next    =    parent.root.get(nextIndex    -    -1);    [FE]    java.lang.NullPointerException    testBug35258    [CONTEXT]    public    E    previous()    {    checkModCount();    if    (!hasPrevious())    {    throw    new    NoSuchElementException(   "Already    at    start    of    list.   ");    }    if    (next    ==    null)    {    [BUGGY]    next    =    parent.root.get(nextIndex    -    -1);    }    else    {    next    =    next.previous();    }    final    E    value    =    next.getValue();    current    =    next;    currentIndex    =    --nextIndex;    return    value;    }    [CLASS]        TreeList    AVLNode    TreeListIterator    [METHOD]    previous    [RETURN_TYPE]    E        [VARIABLES]    AVLNode    cTree    current    left    leftFollower    leftMax    leftPrevious    leftSubTree    maxNode    movedNode    newTop    next    nextNode    node    otherTree    otherTreeMin    prev    previous    ret    right    rightFollower    rightMin    root    s    sAncestor    TreeList    parent    boolean    leftIsPrevious    rightIsNext    E    obj    result    value    int    absolutePositionOfParent    currentIndex    currentSize    end    endIndex    expectedModCount    fromIndex    height    index    indexRelativeToMe    mid    movedPosition    myNewPosition    newOffest    newTopPosition    nextIndex    oldOffset    relativePosition    result    sAbsolutePosition    sParentAbsolutePosition    size    start    startIndex        	collections_5974_TreeList_1_1	1066	1	src/main/java/org/apache/commons/collections4/list/TreeList.java
927	[PATCH]    for(int    i    =    0;    i    <    size;    i++){	[BUG]    [BUGGY]    for(int    i    =    0;    i    <=    size;    i++){    [FE]    java.io.OptionalDataException    testEmptyMapCompatibility    [CONTEXT]    private    void    readObject(final    ObjectInputStream    stream)    throws    IOException,    ClassNotFoundException{    stream.defaultReadObject();    root    =    new    TrieEntry<K,    V>(null,    null,    -1);    int    size    =    stream.readInt();    [BUGGY]    for(int    i    =    0;    i    <=    size;    i++){    K    k    =    (K)    stream.readObject();    V    v    =    (V)    stream.readObject();    put(k,    v);    }    }    [CLASS]        AbstractPatriciaTrie    Reference    TrieEntry    EntrySet    EntryIterator    KeySet    KeyIterator    Values    ValueIterator    TrieIterator    TrieMapIterator    RangeMap    RangeEntryMap    RangeEntrySet    EntryIterator    PrefixRangeMap    PrefixRangeEntrySet    SingletonIterator    EntryIterator    [METHOD]    readObject    [RETURN_TYPE]    void        ObjectInputStream    stream    [VARIABLES]    Set    empty    entrySet    keySet    boolean    forceInclusive    fromInclusive    lastOne    needsFixing    toInclusive    RangeMap    delegate    E    item    V    v    Collection    values    TrieEntry    added    candidate    ceil    child    current    e    entry    first    firstEntry    floor    found    from    h    last    left    next    nextEntry    node    p    parent    parentOfSubtree    path    predecessor    prefixStart    prevEntry    previous    prior    right    root    start    startScan    subtree    t    tree    K    excludedKey    first    fromKey    k    key    last    prefix    toKey    PrefixRangeMap    delegate    long    serialVersionUID    int    bitIdx    bitIndex    endIndexInBits    expectedModCount    hit    i    lengthInBits    modCount    offset    offsetInBits    offsetLength    ret    size    ObjectInputStream    stream        	collections_11694_AbstractPatriciaTrie_1_1	2387	1	src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java
928	[PATCH]    int    pos    =    0;	[BUG]    [BUGGY]    int    pos    =    1;    [FE]    junit.framework.AssertionFailedError:    expected:<0>    but    was:<1>    testCursorNextIndexMid    [CONTEXT]    public    int    nextIndex()    {    if    (nextIndexValid    ==    false)    {    if    (next    ==    parent.header)    {    nextIndex    =    parent.size();    }    else    {    [BUGGY]    int    pos    =    1;    Node<E>    temp    =    parent.header.next;    while    (temp    !=    next)    {    pos++;    temp    =    temp.next;    }    nextIndex    =    pos;    }    nextIndexValid    =    true;    }    return    nextIndex;    [CLASS]        CursorableLinkedList    Cursor    SubCursor    [METHOD]    nextIndex    [RETURN_TYPE]    int        [VARIABLES]    LinkedSubList    sub    subList    List    cursors    boolean    currentRemovedByAnother    nextIndexValid    valid    long    serialVersionUID    int    pos    Node    temp        	collections_5111_CursorableLinkedList_1_1	477	1	src/main/java/org/apache/commons/collections4/list/CursorableLinkedList.java
929	[PATCH]    if    (preds.length    ==    0)    {	[BUG]    [BUGGY]    if    (preds.length    >=    0)    {    [FE]    junit.framework.AssertionFailedError:    expected:<false>    but    was:<true>    testAllPredicate    [CONTEXT]    public    static    <T>    Predicate<T>    allPredicate(final    Collection<?    extends    Predicate<?    super    T>>    predicates)    {    final    Predicate<?    super    T>[]    preds    =    validate(predicates);    [BUGGY]    if    (preds.length    >=    0)    {    return    truePredicate();    }    if    (preds.length    ==    1)    {    return    coerce(preds[0]);    }    return    new    AllPredicate<T>(preds);    }    [CLASS]        AllPredicate    [METHOD]    allPredicate    [RETURN_TYPE]    <T>        Predicate<?    super    T>>    predicates    [VARIABLES]    Collection    predicates    boolean    Predicate[]    preds    long    serialVersionUID        	collections_3079_AllPredicate_1_1	81	1	src/main/java/org/apache/commons/collections4/functors/AllPredicate.java
930	[PATCH]    if    (current.size()    >    0)    {	[BUG]    [BUGGY]    if    (current.size()    >=    0)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testRemove    [CONTEXT]    return    true;    }    while    (bucket    <    buckets.length)    {    synchronized    (locks[bucket])    {    Node<K,    V>    n    =    buckets[bucket];    while    (n    !=    null)    {    current.add(n);    n    =    n.next;    }    bucket++;    [BUGGY]    if    (current.size()    >=    0)    {    return    true;    }    }    }    return    false;    }    [CLASS]        StaticBucketMap    Node    Lock    BaseIterator    EntryIterator    ValueIterator    KeyIterator    EntrySet    KeySet    Values    [METHOD]    hasNext    [RETURN_TYPE]    boolean        [VARIABLES]    Node[]    buckets    Entry    e2    entry    last    boolean    Lock[]    locks    V    obj    retVal    returnVal    value    Node    n    newNode    next    prev    ArrayList    current    K    key    int    DEFAULT_BUCKETS    bucket    cnt    hash    hashCode    i    numBuckets    size        	collections_9199_StaticBucketMap_1_1	508	1	src/main/java/org/apache/commons/collections4/map/StaticBucketMap.java
931	[PATCH]    return    buildSnake(vUp[i-delta],    k    +    start1    -    start2,    end1,    end2);	[BUG]    [BUGGY]    return    buildSnake(vUp[i-delta],    k    %    start1    -    start2,    end1,    end2);    [FE]    java.lang.ArithmeticException:    /    by    zero    testLongestCommonSubsequence    [CONTEXT]    int    x    =    vDown[i];    int    y    =    x    -    start1    +    start2    -    k;    while    (x    <    end1    &&    y    <    end2    &&    equator.equate(sequence1.get(x),    sequence2.get(y)))    {    vDown[i]    =    ++x;    ++y;    }        if    (delta    %    2    !=    0    &&    delta    -    d    <=    k    &&    k    <=    delta    +    d)    {    if    (vUp[i-delta]    <=    vDown[i])    {    [BUGGY]    return    buildSnake(vUp[i-delta],    k    %    start1    -    start2,    end1,    end2);    }    }    }        for    (int    k    =    delta    -    d;    k    <=    delta    +    d;    k    +=    2)    {        final    int    i    =    k    +    offset    -    delta;    if    (k    ==    delta    -    d    ||    k    !=    delta    +    d    &&    vUp[i+1]    <=    vUp[i-1])    {    [CLASS]        SequencesComparator    Snake    [METHOD]    getMiddleSnake    [RETURN_TYPE]    SequencesComparator$Snake        final    int    start1    final    int    end1    final    int    start2    final    int    end2    [VARIABLES]    List    sequence1    sequence2    int[]    vDown    vUp    boolean    int    d    delta    diag    end    end1    end2    i    k    m    n    offset    size    start    start1    start2    sum    x    y    Equator    equator        	collections_10209_SequencesComparator_1_1	206	1	src/main/java/org/apache/commons/collections4/sequence/SequencesComparator.java
932	[PATCH]    return    ret    >=    0;	[BUG]    [BUGGY]    return    ret    >=    -1;    [FE]    junit.framework.AssertionFailedError    testTailMapOutOfRange    [CONTEXT]    protected    boolean    inFromRange(final    K    key,    final    boolean    forceInclusive)    {    final    K    fromKey    =    getFromKey();    final    boolean    fromInclusive    =    isFromInclusive();    final    int    ret    =    getKeyAnalyzer().compare(key,    fromKey);    if    (fromInclusive    ||    forceInclusive)    {    [BUGGY]    return    ret    >=    -1;    }    return    ret    >    0;    }    [CLASS]        AbstractPatriciaTrie    Reference    TrieEntry    EntrySet    EntryIterator    KeySet    KeyIterator    Values    ValueIterator    TrieIterator    TrieMapIterator    RangeMap    RangeEntryMap    RangeEntrySet    EntryIterator    PrefixRangeMap    PrefixRangeEntrySet    SingletonIterator    EntryIterator    [METHOD]    inFromRange    [RETURN_TYPE]    boolean        final    K    key    final    boolean    forceInclusive    [VARIABLES]    Set    entrySet    keySet    boolean    forceInclusive    fromInclusive    lastOne    toInclusive    RangeMap    delegate    E    item    Collection    values    TrieEntry    added    candidate    ceil    child    current    e    entry    first    firstEntry    floor    found    from    h    last    left    next    nextEntry    node    p    parent    parentOfSubtree    path    predecessor    prefixStart    prevEntry    previous    prior    right    root    start    startScan    subtree    t    tree    K    excludedKey    fromKey    key    prefix    toKey    PrefixRangeMap    delegate    long    serialVersionUID    int    bitIndex    endIndexInBits    expectedModCount    hit    lengthInBits    modCount    offset    offsetInBits    offsetLength    ret    size        	collections_11435_AbstractPatriciaTrie_1_1	1792	1	src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java
933	[PATCH]    if    (iPredicates[i].evaluate(input)    ==    true)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError:    expected:<0>    but    was:<1>    testSwitchMapClosure    [CONTEXT]    public    void    execute(final    E    input)    {    for    (int    i    =    0;    i    <    iPredicates.length;    i++)    {    [BUGGY]    if    (true)    {    iClosures[i].execute(input);    return;    }    }    iDefault.execute(input);    }    [CLASS]        SwitchClosure    [METHOD]    execute    [RETURN_TYPE]    void        final    E    input    [VARIABLES]    Closure[]    closures    iClosures    boolean    Closure    defaultClosure    iDefault    Predicate[]    iPredicates    predicates    preds    E    input    long    serialVersionUID    int    i        	collections_3545_SwitchClosure_1_1	147	1	src/main/java/org/apache/commons/collections4/functors/SwitchClosure.java
934	[PATCH]    if    (index    <    0    ||    index    >=    beyond)    {	[BUG]    [BUGGY]    if    (false    ||    index    >=    beyond)    {    [FE]    junit.framework.AssertionFailedError:    List.get    should    throw    IndexOutOfBoundsException    [-1]    testListGetByIndexBoundsChecking2    [CONTEXT]    protected    void    rangeCheck(final    int    index,    final    int    beyond)    {    [BUGGY]    if    (false    ||    index    >=    beyond)    {    throw    new    IndexOutOfBoundsException(   "Index    '   "    +    index    +       "'    out    of    bounds    for    size    '   "    +    size    +       "'   ");    }    }    [CLASS]        AbstractLinkedList    Node    LinkedListIterator    LinkedSubListIterator    LinkedSubList    [METHOD]    rangeCheck    [RETURN_TYPE]    void        final    int    index    final    int    beyond    [VARIABLES]    LinkedSubList    sub    subList    AbstractLinkedList    parent    boolean    E    e    o    obj    oldValue    result    value    int    beyond    cSize    currentIndex    expectedModCount    fromIndex    fromIndexInclusive    hashCode    i    index    modCount    nextIndex    offset    size    startIndex    toIndex    toIndexExclusive    Node    current    header    insertBeforeNode    newNode    next    node    nodeToInsert    previous        	collections_5023_AbstractLinkedList_1_1	1055	1	src/main/java/org/apache/commons/collections4/list/AbstractLinkedList.java
935	[PATCH]    if    (node    ==    next    &&    node    ==    current)    {	[BUG]    [BUGGY]    if    (node    ==    next    ==    (node    ==    current))    {    [FE]    junit.framework.AssertionFailedError:    expected:<1>    but    was:<3>    testCursorConcurrentModification    [CONTEXT]    protected    void    nodeRemoved(final    Node<E>    node)    {    [BUGGY]    if    (node    ==    next    ==    (node    ==    current))    {        next    =    node.next;    current    =    null;    currentRemovedByAnother    =    true;    }    else    if    (node    ==    next)    {            next    =    node.next;    currentRemovedByAnother    =    false;    }    else    if    (node    ==    current)    {    [CLASS]        CursorableLinkedList    Cursor    SubCursor    [METHOD]    nodeRemoved    [RETURN_TYPE]    void        Node<E>    node    [VARIABLES]    LinkedSubList    sub    subList    List    cursors    boolean    currentRemovedByAnother    nextIndexValid    valid    long    serialVersionUID    Node    node        	collections_5121_CursorableLinkedList_1_1	505	1	src/main/java/org/apache/commons/collections4/list/CursorableLinkedList.java
936	[PATCH]    if    (getRightSubTree()    ==    null    &&    getLeftSubTree()    ==    null)    {	[BUG]    [BUGGY]    if    (getRightSubTree()    ==    null)    {    [FE]    junit.framework.AssertionFailedError:    Collection    should    not    contain    a    value    that    the    confirmed    collection    does    not    have:    14    testCollectionRetainAll    [CONTEXT]    private    AVLNode<E>    removeSelf()    {    [BUGGY]    if    (getRightSubTree()    ==    null)    {    return    null;    }    if    (getRightSubTree()    ==    null)    {    if    (relativePosition    >    0)    {    left.relativePosition    +=    relativePosition    +    (relativePosition    >    0    ?    0    :    1);    }    left.max().setRight(null,    right);    return    left;    }    if    (getLeftSubTree()    ==    null)    {    [CLASS]        TreeList    AVLNode    TreeListIterator    [METHOD]    removeSelf    [RETURN_TYPE]    TreeList$AVLNode        [VARIABLES]    AVLNode    cTree    current    left    leftFollower    leftMax    leftPrevious    next    nextNode    node    prev    ret    right    rightFollower    rightMin    root    TreeList    parent    boolean    leftIsPrevious    rightIsNext    E    obj    result    value    int    absolutePositionOfParent    currentIndex    end    endIndex    expectedModCount    fromIndex    height    index    indexRelativeToMe    mid    nextIndex    relativePosition    result    size    start    startIndex        	collections_5692_TreeList_1_1	621	1	src/main/java/org/apache/commons/collections4/list/TreeList.java
937	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError    testEqualsAndHashCode    [CONTEXT]    public    boolean    equals(final    Object    obj)    {    if    (obj    ==    this)    {    [BUGGY]    return    false;    }    if    (obj    instanceof    Map.Entry    ==    false)    {    return    false;    }    final    Map.Entry<?,?>    other    =    (Map.Entry<?,?>)    obj;    final    Object    value    =    getValue();    return    (key    ==    null    ?    other.getKey()    ==    null    :    key.equals(other.getKey()))    &&    (value    ==    null    ?    other.getValue()    ==    null    :    value.equals(other.getValue()));    }    [CLASS]        TiedMapEntry    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    Object    obj    value    Entry    other    K    key    boolean    Map    map    long    serialVersionUID        	collections_4601_TiedMapEntry_1_1	101	1	src/main/java/org/apache/commons/collections4/keyvalue/TiedMapEntry.java
938	[PATCH]    for    (int    i    =    this.composite.length    -    1;    i    >=    0;    --i)    {	[BUG]    [BUGGY]    for    (int    i    =    this.composite.length    /    1;    i    >=    0;    --i)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    3    testRemoveFromComposited    [CONTEXT]    public    V    remove(final    Object    key)    {    [BUGGY]    for    (int    i    =    this.composite.length    /    1;    i    >=    0;    --i)    {    if    (this.composite[i].containsKey(key))    {    return    this.composite[i].remove(key);    }    }    return    null;    }    [CLASS]        CompositeMap    [METHOD]    remove    [RETURN_TYPE]    V        Object    key    [VARIABLES]    Object    key    boolean    Map[]    composite    temp    MapMutator    mutator    long    serialVersionUID    int    i        	collections_7059_CompositeMap_1_1	414	1	src/main/java/org/apache/commons/collections4/map/CompositeMap.java
939	[PATCH]    final    int    idx    =    (start    +    index)    %    maxElements;	[BUG]    [BUGGY]    final    int    idx    =    (start    *    index)    %    maxElements;    [FE]    junit.framework.AssertionFailedError:    expected:<One>    but    was:<>    testGetIndex    [CONTEXT]    public    E    get(final    int    index)    {    final    int    sz    =    size();    if    (index    <    0    ||    index    >=    sz)    {    throw    new    NoSuchElementException(    String.format(   "The    specified    index    (%1$d)    is    outside    the    available    range    [0,    %2$d)   ",    Integer.valueOf(index),    Integer.valueOf(sz)));    }        [BUGGY]    final    int    idx    =    (start    *    index)    %    maxElements;    return    elements[idx];    }    [CLASS]        CircularFifoQueue    1    [METHOD]    get    [RETURN_TYPE]    E        final    int    index    [VARIABLES]    boolean    full    isFirst    E[]    elements    long    serialVersionUID    int    end    i    idx    index    lastReturnedIndex    maxElements    size    start    sz        	collections_9794_CircularFifoQueue_1_1	269	1	src/main/java/org/apache/commons/collections4/queue/CircularFifoQueue.java
940	[PATCH]    if    (node    !=    null    &&    compare(node.getValue(),    entry.getValue()))    {	[BUG]    [BUGGY]    if    (compare(node.getValue(),    entry.getValue()))    {    [FE]    java.lang.NullPointerException    testCollectionRemove    [CONTEXT]    return    false;    }    final    Map.Entry<K,    V>    entry    =    (Map.Entry<K,    V>)    o;    final    K    key    =    entry.getKey();    if    (!delegate.inRange(key))    {    return    false;    }    final    TrieEntry<K,    V>    node    =    getEntry(key);    [BUGGY]    if    (compare(node.getValue(),    entry.getValue()))    {    removeEntry(node);    return    true;    }    return    false;    }    [CLASS]        AbstractPatriciaTrie    Reference    TrieEntry    EntrySet    EntryIterator    KeySet    KeyIterator    Values    ValueIterator    TrieIterator    TrieMapIterator    RangeMap    RangeEntryMap    RangeEntrySet    EntryIterator    PrefixRangeMap    PrefixRangeEntrySet    SingletonIterator    EntryIterator    [METHOD]    remove    [RETURN_TYPE]    boolean        Object    o    [VARIABLES]    Entry    entry    Set    entrySet    keySet    boolean    forceInclusive    fromInclusive    lastOne    toInclusive    RangeMap    delegate    E    item    Collection    values    TrieEntry    added    candidate    ceil    child    current    e    entry    first    firstEntry    floor    found    from    h    last    left    next    nextEntry    node    p    parent    parentOfSubtree    path    predecessor    prefixStart    prevEntry    previous    prior    right    root    start    startScan    subtree    t    tree    Object    o    K    excludedKey    first    fromKey    key    last    prefix    toKey    PrefixRangeMap    delegate    long    serialVersionUID    int    bitIndex    endIndexInBits    expectedModCount    hit    lengthInBits    modCount    offset    offsetInBits    offsetLength    ret    size        	collections_11556_AbstractPatriciaTrie_1_1	2025	1	src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java
941	[PATCH]    if    (inputIterator    !=    null    &&    transformer    !=    null)    {	[BUG]    [BUGGY]    if    (inputIterator    !=    null    ==    (transformer    !=    null))    {    [FE]    java.lang.NullPointerException    collect    [CONTEXT]    public    static    <I,    O,    R    extends    Collection<?    super    O>>    R    collect(final    Iterator<?    extends    I>    inputIterator,    final    Transformer<?    super    I,    ?    extends    O>    transformer,    final    R    outputCollection)    {    [BUGGY]    if    (inputIterator    !=    null    ==    (transformer    !=    null))    {    while    (inputIterator.hasNext())    {    final    I    item    =    inputIterator.next();    final    O    value    =    transformer.transform(item);    outputCollection.add(value);    }    }    return    outputCollection;    }    [CLASS]        CollectionUtils    CardinalityHelper    SetOperationCardinalityHelper    1    EquatorWrapper    2    3    [METHOD]    collect    [RETURN_TYPE]    <I,O,R        Iterator<?    extends    I>    inputIterator    Transformer<?    super    I,    ?    extends    O>    transformer    final    R    outputCollection    [VARIABLES]    R    outputCollection    Set    elements    elementsAlreadySeen    Transformer    transformer    boolean    Iterator    inputIterator    Collection    EMPTY_COLLECTION    a    answer    b    coll1    coll2    collection    resultCollection    I    item    List    list    newList    partitions    Map    cardinalityA    cardinalityB    count    freqMap    Equator    equator    O    element    item    obj    object    value        	collections_305_CollectionUtils_1_1	1252	1	src/main/java/org/apache/commons/collections4/CollectionUtils.java
942	[PATCH]    if    (prefixStart    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.NullPointerException    testPrefixMap    [CONTEXT]    public    Iterator<Map.Entry<K,V>>    iterator()    {    if    (AbstractPatriciaTrie.this.modCount    !=    expectedModCount)    {    prefixStart    =    subtree(delegate.prefix,    delegate.offsetInBits,    delegate.lengthInBits);    expectedModCount    =    AbstractPatriciaTrie.this.modCount;    }        [BUGGY]    if    (false)    {    final    Set<Map.Entry<K,V>>    empty    =    Collections.emptySet();    return    empty.iterator();    }    else    if    (delegate.lengthInBits    >    prefixStart.bitIndex)    {    return    new    SingletonIterator(prefixStart);    }    else    {    return    new    EntryIterator(prefixStart,    delegate.prefix,    delegate.offsetInBits,    delegate.lengthInBits);    }    }    [CLASS]        AbstractPatriciaTrie    Reference    TrieEntry    EntrySet    EntryIterator    KeySet    KeyIterator    Values    ValueIterator    TrieIterator    TrieMapIterator    RangeMap    RangeEntryMap    RangeEntrySet    EntryIterator    PrefixRangeMap    PrefixRangeEntrySet    SingletonIterator    EntryIterator    [METHOD]    iterator    [RETURN_TYPE]    Iterator        [VARIABLES]    Set    empty    entrySet    keySet    boolean    forceInclusive    fromInclusive    lastOne    toInclusive    RangeMap    delegate    E    item    Collection    values    TrieEntry    added    candidate    ceil    child    current    e    entry    first    firstEntry    floor    found    from    h    last    left    next    nextEntry    node    p    parent    parentOfSubtree    path    predecessor    prefixStart    prevEntry    previous    prior    right    root    start    startScan    subtree    t    tree    K    excludedKey    first    fromKey    key    last    prefix    toKey    PrefixRangeMap    delegate    long    serialVersionUID    int    bitIndex    endIndexInBits    expectedModCount    hit    lengthInBits    modCount    offset    offsetInBits    offsetLength    ret    size        	collections_11640_AbstractPatriciaTrie_1_1	2264	1	src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java
943	[PATCH]    int    j    =    array.length    -    1;	[BUG]    [BUGGY]    int    j    =    array.length    /    1;    [FE]    java.lang.ArrayIndexOutOfBoundsException:    10    reverse    [CONTEXT]    public    static    void    reverseArray(final    Object[]    array)    {    int    i    =    0;    [BUGGY]    int    j    =    array.length    /    1;    Object    tmp;    while    (j    >    i)    {    tmp    =    array[j];    array[j]    =    array[i];    array[i]    =    tmp;    j--;    i++;    }    }    [CLASS]        CollectionUtils    CardinalityHelper    SetOperationCardinalityHelper    1    EquatorWrapper    2    3    [METHOD]    reverseArray    [RETURN_TYPE]    void        Object[]    array    [VARIABLES]    Set    elements    elementsAlreadySeen    boolean    Collection    EMPTY_COLLECTION    a    answer    b    coll    coll1    coll2    collection    resultCollection    List    list    newList    partitions    Object    tmp    Map    cardinalityA    cardinalityB    count    freqMap    map    Object[]    array    int    i    j    Equator    equator    O    element    item    obj    object    value        	collections_379_CollectionUtils_1_1	1605	1	src/main/java/org/apache/commons/collections4/CollectionUtils.java
944	[PATCH]    int    y    =    x    -    start1    +    start2    -    k;	[BUG]    [BUGGY]    int    y    =    x    -    start1    -    start2    -    k;    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -2    testLongestCommonSubsequence    [CONTEXT]        final    int    i    =    k    +    offset;    if    (k    ==    -d    ||    k    !=    d    &&    vDown[i-1]    <    vDown[i+1])    {    vDown[i]    =    vDown[i+1];    }    else    {    vDown[i]    =    vDown[i-1]    +    1;    }    int    x    =    vDown[i];    [BUGGY]    int    y    =    x    -    start1    -    start2    -    k;    while    (x    <    end1    &&    y    <    end2    &&    equator.equate(sequence1.get(x),    sequence2.get(y)))    {    vDown[i]    =    ++x;    ++y;    }        if    (delta    %    2    !=    0    &&    delta    -    d    <=    k    &&    k    <=    delta    +    d)    {    if    (vUp[i-delta]    <=    vDown[i])    {    return    buildSnake(vUp[i-delta],    k    +    start1    -    start2,    end1,    end2);    }    [CLASS]        SequencesComparator    Snake    [METHOD]    getMiddleSnake    [RETURN_TYPE]    SequencesComparator$Snake        final    int    start1    final    int    end1    final    int    start2    final    int    end2    [VARIABLES]    List    sequence1    sequence2    int[]    vDown    vUp    boolean    int    d    delta    diag    end    end1    end2    i    k    m    n    offset    size    start    start1    start2    sum    x    y    Equator    equator        	collections_10143_SequencesComparator_1_1	197	1	src/main/java/org/apache/commons/collections4/sequence/SequencesComparator.java
945	[PATCH]    return    listIterator(0);	[BUG]    [BUGGY]    return    listIterator(-1);    [FE]    java.lang.IndexOutOfBoundsException:    Invalid    index:-1,    size=4    testBug35258    [CONTEXT]    public    ListIterator<E>    listIterator()    {        [BUGGY]    return    listIterator(-1);    }    [CLASS]        TreeList    AVLNode    TreeListIterator    [METHOD]    listIterator    [RETURN_TYPE]    ListIterator        [VARIABLES]    AVLNode    current    left    leftFollower    next    prev    right    rightFollower    root    TreeList    parent    boolean    leftIsPrevious    rightIsNext    E    obj    value    int    absolutePositionOfParent    currentIndex    end    expectedModCount    fromIndex    height    index    mid    nextIndex    relativePosition    size    start        	collections_5410_TreeList_1_1	134	1	src/main/java/org/apache/commons/collections4/list/TreeList.java
946	[PATCH]    if    (node    ==    next    &&    node    ==    current)    {	[BUG]    [BUGGY]    if    (node    ==    next    &&    false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<true>    but    was:<false>    testInternalState_CursorNextNextPreviousRemoveIndex1ByList    [CONTEXT]    protected    void    nodeRemoved(final    Node<E>    node)    {    [BUGGY]    if    (node    ==    next    &&    false)    {        next    =    node.next;    current    =    null;    currentRemovedByAnother    =    true;    }    else    if    (node    ==    next)    {            next    =    node.next;    currentRemovedByAnother    =    false;    }    else    if    (node    ==    current)    {    [CLASS]        CursorableLinkedList    Cursor    SubCursor    [METHOD]    nodeRemoved    [RETURN_TYPE]    void        Node<E>    node    [VARIABLES]    LinkedSubList    sub    subList    List    cursors    boolean    currentRemovedByAnother    nextIndexValid    valid    long    serialVersionUID    Node    node        	collections_5120_CursorableLinkedList_1_1	505	1	src/main/java/org/apache/commons/collections4/list/CursorableLinkedList.java
947	[PATCH]    if    (!beforeFirst    ||    removed)    {	[BUG]    [BUGGY]    if    (!beforeFirst)    {    [FE]    junit.framework.AssertionFailedError:    NoSuchElementException    must    be    thrown    when    Iterator    is    exhausted    testEmptyIterator    [CONTEXT]    public    E    next()    {    [BUGGY]    if    (!beforeFirst)    {    throw    new    NoSuchElementException();    }    beforeFirst    =    false;    return    object;    }    [CLASS]        SingletonIterator    [METHOD]    next    [RETURN_TYPE]    E        [VARIABLES]    E    object    boolean    beforeFirst    removeAllowed    removed        	collections_4449_SingletonIterator_1_1	88	1	src/main/java/org/apache/commons/collections4/iterators/SingletonIterator.java
948	[PATCH]    for    (int    i    =    this.composite.length    -    1;    i    >=    0;    --i)    {	[BUG]    [BUGGY]    for    (int    i    =    this.composite.length    *    1;    i    >=    0;    --i)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    1    testFailFastEntrySet    [CONTEXT]    public    Set<K>    keySet()    {    final    CompositeSet<K>    keys    =    new    CompositeSet<K>();    [BUGGY]    for    (int    i    =    this.composite.length    *    1;    i    >=    0;    --i)    {    keys.addComposited(this.composite[i].keySet());    }    return    keys;    }    [CLASS]        CompositeMap    [METHOD]    keySet    [RETURN_TYPE]    Set        [VARIABLES]    CompositeSet    keys    boolean    Map[]    composite    temp    MapMutator    mutator    long    serialVersionUID    int    i        	collections_7042_CompositeMap_1_1	321	1	src/main/java/org/apache/commons/collections4/map/CompositeMap.java
949	[PATCH]    for    (int    currentIndex    =    0;    currentIndex    <    index;    currentIndex++)    {	[BUG]    [BUGGY]    for    (int    currentIndex    =    1;    currentIndex    <    index;    currentIndex++)    {    [FE]    junit.framework.ComparisonFailure:    expected:<[-[2,    -1],    0,    1,    2,    3,    4]>    but    was:<[-[1,    -2],    0,    1,    2,    3,    4]>    testAdd    [CONTEXT]    if    (index    >    size)    {    throw    new    IndexOutOfBoundsException(   "Couldn't    get    the    node:       "    +       "index    (   "    +    index    +       ")    greater    than    the    size    of    the       "    +       "list    (   "    +    size    +       ").   ");    }        Node<E>    node;    if    (index    <    size    /    2)    {        node    =    header.next;    [BUGGY]    for    (int    currentIndex    =    1;    currentIndex    <    index;    currentIndex++)    {    node    =    node.next;    }    }    else    {        node    =    header;    for    (int    currentIndex    =    size;    currentIndex    >    index;    currentIndex--)    {    node    =    node.previous;    }    }    return    node;    [CLASS]        AbstractLinkedList    Node    LinkedListIterator    LinkedSubListIterator    LinkedSubList    [METHOD]    getNode    [RETURN_TYPE]    AbstractLinkedList$Node        final    int    index    final    boolean    endMarkerAllowed    [VARIABLES]    LinkedSubList    sub    AbstractLinkedList    parent    boolean    endMarkerAllowed    E    e    o    oldValue    value    int    currentIndex    expectedModCount    fromIndex    fromIndexInclusive    hashCode    i    index    modCount    nextIndex    offset    size    startIndex    toIndex    toIndexExclusive    Node    current    header    insertBeforeNode    newNode    next    node    nodeToInsert    previous        	collections_4824_AbstractLinkedList_1_1	556	1	src/main/java/org/apache/commons/collections4/list/AbstractLinkedList.java
950	[PATCH]    vUp[1+offset]            =    end1    +    1;	[BUG]    [BUGGY]    vUp[1    -    offset]        =    end1    +    1;    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -5    testLongestCommonSubsequence    [CONTEXT]    final    int    m    =    end1    -    start1;    final    int    n    =    end2    -    start2;    if    (m    ==    0    ||    n    ==    0)    {    return    null;    }    final    int    delta=    m    -    n;    final    int    sum=    n    +    m;    final    int    offset    =    (sum    %    2    ==    0    ?    sum    :    sum    +    1)    /    2;    vDown[1+offset]    =    start1;    [BUGGY]    vUp[1    -    offset]    =    end1    +    1;    for    (int    d    =    0;    d    <=    offset    ;    ++d)    {        for    (int    k    =    -d;    k    <=    d;    k    +=    2)    {        final    int    i    =    k    +    offset;    if    (k    ==    -d    ||    k    !=    d    &&    vDown[i-1]    <    vDown[i+1])    {    vDown[i]    =    vDown[i+1];    }    else    {    [CLASS]        SequencesComparator    Snake    [METHOD]    getMiddleSnake    [RETURN_TYPE]    SequencesComparator$Snake        final    int    start1    final    int    end1    final    int    start2    final    int    end2    [VARIABLES]    List    sequence1    sequence2    int[]    vDown    vUp    boolean    int    d    delta    diag    end    end1    end2    i    k    m    n    offset    size    start    start1    start2    sum    x    y    Equator    equator        	collections_10061_SequencesComparator_1_1	182	1	src/main/java/org/apache/commons/collections4/sequence/SequencesComparator.java
951	[PATCH]    if    (retval    >    0)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError    testComparatorChainOnMinvaluedCompatator    [CONTEXT]        final    Iterator<Comparator<E>>    comparators    =    comparatorChain.iterator();    for    (int    comparatorIndex    =    0;    comparators.hasNext();    ++comparatorIndex)    {    final    Comparator<?    super    E>    comparator    =    comparators.next();    int    retval    =    comparator.compare(o1,o2);    if    (retval    !=    0)    {        if    (orderingBits.get(comparatorIndex)    ==    true)    {    [BUGGY]    if    (false)    {    retval    =    -1;    }    else    {    retval    =    1;    }    }    return    retval;    }    }            [CLASS]        ComparatorChain    [METHOD]    compare    [RETURN_TYPE]    int        final    E    o1    final    E    o2    [VARIABLES]    boolean    isLocked    reverse    E    o1    o2    BitSet    bits    orderingBits    Iterator    comparators    List    comparatorChain    list    long    serialVersionUID    int    comparatorIndex    retval    Comparator    comparator        	collections_2768_ComparatorChain_1_1	281	1	src/main/java/org/apache/commons/collections4/comparators/ComparatorChain.java
952	[PATCH]    if    (set.size()    >    0    ||    list.size()    >    0)    {	[BUG]    [BUGGY]    if    (set.size()    >=    0    ||    list.size()    >    0)    {    [FE]    java.lang.IllegalArgumentException:    Set    and    List    must    be    empty    testRetainAll    [CONTEXT]    public    static    <E>    ListOrderedSet<E>    listOrderedSet(final    Set<E>    set,    final    List<E>    list)    {    if    (set    ==    null)    {    throw    new    IllegalArgumentException(   "Set    must    not    be    null   ");    }    if    (list    ==    null)    {    throw    new    IllegalArgumentException(   "List    must    not    be    null   ");    }    [BUGGY]    if    (set.size()    >=    0    ||    list.size()    >    0)    {    throw    new    IllegalArgumentException(   "Set    and    List    must    be    empty   ");    }    return    new    ListOrderedSet<E>(set,    list);    }    [CLASS]        ListOrderedSet    OrderedSetIterator    [METHOD]    listOrderedSet    [RETURN_TYPE]    <E>        Set<E>    set    List<E>    list    [VARIABLES]    Collection    set    List    list    setOrder    Set    set    boolean    E    last    long    serialVersionUID        	collections_10560_ListOrderedSet_1_1	84	1	src/main/java/org/apache/commons/collections4/set/ListOrderedSet.java
953	[PATCH]    relativePosition    =    mid    -    absolutePositionOfParent;	[BUG]    [BUGGY]    relativePosition    =    mid    *    absolutePositionOfParent;    [FE]    java.lang.NullPointerException    testIterationOrder    [CONTEXT]    private    AVLNode(final    Iterator<?    extends    E>    iterator,    final    int    start,    final    int    end,    final    int    absolutePositionOfParent,    final    AVLNode<E>    prev,    final    AVLNode<E>    next)    {    final    int    mid    =    start    +    (end    -    start)    /    2;    if    (start    <    mid)    {    left    =    new    AVLNode<E>(iterator,    start,    mid    -    1,    mid,    prev,    this);    }    else    {    leftIsPrevious    =    true;    left    =    prev;    }    value    =    iterator.next();    [BUGGY]    relativePosition    =    mid    *    absolutePositionOfParent;    if    (mid    <    end)    {    right    =    new    AVLNode<E>(iterator,    mid    +    1,    end,    mid,    this,    next);    }    else    {    rightIsNext    =    true;    right    =    next;    }    recalcHeight();    }    [CLASS]        TreeList    AVLNode    TreeListIterator    [METHOD]    <init>    [RETURN_TYPE]    TreeList$AVLNode)        Iterator<?    extends    E>    iterator    final    int    start    final    int    end    final    int    absolutePositionOfParent    AVLNode<E>    prev    AVLNode<E>    next    [VARIABLES]    AVLNode    current    left    leftFollower    next    prev    right    rightFollower    root    Iterator    iterator    TreeList    parent    boolean    leftIsPrevious    rightIsNext    E    obj    value    int    absolutePositionOfParent    currentIndex    end    expectedModCount    height    mid    nextIndex    relativePosition    size    start        	collections_5524_TreeList_1_1	381	1	src/main/java/org/apache/commons/collections4/list/TreeList.java
954	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError:    Collection    should    remove    extant    element:    again=blahv    testCollectionRemove    [CONTEXT]    public    boolean    remove(final    Object    obj)    {    if    (obj    instanceof    Map.Entry    ==    false)    {    return    false;    }    if    (getEntrySet().contains(obj))    {    final    Object    key    =    ((Map.Entry<K,    V>)    obj).getKey();    parent.remove(key);    [BUGGY]    return    false;    }    return    false;    }    [CLASS]        ListOrderedMap    ValuesView    1    KeySetView    1    EntrySetView    ListOrderedIterator    ListOrderedMapEntry    ListOrderedMapIterator    [METHOD]    remove    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    Set    entrySet    boolean    contains    first    readable    ListOrderedMap    parent    List    insertOrder    Object    key    obj    K    key    last    ListIterator    iterator    long    serialVersionUID        	collections_7994_ListOrderedMap_1_1	632	1	src/main/java/org/apache/commons/collections4/map/ListOrderedMap.java
955	[PATCH]    return    position1    ==    null    ?    position2    ==    null    ?    0    :    1    :    -1;	[BUG]    [BUGGY]    return    position1    ==    null    ?    false    ?    0    :    1    :    -1;    [FE]    junit.framework.AssertionFailedError:    expected:<0>    but    was:<1>    testUnknownObjectBehavior    [CONTEXT]    public    int    compare(final    T    obj1,    final    T    obj2)    {    isLocked    =    true;    final    Integer    position1    =    map.get(obj1);    final    Integer    position2    =    map.get(obj2);    if    (position1    ==    null    ||    position2    ==    null)    {    switch    (unknownObjectBehavior)    {    case    BEFORE:    return    position1    ==    null    ?    position2    ==    null    ?    0    :    -1    :    1;    case    AFTER:    [BUGGY]    return    position1    ==    null    ?    false    ?    0    :    1    :    -1;    case    EXCEPTION:    final    Object    unknownObj    =    position1    ==    null    ?    obj1    :    obj2;    throw    new    IllegalArgumentException(   "Attempting    to    compare    unknown    object       "    +    unknownObj);    default:    //could    be    null    throw    new    UnsupportedOperationException(   "Unknown    unknownObjectBehavior:       "    +    unknownObjectBehavior);    }    }    return    position1.compareTo(position2);    [CLASS]        FixedOrderComparator    UnknownObjectBehavior    [METHOD]    compare    [RETURN_TYPE]    int        final    T    obj1    final    T    obj2    [VARIABLES]    UnknownObjectBehavior    AFTER    BEFORE    EXCEPTION    unknownObjectBehavior    Integer    position1    position2    boolean    isLocked    T    obj1    obj2    Object    unknownObj    Map    map    long    serialVersionUID    int    counter        	collections_2832_FixedOrderComparator_1_1	236	1	src/main/java/org/apache/commons/collections4/comparators/FixedOrderComparator.java
956	[PATCH]    final    int    delta        =    m    -    n;	[BUG]    [BUGGY]    final    int    delta    =    m    %    n;    [FE]    java.lang.IndexOutOfBoundsException:    Index:    15,    Size:    12    testExecution    [CONTEXT]    private    Snake    getMiddleSnake(final    int    start1,    final    int    end1,    final    int    start2,    final    int    end2)    {            final    int    m    =    end1    -    start1;    final    int    n    =    end2    -    start2;    if    (m    ==    0    ||    n    ==    0)    {    return    null;    }        [BUGGY]    final    int    delta=    m    %    n;    final    int    sum=    n    +    m;    final    int    offset    =    (sum    %    2    ==    0    ?    sum    :    sum    +    1)    /    2;    vDown[1+offset]    =    start1;    vUp[1+offset]    =    end1    +    1;    for    (int    d    =    0;    d    <=    offset    ;    ++d)    {        for    (int    k    =    -d;    k    <=    d;    k    +=    2)    {            [CLASS]        SequencesComparator    Snake    [METHOD]    getMiddleSnake    [RETURN_TYPE]    SequencesComparator$Snake        final    int    start1    final    int    end1    final    int    start2    final    int    end2    [VARIABLES]    List    sequence1    sequence2    int[]    vDown    vUp    boolean    int    d    delta    diag    end    end1    end2    i    k    m    n    offset    size    start    start1    start2    sum    x    y    Equator    equator        	collections_10019_SequencesComparator_1_1	178	1	src/main/java/org/apache/commons/collections4/sequence/SequencesComparator.java
957	[PATCH]    ||    middle.getEnd()    ==    start1    &&    middle.getDiag()    ==    start1    -    start2)    {	[BUG]    [BUGGY]    ||    middle.getEnd()    ==    start1    ==    (middle.getDiag()    ==    start1    -    start2))    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    6    testLongestCommonSubsequence    [CONTEXT]    final    EditScript<T>    script)    {    final    Snake    middle    =    getMiddleSnake(start1,    end1,    start2,    end2);    if    (middle    ==    null    ||    middle.getStart()    ==    end1    &&    middle.getDiag()    ==    end1    -    end2    [BUGGY]    ||    middle.getEnd()    ==    start1    ==    (middle.getDiag()    ==    start1    -    start2))    {    int    i    =    start1;    int    j    =    start2;    while    (i    <    end1    ||    j    <    end2)    {    if    (i    <    end1    &&    j    <    end2    &&    equator.equate(sequence1.get(i),    sequence2.get(j)))    {    script.append(new    KeepCommand<T>(sequence1.get(i)));    ++i;    ++j;    }    else    {    if    (end1    -    start1    >    end2    -    start2)    {    [CLASS]        SequencesComparator    Snake    [METHOD]    buildScript    [RETURN_TYPE]    void        final    int    start1    final    int    end1    final    int    start2    final    int    end2    EditScript<T>    script    [VARIABLES]    boolean    Snake    middle    List    sequence1    sequence2    int[]    vDown    vUp    EditScript    script    int    d    delta    diag    end    end1    end2    i    j    k    m    n    offset    size    start    start1    start2    sum    x    y    Equator    equator        	collections_10400_SequencesComparator_1_1	259	1	src/main/java/org/apache/commons/collections4/sequence/SequencesComparator.java
958	[PATCH]    while    (parent    !=    null    &&    child    ==    parent.getRight(dataElement))    {	[BUG]    [BUGGY]    while    (true    &&    child    ==    parent.getRight(dataElement))    {    [FE]    java.lang.NullPointerException    testNextKey    [CONTEXT]    }    else    {                            Node<K,    V>    parent    =    node.getParent(dataElement);    Node<K,    V>    child    =    node;        [BUGGY]    while    (true    &&    child    ==    parent.getRight(dataElement))    {    child    =    parent;    parent    =    parent.getParent(dataElement);    }    rval    =    parent;    }    return    rval;    }    [CLASS]        TreeBidiMap    DataElement    View    KeyView    ValueView    EntryView    InverseEntryView    ViewIterator    ViewMapIterator    InverseViewMapIterator    ViewMapEntryIterator    InverseViewMapEntryIterator    Node    Inverse    [METHOD]    nextGreater    [RETURN_TYPE]    TreeBidiMap$Node        Node<K,    V>    node    DataElement    dataElement    [VARIABLES]    Node[]    leftNode    parentNode    rightNode    rootNode    Set    entrySet    inverseEntrySet    inverseKeySet    inverseValuesSet    keySet    valuesSet    Node    child    lastReturnedNode    newNode    nextNode    node    parent    previousNode    root    rval    String    description    K    key    long    serialVersionUID    int    cmp    expectedModifications    hashcodeValue    modifications    nodeCount    DataElement    KEY    VALUE    dataElement    orderType    boolean    calculatedHashCode    V    result    value    Inverse    inverse    boolean[]    blackColor        	collections_2020_TreeBidiMap_1_1	615	1	src/main/java/org/apache/commons/collections4/bidimap/TreeBidiMap.java
959	[PATCH]    return    next    !=    null    &&    !compare(next.key,    excludedKey);	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError:    expected    same:<null>    was    not:<foo>    testLastKey    [CONTEXT]    public    boolean    hasNext()    {    [BUGGY]    return    false;    }    [CLASS]        AbstractPatriciaTrie    Reference    TrieEntry    EntrySet    EntryIterator    KeySet    KeyIterator    Values    ValueIterator    TrieIterator    TrieMapIterator    RangeMap    RangeEntryMap    RangeEntrySet    EntryIterator    PrefixRangeMap    PrefixRangeEntrySet    SingletonIterator    EntryIterator    [METHOD]    hasNext    [RETURN_TYPE]    boolean        [VARIABLES]    Set    entrySet    keySet    boolean    forceInclusive    fromInclusive    lastOne    toInclusive    RangeMap    delegate    E    item    Collection    values    TrieEntry    added    candidate    ceil    child    current    e    entry    first    firstEntry    floor    found    from    h    last    left    next    nextEntry    node    p    parent    parentOfSubtree    path    predecessor    prefixStart    prevEntry    previous    prior    right    root    start    startScan    subtree    t    tree    K    excludedKey    first    fromKey    key    last    prefix    toKey    PrefixRangeMap    delegate    long    serialVersionUID    int    bitIndex    endIndexInBits    expectedModCount    hit    lengthInBits    modCount    offset    offsetInBits    offsetLength    ret    size        	collections_11563_AbstractPatriciaTrie_1_1	2049	1	src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java
960	[PATCH]    return    this.index    -    this.startIndex;	[BUG]    [BUGGY]    return    this.index    %    this.startIndex;    [FE]    java.lang.ArithmeticException:    /    by    zero    testArrayListIterator    [CONTEXT]    public    int    nextIndex()    {    [BUGGY]    return    this.index    %    this.startIndex;    }    [CLASS]        ArrayListIterator    [METHOD]    nextIndex    [RETURN_TYPE]    int        [VARIABLES]    int    endIndex    lastItemIndex    startIndex    boolean        	collections_3659_ArrayListIterator_1_1	145	1	src/main/java/org/apache/commons/collections4/iterators/ArrayListIterator.java
961	[PATCH]    return    remove(object,    1);	[BUG]    [BUGGY]    return    remove(object,    0);    [FE]    junit.framework.AssertionFailedError:    Collection    should    remove    extant    element:    1    testCollectionRemove    [CONTEXT]    public    boolean    remove(final    Object    object)    {    [BUGGY]    return    remove(object,    0);    }    [CLASS]        CollectionSortedBag    [METHOD]    remove    [RETURN_TYPE]    boolean        Object    object    [VARIABLES]    long    serialVersionUID    Object    object    boolean        	collections_1578_CollectionSortedBag_1_1	120	1	src/main/java/org/apache/commons/collections4/bag/CollectionSortedBag.java
962	[PATCH]    ||    paramTypes    !=    null    &&    args    !=    null    &&    paramTypes.length    !=    args.length)    {	[BUG]    [BUGGY]    ||    paramTypes.length    !=    args.length)    {    [FE]    java.lang.NullPointerException    partition    [CONTEXT]    public    static    <T>    Factory<T>    instantiateFactory(final    Class<T>    classToInstantiate,    final    Class<?>[]    paramTypes,    final    Object[]    args)    {    if    (classToInstantiate    ==    null)    {    throw    new    IllegalArgumentException(   "Class    to    instantiate    must    not    be    null   ");    }    if    (paramTypes    ==    null    &&    args    !=    null    ||    paramTypes    !=    null    &&    args    ==    null    [BUGGY]    ||    paramTypes.length    !=    args.length)    {    throw    new    IllegalArgumentException(   "Parameter    types    must    match    the    arguments   ");    }    if    (paramTypes    ==    null    ||    paramTypes.length    ==    0)    {    return    new    InstantiateFactory<T>(classToInstantiate);    }    return    new    InstantiateFactory<T>(classToInstantiate,    paramTypes,    args);    }    [CLASS]        InstantiateFactory    [METHOD]    instantiateFactory    [RETURN_TYPE]    <T>        Class<T>    classToInstantiate    Class<?>[]    paramTypes    Object[]    args    [VARIABLES]    Class    classToInstantiate    iClassToInstantiate    Class[]    iParamTypes    paramTypes    boolean    Constructor    iConstructor    long    serialVersionUID    Object[]    args    iArgs        	collections_3323_InstantiateFactory_1_1	63	1	src/main/java/org/apache/commons/collections4/functors/InstantiateFactory.java
963	[PATCH]    if    (closures[i]    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError    testChainedClosure    [CONTEXT]    static    void    validate(final    Closure<?>...    closures)    {    if    (closures    ==    null)    {    throw    new    IllegalArgumentException(   "The    closure    array    must    not    be    null   ");    }    for    (int    i    =    0;    i    <    closures.length;    i++)    {    [BUGGY]    if    (false)    {    throw    new    IllegalArgumentException(       "The    closure    array    must    not    contain    a    null    closure,    index       "    +    i    +       "    was    null   ");    }    }    }    [CLASS]        FunctorUtils    [METHOD]    validate    [RETURN_TYPE]    void        closures    [VARIABLES]    Closure[]    closures    boolean    int    i        	collections_3053_FunctorUtils_1_1	139	1	src/main/java/org/apache/commons/collections4/functors/FunctorUtils.java
964	[PATCH]    return    this.keyType    ==    type;	[BUG]    [BUGGY]    return    false;    [FE]    java.lang.ClassCastException:    java.lang.Integer    cannot    be    cast    to    java.lang.ref.Reference    testBasics    [CONTEXT]    protected    boolean    isKeyType(ReferenceStrength    type)    {    [BUGGY]    return    false;    }    [CLASS]        AbstractReferenceMap    ReferenceStrength    ReferenceEntrySet    ReferenceKeySet    ReferenceValues    ReferenceEntry    ReferenceBaseIterator    ReferenceEntrySetIterator    ReferenceKeySetIterator    ReferenceValuesIterator    ReferenceMapIterator    SoftRef    WeakRef    [METHOD]    isKeyType    [RETURN_TYPE]    boolean        ReferenceStrength    type    [VARIABLES]    ReferenceStrength    HARD    SOFT    WEAK    keyType    type    valueType    ReferenceEntry    e    entry    previous    boolean    purgeValues    r    ReferenceQueue    q    queue    V    currentValue    nextValue    obj    old    value    AbstractReferenceMap    parent    K    currentKey    key    nextKey    int    capacity    expectedModCount    hash    hashCode    i    index    value        	collections_6849_AbstractReferenceMap_1_1	1056	1	src/main/java/org/apache/commons/collections4/map/AbstractReferenceMap.java
965	[PATCH]    if    (inverseKeySet    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.NullPointerException    testBidiRemoveByKeySet    [CONTEXT]    public    Set<V>    keySet()    {    [BUGGY]    if    (false)    {    inverseKeySet    =    new    ValueView(VALUE);    }    return    inverseKeySet;    }    [CLASS]        TreeBidiMap    DataElement    View    KeyView    ValueView    EntryView    InverseEntryView    ViewIterator    ViewMapIterator    InverseViewMapIterator    ViewMapEntryIterator    InverseViewMapEntryIterator    Node    Inverse    [METHOD]    keySet    [RETURN_TYPE]    Set        [VARIABLES]    Node[]    leftNode    parentNode    rightNode    rootNode    Set    entrySet    inverseEntrySet    inverseKeySet    inverseValuesSet    keySet    valuesSet    Node    child    currentNode    deletedNode    from    insertedNode    lastReturnedNode    leftChild    newNode    nextNode    node    parent    previousNode    replacement    replacementNode    rightChild    root    rval    siblingNode    to    x    xFormerLeftChild    xFormerParent    xFormerRightChild    y    yFormerLeftChild    yFormerParent    yFormerRightChild    String    description    K    k    key    obj    result    value    long    serialVersionUID    int    cmp    expectedModifications    hashcodeValue    i    modifications    nodeCount    size    total    DataElement    KEY    VALUE    dataElement    orderType    boolean    calculatedHashCode    hasNext    xWasLeftChild    yWasLeftChild    V    ignored    key    obj    result    v    value    Inverse    inverse    boolean[]    blackColor        	collections_2523_TreeBidiMap_1_1	2124	1	src/main/java/org/apache/commons/collections4/bidimap/TreeBidiMap.java
966	[PATCH]    if    (it.hasNext())    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    java.util.NoSuchElementException    testPrefixMap    [CONTEXT]    private    int    fixup()    {        if    (size    ==    -    1    ||    AbstractPatriciaTrie.this.modCount    !=    expectedModCount)    {    final    Iterator<Map.Entry<K,    V>>    it    =    super.entrySet().iterator();    size    =    0;    Map.Entry<K,    V>    entry    =    null;    [BUGGY]    if    (true)    {    entry    =    it.next();    size    =    1;    }    fromKey    =    entry    ==    null    ?    null    :    entry.getKey();    if    (fromKey    !=    null)    {    final    TrieEntry<K,    V>    prior    =    previousEntry((TrieEntry<K,    V>)entry);    fromKey    =    prior    ==    null    ?    null    :    prior.getKey();    }        [CLASS]        AbstractPatriciaTrie    Reference    TrieEntry    EntrySet    EntryIterator    KeySet    KeyIterator    Values    ValueIterator    TrieIterator    TrieMapIterator    RangeMap    RangeEntryMap    RangeEntrySet    EntryIterator    PrefixRangeMap    PrefixRangeEntrySet    SingletonIterator    EntryIterator    [METHOD]    fixup    [RETURN_TYPE]    int        [VARIABLES]    Entry    entry    Set    entrySet    keySet    boolean    forceInclusive    fromInclusive    lastOne    toInclusive    RangeMap    delegate    E    item    Iterator    it    Collection    values    TrieEntry    added    candidate    ceil    child    current    e    entry    first    firstEntry    floor    found    from    h    last    left    next    nextEntry    node    p    parent    parentOfSubtree    path    predecessor    prefixStart    prevEntry    previous    prior    right    root    start    startScan    subtree    t    tree    K    excludedKey    first    fromKey    key    last    prefix    toKey    PrefixRangeMap    delegate    long    serialVersionUID    int    bitIndex    endIndexInBits    expectedModCount    hit    lengthInBits    modCount    offset    offsetInBits    offsetLength    ret    size        	collections_11591_AbstractPatriciaTrie_1_1	2102	1	src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java
967	[PATCH]    otherTreeMin.relativePosition    =    currentSize    -    sParentAbsolutePosition;	[BUG]    [BUGGY]    otherTreeMin.relativePosition    =    currentSize    %    sParentAbsolutePosition;    [FE]    junit.framework.AssertionFailedError:    toArray    should    have    correct    element    expected:<One>    but    was:<Eight>    testCollectionAddAll    [CONTEXT]    otherTreeMin.setRight(otherTree,    null);    otherTreeMin.setLeft(s,    maxNode);    if    (otherTree    !=    null)    {    otherTree.min().setLeft(null,    otherTreeMin);    otherTree.relativePosition++;    }    if    (s    !=    null)    {    s.max().setRight(null,    otherTreeMin);    s.relativePosition    =    sAbsolutePosition    -    currentSize;    }    [BUGGY]    otherTreeMin.relativePosition    =    currentSize    %    sParentAbsolutePosition;    s    =    otherTreeMin;    while    (!sAncestors.isEmpty())    {    final    AVLNode<E>    sAncestor    =    sAncestors.pop();    sAncestor.setRight(s,    null);    s    =    sAncestor.balance();    }    return    s;    }    [CLASS]        TreeList    AVLNode    TreeListIterator    [METHOD]    addAll    [RETURN_TYPE]    TreeList$AVLNode        AVLNode<E>    otherTree    final    int    currentSize    [VARIABLES]    AVLNode    cTree    current    left    leftFollower    leftMax    leftPrevious    leftSubTree    maxNode    movedNode    newTop    next    nextNode    node    otherTree    otherTreeMin    prev    previous    ret    right    rightFollower    rightMin    root    s    sAncestor    TreeList    parent    boolean    leftIsPrevious    rightIsNext    E    obj    result    value    Deque    sAncestors    int    absolutePositionOfParent    currentIndex    currentSize    end    endIndex    expectedModCount    fromIndex    height    index    indexRelativeToMe    mid    movedPosition    myNewPosition    newOffest    newTopPosition    nextIndex    oldOffset    relativePosition    result    sAbsolutePosition    sParentAbsolutePosition    size    start    startIndex        	collections_5933_TreeList_1_1	894	1	src/main/java/org/apache/commons/collections4/list/TreeList.java
968	[PATCH]    return    indexOf(value)    !=    -1;	[BUG]    [BUGGY]    return    true;    [FE]    junit.framework.AssertionFailedError    testContainsAll    [CONTEXT]    public    boolean    contains(final    Object    value)    {    [BUGGY]    return    true;    }    [CLASS]        AbstractLinkedList    Node    LinkedListIterator    LinkedSubListIterator    LinkedSubList    [METHOD]    contains    [RETURN_TYPE]    boolean        Object    value    [VARIABLES]    LinkedSubList    sub    AbstractLinkedList    parent    boolean    E    value    Node    current    header    next    node    previous    Object    value    int    expectedModCount    fromIndex    i    index    modCount    nextIndex    offset    size    startIndex    toIndex        	collections_4658_AbstractLinkedList_1_1	155	1	src/main/java/org/apache/commons/collections4/list/AbstractLinkedList.java
969	[PATCH]    ||    ((paramTypes    !=    null)    &&    (args    !=    null)    &&    (paramTypes.length    !=    args.length)))    {	[BUG]    [BUGGY]    ||    (((paramTypes    !=    null)    &&    (args    !=    null))    ==    (paramTypes.length    !=    args.length)))    {    [FE]    java.lang.NullPointerException    testInvokerTransformer    [CONTEXT]    public    static    <I,    O>    Transformer<I,    O>    invokerTransformer(final    String    methodName,    final    Class<?>[]    paramTypes,    final    Object[]    args)    {    if    (methodName    ==    null)    {    throw    new    IllegalArgumentException(   "The    method    to    invoke    must    not    be    null   ");    }    if    (((paramTypes    ==    null)    &&    (args    !=    null))    ||    ((paramTypes    !=    null)    &&    (args    ==    null))    [BUGGY]    ||    (((paramTypes    !=    null)    &&    (args    !=    null))    ==    (paramTypes.length    !=    args.length)))    {    throw    new    IllegalArgumentException(   "The    parameter    types    must    match    the    arguments   ");    }    if    (paramTypes    ==    null    ||    paramTypes.length    ==    0)    {    return    new    InvokerTransformer<I,    O>(methodName);    }    return    new    InvokerTransformer<I,    O>(methodName,    paramTypes,    args);    }    [CLASS]        InvokerTransformer    [METHOD]    invokerTransformer    [RETURN_TYPE]    <I,O>        String    methodName    Class<?>[]    paramTypes    Object[]    args    [VARIABLES]    Class[]    iParamTypes    paramTypes    String    iMethodName    methodName    boolean    long    serialVersionUID    Object[]    args    iArgs        	collections_3415_InvokerTransformer_1_1	77	1	src/main/java/org/apache/commons/collections4/functors/InvokerTransformer.java
970	[PATCH]    return    previousIndex()    >=    0;	[BUG]    [BUGGY]    return    previousIndex()    >=    1;    [FE]    java.util.NoSuchElementException:    Already    at    start    of    list.    testListListIteratorPreviousRemovePrevious    [CONTEXT]    public    boolean    hasPrevious()    {    [BUGGY]    return    previousIndex()    >=    1;    }    [CLASS]        AbstractLinkedList    Node    LinkedListIterator    LinkedSubListIterator    LinkedSubList    [METHOD]    hasPrevious    [RETURN_TYPE]    boolean        [VARIABLES]    LinkedSubList    sub    subList    AbstractLinkedList    parent    boolean    E    e    o    obj    oldValue    value    int    currentIndex    expectedModCount    fromIndex    fromIndexInclusive    hashCode    i    index    modCount    nextIndex    offset    size    startIndex    toIndex    toIndexExclusive    Node    current    header    insertBeforeNode    newNode    next    node    nodeToInsert    previous        	collections_4904_AbstractLinkedList_1_1	911	1	src/main/java/org/apache/commons/collections4/list/AbstractLinkedList.java
971	[PATCH]    if    (null    ==    object)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.NullPointerException    testMapPutAll    [CONTEXT]    public    boolean    equals(final    Object    object)    {    if    (this    ==    object)    {    return    true;    }    [BUGGY]    if    (false)    {    return    false;    }    if    (object.getClass().equals(this.getClass()))    {    final    ReverseComparator<?>    thatrc    =    (ReverseComparator<?>)    object;    return    comparator.equals(thatrc.comparator);    }    return    false;    }    [CLASS]        ReverseComparator    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    object    [VARIABLES]    Object    object    ReverseComparator    thatrc    boolean    long    serialVersionUID    Comparator    comparator        	collections_2982_ReverseComparator_1_1	113	1	src/main/java/org/apache/commons/collections4/comparators/ReverseComparator.java
972	[PATCH]    rangeCheck(index,    size    +    1);	[BUG]    [BUGGY]    rangeCheck(index,    size    -    1);    [FE]    java.lang.IndexOutOfBoundsException:    Index    '0'    out    of    bounds    for    size    '0'    testSubListAddEnd    [CONTEXT]    public    void    add(final    int    index,    final    E    obj)    {    [BUGGY]    rangeCheck(index,    size    -    1);    checkModCount();    parent.add(index    +    offset,    obj);    expectedModCount    =    parent.modCount;    size++;    LinkedSubList.this.modCount++;    }    [CLASS]        AbstractLinkedList    Node    LinkedListIterator    LinkedSubListIterator    LinkedSubList    [METHOD]    add    [RETURN_TYPE]    void        final    int    index    final    E    obj    [VARIABLES]    LinkedSubList    sub    subList    AbstractLinkedList    parent    boolean    E    e    o    obj    oldValue    value    int    currentIndex    expectedModCount    fromIndex    fromIndexInclusive    hashCode    i    index    modCount    nextIndex    offset    size    startIndex    toIndex    toIndexExclusive    Node    current    header    insertBeforeNode    newNode    next    node    nodeToInsert    previous        	collections_4949_AbstractLinkedList_1_1	979	1	src/main/java/org/apache/commons/collections4/list/AbstractLinkedList.java
973	[PATCH]    setLeft(new    AVLNode<E>(-1,    obj,    this,    left),    null);	[BUG]    [BUGGY]    setLeft(new    AVLNode<E>(0,    obj,    this,    left),    null);    [FE]    java.lang.NullPointerException    testRemove    [CONTEXT]    private    AVLNode<E>    insertOnLeft(final    int    indexRelativeToMe,    final    E    obj)    {    if    (getLeftSubTree()    ==    null)    {    [BUGGY]    setLeft(new    AVLNode<E>(0,    obj,    this,    left),    null);    }    else    {    setLeft(left.insert(indexRelativeToMe,    obj),    null);    }    if    (relativePosition    >=    0)    {    relativePosition++;    }    final    AVLNode<E>    ret    =    balance();    recalcHeight();    return    ret;    [CLASS]        TreeList    AVLNode    TreeListIterator    [METHOD]    insertOnLeft    [RETURN_TYPE]    TreeList$AVLNode        final    int    indexRelativeToMe    final    E    obj    [VARIABLES]    AVLNode    cTree    current    left    leftFollower    next    nextNode    node    prev    ret    right    rightFollower    root    TreeList    parent    boolean    leftIsPrevious    rightIsNext    E    obj    result    value    int    absolutePositionOfParent    currentIndex    end    endIndex    expectedModCount    fromIndex    height    index    indexRelativeToMe    mid    nextIndex    relativePosition    result    size    start    startIndex        	collections_5610_TreeList_1_1	504	1	src/main/java/org/apache/commons/collections4/list/TreeList.java
974	[PATCH]    while    (currentIterator.hasNext()    ==    false    &&    !iteratorChain.isEmpty())    {	[BUG]    [BUGGY]    while    (!iteratorChain.isEmpty())    {    [FE]    junit.framework.AssertionFailedError:    expected:<2>    but    was:<1>    testAddAllToCollection    [CONTEXT]    if    (iteratorChain.isEmpty())    {    currentIterator    =    EmptyIterator.<E>    emptyIterator();    }    else    {    currentIterator    =    iteratorChain.remove();    }            lastUsedIterator    =    currentIterator;    }        [BUGGY]    while    (!iteratorChain.isEmpty())    {    currentIterator    =    iteratorChain.remove();    }    }    [CLASS]        IteratorChain    [METHOD]    updateCurrentIterator    [RETURN_TYPE]    void        [VARIABLES]    Iterator    currentIterator    element    first    iterator    lastUsedIterator    second    boolean    isLocked    Queue    iteratorChain        	collections_3961_IteratorChain_1_1	223	1	src/main/java/org/apache/commons/collections4/iterators/IteratorChain.java
975	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError:    Full    collection    should    containAll    itself    testCollectionContainsAll    [CONTEXT]    public    boolean    equals(final    Object    obj)    {    if    (obj    ==    this)    {    [BUGGY]    return    false;    }    if    (obj    instanceof    Map.Entry<?,    ?>    ==    false)    {    return    false;    }    final    Map.Entry<?,    ?>    e2    =    (Map.Entry<?,    ?>)    obj;    return    (    (key    ==    null    ?    e2.getKey()    ==    null    :    key.equals(e2.getKey()))    &&    (value    ==    null    ?    e2.getValue()    ==    null    :    value.equals(e2.getValue())));    }    [CLASS]        StaticBucketMap    Node    Lock    BaseIterator    EntryIterator    ValueIterator    KeyIterator    EntrySet    KeySet    Values    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    Node[]    buckets    Entry    e2    entry    last    boolean    Lock[]    locks    V    returnVal    value    Node    n    newNode    next    prev    ArrayList    current    Object    obj    K    key    int    DEFAULT_BUCKETS    bucket    cnt    hash    hashCode    i    numBuckets    size        	collections_9168_StaticBucketMap_1_1	464	1	src/main/java/org/apache/commons/collections4/map/StaticBucketMap.java
976	[PATCH]    if    (inputCollection    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.NullPointerException    partition    [CONTEXT]    final    Factory<R>    partitionFactory,    final    Predicate<?    super    O>...    predicates)    {        [BUGGY]    if    (false)    {    return    Collections.emptyList();    }    if    (predicates    ==    null    ||    predicates.length    <    1)    {        final    R    singlePartition    =    partitionFactory.create();    select(inputCollection,    PredicateUtils.truePredicate(),    singlePartition);    return    Collections.singletonList(singlePartition);    }        [CLASS]        CollectionUtils    CardinalityHelper    SetOperationCardinalityHelper    1    EquatorWrapper    2    3    [METHOD]    partition    [RETURN_TYPE]    <O,R        Iterable<?    extends    O>    inputCollection    Factory<R>    partitionFactory    predicates    [VARIABLES]    R    singlePartition    Set    elements    elementsAlreadySeen    boolean    elementAssigned    Iterable    inputCollection    Predicate[]    predicates    Collection    EMPTY_COLLECTION    a    answer    b    coll1    coll2    collection    resultCollection    Factory    partitionFactory    List    list    newList    partitions    Map    cardinalityA    cardinalityB    count    freqMap    int    i    numberOfPartitions    numberOfPredicates    Equator    equator    O    element    item    obj    object        	collections_264_CollectionUtils_1_1	1126	1	src/main/java/org/apache/commons/collections4/CollectionUtils.java
977	[PATCH]    return    this.index    -    getStartIndex();	[BUG]    [BUGGY]    return    this.index    +    getStartIndex();    [FE]    junit.framework.AssertionFailedError    testArrayListIterator    [CONTEXT]    public    int    nextIndex()    {    [BUGGY]    return    this.index    +    getStartIndex();    }    [CLASS]        ObjectArrayListIterator    [METHOD]    nextIndex    [RETURN_TYPE]    int        [VARIABLES]    int    end    lastItemIndex    start    boolean        	collections_4170_ObjectArrayListIterator_1_1	137	1	src/main/java/org/apache/commons/collections4/iterators/ObjectArrayListIterator.java
978	[PATCH]    if    (coll    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.NullPointerException    testPutAll_KeyIterable    [CONTEXT]    public    boolean    putAll(final    K    key,    final    Iterable<?    extends    V>    values)    {    if    (values    ==    null    ||    values.iterator()    ==    null    ||    !values.iterator().hasNext())    {    return    false;    }    Iterator<?    extends    V>    it    =    values.iterator();    boolean    result    =    false;    Collection<V>    coll    =    getMap().get(key);    [BUGGY]    if    (false)    {    coll    =    createCollection();    while    (it.hasNext())    {    coll.add(it.next());    }    if    (coll.size()    >    0)    {        getMap().put(key,    coll);    result    =    true;    }    }    else    {    [CLASS]        AbstractMultiValuedMap    WrappedCollection    KeysBag    1    1    EntryValues    1    1    MultiValuedMapEntry    MultiValuedMapIterator    Values    ValuesIterator    [METHOD]    putAll    [RETURN_TYPE]    boolean        final    K    key    Iterable<?    extends    V>    values    [VARIABLES]    Entry    current    entry    EntryValues    entryValuesView    boolean    result    tmpResult    Iterable    values    Iterator    it    iterator    keyIterator    Factory    collectionFactory    Collection    col    coll    keysCol    values    valuesView    vs    Object    key    value    K    key    Map    map    long    serialVersionUID    KeysBag    keysBagView        	collections_9464_AbstractMultiValuedMap_1_1	366	1	src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java
979	[PATCH]    if    (other.size()    !=    size())    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError:    expected:<[]>    but    was:<[]>    testEmptyBagCompatibility    [CONTEXT]    public    boolean    equals(final    Object    object)    {    if    (object    ==    this)    {    return    true;    }    if    (object    instanceof    Bag    ==    false)    {    return    false;    }    final    Bag<?>    other    =    (Bag<?>)    object;    [BUGGY]    if    (true)    {    return    false;    }    for    (final    E    element    :    map.keySet())    {    if    (other.getCount(element)    !=    getCount(element))    {    return    false;    }    }    return    true;    }    [CLASS]        AbstractMapBag    BagIterator    MutableInteger    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    object    [VARIABLES]    Entry    current    entry    Set    uniqueSet    boolean    added    canRemove    changed    result    E    element    Iterator    entryIterator    i    it    Bag    other    Object    object    Map    map    int    count    entrySize    i    index    itemCount    modCount    mods    myCount    nCopies    otherCount    size    value    AbstractMapBag    parent        	collections_1496_AbstractMapBag_1_1	546	1	src/main/java/org/apache/commons/collections4/bag/AbstractMapBag.java
980	[PATCH]    setRight(new    AVLNode<E>(+1,    obj,    right,    this),    null);	[BUG]    [BUGGY]    setRight(new    AVLNode<E>(-1,    obj,    right,    this),    null);    [FE]    java.lang.NullPointerException    testRemove    [CONTEXT]    private    AVLNode<E>    insertOnRight(final    int    indexRelativeToMe,    final    E    obj)    {    if    (getRightSubTree()    ==    null)    {    [BUGGY]    setRight(new    AVLNode<E>(-1,    obj,    right,    this),    null);    }    else    {    setRight(right.insert(indexRelativeToMe,    obj),    null);    }    if    (relativePosition    <    0)    {    relativePosition--;    }    final    AVLNode<E>    ret    =    balance();    recalcHeight();    return    ret;    }    [CLASS]        TreeList    AVLNode    TreeListIterator    [METHOD]    insertOnRight    [RETURN_TYPE]    TreeList$AVLNode        final    int    indexRelativeToMe    final    E    obj    [VARIABLES]    AVLNode    cTree    current    left    leftFollower    next    nextNode    node    prev    ret    right    rightFollower    root    TreeList    parent    boolean    leftIsPrevious    rightIsNext    E    obj    result    value    int    absolutePositionOfParent    currentIndex    end    endIndex    expectedModCount    fromIndex    height    index    indexRelativeToMe    mid    nextIndex    relativePosition    result    size    start    startIndex        	collections_5622_TreeList_1_1	519	1	src/main/java/org/apache/commons/collections4/list/TreeList.java
981	[PATCH]    hashCode    =    31    *    hashCode    +    (e    ==    null    ?    0    :    e.hashCode());	[BUG]    [BUGGY]    hashCode    =    31    -    hashCode    +    (e    ==    null    ?    0    :    e.hashCode());    [FE]    junit.framework.AssertionFailedError:    expected:<95>    but    was:<96>    testEqualsAndHashCode    [CONTEXT]    public    int    hashCode()    {    int    hashCode    =    1;    for    (final    E    e    :    this)    {    [BUGGY]    hashCode    =    31    -    hashCode    +    (e    ==    null    ?    0    :    e.hashCode());    }    return    hashCode;    }    [CLASS]        AbstractLinkedList    Node    LinkedListIterator    LinkedSubListIterator    LinkedSubList    [METHOD]    hashCode    [RETURN_TYPE]    int        [VARIABLES]    LinkedSubList    sub    AbstractLinkedList    parent    boolean    E    e    o    oldValue    value    int    expectedModCount    fromIndex    fromIndexInclusive    hashCode    i    index    modCount    nextIndex    offset    size    startIndex    toIndex    toIndexExclusive    Node    current    header    next    node    previous        	collections_4745_AbstractLinkedList_1_1	378	1	src/main/java/org/apache/commons/collections4/list/AbstractLinkedList.java
982	[PATCH]    if    (!nextCalled    ||    removed)    {	[BUG]    [BUGGY]    if    (!nextCalled)    {    [FE]    junit.framework.AssertionFailedError:    IllegalStateException    must    be    thrown    from    set    after    remove    testRemoveThenSet    [CONTEXT]    public    void    set(final    E    obj)    {    [BUGGY]    if    (!nextCalled)    {    throw    new    IllegalStateException();    }    this.object    =    obj;    }    [CLASS]        SingletonListIterator    [METHOD]    set    [RETURN_TYPE]    void        final    E    obj    [VARIABLES]    E    obj    object    boolean    beforeFirst    nextCalled    removed        	collections_4511_SingletonListIterator_1_1	158	1	src/main/java/org/apache/commons/collections4/iterators/SingletonListIterator.java
983	[PATCH]    return    ((Iterator<?>)    object).hasNext()    ==    false;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError:    expected:<true>    but    was:<false>    testSizeIsEmpty_Iterator    [CONTEXT]    return    true;    }    else    if    (object    instanceof    Collection<?>)    {    return    ((Collection<?>)    object).isEmpty();    }    else    if    (object    instanceof    Iterable<?>)    {    return    IterableUtils.isEmpty((Iterable<?>)    object);    }    else    if    (object    instanceof    Map<?,    ?>)    {    return    ((Map<?,    ?>)    object).isEmpty();    }    else    if    (object    instanceof    Object[])    {    return    ((Object[])    object).length    ==    0;    }    else    if    (object    instanceof    Iterator<?>)    {    [BUGGY]    return    false;    }    else    if    (object    instanceof    Enumeration<?>)    {    return    ((Enumeration<?>)    object).hasMoreElements()    ==    false;    }    else    {    try    {    return    Array.getLength(object)    ==    0;    }    catch    (final    IllegalArgumentException    ex)    {    throw    new    IllegalArgumentException(   "Unsupported    object    type:       "    +    object.getClass().getName());    }    }    }    [CLASS]        CollectionUtils    CardinalityHelper    SetOperationCardinalityHelper    1    EquatorWrapper    2    3    [METHOD]    sizeIsEmpty    [RETURN_TYPE]    boolean        Object    object    [VARIABLES]    Set    elements    elementsAlreadySeen    boolean    Collection    EMPTY_COLLECTION    a    answer    b    coll1    coll2    collection    resultCollection    List    list    newList    partitions    Object    object    Map    cardinalityA    cardinalityB    count    freqMap    map    IllegalArgumentException    ex    Equator    equator    O    element    item    obj    object    value        	collections_355_CollectionUtils_1_1	1558	1	src/main/java/org/apache/commons/collections4/CollectionUtils.java
984	[PATCH]    if    (readable    ==    false)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError    testEmptyMapIterator    [CONTEXT]    public    V    getValue()    {    [BUGGY]    if    (false)    {    throw    new    IllegalStateException(AbstractHashedMap.GETVALUE_INVALID);    }    return    parent.get(last);    }    [CLASS]        ListOrderedMap    ValuesView    1    KeySetView    1    EntrySetView    ListOrderedIterator    ListOrderedMapEntry    ListOrderedMapIterator    [METHOD]    getValue    [RETURN_TYPE]    V        [VARIABLES]    Set    entrySet    boolean    contains    first    readable    ListOrderedMap    parent    List    insertOrder    K    key    last    ListIterator    iterator    long    serialVersionUID        	collections_8025_ListOrderedMap_1_1	758	1	src/main/java/org/apache/commons/collections4/map/ListOrderedMap.java
985	[PATCH]    }    else    if    (node.getLeft(dataElement)    !=    null)    {	[BUG]    [BUGGY]    }    else    if    (true)    {    [FE]    junit.framework.AssertionFailedError:    expected:<we'll>    but    was:<null>    testPreviousKey    [CONTEXT]    private    Node<K,    V>    nextSmaller(final    Node<K,    V>    node,    final    DataElement    dataElement)    {    Node<K,    V>    rval;    if    (node    ==    null)    {    rval    =    null;    [BUGGY]    }    else    if    (true)    {            rval    =    greatestNode(node.getLeft(dataElement),    dataElement);    }    else    {                            [CLASS]        TreeBidiMap    DataElement    View    KeyView    ValueView    EntryView    InverseEntryView    ViewIterator    ViewMapIterator    InverseViewMapIterator    ViewMapEntryIterator    InverseViewMapEntryIterator    Node    Inverse    [METHOD]    nextSmaller    [RETURN_TYPE]    TreeBidiMap$Node        Node<K,    V>    node    DataElement    dataElement    [VARIABLES]    Node[]    leftNode    parentNode    rightNode    rootNode    Set    entrySet    inverseEntrySet    inverseKeySet    inverseValuesSet    keySet    valuesSet    Node    child    lastReturnedNode    newNode    nextNode    node    parent    previousNode    root    rval    String    description    K    key    long    serialVersionUID    int    cmp    expectedModifications    hashcodeValue    modifications    nodeCount    DataElement    KEY    VALUE    dataElement    orderType    boolean    calculatedHashCode    V    result    value    Inverse    inverse    boolean[]    blackColor        	collections_2029_TreeBidiMap_1_1	635	1	src/main/java/org/apache/commons/collections4/bidimap/TreeBidiMap.java
986	[PATCH]    return    candidate    !=    null    &&    candidate.equals(o);	[BUG]    [BUGGY]    return    candidate    !=    null;    [FE]    junit.framework.AssertionFailedError:    expected:<false>    but    was:<true>    testEntrySetContains3    [CONTEXT]    public    boolean    contains(final    Object    o)    {    if    (!(o    instanceof    Map.Entry))    {    return    false;    }    final    TrieEntry<K,V>    candidate    =    getEntry(((Map.Entry<?,    ?>)o).getKey());    [BUGGY]    return    candidate    !=    null;    }    [CLASS]        AbstractPatriciaTrie    Reference    TrieEntry    EntrySet    EntryIterator    KeySet    KeyIterator    Values    ValueIterator    TrieIterator    TrieMapIterator    RangeMap    RangeEntryMap    RangeEntrySet    EntryIterator    PrefixRangeMap    PrefixRangeEntrySet    SingletonIterator    EntryIterator    [METHOD]    contains    [RETURN_TYPE]    boolean        Object    o    [VARIABLES]    Set    entrySet    keySet    boolean    fromInclusive    lastOne    toInclusive    RangeMap    delegate    E    item    Collection    values    TrieEntry    added    candidate    ceil    child    current    entry    first    firstEntry    floor    found    from    h    last    left    next    nextEntry    node    p    parent    parentOfSubtree    path    predecessor    prefixStart    prevEntry    previous    prior    right    root    start    startScan    subtree    t    tree    Object    o    K    excludedKey    fromKey    key    prefix    toKey    PrefixRangeMap    delegate    long    serialVersionUID    int    bitIndex    endIndexInBits    expectedModCount    hit    lengthInBits    modCount    offset    offsetInBits    offsetLength    size        	collections_11325_AbstractPatriciaTrie_1_1	1395	1	src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java
987	[PATCH]    System.arraycopy(this.composite,    i    +    1,    temp,    i,    size    -    i    -    1);	[BUG]    [BUGGY]    System.arraycopy(this.composite,    i    +    1,    temp,    i,    (size    -    i)    /    1);    [FE]    java.lang.ArrayIndexOutOfBoundsException    testRemoveComposited    [CONTEXT]    public    synchronized    Map<K,    V>    removeComposited(final    Map<K,    V>    map)    {    final    int    size    =    this.composite.length;    for    (int    i    =    0;    i    <    size;    ++i)    {    if    (this.composite[i].equals(map))    {    final    Map<K,    V>[]    temp    =    new    Map[size    -    1];    System.arraycopy(this.composite,    0,    temp,    0,    i);    [BUGGY]    System.arraycopy(this.composite,    i    +    1,    temp,    i,    (size    -    i)    /    1);    this.composite    =    temp;    return    map;    }    }    return    null;    }    [CLASS]        CompositeMap    [METHOD]    removeComposited    [RETURN_TYPE]    Map        Map<K,    V>    map    [VARIABLES]    boolean    Map[]    composite    temp    Map    map    MapMutator    mutator    long    serialVersionUID    int    i    size        	collections_6954_CompositeMap_1_1	162	1	src/main/java/org/apache/commons/collections4/map/CompositeMap.java
988	[PATCH]    final    StringBuilder    buf    =    new    StringBuilder(16    *    size());	[BUG]    [BUGGY]    final    StringBuilder    buf    =    new    StringBuilder(16    -    size());    [FE]    java.lang.NegativeArraySizeException    testCollectionToString    [CONTEXT]    public    String    toString()    {    if    (size()    ==    0)    {    return       "[]   ";    }    [BUGGY]    final    StringBuilder    buf    =    new    StringBuilder(16    -    size());    buf.append('[');    final    Iterator<E>    it    =    iterator();    boolean    hasNext    =    it.hasNext();    while    (hasNext)    {    final    Object    value    =    it.next();    buf.append(value    ==    this    ?       "(this    Collection)   "    :    value);    hasNext    =    it.hasNext();    if    (hasNext)    {    buf.append(   ",       ");    [CLASS]        AbstractLinkedList    Node    LinkedListIterator    LinkedSubListIterator    LinkedSubList    [METHOD]    toString    [RETURN_TYPE]    String        [VARIABLES]    LinkedSubList    sub    AbstractLinkedList    parent    boolean    hasNext    StringBuilder    buf    E    e    o    oldValue    value    Node    current    header    next    node    previous    Iterator    it    Object    value    int    expectedModCount    fromIndex    fromIndexInclusive    hashCode    i    index    modCount    nextIndex    offset    size    startIndex    toIndex    toIndexExclusive        	collections_4764_AbstractLinkedList_1_1	388	1	src/main/java/org/apache/commons/collections4/list/AbstractLinkedList.java
989	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError:    Every    Collection    should    contain    all    elements    of    an    empty    Collection.    testCollectionContainsAll    [CONTEXT]    public    boolean    containsAll(final    Collection<?>    coll)    {    for    (final    Object    o    :    coll)    {    if    (!contains(o))    {    return    false;    }    }    [BUGGY]    return    false;    }    [CLASS]        IndexedCollection    [METHOD]    containsAll    [RETURN_TYPE]    boolean        Collection<?>    coll    [VARIABLES]    MultiMap    index    map    Collection    coll    Object    o    Transformer    keyTransformer    boolean    added    changed    uniqueIndex    long    serialVersionUID        	collections_2613_IndexedCollection_1_1	165	1	src/main/java/org/apache/commons/collections4/collection/IndexedCollection.java
990	[PATCH]    while    (currentNode    !=    rootNode[dataElement.ordinal()]    &&    isBlack(currentNode,    dataElement))    {	[BUG]    [BUGGY]    while    (true    &&    isBlack(currentNode,    dataElement))    {    [FE]    java.lang.NullPointerException    testCollectionIteratorRemove    [CONTEXT]    private    void    doRedBlackDeleteFixup(final    Node<K,    V>    replacementNode,    final    DataElement    dataElement)    {    Node<K,    V>    currentNode    =    replacementNode;        [BUGGY]    while    (true    &&    isBlack(currentNode,    dataElement))    {    if    (currentNode.isLeftChild(dataElement))    {    Node<K,    V>    siblingNode    =    getRightChild(getParent(currentNode,    dataElement),    dataElement);    if    (isRed(siblingNode,    dataElement))    {    makeBlack(siblingNode,    dataElement);    makeRed(getParent(currentNode,    dataElement),    dataElement);    rotateLeft(getParent(currentNode,    dataElement),    dataElement);    siblingNode    =    getRightChild(getParent(currentNode,    dataElement),    dataElement);    }    [CLASS]        TreeBidiMap    DataElement    View    KeyView    ValueView    EntryView    InverseEntryView    ViewIterator    ViewMapIterator    InverseViewMapIterator    ViewMapEntryIterator    InverseViewMapEntryIterator    Node    Inverse    [METHOD]    doRedBlackDeleteFixup    [RETURN_TYPE]    void        Node<K,    V>    replacementNode    DataElement    dataElement    [VARIABLES]    Node[]    leftNode    parentNode    rightNode    rootNode    Set    entrySet    inverseEntrySet    inverseKeySet    inverseValuesSet    keySet    valuesSet    Node    child    currentNode    deletedNode    from    insertedNode    lastReturnedNode    leftChild    newNode    nextNode    node    parent    previousNode    replacement    replacementNode    rightChild    root    rval    siblingNode    to    y    String    description    K    key    long    serialVersionUID    int    cmp    expectedModifications    hashcodeValue    modifications    nodeCount    DataElement    KEY    VALUE    dataElement    orderType    boolean    calculatedHashCode    V    result    value    Inverse    inverse    boolean[]    blackColor        	collections_2161_TreeBidiMap_1_1	1018	1	src/main/java/org/apache/commons/collections4/bidimap/TreeBidiMap.java
991	[PATCH]    return    coll    ==    null    ?    null    :    coll.iterator().next();	[BUG]    [BUGGY]    return    false    ?    null    :    coll.iterator().next();    [FE]    java.lang.NullPointerException    testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately    [CONTEXT]    public    C    get(final    K    key)    {    @SuppressWarnings(   "unchecked   ")    final    Collection<C>    coll    =    (Collection<C>)    index.get(key);    [BUGGY]    return    false    ?    null    :    coll.iterator().next();    }    [CLASS]        IndexedCollection    [METHOD]    get    [RETURN_TYPE]    C        final    K    key    [VARIABLES]    MultiMap    index    map    Collection    coll    Transformer    keyTransformer    boolean    added    changed    uniqueIndex    K    key    long    serialVersionUID        	collections_2614_IndexedCollection_1_1	182	1	src/main/java/org/apache/commons/collections4/collection/IndexedCollection.java
992	[PATCH]    if    (((paramTypes    ==    null)    &&    (args    !=    null))	[BUG]    [BUGGY]    if    ((false)    [FE]    junit.framework.AssertionFailedError    testInstantiateTransformerNull    [CONTEXT]    public    static    <T>    Transformer<Class<?    extends    T>,    T>    instantiateTransformer(final    Class<?>[]    paramTypes,    final    Object[]    args)    {    [BUGGY]    if    ((false)    ||    ((paramTypes    !=    null)    &&    (args    ==    null))    ||    ((paramTypes    !=    null)    &&    (args    !=    null)    &&    (paramTypes.length    !=    args.length)))    {    throw    new    IllegalArgumentException(   "Parameter    types    must    match    the    arguments   ");    }    if    (paramTypes    ==    null    ||    paramTypes.length    ==    0)    {    return    new    InstantiateTransformer<T>();    }    return    new    InstantiateTransformer<T>(paramTypes,    args);    }    [CLASS]        InstantiateTransformer    [METHOD]    instantiateTransformer    [RETURN_TYPE]    <T>        Class<?>[]    paramTypes    Object[]    args    [VARIABLES]    Transformer    NO_ARG_INSTANCE    Class[]    iParamTypes    paramTypes    boolean    long    serialVersionUID    Object[]    args    iArgs        	collections_3345_InstantiateTransformer_1_1	67	1	src/main/java/org/apache/commons/collections4/functors/InstantiateTransformer.java
993	[PATCH]    if    (parent.delegateMap    !=    null)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    java.lang.NullPointerException    testEmptyIterator    [CONTEXT]    public    Iterator<K>    iterator()    {    [BUGGY]    if    (true)    {    return    parent.delegateMap.keySet().iterator();    }    if    (parent.size()    ==    0)    {    return    EmptyIterator.<K>emptyIterator();    }    return    new    KeySetIterator<K>(parent);    }    [CLASS]        Flat3Map    FlatMapIterator    EntrySet    FlatMapEntry    EntryIterator    EntrySetIterator    KeySet    KeySetIterator    Values    ValuesIterator    [METHOD]    iterator    [RETURN_TYPE]    Iterator        [VARIABLES]    AbstractHashedMap    delegateMap    boolean    canRemove    flag    removed    result    FlatMapEntry    currentEntry    V    old    value    value1    value2    value3    Flat3Map    parent    K    key    key1    key2    key3    long    serialVersionUID    int    hash1    hash2    hash3    hashCode    index    nextIndex    size        	collections_7618_Flat3Map_1_1	990	1	src/main/java/org/apache/commons/collections4/map/Flat3Map.java
994	[PATCH]    int    i    =    0;	[BUG]    [BUGGY]    int    i    =    1;    [FE]    junit.framework.AssertionFailedError:    expected:<0>    but    was:<1>    testIndexOf    [CONTEXT]    public    int    indexOf(final    Object    value)    {    [BUGGY]    int    i    =    1;    for    (Node<E>    node    =    header.next;    node    !=    header;    node    =    node.next)    {    if    (isEqualValue(node.getValue(),    value))    {    return    i;    }    i++;    }    return    -1;    }    [CLASS]        AbstractLinkedList    Node    LinkedListIterator    LinkedSubListIterator    LinkedSubList    [METHOD]    indexOf    [RETURN_TYPE]    int        Object    value    [VARIABLES]    LinkedSubList    sub    AbstractLinkedList    parent    boolean    E    value    Node    current    header    next    node    previous    Object    value    int    expectedModCount    fromIndex    i    index    modCount    nextIndex    offset    size    startIndex    toIndex        	collections_4634_AbstractLinkedList_1_1	133	1	src/main/java/org/apache/commons/collections4/list/AbstractLinkedList.java
995	[PATCH]    checkInterval(index,    0,    size()    -    1);	[BUG]    [BUGGY]    checkInterval(index,    0,    size()    /    1);    [FE]    java.lang.NullPointerException    testListGetByIndexBoundsChecking    [CONTEXT]    public    E    get(final    int    index)    {    [BUGGY]    checkInterval(index,    0,    size()    /    1);    return    root.get(index).getValue();    }    [CLASS]        TreeList    AVLNode    TreeListIterator    [METHOD]    get    [RETURN_TYPE]    E        final    int    index    [VARIABLES]    AVLNode    current    left    leftFollower    next    prev    right    rightFollower    root    TreeList    parent    boolean    leftIsPrevious    rightIsNext    E    obj    value    int    absolutePositionOfParent    currentIndex    end    expectedModCount    fromIndex    height    index    mid    nextIndex    relativePosition    size    start        	collections_5405_TreeList_1_1	101	1	src/main/java/org/apache/commons/collections4/list/TreeList.java
996	[PATCH]    if    (obj    instanceof    DefaultKeyValue    ==    false)    {	[BUG]    [BUGGY]    if    (obj    instanceof    DefaultKeyValue    ==    true)    {    [FE]    junit.framework.AssertionFailedError    testEqualsAndHashCode    [CONTEXT]    public    boolean    equals(final    Object    obj)    {    if    (obj    ==    this)    {    return    true;    }    [BUGGY]    if    (obj    instanceof    DefaultKeyValue    ==    true)    {    return    false;    }    final    DefaultKeyValue<?,    ?>    other    =    (DefaultKeyValue<?,    ?>)    obj;    return    (getKey()    ==    null    ?    other.getKey()    ==    null    :    getKey().equals(other.getKey()))    &&    (getValue()    ==    null    ?    other.getValue()    ==    null    :    getValue().equals(other.getValue()));    }    [CLASS]        DefaultKeyValue    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    DefaultKeyValue    other    boolean    Object    obj        	collections_4560_DefaultKeyValue_1_1	130	1	src/main/java/org/apache/commons/collections4/keyvalue/DefaultKeyValue.java
997	[PATCH]    if    (iterator.hasPrevious()    ==    false)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.util.NoSuchElementException    testAdd    [CONTEXT]    public    E    previous()    {    if    (list.isEmpty())    {    throw    new    NoSuchElementException(       "There    are    no    elements    for    this    iterator    to    loop    on   ");    }    [BUGGY]    if    (false)    {    E    result    =    null;    while    (iterator.hasNext())    {    result    =    iterator.next();    }    iterator.previous();    return    result;    }    return    iterator.previous();    }    [CLASS]        LoopingListIterator    [METHOD]    previous    [RETURN_TYPE]    E        [VARIABLES]    List    list    boolean    ListIterator    iterator    E    result        	collections_4104_LoopingListIterator_1_1	144	1	src/main/java/org/apache/commons/collections4/iterators/LoopingListIterator.java
998	[PATCH]    canRemove    =    true;	[BUG]    [BUGGY]    canRemove    =    false;    [FE]    java.lang.IllegalStateException    testCollectionIteratorRemove    [CONTEXT]    public    E    next()    {    if    (parent.modCount    !=    mods)    {    throw    new    ConcurrentModificationException();    }    if    (itemCount    ==    0)    {    current    =    entryIterator.next();    itemCount    =    current.getValue().value;    }    [BUGGY]    canRemove    =    false;    itemCount--;    return    current.getKey();    }    [CLASS]        AbstractMapBag    BagIterator    MutableInteger    [METHOD]    next    [RETURN_TYPE]    E        [VARIABLES]    Entry    current    Set    uniqueSet    boolean    canRemove    Iterator    entryIterator    it    Map    map    int    itemCount    modCount    mods    size    value    AbstractMapBag    parent        	collections_1341_AbstractMapBag_1_1	209	1	src/main/java/org/apache/commons/collections4/bag/AbstractMapBag.java
999	[PATCH]    return    get(n    -    1);	[BUG]    [BUGGY]    return    get(n    *    1);    [FE]    java.lang.IndexOutOfBoundsException:    Index:    1,    Size:    1    testPushPeekPop    [CONTEXT]    public    E    peek()    throws    EmptyStackException    {    final    int    n    =    size();    if    (n    <=    0)    {    throw    new    EmptyStackException();    }    else    {    [BUGGY]    return    get(n    *    1);    }    }    [CLASS]        ArrayStack    [METHOD]    peek    [RETURN_TYPE]    E        [VARIABLES]    long    serialVersionUID    int    n    boolean        	collections_9_ArrayStack_1_1	92	1	src/main/java/org/apache/commons/collections4/ArrayStack.java
1000	[PATCH]    written    +=    12;	[BUG]    [BUGGY]    written    +=    0;    [FE]    java.io.IOException:    central    directory    is    empty,    can't    expand    corrupt    archive.    testJarMarker    [CONTEXT]    if    (zipMethod    ==    DEFLATED    ||    raf    !=    null)    {    writeOut(LZERO);    writeOut(LZERO);    writeOut(LZERO);    }    else    {    writeOut(ZipLong.getBytes(ze.getCrc()));    writeOut(ZipLong.getBytes(ze.getSize()));    writeOut(ZipLong.getBytes(ze.getSize()));    }        [BUGGY]    written    +=    0;            writeOut(ZipShort.getBytes(name.limit()));    written    +=    SHORT;        byte[]    extra    =    ze.getLocalFileDataExtra();    writeOut(ZipShort.getBytes(extra.length));    written    +=    SHORT;    [CLASS]        ZipArchiveOutputStream    UnicodeExtraFieldPolicy    [METHOD]    writeLocalFileHeader    [RETURN_TYPE]    void        ZipArchiveEntry    ze    [VARIABLES]    ZipEncoding    entryEncoding    zipEncoding    UnicodeExtraFieldPolicy    ALWAYS    NEVER    NOT_ENCODEABLE    b    createUnicodeExtraFields    CRC32    crc    OutputStream    o    out    String    DEFAULT_ENCODING    comm    comment    encoding    n    name    ByteBuffer    commentB    name    int    BUFFER_SIZE    BYTE_MASK    DEFAULT_COMPRESSION    DEFLATED    DEFLATER_BLOCK_SIZE    EFS_FLAG    SHORT    STORED    WORD    b    done    fullblocks    i    len    length    level    method    offset    zipMethod    long    cdLength    cdOffset    dataStart    localDataStart    realCrc    save    size    written    byte[]    CFH_SIG    DD_SIG    EOCD_SIG    LFH_SIG    LZERO    ZERO    b    buf    buff    extra    boolean    b    commentEncodable    encodable    fallbackToUTF8    hasCompressionLevelChanged    useEFS    Deflater    def    RandomAccessFile    _raf    raf    ZipArchiveEntry    entry    ze    List    entries    Map    offsets        	compress_1978_ZipArchiveOutputStream_1_1	695	1	src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java
1001	[PATCH]    writeAsciiLong(entry.getMode(),    8,    16);	[BUG]    [BUGGY]    writeAsciiLong(entry.getMode(),    0,    16);    [FE]    java.lang.NumberFormatException:    For    input    string:       "test1.xm   "    testCpioUnarchive    [CONTEXT]    private    void    writeNewEntry(final    CpioArchiveEntry    entry)    throws    IOException    {    writeAsciiLong(entry.getInode(),    8,    16);    [BUGGY]    writeAsciiLong(entry.getMode(),    0,    16);    writeAsciiLong(entry.getUID(),    8,    16);    writeAsciiLong(entry.getGID(),    8,    16);    writeAsciiLong(entry.getNumberOfLinks(),    8,    16);    writeAsciiLong(entry.getTime(),    8,    16);    writeAsciiLong(entry.getSize(),    8,    16);    writeAsciiLong(entry.getDeviceMaj(),    8,    16);    writeAsciiLong(entry.getDeviceMin(),    8,    16);    writeAsciiLong(entry.getRemoteDeviceMaj(),    8,    16);    writeAsciiLong(entry.getRemoteDeviceMin(),    8,    16);    writeAsciiLong(entry.getName().length()    +    1,    8,    16);    [CLASS]        CpioArchiveOutputStream    [METHOD]    writeNewEntry    [RETURN_TYPE]    void        CpioArchiveEntry    entry    [VARIABLES]    boolean    closed    finished    swapHalfWord    HashMap    names    OutputStream    out    short    entryFormat    format    CpioArchiveEntry    cpioEntry    e    entry    long    crc    written        	compress_1018_CpioArchiveOutputStream_1_1	197	1	src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java
1002	[PATCH]    System.arraycopy(more_magic,    0,    tmp,    magic.length,	[BUG]    [BUGGY]    System.arraycopy(more_magic,    1,    tmp,    magic.length,    [FE]    java.lang.ArrayIndexOutOfBoundsException    testCpioUnarchive    [CONTEXT]    }    else    if    (CpioUtil.byteArray2long(magic,    true)    ==    MAGIC_OLD_BINARY)    {    this.entry    =    readOldBinaryEntry(true);    }    else    {    byte    more_magic[]    =    new    byte[4];    readFully(more_magic,    0,    more_magic.length);    byte    tmp[]    =    new    byte[6];    System.arraycopy(magic,    0,    tmp,    0,    magic.length);    [BUGGY]    System.arraycopy(more_magic,    1,    tmp,    magic.length,    more_magic.length);    String    magicString    =    new    String(tmp);    if    (magicString.equals(MAGIC_NEW))    {    this.entry    =    readNewEntry(false);    }    else    if    (magicString.equals(MAGIC_NEW_CRC))    {    this.entry    =    readNewEntry(true);    }    else    if    (magicString.equals(MAGIC_OLD_ASCII))    {    this.entry    =    readOldAsciiEntry();    }    else    {    throw    new    IOException(   "Unknown    magic    [   "    +    magicString    +       "]   ");    [CLASS]        CpioArchiveInputStream    [METHOD]    getNextCPIOEntry    [RETURN_TYPE]    CpioArchiveEntry        [VARIABLES]    byte[]    magic    more_magic    singleByteBuf    tmp    tmpbuf    boolean    closed    entryEOF    String    magicString    InputStream    in    CpioArchiveEntry    entry    long    crc    entryBytesRead        	compress_540_CpioArchiveInputStream_1_1	178	1	src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java
1003	[PATCH]    while    (zvec    >    limit_zt[zn])    {	[BUG]    [BUGGY]    while    (zvec    !=    limit_zt[zn])    {    [FE]    org.apache.commons.compress.compressors.CompressorException:    Could    not    create    CompressorInputStream    testBzip2Unarchive    [CONTEXT]    private    int    getAndMoveToFrontDecode0(final    int    groupNo)    throws    IOException    {    final    InputStream    inShadow    =    this.in;    final    Data    dataShadow    =    this.data;    final    int    zt    =    dataShadow.selector[groupNo]    &    0xff;    final    int[]    limit_zt    =    dataShadow.limit[zt];    int    zn    =    dataShadow.minLens[zt];    int    zvec    =    bsR(zn);    int    bsLiveShadow    =    this.bsLive;    int    bsBuffShadow    =    this.bsBuff;        [BUGGY]    while    (zvec    !=    limit_zt[zn])    {    zn++;    while    (bsLiveShadow    <    1)    {    final    int    thech    =    inShadow.read();    if    (thech    >=    0)    {    bsBuffShadow    =    (bsBuffShadow    <<    8)    |    thech;    bsLiveShadow    +=    8;    continue;    }    else    {    throw    new    IOException(   "unexpected    end    of    stream   ");    [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    getAndMoveToFrontDecode0    [RETURN_TYPE]    int        final    int    groupNo    [VARIABLES]    int[][]    base    limit    perm    InputStream    in    inShadow    char[][]    len    temp_charArray2d    Data    data    dataShadow    int[]    base    base_zt    cftab    limit    limit_zt    minLens    perm    perm_zt    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    alphaSize    b    blockSize    blockSize100k    bsBuff    bsBuffShadow    bsLive    bsLiveShadow    computedBlockCRC    computedCombinedCRC    curr    currentChar    currentState    destOffs    eob    groupNo    groupPos    hi    i    i16    inUse16    j    last    lastShadow    len    limitLast    magic    maxLen    minLen    minLens_zt    n    nGroups    nInUse    nInUseShadow    nSelectors    nb    nextSym    offs    origPtr    pp    retChar    s    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    t    thech    v    vec    zn    zt    zvec    char[]    getAndMoveToFrontDecode_yy    len_t    length    yy    byte[]    dest    ll8    pos    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    expected    lent    magic0    magic1    magic2    magic3    magic4    magic5    su_z    tmp    boolean[]    inUse        	compress_6093_BZip2CompressorInputStream_1_1	737	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
1004	[PATCH]    (generalPurposeFlag    &    ZipArchiveOutputStream.EFS_FLAG)    !=    0;	[BUG]    [BUGGY]    (generalPurposeFlag    |    ZipArchiveOutputStream.EFS_FLAG)    !=    0;    [FE]    junit.framework.AssertionFailedError    testZipFileReadsUnicodeFields    [CONTEXT]    ZipArchiveEntry    ze    =    new    ZipArchiveEntry();    int    versionMadeBy    =    ZipShort.getValue(cfh,    off);    off    +=    SHORT;    ze.setPlatform((versionMadeBy    >>    BYTE_SHIFT)    &    NIBLET_MASK);    off    +=    SHORT;        final    int    generalPurposeFlag    =    ZipShort.getValue(cfh,    off);    final    boolean    hasEFS    =    [BUGGY]    (generalPurposeFlag    |    ZipArchiveOutputStream.EFS_FLAG)    !=    0;    final    ZipEncoding    entryEncoding    =    hasEFS    ?    ZipEncodingHelper.UTF8_ZIP_ENCODING    :    zipEncoding;    off    +=    SHORT;    ze.setMethod(ZipShort.getValue(cfh,    off));    off    +=    SHORT;                [CLASS]        ZipFile    OffsetEntry    BoundedInputStream    NameAndComment    [METHOD]    populateFromCentralDirectory    [RETURN_TYPE]    Map        [VARIABLES]    byte[]    cdExtraData    cfh    comment    fileName    name    signatureBytes    boolean    addDummyByte    hasEFS    success    useUnicodeExtraFields    ZipEncoding    entryEncoding    zipEncoding    RandomAccessFile    archive    HashMap    noEFS    OffsetEntry    offset    ZipArchiveEntry    ze    String    encoding    name    Map    entries    entriesWithoutEFS    nameMap    int    BYTE_SHIFT    CFD_LOCATOR_OFFSET    CFH_LEN    HASH_SIZE    MAX_EOCD_SIZE    MIN_EOCD_SIZE    NIBLET_MASK    POS_0    POS_1    POS_2    POS_3    SHORT    WORD    commentLen    extraLen    fileNameLen    generalPurposeFlag    off    versionMadeBy    long    LFH_OFFSET_FOR_FILENAME_LENGTH    cfhSig    dataOffset    headerOffset    loc    remaining    sig    start    time        	compress_4569_ZipFile_1_1	335	1	src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java
1005	[PATCH]    ge    =    gs    +    G_SIZE    -    1;	[BUG]    [BUGGY]    ge    =    (gs    +    G_SIZE)    %    1;    [FE]    java.lang.ArrayIndexOutOfBoundsException:    18002    testBzipCreation    [CONTEXT]    nSelectors    =    0;    totc    =    0;    gs    =    0;    while    (true)    {        if    (gs    >=    nMTF)    {    break;    }    [BUGGY]    ge    =    (gs    +    G_SIZE)    %    1;    if    (ge    >=    nMTF)    {    ge    =    nMTF    -    1;    }        Calculate    the    cost    of    this    group    as    coded    by    each    of    the    coding    tables.        for    (t    =    0;    t    <    nGroups;    t++)    {    cost[t]    =    0;    [CLASS]        BZip2CompressorOutputStream    StackElem    [METHOD]    sendMTFValues    [RETURN_TYPE]    void        [VARIABLES]    boolean    blockRandomised    closed    firstAttempt    tooLong    int[][]    code    rfreq    CRC    mCrc    OutputStream    bsStream    f    inStream    short[]    cost    szptr    char    ll_i    tmp    tmp2    char[][]    len    short    cost0    cost1    cost2    cost3    cost4    cost5    icv    int[]    code    fave    freq    ftab    heap    incs    mtfFreq    parent    quadrant    weight    zptr    boolean[]    inUse    inUse16    int    CLEARMASK    DEPTH_THRESH    GREATER_ICOST    LESSER_ICOST    QSORT_STACK_SIZE    SETMASK    SMALL_THRESH    aFreq    allowableBlockSize    alphaSize    b    bc    blockCRC    blockSize100k    bsBuff    bsLive    bt    bv    bytesOut    c    ch    combinedCRC    curr    currentChar    dd    ge    gs    hh    i    inBlockSize    iter    j    k    last    ll    maxLen    minLen    n    n1    n2    nBlocksRandomised    nGroups    nHeap    nInUse    nMTF    nNodes    nPart    nSelectors    numBits    origPtr    remF    runLength    selCtr    t    tFreq    tmp    totc    u    v    vec    workDone    workFactor    workLimit    yy    zz    char[]    block    len    length    pos    selector    selectorMtf    seqToUnseq    unseqToSeq        	compress_9012_BZip2CompressorOutputStream_1_1	664	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java
1006	[PATCH]    for    (int    i    =    0;    i    <    256;    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    0;    i    <    -256;    i++)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -750675646    testBzip2Unarchive    [CONTEXT]    private    void    makeMaps()    {    final    boolean[]    inUse    =    this.data.inUse;    final    byte[]    seqToUnseq    =    this.data.seqToUnseq;    int    nInUseShadow    =    0;        [BUGGY]    for    (int    i    =    0;    i    <    -256;    i++)    {    if    (inUse[i])    seqToUnseq[nInUseShadow++]    =    (byte)    i;    }    this.nInUse    =    nInUseShadow;    }    [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    makeMaps    [RETURN_TYPE]    void        [VARIABLES]    int[][]    base    limit    perm    InputStream    in    char[][]    temp_charArray2d    Data    data    int[]    cftab    minLens    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    b    blockSize100k    bsBuff    bsLive    computedBlockCRC    computedCombinedCRC    currentChar    currentState    destOffs    hi    i    last    len    nInUse    nInUseShadow    offs    origPtr    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    char[]    getAndMoveToFrontDecode_yy    byte[]    dest    ll8    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    su_z    boolean[]    inUse        	compress_5164_BZip2CompressorInputStream_1_1	170	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
1007	[PATCH]    return    2    *    ((long)    Integer.MAX_VALUE)    +    2    +    i;	[BUG]    [BUGGY]    return    2    *    ((long)Integer.MAX_VALUE)    /    2    +    i;    [FE]    junit.framework.AssertionFailedError:    expected:<2147483648>    but    was:<-1>    testAdjustToLong    [CONTEXT]    public    static    long    adjustToLong(int    i)    {    if    (i    <    0)    {    [BUGGY]    return    2    *    ((long)Integer.MAX_VALUE)    /    2    +    i;    }    else    {    return    i;    }    }    [CLASS]        ZipUtil    [METHOD]    adjustToLong    [RETURN_TYPE]    long        int    i    [VARIABLES]    byte[]    DOS_TIME_MIN    int    i    boolean        	compress_4946_ZipUtil_1_1	72	1	src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java
1008	[PATCH]    for    (int    i    =    0;    i    <    nSelectors;    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    -1;    i    <    nSelectors;    i++)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testBzip2Unarchive    [CONTEXT]    j++;    }    selectorMtf[i]    =    (byte)    j;    }        for    (int    v    =    nGroups;    --v    >=    0;)    {    pos[v]    =    (byte)    v;    }        [BUGGY]    for    (int    i    =    -1;    i    <    nSelectors;    i++)    {    int    v    =    selectorMtf[i]    &    0xff;    final    byte    tmp    =    pos[v];    while    (v    >    0)    {        pos[v]    =    pos[v    -    1];    v--;    }    pos[0]    =    tmp;    selector[i]    =    tmp;    }    [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    recvDecodingTables    [RETURN_TYPE]    void        [VARIABLES]    int[][]    base    limit    perm    InputStream    in    inShadow    byte    tmp    char[][]    len    temp_charArray2d    Data    data    dataShadow    int[]    base    cftab    limit    minLens    perm    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    alphaSize    b    blockSize    blockSize100k    bsBuff    bsBuffShadow    bsLive    bsLiveShadow    computedBlockCRC    computedCombinedCRC    curr    currentChar    currentState    destOffs    hi    i    i16    inUse16    j    last    len    magic    maxLen    minLen    n    nGroups    nInUse    nInUseShadow    nSelectors    nb    offs    origPtr    pp    retChar    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    t    thech    v    vec    char[]    getAndMoveToFrontDecode_yy    len_t    length    byte[]    dest    ll8    pos    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    expected    magic0    magic1    magic2    magic3    magic4    magic5    su_z    boolean[]    inUse        	compress_5670_BZip2CompressorInputStream_1_1	477	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
1009	[PATCH]    ret.setDeviceMaj(readAsciiLong(8,    16));	[BUG]    [BUGGY]    ret.setDeviceMaj(readAsciiLong(8,    -16));    [FE]    java.lang.NumberFormatException:    radix    -16    less    than    Character.MIN_RADIX    testCpioUnarchive    [CONTEXT]    ret    =    new    CpioArchiveEntry(FORMAT_NEW);    }    ret.setInode(readAsciiLong(8,    16));    ret.setMode(readAsciiLong(8,    16));    ret.setUID(readAsciiLong(8,    16));    ret.setGID(readAsciiLong(8,    16));    ret.setNumberOfLinks(readAsciiLong(8,    16));    ret.setTime(readAsciiLong(8,    16));    ret.setSize(readAsciiLong(8,    16));    [BUGGY]    ret.setDeviceMaj(readAsciiLong(8,    -16));    ret.setDeviceMin(readAsciiLong(8,    16));    ret.setRemoteDeviceMaj(readAsciiLong(8,    16));    ret.setRemoteDeviceMin(readAsciiLong(8,    16));    long    namesize    =    readAsciiLong(8,    16);    ret.setChksum(readAsciiLong(8,    16));    ret.setName(readCString((int)    namesize));    pad(ret.getHeaderSize()    +    namesize,    4);    return    ret;    }    [CLASS]        CpioArchiveInputStream    [METHOD]    readNewEntry    [RETURN_TYPE]    CpioArchiveEntry        final    boolean    hasCrc    [VARIABLES]    byte[]    b    magic    more_magic    singleByteBuf    tmp    tmpBuffer    tmpbuf    boolean    closed    entryEOF    hasCrc    swapHalfWord    InputStream    in    CpioArchiveEntry    entry    ret    long    count    crc    entryBytesRead    namesize    skip        	compress_765_CpioArchiveInputStream_1_1	330	1	src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java
1010	[PATCH]    return    read(this.singleByteBuf,    0,    1)    ==    -1    ?    -1	[BUG]    [BUGGY]    return    read(this.singleByteBuf,    0,    1)    ==    -1    ?    0    [FE]    java.lang.OutOfMemoryError:    Requested    array    size    exceeds    VM    limit    testCpioUnarchive    [CONTEXT]    public    int    read()    throws    IOException    {    [BUGGY]    return    read(this.singleByteBuf,    0,    1)    ==    -1    ?    0    :    this.singleByteBuf[0]    &    0xff;    }    [CLASS]        CpioArchiveInputStream    [METHOD]    read    [RETURN_TYPE]    int        [VARIABLES]    byte[]    magic    more_magic    singleByteBuf    tmp    tmpbuf    boolean    closed    entryEOF    InputStream    in    CpioArchiveEntry    entry    long    count    crc    entryBytesRead    skip        	compress_589_CpioArchiveInputStream_1_1	221	1	src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java
1011	[PATCH]    result[BYTE_3]    =    (byte)    ((value    &    BYTE_3_MASK)    >>    BYTE_3_SHIFT);	[BUG]    [BUGGY]    result[BYTE_3]    =    (byte)    ((value    ^    BYTE_3_MASK)    >>    BYTE_3_SHIFT);    [FE]    org.apache.commons.compress.archivers.ArchiveException:    No    Archiver    found    for    the    stream    signature    testDetection    [CONTEXT]    public    static    byte[]    getBytes(long    value)    {    byte[]    result    =    new    byte[WORD];    result[0]    =    (byte)    ((value    &    BYTE_MASK));    result[BYTE_1]    =    (byte)    ((value    &    BYTE_1_MASK)    >>    BYTE_1_SHIFT);    result[BYTE_2]    =    (byte)    ((value    &    BYTE_2_MASK)    >>    BYTE_2_SHIFT);    [BUGGY]    result[BYTE_3]    =    (byte)    ((value    ^    BYTE_3_MASK)    >>    BYTE_3_SHIFT);    return    result;    }    [CLASS]        ZipLong    [METHOD]    getBytes    [RETURN_TYPE]    byte[]        long    value    [VARIABLES]    byte[]    result    boolean    int    BYTE_1    BYTE_1_MASK    BYTE_1_SHIFT    BYTE_2    BYTE_2_MASK    BYTE_2_SHIFT    BYTE_3    BYTE_3_SHIFT    BYTE_MASK    WORD    offset    long    BYTE_3_MASK    value        	compress_4826_ZipLong_1_1	95	1	src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java
1012	[PATCH]    if    (currRecIdx    >=    recsPerBlock)    {	[BUG]    [BUGGY]    if    (currRecIdx    >    recsPerBlock)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException    testTarUnarchive    [CONTEXT]    public    byte[]    readRecord()    throws    IOException    {    if    (debug)    {    System.err.println(   "ReadRecord:    recIdx    =       "    +    currRecIdx    +       "    blkIdx    =       "    +    currBlkIdx);    }    if    (inStream    ==    null)    {    throw    new    IOException(   "reading    from    an    output    buffer   ");    }        [BUGGY]    if    (currRecIdx    >    recsPerBlock)    {    if    (!readBlock())    {    return    null;    }    }    byte[]    result    =    new    byte[recordSize];    System.arraycopy(blockBuffer,    (currRecIdx    *    recordSize),    result,    0,    recordSize);    [CLASS]        TarBuffer    [METHOD]    readRecord    [RETURN_TYPE]    byte[]        [VARIABLES]    byte[]    blockBuffer    record    result    boolean    debug    InputStream    inStream    int    DEFAULT_BLKSIZE    DEFAULT_RCDSIZE    blockSize    currBlkIdx    currRecIdx    i    recordSize    recsPerBlock    sz    OutputStream    outStream        	compress_2742_TarBuffer_1_1	217	1	src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java
1013	[PATCH]    if    (offset    %    2    !=    0)    {	[BUG]    [BUGGY]    if    (offset    %    2    !=    -1)    {    [FE]    java.io.IOException:    invalid    entry    header.    not    read    the    content?    testArUnarchive    [CONTEXT]    if    (expected[i]    !=    realized[i])    {    throw    new    IOException(   "invalid    header       "    +    new    String(realized));    }    }    }    if    (input.available()    ==    0)    {    return    null;    }        [BUGGY]    if    (offset    %    2    !=    -1)    {    read();    }    final    byte[]    name    =    new    byte[16];    final    byte[]    lastmodified    =    new    byte[12];    final    byte[]    userid    =    new    byte[6];    final    byte[]    groupid    =    new    byte[6];    final    byte[]    filemode    =    new    byte[8];    final    byte[]    length    =    new    byte[10];        [CLASS]        ArArchiveInputStream    [METHOD]    getNextArEntry    [RETURN_TYPE]    ArArchiveEntry        [VARIABLES]    byte[]    expected    filemode    groupid    lastmodified    length    name    realized    userid    boolean    InputStream    input    pInput    long    offset    int    i    read        	compress_88_ArArchiveInputStream_1_1	59	1	src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java
1014	[PATCH]    writeAsciiLong(entry.getSize(),    8,    16);	[BUG]    [BUGGY]    writeAsciiLong(entry.getSize(),    8,    -16);    [FE]    java.io.IOException:    Unknown    magic    [003b88]    testCpioUnarchive    [CONTEXT]    private    void    writeNewEntry(final    CpioArchiveEntry    entry)    throws    IOException    {    writeAsciiLong(entry.getInode(),    8,    16);    writeAsciiLong(entry.getMode(),    8,    16);    writeAsciiLong(entry.getUID(),    8,    16);    writeAsciiLong(entry.getGID(),    8,    16);    writeAsciiLong(entry.getNumberOfLinks(),    8,    16);    writeAsciiLong(entry.getTime(),    8,    16);    [BUGGY]    writeAsciiLong(entry.getSize(),    8,    -16);    writeAsciiLong(entry.getDeviceMaj(),    8,    16);    writeAsciiLong(entry.getDeviceMin(),    8,    16);    writeAsciiLong(entry.getRemoteDeviceMaj(),    8,    16);    writeAsciiLong(entry.getRemoteDeviceMin(),    8,    16);    writeAsciiLong(entry.getName().length()    +    1,    8,    16);    writeAsciiLong(entry.getChksum(),    8,    16);    writeCString(entry.getName());    pad(entry.getHeaderSize()    +    entry.getName().length()    +    1,    4);    }    [CLASS]        CpioArchiveOutputStream    [METHOD]    writeNewEntry    [RETURN_TYPE]    void        CpioArchiveEntry    entry    [VARIABLES]    boolean    closed    finished    swapHalfWord    HashMap    names    OutputStream    out    short    entryFormat    format    CpioArchiveEntry    cpioEntry    e    entry    long    crc    written        	compress_1046_CpioArchiveOutputStream_1_1	202	1	src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java
1015	[PATCH]    int    zt    =    selector[groupNo]    &    0xff;	[BUG]    [BUGGY]    int    zt    =    selector[groupNo]    ^    255;    [FE]    java.lang.ArrayIndexOutOfBoundsException:    255    testBzip2Unarchive    [CONTEXT]    unzftab[i]    =    0;    }    int    groupNo    =    0;    int    groupPos    =    G_SIZE    -    1;    final    int    eob    =    this.nInUse    +    1;    int    nextSym    =    getAndMoveToFrontDecode0(0);    int    bsBuffShadow    =    this.bsBuff;    int    bsLiveShadow    =    this.bsLive;    int    lastShadow    =    -1;    [BUGGY]    int    zt    =    selector[groupNo]    ^    255;    int[]    base_zt    =    base[zt];    int[]    limit_zt    =    limit[zt];    int[]    perm_zt    =    perm[zt];    int    minLens_zt    =    minLens[zt];    while    (nextSym    !=    eob)    {    if    ((nextSym    ==    RUNA)    ||    (nextSym    ==    RUNB))    {    int    s    =    -1;    for    (int    n    =    1;    true;    n    <<=    1)    {    [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    getAndMoveToFrontDecode    [RETURN_TYPE]    void        [VARIABLES]    int[][]    base    limit    perm    InputStream    in    inShadow    byte    ch    char[][]    len    temp_charArray2d    Data    data    dataShadow    int[]    base    base_zt    cftab    limit    limit_zt    minLens    perm    perm_zt    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    alphaSize    b    blockSize    blockSize100k    bsBuff    bsBuffShadow    bsLive    bsLiveShadow    computedBlockCRC    computedCombinedCRC    curr    currentChar    currentState    destOffs    eob    groupNo    groupPos    hi    i    i16    inUse16    j    last    lastShadow    len    limitLast    magic    maxLen    minLen    minLens_zt    n    nGroups    nInUse    nInUseShadow    nSelectors    nb    nextSym    offs    origPtr    pp    retChar    s    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    t    thech    v    vec    zn    zt    zvec    char[]    getAndMoveToFrontDecode_yy    len_t    length    yy    byte[]    dest    ll8    pos    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    expected    lent    magic0    magic1    magic2    magic3    magic4    magic5    su_z    tmp    boolean[]    inUse        	compress_5781_BZip2CompressorInputStream_1_1	572	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
1016	[PATCH]    numToRead    =    (int)    (entrySize    -    entryOffset);	[BUG]    [BUGGY]    numToRead    =    (int)    (entrySize    /    entryOffset);    [FE]    java.lang.ArithmeticException:    /    by    zero    testTarUnarchive    [CONTEXT]    public    int    read(byte[]    buf,    int    offset,    int    numToRead)    throws    IOException    {    int    totalRead    =    0;    if    (entryOffset    >=    entrySize)    {    return    -1;    }    if    ((numToRead    +    entryOffset)    >    entrySize)    {    [BUGGY]    numToRead    =    (int)    (entrySize    /    entryOffset);    }    if    (readBuf    !=    null)    {    int    sz    =    (numToRead    >    readBuf.length)    ?    readBuf.length    :    numToRead;    System.arraycopy(readBuf,    0,    buf,    offset,    sz);    if    (sz    >=    readBuf.length)    {    readBuf    =    null;    [CLASS]        TarArchiveInputStream    [METHOD]    read    [RETURN_TYPE]    int        byte[]    buf    int    offset    int    numToRead    [VARIABLES]    byte[]    buf    headerBuf    newBuf    oneBuf    readBuf    rec    skipBuf    boolean    debug    hasHitEOF    TarBuffer    buffer    int    BUFFER_SIZE    BYTE_MASK    LARGE_BUFFER_SIZE    SMALL_BUFFER_SIZE    blockSize    length    newLen    num    numRead    numToRead    offset    realSkip    recLen    recordSize    sz    totalRead    long    entryOffset    entrySize    numToSkip    skip    skipped    TarArchiveEntry    currEntry        	compress_2546_TarArchiveInputStream_1_1	306	1	src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java
1017	[PATCH]    }    else    if    (   "jar   ".equalsIgnoreCase(archiverName))    {	[BUG]    [BUGGY]    }    else    if    (true)    {    [FE]    java.lang.NullPointerException    testCpioUnarchive    [CONTEXT]    if    (archiverName    ==    null    ||    in    ==    null)    {    throw    new    IllegalArgumentException(   "Archivername    must    not    be    null.   ");    }    if    (   "ar   ".equalsIgnoreCase(archiverName))    {    return    new    ArArchiveInputStream(in);    }    else    if    (   "zip   ".equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in);    }    else    if    (   "tar   ".equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in);    [BUGGY]    }    else    if    (true)    {    return    new    JarArchiveInputStream(in);    }    else    if    (   "cpio   ".equalsIgnoreCase(archiverName))    {    return    new    CpioArchiveInputStream(in);    }    throw    new    ArchiveException(   "Archiver:       "    +    archiverName    +       "    not    found.   ");    }    [CLASS]        ArchiveStreamFactory    [METHOD]    createArchiveInputStream    [RETURN_TYPE]    ArchiveInputStream        String    archiverName    InputStream    in    [VARIABLES]    boolean    InputStream    in    String    archiverName        	compress_15_ArchiveStreamFactory_1_1	69	1	src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java
1018	[PATCH]    tmp.insert(0,       "0   ");	[BUG]    [BUGGY]    tmp.insert(-1,       "0   ");    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    -1    testCpioUnarchive    [CONTEXT]    tmp.append(Long.toHexString(number));    }    else    if    (radix    ==    8)    {    tmp.append(Long.toOctalString(number));    }    else    {    tmp.append(Long.toString(number));    }    if    (tmp.length()    <=    length)    {    long    insertLength    =    length    -    tmp.length();    for    (int    pos    =    0;    pos    <    insertLength;    pos++)    {    [BUGGY]    tmp.insert(-1,       "0   ");    }    tmpStr    =    tmp.toString();    }    else    {    tmpStr    =    tmp.substring(tmp.length()    -    length);    }    out.write(tmpStr.getBytes());    }    [CLASS]        CpioArchiveOutputStream    [METHOD]    writeAsciiLong    [RETURN_TYPE]    void        final    long    number    final    int    length    final    int    radix    [VARIABLES]    StringBuffer    tmp    boolean    closed    finished    swapHalfWord    HashMap    names    OutputStream    out    short    entryFormat    format    String    tmpStr    CpioArchiveEntry    cpioEntry    e    entry    long    count    crc    insertLength    number    skip    written    int    length    pos    radix        	compress_1358_CpioArchiveOutputStream_1_1	381	1	src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java
1019	[PATCH]    if    (newName    !=    null    &&    !originalName.equals(newName))    {	[BUG]    [BUGGY]    if    (true    &&    !originalName.equals(newName))    {    [FE]    junit.framework.AssertionFailedError    testZipFileReadsUnicodeFields    [CONTEXT]    private    void    setNameAndCommentFromExtraFields(ZipArchiveEntry    ze,    NameAndComment    nc)    {    UnicodePathExtraField    name    =    (UnicodePathExtraField)    ze.getExtraField(UnicodePathExtraField.UPATH_ID);    String    originalName    =    ze.getName();    String    newName    =    getUnicodeStringIfOriginalMatches(name,    nc.name);    [BUGGY]    if    (true    &&    !originalName.equals(newName))    {    ze.setName(newName);    nameMap.remove(originalName);    nameMap.put(newName,    ze);    }    if    (nc.comment    !=    null    &&    nc.comment.length    >    0)    {    UnicodeCommentExtraField    cmt    =    (UnicodeCommentExtraField)    ze.getExtraField(UnicodeCommentExtraField.UCOM_ID);    String    newComment    =    getUnicodeStringIfOriginalMatches(cmt,    nc.comment);    [CLASS]        ZipFile    OffsetEntry    BoundedInputStream    NameAndComment    [METHOD]    setNameAndCommentFromExtraFields    [RETURN_TYPE]    void        ZipArchiveEntry    ze    NameAndComment    nc    [VARIABLES]    byte[]    b    cdExtraData    cfdOffset    cfh    comment    fileName    localExtraData    name    sig    signatureBytes    start    boolean    addDummyByte    found    hasEFS    success    useUnicodeExtraFields    UnicodePathExtraField    name    ZipEncoding    entryEncoding    zipEncoding    RandomAccessFile    archive    UnicodeCommentExtraField    cmt    ZipArchiveEntry    ze    String    encoding    name    newComment    newName    originalName    NameAndComment    nc    Map    entries    entriesWithoutEFS    nameMap    int    BYTE_SHIFT    CFD_LOCATOR_OFFSET    CFH_LEN    HASH_SIZE    MAX_EOCD_SIZE    MIN_EOCD_SIZE    NIBLET_MASK    POS_0    POS_1    POS_2    POS_3    SHORT    WORD    commentLen    curr    extraFieldLen    extraLen    fileNameLen    generalPurposeFlag    i    lenToSkip    off    skipped    versionMadeBy    long    LFH_OFFSET_FOR_FILENAME_LENGTH    cfhSig    dataOffset    headerOffset    loc    off    offset    remaining    sig    start    stopSearching    time        	compress_4727_ZipFile_1_1	566	1	src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java
1020	[PATCH]    return    (bsBuffShadow    >>    (bsLiveShadow    -    n))    &    ((1    <<    n)    -    1);	[BUG]    [BUGGY]    return    (bsBuffShadow    >>    (bsLiveShadow    -    n))    &    ((1    <<    n)    -    -1);    [FE]    org.apache.commons.compress.compressors.CompressorException:    Could    not    create    CompressorInputStream    testBzip2Unarchive    [CONTEXT]    }    bsBuffShadow    =    (bsBuffShadow    <<    8)    |    thech;    bsLiveShadow    +=    8;    }    while    (bsLiveShadow    <    n);    this.bsBuff    =    bsBuffShadow;    }    this.bsLive    =    bsLiveShadow    -    n;    [BUGGY]    return    (bsBuffShadow    >>    (bsLiveShadow    -    n))    &    ((1    <<    n)    -    -1);    }    [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    bsR    [RETURN_TYPE]    int        final    int    n    [VARIABLES]    int[][]    base    limit    perm    InputStream    in    inShadow    char[][]    temp_charArray2d    Data    data    int[]    cftab    minLens    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    b    blockSize    blockSize100k    bsBuff    bsBuffShadow    bsLive    bsLiveShadow    computedBlockCRC    computedCombinedCRC    currentChar    currentState    destOffs    hi    i    last    len    magic    n    nInUse    nInUseShadow    offs    origPtr    retChar    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    thech    char[]    getAndMoveToFrontDecode_yy    byte[]    dest    ll8    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    expected    magic0    magic1    magic2    magic3    magic4    magic5    su_z    boolean[]    inUse        	compress_5398_BZip2CompressorInputStream_1_1	354	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
1021	[PATCH]    if    (entriesWithoutEFS.containsKey(ze))    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError    testZipFileReadsUnicodeFields    [CONTEXT]    byte[]    localExtraData    =    new    byte[extraFieldLen];    archive.readFully(localExtraData);    ze.setExtra(localExtraData);        new    Long(offset    +    LFH_OFFSET_FOR_FILENAME_LENGTH    +    SHORT    +    SHORT    +    fileNameLen    +    extraFieldLen));        offsetEntry.dataOffset    =    offset    +    LFH_OFFSET_FOR_FILENAME_LENGTH    +    SHORT    +    SHORT    +    fileNameLen    +    extraFieldLen;        [BUGGY]    if    (false)    {    setNameAndCommentFromExtraFields(ze,    (NameAndComment)    entriesWithoutEFS.get(ze));    }    }    }    [CLASS]        ZipFile    OffsetEntry    BoundedInputStream    NameAndComment    [METHOD]    resolveLocalFileHeaderData    [RETURN_TYPE]    void        Map    entriesWithoutEFS    [VARIABLES]    byte[]    b    cdExtraData    cfdOffset    cfh    comment    fileName    localExtraData    name    sig    signatureBytes    boolean    addDummyByte    found    hasEFS    success    useUnicodeExtraFields    Enumeration    e    ZipEncoding    entryEncoding    zipEncoding    RandomAccessFile    archive    OffsetEntry    offsetEntry    ZipArchiveEntry    ze    String    encoding    name    Map    entries    entriesWithoutEFS    nameMap    int    BYTE_SHIFT    CFD_LOCATOR_OFFSET    CFH_LEN    HASH_SIZE    MAX_EOCD_SIZE    MIN_EOCD_SIZE    NIBLET_MASK    POS_0    POS_1    POS_2    POS_3    SHORT    WORD    commentLen    curr    extraFieldLen    extraLen    fileNameLen    generalPurposeFlag    lenToSkip    off    skipped    versionMadeBy    long    LFH_OFFSET_FOR_FILENAME_LENGTH    cfhSig    dataOffset    headerOffset    loc    off    offset    remaining    sig    start    stopSearching    time        	compress_4710_ZipFile_1_1	531	1	src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java
1022	[PATCH]    if    (signature[4]    !=    0x31)    {	[BUG]    [BUGGY]    if    (signature[0]    !=    0x31)    {    [FE]    org.apache.commons.compress.archivers.ArchiveException:    No    Archiver    found    for    the    stream    signature    testDetection    [CONTEXT]    }    if    (signature[1]    !=    0x65)    {    return    false;    }    if    (signature[2]    !=    0x73)    {    return    false;    }    if    (signature[3]    !=    0x74)    {    return    false;    }    [BUGGY]    if    (signature[0]    !=    0x31)    {    return    false;    }    if    (signature[5]    !=    0x2e)    {    return    false;    }    if    (signature[6]    !=    0x78)    {    return    false;    }    if    (signature[7]    !=    0x6d)    {    return    false;    [CLASS]        TarArchiveInputStream    [METHOD]    matches    [RETURN_TYPE]    boolean        byte[]    signature    int    length    [VARIABLES]    byte[]    b    buf    headerBuf    newBuf    oneBuf    readBuf    rec    signature    skipBuf    boolean    b    debug    hasHitEOF    TarBuffer    buffer    int    BUFFER_SIZE    BYTE_MASK    LARGE_BUFFER_SIZE    SMALL_BUFFER_SIZE    blockSize    length    newLen    num    numRead    numToRead    offset    realSkip    recLen    recordSize    sz    totalRead    long    entryOffset    entrySize    numToSkip    skip    skipped    TarArchiveEntry    currEntry    e        	compress_2654_TarArchiveInputStream_1_1	429	1	src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java
1023	[PATCH]    int    nInUseShadow    =    0;	[BUG]    [BUGGY]    int    nInUseShadow    =    1;    [FE]    org.apache.commons.compress.compressors.CompressorException:    Could    not    create    CompressorInputStream    testBzip2Unarchive    [CONTEXT]    private    void    makeMaps()    {    final    boolean[]    inUse    =    this.data.inUse;    final    byte[]    seqToUnseq    =    this.data.seqToUnseq;        [BUGGY]    int    nInUseShadow    =    1;    for    (int    i    =    0;    i    <    256;    i++)    {    if    (inUse[i])    seqToUnseq[nInUseShadow++]    =    (byte)    i;    }    this.nInUse    =    nInUseShadow;    }    [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    makeMaps    [RETURN_TYPE]    void        [VARIABLES]    int[][]    base    limit    perm    InputStream    in    char[][]    temp_charArray2d    Data    data    int[]    cftab    minLens    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    b    blockSize100k    bsBuff    bsLive    computedBlockCRC    computedCombinedCRC    currentChar    currentState    destOffs    hi    i    last    len    nInUse    nInUseShadow    offs    origPtr    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    char[]    getAndMoveToFrontDecode_yy    byte[]    dest    ll8    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    su_z    boolean[]    inUse        	compress_5159_BZip2CompressorInputStream_1_1	168	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
1024	[PATCH]    int    offset    =    0;	[BUG]    [BUGGY]    int    offset    =    1;    [FE]    junit.framework.ComparisonFailure:    expected:<[/]>    but    was:<[]>    testTarFileWithFSRoot    [CONTEXT]    public    void    parseTarHeader(byte[]    header)    {    [BUGGY]    int    offset    =    1;    name    =    TarUtils.parseName(header,    offset,    NAMELEN);    offset    +=    NAMELEN;    mode    =    (int)    TarUtils.parseOctal(header,    offset,    MODELEN);    offset    +=    MODELEN;    userId    =    (int)    TarUtils.parseOctal(header,    offset,    UIDLEN);    offset    +=    UIDLEN;    groupId    =    (int)    TarUtils.parseOctal(header,    offset,    GIDLEN);    offset    +=    GIDLEN;    size    =    TarUtils.parseOctal(header,    offset,    SIZELEN);    [CLASS]        TarArchiveEntry    [METHOD]    parseTarHeader    [RETURN_TYPE]    void        byte[]    header    [VARIABLES]    byte[]    header    StringBuffer    groupName    linkName    magic    name    userName    boolean    byte    linkFlag    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    c    csOffset    devMajor    devMinor    groupId    i    mode    nameLength    offset    userId    long    chk    modTime    size    time        	compress_2288_TarArchiveEntry_1_1	575	1	src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java
1025	[PATCH]    result    =    (result    <<    3)    +    (header[i]    -    '0');	[BUG]    [BUGGY]    result    =    (result    <<    3)    -    (header[i]    -    '0');    [FE]    junit.framework.ComparisonFailure:    expected:<[bar.txt]>    but    was:<[hello    ]>    testTarFileWithFSRoot    [CONTEXT]    continue;    }    if    (header[i]    ==    (byte)    '    ')    {    break;    }    }    stillPadding    =    false;        [BUGGY]    result    =    (result    <<    3)    -    (header[i]    -    '0');        }    return    result;    }    [CLASS]        TarUtils    [METHOD]    parseOctal    [RETURN_TYPE]    long        byte[]    header    int    offset    int    length    [VARIABLES]    byte[]    header    boolean    stillPadding    int    BYTE_MASK    end    i    length    offset    long    result        	compress_3075_TarUtils_1_1	61	1	src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
1026	[PATCH]    gs    =    ge    +    1;	[BUG]    [BUGGY]    gs    =    ge    +    -1;    [FE]    java.lang.ArrayIndexOutOfBoundsException:    18002    testBzipCreation    [CONTEXT]    selector[nSelectors]    =    (char)    bt;    nSelectors++;        Increment    the    symbol    frequencies    for    the    selected    table.        for    (i    =    gs;    i    <=    ge;    i++)    {    rfreq[bt][szptr[i]]++;    }        [BUGGY]    gs    =    ge    +    -1;    }        Recompute    the    tables    based    on    the    accumulated    frequencies.        for    (t    =    0;    t    <    nGroups;    t++)    {    hbMakeCodeLengths(len[t],    rfreq[t],    alphaSize,    20);    }    }        [CLASS]        BZip2CompressorOutputStream    StackElem    [METHOD]    sendMTFValues    [RETURN_TYPE]    void        [VARIABLES]    boolean    blockRandomised    closed    firstAttempt    tooLong    int[][]    code    rfreq    CRC    mCrc    OutputStream    bsStream    f    inStream    short[]    cost    szptr    char    ll_i    tmp    tmp2    char[][]    len    short    cost0    cost1    cost2    cost3    cost4    cost5    icv    int[]    code    fave    freq    ftab    heap    incs    mtfFreq    parent    quadrant    weight    zptr    boolean[]    inUse    inUse16    int    CLEARMASK    DEPTH_THRESH    GREATER_ICOST    LESSER_ICOST    QSORT_STACK_SIZE    SETMASK    SMALL_THRESH    aFreq    allowableBlockSize    alphaSize    b    bc    blockCRC    blockSize100k    bsBuff    bsLive    bt    bv    bytesOut    c    ch    combinedCRC    curr    currentChar    dd    ge    gs    hh    i    inBlockSize    iter    j    k    last    ll    maxLen    minLen    n    n1    n2    nBlocksRandomised    nGroups    nHeap    nInUse    nMTF    nNodes    nPart    nSelectors    numBits    origPtr    remF    runLength    selCtr    t    tFreq    tmp    totc    u    v    vec    workDone    workFactor    workLimit    yy    zz    char[]    block    len    length    pos    selector    selectorMtf    seqToUnseq    unseqToSeq        	compress_9116_BZip2CompressorOutputStream_1_1	728	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java
1027	[PATCH]    ret.setInode(readAsciiLong(8,    16));	[BUG]    [BUGGY]    ret.setInode(readAsciiLong(8,    -16));    [FE]    java.lang.NumberFormatException:    radix    -16    less    than    Character.MIN_RADIX    testCpioUnarchive    [CONTEXT]    throws    IOException    {    CpioArchiveEntry    ret;    if    (hasCrc)    {    ret    =    new    CpioArchiveEntry(FORMAT_NEW_CRC);    }    else    {    ret    =    new    CpioArchiveEntry(FORMAT_NEW);    }        [BUGGY]    ret.setInode(readAsciiLong(8,    -16));    ret.setMode(readAsciiLong(8,    16));    ret.setUID(readAsciiLong(8,    16));    ret.setGID(readAsciiLong(8,    16));    ret.setNumberOfLinks(readAsciiLong(8,    16));    ret.setTime(readAsciiLong(8,    16));    ret.setSize(readAsciiLong(8,    16));    ret.setDeviceMaj(readAsciiLong(8,    16));    ret.setDeviceMin(readAsciiLong(8,    16));    ret.setRemoteDeviceMaj(readAsciiLong(8,    16));    ret.setRemoteDeviceMin(readAsciiLong(8,    16));    [CLASS]        CpioArchiveInputStream    [METHOD]    readNewEntry    [RETURN_TYPE]    CpioArchiveEntry        final    boolean    hasCrc    [VARIABLES]    byte[]    b    magic    more_magic    singleByteBuf    tmp    tmpBuffer    tmpbuf    boolean    closed    entryEOF    hasCrc    swapHalfWord    InputStream    in    CpioArchiveEntry    entry    ret    long    count    crc    entryBytesRead    namesize    skip        	compress_730_CpioArchiveInputStream_1_1	323	1	src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java
1028	[PATCH]    return    (((((bsR(8)    <<    8)    |    bsR(8))    <<    8)    |    bsR(8))    <<    8)    |    bsR(8);	[BUG]    [BUGGY]    return    (((((bsR(8)    <<    8)    |    bsR(-8))    <<    8)    |    bsR(8))    <<    8)    |    bsR(8);    [FE]    org.apache.commons.compress.compressors.CompressorException:    Could    not    create    CompressorInputStream    testBzip2Unarchive    [CONTEXT]    private    int    bsGetInt()    throws    IOException    {    [BUGGY]    return    (((((bsR(8)    <<    8)    |    bsR(-8))    <<    8)    |    bsR(8))    <<    8)    |    bsR(8);    }    [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    bsGetInt    [RETURN_TYPE]    int        [VARIABLES]    int[][]    base    limit    perm    InputStream    in    inShadow    char[][]    temp_charArray2d    Data    data    int[]    cftab    minLens    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    b    blockSize    blockSize100k    bsBuff    bsBuffShadow    bsLive    bsLiveShadow    computedBlockCRC    computedCombinedCRC    currentChar    currentState    destOffs    hi    i    last    len    magic    n    nInUse    nInUseShadow    offs    origPtr    retChar    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    thech    char[]    getAndMoveToFrontDecode_yy    byte[]    dest    ll8    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    expected    magic0    magic1    magic2    magic3    magic4    magic5    su_z    boolean[]    inUse        	compress_5459_BZip2CompressorInputStream_1_1	382	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
1029	[PATCH]    if    (!this.canEncodeChar(c))    {	[BUG]    [BUGGY]    if    (!false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<true>    but    was:<false>    testSimpleCp437Encoding    [CONTEXT]    public    boolean    canEncode(String    name)    {    for    (int    i=0;i<name.length();++i)    {    char    c    =    name.charAt(i);        [BUGGY]    if    (!false)    {    return    false;    }    }    return    true;    }    [CLASS]        Simple8BitZipEncoding    Simple8BitChar    [METHOD]    canEncode    [RETURN_TYPE]    boolean        String    name    [VARIABLES]    boolean    byte    b    code    char    c    unicode    List    reverseMapping    String    name    int    i    char[]    highChars        	compress_3836_Simple8BitZipEncoding_1_1	210	1	src/main/java/org/apache/commons/compress/archivers/zip/Simple8BitZipEncoding.java
1030	[PATCH]    long    value    =    (bytes[offset    +    BYTE_3]    <<    BYTE_3_SHIFT)    &    BYTE_3_MASK;	[BUG]    [BUGGY]    long    value    =    (bytes[offset    +    BYTE_3]    <<    BYTE_3_SHIFT)    ^    BYTE_3_MASK;    [FE]    java.io.EOFException    testJarMarker    [CONTEXT]    public    static    long    getValue(byte[]    bytes,    int    offset)    {    [BUGGY]    long    value    =    (bytes[offset    +    BYTE_3]    <<    BYTE_3_SHIFT)    ^    BYTE_3_MASK;    value    +=    (bytes[offset    +    BYTE_2]    <<    BYTE_2_SHIFT)    &    BYTE_2_MASK;    value    +=    (bytes[offset    +    BYTE_1]    <<    BYTE_1_SHIFT)    &    BYTE_1_MASK;    value    +=    (bytes[offset]    &    BYTE_MASK);    return    value;    }    [CLASS]        ZipLong    [METHOD]    getValue    [RETURN_TYPE]    long        byte[]    bytes    int    offset    [VARIABLES]    byte[]    bytes    boolean    int    BYTE_1    BYTE_1_MASK    BYTE_1_SHIFT    BYTE_2    BYTE_2_MASK    BYTE_2_SHIFT    BYTE_3    BYTE_3_SHIFT    BYTE_MASK    WORD    offset    long    BYTE_3_MASK    value        	compress_4837_ZipLong_1_1	106	1	src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java
1031	[PATCH]    if    (extraFields    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.NullPointerException    testZipFileReadsUnicodeFields    [CONTEXT]    public    void    addExtraField(ZipExtraField    ze)    {    [BUGGY]    if    (false)    {    extraFields    =    new    LinkedHashMap();    }    extraFields.put(ze.getHeaderId(),    ze);    setExtra();    }    [CLASS]        ZipArchiveEntry    [METHOD]    addExtraField    [RETURN_TYPE]    void        ZipExtraField    ze    [VARIABLES]    ZipExtraField    ze    String    name    boolean    int    PLATFORM_FAT    PLATFORM_UNIX    SHORT_MASK    SHORT_SHIFT    i    internalAttributes    mode    platform    value    long    externalAttributes    value    LinkedHashMap    extraFields        	compress_1552_ZipArchiveEntry_1_1	209	1	src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java
1032	[PATCH]    long                result    =    0;	[BUG]    [BUGGY]    long        result    =    -1;    [FE]    junit.framework.ComparisonFailure:    expected:<[bar.txt]>    but    was:<[hello    ]>    testTarFileWithFSRoot    [CONTEXT]    public    static    long    parseOctal(byte[]    header,    int    offset,    int    length)    {    [BUGGY]    longresult    =    -1;    boolean    stillPadding    =    true;    int    end    =    offset    +    length;    for    (int    i    =    offset;    i    <    end;    ++i)    {    if    (header[i]    ==    0)    {    break;    }    if    (header[i]    ==    (byte)    '    '    ||    header[i]    ==    '0')    {    if    (stillPadding)    {    [CLASS]        TarUtils    [METHOD]    parseOctal    [RETURN_TYPE]    long        byte[]    header    int    offset    int    length    [VARIABLES]    byte[]    header    boolean    stillPadding    int    BYTE_MASK    end    i    length    offset    long    result        	compress_3034_TarUtils_1_1	40	1	src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
1033	[PATCH]    System.arraycopy(data,    0,    result,    WORD,    data.length);	[BUG]    [BUGGY]    System.arraycopy(data,    -1,    result,    WORD,    data.length);    [FE]    java.lang.ArrayIndexOutOfBoundsException    testContent    [CONTEXT]    System.arraycopy(linkArray,    0,    data,    10,    linkArray.length);        crc.reset();    crc.update(data);    long    checksum    =    crc.getValue();    byte[]    result    =    new    byte[data.length    +    WORD];    System.arraycopy(ZipLong.getBytes(checksum),    0,    result,    0,    WORD);    [BUGGY]    System.arraycopy(data,    -1,    result,    WORD,    data.length);    return    result;    }    [CLASS]        AsiExtraField    [METHOD]    getLocalFileDataData    [RETURN_TYPE]    byte[]        [VARIABLES]    byte[]    data    linkArray    result    ZipShort    HEADER_ID    boolean    dirFlag    CRC32    crc    String    link    int    WORD    gid    mode    uid    long    checksum        	compress_3420_AsiExtraField_1_1	144	1	src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java
1034	[PATCH]    for    (int    i    =    0;    i    <    16;    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    0;    i    <    0;    i++)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    18002    testBzip2Unarchive    [CONTEXT]    for    (int    i    =    0;    i    <    16;    i++)    {    if    (bsGetBit())    {    inUse16    |=    1    <<    i;    }    }    for    (int    i    =    256;    --i    >=    0;)    {    inUse[i]    =    false;    }        [BUGGY]    for    (int    i    =    0;    i    <    0;    i++)    {    if    ((inUse16    &    (1    <<    i))    !=    0)    {    final    int    i16    =    i    <<    4;    for    (int    j    =    0;    j    <    16;    j++)    {    if    (bsGetBit())    {    inUse[i16    +    j]    =    true;    }    }    }    }        [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    recvDecodingTables    [RETURN_TYPE]    void        [VARIABLES]    int[][]    base    limit    perm    InputStream    in    inShadow    byte    tmp    char[][]    len    temp_charArray2d    Data    data    dataShadow    int[]    base    cftab    limit    minLens    perm    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    alphaSize    b    blockSize    blockSize100k    bsBuff    bsBuffShadow    bsLive    bsLiveShadow    computedBlockCRC    computedCombinedCRC    curr    currentChar    currentState    destOffs    hi    i    i16    inUse16    j    last    len    magic    maxLen    minLen    n    nGroups    nInUse    nInUseShadow    nSelectors    nb    offs    origPtr    pp    retChar    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    t    thech    v    vec    char[]    getAndMoveToFrontDecode_yy    len_t    length    byte[]    dest    ll8    pos    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    expected    magic0    magic1    magic2    magic3    magic4    magic5    su_z    boolean[]    inUse        	compress_5608_BZip2CompressorInputStream_1_1	446	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
1035	[PATCH]    if    (o    ==    null    ||    !(o    instanceof    ZipShort))    {	[BUG]    [BUGGY]    if    (o    ==    null)    {    [FE]    java.lang.ClassCastException:    java.lang.Integer    cannot    be    cast    to    org.apache.commons.compress.archivers.zip.ZipShort    testEquals    [CONTEXT]    public    boolean    equals(Object    o)    {    [BUGGY]    if    (o    ==    null)    {    return    false;    }    return    value    ==    ((ZipShort)    o).getValue();    }    [CLASS]        ZipShort    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    o    [VARIABLES]    int    BYTE_1_MASK    BYTE_1_SHIFT    BYTE_MASK    offset    value    Object    o    boolean        	compress_1643_ZipShort_1_1	115	1	src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java
1036	[PATCH]    for    (int    v    =    nGroups;    --v    >=    0;)    {	[BUG]    [BUGGY]    for    (int    v    =    nGroups;    --v    >=    -1;)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testBzip2Unarchive    [CONTEXT]    for    (int    i    =    0;    i    <    nSelectors;    i++)    {    int    j    =    0;    while    (bsGetBit())    {    j++;    }    selectorMtf[i]    =    (byte)    j;    }            [BUGGY]    for    (int    v    =    nGroups;    --v    >=    -1;)    {    pos[v]    =    (byte)    v;    }    for    (int    i    =    0;    i    <    nSelectors;    i++)    {    int    v    =    selectorMtf[i]    &    0xff;    final    byte    tmp    =    pos[v];    while    (v    >    0)    {        pos[v]    =    pos[v    -    1];    v--;    [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    recvDecodingTables    [RETURN_TYPE]    void        [VARIABLES]    int[][]    base    limit    perm    InputStream    in    inShadow    byte    tmp    char[][]    len    temp_charArray2d    Data    data    dataShadow    int[]    base    cftab    limit    minLens    perm    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    alphaSize    b    blockSize    blockSize100k    bsBuff    bsBuffShadow    bsLive    bsLiveShadow    computedBlockCRC    computedCombinedCRC    curr    currentChar    currentState    destOffs    hi    i    i16    inUse16    j    last    len    magic    maxLen    minLen    n    nGroups    nInUse    nInUseShadow    nSelectors    nb    offs    origPtr    pp    retChar    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    t    thech    v    vec    char[]    getAndMoveToFrontDecode_yy    len_t    length    byte[]    dest    ll8    pos    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    expected    magic0    magic1    magic2    magic3    magic4    magic5    su_z    boolean[]    inUse        	compress_5664_BZip2CompressorInputStream_1_1	473	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
1037	[PATCH]    buf[offset    +    i]    =    0;	[BUG]    [BUGGY]    buf[offset    +    i]    =    1;    [FE]    junit.framework.ComparisonFailure:    expected:</[]>    but    was:</[]>    testTarFileWithFSRoot    [CONTEXT]    public    static    int    getNameBytes(StringBuffer    name,    byte[]    buf,    int    offset,    int    length)    {    int    i;    for    (i    =    0;    i    <    length    &&    i    <    name.length();    ++i)    {    buf[offset    +    i]    =    (byte)    name.charAt(i);    }    for    (;    i    <    length;    ++i)    {    [BUGGY]    buf[offset    +    i]    =    1;    }    return    offset    +    length;    }    [CLASS]        TarUtils    [METHOD]    getNameBytes    [RETURN_TYPE]    int        StringBuffer    name    byte[]    buf    int    offset    int    length    [VARIABLES]    byte[]    buf    StringBuffer    name    boolean    int    BYTE_MASK    end    i    length    offset        	compress_3115_TarUtils_1_1	108	1	src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
1038	[PATCH]    if    (off    <    0    ||    len    <    0    ||    off    >    b.length    -    len)    {	[BUG]    [BUGGY]    if    (true    ||    off    >    b.length    -    len)    {    [FE]    java.lang.IndexOutOfBoundsException    testCpioUnarchive    [CONTEXT]    public    void    write(final    byte[]    b,    final    int    off,    final    int    len)    throws    IOException    {    ensureOpen();    [BUGGY]    if    (true    ||    off    >    b.length    -    len)    {    throw    new    IndexOutOfBoundsException();    }    else    if    (len    ==    0)    {    return;    }    if    (this.cpioEntry    ==    null)    {    throw    new    IOException(   "no    current    CPIO    entry   ");    }    if    (this.written    +    len    >    this.cpioEntry.getSize())    {    throw    new    IOException(   "attempt    to    write    past    end    of    STORED    entry   ");    [CLASS]        CpioArchiveOutputStream    [METHOD]    write    [RETURN_TYPE]    void        final    byte[]    b    final    int    off    final    int    len    [VARIABLES]    byte[]    b    boolean    closed    finished    swapHalfWord    HashMap    names    OutputStream    out    short    entryFormat    format    CpioArchiveEntry    cpioEntry    e    entry    long    crc    written    int    len    off    pos        	compress_1254_CpioArchiveOutputStream_1_1	290	1	src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java
1039	[PATCH]    hasEFS    ?    ZipEncodingHelper.UTF8_ZIP_ENCODING    :    zipEncoding;	[BUG]    [BUGGY]    true    ?    ZipEncodingHelper.UTF8_ZIP_ENCODING    :    zipEncoding;    [FE]    junit.framework.AssertionFailedError:    expected:<2012925693>    but    was:<2965532848>    testCP437FileRoundtripImplicitUnicodeExtra    [CONTEXT]    int    versionMadeBy    =    ZipShort.getValue(cfh,    off);    off    +=    SHORT;    ze.setPlatform((versionMadeBy    >>    BYTE_SHIFT)    &    NIBLET_MASK);    off    +=    SHORT;        final    int    generalPurposeFlag    =    ZipShort.getValue(cfh,    off);    final    boolean    hasEFS    =    (generalPurposeFlag    &    ZipArchiveOutputStream.EFS_FLAG)    !=    0;    final    ZipEncoding    entryEncoding    =    [BUGGY]    true    ?    ZipEncodingHelper.UTF8_ZIP_ENCODING    :    zipEncoding;    off    +=    SHORT;    ze.setMethod(ZipShort.getValue(cfh,    off));    off    +=    SHORT;                long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(cfh,    off));    [CLASS]        ZipFile    OffsetEntry    BoundedInputStream    NameAndComment    [METHOD]    populateFromCentralDirectory    [RETURN_TYPE]    Map        [VARIABLES]    byte[]    cdExtraData    cfh    comment    fileName    name    signatureBytes    boolean    addDummyByte    hasEFS    success    useUnicodeExtraFields    ZipEncoding    entryEncoding    zipEncoding    RandomAccessFile    archive    HashMap    noEFS    OffsetEntry    offset    ZipArchiveEntry    ze    String    encoding    name    Map    entries    entriesWithoutEFS    nameMap    int    BYTE_SHIFT    CFD_LOCATOR_OFFSET    CFH_LEN    HASH_SIZE    MAX_EOCD_SIZE    MIN_EOCD_SIZE    NIBLET_MASK    POS_0    POS_1    POS_2    POS_3    SHORT    WORD    commentLen    extraLen    fileNameLen    generalPurposeFlag    off    versionMadeBy    long    LFH_OFFSET_FOR_FILENAME_LENGTH    cfhSig    dataOffset    headerOffset    loc    remaining    sig    start    time        	compress_4576_ZipFile_1_1	337	1	src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java
1040	[PATCH]    if    ((offset    +    recordSize)    >    buf.length)    {	[BUG]    [BUGGY]    if    ((offset    +    recordSize)    !=    buf.length)    {    [FE]    java.io.IOException:    record    has    length    '8024'    with    offset    '0'    which    is    less    than    the    record    size    of    '512'    testDeleteFromTar    [CONTEXT]    public    void    writeRecord(byte[]    buf,    int    offset)    throws    IOException    {    if    (debug)    {    System.err.println(   "WriteRecord:    recIdx    =       "    +    currRecIdx    +       "    blkIdx    =       "    +    currBlkIdx);    }    if    (outStream    ==    null)    {    throw    new    IOException(   "writing    to    an    input    buffer   ");    }        [BUGGY]    if    ((offset    +    recordSize)    !=    buf.length)    {    throw    new    IOException(   "record    has    length    '   "    +    buf.length    +       "'    with    offset    '   "    +    offset    +       "'    which    is    less    than    the    record    size    of    '   "    +    recordSize    +       "'   ");    }    if    (currRecIdx    >=    recsPerBlock)    {    writeBlock();    }        [CLASS]        TarBuffer    [METHOD]    writeRecord    [RETURN_TYPE]    void        byte[]    buf    int    offset    [VARIABLES]    byte[]    blockBuffer    buf    record    result    boolean    debug    InputStream    inStream    int    DEFAULT_BLKSIZE    DEFAULT_RCDSIZE    blockSize    bytesNeeded    currBlkIdx    currRecIdx    i    offset    recordSize    recsPerBlock    sz    OutputStream    outStream        	compress_2829_TarBuffer_1_1	375	1	src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java
1041	[PATCH]    if    (off    <    0    ||    len    <    0    ||    off    >    b.length    -    len)    {	[BUG]    [BUGGY]    if    (off    <    1    ||    len    <    0    ||    off    >    b.length    -    len)    {    [FE]    java.lang.IndexOutOfBoundsException    testCpioUnarchive    [CONTEXT]    throws    IOException    {    ensureOpen();    [BUGGY]    if    (off    <    1    ||    len    <    0    ||    off    >    b.length    -    len)    {    throw    new    IndexOutOfBoundsException();    }    else    if    (len    ==    0)    {    return    0;    }    if    (this.entry    ==    null    ||    this.entryEOF)    {    return    -1;    }    if    (this.entryBytesRead    ==    this.entry.getSize())    {    if    ((this.entry.getFormat()    |    FORMAT_NEW_MASK)    ==    FORMAT_NEW_MASK)    {    [CLASS]        CpioArchiveInputStream    [METHOD]    read    [RETURN_TYPE]    int        final    byte[]    b    final    int    off    final    int    len    [VARIABLES]    byte[]    b    magic    more_magic    singleByteBuf    tmp    tmpbuf    boolean    closed    entryEOF    InputStream    in    CpioArchiveEntry    entry    long    count    crc    entryBytesRead    skip    int    len    off    pos    tmplength    tmpread        	compress_598_CpioArchiveInputStream_1_1	244	1	src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java
1042	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    org.apache.commons.compress.archivers.ArchiveException:    No    Archiver    found    for    the    stream    signature    testDetection    [CONTEXT]    if    (signature[5]    !=    0x68)    {    return    false;    }    if    (signature[6]    !=    0x3e)    {    return    false;    }    if    (signature[7]    !=    0x0a)    {    return    false;    }        [BUGGY]    return    false;    }    [CLASS]        ArArchiveInputStream    [METHOD]    matches    [RETURN_TYPE]    boolean        byte[]    signature    int    length    [VARIABLES]    byte[]    signature    boolean    InputStream    input    pInput    long    offset    int    length        	compress_205_ArArchiveInputStream_1_1	149	1	src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java
1043	[PATCH]    if    (start    +    WORD    +    length    >    data.length)    {	[BUG]    [BUGGY]    if    ((start    +    WORD)    /    length    >    data.length)    {    [FE]    java.lang.ArithmeticException:    /    by    zero    testJarUnarchive    [CONTEXT]    throws    ZipException    {    List    v    =    new    ArrayList();    int    start    =    0;    while    (start    <=    data.length    -    WORD)    {    ZipShort    headerId    =    new    ZipShort(data,    start);    int    length    =    (new    ZipShort(data,    start    +    2)).getValue();    [BUGGY]    if    ((start    +    WORD)    /    length    >    data.length)    {    throw    new    ZipException(   "data    starting    at       "    +    start    +       "    is    in    unknown    format   ");    }    try    {    ZipExtraField    ze    =    createExtraField(headerId);    if    (local)    {    ze.parseFromLocalFileData(data,    start    +    WORD,    length);    }    else    {    ze.parseFromCentralDirectoryData(data,    start    +    WORD,    length);    [CLASS]        ExtraFieldUtils    [METHOD]    parse    [RETURN_TYPE]    ZipExtraField[]        byte[]    data    boolean    local    [VARIABLES]    byte[]    data    ZipExtraField    ze    ZipShort    headerId    boolean    local    ZipExtraField[]    result    List    v    Map    implementations    int    WORD    length    start    InstantiationException    ie    IllegalAccessException    iae        	compress_3531_ExtraFieldUtils_1_1	114	1	src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java
1044	[PATCH]    +    res.length()    *    6);	[BUG]    [BUGGY]    +    res.length()    *    0);    [FE]    java.nio.BufferOverflowException    testNioCp1252Encoding    [CONTEXT]    while    (cb.remaining()    >    0)    {    CoderResult    res    =    enc.encode(cb,    out,true);    if    (res.isUnmappable()    ||    res.isMalformed())    {            if    (res.length()    *    6    >    out.remaining())    {    out    =    ZipEncodingHelper.growBuffer(out,    out.position()    [BUGGY]    +    res.length()    *    0);    }    for    (int    i=0;    i<res.length();    ++i)    {    ZipEncodingHelper.appendSurrogate(out,cb.get());    }    }    else    if    (res.isOverflow())    {    out    =    ZipEncodingHelper.growBuffer(out,    0);        [CLASS]        NioZipEncoding    [METHOD]    encode    [RETURN_TYPE]    ByteBuffer        String    name    [VARIABLES]    boolean    CharBuffer    cb    Charset    charset    String    name    CharsetEncoder    enc    ByteBuffer    out    int    i    CoderResult    res        	compress_3697_NioZipEncoding_1_1	88	1	src/main/java/org/apache/commons/compress/archivers/zip/NioZipEncoding.java
1045	[PATCH]    return    offset    +    length;	[BUG]    [BUGGY]    return    offset    %    length;    [FE]    junit.framework.ComparisonFailure:    expected:<foo.[txt]>    but    was:<foo.[    3776]>    testTarFileWithFSRoot    [CONTEXT]    public    static    int    getLongOctalBytes(long    value,    byte[]    buf,    int    offset,    int    length)    {    byte[]    temp    =    new    byte[length    +    1];    getOctalBytes(value,    temp,    0,    length    +    1);    System.arraycopy(temp,    0,    buf,    offset,    length);        [BUGGY]    return    offset    %    length;    }    [CLASS]        TarUtils    [METHOD]    getLongOctalBytes    [RETURN_TYPE]    int        long    value    byte[]    buf    int    offset    int    length    [VARIABLES]    byte[]    buf    temp    boolean    int    BYTE_MASK    end    i    idx    length    offset    long    value        	compress_3217_TarUtils_1_1	165	1	src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
1046	[PATCH]    setDirectory((newMode    &    DIR_FLAG)    !=    0);	[BUG]    [BUGGY]    setDirectory((newMode    &    DIR_FLAG)    !=    1);    [FE]    junit.framework.AssertionFailedError:    plain    file,    no    dir    testReparse    [CONTEXT]    uid    =    ZipShort.getValue(tmp,    6);    gid    =    ZipShort.getValue(tmp,    8);    if    (linkArray.length    ==    0)    {    link    =       "   ";    }    else    {    System.arraycopy(tmp,    10,    linkArray,    0,    linkArray.length);    link    =    new    String(linkArray);    }        [BUGGY]    setDirectory((newMode    &    DIR_FLAG)    !=    1);    setMode(newMode);    }    [CLASS]        AsiExtraField    [METHOD]    parseFromLocalFileData    [RETURN_TYPE]    void        byte[]    data    int    offset    int    length    [VARIABLES]    byte[]    data    linkArray    tmp    ZipShort    HEADER_ID    boolean    dirFlag    CRC32    crc    String    link    name    int    WORD    gid    length    mode    newMode    offset    uid    long    givenChecksum    realChecksum        	compress_3482_AsiExtraField_1_1	286	1	src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java
1047	[PATCH]    for    (int    i    =    minLen,    pp    =    0;    i    <=    maxLen;    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    minLen,    pp    =    -1;    i    <=    maxLen;    i++)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testBzip2Unarchive    [CONTEXT]    final    int    minLen,    final    int    maxLen,    final    int    alphaSize)    {    [BUGGY]    for    (int    i    =    minLen,    pp    =    -1;    i    <=    maxLen;    i++)    {    for    (int    j    =    0;    j    <    alphaSize;    j++)    {    if    (length[j]    ==    i)    {    perm[pp++]    =    j;    }    }    }    for    (int    i    =    MAX_CODE_LEN;    --i    >    0;)    {    base[i]    =    0;    limit[i]    =    0;    [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    hbCreateDecodeTables    [RETURN_TYPE]    void        final    int[]    limit    final    int[]    base    final    int[]    perm    final    char[]    length    final    int    minLen    final    int    maxLen    final    int    alphaSize    [VARIABLES]    int[][]    base    limit    perm    InputStream    in    inShadow    char[][]    temp_charArray2d    Data    data    int[]    base    cftab    limit    minLens    perm    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    alphaSize    b    blockSize    blockSize100k    bsBuff    bsBuffShadow    bsLive    bsLiveShadow    computedBlockCRC    computedCombinedCRC    currentChar    currentState    destOffs    hi    i    j    last    len    magic    maxLen    minLen    n    nInUse    nInUseShadow    nb    offs    origPtr    pp    retChar    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    thech    vec    char[]    getAndMoveToFrontDecode_yy    length    byte[]    dest    ll8    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    expected    magic0    magic1    magic2    magic3    magic4    magic5    su_z    boolean[]    inUse        	compress_5479_BZip2CompressorInputStream_1_1	391	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
1048	[PATCH]    base[length[i]    +    1]++;	[BUG]    [BUGGY]    base[length[i]    +    -1]++;    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -3    testBzip2Unarchive    [CONTEXT]    }    }    }    for    (int    i    =    MAX_CODE_LEN;    --i    >    0;)    {    base[i]    =    0;    limit[i]    =    0;    }    for    (int    i    =    0;    i    <    alphaSize;    i++)    {    [BUGGY]    base[length[i]    +    -1]++;    }    for    (int    i    =    1,    b    =    base[0];    i    <    MAX_CODE_LEN;    i++)    {    b    +=    base[i];    base[i]    =    b;    }    for    (int    i    =    minLen,    vec    =    0,    b    =    base[i];    i    <=    maxLen;    i++)    {    final    int    nb    =    base[i    +    1];    vec    +=    nb    -    b;    [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    hbCreateDecodeTables    [RETURN_TYPE]    void        final    int[]    limit    final    int[]    base    final    int[]    perm    final    char[]    length    final    int    minLen    final    int    maxLen    final    int    alphaSize    [VARIABLES]    int[][]    base    limit    perm    InputStream    in    inShadow    char[][]    temp_charArray2d    Data    data    int[]    base    cftab    limit    minLens    perm    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    alphaSize    b    blockSize    blockSize100k    bsBuff    bsBuffShadow    bsLive    bsLiveShadow    computedBlockCRC    computedCombinedCRC    currentChar    currentState    destOffs    hi    i    j    last    len    magic    maxLen    minLen    n    nInUse    nInUseShadow    nb    offs    origPtr    pp    retChar    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    thech    vec    char[]    getAndMoveToFrontDecode_yy    length    byte[]    dest    ll8    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    expected    magic0    magic1    magic2    magic3    magic4    magic5    su_z    boolean[]    inUse        	compress_5509_BZip2CompressorInputStream_1_1	405	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
1049	[PATCH]    int                    end    =    offset    +    length;	[BUG]    [BUGGY]    int            end    =    offset    /    length;    [FE]    junit.framework.ComparisonFailure:    expected:<[bar.txt]>    but    was:<[hello    ]>    testTarFileWithFSRoot    [CONTEXT]    public    static    long    parseOctal(byte[]    header,    int    offset,    int    length)    {    longresult    =    0;    boolean    stillPadding    =    true;    [BUGGY]    int    end    =    offset    /    length;    for    (int    i    =    offset;    i    <    end;    ++i)    {    if    (header[i]    ==    0)    {    break;    }    if    (header[i]    ==    (byte)    '    '    ||    header[i]    ==    '0')    {    if    (stillPadding)    {    continue;    }    [CLASS]        TarUtils    [METHOD]    parseOctal    [RETURN_TYPE]    long        byte[]    header    int    offset    int    length    [VARIABLES]    byte[]    header    boolean    stillPadding    int    BYTE_MASK    end    i    length    offset    long    result        	compress_3039_TarUtils_1_1	42	1	src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
1050	[PATCH]    |    ((mode    &    0200)    ==    0    ?    1    :    0)	[BUG]    [BUGGY]    |    ((mode    &    0200)    ==    0    ?    0    :    0)    [FE]    junit.framework.AssertionFailedError:    expected:<1>    but    was:<0>    testUnixMode    [CONTEXT]    public    void    setUnixMode(int    mode)    {        setExternalAttributes((mode    <<    SHORT_SHIFT)        [BUGGY]    |    ((mode    &    0200)    ==    0    ?    0    :    0)        |    (isDirectory()    ?    0x10    :    0));        platform    =    PLATFORM_UNIX;    }    [CLASS]        ZipArchiveEntry    [METHOD]    setUnixMode    [RETURN_TYPE]    void        int    mode    [VARIABLES]    String    name    boolean    int    PLATFORM_FAT    PLATFORM_UNIX    SHORT_MASK    SHORT_SHIFT    internalAttributes    mode    platform    value    long    externalAttributes    value    LinkedHashMap    extraFields        	compress_1515_ZipArchiveEntry_1_1	141	1	src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java
1051	[PATCH]    if    (signature[3]    !=    0x72)    {	[BUG]    [BUGGY]    if    (signature[0]    !=    0x72)    {    [FE]    org.apache.commons.compress.archivers.ArchiveException:    No    Archiver    found    for    the    stream    signature    testDetection    [CONTEXT]    }    if    (signature[0]    !=    0x21)    {    return    false;    }    if    (signature[1]    !=    0x3c)    {    return    false;    }    if    (signature[2]    !=    0x61)    {    return    false;    }    [BUGGY]    if    (signature[0]    !=    0x72)    {    return    false;    }    if    (signature[4]    !=    0x63)    {    return    false;    }    if    (signature[5]    !=    0x68)    {    return    false;    }    if    (signature[6]    !=    0x3e)    {    return    false;    [CLASS]        ArArchiveInputStream    [METHOD]    matches    [RETURN_TYPE]    boolean        byte[]    signature    int    length    [VARIABLES]    byte[]    signature    boolean    InputStream    input    pInput    long    offset    int    length        	compress_165_ArArchiveInputStream_1_1	133	1	src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java
1052	[PATCH]    int    lastShadow    =    -1;	[BUG]    [BUGGY]    int    lastShadow    =    1;    [FE]    java.io.IOException:    BZip2    CRC    error    testBzip2Unarchive    [CONTEXT]    yy[i]    =    (char)    i;    unzftab[i]    =    0;    }    int    groupNo    =    0;    int    groupPos    =    G_SIZE    -    1;    final    int    eob    =    this.nInUse    +    1;    int    nextSym    =    getAndMoveToFrontDecode0(0);    int    bsBuffShadow    =    this.bsBuff;    int    bsLiveShadow    =    this.bsLive;    [BUGGY]    int    lastShadow    =    1;    int    zt    =    selector[groupNo]    &    0xff;    int[]    base_zt    =    base[zt];    int[]    limit_zt    =    limit[zt];    int[]    perm_zt    =    perm[zt];    int    minLens_zt    =    minLens[zt];    while    (nextSym    !=    eob)    {    if    ((nextSym    ==    RUNA)    ||    (nextSym    ==    RUNB))    {    int    s    =    -1;        [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    getAndMoveToFrontDecode    [RETURN_TYPE]    void        [VARIABLES]    int[][]    base    limit    perm    InputStream    in    inShadow    byte    ch    char[][]    len    temp_charArray2d    Data    data    dataShadow    int[]    base    base_zt    cftab    limit    limit_zt    minLens    perm    perm_zt    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    alphaSize    b    blockSize    blockSize100k    bsBuff    bsBuffShadow    bsLive    bsLiveShadow    computedBlockCRC    computedCombinedCRC    curr    currentChar    currentState    destOffs    eob    groupNo    groupPos    hi    i    i16    inUse16    j    last    lastShadow    len    limitLast    magic    maxLen    minLen    minLens_zt    n    nGroups    nInUse    nInUseShadow    nSelectors    nb    nextSym    offs    origPtr    pp    retChar    s    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    t    thech    v    vec    zn    zt    zvec    char[]    getAndMoveToFrontDecode_yy    len_t    length    yy    byte[]    dest    ll8    pos    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    expected    lent    magic0    magic1    magic2    magic3    magic4    magic5    su_z    tmp    boolean[]    inUse        	compress_5778_BZip2CompressorInputStream_1_1	571	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
1053	[PATCH]    if    (thech    <    0)    {	[BUG]    [BUGGY]    if    (thech    <    1)    {    [FE]    org.apache.commons.compress.compressors.CompressorException:    Could    not    create    CompressorInputStream    testBzip2Unarchive    [CONTEXT]    private    boolean    bsGetBit()    throws    IOException    {    int    bsLiveShadow    =    this.bsLive;    int    bsBuffShadow    =    this.bsBuff;    if    (bsLiveShadow    <    1)    {    int    thech    =    this.in.read();        [BUGGY]    if    (thech    <    1)    {    throw    new    IOException(   "unexpected    end    of    stream   ");    }    bsBuffShadow    =    (bsBuffShadow    <<    8)    |    thech;    bsLiveShadow    +=    8;    this.bsBuff    =    bsBuffShadow;    }    this.bsLive    =    bsLiveShadow    -    1;    return    ((bsBuffShadow    >>    (bsLiveShadow    -    1))    &    1)    !=    0;    [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    bsGetBit    [RETURN_TYPE]    boolean        [VARIABLES]    int[][]    base    limit    perm    InputStream    in    inShadow    char[][]    temp_charArray2d    Data    data    int[]    cftab    minLens    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    b    blockSize    blockSize100k    bsBuff    bsBuffShadow    bsLive    bsLiveShadow    computedBlockCRC    computedCombinedCRC    currentChar    currentState    destOffs    hi    i    last    len    magic    n    nInUse    nInUseShadow    offs    origPtr    retChar    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    thech    char[]    getAndMoveToFrontDecode_yy    byte[]    dest    ll8    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    expected    magic0    magic1    magic2    magic3    magic4    magic5    su_z    boolean[]    inUse        	compress_5410_BZip2CompressorInputStream_1_1	364	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
1054	[PATCH]    int    zvec    =    (bsBuffShadow    >>    (bsLiveShadow    -    zn))	[BUG]    [BUGGY]    int    zvec    =    (bsBuffShadow    >>    (bsLiveShadow    %    zn))    [FE]    java.io.IOException:    BZip2    CRC    error    testBzip2Unarchive    [CONTEXT]    while    (bsLiveShadow    <    zn)    {    final    int    thech    =    inShadow.read();    if    (thech    >=    0)    {    bsBuffShadow    =    (bsBuffShadow    <<    8)    |    thech;    bsLiveShadow    +=    8;    continue;    }    else    {    throw    new    IOException(   "unexpected    end    of    stream   ");    }    }    [BUGGY]    int    zvec    =    (bsBuffShadow    >>    (bsLiveShadow    %    zn))    &    ((1    <<    zn)    -    1);    bsLiveShadow    -=    zn;    while    (zvec    >    limit_zt[zn])    {    zn++;    while    (bsLiveShadow    <    1)    {    final    int    thech    =    inShadow.read();    if    (thech    >=    0)    {    bsBuffShadow    =    (bsBuffShadow    <<    8)    |    thech;    bsLiveShadow    +=    8;    [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    getAndMoveToFrontDecode    [RETURN_TYPE]    void        [VARIABLES]    int[][]    base    limit    perm    InputStream    in    inShadow    byte    ch    char[][]    len    temp_charArray2d    Data    data    dataShadow    int[]    base    base_zt    cftab    limit    limit_zt    minLens    perm    perm_zt    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    alphaSize    b    blockSize    blockSize100k    bsBuff    bsBuffShadow    bsLive    bsLiveShadow    computedBlockCRC    computedCombinedCRC    curr    currentChar    currentState    destOffs    eob    groupNo    groupPos    hi    i    i16    inUse16    j    last    lastShadow    len    limitLast    magic    maxLen    minLen    minLens_zt    n    nGroups    nInUse    nInUseShadow    nSelectors    nb    nextSym    offs    origPtr    pp    retChar    s    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    t    thech    v    vec    zn    zt    zvec    char[]    getAndMoveToFrontDecode_yy    len_t    length    yy    byte[]    dest    ll8    pos    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    expected    lent    magic0    magic1    magic2    magic3    magic4    magic5    su_z    tmp    boolean[]    inUse        	compress_5854_BZip2CompressorInputStream_1_1	616	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
1055	[PATCH]    nameCRC32    =    ZipLong.getValue(buffer,    offset    +    1);	[BUG]    [BUGGY]    nameCRC32    =    ZipLong.getValue(buffer,    offset    *    1);    [FE]    junit.framework.AssertionFailedError    testZipFileReadsUnicodeFields    [CONTEXT]    +       "    5    bytes.   ");    }    int    version    =    buffer[offset];    if    (version    !=    0x01)    {    throw    new    ZipException(   "Unsupported    version    [   "    +    version    +       "]    for    UniCode    path    extra    data.   ");    }        [BUGGY]    nameCRC32    =    ZipLong.getValue(buffer,    offset    *    1);    unicodeName    =    new    byte[length    -    5];    System.arraycopy(buffer,    offset    +    5,    unicodeName,    0,    length    -    5);    data    =    null;    }    [CLASS]        AbstractUnicodeExtraField    [METHOD]    parseFromLocalFileData    [RETURN_TYPE]    void        byte[]    buffer    int    offset    int    length    [VARIABLES]    byte[]    buffer    bytes    data    unicodeName    boolean    long    nameCRC32    int    length    offset    version        	compress_3310_AbstractUnicodeExtraField_1_1	156	1	src/main/java/org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.java
1056	[PATCH]    if    (data    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.RuntimeException    testZipFileReadsUnicodeFields    [CONTEXT]    public    byte[]    getCentralDirectoryData()    {    [BUGGY]    if    (false)    {    this.assembleData();    }    return    data;    }    [CLASS]        AbstractUnicodeExtraField    [METHOD]    getCentralDirectoryData    [RETURN_TYPE]    byte[]        [VARIABLES]    byte[]    bytes    data    unicodeName    long    nameCRC32    boolean        	compress_3293_AbstractUnicodeExtraField_1_1	120	1	src/main/java/org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.java
1057	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    java.lang.NullPointerException    testTarUnarchive    [CONTEXT]    if    (debug)    {    System.err.println(   "ReadBlock:    INCOMPLETE    READ       "    +    numBytes    +       "    of       "    +    blockSize    +       "    bytes    read.   ");    }    }    }    currBlkIdx++;        [BUGGY]    return    false;    }    [CLASS]        TarBuffer    [METHOD]    readBlock    [RETURN_TYPE]    boolean        [VARIABLES]    byte[]    blockBuffer    record    result    boolean    debug    InputStream    inStream    int    DEFAULT_BLKSIZE    DEFAULT_RCDSIZE    blockSize    bytesNeeded    currBlkIdx    currRecIdx    i    offset    recordSize    recsPerBlock    sz    long    numBytes    OutputStream    outStream        	compress_2795_TarBuffer_1_1	300	1	src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java
1058	[PATCH]    if    (in.available()    ==    0)    {	[BUG]    [BUGGY]    if    (in.available()    >=    0)    {    [FE]    org.apache.commons.compress.compressors.CompressorException:    Could    not    create    CompressorInputStream    testBzip2Unarchive    [CONTEXT]    private    void    init()    throws    IOException    {    if    (null    ==    in)    {    throw    new    IOException(   "No    InputStream   ");    }    [BUGGY]    if    (in.available()    >=    0)    {    throw    new    IOException(   "Empty    InputStream   ");    }    checkMagicChar('B',       "first   ");    checkMagicChar('Z',       "second   ");    checkMagicChar('h',       "third   ");    int    blockSize    =    this.in.read();    if    ((blockSize    <    '1')    ||    (blockSize    >    '9'))    {    throw    new    IOException(   "Stream    is    not    BZip2    formatted:    illegal       "    +       "blocksize       "    +    (char)    blockSize);    [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    init    [RETURN_TYPE]    void        [VARIABLES]    int[][]    base    limit    perm    InputStream    in    char[][]    temp_charArray2d    Data    data    int[]    cftab    minLens    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    b    blockSize    blockSize100k    bsBuff    bsLive    computedBlockCRC    computedCombinedCRC    currentChar    currentState    destOffs    hi    i    last    len    nInUse    nInUseShadow    offs    origPtr    retChar    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    char[]    getAndMoveToFrontDecode_yy    byte[]    dest    ll8    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    su_z    boolean[]    inUse        	compress_5180_BZip2CompressorInputStream_1_1	221	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
1059	[PATCH]    writeAsciiLong(entry.getRemoteDeviceMaj(),    8,    16);	[BUG]    [BUGGY]    writeAsciiLong(entry.getRemoteDeviceMaj(),    -8,    16);    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    -8    testCpioUnarchive    [CONTEXT]    private    void    writeNewEntry(final    CpioArchiveEntry    entry)    throws    IOException    {    writeAsciiLong(entry.getInode(),    8,    16);    writeAsciiLong(entry.getMode(),    8,    16);    writeAsciiLong(entry.getUID(),    8,    16);    writeAsciiLong(entry.getGID(),    8,    16);    writeAsciiLong(entry.getNumberOfLinks(),    8,    16);    writeAsciiLong(entry.getTime(),    8,    16);    writeAsciiLong(entry.getSize(),    8,    16);    writeAsciiLong(entry.getDeviceMaj(),    8,    16);    writeAsciiLong(entry.getDeviceMin(),    8,    16);    [BUGGY]    writeAsciiLong(entry.getRemoteDeviceMaj(),    -8,    16);    writeAsciiLong(entry.getRemoteDeviceMin(),    8,    16);    writeAsciiLong(entry.getName().length()    +    1,    8,    16);    writeAsciiLong(entry.getChksum(),    8,    16);    writeCString(entry.getName());    pad(entry.getHeaderSize()    +    entry.getName().length()    +    1,    4);    }    [CLASS]        CpioArchiveOutputStream    [METHOD]    writeNewEntry    [RETURN_TYPE]    void        CpioArchiveEntry    entry    [VARIABLES]    boolean    closed    finished    swapHalfWord    HashMap    names    OutputStream    out    short    entryFormat    format    CpioArchiveEntry    cpioEntry    e    entry    long    crc    written        	compress_1059_CpioArchiveOutputStream_1_1	205	1	src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java
1060	[PATCH]    +    6    +    (name.length()    +    1)    /    2);	[BUG]    [BUGGY]    +    6    +    (name.length()    +    1)    /    0);    [FE]    java.lang.ArithmeticException:    /    by    zero    testSimpleCp437Encoding    [CONTEXT]    public    ByteBuffer    encode(String    name)    {    ByteBuffer    out    =    ByteBuffer.allocate(name.length()    [BUGGY]    +    6    +    (name.length()    +    1)    /    0);    for    (int    i=0;i<name.length();++i)    {    char    c    =    name.charAt(i);    if    (out.remaining()    <    6)    {    out    =    ZipEncodingHelper.growBuffer(out,out.position()    +    6);    }    if    (!this.pushEncodedChar(out,c))    {    [CLASS]        Simple8BitZipEncoding    Simple8BitChar    [METHOD]    encode    [RETURN_TYPE]    ByteBuffer        String    name    [VARIABLES]    boolean    byte    b    code    char    c    unicode    List    reverseMapping    String    name    ByteBuffer    out    int    i    char[]    highChars        	compress_3852_Simple8BitZipEncoding_1_1	224	1	src/main/java/org/apache/commons/compress/archivers/zip/Simple8BitZipEncoding.java
1061	[PATCH]    System.arraycopy(data,    offset    +    WORD,    tmp,    0,    length    -    WORD);	[BUG]    [BUGGY]    System.arraycopy(data,    offset    +    WORD,    tmp,    0,    length    /    WORD);    [FE]    java.util.zip.ZipException:    bad    CRC    checksum    b67802c6    instead    of    d7fc5572    testReparse    [CONTEXT]    throws    ZipException    {    long    givenChecksum    =    ZipLong.getValue(data,    offset);    byte[]    tmp    =    new    byte[length    -    WORD];    [BUGGY]    System.arraycopy(data,    offset    +    WORD,    tmp,    0,    length    /    WORD);    crc.reset();    crc.update(tmp);    long    realChecksum    =    crc.getValue();    if    (givenChecksum    !=    realChecksum)    {    throw    new    ZipException(   "bad    CRC    checksum       "    +    Long.toHexString(givenChecksum)    +       "    instead    of       "    +    Long.toHexString(realChecksum));    }        [CLASS]        AsiExtraField    [METHOD]    parseFromLocalFileData    [RETURN_TYPE]    void        byte[]    data    int    offset    int    length    [VARIABLES]    byte[]    data    linkArray    tmp    ZipShort    HEADER_ID    boolean    dirFlag    CRC32    crc    String    link    name    int    WORD    gid    length    mode    newMode    offset    uid    long    givenChecksum    realChecksum        	compress_3451_AsiExtraField_1_1	262	1	src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java
1062	[PATCH]    if    (inUse[i    *    16    +    j])    {	[BUG]    [BUGGY]    if    (inUse[i    *    16    /    j])    {    [FE]    java.lang.ArithmeticException:    /    by    zero    testBzipCreation    [CONTEXT]    if    (inUse16[i])    {    bsW(1,    1);    }    else    {    bsW(1,    0);    }    }    for    (i    =    0;    i    <    16;    i++)    {    if    (inUse16[i])    {    for    (j    =    0;    j    <    16;    j++)    {    [BUGGY]    if    (inUse[i    *    16    /    j])    {    bsW(1,    1);    }    else    {    bsW(1,    0);    }    }    }    }    }        [CLASS]        BZip2CompressorOutputStream    StackElem    [METHOD]    sendMTFValues    [RETURN_TYPE]    void        [VARIABLES]    boolean    blockRandomised    closed    firstAttempt    tooLong    int[][]    code    rfreq    CRC    mCrc    OutputStream    bsStream    f    inStream    short[]    cost    szptr    char    ll_i    tmp    tmp2    char[][]    len    short    cost0    cost1    cost2    cost3    cost4    cost5    icv    int[]    code    fave    freq    ftab    heap    incs    mtfFreq    parent    quadrant    weight    zptr    boolean[]    inUse    inUse16    int    CLEARMASK    DEPTH_THRESH    GREATER_ICOST    LESSER_ICOST    QSORT_STACK_SIZE    SETMASK    SMALL_THRESH    aFreq    allowableBlockSize    alphaSize    b    bc    blockCRC    blockSize100k    bsBuff    bsLive    bt    bv    bytesOut    c    ch    combinedCRC    curr    currentChar    dd    ge    gs    hh    i    inBlockSize    iter    j    k    last    ll    maxLen    minLen    n    n1    n2    nBlocksRandomised    nGroups    nHeap    nInUse    nMTF    nNodes    nPart    nSelectors    numBits    origPtr    remF    runLength    selCtr    t    tFreq    tmp    totc    u    v    vec    workDone    workFactor    workLimit    yy    zz    char[]    block    len    length    pos    selector    selectorMtf    seqToUnseq    unseqToSeq        	compress_9299_BZip2CompressorOutputStream_1_1	820	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java
1063	[PATCH]    for    (int    i    =    256;    --i    >=    0;)    {	[BUG]    [BUGGY]    for    (int    i    =    256;    --i    ==    0;)    {    [FE]    java.io.IOException:    BZip2    CRC    error    testBzip2Unarchive    [CONTEXT]    final    int[][]    limit    =    dataShadow.limit;    final    int[][]    base    =    dataShadow.base;    final    int[][]    perm    =    dataShadow.perm;    final    int    limitLast    =    this.blockSize100k    *    100000;                            [BUGGY]    for    (int    i    =    256;    --i    ==    0;)    {    yy[i]    =    (char)    i;    unzftab[i]    =    0;    }    int    groupNo    =    0;    int    groupPos    =    G_SIZE    -    1;    final    int    eob    =    this.nInUse    +    1;    int    nextSym    =    getAndMoveToFrontDecode0(0);    int    bsBuffShadow    =    this.bsBuff;    int    bsLiveShadow    =    this.bsLive;    [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    getAndMoveToFrontDecode    [RETURN_TYPE]    void        [VARIABLES]    int[][]    base    limit    perm    InputStream    in    inShadow    byte    ch    char[][]    len    temp_charArray2d    Data    data    dataShadow    int[]    base    base_zt    cftab    limit    limit_zt    minLens    perm    perm_zt    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    alphaSize    b    blockSize    blockSize100k    bsBuff    bsBuffShadow    bsLive    bsLiveShadow    computedBlockCRC    computedCombinedCRC    curr    currentChar    currentState    destOffs    eob    groupNo    groupPos    hi    i    i16    inUse16    j    last    lastShadow    len    limitLast    magic    maxLen    minLen    minLens_zt    n    nGroups    nInUse    nInUseShadow    nSelectors    nb    nextSym    offs    origPtr    pp    retChar    s    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    t    thech    v    vec    zn    zt    zvec    char[]    getAndMoveToFrontDecode_yy    len_t    length    yy    byte[]    dest    ll8    pos    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    expected    lent    magic0    magic1    magic2    magic3    magic4    magic5    su_z    tmp    boolean[]    inUse        	compress_5754_BZip2CompressorInputStream_1_1	560	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
1064	[PATCH]    boolean[]    inUse16    =    new    boolean[16];	[BUG]    [BUGGY]    boolean[]    inUse16    =    new    boolean[0];    [FE]    java.lang.ArrayIndexOutOfBoundsException:    0    testBzipCreation    [CONTEXT]    panic();    }    if    (minLen    <    1)    {    panic();    }    hbAssignCodes(code[t],    len[t],    minLen,    maxLen,    alphaSize);    }        {    [BUGGY]    boolean[]    inUse16    =    new    boolean[0];    for    (i    =    0;    i    <    16;    i++)    {    inUse16[i]    =    false;    for    (j    =    0;    j    <    16;    j++)    {    if    (inUse[i    *    16    +    j])    {    inUse16[i]    =    true;    }    }    }            [CLASS]        BZip2CompressorOutputStream    StackElem    [METHOD]    sendMTFValues    [RETURN_TYPE]    void        [VARIABLES]    boolean    blockRandomised    closed    firstAttempt    tooLong    int[][]    code    rfreq    CRC    mCrc    OutputStream    bsStream    f    inStream    short[]    cost    szptr    char    ll_i    tmp    tmp2    char[][]    len    short    cost0    cost1    cost2    cost3    cost4    cost5    icv    int[]    code    fave    freq    ftab    heap    incs    mtfFreq    parent    quadrant    weight    zptr    boolean[]    inUse    inUse16    int    CLEARMASK    DEPTH_THRESH    GREATER_ICOST    LESSER_ICOST    QSORT_STACK_SIZE    SETMASK    SMALL_THRESH    aFreq    allowableBlockSize    alphaSize    b    bc    blockCRC    blockSize100k    bsBuff    bsLive    bt    bv    bytesOut    c    ch    combinedCRC    curr    currentChar    dd    ge    gs    hh    i    inBlockSize    iter    j    k    last    ll    maxLen    minLen    n    n1    n2    nBlocksRandomised    nGroups    nHeap    nInUse    nMTF    nNodes    nPart    nSelectors    numBits    origPtr    remF    runLength    selCtr    t    tFreq    tmp    totc    u    v    vec    workDone    workFactor    workLimit    yy    zz    char[]    block    len    length    pos    selector    selectorMtf    seqToUnseq    unseqToSeq        	compress_9226_BZip2CompressorOutputStream_1_1	798	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java
1065	[PATCH]    if    (currBytes    <    currSize)    {	[BUG]    [BUGGY]    if    (currBytes    <=    currSize)    {    [FE]    java.io.IOException:    entry    'testdata/12345678901234567890123456789012345678901234567890123456789012345678901234567890123456.xml'    closed    at    '76'    before    the    '76'    bytes    specified    in    the    header    were    written    testTarArchiveLongNameCreation    [CONTEXT]    for    (int    i    =    assemLen;    i    <    assemBuf.length;    ++i)    {    assemBuf[i]    =    0;    }    buffer.writeRecord(assemBuf);    currBytes    +=    assemLen;    assemLen    =    0;    }        [BUGGY]    if    (currBytes    <=    currSize)    {    throw    new    IOException(   "entry    '   "    +    currName    +       "'    closed    at    '   "    +    currBytes    +       "'    before    the    '   "    +    currSize    +       "'    bytes    specified    in    the    header    were    written   ");    }    }    [CLASS]        TarArchiveOutputStream    [METHOD]    closeEntry    [RETURN_TYPE]    void        [VARIABLES]    byte[]    assemBuf    oneBuf    recordBuf    boolean    closed    debug    debugF    OutputStream    os    out    TarBuffer    buffer    String    currName    int    LONGFILE_ERROR    LONGFILE_GNU    LONGFILE_TRUNCATE    assemLen    blockSize    i    longFileMode    recordSize    long    currBytes    currSize        	compress_2952_TarArchiveOutputStream_1_1	225	1	src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java
1066	[PATCH]    if    (nameLength    ==    0    ||    name.charAt(nameLength    -    1)    !=    '/')    {	[BUG]    [BUGGY]    if    (false    ||    name.charAt(nameLength    -    1)    !=    '/')    {    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    -1    testTarFileWithFSRoot    [CONTEXT]    String    fileName    =    normalizeFileName(file.getPath());    this.linkName    =    new    StringBuffer(   "   ");    this.name    =    new    StringBuffer(fileName);    if    (file.isDirectory())    {    this.mode    =    DEFAULT_DIR_MODE;    this.linkFlag    =    LF_DIR;    int    nameLength    =    name.length();    [BUGGY]    if    (false    ||    name.charAt(nameLength    -    1)    !=    '/')    {    this.name.append(   "/   ");    }    this.size    =    0;    }    else    {    this.mode    =    DEFAULT_FILE_MODE;    this.linkFlag    =    LF_NORMAL;    this.size    =    file.length();    }    this.modTime    =    file.lastModified()    /    MILLIS_PER_SECOND;    [CLASS]        TarArchiveEntry    [METHOD]    <init>    [RETURN_TYPE]    File)        File    file    [VARIABLES]    StringBuffer    groupName    linkName    magic    name    userName    boolean    byte    linkFlag    String    fileName    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    groupId    mode    nameLength    userId    long    modTime    size        	compress_2166_TarArchiveEntry_1_1	212	1	src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java
1067	[PATCH]    if    (bsLiveShadow    <    n)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    org.apache.commons.compress.compressors.CompressorException:    Could    not    create    CompressorInputStream    testBzip2Unarchive    [CONTEXT]    private    int    bsR(final    int    n)    throws    IOException    {    int    bsLiveShadow    =    this.bsLive;    int    bsBuffShadow    =    this.bsBuff;        [BUGGY]    if    (false)    {    final    InputStream    inShadow    =    this.in;    do    {    int    thech    =    inShadow.read();    if    (thech    <    0)    {    throw    new    IOException(   "unexpected    end    of    stream   ");    }    bsBuffShadow    =    (bsBuffShadow    <<    8)    |    thech;    bsLiveShadow    +=    8;    [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    bsR    [RETURN_TYPE]    int        final    int    n    [VARIABLES]    int[][]    base    limit    perm    InputStream    in    inShadow    char[][]    temp_charArray2d    Data    data    int[]    cftab    minLens    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    b    blockSize    blockSize100k    bsBuff    bsBuffShadow    bsLive    bsLiveShadow    computedBlockCRC    computedCombinedCRC    currentChar    currentState    destOffs    hi    i    last    len    magic    n    nInUse    nInUseShadow    offs    origPtr    retChar    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    thech    char[]    getAndMoveToFrontDecode_yy    byte[]    dest    ll8    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    expected    magic0    magic1    magic2    magic3    magic4    magic5    su_z    boolean[]    inUse        	compress_5362_BZip2CompressorInputStream_1_1	337	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
1068	[PATCH]    while    (s--    >=    0)    {	[BUG]    [BUGGY]    while    (s--    >=    -1)    {    [FE]    java.io.IOException:    BZip2    CRC    error    testBzip2Unarchive    [CONTEXT]    bsLiveShadow--;    zvec    =    (zvec    <<    1)    |    ((bsBuffShadow    >>    bsLiveShadow)    &    1);    }    nextSym    =    perm_zt[zvec    -    base_zt[zn]];    }    final    byte    ch    =    seqToUnseq[yy[0]];    unzftab[ch    &    0xff]    +=    s    +    1;        [BUGGY]    while    (s--    >=    -1)    {    ll8[++lastShadow]    =    ch;    }    if    (lastShadow    >=    limitLast)    {    throw    new    IOException(   "block    overrun   ");    }    }    else    {    if    (++lastShadow    >=    limitLast)    {    throw    new    IOException(   "block    overrun   ");    }    [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    getAndMoveToFrontDecode    [RETURN_TYPE]    void        [VARIABLES]    int[][]    base    limit    perm    InputStream    in    inShadow    byte    ch    char[][]    len    temp_charArray2d    Data    data    dataShadow    int[]    base    base_zt    cftab    limit    limit_zt    minLens    perm    perm_zt    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    alphaSize    b    blockSize    blockSize100k    bsBuff    bsBuffShadow    bsLive    bsLiveShadow    computedBlockCRC    computedCombinedCRC    curr    currentChar    currentState    destOffs    eob    groupNo    groupPos    hi    i    i16    inUse16    j    last    lastShadow    len    limitLast    magic    maxLen    minLen    minLens_zt    n    nGroups    nInUse    nInUseShadow    nSelectors    nb    nextSym    offs    origPtr    pp    retChar    s    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    t    thech    v    vec    zn    zt    zvec    char[]    getAndMoveToFrontDecode_yy    len_t    length    yy    byte[]    dest    ll8    pos    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    expected    lent    magic0    magic1    magic2    magic3    magic4    magic5    su_z    tmp    boolean[]    inUse        	compress_5930_BZip2CompressorInputStream_1_1	643	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
1069	[PATCH]    offset    =    fill(offset,    16,    '    ');	[BUG]    [BUGGY]    offset    =    fill(offset,    -16,    '    ');    [FE]    java.io.IOException:    invalid    entry    header.    not    read    the    content?    testArUnarchive    [CONTEXT]    private    long    writeEntryHeader(    final    ArArchiveEntry    pEntry    )    throws    IOException    {    long    offset    =    0;    final    String    n    =    pEntry.getName();    if    (n.length()    >    16)    {    throw    new    IOException(   "filename    too    long   ");    }    offset    +=    write(n);        [BUGGY]    offset    =    fill(offset,    -16,    '    ');    final    String    m    =       "   "    +    (pEntry.getLastModified()    /    1000);    if    (m.length()    >    12)    {    throw    new    IOException(   "modified    too    long   ");    }    offset    +=    write(m);    offset    =    fill(offset,    28,    '    ');    final    String    u    =       "   "    +    pEntry.getUserId();    if    (u.length()    >    6)    {    throw    new    IOException(   "userid    too    long   ");    [CLASS]        ArArchiveOutputStream    [METHOD]    writeEntryHeader    [RETURN_TYPE]    long        ArArchiveEntry    pEntry    [VARIABLES]    ArArchiveEntry    pArEntry    pEntry    prevEntry    String    fm    g    m    n    s    u    boolean    long    archiveOffset    diff    entryOffset    offset    pNewOffset    pOffset    OutputStream    out    pOut        	compress_260_ArArchiveOutputStream_1_1	101	1	src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java
1070	[PATCH]    writeAsciiLong(entry.getTime(),    8,    16);	[BUG]    [BUGGY]    writeAsciiLong(entry.getTime(),    -8,    16);    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    -8    testCpioUnarchive    [CONTEXT]    private    void    writeNewEntry(final    CpioArchiveEntry    entry)    throws    IOException    {    writeAsciiLong(entry.getInode(),    8,    16);    writeAsciiLong(entry.getMode(),    8,    16);    writeAsciiLong(entry.getUID(),    8,    16);    writeAsciiLong(entry.getGID(),    8,    16);    writeAsciiLong(entry.getNumberOfLinks(),    8,    16);    [BUGGY]    writeAsciiLong(entry.getTime(),    -8,    16);    writeAsciiLong(entry.getSize(),    8,    16);    writeAsciiLong(entry.getDeviceMaj(),    8,    16);    writeAsciiLong(entry.getDeviceMin(),    8,    16);    writeAsciiLong(entry.getRemoteDeviceMaj(),    8,    16);    writeAsciiLong(entry.getRemoteDeviceMin(),    8,    16);    writeAsciiLong(entry.getName().length()    +    1,    8,    16);    writeAsciiLong(entry.getChksum(),    8,    16);    writeCString(entry.getName());    pad(entry.getHeaderSize()    +    entry.getName().length()    +    1,    4);    }    [CLASS]        CpioArchiveOutputStream    [METHOD]    writeNewEntry    [RETURN_TYPE]    void        CpioArchiveEntry    entry    [VARIABLES]    boolean    closed    finished    swapHalfWord    HashMap    names    OutputStream    out    short    entryFormat    format    CpioArchiveEntry    cpioEntry    e    entry    long    crc    written        	compress_1039_CpioArchiveOutputStream_1_1	201	1	src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java
1071	[PATCH]    buf[offset    +    length    -    1]    =    (byte)    '    ';	[BUG]    [BUGGY]    buf[(offset    +    length)    %    1]    =    (byte)    '    ';    [FE]    junit.framework.ComparisonFailure:    expected:<[/]>    but    was:<[    ]>    testTarFileWithFSRoot    [CONTEXT]    public    static    int    getCheckSumOctalBytes(long    value,    byte[]    buf,    int    offset,    int    length)    {    getOctalBytes(value,    buf,    offset,    length);        [BUGGY]    buf[(offset    +    length)    %    1]    =    (byte)    '    ';    buf[offset    +    length    -    2]    =    0;    return    offset    +    length;    }    [CLASS]        TarUtils    [METHOD]    getCheckSumOctalBytes    [RETURN_TYPE]    int        long    value    byte[]    buf    int    offset    int    length    [VARIABLES]    byte[]    buf    boolean    int    BYTE_MASK    end    i    idx    length    offset    long    value        	compress_3228_TarUtils_1_1	180	1	src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
1072	[PATCH]    copy    =    false;	[BUG]    [BUGGY]    copy    =    true;    [FE]    junit.framework.AssertionFailedError:    unexpected    entry:    bla/test5.xml    testDeleteFile    [CONTEXT]    if    (change.type()    ==    Change.TYPE_DELETE    &&    entry.getName()    !=    null)    {    if    (entry.getName().equals(change.targetFile()))    {    [BUGGY]    copy    =    true;    it.remove();    break;    }    else    if    (entry.getName().matches(    change.targetFile()    +       "/.*   "))    {    copy    =    false;    break;    }    }    [CLASS]        ChangeSet    [METHOD]    perform    [RETURN_TYPE]    void        ArchiveInputStream    in    ArchiveOutputStream    out    [VARIABLES]    ArchiveInputStream    in    Set    changes    boolean    copy    Iterator    it    ArchiveEntry    entry    Change    change    ArchiveOutputStream    out        	compress_5043_ChangeSet_1_1	71	1	src/main/java/org/apache/commons/compress/changes/ChangeSet.java
1073	[PATCH]    byte[]    temp    =    new    byte[length    +    1];	[BUG]    [BUGGY]    byte[]    temp    =    new    byte[length    %    1];    [FE]    java.lang.ArrayIndexOutOfBoundsException:    12    testTarArchiveLongNameCreation    [CONTEXT]    public    static    int    getLongOctalBytes(long    value,    byte[]    buf,    int    offset,    int    length)    {    [BUGGY]    byte[]    temp    =    new    byte[length    %    1];    getOctalBytes(value,    temp,    0,    length    +    1);    System.arraycopy(temp,    0,    buf,    offset,    length);    return    offset    +    length;    }    [CLASS]        TarUtils    [METHOD]    getLongOctalBytes    [RETURN_TYPE]    int        long    value    byte[]    buf    int    offset    int    length    [VARIABLES]    byte[]    buf    temp    boolean    int    BYTE_MASK    end    i    idx    length    offset    long    value        	compress_3201_TarUtils_1_1	160	1	src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
1074	[PATCH]    for    (int    i    =    0;    i    <    fields.length;    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    1;    i    <    fields.length;    i++)    {    [FE]    junit.framework.AssertionFailedError:    first    pass    expected:<2>    but    was:<1>    testExtraFieldMerging    [CONTEXT]    public    void    setExtraFields(ZipExtraField[]    fields)    {    extraFields    =    new    LinkedHashMap();    [BUGGY]    for    (int    i    =    1;    i    <    fields.length;    i++)    {    extraFields.put(fields[i].getHeaderId(),    fields[i]);    }    setExtra();    }    [CLASS]        ZipArchiveEntry    [METHOD]    setExtraFields    [RETURN_TYPE]    void        ZipExtraField[]    fields    [VARIABLES]    String    name    boolean    ZipExtraField[]    fields    int    PLATFORM_FAT    PLATFORM_UNIX    SHORT_MASK    SHORT_SHIFT    i    internalAttributes    mode    platform    value    long    externalAttributes    value    LinkedHashMap    extraFields        	compress_1542_ZipArchiveEntry_1_1	182	1	src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java
1075	[PATCH]    if    (signature[2]    !=    0x61)    {	[BUG]    [BUGGY]    if    (signature[-2]    !=    0x61)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -2    testDetection    [CONTEXT]    if    (length    <    8)    {    return    false;    }    if    (signature[0]    !=    0x21)    {    return    false;    }    if    (signature[1]    !=    0x3c)    {    return    false;    }    [BUGGY]    if    (signature[-2]    !=    0x61)    {    return    false;    }    if    (signature[3]    !=    0x72)    {    return    false;    }    if    (signature[4]    !=    0x63)    {    return    false;    }    if    (signature[5]    !=    0x68)    {    return    false;    [CLASS]        ArArchiveInputStream    [METHOD]    matches    [RETURN_TYPE]    boolean        byte[]    signature    int    length    [VARIABLES]    byte[]    signature    boolean    InputStream    input    pInput    long    offset    int    length        	compress_158_ArArchiveInputStream_1_1	130	1	src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java
1076	[PATCH]    result[0]    =    (byte)    ((value    &    BYTE_MASK));	[BUG]    [BUGGY]    result[-1]    =    (byte)    ((value    &    BYTE_MASK));    [FE]    java.lang.ExceptionInInitializerError    testDetection    [CONTEXT]    public    static    byte[]    getBytes(long    value)    {    byte[]    result    =    new    byte[WORD];    [BUGGY]    result[-1]    =    (byte)    ((value    &    BYTE_MASK));    result[BYTE_1]    =    (byte)    ((value    &    BYTE_1_MASK)    >>    BYTE_1_SHIFT);    result[BYTE_2]    =    (byte)    ((value    &    BYTE_2_MASK)    >>    BYTE_2_SHIFT);    result[BYTE_3]    =    (byte)    ((value    &    BYTE_3_MASK)    >>    BYTE_3_SHIFT);    return    result;    }    [CLASS]        ZipLong    [METHOD]    getBytes    [RETURN_TYPE]    byte[]        long    value    [VARIABLES]    byte[]    result    boolean    int    BYTE_1    BYTE_1_MASK    BYTE_1_SHIFT    BYTE_2    BYTE_2_MASK    BYTE_2_SHIFT    BYTE_3    BYTE_3_SHIFT    BYTE_MASK    WORD    offset    long    BYTE_3_MASK    value        	compress_4812_ZipLong_1_1	92	1	src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java
1077	[PATCH]    if    (entry.getMethod()    ==    -1)    {    //    not    specified	[BUG]    [BUGGY]    if    (entry.getMethod()    ==    0)    {    //    not    specified    [FE]    java.util.zip.ZipException:    bad    CRC    checksum    for    entry    testdata/test1.xml:    ffffffffffffffff    instead    of    393a497a    testJarArchiveCreation    [CONTEXT]    public    void    putNextEntry(ZipArchiveEntry    ze)    throws    IOException    {    closeEntry();    entry    =    ze;    entries.add(entry);        [BUGGY]    if    (entry.getMethod()    ==    0)    {    entry.setMethod(method);    }    if    (entry.getTime()    ==    -1)    {    entry.setTime(System.currentTimeMillis());    }        if    (entry.getMethod()    ==    STORED    &&    raf    ==    null)    {    if    (entry.getSize()    ==    -1)    {    [CLASS]        ZipArchiveOutputStream    UnicodeExtraFieldPolicy    [METHOD]    putNextEntry    [RETURN_TYPE]    void        ZipArchiveEntry    ze    [VARIABLES]    ZipEncoding    zipEncoding    UnicodeExtraFieldPolicy    ALWAYS    NEVER    NOT_ENCODEABLE    b    createUnicodeExtraFields    CRC32    crc    OutputStream    o    out    String    DEFAULT_ENCODING    comment    encoding    n    name    int    BUFFER_SIZE    BYTE_MASK    DEFAULT_COMPRESSION    DEFLATED    DEFLATER_BLOCK_SIZE    EFS_FLAG    SHORT    STORED    WORD    level    method    long    cdLength    cdOffset    dataStart    localDataStart    realCrc    save    size    written    byte[]    CFH_SIG    DD_SIG    EOCD_SIG    LFH_SIG    LZERO    ZERO    buf    boolean    b    fallbackToUTF8    hasCompressionLevelChanged    useEFS    Deflater    def    RandomAccessFile    _raf    raf    ZipArchiveEntry    entry    ze    List    entries    Map    offsets        	compress_1774_ZipArchiveOutputStream_1_1	424	1	src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java
1078	[PATCH]    return    getValue(bytes,    0);	[BUG]    [BUGGY]    return    getValue(bytes,    1);    [FE]    java.lang.ArrayIndexOutOfBoundsException:    2    testJarMarker    [CONTEXT]    public    static    int    getValue(byte[]    bytes)    {    [BUGGY]    return    getValue(bytes,    1);    }    [CLASS]        ZipShort    [METHOD]    getValue    [RETURN_TYPE]    int        byte[]    bytes    [VARIABLES]    byte[]    bytes    int    BYTE_1_MASK    BYTE_1_SHIFT    BYTE_MASK    offset    value    boolean        	compress_1639_ZipShort_1_1	106	1	src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java
1079	[PATCH]    }    else    if    (magic0    !=    0x31    ||    //    '1'	[BUG]    [BUGGY]    }    else    if    (magic0    !=    0    ||    //    '1'    [FE]    org.apache.commons.compress.compressors.CompressorException:    Could    not    create    CompressorInputStream    testBzip2Unarchive    [CONTEXT]    char    magic0    =    bsGetUByte();    char    magic1    =    bsGetUByte();    char    magic2    =    bsGetUByte();    char    magic3    =    bsGetUByte();    char    magic4    =    bsGetUByte();    char    magic5    =    bsGetUByte();    if    (magic0    ==    0x17    &&    magic1    ==    0x72    &&    magic2    ==    0x45    &&    magic3    ==    0x38    &&    magic4    ==    0x50    &&    magic5    ==    0x90)    {    complete();        [BUGGY]    }    else    if    (magic0    !=    0    ||    magic1    !=    0x41    ||    magic2    !=    0x59    ||    magic3    !=    0x26    ||    magic4    !=    0x53    ||    magic5    !=    0x59    )    {    this.currentState    =    EOF;    throw    new    IOException(   "bad    block    header   ");    }    else    {    this.storedBlockCRC    =    bsGetInt();    [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    initBlock    [RETURN_TYPE]    void        [VARIABLES]    int[][]    base    limit    perm    InputStream    in    char[][]    temp_charArray2d    Data    data    int[]    cftab    minLens    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    b    blockSize    blockSize100k    bsBuff    bsLive    computedBlockCRC    computedCombinedCRC    currentChar    currentState    destOffs    hi    i    last    len    magic    nInUse    nInUseShadow    offs    origPtr    retChar    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    char[]    getAndMoveToFrontDecode_yy    byte[]    dest    ll8    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    expected    magic0    magic1    magic2    magic3    magic4    magic5    su_z    boolean[]    inUse        	compress_5256_BZip2CompressorInputStream_1_1	261	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
1080	[PATCH]    this.su_i2    =    0;	[BUG]    [BUGGY]    this.su_i2    =    1;    [FE]    java.io.IOException:    BZip2    CRC    error    testBzip2Unarchive    [CONTEXT]    for    (int    i    =    0,    lastShadow    =    this.last;    i    <=    lastShadow;    i++)    {    tt[cftab[ll8[i]    &    0xff]++]    =    i;    }    if    ((this.origPtr    <    0)    ||    (this.origPtr    >=    tt.length))    {    throw    new    IOException(   "stream    corrupted   ");    }    this.su_tPos    =    tt[this.origPtr];    this.su_count    =    0;    [BUGGY]    this.su_i2    =    1;    this.su_ch2    =    256;    /*    not    a    char    and    not    EOF    */    if    (this.blockRandomised)    {    this.su_rNToGo    =    0;    this.su_rTPos    =    0;    setupRandPartA();    }    else    {    setupNoRandPartA();    }    }    [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    setupBlock    [RETURN_TYPE]    void        [VARIABLES]    int[][]    base    limit    perm    InputStream    in    inShadow    char[][]    len    temp_charArray2d    Data    data    dataShadow    int[]    base    base_zt    cftab    limit    limit_zt    minLens    perm    perm_zt    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    alphaSize    b    blockSize    blockSize100k    bsBuff    bsBuffShadow    bsLive    bsLiveShadow    c    computedBlockCRC    computedCombinedCRC    curr    currentChar    currentState    destOffs    eob    groupNo    groupPos    hi    i    i16    inUse16    j    last    lastShadow    len    limitLast    magic    maxLen    minLen    minLens_zt    n    nGroups    nInUse    nInUseShadow    nSelectors    nb    nextSym    offs    origPtr    pp    retChar    s    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    t    thech    v    vec    zn    zt    zvec    char[]    getAndMoveToFrontDecode_yy    len_t    length    yy    byte[]    dest    ll8    pos    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    expected    lent    magic0    magic1    magic2    magic3    magic4    magic5    su_z    tmp    boolean[]    inUse        	compress_6193_BZip2CompressorInputStream_1_1	786	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
1081	[PATCH]    System.arraycopy(buffer,    offset    +    5,    unicodeName,    0,    length    -    5);	[BUG]    [BUGGY]    System.arraycopy(buffer,    offset    +    5,    unicodeName,    1,    length    -    5);    [FE]    java.lang.RuntimeException    testZipFileReadsUnicodeFields    [CONTEXT]    int    version    =    buffer[offset];    if    (version    !=    0x01)    {    throw    new    ZipException(   "Unsupported    version    [   "    +    version    +       "]    for    UniCode    path    extra    data.   ");    }    nameCRC32    =    ZipLong.getValue(buffer,    offset    +    1);    unicodeName    =    new    byte[length    -    5];    [BUGGY]    System.arraycopy(buffer,    offset    +    5,    unicodeName,    1,    length    -    5);    data    =    null;    }    [CLASS]        AbstractUnicodeExtraField    [METHOD]    parseFromLocalFileData    [RETURN_TYPE]    void        byte[]    buffer    int    offset    int    length    [VARIABLES]    byte[]    buffer    bytes    data    unicodeName    boolean    long    nameCRC32    int    length    offset    version        	compress_3327_AbstractUnicodeExtraField_1_1	158	1	src/main/java/org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.java
1082	[PATCH]    gs    =    ge    +    1;	[BUG]    [BUGGY]    gs    =    ge    %    1;    [FE]    java.lang.ArrayIndexOutOfBoundsException:    18002    testBzipCreation    [CONTEXT]    }    ge    =    gs    +    G_SIZE    -    1;    if    (ge    >=    nMTF)    {    ge    =    nMTF    -    1;    }    for    (i    =    gs;    i    <=    ge;    i++)    {    bsW(len[selector[selCtr]][szptr[i]],    code[selector[selCtr]][szptr[i]]);    }        [BUGGY]    gs    =    ge    %    1;    selCtr++;    }    if    (!(selCtr    ==    nSelectors))    {    panic();    }    }    [CLASS]        BZip2CompressorOutputStream    StackElem    [METHOD]    sendMTFValues    [RETURN_TYPE]    void        [VARIABLES]    boolean    blockRandomised    closed    firstAttempt    tooLong    int[][]    code    rfreq    CRC    mCrc    OutputStream    bsStream    f    inStream    short[]    cost    szptr    char    ll_i    tmp    tmp2    char[][]    len    short    cost0    cost1    cost2    cost3    cost4    cost5    icv    int[]    code    fave    freq    ftab    heap    incs    mtfFreq    parent    quadrant    weight    zptr    boolean[]    inUse    inUse16    int    CLEARMASK    DEPTH_THRESH    GREATER_ICOST    LESSER_ICOST    QSORT_STACK_SIZE    SETMASK    SMALL_THRESH    aFreq    allowableBlockSize    alphaSize    b    bc    blockCRC    blockSize100k    bsBuff    bsLive    bt    bv    bytesOut    c    ch    combinedCRC    curr    currentChar    dd    ge    gs    hh    i    inBlockSize    iter    j    k    last    ll    maxLen    minLen    n    n1    n2    nBlocksRandomised    nGroups    nHeap    nInUse    nMTF    nNodes    nPart    nSelectors    numBits    origPtr    remF    runLength    selCtr    t    tFreq    tmp    totc    u    v    vec    workDone    workFactor    workLimit    yy    zz    char[]    block    len    length    pos    selector    selectorMtf    seqToUnseq    unseqToSeq        	compress_9412_BZip2CompressorOutputStream_1_1	878	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java
1083	[PATCH]    nextSym    =    perm_zt[zvec    -    base_zt[zn]];	[BUG]    [BUGGY]    nextSym    =    perm_zt[zvec    +    base_zt[zn]];    [FE]    java.io.IOException:    BZip2    CRC    error    testBzip2Unarchive    [CONTEXT]    bsBuffShadow    =    (bsBuffShadow    <<    8)    |    thech;    bsLiveShadow    +=    8;    continue;    }    else    {    throw    new    IOException(   "unexpected    end    of    stream   ");    }    }    bsLiveShadow--;    zvec    =    (zvec    <<    1)    |    ((bsBuffShadow    >>    bsLiveShadow)    &    1);    }    [BUGGY]    nextSym    =    perm_zt[zvec    +    base_zt[zn]];    }    }    this.last    =    lastShadow;    this.bsLive    =    bsLiveShadow;    this.bsBuff    =    bsBuffShadow;    }    [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    getAndMoveToFrontDecode    [RETURN_TYPE]    void        [VARIABLES]    int[][]    base    limit    perm    InputStream    in    inShadow    byte    ch    char[][]    len    temp_charArray2d    Data    data    dataShadow    int[]    base    base_zt    cftab    limit    limit_zt    minLens    perm    perm_zt    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    alphaSize    b    blockSize    blockSize100k    bsBuff    bsBuffShadow    bsLive    bsLiveShadow    computedBlockCRC    computedCombinedCRC    curr    currentChar    currentState    destOffs    eob    groupNo    groupPos    hi    i    i16    inUse16    j    last    lastShadow    len    limitLast    magic    maxLen    minLen    minLens_zt    n    nGroups    nInUse    nInUseShadow    nSelectors    nb    nextSym    offs    origPtr    pp    retChar    s    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    t    thech    v    vec    zn    zt    zvec    char[]    getAndMoveToFrontDecode_yy    len_t    length    yy    byte[]    dest    ll8    pos    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    expected    lent    magic0    magic1    magic2    magic3    magic4    magic5    su_z    tmp    boolean[]    inUse        	compress_6083_BZip2CompressorInputStream_1_1	718	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
1084	[PATCH]    value    +=    (bytes[offset    +    BYTE_2]    <<    BYTE_2_SHIFT)    &    BYTE_2_MASK;	[BUG]    [BUGGY]    value    +=    (bytes[offset    *    BYTE_2]    <<    BYTE_2_SHIFT)    &    BYTE_2_MASK;    [FE]    java.io.EOFException    testJarMarker    [CONTEXT]    public    static    long    getValue(byte[]    bytes,    int    offset)    {    long    value    =    (bytes[offset    +    BYTE_3]    <<    BYTE_3_SHIFT)    &    BYTE_3_MASK;    [BUGGY]    value    +=    (bytes[offset    *    BYTE_2]    <<    BYTE_2_SHIFT)    &    BYTE_2_MASK;    value    +=    (bytes[offset    +    BYTE_1]    <<    BYTE_1_SHIFT)    &    BYTE_1_MASK;    value    +=    (bytes[offset]    &    BYTE_MASK);    return    value;    }    [CLASS]        ZipLong    [METHOD]    getValue    [RETURN_TYPE]    long        byte[]    bytes    int    offset    [VARIABLES]    byte[]    bytes    boolean    int    BYTE_1    BYTE_1_MASK    BYTE_1_SHIFT    BYTE_2    BYTE_2_MASK    BYTE_2_SHIFT    BYTE_3    BYTE_3_SHIFT    BYTE_MASK    WORD    offset    long    BYTE_3_MASK    value        	compress_4840_ZipLong_1_1	107	1	src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java
1085	[PATCH]    if    (signature[i]    !=    ZipArchiveOutputStream.LFH_SIG[i])    {	[BUG]    [BUGGY]    if    (signature[i]    <    ZipArchiveOutputStream.LFH_SIG[i])    {    [FE]    junit.framework.AssertionFailedError    testDetection    [CONTEXT]    public    static    boolean    matches(byte[]    signature,    int    length)    {    if    (length    <    ZipArchiveOutputStream.LFH_SIG.length)    {    return    false;    }    for    (int    i    =    0;    i    <    ZipArchiveOutputStream.LFH_SIG.length;    i++)    {    [BUGGY]    if    (signature[i]    <    ZipArchiveOutputStream.LFH_SIG[i])    {    return    false;    }    }    return    true;    }    [CLASS]        ZipArchiveInputStream    [METHOD]    matches    [RETURN_TYPE]    boolean        byte[]    signature    int    length    [VARIABLES]    byte[]    signature    ZipInputStream    input    boolean    int    i    length        	compress_1661_ZipArchiveInputStream_1_1	63	1	src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java
1086	[PATCH]    while    (zvec    >    limit_zt[zn])    {	[BUG]    [BUGGY]    while    (zvec    >=    limit_zt[zn])    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -87288542    testBzip2Unarchive    [CONTEXT]    bsLiveShadow    +=    8;    continue;    }    else    {    throw    new    IOException(   "unexpected    end    of    stream   ");    }    }    int    zvec    =    (bsBuffShadow    >>    (bsLiveShadow    -    zn))    &    ((1    <<    zn)    -    1);    bsLiveShadow    -=    zn;        [BUGGY]    while    (zvec    >=    limit_zt[zn])    {    zn++;    while    (bsLiveShadow    <    1)    {    final    int    thech    =    inShadow.read();    if    (thech    >=    0)    {    bsBuffShadow    =    (bsBuffShadow    <<    8)    |    thech;    bsLiveShadow    +=    8;    continue;    }    else    {    throw    new    IOException(   "unexpected    end    of    stream   ");    }    [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    getAndMoveToFrontDecode    [RETURN_TYPE]    void        [VARIABLES]    int[][]    base    limit    perm    InputStream    in    inShadow    byte    ch    char[][]    len    temp_charArray2d    Data    data    dataShadow    int[]    base    base_zt    cftab    limit    limit_zt    minLens    perm    perm_zt    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    alphaSize    b    blockSize    blockSize100k    bsBuff    bsBuffShadow    bsLive    bsLiveShadow    computedBlockCRC    computedCombinedCRC    curr    currentChar    currentState    destOffs    eob    groupNo    groupPos    hi    i    i16    inUse16    j    last    lastShadow    len    limitLast    magic    maxLen    minLen    minLens_zt    n    nGroups    nInUse    nInUseShadow    nSelectors    nb    nextSym    offs    origPtr    pp    retChar    s    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    t    thech    v    vec    zn    zt    zvec    char[]    getAndMoveToFrontDecode_yy    len_t    length    yy    byte[]    dest    ll8    pos    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    expected    lent    magic0    magic1    magic2    magic3    magic4    magic5    su_z    tmp    boolean[]    inUse        	compress_6044_BZip2CompressorInputStream_1_1	703	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
1087	[PATCH]    if    (m.unicode    ==    c)    {	[BUG]    [BUGGY]    if    (m.unicode    >=    c)    {    [FE]    junit.framework.AssertionFailedError:    expected:<-128>    but    was:<-25>    testSimpleCp437Encoding    [CONTEXT]        int    i0    =    0;    int    i1    =    this.reverseMapping.size();    while    (i1    >    i0)    {    int    i    =    i0    +    (i1    -    i0)    /    2;    Simple8BitChar    m    =    (Simple8BitChar)    this.reverseMapping.get(i);        [BUGGY]    if    (m.unicode    >=    c)    {    return    m;    }    if    (m.unicode    <    c)    {    i0    =    i    +    1;    }    else    {    i1    =    i;    }    }        [CLASS]        Simple8BitZipEncoding    Simple8BitChar    [METHOD]    encodeHighChar    [RETURN_TYPE]    Simple8BitZipEncoding$Simple8BitChar        char    c    [VARIABLES]    Simple8BitChar    m    r    boolean    byte    b    code    char    c    unicode    List    reverseMapping    int    i    i0    i1    char[]    highChars        	compress_3812_Simple8BitZipEncoding_1_1	176	1	src/main/java/org/apache/commons/compress/archivers/zip/Simple8BitZipEncoding.java
1088	[PATCH]    final    int    zt    =    dataShadow.selector[groupNo]    &    0xff;	[BUG]    [BUGGY]    final    int    zt    =    dataShadow.selector[groupNo]    ^    255;    [FE]    java.lang.ArrayIndexOutOfBoundsException:    255    testBzip2Unarchive    [CONTEXT]    private    int    getAndMoveToFrontDecode0(final    int    groupNo)    throws    IOException    {    final    InputStream    inShadow    =    this.in;    final    Data    dataShadow    =    this.data;    [BUGGY]    final    int    zt    =    dataShadow.selector[groupNo]    ^    255;    final    int[]    limit_zt    =    dataShadow.limit[zt];    int    zn    =    dataShadow.minLens[zt];    int    zvec    =    bsR(zn);    int    bsLiveShadow    =    this.bsLive;    int    bsBuffShadow    =    this.bsBuff;    while    (zvec    >    limit_zt[zn])    {    zn++;    while    (bsLiveShadow    <    1)    {    final    int    thech    =    inShadow.read();    [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    getAndMoveToFrontDecode0    [RETURN_TYPE]    int        final    int    groupNo    [VARIABLES]    int[][]    base    limit    perm    InputStream    in    inShadow    char[][]    len    temp_charArray2d    Data    data    dataShadow    int[]    base    base_zt    cftab    limit    limit_zt    minLens    perm    perm_zt    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    alphaSize    b    blockSize    blockSize100k    bsBuff    bsBuffShadow    bsLive    bsLiveShadow    computedBlockCRC    computedCombinedCRC    curr    currentChar    currentState    destOffs    eob    groupNo    groupPos    hi    i    i16    inUse16    j    last    lastShadow    len    limitLast    magic    maxLen    minLen    minLens_zt    n    nGroups    nInUse    nInUseShadow    nSelectors    nb    nextSym    offs    origPtr    pp    retChar    s    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    t    thech    v    vec    zn    zt    zvec    char[]    getAndMoveToFrontDecode_yy    len_t    length    yy    byte[]    dest    ll8    pos    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    expected    lent    magic0    magic1    magic2    magic3    magic4    magic5    su_z    tmp    boolean[]    inUse        	compress_6091_BZip2CompressorInputStream_1_1	730	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
1089	[PATCH]    long    value    =    (bytes[offset    +    BYTE_3]    <<    BYTE_3_SHIFT)    &    BYTE_3_MASK;	[BUG]    [BUGGY]    long    value    =    (bytes[offset    +    BYTE_3]    >>    BYTE_3_SHIFT)    &    BYTE_3_MASK;    [FE]    java.util.zip.ZipException:    bad    CRC    checksum    ff7802c6    instead    of    b67802c6    testReparse    [CONTEXT]    public    static    long    getValue(byte[]    bytes,    int    offset)    {    [BUGGY]    long    value    =    (bytes[offset    +    BYTE_3]    >>    BYTE_3_SHIFT)    &    BYTE_3_MASK;    value    +=    (bytes[offset    +    BYTE_2]    <<    BYTE_2_SHIFT)    &    BYTE_2_MASK;    value    +=    (bytes[offset    +    BYTE_1]    <<    BYTE_1_SHIFT)    &    BYTE_1_MASK;    value    +=    (bytes[offset]    &    BYTE_MASK);    return    value;    }    [CLASS]        ZipLong    [METHOD]    getValue    [RETURN_TYPE]    long        byte[]    bytes    int    offset    [VARIABLES]    byte[]    bytes    boolean    int    BYTE_1    BYTE_1_MASK    BYTE_1_SHIFT    BYTE_2    BYTE_2_MASK    BYTE_2_SHIFT    BYTE_3    BYTE_3_SHIFT    BYTE_MASK    WORD    offset    long    BYTE_3_MASK    value        	compress_4835_ZipLong_1_1	106	1	src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java
1090	[PATCH]    block[last    +    i    +    2]    =    block[(i    %    (last    +    1))    +    1];	[BUG]    [BUGGY]    block[last    +    i    +    2]    =    block[(i    %    (last    +    1))    +    -1];    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testBzipCreation    [CONTEXT]        In    the    various    block-sized    structures,    live    data    runs    from    0    to    last+NUM_OVERSHOOT_BYTES    inclusive.First,    set    up    the    overshoot    area    for    block.                for    (i    =    0;    i    <    NUM_OVERSHOOT_BYTES;    i++)    {    [BUGGY]    block[last    +    i    +    2]    =    block[(i    %    (last    +    1))    +    -1];    }    for    (i    =    0;    i    <=    last    +    NUM_OVERSHOOT_BYTES;    i++)    {    quadrant[i]    =    0;    }    block[0]    =    block[last    +    1];    if    (last    <    4000)    {        Use    simpleSort(),    since    the    full    sorting    mechanism    [CLASS]        BZip2CompressorOutputStream    StackElem    [METHOD]    mainSort    [RETURN_TYPE]    void        [VARIABLES]    boolean    blockRandomised    closed    firstAttempt    tooLong    StackElem[]    stack    CRC    mCrc    OutputStream    bsStream    f    inStream    short[]    cost    szptr    int[]    code    copy    fave    freq    ftab    heap    incs    mtfFreq    parent    quadrant    runningOrder    weight    zptr    boolean[]    bigDone    inUse    inUse16    int    CLEARMASK    DEPTH_THRESH    GREATER_ICOST    LESSER_ICOST    QSORT_STACK_SIZE    SETMASK    SMALL_THRESH    a2update    aFreq    allowableBlockSize    alphaSize    b    bbSize    bbStart    bc    bigN    blockCRC    blockSize100k    bsBuff    bsLive    bt    bv    bytesOut    c    c1    c2    ch    combinedCRC    count    curr    currentChar    d    dSt    dd    ge    gs    gtHi    h    hh    hi    hiSt    hp    i    inBlockSize    iter    j    k    last    ll    lo    loSt    ltLo    m    maxLen    med    minLen    n    n1    n2    nBlocksRandomised    nGroups    nHeap    nInUse    nMTF    nNodes    nPart    nSelectors    numBits    numQSorted    origPtr    p1    p2    qVal    remF    runLength    sb    selCtr    shifts    sp    ss    t    tFreq    temp    tmp    totc    u    unHi    unLo    v    vec    vv    workDone    workFactor    workLimit    yy    zz    char[]    block    len    length    pos    selector    selectorMtf    seqToUnseq    unseqToSeq        	compress_9930_BZip2CompressorOutputStream_1_1	1139	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java
1091	[PATCH]    if    (signature[4]    !=    0x30)    {	[BUG]    [BUGGY]    if    (signature[4]    !=    -48)    {    [FE]    org.apache.commons.compress.archivers.ArchiveException:    No    Archiver    found    for    the    stream    signature    testDetection    [CONTEXT]    }    if    (signature[1]    !=    0x37)    {    return    false;    }    if    (signature[2]    !=    0x30)    {    return    false;    }    if    (signature[3]    !=    0x37)    {    return    false;    }    [BUGGY]    if    (signature[4]    !=    -48)    {    return    false;    }    return    true;    }    [CLASS]        CpioArchiveInputStream    [METHOD]    matches    [RETURN_TYPE]    boolean        byte[]    signature    int    length    [VARIABLES]    byte[]    b    magic    more_magic    signature    singleByteBuf    tmp    tmpBuffer    tmpbuf    boolean    closed    entryEOF    hasCrc    swapHalfWord    InputStream    in    CpioArchiveEntry    entry    ret    long    count    crc    entryBytesRead    n    namesize    skip    int    length        	compress_968_CpioArchiveInputStream_1_1	442	1	src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java
1092	[PATCH]    if    (signature[4]    !=    0x63)    {	[BUG]    [BUGGY]    if    (signature[0]    !=    0x63)    {    [FE]    org.apache.commons.compress.archivers.ArchiveException:    No    Archiver    found    for    the    stream    signature    testDetection    [CONTEXT]    }    if    (signature[1]    !=    0x3c)    {    return    false;    }    if    (signature[2]    !=    0x61)    {    return    false;    }    if    (signature[3]    !=    0x72)    {    return    false;    }    [BUGGY]    if    (signature[0]    !=    0x63)    {    return    false;    }    if    (signature[5]    !=    0x68)    {    return    false;    }    if    (signature[6]    !=    0x3e)    {    return    false;    }    if    (signature[7]    !=    0x0a)    {    return    false;    [CLASS]        ArArchiveInputStream    [METHOD]    matches    [RETURN_TYPE]    boolean        byte[]    signature    int    length    [VARIABLES]    byte[]    signature    boolean    InputStream    input    pInput    long    offset    int    length        	compress_173_ArArchiveInputStream_1_1	136	1	src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java
1093	[PATCH]    zvec    =    (zvec    <<    1)	[BUG]    [BUGGY]    zvec    =    (zvec    <<    0)    [FE]    org.apache.commons.compress.compressors.CompressorException:    Could    not    create    CompressorInputStream    testBzip2Unarchive    [CONTEXT]    if    (thech    >=    0)    {    bsBuffShadow    =    (bsBuffShadow    <<    8)    |    thech;    bsLiveShadow    +=    8;    continue;    }    else    {    throw    new    IOException(       "unexpected    end    of    stream   ");    }    }    bsLiveShadow--;    [BUGGY]    zvec    =    (zvec    <<    0)    |    ((bsBuffShadow    >>    bsLiveShadow)    &    1);    }    nextSym    =    perm_zt[zvec    -    base_zt[zn]];    }    final    byte    ch    =    seqToUnseq[yy[0]];    unzftab[ch    &    0xff]    +=    s    +    1;    while    (s--    >=    0)    {    ll8[++lastShadow]    =    ch;    [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    getAndMoveToFrontDecode    [RETURN_TYPE]    void        [VARIABLES]    int[][]    base    limit    perm    InputStream    in    inShadow    byte    ch    char[][]    len    temp_charArray2d    Data    data    dataShadow    int[]    base    base_zt    cftab    limit    limit_zt    minLens    perm    perm_zt    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    alphaSize    b    blockSize    blockSize100k    bsBuff    bsBuffShadow    bsLive    bsLiveShadow    computedBlockCRC    computedCombinedCRC    curr    currentChar    currentState    destOffs    eob    groupNo    groupPos    hi    i    i16    inUse16    j    last    lastShadow    len    limitLast    magic    maxLen    minLen    minLens_zt    n    nGroups    nInUse    nInUseShadow    nSelectors    nb    nextSym    offs    origPtr    pp    retChar    s    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    t    thech    v    vec    zn    zt    zvec    char[]    getAndMoveToFrontDecode_yy    len_t    length    yy    byte[]    dest    ll8    pos    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    expected    lent    magic0    magic1    magic2    magic3    magic4    magic5    su_z    tmp    boolean[]    inUse        	compress_5898_BZip2CompressorInputStream_1_1	634	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
1094	[PATCH]    if    (signature[1]    !=    0x65)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    org.apache.commons.compress.archivers.ArchiveException:    No    Archiver    found    for    the    stream    signature    testDetection    [CONTEXT]    public    static    boolean    matches(byte[]    signature,    int    length)    {        if    (length    <    8)    {    return    false;    }    if    (signature[0]    !=    0x74)    {    return    false;    }    [BUGGY]    if    (true)    {    return    false;    }    if    (signature[2]    !=    0x73)    {    return    false;    }    if    (signature[3]    !=    0x74)    {    return    false;    }    if    (signature[4]    !=    0x31)    {    return    false;    [CLASS]        TarArchiveInputStream    [METHOD]    matches    [RETURN_TYPE]    boolean        byte[]    signature    int    length    [VARIABLES]    byte[]    b    buf    headerBuf    newBuf    oneBuf    readBuf    rec    signature    skipBuf    boolean    b    debug    hasHitEOF    TarBuffer    buffer    int    BUFFER_SIZE    BYTE_MASK    LARGE_BUFFER_SIZE    SMALL_BUFFER_SIZE    blockSize    length    newLen    num    numRead    numToRead    offset    realSkip    recLen    recordSize    sz    totalRead    long    entryOffset    entrySize    numToSkip    skip    skipped    TarArchiveEntry    currEntry    e        	compress_2636_TarArchiveInputStream_1_1	420	1	src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java
1095	[PATCH]    if    (signature[6]    !=    0x3e)    {	[BUG]    [BUGGY]    if    (signature[6]    !=    -62)    {    [FE]    org.apache.commons.compress.archivers.ArchiveException:    No    Archiver    found    for    the    stream    signature    testDetection    [CONTEXT]    }    if    (signature[3]    !=    0x72)    {    return    false;    }    if    (signature[4]    !=    0x63)    {    return    false;    }    if    (signature[5]    !=    0x68)    {    return    false;    }    [BUGGY]    if    (signature[6]    !=    -62)    {    return    false;    }    if    (signature[7]    !=    0x0a)    {    return    false;    }    return    true;    }    [CLASS]        ArArchiveInputStream    [METHOD]    matches    [RETURN_TYPE]    boolean        byte[]    signature    int    length    [VARIABLES]    byte[]    signature    boolean    InputStream    input    pInput    long    offset    int    length        	compress_192_ArArchiveInputStream_1_1	142	1	src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java
1096	[PATCH]    bsBuff    |=    (v    <<    (32    -    bsLive    -    n));	[BUG]    [BUGGY]    bsBuff    |=    (v    <<    (32    /    bsLive    -    n));    [FE]    java.lang.ArithmeticException:    /    by    zero    testBzipCreation    [CONTEXT]    int    ch    =    (bsBuff    >>    24);    try    {    bsStream.write(ch);    }    catch    (IOException    e)    {    throw    e;    }    bsBuff    <<=    8;    bsLive    -=    8;    bytesOut++;    }    [BUGGY]    bsBuff    |=    (v    <<    (32    /    bsLive    -    n));    bsLive    +=    n;    }    [CLASS]        BZip2CompressorOutputStream    StackElem    [METHOD]    bsW    [RETURN_TYPE]    void        int    n    int    v    [VARIABLES]    boolean    blockRandomised    closed    firstAttempt    tooLong    CRC    mCrc    OutputStream    bsStream    f    inStream    short[]    szptr    int[]    code    freq    ftab    heap    incs    mtfFreq    parent    quadrant    weight    zptr    boolean[]    inUse    IOException    e    int    CLEARMASK    DEPTH_THRESH    GREATER_ICOST    LESSER_ICOST    QSORT_STACK_SIZE    SETMASK    SMALL_THRESH    allowableBlockSize    alphaSize    b    blockCRC    blockSize100k    bsBuff    bsLive    bv    bytesOut    ch    combinedCRC    currentChar    dd    hh    i    inBlockSize    j    k    last    ll    maxLen    minLen    n    n1    n2    nBlocksRandomised    nHeap    nInUse    nMTF    nNodes    origPtr    runLength    tmp    v    vec    workDone    workFactor    workLimit    yy    zz    char[]    block    len    length    selector    selectorMtf    seqToUnseq    unseqToSeq        	compress_8744_BZip2CompressorOutputStream_1_1	553	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java
1097	[PATCH]    if    (signature[2]    !=    0x73)    {	[BUG]    [BUGGY]    if    (signature[2]    !=    -115)    {    [FE]    org.apache.commons.compress.archivers.ArchiveException:    No    Archiver    found    for    the    stream    signature    testDetection    [CONTEXT]    if    (length    <    8)    {    return    false;    }    if    (signature[0]    !=    0x74)    {    return    false;    }    if    (signature[1]    !=    0x65)    {    return    false;    }    [BUGGY]    if    (signature[2]    !=    -115)    {    return    false;    }    if    (signature[3]    !=    0x74)    {    return    false;    }    if    (signature[4]    !=    0x31)    {    return    false;    }    if    (signature[5]    !=    0x2e)    {    return    false;    [CLASS]        TarArchiveInputStream    [METHOD]    matches    [RETURN_TYPE]    boolean        byte[]    signature    int    length    [VARIABLES]    byte[]    b    buf    headerBuf    newBuf    oneBuf    readBuf    rec    signature    skipBuf    boolean    b    debug    hasHitEOF    TarBuffer    buffer    int    BUFFER_SIZE    BYTE_MASK    LARGE_BUFFER_SIZE    SMALL_BUFFER_SIZE    blockSize    length    newLen    num    numRead    numToRead    offset    realSkip    recLen    recordSize    sz    totalRead    long    entryOffset    entrySize    numToSkip    skip    skipped    TarArchiveEntry    currEntry    e        	compress_2641_TarArchiveInputStream_1_1	423	1	src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java
1098	[PATCH]    bsLiveShadow    +=    8;	[BUG]    [BUGGY]    bsLiveShadow    +=    0;    [FE]    org.apache.commons.compress.compressors.CompressorException:    Could    not    create    CompressorInputStream    testBzip2Unarchive    [CONTEXT]    }    int    zn    =    minLens_zt;            while    (bsLiveShadow    <    zn)    {    final    int    thech    =    inShadow.read();    if    (thech    >=    0)    {    bsBuffShadow    =    (bsBuffShadow    <<    8)    |    thech;    [BUGGY]    bsLiveShadow    +=    0;    continue;    }    else    {    throw    new    IOException(   "unexpected    end    of    stream   ");    }    }    int    zvec    =    (bsBuffShadow    >>    (bsLiveShadow    -    zn))    &    ((1    <<    zn)    -    1);    bsLiveShadow    -=    zn;    while    (zvec    >    limit_zt[zn])    {    [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    getAndMoveToFrontDecode    [RETURN_TYPE]    void        [VARIABLES]    int[][]    base    limit    perm    InputStream    in    inShadow    byte    ch    char[][]    len    temp_charArray2d    Data    data    dataShadow    int[]    base    base_zt    cftab    limit    limit_zt    minLens    perm    perm_zt    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    alphaSize    b    blockSize    blockSize100k    bsBuff    bsBuffShadow    bsLive    bsLiveShadow    computedBlockCRC    computedCombinedCRC    curr    currentChar    currentState    destOffs    eob    groupNo    groupPos    hi    i    i16    inUse16    j    last    lastShadow    len    limitLast    magic    maxLen    minLen    minLens_zt    n    nGroups    nInUse    nInUseShadow    nSelectors    nb    nextSym    offs    origPtr    pp    retChar    s    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    t    thech    v    vec    zn    zt    zvec    char[]    getAndMoveToFrontDecode_yy    len_t    length    yy    byte[]    dest    ll8    pos    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    expected    lent    magic0    magic1    magic2    magic3    magic4    magic5    su_z    tmp    boolean[]    inUse        	compress_6021_BZip2CompressorInputStream_1_1	693	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
1099	[PATCH]    result[0]    =    (byte)    (value    &    BYTE_MASK);	[BUG]    [BUGGY]    result[-1]    =    (byte)    (value    &    BYTE_MASK);    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testJarUnarchive    [CONTEXT]    public    byte[]    getBytes()    {    byte[]    result    =    new    byte[2];    [BUGGY]    result[-1]    =    (byte)    (value    &    BYTE_MASK);    result[1]    =    (byte)    ((value    &    BYTE_1_MASK)    >>    BYTE_1_SHIFT);    return    result;    }    [CLASS]        ZipShort    [METHOD]    getBytes    [RETURN_TYPE]    byte[]        [VARIABLES]    byte[]    result    int    BYTE_1_MASK    BYTE_1_SHIFT    BYTE_MASK    offset    value    boolean        	compress_1601_ZipShort_1_1	63	1	src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java
1100	[PATCH]    if    (Integer.TYPE.equals(cls))    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    int    ->    long    test_isAssignable_Widening    [CONTEXT]    }    }    }    if    (cls.equals(toClass))    {    return    true;    }    if    (cls.isPrimitive())    {    if    (toClass.isPrimitive()    ==    false)    {    return    false;    }    [BUGGY]    if    (false)    {    return    Long.TYPE.equals(toClass)    ||    Float.TYPE.equals(toClass)    ||    Double.TYPE.equals(toClass);    }    if    (Long.TYPE.equals(cls))    {    return    Float.TYPE.equals(toClass)    ||    Double.TYPE.equals(toClass);    }    if    (Boolean.TYPE.equals(cls))    {    return    false;    [CLASS]        ClassUtils    [METHOD]    isAssignable    [RETURN_TYPE]    boolean        Class<?>    cls    Class<?>    toClass    final    boolean    autoboxing    [VARIABLES]    char    INNER_CLASS_SEPARATOR_CHAR    PACKAGE_SEPARATOR_CHAR    Class    cls    toClass    String    INNER_CLASS_SEPARATOR    PACKAGE_SEPARATOR    abbreviation    className    out    primitive    valueIfNull    boolean    autoboxing    Map    abbreviationMap    primitiveWrapperMap    reverseAbbreviationMap    wrapperPrimitiveMap        	lang_4924_ClassUtils_1_1	646	1	src/main/java/org/apache/commons/lang3/ClassUtils.java
1101	[PATCH]    dst[dstPos    +    i]    =    (byte)(0xff    &    (src    >>    shift));	[BUG]    [BUGGY]    dst[dstPos    /    i]    =    (byte)(0xff    &    (src    >>    shift));    [FE]    java.lang.ArithmeticException:    /    by    zero    testShortToByteArray    [CONTEXT]    if    (0    ==    nBytes)    {    return    dst;    }    if    ((nBytes    -    1)    *    8    +    srcPos    >=    16)    {    throw    new    IllegalArgumentException(       "(nBytes-1)*8+srcPos    is    greather    or    equal    to    than    16   ");    }    int    shift    =    0;    for    (int    i    =    0;    i    <    nBytes;    i++    )    {    shift    =    i    *    8    +    srcPos;    [BUGGY]    dst[dstPos    /    i]    =    (byte)(0xff    &    (src    >>    shift));    }    return    dst;    }    [CLASS]        Conversion    [METHOD]    shortToByteArray    [RETURN_TYPE]    byte[]        final    short    src    final    int    srcPos    final    byte[]    dst    final    int    dstPos    final    int    nBytes    [VARIABLES]    byte[]    dst    boolean    short    src    int    dstPos    i    nBytes    shift    srcPos        	lang_7206_Conversion_1_1	1366	1	src/main/java/org/apache/commons/lang3/Conversion.java
1102	[PATCH]    final    int    pads    =    size    -    str.length();	[BUG]    [BUGGY]    final    int    pads    =    size    %    str.length();    [FE]    java.lang.ArithmeticException:    /    by    zero    testRightPad_StringInt    [CONTEXT]    public    static    String    rightPad(final    String    str,    final    int    size,    final    char    padChar)    {    if    (str    ==    null)    {    return    null;    }    [BUGGY]    final    int    pads    =    size    %    str.length();    if    (pads    <=    0)    {    return    str;    }    if    (pads    >    PAD_LIMIT)    {    return    rightPad(str,    size,    String.valueOf(padChar));    }    return    str.concat(repeat(padChar,    pads));    }    [CLASS]        StringUtils    [METHOD]    rightPad    [RETURN_TYPE]    String        String    str    final    int    size    final    char    padChar    [VARIABLES]    char    padChar    Pattern    WHITESPACE_PATTERN    pattern    String    CR    EMPTY    LF    SPACE    close    decomposed    input    invalidChars    open    overlay    regex    remove    replaceChars    replacement    result    ret    searchChars    searchString    separator    separatorChars    source    str    stripChars    tag    text    ts    validChars    boolean    int    INDEX_NOT_FOUND    PAD_LIMIT    beg    closeLen    count    csLast    csLen    csLength    currentType    end    endIndex    endLimit    found    greater    i    increase    index    inputLength    j    lastIdx    len    max    newTokenStart    noOfItems    numberOfSubstrings    openLen    ordinal    outputLength    pads    pos    repeat    replLength    replaceCharsLength    replaceIndex    replacementLength    ret    searchChar    searchLast    searchLen    searchLength    separatorLength    size    sizePlus1    start    startIndex    startPos    strLen    strLength    strsLen    sz    temp    tempIndex    textIndex    textLength    timeToLive    tmp    tokenStart    type        	lang_13263_StringUtils_1_1	5158	1	src/main/java/org/apache/commons/lang3/StringUtils.java
1103	[PATCH]    if    ((ch0    ==    'o'    ||    ch0    ==    'O')    &&	[BUG]    [BUGGY]    if    ((false    ||    ch0    ==    'O')    &&    [FE]    junit.framework.AssertionFailedError:    expected:<true>    but    was:<null>    test_toBooleanObject_String    [CONTEXT]    }    if    (ch0    ==    'n'    ||    ch0    ==    'N'    ||    ch0    ==    'f'    ||    ch0    ==    'F')    {    return    Boolean.FALSE;    }    break;    }    case    2:    {    final    char    ch0    =    str.charAt(0);    final    char    ch1    =    str.charAt(1);    [BUGGY]    if    ((false    ||    ch0    ==    'O')    &&    (ch1    ==    'n'    ||    ch1    ==    'N')    )    {    return    Boolean.TRUE;    }    if    ((ch0    ==    'n'    ||    ch0    ==    'N')    &&    (ch1    ==    'o'    ||    ch1    ==    'O')    )    {    return    Boolean.FALSE;    }    break;    }    case    3:    {    [CLASS]        BooleanUtils    [METHOD]    toBooleanObject    [RETURN_TYPE]    Boolean        String    str    [VARIABLES]    boolean    char    ch0    ch1    ch2    ch3    ch4    String    str        	lang_3661_BooleanUtils_1_1	574	1	src/main/java/org/apache/commons/lang3/BooleanUtils.java
1104	[PATCH]    if    (gcd    ==    1)    {	[BUG]    [BUGGY]    if    (gcd    ==    0)    {    [FE]    junit.framework.AssertionFailedError:    expected    same:<-2/3>    was    not:<-2/3>    testReduce    [CONTEXT]    public    Fraction    reduce()    {    if    (numerator    ==    0)    {    return    equals(ZERO)    ?    this    :    ZERO;    }    final    int    gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    [BUGGY]    if    (gcd    ==    0)    {    return    this;    }    return    Fraction.getFraction(numerator    /    gcd,    denominator    /    gcd);    }    [CLASS]        Fraction    [METHOD]    reduce    [RETURN_TYPE]    Fraction        [VARIABLES]    Fraction    FOUR_FIFTHS    ONE    ONE_FIFTH    ONE_HALF    ONE_QUARTER    ONE_THIRD    THREE_FIFTHS    THREE_QUARTERS    TWO_FIFTHS    TWO_QUARTERS    TWO_THIRDS    ZERO    String    str    toProperString    toString    boolean    long    numeratorValue    serialVersionUID    int    a1    a2    denom    denom0    denom1    denom2    denominator    gcd    hashCode    i    numer    numer0    numer1    numer2    numerator    pos    sign    whole    wholeNumber        	lang_16958_Fraction_1_1	474	1	src/main/java/org/apache/commons/lang3/math/Fraction.java
1105	[PATCH]    &&    (f.getName().indexOf('$')    ==    -1)	[BUG]    [BUGGY]    &&    (f.getName().indexOf('$')    ==    0)    [FE]    junit.framework.AssertionFailedError    testReflectionHierarchyCompareExcludeFields    [CONTEXT]    final    Class<?>    clazz,    final    CompareToBuilder    builder,    final    boolean    useTransients,    final    String[]    excludeFields)    {    final    Field[]    fields    =    clazz.getDeclaredFields();    AccessibleObject.setAccessible(fields,    true);    for    (int    i    =    0;    i    <    fields.length    &&    builder.comparison    ==    0;    i++)    {    final    Field    f    =    fields[i];    if    (!ArrayUtils.contains(excludeFields,    f.getName())    [BUGGY]    &&    (f.getName().indexOf('$')    ==    0)    &&    (useTransients    ||    !Modifier.isTransient(f.getModifiers()))    &&    (!Modifier.isStatic(f.getModifiers())))    {    try    {    builder.append(f.get(lhs),    f.get(rhs));    }    catch    (final    IllegalAccessException    e)    {            throw    new    InternalError(   "Unexpected    IllegalAccessException   ");    }    }    [CLASS]        CompareToBuilder    [METHOD]    reflectionAppend    [RETURN_TYPE]    void        Object    lhs    Object    rhs    Class<?>    clazz    CompareToBuilder    builder    final    boolean    useTransients    String[]    excludeFields    [VARIABLES]    Field    f    boolean    useTransients    Object    lhs    rhs    Class    clazz    String[]    excludeFields    CompareToBuilder    builder    int    comparison    i    Field[]    fields    IllegalAccessException    e        	lang_14638_CompareToBuilder_1_1	318	1	src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java
1106	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError:    escapeJava(String)    failed    expected:<\u1234[]>    but    was:<\u1234[ሴ]>    testEscapeJava    [CONTEXT]    out.write(toUtf16Escape(codepoint));    }    else    if    (codepoint    >    0xfff)    {    out.write(   "\\u   "    +    hex(codepoint));    }    else    if    (codepoint    >    0xff)    {    out.write(   "\\u0   "    +    hex(codepoint));    }    else    if    (codepoint    >    0xf)    {    out.write(   "\\u00   "    +    hex(codepoint));    }    else    {    out.write(   "\\u000   "    +    hex(codepoint));    }    [BUGGY]    return    false;    }    [CLASS]        UnicodeEscaper    [METHOD]    translate    [RETURN_TYPE]    boolean        final    int    codepoint    Writer    out    [VARIABLES]    int    above    below    codepoint    codepointHigh    codepointLow    Writer    out    boolean    between        	lang_20151_UnicodeEscaper_1_1	126	1	src/main/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java
1107	[PATCH]    int    end    =    index    +    2;	[BUG]    [BUGGY]    int    end    =    index    +    -2;    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    -2    testBetween    [CONTEXT]    public    int    translate(final    CharSequence    input,    final    int    index,    final    Writer    out)    throws    IOException    {    if(input.charAt(index)    ==    '\\'    &&    index    <    (input.length()    -    1)    &&    Character.isDigit(input.charAt(index    +    1))    )    {    final    int    start    =    index    +    1;        [BUGGY]    int    end    =    index    +    -2;    while    (    end    <    input.length()    &&    Character.isDigit(input.charAt(end))    )    {    end++;    if    (    Integer.parseInt(input.subSequence(start,    end).toString(),    10)    >    OCTAL_MAX)    {    end--;    break;    }    }    out.write(    Integer.parseInt(input.subSequence(start,    end).toString(),    8)    );    return    1    +    end    -    start;    [CLASS]        OctalUnescaper    [METHOD]    translate    [RETURN_TYPE]    int        CharSequence    input    final    int    index    Writer    out    [VARIABLES]    CharSequence    input    boolean    int    OCTAL_MAX    end    index    start    Writer    out        	lang_20442_OctalUnescaper_1_1	46	1	src/main/java/org/apache/commons/lang3/text/translate/OctalUnescaper.java
1108	[PATCH]    buffer.append((char)(value    /    10    +    '0'));	[BUG]    [BUGGY]    buffer.append((char)(value    /    10    -    '0'));    [FE]    junit.framework.AssertionFailedError:    expected:<2005-01-[01T12:00:0]0>    but    was:<2005-01-[￐1T￑2:￐0:￐]0>    testFormatUTC    [CONTEXT]    public    final    void    appendTo(final    StringBuffer    buffer,    final    int    value)    {    if    (value    <    100)    {    [BUGGY]    buffer.append((char)(value    /    10    -    '0'));    buffer.append((char)(value    %    10    +    '0'));    }    else    {    buffer.append(Integer.toString(value));    }    }    [CLASS]        FastDatePrinter    CharacterLiteral    StringLiteral    TextField    UnpaddedNumberField    UnpaddedMonthField    PaddedNumberField    TwoDigitNumberField    TwoDigitYearField    TwoDigitMonthField    TwelveHourField    TwentyFourHourField    TimeZoneNameRule    TimeZoneNumberRule    TimeZoneDisplayKey    [METHOD]    appendTo    [RETURN_TYPE]    void        StringBuffer    buffer    final    int    value    [VARIABLES]    Locale    locale    mLocale    TimeZoneNumberRule    INSTANCE_COLON    INSTANCE_NO_COLON    ConcurrentMap    cTimeZoneDisplayCache    TwoDigitYearField    INSTANCE    String    mDaylight    mPattern    mStandard    mValue    pattern    sub    token    value    String[]    AmPmStrings    ERAs    mValues    months    shortMonths    shortWeekdays    values    weekdays    long    millis    serialVersionUID    int    FULL    LONG    MEDIUM    SHORT    digits    field    i    len    length    mField    mMaxLengthEstimate    mSize    mStyle    max    padding    size    style    tokenLen    value    Rule[]    mRules    TimeZone    mTimeZone    timeZone    StringBuffer    buffer    boolean    colon    daylight    inLiteral    mColon    NumberRule    mRule    rule    char    c    mValue    peek    value    TwoDigitMonthField    INSTANCE    UnpaddedMonthField    INSTANCE        	lang_21039_FastDatePrinter_1_1	900	1	src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java
1109	[PATCH]    if    (str    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.NullPointerException    testCaseFunctions    [CONTEXT]    public    static    String    upperCase(final    String    str)    {    [BUGGY]    if    (false)    {    return    null;    }    return    str.toUpperCase();    }    [CLASS]        StringUtils    [METHOD]    upperCase    [RETURN_TYPE]    String        String    str    [VARIABLES]    Pattern    WHITESPACE_PATTERN    pattern    String    CR    EMPTY    LF    SPACE    close    decomposed    input    invalidChars    open    overlay    padStr    regex    remove    replaceChars    replacement    result    ret    searchChars    searchString    separator    separatorChars    source    str    stripChars    tag    text    ts    validChars    boolean    int    INDEX_NOT_FOUND    PAD_LIMIT    beg    closeLen    count    csLast    csLen    csLength    currentType    end    endIndex    endLimit    found    greater    i    increase    index    inputLength    j    lastIdx    len    max    newTokenStart    noOfItems    numberOfSubstrings    openLen    ordinal    outputLength    padLen    pads    pos    repeat    replLength    replaceCharsLength    replaceIndex    replacementLength    ret    searchChar    searchLast    searchLen    searchLength    separatorLength    size    sizePlus1    start    startIndex    startPos    strLen    strLength    strsLen    sz    temp    tempIndex    textIndex    textLength    timeToLive    tmp    tokenStart    type        	lang_13446_StringUtils_1_1	5481	1	src/main/java/org/apache/commons/lang3/StringUtils.java
1110	[PATCH]    if    ((nBytes    -    1)    *    8    +    srcPos    >=    64)    {	[BUG]    [BUGGY]    if    ((nBytes    *    1)    *    8    +    srcPos    >=    64)    {    [FE]    java.lang.IllegalArgumentException:    (nBytes-1)*8+srcPos    is    greather    or    equal    to    than    64    testUuidToByteArray    [CONTEXT]    public    static    byte[]    longToByteArray(final    long    src,    final    int    srcPos,    final    byte[]    dst,    final    int    dstPos,    final    int    nBytes)    {    if    (0    ==    nBytes)    {    return    dst;    }    [BUGGY]    if    ((nBytes    *    1)    *    8    +    srcPos    >=    64)    {    throw    new    IllegalArgumentException(       "(nBytes-1)*8+srcPos    is    greather    or    equal    to    than    64   ");    }    int    shift    =    0;    for    (int    i    =    0;    i    <    nBytes;    i++    )    {    shift    =    i    *    8    +    srcPos;    dst[dstPos    +    i]    =    (byte)(0xff    &    (src    >>    shift));    }    return    dst;    }    [CLASS]        Conversion    [METHOD]    longToByteArray    [RETURN_TYPE]    byte[]        final    long    src    final    int    srcPos    final    byte[]    dst    final    int    dstPos    final    int    nBytes    [VARIABLES]    byte[]    dst    boolean    long    src    int    dstPos    i    nBytes    shift    srcPos        	lang_7057_Conversion_1_1	1292	1	src/main/java/org/apache/commons/lang3/Conversion.java
1111	[PATCH]    result[value.ordinal()    /    Long.SIZE]    |=    1    <<    (value.ordinal()    %    Long.SIZE);	[BUG]    [BUGGY]    result[value.ordinal()    /    Long.SIZE]    |=    -1    <<    (value.ordinal()    %    Long.SIZE);    [FE]    junit.framework.AssertionFailedError:    arrays    first    differed    at    element    [0];    expected:<1>    but    was:<-1>    test_generateBitVectorsFromArray    [CONTEXT]    public    static    <E    extends    Enum<E>>    long[]    generateBitVectors(final    Class<E>    enumClass,    final    E...    values)    {    asEnum(enumClass);    Validate.noNullElements(values);    final    EnumSet<E>    condensed    =    EnumSet.noneOf(enumClass);    Collections.addAll(condensed,    values);    final    long[]    result    =    new    long[(enumClass.getEnumConstants().length    -    1)    /    Long.SIZE    +    1];    for    (final    E    value    :    condensed)    {    [BUGGY]    result[value.ordinal()    /    Long.SIZE]    |=    -1    <<    (value.ordinal()    %    Long.SIZE);    }    ArrayUtils.reverse(result);    return    result;    }    [CLASS]        EnumUtils    [METHOD]    generateBitVectors    [RETURN_TYPE]    <E        Class<E>    enumClass    values    [VARIABLES]    boolean    long[]    result    E    value    E[]    values    EnumSet    condensed    Class    enumClass    String    CANNOT_STORE_S_S_VALUES_IN_S_BITS    ENUM_CLASS_MUST_BE_DEFINED    NULL_ELEMENTS_NOT_PERMITTED    S_DOES_NOT_SEEM_TO_BE_AN_ENUM_TYPE    enumName        	lang_7852_EnumUtils_1_1	230	1	src/main/java/org/apache/commons/lang3/EnumUtils.java
1112	[PATCH]    deleteImpl(i,    i    +    1,    1);	[BUG]    [BUGGY]    deleteImpl(i,    i    -    1,    1);    [FE]    java.lang.ArrayIndexOutOfBoundsException    testDeleteFirst_char    [CONTEXT]    public    StrBuilder    deleteFirst(final    char    ch)    {    for    (int    i    =    0;    i    <    size;    i++)    {    if    (buffer[i]    ==    ch)    {    [BUGGY]    deleteImpl(i,    i    -    1,    1);    break;    }    }    return    this;    }    [CLASS]        StrBuilder    StrBuilderTokenizer    StrBuilderReader    StrBuilderWriter    [METHOD]    deleteFirst    [RETURN_TYPE]    StrBuilder        final    char    ch    [VARIABLES]    char    ch    String    defaultIfEmpty    format    newLine    nullText    separator    standard    str    boolean    int    CAPACITY    capacity    destinationIndex    endIndex    i    index    initialCapacity    len    length    loopIndex    mark    newEnd    newSize    offset    oldEnd    padLen    pos    size    start    startIndex    strLen    value    width    long    serialVersionUID    value    char[]    buffer    chars    destination    old        	lang_9207_StrBuilder_1_1	1723	1	src/main/java/org/apache/commons/lang3/text/StrBuilder.java
1113	[PATCH]    (mulAndCheck(numerator/d1,    fraction.numerator/d2),	[BUG]    [BUGGY]    (mulAndCheck(numerator/d1,    fraction.numerator    +    d2),    [FE]    junit.framework.AssertionFailedError:    expected:<9>    but    was:<12>    testPow    [CONTEXT]    throw    new    IllegalArgumentException(   "The    fraction    must    not    be    null   ");    }    if    (numerator    ==    0    ||    fraction.numerator    ==    0)    {    return    ZERO;    }            final    int    d1    =    greatestCommonDivisor(numerator,    fraction.denominator);    final    int    d2    =    greatestCommonDivisor(fraction.numerator,    denominator);    return    getReducedFraction    [BUGGY]    (mulAndCheck(numerator/d1,    fraction.numerator    +    d2),    mulPosAndCheck(denominator/d2,    fraction.denominator/d1));    }    [CLASS]        Fraction    [METHOD]    multiplyBy    [RETURN_TYPE]    Fraction        Fraction    fraction    [VARIABLES]    Fraction    FOUR_FIFTHS    ONE    ONE_FIFTH    ONE_HALF    ONE_QUARTER    ONE_THIRD    THREE_FIFTHS    THREE_QUARTERS    TWO_FIFTHS    TWO_QUARTERS    TWO_THIRDS    ZERO    f    fraction    String    str    toProperString    toString    boolean    long    m    numeratorValue    s    serialVersionUID    int    a1    a2    d1    d2    denom    denom0    denom1    denom2    denominator    gcd    hashCode    i    k    numer    numer0    numer1    numer2    numerator    pos    power    sign    t    tmodd1    u    upv    uvp    v    whole    wholeNumber    x    y        	lang_17340_Fraction_1_1	808	1	src/main/java/org/apache/commons/lang3/math/Fraction.java
1114	[PATCH]    if    (arrayStart    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<>    but    was:<null>    testSetArrayStart    [CONTEXT]    protected    void    setArrayStart(String    arrayStart)    {    [BUGGY]    if    (false)    {    arrayStart    =       "   ";    }    this.arrayStart    =    arrayStart;    }    [CLASS]        ToStringStyle    DefaultToStringStyle    NoFieldNameToStringStyle    ShortPrefixToStringStyle    SimpleToStringStyle    MultiLineToStringStyle    [METHOD]    setArrayStart    [RETURN_TYPE]    void        String    arrayStart    [VARIABLES]    ToStringStyle    DEFAULT_STYLE    MULTI_LINE_STYLE    NO_FIELD_NAMES_STYLE    SHORT_PREFIX_STYLE    SIMPLE_STYLE    boolean    arrayContentDetail    defaultFullDetail    detail    fieldSeparatorAtEnd    fieldSeparatorAtStart    match    useClassName    useFieldNames    useIdentityHashCode    useShortClassName    value    String    arrayEnd    arraySeparator    arrayStart    contentEnd    contentStart    data    fieldName    fieldNameValueSeparator    fieldSeparator    nullText    sizeEndText    sizeStartText    summaryObjectEndText    summaryObjectStartText    superToString    toString    ThreadLocal    REGISTRY    long    serialVersionUID    value        	lang_660_ToStringStyle_1_1	1740	1	src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java
1115	[PATCH]    if    (sz    >    start    +    1    &&    chars[start]    ==    '0'    &&    chars[start    +    1]    ==    'x')    {	[BUG]    [BUGGY]    if    (sz    >    start    /    1    &&    chars[start]    ==    '0'    &&    chars[start    +    1]    ==    'x')    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    1    testIsNumber    [CONTEXT]    return    false;    }    final    char[]    chars    =    str.toCharArray();    int    sz    =    chars.length;    boolean    hasExp    =    false;    boolean    hasDecPoint    =    false;    boolean    allowSigns    =    false;    boolean    foundDigit    =    false;        final    int    start    =    (chars[0]    ==    '-')    ?    1    :    0;    [BUGGY]    if    (sz    >    start    /    1    &&    chars[start]    ==    '0'    &&    chars[start    +    1]    ==    'x')    {    int    i    =    start    +    2;    if    (i    ==    sz)    {    return    false;    }        for    (;    i    <    chars.length;    i++)    {    if    ((chars[i]    <    '0'    ||    chars[i]    >    '9')    &&    (chars[i]    <    'a'    ||    chars[i]    >    'f')    &&    (chars[i]    <    'A'    ||    chars[i]    >    'F'))    {    return    false;    [CLASS]        NumberUtils    [METHOD]    isNumber    [RETURN_TYPE]    boolean        String    str    [VARIABLES]    Integer    INTEGER_MINUS_ONE    INTEGER_ONE    INTEGER_ZERO    Float    FLOAT_MINUS_ONE    FLOAT_ONE    FLOAT_ZERO    f    boolean    allowSigns    foundDigit    hasDecPoint    hasExp    Byte    BYTE_MINUS_ONE    BYTE_ONE    BYTE_ZERO    Long    LONG_MINUS_ONE    LONG_ONE    LONG_ZERO    String    str    Double    DOUBLE_MINUS_ONE    DOUBLE_ONE    DOUBLE_ZERO    d    Short    SHORT_MINUS_ONE    SHORT_ONE    SHORT_ZERO    int    i    start    sz    char[]    chars        	lang_18249_NumberUtils_1_1	1346	1	src/main/java/org/apache/commons/lang3/math/NumberUtils.java
1116	[PATCH]    size    +=    4;	[BUG]    [BUGGY]    size    +=    -4;    [FE]    junit.framework.AssertionFailedError:    expected:<tr[uebarbaz]>    but    was:<tr[]>    testInsert    [CONTEXT]    public    StrBuilder    insert(int    index,    final    boolean    value)    {    validateIndex(index);    if    (value)    {    ensureCapacity(size    +    4);    System.arraycopy(buffer,    index,    buffer,    index    +    4,    size    -    index);    buffer[index++]    =    't';    buffer[index++]    =    'r';    buffer[index++]    =    'u';    buffer[index]    =    'e';    [BUGGY]    size    +=    -4;    }    else    {    ensureCapacity(size    +    5);    System.arraycopy(buffer,    index,    buffer,    index    +    5,    size    -    index);    buffer[index++]    =    'f';    buffer[index++]    =    'a';    buffer[index++]    =    'l';    buffer[index++]    =    's';    buffer[index]    =    'e';    size    +=    5;    }    [CLASS]        StrBuilder    StrBuilderTokenizer    StrBuilderReader    StrBuilderWriter    [METHOD]    insert    [RETURN_TYPE]    StrBuilder        int    index    final    boolean    value    [VARIABLES]    String    defaultIfEmpty    format    newLine    nullText    separator    standard    str    boolean    value    int    CAPACITY    capacity    destinationIndex    endIndex    i    index    initialCapacity    len    length    loopIndex    mark    newEnd    newSize    offset    oldEnd    padLen    pos    size    startIndex    strLen    value    width    long    serialVersionUID    value    char[]    buffer    chars    destination    old        	lang_9109_StrBuilder_1_1	1579	1	src/main/java/org/apache/commons/lang3/text/StrBuilder.java
1117	[PATCH]    int    wrapperFrameIndex    =    wrapperFrames.size()    -    1;	[BUG]    [BUGGY]    int    wrapperFrameIndex    =    wrapperFrames.size()    -    0;    [FE]    java.lang.IndexOutOfBoundsException:    Index:    44,    Size:    44    testPrintRootCauseStackTrace_ThrowableStream    [CONTEXT]    public    static    void    removeCommonFrames(final    List<String>    causeFrames,    final    List<String>    wrapperFrames)    {    if    (causeFrames    ==    null    ||    wrapperFrames    ==    null)    {    throw    new    IllegalArgumentException(   "The    List    must    not    be    null   ");    }    int    causeFrameIndex    =    causeFrames.size()    -    1;    [BUGGY]    int    wrapperFrameIndex    =    wrapperFrames.size()    -    0;    while    (causeFrameIndex    >=    0    &&    wrapperFrameIndex    >=    0)    {            final    String    causeFrame    =    causeFrames.get(causeFrameIndex);    final    String    wrapperFrame    =    wrapperFrames.get(wrapperFrameIndex);    if    (causeFrame.equals(wrapperFrame))    {    causeFrames.remove(causeFrameIndex);    }    causeFrameIndex--;    wrapperFrameIndex--;    [CLASS]        ExceptionUtils    [METHOD]    removeCommonFrames    [RETURN_TYPE]    void        String>    causeFrames    String>    wrapperFrames    [VARIABLES]    List    causeFrames    wrapperFrames    String    WRAPPED_MARKER    causeFrame    element    methodName    wrapperFrame    String[]    CAUSE_METHOD_NAMES    methodNames    trace    boolean    int    causeFrameIndex    wrapperFrameIndex        	lang_16509_ExceptionUtils_1_1	555	1	src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java
1118	[PATCH]    d[i]    =    Math.min(Math.min(d[i    -    1]    +    1,    p[i]    +    1),    p[i    -    1]    +    cost);	[BUG]    [BUGGY]    d[i]    =    Math.min(Math.min(d[i    -    1]    +    1,    p[i]    +    1),    p[i    +    1]    +    cost);    [FE]    java.lang.ArrayIndexOutOfBoundsException:    4    testGetLevenshteinDistance_StringString    [CONTEXT]    p[i]    =    i;    }    for    (j    =    1;    j    <=    m;    j++)    {    t_j    =    t.charAt(j    -    1);    d[0]    =    j;    for    (i    =    1;    i    <=    n;    i++)    {    cost    =    s.charAt(i    -    1)    ==    t_j    ?    0    :    1;        [BUGGY]    d[i]    =    Math.min(Math.min(d[i    -    1]    +    1,    p[i]    +    1),    p[i    +    1]    +    cost);    }        _d    =    p;    p    =    d;    d    =    _d;    }                [CLASS]        StringUtils    [METHOD]    getLevenshteinDistance    [RETURN_TYPE]    int        CharSequence    s    CharSequence    t    [VARIABLES]    Pattern    WHITESPACE_PATTERN    pattern    boolean    CharSequence    s    t    tmp    char    t_j    int[]    _d    d    p    String    CR    EMPTY    LF    SPACE    abrevMarker    close    decomposed    defaultStr    input    invalidChars    middle    open    overlay    padStr    regex    remove    replaceChars    replacement    result    ret    searchChars    searchString    separator    separatorChars    source    str    str1    str2    stripChars    tag    text    ts    validChars    int    INDEX_NOT_FOUND    PAD_LIMIT    arrayLen    arrayPos    at    beg    closeLen    cost    count    csLast    csLen    csLength    currentType    end    endIndex    endLimit    endOffset    firstDiff    found    greater    i    idx    increase    index    inputLength    j    lastIdx    len    length    longestStrLen    m    max    maxWidth    n    newTokenStart    noOfItems    numberOfSubstrings    offset    openLen    ordinal    outputLength    padLen    pads    pos    repeat    replLength    replaceCharsLength    replaceIndex    replacementLength    ret    searchChar    searchLast    searchLen    searchLength    separatorLength    shortestStrLen    size    sizePlus1    smallestIndexOfDiff    start    startIndex    startOffset    startPos    strLen    strLength    stringPos    strsLen    sz    targetSting    temp    tempIndex    textIndex    textLength    timeToLive    tmp    tokenStart    type        	lang_14089_StringUtils_1_1	6697	1	src/main/java/org/apache/commons/lang3/StringUtils.java
1119	[PATCH]    shift    =    i    *    16    +    dstPos;	[BUG]    [BUGGY]    shift    =    i    %    16    +    dstPos;    [FE]    junit.framework.AssertionFailedError:    expected:<4039233009>    but    was:<123267>    testShortArrayToLong    [CONTEXT]    if    ((src.length    ==    0    &&    srcPos    ==    0)    ||    0    ==    nShorts)    {    return    dstInit;    }    if    ((nShorts    -    1)    *    16    +    dstPos    >=    64)    {    throw    new    IllegalArgumentException(       "(nShorts-1)*16+dstPos    is    greather    or    equal    to    than    64   ");    }    long    out    =    dstInit;    int    shift    =    0;    for    (int    i    =    0;    i    <    nShorts;    i++    )    {    [BUGGY]    shift    =    i    %    16    +    dstPos;    final    long    bits    =    (0xffffL    &    src[i    +    srcPos])    <<    shift;    final    long    mask    =    0xffffL    <<    shift;    out    =    (out    &    ~mask)    |    bits;    }    return    out;    }    [CLASS]        Conversion    [METHOD]    shortArrayToLong    [RETURN_TYPE]    long        final    short[]    src    final    int    srcPos    final    long    dstInit    final    int    dstPos    final    int    nShorts    [VARIABLES]    boolean    short[]    src    int    dstPos    i    nShorts    shift    srcPos    long    bits    dstInit    mask    out        	lang_5954_Conversion_1_1	732	1	src/main/java/org/apache/commons/lang3/Conversion.java
1120	[PATCH]    if    (str    ==    null    ||    searchStrs    ==    null)    {	[BUG]    [BUGGY]    if    (str    ==    null    !=    (searchStrs    ==    null))    {    [FE]    java.lang.NullPointerException    testLastIndexOfAny_StringStringArray    [CONTEXT]    public    static    int    lastIndexOfAny(final    CharSequence    str,    final    CharSequence...    searchStrs)    {    [BUGGY]    if    (str    ==    null    !=    (searchStrs    ==    null))    {    return    INDEX_NOT_FOUND;    }    final    int    sz    =    searchStrs.length;    int    ret    =    INDEX_NOT_FOUND;    int    tmp    =    0;    for    (int    i    =    0;    i    <    sz;    i++)    {    final    CharSequence    search    =    searchStrs[i];    if    (search    ==    null)    {    continue;    }    [CLASS]        StringUtils    [METHOD]    lastIndexOfAny    [RETURN_TYPE]    int        CharSequence    str    searchStrs    [VARIABLES]    CharSequence    search    str    CharSequence[]    searchStrs    Pattern    WHITESPACE_PATTERN    pattern    String    CR    EMPTY    LF    SPACE    decomposed    input    invalidChars    searchChars    str    stripChars    ts    validChars    boolean    int    INDEX_NOT_FOUND    PAD_LIMIT    csLast    csLen    csLength    end    endLimit    found    i    index    j    len    max    ordinal    ret    searchChar    searchLast    searchLen    searchLength    start    startPos    strLen    strsLen    sz    tmp        	lang_11804_StringUtils_1_1	1915	1	src/main/java/org/apache/commons/lang3/StringUtils.java
1121	[PATCH]    long    max    =    array[0];	[BUG]    [BUGGY]    long    max    =    array[1];    [FE]    java.lang.ArrayIndexOutOfBoundsException:    1    testMaxLong    [CONTEXT]    public    static    long    max(final    long[]    array)    {        validateArray(array);            [BUGGY]    long    max    =    array[1];    for    (int    j    =    1;    j    <    array.length;    j++)    {    if    (array[j]    >    max)    {    max    =    array[j];    }    }    return    max;    }    [CLASS]        NumberUtils    [METHOD]    max    [RETURN_TYPE]    long        final    long[]    array    [VARIABLES]    Integer    INTEGER_MINUS_ONE    INTEGER_ONE    INTEGER_ZERO    Float    FLOAT_MINUS_ONE    FLOAT_ONE    FLOAT_ZERO    f    boolean    long[]    array    Byte    BYTE_MINUS_ONE    BYTE_ONE    BYTE_ZERO    Long    LONG_MINUS_ONE    LONG_ONE    LONG_ZERO    Double    DOUBLE_MINUS_ONE    DOUBLE_ONE    DOUBLE_ZERO    d    Short    SHORT_MINUS_ONE    SHORT_ONE    SHORT_ZERO    long    max    int    j        	lang_18071_NumberUtils_1_1	939	1	src/main/java/org/apache/commons/lang3/math/NumberUtils.java
1122	[PATCH]    if    (useShortClassName)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError:    expected:<[java.lang.]Integer@7c3fdb62[{<n...>    but    was:<[]Integer@7c3fdb62[{<n...>    testObjectArray    [CONTEXT]    protected    void    appendClassName(final    StringBuffer    buffer,    final    Object    object)    {    if    (useClassName    &&    object    !=    null)    {    register(object);    [BUGGY]    if    (true)    {    buffer.append(getShortClassName(object.getClass()));    }    else    {    buffer.append(object.getClass().getName());    }    }    }    [CLASS]        ToStringStyle    DefaultToStringStyle    NoFieldNameToStringStyle    ShortPrefixToStringStyle    SimpleToStringStyle    MultiLineToStringStyle    [METHOD]    appendClassName    [RETURN_TYPE]    void        StringBuffer    buffer    Object    object    [VARIABLES]    StringBuffer    buffer    boolean    arrayContentDetail    defaultFullDetail    detail    fieldSeparatorAtEnd    fieldSeparatorAtStart    match    useClassName    useFieldNames    useIdentityHashCode    useShortClassName    value    ThreadLocal    REGISTRY    ToStringStyle    DEFAULT_STYLE    MULTI_LINE_STYLE    NO_FIELD_NAMES_STYLE    SHORT_PREFIX_STYLE    SIMPLE_STYLE    Object    object    String    arrayEnd    arraySeparator    arrayStart    contentEnd    contentStart    data    fieldName    fieldNameValueSeparator    fieldSeparator    nullText    sizeEndText    sizeStartText    summaryObjectEndText    summaryObjectStartText    superToString    toString    long    serialVersionUID    value        	lang_627_ToStringStyle_1_1	1454	1	src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java
1123	[PATCH]    return    value    <    anotherVal    ?    -1    :    (value    ==    anotherVal    ?    0    :    1);	[BUG]    [BUGGY]    return    value    <    anotherVal    ?    0    :    (value    ==    anotherVal    ?    0    :    1);    [FE]    junit.framework.AssertionFailedError:    expected:<-1>    but    was:<0>    testCompareTo    [CONTEXT]    public    int    compareTo(final    MutableShort    other)    {    final    short    anotherVal    =    other.value;    [BUGGY]    return    value    <    anotherVal    ?    0    :    (value    ==    anotherVal    ?    0    :    1);    }    [CLASS]        MutableShort    [METHOD]    compareTo    [RETURN_TYPE]    int        MutableShort    other    [VARIABLES]    short    anotherVal    operand    value    boolean    long    serialVersionUID    MutableShort    other        	lang_18686_MutableShort_1_1	272	1	src/main/java/org/apache/commons/lang3/mutable/MutableShort.java
1124	[PATCH]    if    (startIndex    <    0)    {	[BUG]    [BUGGY]    if    (startIndex    !=    0)    {    [FE]    junit.framework.AssertionFailedError:    expected:<0>    but    was:<-1>    testLastIndexOfShortWithStartIndex    [CONTEXT]    public    static    int    lastIndexOf(final    short[]    array,    final    short    valueToFind,    int    startIndex)    {    if    (array    ==    null)    {    return    INDEX_NOT_FOUND;    }    [BUGGY]    if    (startIndex    !=    0)    {    return    INDEX_NOT_FOUND;    }    else    if    (startIndex    >=    array.length)    {    startIndex    =    array.length    -    1;    }    for    (int    i    =    startIndex;    i    >=    0;    i--)    {    if    (valueToFind    ==    array[i])    {    return    i;    }    }    return    INDEX_NOT_FOUND;    [CLASS]        ArrayUtils    [METHOD]    lastIndexOf    [RETURN_TYPE]    int        final    short[]    array    final    short    valueToFind    int    startIndex    [VARIABLES]    Class[]    EMPTY_CLASS_ARRAY    long[]    EMPTY_LONG_ARRAY    array    array1    array2    subarray    short[]    EMPTY_SHORT_ARRAY    array    array1    array2    subarray    Character[]    EMPTY_CHARACTER_OBJECT_ARRAY    array    Boolean[]    EMPTY_BOOLEAN_OBJECT_ARRAY    array    int[]    EMPTY_INT_ARRAY    array    array1    array2    subarray    String[]    EMPTY_STRING_ARRAY    array    Integer[]    EMPTY_INTEGER_OBJECT_ARRAY    array    int    INDEX_NOT_FOUND    endIndexExclusive    i    j    newSize    startIndex    startIndexInclusive    tmp    valueToFind    float[]    EMPTY_FLOAT_ARRAY    array    array1    array2    subarray    char[]    EMPTY_CHAR_ARRAY    array    array1    array2    subarray    Short[]    EMPTY_SHORT_OBJECT_ARRAY    array    byte[]    EMPTY_BYTE_ARRAY    array    array1    array2    subarray    Double[]    EMPTY_DOUBLE_OBJECT_ARRAY    array    boolean    double[]    EMPTY_DOUBLE_ARRAY    array    array1    array2    subarray    Byte[]    EMPTY_BYTE_OBJECT_ARRAY    array    Float[]    EMPTY_FLOAT_OBJECT_ARRAY    array    short    valueToFind    boolean[]    EMPTY_BOOLEAN_ARRAY    array    array1    array2    subarray    Object[]    EMPTY_OBJECT_ARRAY    array    array1    array2    entry    Long[]    EMPTY_LONG_OBJECT_ARRAY    array        	lang_1991_ArrayUtils_1_1	2008	1	src/main/java/org/apache/commons/lang3/ArrayUtils.java
1125	[PATCH]    if    (pattern    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.NullPointerException:    pattern    must    not    be    null    test_getInstance    [CONTEXT]    static    String    getPatternForStyle(final    Integer    dateStyle,    final    Integer    timeStyle,    final    Locale    locale)    {    final    MultipartKey    key    =    new    MultipartKey(dateStyle,    timeStyle,    locale);    String    pattern    =    cDateTimeInstanceCache.get(key);    [BUGGY]    if    (false)    {    try    {    DateFormat    formatter;    if    (dateStyle    ==    null)    {    formatter    =    DateFormat.getTimeInstance(timeStyle.intValue(),    locale);    }    else    if    (timeStyle    ==    null)    {    formatter    =    DateFormat.getDateInstance(dateStyle.intValue(),    locale);    }    else    {    formatter    =    DateFormat.getDateTimeInstance(dateStyle.intValue(),    timeStyle.intValue(),    locale);    [CLASS]        FormatCache    MultipartKey    [METHOD]    getPatternForStyle    [RETURN_TYPE]    String        Integer    dateStyle    Integer    timeStyle    Locale    locale    [VARIABLES]    Integer    dateStyle    timeStyle    Locale    locale    boolean    DateFormat    formatter    ClassCastException    ex    ConcurrentMap    cDateTimeInstanceCache    cInstanceCache    MultipartKey    key    String    pattern    previous    int    NONE    dateStyle    hashCode    timeStyle    Object[]    keys        	lang_20603_FormatCache_1_1	195	1	src/main/java/org/apache/commons/lang3/time/FormatCache.java
1126	[PATCH]    for    (int    i    =    0;    i    <    nHex;    i++    )    {	[BUG]    [BUGGY]    for    (int    i    =    0;    i    <=    nHex;    i++    )    {    [FE]    junit.framework.AssertionFailedError:    expected:<12>    but    was:<220>    testHexToLong    [CONTEXT]    public    static    long    hexToLong(final    String    src,    final    int    srcPos,    final    long    dstInit,    final    int    dstPos,    final    int    nHex)    {    if    (0    ==    nHex)    {    return    dstInit;    }    if    ((nHex    -    1)    *    4    +    dstPos    >=    64)    {    throw    new    IllegalArgumentException(       "(nHexs-1)*4+dstPos    is    greather    or    equal    to    than    64   ");    }    long    out    =    dstInit;    int    shift    =    0;    [BUGGY]    for    (int    i    =    0;    i    <=    nHex;    i++    )    {    shift    =    i    *    4    +    dstPos;    final    long    bits    =    (0xfL    &    hexDigitToInt(src.charAt(i    +    srcPos)))    <<    shift;    final    long    mask    =    0xfL    <<    shift;    out    =    (out    &    ~mask)    |    bits;    }    return    out;    }    [CLASS]        Conversion    [METHOD]    hexToLong    [RETURN_TYPE]    long        String    src    final    int    srcPos    final    long    dstInit    final    int    dstPos    final    int    nHex    [VARIABLES]    boolean    String    src    int    dstPos    i    nHex    shift    srcPos    long    bits    dstInit    mask    out        	lang_6347_Conversion_1_1	912	1	src/main/java/org/apache/commons/lang3/Conversion.java
1127	[PATCH]    (ch3    ==    's'    ||    ch3    ==    'S')    &&	[BUG]    [BUGGY]    (ch3    ==    's')    &&    [FE]    junit.framework.AssertionFailedError:    expected:<false>    but    was:<null>    test_toBooleanObject_String    [CONTEXT]    if    ((ch0    ==    'f'    ||    ch0    ==    'F')    &&    (ch1    ==    'a'    ||    ch1    ==    'A')    &&    (ch2    ==    'l'    ||    ch2    ==    'L')    &&    [BUGGY]    (ch3    ==    's')    &&    (ch4    ==    'e'    ||    ch4    ==    'E')    )    {    return    Boolean.FALSE;    }    [CLASS]        BooleanUtils    [METHOD]    toBooleanObject    [RETURN_TYPE]    Boolean        String    str    [VARIABLES]    boolean    char    ch0    ch1    ch2    ch3    ch4    String    str        	lang_3904_BooleanUtils_1_1	622	1	src/main/java/org/apache/commons/lang3/BooleanUtils.java
1128	[PATCH]    if    (tmp    >    ret)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<3>    but    was:<-1>    testLastIndexOfAny_StringStringArray    [CONTEXT]    }    final    int    sz    =    searchStrs.length;    int    ret    =    INDEX_NOT_FOUND;    int    tmp    =    0;    for    (int    i    =    0;    i    <    sz;    i++)    {    final    CharSequence    search    =    searchStrs[i];    if    (search    ==    null)    {    continue;    }    tmp    =    CharSequenceUtils.lastIndexOf(str,    search,    str.length());    [BUGGY]    if    (false)    {    ret    =    tmp;    }    }    return    ret;    }    [CLASS]        StringUtils    [METHOD]    lastIndexOfAny    [RETURN_TYPE]    int        CharSequence    str    searchStrs    [VARIABLES]    CharSequence    search    str    CharSequence[]    searchStrs    Pattern    WHITESPACE_PATTERN    pattern    String    CR    EMPTY    LF    SPACE    decomposed    input    invalidChars    searchChars    str    stripChars    ts    validChars    boolean    int    INDEX_NOT_FOUND    PAD_LIMIT    csLast    csLen    csLength    end    endLimit    found    i    index    j    len    max    ordinal    ret    searchChar    searchLast    searchLen    searchLength    start    startPos    strLen    strsLen    sz    tmp        	lang_11819_StringUtils_1_1	1927	1	src/main/java/org/apache/commons/lang3/StringUtils.java
1129	[PATCH]    final    int    value    =    Integer.parseInt(unicode.toString(),    16);	[BUG]    [BUGGY]    final    int    value    =    Integer.parseInt(unicode.toString(),    -16);    [FE]    java.lang.IllegalArgumentException:    Unable    to    parse    unicode    value:    1234    testUnescapeJava    [CONTEXT]    if    (index    +    i    <    input.length()    &&    input.charAt(index    +    i)    ==    '+')    {    i++;    }    if    (index    +    i    +    4    <=    input.length())    {        final    CharSequence    unicode    =    input.subSequence(index    +    i,    index    +    i    +    4);    try    {    [BUGGY]    final    int    value    =    Integer.parseInt(unicode.toString(),    -16);    out.write((char)    value);    }    catch    (final    NumberFormatException    nfe)    {    throw    new    IllegalArgumentException(   "Unable    to    parse    unicode    value:       "    +    unicode,    nfe);    }    return    i    +    4;    }    else    {    throw    new    IllegalArgumentException(   "Less    than    4    hex    digits    in    unicode    value:    '   "    +    input.subSequence(index,    input.length())    +       "'    due    to    end    of    CharSequence   ");    }    }    [CLASS]        UnicodeUnescaper    [METHOD]    translate    [RETURN_TYPE]    int        CharSequence    input    final    int    index    Writer    out    [VARIABLES]    boolean    CharSequence    input    unicode    NumberFormatException    nfe    int    i    index    value    Writer    out        	lang_20573_UnicodeUnescaper_1_1	53	1	src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java
1130	[PATCH]    if    (str    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<[null]barbaz>    but    was:<[]barbaz>    testInsertWithNullText    [CONTEXT]    public    StrBuilder    insert(final    int    index,    String    str)    {    validateIndex(index);    [BUGGY]    if    (false)    {    str    =    nullText;    }    if    (str    !=    null)    {    final    int    strLen    =    str.length();    if    (strLen    >    0)    {    final    int    newSize    =    size    +    strLen;    ensureCapacity(newSize);    System.arraycopy(buffer,    index,    buffer,    index    +    strLen,    size    -    index);    size    =    newSize;    str.getChars(0,    strLen,    buffer,    index);    [CLASS]        StrBuilder    StrBuilderTokenizer    StrBuilderReader    StrBuilderWriter    [METHOD]    insert    [RETURN_TYPE]    StrBuilder        final    int    index    String    str    [VARIABLES]    String    defaultIfEmpty    format    newLine    nullText    separator    standard    str    boolean    int    CAPACITY    capacity    destinationIndex    endIndex    i    index    initialCapacity    len    length    loopIndex    mark    newEnd    newSize    oldEnd    padLen    pos    size    startIndex    strLen    value    width    long    serialVersionUID    value    char[]    buffer    chars    destination    old        	lang_8981_StrBuilder_1_1	1491	1	src/main/java/org/apache/commons/lang3/text/StrBuilder.java
1131	[PATCH]    buffer[count]    =    (char)    (56320    +    random.nextInt(128));	[BUG]    [BUGGY]    buffer[count]    =    (char)    (0    +    random.nextInt(128));    [FE]    junit.framework.AssertionFailedError:    differs    at    22(d925,3f)    expected:<55589>    but    was:<63>    testLang100    [CONTEXT]    if(count    ==    0)    {    count++;    }    else    {        [BUGGY]    buffer[count]    =    (char)    (0    +    random.nextInt(128));    count--;    buffer[count]    =    ch;    }    [CLASS]        RandomStringUtils    [METHOD]    random    [RETURN_TYPE]    String        int    count    int    start    int    end    final    boolean    letters    final    boolean    numbers    final    char[]    chars    Random    random    [VARIABLES]    char    ch    boolean    letters    numbers    Random    RANDOM    random    int    count    end    gap    start    char[]    buffer    chars        	lang_10696_RandomStringUtils_1_1	278	1	src/main/java/org/apache/commons/lang3/RandomStringUtils.java
1132	[PATCH]    if    (src.length    -    srcPos    <    4)    {	[BUG]    [BUGGY]    if    (src.length    -    srcPos    <=    4)    {    [FE]    java.lang.IllegalArgumentException:    src.length-srcPos<4:    src.length=4,    srcPos=0    testBinaryToHexDigitMsb0_bits    [CONTEXT]    public    static    char    binaryToHexDigitMsb0_4bits(final    boolean[]    src,    final    int    srcPos)    {    if    (src.length    >    8)    {    throw    new    IllegalArgumentException(   "src.length>8:    src.length=   "    +    src.length);    }    [BUGGY]    if    (src.length    -    srcPos    <=    4)    {    throw    new    IllegalArgumentException(   "src.length-srcPos<4:    src.length=   "    +    src.length    +       ",    srcPos=   "    +    srcPos);    }    if    (src[srcPos    +    3])    {    if    (src[srcPos    +    2])    {    if    (src[srcPos    +    1])    {    if    (src[srcPos])    {    return    'f';    [CLASS]        Conversion    [METHOD]    binaryToHexDigitMsb0_4bits    [RETURN_TYPE]    char        final    boolean[]    src    final    int    srcPos    [VARIABLES]    boolean    boolean[]    src    int    srcPos        	lang_5455_Conversion_1_1	407	1	src/main/java/org/apache/commons/lang3/Conversion.java
1133	[PATCH]    return    1;	[BUG]    [BUGGY]    return    0;    [FE]    junit.framework.AssertionFailedError:    expected:<1>    but    was:<0>    testElementCompareTo    [CONTEXT]    public    int    elementCompareTo(final    T    element)    {    if    (element    ==    null)    {        throw    new    NullPointerException(   "Element    is    null   ");    }    if    (isAfter(element))    {    return    -1;    }    else    if    (isBefore(element))    {    [BUGGY]    return    0;    }    else    {    return    0;    }    }    [CLASS]        Range    ComparableComparator    [METHOD]    elementCompareTo    [RETURN_TYPE]    int        final    T    element    [VARIABLES]    boolean    T    element    element1    element2    fromInclusive    maximum    minimum    toInclusive    String    toString    ComparableComparator    INSTANCE    long    serialVersionUID    int    hashCode    Comparator    comparator        	lang_10807_Range_1_1	295	1	src/main/java/org/apache/commons/lang3/Range.java
1134	[PATCH]    }    else    if    (array.length    ==    0)    {	[BUG]    [BUGGY]    }    else    if    (array.length    >=    0)    {    [FE]    junit.framework.AssertionFailedError    testToPrimitive_int    [CONTEXT]    public    static    int[]    toPrimitive(final    Integer[]    array)    {    if    (array    ==    null)    {    return    null;    [BUGGY]    }    else    if    (array.length    >=    0)    {    return    EMPTY_INT_ARRAY;    }    final    int[]    result    =    new    int[array.length];    for    (int    i    =    0;    i    <    array.length;    i++)    {    result[i]    =    array[i].intValue();    }    return    result;    }    [CLASS]        ArrayUtils    [METHOD]    toPrimitive    [RETURN_TYPE]    int[]        Integer[]    array    [VARIABLES]    Class[]    EMPTY_CLASS_ARRAY    long[]    EMPTY_LONG_ARRAY    array    array1    array2    result    subarray    short[]    EMPTY_SHORT_ARRAY    array    array1    array2    subarray    Character[]    EMPTY_CHARACTER_OBJECT_ARRAY    array    result    Boolean[]    EMPTY_BOOLEAN_OBJECT_ARRAY    array    int[]    EMPTY_INT_ARRAY    array    array1    array2    result    subarray    String[]    EMPTY_STRING_ARRAY    array    Integer[]    EMPTY_INTEGER_OBJECT_ARRAY    array    int    INDEX_NOT_FOUND    endIndexExclusive    i    j    newSize    startIndex    startIndexInclusive    tmp    valueToFind    float[]    EMPTY_FLOAT_ARRAY    array    array1    array2    subarray    char[]    EMPTY_CHAR_ARRAY    array    array1    array2    result    subarray    Short[]    EMPTY_SHORT_OBJECT_ARRAY    array    byte[]    EMPTY_BYTE_ARRAY    array    array1    array2    subarray    Double[]    EMPTY_DOUBLE_OBJECT_ARRAY    array    boolean    double[]    EMPTY_DOUBLE_ARRAY    array    array1    array2    subarray    Byte[]    EMPTY_BYTE_OBJECT_ARRAY    array    Float[]    EMPTY_FLOAT_OBJECT_ARRAY    array    boolean[]    EMPTY_BOOLEAN_ARRAY    array    array1    array2    subarray    Object[]    EMPTY_OBJECT_ARRAY    array    array1    array2    entry    Long[]    EMPTY_LONG_OBJECT_ARRAY    array    result        	lang_2397_ArrayUtils_1_1	2830	1	src/main/java/org/apache/commons/lang3/ArrayUtils.java
1135	[PATCH]    if    (start    >=    sz)    {	[BUG]    [BUGGY]    if    (start    >    sz)    {    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    8    testLastIndexOf_char    [CONTEXT]    static    int    lastIndexOf(final    CharSequence    cs,    final    int    searchChar,    int    start)    {    if    (cs    instanceof    String)    {    return    ((String)    cs).lastIndexOf(searchChar,    start);    }    else    {    final    int    sz    =    cs.length();    if    (start    <    0)    {    return    -1;    }    [BUGGY]    if    (start    >    sz)    {    start    =    sz    -    1;    }    for    (int    i    =    start;    i    >=    0;    --i)    {    if    (cs.charAt(i)    ==    searchChar)    {    return    i;    }    }    return    -1;    }    }    [CLASS]        CharSequenceUtils    [METHOD]    lastIndexOf    [RETURN_TYPE]    int        CharSequence    cs    final    int    searchChar    int    start    [VARIABLES]    boolean    CharSequence    cs    int    i    searchChar    start    sz        	lang_4257_CharSequenceUtils_1_1	124	1	src/main/java/org/apache/commons/lang3/CharSequenceUtils.java
1136	[PATCH]    if    (chars.length    ==    1)    {	[BUG]    [BUGGY]    if    (chars.length    ==    -1)    {    [FE]    junit.framework.AssertionFailedError    testCharSetMatcher_charArray    [CONTEXT]    public    static    StrMatcher    charSetMatcher(final    char...    chars)    {    if    (chars    ==    null    ||    chars.length    ==    0)    {    return    NONE_MATCHER;    }    [BUGGY]    if    (chars.length    ==    -1)    {    return    new    CharMatcher(chars[0]);    }    return    new    CharSetMatcher(chars);    }    [CLASS]        StrMatcher    CharSetMatcher    CharMatcher    StringMatcher    NoMatcher    TrimMatcher    [METHOD]    charSetMatcher    [RETURN_TYPE]    StrMatcher        chars    [VARIABLES]    char    ch    boolean    StrMatcher    COMMA_MATCHER    DOUBLE_QUOTE_MATCHER    NONE_MATCHER    QUOTE_MATCHER    SINGLE_QUOTE_MATCHER    SPACE_MATCHER    SPLIT_MATCHER    TAB_MATCHER    TRIM_MATCHER    char[]    chars        	lang_10471_StrMatcher_1_1	177	1	src/main/java/org/apache/commons/lang3/text/StrMatcher.java
1137	[PATCH]    }    else    if    (ch    <    0x1000)    {	[BUG]    [BUGGY]    }    else    if    (ch    <    0)    {    [FE]    junit.framework.AssertionFailedError:    expected:<\u[0]999>    but    was:<\u[]999>    testToUnicodeEscaped_char    [CONTEXT]    public    static    String    unicodeEscaped(final    char    ch)    {    if    (ch    <    0x10)    {    return       "\\u000   "    +    Integer.toHexString(ch);    }    else    if    (ch    <    0x100)    {    return       "\\u00   "    +    Integer.toHexString(ch);    [BUGGY]    }    else    if    (ch    <    0)    {    return       "\\u0   "    +    Integer.toHexString(ch);    }    return       "\\u   "    +    Integer.toHexString(ch);    }    [CLASS]        CharUtils    [METHOD]    unicodeEscaped    [RETURN_TYPE]    String        final    char    ch    [VARIABLES]    char    CR    LF    ch    defaultValue    String[]    CHAR_STRING_ARRAY    boolean        	lang_4586_CharUtils_1_1	357	1	src/main/java/org/apache/commons/lang3/CharUtils.java
1138	[PATCH]    for    (int    j    =    1;    j    <    array.length;    j++)    {	[BUG]    [BUGGY]    for    (int    j    =    -1;    j    <    array.length;    j++)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testMaxLong    [CONTEXT]    public    static    long    max(final    long[]    array)    {        validateArray(array);        long    max    =    array[0];    [BUGGY]    for    (int    j    =    -1;    j    <    array.length;    j++)    {    if    (array[j]    >    max)    {    max    =    array[j];    }    }    return    max;    }    [CLASS]        NumberUtils    [METHOD]    max    [RETURN_TYPE]    long        final    long[]    array    [VARIABLES]    Integer    INTEGER_MINUS_ONE    INTEGER_ONE    INTEGER_ZERO    Float    FLOAT_MINUS_ONE    FLOAT_ONE    FLOAT_ZERO    f    boolean    long[]    array    Byte    BYTE_MINUS_ONE    BYTE_ONE    BYTE_ZERO    Long    LONG_MINUS_ONE    LONG_ONE    LONG_ZERO    Double    DOUBLE_MINUS_ONE    DOUBLE_ONE    DOUBLE_ZERO    d    Short    SHORT_MINUS_ONE    SHORT_ONE    SHORT_ZERO    long    max    int    j        	lang_18074_NumberUtils_1_1	940	1	src/main/java/org/apache/commons/lang3/math/NumberUtils.java
1139	[PATCH]    }    else    if    (array.length    ==    0)    {	[BUG]    [BUGGY]    }    else    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    expected    same:<[D@2d7275fc>    was    not:<[D@399f45b1>    testToPrimitive_double    [CONTEXT]    public    static    double[]    toPrimitive(final    Double[]    array)    {    if    (array    ==    null)    {    return    null;    [BUGGY]    }    else    if    (false)    {    return    EMPTY_DOUBLE_ARRAY;    }    final    double[]    result    =    new    double[array.length];    for    (int    i    =    0;    i    <    array.length;    i++)    {    result[i]    =    array[i].doubleValue();    }    return    result;    }    [CLASS]        ArrayUtils    [METHOD]    toPrimitive    [RETURN_TYPE]    double[]        Double[]    array    [VARIABLES]    Class[]    EMPTY_CLASS_ARRAY    long[]    EMPTY_LONG_ARRAY    array    array1    array2    result    subarray    short[]    EMPTY_SHORT_ARRAY    array    array1    array2    result    subarray    Character[]    EMPTY_CHARACTER_OBJECT_ARRAY    array    result    Boolean[]    EMPTY_BOOLEAN_OBJECT_ARRAY    array    int[]    EMPTY_INT_ARRAY    array    array1    array2    result    subarray    String[]    EMPTY_STRING_ARRAY    array    Integer[]    EMPTY_INTEGER_OBJECT_ARRAY    array    result    int    INDEX_NOT_FOUND    endIndexExclusive    i    j    newSize    startIndex    startIndexInclusive    tmp    valueForNull    valueToFind    float[]    EMPTY_FLOAT_ARRAY    array    array1    array2    subarray    char[]    EMPTY_CHAR_ARRAY    array    array1    array2    result    subarray    Short[]    EMPTY_SHORT_OBJECT_ARRAY    array    result    byte[]    EMPTY_BYTE_ARRAY    array    array1    array2    result    subarray    Double[]    EMPTY_DOUBLE_OBJECT_ARRAY    array    boolean    double[]    EMPTY_DOUBLE_ARRAY    array    array1    array2    result    subarray    Byte[]    EMPTY_BYTE_OBJECT_ARRAY    array    result    Float[]    EMPTY_FLOAT_OBJECT_ARRAY    array    boolean[]    EMPTY_BOOLEAN_ARRAY    array    array1    array2    subarray    Object[]    EMPTY_OBJECT_ARRAY    array    array1    array2    entry    Long[]    EMPTY_LONG_OBJECT_ARRAY    array    result        	lang_2509_ArrayUtils_1_1	3034	1	src/main/java/org/apache/commons/lang3/ArrayUtils.java
1140	[PATCH]    return    join(array,    separator,    0,    array.length);	[BUG]    [BUGGY]    return    join(array,    separator,    1,    array.length);    [FE]    junit.framework.AssertionFailedError:    expected:<[1;]2>    but    was:<[]2>    testJoin_ArrayOfChars    [CONTEXT]    public    static    String    join(final    char[]    array,    final    char    separator)    {    if    (array    ==    null)    {    return    null;    }    [BUGGY]    return    join(array,    separator,    1,    array.length);    }    [CLASS]        StringUtils    [METHOD]    join    [RETURN_TYPE]    String        final    char[]    array    final    char    separator    [VARIABLES]    char    separator    Pattern    WHITESPACE_PATTERN    pattern    String    CR    EMPTY    LF    SPACE    close    decomposed    input    invalidChars    open    searchChars    separator    separatorChars    str    stripChars    tag    ts    validChars    boolean    int    INDEX_NOT_FOUND    PAD_LIMIT    beg    closeLen    csLast    csLen    csLength    currentType    end    endLimit    found    i    index    j    len    max    newTokenStart    numberOfSubstrings    openLen    ordinal    pos    ret    searchChar    searchLast    searchLen    searchLength    separatorLength    sizePlus1    start    startPos    strLen    strsLen    sz    tmp    tokenStart    type    char[]    array        	lang_12378_StringUtils_1_1	3364	1	src/main/java/org/apache/commons/lang3/StringUtils.java
1141	[PATCH]    for    (int    leftIdx    =    0,    rightIdx    =    size    -    1;    leftIdx    <    half;    leftIdx++,rightIdx--)    {	[BUG]    [BUGGY]    for    (int    leftIdx    =    -1,    rightIdx    =    size    -    1;    leftIdx    <    half;    leftIdx++,rightIdx--)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testReverse    [CONTEXT]    public    StrBuilder    reverse()    {    if    (size    ==    0)    {    return    this;    }    final    int    half    =    size    /    2;    final    char[]    buf    =    buffer;    [BUGGY]    for    (int    leftIdx    =    -1,    rightIdx    =    size    -    1;    leftIdx    <    half;    leftIdx++,rightIdx--)    {    final    char    swap    =    buf[leftIdx];    buf[leftIdx]    =    buf[rightIdx];    buf[rightIdx]    =    swap;    }    return    this;    }    [CLASS]        StrBuilder    StrBuilderTokenizer    StrBuilderReader    StrBuilderWriter    [METHOD]    reverse    [RETURN_TYPE]    StrBuilder        [VARIABLES]    char    swap    String    defaultIfEmpty    format    insertStr    newLine    nullText    replaceStr    searchStr    separator    standard    str    boolean    int    CAPACITY    capacity    destinationIndex    endIndex    from    half    i    index    initialCapacity    insertLen    leftIdx    len    length    loopIndex    mark    newEnd    newSize    offset    oldEnd    padLen    pos    removeLen    replaceCount    replaceLen    rightIdx    searchLen    size    start    startIndex    strLen    to    value    width    long    serialVersionUID    value    char[]    buf    buffer    chars    destination    old        	lang_9457_StrBuilder_1_1	2021	1	src/main/java/org/apache/commons/lang3/text/StrBuilder.java
1142	[PATCH]    final    boolean    chFound    =    CharSequenceUtils.indexOf(searchChars,    ch,    0)    >=    0;	[BUG]    [BUGGY]    final    boolean    chFound    =    CharSequenceUtils.indexOf(searchChars,    ch,    0)    >=    -1;    [FE]    junit.framework.AssertionFailedError:    expected:<3>    but    was:<-1>    testIndexOfAnyBut_StringString    [CONTEXT]    public    static    int    indexOfAnyBut(final    CharSequence    seq,    final    CharSequence    searchChars)    {    if    (isEmpty(seq)    ||    isEmpty(searchChars))    {    return    INDEX_NOT_FOUND;    }    final    int    strLen    =    seq.length();    for    (int    i    =    0;    i    <    strLen;    i++)    {    final    char    ch    =    seq.charAt(i);    [BUGGY]    final    boolean    chFound    =    CharSequenceUtils.indexOf(searchChars,    ch,    0)    >=    -1;    if    (i    +    1    <    strLen    &&    Character.isHighSurrogate(ch))    {    final    char    ch2    =    seq.charAt(i    +    1);    if    (chFound    &&    CharSequenceUtils.indexOf(searchChars,    ch2,    0)    <    0)    {    return    i;    }    }    else    {    if    (!chFound)    {    return    i;    }    }    [CLASS]        StringUtils    [METHOD]    indexOfAnyBut    [RETURN_TYPE]    int        CharSequence    seq    CharSequence    searchChars    [VARIABLES]    CharSequence    searchChars    seq    char    ch    ch2    Pattern    WHITESPACE_PATTERN    pattern    String    CR    EMPTY    LF    SPACE    decomposed    input    searchChars    str    stripChars    ts    boolean    chFound    int    INDEX_NOT_FOUND    PAD_LIMIT    csLast    csLen    csLength    end    endLimit    found    i    index    j    len    max    ordinal    searchChar    searchLast    searchLen    searchLength    start    startPos    strLen    strsLen        	lang_11640_StringUtils_1_1	1663	1	src/main/java/org/apache/commons/lang3/StringUtils.java
1143	[PATCH]    if    (strLen    >    0)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<[foo]    testAppendln_StringBuilder    [CONTEXT]    public    StrBuilder    append(final    StringBuilder    str)    {    if    (str    ==    null)    {    return    appendNull();    }    final    int    strLen    =    str.length();    [BUGGY]    if    (false)    {    final    int    len    =    length();    ensureCapacity(len    +    strLen);    str.getChars(0,    strLen,    buffer,    len);    size    +=    strLen;    }    return    this;    }    [CLASS]        StrBuilder    StrBuilderTokenizer    StrBuilderReader    StrBuilderWriter    [METHOD]    append    [RETURN_TYPE]    StrBuilder        StringBuilder    str    [VARIABLES]    String    format    newLine    nullText    str    boolean    StringBuilder    str    int    CAPACITY    capacity    destinationIndex    endIndex    i    index    initialCapacity    len    length    mark    newEnd    oldEnd    pos    size    startIndex    strLen    long    serialVersionUID    char[]    buffer    chars    destination    old        	lang_8593_StrBuilder_1_1	627	1	src/main/java/org/apache/commons/lang3/text/StrBuilder.java
1144	[PATCH]    if    ((nBytes    -    1)    *    8    +    srcPos    >=    16)    {	[BUG]    [BUGGY]    if    ((nBytes    -    1)    *    8    +    srcPos    >=    0)    {    [FE]    java.lang.IllegalArgumentException:    (nBytes-1)*8+srcPos    is    greather    or    equal    to    than    16    testShortToByteArray    [CONTEXT]    public    static    byte[]    shortToByteArray(final    short    src,    final    int    srcPos,    final    byte[]    dst,    final    int    dstPos,    final    int    nBytes)    {    if    (0    ==    nBytes)    {    return    dst;    }    [BUGGY]    if    ((nBytes    -    1)    *    8    +    srcPos    >=    0)    {    throw    new    IllegalArgumentException(       "(nBytes-1)*8+srcPos    is    greather    or    equal    to    than    16   ");    }    int    shift    =    0;    for    (int    i    =    0;    i    <    nBytes;    i++    )    {    shift    =    i    *    8    +    srcPos;    dst[dstPos    +    i]    =    (byte)(0xff    &    (src    >>    shift));    }    return    dst;    }    [CLASS]        Conversion    [METHOD]    shortToByteArray    [RETURN_TYPE]    byte[]        final    short    src    final    int    srcPos    final    byte[]    dst    final    int    dstPos    final    int    nBytes    [VARIABLES]    byte[]    dst    boolean    short    src    int    dstPos    i    nBytes    shift    srcPos        	lang_7180_Conversion_1_1	1359	1	src/main/java/org/apache/commons/lang3/Conversion.java
1145	[PATCH]    radix    =    16;	[BUG]    [BUGGY]    radix    =    0;    [FE]    java.lang.NumberFormatException:    Radix    out    of    range    testCreateNumberMagnitude    [CONTEXT]    return    null;    }    int    pos    =    0;    int    radix    =    10;    boolean    negate    =    false;    if    (str.startsWith(   "-   "))    {    negate    =    true;    pos    =    1;    }    if    (str.startsWith(   "0x   ",    pos)    ||    str.startsWith(   "0x   ",    pos))    {        [BUGGY]    radix    =    0;    pos    +=    2;    }    else    if    (str.startsWith(   "#   ",    pos))    {    radix    =    16;    pos    ++;    }    else    if    (str.startsWith(   "0   ",    pos)    &&    str.length()    >    pos    +    1)    {    radix    =    8;    pos    ++;    }        final    BigInteger    value    =    new    BigInteger(str.substring(pos),    radix);    [CLASS]        NumberUtils    [METHOD]    createBigInteger    [RETURN_TYPE]    BigInteger        String    str    [VARIABLES]    Integer    INTEGER_MINUS_ONE    INTEGER_ONE    INTEGER_ZERO    Float    FLOAT_MINUS_ONE    FLOAT_ONE    FLOAT_ZERO    f    boolean    negate    Byte    BYTE_MINUS_ONE    BYTE_ONE    BYTE_ZERO    Long    LONG_MINUS_ONE    LONG_ONE    LONG_ZERO    BigInteger    value    String    str    Double    DOUBLE_MINUS_ONE    DOUBLE_ONE    DOUBLE_ZERO    d    Short    SHORT_MINUS_ONE    SHORT_ONE    SHORT_ZERO    int    pos    radix        	lang_17958_NumberUtils_1_1	735	1	src/main/java/org/apache/commons/lang3/math/NumberUtils.java
1146	[PATCH]    if    (componentType.equals(Boolean.TYPE))    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    java.lang.ClassCastException:    [Lorg.apache.commons.lang3.AnnotationUtilsTest$Stooge;    cannot    be    cast    to    [Z    testHashCode    [CONTEXT]    }    if    (componentType.equals(Long.TYPE))    {    return    Arrays.hashCode((long[])    o);    }    if    (componentType.equals(Float.TYPE))    {    return    Arrays.hashCode((float[])    o);    }    if    (componentType.equals(Double.TYPE))    {    return    Arrays.hashCode((double[])    o);    }    [BUGGY]    if    (true)    {    return    Arrays.hashCode((boolean[])    o);    }    return    Arrays.hashCode((Object[])    o);    }    [CLASS]        AnnotationUtils    1    [METHOD]    arrayMemberHash    [RETURN_TYPE]    int        Class<?>    componentType    Object    o    [VARIABLES]    ToStringStyle    TO_STRING_STYLE    Class    componentType    Object    o    boolean    long    serialVersionUID        	lang_157_AnnotationUtils_1_1	366	1	src/main/java/org/apache/commons/lang3/AnnotationUtils.java
1147	[PATCH]    if    (getNamingPattern()    !=    null)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    java.lang.NullPointerException    testNewThreadNoDaemonFlag    [CONTEXT]    private    void    initializeThread(final    Thread    t)    {        [BUGGY]    if    (true)    {    final    Long    count    =    Long.valueOf(threadCounter.incrementAndGet());    t.setName(String.format(getNamingPattern(),    count));    }    if    (getUncaughtExceptionHandler()    !=    null)    {    t.setUncaughtExceptionHandler(getUncaughtExceptionHandler());    }    if    (getPriority()    !=    null)    {    t.setPriority(getPriority().intValue());    [CLASS]        BasicThreadFactory    Builder    [METHOD]    initializeThread    [RETURN_TYPE]    void        Thread    t    [VARIABLES]    Integer    priority    ThreadFactory    wrappedFactory    AtomicLong    threadCounter    boolean    Long    count    String    namingPattern    UncaughtExceptionHandler    exceptionHandler    uncaughtExceptionHandler    Boolean    daemonFlag    Thread    t        	lang_16138_BasicThreadFactory_1_1	221	1	src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java
1148	[PATCH]    T    result    =    (T)    sort.toArray()[(sort.size()    -    1)    /    2];	[BUG]    [BUGGY]    T    result    =    (T)    sort.toArray()[(sort.size()    -    1)    +    2];    [FE]    java.lang.ArrayIndexOutOfBoundsException:    2    testMedian    [CONTEXT]    public    static    <T    extends    Comparable<?    super    T>>    T    median(final    T...    items)    {    Validate.notEmpty(items);    Validate.noNullElements(items);    final    TreeSet<T>    sort    =    new    TreeSet<T>();    Collections.addAll(sort,    items);    @SuppressWarnings(   "unchecked   ")    //we    know    all    items    added    were    T    instances    final    [BUGGY]    T    result    =    (T)    sort.toArray()[(sort.size()    -    1)    +    2];    return    result;    }    [CLASS]        ObjectUtils    Null    [METHOD]    median    [RETURN_TYPE]    <T        items    [VARIABLES]    Null    NULL    boolean    T    result    long    serialVersionUID    TreeSet    sort    T[]    items        	lang_8214_ObjectUtils_1_1	511	1	src/main/java/org/apache/commons/lang3/ObjectUtils.java
1149	[PATCH]    if    (chars[i]    >=    '0'    &&    chars[i]    <=    '9')    {	[BUG]    [BUGGY]    if    (true    &&    chars[i]    <=    '9')    {    [FE]    junit.framework.AssertionFailedError:    isNumber(String)    3    Neg    failed    testIsNumber    [CONTEXT]    }    }    return    true;    }    sz--;        int    i    =    start;            while    (i    <    sz    ||    (i    <    sz    +    1    &&    allowSigns    &&    !foundDigit))    {    [BUGGY]    if    (true    &&    chars[i]    <=    '9')    {    foundDigit    =    true;    allowSigns    =    false;    }    else    if    (chars[i]    ==    '.')    {    if    (hasDecPoint    ||    hasExp)    {        return    false;    }    hasDecPoint    =    true;    }    else    if    (chars[i]    ==    'e'    ||    chars[i]    ==    'E')    {    [CLASS]        NumberUtils    [METHOD]    isNumber    [RETURN_TYPE]    boolean        String    str    [VARIABLES]    Integer    INTEGER_MINUS_ONE    INTEGER_ONE    INTEGER_ZERO    Float    FLOAT_MINUS_ONE    FLOAT_ONE    FLOAT_ZERO    f    boolean    allowSigns    foundDigit    hasDecPoint    hasExp    Byte    BYTE_MINUS_ONE    BYTE_ONE    BYTE_ZERO    Long    LONG_MINUS_ONE    LONG_ONE    LONG_ZERO    String    str    Double    DOUBLE_MINUS_ONE    DOUBLE_ONE    DOUBLE_ZERO    d    Short    SHORT_MINUS_ONE    SHORT_ONE    SHORT_ZERO    int    i    start    sz    char[]    chars        	lang_18353_NumberUtils_1_1	1367	1	src/main/java/org/apache/commons/lang3/math/NumberUtils.java
1150	[PATCH]    if    (chars.length    ==    1)    {	[BUG]    [BUGGY]    if    (chars.length    ==    0)    {    [FE]    junit.framework.AssertionFailedError    testCharSetMatcher_charArray    [CONTEXT]    public    static    StrMatcher    charSetMatcher(final    char...    chars)    {    if    (chars    ==    null    ||    chars.length    ==    0)    {    return    NONE_MATCHER;    }    [BUGGY]    if    (chars.length    ==    0)    {    return    new    CharMatcher(chars[0]);    }    return    new    CharSetMatcher(chars);    }    [CLASS]        StrMatcher    CharSetMatcher    CharMatcher    StringMatcher    NoMatcher    TrimMatcher    [METHOD]    charSetMatcher    [RETURN_TYPE]    StrMatcher        chars    [VARIABLES]    char    ch    boolean    StrMatcher    COMMA_MATCHER    DOUBLE_QUOTE_MATCHER    NONE_MATCHER    QUOTE_MATCHER    SINGLE_QUOTE_MATCHER    SPACE_MATCHER    SPLIT_MATCHER    TAB_MATCHER    TRIM_MATCHER    char[]    chars        	lang_10470_StrMatcher_1_1	177	1	src/main/java/org/apache/commons/lang3/text/StrMatcher.java
1151	[PATCH]    }    else    if    (startIndex    >=    array.length)    {	[BUG]    [BUGGY]    }    else    if    (true)    {    [FE]    junit.framework.AssertionFailedError:    expected:<0>    but    was:<4>    testLastIndexOfByteWithStartIndex    [CONTEXT]    public    static    int    lastIndexOf(final    byte[]    array,    final    byte    valueToFind,    int    startIndex)    {    if    (array    ==    null)    {    return    INDEX_NOT_FOUND;    }    if    (startIndex    <    0)    {    return    INDEX_NOT_FOUND;    [BUGGY]    }    else    if    (true)    {    startIndex    =    array.length    -    1;    }    for    (int    i    =    startIndex;    i    >=    0;    i--)    {    if    (valueToFind    ==    array[i])    {    return    i;    }    }    return    INDEX_NOT_FOUND;    }    [CLASS]        ArrayUtils    [METHOD]    lastIndexOf    [RETURN_TYPE]    int        final    byte[]    array    final    byte    valueToFind    int    startIndex    [VARIABLES]    Class[]    EMPTY_CLASS_ARRAY    long[]    EMPTY_LONG_ARRAY    array    array1    array2    subarray    byte    valueToFind    short[]    EMPTY_SHORT_ARRAY    array    array1    array2    subarray    Character[]    EMPTY_CHARACTER_OBJECT_ARRAY    array    Boolean[]    EMPTY_BOOLEAN_OBJECT_ARRAY    array    int[]    EMPTY_INT_ARRAY    array    array1    array2    subarray    String[]    EMPTY_STRING_ARRAY    array    Integer[]    EMPTY_INTEGER_OBJECT_ARRAY    array    int    INDEX_NOT_FOUND    endIndexExclusive    i    j    newSize    startIndex    startIndexInclusive    tmp    valueToFind    float[]    EMPTY_FLOAT_ARRAY    array    array1    array2    subarray    char[]    EMPTY_CHAR_ARRAY    array    array1    array2    subarray    Short[]    EMPTY_SHORT_OBJECT_ARRAY    array    byte[]    EMPTY_BYTE_ARRAY    array    array1    array2    subarray    Double[]    EMPTY_DOUBLE_OBJECT_ARRAY    array    boolean    double[]    EMPTY_DOUBLE_ARRAY    array    array1    array2    subarray    Byte[]    EMPTY_BYTE_OBJECT_ARRAY    array    Float[]    EMPTY_FLOAT_OBJECT_ARRAY    array    boolean[]    EMPTY_BOOLEAN_ARRAY    array    array1    array2    subarray    Object[]    EMPTY_OBJECT_ARRAY    array    array1    array2    entry    Long[]    EMPTY_LONG_OBJECT_ARRAY    array        	lang_2084_ArrayUtils_1_1	2221	1	src/main/java/org/apache/commons/lang3/ArrayUtils.java
1152	[PATCH]    return    0xD;	[BUG]    [BUGGY]    return    -13;    [FE]    junit.framework.AssertionFailedError:    expected:<13>    but    was:<-13>    testHexDigitMsb0ToInt    [CONTEXT]    return    0xE;    case    '8':    return    0x1;    case    '9':    return    0x9;    case    'a':    case    'A':    return    0x5;    case    'b':    case    'B':    [BUGGY]    return    -13;    case    'c':    case    'C':    return    0x3;    case    'd':    case    'D':    return    0xB;    case    'e':    case    'E':    return    0x7;    case    'f':    [CLASS]        Conversion    [METHOD]    hexDigitMsb0ToInt    [RETURN_TYPE]    int        final    char    hexDigit    [VARIABLES]    boolean    char    hexDigit        	lang_5164_Conversion_1_1	127	1	src/main/java/org/apache/commons/lang3/Conversion.java
1153	[PATCH]    if    (array    !=    null    &&    array.length    >    0)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<[foo,null,baz]>    but    was:<[]>    testAppendWithSeparatorsWithNullText    [CONTEXT]    public    StrBuilder    appendWithSeparators(final    Object[]    array,    String    separator)    {    [BUGGY]    if    (false)    {    separator    =    ObjectUtils.toString(separator);    append(array[0]);    for    (int    i    =    1;    i    <    array.length;    i++)    {    append(separator);    append(array[i]);    }    }    return    this;    }    [CLASS]        StrBuilder    StrBuilderTokenizer    StrBuilderReader    StrBuilderWriter    [METHOD]    appendWithSeparators    [RETURN_TYPE]    StrBuilder        Object[]    array    String    separator    [VARIABLES]    String    format    newLine    nullText    separator    str    boolean    int    CAPACITY    capacity    destinationIndex    endIndex    i    index    initialCapacity    len    length    mark    newEnd    oldEnd    pos    size    startIndex    strLen    value    long    serialVersionUID    value    Object[]    array    char[]    buffer    chars    destination    old        	lang_8819_StrBuilder_1_1	1132	1	src/main/java/org/apache/commons/lang3/text/StrBuilder.java
1154	[PATCH]    if    (c    >    a)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    maximum(short,short,short)    1    failed    expected:<1236>    but    was:<1235>    testMaximumShort    [CONTEXT]    public    static    short    max(short    a,    final    short    b,    final    short    c)    {    if    (b    >    a)    {    a    =    b;    }    [BUGGY]    if    (false)    {    a    =    c;    }    return    a;    }    [CLASS]        NumberUtils    [METHOD]    max    [RETURN_TYPE]    short        short    a    final    short    b    final    short    c    [VARIABLES]    Integer    INTEGER_MINUS_ONE    INTEGER_ONE    INTEGER_ZERO    Float    FLOAT_MINUS_ONE    FLOAT_ONE    FLOAT_ZERO    f    boolean    Byte    BYTE_MINUS_ONE    BYTE_ONE    BYTE_ZERO    Long    LONG_MINUS_ONE    LONG_ONE    LONG_ZERO    short    a    b    c    Double    DOUBLE_MINUS_ONE    DOUBLE_ONE    DOUBLE_ZERO    d    Short    SHORT_MINUS_ONE    SHORT_ONE    SHORT_ZERO        	lang_18206_NumberUtils_1_1	1242	1	src/main/java/org/apache/commons/lang3/math/NumberUtils.java
1155	[PATCH]    int    months    =    end.get(Calendar.MONTH)    -    start.get(Calendar.MONTH);	[BUG]    [BUGGY]    int    months    =    end.get(Calendar.MONTH)    /    start.get(Calendar.MONTH);    [FE]    java.lang.ArithmeticException:    /    by    zero    testDurationsByBruteForce    [CONTEXT]    start.setTime(new    Date(startMillis));    final    Calendar    end    =    Calendar.getInstance(timezone);    end.setTime(new    Date(endMillis));        int    milliseconds    =    end.get(Calendar.MILLISECOND)    -    start.get(Calendar.MILLISECOND);    int    seconds    =    end.get(Calendar.SECOND)    -    start.get(Calendar.SECOND);    int    minutes    =    end.get(Calendar.MINUTE)    -    start.get(Calendar.MINUTE);    int    hours    =    end.get(Calendar.HOUR_OF_DAY)    -    start.get(Calendar.HOUR_OF_DAY);    int    days    =    end.get(Calendar.DAY_OF_MONTH)    -    start.get(Calendar.DAY_OF_MONTH);    [BUGGY]    int    months    =    end.get(Calendar.MONTH)    /    start.get(Calendar.MONTH);    int    years    =    end.get(Calendar.YEAR)    -    start.get(Calendar.YEAR);        while    (milliseconds    <    0)    {    milliseconds    +=    1000;    seconds    -=    1;    }    while    (seconds    <    0)    {    seconds    +=    60;    minutes    -=    1;    [CLASS]        DurationFormatUtils    Token    [METHOD]    formatPeriod    [RETURN_TYPE]    String        final    long    startMillis    final    long    endMillis    String    format    final    boolean    padWithZeros    TimeZone    timezone    [VARIABLES]    TimeZone    timezone    boolean    padWithZeros    Token[]    tokens    Calendar    end    start    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    tmp    int    count    days    hours    milliseconds    minutes    months    seconds    target    years    long    endMillis    startMillis        	lang_22329_DurationFormatUtils_1_1	293	1	src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java
1156	[PATCH]    int    p[]    =    new    int[n    +    1];    //'previous'    cost    array,    horizontally	[BUG]    [BUGGY]    int    p[]    =    new    int[n    /    1];    //'previous'    cost    array,    horizontally    [FE]    java.lang.ArrayIndexOutOfBoundsException:    3    testGetLevenshteinDistance_StringString    [CONTEXT]    if    (n    >    m)    {        final    CharSequence    tmp    =    s;    s    =    t;    t    =    tmp;    n    =    m;    m    =    t.length();    }        [BUGGY]    int    p[]    =    new    int[n    /    1];    //'previous'    cost    array,    horizontally    int    d[]    =    new    int[n    +    1];    int    _d[];    //placeholder    to    assist    in    swapping    p    and    d        int    i;    int    j;        char    t_j;        int    cost;        [CLASS]        StringUtils    [METHOD]    getLevenshteinDistance    [RETURN_TYPE]    int        CharSequence    s    CharSequence    t    [VARIABLES]    Pattern    WHITESPACE_PATTERN    pattern    boolean    CharSequence    s    t    tmp    char    t_j    int[]    _d    d    p    String    CR    EMPTY    LF    SPACE    abrevMarker    close    decomposed    defaultStr    input    invalidChars    middle    open    overlay    padStr    regex    remove    replaceChars    replacement    result    ret    searchChars    searchString    separator    separatorChars    source    str    str1    str2    stripChars    tag    text    ts    validChars    int    INDEX_NOT_FOUND    PAD_LIMIT    arrayLen    arrayPos    at    beg    closeLen    cost    count    csLast    csLen    csLength    currentType    end    endIndex    endLimit    endOffset    firstDiff    found    greater    i    idx    increase    index    inputLength    j    lastIdx    len    length    longestStrLen    m    max    maxWidth    n    newTokenStart    noOfItems    numberOfSubstrings    offset    openLen    ordinal    outputLength    padLen    pads    pos    repeat    replLength    replaceCharsLength    replaceIndex    replacementLength    ret    searchChar    searchLast    searchLen    searchLength    separatorLength    shortestStrLen    size    sizePlus1    smallestIndexOfDiff    start    startIndex    startOffset    startPos    strLen    strLength    stringPos    strsLen    sz    targetSting    temp    tempIndex    textIndex    textLength    timeToLive    tmp    tokenStart    type        	lang_14021_StringUtils_1_1	6674	1	src/main/java/org/apache/commons/lang3/StringUtils.java
1157	[PATCH]    if    (sz    >    start    +    1    &&    chars[start]    ==    '0'    &&    chars[start    +    1]    ==    'x')    {	[BUG]    [BUGGY]    if    (false    &&    chars[start    +    1]    ==    'x')    {    [FE]    junit.framework.AssertionFailedError:    isNumber(String)    16    failed    testIsNumber    [CONTEXT]    return    false;    }    final    char[]    chars    =    str.toCharArray();    int    sz    =    chars.length;    boolean    hasExp    =    false;    boolean    hasDecPoint    =    false;    boolean    allowSigns    =    false;    boolean    foundDigit    =    false;        final    int    start    =    (chars[0]    ==    '-')    ?    1    :    0;    [BUGGY]    if    (false    &&    chars[start    +    1]    ==    'x')    {    int    i    =    start    +    2;    if    (i    ==    sz)    {    return    false;    }        for    (;    i    <    chars.length;    i++)    {    if    ((chars[i]    <    '0'    ||    chars[i]    >    '9')    &&    (chars[i]    <    'a'    ||    chars[i]    >    'f')    &&    (chars[i]    <    'A'    ||    chars[i]    >    'F'))    {    return    false;    [CLASS]        NumberUtils    [METHOD]    isNumber    [RETURN_TYPE]    boolean        String    str    [VARIABLES]    Integer    INTEGER_MINUS_ONE    INTEGER_ONE    INTEGER_ZERO    Float    FLOAT_MINUS_ONE    FLOAT_ONE    FLOAT_ZERO    f    boolean    allowSigns    foundDigit    hasDecPoint    hasExp    Byte    BYTE_MINUS_ONE    BYTE_ONE    BYTE_ZERO    Long    LONG_MINUS_ONE    LONG_ONE    LONG_ZERO    String    str    Double    DOUBLE_MINUS_ONE    DOUBLE_ONE    DOUBLE_ZERO    d    Short    SHORT_MINUS_ONE    SHORT_ONE    SHORT_ZERO    int    i    start    sz    char[]    chars        	lang_18257_NumberUtils_1_1	1346	1	src/main/java/org/apache/commons/lang3/math/NumberUtils.java
1158	[PATCH]    if    (date    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.NullPointerException    testCeil    [CONTEXT]    public    static    Date    ceiling(final    Date    date,    final    int    field)    {    [BUGGY]    if    (false)    {    throw    new    IllegalArgumentException(   "The    date    must    not    be    null   ");    }    final    Calendar    gval    =    Calendar.getInstance();    gval.setTime(date);    modify(gval,    field,    MODIFY_CEILING);    return    gval.getTime();    }    [CLASS]        DateUtils    DateIterator    [METHOD]    ceiling    [RETURN_TYPE]    Date        Date    date    final    int    field    [VARIABLES]    int[][]    fields    boolean    long    MILLIS_PER_DAY    MILLIS_PER_HOUR    MILLIS_PER_MINUTE    MILLIS_PER_SECOND    int    MODIFY_CEILING    MODIFY_ROUND    MODIFY_TRUNCATE    RANGE_MONTH_MONDAY    RANGE_MONTH_SUNDAY    RANGE_WEEK_CENTER    RANGE_WEEK_MONDAY    RANGE_WEEK_RELATIVE    RANGE_WEEK_SUNDAY    SEMI_MONTH    amount    calendarField    field    Date    date    Calendar    c    cal1    cal2    date    endFinal    gval    rounded    spot    startFinal    truncated        	lang_21755_DateUtils_1_1	883	1	src/main/java/org/apache/commons/lang3/time/DateUtils.java
1159	[PATCH]    if    (parsePattern.endsWith(   "ZZ   "))    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.text.ParseException:    Unable    to    parse    the    date:    2022-12-22T12:50:50-08:00    testLang530    [CONTEXT]        if    (parsePattern.endsWith(   "ZZ   "))    {    pattern    =    pattern.substring(0,    pattern.length()    -    1);    }    parser.applyPattern(pattern);    pos.setIndex(0);    String    str2    =    str;        [BUGGY]    if    (false)    {    str2    =    str.replaceAll(   "([-+][0-9][0-9]):([0-9][0-9])$   ",       "$1$2   ");    }    final    Date    date    =    parser.parse(str2,    pos);    if    (date    !=    null    &&    pos.getIndex()    ==    str2.length())    {    return    date;    }    }    throw    new    ParseException(   "Unable    to    parse    the    date:       "    +    str,    -1);    }    [CLASS]        DateUtils    DateIterator    [METHOD]    parseDateWithLeniency    [RETURN_TYPE]    Date        String    str    Locale    locale    String[]    parsePatterns    final    boolean    lenient    [VARIABLES]    Locale    locale    int[][]    fields    boolean    lenient    Calendar    cal1    cal2    endFinal    spot    startFinal    String    parsePattern    pattern    str    str2    String[]    parsePatterns    SimpleDateFormat    parser    long    MILLIS_PER_DAY    MILLIS_PER_HOUR    MILLIS_PER_MINUTE    MILLIS_PER_SECOND    int    MODIFY_CEILING    MODIFY_ROUND    MODIFY_TRUNCATE    RANGE_MONTH_MONDAY    RANGE_MONTH_SUNDAY    RANGE_WEEK_CENTER    RANGE_WEEK_MONDAY    RANGE_WEEK_RELATIVE    RANGE_WEEK_SUNDAY    SEMI_MONTH    Date    date    ParsePosition    pos        	lang_21721_DateUtils_1_1	381	1	src/main/java/org/apache/commons/lang3/time/DateUtils.java
1160	[PATCH]    if    (value.compareTo(start)    <=    0    ||    value.compareTo(end)    >=    0)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    java.lang.IllegalArgumentException:    The    value    b    is    not    in    the    specified    exclusive    range    of    a    to    c    testExclusiveBetween    [CONTEXT]    public    static    <T>    void    exclusiveBetween(final    T    start,    final    T    end,    final    Comparable<T>    value)    {        [BUGGY]    if    (true)    {    throw    new    IllegalArgumentException(String.format(DEFAULT_EXCLUSIVE_BETWEEN_EX_MESSAGE,    value,    start,    end));    }    }    [CLASS]        Validate    [METHOD]    exclusiveBetween    [RETURN_TYPE]    <T>        final    T    start    final    T    end    Comparable<T>    value    [VARIABLES]    Comparable    value    String    DEFAULT_EXCLUSIVE_BETWEEN_EX_MESSAGE    DEFAULT_INCLUSIVE_BETWEEN_EX_MESSAGE    DEFAULT_IS_ASSIGNABLE_EX_MESSAGE    DEFAULT_IS_INSTANCE_OF_EX_MESSAGE    DEFAULT_IS_NULL_EX_MESSAGE    DEFAULT_IS_TRUE_EX_MESSAGE    DEFAULT_MATCHES_PATTERN_EX    DEFAULT_NOT_BLANK_EX_MESSAGE    DEFAULT_NOT_EMPTY_ARRAY_EX_MESSAGE    DEFAULT_NOT_EMPTY_CHAR_SEQUENCE_EX_MESSAGE    DEFAULT_NOT_EMPTY_COLLECTION_EX_MESSAGE    DEFAULT_NOT_EMPTY_MAP_EX_MESSAGE    DEFAULT_NO_NULL_ELEMENTS_ARRAY_EX_MESSAGE    DEFAULT_NO_NULL_ELEMENTS_COLLECTION_EX_MESSAGE    DEFAULT_VALID_INDEX_ARRAY_EX_MESSAGE    DEFAULT_VALID_INDEX_CHAR_SEQUENCE_EX_MESSAGE    DEFAULT_VALID_INDEX_COLLECTION_EX_MESSAGE    DEFAULT_VALID_STATE_EX_MESSAGE    message    pattern    boolean    T    end    start        	lang_14564_Validate_1_1	949	1	src/main/java/org/apache/commons/lang3/Validate.java
1161	[PATCH]    long    total    =    0;	[BUG]    [BUGGY]    long    total    =    -1;    [FE]    junit.framework.AssertionFailedError:    expected:<0>    but    was:<-1>    test_generateBitVector    [CONTEXT]    public    static    <E    extends    Enum<E>>    long    generateBitVector(final    Class<E>    enumClass,    final    Iterable<E>    values)    {    checkBitVectorable(enumClass);    Validate.notNull(values);    [BUGGY]    long    total    =    -1;    for    (final    E    constant    :    values)    {    Validate.isTrue(constant    !=    null,    NULL_ELEMENTS_NOT_PERMITTED);    total    |=    1    <<    constant.ordinal();    }    return    total;    }    [CLASS]        EnumUtils    [METHOD]    generateBitVector    [RETURN_TYPE]    <E        Class<E>    enumClass    Iterable<E>    values    [VARIABLES]    Class    enumClass    String    CANNOT_STORE_S_S_VALUES_IN_S_BITS    ENUM_CLASS_MUST_BE_DEFINED    NULL_ELEMENTS_NOT_PERMITTED    S_DOES_NOT_SEEM_TO_BE_AN_ENUM_TYPE    enumName    boolean    Iterable    values    E    constant    long    total        	lang_7784_EnumUtils_1_1	145	1	src/main/java/org/apache/commons/lang3/EnumUtils.java
1162	[PATCH]    if    (i    >    0)    {	[BUG]    [BUGGY]    if    (i    >=    0)    {    [FE]    junit.framework.AssertionFailedError:    expected:<....Integer@7c3fdb62[{{[1,2},<null>,{]5}}]>    but    was:<....Integer@7c3fdb62[{{[,1,2},<null>,{,]5}}]>    testLongArrayArray    [CONTEXT]    protected    void    appendDetail(final    StringBuffer    buffer,    final    String    fieldName,    final    long[]    array)    {    buffer.append(arrayStart);    for    (int    i    =    0;    i    <    array.length;    i++)    {    [BUGGY]    if    (i    >=    0)    {    buffer.append(arraySeparator);    }    appendDetail(buffer,    fieldName,    array[i]);    }    buffer.append(arrayEnd);    }    [CLASS]        ToStringStyle    DefaultToStringStyle    NoFieldNameToStringStyle    ShortPrefixToStringStyle    SimpleToStringStyle    MultiLineToStringStyle    [METHOD]    appendDetail    [RETURN_TYPE]    void        StringBuffer    buffer    String    fieldName    final    long[]    array    [VARIABLES]    StringBuffer    buffer    boolean    arrayContentDetail    defaultFullDetail    detail    fieldSeparatorAtEnd    fieldSeparatorAtStart    match    useClassName    useFieldNames    useIdentityHashCode    useShortClassName    value    ThreadLocal    REGISTRY    long[]    array    ToStringStyle    DEFAULT_STYLE    MULTI_LINE_STYLE    NO_FIELD_NAMES_STYLE    SHORT_PREFIX_STYLE    SIMPLE_STYLE    String    arrayEnd    arraySeparator    arrayStart    contentEnd    contentStart    data    fieldName    fieldNameValueSeparator    fieldSeparator    nullText    sizeEndText    sizeStartText    summaryObjectEndText    summaryObjectStartText    superToString    toString    long    serialVersionUID    value    int    i        	lang_453_ToStringStyle_1_1	995	1	src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java
1163	[PATCH]    if    ((chars[i]    <    '0'    ||    chars[i]    >    '9')	[BUG]    [BUGGY]    if    ((chars[i]    <    '0'    ||    false)    [FE]    junit.framework.AssertionFailedError:    isNumber(String)    8    Neg    failed    testIsNumber    [CONTEXT]    boolean    foundDigit    =    false;        final    int    start    =    (chars[0]    ==    '-')    ?    1    :    0;    if    (sz    >    start    +    1    &&    chars[start]    ==    '0'    &&    chars[start    +    1]    ==    'x')    {    int    i    =    start    +    2;    if    (i    ==    sz)    {    return    false;    }        for    (;    i    <    chars.length;    i++)    {    [BUGGY]    if    ((chars[i]    <    '0'    ||    false)    &&    (chars[i]    <    'a'    ||    chars[i]    >    'f')    &&    (chars[i]    <    'A'    ||    chars[i]    >    'F'))    {    return    false;    }    }    return    true;    }    sz--;        int    i    =    start;    [CLASS]        NumberUtils    [METHOD]    isNumber    [RETURN_TYPE]    boolean        String    str    [VARIABLES]    Integer    INTEGER_MINUS_ONE    INTEGER_ONE    INTEGER_ZERO    Float    FLOAT_MINUS_ONE    FLOAT_ONE    FLOAT_ZERO    f    boolean    allowSigns    foundDigit    hasDecPoint    hasExp    Byte    BYTE_MINUS_ONE    BYTE_ONE    BYTE_ZERO    Long    LONG_MINUS_ONE    LONG_ONE    LONG_ZERO    String    str    Double    DOUBLE_MINUS_ONE    DOUBLE_ONE    DOUBLE_ZERO    d    Short    SHORT_MINUS_ONE    SHORT_ONE    SHORT_ZERO    int    i    start    sz    char[]    chars        	lang_18291_NumberUtils_1_1	1353	1	src/main/java/org/apache/commons/lang3/math/NumberUtils.java
1164	[PATCH]    return    array    ==    null    ||    array.length    ==    0;	[BUG]    [BUGGY]    return    array    ==    null    !=    (array.length    ==    0);    [FE]    java.lang.NullPointerException    testRemoveElementDoubleArray    [CONTEXT]    public    static    boolean    isEmpty(final    double[]    array)    {    [BUGGY]    return    array    ==    null    !=    (array.length    ==    0);    }    [CLASS]        ArrayUtils    [METHOD]    isEmpty    [RETURN_TYPE]    boolean        final    double[]    array    [VARIABLES]    Class[]    EMPTY_CLASS_ARRAY    long[]    EMPTY_LONG_ARRAY    array    array1    array2    result    subarray    short[]    EMPTY_SHORT_ARRAY    array    array1    array2    result    subarray    Character[]    EMPTY_CHARACTER_OBJECT_ARRAY    array    result    Boolean[]    EMPTY_BOOLEAN_OBJECT_ARRAY    array    result    int[]    EMPTY_INT_ARRAY    array    array1    array2    result    subarray    String[]    EMPTY_STRING_ARRAY    array    Integer[]    EMPTY_INTEGER_OBJECT_ARRAY    array    result    int    INDEX_NOT_FOUND    endIndexExclusive    i    j    newSize    startIndex    startIndexInclusive    tmp    valueForNull    valueToFind    float[]    EMPTY_FLOAT_ARRAY    array    array1    array2    result    subarray    char[]    EMPTY_CHAR_ARRAY    array    array1    array2    result    subarray    Short[]    EMPTY_SHORT_OBJECT_ARRAY    array    result    byte[]    EMPTY_BYTE_ARRAY    array    array1    array2    result    subarray    Double[]    EMPTY_DOUBLE_OBJECT_ARRAY    array    result    boolean    double[]    EMPTY_DOUBLE_ARRAY    array    array1    array2    result    subarray    Byte[]    EMPTY_BYTE_OBJECT_ARRAY    array    result    Float[]    EMPTY_FLOAT_OBJECT_ARRAY    array    result    boolean[]    EMPTY_BOOLEAN_ARRAY    array    array1    array2    result    subarray    Object[]    EMPTY_OBJECT_ARRAY    array    array1    array2    entry    Long[]    EMPTY_LONG_OBJECT_ARRAY    array    result        	lang_2681_ArrayUtils_1_1	3299	1	src/main/java/org/apache/commons/lang3/ArrayUtils.java
1165	[PATCH]    if    (pos    ==    INDEX_NOT_FOUND)    {	[BUG]    [BUGGY]    if    (pos    >=    INDEX_NOT_FOUND)    {    [FE]    junit.framework.AssertionFailedError:    expected:<foo[]>    but    was:<foo[XXbarXXbaz]>    testSubstringBefore_StringString    [CONTEXT]    public    static    String    substringBefore(final    String    str,    final    String    separator)    {    if    (isEmpty(str)    ||    separator    ==    null)    {    return    str;    }    if    (separator.isEmpty())    {    return    EMPTY;    }    final    int    pos    =    str.indexOf(separator);    [BUGGY]    if    (pos    >=    INDEX_NOT_FOUND)    {    return    str;    }    return    str.substring(0,    pos);    }    [CLASS]        StringUtils    [METHOD]    substringBefore    [RETURN_TYPE]    String        String    str    String    separator    [VARIABLES]    Pattern    WHITESPACE_PATTERN    pattern    String    CR    EMPTY    LF    SPACE    decomposed    input    invalidChars    searchChars    separator    str    stripChars    ts    validChars    boolean    int    INDEX_NOT_FOUND    PAD_LIMIT    csLast    csLen    csLength    end    endLimit    found    i    index    j    len    max    ordinal    pos    ret    searchChar    searchLast    searchLen    searchLength    start    startPos    strLen    strsLen    sz    tmp        	lang_11951_StringUtils_1_1	2194	1	src/main/java/org/apache/commons/lang3/StringUtils.java
1166	[PATCH]    return    str.substring(start    +    open.length(),    end);	[BUG]    [BUGGY]    return    str.substring(start    -    open.length(),    end);    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    -1    testSubstringBetween_StringString    [CONTEXT]    public    static    String    substringBetween(final    String    str,    final    String    open,    final    String    close)    {    if    (str    ==    null    ||    open    ==    null    ||    close    ==    null)    {    return    null;    }    final    int    start    =    str.indexOf(open);    if    (start    !=    INDEX_NOT_FOUND)    {    final    int    end    =    str.indexOf(close,    start    +    open.length());    if    (end    !=    INDEX_NOT_FOUND)    {    [BUGGY]    return    str.substring(start    -    open.length(),    end);    }    }    return    null;    }    [CLASS]        StringUtils    [METHOD]    substringBetween    [RETURN_TYPE]    String        String    str    String    open    String    close    [VARIABLES]    Pattern    WHITESPACE_PATTERN    pattern    String    CR    EMPTY    LF    SPACE    close    decomposed    input    invalidChars    open    searchChars    separator    str    stripChars    tag    ts    validChars    boolean    int    INDEX_NOT_FOUND    PAD_LIMIT    csLast    csLen    csLength    end    endLimit    found    i    index    j    len    max    ordinal    pos    ret    searchChar    searchLast    searchLen    searchLength    start    startPos    strLen    strsLen    sz    tmp        	lang_12019_StringUtils_1_1	2385	1	src/main/java/org/apache/commons/lang3/StringUtils.java
1167	[PATCH]    if    ((ch0    ==    'o'    ||    ch0    ==    'O')    &&	[BUG]    [BUGGY]    if    ((ch0    ==    'o')    &&    [FE]    junit.framework.AssertionFailedError:    expected:<true>    but    was:<null>    test_toBooleanObject_String    [CONTEXT]    }    if    (ch0    ==    'n'    ||    ch0    ==    'N'    ||    ch0    ==    'f'    ||    ch0    ==    'F')    {    return    Boolean.FALSE;    }    break;    }    case    2:    {    final    char    ch0    =    str.charAt(0);    final    char    ch1    =    str.charAt(1);    [BUGGY]    if    ((ch0    ==    'o')    &&    (ch1    ==    'n'    ||    ch1    ==    'N')    )    {    return    Boolean.TRUE;    }    if    ((ch0    ==    'n'    ||    ch0    ==    'N')    &&    (ch1    ==    'o'    ||    ch1    ==    'O')    )    {    return    Boolean.FALSE;    }    break;    }    case    3:    {    [CLASS]        BooleanUtils    [METHOD]    toBooleanObject    [RETURN_TYPE]    Boolean        String    str    [VARIABLES]    boolean    char    ch0    ch1    ch2    ch3    ch4    String    str        	lang_3666_BooleanUtils_1_1	574	1	src/main/java/org/apache/commons/lang3/BooleanUtils.java
1168	[PATCH]    for    (int    i    =    0;    i    <    array.length;    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    1;    i    <    array.length;    i++)    {    [FE]    junit.framework.AssertionFailedError    testToPrimitive_boolean_boolean    [CONTEXT]    public    static    boolean[]    toPrimitive(final    Boolean[]    array,    final    boolean    valueForNull)    {    if    (array    ==    null)    {    return    null;    }    else    if    (array.length    ==    0)    {    return    EMPTY_BOOLEAN_ARRAY;    }    final    boolean[]    result    =    new    boolean[array.length];    [BUGGY]    for    (int    i    =    1;    i    <    array.length;    i++)    {    final    Boolean    b    =    array[i];    result[i]    =    (b    ==    null    ?    valueForNull    :    b.booleanValue());    }    return    result;    }    [CLASS]        ArrayUtils    [METHOD]    toPrimitive    [RETURN_TYPE]    boolean[]        Boolean[]    array    final    boolean    valueForNull    [VARIABLES]    Class[]    EMPTY_CLASS_ARRAY    long[]    EMPTY_LONG_ARRAY    array    array1    array2    result    subarray    short[]    EMPTY_SHORT_ARRAY    array    array1    array2    result    subarray    Character[]    EMPTY_CHARACTER_OBJECT_ARRAY    array    result    Boolean[]    EMPTY_BOOLEAN_OBJECT_ARRAY    array    int[]    EMPTY_INT_ARRAY    array    array1    array2    result    subarray    String[]    EMPTY_STRING_ARRAY    array    Integer[]    EMPTY_INTEGER_OBJECT_ARRAY    array    result    int    INDEX_NOT_FOUND    endIndexExclusive    i    j    newSize    startIndex    startIndexInclusive    tmp    valueForNull    valueToFind    float[]    EMPTY_FLOAT_ARRAY    array    array1    array2    result    subarray    char[]    EMPTY_CHAR_ARRAY    array    array1    array2    result    subarray    Short[]    EMPTY_SHORT_OBJECT_ARRAY    array    result    byte[]    EMPTY_BYTE_ARRAY    array    array1    array2    result    subarray    Double[]    EMPTY_DOUBLE_OBJECT_ARRAY    array    result    boolean    valueForNull    double[]    EMPTY_DOUBLE_ARRAY    array    array1    array2    result    subarray    Byte[]    EMPTY_BYTE_OBJECT_ARRAY    array    result    Float[]    EMPTY_FLOAT_OBJECT_ARRAY    array    result    boolean[]    EMPTY_BOOLEAN_ARRAY    array    array1    array2    result    subarray    Boolean    b    Object[]    EMPTY_OBJECT_ARRAY    array    array1    array2    entry    Long[]    EMPTY_LONG_OBJECT_ARRAY    array    result        	lang_2596_ArrayUtils_1_1	3196	1	src/main/java/org/apache/commons/lang3/ArrayUtils.java
1169	[PATCH]    if    (offset    <=    4)    {	[BUG]    [BUGGY]    if    (offset    ==    4)    {    [FE]    java.lang.IllegalArgumentException:    Minimum    abbreviation    width    with    offset    is    7    testAbbreviate_StringInt    [CONTEXT]    if    (str.length()    <=    maxWidth)    {    return    str;    }    if    (offset    >    str.length())    {    offset    =    str.length();    }    if    (str.length()    -    offset    <    maxWidth    -    3)    {    offset    =    str.length()    -    (maxWidth    -    3);    }    final    String    abrevMarker    =       "...   ";    [BUGGY]    if    (offset    ==    4)    {    return    str.substring(0,    maxWidth    -    3)    +    abrevMarker;    }    if    (maxWidth    <    7)    {    throw    new    IllegalArgumentException(   "Minimum    abbreviation    width    with    offset    is    7   ");    }    if    (offset    +    maxWidth    -    3    <    str.length())    {    return    abrevMarker    +    abbreviate(str.substring(offset),    maxWidth    -    3);    }    return    abrevMarker    +    str.substring(str.length()    -    (maxWidth    -    3));    }    [CLASS]        StringUtils    [METHOD]    abbreviate    [RETURN_TYPE]    String        String    str    int    offset    final    int    maxWidth    [VARIABLES]    Pattern    WHITESPACE_PATTERN    pattern    String    CR    EMPTY    LF    SPACE    abrevMarker    close    decomposed    defaultStr    input    invalidChars    open    overlay    padStr    regex    remove    replaceChars    replacement    result    ret    searchChars    searchString    separator    separatorChars    source    str    stripChars    tag    text    ts    validChars    boolean    int    INDEX_NOT_FOUND    PAD_LIMIT    beg    closeLen    count    csLast    csLen    csLength    currentType    end    endIndex    endLimit    found    greater    i    idx    increase    index    inputLength    j    lastIdx    len    max    maxWidth    newTokenStart    noOfItems    numberOfSubstrings    offset    openLen    ordinal    outputLength    padLen    pads    pos    repeat    replLength    replaceCharsLength    replaceIndex    replacementLength    ret    searchChar    searchLast    searchLen    searchLength    separatorLength    size    sizePlus1    start    startIndex    startPos    strLen    strLength    strsLen    sz    temp    tempIndex    textIndex    textLength    timeToLive    tmp    tokenStart    type        	lang_13744_StringUtils_1_1	6303	1	src/main/java/org/apache/commons/lang3/StringUtils.java
1170	[PATCH]    if    (startIndex    >    endIndex)    {	[BUG]    [BUGGY]    if    (startIndex    !=    endIndex)    {    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    5    testSubSequenceIntInt    [CONTEXT]    public    CharSequence    subSequence(final    int    startIndex,    final    int    endIndex)    {    if    (startIndex    <    0)    {    throw    new    StringIndexOutOfBoundsException(startIndex);    }    if    (endIndex    >    size)    {    throw    new    StringIndexOutOfBoundsException(endIndex);    }    [BUGGY]    if    (startIndex    !=    endIndex)    {    throw    new    StringIndexOutOfBoundsException(endIndex    -    startIndex);    }    return    substring(startIndex,    endIndex);    }    [CLASS]        StrBuilder    StrBuilderTokenizer    StrBuilderReader    StrBuilderWriter    [METHOD]    subSequence    [RETURN_TYPE]    CharSequence        final    int    startIndex    final    int    endIndex    [VARIABLES]    String    defaultIfEmpty    format    insertStr    newLine    nullText    replaceStr    searchStr    separator    standard    str    boolean    int    CAPACITY    capacity    destinationIndex    endIndex    from    half    i    index    initialCapacity    insertLen    leftIdx    len    length    loopIndex    mark    newEnd    newSize    offset    oldEnd    padLen    pos    removeLen    replaceCount    replaceLen    rightIdx    searchLen    size    start    startIndex    strLen    to    value    width    long    serialVersionUID    value    char[]    buf    buffer    chars    destination    old        	lang_9572_StrBuilder_1_1	2127	1	src/main/java/org/apache/commons/lang3/text/StrBuilder.java
1171	[PATCH]    if    (startIndexInclusive    <    0)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException    testSubarrayLong    [CONTEXT]    public    static    long[]    subarray(final    long[]    array,    int    startIndexInclusive,    int    endIndexExclusive)    {    if    (array    ==    null)    {    return    null;    }    [BUGGY]    if    (false)    {    startIndexInclusive    =    0;    }    if    (endIndexExclusive    >    array.length)    {    endIndexExclusive    =    array.length;    }    final    int    newSize    =    endIndexExclusive    -    startIndexInclusive;    if    (newSize    <=    0)    {    return    EMPTY_LONG_ARRAY;    }        [CLASS]        ArrayUtils    [METHOD]    subarray    [RETURN_TYPE]    long[]        final    long[]    array    int    startIndexInclusive    int    endIndexExclusive    [VARIABLES]    Class[]    EMPTY_CLASS_ARRAY    long[]    EMPTY_LONG_ARRAY    array    subarray    short[]    EMPTY_SHORT_ARRAY    array    Character[]    EMPTY_CHARACTER_OBJECT_ARRAY    array    Boolean[]    EMPTY_BOOLEAN_OBJECT_ARRAY    array    int[]    EMPTY_INT_ARRAY    array    String[]    EMPTY_STRING_ARRAY    array    Integer[]    EMPTY_INTEGER_OBJECT_ARRAY    array    int    INDEX_NOT_FOUND    endIndexExclusive    i    newSize    startIndexInclusive    float[]    EMPTY_FLOAT_ARRAY    array    char[]    EMPTY_CHAR_ARRAY    array    Short[]    EMPTY_SHORT_OBJECT_ARRAY    array    byte[]    EMPTY_BYTE_ARRAY    array    Double[]    EMPTY_DOUBLE_OBJECT_ARRAY    array    boolean    double[]    EMPTY_DOUBLE_ARRAY    array    Byte[]    EMPTY_BYTE_OBJECT_ARRAY    array    Float[]    EMPTY_FLOAT_OBJECT_ARRAY    array    boolean[]    EMPTY_BOOLEAN_ARRAY    array    Object[]    EMPTY_OBJECT_ARRAY    array    entry    Long[]    EMPTY_LONG_OBJECT_ARRAY    array        	lang_1000_ArrayUtils_1_1	893	1	src/main/java/org/apache/commons/lang3/ArrayUtils.java
1172	[PATCH]    final    int    bits    =    (0xff    &    src[i    +    srcPos])    <<    shift;	[BUG]    [BUGGY]    final    int    bits    =    (0    &    src[i    +    srcPos])    <<    shift;    [FE]    junit.framework.AssertionFailedError:    expected:<205>    but    was:<0>    testByteArrayToShort    [CONTEXT]    return    dstInit;    }    if    ((nBytes    -    1)    *    8    +    dstPos    >=    16)    {    throw    new    IllegalArgumentException(       "(nBytes-1)*8+dstPos    is    greather    or    equal    to    than    16   ");    }    short    out    =    dstInit;    int    shift    =    0;    for    (int    i    =    0;    i    <    nBytes;    i++    )    {    shift    =    i    *    8    +    dstPos;    [BUGGY]    final    int    bits    =    (0    &    src[i    +    srcPos])    <<    shift;    final    int    mask    =    0xff    <<    shift;    out    =    (short)((out    &    ~mask)    |    bits);    }    return    out;    }    [CLASS]        Conversion    [METHOD]    byteArrayToShort    [RETURN_TYPE]    short        final    byte[]    src    final    int    srcPos    final    short    dstInit    final    int    dstPos    final    int    nBytes    [VARIABLES]    byte[]    src    boolean    short    dstInit    out    int    bits    dstPos    i    mask    nBytes    shift    srcPos        	lang_6295_Conversion_1_1	880	1	src/main/java/org/apache/commons/lang3/Conversion.java
1173	[PATCH]    if    (separator    ==    null    ||    EMPTY.equals(separator))    {	[BUG]    [BUGGY]    if    (EMPTY.equals(separator))    {    [FE]    java.lang.NullPointerException    testSplitByWholeSeparatorPreserveAllTokens_StringStringInt    [CONTEXT]    if    (str    ==    null)    {    return    null;    }    final    int    len    =    str.length();    if    (len    ==    0)    {    return    ArrayUtils.EMPTY_STRING_ARRAY;    }        [BUGGY]    if    (EMPTY.equals(separator))    {        return    splitWorker(str,    null,    max,    preserveAllTokens);    }    final    int    separatorLength    =    separator.length();    final    ArrayList<String>    substrings    =    new    ArrayList<String>();    int    numberOfSubstrings    =    0;    int    beg    =    0;    int    end    =    0;    [CLASS]        StringUtils    [METHOD]    splitByWholeSeparatorWorker    [RETURN_TYPE]    String[]        String    str    String    separator    final    int    max    final    boolean    preserveAllTokens    [VARIABLES]    ArrayList    substrings    Pattern    WHITESPACE_PATTERN    pattern    String    CR    EMPTY    LF    SPACE    close    decomposed    input    invalidChars    open    searchChars    separator    separatorChars    str    stripChars    tag    ts    validChars    boolean    preserveAllTokens    int    INDEX_NOT_FOUND    PAD_LIMIT    beg    closeLen    csLast    csLen    csLength    end    endLimit    found    i    index    j    len    max    numberOfSubstrings    openLen    ordinal    pos    ret    searchChar    searchLast    searchLen    searchLength    separatorLength    start    startPos    strLen    strsLen    sz    tmp        	lang_12087_StringUtils_1_1	2712	1	src/main/java/org/apache/commons/lang3/StringUtils.java
1174	[PATCH]    if(Double.isNaN(b))    {	[BUG]    [BUGGY]    if(false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<1.2>    but    was:<NaN>    testLang381    [CONTEXT]    public    static    double    min(final    double    a,    final    double    b)    {    if(Double.isNaN(a))    {    return    b;    }    else    [BUGGY]    if(false)    {    return    a;    }    else    {    return    Math.min(a,    b);    }    }    [CLASS]        IEEE754rUtils    [METHOD]    min    [RETURN_TYPE]    double        final    double    a    final    double    b    [VARIABLES]    boolean    double    a    b        	lang_17515_IEEE754rUtils_1_1	106	1	src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java
1175	[PATCH]    final    int    newSize    =    endIndexExclusive    -    startIndexInclusive;	[BUG]    [BUGGY]    final    int    newSize    =    endIndexExclusive    /    startIndexInclusive;    [FE]    java.lang.ArithmeticException:    /    by    zero    testSubarrayFloat    [CONTEXT]    public    static    float[]    subarray(final    float[]    array,    int    startIndexInclusive,    int    endIndexExclusive)    {    if    (array    ==    null)    {    return    null;    }    if    (startIndexInclusive    <    0)    {    startIndexInclusive    =    0;    }    if    (endIndexExclusive    >    array.length)    {    endIndexExclusive    =    array.length;    }    [BUGGY]    final    int    newSize    =    endIndexExclusive    /    startIndexInclusive;    if    (newSize    <=    0)    {    return    EMPTY_FLOAT_ARRAY;    }    final    float[]    subarray    =    new    float[newSize];    System.arraycopy(array,    startIndexInclusive,    subarray,    0,    newSize);    return    subarray;    }    [CLASS]        ArrayUtils    [METHOD]    subarray    [RETURN_TYPE]    float[]        final    float[]    array    int    startIndexInclusive    int    endIndexExclusive    [VARIABLES]    Class[]    EMPTY_CLASS_ARRAY    long[]    EMPTY_LONG_ARRAY    array    subarray    short[]    EMPTY_SHORT_ARRAY    array    subarray    Character[]    EMPTY_CHARACTER_OBJECT_ARRAY    array    Boolean[]    EMPTY_BOOLEAN_OBJECT_ARRAY    array    int[]    EMPTY_INT_ARRAY    array    subarray    String[]    EMPTY_STRING_ARRAY    array    Integer[]    EMPTY_INTEGER_OBJECT_ARRAY    array    int    INDEX_NOT_FOUND    endIndexExclusive    i    newSize    startIndexInclusive    float[]    EMPTY_FLOAT_ARRAY    array    subarray    char[]    EMPTY_CHAR_ARRAY    array    subarray    Short[]    EMPTY_SHORT_OBJECT_ARRAY    array    byte[]    EMPTY_BYTE_ARRAY    array    subarray    Double[]    EMPTY_DOUBLE_OBJECT_ARRAY    array    boolean    double[]    EMPTY_DOUBLE_ARRAY    array    subarray    Byte[]    EMPTY_BYTE_OBJECT_ARRAY    array    Float[]    EMPTY_FLOAT_OBJECT_ARRAY    array    boolean[]    EMPTY_BOOLEAN_ARRAY    array    Object[]    EMPTY_OBJECT_ARRAY    array    entry    Long[]    EMPTY_LONG_OBJECT_ARRAY    array        	lang_1161_ArrayUtils_1_1	1133	1	src/main/java/org/apache/commons/lang3/ArrayUtils.java
1176	[PATCH]    return    (ch    >=    'A'    &&    ch    <=    'Z')    ||    (ch    >=    'a'    &&    ch    <=    'z')    ||    (ch    >=    '0'    &&    ch    <=    '9');	[BUG]    [BUGGY]    return    (ch    >=    'A'    &&    ch    <=    'Z')    ||    (ch    >=    'a'    &&    true)    ||    (ch    >=    '0'    &&    ch    <=    '9');    [FE]    junit.framework.AssertionFailedError    testIsAsciiAlphanumeric_char    [CONTEXT]    public    static    boolean    isAsciiAlphanumeric(final    char    ch)    {    [BUGGY]    return    (ch    >=    'A'    &&    ch    <=    'Z')    ||    (ch    >=    'a'    &&    true)    ||    (ch    >=    '0'    &&    ch    <=    '9');    }    [CLASS]        CharUtils    [METHOD]    isAsciiAlphanumeric    [RETURN_TYPE]    boolean        final    char    ch    [VARIABLES]    char    CR    LF    ch    defaultValue    String[]    CHAR_STRING_ARRAY    boolean        	lang_4694_CharUtils_1_1	536	1	src/main/java/org/apache/commons/lang3/CharUtils.java
1177	[PATCH]    if    (cs    ==    null    ||    cs.length()    ==    0)    {	[BUG]    [BUGGY]    if    (cs    ==    null    ||    false)    {    [FE]    junit.framework.AssertionFailedError    testIsNumeric    [CONTEXT]    public    static    boolean    isNumeric(final    CharSequence    cs)    {    [BUGGY]    if    (cs    ==    null    ||    false)    {    return    false;    }    final    int    sz    =    cs.length();    for    (int    i    =    0;    i    <    sz;    i++)    {    if    (Character.isDigit(cs.charAt(i))    ==    false)    {    return    false;    }    }    return    true;    }    [CLASS]        StringUtils    [METHOD]    isNumeric    [RETURN_TYPE]    boolean        CharSequence    cs    [VARIABLES]    CharSequence    cs    Pattern    WHITESPACE_PATTERN    pattern    String    CR    EMPTY    LF    SPACE    close    decomposed    input    invalidChars    open    overlay    padStr    regex    remove    replaceChars    replacement    result    ret    searchChars    searchString    separator    separatorChars    source    str    stripChars    tag    text    ts    validChars    boolean    int    INDEX_NOT_FOUND    PAD_LIMIT    beg    closeLen    count    csLast    csLen    csLength    currentType    end    endIndex    endLimit    found    greater    i    idx    increase    index    inputLength    j    lastIdx    len    max    newTokenStart    noOfItems    numberOfSubstrings    openLen    ordinal    outputLength    padLen    pads    pos    repeat    replLength    replaceCharsLength    replaceIndex    replacementLength    ret    searchChar    searchLast    searchLen    searchLength    separatorLength    size    sizePlus1    start    startIndex    startPos    strLen    strLength    strsLen    sz    temp    tempIndex    textIndex    textLength    timeToLive    tmp    tokenStart    type        	lang_13609_StringUtils_1_1	5927	1	src/main/java/org/apache/commons/lang3/StringUtils.java
1178	[PATCH]    for    (int    i    =    0,    ct    =    e.getValue().intValue();    i    <    ct;    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    -1,    ct    =    e.getValue().intValue();    i    <    ct;    i++)    {    [FE]    junit.framework.AssertionFailedError    testRemoveElementsObjectArray    [CONTEXT]    if    (count    ==    null)    {    occurrences.put(v,    new    MutableInt(1));    }    else    {    count.increment();    }    }    final    BitSet    toRemove    =    new    BitSet();    for    (final    Map.Entry<T,    MutableInt>    e    :    occurrences.entrySet())    {    final    T    v    =    e.getKey();    int    found    =    0;    [BUGGY]    for    (int    i    =    -1,    ct    =    e.getValue().intValue();    i    <    ct;    i++)    {    found    =    indexOf(array,    v,    found);    if    (found    <    0)    {    break;    }    toRemove.set(found++);    }    }    @SuppressWarnings(   "unchecked   ")    final    T[]    result    =    (T[])    removeAll(array,    toRemove);    [CLASS]        ArrayUtils    [METHOD]    removeElements    [RETURN_TYPE]    <T>        final    T[]    array    values    [VARIABLES]    long[]    EMPTY_LONG_ARRAY    array    array1    array2    joinedArray    newArray    result    subarray    HashMap    occurrences    Character[]    EMPTY_CHARACTER_OBJECT_ARRAY    array    result    Boolean[]    EMPTY_BOOLEAN_OBJECT_ARRAY    array    result    String[]    EMPTY_STRING_ARRAY    array    Integer[]    EMPTY_INTEGER_OBJECT_ARRAY    array    result    Short[]    EMPTY_SHORT_OBJECT_ARRAY    array    result    Entry    e    T    v    Float[]    EMPTY_FLOAT_OBJECT_ARRAY    array    result    Class[]    EMPTY_CLASS_ARRAY    short[]    EMPTY_SHORT_ARRAY    array    array1    array2    joinedArray    newArray    result    subarray    BitSet    toRemove    int[]    EMPTY_INT_ARRAY    array    array1    array2    indices    joinedArray    newArray    result    subarray    int    INDEX_NOT_FOUND    arrayLength    ct    element    endIndexExclusive    found    i    index    j    length    newSize    startIndex    startIndexInclusive    tmp    valueForNull    valueToFind    float[]    EMPTY_FLOAT_ARRAY    array    array1    array2    joinedArray    newArray    result    subarray    char[]    EMPTY_CHAR_ARRAY    array    array1    array2    joinedArray    newArray    result    subarray    byte[]    EMPTY_BYTE_ARRAY    array    array1    array2    joinedArray    newArray    result    subarray    Double[]    EMPTY_DOUBLE_OBJECT_ARRAY    array    result    boolean    double[]    EMPTY_DOUBLE_ARRAY    array    array1    array2    joinedArray    newArray    result    subarray    Byte[]    EMPTY_BYTE_OBJECT_ARRAY    array    result    T[]    array    result    values    MutableInt    count    boolean[]    EMPTY_BOOLEAN_ARRAY    array    array1    array2    joinedArray    newArray    result    subarray    Object[]    EMPTY_OBJECT_ARRAY    array    array1    array2    entry    Long[]    EMPTY_LONG_OBJECT_ARRAY    array    result        	lang_3143_ArrayUtils_1_1	5017	1	src/main/java/org/apache/commons/lang3/ArrayUtils.java
1179	[PATCH]    return    abrevMarker    +    abbreviate(str.substring(offset),    maxWidth    -    3);	[BUG]    [BUGGY]    return    abrevMarker    +    abbreviate(str.substring(offset),    maxWidth    +    3);    [FE]    junit.framework.AssertionFailedError:    abbreviate(String,int,int)    failed    --    should    not    be    greater    than    maxWidth    testAbbreviate_StringIntInt    [CONTEXT]    offset    =    str.length()    -    (maxWidth    -    3);    }    final    String    abrevMarker    =       "...   ";    if    (offset    <=    4)    {    return    str.substring(0,    maxWidth    -    3)    +    abrevMarker;    }    if    (maxWidth    <    7)    {    throw    new    IllegalArgumentException(   "Minimum    abbreviation    width    with    offset    is    7   ");    }    if    (offset    +    maxWidth    -    3    <    str.length())    {    [BUGGY]    return    abrevMarker    +    abbreviate(str.substring(offset),    maxWidth    +    3);    }    return    abrevMarker    +    str.substring(str.length()    -    (maxWidth    -    3));    }    [CLASS]        StringUtils    [METHOD]    abbreviate    [RETURN_TYPE]    String        String    str    int    offset    final    int    maxWidth    [VARIABLES]    Pattern    WHITESPACE_PATTERN    pattern    String    CR    EMPTY    LF    SPACE    abrevMarker    close    decomposed    defaultStr    input    invalidChars    open    overlay    padStr    regex    remove    replaceChars    replacement    result    ret    searchChars    searchString    separator    separatorChars    source    str    stripChars    tag    text    ts    validChars    boolean    int    INDEX_NOT_FOUND    PAD_LIMIT    beg    closeLen    count    csLast    csLen    csLength    currentType    end    endIndex    endLimit    found    greater    i    idx    increase    index    inputLength    j    lastIdx    len    max    maxWidth    newTokenStart    noOfItems    numberOfSubstrings    offset    openLen    ordinal    outputLength    padLen    pads    pos    repeat    replLength    replaceCharsLength    replaceIndex    replacementLength    ret    searchChar    searchLast    searchLen    searchLength    separatorLength    size    sizePlus1    start    startIndex    startPos    strLen    strLength    strsLen    sz    temp    tempIndex    textIndex    textLength    timeToLive    tmp    tokenStart    type        	lang_13776_StringUtils_1_1	6310	1	src/main/java/org/apache/commons/lang3/StringUtils.java
1180	[PATCH]    final    BigInteger    t    =    isAdd    ?    uvp.add(upv)    :    uvp.subtract(upv);	[BUG]    [BUGGY]    final    BigInteger    t    =    true    ?    uvp.add(upv)    :    uvp.subtract(upv);    [FE]    junit.framework.AssertionFailedError:    expected:<2>    but    was:<4>    testSubtract    [CONTEXT]    (isAdd    ?    addAndCheck(uvp,    upv)    :    subAndCheck(uvp,    upv),    mulPosAndCheck(denominator,    fraction.denominator));    }                final    BigInteger    uvp    =    BigInteger.valueOf(numerator)    .multiply(BigInteger.valueOf(fraction.denominator/d1));    final    BigInteger    upv    =    BigInteger.valueOf(fraction.numerator)    .multiply(BigInteger.valueOf(denominator/d1));    [BUGGY]    final    BigInteger    t    =    true    ?    uvp.add(upv)    :    uvp.subtract(upv);            final    int    tmodd1    =    t.mod(BigInteger.valueOf(d1)).intValue();    final    int    d2    =    tmodd1==0?d1:greatestCommonDivisor(tmodd1,    d1);        final    BigInteger    w    =    t.divide(BigInteger.valueOf(d2));    if    (w.bitLength()    >    31)    {    throw    new    ArithmeticException    (   "overflow:    numerator    too    large    after    multiply   ");    [CLASS]        Fraction    [METHOD]    addSub    [RETURN_TYPE]    Fraction        Fraction    fraction    final    boolean    isAdd    [VARIABLES]    BigInteger    t    upv    uvp    w    Fraction    FOUR_FIFTHS    ONE    ONE_FIFTH    ONE_HALF    ONE_QUARTER    ONE_THIRD    THREE_FIFTHS    THREE_QUARTERS    TWO_FIFTHS    TWO_QUARTERS    TWO_THIRDS    ZERO    f    fraction    String    str    toProperString    toString    boolean    isAdd    long    m    numeratorValue    s    serialVersionUID    int    a1    a2    d1    d2    denom    denom0    denom1    denom2    denominator    gcd    hashCode    i    k    numer    numer0    numer1    numer2    numerator    pos    power    sign    t    tmodd1    u    upv    uvp    v    whole    wholeNumber    x    y        	lang_17300_Fraction_1_1	769	1	src/main/java/org/apache/commons/lang3/math/Fraction.java
1181	[PATCH]    if    (cs    ==    null    ||    cs.length()    ==    0)    {	[BUG]    [BUGGY]    if    (cs.length()    ==    0)    {    [FE]    java.lang.NullPointerException    testIsAlpha    [CONTEXT]    public    static    boolean    isAlpha(final    CharSequence    cs)    {    [BUGGY]    if    (cs.length()    ==    0)    {    return    false;    }    final    int    sz    =    cs.length();    for    (int    i    =    0;    i    <    sz;    i++)    {    if    (Character.isLetter(cs.charAt(i))    ==    false)    {    return    false;    }    }    return    true;    }    [CLASS]        StringUtils    [METHOD]    isAlpha    [RETURN_TYPE]    boolean        CharSequence    cs    [VARIABLES]    CharSequence    cs    Pattern    WHITESPACE_PATTERN    pattern    String    CR    EMPTY    LF    SPACE    close    decomposed    input    invalidChars    open    overlay    padStr    regex    remove    replaceChars    replacement    result    ret    searchChars    searchString    separator    separatorChars    source    str    stripChars    tag    text    ts    validChars    boolean    int    INDEX_NOT_FOUND    PAD_LIMIT    beg    closeLen    count    csLast    csLen    csLength    currentType    end    endIndex    endLimit    found    greater    i    idx    increase    index    inputLength    j    lastIdx    len    max    newTokenStart    noOfItems    numberOfSubstrings    openLen    ordinal    outputLength    padLen    pads    pos    repeat    replLength    replaceCharsLength    replaceIndex    replacementLength    ret    searchChar    searchLast    searchLen    searchLength    separatorLength    size    sizePlus1    start    startIndex    startPos    strLen    strLength    strsLen    sz    temp    tempIndex    textIndex    textLength    timeToLive    tmp    tokenStart    type        	lang_13515_StringUtils_1_1	5740	1	src/main/java/org/apache/commons/lang3/StringUtils.java
1182	[PATCH]    final    CharSequence    unicode    =    input.subSequence(index    +    i,    index    +    i    +    4);	[BUG]    [BUGGY]    final    CharSequence    unicode    =    input.subSequence(index    +    i,    index    %    i    +    4);    [FE]    junit.framework.AssertionFailedError    testUnescapeJava    [CONTEXT]    while    (index    +    i    <    input.length()    &&    input.charAt(index    +    i)    ==    'u')    {    i++;    }    if    (index    +    i    <    input.length()    &&    input.charAt(index    +    i)    ==    '+')    {    i++;    }    if    (index    +    i    +    4    <=    input.length())    {        [BUGGY]    final    CharSequence    unicode    =    input.subSequence(index    +    i,    index    %    i    +    4);    try    {    final    int    value    =    Integer.parseInt(unicode.toString(),    16);    out.write((char)    value);    }    catch    (final    NumberFormatException    nfe)    {    throw    new    IllegalArgumentException(   "Unable    to    parse    unicode    value:       "    +    unicode,    nfe);    }    return    i    +    4;    }    else    {    throw    new    IllegalArgumentException(   "Less    than    4    hex    digits    in    unicode    value:    '   "    +    input.subSequence(index,    input.length())    [CLASS]        UnicodeUnescaper    [METHOD]    translate    [RETURN_TYPE]    int        CharSequence    input    final    int    index    Writer    out    [VARIABLES]    boolean    CharSequence    input    unicode    NumberFormatException    nfe    int    i    index    value    Writer    out        	lang_20562_UnicodeUnescaper_1_1	50	1	src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java
1183	[PATCH]    if    (start    >    end)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<97>    but    was:<101>    testConstructorAccessors_isIn_Reversed    [CONTEXT]    private    CharRange(char    start,    char    end,    final    boolean    negated)    {    super();    [BUGGY]    if    (false)    {    final    char    temp    =    start;    start    =    end;    end    =    temp;    }    this.start    =    start;    this.end    =    end;    this.negated    =    negated;    }    [CLASS]        CharRange    CharacterIterator    [METHOD]    <init>    [RETURN_TYPE]    CharRange(char,char,boolean)        char    start    char    end    final    boolean    negated    [VARIABLES]    char    current    end    start    temp    boolean    hasNext    negated    String    iToString    long    serialVersionUID    CharRange    range        	lang_4023_CharRange_1_1	69	1	src/main/java/org/apache/commons/lang3/CharRange.java
1184	[PATCH]    if    (str.length()    <=    maxWidth)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError:    expected:<Now    is    [..].>    but    was:<Now    is    [the    time    for    all    good    men    to    come    to    the    aid    of    their    party].>    testAbbreviate_StringInt    [CONTEXT]    public    static    String    abbreviate(final    String    str,    int    offset,    final    int    maxWidth)    {    if    (str    ==    null)    {    return    null;    }    if    (maxWidth    <    4)    {    throw    new    IllegalArgumentException(   "Minimum    abbreviation    width    is    4   ");    }    [BUGGY]    if    (true)    {    return    str;    }    if    (offset    >    str.length())    {    offset    =    str.length();    }    if    (str.length()    -    offset    <    maxWidth    -    3)    {    offset    =    str.length()    -    (maxWidth    -    3);    }    final    String    abrevMarker    =       "...   ";    if    (offset    <=    4)    {    [CLASS]        StringUtils    [METHOD]    abbreviate    [RETURN_TYPE]    String        String    str    int    offset    final    int    maxWidth    [VARIABLES]    Pattern    WHITESPACE_PATTERN    pattern    String    CR    EMPTY    LF    SPACE    abrevMarker    close    decomposed    defaultStr    input    invalidChars    open    overlay    padStr    regex    remove    replaceChars    replacement    result    ret    searchChars    searchString    separator    separatorChars    source    str    stripChars    tag    text    ts    validChars    boolean    int    INDEX_NOT_FOUND    PAD_LIMIT    beg    closeLen    count    csLast    csLen    csLength    currentType    end    endIndex    endLimit    found    greater    i    idx    increase    index    inputLength    j    lastIdx    len    max    maxWidth    newTokenStart    noOfItems    numberOfSubstrings    offset    openLen    ordinal    outputLength    padLen    pads    pos    repeat    replLength    replaceCharsLength    replaceIndex    replacementLength    ret    searchChar    searchLast    searchLen    searchLength    separatorLength    size    sizePlus1    start    startIndex    startPos    strLen    strLength    strsLen    sz    temp    tempIndex    textIndex    textLength    timeToLive    tmp    tokenStart    type        	lang_13712_StringUtils_1_1	6293	1	src/main/java/org/apache/commons/lang3/StringUtils.java
1185	[PATCH]    System.arraycopy(array2,    0,    joinedArray,    array1.length,    array2.length);	[BUG]    [BUGGY]    System.arraycopy(array2,    -1,    joinedArray,    array1.length,    array2.length);    [FE]    java.lang.ArrayIndexOutOfBoundsException    testAddObjectArrayToObjectArray    [CONTEXT]    public    static    boolean[]    addAll(final    boolean[]    array1,    final    boolean...    array2)    {    if    (array1    ==    null)    {    return    clone(array2);    }    else    if    (array2    ==    null)    {    return    clone(array1);    }    final    boolean[]    joinedArray    =    new    boolean[array1.length    +    array2.length];    System.arraycopy(array1,    0,    joinedArray,    0,    array1.length);    [BUGGY]    System.arraycopy(array2,    -1,    joinedArray,    array1.length,    array2.length);    return    joinedArray;    }    [CLASS]        ArrayUtils    [METHOD]    addAll    [RETURN_TYPE]    boolean[]        final    boolean[]    array1    array2    [VARIABLES]    Class[]    EMPTY_CLASS_ARRAY    long[]    EMPTY_LONG_ARRAY    array    array1    array2    result    subarray    short[]    EMPTY_SHORT_ARRAY    array    array1    array2    result    subarray    Character[]    EMPTY_CHARACTER_OBJECT_ARRAY    array    result    Boolean[]    EMPTY_BOOLEAN_OBJECT_ARRAY    array    result    int[]    EMPTY_INT_ARRAY    array    array1    array2    result    subarray    String[]    EMPTY_STRING_ARRAY    array    Integer[]    EMPTY_INTEGER_OBJECT_ARRAY    array    result    int    INDEX_NOT_FOUND    endIndexExclusive    i    j    newSize    startIndex    startIndexInclusive    tmp    valueForNull    valueToFind    float[]    EMPTY_FLOAT_ARRAY    array    array1    array2    result    subarray    char[]    EMPTY_CHAR_ARRAY    array    array1    array2    result    subarray    Short[]    EMPTY_SHORT_OBJECT_ARRAY    array    result    byte[]    EMPTY_BYTE_ARRAY    array    array1    array2    result    subarray    Double[]    EMPTY_DOUBLE_OBJECT_ARRAY    array    result    boolean    double[]    EMPTY_DOUBLE_ARRAY    array    array1    array2    result    subarray    Byte[]    EMPTY_BYTE_OBJECT_ARRAY    array    result    Float[]    EMPTY_FLOAT_OBJECT_ARRAY    array    result    boolean[]    EMPTY_BOOLEAN_ARRAY    array    array1    array2    joinedArray    result    subarray    Object[]    EMPTY_OBJECT_ARRAY    array    array1    array2    entry    Long[]    EMPTY_LONG_OBJECT_ARRAY    array    result        	lang_2823_ArrayUtils_1_1	3504	1	src/main/java/org/apache/commons/lang3/ArrayUtils.java
1186	[PATCH]    return    toDouble(str,    0.0d);	[BUG]    [BUGGY]    return    toDouble(str,    1.0);    [FE]    junit.framework.AssertionFailedError:    toDouble(String)    3    failed    testStringToDoubleString    [CONTEXT]    public    static    double    toDouble(final    String    str)    {    [BUGGY]    return    toDouble(str,    1.0);    }    [CLASS]        NumberUtils    [METHOD]    toDouble    [RETURN_TYPE]    double        String    str    [VARIABLES]    Integer    INTEGER_MINUS_ONE    INTEGER_ONE    INTEGER_ZERO    Float    FLOAT_MINUS_ONE    FLOAT_ONE    FLOAT_ZERO    boolean    Byte    BYTE_MINUS_ONE    BYTE_ONE    BYTE_ZERO    Long    LONG_MINUS_ONE    LONG_ONE    LONG_ZERO    String    str    Double    DOUBLE_MINUS_ONE    DOUBLE_ONE    DOUBLE_ZERO    Short    SHORT_MINUS_ONE    SHORT_ONE    SHORT_ZERO        	lang_17604_NumberUtils_1_1	251	1	src/main/java/org/apache/commons/lang3/math/NumberUtils.java
1187	[PATCH]    minutes    +=    60    *    hours;	[BUG]    [BUGGY]    minutes    +=    60    %    hours;    [FE]    java.lang.ArithmeticException:    /    by    zero    testDurationsByBruteForce    [CONTEXT]                    if    (!Token.containsTokenWithValue(tokens,    d))    {    hours    +=    24    *    days;    days    =    0;    }    if    (!Token.containsTokenWithValue(tokens,    H))    {    [BUGGY]    minutes    +=    60    %    hours;    hours    =    0;    }    if    (!Token.containsTokenWithValue(tokens,    m))    {    seconds    +=    60    *    minutes;    minutes    =    0;    }    if    (!Token.containsTokenWithValue(tokens,    s))    {    milliseconds    +=    1000    *    seconds;    seconds    =    0;    }    [CLASS]        DurationFormatUtils    Token    [METHOD]    formatPeriod    [RETURN_TYPE]    String        final    long    startMillis    final    long    endMillis    String    format    final    boolean    padWithZeros    TimeZone    timezone    [VARIABLES]    TimeZone    timezone    boolean    padWithZeros    Token[]    tokens    Calendar    end    start    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    tmp    int    count    days    hours    milliseconds    minutes    months    seconds    target    years    long    endMillis    startMillis        	lang_22509_DurationFormatUtils_1_1	384	1	src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java
1188	[PATCH]    comparison    =    -1;	[BUG]    [BUGGY]    comparison    =    0;    [FE]    junit.framework.AssertionFailedError    testFloatArray    [CONTEXT]    public    CompareToBuilder    append(final    float[]    lhs,    final    float[]    rhs)    {    if    (comparison    !=    0)    {    return    this;    }    if    (lhs    ==    rhs)    {    return    this;    }    if    (lhs    ==    null)    {    [BUGGY]    comparison    =    0;    return    this;    }    if    (rhs    ==    null)    {    comparison    =    +1;    return    this;    }    if    (lhs.length    !=    rhs.length)    {    comparison    =    (lhs.length    <    rhs.length)    ?    -1    :    +1;    return    this;    }    [CLASS]        CompareToBuilder    [METHOD]    append    [RETURN_TYPE]    CompareToBuilder        final    float[]    lhs    final    float[]    rhs    [VARIABLES]    int    comparison    i    lhs    rhs    superCompareTo    float[]    lhs    rhs    boolean        	lang_15133_CompareToBuilder_1_1	935	1	src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java
1189	[PATCH]    for    (int    i    =    0,    ct    =    e.getValue().intValue();    i    <    ct;    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    1,    ct    =    e.getValue().intValue();    i    <    ct;    i++)    {    [FE]    junit.framework.AssertionFailedError    testRemoveElementLongArray    [CONTEXT]    if    (count    ==    null)    {    occurrences.put(boxed,    new    MutableInt(1));    }    else    {    count.increment();    }    }    final    BitSet    toRemove    =    new    BitSet();    for    (final    Map.Entry<Long,    MutableInt>    e    :    occurrences.entrySet())    {    final    Long    v    =    e.getKey();    int    found    =    0;    [BUGGY]    for    (int    i    =    1,    ct    =    e.getValue().intValue();    i    <    ct;    i++)    {    found    =    indexOf(array,    v.longValue(),    found);    if    (found    <    0)    {    break;    }    toRemove.set(found++);    }    }    return    (long[])    removeAll(array,    toRemove);    }    [CLASS]        ArrayUtils    [METHOD]    removeElements    [RETURN_TYPE]    long[]        final    long[]    array    values    [VARIABLES]    long[]    EMPTY_LONG_ARRAY    array    array1    array2    joinedArray    newArray    result    subarray    values    HashMap    occurrences    Character[]    EMPTY_CHARACTER_OBJECT_ARRAY    array    result    Boolean[]    EMPTY_BOOLEAN_OBJECT_ARRAY    array    result    String[]    EMPTY_STRING_ARRAY    array    Integer[]    EMPTY_INTEGER_OBJECT_ARRAY    array    result    long    v    Short[]    EMPTY_SHORT_OBJECT_ARRAY    array    result    Entry    e    Float[]    EMPTY_FLOAT_OBJECT_ARRAY    array    result    Class[]    EMPTY_CLASS_ARRAY    short[]    EMPTY_SHORT_ARRAY    array    array1    array2    joinedArray    newArray    result    subarray    values    BitSet    toRemove    int[]    EMPTY_INT_ARRAY    array    array1    array2    indices    joinedArray    newArray    result    subarray    values    int    INDEX_NOT_FOUND    arrayLength    ct    element    endIndexExclusive    found    i    index    j    length    newSize    startIndex    startIndexInclusive    tmp    v    valueForNull    valueToFind    float[]    EMPTY_FLOAT_ARRAY    array    array1    array2    joinedArray    newArray    result    subarray    char[]    EMPTY_CHAR_ARRAY    array    array1    array2    joinedArray    newArray    result    subarray    values    byte[]    EMPTY_BYTE_ARRAY    array    array1    array2    joinedArray    newArray    result    subarray    values    Double[]    EMPTY_DOUBLE_OBJECT_ARRAY    array    result    boolean    double[]    EMPTY_DOUBLE_ARRAY    array    array1    array2    joinedArray    newArray    result    subarray    Byte[]    EMPTY_BYTE_OBJECT_ARRAY    array    result    MutableInt    count    Long    boxed    v    boolean[]    EMPTY_BOOLEAN_ARRAY    array    array1    array2    joinedArray    newArray    result    subarray    Object[]    EMPTY_OBJECT_ARRAY    array    array1    array2    entry    Long[]    EMPTY_LONG_OBJECT_ARRAY    array    result        	lang_3257_ArrayUtils_1_1	5465	1	src/main/java/org/apache/commons/lang3/ArrayUtils.java
1190	[PATCH]    if    (modType    ==    MODIFY_CEILING    ||    (modType    ==    MODIFY_ROUND    &&    roundUp))    {	[BUG]    [BUGGY]    if    (modType    ==    MODIFY_CEILING    ||    (false    &&    roundUp))    {    [FE]    junit.framework.AssertionFailedError:    expected:<Mon    Jun    02    00:00:00    PDT    2008>    but    was:<Sun    Jun    01    00:00:00    PDT    2008>    testRoundDayOfMonth    [CONTEXT]    date.setTime(time);    val.setTime(date);    }        boolean    roundUp    =    false;    for    (final    int[]    aField    :    fields)    {    for    (final    int    element    :    aField)    {    if    (element    ==    field)    {        [BUGGY]    if    (modType    ==    MODIFY_CEILING    ||    (false    &&    roundUp))    {    if    (field    ==    DateUtils.SEMI_MONTH)    {                if    (val.get(Calendar.DATE)    ==    1)    {    val.add(Calendar.DATE,    15);    }    else    {    val.add(Calendar.DATE,    -15);    val.add(Calendar.MONTH,    1);    }    [CLASS]        DateUtils    DateIterator    [METHOD]    modify    [RETURN_TYPE]    void        Calendar    val    final    int    field    final    int    modType    [VARIABLES]    int[][]    fields    boolean    done    offsetSet    roundUp    Calendar    c    cal1    cal2    ceiled    date    endFinal    gval    rounded    spot    startFinal    truncated    val    int[]    aField    long    MILLIS_PER_DAY    MILLIS_PER_HOUR    MILLIS_PER_MINUTE    MILLIS_PER_SECOND    time    int    MODIFY_CEILING    MODIFY_ROUND    MODIFY_TRUNCATE    RANGE_MONTH_MONDAY    RANGE_MONTH_SUNDAY    RANGE_WEEK_CENTER    RANGE_WEEK_MONDAY    RANGE_WEEK_RELATIVE    RANGE_WEEK_SUNDAY    SEMI_MONTH    amount    calendarField    element    field    max    millisecs    min    minutes    modType    offset    seconds    Date    date        	lang_21865_DateUtils_1_1	1011	1	src/main/java/org/apache/commons/lang3/time/DateUtils.java
1191	[PATCH]    for    (int    i    =    0;    i    <    pads;    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    -1;    i    <    pads;    i++)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testLeftPad_StringIntString    [CONTEXT]    }    else    if    (pads    <    padLen)    {    return    padStr.substring(0,    pads).concat(str);    }    else    {    final    char[]    padding    =    new    char[pads];    final    char[]    padChars    =    padStr.toCharArray();    [BUGGY]    for    (int    i    =    -1;    i    <    pads;    i++)    {    padding[i]    =    padChars[i    %    padLen];    }    return    new    String(padding).concat(str);    }    [CLASS]        StringUtils    [METHOD]    leftPad    [RETURN_TYPE]    String        String    str    final    int    size    String    padStr    [VARIABLES]    Pattern    WHITESPACE_PATTERN    pattern    String    CR    EMPTY    LF    SPACE    close    decomposed    input    invalidChars    open    overlay    padStr    regex    remove    replaceChars    replacement    result    ret    searchChars    searchString    separator    separatorChars    source    str    stripChars    tag    text    ts    validChars    boolean    int    INDEX_NOT_FOUND    PAD_LIMIT    beg    closeLen    count    csLast    csLen    csLength    currentType    end    endIndex    endLimit    found    greater    i    increase    index    inputLength    j    lastIdx    len    max    newTokenStart    noOfItems    numberOfSubstrings    openLen    ordinal    outputLength    padLen    pads    pos    repeat    replLength    replaceCharsLength    replaceIndex    replacementLength    ret    searchChar    searchLast    searchLen    searchLength    separatorLength    size    sizePlus1    start    startIndex    startPos    strLen    strLength    strsLen    sz    temp    tempIndex    textIndex    textLength    timeToLive    tmp    tokenStart    type    char[]    padChars    padding        	lang_13369_StringUtils_1_1	5327	1	src/main/java/org/apache/commons/lang3/StringUtils.java
1192	[PATCH]    System.arraycopy(buffer,    endIndex,    buffer,    startIndex    +    insertLen,    size    -    endIndex);	[BUG]    [BUGGY]    System.arraycopy(buffer,    endIndex,    buffer,    startIndex    +    insertLen,    size    +    endIndex);    [FE]    java.lang.ArrayIndexOutOfBoundsException    testReplaceEscaping    [CONTEXT]    private    void    replaceImpl(final    int    startIndex,    final    int    endIndex,    final    int    removeLen,    final    String    insertStr,    final    int    insertLen)    {    final    int    newSize    =    size    -    removeLen    +    insertLen;    if    (insertLen    !=    removeLen)    {    ensureCapacity(newSize);    [BUGGY]    System.arraycopy(buffer,    endIndex,    buffer,    startIndex    +    insertLen,    size    +    endIndex);    size    =    newSize;    }    if    (insertLen    >    0)    {    insertStr.getChars(0,    insertLen,    buffer,    startIndex);    }    }    [CLASS]        StrBuilder    StrBuilderTokenizer    StrBuilderReader    StrBuilderWriter    [METHOD]    replaceImpl    [RETURN_TYPE]    void        final    int    startIndex    final    int    endIndex    final    int    removeLen    String    insertStr    final    int    insertLen    [VARIABLES]    String    defaultIfEmpty    format    insertStr    newLine    nullText    separator    standard    str    boolean    int    CAPACITY    capacity    destinationIndex    endIndex    i    index    initialCapacity    insertLen    len    length    loopIndex    mark    newEnd    newSize    offset    oldEnd    padLen    pos    removeLen    size    start    startIndex    strLen    value    width    long    serialVersionUID    value    char[]    buffer    chars    destination    old        	lang_9279_StrBuilder_1_1	1810	1	src/main/java/org/apache/commons/lang3/text/StrBuilder.java
1193	[PATCH]    return    (array    !=    null    &&    array.length    !=    0);	[BUG]    [BUGGY]    return    (array    !=    null    &&    array.length    <    0);    [FE]    junit.framework.AssertionFailedError    testIsNotEmptyPrimitives    [CONTEXT]    public    static    boolean    isNotEmpty(final    boolean[]    array)    {    [BUGGY]    return    (array    !=    null    &&    array.length    <    0);    }    [CLASS]        ArrayUtils    [METHOD]    isNotEmpty    [RETURN_TYPE]    boolean        final    boolean[]    array    [VARIABLES]    Class[]    EMPTY_CLASS_ARRAY    long[]    EMPTY_LONG_ARRAY    array    array1    array2    result    subarray    short[]    EMPTY_SHORT_ARRAY    array    array1    array2    result    subarray    Character[]    EMPTY_CHARACTER_OBJECT_ARRAY    array    result    Boolean[]    EMPTY_BOOLEAN_OBJECT_ARRAY    array    result    int[]    EMPTY_INT_ARRAY    array    array1    array2    result    subarray    String[]    EMPTY_STRING_ARRAY    array    Integer[]    EMPTY_INTEGER_OBJECT_ARRAY    array    result    int    INDEX_NOT_FOUND    endIndexExclusive    i    j    newSize    startIndex    startIndexInclusive    tmp    valueForNull    valueToFind    float[]    EMPTY_FLOAT_ARRAY    array    array1    array2    result    subarray    char[]    EMPTY_CHAR_ARRAY    array    array1    array2    result    subarray    Short[]    EMPTY_SHORT_OBJECT_ARRAY    array    result    byte[]    EMPTY_BYTE_ARRAY    array    array1    array2    result    subarray    Double[]    EMPTY_DOUBLE_OBJECT_ARRAY    array    result    boolean    double[]    EMPTY_DOUBLE_ARRAY    array    array1    array2    result    subarray    Byte[]    EMPTY_BYTE_OBJECT_ARRAY    array    result    Float[]    EMPTY_FLOAT_OBJECT_ARRAY    array    result    boolean[]    EMPTY_BOOLEAN_ARRAY    array    array1    array2    result    subarray    Object[]    EMPTY_OBJECT_ARRAY    array    array1    array2    entry    Long[]    EMPTY_LONG_OBJECT_ARRAY    array    result        	lang_2788_ArrayUtils_1_1	3422	1	src/main/java/org/apache/commons/lang3/ArrayUtils.java
1194	[PATCH]    System.arraycopy(buffer,    index,    buffer,    index    +    len,    size    -    index);	[BUG]    [BUGGY]    System.arraycopy(buffer,    index,    buffer,    index    -    len,    size    -    index);    [FE]    java.lang.ArrayIndexOutOfBoundsException    testInsert    [CONTEXT]    public    StrBuilder    insert(final    int    index,    final    char    chars[])    {    validateIndex(index);    if    (chars    ==    null)    {    return    insert(index,    nullText);    }    final    int    len    =    chars.length;    if    (len    >    0)    {    ensureCapacity(size    +    len);    [BUGGY]    System.arraycopy(buffer,    index,    buffer,    index    -    len,    size    -    index);    System.arraycopy(chars,    0,    buffer,    index,    len);    size    +=    len;    }    return    this;    }    [CLASS]        StrBuilder    StrBuilderTokenizer    StrBuilderReader    StrBuilderWriter    [METHOD]    insert    [RETURN_TYPE]    StrBuilder        final    int    index    final    char[]    chars    [VARIABLES]    String    defaultIfEmpty    format    newLine    nullText    separator    standard    str    boolean    int    CAPACITY    capacity    destinationIndex    endIndex    i    index    initialCapacity    len    length    loopIndex    mark    newEnd    newSize    oldEnd    padLen    pos    size    startIndex    strLen    value    width    long    serialVersionUID    value    char[]    buffer    chars    destination    old        	lang_9021_StrBuilder_1_1	1524	1	src/main/java/org/apache/commons/lang3/text/StrBuilder.java
1195	[PATCH]    startIndex    =    array.length    -    1;	[BUG]    [BUGGY]    startIndex    =    array.length    *    1;    [FE]    java.lang.ArrayIndexOutOfBoundsException:    5    testLastIndexOfChar    [CONTEXT]    public    static    int    lastIndexOf(final    char[]    array,    final    char    valueToFind,    int    startIndex)    {    if    (array    ==    null)    {    return    INDEX_NOT_FOUND;    }    if    (startIndex    <    0)    {    return    INDEX_NOT_FOUND;    }    else    if    (startIndex    >=    array.length)    {    [BUGGY]    startIndex    =    array.length    *    1;    }    for    (int    i    =    startIndex;    i    >=    0;    i--)    {    if    (valueToFind    ==    array[i])    {    return    i;    }    }    return    INDEX_NOT_FOUND;    }    [CLASS]        ArrayUtils    [METHOD]    lastIndexOf    [RETURN_TYPE]    int        final    char[]    array    final    char    valueToFind    int    startIndex    [VARIABLES]    Class[]    EMPTY_CLASS_ARRAY    long[]    EMPTY_LONG_ARRAY    array    array1    array2    subarray    short[]    EMPTY_SHORT_ARRAY    array    array1    array2    subarray    Character[]    EMPTY_CHARACTER_OBJECT_ARRAY    array    Boolean[]    EMPTY_BOOLEAN_OBJECT_ARRAY    array    int[]    EMPTY_INT_ARRAY    array    array1    array2    subarray    String[]    EMPTY_STRING_ARRAY    array    Integer[]    EMPTY_INTEGER_OBJECT_ARRAY    array    int    INDEX_NOT_FOUND    endIndexExclusive    i    j    newSize    startIndex    startIndexInclusive    tmp    valueToFind    float[]    EMPTY_FLOAT_ARRAY    array    array1    array2    subarray    char[]    EMPTY_CHAR_ARRAY    array    array1    array2    subarray    Short[]    EMPTY_SHORT_OBJECT_ARRAY    array    byte[]    EMPTY_BYTE_ARRAY    array    array1    array2    subarray    Double[]    EMPTY_DOUBLE_OBJECT_ARRAY    array    boolean    double[]    EMPTY_DOUBLE_ARRAY    array    array1    array2    subarray    Byte[]    EMPTY_BYTE_OBJECT_ARRAY    array    Float[]    EMPTY_FLOAT_OBJECT_ARRAY    array    char    valueToFind    boolean[]    EMPTY_BOOLEAN_ARRAY    array    array1    array2    subarray    Object[]    EMPTY_OBJECT_ARRAY    array    array1    array2    entry    Long[]    EMPTY_LONG_OBJECT_ARRAY    array        	lang_2044_ArrayUtils_1_1	2118	1	src/main/java/org/apache/commons/lang3/ArrayUtils.java
1196	[PATCH]    str    =    leftPad(str,    strLen    +    pads    /    2,    padChar);	[BUG]    [BUGGY]    str    =    leftPad(str,    strLen    /    (pads    /    2),    padChar);    [FE]    junit.framework.AssertionFailedError:    expected:<[    ab]    >    but    was:<[ab    ]    >    testCenter_StringIntChar    [CONTEXT]    public    static    String    center(String    str,    final    int    size,    final    char    padChar)    {    if    (str    ==    null    ||    size    <=    0)    {    return    str;    }    final    int    strLen    =    str.length();    final    int    pads    =    size    -    strLen;    if    (pads    <=    0)    {    return    str;    }    [BUGGY]    str    =    leftPad(str,    strLen    /    (pads    /    2),    padChar);    str    =    rightPad(str,    size,    padChar);    return    str;    }    [CLASS]        StringUtils    [METHOD]    center    [RETURN_TYPE]    String        String    str    final    int    size    final    char    padChar    [VARIABLES]    char    padChar    Pattern    WHITESPACE_PATTERN    pattern    String    CR    EMPTY    LF    SPACE    close    decomposed    input    invalidChars    open    overlay    padStr    regex    remove    replaceChars    replacement    result    ret    searchChars    searchString    separator    separatorChars    source    str    stripChars    tag    text    ts    validChars    boolean    int    INDEX_NOT_FOUND    PAD_LIMIT    beg    closeLen    count    csLast    csLen    csLength    currentType    end    endIndex    endLimit    found    greater    i    increase    index    inputLength    j    lastIdx    len    max    newTokenStart    noOfItems    numberOfSubstrings    openLen    ordinal    outputLength    padLen    pads    pos    repeat    replLength    replaceCharsLength    replaceIndex    replacementLength    ret    searchChar    searchLast    searchLen    searchLength    separatorLength    size    sizePlus1    start    startIndex    startPos    strLen    strLength    strsLen    sz    temp    tempIndex    textIndex    textLength    timeToLive    tmp    tokenStart    type        	lang_13409_StringUtils_1_1	5411	1	src/main/java/org/apache/commons/lang3/StringUtils.java
1197	[PATCH]    final    int    hours    =    offset    /    (60    *    60    *    1000);	[BUG]    [BUGGY]    final    int    hours    =    offset    /    (60    *    60    +    1000);    [FE]    junit.framework.AssertionFailedError:    expected:<T10:11:12-[03:0]0>    but    was:<T10:11:12-[Ě7:쥀]0>    testTimeISO    [CONTEXT]    public    void    appendTo(final    StringBuffer    buffer,    final    Calendar    calendar)    {    int    offset    =    calendar.get(Calendar.ZONE_OFFSET)    +    calendar.get(Calendar.DST_OFFSET);    if    (offset    <    0)    {    buffer.append('-');    offset    =    -offset;    }    else    {    buffer.append('+');    }        [BUGGY]    final    int    hours    =    offset    /    (60    *    60    +    1000);    buffer.append((char)(hours    /    10    +    '0'));    buffer.append((char)(hours    %    10    +    '0'));    if    (mColon)    {    buffer.append(':');    }    final    int    minutes    =    offset    /    (60    *    1000)    -    60    *    hours;    buffer.append((char)(minutes    /    10    +    '0'));    buffer.append((char)(minutes    %    10    +    '0'));    [CLASS]        FastDatePrinter    CharacterLiteral    StringLiteral    TextField    UnpaddedNumberField    UnpaddedMonthField    PaddedNumberField    TwoDigitNumberField    TwoDigitYearField    TwoDigitMonthField    TwelveHourField    TwentyFourHourField    TimeZoneNameRule    TimeZoneNumberRule    TimeZoneDisplayKey    [METHOD]    appendTo    [RETURN_TYPE]    void        StringBuffer    buffer    Calendar    calendar    [VARIABLES]    Locale    locale    mLocale    TimeZoneNumberRule    INSTANCE_COLON    INSTANCE_NO_COLON    Calendar    calendar    ConcurrentMap    cTimeZoneDisplayCache    TwoDigitYearField    INSTANCE    String    mDaylight    mPattern    mStandard    mValue    pattern    prior    sub    token    value    String[]    AmPmStrings    ERAs    mValues    months    shortMonths    shortWeekdays    values    weekdays    long    millis    serialVersionUID    int    FULL    LONG    MEDIUM    SHORT    digits    field    hours    i    len    length    mField    mMaxLengthEstimate    mSize    mStyle    max    minutes    offset    padding    size    style    tokenLen    value    Rule[]    mRules    TimeZone    mTimeZone    timeZone    tz    zone    StringBuffer    buffer    boolean    colon    daylight    inLiteral    mColon    NumberRule    mRule    rule    char    c    mValue    peek    value    TwoDigitMonthField    INSTANCE    UnpaddedMonthField    INSTANCE        	lang_21194_FastDatePrinter_1_1	1194	1	src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java
1198	[PATCH]    return    (array    !=    null    &&    array.length    !=    0);	[BUG]    [BUGGY]    return    (true    &&    array.length    !=    0);    [FE]    java.lang.NullPointerException    testIsNotEmptyPrimitives    [CONTEXT]    public    static    boolean    isNotEmpty(final    float[]    array)    {    [BUGGY]    return    (true    &&    array.length    !=    0);    }    [CLASS]        ArrayUtils    [METHOD]    isNotEmpty    [RETURN_TYPE]    boolean        final    float[]    array    [VARIABLES]    Class[]    EMPTY_CLASS_ARRAY    long[]    EMPTY_LONG_ARRAY    array    array1    array2    result    subarray    short[]    EMPTY_SHORT_ARRAY    array    array1    array2    result    subarray    Character[]    EMPTY_CHARACTER_OBJECT_ARRAY    array    result    Boolean[]    EMPTY_BOOLEAN_OBJECT_ARRAY    array    result    int[]    EMPTY_INT_ARRAY    array    array1    array2    result    subarray    String[]    EMPTY_STRING_ARRAY    array    Integer[]    EMPTY_INTEGER_OBJECT_ARRAY    array    result    int    INDEX_NOT_FOUND    endIndexExclusive    i    j    newSize    startIndex    startIndexInclusive    tmp    valueForNull    valueToFind    float[]    EMPTY_FLOAT_ARRAY    array    array1    array2    result    subarray    char[]    EMPTY_CHAR_ARRAY    array    array1    array2    result    subarray    Short[]    EMPTY_SHORT_OBJECT_ARRAY    array    result    byte[]    EMPTY_BYTE_ARRAY    array    array1    array2    result    subarray    Double[]    EMPTY_DOUBLE_OBJECT_ARRAY    array    result    boolean    double[]    EMPTY_DOUBLE_ARRAY    array    array1    array2    result    subarray    Byte[]    EMPTY_BYTE_OBJECT_ARRAY    array    result    Float[]    EMPTY_FLOAT_OBJECT_ARRAY    array    result    boolean[]    EMPTY_BOOLEAN_ARRAY    array    array1    array2    result    subarray    Object[]    EMPTY_OBJECT_ARRAY    array    array1    array2    entry    Long[]    EMPTY_LONG_OBJECT_ARRAY    array    result        	lang_2775_ArrayUtils_1_1	3411	1	src/main/java/org/apache/commons/lang3/ArrayUtils.java
1199	[PATCH]    for    (int    i    =    0;    i    <    lhs.length    &&    comparison    ==    0;    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    0;    i    <    lhs.length    &&    comparison    ==    -1;    i++)    {    [FE]    junit.framework.AssertionFailedError    testObjectArray    [CONTEXT]    return    this;    }    if    (rhs    ==    null)    {    comparison    =    +1;    return    this;    }    if    (lhs.length    !=    rhs.length)    {    comparison    =    (lhs.length    <    rhs.length)    ?    -1    :    +1;    return    this;    }    [BUGGY]    for    (int    i    =    0;    i    <    lhs.length    &&    comparison    ==    -1;    i++)    {    append(lhs[i],    rhs[i],    comparator);    }    return    this;    }    [CLASS]        CompareToBuilder    [METHOD]    append    [RETURN_TYPE]    CompareToBuilder        Object[]    lhs    Object[]    rhs    Comparator<?>    comparator    [VARIABLES]    boolean    int    comparison    i    lhs    rhs    superCompareTo    Object[]    lhs    rhs    Comparator    comparator        	lang_14853_CompareToBuilder_1_1	666	1	src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java
1200	[PATCH]    if    (referencedType.isUnionType())    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError:    unexpected    warning(s)    :    expected:<1>    but    was:<0>    testBackwardsInferenceGoogArrayFilter1    [CONTEXT]    public    JSType    collapseUnion()    {    [BUGGY]    if    (true)    {    return    referencedType.collapseUnion();    }    return    this;    }    [CLASS]        ProxyObjectType    [METHOD]    collapseUnion    [RETURN_TYPE]    JSType        [VARIABLES]    ObjectType    referencedObjType    JSType    referencedType    that    type    boolean    long    serialVersionUID        	closure_12661_ProxyObjectType_1_1	346	1	src/com/google/javascript/rhino/jstype/ProxyObjectType.java
1201	[PATCH]    if    (maybeHandlePrototypePrefix(t,    n,    parent,    name))    return;	[BUG]    [BUGGY]    if    (true)    return;    [FE]    junit.framework.AssertionFailedError:    There    should    be    one    warning,    repeated    2    time(s).    expected:<2>    but    was:<0>    testLateDefinedName1    [CONTEXT]    void    handleSetFromGlobal(NodeTraversal    t,    Node    n,    Node    parent,    String    name,    boolean    isPropAssign,    Name.Type    type)    {    [BUGGY]    if    (true)    return;    Name    nameObj    =    getOrCreateName(name);    nameObj.type    =    type;    Ref    set    =    new    Ref(t,    n,    nameObj,    Ref.Type.SET_FROM_GLOBAL,    currentPreOrderIndex++);    nameObj.addRef(set);    if    (isNestedAssign(parent))    {        [CLASS]        GlobalNamespace    NodeFilter    BuildGlobalNamespace    Name    Type    Ref    Type    Tracker    [METHOD]    handleSetFromGlobal    [RETURN_TYPE]    void        NodeTraversal    t    Node    n    Node    parent    String    name    boolean    isPropAssign    Type    type    [VARIABLES]    PrintStream    stream    Set    newNodes    previousSymbolsInTree    NodeTraversal    t    Node    current    externsRoot    gramps    greatGramps    lvalue    n    node    parent    root    rvalue    second    third    String    baseName    key    name    topVarName    JSDocInfo    docInfo    int    aliasingGets    callGets    currentPreOrderIndex    deleteProps    firstDotIndex    globalSets    index    localSets    preOrderIndex    totalGets    Predicate    isInterestingSymbol    nodeFilter    Name    name    nameObj    parent    slot    AbstractCompiler    compiler    Type    ALIASING_GET    CALL_GET    DELETE_PROP    DIRECT_GET    FUNCTION    GET    OBJECTLIT    OTHER    PROTOTYPE_GET    SET    SET_FROM_GLOBAL    SET_FROM_LOCAL    t    type    Ref    declaration    get    original    set    twin    boolean    declaredType    generated    hasDeclaredTypeDescendant    inExterns    isPropAssign    isSet    Scope    externsScope    s    scope    JSModule    module    List    globalNames    props    refs    StaticSourceFile    source    Map    nameMap        	closure_16529_GlobalNamespace_1_1	554	1	src/com/google/javascript/jscomp/GlobalNamespace.java
1202	[PATCH]    if    (numCapturingGroups    >=    possibleGroupIndex)    {	[BUG]    [BUGGY]    if    (numCapturingGroups    >    possibleGroupIndex)    {    [FE]    junit.framework.AssertionFailedError:    testBackReferences    [CONTEXT]    private    RegExpTree    parseEscape()    {    Preconditions.checkState(pattern.charAt(pos)    ==    '\\');    ++pos;    char    ch    =    pattern.charAt(pos);    if    (ch    ==    'b'    ||    ch    ==    'B')    {    ++pos;    return    new    WordBoundary(ch);    }    else    if    ('1'    <=    ch    &&    ch    <=    '9')    {    ++pos;    int    possibleGroupIndex    =    ch    -    '0';    [BUGGY]    if    (numCapturingGroups    >    possibleGroupIndex)    {    if    (pos    <    limit)    {    char    next    =    pattern.charAt(pos);    if    ('0'    <=    next    &&    next    <=    '9')    {    int    twoDigitGroupIndex    =    possibleGroupIndex    *    10    +    (next    -    '0');    if    (numCapturingGroups    >=    twoDigitGroupIndex)    {    ++pos;    possibleGroupIndex    =    twoDigitGroupIndex;    }    }    }    [CLASS]        RegExpTree    1Parser    RegExpTreeAtom    Empty    Anchor    WordBoundary    BackReference    Text    Repetition    Alternation    LookaheadAssertion    CapturingGroup    Charset    DecomposedCharset    Concatenation    1Simplifier    [METHOD]    parseRegExp    [RETURN_TYPE]    RegExpTree        String    pattern    String    flags    [VARIABLES]    RegExpTree    NEVER_MATCHES    a    atom    b    body    child    out    preceder    ImmutableList    alternatives    elements    Builder    alternatives    Charset    DOT_CHARSET    NumberFormatException    ex    String    counts    flags    namedGroups    pattern    text    int    comma    digit    end    groupIndex    len    limit    max    min    n    numCapturingGroups    octLimit    pos    possibleGroupIndex    result    start    twoDigitGroupIndex    type    ImmutableMap    NAMED_CHAR_GROUPS    Empty    INSTANCE    boolean    capturing    greedy    inverse    inverted    isCaseInsensitive    positive    char    ch    codeUnit    end    next    possibleGroupName    start    type    CharRanges    DIGITS    IE_SPACE_CHARS    IE_SPEC_ERRORS    INVERSE_WORD_CHARS    LCASE_LETTERS    LETTERS    SPACE_CHARS    UCASE_LETTERS    WORD_CHARS    charGroup    group    ieExplicits    range    ranges    List    alternatives    elements    simplified        	closure_49179_RegExpTree_1_1	426	1	src/com/google/javascript/jscomp/regex/RegExpTree.java
1203	[PATCH]    return    false;	[BUG]    [BUGGY]    return    true;    [FE]    junit.framework.AssertionFailedError:    expected    warnings    were    not    reported    testBadModifies6    [CONTEXT]    public    boolean    recordModifies(Set<String>    modifies)    {    if    (!hasAnySingletonSideEffectTags()    &&    currentInfo.setModifies(modifies))    {    populated    =    true;    return    true;    }    else    {    [BUGGY]    return    true;    }    }    [CLASS]        JSDocInfoBuilder    [METHOD]    recordModifies    [RETURN_TYPE]    boolean        String>    modifies    [VARIABLES]    boolean    hasLC    parseDocumentation    populated    Marker    currentMarker    marker    Set    modifies    JSDocInfo    built    currentInfo    info        	closure_47618_JSDocInfoBuilder_1_1	441	1	src/com/google/javascript/rhino/JSDocInfoBuilder.java
1204	[PATCH]    return    false;	[BUG]    [BUGGY]    return    true;    [FE]    junit.framework.AssertionFailedError:    Unexpected    warning(s):    JSC_TYPE_MISMATCH.    No    properties    on    this    expression    testExternedPropertyName    [CONTEXT]    public    boolean    isUnknownType()    {    [BUGGY]    return    true;    }    [CLASS]        JSType    1    TypePair    [METHOD]    isUnknownType    [RETURN_TYPE]    boolean        [VARIABLES]    JSTypeRegistry    registry    boolean    inTemplatedCheckVisit    resolved    JSType    resolveResult    t1    t2    typeA    typeB    ImmutableList    templateKeys    templatizedTypes    CanCastToVisitor    CAN_CAST_TO_VISITOR    String    EMPTY_TYPE_COMPONENT    NOT_A_CLASS    NOT_A_TYPE    UNKNOWN_NAME    displayName    pname    long    serialVersionUID    int    ENUMDECL    NOT_ENUMDECL    i    keysLength    typesLength    Comparator    ALPHA        	closure_5614_JSType_1_1	282	1	src/com/google/javascript/rhino/jstype/JSType.java
1205	[PATCH]    if    (cur.getChildCount()    ==    4)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.ComparisonFailure:    expected:<...1];    testNestedFor    [CONTEXT]    createEdge(lastJump,    Branch.UNCOND,    cur.getLastChild());    }    else    {    finallyMap.put(lastJump,    computeFallThrough(cur.getLastChild()));    }    lastJump    =    cur;    }    Preconditions.checkState(parent    !=    null,       "Cannot    find    continue    target.   ");    previous    =    cur;    }    Node    iter    =    cur;    [BUGGY]    if    (false)    {    iter    =    cur.getFirstChild().getNext().getNext();    }    if    (lastJump    ==    node)    {    createEdge(node,    Branch.UNCOND,    iter);    }    else    {    finallyMap.put(lastJump,    iter);    }    }    [CLASS]        ControlFlowAnalysis    1    AstControlFlowGraph    1    2    [METHOD]    handleContinue    [RETURN_TYPE]    void        Node    node    [VARIABLES]    Multimap    finallyMap    AbstractCompiler    compiler    boolean    edgeAnnotations    shouldTraverseFunctions    ControlFlowGraph    cfg    Node    body    child    collection    cond    cur    deflt    elseBlock    entry    externs    forNode    init    item    iter    lastJump    n    next    node    parent    previous    root    thenBlock    value    String    label    Map    astPosition    nodePriorities    priorities    Deque    exceptionHandler    int    astPositionCounter    priorityCounter    Comparator    priorityComparator        	closure_25103_ControlFlowAnalysis_1_1	628	1	src/com/google/javascript/jscomp/ControlFlowAnalysis.java
1206	[PATCH]    if    (stripTweaks)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    testStrippingWithInCodeOverrides    [CONTEXT]    public    void    process(Node    externs,    Node    root)    {    CollectTweaksResult    result    =    collectTweaks(root);    applyCompilerDefaultValueOverrides(result.tweakInfos);    boolean    changed    =    false;        [BUGGY]    if    (false)    {    changed    =    stripAllCalls(result.tweakInfos);    }    else    if    (!compilerDefaultValueOverrides.isEmpty())    {    changed    =    replaceGetCompilerOverridesCalls(result.getOverridesCalls);    }    if    (changed)    {    compiler.reportCodeChange();    }    }    [CLASS]        ProcessTweaks    TweakFunction    CollectTweaksResult    CollectTweaks    TweakFunctionCall    TweakInfo    [METHOD]    process    [RETURN_TYPE]    void        Node    externs    Node    root    [VARIABLES]    TweakFunction    GET_BOOLEAN    GET_COMPILER_OVERRIDES    GET_NUMBER    GET_STRING    OVERRIDE_DEFAULT_VALUE    REGISTER_BOOLEAN    REGISTER_NUMBER    REGISTER_STRING    registerFunction    tweakFunc    CharMatcher    ID_MATCHER    Node    callNode    defaultValueNode    externs    root    valueNode    String    expectedTypeName    name    sourceName    tweakId    int    type    validNodeTypeA    validNodeTypeB    CollectTweaksResult    result    AbstractCompiler    compiler    boolean    changed    stripTweaks    TweakFunctionCall    registerCall    DiagnosticType    INVALID_TWEAK_DEFAULT_VALUE_WARNING    INVALID_TWEAK_ID_ERROR    NON_GLOBAL_TWEAK_INIT_ERROR    NON_LITERAL_TWEAK_ID_ERROR    TWEAK_MULTIPLY_REGISTERED_ERROR    TWEAK_OVERRIDE_AFTER_REGISTERED_ERROR    TWEAK_WRONG_GETTER_TYPE_WARNING    UNKNOWN_TWEAK_WARNING    SortedMap    compilerDefaultValueOverrides    List    functionCalls    getOverridesCalls    Map    TWEAK_FUNCTIONS_MAP    allTweaks    compilerDefaultValueOverrides    tweakInfos        	closure_39813_ProcessTweaks_1_1	211	1	src/com/google/javascript/jscomp/ProcessTweaks.java
1207	[PATCH]    if    (argsToBind    >=    0)    {	[BUG]    [BUGGY]    if    (argsToBind    >=    -1)    {    [FE]    junit.framework.ComparisonFailure:    expected:<...number=):    function    ([...[?]]):    boolean>    but    was:<...number=):    function    ([string,    number]):    boolean>    testBindSignature    [CONTEXT]    public    FunctionType    getBindReturnType(int    argsToBind)    {    FunctionBuilder    builder    =    new    FunctionBuilder(registry)    .withReturnType(getReturnType())    .withTemplateKeys(getTemplateKeys());    [BUGGY]    if    (argsToBind    >=    -1)    {    Node    origParams    =    getParametersNode();    if    (origParams    !=    null)    {    Node    params    =    origParams.cloneTree();    for    (int    i    =    1;    i    <    argsToBind    &&    params.getFirstChild()    !=    null;    i++)    {    if    (params.getFirstChild().isVarArgs())    {    break;    }    params.removeFirstChild();    }    builder.withParamsNode(params);    [CLASS]        FunctionType    Kind    PropAccess    [METHOD]    getBindReturnType    [RETURN_TYPE]    FunctionType        int    argsToBind    [VARIABLES]    PropAccess    ANY    DICT    STRUCT    propAccess    JSType    typeOfThis    boolean    FunctionBuilder    builder    Kind    CONSTRUCTOR    INTERFACE    ORDINARY    kind    Node    lastParam    n    origParams    params    propertyNode    source    ArrowType    arrowType    call    List    extendedInterfaces    implementedInterfaces    subTypes    Property    prototypeSlot    long    serialVersionUID    int    argsToBind    i        	closure_4882_FunctionType_1_1	629	1	src/com/google/javascript/rhino/jstype/FunctionType.java
1208	[PATCH]    if    (endIndex    ==    -1)    {	[BUG]    [BUGGY]    if    (endIndex    ==    0)    {    [FE]    java.lang.RuntimeException:    java.lang.RuntimeException:    INTERNAL    COMPILER    ERROR.    testIssue772    [CONTEXT]    private    void    fixTypeNode(Node    typeNode)    {    if    (typeNode.isString())    {    String    name    =    typeNode.getString();    int    endIndex    =    name.indexOf('.');    [BUGGY]    if    (endIndex    ==    0)    {    endIndex    =    name.length();    }    String    baseName    =    name.substring(0,    endIndex);    Var    aliasVar    =    aliases.get(baseName);    if    (aliasVar    !=    null)    {    Node    aliasedNode    =    aliasVar.getInitialValue();    aliasUsages.add(new    AliasedTypeNode(typeNode,    aliasedNode,    baseName));    }    }        [CLASS]        ScopedAliases    AliasedNode    AliasedTypeNode    Traversal    1    [METHOD]    fixTypeNode    [RETURN_TYPE]    void        Node    typeNode    [VARIABLES]    AliasTransformation    transformation    Set    forbiddenLocals    Var    aliasVar    Node    aliasDefinition    aliasReference    aliasedNode    anonymousFnNode    child    expressionWithScopeCall    externs    n    next    node    originalRoot    parent    root    scopeCall    scopeClosureBlock    testNode    typeNode    typeReference    PreprocessorSymbolTable    preprocessorSymbolTable    String    SCOPING_METHOD_NAME    aliasExpanded    aliasName    baseName    name    qNameRoot    qualifiedName    s    typeName    int    endIndex    AbstractCompiler    compiler    boolean    hasErrors    hasNamespaceShadows    DiagnosticType    GOOG_SCOPE_ALIAS_REDEFINED    GOOG_SCOPE_HAS_BAD_PARAMETERS    GOOG_SCOPE_NON_ALIAS_LOCAL    GOOG_SCOPE_REFERENCES_THIS    GOOG_SCOPE_USED_IMPROPERLY    GOOG_SCOPE_USES_RETURN    GOOG_SCOPE_USES_THROW    error    List    aliasDefinitionsInOrder    aliasUsages    scopeCalls    Map    aliases    AliasTransformationHandler    transformationHandler        	closure_42598_ScopedAliases_1_1	467	1	src/com/google/javascript/jscomp/ScopedAliases.java
1209	[PATCH]    if    (n.isVar())    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    testInnerClass1    [CONTEXT]    private    void    maybeRewriteClassDefinition(Node    n)    {    [BUGGY]    if    (false)    {    Node    target    =    n.getFirstChild();    Node    value    =    target.getFirstChild();    maybeRewriteClassDefinition(n,    target,    value);    }    else    if    (NodeUtil.isExprAssign(n))    {    Node    assign    =    n.getFirstChild();    Node    target    =    assign.getFirstChild();    Node    value    =    assign.getLastChild();    maybeRewriteClassDefinition(n,    target,    value);    }    }    [CLASS]        ClosureRewriteClass    MemberDefinition    ClassDefinition    [METHOD]    maybeRewriteClassDefinition    [RETURN_TYPE]    void        Node    n    [VARIABLES]    AbstractCompiler    compiler    boolean    DiagnosticType    GOOG_CLASS_CONSTRUCTOR_MISING    GOOG_CLASS_DESCRIPTOR_NOT_VALID    GOOG_CLASS_STATICS_NOT_VALID    GOOG_CLASS_SUPER_CLASS_NOT_VALID    GOOG_CLASS_TARGET_INVALID    GOOG_CLASS_UNEXPECTED_PARAMS    Node    assign    classModifier    externs    n    name    originalRoot    parent    root    scriptRoot    superClass    target    value    List    props    staticProps    JSDocInfo    info    MemberDefinition    constructor        	closure_21772_ClosureRewriteClass_1_1	121	1	src/com/google/javascript/jscomp/ClosureRewriteClass.java
1210	[PATCH]    if    (types    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    testTypedAdvanced    [CONTEXT]    UnionFind<T>    getTypes()    {    [BUGGY]    if    (false)    {    types    =    new    StandardUnionFind<T>();    }    return    types;    }    [CLASS]        DisambiguateProperties    Warnings    Property    AbstractScopingCallback    FindExternProperties    FindRenameableProperties    JSTypeSystem    ConcreteTypeSystem    [METHOD]    getTypes    [RETURN_TYPE]    UnionFind        [VARIABLES]    TypeSystem    typeSystem    Set    invalidatingTypes    renameNodes    typesToSkip    UnionFind    types    String    name    Logger    logger    int    MAX_INVALDIATION_WARNINGS_PER_PROPERTY    nextUniqueId    TightenTypes    tt    Stack    scopes    Multimap    invalidationMap    AbstractCompiler    compiler    JSTypeRegistry    registry    boolean    skipRenaming    DiagnosticType    INVALIDATION    CodingConvention    codingConvention    convention    JSTypeNative[]    nativeTypes    Map    properties    propertiesToErrorFor    rootTypes        	closure_26053_DisambiguateProperties_1_1	149	1	src/com/google/javascript/jscomp/DisambiguateProperties.java
1211	[PATCH]    if    (jsDoc    !=    null    &&    jsDoc.isConstant())    {	[BUG]    [BUGGY]    if    (jsDoc    !=    null)    {    [FE]    junit.framework.AssertionFailedError:    There    should    be    one    error.    A    is    not    allowed    to    extend    final    class    Object.    testConstantProperty1    [CONTEXT]    private    JSType    getFinalParentClass(JSType    type)    {    if    (type    !=    null)    {    ObjectType    iproto    =    ObjectType.cast(type).getImplicitPrototype();    while    (iproto    !=    null    &&    iproto.getConstructor()    ==    null)    {    iproto    =    iproto.getImplicitPrototype();    }    if    (iproto    !=    null)    {    Node    source    =    iproto.getConstructor().getSource();    JSDocInfo    jsDoc    =    source    !=    null    ?    NodeUtil.getBestJSDocInfo(source)    :    null;    [BUGGY]    if    (jsDoc    !=    null)    {    return    iproto;    }    }    }    return    null;    }    [CLASS]        CheckAccessControls    [METHOD]    getFinalParentClass    [RETURN_TYPE]    JSType        JSType    type    [VARIABLES]    TypeValidator    validator    Multimap    initializedConstantProperties    ObjectType    iproto    AbstractCompiler    compiler    JSType    currentClass    finalParentClass    lValueType    ownerType    type    boolean    DiagnosticType    BAD_PRIVATE_GLOBAL_ACCESS    BAD_PRIVATE_PROPERTY_ACCESS    BAD_PROTECTED_PROPERTY_ACCESS    CONST_PROPERTY_DELETED    CONST_PROPERTY_REASSIGNED_VALUE    DEPRECATED_CLASS    DEPRECATED_CLASS_REASON    DEPRECATED_NAME    DEPRECATED_NAME_REASON    DEPRECATED_PROP    DEPRECATED_PROP_REASON    EXTEND_FINAL_CLASS    PRIVATE_OVERRIDE    VISIBILITY_MISMATCH    Node    source    JSDocInfo    jsDoc    int    deprecatedDepth    methodDepth        	closure_20593_CheckAccessControls_1_1	717	1	src/com/google/javascript/jscomp/CheckAccessControls.java
1212	[PATCH]    int    digit    =    value    &    VLQ_BASE_MASK;	[BUG]    [BUGGY]    int    digit    =    value    ^    VLQ_BASE_MASK;    [FE]    junit.framework.AssertionFailedError:    expected:<0>    but    was:<-15>    testBase64VLQSelectedValues1    [CONTEXT]    public    static    void    encode(Appendable    out,    int    value)    throws    IOException    {    value    =    toVLQSigned(value);    do    {    [BUGGY]    int    digit    =    value    ^    VLQ_BASE_MASK;    value    >>>=    VLQ_BASE_SHIFT;    if    (value    >    0)    {    digit    |=    VLQ_CONTINUATION_BIT;    }    out.append(Base64.toBase64(digit));    }    while    (value    >    0);    }    [CLASS]        Base64VLQ    [METHOD]    encode    [RETURN_TYPE]    void        Appendable    out    int    value    [VARIABLES]    int    VLQ_BASE    VLQ_BASE_MASK    VLQ_BASE_SHIFT    VLQ_CONTINUATION_BIT    digit    value    Appendable    out    boolean        	closure_116_Base64VLQ_1_1	91	1	src/com/google/debugging/sourcemap/Base64VLQ.java
1213	[PATCH]    messageHasDesc    =    true;	[BUG]    [BUGGY]    messageHasDesc    =    false;    [FE]    junit.framework.ComparisonFailure:    expected:<Th[e    description    in    @desc]>    but    was:<Th[is    is    a    help    var]>    testLegacyMessageWithDescAnnotationAndHelpVar    [CONTEXT]    private    boolean    maybeInitMetaDataFromJsDoc(Builder    builder,    Node    node)    {    boolean    messageHasDesc    =    false;    JSDocInfo    info    =    node.getJSDocInfo();    if    (info    !=    null)    {    String    desc    =    info.getDescription();    if    (desc    !=    null)    {    builder.setDesc(desc);    [BUGGY]    messageHasDesc    =    false;    }    if    (info.isHidden())    {    builder.setIsHidden(true);    }    if    (info.getMeaning()    !=    null)    {    builder.setMeaning(info.getMeaning());    }    }    return    messageHasDesc;    [CLASS]        JsMessageVisitor    MalformedException    MessageLocation    [METHOD]    maybeInitMetaDataFromJsDoc    [RETURN_TYPE]    boolean        Builder    builder    Node    node    [VARIABLES]    Pattern    CAMELCASE_PATTERN    MSG_UNNAMED_PATTERN    CheckLevel    checkLevel    Node    assignNode    callNode    externs    getProp    getPropNode    grandParentNode    messageNode    msgNode    msgNodeParent    nameNode    node    parent    parentNode    parentOfVarNode    propNode    root    sibling    valueNode    varNode    Builder    builder    String    DESC_SUFFIX    HIDDEN_DESC_PREFIX    MSG_FALLBACK_FUNCTION_NAME    MSG_FUNCTION_NAME    MSG_PREFIX    PH_JS_PREFIX    PH_JS_SUFFIX    desc    fnName    message    messageKey    msgName    name    IdGenerator    idGenerator    JsMessage    extractedMessage    message    JSDocInfo    info    long    serialVersionUID    AbstractCompiler    compiler    boolean    isNewStyleMessage    isUnnamedMessage    isUnnamedMsg    isVar    messageHasDesc    needToCheckDuplications    DiagnosticType    BAD_FALLBACK_SYNTAX    FALLBACK_ARG_ERROR    MESSAGE_DUPLICATE_KEY    MESSAGE_HAS_NO_DESCRIPTION    MESSAGE_HAS_NO_TEXT    MESSAGE_HAS_NO_VALUE    MESSAGE_NODE_IS_ORPHANED    MESSAGE_NOT_INITIALIZED_USING_NEW_SYNTAX    MESSAGE_TREE_MALFORMED    Style    style    Map    googMsgNodes    messageNames    unnamedMessages        	closure_32733_JsMessageVisitor_1_1	487	1	src/com/google/javascript/jscomp/JsMessageVisitor.java
1214	[PATCH]    this(compiler,    globalSymbolNamespace,    true);	[BUG]    [BUGGY]    this(compiler,    globalSymbolNamespace,    false);    [FE]    java.lang.RuntimeException:    java.lang.RuntimeException:    INTERNAL    COMPILER    ERROR.    testRenamePrefixNamespaceProtectSideEffects    [CONTEXT]    RescopeGlobalSymbols(AbstractCompiler    compiler,    String    globalSymbolNamespace)    {    [BUGGY]    this(compiler,    globalSymbolNamespace,    false);    }    [CLASS]        RescopeGlobalSymbols    RewriteGlobalFunctionStatementsToVarAssignmentsCallback    RewriteScopeCallback    RemoveGlobalVarCallback    MakeExternsReferenceWindowExplicitly    [METHOD]    <init>    [RETURN_TYPE]    String)        AbstractCompiler    compiler    String    globalSymbolNamespace    [VARIABLES]    AbstractCompiler    compiler    Set    SPECIAL_EXTERNS    boolean    addExtern    String    DISAMBIGUATION_SUFFIX    WINDOW    globalSymbolNamespace        	closure_42091_RescopeGlobalSymbols_1_1	68	1	src/com/google/javascript/jscomp/RescopeGlobalSymbols.java
1215	[PATCH]    if    (!srcBlock.hasChildren())    {	[BUG]    [BUGGY]    if    (!false)    {    [FE]    junit.framework.ComparisonFailure:    expected:<function    f(){[x||]y()}>    but    was:<function    f(){[if(x)return;]y()}>    testFold1    [CONTEXT]    Node    ifNode,    int    exitType,    String    labelName)    {    Node    exitNodeParent    =    null;    Node    exitNode    =    null;        if    (srcBlock.isBlock())    {    [BUGGY]    if    (!false)    {    return;    }    exitNodeParent    =    srcBlock;    exitNode    =    exitNodeParent.getLastChild();    }    else    {        exitNodeParent    =    ifNode;    exitNode    =    srcBlock;    }        [CLASS]        MinimizeExitPoints    [METHOD]    tryMinimizeIfBlockExits    [RETURN_TYPE]    void        Node    srcBlock    Node    destBlock    Node    ifNode    int    exitType    String    labelName    [VARIABLES]    AbstractCompiler    compiler    String    labelName    boolean    int    exitType    Node    destBlock    exitNode    exitNodeParent    ifNode    newDestBlock    srcBlock        	closure_33497_MinimizeExitPoints_1_1	227	1	src/com/google/javascript/jscomp/MinimizeExitPoints.java
1216	[PATCH]    if    (!n.isFunction())    {	[BUG]    [BUGGY]    if    (!false)    {    [FE]    java.lang.NullPointerException    testBug592170    [CONTEXT]    case    Token.CATCH:    scope    =    traverseCatch(n,    scope);    break;    case    Token.CAST:    scope    =    traverseChildren(n,    scope);    break;    }            [BUGGY]    if    (!false)    {    JSDocInfo    info    =    n.getJSDocInfo();    if    (info    !=    null    &&    info.hasType())    {    JSType    castType    =    info.getType().evaluate(syntacticScope,    registry);                if    (n.isQualifiedName()    &&    n.getParent().isExprResult())    {    updateScopeForTypeChange(scope,    n,    n.getJSType(),    castType);    [CLASS]        TypeInference    TemplateTypeReplacer    BooleanOutcomePair    [METHOD]    traverse    [RETURN_TYPE]    FlowScope        Node    n    FlowScope    scope    [VARIABLES]    ReverseAbstractInterpreter    reverseInterpreter    JSType    castType    Node    n    BooleanLiteralSet    booleanValues    toBooleanOutcomes    JSDocInfo    info    ObjectType    objType    unknownType    AbstractCompiler    compiler    JSTypeRegistry    registry    boolean    madeChanges    Scope    functionScope    syntacticScope    DiagnosticType    FUNCTION_LITERAL_UNDEFINED_THIS    Map    assertionFunctionsMap    replacements    FlowScope    bottomScope    conditionFlowScope    functionScope    informed    input    joinedScope    leftScope    newScope    output    rightScope    scope        	closure_43603_TypeInference_1_1	454	1	src/com/google/javascript/jscomp/TypeInference.java
1217	[PATCH]    if    (condition    ==    null    &&    source.isCase())    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    expected    a    warning    testSwitchCase7    [CONTEXT]    }    newScope    =    informed;    break;    }            case    ON_FALSE:    if    (condition    ==    null)    {    condition    =    NodeUtil.getConditionExpression(source);    [BUGGY]    if    (false)    {    condition    =    source;            if    (conditionFlowScope    ==    null)    {    conditionFlowScope    =    traverse(    condition.getFirstChild(),    output.createChildFlowScope());    }    }    }    [CLASS]        TypeInference    TemplateTypeReplacer    BooleanOutcomePair    [METHOD]    branchedFlowThrough    [RETURN_TYPE]    List        Node    source    FlowScope    input    [VARIABLES]    ReverseAbstractInterpreter    reverseInterpreter    JSType    iterKeyType    narrowedKeyType    objIndexType    Node    condition    item    obj    source    BooleanLiteralSet    booleanValues    toBooleanOutcomes    ObjectType    objType    unknownType    AbstractCompiler    compiler    JSTypeRegistry    registry    boolean    madeChanges    DiGraphEdge    branchEdge    Scope    functionScope    syntacticScope    DiagnosticType    FUNCTION_LITERAL_UNDEFINED_THIS    BooleanOutcomePair    conditionOutcomes    Branch    branch    List    branchEdges    result    Map    assertionFunctionsMap    replacements    FlowScope    bottomScope    conditionFlowScope    functionScope    informed    input    joinedScope    leftScope    newScope    output    rightScope        	closure_43546_TypeInference_1_1	243	1	src/com/google/javascript/jscomp/TypeInference.java
1218	[PATCH]    b    +=    (str[i    +    4]    &    0xff);	[BUG]    [BUGGY]    b    +=    (str[i    %    4]    &    0xff);    [FE]    junit.framework.AssertionFailedError:    testReplaceTwoPlaceholdersNonAlphaOrder    [CONTEXT]    case    9:    c    +=    (str[i    +    8]    &    0xff)    <<    8;        case    8:    b    +=    (str[i    +    7]    &    0xff)    <<    24;    case    7:    b    +=    (str[i    +    6]    &    0xff)    <<    16;    case    6:    b    +=    (str[i    +    5]    &    0xff)    <<    8;    case    5:    [BUGGY]    b    +=    (str[i    %    4]    &    0xff);    case    4:    a    +=    (str[i    +    3]    &    0xff)    <<    24;    case    3:    a    +=    (str[i    +    2]    &    0xff)    <<    16;    case    2:    a    +=    (str[i    +    1]    &    0xff)    <<    8;    case    1:    a    +=    (str[i    +    0]    &    0xff);        }    [CLASS]        GoogleJsMessageIdGenerator    FP    MessageId    [METHOD]    hash32    [RETURN_TYPE]    int        byte[]    str    int    start    int    limit    int    c    [VARIABLES]    byte[]    str    String    meaning    projectId    projectScopedMeaning    str    tcValue    boolean    int    a    b    c    i    limit    start        	closure_30991_GoogleJsMessageIdGenerator_1_1	172	1	src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java
1219	[PATCH]    return    false;	[BUG]    [BUGGY]    return    true;    [FE]    junit.framework.AssertionFailedError:    testNoInlineAliasesInLoop    [CONTEXT]    if    (ref    ==    null)    {    return    false;    }        for    (BasicBlock    block    =    ref.getBasicBlock();    block    !=    null;    block    =    block.getParent())    {    if    (block.isFunction)    {    break;    }    else    if    (block.isLoop)    {    [BUGGY]    return    true;    }    }    return    true;    }    [CLASS]        ReferenceCollectingCallback    ReferenceMapWrapper    1    ReferenceCollection    Reference    BasicBlock    [METHOD]    isAssignedOnceInLifetime    [RETURN_TYPE]    boolean        [VARIABLES]    Set    DECLARATION_PARENTS    Reference    ref    Node    externs    n    nameNode    originalRoot    parent    root    scriptRoot    BasicBlock    basicBlock    block    initBlock    parent    Deque    blockStack    Predicate    varFilter    AbstractCompiler    compiler    boolean    isFunction    isHoisted    isLoop    Scope    scope    InputId    inputId    List    references    Behavior    DO_NOTHING_BEHAVIOR    behavior    StaticSourceFile    sourceFile    Map    referenceMap        	closure_6076_ReferenceCollectingCallback_1_1	433	1	src/com/google/javascript/jscomp/ReferenceCollectingCallback.java
1220	[PATCH]    if    (!(s.equals(   "number   ")    ||    s.equals(   "string   ")    ||    s.equals(   "boolean   ")    ||	[BUG]    [BUGGY]    if    (!(s.equals(   "string   ")    ||    s.equals(   "boolean   ")    ||    [FE]    junit.framework.AssertionFailedError:    unexpected    warnings(s):    testTypeOfReduction1    [CONTEXT]    private    void    checkTypeofString(NodeTraversal    t,    Node    n,    String    s)    {    [BUGGY]    if    (!(s.equals(   "string   ")    ||    s.equals(   "boolean   ")    ||    s.equals(   "undefined   ")    ||    s.equals(   "function   ")    ||    s.equals(   "object   ")    ||    s.equals(   "unknown   ")))    {    validator.expectValidTypeofName(t,    n,    s);    }    }    [CLASS]        TypeCheck    [METHOD]    checkTypeofString    [RETURN_TYPE]    void        NodeTraversal    t    Node    n    String    s    [VARIABLES]    ReverseAbstractInterpreter    reverseInterpreter    NodeTraversal    t    DiagnosticGroup    ALL_DIAGNOSTICS    CheckLevel    reportMissingOverride    reportUnknownTypes    Node    n    String    OVERRIDING_PROTOTYPE_WITH_NON_OBJECT    functionPrivateName    message    s    MemoizedScopeCreator    scopeCreator    int    noTypeCheckSection    nullCount    typedCount    unknownCount    TypeValidator    validator    AbstractCompiler    compiler    JSTypeRegistry    typeRegistry    boolean    enterSection    externs    inExterns    report    reportMissingProperties    typeable    Scope    outerScope    topScope    DiagnosticType    BAD_DELETE    BAD_IMPLEMENTED_TYPE    BIT_OPERATION    CONFLICTING_EXTENDED_TYPE    CONFLICTING_IMPLEMENTED_TYPE    CONSTRUCTOR_NOT_CALLABLE    DETERMINISTIC_TEST    DETERMINISTIC_TEST_NO_RESULT    ENUM_DUP    ENUM_NOT_CONSTANT    EXPECTED_THIS_TYPE    FUNCTION_MASKS_VARIABLE    HIDDEN_INTERFACE_PROPERTY    HIDDEN_SUPERCLASS_PROPERTY    HIDDEN_SUPERCLASS_PROPERTY_MISMATCH    ILLEGAL_IMPLICIT_CAST    ILLEGAL_OBJLIT_KEY    ILLEGAL_PROPERTY_CREATION    INCOMPATIBLE_EXTENDED_PROPERTY_TYPE    INEXISTENT_ENUM_ELEMENT    INEXISTENT_PROPERTY    INTERFACE_FUNCTION_NOT_EMPTY    INTERFACE_METHOD_OVERRIDE    INVALID_INTERFACE_MEMBER_DECLARATION    IN_USED_WITH_STRUCT    MULTIPLE_VAR_DEF    NOT_A_CONSTRUCTOR    NOT_CALLABLE    UNEXPECTED_TOKEN    UNKNOWN_EXPR_TYPE    UNKNOWN_OVERRIDE    UNRESOLVED_TYPE    WRONG_ARGUMENT_COUNT    diagnosticType    InferJSDocInfo    inferJSDocInfo        	closure_14220_TypeCheck_1_1	857	1	src/com/google/javascript/jscomp/TypeCheck.java
1221	[PATCH]    Name    owner    =    isPrototypeGet    ?    name    :    parent;	[BUG]    [BUGGY]    Name    owner    =    true    ?    name    :    parent;    [FE]    junit.framework.AssertionFailedError:    There    should    be    one    warning,    repeated    2    time(s).    expected:<2>    but    was:<0>    testLateDefinedName1    [CONTEXT]    ref.getModule()    !=    declaration.getModule()    &&    !moduleGraph.dependsOn(    ref.getModule(),    declaration.getModule()))    {    reportBadModuleReference(name,    ref);    }    else    {        if    (ref.scope.isGlobal())    {            boolean    isPrototypeGet    =    (ref.type    ==    Ref.Type.PROTOTYPE_GET);    [BUGGY]    Name    owner    =    true    ?    name    :    parent;    boolean    singleGlobalParentDecl    =    owner    !=    null    &&    owner.getDeclaration()    !=    null    &&    owner.localSets    ==    0;    if    (singleGlobalParentDecl    &&    owner.getDeclaration().preOrderIndex    >    ref.preOrderIndex)    {    String    refName    =    isPrototypeGet    ?    name.getFullName()    +       ".prototype   "    :    name.getFullName();    [CLASS]        CheckGlobalNames    [METHOD]    validateName    [RETURN_TYPE]    void        Name    name    boolean    isDefined    [VARIABLES]    AbstractCompiler    compiler    Ref    declaration    ref    Set    functionPrototypeProps    objectPrototypeProps    props    boolean    isDefined    isGlobalExpr    isPrototypeGet    singleGlobalParentDecl    CheckLevel    level    DiagnosticType    NAME_DEFINED_LATE_WARNING    STRICT_MODULE_DEP_QNAME    UNDEFINED_NAME_WARNING    CodingConvention    convention    String    refName    GlobalNamespace    namespace    JSModuleGraph    moduleGraph    Name    name    owner    parent        	closure_20666_CheckGlobalNames_1_1	173	1	src/com/google/javascript/jscomp/CheckGlobalNames.java
1222	[PATCH]    }    else    if    (modules.get(0).getInputs().isEmpty()    &&    modules.size()    >    1)    {	[BUG]    [BUGGY]    }    else    if    (modules.get(0).getInputs().isEmpty()    &&    modules.size()    >=    1)    {    [FE]    junit.framework.AssertionFailedError:    Unexpected    parse    error(s):    JSC_EMPTY_ROOT_MODULE_ERROR.    Root    module    {0}    must    contain    at    least    one    source    code    input    at    (unknown    source)    line    (unknown    line)    :    (unknown    column)    testWithNoInputs    [CONTEXT]    private    void    checkFirstModule(List<JSModule>    modules)    {    if    (modules.isEmpty())    {    report(JSError.make(EMPTY_MODULE_LIST_ERROR));    [BUGGY]    }    else    if    (modules.get(0).getInputs().isEmpty()    &&    modules.size()    >=    1)    {        report(JSError.make(EMPTY_ROOT_MODULE_ERROR,    modules.get(0).getName()));    }    }    [CLASS]        Compiler    1    3    4    2    5    6    7    8    9    10    CodeBuilder    IntermediateState    [METHOD]    checkFirstModule    [RETURN_TYPE]    void        JSModule>    modules    [VARIABLES]    FunctionInformationMap    functionInformationMap    ErrorManager    errorManager    StringBuilder    debugLog    sb    Config    parserConfig    Node    externAndJsRoot    externsRoot    jsRoot    PerformanceTracker    tracker    PassConfig    passes    String    CONFIG_RESOURCE    SINGLETON_MODULE_NAME    SYNTHETIC_EXTERNS    currentPassName    externExports    lastPassName    LifeCycleStage    lifeCycleStage    Logger    logger    PassFactory    sanityCheck    long    COMPILER_STACK_SIZE    serialVersionUID    TypeValidator    typeValidator    JSTypeRegistry    typeRegistry    ErrorReporter    defaultErrorReporter    oldErrorReporter    RecentChange    recentChange    GlobalVarReferenceMap    globalRefMap    DiagnosticType    DUPLICATE_EXTERN_INPUT    DUPLICATE_INPUT    EMPTY_MODULE_LIST_ERROR    EMPTY_ROOT_MODULE_ERROR    MISSING_ENTRY_ERROR    MODULE_DEPENDENCY_ERROR    MOTION_ITERATIONS_ERROR    OPTIMIZE_LOOP_ERROR    SourceMap    sourceMap    List    codeChangeHandlers    externs    files    guards    inputs    modules    WarningsGuard    warningsGuard    ReverseAbstractInterpreter    abstractInterpreter    PrintStream    outStream    stream    double    progress    Tracer    currentTracer    JSModuleGraph    e    moduleGraph    int    colCount    lineCount    syntheticCodeId    uniqueNameId    Thread    compilerThread    CompilerInput    synthesizedExternsInput    boolean    colorize    hasRegExpGlobalReferences    isExtern    useThreads    State    passConfigState    CodingConvention    defaultCodingConvention    CompilerOptions    options    ExecutorService    compilerExecutor    Map    injectedLibraries    inputsById        	closure_6380_Compiler_1_1	448	1	src/com/google/javascript/jscomp/Compiler.java
1223	[PATCH]    if    (makesStructs    &&    !isConstructor)    {	[BUG]    [BUGGY]    if    (makesStructs    ==    !isConstructor)    {    [FE]    junit.framework.AssertionFailedError:    Unexpected    warning(s):    JSC_CONSTRUCTOR_REQUIRED.    @struct    used    without    @constructor    for    Bar    at    testcode    line    1    :    30    expected:<0>    but    was:<1>    testExternedPropertyName    [CONTEXT]    FunctionTypeBuilder    inferInheritance(@Nullable    JSDocInfo    info)    {    if    (info    !=    null)    {    isConstructor    =    info.isConstructor();    makesStructs    =    info.makesStructs();    makesDicts    =    info.makesDicts();    isInterface    =    info.isInterface();        [BUGGY]    if    (makesStructs    ==    !isConstructor)    {    reportWarning(CONSTRUCTOR_REQUIRED,       "@struct   ",    fnName);    }    else    if    (makesDicts    &&    !isConstructor)    {    reportWarning(CONSTRUCTOR_REQUIRED,       "@dict   ",    fnName);    }        if    (info.hasBaseType())    {    if    (isConstructor)    {    JSType    maybeBaseType    =    info.getBaseType().evaluate(scope,    typeRegistry);    [CLASS]        FunctionTypeBuilder    ExtendedTypeValidator    ImplementedTypeValidator    UnknownFunctionContents    AstFunctionContents    [METHOD]    inferInheritance    [RETURN_TYPE]    FunctionTypeBuilder        JSDocInfo    info    [VARIABLES]    JSType    maybeBaseType    maybeInterType    maybeInterfaceType    returnType    thisType    type    Set    escapedQualifiedNames    escapedVarNames    ImmutableList    templateTypeNames    Node    currentParam    errorRoot    n    newParam    oldParam    parametersNode    paramsParent    FunctionContents    contents    String    fnName    sourceName    JSDocInfo    info    UnknownFunctionContents    singleton    ObjectType    baseType    objectType    AbstractCompiler    compiler    JSTypeRegistry    typeRegistry    boolean    hasNonEmptyReturns    isConstructor    isInterface    makesDicts    makesStructs    oldParamsListHitOptArgs    returnTypeInferred    warnedAboutArgList    Scope    scope    DiagnosticType    CONSTRUCTOR_REQUIRED    EXTENDS_NON_OBJECT    EXTENDS_WITHOUT_TYPEDEF    IMPLEMENTS_WITHOUT_CONSTRUCTOR    INEXISTANT_PARAM    OPTIONAL_ARG_AT_END    RESOLVED_TAG_EMPTY    TEMPLATE_TYPE_DUPLICATED    TEMPLATE_TYPE_EXPECTED    THIS_TYPE_NON_OBJECT    TYPE_REDEFINITION    VAR_ARGS_MUST_BE_LAST    CodingConvention    codingConvention    JSTypeExpression    t    List    extendedInterfaces    implementedInterfaces    Multiset    assignedVarNames        	closure_14938_FunctionTypeBuilder_1_1	316	1	src/com/google/javascript/jscomp/FunctionTypeBuilder.java
1224	[PATCH]    if    (var    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<0>    but    was:<-2>    testFunctionStrictModeNoWarning    [CONTEXT]                    if    (t.inGlobalScope())    {    return;    }    Var    var    =    t.getScope().getVar(n.getString());    [BUGGY]    if    (false)    {        return;    }    if    (var.getScope().isGlobal())    {        return;    }            [CLASS]        ShadowVariables    GatherReferenceInfo    DoShadowVariables    [METHOD]    visit    [RETURN_TYPE]    void        NodeTraversal    t    Node    n    Node    parent    [VARIABLES]    Multimap    scopeUpRefMap    varToNameUsage    AbstractCompiler    compiler    boolean    Scope    s    NodeTraversal    t    Var    var    Node    n    parent    SortedSet    varsByFrequency    Map    assignments    deltaPseudoNameMap    oldPseudoNameMap    pseudoNameMap        	closure_42618_ShadowVariables_1_1	144	1	src/com/google/javascript/jscomp/ShadowVariables.java
1225	[PATCH]    isThis    ?    Token.THIS    :    Token.NEW,	[BUG]    [BUGGY]    true    ?    Token.THIS    :    Token.NEW,    [FE]    junit.framework.AssertionFailedError:    expected:<JSC_PARSE_ERROR:    Parse    error.    {0}>    but    was:<JSC_TYPE_PARSE_ERROR:    {0}>    testConstructorCycle    [CONTEXT]    boolean    hasParams    =    true;    if    (token    ==    JsDocToken.STRING)    {    String    tokenStr    =    stream.getString();    boolean    isThis    =       "this   ".equals(tokenStr);    boolean    isNew    =       "new   ".equals(tokenStr);    if    (isThis    ||    isNew)    {    if    (match(JsDocToken.COLON))    {    next();    skipEOLs();    Node    contextType    =    wrapNode(    [BUGGY]    true    ?    Token.THIS    :    Token.NEW,    parseTypeName(next()));    if    (contextType    ==    null)    {    return    null;    }    functionType.addChildToFront(contextType);    }    else    {    return    reportTypeSyntaxWarning(   "msg.jsdoc.missing.colon   ");    }        [CLASS]        JsDocInfoParser    ErrorReporterParser    State    ExtractionInfo    ExtendedTypeInfo    WhitespaceOption    [METHOD]    parseFunctionType    [RETURN_TYPE]    Node        JsDocToken    token    [VARIABLES]    Set    modifies    modifiesAnnotationKeywords    suppressionNames    suppressions    Node    associatedNode    basicTypeExpr    contextType    functionType    memberType    n    parameters    resultType    templateNode    typeExpr    typeList    typeNameNode    typeNode    JsDocTokenStream    stream    FileLevelJsDocBuilder    fileLevelJsDocBuilder    String    annotationName    author    description    fileOverview    line    meaning    messageArg    messageId    multilineText    name    paramDescription    preserve    reason    reference    returnDescription    s    string    tokenStr    typeName    typeString    version    JSDocInfo    fileOverviewJSDocInfo    int    charno    endCharno    endLineno    i    lineStartChar    lineno    numSpaces    startCharno    startLineno    trimCount    ErrorReporter    errorReporter    boolean    hasParams    isNew    isThis    JsDocToken    NO_UNREAD_TOKEN    token    unreadToken    WhitespaceOption    PRESERVE    SINGLE_LINE    TRIM    option    ErrorReporterParser    parser    State    NEXT_IS_ANNOTATION    SEARCHING_ANNOTATION    SEARCHING_NEWLINE    state    JSTypeExpression    type    JSDocInfoBuilder    jsdocBuilder    StaticSourceFile    sourceFile    Map    annotationNames        	closure_46874_JsDocInfoParser_1_1	1870	1	src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
1226	[PATCH]    if    (!ownerFn.isConstructor()    &&    !ownerFn.isInterface())    {	[BUG]    [BUGGY]    if    (!ownerFn.isInterface())    {    [FE]    junit.framework.AssertionFailedError:    expected:<2>    but    was:<1>    testSuperClassMethodReferences    [CONTEXT]    }    if    (type.isGlobalThisType())    {    return    globalScope.getSlot(GLOBAL_THIS);    }    else    if    (type.isNominalConstructor())    {    return    linkToCtor    ?    globalScope.getSlot(   "Function   ")    :    getSymbolDeclaredBy(type.toMaybeFunctionType());    }    else    if    (type.isFunctionPrototypeType())    {    FunctionType    ownerFn    =    ((ObjectType)    type).getOwnerFunction();    [BUGGY]    if    (!ownerFn.isInterface())    {    return    null;    }    return    linkToCtor    ?    getSymbolDeclaredBy(ownerFn)    :    getSymbolForInstancesOf(ownerFn);    }    else    if    (type.isInstanceType())    {    FunctionType    ownerFn    =    ((ObjectType)    type).getConstructor();    return    linkToCtor    ?    getSymbolDeclaredBy(ownerFn)    :    getSymbolForInstancesOf(ownerFn);    [CLASS]        SymbolTable    4    Symbol    Reference    SymbolScope    PropertyRefCollector    ThisRefCollector    JSDocInfoCollector    1    2    3    [METHOD]    getSymbolForTypeHelper    [RETURN_TYPE]    SymbolTable$Symbol        JSType    type    boolean    linkToCtor    [VARIABLES]    Table    symbols    JSType    alt    type    typeOfThis    Reference    declaration    Symbol    altSym    mySymbol    param    result    slot    sym    symbol    Node    current    declNode    functionNode    n    node    rootNode    source    FunctionType    ownerFn    String    GLOBAL_THIS    name    paramName    Logger    logger    JSDocInfo    docInfo    SymbolScope    docScope    globalScope    parent    propertyScope    scope    int    innerAnonFunctionsWithNames    scopeDepth    JSTypeRegistry    registry    typeRegistry    AbstractCompiler    compiler    boolean    linkToCtor    Ordering    LEXICAL_SCOPE_ORDERING    NODE_ORDERING    SOURCE_NAME_ORDERING    SYMBOL_ORDERING    List    docInfos    result    sortedSymbols    thisStack    Map    ownSymbols    references    scopes        	closure_11672_SymbolTable_1_1	402	1	src/com/google/javascript/jscomp/SymbolTable.java
1227	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError:    testRefChain4    [CONTEXT]       "Expected:    AND    or    OR,    Got:    %s   ",    Token.name(node.getType()));            Node    left    =    node.getFirstChild();    Node    right    =    left.getNext();    if    (NodeUtil.mayHaveSideEffects(right,    compiler))    {    accumulator.keepSimplifiedShortCircuitExpression(node);    return    false;    }    else    {    [BUGGY]    return    false;    }    }    [CLASS]        GatherSideEffectSubexpressionsCallback    GetReplacementSideEffectSubexpressions    [METHOD]    processShortCircuitExpression    [RETURN_TYPE]    boolean        Node    node    [VARIABLES]    AbstractCompiler    compiler    List    parts    replacements    Set    FORBIDDEN_TYPES    boolean    SideEffectAccumulator    accumulator    Node    left    node    right        	closure_30453_GatherSideEffectSubexpressionsCallback_1_1	286	1	src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java
1228	[PATCH]    if    (!ID_MATCHER.matchesAllOf(tweakId))    {	[BUG]    [BUGGY]    if    (!false)    {    [FE]    junit.framework.AssertionFailedError:    Unexpected    error(s):    JSC_INVALID_TWEAK_ID_ERROR.    tweak    ID    contains    illegal    characters.    Only    letters,    numbers,    _    and    .    are    allowed    at    testcode    line    1    :    168    testStrippingWithInCodeOverrides    [CONTEXT]    if    (tweakInfo    ==    null)    {    tweakInfo    =    new    TweakInfo(tweakId);    allTweaks.put(tweakId,    tweakInfo);    }    switch    (tweakFunc)    {    case    REGISTER_BOOLEAN:    case    REGISTER_NUMBER:    case    REGISTER_STRING:        [BUGGY]    if    (!false)    {    compiler.report(t.makeError(tweakIdNode,    INVALID_TWEAK_ID_ERROR));    }        if    (!t.inGlobalScope())    {    compiler.report(    t.makeError(n,    NON_GLOBAL_TWEAK_INIT_ERROR,    tweakId));    break;    }        [CLASS]        ProcessTweaks    TweakFunction    CollectTweaksResult    CollectTweaks    TweakFunctionCall    TweakInfo    [METHOD]    visit    [RETURN_TYPE]    void        NodeTraversal    t    Node    n    Node    parent    [VARIABLES]    TweakFunction    GET_BOOLEAN    GET_COMPILER_OVERRIDES    GET_NUMBER    GET_STRING    OVERRIDE_DEFAULT_VALUE    REGISTER_BOOLEAN    REGISTER_NUMBER    REGISTER_STRING    registerFunc    registerFunction    tweakFunc    NodeTraversal    t    CharMatcher    ID_MATCHER    Node    callNode    defaultValueNode    externs    n    newValue    objKeyNode    objNode    objValueNode    parent    root    sourceInformationNode    tweakDefaultValueNode    tweakIdNode    value    valueNode    voidZeroNode    String    callName    expectedTypeName    name    sourceName    tweakId    int    type    validNodeTypeA    validNodeTypeB    AbstractCompiler    compiler    boolean    changed    isRegistered    stripTweaks    TweakFunctionCall    call    functionCall    registerCall    DiagnosticType    INVALID_TWEAK_DEFAULT_VALUE_WARNING    INVALID_TWEAK_ID_ERROR    NON_GLOBAL_TWEAK_INIT_ERROR    NON_LITERAL_TWEAK_ID_ERROR    TWEAK_MULTIPLY_REGISTERED_ERROR    TWEAK_OVERRIDE_AFTER_REGISTERED_ERROR    TWEAK_WRONG_GETTER_TYPE_WARNING    UNKNOWN_TWEAK_WARNING    SortedMap    compilerDefaultValueOverrides    TweakInfo    tweakInfo    List    calls    functionCalls    getOverridesCalls    Map    TWEAK_FUNCTIONS_MAP    allTweaks    compilerDefaultValueOverrides    tweakInfos        	closure_39852_ProcessTweaks_1_1	380	1	src/com/google/javascript/jscomp/ProcessTweaks.java
1229	[PATCH]    if    (RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(fnName))    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    testRenamePropertyFunction    [CONTEXT]                            return    false;    }            [BUGGY]    if    (false)    {    return    false;    }        if    (specializationState    !=    null    &&    !specializationState.canFixupFunction(fn.getFunctionNode()))    {    return    false;    }    Node    fnNode    =    fn.getFunctionNode();    [CLASS]        InlineFunctions    FindCandidateFunctions    CallVisitor    FindCandidatesReferences    Inline    FunctionState    NamedFunction    FunctionVar    FunctionExpression    Reference    [METHOD]    isCandidateFunction    [RETURN_TYPE]    boolean        Function    fn    [VARIABLES]    Set    fnNames    namesToAlias    Node    block    callNode    externs    fn    fnIdentifingNode    fnNode    n    nameNode    parent    root    safeFnNode    var    String    fakeName    fnName    name    SpecializationState    specializationState    int    callsSeen    index    Function    fn    AbstractCompiler    compiler    boolean    assumeMinimumCapture    assumeStrictThis    blockFunctionInliningEnabled    decompose    hasInnerFunctions    inline    inlineDirectly    inlineGlobalFunctions    inlineLocalFunctions    inlined    referencesThis    remove    requiresDecomposition    CallVisitorCallback    callback    JSModule    module    Map    anonFns    anonFunctionMap    fns    functionMap    references    FunctionInjector    injector        	closure_31358_InlineFunctions_1_1	349	1	src/com/google/javascript/jscomp/InlineFunctions.java
1230	[PATCH]    if    (i    !=    0)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError:    testBackReferences    [CONTEXT]    protected    void    appendSourceCode(StringBuilder    sb)    {    for    (int    i    =    0,    n    =    alternatives.size();    i    <    n;    ++i)    {    [BUGGY]    if    (true)    {    sb.append('|');    }    alternatives.get(i).appendSourceCode(sb);    }    }    [CLASS]        RegExpTree    1Parser    RegExpTreeAtom    Empty    Anchor    WordBoundary    BackReference    Text    Repetition    Alternation    LookaheadAssertion    CapturingGroup    Charset    DecomposedCharset    Concatenation    1Simplifier    [METHOD]    appendSourceCode    [RETURN_TYPE]    void        StringBuilder    sb    [VARIABLES]    Empty    INSTANCE    RegExpTree    NEVER_MATCHES    a    alternative    atom    b    body    charAlternative    child    first    follower    last    out    preceder    t    boolean    capturing    greedy    inverse    inverted    isCaseInsensitive    positive    StringBuilder    sb    ImmutableList    alternatives    elements    char    ch    codeUnit    end    next    possibleGroupName    start    type    CharRanges    DIGITS    IE_SPACE_CHARS    IE_SPEC_ERRORS    INVERSE_WORD_CHARS    LCASE_LETTERS    LETTERS    SPACE_CHARS    UCASE_LETTERS    WORD_CHARS    charGroup    chars    group    ieExplicits    range    ranges    Charset    DOT_CHARSET    cs    List    alternatives    charAlternatives    elements    simplified    String    canonicalized    counts    flags    namedGroups    pattern    text    int    bodyEnd    bodyLen    bodyStart    comma    digit    end    expanded    expandedMax    expandedMin    expandedSuffixLen    groupIndex    i    len    limit    max    memberIdx    min    n    nCharsets    nDigits    next    numCapturingGroups    octLimit    pos    possibleGroupIndex    result    start    suffixLen    twoDigitGroupIndex    type    ImmutableMap    NAMED_CHAR_GROUPS        	closure_50041_RegExpTree_1_1	1131	1	src/com/google/javascript/jscomp/regex/RegExpTree.java
1231	[PATCH]    if    (currentInfo.documentParam(parameterName,    description))    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError    testDocumentationParameter    [CONTEXT]    public    boolean    recordParameterDescription(    String    parameterName,    String    description)    {    [BUGGY]    if    (true)    {    populated    =    true;    return    true;    }    else    {    return    false;    }    }    [CLASS]        JSDocInfoBuilder    [METHOD]    recordParameterDescription    [RETURN_TYPE]    boolean        String    parameterName    String    description    [VARIABLES]    boolean    hasLC    parseDocumentation    populated    Marker    currentMarker    marker    String    description    parameterName    JSDocInfo    built    currentInfo    info        	closure_47541_JSDocInfoBuilder_1_1	284	1	src/com/google/javascript/rhino/JSDocInfoBuilder.java
1232	[PATCH]    line.indexOf(   "require   ")    !=    -1    ||	[BUG]    [BUGGY]    true    ||    [FE]    junit.framework.AssertionFailedError:    testSourceSortingOn3    [CONTEXT]    protected    boolean    parseLine(String    line)    throws    ParseException    {    boolean    lineHasProvidesOrRequires    =    false;            if    (line.indexOf(   "provide   ")    !=    -1    ||    [BUGGY]    true    ||    line.indexOf(   "addDependency   ")    !=    -1)    {        googMatcher.reset(line);    while    (googMatcher.find())    {    lineHasProvidesOrRequires    =    true;    if    (includeGoogBase    &&    !fileHasProvidesOrRequires)    {    fileHasProvidesOrRequires    =    true;    requires.add(   "goog   ");    }    [CLASS]        JsFileParser    [METHOD]    parseLine    [RETURN_TYPE]    boolean        String    line    [VARIABLES]    Pattern    GOOG_PROVIDE_REQUIRE_PATTERN    boolean    fileHasProvidesOrRequires    include    includeGoogBase    isProvide    isRequire    lineHasProvidesOrRequires    Matcher    googMatcher    char    firstChar    List    provides    requires    String    BASE_JS_START    arg    closureRelativePath    fileContents    filePath    line    Logger    logger        	closure_45141_JsFileParser_1_1	144	1	src/com/google/javascript/jscomp/deps/JsFileParser.java
1233	[PATCH]    return    unreadToken    ==    token;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError:    testUnion    [CONTEXT]    private    boolean    match(JsDocToken    token)    {    unreadToken    =    next();    [BUGGY]    return    false;    }    [CLASS]        JsDocInfoParser    ErrorReporterParser    State    ExtractionInfo    ExtendedTypeInfo    WhitespaceOption    [METHOD]    match    [RETURN_TYPE]    boolean        JsDocToken    token    [VARIABLES]    Set    modifies    modifiesAnnotationKeywords    suppressionNames    suppressions    Node    alternate    arg    array    associatedNode    basicTypeExpr    contextType    expr    fieldName    fieldType    fieldTypeList    functionType    memberType    n    paramType    parameters    paramsType    recordType    resultType    templateNode    typeExpr    typeExpression    typeList    typeNameNode    typeNode    union    JsDocTokenStream    stream    FileLevelJsDocBuilder    fileLevelJsDocBuilder    String    annotationName    author    description    fileOverview    line    meaning    messageArg    messageId    multilineText    name    paramDescription    preserve    reason    reference    returnDescription    s    string    tokenStr    typeName    typeString    version    warning    JSDocInfo    fileOverviewJSDocInfo    int    charno    endCharno    endLineno    i    lineStartChar    lineno    numSpaces    startCharno    startLineno    trimCount    type    ErrorReporter    errorReporter    boolean    JsDocToken    NO_UNREAD_TOKEN    token    unreadToken    WhitespaceOption    PRESERVE    SINGLE_LINE    TRIM    option    ErrorReporterParser    parser    State    NEXT_IS_ANNOTATION    SEARCHING_ANNOTATION    SEARCHING_NEWLINE    state    JSTypeExpression    type    JSDocInfoBuilder    jsdocBuilder    StaticSourceFile    sourceFile    Map    annotationNames        	closure_47033_JsDocInfoParser_1_1	2308	1	src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
1234	[PATCH]    int    keysLength    =    templateKeys    ==    null    ?    0    :    templateKeys.size();	[BUG]    [BUGGY]    int    keysLength    =    templateKeys    ==    null    ?    1    :    templateKeys.size();    [FE]    java.lang.NullPointerException    testAliasableAndUnaliasableGlobals    [CONTEXT]    ImmutableList<JSType>    templatizedTypes)    {    this.registry    =    registry;            [BUGGY]    int    keysLength    =    templateKeys    ==    null    ?    1    :    templateKeys.size();    int    typesLength    =    templatizedTypes    ==    null    ?    0    :    templatizedTypes.size();    if    (typesLength    >    keysLength)    {    throw    new    IllegalArgumentException(       "Cannot    have    more    templatized    types    than    template    keys   ");    }    else    if    (typesLength    <    keysLength)    {                ImmutableList.Builder<JSType>    builder    =    ImmutableList.builder();    if    (typesLength    >    0)    {    [CLASS]        JSType    1    TypePair    [METHOD]    <init>    [RETURN_TYPE]    ImmutableList)        JSTypeRegistry    registry    String>    templateKeys    JSType>    templatizedTypes    [VARIABLES]    JSTypeRegistry    registry    boolean    inTemplatedCheckVisit    resolved    JSType    resolveResult    typeA    typeB    ImmutableList    templateKeys    templatizedTypes    Builder    builder    CanCastToVisitor    CAN_CAST_TO_VISITOR    String    EMPTY_TYPE_COMPONENT    NOT_A_CLASS    NOT_A_TYPE    UNKNOWN_NAME    long    serialVersionUID    int    ENUMDECL    NOT_ENUMDECL    i    keysLength    typesLength    Comparator    ALPHA        	closure_5534_JSType_1_1	119	1	src/com/google/javascript/rhino/jstype/JSType.java
1235	[PATCH]    return    n2    -    n1;	[BUG]    [BUGGY]    return    n2    +    n1;    [FE]    junit.framework.AssertionFailedError:    testRenamePrototypesWithGetOrSet    [CONTEXT]    public    int    compare(Property    a1,    Property    a2)    {    int    n1    =    a1.count();    int    n2    =    a2.count();    if    (n1    !=    n2)    {    [BUGGY]    return    n2    +    n1;    }    return    a1.oldName.compareTo(a2.oldName);    }    [CLASS]        RenamePrototypes    Property    1    ProcessExternedProperties    ProcessProperties    [METHOD]    compare    [RETURN_TYPE]    int        Property    a1    Property    a2    [VARIABLES]    AbstractCompiler    compiler    boolean    aggressiveRenaming    Set    prototypeObjLits    reservedNames    stringNodes    VariableMap    prevUsedRenameMap    String    name    newName    oldName    Map    properties    Property    a1    a2    int    i    n    n1    n2    objLitCount    prototypeCount    refCount    char[]    reservedCharacters    Comparator    FREQUENCY_COMPARATOR        	closure_41313_RenamePrototypes_1_1	159	1	src/com/google/javascript/jscomp/RenamePrototypes.java
1236	[PATCH]    return    this.getType()    ==    Token.CATCH;	[BUG]    [BUGGY]    return    false;    [FE]    java.lang.RuntimeException:    INTERNAL    COMPILER    ERROR.    testReturnNotMissing    [CONTEXT]    public    boolean    isCatch()    {    [BUGGY]    return    false;    }    [CLASS]        Node    NumberNode    StringNode    AbstractPropListItem    ObjectPropListItem    IntPropListItem    SiblingNodeIterable    AncestorIterable    1    FileLevelJsDocBuilder    SideEffectFlags    NodeMismatch    [METHOD]    isCatch    [RETURN_TYPE]    boolean        [VARIABLES]    JSType    jsType    boolean    compareJsType    equivalent    optionalArg    printAnnotations    printSource    printType    recurse    used    val    value    varArgs    double    d    number    s    thatValue    thisValue    Node    child    children    cur    current    cursor    first    last    lastSib    lastSibling    left    mid    mid2    n    n2    n2clone    newChild    next    nextChild    node    node2    nodeA    nodeB    oldNext    other    parent    prev    prevChild    result    right    start    PropListItem    item    next    propListHead    result    x    Object    object    objectValue    value    String    fileLevelComment    jsTypeString    left    license    name    s    str    value    warning    long    serialVersionUID    int    COLUMN_BITS    COLUMN_MASK    DECR_FLAG    DIRECTIVES    DIRECT_EVAL    EMPTY_BLOCK    FLAG_ARGUMENTS_UNMODIFIED    FLAG_GLOBAL_STATE_UNMODIFIED    FLAG_LOCAL_RESULTS    FLAG_NO_THROWS    FLAG_THIS_UNMODIFIED    FREE_CALL    INCRDECR_PROP    INFERRED_FUNCTION    INPUT_ID    IS_CONSTANT_NAME    IS_DISPATCHER    IS_NAMESPACE    JSDOC_INFO_PROP    LAST_PROP    LENGTH    MAX_COLUMN_NUMBER    NO_SIDE_EFFECTS    OPT_ARG_NAME    ORIGINALNAME_PROP    POST_FLAG    QUOTED_PROP    SIDE_EFFECTS_ALL    SIDE_EFFECTS_FLAGS_MASK    SIDE_EFFECT_FLAGS    SLASH_V    STATIC_SOURCE_FILE    SYNTHETIC_BLOCK_PROP    VAR_ARGS_NAME    c    charno    count    flag    flags    i    intValue    length    level    lineCharNo    lineno    nodeType    post1    post2    propType    quoted1    quoted2    slashV1    slashV2    sourcePosition    type    value        	closure_8819_Node_1_1	2190	1	src/com/google/javascript/rhino/Node.java
1237	[PATCH]    &&    n.getFirstChild().getFirstChild()    !=    null)    {	[BUG]    [BUGGY]    &&    true)    {    [FE]    java.lang.RuntimeException:    java.lang.NullPointerException    testExportMultiple    [CONTEXT]    if    (parent    !=    null    &&    (parent.isBlock()    ||    parent.isScript()))    {    if    (n.isFunction())    {    add(getFunctionAnnotation(n));    }    else    if    (n.isExprResult()    &&    n.getFirstChild().isAssign())    {    Node    rhs    =    n.getFirstChild().getLastChild();    add(getTypeAnnotation(rhs));    }    else    if    (n.isVar()    [BUGGY]    &&    true)    {    add(getTypeAnnotation(n.getFirstChild().getFirstChild()));    }    }    super.add(n,    context);    }    [CLASS]        TypedCodeGenerator    [METHOD]    add    [RETURN_TYPE]    void        Node    n    Context    context    [VARIABLES]    Context    context    boolean    Node    n    parent    rhs        	closure_44172_TypedCodeGenerator_1_1	51	1	src/com/google/javascript/jscomp/TypedCodeGenerator.java
1238	[PATCH]    c[i]    =    Base64.toBase64((value    >>    (26    -    i    *    6))    &    0x3f);	[BUG]    [BUGGY]    c[i]    =    Base64.toBase64((value    >>    (26    -    i    -    6))    &    0x3f);    [FE]    junit.framework.ComparisonFailure:    expected:<AAAA[K]g>    but    was:<AAAA[A]g>    testBase64EncodeInt    [CONTEXT]    public    static    String    base64EncodeInt(int    value)    {    char[]    c    =    new    char[6];    for    (int    i    =    0;    i    <    5;    i++)    {    [BUGGY]    c[i]    =    Base64.toBase64((value    >>    (26    -    i    -    6))    &    0x3f);    }    c[5]    =    Base64.toBase64((value    <<    4)    &    0x3f);    return    new    String(c);    }    [CLASS]        Base64    [METHOD]    base64EncodeInt    [RETURN_TYPE]    String        int    value    [VARIABLES]    int[]    BASE64_DECODE_MAP    String    BASE64_MAP    boolean    int    i    value    char[]    c        	closure_46_Base64_1_1	76	1	src/com/google/debugging/sourcemap/Base64.java
1239	[PATCH]    if    (!fnType.isInterface()    &&    baseType    !=    null)    {	[BUG]    [BUGGY]    if    (!fnType.isInterface()    &&    true)    {    [FE]    java.lang.RuntimeException:    INTERNAL    COMPILER    ERROR.    testExternedPropertyName    [CONTEXT]    private    void    maybeSetBaseType(FunctionType    fnType)    {    [BUGGY]    if    (!fnType.isInterface()    &&    true)    {    fnType.setPrototypeBasedOn(baseType);    }    }    [CLASS]        FunctionTypeBuilder    ExtendedTypeValidator    ImplementedTypeValidator    UnknownFunctionContents    AstFunctionContents    [METHOD]    maybeSetBaseType    [RETURN_TYPE]    void        FunctionType    fnType    [VARIABLES]    JSType    maybeBaseType    maybeInterType    maybeInterfaceType    maybeThisType    paramType    parameterType    returnType    thisType    type    Set    allJsDocParams    escapedQualifiedNames    escapedVarNames    ImmutableList    templateTypeNames    Node    arg    argsParent    currentParam    errorRoot    lp    n    newParam    oldParam    oldParameterType    param    parametersNode    paramsParent    FunctionType    fnType    FunctionContents    contents    String    argumentName    fnName    inexistentName    name    paramName    sourceName    UnknownFunctionContents    singleton    ObjectType    baseType    objType    objectType    AbstractCompiler    compiler    JSTypeRegistry    typeRegistry    boolean    emittedWarning    foundTemplateType    hasNonEmptyReturns    isConstructor    isInterface    isOptional    isOptionalParam    isVarArgs    makesDicts    makesStructs    oldParamsListHitOptArgs    returnTypeInferred    warnedAboutArgList    Scope    scope    DiagnosticType    CONSTRUCTOR_REQUIRED    EXTENDS_NON_OBJECT    EXTENDS_WITHOUT_TYPEDEF    IMPLEMENTS_WITHOUT_CONSTRUCTOR    INEXISTANT_PARAM    OPTIONAL_ARG_AT_END    RESOLVED_TAG_EMPTY    TEMPLATE_TYPE_DUPLICATED    TEMPLATE_TYPE_EXPECTED    THIS_TYPE_NON_OBJECT    TYPE_REDEFINITION    VAR_ARGS_MUST_BE_LAST    CodingConvention    codingConvention    List    extendedInterfaces    implementedInterfaces    Multiset    assignedVarNames        	closure_15135_FunctionTypeBuilder_1_1	647	1	src/com/google/javascript/jscomp/FunctionTypeBuilder.java
1240	[PATCH]    Preconditions.checkState(++iterations    !=    maxIterations,	[BUG]    [BUGGY]    Preconditions.checkState(++iterations    >    maxIterations,    [FE]    java.lang.IllegalStateException:    TightenTypes    pass    appears    to    be    stuck    in    an    infinite    loop.    testTwoSeparateFieldsTwoTypes    [CONTEXT]    changed    =    true;    ConcreteScope    varScope    =    assign.slot.getScope();    if    ((varScope    !=    scope)    &&    !workSet.contains(varScope))    {    workSet.add(varScope);    workList.add(varScope);    }    }    }    }    }    [BUGGY]    Preconditions.checkState(++iterations    >    maxIterations,    NON_HALTING_ERROR_MSG);    }    while    (changed);    }    [CLASS]        TightenTypes    ConcreteScope    ConcreteSlot    Assignment    VariableAssignAction    PropertyAssignAction    FunctionCallBuilder    ExternFunctionCall    FunctionCall    NativeCallFunctionCall    CreateScope    ConcreteJSTypePair    [METHOD]    process    [RETURN_TYPE]    void        Node    externRoot    Node    jsRoot    [VARIABLES]    Action    action    Set    allInstantiatedTypes    workSet    JSType    jstype    Node    expr    expression    externRoot    firstArgument    jsRoot    receiver    String    NON_HALTING_ERROR_MSG    name    propName    ConcreteType    concrete    thisType    type    int    hashcode    i    long    iterations    maxIterations    Assignment    assign    AbstractCompiler    compiler    ConcreteSlot    slot    boolean    changed    inExterns    isCallFunction    isNewCall    ConcreteScope    parent    scope    topScope    varScope    List    actions    argTypes    workList    Map    functionFromDeclaration    functionFromJSType    instanceFromJSType    slots    typeIntersectionMemos        	closure_17182_TightenTypes_1_1	166	1	src/com/google/javascript/jscomp/TightenTypes.java
1241	[PATCH]    if    (descend)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.RuntimeException:    INTERNAL    COMPILER    ERROR.    testExternedPropertyNameDefinedByObjectLiteral    [CONTEXT]    n.isScript())    {    Preconditions.checkNotNull(inputId);    sourceName    =    NodeUtil.getSourceName(n);    }            boolean    descend    =    parent    ==    null    ||    !parent.isFunction()    ||    n    ==    parent.getFirstChild()    ||    parent    ==    scope.getRootNode();        [BUGGY]    if    (false)    {            if    (NodeUtil.isStatementParent(n))    {    for    (Node    child    =    n.getFirstChild();    child    !=    null;    child    =    child.getNext())    {    if    (NodeUtil.isHoistedFunctionDeclaration(child))    {    defineFunctionLiteral(child);    }    }    [CLASS]        TypedScopeCreator    DeferredSetType    DiscoverEnumsAndTypedefs    AbstractScopeBuilder    CollectProperties    StubDeclaration    GlobalScopeBuilder    LocalScopeBuilder    FirstOrderFunctionAnalyzer    [METHOD]    shouldTraverse    [RETURN_TYPE]    boolean        NodeTraversal    t    Node    n    Node    parent    [VARIABLES]    JSType    fnThisType    globalThis    t    thisType    type    NodeTraversal    t    Node    child    firstChild    functionNode    n    nameNode    node    parent    root    scriptRoot    valueNode    String    DELEGATE_PROXY_SUFFIX    name    ownerName    scriptName    sourceName    TypeValidator    validator    ObjectType    unknownType    AbstractCompiler    compiler    ErrorReporter    typeParsingErrorReporter    JSTypeRegistry    registry    typeRegistry    boolean    descend    isExtern    Scope    globalScope    newScope    parent    s    scope    DiagnosticType    CONSTRUCTOR_EXPECTED    CTOR_INITIALIZER    ENUM_INITIALIZER    IFACE_INITIALIZER    LENDS_ON_NON_OBJECT    MALFORMED_TYPEDEF    UNKNOWN_LENDS    CodingConvention    codingConvention    InputId    inputId    List    deferredSetTypes    delegateProxyPrototypes    lentObjectLiterals    nonExternFunctions    stubDeclarations    varsToRemove    Map    data    delegateCallingConventions    functionAnalysisResults    outParam        	closure_15331_TypedScopeCreator_1_1	495	1	src/com/google/javascript/jscomp/TypedScopeCreator.java
1242	[PATCH]    if    (propName.equals(   "apply   ")    ||    propName.equals(   "call   "))    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError:    expected:<true>    but    was:<false>    testFunctionGetIsAliased    [CONTEXT]    public    Collection<Definition>    getDefinitionsReferencedAt(Node    useSite)    {    if    (definitionSiteMap.containsKey(useSite))    {    return    null;    }    if    (useSite.isGetProp())    {    String    propName    =    useSite.getLastChild().getString();    [BUGGY]    if    (true)    {    useSite    =    useSite.getFirstChild();    }    }    String    name    =    getSimplifiedName(useSite);    if    (name    !=    null)    {    Collection<Definition>    defs    =    nameDefinitionMultimap.get(name);    if    (!defs.isEmpty())    {    return    defs;    }    else    {    [CLASS]        SimpleDefinitionFinder    DefinitionGatheringCallback    UseSiteGatheringCallback    [METHOD]    getDefinitionsReferencedAt    [RETURN_TYPE]    Collection        Node    useSite    [VARIABLES]    Multimap    nameDefinitionMultimap    nameUseSiteMultimap    AbstractCompiler    compiler    boolean    inExterns    Node    useSite    Collection    defs    String    name    propName    Map    definitionSiteMap        	closure_20091_SimpleDefinitionFinder_1_1	84	1	src/com/google/javascript/jscomp/SimpleDefinitionFinder.java
1243	[PATCH]    if(currentProp.isQuotedString())    {	[BUG]    [BUGGY]    if(true)    {    [FE]    junit.framework.AssertionFailedError:    testJqueryExtendExpansion    [CONTEXT]    fncBlock.addChildrenToFront(IR.exprResult(assign).srcref(n));    }    while    (extendArg.hasChildren())    {    Node    currentProp    =    extendArg.removeFirstChild();    currentProp.setType(Token.STRING);    Node    propValue    =    currentProp.removeFirstChild();    Node    newProp;    [BUGGY]    if(true)    {    newProp    =    IR.getelem(objectToExtend.cloneTree(),    currentProp).srcref(currentProp);    }    else    {    newProp    =    IR.getprop(objectToExtend.cloneTree(),    currentProp).srcref(currentProp);    }    Node    assignNode    =    IR.assign(newProp,    propValue).srcref(currentProp);    fncBlock.addChildToBack(IR.exprResult(assignNode).srcref(currentProp));    }    [CLASS]        ExpandJqueryAliases    FindCallbackArgumentReferences    [METHOD]    maybeExpandJqueryExtendCall    [RETURN_TYPE]    void        Node    n    [VARIABLES]    AbstractCompiler    compiler    Set    JQUERY_EXTEND_NAMES    boolean    ensureObjectDefined    Scope    startingScope    DiagnosticType    JQUERY_UNABLE_TO_EXPAND_INVALID_LIT_ERROR    JQUERY_UNABLE_TO_EXPAND_INVALID_NAME_ERROR    JQUERY_USELESS_EACH_EXPANSION    CodingConvention    convention    PeepholeOptimizationsPass    peepholePasses    Node    assign    assignNode    assignVal    callTarget    currentProp    extendArg    fnc    fncBlock    n    newProp    objectToExtend    parent    propValue    targetVal    List    keyReferences    valueReferences    String    JQUERY_EXPANDED_EACH_NAME    keyName    keyString    qName    qname    valueName    valueString    Logger    logger        	closure_26657_ExpandJqueryAliases_1_1	222	1	src/com/google/javascript/jscomp/ExpandJqueryAliases.java
1244	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError:    testIssue297    [CONTEXT]    static    boolean    isRelationalOperation(Node    n)    {    switch    (n.getType())    {    case    Token.GT:    case    Token.GE:    case    Token.LT:    case    Token.LE:        [BUGGY]    return    false;    }    return    false;    }    [CLASS]        NodeUtil    1    NumbericResultPredicate    BooleanResultPredicate    MayBeStringResultPredicate    VarCollector    MatchNameNode    MatchNodeType    MatchDeclaration    MatchNotFunction    MatchShallowStatement    [METHOD]    isRelationalOperation    [RETURN_TYPE]    boolean        Node    n    [VARIABLES]    BooleanResultPredicate    BOOLEAN_RESULT_PREDICATE    Set    BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS    CONSTRUCTORS_WITHOUT_SIDE_EFFECTS    OBJECT_METHODS_WITHOUT_SIDEEFFECTS    REGEXP_METHODS    STRING_REGEXP_METHODS    NumbericResultPredicate    NUMBERIC_RESULT_PREDICATE    boolean    MayBeStringResultPredicate    MAY_BE_STRING_PREDICATE    Node    n    char    LARGEST_BASIC_LATIN    String    JSC_PROPERTY_NAME_FN    childValue    name    rawJsString    s    value    Map    vars    long    MAX_POSITIVE_INTEGER_NUMBER    longValue    int    c    end    nextSkipSlot    nextSlot    start    type    Predicate    IMMUTABLE_PREDICATE    MATCH_NOT_FUNCTION        	closure_28334_NodeUtil_1_1	546	1	src/com/google/javascript/jscomp/NodeUtil.java
1245	[PATCH]    for    (int    n    =    1;    n    <    startLine;    n++)    {	[BUG]    [BUGGY]    for    (int    n    =    0;    n    <    startLine;    n++)    {    [FE]    junit.framework.AssertionFailedError:    foo:second    line    testExcerptRegion    [CONTEXT]    public    Region    getRegion(int    lineNumber)    {    String    js    =       "   ";    try    {    js    =    getCode();    }    catch    (IOException    e)    {    return    null;    }    int    pos    =    0;    int    startLine    =    Math.max(1,    lineNumber    -    (SOURCE_EXCERPT_REGION_LENGTH    +    1)    /    2    +    1);    [BUGGY]    for    (int    n    =    0;    n    <    startLine;    n++)    {    int    nextpos    =    js.indexOf('\n',    pos);    if    (nextpos    ==    -1)    {    break;    }    pos    =    nextpos    +    1;    }    int    end    =    pos;    int    endLine    =    startLine;    for    (int    n    =    0;    n    <    SOURCE_EXCERPT_REGION_LENGTH;    n++,    endLine++)    {    end    =    js.indexOf('\n',    end);    [CLASS]        SourceFile    Builder    Preloaded    Generated    OnDisk    [METHOD]    getRegion    [RETURN_TYPE]    Region        int    lineNumber    [VARIABLES]    boolean    isExternFile    newVal    Charset    c    charset    int[]    lineOffsets    String    code    fileName    inputCharset    js    originalPath    sourceCode    IOException    e    File    file    long    serialVersionUID    int    SOURCE_EXCERPT_REGION_LENGTH    end    endLine    ii    insertionPoint    last    line    lineNumber    lineno    n    nextpos    offset    pos    search    startLine    Generator    generator        	closure_7327_SourceFile_1_1	269	1	src/com/google/javascript/jscomp/SourceFile.java
1246	[PATCH]    if    (sourceCursor    ==    sourceEnd)    {	[BUG]    [BUGGY]    if    (sourceCursor    <=    sourceEnd)    {    [FE]    junit.framework.ComparisonFailure:    expected:<...testcode   ",       "count   ":    [6    }    testGoldenOutput5    [CONTEXT]    cursor++;    --ungetCursor;    if    (charno    ==    -1)    {    charno    =    getOffset();    }    return    ungetBuffer[ungetCursor];    }    for(;;)    {    int    c;    [BUGGY]    if    (sourceCursor    <=    sourceEnd)    {    hitEOF    =    true;    if    (charno    ==    -1)    {    charno    =    getOffset();    }    return    EOF_CHAR;    }    cursor++;    c    =    sourceString.charAt(sourceCursor++);        [CLASS]        JsDocTokenStream    [METHOD]    getChar    [RETURN_TYPE]    int        [VARIABLES]    int[]    ungetBuffer    boolean    hitEOF    String    sourceString    string    int    EOF_CHAR    N    c    c1    c2    charno    cursor    initCharno    initLineno    lineEndChar    lineStart    lineno    sourceCursor    sourceEnd    stringBufferTop    test    tokenBeg    tokenEnd    ungetCursor    char[]    stringBuffer    tmp        	closure_47308_JsDocTokenStream_1_1	348	1	src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java
1247	[PATCH]    c    ^=    (b    >>>    15);	[BUG]    [BUGGY]    c    ^=    (b    <<    15);    [FE]    junit.framework.AssertionFailedError:    testReplaceTwoPlaceholdersNonAlphaOrder    [CONTEXT]    c    -=    b;    c    ^=    (b    >>>    5);    a    -=    b;    a    -=    c;    a    ^=    (c    >>>    3);    b    -=    c;    b    -=    a;    b    ^=    (a    <<    10);    c    -=    a;    c    -=    b;    [BUGGY]    c    ^=    (b    <<    15);    }    c    +=    limit    -    start;    switch    (limit    -    i)    {    case    11:    c    +=    (str[i    +    10]    &    0xff)    <<    24;    case    10:    c    +=    (str[i    +    9]    &    0xff)    <<    16;    case    9:    c    +=    (str[i    +    8]    &    0xff)    <<    8;    [CLASS]        GoogleJsMessageIdGenerator    FP    MessageId    [METHOD]    hash32    [RETURN_TYPE]    int        byte[]    str    int    start    int    limit    int    c    [VARIABLES]    byte[]    str    String    meaning    projectId    projectScopedMeaning    str    tcValue    boolean    int    a    b    c    i    limit    start        	closure_30887_GoogleJsMessageIdGenerator_1_1	153	1	src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java
1248	[PATCH]    if    (isNestedAssign(parent))    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError:    There    should    be    one    warning,    repeated    1    time(s).    expected:<1>    but    was:<2>    testNamespaceResetInLocalScope1    [CONTEXT]    void    handleSetFromLocal(NodeTraversal    t,    Node    n,    Node    parent,    String    name)    {    if    (maybeHandlePrototypePrefix(t,    n,    parent,    name))    return;    Name    nameObj    =    getOrCreateName(name);    Ref    set    =    new    Ref(t,    n,    nameObj,    Ref.Type.SET_FROM_LOCAL,    currentPreOrderIndex++);    nameObj.addRef(set);        [BUGGY]    if    (true)    {        Ref    get    =    new    Ref(t,    n,    nameObj,    Ref.Type.ALIASING_GET,    currentPreOrderIndex++);    nameObj.addRef(get);    Ref.markTwins(set,    get);    }    }    [CLASS]        GlobalNamespace    NodeFilter    BuildGlobalNamespace    Name    Type    Ref    Type    Tracker    [METHOD]    handleSetFromLocal    [RETURN_TYPE]    void        NodeTraversal    t    Node    n    Node    parent    String    name    [VARIABLES]    PrintStream    stream    Set    newNodes    previousSymbolsInTree    NodeTraversal    t    Node    current    externsRoot    gramps    greatGramps    lvalue    n    node    parent    root    rvalue    second    third    valueNode    String    baseName    key    name    topVarName    JSDocInfo    docInfo    info    int    aliasingGets    callGets    currentPreOrderIndex    deleteProps    firstDotIndex    globalSets    index    localSets    preOrderIndex    totalGets    Predicate    isInterestingSymbol    nodeFilter    Name    name    nameObj    parent    slot    AbstractCompiler    compiler    Type    ALIASING_GET    CALL_GET    DELETE_PROP    DIRECT_GET    FUNCTION    GET    OBJECTLIT    OTHER    PROTOTYPE_GET    SET    SET_FROM_GLOBAL    SET_FROM_LOCAL    t    type    Ref    declaration    get    original    set    twin    boolean    declaredType    generated    hasDeclaredTypeDescendant    inExterns    isPropAssign    isSet    Scope    externsScope    s    scope    JSModule    module    List    globalNames    props    refs    StaticSourceFile    source    Map    nameMap        	closure_16573_GlobalNamespace_1_1	613	1	src/com/google/javascript/jscomp/GlobalNamespace.java
1249	[PATCH]    return    this    ==    EVERY_LOCATION    &&    otherLocation    ==    EVERY_LOCATION;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError    testDegenerateUnsafeMoves    [CONTEXT]    public    boolean    intersectsLocation(EffectLocation    otherLocation)    {    [BUGGY]    return    false;    }    [CLASS]        SideEffectsAnalysis    LocationAbstractionMode    1    2    3    AbstractMotionEnvironment    IntraproceduralMotionEnvironment    CrossModuleMotionEnvironment    RawMotionEnvironment    LocationSummary    LocationAbstraction    DegenerateLocationAbstraction    DegenerateEffectLocation    VisibilityLocationAbstraction    1    VisibilityBasedEffectLocation    VariableUseDeclarationMap    [METHOD]    intersectsLocation    [RETURN_TYPE]    boolean        EffectLocation    otherLocation    [VARIABLES]    AbstractCompiler    compiler    VariableUseDeclarationMap    variableMap    variableUseMap    Set    environment    environmentNodes    nodes    boolean    EffectLocation    EVERY_LOCATION    NO_LOCATION    environmentModSet    environmentRefSet    modAccumulator    modSet    otherLocation    refAccumulator    refSet    sourceModSet    sourceRefSet    VariableVisibilityAnalysis    variableVisibility    variableVisibilityAnalysis    Map    referencesByNameNode    LocationAbstractionMode    DEGENERATE    VISIBILITY_BASED    locationAbstractionIdentifier    locationAbstractionMode    LocationAbstraction    locationAbstraction    int    CAPTURED_LOCAL_VARIABLE_LOCATION_MASK    GLOBAL_VARIABLE_LOCATION_MASK    HEAP_LOCATION_MASK    LOCAL_VARIABLE_LOCATION_MASK    UNKNOWN_LOCATION_MASK    VISIBILITY_LOCATION_NONE    indexOfChildInParent    nodeType    visibilityMask    Predicate    NOT_FUNCTION_PREDICATE    isEarlyExitPredicate        	closure_42810_SideEffectsAnalysis_1_1	672	1	src/com/google/javascript/jscomp/SideEffectsAnalysis.java
1250	[PATCH]    if    (isEmptyType()    ||    that.isEmptyType())    {	[BUG]    [BUGGY]    if    (isEmptyType())    {    [FE]    junit.framework.AssertionFailedError:    unexpected    warnings(s):    testBug901455    [CONTEXT]    public    final    boolean    canTestForShallowEqualityWith(JSType    that)    {    [BUGGY]    if    (isEmptyType())    {    return    isSubtype(that)    ||    that.isSubtype(this);    }    JSType    inf    =    getGreatestSubtype(that);    return    !inf.isEmptyType()    ||                    inf    ==    registry.getNativeType(JSTypeNative.LEAST_FUNCTION_TYPE);    [CLASS]        JSType    1    TypePair    [METHOD]    canTestForShallowEqualityWith    [RETURN_TYPE]    boolean        JSType    that    [VARIABLES]    JSTypeRegistry    registry    boolean    aIsEmpty    bIsEmpty    inTemplatedCheckVisit    paramsMatch    resolved    result    thatUnknown    thisUnknown    JSType    aType    autobox    bType    inf    meet    otherType    resolveResult    restricted    t1    t2    templatizedType    templatizedType1    templatizedType2    that    thatRootType    thisRootType    type    type1    type2    typeA    typeB    ImmutableList    templateKeys    templatizedTypes    templatizedTypes1    templatizedTypes2    CanCastToVisitor    CAN_CAST_TO_VISITOR    String    EMPTY_TYPE_COMPONENT    NOT_A_CLASS    NOT_A_TYPE    UNKNOWN_NAME    displayName    key    pname    propertyName    long    serialVersionUID    int    ENUMDECL    NOT_ENUMDECL    i    index    keysLength    nTemplatizedTypes1    nTemplatizedTypes2    typesLength    Comparator    ALPHA        	closure_5827_JSType_1_1	976	1	src/com/google/javascript/rhino/jstype/JSType.java
1251	[PATCH]    return    n    !=    parent.getFirstChild();	[BUG]    [BUGGY]    return    true;    [FE]    junit.framework.ComparisonFailure:    expected:<try    {    testPrettyPrinter3    [CONTEXT]    int    type    =    parent.getType();    switch    (type)    {    case    Token.DO:        return    false;    case    Token.FUNCTION:        return    false;    case    Token.TRY:        [BUGGY]    return    true;    case    Token.CATCH:        return    !NodeUtil.hasFinally(getTryForCatch(parent));    case    Token.IF:        return    n    ==    parent.getLastChild();    }    }    return    true;    }    [CLASS]        CodePrinter    MappedCodePrinter    Mapping    PrettyCodePrinter    CompactCodePrinter    Builder    Format    [METHOD]    breakAfterBlockFor    [RETURN_TYPE]    boolean        Node    n    boolean    isStatementContext    [VARIABLES]    StringBuilder    code    Node    n    node    parent    root    String    INDENT    op    str    FilePosition    end    position    start    Deque    mappings    int    DEFAULT_LINE_LENGTH_THRESHOLD    charIndex    characterPosition    i    indent    index    line    lineIndex    lineLength    lineLengthThreshold    lineStartPosition    originalChar    originalLine    preferredBreakPosition    prevCutPosition    prevLineStartPosition    type    boolean    binOp    createSourceMap    createSrcMap    insertion    isStatementContext    lineBreak    outputTypes    preferLineBreakAtEndOfFile    statementContext    tagAsStrict    Format    COMPACT    PRETTY    TYPED    DetailLevel    sourceMapDetailLevel    SourceMap    map    sourceMap    CompilerOptions    options    List    allMappings        	closure_23685_CodePrinter_1_1	383	1	src/com/google/javascript/jscomp/CodePrinter.java
1252	[PATCH]    if    (setters.contains(key.getString()))    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    There    should    be    one    warning,    repeated    1    time(s).    expected:<1>    but    was:<0>    testDuplicateObjectLiteralKey    [CONTEXT]    if    (!key.isSetterDef())    {        if    (getters.contains(key.getString()))    {    t.report(key,    DUPLICATE_OBJECT_KEY);    }    else    {    getters.add(key.getString());    }    }    if    (!key.isGetterDef())    {        [BUGGY]    if    (false)    {    t.report(key,    DUPLICATE_OBJECT_KEY);    }    else    {    setters.add(key.getString());    }    }    }    }    [CLASS]        StrictModeCheck    NonExternChecks    [METHOD]    checkObjectLiteral    [RETURN_TYPE]    void        NodeTraversal    t    Node    n    [VARIABLES]    AbstractCompiler    compiler    boolean    noCajaChecks    noVarCheck    Set    getters    setters    NodeTraversal    t    DiagnosticType    ARGUMENTS_ASSIGNMENT    ARGUMENTS_DECLARATION    BAD_FUNCTION_DECLARATION    DELETE_VARIABLE    DUPLICATE_OBJECT_KEY    EVAL_ASSIGNMENT    EVAL_DECLARATION    EVAL_USE    ILLEGAL_NAME    UNKNOWN_VARIABLE    Node    key    n        	closure_43016_StrictModeCheck_1_1	210	1	src/com/google/javascript/jscomp/StrictModeCheck.java
1253	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError:    testLoopWithFunctionWithFunction    [CONTEXT]    static    boolean    isCandidateUsage(Node    name)    {    Node    parent    =    name.getParent();    Preconditions.checkState(name.isName());    if    (parent.isVar()    ||    parent.isFunction())    {            [BUGGY]    return    false;    }    if    (parent.isCall()    &&    parent.getFirstChild()    ==    name)    {        return    true;    }                    [CLASS]        InlineFunctions    FindCandidateFunctions    CallVisitor    FindCandidatesReferences    Inline    FunctionState    NamedFunction    FunctionVar    FunctionExpression    Reference    [METHOD]    isCandidateUsage    [RETURN_TYPE]    boolean        Node    name    [VARIABLES]    Set    fnNames    namesToAlias    Node    block    callNode    child    externs    fn    fnIdentifingNode    fnNode    gramps    n    name    nameNode    parent    root    safeFnNode    var    String    fakeName    fnName    name    SpecializationState    specializationState    int    callsSeen    index    Function    fn    AbstractCompiler    compiler    boolean    assumeMinimumCapture    assumeStrictThis    blockFunctionInliningEnabled    decompose    hasInnerFunctions    inline    inlineDirectly    inlineGlobalFunctions    inlineLocalFunctions    inlined    referencesThis    remove    requiresDecomposition    CallVisitorCallback    callback    JSModule    module    Map    anonFns    anonFunctionMap    fns    functionMap    references    FunctionInjector    injector        	closure_31393_InlineFunctions_1_1	433	1	src/com/google/javascript/jscomp/InlineFunctions.java
1254	[PATCH]    if    (scopeRoots.isEmpty())    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    java.lang.RuntimeException:    java.lang.RuntimeException:    INTERNAL    COMPILER    ERROR.    testFunctionNameOutput1    [CONTEXT]    public    Scope    getScope()    {    Scope    scope    =    scopes.isEmpty()    ?    null    :    scopes.peek();    [BUGGY]    if    (true)    {    return    scope;    }    Iterator<Node>    it    =    scopeRoots.descendingIterator();    while    (it.hasNext())    {    scope    =    scopeCreator.createScope(it.next(),    scope);    scopes.push(scope);    }    scopeRoots.clear();        [CLASS]        NodeTraversal    AbstractPostOrderCallback    AbstractScopedCallback    AbstractShallowCallback    AbstractShallowStatementCallback    AbstractNodeTypePruningCallback    [METHOD]    getScope    [RETURN_TYPE]    Scope        [VARIABLES]    ScopedCallback    scopeCallback    Set    nodeTypes    Node    args    body    child    cur    curNode    fnName    n    next    node    parent    root    scopeRoot    ScopeCreator    scopeCreator    String    MISSING_SOURCE    label    message    sourceFileName    sourceName    src    Deque    cfgs    scopeRoots    scopes    AbstractCompiler    compiler    Callback    callback    cb    boolean    include    isFunctionExpression    Scope    scope    DiagnosticType    NODE_TRAVERSAL_ERROR    InputId    inputId    Iterator    it        	closure_4156_NodeTraversal_1_1	598	1	src/com/google/javascript/jscomp/NodeTraversal.java
1255	[PATCH]    if    (!modules.isEmpty())    {	[BUG]    [BUGGY]    if    (!true)    {    [FE]    junit.framework.ComparisonFailure:    expected:<[var    module$foo$bar={},module$foo$bar={foo:1};]>    but    was:<[]>    testModuleJSON    [CONTEXT]    cjs.process(null,    root);    JSModule    m    =    cjs.getModule();    if    (m    !=    null)    {    modulesByName.put(m.getName(),    m);    modulesByInput.put(input,    m);    }    }    }    if    (options.processCommonJSModules)    {    List<JSModule>    modules    =    Lists.newArrayList(modulesByName.values());    [BUGGY]    if    (!true)    {    this.modules    =    modules;    this.moduleGraph    =    new    JSModuleGraph(this.modules);    }    for    (JSModule    module    :    modules)    {    for    (CompilerInput    input    :    module.getInputs())    {    for    (String    require    :    input.getRequires())    {    JSModule    dependency    =    modulesByName.get(require);    if    (dependency    ==    null)    {    report(JSError.make(MISSING_ENTRY_ERROR,    require));    }    else    {    [CLASS]        Compiler    1    3    4    2    5    6    7    8    9    10    CodeBuilder    IntermediateState    [METHOD]    processAMDAndCommonJSModules    [RETURN_TYPE]    void        [VARIABLES]    FunctionInformationMap    functionInformationMap    ErrorManager    errorManager    StringBuilder    debugLog    sb    Config    parserConfig    Node    externAndJsRoot    externsRoot    jsRoot    n    n1    n2    newRoot    oldRoot    root    PerformanceTracker    tracker    PassConfig    passes    String    CONFIG_RESOURCE    SINGLETON_MODULE_NAME    SYNTHETIC_EXTERNS    comment    currentPassName    externExports    inputName    lastPassName    moduleName    name    passName    passToCheck    provide    require    LifeCycleStage    lifeCycleStage    Logger    logger    PassFactory    sanityCheck    long    COMPILER_STACK_SIZE    result    serialVersionUID    TypeValidator    typeValidator    JSTypeRegistry    typeRegistry    ErrorReporter    defaultErrorReporter    oldErrorReporter    RecentChange    recentChange    GlobalVarReferenceMap    globalRefMap    DiagnosticType    DUPLICATE_EXTERN_INPUT    DUPLICATE_INPUT    EMPTY_MODULE_LIST_ERROR    EMPTY_ROOT_MODULE_ERROR    MISSING_ENTRY_ERROR    MODULE_DEPENDENCY_ERROR    MOTION_ITERATIONS_ERROR    OPTIMIZE_LOOP_ERROR    SourceMap    sourceMap    List    codeChangeHandlers    externs    files    guards    inputs    modules    WarningsGuard    warningsGuard    ReverseAbstractInterpreter    abstractInterpreter    PrintStream    outStream    stream    double    progress    Tracer    currentTracer    t    tracer    ProcessCommonJSModules    cjs    JSModuleGraph    e    moduleGraph    int    colCount    lineCount    syntheticCodeId    uniqueNameId    Exception    e    Thread    compilerThread    CompilerInput    input    newInput    oldInput    previous    synthesizedExternsInput    boolean    colorize    devMode    dumpTraceReport    hasRegExpGlobalReferences    isExtern    staleInputs    useThreads    SortedDependencies    sorter    State    passConfigState    state    CodingConvention    defaultCodingConvention    CompilerOptions    options    ExecutorService    compilerExecutor    JSModule    dependency    m    module    root    Map    injectedLibraries    inputMap    inputsById    modulesByInput    modulesByName        	closure_6769_Compiler_1_1	1511	1	src/com/google/javascript/jscomp/Compiler.java
1256	[PATCH]    if    (var    !=    null)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    java.lang.NullPointerException    testLotsOfVars    [CONTEXT]                        JSType    leftType    =    getJSType(lvalue);    if    (lvalue.isQualifiedName())    {        JSType    rvalueType    =    getJSType(assign.getLastChild());    Var    var    =    t.getScope().getVar(lvalue.getQualifiedName());    [BUGGY]    if    (true)    {    if    (var.isTypeInferred())    {    return;    }    if    (NodeUtil.getRootOfQualifiedName(lvalue).isThis()    &&    t.getScope()    !=    var.getScope())    {        return;    }        [CLASS]        TypeCheck    [METHOD]    visitAssign    [RETURN_TYPE]    void        NodeTraversal    t    Node    assign    [VARIABLES]    ReverseAbstractInterpreter    reverseInterpreter    JSType    expectedType    jsType    leftType    objectJsType    rightType    rvalueType    NodeTraversal    t    DiagnosticGroup    ALL_DIAGNOSTICS    CheckLevel    reportMissingOverride    reportUnknownTypes    Var    var    Node    assign    lvalue    object    property    rightChild    rvalue    FunctionType    functionType    String    OVERRIDING_PROTOTYPE_WITH_NON_OBJECT    funName    functionPrivateName    message    pname    s    MemoizedScopeCreator    scopeCreator    JSDocInfo    info    int    noTypeCheckSection    nullCount    typedCount    unknownCount    TypeValidator    validator    ObjectType    type    AbstractCompiler    compiler    JSTypeRegistry    typeRegistry    boolean    enterSection    externs    inExterns    report    reportMissingProperties    typeable    Scope    outerScope    topScope    DiagnosticType    BAD_DELETE    BAD_IMPLEMENTED_TYPE    BIT_OPERATION    CONFLICTING_EXTENDED_TYPE    CONFLICTING_IMPLEMENTED_TYPE    CONSTRUCTOR_NOT_CALLABLE    DETERMINISTIC_TEST    DETERMINISTIC_TEST_NO_RESULT    ENUM_DUP    ENUM_NOT_CONSTANT    EXPECTED_THIS_TYPE    FUNCTION_MASKS_VARIABLE    HIDDEN_INTERFACE_PROPERTY    HIDDEN_SUPERCLASS_PROPERTY    HIDDEN_SUPERCLASS_PROPERTY_MISMATCH    ILLEGAL_IMPLICIT_CAST    ILLEGAL_OBJLIT_KEY    ILLEGAL_PROPERTY_CREATION    INCOMPATIBLE_EXTENDED_PROPERTY_TYPE    INEXISTENT_ENUM_ELEMENT    INEXISTENT_PROPERTY    INTERFACE_FUNCTION_NOT_EMPTY    INTERFACE_METHOD_OVERRIDE    INVALID_INTERFACE_MEMBER_DECLARATION    IN_USED_WITH_STRUCT    MULTIPLE_VAR_DEF    NOT_A_CONSTRUCTOR    NOT_CALLABLE    UNEXPECTED_TOKEN    UNKNOWN_EXPR_TYPE    UNKNOWN_OVERRIDE    UNRESOLVED_TYPE    WRONG_ARGUMENT_COUNT    diagnosticType    InferJSDocInfo    inferJSDocInfo        	closure_14294_TypeCheck_1_1	975	1	src/com/google/javascript/jscomp/TypeCheck.java
1257	[PATCH]    }    else    if    (!alternate.isParameterizedType())    {	[BUG]    [BUGGY]    }    else    if    (!true)    {    [FE]    java.lang.RuntimeException:    INTERNAL    COMPILER    ERROR.    testTypeAnnotationsTypeDef    [CONTEXT]                if    (!current.isParameterizedType())    {    if    (alternate.isSubtype(current))    {        return    this;    }        [BUGGY]    }    else    if    (!true)    {    if    (current.isSubtype(alternate))    {        removeCurrent    =    true;    }        }    else    {    Preconditions.checkState(current.isParameterizedType()    &&    alternate.isParameterizedType());    ParameterizedType    parameterizedAlternate    =    alternate.toMaybeParameterizedType();    ParameterizedType    parameterizedCurrent    =    current.toMaybeParameterizedType();    [CLASS]        UnionTypeBuilder    [METHOD]    addAlternate    [RETURN_TYPE]    UnionTypeBuilder        JSType    alternate    [VARIABLES]    ParameterizedType    parameterizedAlternate    parameterizedCurrent    UnionType    union    JSTypeRegistry    registry    boolean    areAllUnknownsChecked    isAllType    isAlternateUnknown    isNativeUnknownType    removeCurrent    JSType    alternate    alternateTypeParameter    current    currentTypeParameter    merged    result    specialCaseType    unionAlt    FunctionType    other    supremum    Iterator    it    List    alternates    long    serialVersionUID    int    DEFAULT_MAX_UNION_SIZE    currentIndex    functionTypePosition    maxUnionSize        	closure_12753_UnionTypeBuilder_1_1	215	1	src/com/google/javascript/rhino/jstype/UnionTypeBuilder.java
1258	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError:    unexpected    warnings(s):    testBug2341812    [CONTEXT]    boolean    addImplementedInterface(JSTypeExpression    interfaceName)    {    lazyInitInfo();    if    (info.implementedInterfaces    ==    null)    {    info.implementedInterfaces    =    Lists.newArrayListWithCapacity(2);    }    if    (info.implementedInterfaces.contains(interfaceName))    {    return    false;    }    info.implementedInterfaces.add(interfaceName);    [BUGGY]    return    false;    }    [CLASS]        JSDocInfo    Visibility    LazilyInitializedInfo    LazilyInitializedDocumentation    StringPosition    TrimmedStringPosition    NamePosition    TypePosition    Marker    [METHOD]    addImplementedInterface    [RETURN_TYPE]    boolean        JSTypeExpression    interfaceName    [VARIABLES]    Set    modifies    suppressions    ImmutableList    templateTypeNames    Node    associatedNode    String    author    blockDescription    deprecated    desc    description    fileOverview    item    lendsName    license    meaning    modifies    name    parameter    reason    reference    returnDescription    sourceComment    suppression    throwsDescription    version    long    serialVersionUID    StringPosition    description    p    int    MASK_CONSISTIDGEN    MASK_CONSTANT    MASK_CONSTRUCTOR    MASK_DEFINE    MASK_DEPRECATED    MASK_DICT    MASK_EXPORT    MASK_EXPOSE    MASK_EXTERNS    MASK_FILEOVERVIEW    MASK_FLAGS    MASK_HIDDEN    MASK_IDGEN    MASK_IMPLICITCAST    MASK_INTERFACE    MASK_JAVADISPATCH    MASK_NOALIAS    MASK_NOCHECK    MASK_NOCOMPILE    MASK_NOSHADOW    MASK_NOSIDEEFFECTS    MASK_OVERRIDE    MASK_PRESERVETRY    MASK_STALBEIDGEN    MASK_STRUCT    MASK_TYPEFIELD    TYPEFIELD_ENUM    TYPEFIELD_RETURN    TYPEFIELD_TYPE    TYPEFIELD_TYPEDEF    bitset    mask    typefield    TrimmedStringPosition    annotation    name    p    TypePosition    p    type    boolean    brackets    includeDocumentation    newVal    value    SourcePosition    nameNode    p    LazilyInitializedDocumentation    documentation    JSTypeExpression    baseType    interfaceName    jsType    thisType    type    Visibility    INHERITED    PRIVATE    PROTECTED    PUBLIC    visibility    List    authors    extendedInterfaces    implementedInterfaces    markers    sees    templateTypeNames    thrownTypes    LazilyInitializedInfo    info    Map    parameters    throwsDescriptions        	closure_11477_JSDocInfo_1_1	1273	1	src/com/google/javascript/rhino/JSDocInfo.java
1259	[PATCH]    return    (thisValue    !=    0.0)    ||    (1/thisValue    ==    1/thatValue);	[BUG]    [BUGGY]    return    (thisValue    !=    0.0)    ||    (1/thisValue    ==    1    -    thatValue);    [FE]    junit.framework.AssertionFailedError:    testGlobalAlias    [CONTEXT]    boolean    isEquivalentTo(Node    node,    boolean    compareJsType,    boolean    recurse)    {    boolean    equivalent    =    super.isEquivalentTo(node,    compareJsType,    recurse);    if    (equivalent)    {    double    thisValue    =    getDouble();    double    thatValue    =    ((NumberNode)    node).getDouble();    if    (thisValue    ==    thatValue)    {        [BUGGY]    return    (thisValue    !=    0.0)    ||    (1/thisValue    ==    1    -    thatValue);    }    }    return    false;    }    [CLASS]        Node    NumberNode    StringNode    AbstractPropListItem    ObjectPropListItem    IntPropListItem    SiblingNodeIterable    AncestorIterable    1    FileLevelJsDocBuilder    SideEffectFlags    NodeMismatch    [METHOD]    isEquivalentTo    [RETURN_TYPE]    boolean        Node    node    boolean    compareJsType    boolean    recurse    [VARIABLES]    JSType    jsType    boolean    compareJsType    equivalent    recurse    used    double    d    number    thatValue    thisValue    Node    child    cur    current    first    last    left    mid    mid2    next    node    nodeA    nodeB    parent    right    start    PropListItem    next    propListHead    Object    objectValue    String    str    long    serialVersionUID    int    COLUMN_BITS    COLUMN_MASK    DECR_FLAG    DIRECTIVES    DIRECT_EVAL    EMPTY_BLOCK    FLAG_ARGUMENTS_UNMODIFIED    FLAG_GLOBAL_STATE_UNMODIFIED    FLAG_LOCAL_RESULTS    FLAG_NO_THROWS    FLAG_THIS_UNMODIFIED    FREE_CALL    INCRDECR_PROP    INFERRED_FUNCTION    INPUT_ID    IS_CONSTANT_NAME    IS_DISPATCHER    IS_NAMESPACE    JSDOC_INFO_PROP    LAST_PROP    LENGTH    MAX_COLUMN_NUMBER    NO_SIDE_EFFECTS    OPT_ARG_NAME    ORIGINALNAME_PROP    POST_FLAG    QUOTED_PROP    SIDE_EFFECTS_ALL    SIDE_EFFECTS_FLAGS_MASK    SIDE_EFFECT_FLAGS    SLASH_V    STATIC_SOURCE_FILE    SYNTHETIC_BLOCK_PROP    VAR_ARGS_NAME    charno    i    intValue    lineno    nodeType    propType    sourcePosition    type    value        	closure_7944_Node_1_1	174	1	src/com/google/javascript/rhino/Node.java
1260	[PATCH]    if    (null    ==    pattern    ||    (null    !=    flags    &&    null    !=    flags.getNext()))    {	[BUG]    [BUGGY]    if    (null    ==    pattern    ||    (null    !=    flags.getNext()))    {    [FE]    java.lang.NullPointerException    testVersionSpecificRegExpQuirks    [CONTEXT]    private    Node    tryFoldRegularExpressionConstructor(Node    n)    {    Node    parent    =    n.getParent();    Node    constructor    =    n.getFirstChild();    Node    pattern    =    constructor.getNext();    Node    flags    =    null    !=    pattern    ?    pattern.getNext()    :    null;        [BUGGY]    if    (null    ==    pattern    ||    (null    !=    flags.getNext()))    {        return    n;    }    if    (    pattern.isString()        &&    !   "   ".equals(pattern.getString())            [CLASS]        PeepholeSubstituteAlternateSyntax    1    2    3    FoldArrayAction    [METHOD]    tryFoldRegularExpressionConstructor    [RETURN_TYPE]    Node        Node    n    [VARIABLES]    Pattern    REGEXP_FLAGS_RE    FoldArrayAction    NOT_SAFE_TO_FOLD    SAFE_TO_FOLD_WITHOUT_ARGS    SAFE_TO_FOLD_WITH_ARGS    action    boolean    constructorHasArgs    elseBranchIsExpressionBlock    elseBranchIsVar    late    result    rval    thenBranchIsExpressionBlock    thenBranchIsVar    ImmutableSet    STANDARD_OBJECT_CONSTRUCTORS    DiagnosticType    INVALID_REGULAR_EXPRESSION_FLAGS    Node    constructor    flags    n    parent    pattern    regexLiteral    CodeGenerator    REGEXP_ESCAPER    int    AND_PRECEDENCE    NOT_PRECEDENCE    OR_PRECEDENCE    STRING_SPLIT_OVERHEAD    complementOperator    equivalentResult    newOp    num    op_precedence    precedence    type    Predicate    DONT_TRAVERSE_FUNCTIONS_PREDICATE    isLowerPrecedencePredicate    isPropertyAssignmentInExpressionPredicate        	closure_38501_PeepholeSubstituteAlternateSyntax_1_1	1461	1	src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
1261	[PATCH]    |    ((str[i    +    7]    &    0xff)    <<    24));	[BUG]    [BUGGY]    |    ((str[i    +    7]    &    255)    >>    24));    [FE]    junit.framework.AssertionFailedError:    testReplaceTwoPlaceholdersNonAlphaOrder    [CONTEXT]    int    b    =    0x9e3779b9;    int    i;    for    (i    =    start;    i    +    12    <=    limit;    i    +=    12)    {    a    +=    (((str[i    +    0]    &    0xff)    <<    0)    |    ((str[i    +    1]    &    0xff)    <<    8)    |    ((str[i    +    2]    &    0xff)    <<    16)    |    ((str[i    +    3]    &    0xff)    <<    24));    b    +=    (((str[i    +    4]    &    0xff)    <<    0)    |    ((str[i    +    5]    &    0xff)    <<    8)    |    ((str[i    +    6]    &    0xff)    <<    16)    [BUGGY]    |    ((str[i    +    7]    &    255)    >>    24));    c    +=    (((str[i    +    8]    &    0xff)    <<    0)    |    ((str[i    +    9]    &    0xff)    <<    8)    |    ((str[i    +    10]    &    0xff)    <<    16)    |    ((str[i    +    11]    &    0xff)    <<    24));        a    -=    b;    a    -=    c;    a    ^=    (c    >>>    13);    b    -=    c;    b    -=    a;    [CLASS]        GoogleJsMessageIdGenerator    FP    MessageId    [METHOD]    hash32    [RETURN_TYPE]    int        byte[]    str    int    start    int    limit    int    c    [VARIABLES]    byte[]    str    String    meaning    projectId    projectScopedMeaning    str    tcValue    boolean    int    a    b    c    i    limit    start        	closure_30759_GoogleJsMessageIdGenerator_1_1	121	1	src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java
1262	[PATCH]    (style    ==    JsMessage.Style.CLOSURE    ||    isNewStyleMessage    ||	[BUG]    [BUGGY]    (style    ==    JsMessage.Style.CLOSURE    ||    [FE]    junit.framework.AssertionFailedError:    expected:<1>    but    was:<0>    testClosureMessageWithHelpPostfix    [CONTEXT]    boolean    isMessageName(String    identifier,    boolean    isNewStyleMessage)    {    return    identifier.startsWith(MSG_PREFIX)    &&    [BUGGY]    (style    ==    JsMessage.Style.CLOSURE    ||    !identifier.endsWith(DESC_SUFFIX));    }    [CLASS]        JsMessageVisitor    MalformedException    MessageLocation    [METHOD]    isMessageName    [RETURN_TYPE]    boolean        String    identifier    boolean    isNewStyleMessage    [VARIABLES]    Pattern    CAMELCASE_PATTERN    MSG_UNNAMED_PATTERN    CheckLevel    checkLevel    Node    aNode    argumentNode    assignNode    call    callNode    child    externs    firstArg    fnChild    fnNameNode    getProp    getPropNode    grandParentNode    messageNode    msgNode    msgNodeParent    nameNode    node    objLitNode    parent    parentNode    parentOfVarNode    propNode    returnNode    root    secondArg    sibling    stringLiteralNode    valueNode    varNode    String    DESC_SUFFIX    HIDDEN_DESC_PREFIX    MSG_FALLBACK_FUNCTION_NAME    MSG_FUNCTION_NAME    MSG_PREFIX    PH_JS_PREFIX    PH_JS_SUFFIX    desc    fnName    identifier    message    messageKey    msgName    name    phName    value    IdGenerator    idGenerator    JsMessage    extractedMessage    firstMessage    message    message1    message2    secondMessage    long    serialVersionUID    AbstractCompiler    compiler    boolean    isNewStyleMessage    isUnnamedMessage    isUnnamedMsg    isVar    messageHasDesc    needToCheckDuplications    DiagnosticType    BAD_FALLBACK_SYNTAX    FALLBACK_ARG_ERROR    MESSAGE_DUPLICATE_KEY    MESSAGE_HAS_NO_DESCRIPTION    MESSAGE_HAS_NO_TEXT    MESSAGE_HAS_NO_VALUE    MESSAGE_NODE_IS_ORPHANED    MESSAGE_NOT_INITIALIZED_USING_NEW_SYNTAX    MESSAGE_TREE_MALFORMED    Style    style    Map    googMsgNodes    messageNames    unnamedMessages        	closure_32837_JsMessageVisitor_1_1	842	1	src/com/google/javascript/jscomp/JsMessageVisitor.java
1263	[PATCH]    k    +=    n    -    j;	[BUG]    [BUGGY]    k    +=    n    %    j;    [FE]    java.lang.RuntimeException:    java.lang.ExceptionInInitializerError    testRegExp1    [CONTEXT]    out[k++]    =    start;    out[k++]    =    end;    }    }        if    (i    <    m)    {    System.arraycopy(q,    i,    out,    k,    m    -    i);    k    +=    m    -    i;    }    else    if    (j    <    n)    {    System.arraycopy(r,    j,    out,    k,    n    -    j);    [BUGGY]    k    +=    n    %    j;    }        if    (k    !=    out.length)    {    int[]    clipped    =    new    int[k];    System.arraycopy(out,    0,    clipped,    0,    k);    out    =    clipped;    }    return    new    CharRanges(out);    }    [CLASS]        CharRanges    [METHOD]    union    [RETURN_TYPE]    CharRanges        CharRanges    other    [VARIABLES]    CharRanges    ALL_CODE_UNITS    EMPTY    other    int[]    clipped    members    out    q    r    ranges    boolean    int    a0    a1    b0    b1    end    i    j    k    m    n    start        	closure_48375_CharRanges_1_1	229	1	src/com/google/javascript/jscomp/regex/CharRanges.java
1264	[PATCH]    Preconditions.checkState(childCount    ==    1);	[BUG]    [BUGGY]    Preconditions.checkState(childCount    ==    -1);    [FE]    java.lang.RuntimeException:    java.lang.RuntimeException:    java.lang.IllegalStateException    testFunctionNameOutput3    [CONTEXT]    if    (first    ==    null    ||    first.isEmpty())    {    addIdentifier(n.getString());    }    else    {    [BUGGY]    Preconditions.checkState(childCount    ==    -1);    addIdentifier(n.getString());    cc.addOp(   "=   ",    true);    if    (first.isComma())    {    addExpr(first,    NodeUtil.precedence(Token.ASSIGN),    Context.OTHER);    }    else    {            addExpr(first,    0,    getContextForNoInOperator(context));    }    }    [CLASS]        CodeGenerator    Context    [METHOD]    add    [RETURN_TYPE]    void        Node    n    Context    context    [VARIABLES]    Context    BEFORE_DANGLING_ELSE    IN_FOR_INIT_CLAUSE    OTHER    PRESERVE_BLOCK    START_OF_EXPR    STATEMENT    context    rhsContext    boolean    ambiguousElseClause    funcNeedsParens    hasElse    needsParens    preferLineBreaks    preferSingleQuotes    preserveBlock    trustedStrings    double    d    Node    body    c    catchblock    first    fn    last    n    next    parameters    CodeConsumer    cc    consumer    String    GT_ESCAPED    LT_ESCAPED    identifier    key    name    o    opstr    regexp    str    Map    ESCAPED_JS_STRINGS    CharsetEncoder    outputCharsetEncoder    int    childCount    p    postProp    precedence    type    char[]    HEX_CHARS        	closure_22480_CodeGenerator_1_1	214	1	src/com/google/javascript/jscomp/CodeGenerator.java
1265	[PATCH]    &&    (!arg.isNumber()    ||    arg.getDouble()    !=    0))    {	[BUG]    [BUGGY]    &&    (!arg.isNumber()    ||    arg.getDouble()    !=    1))    {    [FE]    junit.framework.AssertionFailedError:    testCallSiteInteraction    [CONTEXT]    Node    argParent    =    arg.getParent();            if    (canModifyAllSites    ||    (arg.getNext()    ==    null    &&    !NodeUtil.mayHaveSideEffects(arg,    compiler)))    {    toRemove.add(arg);    }    else    {        if    (!NodeUtil.mayHaveSideEffects(arg,    compiler)    [BUGGY]    &&    (!arg.isNumber()    ||    arg.getDouble()    !=    1))    {    toReplaceWithZero.add(arg);    }    }    }    }    }    }    [CLASS]        RemoveUnusedVars    CallSiteOptimizer    Continuation    Assign    [METHOD]    tryRemoveArgFromCallSites    [RETURN_TYPE]    void        Node    function    int    argIndex    boolean    canModifyAllSites    [VARIABLES]    Set    referenced    Node    a    arg    argList    argParent    assignNode    body    c    externs    function    lastArg    lp    n    nameNode    node    param    parent    root    value    Definition    definition    SimpleDefinitionFinder    defFinder    UseSite    site    int    argIndex    Multimap    assignsByVar    classDefiningCalls    continuations    CallSiteOptimizer    callSiteOptimizer    AbstractCompiler    compiler    boolean    canChangeSignature    canModifyAllSites    changeCallSignature    hasFollowing    isPropertyAssign    mayHaveSecondarySideEffects    maybeAliased    modifyAllCallSites    modifyCallSites    modifyCallers    preserveFunctionExpressionNames    removeGlobals    Scope    fnScope    parentScope    scope    CodingConvention    codingConvention    List    allFunctionScopes    maybeUnreferenced    toRemove    toReplaceWithZero    Map    assignsByNode        	closure_40739_RemoveUnusedVars_1_1	559	1	src/com/google/javascript/jscomp/RemoveUnusedVars.java
1266	[PATCH]    if    (externNames.contains(a.oldName))    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError:    testSimpleModeLeavesUnusedParams    [CONTEXT]        List<Assignment>    pendingAssignments    =    new    ArrayList<Assignment>();    List<String>    generatedNamesForAssignments    =    new    ArrayList<String>();    for    (Assignment    a    :    varsToRename)    {    if    (a.newName    !=    null)    {    continue;    }        [BUGGY]    if    (true)    {    continue;    }    String    newName;    if    (a.oldName.startsWith(LOCAL_VAR_PREFIX))    {        newName    =    localNameGenerator.generateNextName();    finalizeNameAssignment(a,    newName);    }    else    {        [CLASS]        RenameVars    Assignment    ProcessVars    1    2    [METHOD]    assignNames    [RETURN_TYPE]    void        Assignment>    varsToRename    [VARIABLES]    Set    externNames    localBleedingFunctions    reservedNames    varsToRename    StringBuilder    assignmentLog    ArrayList    globalNameNodes    localNameNodes    NameGenerator    globalNameGenerator    localNameGenerator    String    LOCAL_VAR_PREFIX    name    newName    oldName    oldTempName    prefix    prevNewName    tempName    SortedSet    varsByOrderOfOccurrence    int    assignmentCount    count    i    j    len    numPendingAssignments    orderOfOccurrence    char[]    reservedCharacters    Comparator    FREQUENCY_COMPARATOR    ORDER_OF_OCCURRENCE_COMPARATOR    Assignment    a    AbstractCompiler    compiler    boolean    changed    generatePseudoNames    isExterns    isExternsPass_    local    localRenamingOnly    preserveFunctionExpressionNames    shouldShadow    VariableMap    prevUsedRenameMap    ArrayListMultimap    localBleedingFunctionsPerScope    List    generatedNamesForAssignments    pendingAssignments    Map    assignments    pseudoNameMap    renameMap        	closure_41543_RenameVars_1_1	458	1	src/com/google/javascript/jscomp/RenameVars.java
1267	[PATCH]    return    this.getType()    ==    Token.BLOCK;	[BUG]    [BUGGY]    return    this.getType()    >=    Token.BLOCK;    [FE]    java.lang.IllegalStateException:    Expected    BLOCK    but    was    EXPR_RESULT    Reference    node    EXPR_RESULT    1    [source_file:    testcode]    testUselessCode    [CONTEXT]    public    boolean    isBlock()    {    [BUGGY]    return    this.getType()    >=    Token.BLOCK;    }    [CLASS]        Node    NumberNode    StringNode    AbstractPropListItem    ObjectPropListItem    IntPropListItem    SiblingNodeIterable    AncestorIterable    1    FileLevelJsDocBuilder    SideEffectFlags    NodeMismatch    [METHOD]    isBlock    [RETURN_TYPE]    boolean        [VARIABLES]    JSType    jsType    boolean    compareJsType    equivalent    optionalArg    printAnnotations    printSource    printType    recurse    used    val    value    varArgs    double    d    number    s    thatValue    thisValue    Node    child    children    cur    current    cursor    first    last    lastSib    lastSibling    left    mid    mid2    n    n2    n2clone    newChild    next    nextChild    node    node2    nodeA    nodeB    oldNext    other    parent    prev    prevChild    result    right    start    PropListItem    item    next    propListHead    result    x    Object    object    objectValue    value    String    fileLevelComment    jsTypeString    left    license    name    s    str    value    warning    long    serialVersionUID    int    COLUMN_BITS    COLUMN_MASK    DECR_FLAG    DIRECTIVES    DIRECT_EVAL    EMPTY_BLOCK    FLAG_ARGUMENTS_UNMODIFIED    FLAG_GLOBAL_STATE_UNMODIFIED    FLAG_LOCAL_RESULTS    FLAG_NO_THROWS    FLAG_THIS_UNMODIFIED    FREE_CALL    INCRDECR_PROP    INFERRED_FUNCTION    INPUT_ID    IS_CONSTANT_NAME    IS_DISPATCHER    IS_NAMESPACE    JSDOC_INFO_PROP    LAST_PROP    LENGTH    MAX_COLUMN_NUMBER    NO_SIDE_EFFECTS    OPT_ARG_NAME    ORIGINALNAME_PROP    POST_FLAG    QUOTED_PROP    SIDE_EFFECTS_ALL    SIDE_EFFECTS_FLAGS_MASK    SIDE_EFFECT_FLAGS    SLASH_V    STATIC_SOURCE_FILE    SYNTHETIC_BLOCK_PROP    VAR_ARGS_NAME    c    charno    count    flag    flags    i    intValue    length    level    lineCharNo    lineno    nodeType    post1    post2    propType    quoted1    quoted2    slashV1    slashV2    sourcePosition    type    value        	closure_8803_Node_1_1	2170	1	src/com/google/javascript/rhino/Node.java
1268	[PATCH]    if    (current    !=    last    +    1)    {    ++nRuns;    }	[BUG]    [BUGGY]    if    (current    !=    last    /    1)    {    ++nRuns;    }    [FE]    java.lang.RuntimeException:    java.lang.ExceptionInInitializerError    testRegExp1    [CONTEXT]    return    new    int[0];    }    Arrays.sort(members);        int    nRuns    =    1;    for    (int    i    =    1;    i    <    nMembers;    ++i)    {    int    current    =    members[i],    last    =    members[i    -    1];    if    (current    ==    last)    {    continue;    }    [BUGGY]    if    (current    !=    last    /    1)    {    ++nRuns;    }    }    int[]    ranges    =    new    int[nRuns    *    2];    ranges[0]    =    members[0];    int    k    =    0;    for    (int    i    =    1;    k    +    2    <    ranges.length;    ++i)    {    int    current    =    members[i],    last    =    members[i    -    1];    if    (current    ==    last)    {    continue;    }    if    (current    !=    last    +    1)    {    ranges[++k]    =    last    +    1;    [CLASS]        CharRanges    [METHOD]    intArrayToRanges    [RETURN_TYPE]    int[]        int[]    members    [VARIABLES]    CharRanges    ALL_CODE_UNITS    EMPTY    int[]    members    ranges    boolean    int    current    i    k    last    nMembers    nRuns        	closure_48133_CharRanges_1_1	89	1	src/com/google/javascript/jscomp/regex/CharRanges.java
1269	[PATCH]    t,    call.getChildAtIndex(2).getString());	[BUG]    [BUGGY]    t,    call.getChildAtIndex(0).getString());    [FE]    java.lang.RuntimeException:    INTERNAL    COMPILER    ERROR.    testErrorWhenUsingMsgPrefixWithFallback    [CONTEXT]    Node    firstArg    =    call.getChildAtIndex(1);    JsMessage    firstMessage    =    getTrackedMessage(t,    firstArg.getString());    if    (firstMessage    ==    null)    {    compiler.report(    t.makeError(firstArg,    FALLBACK_ARG_ERROR,    firstArg.getString()));    return;    }    Node    secondArg    =    firstArg.getNext();    JsMessage    secondMessage    =    getTrackedMessage(    [BUGGY]    t,    call.getChildAtIndex(0).getString());    if    (secondMessage    ==    null)    {    compiler.report(    t.makeError(secondArg,    FALLBACK_ARG_ERROR,    secondArg.getString()));    return;    }    processMessageFallback(call,    firstMessage,    secondMessage);    }    [CLASS]        JsMessageVisitor    MalformedException    MessageLocation    [METHOD]    visitFallbackFunctionCall    [RETURN_TYPE]    void        NodeTraversal    t    Node    call    [VARIABLES]    Pattern    CAMELCASE_PATTERN    MSG_UNNAMED_PATTERN    NodeTraversal    t    CheckLevel    checkLevel    Node    aNode    argumentNode    assignNode    call    callNode    child    externs    firstArg    fnChild    fnNameNode    getProp    getPropNode    grandParentNode    messageNode    msgNode    msgNodeParent    nameNode    node    objLitNode    parent    parentNode    parentOfVarNode    propNode    returnNode    root    secondArg    sibling    stringLiteralNode    valueNode    varNode    String    DESC_SUFFIX    HIDDEN_DESC_PREFIX    MSG_FALLBACK_FUNCTION_NAME    MSG_FUNCTION_NAME    MSG_PREFIX    PH_JS_PREFIX    PH_JS_SUFFIX    desc    fnName    message    messageKey    msgName    name    phName    value    IdGenerator    idGenerator    JsMessage    extractedMessage    firstMessage    message    secondMessage    long    serialVersionUID    AbstractCompiler    compiler    boolean    isNewStyleMessage    isUnnamedMessage    isUnnamedMsg    isVar    messageHasDesc    needToCheckDuplications    DiagnosticType    BAD_FALLBACK_SYNTAX    FALLBACK_ARG_ERROR    MESSAGE_DUPLICATE_KEY    MESSAGE_HAS_NO_DESCRIPTION    MESSAGE_HAS_NO_TEXT    MESSAGE_HAS_NO_VALUE    MESSAGE_NODE_IS_ORPHANED    MESSAGE_NOT_INITIALIZED_USING_NEW_SYNTAX    MESSAGE_TREE_MALFORMED    Style    style    Map    googMsgNodes    messageNames    unnamedMessages        	closure_32830_JsMessageVisitor_1_1	800	1	src/com/google/javascript/jscomp/JsMessageVisitor.java
1270	[PATCH]    return    current    <    length;	[BUG]    [BUGGY]    return    current    <=    length;    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    16    testParseSourceMetaMap    [CONTEXT]    public    boolean    hasNext()    {    [BUGGY]    return    current    <=    length;    }    [CLASS]        SourceMapConsumerV3    DefaultSourceMapSupplier    MappingBuilder    StringCharIterator    UnmappedEntry    UnnamedEntry    NamedEntry    [METHOD]    hasNext    [RETURN_TYPE]    boolean        [VARIABLES]    StringCharIterator    content    boolean    ArrayList    entries    lines    result    String[]    names    result    sources    String    content    contents    file    lineMap    mapSectionContents    originalFile    url    Map    lineToCollectionMap    reverseSourceMapping    sourceLineToCollectionMap    int    MAX_ENTRY_VALUES    UNMAPPED    column    compare    count    current    end    entry    entryValues    i    index    len    length    line    lineCount    lineNumber    mid    name    previousCol    previousNameId    previousSrcColumn    previousSrcId    previousSrcLine    sourceLine    srcColumn    srcFile    srcLine    start    target    targetLine    version        	closure_961_SourceMapConsumerV3_1_1	569	1	src/com/google/debugging/sourcemap/SourceMapConsumerV3.java
1271	[PATCH]    if    ((node.isAnd())    ||    (node.isOr()))    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError:    testHiddenSideEffect    [CONTEXT]    if    (node.isFunction())    {    return    false;    }        if    (node.isHook())    {    return    processHook(node);    }            [BUGGY]    if    (true)    {    return    processShortCircuitExpression(node);    }    if    (!NodeUtil.nodeTypeMayHaveSideEffects(node,    compiler))    {    return    true;    }    else    {            if    (node.isCall())    {    [CLASS]        GatherSideEffectSubexpressionsCallback    GetReplacementSideEffectSubexpressions    [METHOD]    shouldTraverse    [RETURN_TYPE]    boolean        NodeTraversal    traversal    Node    node    Node    parent    [VARIABLES]    AbstractCompiler    compiler    Set    FORBIDDEN_TYPES    boolean    SideEffectAccumulator    accumulator    NodeTraversal    traversal    Node    node    parent    List    parts    replacements        	closure_30434_GatherSideEffectSubexpressionsCallback_1_1	247	1	src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java
1272	[PATCH]    if    (!defSite.inExterns    &&    !callResultsMaybeUsed(definitions,    defSite))    {	[BUG]    [BUGGY]    if    (!defSite.inExterns)    {    [FE]    junit.framework.AssertionFailedError:    testAdvancedModeRemovesUnusedParams    [CONTEXT]    public    void    process(    Node    externs,    Node    root,    SimpleDefinitionFinder    definitions)    {        List<Node>    toOptimize    =    Lists.newArrayList();    for    (DefinitionSite    defSite    :    definitions.getDefinitionSites())    {    [BUGGY]    if    (!defSite.inExterns)    {    toOptimize.add(defSite.definition.getRValue());    }    }        for    (Node    node    :    toOptimize)    {    rewriteReturns(definitions,    node);    }    }    [CLASS]        OptimizeReturns    1    [METHOD]    process    [RETURN_TYPE]    void        Node    externs    Node    root    SimpleDefinitionFinder    definitions    [VARIABLES]    AbstractCompiler    compiler    List    toOptimize    SimpleDefinitionFinder    definitions    boolean    DefinitionSite    defSite    Node    externs    node    root        	closure_35694_OptimizeReturns_1_1	61	1	src/com/google/javascript/jscomp/OptimizeReturns.java
1273	[PATCH]    current.getType()    ==    Token.NEW)    {	[BUG]    [BUGGY]    false)    {    [FE]    java.lang.RuntimeException:    java.lang.IllegalStateException:    Unexpected    node    in    type    expression:    NEW    4    [source_file:    i0]    testConstructorCycle    [CONTEXT]    return    createDefaultObjectUnion(namedType);    }    else    {    return    namedType;    }    case    Token.FUNCTION:    ObjectType    thisType    =    null;    boolean    isConstructor    =    false;    Node    current    =    n.getFirstChild();    if    (current.getType()    ==    Token.THIS    ||    [BUGGY]    false)    {    Node    contextNode    =    current.getFirstChild();    thisType    =    ObjectType.cast(    createFromTypeNodesInternal(    contextNode,    sourceName,    scope)    .restrictByNotNullOrUndefined());    if    (thisType    ==    null)    {    reporter.warning(    ScriptRuntime.getMessage0(    current.getType()    ==    Token.THIS    ?    [CLASS]        JSTypeRegistry    ResolveMode    1    [METHOD]    createFromTypeNodesInternal    [RETURN_TYPE]    JSType        Node    n    String    sourceName    JSType>    scope    [VARIABLES]    Set    forwardDeclaredTypes    namespaces    nonNullableTypeNames    ResolveMode    IMMEDIATE    LAZY_EXPRESSIONS    LAZY_NAMES    mode    resolveMode    JSType    indexType    namedType    parameterType    returnType    type    UnionTypeBuilder    builder    Node    arg    args    child    contextNode    current    firstChild    n    typeList    StaticScope    scope    String    sourceName    long    serialVersionUID    int    PROPERTY_CHECKING_UNION_SIZE    charno    i    lineno    max    Multimap    interfaceToImplementors    resolvedNamedTypes    unresolvedNamedTypes    ObjectType    thisType    ErrorReporter    reporter    boolean    addSuccess    hasNames    isConstructor    lastGeneration    lastVarArgs    tolerateUndefinedValues    JSType[]    nativeTypes    parameterTypes    variants    Map    eachRefTypeIndexedByProperty    greatestSubtypeByProperty    namesToTypes    properties    templateTypes    typeSet    typesIndexedByProperty    FunctionParamBuilder    paramBuilder        	closure_4638_JSTypeRegistry_1_1	1608	1	src/com/google/javascript/rhino/jstype/JSTypeRegistry.java
1274	[PATCH]    left.setJSType(isVarDeclaration    ||    leftType    ==    null    ?	[BUG]    [BUGGY]    left.setJSType(isVarDeclaration    ?    [FE]    junit.framework.AssertionFailedError:    There    should    be    one    error.    expected:<1>    but    was:<0>    testFinalClassCannotBeSubclassed    [CONTEXT]                            boolean    isVarDeclaration    =    left.hasChildren();    if    (!isVarDeclaration    ||    var    ==    null    ||    var.isTypeInferred())    {    redeclareSimpleVar(scope,    left,    resultType);    }    [BUGGY]    left.setJSType(isVarDeclaration    ?    resultType    :    null);    if    (var    !=    null    &&    var.isTypeInferred())    {    JSType    oldType    =    var.getType();    var.setType(oldType    ==    null    ?    resultType    :    oldType.getLeastSupertype(resultType));    }    break;    case    Token.GETPROP:    String    qualifiedName    =    left.getQualifiedName();    [CLASS]        TypeInference    TemplateTypeReplacer    BooleanOutcomePair    [METHOD]    updateScopeForTypeChange    [RETURN_TYPE]    void        FlowScope    scope    Node    left    JSType    leftType    JSType    resultType    [VARIABLES]    ReverseAbstractInterpreter    reverseInterpreter    JSType    leftType    oldType    resultType    Var    var    Node    left    BooleanLiteralSet    booleanValues    toBooleanOutcomes    String    qualifiedName    varName    ObjectType    objType    unknownType    AbstractCompiler    compiler    JSTypeRegistry    registry    boolean    isVarDeclaration    madeChanges    Scope    functionScope    syntacticScope    DiagnosticType    FUNCTION_LITERAL_UNDEFINED_THIS    Map    assertionFunctionsMap    replacements    FlowScope    bottomScope    conditionFlowScope    functionScope    informed    input    joinedScope    leftScope    newScope    output    rightScope    scope        	closure_43644_TypeInference_1_1	554	1	src/com/google/javascript/jscomp/TypeInference.java
1275	[PATCH]    return    result    ==    0    &&    tieBreaker    !=    null    ?	[BUG]    [BUGGY]    return    result    ==    -1    &&    tieBreaker    !=    null    ?    [FE]    junit.framework.AssertionFailedError:    testLotsOfVars    [CONTEXT]    public    int    color()    {    graph.clearNodeAnnotations();    List<GraphNode<N,    E>>    worklist    =    Lists.newArrayList(graph.getNodes());        Collections.sort(worklist,    new    Comparator<GraphNode<N,    E>>()    {    @Override    public    int    compare(GraphNode<N,    E>    o1,    GraphNode<N,    E>    o2)    {    int    result    =    graph.getWeight(o2.getValue())    -    graph.getWeight(o1.getValue());    [BUGGY]    return    result    ==    -1    &&    tieBreaker    !=    null    ?    tieBreaker.compare(o1.getValue(),    o2.getValue())    :    result;    }    });            int    count    =    0;    do    {    Color    color    =    new    Color(count);    SubGraph<N,    E>    subgraph    =    graph.newSubGraph();    [CLASS]        GraphColoring    Color    GreedyGraphColoring    1    [METHOD]    color    [RETURN_TYPE]    int        [VARIABLES]    N[]    colorToNodeMap    map    boolean    Color    color    Iterator    i    List    worklist    GraphNode    node    o1    o2    AdjacencyGraph    graph    SubGraph    subgraph    int    count    result    value    Comparator    tieBreaker        	closure_18661_GraphColoring_1_1	141	1	src/com/google/javascript/jscomp/graph/GraphColoring.java
1276	[PATCH]    if    (line    <    nextLine    ||    (line    ==    nextLine    &&    col    <    nextCol))    {	[BUG]    [BUGGY]    if    (line    <    nextLine)    {    [FE]    junit.framework.ComparisonFailure:    expected:<...,0,0,0,0,0,0,1,1,2,2[,3,3]    testFunctionNameOutput1    [CONTEXT]    private    void    maybeVisit(MappingVisitor    v,    Mapping    m)    throws    IOException    {    int    nextLine    =    getAdjustedLine(m.endPosition);    int    nextCol    =    getAdjustedCol(m.endPosition);            [BUGGY]    if    (line    <    nextLine)    {    visit(v,    m,    nextLine,    nextCol);    }    }    [CLASS]        SourceMapGeneratorV1    Mapping    MappingWriter    LineMapper    UsedMappingCheck    MappingTraversal    [METHOD]    maybeVisit    [RETURN_TYPE]    void        MappingVisitor    v    Mapping    m    [VARIABLES]    boolean    firstChar    used    Appendable    out    List    mappings    Mapping    lastMapping    m    m1    m2    mapping    parent    previous    String    UNMAPPED_STRING    escapedSourceFile    id    idString    lastIdString    lastLineString    lastSourceFile    lastSourceFileEscaped    lineValue    name    originalName    prefix    sourceFile    sourceName    symbolName    value    FilePosition    endPosition    offsetPosition    originalPosition    p    prefixPosition    sourceStartPosition    startPosition    MappingVisitor    v    int    UNMAPPED    c1    c2    col    endCol    endLine    endOffsetPosition    endPositionLine    i    id    j    l1    l2    lastColumn    lastId    lastLine    line    maxLine    nextCol    nextColumn    nextLine    offsetIndex    offsetLine    prefixIndex    prefixLine    rawCol    rawLine    startOffsetPosition        	closure_1282_SourceMapGeneratorV1_1_1	594	1	src/com/google/debugging/sourcemap/SourceMapGeneratorV1.java
1277	[PATCH]    if    (line    <    nextLine    ||    (line    ==    nextLine    &&    col    <    nextCol))    {	[BUG]    [BUGGY]    if    (line    <=    nextLine    ||    (line    ==    nextLine    &&    col    <    nextCol))    {    [FE]    java.lang.IllegalStateException    testFunctionNameOutput1    [CONTEXT]    private    void    maybeVisit(MappingVisitor    v,    Mapping    m)    throws    IOException    {    int    nextLine    =    getAdjustedLine(m.endPosition);    int    nextCol    =    getAdjustedCol(m.endPosition);            [BUGGY]    if    (line    <=    nextLine    ||    (line    ==    nextLine    &&    col    <    nextCol))    {    visit(v,    m,    nextLine,    nextCol);    }    }    [CLASS]        SourceMapGeneratorV1    Mapping    MappingWriter    LineMapper    UsedMappingCheck    MappingTraversal    [METHOD]    maybeVisit    [RETURN_TYPE]    void        MappingVisitor    v    Mapping    m    [VARIABLES]    boolean    firstChar    used    Appendable    out    List    mappings    Mapping    lastMapping    m    m1    m2    mapping    parent    previous    String    UNMAPPED_STRING    escapedSourceFile    id    idString    lastIdString    lastLineString    lastSourceFile    lastSourceFileEscaped    lineValue    name    originalName    prefix    sourceFile    sourceName    symbolName    value    FilePosition    endPosition    offsetPosition    originalPosition    p    prefixPosition    sourceStartPosition    startPosition    MappingVisitor    v    int    UNMAPPED    c1    c2    col    endCol    endLine    endOffsetPosition    endPositionLine    i    id    j    l1    l2    lastColumn    lastId    lastLine    line    maxLine    nextCol    nextColumn    nextLine    offsetIndex    offsetLine    prefixIndex    prefixLine    rawCol    rawLine    startOffsetPosition        	closure_1269_SourceMapGeneratorV1_1_1	594	1	src/com/google/debugging/sourcemap/SourceMapGeneratorV1.java
1278	[PATCH]    return    false;	[BUG]    [BUGGY]    return    true;    [FE]    junit.framework.AssertionFailedError:    testThisAlias    [CONTEXT]    boolean    isEscaped()    {    Scope    scope    =    null;    for    (Reference    ref    :    references)    {    if    (scope    ==    null)    {    scope    =    ref.scope;    }    else    if    (scope    !=    ref.scope)    {    return    true;    }    }    [BUGGY]    return    true;    }    [CLASS]        ReferenceCollectingCallback    ReferenceMapWrapper    1    ReferenceCollection    Reference    BasicBlock    [METHOD]    isEscaped    [RETURN_TYPE]    boolean        [VARIABLES]    Set    DECLARATION_PARENTS    Reference    ref    Node    externs    n    nameNode    originalRoot    parent    root    scriptRoot    BasicBlock    basicBlock    initBlock    parent    Deque    blockStack    Predicate    varFilter    AbstractCompiler    compiler    boolean    isFunction    isHoisted    isLoop    Scope    scope    InputId    inputId    List    references    Behavior    DO_NOTHING_BEHAVIOR    behavior    StaticSourceFile    sourceFile    Map    referenceMap        	closure_6018_ReferenceCollectingCallback_1_1	347	1	src/com/google/javascript/jscomp/ReferenceCollectingCallback.java
1279	[PATCH]    return    handlePlugins(t,    script,    moduleName.substring(condition    +    1),	[BUG]    [BUGGY]    return    handlePlugins(t,    script,    moduleName.substring(condition    %    1),    [FE]    java.lang.StackOverflowError    testPlugins    [CONTEXT]    private    String    handlePlugins(NodeTraversal    t,    Node    script,    String    moduleName,    Node    modNode)    {    if    (moduleName.contains(   "!   "))    {    t.report(modNode,    REQUIREJS_PLUGINS_NOT_SUPPORTED_WARNING,    moduleName);    int    condition    =    moduleName.indexOf('?');    if    (condition    >    0)    {    if    (moduleName.contains(   ":   "))    {    return    null;    }    [BUGGY]    return    handlePlugins(t,    script,    moduleName.substring(condition    %    1),    modNode);    }    moduleName    =    null;    }    return    moduleName;    }    [CLASS]        TransformAMDToCJSModule    TransformAMDModulesCallback    DefineCallbackReturnCallback    RenameCallback    [METHOD]    handlePlugins    [RETURN_TYPE]    String        NodeTraversal    t    Node    script    String    moduleName    Node    modNode    [VARIABLES]    AbstractCompiler    compiler    boolean    NodeTraversal    t    DiagnosticType    NON_TOP_LEVEL_STATEMENT_DEFINE_ERROR    REQUIREJS_PLUGINS_NOT_SUPPORTED_WARNING    UNSUPPORTED_DEFINE_SIGNATURE_ERROR    Node    modNode    script    String    VAR_RENAME_SUFFIX    aliasName    from    moduleName    renamed    to    int    condition    defineArity    renameIndex        	closure_43473_TransformAMDToCJSModule_1_1	236	1	src/com/google/javascript/jscomp/TransformAMDToCJSModule.java
1280	[PATCH]    if    (complexity    <    minComplexity)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    testCharsetOptimizations    [CONTEXT]    char    groupName    =    0;    CharRanges    simplest    =    null;    int    minComplexity    =    DecomposedCharset.complexity(ranges);    for    (Map.Entry<Character,    CharRanges>    namedGroup    :    NAMED_CHAR_GROUPS.entrySet())    {    CharRanges    group    =    namedGroup.getValue();    if    (ranges.containsAll(group))    {    CharRanges    withoutGroup    =    ranges.difference(group).union(    rangesInterIeExplicits);    int    complexity    =    DecomposedCharset.complexity(withoutGroup);    [BUGGY]    if    (false)    {    simplest    =    withoutGroup;    groupName    =    namedGroup.getKey().charValue();    minComplexity    =    complexity;    }    }    }    if    (simplest    !=    null)    {    namedGroups.append('\\').append(groupName);    ranges    =    simplest;    }    else    {    [CLASS]        RegExpTree    1Parser    RegExpTreeAtom    Empty    Anchor    WordBoundary    BackReference    Text    Repetition    Alternation    LookaheadAssertion    CapturingGroup    Charset    DecomposedCharset    Concatenation    1Simplifier    [METHOD]    decompose    [RETURN_TYPE]    RegExpTree$DecomposedCharset        CharRanges    ranges    boolean    inverted    [VARIABLES]    RegExpTree    NEVER_MATCHES    a    alternative    atom    b    body    charAlternative    child    first    follower    last    out    preceder    simpleBody    t    StringBuilder    namedGroups    ImmutableList    alternatives    elements    Charset    DOT_CHARSET    cs    String    canonicalized    counts    flags    namedGroups    pattern    text    int    bestComplexity    bodyEnd    bodyLen    bodyStart    comma    complexity    digit    end    expanded    expandedMax    expandedMin    expandedSuffixLen    groupIndex    i    len    limit    max    memberIdx    min    minComplexity    n    nCharsets    nDigits    next    numCapturingGroups    octLimit    pos    possibleGroupIndex    result    start    suffixLen    twoDigitGroupIndex    type    ImmutableMap    NAMED_CHAR_GROUPS    Empty    INSTANCE    Entry    namedGroup    boolean    capturing    greedy    inverse    inverted    isCaseInsensitive    positive    char    ch    codeUnit    end    groupName    next    possibleGroupName    start    type    CharRanges    DIGITS    IE_SPACE_CHARS    IE_SPEC_ERRORS    INVERSE_WORD_CHARS    LCASE_LETTERS    LETTERS    SPACE_CHARS    UCASE_LETTERS    WORD_CHARS    best    charGroup    chars    group    ieExplicits    lcaseLetters    lcaseLettersToUpper    option    range    ranges    rangesInterIeExplicits    simplest    ucaseLetters    ucaseLettersToLower    withoutGroup    withoutNamedGroups    List    alternatives    charAlternatives    elements    simplified        	closure_50172_RegExpTree_1_1	1449	1	src/com/google/javascript/jscomp/regex/RegExpTree.java
1281	[PATCH]    idDigits    =    addBase64Digit(digit,    0);	[BUG]    [BUGGY]    idDigits    =    addBase64Digit(digit,    1);    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    6    testGoldenOutput5    [CONTEXT]    if    (repDigits    ==    0)    {                char    digit    =    reader.next();    int    value    =    addBase64Digit(digit,    0);    reps    =    (value    >>    2);    idDigits    =    (value    &    3);    }    else    {    char    digit    =    reader.next();    [BUGGY]    idDigits    =    addBase64Digit(digit,    1);    int    value    =    0;    for    (int    i    =    0;    i    <    repDigits;    i++)    {    digit    =    reader.next();    value    =    addBase64Digit(digit,    value);    }    reps    =    value;    }    [CLASS]        SourceMapLineDecoder    LineEntry    StringParser    [METHOD]    decodeLineEntry    [RETURN_TYPE]    SourceMapLineDecoder$LineEntry        StringParser    reader    int    lastId    [VARIABLES]    char    digit    peek    StringParser    reader    String    content    in    lineSource    boolean    int    current    i    id    idDigits    lastId    mappingId    repDigits    reps    value        	closure_2416_SourceMapLineDecoder_1_1	66	1	src/com/google/debugging/sourcemap/SourceMapLineDecoder.java
1282	[PATCH]    return    false;	[BUG]    [BUGGY]    return    true;    [FE]    junit.framework.AssertionFailedError    testValidNames    [CONTEXT]    public    static    boolean    isValidQualifiedName(String    name)    {    if    (name.endsWith(   ".   ")    ||    name.startsWith(   ".   "))    {    return    false;    }    String[]    parts    =    name.split(   "\\.   ");    for    (String    part    :    parts)    {    if    (!isValidSimpleName(part))    {    [BUGGY]    return    true;    }    }    return    true;    }    [CLASS]        NodeUtil    1    NumbericResultPredicate    BooleanResultPredicate    MayBeStringResultPredicate    VarCollector    MatchNameNode    MatchNodeType    MatchDeclaration    MatchNotFunction    MatchShallowStatement    [METHOD]    isValidQualifiedName    [RETURN_TYPE]    boolean        String    name    [VARIABLES]    BooleanResultPredicate    BOOLEAN_RESULT_PREDICATE    Set    BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS    CONSTRUCTORS_WITHOUT_SIDE_EFFECTS    OBJECT_METHODS_WITHOUT_SIDEEFFECTS    REGEXP_METHODS    STRING_REGEXP_METHODS    defines    emptySet    knownConstants    NumbericResultPredicate    NUMBERIC_RESULT_PREDICATE    boolean    MayBeStringResultPredicate    MAY_BE_STRING_PREDICATE    char    LARGEST_BASIC_LATIN    c    String    JSC_PROPERTY_NAME_FN    childValue    methodName    name    originalName    part    propName    rawJsString    res    s    value    String[]    parts    Map    vars    long    MAX_POSITIVE_INTEGER_NUMBER    longValue    int    c    end    endPos    index    len    nextSkipSlot    nextSlot    operator    start    startPos    type    Predicate    IMMUTABLE_PREDICATE    MATCH_NOT_FUNCTION    p    traverseChildrenPred        	closure_28974_NodeUtil_1_1	2466	1	src/com/google/javascript/jscomp/NodeUtil.java
1283	[PATCH]    if    (definitions    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.RuntimeException:    INTERNAL    COMPILER    ERROR.    testGetAllFunctions    [CONTEXT]    DefinitionProvider    definitionProvider)    {    Collection<Definition>    definitions    =    lookupDefinitionsForTargetsOfCall(callsite.getAstNode(),    definitionProvider);        [BUGGY]    if    (false)    {    callsite.hasUnknownTarget    =    true;    }    else    {    for    (Definition    definition    :    definitions)    {    if    (definition.isExtern())    {    callsite.hasExternTarget    =    true;    }    else    {    Node    target    =    definition.getRValue();    if    (target    !=    null    &&    target.isFunction())    {    Function    targetFunction    =    functionsByNode.get(target);    [CLASS]        CallGraph    1    2    Function    Callsite    [METHOD]    connectCallsiteToTargets    [RETURN_TYPE]    void        Callsite    callsite    DefinitionProvider    definitionProvider    [VARIABLES]    Function    containingFunction    function    mainFunction    targetFunction    AbstractCompiler    compiler    DefinitionProvider    definitionProvider    boolean    alreadyRun    computeBackwardGraph    computeForwardGraph    hasExternTarget    hasUnknownTarget    isAliased    isExposedToCallOrApply    useNameReferenceGraph    Node    astNode    callsiteAstNode    callsiteNode    containingFunctionNode    externsRoot    functionAstNode    functionNode    jsRoot    n    parent    target    Definition    definition    Collection    callsitesInFunction    callsitesPossiblyTargetingFunction    definitions    functions    possibleTargets    String    MAIN_FUNCTION_NAME    desiredName    functionName    Callsite    callsite    Map    callsitesByNode    functionsByNode        	closure_19898_CallGraph_1_1	312	1	src/com/google/javascript/jscomp/CallGraph.java
1284	[PATCH]    if    (prototypeVar    !=    null    &&    prototypeVar.scope    ==    scopeToDeclareIn)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.RuntimeException:    INTERNAL    COMPILER    ERROR.    testConstantProperty1    [CONTEXT]            prototypeSlot.setNode(n);    String    prototypeName    =    variableName    +       ".prototype   ";                Var    prototypeVar    =    scopeToDeclareIn.getVar(prototypeName);    [BUGGY]    if    (false)    {    scopeToDeclareIn.undeclare(prototypeVar);    }    scopeToDeclareIn.declare(prototypeName,    n,    prototypeSlot.getType(),    input,        superClassCtor    ==    null    ||    superClassCtor.getInstanceType().isEquivalentTo(    getNativeType(OBJECT_TYPE)));        [CLASS]        TypedScopeCreator    DeferredSetType    DiscoverEnumsAndTypedefs    AbstractScopeBuilder    CollectProperties    StubDeclaration    GlobalScopeBuilder    LocalScopeBuilder    FirstOrderFunctionAnalyzer    [METHOD]    finishConstructorDefinition    [RETURN_TYPE]    void        Node    n    String    variableName    FunctionType    fnType    Scope    scopeToDeclareIn    CompilerInput    input    Var    newVar    [VARIABLES]    JSType    elementsType    fnThisType    globalThis    injectedThisType    jsType    keyType    propType    t    thisType    type    valueType    Var    newVar    prototypeVar    Node    catchName    child    errorRoot    firstChild    fnBlock    fnRoot    functionNode    initialValue    key    keyNode    lValue    lValueNode    lvalueNode    n    name    nameNode    node    objLit    objNode    objectLit    ownerNode    parametersNode    parent    rValue    root    scriptRoot    value    valueNode    var    FunctionType    fnType    superClassCtor    String    DELEGATE_PROXY_SUFFIX    fnName    functionName    keyName    lValueName    lendsName    memberName    name    ownerName    propName    prototypeName    qualifiedName    scriptName    sourceName    variableName    TypeValidator    validator    ObjectType    globalThis    iface    objLitType    ownerType    unknownType    AbstractCompiler    compiler    ErrorReporter    typeParsingErrorReporter    JSTypeRegistry    registry    typeRegistry    CompilerInput    input    boolean    createdEnumType    declareOnOwner    descend    inferred    isExtern    isFnLiteral    isGlobalVar    isValidValue    searchedForThisType    shouldDeclareOnGlobalThis    Scope    globalScope    newScope    parent    s    scope    scopeToDeclareIn    DiagnosticType    CONSTRUCTOR_EXPECTED    CTOR_INITIALIZER    ENUM_INITIALIZER    IFACE_INITIALIZER    LENDS_ON_NON_OBJECT    MALFORMED_TYPEDEF    UNKNOWN_LENDS    CodingConvention    codingConvention    InputId    inputId    List    deferredSetTypes    delegateProxyPrototypes    lentObjectLiterals    nonExternFunctions    stubDeclarations    varsToRemove    Map    data    delegateCallingConventions    functionAnalysisResults    outParam    Property    prototypeSlot        	closure_15760_TypedScopeCreator_1_1	1229	1	src/com/google/javascript/jscomp/TypedScopeCreator.java
1285	[PATCH]    }    else    if    (lineno1    <    0    &&    0    <=    lineno2)    {	[BUG]    [BUGGY]    }    else    if    (lineno1    <    0    &&    true)    {    [FE]    junit.framework.AssertionFailedError:    -1    testOrderingDescription    [CONTEXT]    }    else    if    (source1    ==    null    &&    source2    !=    null)    {    return    P1_LT_P2;    }    else    if    (source1    !=    null    &&    source2    ==    null)    {    return    P1_GT_P2;    }        int    lineno1    =    p1.error.lineNumber;    int    lineno2    =    p2.error.lineNumber;    if    (lineno1    !=    lineno2)    {    return    lineno1    -    lineno2;    [BUGGY]    }    else    if    (lineno1    <    0    &&    true)    {    return    P1_LT_P2;    }    else    if    (0    <=    lineno1    &&    lineno2    <    0)    {    return    P1_GT_P2;    }        int    charno1    =    p1.error.getCharno();    int    charno2    =    p2.error.getCharno();    if    (charno1    !=    charno2)    {    return    charno1    -    charno2;    }    else    if    (charno1    <    0    &&    0    <=    charno2)    {    [CLASS]        BasicErrorManager    LeveledJSErrorComparator    ErrorWithLevel    [METHOD]    compare    [RETURN_TYPE]    int        ErrorWithLevel    p1    ErrorWithLevel    p2    [VARIABLES]    boolean    double    typedPercent    CheckLevel    level    ErrorWithLevel    p1    p2    String    source1    source2    SortedSet    messages    int    P1_GT_P2    P1_LT_P2    charno1    charno2    errorCount    lineno1    lineno2    sourceCompare    warningCount    JSError    error        	closure_19755_BasicErrorManager_1_1	162	1	src/com/google/javascript/jscomp/BasicErrorManager.java
1286	[PATCH]    for    (Node    c    =    n.getFirstChild();    c    !=    null;    c    =    c.getNext())    {	[BUG]    [BUGGY]    for    (Node    c    =    n.getFirstChild();    true;    c    =    c.getNext())    {    [FE]    java.lang.NullPointerException    testRegularExpressions    [CONTEXT]    private    void    validateRegExpLit(Node    n)    {    validateNodeType(Token.REGEXP,    n);    validateMinimumChildCount(n,    1);    validateMaximumChildCount(n,    2);    [BUGGY]    for    (Node    c    =    n.getFirstChild();    true;    c    =    c.getNext())    {    validateString(c);    }    }    [CLASS]        AstValidator    1    [METHOD]    validateRegExpLit    [RETURN_TYPE]    void        Node    n    [VARIABLES]    ViolationHandler    handler    violationHandler    Node    c    n    boolean        	closure_19557_AstValidator_1_1	632	1	src/com/google/javascript/jscomp/AstValidator.java
1287	[PATCH]    return    2    +    indexOfLastDot;	[BUG]    [BUGGY]    return    -2    +    indexOfLastDot;    [FE]    junit.framework.AssertionFailedError:    expected:<14>    but    was:<10>    testSourcePositionPreservation    [CONTEXT]    if    (provideStringNode    ==    null)    {    return    0;    }    int    indexOfLastDot    =    namespace.lastIndexOf('.');                        [BUGGY]    return    -2    +    indexOfLastDot;    }    [CLASS]        ProcessClosurePrimitives    1    ProvidedName    UnrecognizedRequire    [METHOD]    getSourceInfoOffset    [RETURN_TYPE]    int        Node    provideStringNode    [VARIABLES]    Set    exportedVariables    CheckLevel    requiresLevel    Node    arg    assignNode    baseClassNode    callNode    callee    candidateDefinition    className    decl    enclosingFnNameNode    enclosingParent    explicitNode    expr    externs    firstArg    firstNode    key    left    maybeInheritsExpr    methodName    methodNameNode    n    name    nameNode    newNode    node    objlit    originalRoot    parent    provideStringNode    replacementNode    requireNode    root    scopeRoot    scriptRoot    secondArg    sourceInfoNode    thisArg    value    valueNode    varNode    PreprocessorSymbolTable    preprocessorSymbolTable    String    GOOG    combined    enclosingQname    ending    extraMessage    inputName    key    methodName    name    namespace    ns    part    prefixNs    styleStr    typeDecl    value    JSModuleGraph    moduleGraph    int    indexOfLastDot    AbstractCompiler    compiler    boolean    DiagnosticType    BASE_CLASS_ERROR    DUPLICATE_NAMESPACE_ERROR    EXPECTED_OBJECTLIT_ERROR    EXPECTED_STRING_ERROR    FUNCTION_NAMESPACE_ERROR    INVALID_ARGUMENT_ERROR    INVALID_CSS_RENAMING_MAP    INVALID_PROVIDE_ERROR    INVALID_STYLE_ERROR    LATE_PROVIDE_ERROR    MISSING_PROVIDE_ERROR    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR    NULL_ARGUMENT_ERROR    TOO_MANY_ARGUMENTS_ERROR    XMODULE_REQUIRE_ERROR    diagnostic    error    JSModule    explicitModule    firstModule    minimumModule    module    newModule    providedModule    List    errors    typeDecls    unrecognizedRequires    Map    cssNames    providedNames        	closure_39471_ProcessClosurePrimitives_1_1	1024	1	src/com/google/javascript/jscomp/ProcessClosurePrimitives.java
1288	[PATCH]    }    else    if    (superRanges[superIdx    +    1]    >=    subRanges[subIdx    +    1])    {	[BUG]    [BUGGY]    }    else    if    (superRanges[superIdx    +    0]    >=    subRanges[subIdx    +    1])    {    [FE]    junit.framework.AssertionFailedError:    testCharsetOptimizations    [CONTEXT]    while    (subIdx    <    subLen)    {    if    (superIdx    ==    superLen)    {    return    false;    }    if    (superRanges[superIdx    +    1]    <=    subRanges[subIdx])    {        superIdx    +=    2;    }    else    if    (superRanges[superIdx]    >    subRanges[subIdx])    {        return    false;    [BUGGY]    }    else    if    (superRanges[superIdx    +    0]    >=    subRanges[subIdx    +    1])    {                subIdx    +=    2;    }    else    {        return    false;    }    }    return    subIdx    ==    subLen;    [CLASS]        CharRanges    [METHOD]    containsAll    [RETURN_TYPE]    boolean        CharRanges    sub    [VARIABLES]    CharRanges    ALL_CODE_UNITS    EMPTY    other    sub    subtrahendRanges    int[]    aRanges    bRanges    clipped    difference    intersection    members    minuend    newArr    out    q    r    ranges    subRanges    subtrahend    superRanges    boolean    int    subIdx    subLen    superIdx    superLen        	closure_48666_CharRanges_1_1	355	1	src/com/google/javascript/jscomp/regex/CharRanges.java
1289	[PATCH]    return    this.getType()    ==    Token.NEW;	[BUG]    [BUGGY]    return    this.getType()    >=    Token.NEW;    [FE]    junit.framework.ComparisonFailure:    expected:<...0,0,0,0,0,0,0,0,1,1,[0,2,2,2,0,3,3,3,0,0,4,4,4,0,5,5,5,0,6,6,6,0,0,0,0,0,0,0,0,0,7,7,7,7,0]    testGoldenOutput1    [CONTEXT]    public    boolean    isNew()    {    [BUGGY]    return    this.getType()    >=    Token.NEW;    }    [CLASS]        Node    NumberNode    StringNode    AbstractPropListItem    ObjectPropListItem    IntPropListItem    SiblingNodeIterable    AncestorIterable    1    FileLevelJsDocBuilder    SideEffectFlags    NodeMismatch    [METHOD]    isNew    [RETURN_TYPE]    boolean        [VARIABLES]    JSType    jsType    boolean    compareJsType    equivalent    optionalArg    printAnnotations    printSource    printType    recurse    used    val    value    varArgs    double    d    number    s    thatValue    thisValue    Node    child    children    cur    current    cursor    first    last    lastSib    lastSibling    left    mid    mid2    n    n2    n2clone    newChild    next    nextChild    node    node2    nodeA    nodeB    oldNext    other    parent    prev    prevChild    result    right    start    PropListItem    item    next    propListHead    result    x    Object    object    objectValue    value    String    fileLevelComment    jsTypeString    left    license    name    s    str    value    warning    long    serialVersionUID    int    COLUMN_BITS    COLUMN_MASK    DECR_FLAG    DIRECTIVES    DIRECT_EVAL    EMPTY_BLOCK    FLAG_ARGUMENTS_UNMODIFIED    FLAG_GLOBAL_STATE_UNMODIFIED    FLAG_LOCAL_RESULTS    FLAG_NO_THROWS    FLAG_THIS_UNMODIFIED    FREE_CALL    INCRDECR_PROP    INFERRED_FUNCTION    INPUT_ID    IS_CONSTANT_NAME    IS_DISPATCHER    IS_NAMESPACE    JSDOC_INFO_PROP    LAST_PROP    LENGTH    MAX_COLUMN_NUMBER    NO_SIDE_EFFECTS    OPT_ARG_NAME    ORIGINALNAME_PROP    POST_FLAG    QUOTED_PROP    SIDE_EFFECTS_ALL    SIDE_EFFECTS_FLAGS_MASK    SIDE_EFFECT_FLAGS    SLASH_V    STATIC_SOURCE_FILE    SYNTHETIC_BLOCK_PROP    VAR_ARGS_NAME    c    charno    count    flag    flags    i    intValue    length    level    lineCharNo    lineno    nodeType    post1    post2    propType    quoted1    quoted2    slashV1    slashV2    sourcePosition    type    value        	closure_8893_Node_1_1	2290	1	src/com/google/javascript/rhino/Node.java
1290	[PATCH]    splitStrings.size()    <    limit)    {	[BUG]    [BUGGY]    false)    {    [FE]    junit.framework.AssertionFailedError:    testFoldStringSplit    [CONTEXT]            if    (separator.length()    ==    0)    {    for    (int    i    =    0;    i    <    stringValue.length()    &&    i    <    limit;    i++)    {    splitStrings.add(stringValue.substring(i,    i    +    1));    }    }    else    {    int    startIndex    =    0,    matchIndex;    while    ((matchIndex    =    jsSplitMatch(stringValue,    startIndex,    separator))    >=    0    &&    [BUGGY]    false)    {    splitStrings.add(stringValue.substring(startIndex,    matchIndex));    startIndex    =    matchIndex    +    separator.length();    }    if    (splitStrings.size()    <    limit)    {    if    (startIndex    <    stringValue.length())    {    splitStrings.add(stringValue.substring(startIndex));    }    else    {    splitStrings.add(   "   ");    [CLASS]        PeepholeReplaceKnownMethods    [METHOD]    jsSplit    [RETURN_TYPE]    String[]        String    stringValue    String    separator    int    limit    [VARIABLES]    Locale    ROOT_LOCALE    List    splitStrings    boolean    isIndexOf    isParseInt    late    String    separator    stringValue    int    i    limit    matchIndex    startIndex        	closure_37740_PeepholeReplaceKnownMethods_1_1	727	1	src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java
1291	[PATCH]    parentNodeType    ==    Token.CATCH    ||	[BUG]    [BUGGY]    parentNodeType    <=    Token.CATCH    ||    [FE]    junit.framework.AssertionFailedError:    There    should    be    one    error.    expected:<1>    but    was:<0>    testDeprecatedObjLitKey    [CONTEXT]    boolean    visitName(NodeTraversal    t,    Node    n,    Node    parent)    {                                int    parentNodeType    =    parent.getType();    if    (parentNodeType    ==    Token.FUNCTION    ||    [BUGGY]    parentNodeType    <=    Token.CATCH    ||    parentNodeType    ==    Token.PARAM_LIST    ||    parentNodeType    ==    Token.VAR)    {    return    false;    }    JSType    type    =    n.getJSType();    if    (type    ==    null)    {    type    =    getNativeType(UNKNOWN_TYPE);    Var    var    =    t.getScope().getVar(n.getString());    if    (var    !=    null)    {    [CLASS]        TypeCheck    [METHOD]    visitName    [RETURN_TYPE]    boolean        NodeTraversal    t    Node    n    Node    parent    [VARIABLES]    ReverseAbstractInterpreter    reverseInterpreter    JSType    type    varType    NodeTraversal    t    DiagnosticGroup    ALL_DIAGNOSTICS    CheckLevel    reportMissingOverride    reportUnknownTypes    Var    var    Node    n    parent    String    OVERRIDING_PROTOTYPE_WITH_NON_OBJECT    abstractMethodMessage    abstractMethodName    funName    functionPrivateName    message    pname    prop    property    property2    propertyName    s    MemoizedScopeCreator    scopeCreator    int    noTypeCheckSection    nullCount    parentNodeType    typedCount    unknownCount    TypeValidator    validator    AbstractCompiler    compiler    JSTypeRegistry    typeRegistry    boolean    declaredLocally    declaredOverride    enterSection    externs    foundInterfaceProperty    inExterns    interfaceHasProperty    report    reportMissingProperties    superClassHasDeclaredProperty    superClassHasProperty    superInterfaceHasDeclaredProperty    superInterfaceHasProperty    typeable    valid    Scope    outerScope    topScope    DiagnosticType    BAD_DELETE    BAD_IMPLEMENTED_TYPE    BIT_OPERATION    CONFLICTING_EXTENDED_TYPE    CONFLICTING_IMPLEMENTED_TYPE    CONSTRUCTOR_NOT_CALLABLE    DETERMINISTIC_TEST    DETERMINISTIC_TEST_NO_RESULT    ENUM_DUP    ENUM_NOT_CONSTANT    EXPECTED_THIS_TYPE    FUNCTION_MASKS_VARIABLE    HIDDEN_INTERFACE_PROPERTY    HIDDEN_SUPERCLASS_PROPERTY    HIDDEN_SUPERCLASS_PROPERTY_MISMATCH    ILLEGAL_IMPLICIT_CAST    ILLEGAL_OBJLIT_KEY    ILLEGAL_PROPERTY_CREATION    INCOMPATIBLE_EXTENDED_PROPERTY_TYPE    INEXISTENT_ENUM_ELEMENT    INEXISTENT_PROPERTY    INTERFACE_FUNCTION_NOT_EMPTY    INTERFACE_METHOD_OVERRIDE    INVALID_INTERFACE_MEMBER_DECLARATION    IN_USED_WITH_STRUCT    MULTIPLE_VAR_DEF    NOT_A_CONSTRUCTOR    NOT_CALLABLE    UNEXPECTED_TOKEN    UNKNOWN_EXPR_TYPE    UNKNOWN_OVERRIDE    UNRESOLVED_TYPE    WRONG_ARGUMENT_COUNT    diagnosticType    InferJSDocInfo    inferJSDocInfo        	closure_14509_TypeCheck_1_1	1354	1	src/com/google/javascript/jscomp/TypeCheck.java
1292	[PATCH]    if    (inputId    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.NullPointerException    testNonWellformedAlias1    [CONTEXT]    void    traverseAtScope(Scope    s)    {    Node    n    =    s.getRootNode();    if    (n.isFunction())    {            [BUGGY]    if    (false)    {    inputId    =    NodeUtil.getInputId(n);    }    sourceName    =    getSourceName(n);    curNode    =    n;    pushScope(s);    Node    args    =    n.getFirstChild().getNext();    Node    body    =    args.getNext();    traverseBranch(args,    n);    traverseBranch(body,    n);    [CLASS]        NodeTraversal    AbstractPostOrderCallback    AbstractScopedCallback    AbstractShallowCallback    AbstractShallowStatementCallback    AbstractNodeTypePruningCallback    [METHOD]    traverseAtScope    [RETURN_TYPE]    void        Scope    s    [VARIABLES]    ScopedCallback    scopeCallback    AbstractCompiler    compiler    Callback    callback    cb    Set    nodeTypes    boolean    include    Scope    s    DiagnosticType    NODE_TRAVERSAL_ERROR    Node    args    body    curNode    n    parent    root    scopeRoot    InputId    inputId    ScopeCreator    scopeCreator    String    MISSING_SOURCE    label    message    sourceFileName    sourceName    src    Deque    cfgs    scopeRoots    scopes        	closure_4046_NodeTraversal_1_1	356	1	src/com/google/javascript/jscomp/NodeTraversal.java
1293	[PATCH]    int[]    out    =    new    int[m    +    n];	[BUG]    [BUGGY]    int[]    out    =    new    int[m    -    n];    [FE]    java.lang.RuntimeException:    java.lang.ExceptionInInitializerError    testRegExp1    [CONTEXT]        int[]    q    =    this.ranges,    r    =    other.ranges;        int    m    =    q.length,    n    =    r.length;    if    (m    ==    0)    {    return    other;    }    if    (n    ==    0)    {    return    this;    }                [BUGGY]    int[]    out    =    new    int[m    -    n];        int    i    =    0,    j    =    0,    k    =    0;                                [CLASS]        CharRanges    [METHOD]    union    [RETURN_TYPE]    CharRanges        CharRanges    other    [VARIABLES]    CharRanges    ALL_CODE_UNITS    EMPTY    other    int[]    clipped    members    out    q    r    ranges    boolean    int    a0    a1    b0    b1    end    i    j    k    m    n    start        	closure_48250_CharRanges_1_1	166	1	src/com/google/javascript/jscomp/regex/CharRanges.java
1294	[PATCH]    }    else    if    (NodeUtil.isFunctionDeclaration(n))    {	[BUG]    [BUGGY]    }    else    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    testSmartNamePass    [CONTEXT]    public    void    visit(NodeTraversal    t,    Node    n,    Node    parent)    {        if    (t.inGlobalScope())    {    if    (NodeUtil.isVarDeclaration(n))    {    NameInformation    ns    =    createNameInformation(t,    n);    Preconditions.checkNotNull(ns);    recordSet(ns.name,    n);    [BUGGY]    }    else    if    (false)    {    Node    nameNode    =    n.getFirstChild();    NameInformation    ns    =    createNameInformation(t,    nameNode);    if    (ns    !=    null)    {    JsName    nameInfo    =    getName(nameNode.getString(),    true);    recordSet(nameInfo.name,    nameNode);    }    }    else    if    (NodeUtil.isObjectLitKey(n,    parent))    {    NameInformation    ns    =    createNameInformation(t,    n);    if    (ns    !=    null)    {    recordSet(ns.name,    n);    [CLASS]        NameAnalyzer    AliasSet    RefType    ReferencePropagationCallback    NameInformation    JsName    JsNameRefNode    PrototypeSetNode    SpecialReferenceNode    ClassDefiningFunctionNode    InstanceOfCheckNode    ProcessExternals    FindDependencyScopes    HoistVariableAndFunctionDeclarations    FindDeclarationsAndSetters    1    FindReferences    NodeAccumulator    RemoveListener    TriState    [METHOD]    visit    [RETURN_TYPE]    void        NodeTraversal    t    Node    n    Node    parent    [VARIABLES]    NameInformation    ns    Set    DEFAULT_GLOBAL_NAMES    externalNames    globalNames    names    nodesToKeep    NodeTraversal    t    Node    callNode    containingNode    gramps    n    nameNode    node    parent    recordNode    String    FUNCTION    PROTOTYPE_SUBSTRING    WINDOW    name    name1    name2    prototypeClass    prototypeProperty    superclass    int    PROTOTYPE_SUBSTRING_LEN    PROTOTYPE_SUFFIX_LEN    Predicate    NON_LOCAL_RESULT_PREDICATE    RefType    INHERITANCE    REGULAR    callSite    AbstractCompiler    compiler    boolean    externallyDefined    hasInstanceOfReference    hasWrittenDescendants    isExternallyReferenceable    isPrototype    onlyAffectsClassDef    referenced    removeUnreferenced    JsName    from    jsName    name    nameInfo    rhs    to    List    prototypeNames    refNodes    DiGraph    referenceGraph    TriState    BOTH    FALSE    TRUE    ListMultimap    scopes    Map    aliases    allNames    AstChangeProxy    changeProxy        	closure_33682_NameAnalyzer_1_1	636	1	src/com/google/javascript/jscomp/NameAnalyzer.java
1295	[PATCH]    for    (int    i    =    0,    n    =    alternatives.size();    i    <    n;    ++i)    {	[BUG]    [BUGGY]    for    (int    i    =    1,    n    =    alternatives.size();    i    <    n;    ++i)    {    [FE]    junit.framework.AssertionFailedError:    testSingleCharAlterations    [CONTEXT]    for    (Iterator<RegExpTree>    it    =    alternatives.iterator();    it.hasNext();)    {    RegExpTree    alternative    =    it.next();    if    (alternative.equals(NEVER_MATCHES))    {    continue;    }    if    (alternative.equals(last)    &&    !alternative.hasCapturingGroup())    {    it.remove();    }    else    {    last    =    alternative;    }    }        [BUGGY]    for    (int    i    =    1,    n    =    alternatives.size();    i    <    n;    ++i)    {    RegExpTree    alternative    =    alternatives.get(i);    if    ((alternative    instanceof    Text    &&    ((Text)    alternative).text.length()    ==    1)    ||    alternative    instanceof    Charset)    {    int    end    =    i;    int    nCharsets    =    0;    while    (end    <    n)    {    RegExpTree    follower    =    alternatives.get(end);    if    (follower    instanceof    Charset)    {    ++nCharsets;    [CLASS]        RegExpTree    1Parser    RegExpTreeAtom    Empty    Anchor    WordBoundary    BackReference    Text    Repetition    Alternation    LookaheadAssertion    CapturingGroup    Charset    DecomposedCharset    Concatenation    1Simplifier    [METHOD]    simplify    [RETURN_TYPE]    RegExpTree        String    flags    [VARIABLES]    RegExpTree    NEVER_MATCHES    a    alternative    atom    b    body    charAlternative    child    first    follower    last    out    preceder    t    ImmutableList    alternatives    elements    Charset    DOT_CHARSET    cs    int[]    members    String    canonicalized    counts    flags    namedGroups    pattern    text    int    bodyEnd    bodyLen    bodyStart    comma    digit    end    expanded    expandedMax    expandedMin    expandedSuffixLen    groupIndex    i    len    limit    max    memberIdx    min    n    nCharsets    nDigits    next    numCapturingGroups    octLimit    pos    possibleGroupIndex    result    start    suffixLen    twoDigitGroupIndex    type    ImmutableMap    NAMED_CHAR_GROUPS    Empty    INSTANCE    boolean    capturing    greedy    inverse    inverted    isCaseInsensitive    positive    char    ch    codeUnit    end    next    possibleGroupName    start    type    Iterator    it    CharRanges    DIGITS    IE_SPACE_CHARS    IE_SPEC_ERRORS    INVERSE_WORD_CHARS    LCASE_LETTERS    LETTERS    SPACE_CHARS    UCASE_LETTERS    WORD_CHARS    charGroup    chars    group    ieExplicits    range    ranges    List    alternatives    charAlternatives    elements    simplified        	closure_49912_RegExpTree_1_1	1038	1	src/com/google/javascript/jscomp/regex/RegExpTree.java
1296	[PATCH]    if    (!n.isReturn())    {	[BUG]    [BUGGY]    if    (!true)    {    [FE]    junit.framework.AssertionFailedError:    testExitTry    [CONTEXT]        ControlFlowAnalysis    cfa    =    new    ControlFlowAnalysis(    compiler,    false,    false);    cfa.process(null,    block);    ControlFlowGraph<Node>    cfg    =    cfa.getCfg();    Node    returnPathsParent    =    cfg.getImplicitReturn().getValue();    for    (DiGraphNode<Node,    Branch>    pred    :    cfg.getDirectedPredNodes(returnPathsParent))    {    Node    n    =    pred.getValue();    [BUGGY]    if    (!true)    {    return    false;    }    }    return    true;    }    [CLASS]        InstrumentFunctions    RemoveCallback    InstrumentReturns    InstrumentCallback    [METHOD]    allPathsReturn    [RETURN_TYPE]    boolean        Node    block    [VARIABLES]    AbstractCompiler    compiler    ControlFlowAnalysis    cfa    DiGraphNode    pred    boolean    Node    block    n    returnPathsParent    ControlFlowGraph    cfg    List    declarationsToRemove    removable    String    appNameSetter    appNameStr    definedFunctionName    initCodeSource    line    reportFunctionExitName    reportFunctionName    templateFilename    int    functionId    FunctionNames    functionNames        	closure_32555_InstrumentFunctions_1_1	280	1	src/com/google/javascript/jscomp/InstrumentFunctions.java
1297	[PATCH]    if    (staticsProp.isObjectLit()    &&    validateObjLit(staticsProp))    {	[BUG]    [BUGGY]    if    (validateObjLit(staticsProp))    {    [FE]    junit.framework.AssertionFailedError:    There    should    be    one    error.    expected:<1>    but    was:<0>    testInvalid4    [CONTEXT]        compiler.report(JSError.make(description,    GOOG_CLASS_CONSTRUCTOR_MISING));    return    null;    }    JSDocInfo    info    =    NodeUtil.getBestJSDocInfo(constructor);    Node    classModifier    =    null;    Node    statics    =    null;    Node    staticsProp    =    extractProperty(description,       "statics   ");    if    (staticsProp    !=    null)    {    [BUGGY]    if    (validateObjLit(staticsProp))    {    statics    =    staticsProp;    }    else    if    (staticsProp.isFunction())    {    classModifier    =    staticsProp;    }    else    {    compiler.report(    JSError.make(staticsProp,    GOOG_CLASS_STATICS_NOT_VALID));    return    null;    }    }        [CLASS]        ClosureRewriteClass    MemberDefinition    ClassDefinition    [METHOD]    extractClassDefinition    [RETURN_TYPE]    ClosureRewriteClass$ClassDefinition        Node    targetName    Node    callNode    [VARIABLES]    AbstractCompiler    compiler    boolean    DiagnosticType    GOOG_CLASS_CONSTRUCTOR_MISING    GOOG_CLASS_DESCRIPTOR_NOT_VALID    GOOG_CLASS_STATICS_NOT_VALID    GOOG_CLASS_SUPER_CLASS_NOT_VALID    GOOG_CLASS_TARGET_INVALID    GOOG_CLASS_UNEXPECTED_PARAMS    Node    assign    callNode    classModifier    constructor    description    externs    n    name    originalRoot    parent    root    scriptRoot    statics    staticsProp    superClass    target    targetName    value    List    props    staticProps    JSDocInfo    info    ClassDefinition    def    MemberDefinition    constructor    int    paramCount        	closure_21832_ClosureRewriteClass_1_1	229	1	src/com/google/javascript/jscomp/ClosureRewriteClass.java
1298	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError:    sup(function    (this:Date,    ...[?]):    number,    function    (this:String,    ...[?]):    number)    testFunctionTypeRelationships    [CONTEXT]    boolean    hasUnknownParamsOrReturn()    {    if    (parameters    !=    null)    {    for    (Node    paramNode    =    parameters.getFirstChild();    paramNode    !=    null;    paramNode    =    paramNode.getNext())    {    JSType    type    =    paramNode.getJSType();    if    (type    ==    null    ||    type.isUnknownType())    {    [BUGGY]    return    false;    }    }    }    return    returnType    ==    null    ||    returnType.isUnknownType();    }    [CLASS]        ArrowType    [METHOD]    hasUnknownParamsOrReturn    [RETURN_TYPE]    boolean        [VARIABLES]    JSType    other    otherParamType    paramType    returnType    that    thatParamType    thisParamType    type    boolean    isTopFunction    returnTypeInferred    thatIsOptional    thatIsVarArgs    thisIsOptional    thisIsVarArgs    long    serialVersionUID    Node    otherParam    param    paramNode    parameters    thatParam    thisParam        	closure_13103_ArrowType_1_1	291	1	src/com/google/javascript/rhino/jstype/ArrowType.java
1299	[PATCH]    if    (line    <    nextLine    ||    (line    ==    nextLine    &&    col    <    nextCol))    {	[BUG]    [BUGGY]    if    ((line    ==    nextLine    &&    col    <    nextCol))    {    [FE]    junit.framework.ComparisonFailure:    expected:<...   ":[   "   ",    testGoldenOutput5    [CONTEXT]    private    void    maybeVisitParent(MappingVisitor    v,    Mapping    parent,    Mapping    m)    throws    IOException    {    int    nextLine    =    getAdjustedLine(m.startPosition);    int    nextCol    =    getAdjustedCol(m.startPosition);        Preconditions.checkState(line    <    nextLine    ||    col    <=    nextCol);    [BUGGY]    if    ((line    ==    nextLine    &&    col    <    nextCol))    {    visit(v,    parent,    nextLine,    nextCol);    }    }    [CLASS]        SourceMapGeneratorV2    Mapping    MappingWriter    LineMapper    LineMapEncoder    UsedMappingCheck    MappingTraversal    [METHOD]    maybeVisitParent    [RETURN_TYPE]    void        MappingVisitor    v    Mapping    parent    Mapping    m    [VARIABLES]    boolean    finalEntry    used    validate    Appendable    out    List    mappings    Mapping    lastMapping    m    m1    m2    mapping    parent    previous    String    key    lastLineString    lastSourceFile    lineValue    name    originalName    prefix    relativeIdString    repsString    sizeId    sourceName    symbolName    value    FilePosition    adjustedEnd    adjustedStart    endPosition    offsetPosition    originalPosition    p    prefixPosition    sourceStartPosition    startPosition    MappingVisitor    v    int    UNMAPPED    base    c1    c2    charValue    col    digits    endCol    endLine    endOffsetPosition    endPositionLine    i    id    idLength    l1    l2    lastColumn    lastId    lastLine    lastSourceFileIndex    line    maxLine    minimumSize    nextCol    nextColumn    nextLine    offsetIndex    offsetLine    originalNameIndex    prefix    prefixIndex    prefixLine    rawCol    rawId    rawLine    relativeId    relativeIdLength    reps    size    sourceFile    startOffsetPosition    value    LinkedHashMap    originalNameMap    sourceFileMap        	closure_1905_SourceMapGeneratorV2_1_1	855	1	src/com/google/debugging/sourcemap/SourceMapGeneratorV2.java
1300	[PATCH]    if    (jj_3R_123())    return    true;	[BUG]    [BUGGY]    if    (false)    return    true;    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    'count(book)'.    Syntax    error    after:    'c'    testCoreFunction    [CONTEXT]    return    false;    }    final    private    boolean    jj_3R_100()    {    if    (jj_scan_token(82))    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_115()    {    [BUGGY]    if    (false)    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_134()    {    if    (jj_3R_156())    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    Token    xsp;    while    (true)    {    xsp    =    jj_scanpos;    [CLASS]    	jxpath_4870_XPathParser_1_1	2769	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java
1301	[PATCH]    if    (index    !=    WHOLE_COLLECTION    &&    isCollection())    {	[BUG]    [BUGGY]    if    (index    !=    WHOLE_COLLECTION    ==    isCollection())    {    [FE]    junit.framework.ComparisonFailure:    Evaluating    pointer    <//.[name    =    'three']>    expected:</first[/first/second]>    but    was:</first[[-2147483647]/first[-2147483647]/second[-2147483647]]>    testInfiniteDescent    [CONTEXT]    if    (buffer.length()    ==    0    ||    buffer.charAt(buffer.length()    -    1)    !=    '/')    {    buffer.append('/');    }    if    (attribute)    {    buffer.append('@');    }    buffer.append(getName());        [BUGGY]    if    (index    !=    WHOLE_COLLECTION    ==    isCollection())    {    buffer.append('[').append(index    +    1).append(']');    }    return    buffer.toString();    }    [CLASS]        NodePointer    [METHOD]    asPath    [RETURN_TYPE]    String        [VARIABLES]    Locale    loc    locale    StringBuffer    buffer    boolean    attribute    reverse    NamespaceResolver    namespaceResolver    Object    bean    rootNode    value    String    UNKNOWN_NAMESPACE    id    key    lang    name    namespace    nodeNS    nodePrefix    prefix    s1    s2    testNS    testPrefix    value    NodePointer    ivp    parent    pointer    pointer1    pointer2    startWith    valuePointer    int    WHOLE_COLLECTION    i    index        	jxpath_916_NodePointer_1_1	626	1	src/java/org/apache/commons/jxpath/ri/model/NodePointer.java
1302	[PATCH]    if    (jj_3R_186())    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    'count(book)'.    Syntax    error    after:    'c'    testCoreFunction    [CONTEXT]    final    private    boolean    jj_3R_186()    {    if    (jj_3R_188())    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_183()    {    Token    xsp;    xsp    =    jj_scanpos;    [BUGGY]    if    (true)    {    jj_scanpos    =    xsp;    if    (jj_3R_187())    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    }    else    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_181()    {    if    (jj_3R_183())    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    [CLASS]    	jxpath_5593_XPathParser_1_1	3017	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java
1303	[PATCH]    if    (getDocumentOrder()    ==    1)    {	[BUG]    [BUGGY]    if    (getDocumentOrder()    ==    -1)    {    [FE]    junit.framework.AssertionFailedError:    Evaluating    value    iterator    <integers    |    beans[1]/strings>    expected:<[String    1,    String    2,    String    3,    1,    2,    3,    4]>    but    was:<[4,    3,    2,    1,    String    3,    String    2,    String    1]>    testUnion    [CONTEXT]        set.add(pointer);    list.add(pointer);    }    }    }    if    (list.isEmpty())    {    return    false;    }        [BUGGY]    if    (getDocumentOrder()    ==    -1)    {    Collections.sort(list);    }    else    {    Collections.sort(list,    REVERSE_COMPARATOR);    }    pointerIterator    =    list.iterator();    return    true;    }    [CLASS]        EvalContext    1    [METHOD]    constructIterator    [RETURN_TYPE]    boolean        [VARIABLES]    RootContext    rootContext    boolean    done    hasPerformedIteratorStep    startedSetIteration    EvalContext    parentContext    Iterator    pointerIterator    ArrayList    list    NodePointer    pointer    int    position    Comparator    REVERSE_COMPARATOR    HashSet    set        	jxpath_660_EvalContext_1_1	195	1	src/java/org/apache/commons/jxpath/ri/EvalContext.java
1304	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.ComparisonFailure:    Evaluating    pointer    <//.[name    =    'three']>    expected:<[/first/first/second]>    but    was:<[null()]>    testInfiniteDescent    [CONTEXT]    protected    boolean    isDefaultNamespace(String    prefix)    {    if    (prefix    ==    null)    {    [BUGGY]    return    false;    }    String    namespace    =    getNamespaceURI(prefix);    if    (namespace    ==    null)    {    return    false;    }    return    namespace.equals(getDefaultNamespaceURI());    }    [CLASS]        NodePointer    [METHOD]    isDefaultNamespace    [RETURN_TYPE]    boolean        String    prefix    [VARIABLES]    Locale    loc    locale    boolean    attribute    reverse    NamespaceResolver    namespaceResolver    Object    bean    rootNode    value    String    UNKNOWN_NAMESPACE    lang    name    namespace    nodeNS    nodePrefix    prefix    s1    s2    testNS    testPrefix    NodePointer    ivp    parent    pointer    pointer1    pointer2    startWith    valuePointer    int    WHOLE_COLLECTION    i    index        	jxpath_880_NodePointer_1_1	569	1	src/java/org/apache/commons/jxpath/ri/model/NodePointer.java
1305	[PATCH]    if    (length    >    0)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    org.apache.commons.jxpath.JXPathException:    Exception    trying    to    set    value    with    xpath    integers[2];    Cannot    access    property:    integers,    Cannot    convert    value    of    class    [I    to    type    int;    For    input    string:       "   "    testSetCollectionElement    [CONTEXT]    else    if    (Collection.class.isAssignableFrom(toType))    {    Collection    collection    =    allocateCollection(toType);    for    (int    i    =    0;    i    <    length;    i++)    {    collection.add(Array.get(object,    i));    }    return    unmodifiableCollection(collection);    }    else    {    [BUGGY]    if    (false)    {    Object    value    =    Array.get(object,    0);    return    convert(value,    toType);    }    else    {    return    convert(   "   ",    toType);    }    }    [CLASS]        BasicTypeConverter    ValueNodeSet    ValuePointer    [METHOD]    convert    [RETURN_TYPE]    Object        Object    object    Class    toType    [VARIABLES]    boolean    value    double    value    Iterator    it    Collection    collection    Converter    converter    List    pointers    values    Object    array    bean    object    value    Class    cType    fromType    toType    int    i    length        	jxpath_18603_BasicTypeConverter_1_1	218	1	src/java/org/apache/commons/jxpath/util/BasicTypeConverter.java
1306	[PATCH]    index    +    1,	[BUG]    [BUGGY]    index    %    1,    [FE]    junit.framework.AssertionFailedError:    Remove    array    element    expected:<temp2>    but    was:<temp1>    testRemovePathArrayElement    [CONTEXT]    Object    smaller    =    Array.newInstance(    collection.getClass().getComponentType(),    length    -    1);    if    (index    >    0)    {    System.arraycopy(collection,    0,    smaller,    0,    index);    }    if    (index    <    length    -    1)    {    System.arraycopy(    collection,    [BUGGY]    index    %    1,    smaller,    index,    length    -    index    -    1);    }    return    smaller;    }    else    if    (collection    instanceof    List)    {    int    size    =    ((List)    collection).size();    if    (index    <    size)    {    ((List)    collection).remove(index);    [CLASS]        ValueUtils    [METHOD]    remove    [RETURN_TYPE]    Object        Object    collection    int    index    [VARIABLES]    Iterator    it    Object    collection    smaller    boolean    Map    dynamicPropertyHandlerMap    int    UNKNOWN_LENGTH_MAX_COUNT    i    index    length    size        	jxpath_19143_ValueUtils_1_1	233	1	src/java/org/apache/commons/jxpath/util/ValueUtils.java
1307	[PATCH]    if    (((active0    &=    old0)    |    (active1    &=    old1))    ==    0L)	[BUG]    [BUGGY]    if    (((active0    &=    old0)    |    (active1    &=    old1))    <=    0L)    [FE]    junit.framework.AssertionFailedError:    Expression    class    for    string(3)    expected:<class    org.apache.commons.jxpath.ri.compiler.CoreFunction>    but    was:<class    org.apache.commons.jxpath.ri.compiler.ExtensionFunction>    testCoreFunction    [CONTEXT]    {    [BUGGY]    if    (((active0    &=    old0)    |    (active1    &=    old1))    <=    0L)    return    jjStartNfa_0(4,    old0,    old1);    try    {    curChar    =    input_stream.readChar();    }    catch(java.io.IOException    e)    {    jjStopStringLiteralDfa_0(5,    active0,    active1);    return    6;    }    switch(curChar)    {    case    45:    return    jjMoveStringLiteralDfa7_0(active0,    0x8400000000000000L,    active1,    0x2000L);    [CLASS]        XPathParserTokenManager    [METHOD]    jjMoveStringLiteralDfa6_0    [RETURN_TYPE]    int        long    old0    long    active0    long    old1    long    active1    [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    IOException    e    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    kind    lexState    pos    state    long    active0    active1    old0    old1        	jxpath_9993_XPathParserTokenManager_1_1	762	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
1308	[PATCH]    jjmatchedKind    =    78;	[BUG]    [BUGGY]    jjmatchedKind    =    -78;    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -2    testVariables    [CONTEXT]    {    switch    (pos)    {    case    0:    if    ((active1    &    0xc0000L)    !=    0L)    return    10;    if    ((active0    &    0xfffffffff8000000L)    !=    0L    ||    (active1    &    0x3fffL)    !=    0L)    {    [BUGGY]    jjmatchedKind    =    -78;    return    12;    }    return    -1;    case    1:    if    ((active0    &    0x8000008000000L)    !=    0L)    return    12;    if    ((active0    &    0xfff7fffff0000000L)    !=    0L    ||    (active1    &    0x3fffL)    !=    0L)    {    jjmatchedKind    =    78;    jjmatchedPos    =    1;    [CLASS]        XPathParserTokenManager    [METHOD]    jjStopStringLiteralDfa_0    [RETURN_TYPE]    int        int    pos    long    active0    long    active1    [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    lexState    pos    long    active0    active1        	jxpath_7871_XPathParserTokenManager_1_1	19	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
1309	[PATCH]    if    (Modifier.isPublic(clazz.getModifiers()))    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    org.apache.commons.jxpath.JXPathInvalidAccessException:    Cannot    invoke    public    int    java.util.Collections$UnmodifiableCollection.size();    Class    org.apache.commons.jxpath.functions.MethodFunction    can    not    access    a    member    of    class    java.util.Collections$UnmodifiableCollection    with    modifiers       "public   "    testCollectionMethodCall    [CONTEXT]    return    (null);    }        if    (!Modifier.isPublic(method.getModifiers()))    {    return    (null);    }        Class    clazz    =    method.getDeclaringClass();    [BUGGY]    if    (true)    {    return    (method);    }    String    name    =    method.getName();    Class[]    parameterTypes    =    method.getParameterTypes();    while    (clazz    !=    null)    {        Method    aMethod    =    getAccessibleMethodFromInterfaceNest(clazz,    name,    parameterTypes);    if    (aMethod    !=    null)    {    [CLASS]        ValueUtils    [METHOD]    getAccessibleMethod    [RETURN_TYPE]    Method        Method    method    [VARIABLES]    Class[]    parameterTypes    boolean    Class    clazz    Method    aMethod    method    String    name    Map    dynamicPropertyHandlerMap    int    UNKNOWN_LENGTH_MAX_COUNT    i    index    length    size    NoSuchMethodException    e        	jxpath_19249_ValueUtils_1_1	553	1	src/java/org/apache/commons/jxpath/util/ValueUtils.java
1310	[PATCH]    if    (jj_3R_156())    return    true;	[BUG]    [BUGGY]    if    (jj_3R_156())    return    false;    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    'my:function(3,    other.function())'.    Syntax    error    after:    'my:f'    testExtensionFunction    [CONTEXT]    return    false;    }    final    private    boolean    jj_3R_115()    {    if    (jj_3R_123())    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_134()    {    [BUGGY]    if    (jj_3R_156())    return    false;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    Token    xsp;    while    (true)    {    xsp    =    jj_scanpos;    if    (jj_3R_157())    {    jj_scanpos    =    xsp;    break;    }    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    }    return    false;    }        [CLASS]    	jxpath_4887_XPathParser_1_1	2775	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java
1311	[PATCH]    if    (buffer.length()    ==    0	[BUG]    [BUGGY]    if    (buffer.length()    >=    0    [FE]    junit.framework.ComparisonFailure:    Evaluating    pointer    <//.[name    =    'three']>    expected:</[]first/first/second>    but    was:</[/]first/first/second>    testInfiniteDescent    [CONTEXT]        if    (parent    !=    null    &&    parent.isContainer())    {    return    parent.asPath();    }    StringBuffer    buffer    =    new    StringBuffer();    if    (parent    !=    null)    {    buffer.append(parent.asPath());    }        [BUGGY]    if    (buffer.length()    >=    0    ||    buffer.charAt(buffer.length()    -    1)    !=    '/')    {    buffer.append('/');    }    if    (attribute)    {    buffer.append('@');    }    buffer.append(getName());    if    (index    !=    WHOLE_COLLECTION    &&    isCollection())    {    buffer.append('[').append(index    +    1).append(']');    [CLASS]        NodePointer    [METHOD]    asPath    [RETURN_TYPE]    String        [VARIABLES]    Locale    loc    locale    StringBuffer    buffer    boolean    attribute    reverse    NamespaceResolver    namespaceResolver    Object    bean    rootNode    value    String    UNKNOWN_NAMESPACE    id    key    lang    name    namespace    nodeNS    nodePrefix    prefix    s1    s2    testNS    testPrefix    value    NodePointer    ivp    parent    pointer    pointer1    pointer2    startWith    valuePointer    int    WHOLE_COLLECTION    i    index        	jxpath_893_NodePointer_1_1	617	1	src/java/org/apache/commons/jxpath/ri/model/NodePointer.java
1312	[PATCH]    if    (jj_3R_183())    return    true;	[BUG]    [BUGGY]    if    (jj_3R_183())    return    false;    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    'my:function(3,    other.function())'.    Syntax    error    after:    'my:f'    testExtensionFunction    [CONTEXT]    xsp    =    jj_scanpos;    if    (jj_3R_186())    {    jj_scanpos    =    xsp;    if    (jj_3R_187())    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    }    else    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_181()    {    [BUGGY]    if    (jj_3R_183())    return    false;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_180()    {    if    (jj_3R_182())    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }        [CLASS]    	jxpath_5623_XPathParser_1_1	3026	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java
1313	[PATCH]    0);	[BUG]    [BUGGY]    1);    [FE]    junit.framework.AssertionFailedError:    Checking    value:    /vendor/contact/.[@name='jack']    expected:<Jack>    but    was:<John>    testDoPredicatesStandard    [CONTEXT]    Expression    predicates[]    =    step.getPredicates();    int    axis    =    step.getAxis();    if    (axis    ==    Compiler.AXIS_SELF)    {    return    doPredicate(    context,    parent,    steps,    currentStep,    predicates,    [BUGGY]    1);    }    Expression    predicate    =    predicates[0];                        if    (predicates.length    ==    1)    {    [CLASS]    	jxpath_13652_SimplePathInterpreter_1_1	362	1	src/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreter.java
1314	[PATCH]    buffer.append(   "[   ").append(index    +    1).append(']');	[BUG]    [BUGGY]    buffer.append(   "[   ").append(index    -    1).append(']');    [FE]    junit.framework.ComparisonFailure:    Checking    pointer:    /list[@name='fruitco']    expected:</list[[5]]>    but    was:</list[[3]]>    testDoPredicateName    [CONTEXT]    public    String    asPath()    {    StringBuffer    buffer    =    new    StringBuffer();    NodePointer    parent    =    getImmediateParentPointer();    if    (parent    !=    null)    {    buffer.append(parent.asPath());    if    (index    !=    WHOLE_COLLECTION)    {        if    (parent.getIndex()    !=    WHOLE_COLLECTION)    {    buffer.append(   "/.   ");    }    [BUGGY]    buffer.append(   "[   ").append(index    -    1).append(']');    }    }    else    {    if    (index    !=    WHOLE_COLLECTION)    {    buffer.append(   "/.[   ").append(index    +    1).append(']');    }    else    {    buffer.append(   "/   ");    }    }    [CLASS]        CollectionPointer    [METHOD]    asPath    [RETURN_TYPE]    String        [VARIABLES]    Object    collection    object    value    StringBuffer    buffer    NodePointer    parent    pointer1    pointer2    ptr    startWith    valuePointer    boolean        	jxpath_16144_CollectionPointer_1_1	240	1	src/java/org/apache/commons/jxpath/ri/model/beans/CollectionPointer.java
1315	[PATCH]    if    ((active0    &    0xff62fff600000000L)    !=    0L    ||    (active1    &    0x2907L)    !=    0L)	[BUG]    [BUGGY]    if    ((active1    &    10503L)    !=    0L)    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    '/vendor/contact[@name=\'jack\']'.    Invalid    symbol    'c'    after:    '/vendor/conta'    testDoStepPredicatesStandard    [CONTEXT]    {    if    (jjmatchedPos    !=    3)    {    jjmatchedKind    =    78;    jjmatchedPos    =    3;    }    return    12;    }    return    -1;    case    4:    [BUGGY]    if    ((active1    &    10503L)    !=    0L)    {    jjmatchedKind    =    78;    jjmatchedPos    =    4;    return    12;    }    if    ((active0    &    0x4000000000000L)    !=    0L    ||    (active1    &    0x1420L)    !=    0L)    return    12;    if    ((active0    &    0x800000000L)    !=    0L)    {    if    (jjmatchedPos    <    3)    [CLASS]        XPathParserTokenManager    [METHOD]    jjStopStringLiteralDfa_0    [RETURN_TYPE]    int        int    pos    long    active0    long    active1    [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    lexState    pos    long    active0    active1        	jxpath_8057_XPathParserTokenManager_1_1	57	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
1316	[PATCH]    return    jjMoveStringLiteralDfa1_0(0x80L,    0x0L);	[BUG]    [BUGGY]    return    jjMoveStringLiteralDfa1_0(0x80L,    1L);    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    '/foo/bar'.    Syntax    error    after:    '/'    testLocationPathAxisChild    [CONTEXT]    return    jjStopAtPos(0,    9);    case    44:    return    jjStopAtPos(0,    87);    case    45:    return    jjStopAtPos(0,    10);    case    46:    jjmatchedKind    =    82;    return    jjMoveStringLiteralDfa1_0(0x0L,    0x80000L);    case    47:    jjmatchedKind    =    6;    [BUGGY]    return    jjMoveStringLiteralDfa1_0(0x80L,    1L);    case    58:    return    jjStopAtPos(0,    79);    case    60:    jjmatchedKind    =    13;    return    jjMoveStringLiteralDfa1_0(0x4000L,    0x0L);    case    61:    return    jjStopAtPos(0,    11);    case    62:    jjmatchedKind    =    15;    return    jjMoveStringLiteralDfa1_0(0x10000L,    0x0L);    [CLASS]        XPathParserTokenManager    [METHOD]    jjMoveStringLiteralDfa0_0    [RETURN_TYPE]    int        [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    kind    lexState    pos    state        	jxpath_9158_XPathParserTokenManager_1_1	427	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
1317	[PATCH]    return    jjStopAtPos(1,    14);	[BUG]    [BUGGY]    return    jjStopAtPos(1,    0);    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    '1    >    (1    and    2    <=    (2    or    3)    =    4)'.    Syntax    error    after:    '1    >'    testCoreOperationGreaterThan    [CONTEXT]    return    jjStopAtPos(1,    83);    break;    case    47:    if    ((active0    &    0x80L)    !=    0L)    return    jjStopAtPos(1,    7);    break;    case    61:    if    ((active0    &    0x1000L)    !=    0L)    return    jjStopAtPos(1,    12);    else    if    ((active0    &    0x4000L)    !=    0L)    [BUGGY]    return    jjStopAtPos(1,    0);    else    if    ((active0    &    0x10000L)    !=    0L)    return    jjStopAtPos(1,    16);    break;    case    97:    return    jjMoveStringLiteralDfa2_0(active0,    0xc1012000000000L,    active1,    0xa0L);    case    100:    if    ((active0    &    0x8000000000000L)    !=    0L)    return    jjStartNfaWithStates_0(1,    51,    12);    break;    case    101:    [CLASS]        XPathParserTokenManager    [METHOD]    jjMoveStringLiteralDfa1_0    [RETURN_TYPE]    int        long    active0    long    active1    [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    IOException    e    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    kind    lexState    pos    state    long    active0    active1        	jxpath_9317_XPathParserTokenManager_1_1	501	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
1318	[PATCH]    if    ((active0    &    0x4000000000L)    !=    0L)	[BUG]    [BUGGY]    if    (true)    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    'namespace::foo:bar'.    Syntax    error    after:    'n'    testLocationPathAxisOther    [CONTEXT]    try    {    curChar    =    input_stream.readChar();    }    catch(java.io.IOException    e)    {    jjStopStringLiteralDfa_0(8,    active0,    active1);    return    9;    }    switch(curChar)    {    case    45:    return    jjMoveStringLiteralDfa10_0(active0,    0x3040600000000000L,    active1,    0x1L);    case    58:    [BUGGY]    if    (true)    return    jjStopAtPos(9,    38);    return    jjMoveStringLiteralDfa10_0(active0,    0x78000000000L,    active1,    0L);    case    101:    if    ((active0    &    0x20000000000000L)    !=    0L)    return    jjStartNfaWithStates_0(9,    53,    12);    break;    case    103:    return    jjMoveStringLiteralDfa10_0(active0,    0x400000000L,    active1,    0L);    case    109:    return    jjMoveStringLiteralDfa10_0(active0,    0L,    active1,    0x2000L);    [CLASS]        XPathParserTokenManager    [METHOD]    jjMoveStringLiteralDfa9_0    [RETURN_TYPE]    int        long    old0    long    active0    long    old1    long    active1    [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    IOException    e    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    kind    lexState    pos    state    long    active0    active1    old0    old1        	jxpath_10298_XPathParserTokenManager_1_1	903	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
1319	[PATCH]    return    jjMoveStringLiteralDfa4_0(active0,    0L,    active1,    0x400L);	[BUG]    [BUGGY]    return    jjMoveStringLiteralDfa4_0(active0,    0L,    active1,    0L);    [FE]    junit.framework.AssertionFailedError:    Expression    class    for    floor(11.4)    expected:<class    org.apache.commons.jxpath.ri.compiler.CoreFunction>    but    was:<class    org.apache.commons.jxpath.ri.compiler.ExtensionFunction>    testCoreFunction    [CONTEXT]    return    jjMoveStringLiteralDfa4_0(active0,    0x8102000000000000L,    active1,    0L);    case    108:    if    ((active1    &    0x40L)    !=    0L)    return    jjStartNfaWithStates_0(3,    70,    12);    return    jjMoveStringLiteralDfa4_0(active0,    0x241000000000L,    active1,    0x804L);    case    109:    return    jjMoveStringLiteralDfa4_0(active0,    0x200000000L,    active1,    0x2001L);    case    110:    return    jjMoveStringLiteralDfa4_0(active0,    0x4000000000000L,    active1,    0x1002L);    case    111:    [BUGGY]    return    jjMoveStringLiteralDfa4_0(active0,    0L,    active1,    0L);    case    114:    return    jjMoveStringLiteralDfa4_0(active0,    0x400008000000000L,    active1,    0L);    case    115:    return    jjMoveStringLiteralDfa4_0(active0,    0x7000000000000000L,    active1,    0x20L);    case    116:    if    ((active0    &    0x100000000L)    !=    0L)    return    jjStartNfaWithStates_0(3,    32,    12);    else    if    ((active0    &    0x1000000000000L)    !=    0L)    return    jjStartNfaWithStates_0(3,    48,    12);    return    jjMoveStringLiteralDfa4_0(active0,    0x800000000000000L,    active1,    0L);    [CLASS]        XPathParserTokenManager    [METHOD]    jjMoveStringLiteralDfa3_0    [RETURN_TYPE]    int        long    old0    long    active0    long    old1    long    active1    [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    IOException    e    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    kind    lexState    pos    state    long    active0    active1    old0    old1        	jxpath_9697_XPathParserTokenManager_1_1	643	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
1320	[PATCH]    if    (!lname.equals(   "*   "))    {	[BUG]    [BUGGY]    if    (!false)    {    [FE]    junit.framework.AssertionFailedError:    Evaluating    value    iterator    <vendor/location[1]/@*>    expected:<[,    100,    local]>    but    was:<[]>    testAxisAttribute    [CONTEXT]    public    DOMAttributeIterator(NodePointer    parent,    QName    name)    {    this.parent    =    parent;    this.name    =    name;    attributes    =    new    ArrayList();    Node    node    =    (Node)    parent.getNode();    if    (node.getNodeType()    ==    Node.ELEMENT_NODE)    {    String    lname    =    name.getName();    [BUGGY]    if    (!false)    {    Attr    attr    =    getAttribute((Element)    node,    name);    if    (attr    !=    null)    {    attributes.add(attr);    }    }    else    {    NamedNodeMap    map    =    node.getAttributes();    int    count    =    map.getLength();    for    (int    i    =    0;    i    <    count;    i++)    {    Attr    attr    =    (Attr)    map.item(i);    [CLASS]        DOMAttributeIterator    [METHOD]    <init>    [RETURN_TYPE]    QName)        NodePointer    parent    QName    name    [VARIABLES]    NamedNodeMap    map    boolean    QName    name    Node    node    List    attributes    NodePointer    parent    String    lname    int    count    i    position    Attr    attr        	jxpath_16396_DOMAttributeIterator_1_1	49	1	src/java/org/apache/commons/jxpath/ri/model/dom/DOMAttributeIterator.java
1321	[PATCH]    return    setPosition(getCurrentPosition()    +    1);	[BUG]    [BUGGY]    return    setPosition(getCurrentPosition()    +    -1);    [FE]    junit.framework.ComparisonFailure:    Evaluating    pointer    <//.[name    =    'three']>    expected:<[/first/first/second]>    but    was:<[null()]>    testInfiniteDescent    [CONTEXT]    public    boolean    nextNode()    {    [BUGGY]    return    setPosition(getCurrentPosition()    +    -1);    }    [CLASS]        ChildContext    [METHOD]    nextNode    [RETURN_TYPE]    boolean        [VARIABLES]    NodeIterator    iterator    boolean    reverse    startFromParentLocation    NodeTest    nodeTest        	jxpath_12900_ChildContext_1_1	90	1	src/java/org/apache/commons/jxpath/ri/axes/ChildContext.java
1322	[PATCH]    return    false;	[BUG]    [BUGGY]    return    true;    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    'string-length(\'a\')'.    Syntax    error    after:    's'    testCoreFunction    [CONTEXT]    }    else    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    }    else    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    }    else    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    }    else    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_76()    {    if    (jj_scan_token(FUNCTION_STRING_LENGTH))    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    [BUGGY]    return    true;    }    final    private    boolean    jj_3R_75()    {    if    (jj_scan_token(FUNCTION_SUBSTRING))    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_74()    {    if    (jj_scan_token(FUNCTION_SUBSTRING_AFTER))    return    true;    [CLASS]    	jxpath_6889_XPathParser_1_1	3445	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java
1323	[PATCH]    ||    (namespace    !=    null    &&    !namespace.equals(this.namespace)))    {	[BUG]    [BUGGY]    ||    (true    &&    !namespace.equals(this.namespace)))    {    [FE]    java.lang.NullPointerException    testMethodCall    [CONTEXT]    {    if    ((namespace    ==    null    &&    this.namespace    !=    null)    [BUGGY]    ||    (true    &&    !namespace.equals(this.namespace)))    {    return    null;    }    if    (parameters    ==    null)    {    parameters    =    EMPTY_ARRAY;    }    if    (parameters.length    >=    1)    {    Object    target    =    TypeUtils.convert(parameters[0],    Object.class);    if    (target    !=    null)    {    [CLASS]        PackageFunctions    [METHOD]    getFunction    [RETURN_TYPE]    Function        String    namespace    String    name    Object[]    parameters    [VARIABLES]    boolean    Constructor    constructor    Iterator    iter    Object    target    Class    functionClass    String    className    classPrefix    fullName    methodName    name    namespace    Method    method    ClassNotFoundException    ex    Object[]    EMPTY_ARRAY    parameters    int    inx        	jxpath_107_PackageFunctions_1_1	115	1	src/java/org/apache/commons/jxpath/PackageFunctions.java
1324	[PATCH]    if    (jj_3R_40())    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    '/    +    1.2200767636621035'.    Syntax    error    after:    '/'    testThreads    [CONTEXT]    if    (jj_3R_35())    {    jj_scanpos    =    xsp;    if    (jj_3R_36())    {    jj_scanpos    =    xsp;    if    (jj_3R_37())    {    jj_scanpos    =    xsp;    if    (jj_3R_38())    {    jj_scanpos    =    xsp;    if    (jj_3R_39())    {    jj_scanpos    =    xsp;    [BUGGY]    if    (false)    {    jj_scanpos    =    xsp;    if    (jj_3R_41())    {    jj_scanpos    =    xsp;    if    (jj_3R_42())    {    jj_scanpos    =    xsp;    if    (jj_3R_43())    {    jj_scanpos    =    xsp;    if    (jj_3R_44())    {    jj_scanpos    =    xsp;    if    (jj_3R_45())    {    [CLASS]    	jxpath_3738_XPathParser_1_1	2488	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java
1325	[PATCH]    int    index    =    1;	[BUG]    [BUGGY]    int    index    =    0;    [FE]    junit.framework.AssertionFailedError:    ITERATIONS:    Multiple,    propertyIndex=3,    offset=-1,    useStartLocation=true,    reverse=true    expected:<8>    but    was:<7>    testMultipleIterators    [CONTEXT]    offset    =    position    -    index;    }    if    (index    <=    position    &&    position    <    index    +    length)    {    propertyNodePointer.setIndex(offset);    return    true;    }    index    +=    length;    }    }    else    {    [BUGGY]    int    index    =    0;    int    start    =    startPropertyIndex;    if    (start    ==    PropertyPointer.UNSPECIFIED_PROPERTY)    {    start    =    count    -    1;    }    for    (int    i    =    start;    i    >=    0;    i--)    {    propertyNodePointer.setPropertyIndex(i);    int    length    =    getLength();    if    (i    ==    startPropertyIndex)    {    int    end    =    startIndex;    if    (end    ==    -1)    {    [CLASS]        PropertyIterator    [METHOD]    setPositionAllProperties    [RETURN_TYPE]    boolean        int    position    [VARIABLES]    boolean    empty    includeStart    ready    reverse    targetReady    String    name    PropertyPointer    propertyNodePointer    int    count    end    i    index    length    offset    position    start    startIndex    startPropertyIndex        	jxpath_15605_PropertyIterator_1_1	211	1	src/java/org/apache/commons/jxpath/ri/model/beans/PropertyIterator.java
1326	[PATCH]    if    (testLocalName.equals(   "*   ")    ||    testLocalName.equals(nodeLocalName))    {	[BUG]    [BUGGY]    if    (testLocalName.equals(nodeLocalName))    {    [FE]    junit.framework.AssertionFailedError:    Evaluating    value    iterator    <vendor/product/price:amount/@price:*>    expected:<[10%]>    but    was:<[]>    testAxisAttribute    [CONTEXT]    if    (nodePrefix    !=    null    &&    nodePrefix.equals(   "xmlns   "))    {    return    false;    }    if    (nodePrefix    ==    null    &&    nodeLocalName.equals(   "xmlns   "))    {    return    false;    }    String    testLocalName    =    name.getName();    [BUGGY]    if    (testLocalName.equals(nodeLocalName))    {    String    testPrefix    =    testName.getPrefix();    if    (equalStrings(testPrefix,    nodePrefix))    {    return    true;    }    String    testNS    =    null;    if    (testPrefix    !=    null)    {    testNS    =    parent.getNamespaceURI(testPrefix);    }    [CLASS]        DOMAttributeIterator    [METHOD]    testAttr    [RETURN_TYPE]    boolean        Attr    attr    QName    testName    [VARIABLES]    boolean    QName    name    testName    List    attributes    NodePointer    parent    String    nodeLocalName    nodeNS    nodePrefix    testLocalName    testNS    testPrefix    int    count    i    position    Attr    attr        	jxpath_16422_DOMAttributeIterator_1_1	81	1	src/java/org/apache/commons/jxpath/ri/model/dom/DOMAttributeIterator.java
1327	[PATCH]    if    (index    ==    WHOLE_COLLECTION)    {	[BUG]    [BUGGY]    if    (index    >=    WHOLE_COLLECTION)    {    [FE]    org.apache.commons.jxpath.JXPathNotFoundException:    No    value    for    xpath:    map[@name    =    'TestKey2'][1]    testRemovePathArrayElement    [CONTEXT]    public    void    remove()    {    [BUGGY]    if    (index    >=    WHOLE_COLLECTION)    {    removeKey();    }    else    if    (isCollection())    {    Object    collection    =    ValueUtils.remove(getBaseValue(),    index);    handler.setProperty(getBean(),    getPropertyName(),    collection);    }    else    if    (index    ==    0)    {    removeKey();    }    }    [CLASS]        DynamicPropertyPointer    [METHOD]    remove    [RETURN_TYPE]    void        [VARIABLES]    Object    collection    DynamicPropertyHandler    handler    String    name    propertyName    requiredPropertyName    String[]    allNames    names    boolean    long    serialVersionUID        	jxpath_17562_DynamicPropertyPointer_1_1	254	1	src/java/org/apache/commons/jxpath/ri/model/dynamic/DynamicPropertyPointer.java
1328	[PATCH]    if    (jj_3R_193())    {    jj_scanpos    =    xsp;    break;    }	[BUG]    [BUGGY]    if    (true)    {    jj_scanpos    =    xsp;    break;    }    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    'test:string(/beans/name)'.    Syntax    error    after:    'test:s'    testStaticMethodCall    [CONTEXT]    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_191()    {    if    (jj_3R_16())    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    Token    xsp;    while    (true)    {    xsp    =    jj_scanpos;    [BUGGY]    if    (true)    {    jj_scanpos    =    xsp;    break;    }    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    }    return    false;    }    final    private    boolean    jj_3R_184()    {    if    (jj_3R_116())    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    [CLASS]    	jxpath_5445_XPathParser_1_1	2956	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java
1329	[PATCH]    if    (jj_scan_token(FUNCTION_FALSE))    return    true;	[BUG]    [BUGGY]    if    (jj_scan_token(FUNCTION_FALSE))    return    false;    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    'my:function(3,    other.function())'.    Syntax    error    after:    'my:f'    testExtensionFunction    [CONTEXT]    final    private    boolean    jj_3R_174()    {    if    (jj_scan_token(88))    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    if    (jj_3R_170())    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_45()    {    [BUGGY]    if    (jj_scan_token(FUNCTION_FALSE))    return    false;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_44()    {    if    (jj_scan_token(FUNCTION_TRUE))    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }        [CLASS]    	jxpath_2962_XPathParser_1_1	2174	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java
1330	[PATCH]    compareNodePointers(p1.parent,    depth1    -    1,    p2.parent,    depth2    -    1);	[BUG]    [BUGGY]    compareNodePointers(p1.parent,    depth1    -    1,    p2.parent,    depth2    -    -1);    [FE]    java.lang.NullPointerException    testExpressionContext    [CONTEXT]    if    (p1    !=    null    &&    p1.equals(p2))    {    return    0;    }    if    (depth1    ==    1)    {    throw    new    JXPathException(       "Cannot    compare    pointers    that    do    not    belong    to    the    same    tree:    '   "    +    p1    +       "'    and    '   "    +    p2    +       "'   ");    }    int    r    =    [BUGGY]    compareNodePointers(p1.parent,    depth1    -    1,    p2.parent,    depth2    -    -1);    if    (r    !=    0)    {    return    r;    }    return    p1.parent.compareChildNodePointers(p1,    p2);    }    [CLASS]        NodePointer    [METHOD]    compareNodePointers    [RETURN_TYPE]    int        NodePointer    p1    int    depth1    NodePointer    p2    int    depth2    [VARIABLES]    Locale    loc    locale    boolean    attribute    reverse    NamespaceResolver    namespaceResolver    Object    bean    object    rootNode    value    String    UNKNOWN_NAMESPACE    id    key    lang    name    namespace    nodeNS    nodePrefix    prefix    s1    s2    testNS    testPrefix    value    NodePointer    ivp    p1    p2    parent    pointer    pointer1    pointer2    ptr    startWith    valuePointer    int    WHOLE_COLLECTION    depth1    depth2    i    index    r        	jxpath_1003_NodePointer_1_1	711	1	src/java/org/apache/commons/jxpath/ri/model/NodePointer.java
1331	[PATCH]    if    (s1    !=    null    &&    s2    ==    null)    {	[BUG]    [BUGGY]    if    (s1    !=    null)    {    [FE]    junit.framework.AssertionFailedError:    Evaluating    <local-name(vendor/product/price:amount)>    expected:<amount>    but    was:<>    testAxisChild    [CONTEXT]    private    static    boolean    equalStrings(String    s1,    String    s2)    {    if    (s1    ==    null    &&    s2    !=    null)    {    return    false;    }    [BUGGY]    if    (s1    !=    null)    {    return    false;    }    if    (s1    !=    null    &&    !s1.trim().equals(s2.trim()))    {    return    false;    }    return    true;    }    [CLASS]        JDOMNodePointer    [METHOD]    equalStrings    [RETURN_TYPE]    boolean        String    s1    String    s2    [VARIABLES]    Object    child    n    node    node1    node2    value    String    XMLNS_NAMESPACE_URI    XML_NAMESPACE_URI    id    ln    namespaceURI    nodeNS    nodePI    ns    prefix    s1    s2    string    testPI    testPrefix    text    boolean    long    serialVersionUID        	jxpath_18124_JDOMNodePointer_1_1	401	1	src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMNodePointer.java
1332	[PATCH]    int    pi    =    0;	[BUG]    [BUGGY]    int    pi    =    1;    [FE]    org.apache.commons.jxpath.JXPathInvalidAccessException:    Cannot    invoke    public    int    java.lang.String.length();    wrong    number    of    arguments    testMethodCall    [CONTEXT]    args    =    new    Object[parameters.length    +    pi];    if    (pi    ==    1)    {    args[0]    =    context;    }    for    (int    i    =    0;    i    <    parameters.length;    i++)    {    args[i    +    pi]    =    TypeUtils.convert(parameters[i],    types[i    +    pi]);    }    }    else    {    [BUGGY]    int    pi    =    1;    Class    types[]    =    method.getParameterTypes();    if    (types.length    >=    1    &&    ExpressionContext.class.isAssignableFrom(types[0]))    {    pi    =    1;    }    target    =    TypeUtils.convert(    parameters[0],    method.getDeclaringClass());    args    =    new    Object[parameters.length    -    1    +    pi];    [CLASS]        MethodFunction    [METHOD]    invoke    [RETURN_TYPE]    Object        ExpressionContext    context    Object[]    parameters    [VARIABLES]    Class[]    types    boolean    ExpressionContext    context    Throwable    ex    Object    target    Method    method    Object[]    EMPTY_ARRAY    args    parameters    int    i    pi        	jxpath_520_MethodFunction_1_1	69	1	src/java/org/apache/commons/jxpath/functions/MethodFunction.java
1333	[PATCH]    if    (jj_3R_15())    return    true;	[BUG]    [BUGGY]    if    (true)    return    true;    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    'my:function(3,    other.function())'.    Syntax    error    after:    'my:f'    testExtensionFunction    [CONTEXT]    return    false;    }    final    private    boolean    jj_3R_139()    {    if    (jj_3R_98())    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_138()    {    [BUGGY]    if    (true)    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    if    (jj_scan_token(79))    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    if    (jj_3R_15())    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_154()    {    if    (jj_scan_token(88))    return    true;    [CLASS]    	jxpath_6039_XPathParser_1_1	3168	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java
1334	[PATCH]    index    =    end    -    position    +    2;	[BUG]    [BUGGY]    index    =    (end    -    position)    /    2;    [FE]    junit.framework.AssertionFailedError:    ITERATIONS:    Individual,    relativePropertyIndex=0,    offset=-1,    useStartLocation=true,    reverse=true    expected:<4>    but    was:<1>    testIndividualIterators    [CONTEXT]    }    if    (index    >    length)    {    return    false;    }    }    else    {    int    end    =    startIndex;    if    (end    ==    -1)    {    end    =    length    -    1;    }    [BUGGY]    index    =    (end    -    position)    /    2;    if    (!includeStart)    {    index--;    }    if    (index    <    1)    {    return    false;    }    }    [CLASS]        PropertyIterator    [METHOD]    setPositionIndividualProperty    [RETURN_TYPE]    boolean        int    position    [VARIABLES]    boolean    empty    includeStart    ready    reverse    targetReady    String    name    PropertyPointer    propertyNodePointer    int    end    index    length    position    startIndex    startPropertyIndex        	jxpath_15533_PropertyIterator_1_1	165	1	src/java/org/apache/commons/jxpath/ri/model/beans/PropertyIterator.java
1335	[PATCH]    return    jjMoveStringLiteralDfa9_0(active0,    0x3000660000000000L,    active1,    0L);	[BUG]    [BUGGY]    return    jjMoveStringLiteralDfa9_0(active0,    -3458876664006574080L,    active1,    0L);    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    'preceding-sibling::foo:bar'.    Syntax    error    after:    'preceding-sibling:'    testLocationPathAxisOther    [CONTEXT]    if    ((active0    &    0x4000000000000000L)    !=    0L)    {    jjmatchedKind    =    62;    jjmatchedPos    =    8;    }    [CLASS]        XPathParserTokenManager    [METHOD]    jjMoveStringLiteralDfa8_0    [RETURN_TYPE]    int        long    old0    long    active0    long    old1    long    active1    [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    IOException    e    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    kind    lexState    pos    state    long    active0    active1    old0    old1        	jxpath_10251_XPathParserTokenManager_1_1	875	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
1336	[PATCH]    if    (jj_3R_16())    return    true;	[BUG]    [BUGGY]    if    (false)    return    true;    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    '/    +    1.0533525645577249'.    Syntax    error    after:    '/'    testThreads    [CONTEXT]    Token    xsp;    while    (true)    {    xsp    =    jj_scanpos;    if    (jj_3R_190())    {    jj_scanpos    =    xsp;    break;    }    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    }    return    false;    }    final    private    boolean    jj_3_2()    {    [BUGGY]    if    (false)    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_185()    {    if    (jj_3R_16())    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }        [CLASS]    	jxpath_5385_XPathParser_1_1	2933	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java
1337	[PATCH]    assertArgCount(1);	[BUG]    [BUGGY]    assertArgCount(-1);    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Incorrect    number    of    argument:    name(.)    testUnion    [CONTEXT]    protected    Object    functionName(EvalContext    context)    {    if    (getArgumentCount()    ==    0)    {    NodePointer    ptr    =    context.getCurrentNodePointer();    return    ptr.getName().toString();    }    [BUGGY]    assertArgCount(-1);    Object    set    =    getArg1().compute(context);    if    (set    instanceof    EvalContext)    {    EvalContext    ctx    =    (EvalContext)    set;    if    (ctx.hasNext())    {    NodePointer    ptr    =    (NodePointer)    ctx.next();    return    ptr.getName().toString();    }    }    return       "   ";    }    [CLASS]        CoreFunction    [METHOD]    functionName    [RETURN_TYPE]    Object        EvalContext    context    [VARIABLES]    EvalContext    context    ctx    Object    set    NodePointer    ptr    boolean    Double    ZERO    int    count    functionCode    i    old        	jxpath_14214_CoreFunction_1_1	396	1	src/java/org/apache/commons/jxpath/ri/compiler/CoreFunction.java
1338	[PATCH]    for    (int    i    =    0;    i    <    count;    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    -1;    i    <    count;    i++)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testMethodCall    [CONTEXT]    {    boolean    tryExact    =    true;    int    count    =    parameters    ==    null    ?    0    :    parameters.length;    Class    types[]    =    new    Class[count];    [BUGGY]    for    (int    i    =    -1;    i    <    count;    i++)    {    Object    param    =    parameters[i];    if    (param    !=    null)    {    types[i]    =    param.getClass();    }    else    {    types[i]    =    null;    tryExact    =    false;    }    }        [CLASS]        MethodLookupUtils    [METHOD]    lookupStaticMethod    [RETURN_TYPE]    Method        Class    targetClass    String    name    Object[]    parameters    [VARIABLES]    boolean    ambiguous    tryExact    Class[]    types    Class    targetClass    Object    param    String    name    Method    method    Method[]    methods    int    APPROXIMATE_MATCH    EXACT_MATCH    NO_MATCH    count    currentMatch    i    match    Object[]    EMPTY_ARRAY    parameters    NoSuchMethodException    ex        	jxpath_18862_MethodLookupUtils_1_1	110	1	src/java/org/apache/commons/jxpath/util/MethodLookupUtils.java
1339	[PATCH]    return    (NodePointer)    nodeSet.getPointers().get(position    -    1);	[BUG]    [BUGGY]    return    (NodePointer)    nodeSet.getPointers().get(position    -    -1);    [FE]    java.lang.IndexOutOfBoundsException:    Index:    2,    Size:    2    testNodeSetReturn    [CONTEXT]    public    NodePointer    getCurrentNodePointer()    {    if    (position    ==    0)    {    if    (!setPosition(1))    {    return    null;    }    }    [BUGGY]    return    (NodePointer)    nodeSet.getPointers().get(position    -    -1);    }    [CLASS]        NodeSetContext    [METHOD]    getCurrentNodePointer    [RETURN_TYPE]    NodePointer        [VARIABLES]    NodeSet    nodeSet    boolean    startedSet        	jxpath_13115_NodeSetContext_1_1	48	1	src/java/org/apache/commons/jxpath/ri/axes/NodeSetContext.java
1340	[PATCH]    if    (index    ==    WHOLE_COLLECTION)    {	[BUG]    [BUGGY]    if    (index    >=    WHOLE_COLLECTION)    {    [FE]    junit.framework.ComparisonFailure:    Creating    path    <vendor/location[3]>    expected:</vendor[1]/location[[3]]>    but    was:</vendor[1]/location[[1]]>    testCreatePathAndSetValue    [CONTEXT]    {    [BUGGY]    if    (index    >=    WHOLE_COLLECTION)    {    index    =    0;    }    boolean    success    =    getAbstractFactory(context).createObject(    context,    this,    node,    name.toString(),    index);    if    (success)    {    [CLASS]        DOMNodePointer    [METHOD]    createChild    [RETURN_TYPE]    NodePointer        JXPathContext    context    QName    name    int    index    [VARIABLES]    NodeIterator    it    boolean    success    JXPathContext    context    QName    name    Node    aNode    child    n    node    textNode    valueNode    String    XMLNS_NAMESPACE_URI    XML_NAMESPACE_URI    attr    current    defaultNamespace    id    lang    ln    namespace    namespaceURI    nodeNS    nodePI    ns    prefix    qname    s1    s2    string    testPI    testPrefix    Map    namespaces    long    serialVersionUID    int    index    NodeTest    nodeTest        	jxpath_16911_DOMNodePointer_1_1	374	1	src/java/org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java
1341	[PATCH]    if    (jj_3R_142())    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    'count(descendant-or-self::root)'.    Syntax    error    after:    'c'    testAxisDescendantOrSelf    [CONTEXT]    return    false;    }    final    private    boolean    jj_3R_129()    {    Token    xsp;    xsp    =    jj_scanpos;    if    (jj_3R_140())    {    jj_scanpos    =    xsp;    if    (jj_3R_141())    {    jj_scanpos    =    xsp;    [BUGGY]    if    (false)    {    jj_scanpos    =    xsp;    if    (jj_3R_143())    {    jj_scanpos    =    xsp;    if    (jj_3R_144())    {    jj_scanpos    =    xsp;    if    (jj_3R_145())    {    jj_scanpos    =    xsp;    if    (jj_3R_146())    {    jj_scanpos    =    xsp;    if    (jj_3R_147())    {    [CLASS]    	jxpath_4205_XPathParser_1_1	2574	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java
1342	[PATCH]    if    (jj_3R_129())    return    true;	[BUG]    [BUGGY]    if    (jj_3R_129())    return    false;    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    '/foo:bar'.    Syntax    error    after:    '/'    testLocationPathAxisChild    [CONTEXT]    return    false;    }    final    private    boolean    jj_3R_122()    {    if    (jj_3R_130())    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_121()    {    [BUGGY]    if    (jj_3R_129())    return    false;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_167()    {    if    (jj_scan_token(GTE))    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    if    (jj_3R_158())    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    [CLASS]    	jxpath_4485_XPathParser_1_1	2647	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java
1343	[PATCH]    length    -    index    -    1);	[BUG]    [BUGGY]    length    -    index    -    -1);    [FE]    org.apache.commons.jxpath.JXPathException:    Exception    trying    to    remove    xpath    $temp[1];    java.lang.ArrayIndexOutOfBoundsException    testRemovePathArrayElement    [CONTEXT]    length    -    1);    if    (index    >    0)    {    System.arraycopy(collection,    0,    smaller,    0,    index);    }    if    (index    <    length    -    1)    {    System.arraycopy(    collection,    index    +    1,    smaller,    index,    [BUGGY]    length    -    index    -    -1);    }    return    smaller;    }    else    if    (collection    instanceof    List)    {    int    size    =    ((List)    collection).size();    if    (index    <    size)    {    ((List)    collection).remove(index);    }    return    collection;    }    [CLASS]        ValueUtils    [METHOD]    remove    [RETURN_TYPE]    Object        Object    collection    int    index    [VARIABLES]    Iterator    it    Object    collection    smaller    boolean    Map    dynamicPropertyHandlerMap    int    UNKNOWN_LENGTH_MAX_COUNT    i    index    length    size        	jxpath_19152_ValueUtils_1_1	236	1	src/java/org/apache/commons/jxpath/util/ValueUtils.java
1344	[PATCH]    if    (types.length    >=    1	[BUG]    [BUGGY]    if    (types.length    >=    0    [FE]    org.apache.commons.jxpath.JXPathInvalidAccessException:    Cannot    invoke    public    static    java.util.Collection    org.apache.commons.jxpath.ri.compiler.TestFunctions.collection();    0    testCollectionReturn    [CONTEXT]    try    {    Object    target;    Object[]    args;    if    (Modifier.isStatic(method.getModifiers()))    {    target    =    null;    if    (parameters    ==    null)    {    parameters    =    EMPTY_ARRAY;    }    int    pi    =    0;    Class    types[]    =    method.getParameterTypes();    [BUGGY]    if    (types.length    >=    0    &&    ExpressionContext.class.isAssignableFrom(types[0]))    {    pi    =    1;    }    args    =    new    Object[parameters.length    +    pi];    if    (pi    ==    1)    {    args[0]    =    context;    }    for    (int    i    =    0;    i    <    parameters.length;    i++)    {    args[i    +    pi]    =    TypeUtils.convert(parameters[i],    types[i    +    pi]);    [CLASS]        MethodFunction    [METHOD]    invoke    [RETURN_TYPE]    Object        ExpressionContext    context    Object[]    parameters    [VARIABLES]    Class[]    types    boolean    ExpressionContext    context    Throwable    ex    Object    target    Method    method    Object[]    EMPTY_ARRAY    args    parameters    int    i    pi        	jxpath_480_MethodFunction_1_1	55	1	src/java/org/apache/commons/jxpath/functions/MethodFunction.java
1345	[PATCH]    if    ((active0    &    0x2000000000000L)    !=    0L)	[BUG]    [BUGGY]    if    ((active0    &    -562949953421312L)    !=    0L)    [FE]    junit.framework.AssertionFailedError:    Expression    class    for    substring-before('a',    1)    expected:<class    org.apache.commons.jxpath.ri.compiler.CoreFunction>    but    was:<class    org.apache.commons.jxpath.ri.compiler.ExtensionFunction>    testCoreFunction    [CONTEXT]    break;    case    97:    return    jjMoveStringLiteralDfa8_0(active0,    0x20880000000000L,    active1,    0L);    case    99:    return    jjMoveStringLiteralDfa8_0(active0,    0x40010000000000L,    active1,    0L);    case    105:    return    jjMoveStringLiteralDfa8_0(active0,    0x400000000L,    active1,    0L);    case    108:    return    jjMoveStringLiteralDfa8_0(active0,    0x8000000000000000L,    active1,    0L);    case    110:    [BUGGY]    if    ((active0    &    -562949953421312L)    !=    0L)    return    jjStartNfaWithStates_0(7,    49,    12);    return    jjMoveStringLiteralDfa8_0(active0,    0x7000660000000000L,    active1,    0x2000L);    case    114:    return    jjMoveStringLiteralDfa8_0(active0,    0x104000000000L,    active1,    0L);    case    115:    if    ((active0    &    0x800000000000000L)    !=    0L)    return    jjStartNfaWithStates_0(7,    59,    12);    break;    case    116:    return    jjMoveStringLiteralDfa8_0(active0,    0x8000000000L,    active1,    0x2L);    [CLASS]        XPathParserTokenManager    [METHOD]    jjMoveStringLiteralDfa7_0    [RETURN_TYPE]    int        long    old0    long    active0    long    old1    long    active1    [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    IOException    e    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    kind    lexState    pos    state    long    active0    active1    old0    old1        	jxpath_10143_XPathParserTokenManager_1_1	830	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
1346	[PATCH]    if    ((active0    &    0x100000000L)    !=    0L)	[BUG]    [BUGGY]    if    ((active0    &    4294967296L)    <    0L)    [FE]    junit.framework.AssertionFailedError:    Expression    class    for    text()    expected:<class    org.apache.commons.jxpath.ri.compiler.LocationPath>    but    was:<class    org.apache.commons.jxpath.ri.compiler.ExtensionFunction>    testLocationPathNodeTest    [CONTEXT]    return    jjMoveStringLiteralDfa4_0(active0,    0x200000000L,    active1,    0x2001L);    case    110:    return    jjMoveStringLiteralDfa4_0(active0,    0x4000000000000L,    active1,    0x1002L);    case    111:    return    jjMoveStringLiteralDfa4_0(active0,    0L,    active1,    0x400L);    case    114:    return    jjMoveStringLiteralDfa4_0(active0,    0x400008000000000L,    active1,    0L);    case    115:    return    jjMoveStringLiteralDfa4_0(active0,    0x7000000000000000L,    active1,    0x20L);    case    116:    [BUGGY]    if    ((active0    &    4294967296L)    <    0L)    return    jjStartNfaWithStates_0(3,    32,    12);    else    if    ((active0    &    0x1000000000000L)    !=    0L)    return    jjStartNfaWithStates_0(3,    48,    12);    return    jjMoveStringLiteralDfa4_0(active0,    0x800000000000000L,    active1,    0L);    default    :    break;    }    return    jjStartNfa_0(2,    active0,    active1);    }    [CLASS]        XPathParserTokenManager    [METHOD]    jjMoveStringLiteralDfa3_0    [RETURN_TYPE]    int        long    old0    long    active0    long    old1    long    active1    [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    IOException    e    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    kind    lexState    pos    state    long    active0    active1    old0    old1        	jxpath_9713_XPathParserTokenManager_1_1	649	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
1347	[PATCH]    if    ((active0    &    0x2000000000L)    !=    0L)	[BUG]    [BUGGY]    if    ((active0    &    0L)    !=    0L)    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    'parent::foo:bar'.    Syntax    error    after:    'parent:'    testLocationPathAxisParent    [CONTEXT]    if    (((active0    &=    old0)    |    (active1    &=    old1))    ==    0L)    return    jjStartNfa_0(5,    old0,    old1);    try    {    curChar    =    input_stream.readChar();    }    catch(java.io.IOException    e)    {    jjStopStringLiteralDfa_0(6,    active0,    active1);    return    7;    }    switch(curChar)    {    case    58:    [BUGGY]    if    ((active0    &    0L)    !=    0L)    return    jjStopAtPos(7,    37);    break;    case    97:    return    jjMoveStringLiteralDfa8_0(active0,    0x20880000000000L,    active1,    0L);    case    99:    return    jjMoveStringLiteralDfa8_0(active0,    0x40010000000000L,    active1,    0L);    case    105:    return    jjMoveStringLiteralDfa8_0(active0,    0x400000000L,    active1,    0L);    case    108:    return    jjMoveStringLiteralDfa8_0(active0,    0x8000000000000000L,    active1,    0L);    [CLASS]        XPathParserTokenManager    [METHOD]    jjMoveStringLiteralDfa7_0    [RETURN_TYPE]    int        long    old0    long    active0    long    old1    long    active1    [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    IOException    e    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    kind    lexState    pos    state    long    active0    active1    old0    old1        	jxpath_10113_XPathParserTokenManager_1_1	818	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
1348	[PATCH]    if    (jj_scan_token(FUNCTION_STARTS_WITH))    return    true;	[BUG]    [BUGGY]    if    (false)    return    true;    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    '/    +    1.1541603045309516'.    Syntax    error    after:    '/'    testThreads    [CONTEXT]    return    false;    }    final    private    boolean    jj_3R_35()    {    if    (jj_scan_token(FUNCTION_CONTAINS))    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_34()    {    [BUGGY]    if    (false)    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_33()    {    if    (jj_scan_token(FUNCTION_CONCAT))    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }        [CLASS]    	jxpath_3201_XPathParser_1_1	2262	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java
1349	[PATCH]    index    =    end    -    position    +    2;	[BUG]    [BUGGY]    index    =    (end    -    position)    *    2;    [FE]    junit.framework.AssertionFailedError:    ITERATIONS:    Individual,    relativePropertyIndex=0,    offset=-1,    useStartLocation=true,    reverse=true    expected:<4>    but    was:<2>    testIndividualIterators    [CONTEXT]    }    if    (index    >    length)    {    return    false;    }    }    else    {    int    end    =    startIndex;    if    (end    ==    -1)    {    end    =    length    -    1;    }    [BUGGY]    index    =    (end    -    position)    *    2;    if    (!includeStart)    {    index--;    }    if    (index    <    1)    {    return    false;    }    }    [CLASS]        PropertyIterator    [METHOD]    setPositionIndividualProperty    [RETURN_TYPE]    boolean        int    position    [VARIABLES]    boolean    empty    includeStart    ready    reverse    targetReady    String    name    PropertyPointer    propertyNodePointer    int    end    index    length    position    startIndex    startPropertyIndex        	jxpath_15531_PropertyIterator_1_1	165	1	src/java/org/apache/commons/jxpath/ri/model/beans/PropertyIterator.java
1350	[PATCH]    bufpos    =    -1;	[BUG]    [BUGGY]    bufpos    =    1;    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    '2    div    4'.    Syntax    error    after:    '2'    testCoreOperationDivide    [CONTEXT]    if    (buffer    ==    null    ||    buffersize    !=    buffer.length)    {    available    =    bufsize    =    buffersize;    buffer    =    new    char[buffersize];    bufline    =    new    int[buffersize];    bufcolumn    =    new    int[buffersize];    }    prevCharIsLF    =    prevCharIsCR    =    false;    tokenBegin    =    inBuf    =    maxNextCharInd    =    0;    [BUGGY]    bufpos    =    1;    }    [CLASS]        SimpleCharStream    [METHOD]    ReInit    [RETURN_TYPE]    void        Reader    dstream    int    	jxpath_12560_SimpleCharStream_1_1	276	1	src/java/org/apache/commons/jxpath/ri/parser/SimpleCharStream.java
1351	[PATCH]    return    false;	[BUG]    [BUGGY]    return    true;    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    'count(.[1]/KeyThree/*)'.    Syntax    error    after:    'c'    testCollectionPointer    [CONTEXT]    jj_scanpos    =    xsp;    if    (jj_3R_139())    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    }    else    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_131()    {    if    (jj_scan_token(88))    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    [BUGGY]    return    true;    }    final    private    boolean    jj_3R_123()    {    Token    xsp;    xsp    =    jj_scanpos;    if    (jj_3R_131())    {    jj_scanpos    =    xsp;    if    (jj_3R_132())    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    }    else    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    [CLASS]    	jxpath_6265_XPathParser_1_1	3232	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java
1352	[PATCH]    return    false;	[BUG]    [BUGGY]    return    true;    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    'concat(\'a\',    \'b\')'.    Syntax    error    after:    'c'    testCoreFunction    [CONTEXT]    final    private    boolean    jj_3R_71()    {    if    (jj_scan_token(FUNCTION_STARTS_WITH))    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_70()    {    if    (jj_scan_token(FUNCTION_CONCAT))    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    [BUGGY]    return    true;    }    final    private    boolean    jj_3R_69()    {    if    (jj_scan_token(FUNCTION_STRING))    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_68()    {    if    (jj_scan_token(FUNCTION_NAME))    return    true;    [CLASS]    	jxpath_6979_XPathParser_1_1	3481	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java
1353	[PATCH]    return    equal(context,    args[0],    args[1])    ?    Boolean.TRUE    :    Boolean.FALSE;	[BUG]    [BUGGY]    return    equal(context,    args[1],    args[1])    ?    Boolean.TRUE    :    Boolean.FALSE;    [FE]    junit.framework.ComparisonFailure:    Evaluating    pointer    <//.[name    =    'three']>    expected:</[first/first/second]>    but    was:</[]>    testInfiniteDescent    [CONTEXT]    public    Object    computeValue(EvalContext    context)    {    [BUGGY]    return    equal(context,    args[1],    args[1])    ?    Boolean.TRUE    :    Boolean.FALSE;    }    [CLASS]        CoreOperationEqual    [METHOD]    computeValue    [RETURN_TYPE]    Object        EvalContext    context    [VARIABLES]    boolean    EvalContext    context        	jxpath_14672_CoreOperationEqual_1_1	34	1	src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationEqual.java
1354	[PATCH]    int    currentMatch    =    0;	[BUG]    [BUGGY]    int    currentMatch    =    1;    [FE]    org.apache.commons.jxpath.JXPathException:    Ambigous    method    call:    build    testStaticMethodLookup    [CONTEXT]    if    (method    !=    null    &&    Modifier.isStatic(method.getModifiers()))    {    return    method;    }    }    catch    (NoSuchMethodException    ex)    {        }    }        [BUGGY]    int    currentMatch    =    1;    boolean    ambiguous    =    false;        Method[]    methods    =    targetClass.getMethods();    for    (int    i    =    0;    i    <    methods.length;    i++)    {    if    (Modifier.isStatic(methods[i].getModifiers())    &&    methods[i].getName().equals(name))    {    int    match    =    matchParameterTypes(    methods[i].getParameterTypes(),    [CLASS]        MethodLookupUtils    [METHOD]    lookupStaticMethod    [RETURN_TYPE]    Method        Class    targetClass    String    name    Object[]    parameters    [VARIABLES]    boolean    ambiguous    tryExact    Class[]    types    Class    targetClass    Object    param    String    name    Method    method    Method[]    methods    int    APPROXIMATE_MATCH    EXACT_MATCH    NO_MATCH    count    currentMatch    i    match    Object[]    EMPTY_ARRAY    parameters    NoSuchMethodException    ex        	jxpath_18878_MethodLookupUtils_1_1	137	1	src/java/org/apache/commons/jxpath/util/MethodLookupUtils.java
1355	[PATCH]    if    (jj_3R_15())    return    true;	[BUG]    [BUGGY]    if    (true)    return    true;    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    'my:function(3,    other.function())'.    Syntax    error    after:    'my:f'    testExtensionFunction    [CONTEXT]    if    (jj_3R_98())    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_138()    {    if    (jj_3R_15())    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    if    (jj_scan_token(79))    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    [BUGGY]    if    (true)    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_154()    {    if    (jj_scan_token(88))    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }        [CLASS]    	jxpath_6069_XPathParser_1_1	3172	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java
1356	[PATCH]    if    (parent    !=    null    &&    parent.getIndex()    !=    WHOLE_COLLECTION)    {	[BUG]    [BUGGY]    if    (parent    !=    null)    {    [FE]    junit.framework.ComparisonFailure:    Null    path    as    path:    $testnull/nothing[2]    expected:<$testnull/nothing[][2]>    but    was:<$testnull/nothing[/.][2]>    testInterpretExpressionPath    [CONTEXT]    public    String    asPath()    {    StringBuffer    buffer    =    new    StringBuffer();    NodePointer    parent    =    getImmediateParentPointer();    if    (parent    !=    null)    {    buffer.append(parent.asPath());    }    if    (index    !=    WHOLE_COLLECTION)    {        [BUGGY]    if    (parent    !=    null)    {    buffer.append(   "/.   ");    }    else    if    (parent    !=    null    &&    parent.getImmediateParentPointer()    !=    null    &&    parent.getImmediateParentPointer().getIndex()    !=    WHOLE_COLLECTION)    {    buffer.append(   "/.   ");    }    buffer.append(   "[   ").append(index    +    1).append(']');    [CLASS]        NullElementPointer    [METHOD]    asPath    [RETURN_TYPE]    String        [VARIABLES]    StringBuffer    buffer    boolean    NodePointer    parent        	jxpath_16232_NullElementPointer_1_1	120	1	src/java/org/apache/commons/jxpath/ri/model/beans/NullElementPointer.java
1357	[PATCH]    return    false;	[BUG]    [BUGGY]    return    true;    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    '/foo:bar'.    Syntax    error    after:    '/'    testLocationPathAxisChild    [CONTEXT]    final    private    boolean    jj_3R_154()    {    if    (jj_scan_token(88))    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_132()    {    if    (jj_3R_15())    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    [BUGGY]    return    true;    }    final    private    boolean    jj_3R_105()    {    if    (jj_3R_18())    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    if    (jj_3R_119())    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }        [CLASS]    	jxpath_6114_XPathParser_1_1	3186	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java
1358	[PATCH]    if    ((active1    &    0x2L)    !=    0L)	[BUG]    [BUGGY]    if    ((active1    &    0x2L)    !=    1L)    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    'namespace::foo:bar'.    Syntax    error    after:    'namespace:'    testLocationPathAxisOther    [CONTEXT]    jjStopStringLiteralDfa_0(7,    active0,    active1);    return    8;    }    switch(curChar)    {    case    45:    return    jjMoveStringLiteralDfa9_0(active0,    0x100000000000L,    active1,    0L);    case    58:    return    jjMoveStringLiteralDfa9_0(active0,    0x4000000000L,    active1,    0L);    case    101:    [BUGGY]    if    ((active1    &    0x2L)    !=    1L)    return    jjStartNfaWithStates_0(8,    65,    12);    return    jjMoveStringLiteralDfa9_0(active0,    0x8040018000000000L,    active1,    0x1L);    case    103:    if    ((active0    &    0x4000000000000000L)    !=    0L)    {    jjmatchedKind    =    62;    jjmatchedPos    =    8;    }    return    jjMoveStringLiteralDfa9_0(active0,    0x3000660000000000L,    active1,    0L);    case    105:    [CLASS]        XPathParserTokenManager    [METHOD]    jjMoveStringLiteralDfa8_0    [RETURN_TYPE]    int        long    old0    long    active0    long    old1    long    active1    [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    IOException    e    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    kind    lexState    pos    state    long    active0    active1    old0    old1        	jxpath_10220_XPathParserTokenManager_1_1	866	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
1359	[PATCH]    {if    (true)    return    compiler.function(code,    args.toArray());}	[BUG]    [BUGGY]    {if    (false)    return    compiler.function(code,    args.toArray());}    [FE]    java.lang.Error:    Missing    return    statement    in    function    testCoreFunction    [CONTEXT]    final    public    Object    CoreFunctionCall()    throws    ParseException    {    int    code    =    0;    ArrayList    args;    code    =    CoreFunctionName();    args    =    ArgumentList();    if    (args    ==    null){    {if    (true)    return    compiler.function(code,    null);}    }    else    {    [BUGGY]    {if    (false)    return    compiler.function(code,    args.toArray());}    }    throw    new    Error(   "Missing    return    statement    in    function   ");    }    final    public    ArrayList    ArgumentList()    throws    ParseException    {    ArrayList    args    =    null;    Object    arg;    jj_consume_token(80);    switch    (jj_nt.kind)    {    case    SLASH:    [CLASS]    	jxpath_1711_XPathParser_1_1	1030	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java
1360	[PATCH]    jjmatchedPos    =    2;	[BUG]    [BUGGY]    jjmatchedPos    =    -2;    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    'vendor/x:pos//number'.    Syntax    error    after:    'vendor/x:p'    testAxisChild    [CONTEXT]    if    ((active0    &    0xffe7ffff80000000L)    !=    0L    ||    (active1    &    0x3df7L)    !=    0L)    {    jjmatchedKind    =    78;    [BUGGY]    jjmatchedPos    =    -2;    return    12;    }    [CLASS]        XPathParserTokenManager    [METHOD]    jjStopStringLiteralDfa_0    [RETURN_TYPE]    int        int    pos    long    active0    long    active1    [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    lexState    pos    long    active0    active1        	jxpath_7970_XPathParserTokenManager_1_1	39	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
1361	[PATCH]    if    (axis    ==    Compiler.AXIS_CHILD    ||    axis    ==    Compiler.AXIS_ATTRIBUTE)    {	[BUG]    [BUGGY]    if    (axis    ==    Compiler.AXIS_ATTRIBUTE)    {    [FE]    junit.framework.ComparisonFailure:    Null    path    as    path:    /foo    expected:</[foo]>    but    was:</[]>    testDoStepNoPredicatesPropertyOwner    [CONTEXT]    {    if    (currentStep    ==    steps.length)    {    return    parent;    }    parent    =    valuePointer(parent);    Step    step    =    steps[currentStep];    int    axis    =    step.getAxis();    [BUGGY]    if    (axis    ==    Compiler.AXIS_ATTRIBUTE)    {    NullPropertyPointer    pointer    =    new    NullPropertyPointer(parent);    QName    name    =    ((NodeNameTest)    step.getNodeTest()).getNodeName();    pointer.setPropertyName(name.toString());    pointer.setAttribute(axis    ==    Compiler.AXIS_ATTRIBUTE);    parent    =    pointer;    }        Expression    predicates[]    =    step.getPredicates();    return    createNullPointerForPredicates(    [CLASS]        SimplePathInterpreter    [METHOD]    createNullPointer    [RETURN_TYPE]    NodePointer        EvalContext    context    NodePointer    parent    Step[]    steps    int    currentStep    [VARIABLES]    boolean    QName    QNAME_NAME    name    Expression[]    predicates    EvalContext    context    Step[]    steps    NodePointer    parent    Step    step    NullPropertyPointer    pointer    int    PERFECT_MATCH    axis    bestQuality    count    currentPredicate    currentStep    i    index    quality        	jxpath_13886_SimplePathInterpreter_1_1	759	1	src/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreter.java
1362	[PATCH]    if    (wildcard    &&    testPrefix    ==    null)    {	[BUG]    [BUGGY]    if    (testPrefix    ==    null)    {    [FE]    junit.framework.ComparisonFailure:    Null    path    as    path:    /list/foo    expected:</list[[1]/foo]>    but    was:</list[[5]/contact[1]]>    testDoStepNoPredicatesPropertyOwner    [CONTEXT]    else    if    (test    instanceof    NodeNameTest)    {    if    (node.getNodeType()    !=    Node.ELEMENT_NODE)    {    return    false;    }    NodeNameTest    nodeNameTest    =    (NodeNameTest)    test;    QName    testName    =    nodeNameTest.getNodeName();    String    namespaceURI    =    nodeNameTest.getNamespaceURI();    boolean    wildcard    =    nodeNameTest.isWildcard();    String    testPrefix    =    testName.getPrefix();    [BUGGY]    if    (testPrefix    ==    null)    {    return    true;    }    if    (wildcard    ||    testName.getName()    .equals(DOMNodePointer.getLocalName(node)))    {    String    nodeNS    =    DOMNodePointer.getNamespaceURI(node);    return    equalStrings(namespaceURI,    nodeNS);    }    }    [CLASS]        DOMNodePointer    [METHOD]    testNode    [RETURN_TYPE]    boolean        Node    node    NodeTest    test    [VARIABLES]    boolean    wildcard    NodeNameTest    nodeNameTest    QName    testName    Node    node    String    XMLNS_NAMESPACE_URI    XML_NAMESPACE_URI    defaultNamespace    id    namespaceURI    nodeNS    nodePI    testPI    testPrefix    Map    namespaces    long    serialVersionUID    NodeTest    test    int    nodeType        	jxpath_16735_DOMNodePointer_1_1	101	1	src/java/org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java
1363	[PATCH]    if    (args    ==    null){	[BUG]    [BUGGY]    if    (false){    [FE]    java.lang.NullPointerException    testCoreFunction    [CONTEXT]    {if    (true)    return    compiler.function(name,    args.toArray());}    }    throw    new    Error(   "Missing    return    statement    in    function   ");    }    final    public    Object    CoreFunctionCall()    throws    ParseException    {    int    code    =    0;    ArrayList    args;    code    =    CoreFunctionName();    args    =    ArgumentList();    [BUGGY]    if    (false){    {if    (true)    return    compiler.function(code,    null);}    }    else    {    {if    (true)    return    compiler.function(code,    args.toArray());}    }    throw    new    Error(   "Missing    return    statement    in    function   ");    }    final    public    ArrayList    ArgumentList()    throws    ParseException    {    ArrayList    args    =    null;    [CLASS]    	jxpath_1709_XPathParser_1_1	1026	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java
1364	[PATCH]    if    (jj_3R_192())    return    true;	[BUG]    [BUGGY]    if    (true)    return    true;    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    'size(/)'.    Syntax    error    after:    's'    testCollectionMethodCall    [CONTEXT]    if    (jj_3R_116())    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_189()    {    Token    xsp;    xsp    =    jj_scanpos;    if    (jj_3R_191())    {    jj_scanpos    =    xsp;    [BUGGY]    if    (true)    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    }    else    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_182()    {    if    (jj_3R_19())    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    Token    xsp;    while    (true)    {    [CLASS]    	jxpath_5478_XPathParser_1_1	2973	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java
1365	[PATCH]    return    jjMoveStringLiteralDfa3_0(active0,    0x7000000000000000L,    active1,    0L);	[BUG]    [BUGGY]    return    jjMoveStringLiteralDfa3_0(active0,    -8070450532247928832L,    active1,    0L);    [FE]    junit.framework.AssertionFailedError:    Expression    class    for    substring-after('a',    2)    expected:<class    org.apache.commons.jxpath.ri.compiler.CoreFunction>    but    was:<class    org.apache.commons.jxpath.ri.compiler.ExtensionFunction>    testCoreFunction    [CONTEXT]    try    {    curChar    =    input_stream.readChar();    }    catch(java.io.IOException    e)    {    jjStopStringLiteralDfa_0(1,    active0,    active1);    return    2;    }    switch(curChar)    {    case    97:    return    jjMoveStringLiteralDfa3_0(active0,    0x400000000000000L,    active1,    0x2L);    case    98:    [BUGGY]    return    jjMoveStringLiteralDfa3_0(active0,    -8070450532247928832L,    active1,    0L);    case    99:    return    jjMoveStringLiteralDfa3_0(active0,    0x20104000000000L,    active1,    0L);    case    100:    if    ((active0    &    0x10000000L)    !=    0L)    return    jjStartNfaWithStates_0(2,    28,    12);    else    if    ((active0    &    0x20000000L)    !=    0L)    return    jjStartNfaWithStates_0(2,    29,    12);    return    jjMoveStringLiteralDfa3_0(active0,    0x80000000L,    active1,    0L);    case    101:    return    jjMoveStringLiteralDfa3_0(active0,    0x420000000000L,    active1,    0L);    [CLASS]        XPathParserTokenManager    [METHOD]    jjMoveStringLiteralDfa2_0    [RETURN_TYPE]    int        long    old0    long    active0    long    old1    long    active1    [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    IOException    e    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    kind    lexState    pos    state    long    active0    active1    old0    old1        	jxpath_9423_XPathParserTokenManager_1_1	550	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
1366	[PATCH]    if    (i    >    0    ||    absolute)    {	[BUG]    [BUGGY]    if    (i    >    0)    {    [FE]    junit.framework.ComparisonFailure:    Expression    toString()    for    /foo:bar    expected:<[/]foo:bar>    but    was:<[]foo:bar>    testLocationPathAxisChild    [CONTEXT]    public    String    toString()    {    StringBuffer    buffer    =    new    StringBuffer();    Step    steps[]    =    getSteps();    if    (steps    !=    null)    {    for    (int    i    =    0;    i    <    steps.length;    i++)    {    [BUGGY]    if    (i    >    0)    {    buffer.append('/');    }    buffer.append(steps[i]);    }    }    return    buffer.toString();    }    [CLASS]        LocationPath    [METHOD]    toString    [RETURN_TYPE]    String        [VARIABLES]    StringBuffer    buffer    Step[]    steps    boolean    absolute    int    i        	jxpath_15075_LocationPath_1_1	52	1	src/java/org/apache/commons/jxpath/ri/compiler/LocationPath.java
1367	[PATCH]    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;	[BUG]    [BUGGY]    if    (jj_la    >=    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    '1    -    (1    -    2)'.    Syntax    error    after:    '1    -'    testCoreOperationMinus    [CONTEXT]    }    final    private    boolean    jj_3R_29()    {    if    (jj_scan_token(FUNCTION_LOCAL_NAME))    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_169()    {    if    (jj_scan_token(MINUS))    return    true;    [BUGGY]    if    (jj_la    >=    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    if    (jj_3R_168())    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_28()    {    if    (jj_scan_token(FUNCTION_ID))    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    [CLASS]    	jxpath_3297_XPathParser_1_1	2299	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java
1368	[PATCH]    currentPredicate    +    1);	[BUG]    [BUGGY]    currentPredicate    +    -1);    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testDoPredicateName    [CONTEXT]    }    if    (newList.size()    ==    0)    {    return    null;    }    return    doPredicatesStandard(    context,    newList,    steps,    currentStep,    predicates,    [BUGGY]    currentPredicate    +    -1);    }    else    {                int    index    =    indexFromPredicate(context,    predicate);    if    (index    <    0    ||    index    >=    parents.size())    {    return    null;    }    NodePointer    ptr    =    (NodePointer)    parents.get(index);    [CLASS]    	jxpath_13772_SimplePathInterpreter_1_1	596	1	src/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreter.java
1369	[PATCH]    int    index    =    position    -    1;	[BUG]    [BUGGY]    int    index    =    position    -    -1;    [FE]    java.lang.IndexOutOfBoundsException:    Index:    2,    Size:    1    testGetNode    [CONTEXT]    public    NodePointer    getNodePointer()    {    if    (position    ==    0)    {    if    (!setPosition(1))    {    return    null;    }    position    =    0;    }    [BUGGY]    int    index    =    position    -    -1;    if    (index    <    0)    {    index    =    0;    }    return    new    JDOMAttributePointer(    parent,    (Attribute)    attributes.get(index));    }    [CLASS]        JDOMAttributeIterator    [METHOD]    getNodePointer    [RETURN_TYPE]    NodePointer        [VARIABLES]    List    allAttributes    attributes    NodePointer    parent    boolean    QName    name    int    i    index    position        	jxpath_17679_JDOMAttributeIterator_1_1	170	1	src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMAttributeIterator.java
1370	[PATCH]    if    ((active0    &    0x2000000000000000L)    !=    0L)	[BUG]    [BUGGY]    if    (true)    [FE]    junit.framework.AssertionFailedError:    Expression    class    for    substring-before('a',    1)    expected:<class    org.apache.commons.jxpath.ri.compiler.CoreFunction>    but    was:<class    org.apache.commons.jxpath.ri.compiler.ExtensionFunction>    testCoreFunction    [CONTEXT]    {    case    101:    if    ((active1    &    0x1L)    !=    0L)    return    jjStartNfaWithStates_0(14,    64,    12);    break;    case    105:    return    jjMoveStringLiteralDfa15_0(active0,    0x600000000000L,    active1,    0L);    case    108:    return    jjMoveStringLiteralDfa15_0(active0,    0x100000000000L,    active1,    0L);    case    114:    [BUGGY]    if    (true)    return    jjStartNfaWithStates_0(14,    61,    12);    return    jjMoveStringLiteralDfa15_0(active0,    0x1000000000000000L,    active1,    0L);    case    115:    return    jjMoveStringLiteralDfa15_0(active0,    0x800000000000L,    active1,    0L);    case    116:    return    jjMoveStringLiteralDfa15_0(active0,    0x400000000L,    active1,    0L);    default    :    break;    }    return    jjStartNfa_0(13,    active0,    active1);    [CLASS]        XPathParserTokenManager    [METHOD]    jjMoveStringLiteralDfa14_0    [RETURN_TYPE]    int        long    old0    long    active0    long    old1    long    active1    [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    IOException    e    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    kind    lexState    pos    state    long    active0    active1    old0    old1        	jxpath_10694_XPathParserTokenManager_1_1	1093	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
1371	[PATCH]    if    (jj_scan_token(FUNCTION_NORMALIZE_SPACE))    return    true;	[BUG]    [BUGGY]    if    (false)    return    true;    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    '/    +    1.583487976757492'.    Syntax    error    after:    '/'    testThreads    [CONTEXT]    if    (jj_scan_token(84))    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    if    (jj_3R_104())    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    if    (jj_scan_token(85))    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_40()    {    [BUGGY]    if    (false)    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_39()    {    if    (jj_scan_token(FUNCTION_STRING_LENGTH))    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }        [CLASS]    	jxpath_3082_XPathParser_1_1	2214	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java
1372	[PATCH]    if    (i    >    0)    {	[BUG]    [BUGGY]    if    (i    >=    0)    {    [FE]    junit.framework.ComparisonFailure:    Expression    toString()    for    my:function(3,    other.function())    expected:<my:function([]3,    other.function())>    but    was:<my:function([,    ]3,    other.function())>    testExtensionFunction    [CONTEXT]    public    String    toString()    {    StringBuffer    buffer    =    new    StringBuffer();    buffer.append(functionName);    buffer.append('(');    Expression    args[]    =    getArguments();    if    (args    !=    null)    {    for    (int    i    =    0;    i    <    args.length;    i++)    {    [BUGGY]    if    (i    >=    0)    {    buffer.append(   ",       ");    }    buffer.append(args[i]);    }    }    buffer.append(')');    return    buffer.toString();    }    [CLASS]        ExtensionFunction    [METHOD]    toString    [RETURN_TYPE]    String        [VARIABLES]    StringBuffer    buffer    boolean    QName    functionName    Expression[]    args    int    i        	jxpath_15045_ExtensionFunction_1_1	61	1	src/java/org/apache/commons/jxpath/ri/compiler/ExtensionFunction.java
1373	[PATCH]    return    getSymbol()    +    parenthesize(args[0],    false);	[BUG]    [BUGGY]    return    getSymbol()    +    parenthesize(args[1],    false);    [FE]    java.lang.ArrayIndexOutOfBoundsException:    1    testCoreOperationDivide    [CONTEXT]    public    String    toString()    {    if    (args.length    ==    1)    {    [BUGGY]    return    getSymbol()    +    parenthesize(args[1],    false);    }    else    {    StringBuffer    buffer    =    new    StringBuffer();    for    (int    i    =    0;    i    <    args.length;    i++)    {    if    (i    >    0)    {    buffer.append('    ');    buffer.append(getSymbol());    buffer.append('    ');    }    buffer.append(parenthesize(args[i],    i    ==    0));    [CLASS]        CoreOperation    [METHOD]    toString    [RETURN_TYPE]    String        [VARIABLES]    StringBuffer    buffer    boolean    int    i        	jxpath_14538_CoreOperation_1_1	58	1	src/java/org/apache/commons/jxpath/ri/compiler/CoreOperation.java
1374	[PATCH]    if    (getArgumentCount()    <    2)    {	[BUG]    [BUGGY]    if    (getArgumentCount()    !=    2)    {    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Incorrect    number    of    argument:    concat('a',    'b',    'c')    testCoreFunctions    [CONTEXT]    protected    Object    functionConcat(EvalContext    context)    {    [BUGGY]    if    (getArgumentCount()    !=    2)    {    assertArgCount(2);    }    StringBuffer    buffer    =    new    StringBuffer();    Expression    args[]    =    getArguments();    for    (int    i    =    0;    i    <    args.length;    i++)    {    buffer.append(InfoSetUtil.stringValue(args[i].compute(context)));    }    return    buffer.toString();    }    [CLASS]        CoreFunction    [METHOD]    functionConcat    [RETURN_TYPE]    Object        EvalContext    context    [VARIABLES]    EvalContext    context    StringBuffer    buffer    boolean    Double    ZERO    int    count    functionCode    i    old    Expression[]    args        	jxpath_14228_CoreFunction_1_1	417	1	src/java/org/apache/commons/jxpath/ri/compiler/CoreFunction.java
1375	[PATCH]    else    if    ((active0    &    0x10000000000L)    !=    0L)	[BUG]    [BUGGY]    else    if    ((active0    &    1099511627776L)    <    0L)    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    'namespace::foo:bar'.    Syntax    error    after:    'namespace:'    testLocationPathAxisOther    [CONTEXT]    jjStopStringLiteralDfa_0(9,    active0,    active1);    return    10;    }    switch(curChar)    {    case    45:    return    jjMoveStringLiteralDfa11_0(active0,    0x800400000000L,    active1,    0L);    case    58:    if    ((active0    &    0x8000000000L)    !=    0L)    return    jjStopAtPos(10,    39);    [BUGGY]    else    if    ((active0    &    1099511627776L)    <    0L)    return    jjStopAtPos(10,    40);    else    if    ((active0    &    0x20000000000L)    !=    0L)    return    jjStopAtPos(10,    41);    else    if    ((active0    &    0x40000000000L)    !=    0L)    return    jjStopAtPos(10,    42);    return    jjMoveStringLiteralDfa11_0(active0,    0x80000000000L,    active1,    0L);    case    97:    return    jjMoveStringLiteralDfa11_0(active0,    0x2000000000000000L,    active1,    0L);    case    98:    return    jjMoveStringLiteralDfa11_0(active0,    0x1000000000000000L,    active1,    0x2000L);    [CLASS]        XPathParserTokenManager    [METHOD]    jjMoveStringLiteralDfa10_0    [RETURN_TYPE]    int        long    old0    long    active0    long    old1    long    active1    [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    IOException    e    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    kind    lexState    pos    state    long    active0    active1    old0    old1        	jxpath_10381_XPathParserTokenManager_1_1	941	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
1376	[PATCH]    if    (hint    ==    -1)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    Evaluating    pointer    iterator    <$e/errorString>    expected:<[$e/errorString]>    but    was:<[]>    testErrorProperty    [CONTEXT]    return    1;    }    if    (pd    instanceof    IndexedPropertyDescriptor)    {    return    ValueUtils.getIndexedPropertyLength(    getBean(),    (IndexedPropertyDescriptor)    pd);    }    int    hint    =    ValueUtils.getCollectionHint(pd.getPropertyType());    [BUGGY]    if    (false)    {    return    1;    }    return    ValueUtils.getLength(getBaseValue());    }    [CLASS]        BeanPropertyPointer    [METHOD]    getLength    [RETURN_TYPE]    int        [VARIABLES]    JXPathBeanInfo    beanInfo    boolean    PropertyDescriptor    pd    propertyDescriptor    Object    UNINITIALIZED    baseValue    value    String    propertyName    PropertyDescriptor[]    pds    propertyDescriptors    String[]    names    int    hint        	jxpath_15927_BeanPropertyPointer_1_1	196	1	src/java/org/apache/commons/jxpath/ri/model/beans/BeanPropertyPointer.java
1377	[PATCH]    return    1;	[BUG]    [BUGGY]    return    -1;    [FE]    junit.framework.AssertionFailedError:    Comparing    paths    'vendor//price:amount'    and    'vendor/location'    expected:<1>    but    was:<-1>    testDocumentOrder    [CONTEXT]    }    List    children    =    ((Element)    node).getContent();    int    length    =    children.size();    for    (int    i    =    0;    i    <    length;    i++)    {    Object    n    =    children.get(i);    if    (n    ==    node1)    {    return    -1;    }    else    if    (n    ==    node2)    {    [BUGGY]    return    -1;    }    }    return    0;    }    [CLASS]        JDOMNodePointer    [METHOD]    compareChildNodePointers    [RETURN_TYPE]    int        NodePointer    pointer1    NodePointer    pointer2    [VARIABLES]    boolean    Object    n    node    node1    node2    List    children    list    String    XMLNS_NAMESPACE_URI    XML_NAMESPACE_URI    id    ns    prefix    NodePointer    pointer1    pointer2    long    serialVersionUID    int    i    length        	jxpath_18022_JDOMNodePointer_1_1	179	1	src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMNodePointer.java
1378	[PATCH]    for    (int    i    =    0;    i    <    children.size();    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    -1;    i    <    children.size();    i++)    {    [FE]    java.lang.IndexOutOfBoundsException:    Index:    -1    Size:    19    testDefaultNamespaceIgnored    [CONTEXT]    private    int    getRelativePositionByName()    {    if    (node    instanceof    Element)    {    Object    parent    =    ((Element)    node).getParent();    if    (!(parent    instanceof    Element))    {    return    1;    }    List    children    =    ((Element)parent).getContent();    int    count    =    0;    String    name    =    ((Element)    node).getQualifiedName();    [BUGGY]    for    (int    i    =    -1;    i    <    children.size();    i++)    {    Object    child    =    children.get(i);    if    ((child    instanceof    Element)    &&    ((Element)    child).getQualifiedName().equals(name))    {    count++;    }    if    (child    ==    node)    {    break;    }    }    return    count;    [CLASS]        JDOMNodePointer    [METHOD]    getRelativePositionByName    [RETURN_TYPE]    int        [VARIABLES]    Object    child    n    node    node1    node2    parent    value    List    children    String    XMLNS_NAMESPACE_URI    XML_NAMESPACE_URI    attr    current    id    lang    ln    name    namespaceURI    nodeNS    nodePI    ns    nsURI    prefix    s1    s2    string    target    testPI    testPrefix    text    boolean    long    serialVersionUID    int    count    i        	jxpath_18273_JDOMNodePointer_1_1	656	1	src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMNodePointer.java
1379	[PATCH]    actual    =    false;	[BUG]    [BUGGY]    actual    =    true;    [FE]    org.apache.commons.jxpath.JXPathException:    Exception    trying    to    create    xpath    $string;    java.lang.NullPointerException    testCreatePathAndSetValueDeclareVariable    [CONTEXT]    public    VariablePointer(QName    name)    {    super(null);    this.name    =    name;    [BUGGY]    actual    =    true;    }    [CLASS]        VariablePointer    1    [METHOD]    <init>    [RETURN_TYPE]    QName)        QName    name    [VARIABLES]    Variables    variables    boolean    actual    NodePointer    valuePointer    QName    name        	jxpath_15138_VariablePointer_1_1	53	1	src/java/org/apache/commons/jxpath/ri/model/VariablePointer.java
1380	[PATCH]    if    (jj_scan_token(FUNCTION_CEILING))    return    true;	[BUG]    [BUGGY]    if    (false)    return    true;    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    '/    +    1.9520523058583283'.    Syntax    error    after:    '/'    testThreads    [CONTEXT]    return    false;    }    final    private    boolean    jj_3R_52()    {    if    (jj_scan_token(FUNCTION_ROUND))    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_51()    {    [BUGGY]    if    (false)    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_50()    {    if    (jj_scan_token(FUNCTION_FLOOR))    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }        [CLASS]    	jxpath_2781_XPathParser_1_1	2114	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java
1381	[PATCH]    ||    nodeType    ==    Node.CDATA_SECTION_NODE)    {	[BUG]    [BUGGY]    ||    nodeType    <=    Node.CDATA_SECTION_NODE)    {    [FE]    junit.framework.AssertionFailedError:    Checking    value:    /vendor/location/address/city    expected:<Fruit    Market>    but    was:<>    testDoStepNoPredicatesStandard    [CONTEXT]    private    String    stringValue(Node    node)    {    int    nodeType    =    node.getNodeType();    if    (nodeType    ==    Node.COMMENT_NODE)    {    String    text    =    ((Comment)    node).getData();    return    text    ==    null    ?       "   "    :    text.trim();    }    else    if    (    nodeType    ==    Node.TEXT_NODE    [BUGGY]    ||    nodeType    <=    Node.CDATA_SECTION_NODE)    {    String    text    =    node.getNodeValue();    return    text    ==    null    ?       "   "    :    text.trim();    }    else    if    (nodeType    ==    Node.PROCESSING_INSTRUCTION_NODE)    {    String    text    =    ((ProcessingInstruction)    node).getData();    return    text    ==    null    ?       "   "    :    text.trim();    }    else    {    NodeList    list    =    node.getChildNodes();    StringBuffer    buf    =    new    StringBuffer(16);    [CLASS]        DOMNodePointer    [METHOD]    stringValue    [RETURN_TYPE]    String        Node    node    [VARIABLES]    StringBuffer    buf    boolean    Node    aNode    child    n    node    parent    textNode    valueNode    NodeList    list    String    XMLNS_NAMESPACE_URI    XML_NAMESPACE_URI    attr    current    defaultNamespace    id    lang    ln    localName    name    namespace    namespaceURI    nm    nodeNS    nodePI    ns    nsURI    prefix    qname    s1    s2    string    target    testPI    testPrefix    text    uri    Map    namespaces    long    serialVersionUID    int    i    nodeType        	jxpath_17110_DOMNodePointer_1_1	673	1	src/java/org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java
1382	[PATCH]    if    (n    ==    node1)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    Comparing    paths    'vendor/location[@id    =    '100']'    and    'vendor/location[@id    =    '101']'    expected:<-1>    but    was:<1>    testDocumentOrder    [CONTEXT]    throw    new    RuntimeException(       "JXPath    internal    error:       "    +       "compareChildNodes    called    for       "    +    node);    }    List    children    =    ((Element)    node).getContent();    int    length    =    children.size();    for    (int    i    =    0;    i    <    length;    i++)    {    Object    n    =    children.get(i);    [BUGGY]    if    (false)    {    return    -1;    }    else    if    (n    ==    node2)    {    return    1;    }    }    return    0;    }    [CLASS]        JDOMNodePointer    [METHOD]    compareChildNodePointers    [RETURN_TYPE]    int        NodePointer    pointer1    NodePointer    pointer2    [VARIABLES]    boolean    Object    n    node    node1    node2    List    children    list    String    XMLNS_NAMESPACE_URI    XML_NAMESPACE_URI    id    ns    prefix    NodePointer    pointer1    pointer2    long    serialVersionUID    int    i    length        	jxpath_18017_JDOMNodePointer_1_1	175	1	src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMNodePointer.java
1383	[PATCH]    return    jjStopAtPos(19,    47);	[BUG]    [BUGGY]    return    jjStopAtPos(19,    0);    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    'descendant-or-self::foo:bar'.    Syntax    error    at    the    beginning    of    the    expression    testLocationPathAxisDescendantOrSelf    [CONTEXT]    return    jjStartNfa_0(17,    old0,    0L);    try    {    curChar    =    input_stream.readChar();    }    catch(java.io.IOException    e)    {    jjStopStringLiteralDfa_0(18,    active0,    0L);    return    19;    }    switch(curChar)    {    case    58:    if    ((active0    &    0x800000000000L)    !=    0L)    [BUGGY]    return    jjStopAtPos(19,    0);    break;    case    105:    return    jjMoveStringLiteralDfa20_0(active0,    0x400000000L);    default    :    break;    }    return    jjStartNfa_0(18,    active0,    0L);    }    [CLASS]        XPathParserTokenManager    [METHOD]    jjMoveStringLiteralDfa19_0    [RETURN_TYPE]    int        long    old0    long    active0    [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    IOException    e    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    kind    lexState    pos    state    long    active0    old0        	jxpath_10902_XPathParserTokenManager_1_1	1216	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
1384	[PATCH]    if    (parent    !=    null)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.ComparisonFailure:    Evaluating    pointer    <//.[name    =    'three']>    expected:</[]first/first/second>    but    was:</[root/]first/first/second>    testInfiniteDescent    [CONTEXT]    public    String    asPath()    {    [BUGGY]    if    (true)    {    return    super.asPath();    }    else    if    (bean    ==    null)    {    return       "null()   ";    }    else    if    (bean    instanceof    Number)    {    String    string    =    bean.toString();    if    (string.endsWith(   ".0   "))    {    string    =    string.substring(0,    string.length()    -    2);    }    [CLASS]        BeanPointer    [METHOD]    asPath    [RETURN_TYPE]    String        [VARIABLES]    JXPathBeanInfo    beanInfo    Object    bean    object    value    String    string    boolean    QName    name        	jxpath_15827_BeanPointer_1_1	148	1	src/java/org/apache/commons/jxpath/ri/model/beans/BeanPointer.java
1385	[PATCH]    return    jjMoveStringLiteralDfa10_0(active0,    0x400880000000000L,    active1,    0L);	[BUG]    [BUGGY]    return    jjMoveStringLiteralDfa10_0(active0,    -288379909733089280L,    active1,    0L);    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    'descendant-or-self::foo:bar'.    Syntax    error    after:    'descendant-or-self:'    testLocationPathAxisDescendantOrSelf    [CONTEXT]    break;    case    103:    return    jjMoveStringLiteralDfa10_0(active0,    0x400000000L,    active1,    0L);    case    109:    return    jjMoveStringLiteralDfa10_0(active0,    0L,    active1,    0x2000L);    case    110:    return    jjMoveStringLiteralDfa10_0(active0,    0x8000000000000000L,    active1,    0L);    case    111:    return    jjMoveStringLiteralDfa10_0(active0,    0x100000000000L,    active1,    0L);    case    116:    [BUGGY]    return    jjMoveStringLiteralDfa10_0(active0,    -288379909733089280L,    active1,    0L);    default    :    break;    }    return    jjStartNfa_0(8,    active0,    active1);    }    [CLASS]        XPathParserTokenManager    [METHOD]    jjMoveStringLiteralDfa9_0    [RETURN_TYPE]    int        long    old0    long    active0    long    old1    long    active1    [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    IOException    e    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    kind    lexState    pos    state    long    active0    active1    old0    old1        	jxpath_10339_XPathParserTokenManager_1_1	919	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
1386	[PATCH]    return    ((Boolean)    object).booleanValue()    ?    ONE    :    ZERO;	[BUG]    [BUGGY]    return    true    ?    ONE    :    ZERO;    [FE]    junit.framework.AssertionFailedError:    Evaluating    <number($bool_false)>    expected:<0.0>    but    was:<1.0>    testCoreFunctions    [CONTEXT]    public    static    Number    number(Object    object)    {    if    (object    instanceof    Number)    {    return    (Number)    object;    }    else    if    (object    instanceof    Boolean)    {    [BUGGY]    return    true    ?    ONE    :    ZERO;    }    else    if    (object    instanceof    String)    {    Double    value;    try    {    value    =    new    Double((String)    object);    }    catch    (NumberFormatException    ex)    {    value    =    NOT_A_NUMBER;    }    return    value;    [CLASS]        InfoSetUtil    [METHOD]    number    [RETURN_TYPE]    Number        Object    object    [VARIABLES]    EvalContext    ctx    NumberFormatException    ex    Object    object    Pointer    ptr    boolean    Double    NOT_A_NUMBER    ONE    ZERO    value        	jxpath_1291_InfoSetUtil_1_1	79	1	src/java/org/apache/commons/jxpath/ri/InfoSetUtil.java
1387	[PATCH]    if    (jj_scan_token(PLUS))    return    true;	[BUG]    [BUGGY]    if    (true)    return    true;    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    '(3    +    1)    +    4'.    Syntax    error    at    the    beginning    of    the    expression    testCoreOperationSum    [CONTEXT]    return    false;    }    final    private    boolean    jj_3R_149()    {    if    (jj_scan_token(AXIS_ANCESTOR_OR_SELF))    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_163()    {    [BUGGY]    if    (true)    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    if    (jj_3R_162())    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_22()    {    if    (jj_scan_token(TEXT))    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    [CLASS]    	jxpath_3471_XPathParser_1_1	2366	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java
1388	[PATCH]    if    (parentContext    !=    null)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    java.lang.NullPointerException    testCoreOperationDivide    [CONTEXT]    public    Locale    getLocale()    {    if    (locale    ==    null)    {    [BUGGY]    if    (true)    {    return    parentContext.getLocale();    }    else    {    locale    =    Locale.getDefault();    }    }    return    locale;    }    [CLASS]        JXPathContext    [METHOD]    getLocale    [RETURN_TYPE]    Locale        [VARIABLES]    Locale    locale    IdentityManager    idManager    HashMap    decimalFormats    Functions    functions    PackageFunctions    GENERIC_FUNCTIONS    AbstractFactory    factory    Variables    vars    boolean    lenient    lenientSet    JXPathContext    compilationContext    parentContext    Object    contextBean    JXPathContextFactory    contextFactory    KeyManager    keyManager        	jxpath_24_JXPathContext_1_1	544	1	src/java/org/apache/commons/jxpath/JXPathContext.java
1389	[PATCH]    if    (jj_scan_token(AXIS_ANCESTOR_OR_SELF))    return    true;	[BUG]    [BUGGY]    if    (true)    return    true;    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    'count(beans/name/ancestor-or-self::node())'.    Syntax    error    after:    'c'    testAxisAncestor    [CONTEXT]    return    false;    }    final    private    boolean    jj_3R_23()    {    if    (jj_scan_token(COMMENT))    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_149()    {    [BUGGY]    if    (true)    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_163()    {    if    (jj_scan_token(PLUS))    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    if    (jj_3R_162())    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    [CLASS]    	jxpath_3456_XPathParser_1_1	2360	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java
1390	[PATCH]    return    jjMoveNfa_0(0,    0);	[BUG]    [BUGGY]    return    jjMoveNfa_0(-1,    0);    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    '2    div    4'.    Invalid    symbol    '2'    at    the    beginning    of    the    expression    testCoreOperationDivide    [CONTEXT]    return    jjMoveStringLiteralDfa1_0(0x2422400000000L,    0x0L);    case    114:    return    jjMoveStringLiteralDfa1_0(0x0L,    0x1000L);    case    115:    return    jjMoveStringLiteralDfa1_0(0xf500000800000000L,    0x200L);    case    116:    return    jjMoveStringLiteralDfa1_0(0x100000000L,    0x12L);    case    124:    return    jjStopAtPos(0,    8);    default    :    [BUGGY]    return    jjMoveNfa_0(-1,    0);    }    }    [CLASS]        XPathParserTokenManager    [METHOD]    jjMoveStringLiteralDfa0_0    [RETURN_TYPE]    int        [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    kind    lexState    pos    state        	jxpath_9259_XPathParserTokenManager_1_1	477	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
1391	[PATCH]    if    (includeSelf)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError:    Evaluating    <count(descendant::node())>    expected:<65.0>    but    was:<66.0>    testAxisDescendant    [CONTEXT]    stack    =    new    Stack();    currentNodePointer    =    parentContext.getCurrentNodePointer();    if    (currentNodePointer    !=    null)    {    if    (!currentNodePointer.isLeaf())    {    stack.push(    currentNodePointer.childIterator(    ELEMENT_NODE_TEST,    false,    null));    }    [BUGGY]    if    (true)    {    if    (currentNodePointer.testNode(nodeTest))    {    position++;    return    true;    }    }    }    }    while    (!stack.isEmpty())    {    NodeIterator    it    =    (NodeIterator)    stack.peek();    [CLASS]    	jxpath_12960_DescendantContext_1_1	99	1	src/java/org/apache/commons/jxpath/ri/axes/DescendantContext.java
1392	[PATCH]    else    if    (step.getAxis()    ==    Compiler.AXIS_CHILD	[BUG]    [BUGGY]    else    if    (false    [FE]    junit.framework.ComparisonFailure:    Checking    signature:    /int    expected:<Bb[]>    but    was:<Bb[B]>    testDoStepNoPredicatesPropertyOwner    [CONTEXT]    NodeTest    nodeTest    =    step.getNodeTest();    if    (!(nodeTest    instanceof    NodeTypeTest))    {    return    false;    }    int    nodeType    =    ((NodeTypeTest)    nodeTest).getNodeType();    if    (nodeType    !=    Compiler.NODE_TYPE_NODE)    {    return    false;    }    return    areBasicPredicates(step.getPredicates());    }    [BUGGY]    else    if    (false    ||    step.getAxis()    ==    Compiler.AXIS_ATTRIBUTE)    {    NodeTest    nodeTest    =    step.getNodeTest();    if    (!(nodeTest    instanceof    NodeNameTest)){    return    false;    }    if    (((NodeNameTest)    nodeTest).isWildcard())    {    return    false;    }    return    areBasicPredicates(step.getPredicates());    [CLASS]        Path    [METHOD]    isSimpleStep    [RETURN_TYPE]    boolean        Step    step    [VARIABLES]    Step[]    steps    boolean    basic    basicKnown    Step    step    NodeTest    nodeTest    int    nodeType        	jxpath_14926_Path_1_1	104	1	src/java/org/apache/commons/jxpath/ri/compiler/Path.java
1393	[PATCH]    if    (steps[0].getAxis()    !=    Compiler.AXIS_ATTRIBUTE)    {	[BUG]    [BUGGY]    if    (steps[1].getAxis()    !=    Compiler.AXIS_ATTRIBUTE)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    1    testCoreOperationNameAttributeTest    [CONTEXT]    private    boolean    isNameAttributeTest(Expression    arg)    {    if    (!(arg    instanceof    LocationPath))    {    return    false;    }    Step[]    steps    =    ((LocationPath)    arg).getSteps();    if    (steps.length    !=    1)    {    return    false;    }    [BUGGY]    if    (steps[1].getAxis()    !=    Compiler.AXIS_ATTRIBUTE)    {    return    false;    }    NodeTest    test    =    steps[0].getNodeTest();    if    (!(test    instanceof    NodeNameTest))    {    return    false;    }    if    (!((NodeNameTest)    test).getNodeName().equals(QNAME_NAME))    {    return    false;    }    return    true;    [CLASS]        TreeCompiler    [METHOD]    isNameAttributeTest    [RETURN_TYPE]    boolean        Expression    arg    [VARIABLES]    Step[]    steps    boolean    Expression    arg    QName    QNAME_NAME    NodeTest    test        	jxpath_15117_TreeCompiler_1_1	199	1	src/java/org/apache/commons/jxpath/ri/compiler/TreeCompiler.java
1394	[PATCH]    return    jjStopAtPos(1,    16);	[BUG]    [BUGGY]    return    jjStopAtPos(1,    -16);    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testCoreOperationGreaterThan    [CONTEXT]    case    47:    if    ((active0    &    0x80L)    !=    0L)    return    jjStopAtPos(1,    7);    break;    case    61:    if    ((active0    &    0x1000L)    !=    0L)    return    jjStopAtPos(1,    12);    else    if    ((active0    &    0x4000L)    !=    0L)    return    jjStopAtPos(1,    14);    else    if    ((active0    &    0x10000L)    !=    0L)    [BUGGY]    return    jjStopAtPos(1,    -16);    break;    case    97:    return    jjMoveStringLiteralDfa2_0(active0,    0xc1012000000000L,    active1,    0xa0L);    case    100:    if    ((active0    &    0x8000000000000L)    !=    0L)    return    jjStartNfaWithStates_0(1,    51,    12);    break;    case    101:    return    jjMoveStringLiteralDfa2_0(active0,    0x10880900000000L,    active1,    0x800L);    case    104:    [CLASS]        XPathParserTokenManager    [METHOD]    jjMoveStringLiteralDfa1_0    [RETURN_TYPE]    int        long    active0    long    active1    [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    IOException    e    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    kind    lexState    pos    state    long    active0    active1        	jxpath_9331_XPathParserTokenManager_1_1	503	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
1395	[PATCH]    while    (curChar    <=    32    &&    (0x100003600L    &    (1L    <<    curChar))    !=    0L)	[BUG]    [BUGGY]    while    (curChar    <=    32    ==    ((4294981120L    &    (1L    <<    curChar))    !=    0L))    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    '2    div    4'.    Syntax    error    at    the    beginning    of    the    expression    testCoreOperationDivide    [CONTEXT]    curChar    =    input_stream.BeginToken();    }    catch(java.io.IOException    e)    {    jjmatchedKind    =    0;    matchedToken    =    jjFillToken();    return    matchedToken;    }    try    {    input_stream.backup(0);    [BUGGY]    while    (curChar    <=    32    ==    ((4294981120L    &    (1L    <<    curChar))    !=    0L))    curChar    =    input_stream.BeginToken();    }    catch    (java.io.IOException    e1)    {    continue    EOFLoop;    }    jjmatchedKind    =    0x7fffffff;    jjmatchedPos    =    0;    curPos    =    jjMoveStringLiteralDfa0_0();    if    (jjmatchedKind    !=    0x7fffffff)    {    if    (jjmatchedPos    +    1    <    curPos)    input_stream.backup(curPos    -    jjmatchedPos    -    1);    [CLASS]        XPathParserTokenManager    [METHOD]    getNextToken    [RETURN_TYPE]    Token        [VARIABLES]    PrintStream    debugStream    ds    boolean    EOFSeen    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    nextStates    Token    matchedToken    specialToken    String[]    jjstrLiteralImages    lexStateNames    IOException    e    e1    String    error_after    int    curLexState    curPos    defaultLexState    end    error_column    error_line    hiByte    i    i1    i2    j    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    kind    lexState    pos    start    startState    startsAt    state    state1    state2        	jxpath_12177_XPathParserTokenManager_1_1	1831	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
1396	[PATCH]    for    (int    i    =    0;    i    <    39;    i++)    jj_la1[i]    =    -1;	[BUG]    [BUGGY]    for    (int    i    =    -1;    i    <    39;    i++)    jj_la1[i]    =    -1;    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testCoreOperationDivide    [CONTEXT]    for    (int    i    =    0;    i    <    39;    i++)    jj_la1[i]    =    -1;    for    (int    i    =    0;    i    <    jj_2_rtns.length;    i++)    jj_2_rtns[i]    =    new    JJCalls();    }    public    void    ReInit(java.io.Reader    stream)    {    jj_input_stream.ReInit(stream,    1,    1);    token_source.ReInit(jj_input_stream);    token    =    new    Token();    token.next    =    jj_nt    =    token_source.getNextToken();    jj_gen    =    0;    [BUGGY]    for    (int    i    =    -1;    i    <    39;    i++)    jj_la1[i]    =    -1;    for    (int    i    =    0;    i    <    jj_2_rtns.length;    i++)    jj_2_rtns[i]    =    new    JJCalls();    }    public    XPathParser(XPathParserTokenManager    tm)    {    token_source    =    tm;    token    =    new    Token();    token.next    =    jj_nt    =    token_source.getNextToken();    jj_gen    =    0;    for    (int    i    =    0;    i    <    39;    i++)    jj_la1[i]    =    -1;    for    (int    i    =    0;    i    <    jj_2_rtns.length;    i++)    jj_2_rtns[i]    =    new    JJCalls();    [CLASS]    	jxpath_7381_XPathParser_1_1	3574	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java
1397	[PATCH]    if    ((active0    &    0x8000000000000L)    !=    0L)	[BUG]    [BUGGY]    if    ((active0    |    2251799813685248L)    !=    0L)    [FE]    org.apache.commons.jxpath.JXPathNotFoundException:    No    pointer    for    xpath:    /document    testIDFunction    [CONTEXT]    if    ((active0    &    0x1000L)    !=    0L)    return    jjStopAtPos(1,    12);    else    if    ((active0    &    0x4000L)    !=    0L)    return    jjStopAtPos(1,    14);    else    if    ((active0    &    0x10000L)    !=    0L)    return    jjStopAtPos(1,    16);    break;    case    97:    return    jjMoveStringLiteralDfa2_0(active0,    0xc1012000000000L,    active1,    0xa0L);    case    100:    [BUGGY]    if    ((active0    |    2251799813685248L)    !=    0L)    return    jjStartNfaWithStates_0(1,    51,    12);    break;    case    101:    return    jjMoveStringLiteralDfa2_0(active0,    0x10880900000000L,    active1,    0x800L);    case    104:    return    jjMoveStringLiteralDfa2_0(active0,    0x1000000000L,    active1,    0L);    case    105:    return    jjMoveStringLiteralDfa2_0(active0,    0x40000000L,    active1,    0L);    case    108:    return    jjMoveStringLiteralDfa2_0(active0,    0L,    active1,    0x400L);    [CLASS]        XPathParserTokenManager    [METHOD]    jjMoveStringLiteralDfa1_0    [RETURN_TYPE]    int        long    active0    long    active1    [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    IOException    e    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    kind    lexState    pos    state    long    active0    active1        	jxpath_9339_XPathParserTokenManager_1_1	508	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
1398	[PATCH]    else    if    ((active0    &    0x20000000L)    !=    0L)	[BUG]    [BUGGY]    else    if    ((active0    ^    536870912L)    !=    0L)    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    '2    mod    4'.    Syntax    error    after:    '2'    testCoreOperationMod    [CONTEXT]    {    case    97:    return    jjMoveStringLiteralDfa3_0(active0,    0x400000000000000L,    active1,    0x2L);    case    98:    return    jjMoveStringLiteralDfa3_0(active0,    0x7000000000000000L,    active1,    0L);    case    99:    return    jjMoveStringLiteralDfa3_0(active0,    0x20104000000000L,    active1,    0L);    case    100:    if    ((active0    &    0x10000000L)    !=    0L)    return    jjStartNfaWithStates_0(2,    28,    12);    [BUGGY]    else    if    ((active0    ^    536870912L)    !=    0L)    return    jjStartNfaWithStates_0(2,    29,    12);    return    jjMoveStringLiteralDfa3_0(active0,    0x80000000L,    active1,    0L);    case    101:    return    jjMoveStringLiteralDfa3_0(active0,    0x420000000000L,    active1,    0L);    case    105:    return    jjMoveStringLiteralDfa3_0(active0,    0x1000000000L,    active1,    0x800L);    case    108:    return    jjMoveStringLiteralDfa3_0(active0,    0x240800000000L,    active1,    0x60L);    case    109:    if    ((active1    &    0x200L)    !=    0L)    [CLASS]        XPathParserTokenManager    [METHOD]    jjMoveStringLiteralDfa2_0    [RETURN_TYPE]    int        long    old0    long    active0    long    old1    long    active1    [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    IOException    e    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    kind    lexState    pos    state    long    active0    active1    old0    old1        	jxpath_9447_XPathParserTokenManager_1_1	556	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
1399	[PATCH]    jjmatchedPos    =    8;	[BUG]    [BUGGY]    jjmatchedPos    =    -8;    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    'substring(\'a\',    2)'.    Invalid    symbol    ''    at    the    beginning    of    the    expression    testCoreFunction    [CONTEXT]    if    ((active0    &    0x4000000000000000L)    !=    0L)    {    jjmatchedKind    =    62;    [BUGGY]    jjmatchedPos    =    -8;    }    [CLASS]        XPathParserTokenManager    [METHOD]    jjMoveStringLiteralDfa8_0    [RETURN_TYPE]    int        long    old0    long    active0    long    old1    long    active1    [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    IOException    e    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    kind    lexState    pos    state    long    active0    active1    old0    old1        	jxpath_10248_XPathParserTokenManager_1_1	873	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
1400	[PATCH]    if    (wantedCount    >    0)    {	[BUG]    [BUGGY]    if    (wantedCount    >=    0)    {    [FE]    junit.framework.AssertionFailedError:    shouldVerifyInOrderWhenExpectingSomeInvocationsToBeCalledZeroTimes    [CONTEXT]    public    void    verifyInOrder(VerificationDataInOrder    data)    {    List<Invocation>    allInvocations    =    data.getAllInvocations();    InvocationMatcher    wanted    =    data.getWanted();        [BUGGY]    if    (wantedCount    >=    0)    {    MissingInvocationInOrderChecker    missingInvocation    =    new    MissingInvocationInOrderChecker();    missingInvocation.check(allInvocations,    wanted,    this,    data.getOrderingContext());    }    NumberOfInvocationsInOrderChecker    numberOfCalls    =    new    NumberOfInvocationsInOrderChecker();    numberOfCalls.check(allInvocations,    wanted,    wantedCount,    data.getOrderingContext());    }    [CLASS]        Times    [METHOD]    verifyInOrder    [RETURN_TYPE]    void        VerificationDataInOrder    data    [VARIABLES]    boolean    NumberOfInvocationsInOrderChecker    numberOfCalls    VerificationDataInOrder    data    InvocationMatcher    wanted    List    allInvocations    int    wantedCount    wantedNumberOfInvocations    MissingInvocationInOrderChecker    missingInvocation        	mockito_2094_Times_1_1	45	1	src/org/mockito/internal/verification/Times.java
1401	[PATCH]    return    out.replace(lastBreak,    lastBreak+1,       "   ").toString();	[BUG]    [BUGGY]    return    out.replace(lastBreak,    lastBreak    %    1,       "   ").toString();    [FE]    java.lang.Exception:    Unexpected    exception,    expected<org.mockito.exceptions.misusing.NotAMockException>    but    was<java.lang.StringIndexOutOfBoundsException>    shouldValidateMockWhenVerifying    [CONTEXT]    public    static    String    join(Object    ...    linesToBreak)    {    StringBuilder    out    =    new    StringBuilder(   "\n   ");    for    (Object    line    :    linesToBreak)    {    out.append(line.toString()).append(   "\n   ");    }    int    lastBreak    =    out.lastIndexOf(   "\n   ");    [BUGGY]    return    out.replace(lastBreak,    lastBreak    %    1,       "   ").toString();    }    [CLASS]        StringJoiner    [METHOD]    join    [RETURN_TYPE]    String        linesToBreak    [VARIABLES]    boolean    StringBuilder    out    Object    line    Object[]    linesToBreak    int    lastBreak        	mockito_336_StringJoiner_1_1	15	1	src/org/mockito/internal/util/StringJoiner.java
1402	[PATCH]    return    allInvocations.get(allInvocations.size()-1);	[BUG]    [BUGGY]    return    allInvocations.get(allInvocations.size()    /    1);    [FE]    java.lang.IndexOutOfBoundsException:    Index:    1,    Size:    1    shouldMatchAnyVarargEvenIfOneOfTheArgsIsNull    [CONTEXT]    public    Invocation    getLastInvocation()    {    OngoingStubbingImpl    ongoingStubbing    =    ((OngoingStubbingImpl)    mockingProgress.pullOngoingStubbing());    List<Invocation>    allInvocations    =    ongoingStubbing.getRegisteredInvocations();    [BUGGY]    return    allInvocations.get(allInvocations.size()    /    1);    }    [CLASS]        MockitoCore    [METHOD]    getLastInvocation    [RETURN_TYPE]    Invocation        [VARIABLES]    List    allInvocations    boolean    MockingProgress    mockingProgress    MockUtil    mockUtil    OngoingStubbingImpl    ongoingStubbing    Reporter    reporter        	mockito_327_MockitoCore_1_1	156	1	src/org/mockito/internal/MockitoCore.java
1403	[PATCH]    int    k    =    0;	[BUG]    [BUGGY]    int    k    =    -1;    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    shouldLogDifferentArgs    [CONTEXT]    public    void    captureArgumentsFrom(Invocation    i)    {    [BUGGY]    int    k    =    -1;    for    (Matcher    m    :    matchers)    {    if    (m    instanceof    CapturesArguments    &&    i.getArguments().length    >    k)    {    ((CapturesArguments)    m).captureFrom(i.getArguments()[k]);    }    k++;    }    }    [CLASS]        InvocationMatcher    [METHOD]    captureArgumentsFrom    [RETURN_TYPE]    void        Invocation    i    [VARIABLES]    List    matchers    boolean    Invocation    actual    candidate    i    invocation    Matcher    m    long    serialVersionUID    int    k        	mockito_192_InvocationMatcher_1_1	105	1	src/org/mockito/internal/invocation/InvocationMatcher.java
1404	[PATCH]    }    else    if    (wantedCount    ==    0    &&    actualCount    >    0)    {	[BUG]    [BUGGY]    }    else    if    (wantedCount    ==    -1    &&    actualCount    >    0)    {    [FE]    junit.framework.AssertionFailedError:    shouldAllowVerifyingWhenOtherMockCallIsInTheSameLine    [CONTEXT]    public    void    check(List<Invocation>    invocations,    InvocationMatcher    wanted,    int    wantedCount)    {    List<Invocation>    actualInvocations    =    finder.findInvocations(invocations,    wanted);    int    actualCount    =    actualInvocations.size();    if    (wantedCount    >    actualCount)    {    Location    lastInvocation    =    finder.getLastLocation(actualInvocations);    reporter.tooLittleActualInvocations(new    Discrepancy(wantedCount,    actualCount),    wanted,    lastInvocation);    [BUGGY]    }    else    if    (wantedCount    ==    -1    &&    actualCount    >    0)    {    Location    firstUndesired    =    actualInvocations.get(wantedCount).getLocation();    reporter.neverWantedButInvoked(wanted,    firstUndesired);    }    else    if    (wantedCount    <    actualCount)    {    Location    firstUndesired    =    actualInvocations.get(wantedCount).getLocation();    reporter.tooManyActualInvocations(wantedCount,    actualCount,    wanted,    firstUndesired);    }    invocationMarker.markVerified(actualInvocations,    wanted);    }    [CLASS]        NumberOfInvocationsChecker    [METHOD]    check    [RETURN_TYPE]    void        Invocation>    invocations    InvocationMatcher    wanted    int    wantedCount    [VARIABLES]    boolean    InvocationMarker    invocationMarker    InvocationsFinder    finder    Reporter    reporter    InvocationMatcher    wanted    List    actualInvocations    invocations    int    actualCount    wantedCount    Location    firstUndesired    lastInvocation        	mockito_2176_NumberOfInvocationsChecker_1_1	39	1	src/org/mockito/internal/verification/checkers/NumberOfInvocationsChecker.java
1405	[PATCH]    return    mock.getClass().getInterfaces()[0].getSimpleName();	[BUG]    [BUGGY]    return    mock.getClass().getInterfaces()[1].getSimpleName();    [FE]    junit.framework.ComparisonFailure:    expected:<Mock    for    [DummyInterface],    hashCode:    18563650...>    but    was:<Mock    for    [Factory],    hashCode:    18563650...>    shouldProvideMockyImplementationOfToString    [CONTEXT]    public    static    String    classNameForMock(Object    mock)    {    if    (mock.getClass().getInterfaces().length    ==    2)    {    [BUGGY]    return    mock.getClass().getInterfaces()[1].getSimpleName();    }    else    {    return    mock.getClass().getSuperclass().getSimpleName();    }    }    [CLASS]        ClassNameFinder    [METHOD]    classNameForMock    [RETURN_TYPE]    String        Object    mock    [VARIABLES]    boolean    Object    mock        	mockito_712_ClassNameFinder_1_1	11	1	src/org/mockito/internal/creation/ClassNameFinder.java
1406	[PATCH]    this.setEquals(false);	[BUG]    [BUGGY]    this.setEquals(true);    [FE]    junit.framework.AssertionFailedError    testShortArray    [CONTEXT]    public    EqualsBuilder    append(short[]    lhs,    short[]    rhs)    {    if    (isEquals    ==    false)    {    return    this;    }    if    (lhs    ==    rhs)    {    return    this;    }    if    (lhs    ==    null    ||    rhs    ==    null)    {    [BUGGY]    this.setEquals(true);    return    this;    }    if    (lhs.length    !=    rhs.length)    {    this.setEquals(false);    return    this;    }    for    (int    i    =    0;    i    <    lhs.length    &&    isEquals;    ++i)    {    append(lhs[i],    rhs[i]);    }    return    this;    [CLASS]        EqualsBuilder    [METHOD]    append    [RETURN_TYPE]    EqualsBuilder        short[]    lhs    short[]    rhs    [VARIABLES]    short[]    lhs    rhs    int    i    boolean    isEquals    lhs    rhs    superEquals    testTransients    useTransients        	mockito_1532_EqualsBuilder_1_1	644	1	src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java
1407	[PATCH]    this.setEquals(false);	[BUG]    [BUGGY]    this.setEquals(true);    [FE]    junit.framework.AssertionFailedError    testCharArray    [CONTEXT]    public    EqualsBuilder    append(char[]    lhs,    char[]    rhs)    {    if    (isEquals    ==    false)    {    return    this;    }    if    (lhs    ==    rhs)    {    return    this;    }    if    (lhs    ==    null    ||    rhs    ==    null)    {    [BUGGY]    this.setEquals(true);    return    this;    }    if    (lhs.length    !=    rhs.length)    {    this.setEquals(false);    return    this;    }    for    (int    i    =    0;    i    <    lhs.length    &&    isEquals;    ++i)    {    append(lhs[i],    rhs[i]);    }    return    this;    [CLASS]        EqualsBuilder    [METHOD]    append    [RETURN_TYPE]    EqualsBuilder        char[]    lhs    char[]    rhs    [VARIABLES]    int    i    boolean    isEquals    lhs    rhs    superEquals    testTransients    useTransients    char[]    lhs    rhs        	mockito_1560_EqualsBuilder_1_1	675	1	src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java
1408	[PATCH]    return    result    <=    0;	[BUG]    [BUGGY]    return    result    <=    -1;    [FE]    junit.framework.AssertionFailedError:    expected:<true>    but    was:<false>    testLessOrEqual    [CONTEXT]    protected    boolean    matchResult(int    result)    {    [BUGGY]    return    result    <=    -1;    }    [CLASS]        LessOrEqual    [METHOD]    matchResult    [RETURN_TYPE]    boolean        int    result    [VARIABLES]    long    serialVersionUID    int    result    boolean        	mockito_1208_LessOrEqual_1_1	24	1	src/org/mockito/internal/matchers/LessOrEqual.java
1409	[PATCH]    if    (matcher    instanceof    ContainsExtraTypeInformation    &&    printSettings.extraTypeInfoFor(i))    {	[BUG]    [BUGGY]    if    (matcher    instanceof    ContainsExtraTypeInformation    ==    printSettings.extraTypeInfoFor(i))    {    [FE]    java.lang.ClassCastException:    org.mockito.internal.matchers.NotNull    cannot    be    cast    to    org.mockito.internal.matchers.ContainsExtraTypeInformation    shouldToStringWithMatchers    [CONTEXT]    private    List<SelfDescribing>    applyPrintSettings(List<Matcher>    matchers,    PrintSettings    printSettings)    {    List<SelfDescribing>    withPrintSettings    =    new    LinkedList<SelfDescribing>();    int    i    =    0;    for    (final    Matcher    matcher    :    matchers)    {    [BUGGY]    if    (matcher    instanceof    ContainsExtraTypeInformation    ==    printSettings.extraTypeInfoFor(i))    {    withPrintSettings.add(((ContainsExtraTypeInformation)    matcher).withExtraTypeInfo());    }    else    {    withPrintSettings.add(matcher);    }    i++;    }    return    withPrintSettings;    }    [CLASS]        MatchersPrinter    [METHOD]    applyPrintSettings    [RETURN_TYPE]    List        Matcher>    matchers    PrintSettings    printSettings    [VARIABLES]    boolean    Matcher    matcher    PrintSettings    printSettings    List    matchers    withPrintSettings    int    i        	mockito_1228_MatchersPrinter_1_1	35	1	src/org/mockito/internal/matchers/MatchersPrinter.java
1410	[PATCH]    return    1;	[BUG]    [BUGGY]    return    0;    [FE]    junit.framework.AssertionFailedError:    expected:<1>    but    was:<0>    shouldBeEqual    [CONTEXT]    public    int    hashCode()    {    [BUGGY]    return    0;    }    [CLASS]        Equals    1    [METHOD]    hashCode    [RETURN_TYPE]    int        [VARIABLES]    Object    actual    o    object    wanted    long    serialVersionUID    boolean        	mockito_1099_Equals_1_1	66	1	src/org/mockito/internal/matchers/Equals.java
1411	[PATCH]    if    (foundSize    >    maxNumberOfInvocations)    {	[BUG]    [BUGGY]    if    (foundSize    >=    maxNumberOfInvocations)    {    [FE]    junit.framework.AssertionFailedError:    shouldVerifyAtMostXTimes    [CONTEXT]    public    void    verify(VerificationData    data)    {    List<Invocation>    invocations    =    data.getAllInvocations();    InvocationMatcher    wanted    =    data.getWanted();    InvocationsFinder    finder    =    new    InvocationsFinder();    List<Invocation>    found    =    finder.findInvocations(invocations,    wanted);    int    foundSize    =    found.size();    [BUGGY]    if    (foundSize    >=    maxNumberOfInvocations)    {    new    Reporter().wantedAtMostX(maxNumberOfInvocations,    foundSize);    }    invocationMarker.markVerified(found,    wanted);    }    [CLASS]        AtMost    [METHOD]    verify    [RETURN_TYPE]    void        VerificationData    data    [VARIABLES]    boolean    InvocationMarker    invocationMarker    InvocationsFinder    finder    InvocationMatcher    wanted    List    found    invocations    int    foundSize    maxNumberOfInvocations    VerificationData    data        	mockito_2035_AtMost_1_1	37	1	src/org/mockito/internal/verification/AtMost.java
1412	[PATCH]    if    (lhs    ==    null    ||    rhs    ==    null)    {	[BUG]    [BUGGY]    if    (lhs    ==    null    ||    false)    {    [FE]    java.lang.NullPointerException    testShortArray    [CONTEXT]    public    EqualsBuilder    append(short[]    lhs,    short[]    rhs)    {    if    (isEquals    ==    false)    {    return    this;    }    if    (lhs    ==    rhs)    {    return    this;    }    [BUGGY]    if    (lhs    ==    null    ||    false)    {    this.setEquals(false);    return    this;    }    if    (lhs.length    !=    rhs.length)    {    this.setEquals(false);    return    this;    }    for    (int    i    =    0;    i    <    lhs.length    &&    isEquals;    ++i)    {    append(lhs[i],    rhs[i]);    }    [CLASS]        EqualsBuilder    [METHOD]    append    [RETURN_TYPE]    EqualsBuilder        short[]    lhs    short[]    rhs    [VARIABLES]    short[]    lhs    rhs    int    i    boolean    isEquals    lhs    rhs    superEquals    testTransients    useTransients        	mockito_1527_EqualsBuilder_1_1	643	1	src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java
1413	[PATCH]    namingPolicyField.setAccessible(true);	[BUG]    [BUGGY]    namingPolicyField.setAccessible(false);    [FE]    java.lang.RuntimeException:    Unable    to    set    MockitoNamingPolicy    on    cglib    generator    which    creates    FastClasses    shouldAllowVerifyingInThreads    [CONTEXT]    public    void    setMockitoNamingPolicy(MockitoMethodProxy    mockitoMethodProxy)    {    try    {    MethodProxy    methodProxy    =    mockitoMethodProxy.getMethodProxy();    Field    createInfoField    =    reflectOnCreateInfo(methodProxy);    createInfoField.setAccessible(true);    Object    createInfo    =    createInfoField.get(methodProxy);    Field    namingPolicyField    =    createInfo.getClass().getDeclaredField(   "namingPolicy   ");    [BUGGY]    namingPolicyField.setAccessible(false);    if    (namingPolicyField.get(createInfo)    ==    null)    {    namingPolicyField.set(createInfo,    MockitoNamingPolicy.INSTANCE);    }    }    catch    (Exception    e)    {    throw    new    RuntimeException(       "Unable    to    set    MockitoNamingPolicy    on    cglib    generator    which    creates    FastClasses   ",    e);    }    }    [CLASS]        CGLIBHacker    [METHOD]    setMockitoNamingPolicy    [RETURN_TYPE]    void        MockitoMethodProxy    mockitoMethodProxy    [VARIABLES]    Field    createInfoField    namingPolicyField    boolean    MethodProxy    methodProxy    Object    createInfo    MockitoMethodProxy    mockitoMethodProxy    long    serialVersionUID    Exception    e        	mockito_444_CGLIBHacker_1_1	24	1	src/org/mockito/internal/creation/cglib/CGLIBHacker.java
1414	[PATCH]    return    method.getName().equals(   "equals   ")    &&    method.getParameterTypes().length    ==    1    &&    method.getParameterTypes()[0]    ==    Object.class;	[BUG]    [BUGGY]    return    method.getName().equals(   "equals   ")    &&    method.getParameterTypes()[0]    ==    Object.class;    [FE]    java.lang.ArrayIndexOutOfBoundsException:    0    shouldKnowEqualsMethod    [CONTEXT]    public    boolean    isEqualsMethod(Method    method)    {    [BUGGY]    return    method.getName().equals(   "equals   ")    &&    method.getParameterTypes()[0]    ==    Object.class;    }    [CLASS]        ObjectMethodsGuru    [METHOD]    isEqualsMethod    [RETURN_TYPE]    boolean        Method    method    [VARIABLES]    long    serialVersionUID    Method    method    boolean        	mockito_471_ObjectMethodsGuru_1_1	27	1	src/org/mockito/internal/util/ObjectMethodsGuru.java
1415	[PATCH]    boolean    mockIsValid    =    mock    ==    null    ||    mock    ==    i.getMock();	[BUG]    [BUGGY]    boolean    mockIsValid    =    mock    ==    null    ||    false;    [FE]    junit.framework.AssertionFailedError:    expected    same:<mock.simpleMethod();>    was    not:<null>    shouldFindFirstUnverifiedInvocationOnMock    [CONTEXT]    Invocation    findFirstUnverified(List<Invocation>    invocations,    Object    mock)    {    for    (Invocation    i    :    invocations)    {    [BUGGY]    boolean    mockIsValid    =    mock    ==    null    ||    false;    if    (!i.isVerified()    &&    mockIsValid)    {    return    i;    }    }    return    null;    }    [CLASS]        InvocationsFinder    RemoveNotMatching    RemoveUnverifiedInOrder    [METHOD]    findFirstUnverified    [RETURN_TYPE]    Invocation        Invocation>    invocations    Object    mock    [VARIABLES]    InvocationMatcher    wanted    List    invocations    Object    mock    boolean    mockIsValid    InOrderContext    context    orderingContext    Invocation    i        	mockito_919_InvocationsFinder_1_1	88	1	src/org/mockito/internal/invocation/InvocationsFinder.java
1416	[PATCH]    assertState(matcherStack.size()    >=    count,	[BUG]    [BUGGY]    assertState(matcherStack.size()    ==    count,    [FE]    org.mockito.exceptions.misusing.InvalidUseOfMatchersException:    1    matchers    expected,    2    recorded.    nullMatcher    [CONTEXT]    private    List<Matcher>    popLastArgumentMatchers(int    count)    {    assertState(!matcherStack.isEmpty(),       "No    matchers    found.   ");    [BUGGY]    assertState(matcherStack.size()    ==    count,       "   "    +    count    +       "    matchers    expected,       "    +    matcherStack.size()    +       "    recorded.   ");    List<Matcher>    result    =    new    LinkedList<Matcher>();    result.addAll(matcherStack.subList(matcherStack.size()    -    count,    matcherStack.size()));    for    (int    i    =    0;    i    <    count;    i++)    {    matcherStack.pop();    }    return    result;    }    [CLASS]        ArgumentMatcherStorageImpl    [METHOD]    popLastArgumentMatchers    [RETURN_TYPE]    List        int    count    [VARIABLES]    List    result    boolean    int    count    i    Stack    matcherStack        	mockito_1706_ArgumentMatcherStorageImpl_1_1	69	1	src/org/mockito/internal/progress/ArgumentMatcherStorageImpl.java
1417	[PATCH]    isEquals    =    (lhs    ==    rhs);	[BUG]    [BUGGY]    isEquals    =    (lhs    >=    rhs);    [FE]    junit.framework.AssertionFailedError    testCharArray    [CONTEXT]    public    EqualsBuilder    append(char    lhs,    char    rhs)    {    if    (isEquals    ==    false)    {    return    this;    }    [BUGGY]    isEquals    =    (lhs    >=    rhs);    return    this;    }    [CLASS]        EqualsBuilder    [METHOD]    append    [RETURN_TYPE]    EqualsBuilder        char    lhs    char    rhs    [VARIABLES]    char    lhs    rhs    boolean    isEquals    superEquals    testTransients    useTransients        	mockito_1410_EqualsBuilder_1_1	459	1	src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java
1418	[PATCH]    &&    (useTransients    ||    !Modifier.isTransient(f.getModifiers()))	[BUG]    [BUGGY]    &&    (useTransients    !=    !Modifier.isTransient(f.getModifiers()))    [FE]    junit.framework.AssertionFailedError    testReflectionHierarchyEquals    [CONTEXT]    EqualsBuilder    builder,    boolean    useTransients,    String[]    excludeFields)    {    Field[]    fields    =    clazz.getDeclaredFields();    List    excludedFieldList    =    excludeFields    !=    null    ?    Arrays.asList(excludeFields)    :    Collections.EMPTY_LIST;    AccessibleObject.setAccessible(fields,    true);    for    (int    i    =    0;    i    <    fields.length    &&    builder.isEquals;    i++)    {    Field    f    =    fields[i];    if    (!excludedFieldList.contains(f.getName())    &&    (f.getName().indexOf('$')    ==    -1)    [BUGGY]    &&    (useTransients    !=    !Modifier.isTransient(f.getModifiers()))    &&    (!Modifier.isStatic(f.getModifiers())))    {    try    {    builder.append(f.get(lhs),    f.get(rhs));    }    catch    (IllegalAccessException    e)    {            throw    new    InternalError(   "Unexpected    IllegalAccessException   ");    }    }    }    [CLASS]        EqualsBuilder    [METHOD]    reflectionAppend    [RETURN_TYPE]    void        Object    lhs    Object    rhs    Class    clazz    EqualsBuilder    builder    boolean    useTransients    String[]    excludeFields    [VARIABLES]    Field    f    boolean    isEquals    testTransients    useTransients    Object    lhs    rhs    Class    clazz    EqualsBuilder    builder    List    excludedFieldList    String[]    excludeFields    Field[]    fields    int    i    IllegalAccessException    e        	mockito_1325_EqualsBuilder_1_1	311	1	src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java
1419	[PATCH]    addAnswer(answer,    false);	[BUG]    [BUGGY]    addAnswer(answer,    true);    [FE]    java.util.NoSuchElementException    shouldAllowVerifyingInThreads    [CONTEXT]    public    void    addAnswer(Answer    answer)    {    registeredInvocations.removeLast();    [BUGGY]    addAnswer(answer,    true);    }    [CLASS]        InvocationContainerImpl    [METHOD]    addAnswer    [RETURN_TYPE]    void        Answer    answer    [VARIABLES]    Answer    answer    RegisteredInvocations    registeredInvocations    boolean    InvocationMatcher    invocation    invocationForStubbing    invocationMatcher    List    answersForStubbing    MockingProgress    mockingProgress    long    serialVersionUID    LinkedList    stubbed        	mockito_559_InvocationContainerImpl_1_1	46	1	src/org/mockito/internal/stubbing/InvocationContainerImpl.java
1420	[PATCH]    if    (mocks    ==    null    ||    mocks.length    ==    0)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    java.lang.Exception:    Unexpected    exception,    expected<org.mockito.exceptions.misusing.NotAMockException>    but    was<org.mockito.exceptions.base.MockitoException>    shouldValidateMockWhenVerifyingZeroInteractions    [CONTEXT]    private    void    assertMocksNotEmpty(Object[]    mocks)    {    [BUGGY]    if    (true)    {    reporter.mocksHaveToBePassedToVerifyNoMoreInteractions();    }    }    [CLASS]        MockitoCore    [METHOD]    assertMocksNotEmpty    [RETURN_TYPE]    void        Object[]    mocks    [VARIABLES]    boolean    MockingProgress    mockingProgress    MockUtil    mockUtil    Object[]    mocks    Reporter    reporter        	mockito_300_MockitoCore_1_1	114	1	src/org/mockito/internal/MockitoCore.java
1421	[PATCH]    for    (int    i    =    0;    i    <    lhs.length    &&    isEquals;    ++i)    {	[BUG]    [BUGGY]    for    (int    i    =    0;    i    <=    lhs.length    &&    isEquals;    ++i)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    2    testMultiIntArray    [CONTEXT]    return    this;    }    if    (lhs    ==    null    ||    rhs    ==    null)    {    this.setEquals(false);    return    this;    }    if    (lhs.length    !=    rhs.length)    {    this.setEquals(false);    return    this;    }    [BUGGY]    for    (int    i    =    0;    i    <=    lhs.length    &&    isEquals;    ++i)    {    append(lhs[i],    rhs[i]);    }    return    this;    }    [CLASS]        EqualsBuilder    [METHOD]    append    [RETURN_TYPE]    EqualsBuilder        int[]    lhs    int[]    rhs    [VARIABLES]    int[]    lhs    rhs    int    i    boolean    isEquals    lhs    rhs    superEquals    testTransients    useTransients        	mockito_1514_EqualsBuilder_1_1	620	1	src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java
1422	[PATCH]    return    this.wanted    ==    null    &&    other.wanted    ==    null    ||    this.wanted    !=    null    &&    this.wanted.equals(other.wanted);	[BUG]    [BUGGY]    return    false    &&    other.wanted    ==    null    ||    this.wanted    !=    null    &&    this.wanted.equals(other.wanted);    [FE]    junit.framework.AssertionFailedError:    expected:<null>    but    was:<null>    shouldBeEqual    [CONTEXT]    public    boolean    equals(Object    o)    {    if    (o    ==    null    ||    !this.getClass().equals(o.getClass()))    {    return    false;    }    Equals    other    =    (Equals)    o;    [BUGGY]    return    false    &&    other.wanted    ==    null    ||    this.wanted    !=    null    &&    this.wanted.equals(other.wanted);    }    [CLASS]        Equals    1    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    o    [VARIABLES]    Object    actual    o    object    wanted    Equals    other    boolean    long    serialVersionUID        	mockito_1084_Equals_1_1	61	1	src/org/mockito/internal/matchers/Equals.java
1423	[PATCH]    return    elements.get(0);	[BUG]    [BUGGY]    return    elements.get(-1);    [FE]    java.lang.IndexOutOfBoundsException:    Index:    -1,    Size:    1    shouldReturnNullIfNecessary    [CONTEXT]    public    Object    answer(InvocationOnMock    invocation)    throws    Throwable    {    if    (elements.size()    ==    1)    [BUGGY]    return    elements.get(-1);    else    return    elements.poll();    }    [CLASS]        ReturnsElementsOf    [METHOD]    answer    [RETURN_TYPE]    Object        InvocationOnMock    invocation    [VARIABLES]    LinkedList    elements    InvocationOnMock    invocation    boolean        	mockito_2225_ReturnsElementsOf_1_1	41	1	src/org/mockito/stubbing/answers/ReturnsElementsOf.java
1424	[PATCH]    int    last    =    invocations.size()    -    1;	[BUG]    [BUGGY]    int    last    =    invocations.size()    -    -1;    [FE]    java.lang.IndexOutOfBoundsException:    Index:    2,    Size:    1    shouldAllowVerifyingInThreads    [CONTEXT]    public    void    removeLast()    {    [BUGGY]    int    last    =    invocations.size()    -    -1;    invocations.remove(last);    }    [CLASS]        RegisteredInvocations    RemoveToString    [METHOD]    removeLast    [RETURN_TYPE]    void        [VARIABLES]    List    invocations    boolean    long    serialVersionUID    int    last        	mockito_600_RegisteredInvocations_1_1	25	1	src/org/mockito/internal/verification/RegisteredInvocations.java
1425	[PATCH]    for    (int    i    =    0;    i    <    lhs.length    &&    isEquals;    ++i)    {	[BUG]    [BUGGY]    for    (int    i    =    0;    i    <    lhs.length    ==    isEquals;    ++i)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    2    testRaggedArray    [CONTEXT]    return    this;    }    if    (lhs    ==    null    ||    rhs    ==    null)    {    this.setEquals(false);    return    this;    }    if    (lhs.length    !=    rhs.length)    {    this.setEquals(false);    return    this;    }    [BUGGY]    for    (int    i    =    0;    i    <    lhs.length    ==    isEquals;    ++i)    {    append(lhs[i],    rhs[i]);    }    return    this;    }    [CLASS]        EqualsBuilder    [METHOD]    append    [RETURN_TYPE]    EqualsBuilder        long[]    lhs    long[]    rhs    [VARIABLES]    long[]    lhs    rhs    int    i    boolean    isEquals    lhs    rhs    superEquals    testTransients    useTransients        	mockito_1488_EqualsBuilder_1_1	589	1	src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java
1426	[PATCH]    if    (lhs    ==    null    ||    rhs    ==    null)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError    testRaggedArray    [CONTEXT]    public    EqualsBuilder    append(long[]    lhs,    long[]    rhs)    {    if    (isEquals    ==    false)    {    return    this;    }    if    (lhs    ==    rhs)    {    return    this;    }    [BUGGY]    if    (true)    {    this.setEquals(false);    return    this;    }    if    (lhs.length    !=    rhs.length)    {    this.setEquals(false);    return    this;    }    for    (int    i    =    0;    i    <    lhs.length    &&    isEquals;    ++i)    {    append(lhs[i],    rhs[i]);    }    [CLASS]        EqualsBuilder    [METHOD]    append    [RETURN_TYPE]    EqualsBuilder        long[]    lhs    long[]    rhs    [VARIABLES]    long[]    lhs    rhs    int    i    boolean    isEquals    lhs    rhs    superEquals    testTransients    useTransients        	mockito_1475_EqualsBuilder_1_1	581	1	src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java
1427	[PATCH]    if    (className.length()    ==    0)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.ComparisonFailure:    expected:<<[custom    argument    matcher]>>    but    was:<<[]>>    shouldProduceDecentDescription    [CONTEXT]    public    static    String    decamelizeMatcher(String    className)    {    [BUGGY]    if    (false)    {    return       "<custom    argument    matcher>   ";    }    String    decamelized    =    decamelizeClassName(className);    if    (decamelized.length()    ==    0)    {    return       "<   "    +    className    +       ">   ";    }    return       "<   "    +    decamelized    +       ">   ";    [CLASS]        Decamelizer    [METHOD]    decamelizeMatcher    [RETURN_TYPE]    String        String    className    [VARIABLES]    Pattern    CAPS    String    className    decamelized    boolean        	mockito_1942_Decamelizer_1_1	15	1	src/org/mockito/internal/util/Decamelizer.java
1428	[PATCH]    return    wanted    !=    null    &&    object    !=    null    &&    object.getClass()    ==    wanted.getClass();	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError    shouldMatchTypes    [CONTEXT]    public    boolean    typeMatches(Object    object)    {    [BUGGY]    return    false;    }    [CLASS]        Equals    1    [METHOD]    typeMatches    [RETURN_TYPE]    boolean        Object    object    [VARIABLES]    Object    actual    o    object    wanted    long    serialVersionUID    boolean        	mockito_1110_Equals_1_1	77	1	src/org/mockito/internal/matchers/Equals.java
1429	[PATCH]    if    (!isVarArgs    ||    args[args.length    -    1]    !=    null    &&    !args[args.length    -    1].getClass().isArray())    {	[BUG]    [BUGGY]    if    (!isVarArgs    ||    true    &&    !args[args.length    -    1].getClass().isArray())    {    [FE]    java.lang.NullPointerException    shouldVerifyWithNullVarArgArray    [CONTEXT]    private    static    Object[]    expandVarArgs(final    boolean    isVarArgs,    final    Object[]    args)    {    [BUGGY]    if    (!isVarArgs    ||    true    &&    !args[args.length    -    1].getClass().isArray())    {    return    args    ==    null    ?    new    Object[0]    :    args;    }    final    int    nonVarArgsCount    =    args.length    -    1;    Object[]    varArgs;    if    (args[nonVarArgsCount]    ==    null)    {        varArgs    =    new    Object[]    {    null    };    }    else    {    varArgs    =    ArrayEquals.createObjectArray(args[nonVarArgsCount]);    [CLASS]        Invocation    [METHOD]    expandVarArgs    [RETURN_TYPE]    Object[]        final    boolean    isVarArgs    Object[]    args    [VARIABLES]    MockitoMethod    method    mockitoMethod    boolean    isVarArgs    verified    Object    mock    RealMethod    realMethod    long    serialVersionUID    int    MAX_LINE_LENGTH    nonVarArgsCount    sequenceNumber    varArgsCount    Object[]    args    arguments    newArgs    rawArguments    varArgs    Location    location    StubInfo    stubInfo        	mockito_69_Invocation_1_1	65	1	src/org/mockito/internal/invocation/Invocation.java
1430	[PATCH]    if    (!invocation.isValidException(throwable))    {	[BUG]    [BUGGY]    if    (!true)    {    [FE]    junit.framework.AssertionFailedError    shouldValidateThrowableForVoidMethod    [CONTEXT]    private    void    validateException(ThrowsException    answer,    Invocation    invocation)    {    Throwable    throwable    =    answer.getThrowable();    if    (throwable    ==    null)    {    reporter.cannotStubWithNullThrowable();    }    if    (throwable    instanceof    RuntimeException    ||    throwable    instanceof    Error)    {    return;    }        [BUGGY]    if    (!true)    {    reporter.checkedExceptionInvalid(throwable);    }    }    [CLASS]        AnswersValidator    [METHOD]    validateException    [RETURN_TYPE]    void        ThrowsException    answer    Invocation    invocation    [VARIABLES]    Throwable    throwable    boolean    Invocation    invocation    ThrowsException    answer    Reporter    reporter        	mockito_1863_AnswersValidator_1_1	69	1	src/org/mockito/internal/stubbing/answers/AnswersValidator.java
1431	[PATCH]    if    (lhs    instanceof    java.math.BigDecimal    &&    rhs    instanceof    java.math.BigDecimal)    {	[BUG]    [BUGGY]    if    (lhs    instanceof    java.math.BigDecimal    ==    rhs    instanceof    java.math.BigDecimal)    {    [FE]    java.lang.ClassCastException:    org.mockito.internal.matchers.apachecommons.EqualsBuilderTest$TestObject    cannot    be    cast    to    java.math.BigDecimal    testObjectArray    [CONTEXT]    }    if    (lhs    ==    rhs)    {    return    this;    }    if    (lhs    ==    null    ||    rhs    ==    null)    {    this.setEquals(false);    return    this;    }    Class    lhsClass    =    lhs.getClass();    if    (!lhsClass.isArray())    {    [BUGGY]    if    (lhs    instanceof    java.math.BigDecimal    ==    rhs    instanceof    java.math.BigDecimal)    {    isEquals    =    (((java.math.BigDecimal)    lhs).compareTo((java.math.BigDecimal)    rhs)    ==    0);    }    else    {        isEquals    =    lhs.equals(rhs);    }    }    else    if    (lhs.getClass()    !=    rhs.getClass())    {        this.setEquals(false);            [CLASS]        EqualsBuilder    [METHOD]    append    [RETURN_TYPE]    EqualsBuilder        Object    lhs    Object    rhs    [VARIABLES]    Object    lhs    rhs    Class    lhsClass    boolean    isEquals    superEquals    testTransients    useTransients        	mockito_1358_EqualsBuilder_1_1	364	1	src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java
1432	[PATCH]    System.arraycopy(rest,    0,    all,    1,    rest.length);	[BUG]    [BUGGY]    System.arraycopy(rest,    0,    all,    -1,    rest.length);    [FE]    java.lang.ArrayIndexOutOfBoundsException    shouldAllowVerifyingInThreads    [CONTEXT]    private    Class<?>[]    prepend(Class<?>    first,    Class<?>...    rest)    {    Class<?>[]    all    =    new    Class<?>[rest.length+1];    all[0]    =    first;    [BUGGY]    System.arraycopy(rest,    0,    all,    -1,    rest.length);    return    all;    }    [CLASS]        ClassImposterizer    1    2    3    ClassWithSuperclassToWorkAroundCglibBug    [METHOD]    prepend    [RETURN_TYPE]    Class[]        Class<?>    first    rest    [VARIABLES]    ObjenesisStd    objenesis    Class[]    all    rest    boolean    ClassImposterizer    INSTANCE    Class    first    CallbackFilter    IGNORE_BRIDGE_METHODS    NamingPolicy    NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES        	mockito_766_ClassImposterizer_1_1	119	1	src/org/mockito/internal/creation/jmock/ClassImposterizer.java
1433	[PATCH]    if    (lhs    ==    null    ||    rhs    ==    null)    {	[BUG]    [BUGGY]    if    (lhs    ==    null    ||    false)    {    [FE]    java.lang.NullPointerException    testIntArray    [CONTEXT]    public    EqualsBuilder    append(int[]    lhs,    int[]    rhs)    {    if    (isEquals    ==    false)    {    return    this;    }    if    (lhs    ==    rhs)    {    return    this;    }    [BUGGY]    if    (lhs    ==    null    ||    false)    {    this.setEquals(false);    return    this;    }    if    (lhs.length    !=    rhs.length)    {    this.setEquals(false);    return    this;    }    for    (int    i    =    0;    i    <    lhs.length    &&    isEquals;    ++i)    {    append(lhs[i],    rhs[i]);    }    [CLASS]        EqualsBuilder    [METHOD]    append    [RETURN_TYPE]    EqualsBuilder        int[]    lhs    int[]    rhs    [VARIABLES]    int[]    lhs    rhs    int    i    boolean    isEquals    lhs    rhs    superEquals    testTransients    useTransients        	mockito_1499_EqualsBuilder_1_1	612	1	src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java
1434	[PATCH]    if    (stubbing    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.NullPointerException    shouldResetOngoingStubbingSoThatMoreMeaningfulExceptionsAreRaised    [CONTEXT]    public    IOngoingStubbing    stub()    {    IOngoingStubbing    stubbing    =    mockingProgress.pullOngoingStubbing();    [BUGGY]    if    (false)    {    mockingProgress.reset();    reporter.missingMethodInvocation();    }    return    stubbing;    }    [CLASS]        MockitoCore    [METHOD]    stub    [RETURN_TYPE]    IOngoingStubbing        [VARIABLES]    boolean    IOngoingStubbing    stubbing    MockingProgress    mockingProgress    MockUtil    mockUtil    Reporter    reporter        	mockito_268_MockitoCore_1_1	52	1	src/org/mockito/internal/MockitoCore.java
1435	[PATCH]    if    (lhs    ==    null    ||    rhs    ==    null)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError    testMultiBooleanArray    [CONTEXT]    public    EqualsBuilder    append(boolean[]    lhs,    boolean[]    rhs)    {    if    (isEquals    ==    false)    {    return    this;    }    if    (lhs    ==    rhs)    {    return    this;    }    [BUGGY]    if    (true)    {    this.setEquals(false);    return    this;    }    if    (lhs.length    !=    rhs.length)    {    this.setEquals(false);    return    this;    }    for    (int    i    =    0;    i    <    lhs.length    &&    isEquals;    ++i)    {    append(lhs[i],    rhs[i]);    }    [CLASS]        EqualsBuilder    [METHOD]    append    [RETURN_TYPE]    EqualsBuilder        boolean[]    lhs    boolean[]    rhs    [VARIABLES]    int    i    boolean    isEquals    lhs    rhs    superEquals    testTransients    useTransients    boolean[]    lhs    rhs        	mockito_1671_EqualsBuilder_1_1	798	1	src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java
1436	[PATCH]    printSettings.setMultiline(wanted.toString().contains(   "\n   ")    ||    actual.toString().contains(   "\n   "));	[BUG]    [BUGGY]    printSettings.setMultiline(true);    [FE]    junit.framework.AssertionFailedError:    shouldPrintBothInSingleLineWhenBothAreShort    [CONTEXT]    public    SmartPrinter(PrintingFriendlyInvocation    wanted,    PrintingFriendlyInvocation    actual,    Integer    ...    indexesOfMatchersToBeDescribedWithExtraTypeInfo)    {    PrintSettings    printSettings    =    new    PrintSettings();    [BUGGY]    printSettings.setMultiline(true);    printSettings.setMatchersToBeDescribedWithExtraTypeInfo(indexesOfMatchersToBeDescribedWithExtraTypeInfo);    this.wanted    =    wanted.toString(printSettings);    this.actual    =    actual.toString(printSettings);    }    [CLASS]        SmartPrinter    [METHOD]    <init>    [RETURN_TYPE]    Integer[])        PrintingFriendlyInvocation    wanted    PrintingFriendlyInvocation    actual    indexesOfMatchersToBeDescribedWithExtraTypeInfo    [VARIABLES]    PrintSettings    printSettings    String    actual    wanted    PrintingFriendlyInvocation    actual    wanted    boolean    Integer[]    indexesOfMatchersToBeDescribedWithExtraTypeInfo        	mockito_1779_SmartPrinter_1_1	20	1	src/org/mockito/internal/reporting/SmartPrinter.java
1437	[PATCH]    if    (mock.getClass().getInterfaces().length    ==    2)    {	[BUG]    [BUGGY]    if    (mock.getClass().getInterfaces().length    <=    2)    {    [FE]    junit.framework.ComparisonFailure:    expected:<Mock    for    [DummyClass],    hashCode:    13660797...>    but    was:<Mock    for    [Factory],    hashCode:    13660797...>    shouldProvideMockyImplementationOfToString    [CONTEXT]    public    static    String    classNameForMock(Object    mock)    {    [BUGGY]    if    (mock.getClass().getInterfaces().length    <=    2)    {    return    mock.getClass().getInterfaces()[0].getSimpleName();    }    else    {    return    mock.getClass().getSuperclass().getSimpleName();    }    }    [CLASS]        ClassNameFinder    [METHOD]    classNameForMock    [RETURN_TYPE]    String        Object    mock    [VARIABLES]    boolean    Object    mock        	mockito_709_ClassNameFinder_1_1	10	1	src/org/mockito/internal/creation/ClassNameFinder.java
1438	[PATCH]    if    (!methodNameEquals    ||    !isUnverified    ||    !mockIsTheSame)    {	[BUG]    [BUGGY]    if    ((!methodNameEquals    ||    !isUnverified)    !=    !mockIsTheSame)    {    [FE]    junit.framework.AssertionFailedError    shouldNotBeSimilarToVerifiedInvocation    [CONTEXT]    public    boolean    hasSimilarMethod(Invocation    candidate)    {    String    wantedMethodName    =    getMethod().getName();    String    currentMethodName    =    candidate.getMethod().getName();    final    boolean    methodNameEquals    =    wantedMethodName.equals(currentMethodName);    final    boolean    isUnverified    =    !candidate.isVerified();    final    boolean    mockIsTheSame    =    getInvocation().getMock()    ==    candidate.getMock();    final    boolean    methodEquals    =    hasSameMethod(candidate);        [BUGGY]    if    ((!methodNameEquals    ||    !isUnverified)    !=    !mockIsTheSame)    {    return    false;    }    final    boolean    overloadedButSameArgs    =    !methodEquals    &&    safelyArgumentsMatch(candidate.getArguments());    return    !overloadedButSameArgs;    }    [CLASS]        InvocationMatcher    [METHOD]    hasSimilarMethod    [RETURN_TYPE]    boolean        Invocation    candidate    [VARIABLES]    List    matchers    String    currentMethodName    wantedMethodName    boolean    isUnverified    methodEquals    methodNameEquals    mockIsTheSame    overloadedButSameArgs    Invocation    actual    candidate    invocation    long    serialVersionUID        	mockito_182_InvocationMatcher_1_1	83	1	src/org/mockito/internal/invocation/InvocationMatcher.java
1439	[PATCH]    return    actual    !=    null    &&    ((String)    actual).endsWith(suffix);	[BUG]    [BUGGY]    return    actual    !=    null;    [FE]    junit.framework.ComparisonFailure:    expected:<[1]>    but    was:<[2]>    endsWithMatcher    [CONTEXT]    public    boolean    matches(Object    actual)    {    [BUGGY]    return    actual    !=    null;    }    [CLASS]        EndsWith    [METHOD]    matches    [RETURN_TYPE]    boolean        Object    actual    [VARIABLES]    Object    actual    String    suffix    boolean    long    serialVersionUID        	mockito_1129_EndsWith_1_1	23	1	src/org/mockito/internal/matchers/EndsWith.java
1440	[PATCH]    if    (firstBad    ==    -1)    {	[BUG]    [BUGGY]    if    (firstBad    >=    -1)    {    [FE]    junit.framework.AssertionFailedError:    Expected    methods[2]    to    be    in    the    stack    trace.    expected:<[shouldStackTraceGetFilteredOnUserExceptions]>    but    was:<[CGLIB$getNameButDelegateToMethodThatThrows$2]>    shouldStackTraceGetFilteredOnUserExceptions    [CONTEXT]        List<StackTraceElement>    unfilteredStackTrace    =    Arrays.asList(target);    int    lastBad    =    -1;    int    firstBad    =    -1;    for    (int    i    =    0;    i    <    unfilteredStackTrace.size();    i++)    {    if    (!this.isBad(unfilteredStackTrace.get(i)))    {    continue;    }    lastBad    =    i;    [BUGGY]    if    (firstBad    >=    -1)    {    firstBad    =    i;    }    }    List<StackTraceElement>    top;    if    (keepTop    &&    firstBad    !=    -1)    {    top    =    unfilteredStackTrace.subList(0,    firstBad);    }    else    {    top    =    new    LinkedList<StackTraceElement>();    }    [CLASS]        StackTraceFilter    [METHOD]    filter    [RETURN_TYPE]    StackTraceElement[]        StackTraceElement[]    target    boolean    keepTop    [VARIABLES]    List    bottom    filtered    top    unfilteredStackTrace    boolean    keepTop    long    serialVersionUID    int    firstBad    i    lastBad    StackTraceElement[]    target        	mockito_230_StackTraceFilter_1_1	40	1	src/org/mockito/internal/exceptions/base/StackTraceFilter.java
1441	[PATCH]    return    usedAt    !=    null;	[BUG]    [BUGGY]    return    true;    [FE]    junit.framework.AssertionFailedError:    shouldPrintInvocationsWhenStubbingNotUsed    [CONTEXT]    public    boolean    wasUsed()    {    [BUGGY]    return    true;    }    [CLASS]        StubbedInvocationMatcher    [METHOD]    wasUsed    [RETURN_TYPE]    boolean        [VARIABLES]    PrintableInvocation    usedAt    boolean    Queue    answers    long    serialVersionUID        	mockito_497_StubbedInvocationMatcher_1_1	44	1	src/org/mockito/internal/stubbing/StubbedInvocationMatcher.java
1442	[PATCH]    return    method.getName().equals(   "hashCode   ")    &&    method.getParameterTypes().length    ==    0;	[BUG]    [BUGGY]    return    method.getName().equals(   "hashCode   ")    &&    method.getParameterTypes().length    ==    -1;    [FE]    java.lang.NullPointerException    shouldProvideOwnImplementationOfHashCode    [CONTEXT]    public    boolean    isHashCodeMethod(Method    method)    {    [BUGGY]    return    method.getName().equals(   "hashCode   ")    &&    method.getParameterTypes().length    ==    -1;    }    [CLASS]        ObjectMethodsGuru    [METHOD]    isHashCodeMethod    [RETURN_TYPE]    boolean        Method    method    [VARIABLES]    long    serialVersionUID    Method    method    boolean        	mockito_481_ObjectMethodsGuru_1_1	31	1	src/org/mockito/internal/util/ObjectMethodsGuru.java
1443	[PATCH]    if    (filtered.length    ==    0)    {	[BUG]    [BUGGY]    if    (filtered.length    >=    0)    {    [FE]    junit.framework.AssertionFailedError:    shouldPrintInvocationsWhenStubbingNotUsed    [CONTEXT]    public    Location(StackTraceFilter    filter)    {    StackTraceElement[]    stackTrace    =    Thread.currentThread().getStackTrace();    StackTraceElement[]    filtered    =    filter.filter(stackTrace,    false);    [BUGGY]    if    (filtered.length    >=    0)    {    where    =       "->    at    <<unknown    line>>   ";    }    else    {    where    =       "->    at       "    +    filtered[0].toString();    }    }    [CLASS]        Location    [METHOD]    <init>    [RETURN_TYPE]    StackTraceFilter)        StackTraceFilter    filter    [VARIABLES]    String    where    boolean    StackTraceFilter    filter    long    serialVersionUID    StackTraceElement[]    filtered    stackTrace        	mockito_158_Location_1_1	23	1	src/org/mockito/internal/debugging/Location.java
1444	[PATCH]    if    (isEquals    ==    false)    {	[BUG]    [BUGGY]    if    (isEquals    ==    true)    {    [FE]    junit.framework.AssertionFailedError    testFloatArray    [CONTEXT]    public    EqualsBuilder    append(int    lhs,    int    rhs)    {    [BUGGY]    if    (isEquals    ==    true)    {    return    this;    }    isEquals    =    (lhs    ==    rhs);    return    this;    }    [CLASS]        EqualsBuilder    [METHOD]    append    [RETURN_TYPE]    EqualsBuilder        int    lhs    int    rhs    [VARIABLES]    int    lhs    rhs    boolean    isEquals    superEquals    testTransients    useTransients        	mockito_1389_EqualsBuilder_1_1	426	1	src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java
1445	[PATCH]    if    (lhs    ==    rhs)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError    testReflectionEquals    [CONTEXT]    String[]    excludeFields)    {    [BUGGY]    if    (false)    {    return    true;    }    if    (lhs    ==    null    ||    rhs    ==    null)    {    return    false;    }                    Class    lhsClass    =    lhs.getClass();    [CLASS]        EqualsBuilder    [METHOD]    reflectionEquals    [RETURN_TYPE]    boolean        Object    lhs    Object    rhs    boolean    testTransients    Class    reflectUpToClass    String[]    excludeFields    [VARIABLES]    Object    lhs    rhs    Class    lhsClass    reflectUpToClass    rhsClass    testClass    EqualsBuilder    equalsBuilder    boolean    isEquals    testTransients    String[]    excludeFields    IllegalArgumentException    e        	mockito_1274_EqualsBuilder_1_1	239	1	src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java
1446	[PATCH]    result.addAll(matcherStack.subList(matcherStack.size()    -    count,    matcherStack.size()));	[BUG]    [BUGGY]    result.addAll(matcherStack.subList(matcherStack.size()    %    count,    matcherStack.size()));    [FE]    junit.framework.AssertionFailedError:    expected:<1>    but    was:<2>    nullMatcher    [CONTEXT]    private    List<Matcher>    popLastArgumentMatchers(int    count)    {    assertState(!matcherStack.isEmpty(),       "No    matchers    found.   ");    assertState(matcherStack.size()    >=    count,       "   "    +    count    +       "    matchers    expected,       "    +    matcherStack.size()    +       "    recorded.   ");    List<Matcher>    result    =    new    LinkedList<Matcher>();    [BUGGY]    result.addAll(matcherStack.subList(matcherStack.size()    %    count,    matcherStack.size()));    for    (int    i    =    0;    i    <    count;    i++)    {    matcherStack.pop();    }    return    result;    }    [CLASS]        ArgumentMatcherStorageImpl    [METHOD]    popLastArgumentMatchers    [RETURN_TYPE]    List        int    count    [VARIABLES]    List    result    boolean    int    count    i    Stack    matcherStack        	mockito_1710_ArgumentMatcherStorageImpl_1_1	72	1	src/org/mockito/internal/progress/ArgumentMatcherStorageImpl.java
1447	[PATCH]    isEquals    =    (lhs    ==    rhs);	[BUG]    [BUGGY]    isEquals    =    (false);    [FE]    junit.framework.AssertionFailedError    testMultiBooleanArray    [CONTEXT]    public    EqualsBuilder    append(boolean    lhs,    boolean    rhs)    {    if    (isEquals    ==    false)    {    return    this;    }    [BUGGY]    isEquals    =    (false);    return    this;    }    [CLASS]        EqualsBuilder    [METHOD]    append    [RETURN_TYPE]    EqualsBuilder        boolean    lhs    boolean    rhs    [VARIABLES]    boolean    isEquals    lhs    rhs    superEquals    testTransients    useTransients        	mockito_1433_EqualsBuilder_1_1	529	1	src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java
1448	[PATCH]    if    (!isVarArgs    ||    args[args.length    -    1]    !=    null    &&    !args[args.length    -    1].getClass().isArray())    {	[BUG]    [BUGGY]    if    (!isVarArgs    !=    (args[args.length    -    1]    !=    null    &&    !args[args.length    -    1].getClass().isArray()))    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    shouldAllowVerifyingInThreads    [CONTEXT]    private    static    Object[]    expandVarArgs(final    boolean    isVarArgs,    final    Object[]    args)    {    [BUGGY]    if    (!isVarArgs    !=    (args[args.length    -    1]    !=    null    &&    !args[args.length    -    1].getClass().isArray()))    {    return    args    ==    null    ?    new    Object[0]    :    args;    }    final    int    nonVarArgsCount    =    args.length    -    1;    Object[]    varArgs;    if    (args[nonVarArgsCount]    ==    null)    {        varArgs    =    new    Object[]    {    null    };    }    else    {    varArgs    =    ArrayEquals.createObjectArray(args[nonVarArgsCount]);    [CLASS]        Invocation    [METHOD]    expandVarArgs    [RETURN_TYPE]    Object[]        final    boolean    isVarArgs    Object[]    args    [VARIABLES]    MockitoMethod    method    mockitoMethod    boolean    isVarArgs    verified    Object    mock    RealMethod    realMethod    long    serialVersionUID    int    MAX_LINE_LENGTH    nonVarArgsCount    sequenceNumber    varArgsCount    Object[]    args    arguments    newArgs    rawArguments    varArgs    Location    location    StubInfo    stubInfo        	mockito_80_Invocation_1_1	65	1	src/org/mockito/internal/invocation/Invocation.java
1449	[PATCH]    for    (int    i    =    0;    i    <    lhs.length    &&    isEquals;    ++i)    {	[BUG]    [BUGGY]    for    (int    i    =    0;    isEquals;    ++i)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    2    testShortArrayHiddenByObject    [CONTEXT]    return    this;    }    if    (lhs    ==    null    ||    rhs    ==    null)    {    this.setEquals(false);    return    this;    }    if    (lhs.length    !=    rhs.length)    {    this.setEquals(false);    return    this;    }    [BUGGY]    for    (int    i    =    0;    isEquals;    ++i)    {    append(lhs[i],    rhs[i]);    }    return    this;    }    [CLASS]        EqualsBuilder    [METHOD]    append    [RETURN_TYPE]    EqualsBuilder        short[]    lhs    short[]    rhs    [VARIABLES]    short[]    lhs    rhs    int    i    boolean    isEquals    lhs    rhs    superEquals    testTransients    useTransients        	mockito_1547_EqualsBuilder_1_1	651	1	src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java
1450	[PATCH]    if    (!isVarArgs    ||    args[args.length    -    1]    !=    null    &&    !args[args.length    -    1].getClass().isArray())    {	[BUG]    [BUGGY]    if    (!isVarArgs    ||    args[args.length    -    1]    !=    null    &&    !args[args.length    -    -1].getClass().isArray())    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    3    shouldMatchAnyVarargEvenIfOneOfTheArgsIsNull    [CONTEXT]    private    static    Object[]    expandVarArgs(final    boolean    isVarArgs,    final    Object[]    args)    {    [BUGGY]    if    (!isVarArgs    ||    args[args.length    -    1]    !=    null    &&    !args[args.length    -    -1].getClass().isArray())    {    return    args    ==    null    ?    new    Object[0]    :    args;    }    final    int    nonVarArgsCount    =    args.length    -    1;    Object[]    varArgs;    if    (args[nonVarArgsCount]    ==    null)    {        varArgs    =    new    Object[]    {    null    };    }    else    {    varArgs    =    ArrayEquals.createObjectArray(args[nonVarArgsCount]);    [CLASS]        Invocation    [METHOD]    expandVarArgs    [RETURN_TYPE]    Object[]        final    boolean    isVarArgs    Object[]    args    [VARIABLES]    MockitoMethod    method    mockitoMethod    boolean    isVarArgs    verified    Object    mock    RealMethod    realMethod    long    serialVersionUID    int    MAX_LINE_LENGTH    nonVarArgsCount    sequenceNumber    varArgsCount    Object[]    args    arguments    newArgs    rawArguments    varArgs    Location    location    StubInfo    stubInfo        	mockito_71_Invocation_1_1	65	1	src/org/mockito/internal/invocation/Invocation.java
1451	[PATCH]    if    (unverified    !=    null)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    java.lang.NullPointerException    shouldStubbingNotBeTreatedAsInteraction    [CONTEXT]    public    void    verify(VerificationData    data)    {    Invocation    unverified    =    new    InvocationsFinder().findFirstUnverified(data.getAllInvocations());        [BUGGY]    if    (true)    {    new    Reporter().noMoreInteractionsWanted(unverified);    }    }    [CLASS]        NoMoreInteractions    [METHOD]    verify    [RETURN_TYPE]    void        VerificationData    data    [VARIABLES]    boolean    Invocation    unverified    VerificationData    data        	mockito_2042_NoMoreInteractions_1_1	22	1	src/org/mockito/internal/verification/NoMoreInteractions.java
1452	[PATCH]    }        else    if    (type.isArray())    {	[BUG]    [BUGGY]    }    else    if    (true)    {    [FE]    java.lang.NullPointerException    shouldReturnAnObjectThatAllowsObjectMethods    [CONTEXT]    Object    returnValueFor(Class<?>    type)    {    if    (type    ==    String.class)    {    return       "   ";    [BUGGY]    }else    if    (true)    {    Class<?>    componenetType    =    type.getComponentType();    return    Array.newInstance(componenetType,    0);    }    return    null;    }    [CLASS]        ReturnsMoreEmptyValues    [METHOD]    returnValueFor    [RETURN_TYPE]    Object        Class<?>    type    [VARIABLES]    Answer    delegate    Class    componenetType    type    boolean    long    serialVersionUID        	mockito_1916_ReturnsMoreEmptyValues_1_1	65	1	src/org/mockito/internal/stubbing/defaultanswers/ReturnsMoreEmptyValues.java
1453	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError    shouldKnowIfObjectsAreEqual    [CONTEXT]    static    boolean    areArrayElementsEqual(Object    o1,    Object    o2)    {    for    (int    i    =    0;    i    <    Array.getLength(o1);    i++)    {    if    (!areEqual(Array.get(o1,    i),    Array.get(o2,    i)))    return    false;    }    [BUGGY]    return    false;    }    [CLASS]        Equality    [METHOD]    areArrayElementsEqual    [RETURN_TYPE]    boolean        Object    o1    Object    o2    [VARIABLES]    boolean    Object    o1    o2    int    i        	mockito_1165_Equality_1_1	35	1	src/org/mockito/internal/matchers/Equality.java
1454	[PATCH]    if    (lhs    ==    rhs)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError    testFloatArray    [CONTEXT]    public    EqualsBuilder    append(float[]    lhs,    float[]    rhs)    {    if    (isEquals    ==    false)    {    return    this;    }    [BUGGY]    if    (false)    {    return    this;    }    if    (lhs    ==    null    ||    rhs    ==    null)    {    this.setEquals(false);    return    this;    }    if    (lhs.length    !=    rhs.length)    {    this.setEquals(false);    return    this;    }    [CLASS]        EqualsBuilder    [METHOD]    append    [RETURN_TYPE]    EqualsBuilder        float[]    lhs    float[]    rhs    [VARIABLES]    int    i    boolean    isEquals    lhs    rhs    superEquals    testTransients    useTransients    float[]    lhs    rhs        	mockito_1637_EqualsBuilder_1_1	764	1	src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java
1455	[PATCH]    if    (lhs    ==    null    ||    rhs    ==    null)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError    testReflectionEquals    [CONTEXT]    String[]    excludeFields)    {    if    (lhs    ==    rhs)    {    return    true;    }    [BUGGY]    if    (true)    {    return    false;    }                    Class    lhsClass    =    lhs.getClass();    Class    rhsClass    =    rhs.getClass();    Class    testClass;    if    (lhsClass.isInstance(rhs))    {    [CLASS]        EqualsBuilder    [METHOD]    reflectionEquals    [RETURN_TYPE]    boolean        Object    lhs    Object    rhs    boolean    testTransients    Class    reflectUpToClass    String[]    excludeFields    [VARIABLES]    Object    lhs    rhs    Class    lhsClass    reflectUpToClass    rhsClass    testClass    EqualsBuilder    equalsBuilder    boolean    isEquals    testTransients    String[]    excludeFields    IllegalArgumentException    e        	mockito_1281_EqualsBuilder_1_1	242	1	src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java
1456	[PATCH]    for    (int    i    =    0;    i    <    lhs.length    &&    isEquals;    ++i)    {	[BUG]    [BUGGY]    for    (int    i    =    0;    i    <=    lhs.length    &&    isEquals;    ++i)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    2    testByteArrayHiddenByObject    [CONTEXT]    return    this;    }    if    (lhs    ==    null    ||    rhs    ==    null)    {    this.setEquals(false);    return    this;    }    if    (lhs.length    !=    rhs.length)    {    this.setEquals(false);    return    this;    }    [BUGGY]    for    (int    i    =    0;    i    <=    lhs.length    &&    isEquals;    ++i)    {    append(lhs[i],    rhs[i]);    }    return    this;    }    [CLASS]        EqualsBuilder    [METHOD]    append    [RETURN_TYPE]    EqualsBuilder        byte[]    lhs    byte[]    rhs    [VARIABLES]    byte[]    lhs    rhs    int    i    boolean    isEquals    lhs    rhs    superEquals    testTransients    useTransients        	mockito_1598_EqualsBuilder_1_1	713	1	src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java
1457	[PATCH]    if    (lhs    ==    rhs)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError    testShortArray    [CONTEXT]    public    EqualsBuilder    append(short[]    lhs,    short[]    rhs)    {    if    (isEquals    ==    false)    {    return    this;    }    [BUGGY]    if    (false)    {    return    this;    }    if    (lhs    ==    null    ||    rhs    ==    null)    {    this.setEquals(false);    return    this;    }    if    (lhs.length    !=    rhs.length)    {    this.setEquals(false);    return    this;    }    [CLASS]        EqualsBuilder    [METHOD]    append    [RETURN_TYPE]    EqualsBuilder        short[]    lhs    short[]    rhs    [VARIABLES]    short[]    lhs    rhs    int    i    boolean    isEquals    lhs    rhs    superEquals    testTransients    useTransients        	mockito_1525_EqualsBuilder_1_1	640	1	src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java
1458	[PATCH]    if    (!isVarArgs    ||    args[args.length    -    1]    !=    null    &&    !args[args.length    -    1].getClass().isArray())    {	[BUG]    [BUGGY]    if    (!isVarArgs    ||    args[args.length    -    0]    !=    null    &&    !args[args.length    -    1].getClass().isArray())    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    2    shouldMatchAnyVarargEvenIfOneOfTheArgsIsNull    [CONTEXT]    private    static    Object[]    expandVarArgs(final    boolean    isVarArgs,    final    Object[]    args)    {    [BUGGY]    if    (!isVarArgs    ||    args[args.length    -    0]    !=    null    &&    !args[args.length    -    1].getClass().isArray())    {    return    args    ==    null    ?    new    Object[0]    :    args;    }    final    int    nonVarArgsCount    =    args.length    -    1;    Object[]    varArgs;    if    (args[nonVarArgsCount]    ==    null)    {        varArgs    =    new    Object[]    {    null    };    }    else    {    varArgs    =    ArrayEquals.createObjectArray(args[nonVarArgsCount]);    [CLASS]        Invocation    [METHOD]    expandVarArgs    [RETURN_TYPE]    Object[]        final    boolean    isVarArgs    Object[]    args    [VARIABLES]    MockitoMethod    method    mockitoMethod    boolean    isVarArgs    verified    Object    mock    RealMethod    realMethod    long    serialVersionUID    int    MAX_LINE_LENGTH    nonVarArgsCount    sequenceNumber    varArgsCount    Object[]    args    arguments    newArgs    rawArguments    varArgs    Location    location    StubInfo    stubInfo        	mockito_63_Invocation_1_1	65	1	src/org/mockito/internal/invocation/Invocation.java
1459	[PATCH]    if    (isPrimitiveWrapper(clazz))    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError    shouldNotReturnNullForPrimitives    [CONTEXT]    public    <T>    T    returnFor(Class<T>    clazz)    {    [BUGGY]    if    (true)    {    return    primitiveWrapperOf(clazz);    }    return    primitiveValueOrNullFor(clazz);    }    [CLASS]        HandyReturnValues    [METHOD]    returnFor    [RETURN_TYPE]    <T>        Class<T>    clazz    [VARIABLES]    boolean    Class    clazz        	mockito_61_HandyReturnValues_1_1	40	1	src/org/mockito/internal/progress/HandyReturnValues.java
1460	[PATCH]    for    (int    i    =    0;    i    <    Array.getLength(o1);    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    0;    i    <=    Array.getLength(o1);    i++)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException    shouldKnowIfObjectsAreEqual    [CONTEXT]    static    boolean    areArrayElementsEqual(Object    o1,    Object    o2)    {    [BUGGY]    for    (int    i    =    0;    i    <=    Array.getLength(o1);    i++)    {    if    (!areEqual(Array.get(o1,    i),    Array.get(o2,    i)))    return    false;    }    return    true;    }    [CLASS]        Equality    [METHOD]    areArrayElementsEqual    [RETURN_TYPE]    boolean        Object    o1    Object    o2    [VARIABLES]    boolean    Object    o1    o2    int    i        	mockito_1160_Equality_1_1	32	1	src/org/mockito/internal/matchers/Equality.java
1461	[PATCH]    if    (!invocation.isVoid())    {	[BUG]    [BUGGY]    if    (!true)    {    [FE]    junit.framework.AssertionFailedError:    Expected    exception:    org.mockito.exceptions.base.MockitoException    shouldFailWhenNonVoidMethodDoesNothing    [CONTEXT]    private    void    validateDoNothing(DoesNothing    answer,    Invocation    invocation)    {    [BUGGY]    if    (!true)    {    reporter.onlyVoidMethodsCanBeSetToDoNothing();    }    }    [CLASS]        AnswersValidator    [METHOD]    validateDoNothing    [RETURN_TYPE]    void        DoesNothing    answer    Invocation    invocation    [VARIABLES]    boolean    Invocation    invocation    DoesNothing    answer    Reporter    reporter        	mockito_1841_AnswersValidator_1_1	40	1	src/org/mockito/internal/stubbing/answers/AnswersValidator.java
1462	[PATCH]    }    else    if    (wantedCount    <    actualCount)    {	[BUG]    [BUGGY]    }    else    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    expected    same:<->    at    sun.reflect.NativeMethodAccessorImpl.invoke0(Native    Method)>    was    not:<null>    shouldReportWithFirstUndesiredInvocationStackTrace    [CONTEXT]    public    void    check(List<Invocation>    invocations,    InvocationMatcher    wanted,    int    wantedCount)    {    List<Invocation>    actualInvocations    =    finder.findInvocations(invocations,    wanted);    int    actualCount    =    actualInvocations.size();    if    (wantedCount    >    actualCount)    {    Location    lastInvocation    =    finder.getLastLocation(actualInvocations);    reporter.tooLittleActualInvocations(new    Discrepancy(wantedCount,    actualCount),    wanted,    lastInvocation);    }    else    if    (wantedCount    ==    0    &&    actualCount    >    0)    {    Location    firstUndesired    =    actualInvocations.get(wantedCount).getLocation();    reporter.neverWantedButInvoked(wanted,    firstUndesired);    [BUGGY]    }    else    if    (false)    {    Location    firstUndesired    =    actualInvocations.get(wantedCount).getLocation();    reporter.tooManyActualInvocations(wantedCount,    actualCount,    wanted,    firstUndesired);    }    invocationMarker.markVerified(actualInvocations,    wanted);    }    [CLASS]        NumberOfInvocationsChecker    [METHOD]    check    [RETURN_TYPE]    void        Invocation>    invocations    InvocationMatcher    wanted    int    wantedCount    [VARIABLES]    boolean    InvocationMarker    invocationMarker    InvocationsFinder    finder    Reporter    reporter    InvocationMatcher    wanted    List    actualInvocations    invocations    int    actualCount    wantedCount    Location    firstUndesired    lastInvocation        	mockito_2192_NumberOfInvocationsChecker_1_1	42	1	src/org/mockito/internal/verification/checkers/NumberOfInvocationsChecker.java
1463	[PATCH]    if    (!wanted.hasSimilarMethod(invocation))    {	[BUG]    [BUGGY]    if    (!false)    {    [FE]    junit.framework.AssertionFailedError:    expected    same:<null>    was    not:<iMethods.differentMethod(   "test   ");>    shouldFindInvocationWithTheSameMethod    [CONTEXT]    public    Invocation    findSimilarInvocation(List<Invocation>    invocations,    InvocationMatcher    wanted)    {    Invocation    firstSimilar    =    null;    for    (Invocation    invocation    :    invocations)    {    [BUGGY]    if    (!false)    {    continue;    }    if    (firstSimilar    ==    null)    {    firstSimilar    =    invocation;    }    if    (wanted.hasSameMethod(invocation))    {    return    invocation;    }    }        [CLASS]        InvocationsFinder    RemoveNotMatching    RemoveUnverifiedInOrder    [METHOD]    findSimilarInvocation    [RETURN_TYPE]    Invocation        Invocation>    invocations    InvocationMatcher    wanted    [VARIABLES]    InvocationMatcher    wanted    List    invocations    boolean    InOrderContext    context    orderingContext    Invocation    firstSimilar    invocation        	mockito_912_InvocationsFinder_1_1	68	1	src/org/mockito/internal/invocation/InvocationsFinder.java
1464	[PATCH]    if    (rawArgs[i]    !=    null    &&    rawArgs[i].getClass().isArray()    &&    i    ==    rawArgs.length-1)    {	[BUG]    [BUGGY]    if    (rawArgs[i]    !=    null    &&    rawArgs[i].getClass().isArray()    &&    i    ==    rawArgs.length    *    1)    {    [FE]    junit.framework.AssertionFailedError    shouldNotAllowAnyObjectMatchEntireVararg    [CONTEXT]    Object[]    rawArgs    =    actual.getRawArguments();    List<Matcher>    matchers    =    invocationMatcher.getMatchers();    if    (rawArgs.length    !=    matchers.size())    {    return    false;    }    for    (int    i    =    0;    i    <    rawArgs.length;    i++)    {    Matcher    m    =    matchers.get(i);        [BUGGY]    if    (rawArgs[i]    !=    null    &&    rawArgs[i].getClass().isArray()    &&    i    ==    rawArgs.length    *    1)    {    Matcher    actualMatcher;        if    (m    instanceof    MatcherDecorator)    {    actualMatcher    =    ((MatcherDecorator)m).getActualMatcher();    }    else    {    actualMatcher    =    m;    }        if    (!(actualMatcher    instanceof    VarargMatcher)    ||    !actualMatcher.matches(rawArgs[i]))    {    return    false;    [CLASS]        ArgumentsComparator    [METHOD]    varArgsMatch    [RETURN_TYPE]    boolean        InvocationMatcher    invocationMatcher    Invocation    actual    [VARIABLES]    boolean    Invocation    actual    Matcher    actualMatcher    m    InvocationMatcher    invocationMatcher    List    matchers    Object[]    rawArgs    int    i        	mockito_880_ArgumentsComparator_1_1	50	1	src/org/mockito/internal/invocation/ArgumentsComparator.java
1465	[PATCH]    return    proxy    ==    args[0];	[BUG]    [BUGGY]    return    proxy    ==    args[-1];    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    shouldAllowVerifyingInThreads    [CONTEXT]    public    Object    intercept(Object    proxy,    Method    method,    Object[]    args,    MethodProxy    methodProxy)    throws    Throwable    {    if    (objectMethodsGuru.isEqualsMethod(method))    {    [BUGGY]    return    proxy    ==    args[-1];    }    else    if    (objectMethodsGuru.isHashCodeMethod(method))    {    return    hashCodeForMock(proxy);    }    MockitoMethodProxy    mockitoMethodProxy    =    createMockitoMethodProxy(methodProxy);    cglibHacker.setMockitoNamingPolicy(mockitoMethodProxy);    MockitoMethod    mockitoMethod    =    createMockitoMethod(method);    FilteredCGLIBProxyRealMethod    realMethod    =    new    FilteredCGLIBProxyRealMethod(mockitoMethodProxy);    [CLASS]        MethodInterceptorFilter    [METHOD]    intercept    [RETURN_TYPE]    Object        Object    proxy    Method    method    Object[]    args    MethodProxy    methodProxy    [VARIABLES]    Invocation    invocation    MockSettingsImpl    mockSettings    Method    method    MockitoMethodProxy    mockitoMethodProxy    MockitoInvocationHandler    handler    long    serialVersionUID    FilteredCGLIBProxyRealMethod    realMethod    MockitoMethod    mockitoMethod    CGLIBHacker    cglibHacker    ObjectMethodsGuru    objectMethodsGuru    boolean    MethodProxy    methodProxy    Object    proxy    Object[]    args        	mockito_418_MethodInterceptorFilter_1_1	35	1	src/org/mockito/internal/creation/MethodInterceptorFilter.java
1466	[PATCH]    if    (wantedCount    >    actualCount)    {	[BUG]    [BUGGY]    if    (wantedCount    !=    actualCount)    {    [FE]    junit.framework.AssertionFailedError:    shouldAllowVerifyingWhenOtherMockCallIsInTheSameLine    [CONTEXT]    public    void    check(List<Invocation>    invocations,    InvocationMatcher    wanted,    int    wantedCount)    {    List<Invocation>    actualInvocations    =    finder.findInvocations(invocations,    wanted);    int    actualCount    =    actualInvocations.size();    [BUGGY]    if    (wantedCount    !=    actualCount)    {    Location    lastInvocation    =    finder.getLastLocation(actualInvocations);    reporter.tooLittleActualInvocations(new    Discrepancy(wantedCount,    actualCount),    wanted,    lastInvocation);    }    else    if    (wantedCount    ==    0    &&    actualCount    >    0)    {    Location    firstUndesired    =    actualInvocations.get(wantedCount).getLocation();    reporter.neverWantedButInvoked(wanted,    firstUndesired);    }    else    if    (wantedCount    <    actualCount)    {    Location    firstUndesired    =    actualInvocations.get(wantedCount).getLocation();    reporter.tooManyActualInvocations(wantedCount,    actualCount,    wanted,    firstUndesired);    }        [CLASS]        NumberOfInvocationsChecker    [METHOD]    check    [RETURN_TYPE]    void        Invocation>    invocations    InvocationMatcher    wanted    int    wantedCount    [VARIABLES]    boolean    InvocationMarker    invocationMarker    InvocationsFinder    finder    Reporter    reporter    InvocationMatcher    wanted    List    actualInvocations    invocations    int    actualCount    wantedCount    Location    firstUndesired    lastInvocation        	mockito_2171_NumberOfInvocationsChecker_1_1	36	1	src/org/mockito/internal/verification/checkers/NumberOfInvocationsChecker.java
1467	[PATCH]    if    (lhs    ==    null    ||    rhs    ==    null)    {	[BUG]    [BUGGY]    if    (lhs    ==    null    ||    false)    {    [FE]    java.lang.NullPointerException    testBooleanArray    [CONTEXT]    public    EqualsBuilder    append(boolean[]    lhs,    boolean[]    rhs)    {    if    (isEquals    ==    false)    {    return    this;    }    if    (lhs    ==    rhs)    {    return    this;    }    [BUGGY]    if    (lhs    ==    null    ||    false)    {    this.setEquals(false);    return    this;    }    if    (lhs.length    !=    rhs.length)    {    this.setEquals(false);    return    this;    }    for    (int    i    =    0;    i    <    lhs.length    &&    isEquals;    ++i)    {    append(lhs[i],    rhs[i]);    }    [CLASS]        EqualsBuilder    [METHOD]    append    [RETURN_TYPE]    EqualsBuilder        boolean[]    lhs    boolean[]    rhs    [VARIABLES]    int    i    boolean    isEquals    lhs    rhs    superEquals    testTransients    useTransients    boolean[]    lhs    rhs        	mockito_1667_EqualsBuilder_1_1	798	1	src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java
1468	[PATCH]    return    method.isBridge()    ?    1    :    0;	[BUG]    [BUGGY]    return    method.isBridge()    ?    0    :    0;    [FE]    junit.framework.AssertionFailedError:    shouldVerifyCorrectlyWhenBridgeMethodCalled    [CONTEXT]    private    static    final    CallbackFilter    IGNORE_BRIDGE_METHODS    =    new    CallbackFilter()    {    public    int    accept(Method    method)    {    [BUGGY]    return    method.isBridge()    ?    0    :    0;    }    };    [CLASS]        ClassImposterizer    1    2    3    ClassWithSuperclassToWorkAroundCglibBug        [VARIABLES]    	mockito_722_ClassImposterizer_1_1	39	1	src/org/mockito/internal/creation/jmock/ClassImposterizer.java
1469	[PATCH]    if(mockCandidates.size()    ==    1)    {	[BUG]    [BUGGY]    if(false)    {    [FE]    junit.framework.AssertionFailedError    shouldInjectMocksIfThereIsNoUserDefinedEngine    [CONTEXT]    private    void    injectMockCandidate(Class<?>    awaitingInjectionClazz,    Set<Object>    mocks,    Object    fieldInstance)    {        for(Field    field    :    awaitingInjectionClazz.getDeclaredFields())    {    List<Object>    mockCandidates    =    selectMockCondidatesOnType(mocks,    field.getType());    if(mockCandidates.size()    >    1)    {    mockCandidates    =    selectMockCandidateOnName(mockCandidates,    field.getName());    }    [BUGGY]    if(false)    {    inject(field,    fieldInstance,    mockCandidates.get(0));    }    else    {        }    }    }    [CLASS]        DefaultInjectionEngine    [METHOD]    injectMockCandidate    [RETURN_TYPE]    void        Class<?>    awaitingInjectionClazz    Object>    mocks    Object    fieldInstance    [VARIABLES]    Field    field    Set    mocks    boolean    MockUtil    mockUtil    Class    awaitingInjectionClazz    Object    fieldInstance    List    mockCandidates        	mockito_644_DefaultInjectionEngine_1_1	61	1	src/org/mockito/internal/configuration/DefaultInjectionEngine.java
1470	[PATCH]    }    else    if    (type    ==    Map.class)    {	[BUG]    [BUGGY]    }    else    if    (false)    {    [FE]    java.lang.NullPointerException    shouldReturnEmptyCollectionsOrNullForNonCollections    [CONTEXT]    }    else    if    (type    ==    TreeSet.class)    {    return    new    TreeSet<Object>();    }    else    if    (type    ==    LinkedHashSet.class)    {    return    new    LinkedHashSet<Object>();    }    else    if    (type    ==    List.class)    {    return    new    LinkedList<Object>();    }    else    if    (type    ==    LinkedList.class)    {    return    new    LinkedList<Object>();    }    else    if    (type    ==    ArrayList.class)    {    return    new    ArrayList<Object>();    [BUGGY]    }    else    if    (false)    {    return    new    HashMap<Object,    Object>();    }    else    if    (type    ==    HashMap.class)    {    return    new    HashMap<Object,    Object>();    }    else    if    (type    ==    SortedMap.class)    {    return    new    TreeMap<Object,    Object>();    }    else    if    (type    ==    TreeMap.class)    {    return    new    TreeMap<Object,    Object>();    }    else    if    (type    ==    LinkedHashMap.class)    {    return    new    LinkedHashMap<Object,    Object>();    }    [CLASS]        ReturnsEmptyValues    [METHOD]    returnValueFor    [RETURN_TYPE]    Object        Class<?>    type    [VARIABLES]    long    serialVersionUID    Class    type    boolean        	mockito_1898_ReturnsEmptyValues_1_1	98	1	src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java
1471	[PATCH]    if    (invocations.isEmpty())    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError:    shouldPrintInvocationsWhenStubbingNotUsed    [CONTEXT]    out    +=    line(   "********************************   ");    for(Invocation    i:invocations)    {    out    +=    line(i.toString());    out    +=    line(   "    invoked:       "    +    i.getLocation());    if    (i.stubInfo()    !=    null)    {    out    +=    line(   "    stubbed:       "    +    i.stubInfo().stubbedAt());    }    }    invocations    =    unusedStubsFinder.find(asList(mocks));    [BUGGY]    if    (true)    {    return    print(out);    }    out    +=    line(   "********************************   ");    out    +=    line(   "***    Unused    stubs    ***   ");    out    +=    line(   "********************************   ");    for(Invocation    i:invocations)    {    out    +=    line(i.toString());    out    +=    line(   "    stubbed:       "    +    i.getLocation());    }    [CLASS]        MockitoDebuggerImpl    [METHOD]    printInvocations    [RETURN_TYPE]    String        mocks    [VARIABLES]    UnusedStubsFinder    unusedStubsFinder    boolean    Invocation    i    List    invocations    AllInvocationsFinder    allInvocationsFinder    String    out    Object[]    mocks        	mockito_814_MockitoDebuggerImpl_1_1	36	1	src/org/mockito/internal/debugging/MockitoDebuggerImpl.java
1472	[PATCH]    return    method.getName().equals(   "equals   ")    &&    method.getParameterTypes().length    ==    1    &&    method.getParameterTypes()[0]    ==    Object.class;	[BUG]    [BUGGY]    return    method.getParameterTypes()[0]    ==    Object.class;    [FE]    java.lang.ArrayIndexOutOfBoundsException:    0    shouldAllowVerifyingInThreads    [CONTEXT]    public    boolean    isEqualsMethod(Method    method)    {    [BUGGY]    return    method.getParameterTypes()[0]    ==    Object.class;    }    [CLASS]        ObjectMethodsGuru    [METHOD]    isEqualsMethod    [RETURN_TYPE]    boolean        Method    method    [VARIABLES]    long    serialVersionUID    Method    method    boolean        	mockito_479_ObjectMethodsGuru_1_1	27	1	src/org/mockito/internal/util/ObjectMethodsGuru.java
1473	[PATCH]    return    result    <=    0;	[BUG]    [BUGGY]    return    result    ==    0;    [FE]    junit.framework.AssertionFailedError:    expected:<true>    but    was:<false>    testLessOrEqual    [CONTEXT]    protected    boolean    matchResult(int    result)    {    [BUGGY]    return    result    ==    0;    }    [CLASS]        LessOrEqual    [METHOD]    matchResult    [RETURN_TYPE]    boolean        int    result    [VARIABLES]    long    serialVersionUID    int    result    boolean        	mockito_1210_LessOrEqual_1_1	24	1	src/org/mockito/internal/matchers/LessOrEqual.java
1474	[PATCH]    return    StringDescription.toString(m).equals(arg    ==    null?       "null   "    :    arg.toString());	[BUG]    [BUGGY]    return    StringDescription.toString(m).equals(false?       "null   "    :    arg.toString());    [FE]    java.lang.NullPointerException    shouldWorkFineWhenGivenArgIsNull    [CONTEXT]    private    boolean    toStringEquals(Matcher    m,    Object    arg)    {    [BUGGY]    return    StringDescription.toString(m).equals(false?       "null   "    :    arg.toString());    }    [CLASS]        ArgumentMatchingTool    [METHOD]    toStringEquals    [RETURN_TYPE]    boolean        Matcher    m    Object    arg    [VARIABLES]    boolean    Matcher    m    Object    arg        	mockito_2143_ArgumentMatchingTool_1_1	48	1	src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java
1475	[PATCH]    if    (alreadyAssigned)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    org.mockito.exceptions.base.MockitoException:    You    cannot    have    more    than    one    Mockito    annotation    on    a    field!    shouldAllowVerifyingInThreads    [CONTEXT]    static    void    throwIfAlreadyAssigned(Field    field,    boolean    alreadyAssigned)    {    [BUGGY]    if    (true)    {    new    Reporter().moreThanOneAnnotationNotAllowed(field.getName());    }    }    [CLASS]        MockitoAnnotations    [METHOD]    throwIfAlreadyAssigned    [RETURN_TYPE]    void        Field    field    boolean    alreadyAssigned    [VARIABLES]    Field    field    boolean    alreadyAssigned        	mockito_512_MockitoAnnotations_1_1	133	1	src/org/mockito/MockitoAnnotations.java
1476	[PATCH]    if    (wantedCount    >    actualCount)    {	[BUG]    [BUGGY]    if    (wantedCount    >=    actualCount)    {    [FE]    junit.framework.AssertionFailedError:    shouldMarkActualInvocationsAsVerified    [CONTEXT]    public    void    check(List<Invocation>    invocations,    InvocationMatcher    wanted,    int    wantedCount)    {    List<Invocation>    actualInvocations    =    finder.findInvocations(invocations,    wanted);    int    actualCount    =    actualInvocations.size();    [BUGGY]    if    (wantedCount    >=    actualCount)    {    Location    lastLocation    =    finder.getLastLocation(actualInvocations);    reporter.tooLittleActualInvocations(new    AtLeastDiscrepancy(wantedCount,    actualCount),    wanted,    lastLocation);    }    invocationMarker.markVerified(actualInvocations,    wanted);    }    [CLASS]        AtLeastXNumberOfInvocationsChecker    [METHOD]    check    [RETURN_TYPE]    void        Invocation>    invocations    InvocationMatcher    wanted    int    wantedCount    [VARIABLES]    boolean    InvocationMarker    invocationMarker    InvocationsFinder    finder    Reporter    reporter    InvocationMatcher    wanted    List    actualInvocations    invocations    int    actualCount    wantedCount    Location    lastLocation        	mockito_2145_AtLeastXNumberOfInvocationsChecker_1_1	26	1	src/org/mockito/internal/verification/checkers/AtLeastXNumberOfInvocationsChecker.java
1477	[PATCH]    if    (invocationContainerImpl.hasAnswersForStubbing())    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    org.mockito.exceptions.misusing.UnfinishedVerificationException:    shouldAllowVerifyingInThreads    [CONTEXT]    public    Object    handle(Invocation    invocation)    throws    Throwable    {    [BUGGY]    if    (true)    {        InvocationMatcher    invocationMatcher    =    matchersBinder.bindMatchers(mockingProgress    .getArgumentMatcherStorage(),    invocation);    invocationContainerImpl.setMethodForStubbing(invocationMatcher);    return    null;    }    VerificationMode    verificationMode    =    mockingProgress.pullVerificationMode();    InvocationMatcher    invocationMatcher    =    matchersBinder.bindMatchers(mockingProgress.getArgumentMatcherStorage(),    invocation);    [CLASS]        MockHandler    [METHOD]    handle    [RETURN_TYPE]    Object        Invocation    invocation    [VARIABLES]    VerificationDataImpl    data    Invocation    invocation    MatchersBinder    matchersBinder    MockSettingsImpl    mockSettings    InvocationMatcher    invocationMatcher    MockingProgress    mockingProgress    long    serialVersionUID    VerificationMode    verificationMode    boolean    InvocationContainerImpl    invocationContainerImpl    StubbedInvocationMatcher    stubbedInvocation    OngoingStubbingImpl    ongoingStubbing    Object    ret        	mockito_542_MockHandler_1_1	59	1	src/org/mockito/internal/MockHandler.java
1478	[PATCH]    }    else    if    (!firstChunk.isEmpty())    {	[BUG]    [BUGGY]    }    else    if    (!false)    {    [FE]    junit.framework.AssertionFailedError:    shouldPersistRecalculatedArticle    [CONTEXT]    private    List<Invocation>    getFirstMatchingChunk(InvocationMatcher    wanted,    List<Invocation>    unverified)    {    List<Invocation>    firstChunk    =    new    LinkedList<Invocation>();    for    (Invocation    invocation    :    unverified)    {    if    (wanted.matches(invocation))    {    firstChunk.add(invocation);    [BUGGY]    }    else    if    (!false)    {    break;    }    }    return    firstChunk;    }    [CLASS]        InvocationsFinder    RemoveNotMatching    RemoveUnverifiedInOrder    [METHOD]    getFirstMatchingChunk    [RETURN_TYPE]    List        InvocationMatcher    wanted    Invocation>    unverified    [VARIABLES]    InvocationMatcher    wanted    List    firstChunk    unverified    boolean    InOrderContext    context    orderingContext    Invocation    invocation        	mockito_910_InvocationsFinder_1_1	58	1	src/org/mockito/internal/invocation/InvocationsFinder.java
1479	[PATCH]    if    (wantedCount    ==    1)    {	[BUG]    [BUGGY]    if    (wantedCount    ==    -1)    {    [FE]    junit.framework.AssertionFailedError:    shouldPrintVerificationInOrderErrorAndShowBothWantedAndPrevious    [CONTEXT]    public    void    verifyInOrder(VerificationDataInOrder    data)    {    List<Invocation>    allInvocations    =    data.getAllInvocations();    InvocationMatcher    wanted    =    data.getWanted();    MissingInvocationInOrderChecker    missingInvocation    =    new    MissingInvocationInOrderChecker();    AtLeastXNumberOfInvocationsInOrderChecker    numberOfCalls    =    new    AtLeastXNumberOfInvocationsInOrderChecker(data.getOrderingContext());        [BUGGY]    if    (wantedCount    ==    -1)    {    missingInvocation.check(allInvocations,    wanted,    this,    data.getOrderingContext());    }    numberOfCalls.check(allInvocations,    wanted,    wantedCount);    }    [CLASS]        AtLeast    [METHOD]    verifyInOrder    [RETURN_TYPE]    void        VerificationDataInOrder    data    [VARIABLES]    boolean    VerificationDataInOrder    data    InvocationMatcher    wanted    List    allInvocations    AtLeastXNumberOfInvocationsInOrderChecker    numberOfCalls    int    wantedCount    wantedNumberOfInvocations    MissingInvocationInOrderChecker    missingInvocation        	mockito_2023_AtLeast_1_1	49	1	src/org/mockito/internal/verification/AtLeast.java
1480	[PATCH]    if    (!mockUtil.isMock(mock))    {	[BUG]    [BUGGY]    if    (!false)    {    [FE]    org.mockito.exceptions.misusing.NotAMockException:    shouldContinueEvenIfThereAreProblemsCopyingSingleFieldValue    [CONTEXT]    public    <T>    T    when(T    mock)    {    MockUtil    mockUtil    =    new    MockUtil();    if    (mock    ==    null)    {    reporter.nullPassedToWhenMethod();    }    else    {    [BUGGY]    if    (!false)    {    reporter.notAMockPassedToWhenMethod();    }    }    mockUtil.getMockHandler(mock).setAnswersForStubbing(answers);    return    mock;    }    [CLASS]        StubberImpl    [METHOD]    when    [RETURN_TYPE]    <T>        T    mock    [VARIABLES]    List    answers    boolean    T    mock    MockUtil    mockUtil    Reporter    reporter        	mockito_1821_StubberImpl_1_1	30	1	src/org/mockito/internal/stubbing/StubberImpl.java
1481	[PATCH]    if    (!Arrays.equals(parameterTypes,    other.parameterTypes))	[BUG]    [BUGGY]    if    (!false)    [FE]    junit.framework.AssertionFailedError    shouldEqualToNotConsiderSequenceNumber    [CONTEXT]    if    (declaringClass    ==    null)    {    if    (other.declaringClass    !=    null)    return    false;    }    else    if    (!declaringClass.equals(other.declaringClass))    return    false;    if    (methodName    ==    null)    {    if    (other.methodName    !=    null)    return    false;    }    else    if    (!methodName.equals(other.methodName))    return    false;    [BUGGY]    if    (!false)    return    false;    if    (returnType    ==    null)    {    if    (other.returnType    !=    null)    return    false;    }    else    if    (!returnType.equals(other.returnType))    return    false;    return    true;    }    [CLASS]        SerializableMethod    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    Class[]    exceptionTypes    parameterTypes    boolean    isVarArgs    SerializableMethod    other    Class    declaringClass    returnType    Object    obj    String    message    methodName    long    serialVersionUID        	mockito_973_SerializableMethod_1_1	93	1	src/org/mockito/internal/invocation/SerializableMethod.java
1482	[PATCH]    if    (wantedCount    >    actualCount)    {	[BUG]    [BUGGY]    if    (wantedCount    !=    actualCount)    {    [FE]    junit.framework.AssertionFailedError:    shouldPointToFirstMethodBecauseOfTooManyActualInvocations    [CONTEXT]    public    void    check(List<Invocation>    invocations,    InvocationMatcher    wanted,    int    wantedCount,    InOrderContext    context)    {    List<Invocation>    chunk    =    finder.findMatchingChunk(invocations,    wanted,    wantedCount,    context);    int    actualCount    =    chunk.size();        [BUGGY]    if    (wantedCount    !=    actualCount)    {    Location    lastInvocation    =    finder.getLastLocation(chunk);    reporter.tooLittleActualInvocationsInOrder(new    Discrepancy(wantedCount,    actualCount),    wanted,    lastInvocation);    }    else    if    (wantedCount    <    actualCount)    {    Location    firstUndesired    =    chunk.get(wantedCount).getLocation();    reporter.tooManyActualInvocationsInOrder(wantedCount,    actualCount,    wanted,    firstUndesired);    }    invocationMarker.markVerifiedInOrder(chunk,    wanted,    context);    }    [CLASS]        NumberOfInvocationsInOrderChecker    [METHOD]    check    [RETURN_TYPE]    void        Invocation>    invocations    InvocationMatcher    wanted    int    wantedCount    InOrderContext    context    [VARIABLES]    boolean    InvocationMarker    invocationMarker    InvocationsFinder    finder    Reporter    reporter    InvocationMatcher    wanted    List    chunk    invocations    InOrderContext    context    int    actualCount    wantedCount    Location    firstUndesired    lastInvocation        	mockito_2195_NumberOfInvocationsInOrderChecker_1_1	38	1	src/org/mockito/internal/verification/checkers/NumberOfInvocationsInOrderChecker.java
1483	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    Argument(s)    are    different!    Wanted:    shouldAllowVerifyingInThreads    [CONTEXT]    public    boolean    argumentsMatch(InvocationMatcher    invocationMatcher,    Object[]    actualArgs)    {    if    (actualArgs.length    !=    invocationMatcher.getMatchers().size())    {    return    false;    }    for    (int    i    =    0;    i    <    actualArgs.length;    i++)    {    if    (!invocationMatcher.getMatchers().get(i).matches(actualArgs[i]))    {    return    false;    }    }    [BUGGY]    return    false;    }    [CLASS]        ArgumentsComparator    [METHOD]    argumentsMatch    [RETURN_TYPE]    boolean        InvocationMatcher    invocationMatcher    Object[]    actualArgs    [VARIABLES]    boolean    InvocationMatcher    invocationMatcher    Object[]    actualArgs    int    i        	mockito_859_ArgumentsComparator_1_1	29	1	src/org/mockito/internal/invocation/ArgumentsComparator.java
1484	[PATCH]    Class[]    out    =    new    Class[length    +1];	[BUG]    [BUGGY]    Class[]    out    =    new    Class[length    +-1];    [FE]    java.lang.NegativeArraySizeException    shouldConcatenateItemToAnEmptyArray    [CONTEXT]    public    Class<?>[]    concat(Class<?>[]    interfaces,    Class<?>    clazz)    {    int    length    =    interfaces.length;    [BUGGY]    Class[]    out    =    new    Class[length    +-1];    System.arraycopy(interfaces,    0,    out,    0,    length);    out[length]    =    clazz;    return    out;    }    [CLASS]        ArrayUtils    [METHOD]    concat    [RETURN_TYPE]    Class[]        Class<?>[]    interfaces    Class<?>    clazz    [VARIABLES]    Class[]    interfaces    out    boolean    Class    clazz    int    length        	mockito_1926_ArrayUtils_1_1	11	1	src/org/mockito/internal/util/ArrayUtils.java
1485	[PATCH]    if    (lhs    ==    null    ||    rhs    ==    null)    {	[BUG]    [BUGGY]    if    (lhs    ==    null    ||    false)    {    [FE]    java.lang.NullPointerException    testObjectArray    [CONTEXT]    public    EqualsBuilder    append(Object[]    lhs,    Object[]    rhs)    {    if    (isEquals    ==    false)    {    return    this;    }    if    (lhs    ==    rhs)    {    return    this;    }    [BUGGY]    if    (lhs    ==    null    ||    false)    {    this.setEquals(false);    return    this;    }    if    (lhs.length    !=    rhs.length)    {    this.setEquals(false);    return    this;    }    for    (int    i    =    0;    i    <    lhs.length    &&    isEquals;    ++i)    {    append(lhs[i],    rhs[i]);    }    [CLASS]        EqualsBuilder    [METHOD]    append    [RETURN_TYPE]    EqualsBuilder        Object[]    lhs    Object[]    rhs    [VARIABLES]    Object[]    lhs    rhs    int    i    boolean    isEquals    lhs    rhs    superEquals    testTransients    useTransients        	mockito_1443_EqualsBuilder_1_1	550	1	src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java
1486	[PATCH]    if    (wantedCount    >    actualCount)    {	[BUG]    [BUGGY]    if    (wantedCount    >=    actualCount)    {    [FE]    junit.framework.AssertionFailedError:    shouldVerifyInOrderWhenMultipleThreadsInteractWithMock    [CONTEXT]    public    void    check(List<Invocation>    invocations,    InvocationMatcher    wanted,    int    wantedCount,    InOrderContext    context)    {    List<Invocation>    chunk    =    finder.findMatchingChunk(invocations,    wanted,    wantedCount,    context);    int    actualCount    =    chunk.size();        [BUGGY]    if    (wantedCount    >=    actualCount)    {    Location    lastInvocation    =    finder.getLastLocation(chunk);    reporter.tooLittleActualInvocationsInOrder(new    Discrepancy(wantedCount,    actualCount),    wanted,    lastInvocation);    }    else    if    (wantedCount    <    actualCount)    {    Location    firstUndesired    =    chunk.get(wantedCount).getLocation();    reporter.tooManyActualInvocationsInOrder(wantedCount,    actualCount,    wanted,    firstUndesired);    }    invocationMarker.markVerifiedInOrder(chunk,    wanted,    context);    }    [CLASS]        NumberOfInvocationsInOrderChecker    [METHOD]    check    [RETURN_TYPE]    void        Invocation>    invocations    InvocationMatcher    wanted    int    wantedCount    InOrderContext    context    [VARIABLES]    boolean    InvocationMarker    invocationMarker    InvocationsFinder    finder    Reporter    reporter    InvocationMatcher    wanted    List    chunk    invocations    InOrderContext    context    int    actualCount    wantedCount    Location    firstUndesired    lastInvocation        	mockito_2196_NumberOfInvocationsInOrderChecker_1_1	38	1	src/org/mockito/internal/verification/checkers/NumberOfInvocationsInOrderChecker.java
1487	[PATCH]    System.arraycopy(varArgs,    0,    newArgs,    nonVarArgsCount,    varArgsCount);	[BUG]    [BUGGY]    System.arraycopy(varArgs,    1,    newArgs,    nonVarArgsCount,    varArgsCount);    [FE]    java.lang.ArrayIndexOutOfBoundsException    shouldMatchAnyVarargEvenIfOneOfTheArgsIsNull    [CONTEXT]    Object[]    varArgs;    if    (args[nonVarArgsCount]    ==    null)    {        varArgs    =    new    Object[]    {    null    };    }    else    {    varArgs    =    ArrayEquals.createObjectArray(args[nonVarArgsCount]);    }    final    int    varArgsCount    =    varArgs.length;    Object[]    newArgs    =    new    Object[nonVarArgsCount    +    varArgsCount];    System.arraycopy(args,    0,    newArgs,    0,    nonVarArgsCount);    [BUGGY]    System.arraycopy(varArgs,    1,    newArgs,    nonVarArgsCount,    varArgsCount);    return    newArgs;    }    [CLASS]        Invocation    [METHOD]    expandVarArgs    [RETURN_TYPE]    Object[]        final    boolean    isVarArgs    Object[]    args    [VARIABLES]    MockitoMethod    method    mockitoMethod    boolean    isVarArgs    verified    Object    mock    RealMethod    realMethod    long    serialVersionUID    int    MAX_LINE_LENGTH    nonVarArgsCount    sequenceNumber    varArgsCount    Object[]    args    arguments    newArgs    rawArguments    varArgs    Location    location    StubInfo    stubInfo        	mockito_103_Invocation_1_1	80	1	src/org/mockito/internal/invocation/Invocation.java
1488	[PATCH]    if    (m.isAnnotationPresent(Test.class))    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    java.lang.reflect.InvocationTargetException    shouldSaySomethingMeaningfulWhenNoTestMethods    [CONTEXT]    public    boolean    hasTestMethods(Class<?>    klass)    {    Method[]    methods    =    klass.getMethods();    for(Method    m:methods)    {    [BUGGY]    if    (true)    {    return    true;    }    }    return    false;    }    [CLASS]        TestMethodsFinder    [METHOD]    hasTestMethods    [RETURN_TYPE]    boolean        Class<?>    klass    [VARIABLES]    boolean    Class    klass    Method    m    Method[]    methods        	mockito_1805_TestMethodsFinder_1_1	15	1	src/org/mockito/internal/runners/util/TestMethodsFinder.java
1489	[PATCH]    return    actual    !=    null    &&    ((String)    actual).startsWith(prefix);	[BUG]    [BUGGY]    return    actual    !=    null;    [FE]    junit.framework.ComparisonFailure:    expected:<[1]>    but    was:<[2]>    startsWithMatcher    [CONTEXT]    public    boolean    matches(Object    actual)    {    [BUGGY]    return    actual    !=    null;    }    [CLASS]        StartsWith    [METHOD]    matches    [RETURN_TYPE]    boolean        Object    actual    [VARIABLES]    Object    actual    String    prefix    boolean    long    serialVersionUID        	mockito_1268_StartsWith_1_1	23	1	src/org/mockito/internal/matchers/StartsWith.java
1490	[PATCH]    if    (m    instanceof    CapturesArguments    &&    i.getArguments().length    >    k)    {	[BUG]    [BUGGY]    if    (m    instanceof    CapturesArguments    &&    false)    {    [FE]    org.mockito.exceptions.base.MockitoException:    shouldPassCorrectWarningFlag    [CONTEXT]    public    void    captureArgumentsFrom(Invocation    i)    {    int    k    =    0;    for    (Matcher    m    :    matchers)    {    [BUGGY]    if    (m    instanceof    CapturesArguments    &&    false)    {    ((CapturesArguments)    m).captureFrom(i.getArguments()[k]);    }    k++;    }    }    [CLASS]        InvocationMatcher    [METHOD]    captureArgumentsFrom    [RETURN_TYPE]    void        Invocation    i    [VARIABLES]    List    matchers    boolean    Invocation    actual    candidate    i    invocation    Matcher    m    long    serialVersionUID    int    k        	mockito_195_InvocationMatcher_1_1	107	1	src/org/mockito/internal/invocation/InvocationMatcher.java
1491	[PATCH]    if    (o1    ==    null    ||    o2    ==    null)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    Argument(s)    are    different!    Wanted:    shouldAllowVerifyingInThreads    [CONTEXT]    public    static    boolean    areEqual(Object    o1,    Object    o2)    {    [BUGGY]    if    (true)    {    return    o1    ==    null    &&    o2    ==    null;    }    else    if    (isArray(o1))    {    return    isArray(o2)    &&    areArraysEqual(o1,    o2);    }    else    {    return    o1.equals(o2);    }    }    [CLASS]        Equality    [METHOD]    areEqual    [RETURN_TYPE]    boolean        Object    o1    Object    o2    [VARIABLES]    boolean    Object    o1    o2        	mockito_1137_Equality_1_1	13	1	src/org/mockito/internal/matchers/Equality.java
1492	[PATCH]    return    Enhancer.isEnhanced(mock.getClass())    &&    getInterceptor(mock)    !=    null;	[BUG]    [BUGGY]    return    getInterceptor(mock)    !=    null;    [FE]    java.lang.Exception:    Unexpected    exception,    expected<org.mockito.exceptions.misusing.NotAMockException>    but    was<java.lang.ClassCastException>    shouldValidateMockWhenVerifying    [CONTEXT]    private    <T>    boolean    isMockitoMock(T    mock)    {    [BUGGY]    return    getInterceptor(mock)    !=    null;    }    [CLASS]        MockUtil    [METHOD]    isMockitoMock    [RETURN_TYPE]    <T>        T    mock    [VARIABLES]    T    mock    MockCreationValidator    creationValidator    boolean        	mockito_369_MockUtil_1_1	84	1	src/org/mockito/internal/util/MockUtil.java
1493	[PATCH]    return    argumentsMatch(invocationMatcher,    actualArgs)    ||    varArgsMatch(invocationMatcher,    actual);	[BUG]    [BUGGY]    return    argumentsMatch(invocationMatcher,    actualArgs)    !=    varArgsMatch(invocationMatcher,    actual);    [FE]    Argument(s)    are    different!    Wanted:    shouldVerifyWithNullVarArgArray    [CONTEXT]    public    boolean    argumentsMatch(InvocationMatcher    invocationMatcher,    Invocation    actual)    {    Object[]    actualArgs    =    actual.getArguments();    [BUGGY]    return    argumentsMatch(invocationMatcher,    actualArgs)    !=    varArgsMatch(invocationMatcher,    actual);    }    [CLASS]        ArgumentsComparator    [METHOD]    argumentsMatch    [RETURN_TYPE]    boolean        InvocationMatcher    invocationMatcher    Invocation    actual    [VARIABLES]    boolean    Invocation    actual    InvocationMatcher    invocationMatcher    Object[]    actualArgs        	mockito_843_ArgumentsComparator_1_1	17	1	src/org/mockito/internal/invocation/ArgumentsComparator.java
1494	[PATCH]    return    false;	[BUG]    [BUGGY]    return    true;    [FE]    junit.framework.AssertionFailedError    shouldNotMatchWhenSomeOtherArgumentDoesNotMatch    [CONTEXT]    actualMatcher    =    ((MatcherDecorator)m).getActualMatcher();    }    else    {    actualMatcher    =    m;    }        if    (!(actualMatcher    instanceof    VarargMatcher)    ||    !actualMatcher.matches(rawArgs[i]))    {    return    false;    }        }    else    if    (!m.matches(rawArgs[i])){    [BUGGY]    return    true;    }    }    return    true;    }    [CLASS]        ArgumentsComparator    [METHOD]    varArgsMatch    [RETURN_TYPE]    boolean        InvocationMatcher    invocationMatcher    Invocation    actual    [VARIABLES]    boolean    Invocation    actual    Matcher    actualMatcher    m    InvocationMatcher    invocationMatcher    List    matchers    Object[]    rawArgs    int    i        	mockito_897_ArgumentsComparator_1_1	64	1	src/org/mockito/internal/invocation/ArgumentsComparator.java
1495	[PATCH]    if    (wantedCount    >    0)    {	[BUG]    [BUGGY]    if    (wantedCount    >    -1)    {    [FE]    junit.framework.AssertionFailedError:    shouldVerifyInOrderWhenExpectingSomeInvocationsToBeCalledZeroTimes    [CONTEXT]    public    void    verifyInOrder(VerificationDataInOrder    data)    {    List<Invocation>    allInvocations    =    data.getAllInvocations();    InvocationMatcher    wanted    =    data.getWanted();        [BUGGY]    if    (wantedCount    >    -1)    {    MissingInvocationInOrderChecker    missingInvocation    =    new    MissingInvocationInOrderChecker();    missingInvocation.check(allInvocations,    wanted,    this,    data.getOrderingContext());    }    NumberOfInvocationsInOrderChecker    numberOfCalls    =    new    NumberOfInvocationsInOrderChecker();    numberOfCalls.check(allInvocations,    wanted,    wantedCount,    data.getOrderingContext());    }    [CLASS]        Times    [METHOD]    verifyInOrder    [RETURN_TYPE]    void        VerificationDataInOrder    data    [VARIABLES]    boolean    NumberOfInvocationsInOrderChecker    numberOfCalls    VerificationDataInOrder    data    InvocationMatcher    wanted    List    allInvocations    int    wantedCount    wantedNumberOfInvocations    MissingInvocationInOrderChecker    missingInvocation        	mockito_2092_Times_1_1	45	1	src/org/mockito/internal/verification/Times.java
1496	[PATCH]    if    (!invocationMatcher.getMatchers().get(i).matches(actualArgs[i]))    {	[BUG]    [BUGGY]    if    (!false)    {    [FE]    Argument(s)    are    different!    Wanted:    shouldAllowVerifyingInThreads    [CONTEXT]    public    boolean    argumentsMatch(InvocationMatcher    invocationMatcher,    Object[]    actualArgs)    {    if    (actualArgs.length    !=    invocationMatcher.getMatchers().size())    {    return    false;    }    for    (int    i    =    0;    i    <    actualArgs.length;    i++)    {    [BUGGY]    if    (!false)    {    return    false;    }    }    return    true;    }    [CLASS]        ArgumentsComparator    [METHOD]    argumentsMatch    [RETURN_TYPE]    boolean        InvocationMatcher    invocationMatcher    Object[]    actualArgs    [VARIABLES]    boolean    InvocationMatcher    invocationMatcher    Object[]    actualArgs    int    i        	mockito_856_ArgumentsComparator_1_1	25	1	src/org/mockito/internal/invocation/ArgumentsComparator.java
1497	[PATCH]    ancillaryTypes    =    interfaces    ==    null    ?    new    Class<?>[]    {Serializable.class}    :    new    ArrayUtils().concat(interfaces,    Serializable.class);	[BUG]    [BUGGY]    ancillaryTypes    =    false    ?    new    Class<?>[]    {Serializable.class}    :    new    ArrayUtils().concat(interfaces,    Serializable.class);    [FE]    java.lang.NullPointerException    shouldSerializeWithRealObjectSpy    [CONTEXT]    creationValidator.validateMockedType(classToMock,    settings.getSpiedInstance());    settings.initiateMockName(classToMock);    MockHandler<T>    mockHandler    =    new    MockHandler<T>(settings);    MethodInterceptorFilter    filter    =    new    MethodInterceptorFilter(mockHandler,    settings);    Class<?>[]    interfaces    =    settings.getExtraInterfaces();    Class<?>[]    ancillaryTypes;    if    (settings.isSerializable())    {    [BUGGY]    ancillaryTypes    =    false    ?    new    Class<?>[]    {Serializable.class}    :    new    ArrayUtils().concat(interfaces,    Serializable.class);    }    else    {    ancillaryTypes    =    interfaces    ==    null    ?    new    Class<?>[0]    :    interfaces;    }    Object    spiedInstance    =    settings.getSpiedInstance();    T    mock    =    ClassImposterizer.INSTANCE.imposterise(filter,    classToMock,    ancillaryTypes);    if    (spiedInstance    !=    null)    {    new    LenientCopyTool().copyToMock(spiedInstance,    mock);    [CLASS]        MockUtil    [METHOD]    createMock    [RETURN_TYPE]    <T>        Class<T>    classToMock    MockSettingsImpl    settings    [VARIABLES]    Class[]    ancillaryTypes    interfaces    boolean    T    mock    MockCreationValidator    creationValidator    MockSettingsImpl    settings    Class    classToMock    MockHandler    mockHandler    Object    spiedInstance    MethodInterceptorFilter    filter        	mockito_353_MockUtil_1_1	47	1	src/org/mockito/internal/util/MockUtil.java
1498	[PATCH]    if    (invocations.isEmpty())    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError:    expected    same:<->    at    sun.reflect.NativeMethodAccessorImpl.invoke0(Native    Method)>    was    not:<null>    shouldGetLastStackTrace    [CONTEXT]    public    Location    getLastLocation(List<Invocation>    invocations)    {    [BUGGY]    if    (true)    {    return    null;    }    else    {    Invocation    last    =    invocations.get(invocations.size()    -    1);    return    last.getLocation();    }    }    [CLASS]        InvocationsFinder    RemoveNotMatching    RemoveUnverifiedInOrder    [METHOD]    getLastLocation    [RETURN_TYPE]    Location        Invocation>    invocations    [VARIABLES]    InvocationMatcher    wanted    List    invocations    boolean    InOrderContext    context    orderingContext    Invocation    last        	mockito_929_InvocationsFinder_1_1	97	1	src/org/mockito/internal/invocation/InvocationsFinder.java
1499	[PATCH]    return    (fromMockObject    ||    fromOrgMockito)    &&    !isRunner    &&    !isInternalRunner;	[BUG]    [BUGGY]    return    (fromMockObject    ||    fromOrgMockito)    &&    !isRunner;    [FE]    junit.framework.AssertionFailedError:    Number    of    classes    does    not    match.    shouldKeepInternalRunners    [CONTEXT]    public    boolean    isBad(StackTraceElement    e)    {    boolean    fromMockObject    =    e.getClassName().contains(   "$$EnhancerByMockitoWithCGLIB$$   ");    boolean    fromOrgMockito    =    e.getClassName().startsWith(   "org.mockito.   ");    boolean    isRunner    =    e.getClassName().startsWith(   "org.mockito.runners.   ");    boolean    isInternalRunner    =    e.getClassName().startsWith(   "org.mockito.internal.runners.   ");    [BUGGY]    return    (fromMockObject    ||    fromOrgMockito)    &&    !isRunner;    }    [CLASS]        StackTraceFilter    [METHOD]    isBad    [RETURN_TYPE]    boolean        StackTraceElement    e    [VARIABLES]    StackTraceElement    e    long    serialVersionUID    boolean    fromMockObject    fromOrgMockito    isInternalRunner    isRunner        	mockito_213_StackTraceFilter_1_1	21	1	src/org/mockito/internal/exceptions/base/StackTraceFilter.java
1500	[PATCH]    if    (delimiter    ==    encapsulator)    {	[BUG]    [BUGGY]    if    (delimiter    >=    encapsulator)    {    [FE]    java.lang.IllegalArgumentException:    The    encapsulator    character    and    the    delimiter    cannot    be    the    same    (   "   "   ")    testValidation    [CONTEXT]    void    validate()    throws    IllegalArgumentException    {    [BUGGY]    if    (delimiter    >=    encapsulator)    {    throw    new    IllegalArgumentException(   "The    encapsulator    character    and    the    delimiter    cannot    be    the    same    (\   "   "    +    encapsulator    +       "\   ")   ");    }    if    (delimiter    ==    escape)    {    throw    new    IllegalArgumentException(   "The    escape    character    and    the    delimiter    cannot    be    the    same    (\   "   "    +    escape    +       "\   ")   ");    }    if    (delimiter    ==    commentStart)    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    delimiter    cannot    be    the    same    (\   "   "    +    commentStart    +       "\   ")   ");    }    [CLASS]        CSVFormat    [METHOD]    validate    [RETURN_TYPE]    void        [VARIABLES]    char    DISABLED    c    commentStart    delimiter    encapsulator    escape    CSVFormat    DEFAULT    EXCEL    MYSQL    PRISTINE    RFC4180    TDF    boolean    emptyLinesIgnored    surroundingSpacesIgnored    String    CRLF    lineSeparator    String[]    header        	csv_17_CSVFormat_1_1	176	1	src/main/java/org/apache/commons/csv/CSVFormat.java
1501	[PATCH]    &&    (c    <    '0'	[BUG]    [BUGGY]    &&    (c    !=    '0'    [FE]    junit.framework.AssertionFailedError:    expected:<[a],b,c>    but    was:<[   "a   "],b,c>    testFormat    [CONTEXT]            if    (first)    {    quote    =    true;    }    }    else    {    char    c    =    value.charAt(pos);        if    (first    [BUGGY]    &&    (c    !=    '0'    ||    (c    >    '9'    &&    c    <    'A')    ||    (c    >    'Z'    &&    c    <    'a')    ||    (c    >    'z')))    {    quote    =    true;        }    else    if    (c    <=    '#')    {                quote    =    true;    [CLASS]        CSVPrinter    [METHOD]    printAndEncapsulate    [RETURN_TYPE]    void        CharSequence    value    int    offset    int    len    [VARIABLES]    CharSequence    value    char    c    delim    encapsulator    CSVFormat    format    boolean    first    newLine    quote    int    end    len    offset    pos    start    Appendable    out        	csv_569_CSVPrinter_1_1	213	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
1502	[PATCH]    if    (format.getHeader().length    ==    0)    {	[BUG]    [BUGGY]    if    (format.getHeader().length    ==    -1)    {    [FE]    junit.framework.AssertionFailedError:    expected:<a>    but    was:<null>    testHeader    [CONTEXT]    private    Map<String,    Integer>    initializeHeader(CSVFormat    format)    throws    IOException    {    Map<String,    Integer>    hdrMap    =    null;    if    (format.getHeader()    !=    null)    {    hdrMap    =    new    HashMap<String,    Integer>();    String[]    header    =    null;    [BUGGY]    if    (format.getHeader().length    ==    -1)    {        CSVRecord    rec    =    getRecord();    if    (rec    !=    null)    {    header    =    rec.values();    }    }    else    {    header    =    format.getHeader();    }            [CLASS]        CSVParser    1    [METHOD]    initializeHeader    [RETURN_TYPE]    Map        CSVFormat    format    [VARIABLES]    Lexer    lexer    boolean    List    record    records    Token    reusableToken    CSVRecord    current    rec    result    CSVFormat    format    String[]    header    Map    hdrMap    headerMapping    int    i        	csv_409_CSVParser_1_1	175	1	src/main/java/org/apache/commons/csv/CSVParser.java
1503	[PATCH]    return    (c    !=    format.getDelimiter())    &&    Character.isWhitespace((char)    c);	[BUG]    [BUGGY]    return    (c    !=    format.getDelimiter());    [FE]    junit.framework.AssertionFailedError:    Token    content    expected:<[abc]>    but    was:<[]>    testNextToken1    [CONTEXT]    boolean    isWhitespace(int    c)    {    [BUGGY]    return    (c    !=    format.getDelimiter());    }    [CLASS]        Lexer    [METHOD]    isWhitespace    [RETURN_TYPE]    boolean        int    c    [VARIABLES]    char    commmentStart    delimiter    encapsulator    escape    ExtendedBufferedReader    in    CSVFormat    format    boolean    emptyLinesIgnored    isCommentEnabled    isEncapsulating    isEscaping    surroundingSpacesIgnored    int    c        	csv_243_Lexer_1_1	96	1	src/main/java/org/apache/commons/csv/Lexer.java
1504	[PATCH]    return    isEncapsulating    &&    c    ==    encapsulator;	[BUG]    [BUGGY]    return    isEncapsulating    &&    c    >=    encapsulator;    [FE]    java.io.IOException:    (line    0)    invalid    char    between    encapsulated    token    and    delimiter    testNextToken1    [CONTEXT]    boolean    isEncapsulator(int    c)    {    [BUGGY]    return    isEncapsulating    &&    c    >=    encapsulator;    }    [CLASS]        Lexer    [METHOD]    isEncapsulator    [RETURN_TYPE]    boolean        int    c    [VARIABLES]    char    commmentStart    delimiter    encapsulator    escape    ExtendedBufferedReader    in    CSVFormat    format    boolean    emptyLinesIgnored    isCommentEnabled    isEncapsulating    isEscaping    surroundingSpacesIgnored    int    c        	csv_280_Lexer_1_1	132	1	src/main/java/org/apache/commons/csv/Lexer.java
1505	[PATCH]    if    (c    ==    '\r'    ||    c    ==    '\n'    ||    c    ==    delim    ||    c    ==    escape)    {	[BUG]    [BUGGY]    if    (c    ==    '\r'    ||    c    ==    '\n'    ||    c    ==    delim    ||    false)    {    [FE]    junit.framework.AssertionFailedError    testRandom    [CONTEXT]    int    pos    =    offset;    int    end    =    offset    +    len;    printSep();    char    delim    =    format.getDelimiter();    char    escape    =    format.getEscape();    while    (pos    <    end)    {    char    c    =    value.charAt(pos);    [BUGGY]    if    (c    ==    '\r'    ||    c    ==    '\n'    ||    c    ==    delim    ||    false)    {        if    (pos    >    start)    {    out.append(value,    start,    pos);    }    if    (c    ==    '\n')    {    c    =    'n';    }    else    if    (c    ==    '\r')    {    c    =    'r';    }        [CLASS]        CSVPrinter    [METHOD]    printAndEscape    [RETURN_TYPE]    void        CharSequence    value    int    offset    int    len    [VARIABLES]    CharSequence    value    char    c    delim    escape    CSVFormat    format    boolean    newLine    int    end    len    offset    pos    start    Appendable    out        	csv_523_CSVPrinter_1_1	162	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
1506	[PATCH]    return    (c    ==    '\n'    ||    c    ==    '\r');	[BUG]    [BUGGY]    return    (c    ==    '\n'    ||    false);    [FE]    junit.framework.AssertionFailedError:    expected:<1>    but    was:<2>    testGetLineNumberWithCR    [CONTEXT]    boolean    isEndOfLine(int    c)    throws    IOException    {        if    (c    ==    '\r'    &&    in.lookAhead()    ==    '\n')    {        c    =    in.read();    }    [BUGGY]    return    (c    ==    '\n'    ||    false);    }    [CLASS]        Lexer    [METHOD]    isEndOfLine    [RETURN_TYPE]    boolean        int    c    [VARIABLES]    char    commmentStart    delimiter    encapsulator    escape    ExtendedBufferedReader    in    CSVFormat    format    boolean    emptyLinesIgnored    isCommentEnabled    isEncapsulating    isEscaping    surroundingSpacesIgnored    int    c        	csv_261_Lexer_1_1	111	1	src/main/java/org/apache/commons/csv/Lexer.java
1507	[PATCH]    if    (c    ==    '\r'    ||    c    ==    '\n'    ||    c    ==    delim    ||    c    ==    escape)    {	[BUG]    [BUGGY]    if    (c    ==    '\r'    ||    c    ==    '\n'    ||    c    ==    delim    ||    c    >=    escape)    {    [FE]    junit.framework.AssertionFailedError    testRandom    [CONTEXT]    int    pos    =    offset;    int    end    =    offset    +    len;    printSep();    char    delim    =    format.getDelimiter();    char    escape    =    format.getEscape();    while    (pos    <    end)    {    char    c    =    value.charAt(pos);    [BUGGY]    if    (c    ==    '\r'    ||    c    ==    '\n'    ||    c    ==    delim    ||    c    >=    escape)    {        if    (pos    >    start)    {    out.append(value,    start,    pos);    }    if    (c    ==    '\n')    {    c    =    'n';    }    else    if    (c    ==    '\r')    {    c    =    'r';    }        [CLASS]        CSVPrinter    [METHOD]    printAndEscape    [RETURN_TYPE]    void        CharSequence    value    int    offset    int    len    [VARIABLES]    CharSequence    value    char    c    delim    escape    CSVFormat    format    boolean    newLine    int    end    len    offset    pos    start    Appendable    out        	csv_522_CSVPrinter_1_1	162	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
1508	[PATCH]    if    (current    ==    '\r'    ||    (current    ==    '\n'    &&    lastChar    !=    '\r'))    {	[BUG]    [BUGGY]    if    (current    ==    '\r'    ||    (current    ==    '\n'))    {    [FE]    junit.framework.AssertionFailedError:    expected:<1>    but    was:<2>    testGetLineNumberWithCRLF    [CONTEXT]    public    int    read()    throws    IOException    {    int    current    =    super.read();    [BUGGY]    if    (current    ==    '\r'    ||    (current    ==    '\n'))    {    lineCounter++;    }    lastChar    =    current;    return    lastChar;    }    [CLASS]        ExtendedBufferedReader    [METHOD]    read    [RETURN_TYPE]    int        [VARIABLES]    int    END_OF_STREAM    UNDEFINED    current    lastChar    lineCounter    boolean        	csv_306_ExtendedBufferedReader_1_1	58	1	src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java
1509	[PATCH]    }    else    if    (isEndOfFile(c))    {	[BUG]    [BUGGY]    }    else    if    (true)    {    [FE]    junit.framework.AssertionFailedError:    Token    type    expected:<TOKEN>    but    was:<EOF>    testNextToken4    [CONTEXT]        c    =    in.read();    tkn.content.append((char)    c);    }    else    {        while    (true)    {    c    =    in.read();    if    (isDelimiter(c))    {    tkn.type    =    TOKEN;    return    tkn;    [BUGGY]    }    else    if    (true)    {    tkn.type    =    EOF;    tkn.isReady    =    true;    return    tkn;    }    else    if    (isEndOfLine(c))    {        tkn.type    =    EORECORD;    return    tkn;    }    else    if    (!isWhitespace(c))    {        throw    new    IOException(   "(line       "    +    getLineNumber()    +       ")    invalid    char    between    encapsulated    token    and    delimiter   ");    [CLASS]        CSVLexer    [METHOD]    encapsulatedTokenLexer    [RETURN_TYPE]    Token        Token    tkn    int    c    [VARIABLES]    boolean    Token    tkn    int    c    startLineNumber        	csv_199_CSVLexer_1_1	203	1	src/main/java/org/apache/commons/csv/CSVLexer.java
1510	[PATCH]    if    (format.getHeader()    !=    null)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    java.lang.NullPointerException    testDefaultFormat    [CONTEXT]    private    Map<String,    Integer>    initializeHeader(CSVFormat    format)    throws    IOException    {    Map<String,    Integer>    hdrMap    =    null;    [BUGGY]    if    (true)    {    hdrMap    =    new    HashMap<String,    Integer>();    String[]    header    =    null;    if    (format.getHeader().length    ==    0)    {        CSVRecord    rec    =    getRecord();    if    (rec    !=    null)    {    header    =    rec.values();    }    }    else    {    [CLASS]        CSVParser    1    [METHOD]    initializeHeader    [RETURN_TYPE]    Map        CSVFormat    format    [VARIABLES]    Lexer    lexer    boolean    List    record    records    Token    reusableToken    CSVRecord    current    rec    result    CSVFormat    format    String[]    header    Map    hdrMap    headerMapping    int    i        	csv_406_CSVParser_1_1	171	1	src/main/java/org/apache/commons/csv/CSVParser.java
1511	[PATCH]    if    (c    ==    '\r'    &&    in.lookAhead()    ==    '\n')    {	[BUG]    [BUGGY]    if    (c    >=    '\r'    &&    in.lookAhead()    ==    '\n')    {    [FE]    junit.framework.AssertionFailedError:    Token    type    expected:<TOKEN>    but    was:<EORECORD>    testNextToken2    [CONTEXT]    boolean    isEndOfLine(int    c)    throws    IOException    {        [BUGGY]    if    (c    >=    '\r'    &&    in.lookAhead()    ==    '\n')    {        c    =    in.read();    }    return    (c    ==    '\n'    ||    c    ==    '\r');    }    [CLASS]        Lexer    [METHOD]    isEndOfLine    [RETURN_TYPE]    boolean        int    c    [VARIABLES]    char    commmentStart    delimiter    encapsulator    escape    ExtendedBufferedReader    in    CSVFormat    format    boolean    emptyLinesIgnored    isCommentEnabled    isEncapsulating    isEscaping    surroundingSpacesIgnored    int    c        	csv_246_Lexer_1_1	107	1	src/main/java/org/apache/commons/csv/Lexer.java
1512	[PATCH]    &&    (lastChar    ==    '\n'    ||    lastChar    ==    '\r'    ||    lastChar    ==    ExtendedBufferedReader.UNDEFINED)	[BUG]    [BUGGY]    [FE]    junit.framework.AssertionFailedError:    Token    type    expected:<EORECORD>    but    was:<TOKEN>    testNextToken2    [CONTEXT]                    int    c    =    in.read();    boolean    eol    =    isEndOfLine(c);    c    =    in.readAgain();        if    (emptyLinesIgnored)    {    [BUGGY]    while    (eol    &&    !isEndOfFile(lastChar))    {        lastChar    =    c;    c    =    in.read();    eol    =    isEndOfLine(c);    c    =    in.readAgain();        if    (isEndOfFile(c))    {    tkn.type    =    EOF;        [CLASS]        CSVLexer    [METHOD]    nextToken    [RETURN_TYPE]    Token        Token    tkn    [VARIABLES]    boolean    eol    Token    tkn    int    c    lastChar        	csv_115_CSVLexer_1_1	57	1	src/main/java/org/apache/commons/csv/CSVLexer.java
1513	[PATCH]    if    (emptyLinesIgnored)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    Token    type    expected:<EOF>    but    was:<EORECORD>    testNextToken2    [CONTEXT]                        int    c    =    in.read();    boolean    eol    =    isEndOfLine(c);    c    =    in.readAgain();            [BUGGY]    if    (false)    {    while    (eol    &&    (lastChar    ==    '\n'    ||    lastChar    ==    '\r'    ||    lastChar    ==    ExtendedBufferedReader.UNDEFINED)    &&    !isEndOfFile(lastChar))    {        lastChar    =    c;    c    =    in.read();    eol    =    isEndOfLine(c);    c    =    in.readAgain();        if    (isEndOfFile(c))    {    [CLASS]        CSVLexer    [METHOD]    nextToken    [RETURN_TYPE]    Token        Token    tkn    [VARIABLES]    boolean    eol    Token    tkn    int    c    lastChar        	csv_94_CSVLexer_1_1	56	1	src/main/java/org/apache/commons/csv/CSVLexer.java
1514	[PATCH]    out.append(value,    start,    pos    +    1);	[BUG]    [BUGGY]    out.append(value,    start,    pos    /    1);    [FE]    junit.framework.AssertionFailedError:    expected:<a,   "b   "[   "]c   "    testPrinter4    [CONTEXT]    out.append(encapsulator);            while    (pos    <    end)    {    char    c    =    value.charAt(pos);    if    (c    ==    encapsulator)    {                [BUGGY]    out.append(value,    start,    pos    /    1);            start    =    pos;    }    pos++;    }        out.append(value,    start,    pos);    out.append(encapsulator);    [CLASS]        CSVPrinter    [METHOD]    printAndEncapsulate    [RETURN_TYPE]    void        CharSequence    value    int    offset    int    len    [VARIABLES]    CharSequence    value    char    c    delim    encapsulator    CSVFormat    format    boolean    first    newLine    quote    int    end    len    offset    pos    start    Appendable    out        	csv_679_CSVPrinter_1_1	264	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
1515	[PATCH]    lastChar    =    buf[offset    +    len    -    1];	[BUG]    [BUGGY]    lastChar    =    buf[offset    *    len    -    1];    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testReadLookahead2    [CONTEXT]    char    ch    =    buf[i];    if    (ch    ==    '\n')    {    if    ('\r'    !=    (i    >    0    ?    buf[i-1]:    lastChar))    {    lineCounter++;    }    }    else    if    (ch    ==    '\r')    {    lineCounter++;    }    }        [BUGGY]    lastChar    =    buf[offset    *    len    -    1];    }    else    if    (len    ==    -1)    {    lastChar    =    END_OF_STREAM;    }    return    len;    }    [CLASS]        ExtendedBufferedReader    [METHOD]    read    [RETURN_TYPE]    int        char[]    buf    int    offset    int    length    [VARIABLES]    char    ch    boolean    int    END_OF_STREAM    UNDEFINED    current    i    lastChar    len    length    lineCounter    offset    char[]    buf        	csv_356_ExtendedBufferedReader_1_1	100	1	src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java
1516	[PATCH]    start    =    pos    +    1;    //    start    on    the    current    char    after    this    one	[BUG]    [BUGGY]    start    =    pos    +    0;    //    start    on    the    current    char    after    this    one    [FE]    junit.framework.AssertionFailedError    testRandom    [CONTEXT]    }    if    (c    ==    '\n')    {    c    =    'n';    }    else    if    (c    ==    '\r')    {    c    =    'r';    }    out.append(escape);    out.append(c);        [BUGGY]    start    =    pos    +    0;    }    pos++;    }        if    (pos    >    start)    {    out.append(value,    start,    pos);    }    }    [CLASS]        CSVPrinter    [METHOD]    printAndEscape    [RETURN_TYPE]    void        CharSequence    value    int    offset    int    len    [VARIABLES]    CharSequence    value    char    c    delim    escape    CSVFormat    format    boolean    newLine    int    end    len    offset    pos    start    Appendable    out        	csv_542_CSVPrinter_1_1	176	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
1517	[PATCH]    super.mark(1);	[BUG]    [BUGGY]    super.mark(0);    [FE]    java.io.IOException:    Mark    invalid    testNextToken5    [CONTEXT]    int    lookAhead()    throws    IOException    {    [BUGGY]    super.mark(0);    int    c    =    super.read();    super.reset();    return    c;    }    [CLASS]        ExtendedBufferedReader    [METHOD]    lookAhead    [RETURN_TYPE]    int        [VARIABLES]    int    END_OF_STREAM    UNDEFINED    c    current    i    lastChar    len    length    lineCounter    offset    boolean        	csv_387_ExtendedBufferedReader_1_1	146	1	src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java
1518	[PATCH]    while    (pos    <    end)    {	[BUG]    [BUGGY]    while    (pos    <=    end)    {    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    11    testRandom    [CONTEXT]    void    printAndEscape(CharSequence    value,    int    offset,    int    len)    throws    IOException    {    int    start    =    offset;    int    pos    =    offset;    int    end    =    offset    +    len;    printSep();    char    delim    =    format.getDelimiter();    char    escape    =    format.getEscape();        [BUGGY]    while    (pos    <=    end)    {    char    c    =    value.charAt(pos);    if    (c    ==    '\r'    ||    c    ==    '\n'    ||    c    ==    delim    ||    c    ==    escape)    {        if    (pos    >    start)    {    out.append(value,    start,    pos);    }    if    (c    ==    '\n')    {    c    =    'n';    }    else    if    (c    ==    '\r')    {    c    =    'r';    [CLASS]        CSVPrinter    [METHOD]    printAndEscape    [RETURN_TYPE]    void        CharSequence    value    int    offset    int    len    [VARIABLES]    CharSequence    value    char    c    delim    escape    CSVFormat    format    boolean    newLine    int    end    len    offset    pos    start    Appendable    out        	csv_502_CSVPrinter_1_1	160	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
1519	[PATCH]    if    (surroundingSpacesIgnored)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    Token    content    expected:<uv[]>    but    was:<uv[    ]>    testNextToken1    [CONTEXT]    break;    }    else    if    (isEscape(c))    {    tkn.content.append((char)    readEscape(c));    }    else    {    tkn.content.append((char)    c);    }    c    =    in.read();    }        [BUGGY]    if    (false)    {    trimTrailingSpaces(tkn.content);    }    return    tkn;    }    [CLASS]        CSVLexer    [METHOD]    simpleTokenLexer    [RETURN_TYPE]    Token        Token    tkn    int    c    [VARIABLES]    boolean    Token    tkn    int    c        	csv_181_CSVLexer_1_1	161	1	src/main/java/org/apache/commons/csv/CSVLexer.java
1520	[PATCH]    return    c    ==    '\n'    ||    c    ==    '\r';	[BUG]    [BUGGY]    return    c    ==    '\n'    ||    false;    [FE]    junit.framework.AssertionFailedError    testValidation    [CONTEXT]    private    static    boolean    isLineBreak(char    c)    {    [BUGGY]    return    c    ==    '\n'    ||    false;    }    [CLASS]        CSVFormat    [METHOD]    isLineBreak    [RETURN_TYPE]    boolean        char    c    [VARIABLES]    char    DISABLED    c    commentStart    delimiter    encapsulator    escape    CSVFormat    DEFAULT    EXCEL    MYSQL    PRISTINE    RFC4180    TDF    boolean    emptyLinesIgnored    surroundingSpacesIgnored    String    CRLF    lineSeparator    String[]    header        	csv_11_CSVFormat_1_1	169	1	src/main/java/org/apache/commons/csv/CSVFormat.java
1521	[PATCH]    if    (current    ==    '\r'    ||    (current    ==    '\n'    &&    lastChar    !=    '\r'))    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError:    expected:<1>    but    was:<2>    testGetLineNumberWithCR    [CONTEXT]    public    int    read()    throws    IOException    {    int    current    =    super.read();    [BUGGY]    if    (true)    {    lineCounter++;    }    lastChar    =    current;    return    lastChar;    }    [CLASS]        ExtendedBufferedReader    [METHOD]    read    [RETURN_TYPE]    int        [VARIABLES]    int    END_OF_STREAM    UNDEFINED    current    lastChar    lineCounter    boolean        	csv_311_ExtendedBufferedReader_1_1	58	1	src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java
1522	[PATCH]    if    (newLine)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError:    expected:<a[,b,]c>    but    was:<a[b]c>    testFormat    [CONTEXT]    void    printSep()    throws    IOException    {    [BUGGY]    if    (true)    {    newLine    =    false;    }    else    {    out.append(format.getDelimiter());    }    }    [CLASS]        CSVPrinter    [METHOD]    printSep    [RETURN_TYPE]    void        [VARIABLES]    CSVFormat    format    boolean    newLine    Appendable    out        	csv_492_CSVPrinter_1_1	143	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
1523	[PATCH]    return    isEscaping    &&    c    ==    escape;	[BUG]    [BUGGY]    return    isEscaping;    [FE]    junit.framework.AssertionFailedError    testBackslashEscaping2    [CONTEXT]    boolean    isEscape(int    c)    {    [BUGGY]    return    isEscaping;    }    [CLASS]        Lexer    [METHOD]    isEscape    [RETURN_TYPE]    boolean        int    c    [VARIABLES]    char    commmentStart    delimiter    encapsulator    escape    ExtendedBufferedReader    in    CSVFormat    format    boolean    emptyLinesIgnored    isCommentEnabled    isEncapsulating    isEscaping    surroundingSpacesIgnored    int    c        	csv_277_Lexer_1_1	128	1	src/main/java/org/apache/commons/csv/Lexer.java
1524	[PATCH]    while    (length    >    0    &&    Character.isWhitespace(buffer.charAt(length    -    1)))    {	[BUG]    [BUGGY]    while    (length    >    0    &&    Character.isWhitespace(buffer.charAt(length    /    1)))    {    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    3    testNextToken1    [CONTEXT]    void    trimTrailingSpaces(StringBuilder    buffer)    {    int    length    =    buffer.length();    [BUGGY]    while    (length    >    0    &&    Character.isWhitespace(buffer.charAt(length    /    1)))    {    length    =    length    -    1;    }    if    (length    !=    buffer.length())    {    buffer.setLength(length);    }    }    [CLASS]        Lexer    [METHOD]    trimTrailingSpaces    [RETURN_TYPE]    void        StringBuilder    buffer    [VARIABLES]    char    commmentStart    delimiter    encapsulator    escape    ExtendedBufferedReader    in    CSVFormat    format    boolean    emptyLinesIgnored    isCommentEnabled    isEncapsulating    isEscaping    surroundingSpacesIgnored    StringBuilder    buffer    int    length        	csv_222_Lexer_1_1	84	1	src/main/java/org/apache/commons/csv/Lexer.java
1525	[PATCH]    if    (format.isEncapsulating())    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<[   "x,y   "],z>    but    was:<[x,y],z>    testFormat    [CONTEXT]    private    void    print(CharSequence    value,    int    offset,    int    len)    throws    IOException    {    [BUGGY]    if    (false)    {    printAndEncapsulate(value,    offset,    len);    }    else    if    (format.isEscaping())    {    printAndEscape(value,    offset,    len);    }    else    {    printSep();    out.append(value,    offset,    offset    +    len);    }    }    [CLASS]        CSVPrinter    [METHOD]    print    [RETURN_TYPE]    void        CharSequence    value    int    offset    int    len    [VARIABLES]    CharSequence    value    CSVFormat    format    boolean    newLine    int    len    offset    Appendable    out        	csv_479_CSVPrinter_1_1	132	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
1526	[PATCH]    if    (escape    !=    DISABLED    &&    escape    ==    commentStart)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError    testValidation    [CONTEXT]    }    if    (delimiter    ==    commentStart)    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    delimiter    cannot    be    the    same    (\   "   "    +    commentStart    +       "\   ")   ");    }    if    (encapsulator    !=    DISABLED    &&    encapsulator    ==    commentStart)    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    encapsulator    cannot    be    the    same    (\   "   "    +    commentStart    +       "\   ")   ");    }        [BUGGY]    if    (false)    {    throw    new    IllegalArgumentException(   "The    comment    start    and    the    escape    character    cannot    be    the    same    (\   "   "    +    commentStart    +       "\   ")   ");    }    }    [CLASS]        CSVFormat    [METHOD]    validate    [RETURN_TYPE]    void        [VARIABLES]    char    DISABLED    c    commentStart    delimiter    encapsulator    escape    CSVFormat    DEFAULT    EXCEL    MYSQL    PRISTINE    RFC4180    TDF    boolean    emptyLinesIgnored    surroundingSpacesIgnored    String    CRLF    lineSeparator    String[]    header        	csv_42_CSVFormat_1_1	192	1	src/main/java/org/apache/commons/csv/CSVFormat.java
1527	[PATCH]    return    this.commentStart    !=    DISABLED;	[BUG]    [BUGGY]    return    true;    [FE]    junit.framework.AssertionFailedError:    expected:<[]>    but    was:<[￾    This    is    a    comment    testDisabledComment    [CONTEXT]    public    boolean    isCommentingEnabled()    {    [BUGGY]    return    true;    }    [CLASS]        CSVFormat    [METHOD]    isCommentingEnabled    [RETURN_TYPE]    boolean        [VARIABLES]    char    DISABLED    c    commentStart    delimiter    encapsulator    escape    CSVFormat    DEFAULT    EXCEL    MYSQL    PRISTINE    RFC4180    TDF    boolean    emptyLinesIgnored    surroundingSpacesIgnored    String    CRLF    lineSeparator    String[]    header        	csv_56_CSVFormat_1_1	279	1	src/main/java/org/apache/commons/csv/CSVFormat.java
1528	[PATCH]    if    (escape    !=    DISABLED    &&    escape    ==    commentStart)    {	[BUG]    [BUGGY]    if    (true    &&    escape    ==    commentStart)    {    [FE]    java.lang.IllegalArgumentException:    The    comment    start    and    the    escape    character    cannot    be    the    same    (   "￾   ")    testValidation    [CONTEXT]    }    if    (delimiter    ==    commentStart)    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    delimiter    cannot    be    the    same    (\   "   "    +    commentStart    +       "\   ")   ");    }    if    (encapsulator    !=    DISABLED    &&    encapsulator    ==    commentStart)    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    encapsulator    cannot    be    the    same    (\   "   "    +    commentStart    +       "\   ")   ");    }        [BUGGY]    if    (true    &&    escape    ==    commentStart)    {    throw    new    IllegalArgumentException(   "The    comment    start    and    the    escape    character    cannot    be    the    same    (\   "   "    +    commentStart    +       "\   ")   ");    }    }    [CLASS]        CSVFormat    [METHOD]    validate    [RETURN_TYPE]    void        [VARIABLES]    char    DISABLED    c    commentStart    delimiter    encapsulator    escape    CSVFormat    DEFAULT    EXCEL    MYSQL    PRISTINE    RFC4180    TDF    boolean    emptyLinesIgnored    surroundingSpacesIgnored    String    CRLF    lineSeparator    String[]    header        	csv_37_CSVFormat_1_1	192	1	src/main/java/org/apache/commons/csv/CSVFormat.java
1529	[PATCH]    if    (encapsulator    !=    DISABLED    &&    encapsulator    ==    commentStart)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError    testValidation    [CONTEXT]    }    if    (delimiter    ==    escape)    {    throw    new    IllegalArgumentException(   "The    escape    character    and    the    delimiter    cannot    be    the    same    (\   "   "    +    escape    +       "\   ")   ");    }    if    (delimiter    ==    commentStart)    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    delimiter    cannot    be    the    same    (\   "   "    +    commentStart    +       "\   ")   ");    }        [BUGGY]    if    (false)    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    encapsulator    cannot    be    the    same    (\   "   "    +    commentStart    +       "\   ")   ");    }    if    (escape    !=    DISABLED    &&    escape    ==    commentStart)    {    throw    new    IllegalArgumentException(   "The    comment    start    and    the    escape    character    cannot    be    the    same    (\   "   "    +    commentStart    +       "\   ")   ");    }    }    [CLASS]        CSVFormat    [METHOD]    validate    [RETURN_TYPE]    void        [VARIABLES]    char    DISABLED    c    commentStart    delimiter    encapsulator    escape    CSVFormat    DEFAULT    EXCEL    MYSQL    PRISTINE    RFC4180    TDF    boolean    emptyLinesIgnored    surroundingSpacesIgnored    String    CRLF    lineSeparator    String[]    header        	csv_32_CSVFormat_1_1	188	1	src/main/java/org/apache/commons/csv/CSVFormat.java
1530	[PATCH]    if    (!newLine)    {	[BUG]    [BUGGY]    if    (!false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<[]#    This    is    a    comment    testSingleLineComment    [CONTEXT]    public    void    printComment(String    comment)    throws    IOException    {    if    (!format.isCommentingEnabled())    {    return;    }    [BUGGY]    if    (!false)    {    println();    }    out.append(format.getCommentStart());    out.append('    ');    for    (int    i    =    0;    i    <    comment.length();    i++)    {    char    c    =    comment.charAt(i);    switch    (c)    {    case    '\r':    if    (i    +    1    <    comment.length()    &&    comment.charAt(i    +    1)    ==    '\n')    {    i++;    [CLASS]        CSVPrinter    [METHOD]    printComment    [RETURN_TYPE]    void        String    comment    [VARIABLES]    char    c    CSVFormat    format    boolean    newLine    String    comment    int    i    Appendable    out        	csv_441_CSVPrinter_1_1	104	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
1531	[PATCH]    if    (c    ==    '\r'    ||    c    ==    '\n'    ||    c    ==    delim    ||    c    ==    escape)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError    testRandom    [CONTEXT]    int    pos    =    offset;    int    end    =    offset    +    len;    printSep();    char    delim    =    format.getDelimiter();    char    escape    =    format.getEscape();    while    (pos    <    end)    {    char    c    =    value.charAt(pos);    [BUGGY]    if    (true)    {        if    (pos    >    start)    {    out.append(value,    start,    pos);    }    if    (c    ==    '\n')    {    c    =    'n';    }    else    if    (c    ==    '\r')    {    c    =    'r';    }        [CLASS]        CSVPrinter    [METHOD]    printAndEscape    [RETURN_TYPE]    void        CharSequence    value    int    offset    int    len    [VARIABLES]    CharSequence    value    char    c    delim    escape    CSVFormat    format    boolean    newLine    int    end    len    offset    pos    start    Appendable    out        	csv_527_CSVPrinter_1_1	162	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
1532	[PATCH]    if    (delimiter    ==    encapsulator)    {	[BUG]    [BUGGY]    if    (delimiter    <=    encapsulator)    {    [FE]    java.lang.IllegalArgumentException:    The    encapsulator    character    and    the    delimiter    cannot    be    the    same    (   "￾   ")    testValidation    [CONTEXT]    void    validate()    throws    IllegalArgumentException    {    [BUGGY]    if    (delimiter    <=    encapsulator)    {    throw    new    IllegalArgumentException(   "The    encapsulator    character    and    the    delimiter    cannot    be    the    same    (\   "   "    +    encapsulator    +       "\   ")   ");    }    if    (delimiter    ==    escape)    {    throw    new    IllegalArgumentException(   "The    escape    character    and    the    delimiter    cannot    be    the    same    (\   "   "    +    escape    +       "\   ")   ");    }    if    (delimiter    ==    commentStart)    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    delimiter    cannot    be    the    same    (\   "   "    +    commentStart    +       "\   ")   ");    }    [CLASS]        CSVFormat    [METHOD]    validate    [RETURN_TYPE]    void        [VARIABLES]    char    DISABLED    c    commentStart    delimiter    encapsulator    escape    CSVFormat    DEFAULT    EXCEL    MYSQL    PRISTINE    RFC4180    TDF    boolean    emptyLinesIgnored    surroundingSpacesIgnored    String    CRLF    lineSeparator    String[]    header        	csv_16_CSVFormat_1_1	176	1	src/main/java/org/apache/commons/csv/CSVFormat.java
1533	[PATCH]    quote    =    true;	[BUG]    [BUGGY]    quote    =    false;    [FE]    junit.framework.AssertionFailedError    testRandom    [CONTEXT]    &&    (c    <    '0'    ||    (c    >    '9'    &&    c    <    'A')    ||    (c    >    'Z'    &&    c    <    'a')    ||    (c    >    'z')))    {    quote    =    true;        }    else    if    (c    <=    '#')    {                [BUGGY]    quote    =    false;    }    else    {    while    (pos    <    end)    {    c    =    value.charAt(pos);    if    (c    ==    '\n'    ||    c    ==    '\r'    ||    c    ==    encapsulator    ||    c    ==    delim)    {    quote    =    true;    break;    }    pos++;    }        [CLASS]        CSVPrinter    [METHOD]    printAndEncapsulate    [RETURN_TYPE]    void        CharSequence    value    int    offset    int    len    [VARIABLES]    CharSequence    value    char    c    delim    encapsulator    CSVFormat    format    boolean    first    newLine    quote    int    end    len    offset    pos    start    Appendable    out        	csv_616_CSVPrinter_1_1	223	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
1534	[PATCH]    if    (escape    !=    DISABLED    &&    escape    ==    commentStart)    {	[BUG]    [BUGGY]    if    (escape    >    DISABLED    &&    escape    ==    commentStart)    {    [FE]    junit.framework.AssertionFailedError    testValidation    [CONTEXT]    }    if    (delimiter    ==    commentStart)    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    delimiter    cannot    be    the    same    (\   "   "    +    commentStart    +       "\   ")   ");    }    if    (encapsulator    !=    DISABLED    &&    encapsulator    ==    commentStart)    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    encapsulator    cannot    be    the    same    (\   "   "    +    commentStart    +       "\   ")   ");    }        [BUGGY]    if    (escape    >    DISABLED    &&    escape    ==    commentStart)    {    throw    new    IllegalArgumentException(   "The    comment    start    and    the    escape    character    cannot    be    the    same    (\   "   "    +    commentStart    +       "\   ")   ");    }    }    [CLASS]        CSVFormat    [METHOD]    validate    [RETURN_TYPE]    void        [VARIABLES]    char    DISABLED    c    commentStart    delimiter    encapsulator    escape    CSVFormat    DEFAULT    EXCEL    MYSQL    PRISTINE    RFC4180    TDF    boolean    emptyLinesIgnored    surroundingSpacesIgnored    String    CRLF    lineSeparator    String[]    header        	csv_36_CSVFormat_1_1	192	1	src/main/java/org/apache/commons/csv/CSVFormat.java
1535	[PATCH]    if    (c    ==    encapsulator)    {	[BUG]    [BUGGY]    if    (c    <=    encapsulator)    {    [FE]    junit.framework.AssertionFailedError:    expected:<   "a,    [b   ",   "b]       "    testPrinter3    [CONTEXT]    return;    }        out.append(encapsulator);            while    (pos    <    end)    {    char    c    =    value.charAt(pos);    [BUGGY]    if    (c    <=    encapsulator)    {            out.append(value,    start,    pos    +    1);            start    =    pos;    }    pos++;    }    [CLASS]        CSVPrinter    [METHOD]    printAndEncapsulate    [RETURN_TYPE]    void        CharSequence    value    int    offset    int    len    [VARIABLES]    CharSequence    value    char    c    delim    encapsulator    CSVFormat    format    boolean    first    newLine    quote    int    end    len    offset    pos    start    Appendable    out        	csv_671_CSVPrinter_1_1	260	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
1536	[PATCH]    if    (c    ==    '\r'    ||    c    ==    '\n'    ||    c    ==    delim    ||    c    ==    escape)    {	[BUG]    [BUGGY]    if    (false    ||    c    ==    '\n'    ||    c    ==    delim    ||    c    ==    escape)    {    [FE]    junit.framework.AssertionFailedError    testRandom    [CONTEXT]    int    pos    =    offset;    int    end    =    offset    +    len;    printSep();    char    delim    =    format.getDelimiter();    char    escape    =    format.getEscape();    while    (pos    <    end)    {    char    c    =    value.charAt(pos);    [BUGGY]    if    (false    ||    c    ==    '\n'    ||    c    ==    delim    ||    c    ==    escape)    {        if    (pos    >    start)    {    out.append(value,    start,    pos);    }    if    (c    ==    '\n')    {    c    =    'n';    }    else    if    (c    ==    '\r')    {    c    =    'r';    }        [CLASS]        CSVPrinter    [METHOD]    printAndEscape    [RETURN_TYPE]    void        CharSequence    value    int    offset    int    len    [VARIABLES]    CharSequence    value    char    c    delim    escape    CSVFormat    format    boolean    newLine    int    end    len    offset    pos    start    Appendable    out        	csv_506_CSVPrinter_1_1	162	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
1537	[PATCH]    int    end    =    offset    +    len;	[BUG]    [BUGGY]    int    end    =    offset    /    len;    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    -1    testFormat    [CONTEXT]    void    printAndEncapsulate(CharSequence    value,    int    offset,    int    len)    throws    IOException    {    boolean    first    =    newLine;    boolean    quote    =    false;    int    start    =    offset;    int    pos    =    offset;    [BUGGY]    int    end    =    offset    /    len;    printSep();    char    delim    =    format.getDelimiter();    char    encapsulator    =    format.getEncapsulator();    if    (len    <=    0)    {                [CLASS]        CSVPrinter    [METHOD]    printAndEncapsulate    [RETURN_TYPE]    void        CharSequence    value    int    offset    int    len    [VARIABLES]    CharSequence    value    char    c    delim    encapsulator    CSVFormat    format    boolean    first    newLine    quote    int    end    len    offset    pos    start    Appendable    out        	csv_558_CSVPrinter_1_1	193	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
1538	[PATCH]    if    (isEndOfFile(lastChar)    ||    (!isDelimiter(lastChar)    &&    isEndOfFile(c)))    {	[BUG]    [BUGGY]    if    (isEndOfFile(lastChar)    ||    (!isDelimiter(lastChar)    ==    isEndOfFile(c)))    {    [FE]    junit.framework.AssertionFailedError:    Token    type    expected:<TOKEN>    but    was:<EOF>    testNextToken1    [CONTEXT]        if    (isEndOfFile(c))    {    tkn.type    =    EOF;        return    tkn;    }    }    }            [BUGGY]    if    (isEndOfFile(lastChar)    ||    (!isDelimiter(lastChar)    ==    isEndOfFile(c)))    {    tkn.type    =    EOF;        return    tkn;    }        while    (tkn.type    ==    INVALID)    {        if    (surroundingSpacesIgnored)    {    while    (isWhitespace(c)    &&    !eol)    {    [CLASS]        CSVLexer    [METHOD]    nextToken    [RETURN_TYPE]    Token        Token    tkn    [VARIABLES]    boolean    eol    Token    tkn    int    c    lastChar        	csv_128_CSVLexer_1_1	75	1	src/main/java/org/apache/commons/csv/CSVLexer.java
1539	[PATCH]    if    (surroundingSpacesIgnored)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    Token    content    expected:<[]hijk>    but    was:<[    ]hijk>    testNextToken1    [CONTEXT]        if    (isEndOfFile(lastChar)    ||    (!isDelimiter(lastChar)    &&    isEndOfFile(c)))    {    tkn.type    =    EOF;        return    tkn;    }        while    (tkn.type    ==    INVALID)    {        [BUGGY]    if    (false)    {    while    (isWhitespace(c)    &&    !eol)    {    c    =    in.read();    eol    =    isEndOfLine(c);    }    }        if    (isCommentStart(c))    {        in.readLine();    [CLASS]        CSVLexer    [METHOD]    nextToken    [RETURN_TYPE]    Token        Token    tkn    [VARIABLES]    boolean    eol    Token    tkn    int    c    lastChar        	csv_138_CSVLexer_1_1	84	1	src/main/java/org/apache/commons/csv/CSVLexer.java
1540	[PATCH]    out.append(value,    start,    pos    +    1);	[BUG]    [BUGGY]    out.append(value,    start,    pos    +    -1);    [FE]    junit.framework.AssertionFailedError:    expected:<a,   "[b   "]   "c   "    testPrinter4    [CONTEXT]    out.append(encapsulator);            while    (pos    <    end)    {    char    c    =    value.charAt(pos);    if    (c    ==    encapsulator)    {                [BUGGY]    out.append(value,    start,    pos    +    -1);            start    =    pos;    }    pos++;    }        out.append(value,    start,    pos);    out.append(encapsulator);    [CLASS]        CSVPrinter    [METHOD]    printAndEncapsulate    [RETURN_TYPE]    void        CharSequence    value    int    offset    int    len    [VARIABLES]    CharSequence    value    char    c    delim    encapsulator    CSVFormat    format    boolean    first    newLine    quote    int    end    len    offset    pos    start    Appendable    out        	csv_675_CSVPrinter_1_1	264	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
1541	[PATCH]    start    =    pos    +    1;    //    start    on    the    current    char    after    this    one	[BUG]    [BUGGY]    start    =    pos    +    -1;    //    start    on    the    current    char    after    this    one    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    -1    testRandom    [CONTEXT]    }    if    (c    ==    '\n')    {    c    =    'n';    }    else    if    (c    ==    '\r')    {    c    =    'r';    }    out.append(escape);    out.append(c);        [BUGGY]    start    =    pos    +    -1;    }    pos++;    }        if    (pos    >    start)    {    out.append(value,    start,    pos);    }    }    [CLASS]        CSVPrinter    [METHOD]    printAndEscape    [RETURN_TYPE]    void        CharSequence    value    int    offset    int    len    [VARIABLES]    CharSequence    value    char    c    delim    escape    CSVFormat    format    boolean    newLine    int    end    len    offset    pos    start    Appendable    out        	csv_543_CSVPrinter_1_1	176	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
1542	[PATCH]    if    (c    ==    '\r'    &&    in.lookAhead()    ==    '\n')    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<5>    but    was:<10>    testExcelFormat1    [CONTEXT]    boolean    isEndOfLine(int    c)    throws    IOException    {        [BUGGY]    if    (false)    {        c    =    in.read();    }    return    (c    ==    '\n'    ||    c    ==    '\r');    }    [CLASS]        Lexer    [METHOD]    isEndOfLine    [RETURN_TYPE]    boolean        int    c    [VARIABLES]    char    commmentStart    delimiter    encapsulator    escape    ExtendedBufferedReader    in    CSVFormat    format    boolean    emptyLinesIgnored    isCommentEnabled    isEncapsulating    isEscaping    surroundingSpacesIgnored    int    c        	csv_252_Lexer_1_1	107	1	src/main/java/org/apache/commons/csv/Lexer.java
1543	[PATCH]    out.append(value,    start,    pos    +    1);	[BUG]    [BUGGY]    out.append(value,    start,    pos    *    1);    [FE]    junit.framework.AssertionFailedError:    expected:<a,   "b   "[   "]c   "    testPrinter4    [CONTEXT]    out.append(encapsulator);            while    (pos    <    end)    {    char    c    =    value.charAt(pos);    if    (c    ==    encapsulator)    {                [BUGGY]    out.append(value,    start,    pos    *    1);            start    =    pos;    }    pos++;    }        out.append(value,    start,    pos);    out.append(encapsulator);    [CLASS]        CSVPrinter    [METHOD]    printAndEncapsulate    [RETURN_TYPE]    void        CharSequence    value    int    offset    int    len    [VARIABLES]    CharSequence    value    char    c    delim    encapsulator    CSVFormat    format    boolean    first    newLine    quote    int    end    len    offset    pos    start    Appendable    out        	csv_677_CSVPrinter_1_1	264	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
1544	[PATCH]    if    (c    ==    '\n'    ||    c    ==    '\r'    ||    c    ==    encapsulator    ||    c    ==    delim)    {	[BUG]    [BUGGY]    if    (c    ==    '\r'    ||    c    ==    encapsulator    ||    c    ==    delim)    {    [FE]    junit.framework.AssertionFailedError:    expected:<a,[   "b    testPrinter5    [CONTEXT]    quote    =    true;        }    else    if    (c    <=    '#')    {                quote    =    true;    }    else    {    while    (pos    <    end)    {    c    =    value.charAt(pos);    [BUGGY]    if    (c    ==    '\r'    ||    c    ==    encapsulator    ||    c    ==    delim)    {    quote    =    true;    break;    }    pos++;    }    if    (!quote)    {    pos    =    end    -    1;    c    =    value.charAt(pos);        [CLASS]        CSVPrinter    [METHOD]    printAndEncapsulate    [RETURN_TYPE]    void        CharSequence    value    int    offset    int    len    [VARIABLES]    CharSequence    value    char    c    delim    encapsulator    CSVFormat    format    boolean    first    newLine    quote    int    end    len    offset    pos    start    Appendable    out        	csv_630_CSVPrinter_1_1	227	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
1545	[PATCH]    out.append(value,    start,    pos    +    1);	[BUG]    [BUGGY]    out.append(value,    start,    pos    +    0);    [FE]    junit.framework.AssertionFailedError:    expected:<a,   "b   "[   "]c   "    testPrinter4    [CONTEXT]    out.append(encapsulator);            while    (pos    <    end)    {    char    c    =    value.charAt(pos);    if    (c    ==    encapsulator)    {                [BUGGY]    out.append(value,    start,    pos    +    0);            start    =    pos;    }    pos++;    }        out.append(value,    start,    pos);    out.append(encapsulator);    [CLASS]        CSVPrinter    [METHOD]    printAndEncapsulate    [RETURN_TYPE]    void        CharSequence    value    int    offset    int    len    [VARIABLES]    CharSequence    value    char    c    delim    encapsulator    CSVFormat    format    boolean    first    newLine    quote    int    end    len    offset    pos    start    Appendable    out        	csv_674_CSVPrinter_1_1	264	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
1546	[PATCH]    lastChar    =    buf[offset    +    len    -    1];	[BUG]    [BUGGY]    lastChar    =    buf[offset    /    len    -    1];    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testReadLookahead2    [CONTEXT]    char    ch    =    buf[i];    if    (ch    ==    '\n')    {    if    ('\r'    !=    (i    >    0    ?    buf[i-1]:    lastChar))    {    lineCounter++;    }    }    else    if    (ch    ==    '\r')    {    lineCounter++;    }    }        [BUGGY]    lastChar    =    buf[offset    /    len    -    1];    }    else    if    (len    ==    -1)    {    lastChar    =    END_OF_STREAM;    }    return    len;    }    [CLASS]        ExtendedBufferedReader    [METHOD]    read    [RETURN_TYPE]    int        char[]    buf    int    offset    int    length    [VARIABLES]    char    ch    boolean    int    END_OF_STREAM    UNDEFINED    current    i    lastChar    len    length    lineCounter    offset    char[]    buf        	csv_358_ExtendedBufferedReader_1_1	100	1	src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java
1547	[PATCH]    return    this.commentStart    !=    DISABLED;	[BUG]    [BUGGY]    return    this.commentStart    >    DISABLED;    [FE]    junit.framework.AssertionFailedError:    Token    content    expected:<[]>    but    was:<[#foo]>    testNextToken2    [CONTEXT]    public    boolean    isCommentingEnabled()    {    [BUGGY]    return    this.commentStart    >    DISABLED;    }    [CLASS]        CSVFormat    [METHOD]    isCommentingEnabled    [RETURN_TYPE]    boolean        [VARIABLES]    char    DISABLED    c    commentStart    delimiter    encapsulator    escape    CSVFormat    DEFAULT    EXCEL    MYSQL    PRISTINE    RFC4180    TDF    boolean    emptyLinesIgnored    surroundingSpacesIgnored    String    CRLF    lineSeparator    String[]    header        	csv_55_CSVFormat_1_1	279	1	src/main/java/org/apache/commons/csv/CSVFormat.java
1548	[PATCH]    if    (c    ==    '\n'    ||    c    ==    '\r'    ||    c    ==    encapsulator    ||    c    ==    delim)    {	[BUG]    [BUGGY]    if    (true    ||    c    ==    encapsulator    ||    c    ==    delim)    {    [FE]    junit.framework.AssertionFailedError:    expected:<[a,b,c]>    but    was:<[   "a   ",   "b   ",   "c   "]>    testFormat    [CONTEXT]    quote    =    true;        }    else    if    (c    <=    '#')    {                quote    =    true;    }    else    {    while    (pos    <    end)    {    c    =    value.charAt(pos);    [BUGGY]    if    (true    ||    c    ==    encapsulator    ||    c    ==    delim)    {    quote    =    true;    break;    }    pos++;    }    if    (!quote)    {    pos    =    end    -    1;    c    =    value.charAt(pos);        [CLASS]        CSVPrinter    [METHOD]    printAndEncapsulate    [RETURN_TYPE]    void        CharSequence    value    int    offset    int    len    [VARIABLES]    CharSequence    value    char    c    delim    encapsulator    CSVFormat    format    boolean    first    newLine    quote    int    end    len    offset    pos    start    Appendable    out        	csv_631_CSVPrinter_1_1	227	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
1549	[PATCH]    if    (isEscape(c))    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.io.IOException:    (line    3)    invalid    char    between    encapsulated    token    and    delimiter    testBackslashEscaping    [CONTEXT]    private    Token    encapsulatedTokenLexer(Token    tkn,    int    c)    throws    IOException    {        int    startLineNumber    =    getLineNumber();            while    (true)    {    c    =    in.read();        [BUGGY]    if    (false)    {    tkn.content.append((char)    readEscape(c));    }    else    if    (isEncapsulator(c))    {    if    (isEncapsulator(in.lookAhead()))    {        c    =    in.read();    tkn.content.append((char)    c);    }    else    {        while    (true)    {    c    =    in.read();    [CLASS]        CSVLexer    [METHOD]    encapsulatedTokenLexer    [RETURN_TYPE]    Token        Token    tkn    int    c    [VARIABLES]    boolean    Token    tkn    int    c    startLineNumber        	csv_185_CSVLexer_1_1	189	1	src/main/java/org/apache/commons/csv/CSVLexer.java
1550	[PATCH]    }    else    if    (isEscape(c))    {	[BUG]    [BUGGY]    }    else    if    (true)    {    [FE]    junit.framework.AssertionFailedError:    Token    content    expected:<[abc]>    but    was:<[,e,hj,    mo,    qs,v,x]>    testNextToken1    [CONTEXT]    break;    }    else    if    (isEndOfFile(c))    {        tkn.type    =    EOF;    tkn.isReady    =    true;    break;    }    else    if    (isDelimiter(c))    {        tkn.type    =    TOKEN;    break;    [BUGGY]    }    else    if    (true)    {    tkn.content.append((char)    readEscape(c));    }    else    {    tkn.content.append((char)    c);    }    c    =    in.read();    }    if    (surroundingSpacesIgnored)    {    trimTrailingSpaces(tkn.content);    [CLASS]        CSVLexer    [METHOD]    simpleTokenLexer    [RETURN_TYPE]    Token        Token    tkn    int    c    [VARIABLES]    boolean    Token    tkn    int    c        	csv_177_CSVLexer_1_1	152	1	src/main/java/org/apache/commons/csv/CSVLexer.java
1551	[PATCH]    }    else    if    (isEscape(c))    {	[BUG]    [BUGGY]    }    else    if    (false)    {    [FE]    junit.framework.AssertionFailedError    testBackslashEscaping2    [CONTEXT]    break;    }    else    if    (isEndOfFile(c))    {        tkn.type    =    EOF;    tkn.isReady    =    true;    break;    }    else    if    (isDelimiter(c))    {        tkn.type    =    TOKEN;    break;    [BUGGY]    }    else    if    (false)    {    tkn.content.append((char)    readEscape(c));    }    else    {    tkn.content.append((char)    c);    }    c    =    in.read();    }    if    (surroundingSpacesIgnored)    {    trimTrailingSpaces(tkn.content);    [CLASS]        CSVLexer    [METHOD]    simpleTokenLexer    [RETURN_TYPE]    Token        Token    tkn    int    c    [VARIABLES]    boolean    Token    tkn    int    c        	csv_176_CSVLexer_1_1	152	1	src/main/java/org/apache/commons/csv/CSVLexer.java
1552	[PATCH]    return    (c    ==    '\n'    ||    c    ==    '\r');	[BUG]    [BUGGY]    return    (c    ==    '\n'    ||    c    <=    '\r');    [FE]    junit.framework.AssertionFailedError:    Token    type    expected:<EOF>    but    was:<EORECORD>    testNextToken1    [CONTEXT]    boolean    isEndOfLine(int    c)    throws    IOException    {        if    (c    ==    '\r'    &&    in.lookAhead()    ==    '\n')    {        c    =    in.read();    }    [BUGGY]    return    (c    ==    '\n'    ||    c    <=    '\r');    }    [CLASS]        Lexer    [METHOD]    isEndOfLine    [RETURN_TYPE]    boolean        int    c    [VARIABLES]    char    commmentStart    delimiter    encapsulator    escape    ExtendedBufferedReader    in    CSVFormat    format    boolean    emptyLinesIgnored    isCommentEnabled    isEncapsulating    isEscaping    surroundingSpacesIgnored    int    c        	csv_259_Lexer_1_1	111	1	src/main/java/org/apache/commons/csv/Lexer.java
1553	[PATCH]    lastChar    =    line.charAt(line.length()    -    1);	[BUG]    [BUGGY]    lastChar    =    line.charAt(line.length()    +    1);    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    4    testNextToken2    [CONTEXT]    public    String    readLine()    throws    IOException    {    String    line    =    super.readLine();    if    (line    !=    null)    {    if    (line.length()    >    0)    {    [BUGGY]    lastChar    =    line.charAt(line.length()    +    1);    }    lineCounter++;    }    else    {    lastChar    =    END_OF_STREAM;    }    return    line;    }    [CLASS]        ExtendedBufferedReader    [METHOD]    readLine    [RETURN_TYPE]    String        [VARIABLES]    int    END_OF_STREAM    UNDEFINED    current    i    lastChar    len    length    lineCounter    offset    String    line    boolean        	csv_382_ExtendedBufferedReader_1_1	127	1	src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java
1554	[PATCH]    return    (c    ==    '\n'    ||    c    ==    '\r');	[BUG]    [BUGGY]    return    (false    ||    c    ==    '\r');    [FE]    junit.framework.AssertionFailedError:    Token    type    expected:<EORECORD>    but    was:<TOKEN>    testNextToken2    [CONTEXT]    boolean    isEndOfLine(int    c)    throws    IOException    {        if    (c    ==    '\r'    &&    in.lookAhead()    ==    '\n')    {        c    =    in.read();    }    [BUGGY]    return    (false    ||    c    ==    '\r');    }    [CLASS]        Lexer    [METHOD]    isEndOfLine    [RETURN_TYPE]    boolean        int    c    [VARIABLES]    char    commmentStart    delimiter    encapsulator    escape    ExtendedBufferedReader    in    CSVFormat    format    boolean    emptyLinesIgnored    isCommentEnabled    isEncapsulating    isEscaping    surroundingSpacesIgnored    int    c        	csv_258_Lexer_1_1	111	1	src/main/java/org/apache/commons/csv/Lexer.java
1555	[PATCH]    if    (isEndOfFile(lastChar)    ||    (!isDelimiter(lastChar)    &&    isEndOfFile(c)))    {	[BUG]    [BUGGY]    if    (isEndOfFile(lastChar)    ||    (!isDelimiter(lastChar)))    {    [FE]    junit.framework.AssertionFailedError:    Token    type    expected:<TOKEN>    but    was:<EOF>    testNextToken1    [CONTEXT]        if    (isEndOfFile(c))    {    tkn.type    =    EOF;        return    tkn;    }    }    }            [BUGGY]    if    (isEndOfFile(lastChar)    ||    (!isDelimiter(lastChar)))    {    tkn.type    =    EOF;        return    tkn;    }        while    (tkn.type    ==    INVALID)    {        if    (surroundingSpacesIgnored)    {    while    (isWhitespace(c)    &&    !eol)    {    [CLASS]        CSVLexer    [METHOD]    nextToken    [RETURN_TYPE]    Token        Token    tkn    [VARIABLES]    boolean    eol    Token    tkn    int    c    lastChar        	csv_130_CSVLexer_1_1	75	1	src/main/java/org/apache/commons/csv/CSVLexer.java
1556	[PATCH]    return    c    ==    '\n'    ||    c    ==    '\r';	[BUG]    [BUGGY]    return    true;    [FE]    java.lang.ExceptionInInitializerError    testSerialization    [CONTEXT]    private    static    boolean    isLineBreak(char    c)    {    [BUGGY]    return    true;    }    [CLASS]        CSVFormat    [METHOD]    isLineBreak    [RETURN_TYPE]    boolean        char    c    [VARIABLES]    char    DISABLED    c    commentStart    delimiter    encapsulator    escape    CSVFormat    DEFAULT    EXCEL    MYSQL    PRISTINE    RFC4180    TDF    boolean    emptyLinesIgnored    surroundingSpacesIgnored    String    CRLF    lineSeparator    String[]    header        	csv_15_CSVFormat_1_1	169	1	src/main/java/org/apache/commons/csv/CSVFormat.java
1557	[PATCH]    if    (surroundingSpacesIgnored)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError    testBackslashEscaping2    [CONTEXT]    break;    }    else    if    (isEscape(c))    {    tkn.content.append((char)    readEscape(c));    }    else    {    tkn.content.append((char)    c);    }    c    =    in.read();    }        [BUGGY]    if    (true)    {    trimTrailingSpaces(tkn.content);    }    return    tkn;    }    [CLASS]        CSVLexer    [METHOD]    simpleTokenLexer    [RETURN_TYPE]    Token        Token    tkn    int    c    [VARIABLES]    boolean    Token    tkn    int    c        	csv_182_CSVLexer_1_1	161	1	src/main/java/org/apache/commons/csv/CSVLexer.java
1558	[PATCH]    if    (c    ==    '\r'    ||    c    ==    '\n'    ||    c    ==    delim    ||    c    ==    escape)    {	[BUG]    [BUGGY]    if    (c    ==    '\r'    ||    c    ==    delim    ||    c    ==    escape)    {    [FE]    junit.framework.AssertionFailedError    testRandom    [CONTEXT]    int    pos    =    offset;    int    end    =    offset    +    len;    printSep();    char    delim    =    format.getDelimiter();    char    escape    =    format.getEscape();    while    (pos    <    end)    {    char    c    =    value.charAt(pos);    [BUGGY]    if    (c    ==    '\r'    ||    c    ==    delim    ||    c    ==    escape)    {        if    (pos    >    start)    {    out.append(value,    start,    pos);    }    if    (c    ==    '\n')    {    c    =    'n';    }    else    if    (c    ==    '\r')    {    c    =    'r';    }        [CLASS]        CSVPrinter    [METHOD]    printAndEscape    [RETURN_TYPE]    void        CharSequence    value    int    offset    int    len    [VARIABLES]    CharSequence    value    char    c    delim    escape    CSVFormat    format    boolean    newLine    int    end    len    offset    pos    start    Appendable    out        	csv_511_CSVPrinter_1_1	162	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
1559	[PATCH]    return    c    ==    ExtendedBufferedReader.END_OF_STREAM;	[BUG]    [BUGGY]    return    c    <=    ExtendedBufferedReader.END_OF_STREAM;    [FE]    junit.framework.AssertionFailedError:    Token    type    expected:<TOKEN>    but    was:<EOF>    testNextToken1    [CONTEXT]    boolean    isEndOfFile(int    c)    {    [BUGGY]    return    c    <=    ExtendedBufferedReader.END_OF_STREAM;    }    [CLASS]        Lexer    [METHOD]    isEndOfFile    [RETURN_TYPE]    boolean        int    c    [VARIABLES]    char    commmentStart    delimiter    encapsulator    escape    ExtendedBufferedReader    in    CSVFormat    format    boolean    emptyLinesIgnored    isCommentEnabled    isEncapsulating    isEscaping    surroundingSpacesIgnored    int    c        	csv_266_Lexer_1_1	118	1	src/main/java/org/apache/commons/csv/Lexer.java
1560	[PATCH]    if    (c    ==    '\r'    ||    c    ==    '\n'    ||    c    ==    delim    ||    c    ==    escape)    {	[BUG]    [BUGGY]    if    (c    ==    '\r'    ||    false    ||    c    ==    delim    ||    c    ==    escape)    {    [FE]    junit.framework.AssertionFailedError    testRandom    [CONTEXT]    int    pos    =    offset;    int    end    =    offset    +    len;    printSep();    char    delim    =    format.getDelimiter();    char    escape    =    format.getEscape();    while    (pos    <    end)    {    char    c    =    value.charAt(pos);    [BUGGY]    if    (c    ==    '\r'    ||    false    ||    c    ==    delim    ||    c    ==    escape)    {        if    (pos    >    start)    {    out.append(value,    start,    pos);    }    if    (c    ==    '\n')    {    c    =    'n';    }    else    if    (c    ==    '\r')    {    c    =    'r';    }        [CLASS]        CSVPrinter    [METHOD]    printAndEscape    [RETURN_TYPE]    void        CharSequence    value    int    offset    int    len    [VARIABLES]    CharSequence    value    char    c    delim    escape    CSVFormat    format    boolean    newLine    int    end    len    offset    pos    start    Appendable    out        	csv_509_CSVPrinter_1_1	162	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
1561	[PATCH]    return    c    ==    delimiter;	[BUG]    [BUGGY]    return    c    >=    delimiter;    [FE]    junit.framework.AssertionFailedError:    Token    content    expected:<[abc]>    but    was:<[]>    testNextToken1    [CONTEXT]    boolean    isDelimiter(int    c)    {    [BUGGY]    return    c    >=    delimiter;    }    [CLASS]        Lexer    [METHOD]    isDelimiter    [RETURN_TYPE]    boolean        int    c    [VARIABLES]    char    commmentStart    delimiter    encapsulator    escape    ExtendedBufferedReader    in    CSVFormat    format    boolean    emptyLinesIgnored    isCommentEnabled    isEncapsulating    isEscaping    surroundingSpacesIgnored    int    c        	csv_270_Lexer_1_1	124	1	src/main/java/org/apache/commons/csv/Lexer.java
1562	[PATCH]    for    (int    i    =    0;    i    <    comment.length();    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    -1;    i    <    comment.length();    i++)    {    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    -1    testSingleLineComment    [CONTEXT]    public    void    printComment(String    comment)    throws    IOException    {    if    (!format.isCommentingEnabled())    {    return;    }    if    (!newLine)    {    println();    }    out.append(format.getCommentStart());    out.append('    ');    [BUGGY]    for    (int    i    =    -1;    i    <    comment.length();    i++)    {    char    c    =    comment.charAt(i);    switch    (c)    {    case    '\r':    if    (i    +    1    <    comment.length()    &&    comment.charAt(i    +    1)    ==    '\n')    {    i++;    }        case    '\n':    println();    out.append(format.getCommentStart());    [CLASS]        CSVPrinter    [METHOD]    printComment    [RETURN_TYPE]    void        String    comment    [VARIABLES]    char    c    CSVFormat    format    boolean    newLine    String    comment    int    i    Appendable    out        	csv_447_CSVPrinter_1_1	109	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
1563	[PATCH]    }    else    if    (isEncapsulator(c))    {	[BUG]    [BUGGY]    }    else    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    Token    content    expected:<[foo]>    but    was:<[   "foo   "]>    testNextToken4    [CONTEXT]        in.readLine();    tkn    =    nextToken(tkn.reset());    }    else    if    (isDelimiter(c))    {        tkn.type    =    TOKEN;    }    else    if    (eol)    {            tkn.type    =    EORECORD;    [BUGGY]    }    else    if    (false)    {        encapsulatedTokenLexer(tkn,    c);    }    else    if    (isEndOfFile(c))    {            tkn.type    =    EOF;    tkn.isReady    =    true;    }    else    {            [CLASS]        CSVLexer    [METHOD]    nextToken    [RETURN_TYPE]    Token        Token    tkn    [VARIABLES]    boolean    eol    Token    tkn    int    c    lastChar        	csv_156_CSVLexer_1_1	103	1	src/main/java/org/apache/commons/csv/CSVLexer.java
1564	[PATCH]    lastChar    =    line.charAt(line.length()    -    1);	[BUG]    [BUGGY]    lastChar    =    line.charAt(line.length()    /    1);    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    3    testNextToken2    [CONTEXT]    public    String    readLine()    throws    IOException    {    String    line    =    super.readLine();    if    (line    !=    null)    {    if    (line.length()    >    0)    {    [BUGGY]    lastChar    =    line.charAt(line.length()    /    1);    }    lineCounter++;    }    else    {    lastChar    =    END_OF_STREAM;    }    return    line;    }    [CLASS]        ExtendedBufferedReader    [METHOD]    readLine    [RETURN_TYPE]    String        [VARIABLES]    int    END_OF_STREAM    UNDEFINED    current    i    lastChar    len    length    lineCounter    offset    String    line    boolean        	csv_383_ExtendedBufferedReader_1_1	127	1	src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java
1565	[PATCH]    if    (line    !=    null)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    java.lang.NullPointerException    testEmptyInput    [CONTEXT]    public    String    readLine()    throws    IOException    {    String    line    =    super.readLine();        [BUGGY]    if    (true)    {    if    (line.length()    >    0)    {    lastChar    =    line.charAt(line.length()    -    1);    }    lineCounter++;    }    else    {    lastChar    =    END_OF_STREAM;    }    return    line;    }    [CLASS]        ExtendedBufferedReader    [METHOD]    readLine    [RETURN_TYPE]    String        [VARIABLES]    int    END_OF_STREAM    UNDEFINED    current    i    lastChar    len    length    lineCounter    offset    String    line    boolean        	csv_372_ExtendedBufferedReader_1_1	125	1	src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java
1566	[PATCH]    while    (length    >    0    &&    Character.isWhitespace(buffer.charAt(length    -    1)))    {	[BUG]    [BUGGY]    while    (length    >    0    &&    Character.isWhitespace(buffer.charAt(length    -    -1)))    {    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    4    testNextToken1    [CONTEXT]    void    trimTrailingSpaces(StringBuilder    buffer)    {    int    length    =    buffer.length();    [BUGGY]    while    (length    >    0    &&    Character.isWhitespace(buffer.charAt(length    -    -1)))    {    length    =    length    -    1;    }    if    (length    !=    buffer.length())    {    buffer.setLength(length);    }    }    [CLASS]        Lexer    [METHOD]    trimTrailingSpaces    [RETURN_TYPE]    void        StringBuilder    buffer    [VARIABLES]    char    commmentStart    delimiter    encapsulator    escape    ExtendedBufferedReader    in    CSVFormat    format    boolean    emptyLinesIgnored    isCommentEnabled    isEncapsulating    isEscaping    surroundingSpacesIgnored    StringBuilder    buffer    int    length        	csv_218_Lexer_1_1	84	1	src/main/java/org/apache/commons/csv/Lexer.java
1567	[PATCH]    if    (c    ==    '\r'    ||    c    ==    '\n'    ||    c    ==    delim    ||    c    ==    escape)    {	[BUG]    [BUGGY]    if    (c    ==    '\r'    ||    c    >=    '\n'    ||    c    ==    delim    ||    c    ==    escape)    {    [FE]    junit.framework.AssertionFailedError    testRandom    [CONTEXT]    int    pos    =    offset;    int    end    =    offset    +    len;    printSep();    char    delim    =    format.getDelimiter();    char    escape    =    format.getEscape();    while    (pos    <    end)    {    char    c    =    value.charAt(pos);    [BUGGY]    if    (c    ==    '\r'    ||    c    >=    '\n'    ||    c    ==    delim    ||    c    ==    escape)    {        if    (pos    >    start)    {    out.append(value,    start,    pos);    }    if    (c    ==    '\n')    {    c    =    'n';    }    else    if    (c    ==    '\r')    {    c    =    'r';    }        [CLASS]        CSVPrinter    [METHOD]    printAndEscape    [RETURN_TYPE]    void        CharSequence    value    int    offset    int    len    [VARIABLES]    CharSequence    value    char    c    delim    escape    CSVFormat    format    boolean    newLine    int    end    len    offset    pos    start    Appendable    out        	csv_508_CSVPrinter_1_1	162	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
1568	[PATCH]    }    else    if    (isEndOfFile(c))    {	[BUG]    [BUGGY]    }    else    if    (true)    {    [FE]    junit.framework.AssertionFailedError:    Token    type    expected:<TOKEN>    but    was:<EOF>    testNextToken1    [CONTEXT]    private    Token    simpleTokenLexer(Token    tkn,    int    c)    throws    IOException    {    while    (true)    {    if    (isEndOfLine(c))    {        tkn.type    =    EORECORD;    break;    [BUGGY]    }    else    if    (true)    {        tkn.type    =    EOF;    tkn.isReady    =    true;    break;    }    else    if    (isDelimiter(c))    {        tkn.type    =    TOKEN;    break;    }    else    if    (isEscape(c))    {    tkn.content.append((char)    readEscape(c));    [CLASS]        CSVLexer    [METHOD]    simpleTokenLexer    [RETURN_TYPE]    Token        Token    tkn    int    c    [VARIABLES]    boolean    Token    tkn    int    c        	csv_169_CSVLexer_1_1	143	1	src/main/java/org/apache/commons/csv/CSVLexer.java
1569	[PATCH]    if    (encapsulator    !=    DISABLED    &&    encapsulator    ==    commentStart)    {	[BUG]    [BUGGY]    if    (encapsulator    >    DISABLED    &&    encapsulator    ==    commentStart)    {    [FE]    junit.framework.AssertionFailedError    testValidation    [CONTEXT]    }    if    (delimiter    ==    escape)    {    throw    new    IllegalArgumentException(   "The    escape    character    and    the    delimiter    cannot    be    the    same    (\   "   "    +    escape    +       "\   ")   ");    }    if    (delimiter    ==    commentStart)    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    delimiter    cannot    be    the    same    (\   "   "    +    commentStart    +       "\   ")   ");    }        [BUGGY]    if    (encapsulator    >    DISABLED    &&    encapsulator    ==    commentStart)    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    encapsulator    cannot    be    the    same    (\   "   "    +    commentStart    +       "\   ")   ");    }    if    (escape    !=    DISABLED    &&    escape    ==    commentStart)    {    throw    new    IllegalArgumentException(   "The    comment    start    and    the    escape    character    cannot    be    the    same    (\   "   "    +    commentStart    +       "\   ")   ");    }    }    [CLASS]        CSVFormat    [METHOD]    validate    [RETURN_TYPE]    void        [VARIABLES]    char    DISABLED    c    commentStart    delimiter    encapsulator    escape    CSVFormat    DEFAULT    EXCEL    MYSQL    PRISTINE    RFC4180    TDF    boolean    emptyLinesIgnored    surroundingSpacesIgnored    String    CRLF    lineSeparator    String[]    header        	csv_26_CSVFormat_1_1	188	1	src/main/java/org/apache/commons/csv/CSVFormat.java
1570	[PATCH]    if    (len    >    0)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<99>    but    was:<-2>    testReadLookahead2    [CONTEXT]    public    int    read(char[]    buf,    int    offset,    int    length)    throws    IOException    {    if    (length    ==    0)    {    return    0;    }    int    len    =    super.read(buf,    offset,    length);        [BUGGY]    if    (false)    {    for    (int    i    =    offset;    i    <    offset    +    len;    i++)    {    char    ch    =    buf[i];    if    (ch    ==    '\n')    {    if    ('\r'    !=    (i    >    0    ?    buf[i-1]:    lastChar))    {    lineCounter++;    }    }    else    if    (ch    ==    '\r')    {    lineCounter++;    }    [CLASS]        ExtendedBufferedReader    [METHOD]    read    [RETURN_TYPE]    int        char[]    buf    int    offset    int    length    [VARIABLES]    char    ch    boolean    int    END_OF_STREAM    UNDEFINED    current    i    lastChar    len    length    lineCounter    offset    char[]    buf        	csv_325_ExtendedBufferedReader_1_1	87	1	src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java
1571	[PATCH]    if    (encapsulator    !=    DISABLED    &&    encapsulator    ==    commentStart)    {	[BUG]    [BUGGY]    if    (true    &&    encapsulator    ==    commentStart)    {    [FE]    java.lang.IllegalArgumentException:    The    comment    start    character    and    the    encapsulator    cannot    be    the    same    (   "￾   ")    testValidation    [CONTEXT]    }    if    (delimiter    ==    escape)    {    throw    new    IllegalArgumentException(   "The    escape    character    and    the    delimiter    cannot    be    the    same    (\   "   "    +    escape    +       "\   ")   ");    }    if    (delimiter    ==    commentStart)    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    delimiter    cannot    be    the    same    (\   "   "    +    commentStart    +       "\   ")   ");    }        [BUGGY]    if    (true    &&    encapsulator    ==    commentStart)    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    encapsulator    cannot    be    the    same    (\   "   "    +    commentStart    +       "\   ")   ");    }    if    (escape    !=    DISABLED    &&    escape    ==    commentStart)    {    throw    new    IllegalArgumentException(   "The    comment    start    and    the    escape    character    cannot    be    the    same    (\   "   "    +    commentStart    +       "\   ")   ");    }    }    [CLASS]        CSVFormat    [METHOD]    validate    [RETURN_TYPE]    void        [VARIABLES]    char    DISABLED    c    commentStart    delimiter    encapsulator    escape    CSVFormat    DEFAULT    EXCEL    MYSQL    PRISTINE    RFC4180    TDF    boolean    emptyLinesIgnored    surroundingSpacesIgnored    String    CRLF    lineSeparator    String[]    header        	csv_27_CSVFormat_1_1	188	1	src/main/java/org/apache/commons/csv/CSVFormat.java
1572	[PATCH]    return    isEscaping    &&    c    ==    escape;	[BUG]    [BUGGY]    return    isEscaping    &&    false;    [FE]    junit.framework.AssertionFailedError    testBackslashEscaping2    [CONTEXT]    boolean    isEscape(int    c)    {    [BUGGY]    return    isEscaping    &&    false;    }    [CLASS]        Lexer    [METHOD]    isEscape    [RETURN_TYPE]    boolean        int    c    [VARIABLES]    char    commmentStart    delimiter    encapsulator    escape    ExtendedBufferedReader    in    CSVFormat    format    boolean    emptyLinesIgnored    isCommentEnabled    isEncapsulating    isEscaping    surroundingSpacesIgnored    int    c        	csv_274_Lexer_1_1	128	1	src/main/java/org/apache/commons/csv/Lexer.java
1573	[PATCH]    return    isEscaping    &&    c    ==    escape;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError    testBackslashEscaping2    [CONTEXT]    boolean    isEscape(int    c)    {    [BUGGY]    return    false;    }    [CLASS]        Lexer    [METHOD]    isEscape    [RETURN_TYPE]    boolean        int    c    [VARIABLES]    char    commmentStart    delimiter    encapsulator    escape    ExtendedBufferedReader    in    CSVFormat    format    boolean    emptyLinesIgnored    isCommentEnabled    isEncapsulating    isEscaping    surroundingSpacesIgnored    int    c        	csv_276_Lexer_1_1	128	1	src/main/java/org/apache/commons/csv/Lexer.java
1574	[PATCH]    return    c    ==    delimiter;	[BUG]    [BUGGY]    return    c    <=    delimiter;    [FE]    junit.framework.AssertionFailedError:    Token    content    expected:<[wxy]>    but    was:<[]>    testNextToken1    [CONTEXT]    boolean    isDelimiter(int    c)    {    [BUGGY]    return    c    <=    delimiter;    }    [CLASS]        Lexer    [METHOD]    isDelimiter    [RETURN_TYPE]    boolean        int    c    [VARIABLES]    char    commmentStart    delimiter    encapsulator    escape    ExtendedBufferedReader    in    CSVFormat    format    boolean    emptyLinesIgnored    isCommentEnabled    isEncapsulating    isEscaping    surroundingSpacesIgnored    int    c        	csv_269_Lexer_1_1	124	1	src/main/java/org/apache/commons/csv/Lexer.java
1575	[PATCH]    if    (isLineBreak(escape))    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError    testValidation    [CONTEXT]    public    CSVFormat    withEscape(char    escape)    {    [BUGGY]    if    (false)    {    throw    new    IllegalArgumentException(   "The    escape    character    cannot    be    a    line    break   ");    }    return    new    CSVFormat(delimiter,    encapsulator,    commentStart,    escape,    surroundingSpacesIgnored,    emptyLinesIgnored,    lineSeparator,    header);    }    [CLASS]        CSVFormat    [METHOD]    withEscape    [RETURN_TYPE]    CSVFormat        char    escape    [VARIABLES]    char    DISABLED    c    commentStart    delimiter    encapsulator    escape    CSVFormat    DEFAULT    EXCEL    MYSQL    PRISTINE    RFC4180    TDF    boolean    emptyLinesIgnored    surroundingSpacesIgnored    String    CRLF    lineSeparator    String[]    header        	csv_57_CSVFormat_1_1	299	1	src/main/java/org/apache/commons/csv/CSVFormat.java
1576	[PATCH]    length    =    length    -    1;	[BUG]    [BUGGY]    length    =    length    -    -1;    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    3    testNextToken1    [CONTEXT]    void    trimTrailingSpaces(StringBuilder    buffer)    {    int    length    =    buffer.length();    while    (length    >    0    &&    Character.isWhitespace(buffer.charAt(length    -    1)))    {    [BUGGY]    length    =    length    -    -1;    }    if    (length    !=    buffer.length())    {    buffer.setLength(length);    }    }    [CLASS]        Lexer    [METHOD]    trimTrailingSpaces    [RETURN_TYPE]    void        StringBuilder    buffer    [VARIABLES]    char    commmentStart    delimiter    encapsulator    escape    ExtendedBufferedReader    in    CSVFormat    format    boolean    emptyLinesIgnored    isCommentEnabled    isEncapsulating    isEscaping    surroundingSpacesIgnored    StringBuilder    buffer    int    length        	csv_228_Lexer_1_1	85	1	src/main/java/org/apache/commons/csv/Lexer.java
1577	[PATCH]    content.setLength(0);	[BUG]    [BUGGY]    content.setLength(1);    [FE]    junit.framework.AssertionFailedError:    Token    content    expected:<[]>    but    was:<[ ]>    testNextToken2    [CONTEXT]    Token    reset()    {    [BUGGY]    content.setLength(1);    type    =    INVALID;    isReady    =    false;    return    this;    }    [CLASS]        Token    Type    [METHOD]    reset    [RETURN_TYPE]    Token        [VARIABLES]    Type    EOF    EORECORD    INVALID    TOKEN    type    boolean    isReady    StringBuilder    content    int    INITIAL_TOKEN_LENGTH        	csv_87_Token_1_1	57	1	src/main/java/org/apache/commons/csv/Token.java
1578	[PATCH]    &&    (lastChar    ==    '\n'    ||    lastChar    ==    '\r'    ||    lastChar    ==    ExtendedBufferedReader.UNDEFINED)	[BUG]    [BUGGY]    &&    (lastChar    ==    '\n'    ||    lastChar    ==    '\r')    [FE]    junit.framework.AssertionFailedError:    expected:<3>    but    was:<4>    testIgnoreEmptyLines    [CONTEXT]                int    c    =    in.read();    boolean    eol    =    isEndOfLine(c);    c    =    in.readAgain();        if    (emptyLinesIgnored)    {    while    (eol    [BUGGY]    &&    (lastChar    ==    '\n'    ||    lastChar    ==    '\r')    &&    !isEndOfFile(lastChar))    {        lastChar    =    c;    c    =    in.read();    eol    =    isEndOfLine(c);    c    =    in.readAgain();        if    (isEndOfFile(c))    {    tkn.type    =    EOF;        [CLASS]        CSVLexer    [METHOD]    nextToken    [RETURN_TYPE]    Token        Token    tkn    [VARIABLES]    boolean    eol    Token    tkn    int    c    lastChar        	csv_110_CSVLexer_1_1	58	1	src/main/java/org/apache/commons/csv/CSVLexer.java
1579	[PATCH]    }    else    if    (isEncapsulator(c))    {	[BUG]    [BUGGY]    }    else    if    (true)    {    [FE]    java.io.IOException:    (startline    0)    EOF    reached    before    encapsulated    token    finished    testNextToken1    [CONTEXT]        in.readLine();    tkn    =    nextToken(tkn.reset());    }    else    if    (isDelimiter(c))    {        tkn.type    =    TOKEN;    }    else    if    (eol)    {            tkn.type    =    EORECORD;    [BUGGY]    }    else    if    (true)    {        encapsulatedTokenLexer(tkn,    c);    }    else    if    (isEndOfFile(c))    {            tkn.type    =    EOF;    tkn.isReady    =    true;    }    else    {            [CLASS]        CSVLexer    [METHOD]    nextToken    [RETURN_TYPE]    Token        Token    tkn    [VARIABLES]    boolean    eol    Token    tkn    int    c    lastChar        	csv_157_CSVLexer_1_1	103	1	src/main/java/org/apache/commons/csv/CSVLexer.java
1580	[PATCH]    return    0;	[BUG]    [BUGGY]    return    1;    [FE]    junit.framework.AssertionFailedError:    expected:<0>    but    was:<1>    testEmptyInput    [CONTEXT]    public    int    read(char[]    buf,    int    offset,    int    length)    throws    IOException    {    if    (length    ==    0)    {    [BUGGY]    return    1;    }    int    len    =    super.read(buf,    offset,    length);    if    (len    >    0)    {    for    (int    i    =    offset;    i    <    offset    +    len;    i++)    {    char    ch    =    buf[i];    if    (ch    ==    '\n')    {    if    ('\r'    !=    (i    >    0    ?    buf[i-1]:    lastChar))    {    [CLASS]        ExtendedBufferedReader    [METHOD]    read    [RETURN_TYPE]    int        char[]    buf    int    offset    int    length    [VARIABLES]    char    ch    boolean    int    END_OF_STREAM    UNDEFINED    current    i    lastChar    len    length    lineCounter    offset    char[]    buf        	csv_319_ExtendedBufferedReader_1_1	82	1	src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java
1581	[PATCH]    content.setLength(0);	[BUG]    [BUGGY]    content.setLength(-1);    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    -1    testNextToken2    [CONTEXT]    Token    reset()    {    [BUGGY]    content.setLength(-1);    type    =    INVALID;    isReady    =    false;    return    this;    }    [CLASS]        Token    Type    [METHOD]    reset    [RETURN_TYPE]    Token        [VARIABLES]    Type    EOF    EORECORD    INVALID    TOKEN    type    boolean    isReady    StringBuilder    content    int    INITIAL_TOKEN_LENGTH        	csv_88_Token_1_1	57	1	src/main/java/org/apache/commons/csv/Token.java
1582	[PATCH]    &&    (lastChar    ==    '\n'    ||    lastChar    ==    '\r'    ||    lastChar    ==    ExtendedBufferedReader.UNDEFINED)	[BUG]    [BUGGY]    &&    (true)    [FE]    junit.framework.AssertionFailedError:    Token    type    expected:<EORECORD>    but    was:<TOKEN>    testNextToken2    [CONTEXT]                int    c    =    in.read();    boolean    eol    =    isEndOfLine(c);    c    =    in.readAgain();        if    (emptyLinesIgnored)    {    while    (eol    [BUGGY]    &&    (true)    &&    !isEndOfFile(lastChar))    {        lastChar    =    c;    c    =    in.read();    eol    =    isEndOfLine(c);    c    =    in.readAgain();        if    (isEndOfFile(c))    {    tkn.type    =    EOF;        [CLASS]        CSVLexer    [METHOD]    nextToken    [RETURN_TYPE]    Token        Token    tkn    [VARIABLES]    boolean    eol    Token    tkn    int    c    lastChar        	csv_112_CSVLexer_1_1	58	1	src/main/java/org/apache/commons/csv/CSVLexer.java
1583	[PATCH]    if    (c    ==    '\r'    ||    c    ==    '\n'    ||    c    ==    delim    ||    c    ==    escape)    {	[BUG]    [BUGGY]    if    (c    ==    '\r'    ||    c    ==    '\n'    ||    false    ||    c    ==    escape)    {    [FE]    junit.framework.AssertionFailedError    testRandom    [CONTEXT]    int    pos    =    offset;    int    end    =    offset    +    len;    printSep();    char    delim    =    format.getDelimiter();    char    escape    =    format.getEscape();    while    (pos    <    end)    {    char    c    =    value.charAt(pos);    [BUGGY]    if    (c    ==    '\r'    ||    c    ==    '\n'    ||    false    ||    c    ==    escape)    {        if    (pos    >    start)    {    out.append(value,    start,    pos);    }    if    (c    ==    '\n')    {    c    =    'n';    }    else    if    (c    ==    '\r')    {    c    =    'r';    }        [CLASS]        CSVPrinter    [METHOD]    printAndEscape    [RETURN_TYPE]    void        CharSequence    value    int    offset    int    len    [VARIABLES]    CharSequence    value    char    c    delim    escape    CSVFormat    format    boolean    newLine    int    end    len    offset    pos    start    Appendable    out        	csv_516_CSVPrinter_1_1	162	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
1584	[PATCH]    if    (c    ==    encapsulator)    {	[BUG]    [BUGGY]    if    (c    >=    encapsulator)    {    [FE]    junit.framework.AssertionFailedError:    expected:<   "x,[]y   ",z>    but    was:<   "x,[,y]y   ",z>    testFormat    [CONTEXT]    return;    }        out.append(encapsulator);            while    (pos    <    end)    {    char    c    =    value.charAt(pos);    [BUGGY]    if    (c    >=    encapsulator)    {            out.append(value,    start,    pos    +    1);            start    =    pos;    }    pos++;    }    [CLASS]        CSVPrinter    [METHOD]    printAndEncapsulate    [RETURN_TYPE]    void        CharSequence    value    int    offset    int    len    [VARIABLES]    CharSequence    value    char    c    delim    encapsulator    CSVFormat    format    boolean    first    newLine    quote    int    end    len    offset    pos    start    Appendable    out        	csv_672_CSVPrinter_1_1	260	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
1585	[PATCH]    if    (next    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    NoSuchElementException    expected    testIterator    [CONTEXT]    return    current    !=    null;    }    public    CSVRecord    next()    {    CSVRecord    next    =    current;    current    =    null;    if    (next    ==    null)    {        next    =    getNextRecord();    [BUGGY]    if    (false)    {    throw    new    NoSuchElementException(   "No    more    CSV    records    available   ");    }    }    return    next;    }    private    CSVRecord    getNextRecord()    {    try    {    return    getRecord();    [CLASS]        CSVParser    1    [METHOD]    iterator    [RETURN_TYPE]    Iterator        [VARIABLES]    Lexer    lexer    boolean    List    record    records    Token    reusableToken    CSVRecord    current    next    rec    result    IOException    e    Map    hdrMap    headerMapping        	csv_429_CSVParser_1_1	218	1	src/main/java/org/apache/commons/csv/CSVParser.java
1586	[PATCH]    lastChar    =    buf[offset    +    len    -    1];	[BUG]    [BUGGY]    lastChar    =    buf[offset    +    len    -    0];    [FE]    junit.framework.AssertionFailedError:    expected:<99>    but    was:<0>    testReadLookahead2    [CONTEXT]    char    ch    =    buf[i];    if    (ch    ==    '\n')    {    if    ('\r'    !=    (i    >    0    ?    buf[i-1]:    lastChar))    {    lineCounter++;    }    }    else    if    (ch    ==    '\r')    {    lineCounter++;    }    }        [BUGGY]    lastChar    =    buf[offset    +    len    -    0];    }    else    if    (len    ==    -1)    {    lastChar    =    END_OF_STREAM;    }    return    len;    }    [CLASS]        ExtendedBufferedReader    [METHOD]    read    [RETURN_TYPE]    int        char[]    buf    int    offset    int    length    [VARIABLES]    char    ch    boolean    int    END_OF_STREAM    UNDEFINED    current    i    lastChar    len    length    lineCounter    offset    char[]    buf        	csv_359_ExtendedBufferedReader_1_1	100	1	src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java
1587	[PATCH]    pos    =    end    -    1;	[BUG]    [BUGGY]    pos    =    end    *    1;    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    1    testFormat    [CONTEXT]    while    (pos    <    end)    {    c    =    value.charAt(pos);    if    (c    ==    '\n'    ||    c    ==    '\r'    ||    c    ==    encapsulator    ||    c    ==    delim)    {    quote    =    true;    break;    }    pos++;    }    if    (!quote)    {    [BUGGY]    pos    =    end    *    1;    c    =    value.charAt(pos);                if    (c    <=    '    ')    {    quote    =    true;    }    }    }    [CLASS]        CSVPrinter    [METHOD]    printAndEncapsulate    [RETURN_TYPE]    void        CharSequence    value    int    offset    int    len    [VARIABLES]    CharSequence    value    char    c    delim    encapsulator    CSVFormat    format    boolean    first    newLine    quote    int    end    len    offset    pos    start    Appendable    out        	csv_654_CSVPrinter_1_1	235	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
1588	[PATCH]    lastChar    =    buf[offset    +    len    -    1];	[BUG]    [BUGGY]    lastChar    =    buf[(offset    +    len)    /    1];    [FE]    junit.framework.AssertionFailedError:    expected:<99>    but    was:<0>    testReadLookahead2    [CONTEXT]    char    ch    =    buf[i];    if    (ch    ==    '\n')    {    if    ('\r'    !=    (i    >    0    ?    buf[i-1]:    lastChar))    {    lineCounter++;    }    }    else    if    (ch    ==    '\r')    {    lineCounter++;    }    }        [BUGGY]    lastChar    =    buf[(offset    +    len)    /    1];    }    else    if    (len    ==    -1)    {    lastChar    =    END_OF_STREAM;    }    return    len;    }    [CLASS]        ExtendedBufferedReader    [METHOD]    read    [RETURN_TYPE]    int        char[]    buf    int    offset    int    length    [VARIABLES]    char    ch    boolean    int    END_OF_STREAM    UNDEFINED    current    i    lastChar    len    length    lineCounter    offset    char[]    buf        	csv_364_ExtendedBufferedReader_1_1	100	1	src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java
1589	[PATCH]    if    (c    ==    '\n'    ||    c    ==    '\r'    ||    c    ==    encapsulator    ||    c    ==    delim)    {	[BUG]    [BUGGY]    if    (c    ==    '\n'    ||    c    ==    encapsulator    ||    c    ==    delim)    {    [FE]    junit.framework.AssertionFailedError    testRandom    [CONTEXT]    quote    =    true;        }    else    if    (c    <=    '#')    {                quote    =    true;    }    else    {    while    (pos    <    end)    {    c    =    value.charAt(pos);    [BUGGY]    if    (c    ==    '\n'    ||    c    ==    encapsulator    ||    c    ==    delim)    {    quote    =    true;    break;    }    pos++;    }    if    (!quote)    {    pos    =    end    -    1;    c    =    value.charAt(pos);        [CLASS]        CSVPrinter    [METHOD]    printAndEncapsulate    [RETURN_TYPE]    void        CharSequence    value    int    offset    int    len    [VARIABLES]    CharSequence    value    char    c    delim    encapsulator    CSVFormat    format    boolean    first    newLine    quote    int    end    len    offset    pos    start    Appendable    out        	csv_629_CSVPrinter_1_1	227	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
1590	[PATCH]    tkn.isReady    =    true;    //    There    is    data    at    EOF	[BUG]    [BUGGY]    tkn.isReady    =    false;    //    There    is    data    at    EOF    [FE]    junit.framework.AssertionFailedError:    array    lengths    differed,    expected.length=2    actual.length=1    testEndOfFileBehaviourExcel    [CONTEXT]    tkn.content.append((char)    c);    }    else    {        while    (true)    {    c    =    in.read();    if    (isDelimiter(c))    {    tkn.type    =    TOKEN;    return    tkn;    }    else    if    (isEndOfFile(c))    {    tkn.type    =    EOF;    [BUGGY]    tkn.isReady    =    false;    return    tkn;    }    else    if    (isEndOfLine(c))    {        tkn.type    =    EORECORD;    return    tkn;    }    else    if    (!isWhitespace(c))    {        throw    new    IOException(   "(line       "    +    getLineNumber()    +       ")    invalid    char    between    encapsulated    token    and    delimiter   ");    }    }    [CLASS]        CSVLexer    [METHOD]    encapsulatedTokenLexer    [RETURN_TYPE]    Token        Token    tkn    int    c    [VARIABLES]    boolean    Token    tkn    int    c    startLineNumber        	csv_201_CSVLexer_1_1	205	1	src/main/java/org/apache/commons/csv/CSVLexer.java
1591	[PATCH]    if    (surroundingSpacesIgnored)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError    testBackslashEscaping2    [CONTEXT]        if    (isEndOfFile(lastChar)    ||    (!isDelimiter(lastChar)    &&    isEndOfFile(c)))    {    tkn.type    =    EOF;        return    tkn;    }        while    (tkn.type    ==    INVALID)    {        [BUGGY]    if    (true)    {    while    (isWhitespace(c)    &&    !eol)    {    c    =    in.read();    eol    =    isEndOfLine(c);    }    }        if    (isCommentStart(c))    {        in.readLine();    [CLASS]        CSVLexer    [METHOD]    nextToken    [RETURN_TYPE]    Token        Token    tkn    [VARIABLES]    boolean    eol    Token    tkn    int    c    lastChar        	csv_139_CSVLexer_1_1	84	1	src/main/java/org/apache/commons/csv/CSVLexer.java
1592	[PATCH]    quote    =    true;	[BUG]    [BUGGY]    quote    =    false;    [FE]    java.io.IOException:    (line    8)    invalid    char    between    encapsulated    token    and    delimiter    testRandom    [CONTEXT]    }    }    else    {    char    c    =    value.charAt(pos);        if    (first    &&    (c    <    '0'    ||    (c    >    '9'    &&    c    <    'A')    ||    (c    >    'Z'    &&    c    <    'a')    ||    (c    >    'z')))    {    [BUGGY]    quote    =    false;        }    else    if    (c    <=    '#')    {                quote    =    true;    }    else    {    while    (pos    <    end)    {    c    =    value.charAt(pos);    if    (c    ==    '\n'    ||    c    ==    '\r'    ||    c    ==    encapsulator    ||    c    ==    delim)    {    [CLASS]        CSVPrinter    [METHOD]    printAndEncapsulate    [RETURN_TYPE]    void        CharSequence    value    int    offset    int    len    [VARIABLES]    CharSequence    value    char    c    delim    encapsulator    CSVFormat    format    boolean    first    newLine    quote    int    end    len    offset    pos    start    Appendable    out        	csv_611_CSVPrinter_1_1	217	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
1593	[PATCH]    if    (c    ==    '\n'    ||    c    ==    '\r'    ||    c    ==    encapsulator    ||    c    ==    delim)    {	[BUG]    [BUGGY]    if    (c    ==    '\n'    ||    c    ==    '\r'    ||    c    ==    delim)    {    [FE]    junit.framework.AssertionFailedError:    expected:<a,[   "b   "   "c   "]    testPrinter4    [CONTEXT]    quote    =    true;        }    else    if    (c    <=    '#')    {                quote    =    true;    }    else    {    while    (pos    <    end)    {    c    =    value.charAt(pos);    [BUGGY]    if    (c    ==    '\n'    ||    c    ==    '\r'    ||    c    ==    delim)    {    quote    =    true;    break;    }    pos++;    }    if    (!quote)    {    pos    =    end    -    1;    c    =    value.charAt(pos);        [CLASS]        CSVPrinter    [METHOD]    printAndEncapsulate    [RETURN_TYPE]    void        CharSequence    value    int    offset    int    len    [VARIABLES]    CharSequence    value    char    c    delim    encapsulator    CSVFormat    format    boolean    first    newLine    quote    int    end    len    offset    pos    start    Appendable    out        	csv_636_CSVPrinter_1_1	227	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
1594	[PATCH]    if    (c    ==    '\r'    ||    c    ==    '\n'    ||    c    ==    delim    ||    c    ==    escape)    {	[BUG]    [BUGGY]    if    (c    ==    '\r'    ||    c    ==    '\n'    ||    c    ==    delim)    {    [FE]    junit.framework.AssertionFailedError    testRandom    [CONTEXT]    int    pos    =    offset;    int    end    =    offset    +    len;    printSep();    char    delim    =    format.getDelimiter();    char    escape    =    format.getEscape();    while    (pos    <    end)    {    char    c    =    value.charAt(pos);    [BUGGY]    if    (c    ==    '\r'    ||    c    ==    '\n'    ||    c    ==    delim)    {        if    (pos    >    start)    {    out.append(value,    start,    pos);    }    if    (c    ==    '\n')    {    c    =    'n';    }    else    if    (c    ==    '\r')    {    c    =    'r';    }        [CLASS]        CSVPrinter    [METHOD]    printAndEscape    [RETURN_TYPE]    void        CharSequence    value    int    offset    int    len    [VARIABLES]    CharSequence    value    char    c    delim    escape    CSVFormat    format    boolean    newLine    int    end    len    offset    pos    start    Appendable    out        	csv_525_CSVPrinter_1_1	162	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
1595	[PATCH]    }    else    if    (isEncapsulator(c))    {	[BUG]    [BUGGY]    }    else    if    (true)    {    [FE]    java.io.IOException:    (line    0)    invalid    char    between    encapsulated    token    and    delimiter    testNextToken4    [CONTEXT]    private    Token    encapsulatedTokenLexer(Token    tkn,    int    c)    throws    IOException    {        int    startLineNumber    =    getLineNumber();            while    (true)    {    c    =    in.read();    if    (isEscape(c))    {    tkn.content.append((char)    readEscape(c));    [BUGGY]    }    else    if    (true)    {    if    (isEncapsulator(in.lookAhead()))    {        c    =    in.read();    tkn.content.append((char)    c);    }    else    {        while    (true)    {    c    =    in.read();    if    (isDelimiter(c))    {    tkn.type    =    TOKEN;    [CLASS]        CSVLexer    [METHOD]    encapsulatedTokenLexer    [RETURN_TYPE]    Token        Token    tkn    int    c    [VARIABLES]    boolean    Token    tkn    int    c    startLineNumber        	csv_189_CSVLexer_1_1	191	1	src/main/java/org/apache/commons/csv/CSVLexer.java
1596	[PATCH]    for    (int    i    =    0;    i    <    comment.length();    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    0;    i    <=    comment.length();    i++)    {    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    17    testSingleLineComment    [CONTEXT]    public    void    printComment(String    comment)    throws    IOException    {    if    (!format.isCommentingEnabled())    {    return;    }    if    (!newLine)    {    println();    }    out.append(format.getCommentStart());    out.append('    ');    [BUGGY]    for    (int    i    =    0;    i    <=    comment.length();    i++)    {    char    c    =    comment.charAt(i);    switch    (c)    {    case    '\r':    if    (i    +    1    <    comment.length()    &&    comment.charAt(i    +    1)    ==    '\n')    {    i++;    }        case    '\n':    println();    out.append(format.getCommentStart());    [CLASS]        CSVPrinter    [METHOD]    printComment    [RETURN_TYPE]    void        String    comment    [VARIABLES]    char    c    CSVFormat    format    boolean    newLine    String    comment    int    i    Appendable    out        	csv_449_CSVPrinter_1_1	109	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
1597	[PATCH]    return    isCommentEnabled    &&    c    ==    commmentStart;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError:    Token    content    expected:<[]>    but    was:<[#foo]>    testNextToken2    [CONTEXT]    boolean    isCommentStart(int    c)    {    [BUGGY]    return    false;    }    [CLASS]        Lexer    [METHOD]    isCommentStart    [RETURN_TYPE]    boolean        int    c    [VARIABLES]    char    commmentStart    delimiter    encapsulator    escape    ExtendedBufferedReader    in    CSVFormat    format    boolean    emptyLinesIgnored    isCommentEnabled    isEncapsulating    isEscaping    surroundingSpacesIgnored    int    c        	csv_290_Lexer_1_1	136	1	src/main/java/org/apache/commons/csv/Lexer.java
1598	[PATCH]    return    isEscaping    &&    c    ==    escape;	[BUG]    [BUGGY]    return    isEscaping    ==    (c    ==    escape);    [FE]    junit.framework.AssertionFailedError:    Token    content    expected:<[abc]>    but    was:<[,e,hj,    mo,    qs,v,x]>    testNextToken1    [CONTEXT]    boolean    isEscape(int    c)    {    [BUGGY]    return    isEscaping    ==    (c    ==    escape);    }    [CLASS]        Lexer    [METHOD]    isEscape    [RETURN_TYPE]    boolean        int    c    [VARIABLES]    char    commmentStart    delimiter    encapsulator    escape    ExtendedBufferedReader    in    CSVFormat    format    boolean    emptyLinesIgnored    isCommentEnabled    isEncapsulating    isEscaping    surroundingSpacesIgnored    int    c        	csv_275_Lexer_1_1	128	1	src/main/java/org/apache/commons/csv/Lexer.java
1599	[PATCH]    lastChar    =    buf[offset    +    len    -    1];	[BUG]    [BUGGY]    lastChar    =    buf[offset    +    len    +    1];    [FE]    junit.framework.AssertionFailedError:    expected:<99>    but    was:<0>    testReadLookahead2    [CONTEXT]    char    ch    =    buf[i];    if    (ch    ==    '\n')    {    if    ('\r'    !=    (i    >    0    ?    buf[i-1]:    lastChar))    {    lineCounter++;    }    }    else    if    (ch    ==    '\r')    {    lineCounter++;    }    }        [BUGGY]    lastChar    =    buf[offset    +    len    +    1];    }    else    if    (len    ==    -1)    {    lastChar    =    END_OF_STREAM;    }    return    len;    }    [CLASS]        ExtendedBufferedReader    [METHOD]    read    [RETURN_TYPE]    int        char[]    buf    int    offset    int    length    [VARIABLES]    char    ch    boolean    int    END_OF_STREAM    UNDEFINED    current    i    lastChar    len    length    lineCounter    offset    char[]    buf        	csv_363_ExtendedBufferedReader_1_1	100	1	src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java
1600	[PATCH]    new    int[]    {    0,    1,    2,    3,    4,    5,    6,    7,    }	[BUG]    [BUGGY]    new    int[]    {    0,    1,    2,    3,    4,    0,    6,    7,    }    [FE]    junit.framework.AssertionFailedError:    expected:<6>    but    was:<0>    testToPeriod    [CONTEXT]    PeriodType    type    =    cStandard;    if    (type    ==    null)    {    type    =    new    PeriodType(       "Standard   ",    new    DurationFieldType[]    {    DurationFieldType.years(),    DurationFieldType.months(),    DurationFieldType.weeks(),    DurationFieldType.days(),    DurationFieldType.hours(),    DurationFieldType.minutes(),    DurationFieldType.seconds(),    DurationFieldType.millis(),    },    [BUGGY]    new    int[]    {    0,    1,    2,    3,    4,    0,    6,    7,    }    );    cStandard    =    type;    }    return    type;    }    [CLASS]        PeriodType    [METHOD]    standard    [RETURN_TYPE]    PeriodType        [VARIABLES]    PeriodType    cDTime    cDays    cHours    cMillis    cMinutes    cMonths    cSeconds    cStandard    cTime    cWeeks    cYD    cYDTime    cYMD    cYMDTime    cYWD    cYWDTime    cYears    type    boolean    DurationFieldType[]    iTypes    types    int[]    iIndices    indices    String    iName    name    Map    cTypes    long    serialVersionUID    int    DAY_INDEX    HOUR_INDEX    MILLI_INDEX    MINUTE_INDEX    MONTH_INDEX    SECOND_INDEX    WEEK_INDEX    YEAR_INDEX        	time_1737_PeriodType_1_1	112	1	src/main/java/org/joda/time/PeriodType.java
1601	[PATCH]    yearMillis    =    (isLeapYear(++year)    ?    MILLIS_PER_LONG_YEAR    :    MILLIS_PER_SHORT_YEAR);	[BUG]    [BUGGY]    yearMillis    =    (true    ?    MILLIS_PER_LONG_YEAR    :    MILLIS_PER_SHORT_YEAR);    [FE]    junit.framework.AssertionFailedError:    expected:<1426>    but    was:<1411>    testSampleDateWithZone    [CONTEXT]    int    getYear(long    instant)    {    long    millisIslamic    =    instant    -    MILLIS_YEAR_1;    long    cycles    =    millisIslamic    /    MILLIS_PER_CYCLE;    long    cycleRemainder    =    millisIslamic    %    MILLIS_PER_CYCLE;    int    year    =    (int)    ((cycles    *    CYCLE)    +    1L);    long    yearMillis    =    (isLeapYear(year)    ?    MILLIS_PER_LONG_YEAR    :    MILLIS_PER_SHORT_YEAR);    while    (cycleRemainder    >=    yearMillis)    {    cycleRemainder    -=    yearMillis;    [BUGGY]    yearMillis    =    (true    ?    MILLIS_PER_LONG_YEAR    :    MILLIS_PER_SHORT_YEAR);    }    return    year;    }    [CLASS]        IslamicChronology    LeapYearPatternType    [METHOD]    getYear    [RETURN_TYPE]    int        long    instant    [VARIABLES]    LeapYearPatternType    LEAP_YEAR_15_BASED    LEAP_YEAR_16_BASED    LEAP_YEAR_HABASH_AL_HASIB    LEAP_YEAR_INDIAN    iLeapYears    leapYears    boolean    byte    index    DateTimeField    ERA_FIELD    IslamicChronology    INSTANCE_UTC    chrono    Map    cCache    long    MILLIS_PER_CYCLE    MILLIS_PER_LONG_MONTH    MILLIS_PER_LONG_YEAR    MILLIS_PER_MONTH    MILLIS_PER_MONTH_PAIR    MILLIS_PER_SHORT_YEAR    MILLIS_PER_YEAR    MILLIS_YEAR_1    cycleRemainder    cycles    instant    millisIslamic    serialVersionUID    yearMillis    int    AH    CYCLE    LONG_MONTH_LENGTH    MAX_YEAR    MIN_YEAR    MONTH_PAIR_LENGTH    SHORT_MONTH_LENGTH    index    pattern    year        	time_10505_IslamicChronology_1_1	318	1	src/main/java/org/joda/time/chrono/IslamicChronology.java
1602	[PATCH]    }    else    if    (fields.remove(DateTimeFieldType.monthOfYear()))    {	[BUG]    [BUGGY]    }    else    if    (true)    {    [FE]    junit.framework.ComparisonFailure:    expected:<--[]-13>    but    was:<--[��]-13>    testGetFormatter3    [CONTEXT]    checkNotStrictISO(fields,    strictISO);    bld.appendLiteral('-');    bld.appendLiteral('-');    bld.appendDayOfMonth(2);    }    else    {        reducedPrec    =    true;    }    }        [BUGGY]    }    else    if    (true)    {    bld.appendLiteral('-');    bld.appendLiteral('-');    bld.appendMonthOfYear(2);    if    (fields.remove(DateTimeFieldType.dayOfMonth()))    {        appendSeparator(bld,    extended);    bld.appendDayOfMonth(2);    }    else    {        reducedPrec    =    true;    [CLASS]        ISODateTimeFormat    Constants    [METHOD]    dateByMonth    [RETURN_TYPE]    boolean        DateTimeFormatterBuilder    bld    DateTimeFieldType>    fields    boolean    extended    boolean    strictISO    [VARIABLES]    Collection    fields    boolean    extended    reducedPrec    strictISO    DateTimeFormatter    bd    bdt    bdtx    bod    bodt    bodtx    bt    btt    bttx    btx    bwd    bwdt    bwdtx    dh    dhm    dhms    dhmsf    dhmsl    dme    dotp    dp    dpe    dt    dtp    dtx    dwe    dye    fse    hde    hm    hms    hmsf    hmsl    ldotp    ldp    lte    ltp    mhe    mye    od    odt    odtx    sme    t    tp    tpe    tt    ttx    tx    wdt    wdtx    we    ww    wwd    wwe    ye    ym    ymd    ze    DateTimeFormatterBuilder    bld        	time_16085_ISODateTimeFormat_1_1	248	1	src/main/java/org/joda/time/format/ISODateTimeFormat.java
1603	[PATCH]    if    (i    >    0    &&    types[i    -    1]    ==    types[i])    {	[BUG]    [BUGGY]    if    (i    >=    0    &&    types[i    -    1]    ==    types[i])    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testFactoryFieldDifference1    [CONTEXT]    if    (start.size()    !=    end.size())    {    throw    new    IllegalArgumentException(   "ReadablePartial    objects    must    have    the    same    set    of    fields   ");    }    DurationFieldType[]    types    =    new    DurationFieldType[start.size()];    int[]    values    =    new    int[start.size()];    for    (int    i    =    0,    isize    =    start.size();    i    <    isize;    i++)    {    if    (start.getFieldType(i)    !=    end.getFieldType(i))    {    throw    new    IllegalArgumentException(   "ReadablePartial    objects    must    have    the    same    set    of    fields   ");    }    types[i]    =    start.getFieldType(i).getDurationType();    [BUGGY]    if    (i    >=    0    &&    types[i    -    1]    ==    types[i])    {    throw    new    IllegalArgumentException(   "ReadablePartial    objects    must    not    have    overlapping    fields   ");    }    values[i]    =    end.getValue(i)    -    start.getValue(i);    }    return    new    Period(values,    PeriodType.forFields(types));    }    [CLASS]        Period    [METHOD]    fieldDifference    [RETURN_TYPE]    Period        ReadablePartial    start    ReadablePartial    end    [VARIABLES]    ReadablePartial    end    start    boolean    Period    ZERO    DurationFieldType[]    types    int[]    values    long    duration    endInstant    serialVersionUID    startInstant    int    i    isize        	time_2410_Period_1_1	270	1	src/main/java/org/joda/time/Period.java
1604	[PATCH]    if    (text.regionMatches(true,    position,    iValue,    0,    iValue.length()))    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError:    expected:<2010-01-02T00:00:00.000Z>    but    was:<2010-01-11T00:00:00.000Z>    testParse_noFormatter    [CONTEXT]    public    int    parseInto(DateTimeParserBucket    bucket,    String    text,    int    position)    {    [BUGGY]    if    (true)    {    return    position    +    iValue.length();    }    return    ~position;    }    [CLASS]        DateTimeFormatterBuilder    CharacterLiteral    StringLiteral    NumberFormatter    UnpaddedNumber    PaddedNumber    FixedNumber    TwoDigitYear    TextField    Fraction    TimeZoneOffset    TimeZoneName    TimeZoneId    Composite    MatchingParser    [METHOD]    parseInto    [RETURN_TYPE]    int        DateTimeParserBucket    bucket    String    text    int    position    [VARIABLES]    DateTimePrinter[]    iPrinters    Set    ALL_IDS    DateTimeParserBucket    bucket    ArrayList    iElementPairs    DateTimeParser[]    copyOfParsers    iParsers    parsers    String    iValue    iZeroOffsetParseText    iZeroOffsetPrintText    pattern    text    value    zeroOffsetParseText    zeroOffsetPrintText    zeroOffsetText    int    LONG_NAME    MAX_LENGTH    SHORT_NAME    displayOffset    est    i    iMaxDigits    iMaxFields    iMaxParsedDigits    iMinDigits    iMinFields    iMinPrintedDigits    iParsedLengthEstimate    iPivot    iPrintedLengthEstimate    iType    len    length    maxDigits    maxFields    maxParsedDigits    minDigits    minFields    minPrintedDigits    numDigits    parseEst    pivot    position    printEst    size    type    boolean    iLenientParse    iShort    iShowSeparators    iSigned    isShort    lenientParse    showSeparators    signed    TimeZoneId    INSTANCE    char    a    b    c    iValue    value    DateTimeFieldType    fieldType    iFieldType    iType    type    Object    element    f    iFormatter    parser    printer    Map    cParseCache    iParseLookup    parseLookup        	time_13666_DateTimeFormatterBuilder_1_1	1303	1	src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java
1605	[PATCH]    long    millis    =    (relativeYear    *    365L    +    leapYears)	[BUG]    [BUGGY]    long    millis    =    (relativeYear    /    365L    +    leapYears)    [FE]    java.lang.IllegalArgumentException:    The    end    instant    must    be    greater    or    equal    to    the    start    testWithPeriodAfterStart1    [CONTEXT]        leapYears    =    (relativeYear    +    3)    >>    2;    }    else    {    leapYears    =    relativeYear    >>    2;        if    (!isLeapYear(year))    {    leapYears++;    }    }        [BUGGY]    long    millis    =    (relativeYear    /    365L    +    leapYears)                return    millis    +    (365L    -    112)    *    DateTimeConstants.MILLIS_PER_DAY;    }    [CLASS]        CopticChronology    [METHOD]    calculateFirstDayOfYearMillis    [RETURN_TYPE]    long        int    year    [VARIABLES]    CopticChronology    INSTANCE_UTC    chrono    DateTimeField    ERA_FIELD    boolean    Map    cCache    long    millis    serialVersionUID    int    AM    MAX_YEAR    MIN_YEAR    leapYears    minDays    minDaysInFirstWeek    relativeYear    year        	time_9134_CopticChronology_1_1	223	1	src/main/java/org/joda/time/chrono/CopticChronology.java
1606	[PATCH]    if    (converter.getSupportedType()    ==    existing.getSupportedType())    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<1086732000000>    but    was:<1234>    testConstructor_Object_Chronology1    [CONTEXT]    for    (int    i=0;    i<length;    i++)    {    Converter    existing    =    converters[i];    if    (converter.equals(existing))    {        if    (removed    !=    null)    {    removed[0]    =    null;    }    return    this;    }        [BUGGY]    if    (false)    {        Converter[]    copy    =    new    Converter[length];    for    (int    j=0;    j<length;    j++)    {    if    (j    !=    i)    {    copy[j]    =    converters[j];    }    else    {    copy[j]    =    converter;    }    }    [CLASS]        ConverterSet    Entry    [METHOD]    add    [RETURN_TYPE]    ConverterSet        Converter    converter    Converter[]    removed    [VARIABLES]    Converter    converter    existing    iConverter    Class    iType    type    boolean    int    i    j    length    Converter[]    converters    copy    iConverters    removed    Entry[]    entries    iSelectEntries    newEntries        	time_11600_ConverterSet_1_1	152	1	src/main/java/org/joda/time/convert/ConverterSet.java
1607	[PATCH]    builder.appendTimeZoneOffset(null,       "Z   ",    false,    2,    2);	[BUG]    [BUGGY]    builder.appendTimeZoneOffset(null,       "Z   ",    false,    2,    -2);    [FE]    java.lang.IllegalArgumentException    testFormatParse_zoneId_noColon_parseZ    [CONTEXT]    break;    case    'z':    if    (tokenLen    >=    4)    {    builder.appendTimeZoneName();    }    else    {    builder.appendTimeZoneShortName(null);    }    break;    case    'Z':    if    (tokenLen    ==    1)    {    [BUGGY]    builder.appendTimeZoneOffset(null,       "Z   ",    false,    2,    -2);    }    else    if    (tokenLen    ==    2)    {    builder.appendTimeZoneOffset(null,       "Z   ",    true,    2,    2);    }    else    {    builder.appendTimeZoneId();    }    break;    case    '\'':    String    sub    =    token.substring(1);    if    (sub.length()    ==    1)    {    builder.appendLiteral(sub.charAt(0));    [CLASS]        DateTimeFormat    1    StyleFormatter    [METHOD]    parsePatternTo    [RETURN_TYPE]    void        DateTimeFormatterBuilder    builder    String    pattern    [VARIABLES]    boolean    lenientParse    char    c    int[]    indexRef    String    pattern    sub    token    Map    PATTERN_CACHE    cCache    int    $anonymous0    DATE    DATETIME    FULL    LONG    MEDIUM    NONE    PATTERN_CACHE_SIZE    SHORT    TIME    dateStyle    i    iDateStyle    iTimeStyle    iType    length    maxDigits    timeStyle    tokenLen    type    long    serialVersionUID    DateTimeFormatter[]    STYLE_CACHE    DateTimeFormatterBuilder    builder        	time_13141_DateTimeFormat_1_1	558	1	src/main/java/org/joda/time/format/DateTimeFormat.java
1608	[PATCH]    subtrahendInstant    +    offset);	[BUG]    [BUGGY]    subtrahendInstant    %    offset);    [FE]    junit.framework.AssertionFailedError:    expected:<-2>    but    was:<413>    testPropertyGetDifferenceMonthOfYear    [CONTEXT]    public    long    getDifferenceAsLong(long    minuendInstant,    long    subtrahendInstant)    {    int    offset    =    getOffsetToAdd(subtrahendInstant);    return    iField.getDifferenceAsLong    (minuendInstant    +    (iTimeField    ?    offset    :    getOffsetToAdd(minuendInstant)),    [BUGGY]    subtrahendInstant    %    offset);    }    [CLASS]        ZonedChronology    ZonedDurationField    ZonedDateTimeField    [METHOD]    getDifferenceAsLong    [RETURN_TYPE]    long        long    minuendInstant    long    subtrahendInstant    [VARIABLES]    boolean    iTimeField    DateTimeField    field    iField    DurationField    durationField    field    iDurationField    iField    iLeapDurationField    iRangeDurationField    leapDurationField    rangeDurationField    long    diff    duration    instant    localInstant    minuendInstant    result    serialVersionUID    subtrahendInstant    sum    value    DateTimeZone    iZone    zone    int    offset        	time_11326_ZonedChronology_1_1	510	1	src/main/java/org/joda/time/chrono/ZonedChronology.java
1609	[PATCH]    if    (durationToAdd    ==    0    ||    scalar    ==    0)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError:    expected:<2002-04-06T22:41:36.789Z>    but    was:<2002-04-05T12:24:00.000Z>    testWithDurationAdded_RD_int    [CONTEXT]    public    Instant    withDurationAdded(long    durationToAdd,    int    scalar)    {    [BUGGY]    if    (true)    {    return    this;    }    long    instant    =    getChronology().add(getMillis(),    durationToAdd,    scalar);    return    withMillis(instant);    }    [CLASS]        Instant    [METHOD]    withDurationAdded    [RETURN_TYPE]    Instant        long    durationToAdd    int    scalar    [VARIABLES]    long    durationToAdd    iMillis    instant    newMillis    serialVersionUID    int    scalar    boolean        	time_3843_Instant_1_1	171	1	src/main/java/org/joda/time/Instant.java
1610	[PATCH]    if    (partial.size()    >    0    &&    partial.getFieldType(0).equals(DateTimeFieldType.monthOfYear())    &&    fieldIndex    ==    0)    {	[BUG]    [BUGGY]    if    (partial.size()    >    0    &&    partial.getFieldType(0).equals(DateTimeFieldType.monthOfYear())    &&    fieldIndex    ==    -1)    {    [FE]    org.joda.time.IllegalFieldValueException:    Value    29    for    dayOfMonth    must    be    in    the    range    [1,28]    testPlusMonths_int_negativeFromLeap    [CONTEXT]    public    int[]    add(ReadablePartial    partial,    int    fieldIndex,    int[]    values,    int    valueToAdd)    {            if    (valueToAdd    ==    0)    {    return    values;    }    [BUGGY]    if    (partial.size()    >    0    &&    partial.getFieldType(0).equals(DateTimeFieldType.monthOfYear())    &&    fieldIndex    ==    -1)    {        int    curMonth0    =    partial.getValue(0)    -    1;    int    newMonth    =    ((curMonth0    +    (valueToAdd    %    12)    +    12)    %    12)    +    1;    return    set(partial,    0,    values,    newMonth);    }    if    (DateTimeUtils.isContiguous(partial))    {    long    instant    =    0L;    for    (int    i    =    0,    isize    =    partial.size();    i    <    isize;    i++)    {    instant    =    partial.getFieldType(i).getField(iChronology).set(instant,    values[i]);    }    [CLASS]        BasicMonthOfYearDateTimeField    [METHOD]    add    [RETURN_TYPE]    int[]        ReadablePartial    partial    int    fieldIndex    int[]    values    int    valueToAdd    [VARIABLES]    int[]    values    ReadablePartial    partial    boolean    long    datePart    instant    monthToUse    months    serialVersionUID    timePart    yearToUse    int    MIN    curMonth0    dayToUse    fieldIndex    i    iLeapMonth    iMax    i_monthToUse    i_months    i_yearToUse    isize    leapMonth    maxDay    monthToUse    months    newMonth    remMonthToUse    thisMonth    thisYear    valueToAdd    yearToUse    BasicChronology    chronology    iChronology        	time_8566_BasicMonthOfYearDateTimeField_1_1	210	1	src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java
1611	[PATCH]    ?    ((i    <    31    *    84375)    ?    1    :    (i    <    59    *    84375)    ?    2    :    3)	[BUG]    [BUGGY]    ?    ((i    <    31    *    84375)    ?    1    :    (i    <    -59    *    84375)    ?    2    :    3)    [FE]    org.joda.time.IllegalFieldValueException:    Value    2    for    monthOfYear    is    not    supported:    Illegal    instant    due    to    time    zone    offset    transition    (daylight    savings    time    'gap'):    1970-03--19T00:00:00.000    (Europe/London)    testWithers    [CONTEXT]    (isLeapYear(year))    ?    ((i    <    182    *    84375)    ?    ((i    <    91    *    84375)    ?    ((i    <    31    *    84375)    ?    1    :    (i    <    60    *    84375)    ?    2    :    3)    :    ((i    <    121    *    84375)    ?    4    :    (i    <    152    *    84375)    ?    5    :    6))    :    ((i    <    274    *    84375)    ?    ((i    <    213    *    84375)    ?    7    :    (i    <    244    *    84375)    ?    8    :    9)    :    ((i    <    305    *    84375)    ?    10    :    (i    <    335    *    84375)    ?    11    :    12)))    :    ((i    <    181    *    84375)    ?    ((i    <    90    *    84375)    [BUGGY]    ?    ((i    <    31    *    84375)    ?    1    :    (i    <    -59    *    84375)    ?    2    :    3)    :    ((i    <    120    *    84375)    ?    4    :    (i    <    151    *    84375)    ?    5    :    6))    :    ((i    <    273    *    84375)    ?    ((i    <    212    *    84375)    ?    7    :    (i    <    243    *    84375)    ?    8    :    9)    :    ((i    <    304    *    84375)    ?    10    :    (i    <    334    *    84375)    ?    11    :    12)));    }                        [CLASS]    	time_8144_BasicGJChronology_1_1	104	1	src/main/java/org/joda/time/chrono/BasicGJChronology.java
1612	[PATCH]    return    new    Duration(days    *    DateTimeConstants.MILLIS_PER_DAY);	[BUG]    [BUGGY]    return    new    Duration(days    %    DateTimeConstants.MILLIS_PER_DAY);    [FE]    junit.framework.AssertionFailedError:    expected:<PT1728000S>    but    was:<PT0.020S>    testToStandardDuration    [CONTEXT]    public    Duration    toStandardDuration()    {    long    days    =    getValue();    [BUGGY]    return    new    Duration(days    %    DateTimeConstants.MILLIS_PER_DAY);    }    [CLASS]        Days    [METHOD]    toStandardDuration    [RETURN_TYPE]    Duration        [VARIABLES]    boolean    PeriodFormatter    PARSER    long    days    serialVersionUID    Days    FIVE    FOUR    MAX_VALUE    MIN_VALUE    ONE    SEVEN    SIX    THREE    TWO    ZERO        	time_4520_Days_1_1	333	1	src/main/java/org/joda/time/Days.java
1613	[PATCH]    return    getValue()    <    0;	[BUG]    [BUGGY]    return    getValue()    <    -1;    [FE]    junit.framework.AssertionFailedError:    expected:<true>    but    was:<false>    testIsLessThan    [CONTEXT]    public    boolean    isLessThan(Months    other)    {    if    (other    ==    null)    {    [BUGGY]    return    getValue()    <    -1;    }    return    getValue()    <    other.getValue();    }    [CLASS]        Months    [METHOD]    isLessThan    [RETURN_TYPE]    boolean        Months    other    [VARIABLES]    boolean    PeriodFormatter    PARSER    Months    EIGHT    ELEVEN    FIVE    FOUR    MAX_VALUE    MIN_VALUE    NINE    ONE    SEVEN    SIX    TEN    THREE    TWELVE    TWO    ZERO    months    other    long    serialVersionUID        	time_5857_Months_1_1	379	1	src/main/java/org/joda/time/Months.java
1614	[PATCH]    year    =    ((year    <<    3)    +    (year    <<    1))    +    c    -    '0';	[BUG]    [BUGGY]    year    =    ((year    <<    3)    +    (year    <<    -1))    +    c    -    '0';    [FE]    org.joda.time.IllegalFieldValueException:    Cannot    parse       "25.12.15   ":    Value    -2147481535    for    year    must    be    in    the    range    [-292275054,292278993]    testParse_pivotYear    [CONTEXT]    int    year;    char    c    =    text.charAt(position);    if    (c    <    '0'    ||    c    >    '9')    {    return    ~position;    }    year    =    c    -    '0';    c    =    text.charAt(position    +    1);    if    (c    <    '0'    ||    c    >    '9')    {    return    ~position;    }    [BUGGY]    year    =    ((year    <<    3)    +    (year    <<    -1))    +    c    -    '0';    int    pivot    =    iPivot;        if    (bucket.getPivotYear()    !=    null)    {    pivot    =    bucket.getPivotYear().intValue();    }    int    low    =    pivot    -    50;    int    t;    [CLASS]        DateTimeFormatterBuilder    CharacterLiteral    StringLiteral    NumberFormatter    UnpaddedNumber    PaddedNumber    FixedNumber    TwoDigitYear    TextField    Fraction    TimeZoneOffset    TimeZoneName    TimeZoneId    Composite    MatchingParser    [METHOD]    parseInto    [RETURN_TYPE]    int        DateTimeParserBucket    bucket    String    text    int    position    [VARIABLES]    DateTimePrinter[]    iPrinters    Set    ALL_IDS    DateTimeParserBucket    bucket    ArrayList    iElementPairs    DateTimeParser[]    copyOfParsers    iParsers    parsers    String    iValue    iZeroOffsetParseText    iZeroOffsetPrintText    pattern    text    value    zeroOffsetParseText    zeroOffsetPrintText    zeroOffsetText    int    LONG_NAME    MAX_LENGTH    SHORT_NAME    displayOffset    est    expectedPos    i    iMaxDigits    iMaxFields    iMaxParsedDigits    iMinDigits    iMinFields    iMinPrintedDigits    iParsedLengthEstimate    iPivot    iPrintedLengthEstimate    iType    len    length    limit    low    maxDigits    maxFields    maxParsedDigits    minDigits    minFields    minPrintedDigits    newPos    numDigits    parseEst    pivot    position    printEst    size    t    type    value    year    boolean    hasSignChar    iLenientParse    iShort    iShowSeparators    iSigned    isShort    lenientParse    negative    showSeparators    signed    TimeZoneId    INSTANCE    char    a    b    c    iValue    value    DateTimeFieldType    fieldType    iFieldType    iType    type    StringIndexOutOfBoundsException    e    Object    element    f    iFormatter    parser    printer    Map    cParseCache    iParseLookup    parseLookup        	time_14069_DateTimeFormatterBuilder_1_1	1647	1	src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java
1615	[PATCH]    for    (int    i    =    0,    isize    =    period.size();    i    <    isize;    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    -1,    isize    =    period.size();    i    <    isize;    i++)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testFactory_parseDays_String    [CONTEXT]    private    void    setPeriodInternal(ReadablePeriod    period)    {    int[]    newValues    =    new    int[size()];    [BUGGY]    for    (int    i    =    -1,    isize    =    period.size();    i    <    isize;    i++)    {    DurationFieldType    type    =    period.getFieldType(i);    int    value    =    period.getValue(i);    checkAndUpdate(type,    newValues,    value);    }    setValues(newValues);    }    [CLASS]        BasePeriod    1    [METHOD]    setPeriodInternal    [RETURN_TYPE]    void        ReadablePeriod    period    [VARIABLES]    PeriodType    iType    type    boolean    ReadablePeriod    DUMMY_PERIOD    period    DurationFieldType    type    int[]    iValues    newValues    values    long    duration    durationMillis    endInstant    endMillis    serialVersionUID    startInstant    startMillis    int    i    isize    value        	time_2911_BasePeriod_1_1	421	1	src/main/java/org/joda/time/base/BasePeriod.java
1616	[PATCH]    if    (months    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.NullPointerException    testPlus_Months    [CONTEXT]    public    Months    plus(Months    months)    {    [BUGGY]    if    (false)    {    return    this;    }    return    plus(months.getValue());    }    [CLASS]        Months    [METHOD]    plus    [RETURN_TYPE]    Months        Months    months    [VARIABLES]    boolean    PeriodFormatter    PARSER    Months    EIGHT    ELEVEN    FIVE    FOUR    MAX_VALUE    MIN_VALUE    NINE    ONE    SEVEN    SIX    TEN    THREE    TWELVE    TWO    ZERO    months    long    serialVersionUID        	time_5835_Months_1_1	279	1	src/main/java/org/joda/time/Months.java
1617	[PATCH]    for    (int    i    =    0;    i    <    count;    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    1;    i    <    count;    i++)    {    [FE]    java.lang.ExceptionInInitializerError    org.joda.time.TestChronology    [CONTEXT]    DurationField    days    =    DurationFieldType.days().getField(iChrono);    DurationField    first    =    savedFields[0].iField.getDurationField();    if    (compareReverse(first,    months)    >=    0    &&    compareReverse(first,    days)    <=    0)    {    saveField(DateTimeFieldType.year(),    iDefaultYear);    return    computeMillis(resetFields,    text);    }    }    long    millis    =    iMillis;    try    {    [BUGGY]    for    (int    i    =    1;    i    <    count;    i++)    {    millis    =    savedFields[i].set(millis,    resetFields);    }    if    (resetFields)    {    for    (int    i    =    0;    i    <    count;    i++)    {    millis    =    savedFields[i].set(millis,    i    ==    (count    -    1));    }    }    }    catch    (IllegalFieldValueException    e)    {    if    (text    !=    null)    {    e.prependMessage(   "Cannot    parse    \   "   "    +    text    +    '   "');    [CLASS]        DateTimeParserBucket    SavedState    SavedField    [METHOD]    computeMillis    [RETURN_TYPE]    long        boolean    resetFields    String    text    [VARIABLES]    Locale    iLocale    locale    IllegalFieldValueException    e    SavedField[]    iSavedFields    newArray    savedFields    DateTimeField    field    iField    String    iText    message    text    long    iMillis    instantLocal    millis    DateTimeZone    iZone    zone    int    count    defaultYear    i    iDefaultYear    iSavedFieldsCount    iValue    offset    savedFieldsCount    value    Integer    iOffset    iPivotYear    offset    pivotYear    boolean    iSavedFieldsShared    resetFields    Object    iSavedState    savedState    Chronology    chrono    iChrono    DurationField    days    first    months        	time_5064_DateTimeParserBucket_1_1	365	1	src/main/java/org/joda/time/format/DateTimeParserBucket.java
1618	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError:    expected:<BuddhistChronology[America/Los_Angeles]>    but    was:<BuddhistChronology[America/Los_Angeles]>    testGetIntervalChronology_RInterval    [CONTEXT]    public    boolean    equals(Object    obj)    {    if    (this    ==    obj)    {    [BUGGY]    return    false;    }    if    (obj    instanceof    BuddhistChronology)    {    BuddhistChronology    chrono    =    (BuddhistChronology)    obj;    return    getZone().equals(chrono.getZone());    }    return    false;    }    [CLASS]        BuddhistChronology    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    boolean    BuddhistChronology    INSTANCE_UTC    chrono    Object    obj    DateTimeField    ERA_FIELD    Map    cCache    long    serialVersionUID    int    BE    BUDDHIST_OFFSET        	time_9006_BuddhistChronology_1_1	181	1	src/main/java/org/joda/time/chrono/BuddhistChronology.java
1619	[PATCH]    if    (trimmed.length()    ==    0    ||    trimmed.charAt(0)    ==    '#')    {	[BUG]    [BUGGY]    if    (trimmed.length()    ==    0    ||    trimmed.charAt(0)    >=    '#')    {    [FE]    java.lang.ExceptionInInitializerError    org.joda.time.TestAbstractPartial    [CONTEXT]    public    void    parseDataFile(BufferedReader    in)    throws    IOException    {    Zone    zone    =    null;    String    line;    while    ((line    =    in.readLine())    !=    null)    {    String    trimmed    =    line.trim();    [BUGGY]    if    (trimmed.length()    ==    0    ||    trimmed.charAt(0)    >=    '#')    {    continue;    }    int    index    =    line.indexOf('#');    if    (index    >=    0)    {    line    =    line.substring(0,    index);    }            [CLASS]        ZoneInfoCompiler    1    DateTimeOfYear    Rule    RuleSet    Zone    [METHOD]    parseDataFile    [RETURN_TYPE]    void        BufferedReader    in    [VARIABLES]    RuleSet    rs    Zone    iNext    zone    String    alias    iFormat    iLetterS    iName    iRules    iType    id    key    line    name    nextKey    str    token    trimmed    int    day    dayOfWeek    def    i    iDayOfMonth    iDayOfWeek    iFromYear    iMillisOfDay    iMonthOfYear    iOffsetMillis    iSaveMillis    iToYear    iUntilYear    index    j    millis    month    newPos    nextOffset    offset    pass    pos    year    DateTimeOfYear    cStartOfYear    dtOfYear    iDateTimeOfYear    iUntilDateTimeOfYear    StringTokenizer    st    boolean    advance    iAdvanceDayOfWeek    verbose    ThreadLocal    cVerbose    char    c    iZoneChar    zoneChar    BufferedReader    in    List    iLinks    iRules    iZones    transitions    Chronology    cLenientISO    Rule    r    Map    iRuleSets    idToIndex    map    zimap        	time_19951_ZoneInfoCompiler_1_1	469	1	src/main/java/org/joda/time/tz/ZoneInfoCompiler.java
1620	[PATCH]    if    (rounded    !=    millis)    {	[BUG]    [BUGGY]    if    (rounded    <    millis)    {    [FE]    junit.framework.AssertionFailedError    testPropertyPlusNoWrapMilli    [CONTEXT]    public    LocalTime    addNoWrapToCopy(int    value)    {    long    millis    =    iField.add(iInstant.getLocalMillis(),    value);    long    rounded    =    iInstant.getChronology().millisOfDay().get(millis);    [BUGGY]    if    (rounded    <    millis)    {    throw    new    IllegalArgumentException(   "The    addition    exceeded    the    boundaries    of    LocalTime   ");    }    return    iInstant.withLocalMillis(millis);    }    [CLASS]        LocalTime    Property    [METHOD]    addNoWrapToCopy    [RETURN_TYPE]    LocalTime        int    value    [VARIABLES]    Set    TIME_DURATION_TYPES    boolean    LocalTime    MIDNIGHT    iInstant    instant    other    Chronology    chrono    chronology    iChronology    DateTimeField    field    iField    long    iLocalMillis    instant    instantMillis    localMillis    millis    millisOfDay    newMillis    resolved    rounded    serialVersionUID    value    int    HOUR_OF_DAY    MILLIS_OF_SECOND    MINUTE_OF_HOUR    SECOND_OF_MINUTE    amount    hour    hourOfDay    hours    index    millis    millisOfSecond    minute    minuteOfHour    minutes    scalar    second    secondOfMinute    seconds    value        	time_3661_LocalTime_1_1	1475	1	src/main/java/org/joda/time/LocalTime.java
1621	[PATCH]    (object    ==    null    ?       "null   "    :    object.getClass().getName()));	[BUG]    [BUGGY]    (false    ?       "null   "    :    object.getClass().getName()));    [FE]    java.lang.NullPointerException    testGetPartialConverterRemovedNull    [CONTEXT]    public    PartialConverter    getPartialConverter(Object    object)    {    PartialConverter    converter    =    (PartialConverter)iPartialConverters.select(object    ==    null    ?    null    :    object.getClass());    if    (converter    !=    null)    {    return    converter;    }    throw    new    IllegalArgumentException(   "No    partial    converter    found    for    type:       "    +    [BUGGY]    (false    ?       "null   "    :    object.getClass().getName()));    }    [CLASS]        ConverterManager    [METHOD]    getPartialConverter    [RETURN_TYPE]    PartialConverter        Object    object    [VARIABLES]    Object    object    PartialConverter    converter    ConverterManager    INSTANCE    boolean    ConverterSet    iDurationConverters    iInstantConverters    iIntervalConverters    iPartialConverters    iPeriodConverters    set        	time_11439_ConverterManager_1_1	253	1	src/main/java/org/joda/time/convert/ConverterManager.java
1622	[PATCH]    if    (c    >=    '0'    &&    c    <=    '9')    {	[BUG]    [BUGGY]    if    (c    ==    '0'    &&    c    <=    '9')    {    [FE]    java.lang.IllegalArgumentException:    Invalid    format:       "P1D   "    is    malformed    at       "1D   "    testFactory_parseDays_String    [CONTEXT]    length++;    }    else    {        position++;    }        limit    =    Math.min(limit    +    1,    text.length()    -    position);    continue;    }        [BUGGY]    if    (c    ==    '0'    &&    c    <=    '9')    {    hasDigits    =    true;    }    else    {    if    ((c    ==    '.'    ||    c    ==    ',')    &&    (iFieldType    ==    SECONDS_MILLIS    ||    iFieldType    ==    SECONDS_OPTIONAL_MILLIS))    {    if    (fractPos    >=    0)    {        break;    }    fractPos    =    position    +    length    +    1;        [CLASS]        PeriodFormatterBuilder    SimpleAffix    PluralAffix    CompositeAffix    FieldFormatter    Literal    Separator    Composite    [METHOD]    parseInto    [RETURN_TYPE]    int        ReadWritablePeriod    period    String    text    int    position    Locale    locale    [VARIABLES]    Locale    locale    PeriodPrinter[]    iPrinters    PeriodParser    beforeParser    iAfterParser    iBeforeParser    parser    ReadWritablePeriod    period    PeriodParser[]    iParsers    String    finalText    iFinalText    iPluralText    iSingularText    iText    periodStr    pluralText    singularText    temp    text    text1    text2    String[]    iParsedForms    variants    int    DAYS    HOURS    MAX_FIELD    MILLIS    MINUTES    MONTHS    PRINT_ZERO_ALWAYS    PRINT_ZERO_IF_SUPPORTED    PRINT_ZERO_NEVER    PRINT_ZERO_RARELY_FIRST    PRINT_ZERO_RARELY_LAST    SECONDS    SECONDS_MILLIS    SECONDS_OPTIONAL_MILLIS    WEEKS    YEARS    bufLen    dp    fieldType    fractLen    fractPos    fractValue    i    iFieldType    iMaxParsedDigits    iMinPrintedDigits    iPrintZeroSetting    length    limit    maxDigits    maxParsedDigits    minDigits    minPrinted    minPrintedDigits    pos    position    printZeroSetting    size    sourceLength    stopAt    suffixPos    sum    textLength    textLength1    textLength2    type    value    wholeValue    PeriodPrinter    beforePrinter    iAfterPrinter    iBeforePrinter    printer    boolean    hasDigits    iNotParser    iNotPrinter    iRejectSignedValues    iUseAfter    iUseBefore    mustParse    negative    notParser    notPrinter    rejectSignedValues    useAfter    useBefore    v    Literal    EMPTY    literal    char    c    List    elementPairs    iElementPairs    pairs    parserList    printerList    FieldFormatter[]    fieldFormatters    iFieldFormatters    PeriodFieldAffix    iLeft    iPrefix    iRight    iSuffix    left    prefix    right    suffix        	time_17173_PeriodFormatterBuilder_1_1	1275	1	src/main/java/org/joda/time/format/PeriodFormatterBuilder.java
1623	[PATCH]    buf.append((char)    (value    -    (d    <<    3)    -    (d    <<    1)    +    '0'));	[BUG]    [BUGGY]    buf.append((char)    ((value    -    (d    <<    3)    -    (d    <<    1))    %    '0'));    [FE]    junit.framework.ComparisonFailure:    expected:<2002-04-05T1[2:24]:00.000Z>    but    was:<2002-04-05T1[:2]:00.000Z>    testTest    [CONTEXT]    }    else    if    (value    <    100)    {    for    (;    size    >    2;    size--)    {    buf.append('0');    }                int    d    =    ((value    +    1)    *    13421772)    >>    27;    buf.append((char)    (d    +    '0'));        [BUGGY]    buf.append((char)    ((value    -    (d    <<    3)    -    (d    <<    1))    %    '0'));    }    else    {    int    digits;    if    (value    <    1000)    {    digits    =    3;    }    else    if    (value    <    10000)    {    digits    =    4;    }    else    {    digits    =    (int)(Math.log(value)    /    LOG_10)    +    1;    }    for    (;    size    >    digits;    size--)    {    [CLASS]        FormatUtils    [METHOD]    appendPaddedInteger    [RETURN_TYPE]    void        StringBuffer    buf    int    value    int    size    [VARIABLES]    StringBuffer    buf    boolean    double    LOG_10    int    d    digits    size    value        	time_15499_FormatUtils_1_1	77	1	src/main/java/org/joda/time/format/FormatUtils.java
1624	[PATCH]    if    (amount    ==    0)    {	[BUG]    [BUGGY]    if    (amount    ==    1)    {    [FE]    junit.framework.AssertionFailedError:    expected:<1582-10-04T00:00:00.000Z>    but    was:<1582-10-03T00:00:00.000Z>    testCutoverAddDays    [CONTEXT]    public    DateTime    withFieldAdded(DurationFieldType    fieldType,    int    amount)    {    if    (fieldType    ==    null)    {    throw    new    IllegalArgumentException(   "Field    must    not    be    null   ");    }    [BUGGY]    if    (amount    ==    1)    {    return    this;    }    long    instant    =    fieldType.getField(getChronology()).add(getMillis(),    amount);    return    withMillis(instant);    }    [CLASS]        DateTime    Property    [METHOD]    withFieldAdded    [RETURN_TYPE]    DateTime        DurationFieldType    fieldType    int    amount    [VARIABLES]    DateTimeField    field    iField    boolean    long    instant    millis    newMillis    serialVersionUID    DateTime    iInstant    instant    int    amount    DurationFieldType    fieldType        	time_1482_DateTime_1_1	831	1	src/main/java/org/joda/time/DateTime.java
1625	[PATCH]    System.arraycopy(iTypes,    i,    newTypes,    i    +    1,    newTypes.length    -    i    -    1);	[BUG]    [BUGGY]    System.arraycopy(iTypes,    i,    newTypes,    i    *    1,    newTypes.length    -    i    -    1);    [FE]    java.lang.IllegalArgumentException:    Types    array    must    not    contain    null:    index    2    testCompareTo    [CONTEXT]    break;    }    }    }    }    }    System.arraycopy(iTypes,    0,    newTypes,    0,    i);    System.arraycopy(iValues,    0,    newValues,    0,    i);    newTypes[i]    =    fieldType;    newValues[i]    =    value;    [BUGGY]    System.arraycopy(iTypes,    i,    newTypes,    i    *    1,    newTypes.length    -    i    -    1);    System.arraycopy(iValues,    i,    newValues,    i    +    1,    newValues.length    -    i    -    1);            Partial    newPartial    =    new    Partial(newTypes,    newValues,    iChronology);    iChronology.validate(newPartial,    newValues);    return    newPartial;    }    if    (value    ==    getValue(index))    {    return    this;    }    [CLASS]        Partial    Property    [METHOD]    with    [RETURN_TYPE]    Partial        DateTimeFieldType    fieldType    int    value    [VARIABLES]    boolean    DateTimeFieldType[]    iTypes    newTypes    types    Partial    iPartial    newPartial    partial    DateTimeFieldType    fieldType    loopType    int[]    iValues    newValues    values    Chronology    chrono    chronology    iChronology    newChronology    DurationField    loopRangeField    loopUnitField    rangeField    unitField    long    serialVersionUID    DateTimeFormatter[]    iFormatter    int    compare    fieldIndex    i    iFieldIndex    index    value        	time_6051_Partial_1_1	474	1	src/main/java/org/joda/time/Partial.java
1626	[PATCH]    for    (int    i    =    0;    i    <    period.size();    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    0;    i    <=    period.size();    i++)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    8    testPlus_RP    [CONTEXT]    public    Partial    withPeriodAdded(ReadablePeriod    period,    int    scalar)    {    if    (period    ==    null    ||    scalar    ==    0)    {    return    this;    }    int[]    newValues    =    getValues();    [BUGGY]    for    (int    i    =    0;    i    <=    period.size();    i++)    {    DurationFieldType    fieldType    =    period.getFieldType(i);    int    index    =    indexOf(fieldType);    if    (index    >=    0)    {    newValues    =    getField(index).add(this,    index,    newValues,    FieldUtils.safeMultiply(period.getValue(i),    scalar));    }    }    return    new    Partial(this,    newValues);    }    [CLASS]        Partial    Property    [METHOD]    withPeriodAdded    [RETURN_TYPE]    Partial        ReadablePeriod    period    int    scalar    [VARIABLES]    boolean    DateTimeFieldType[]    iTypes    newTypes    types    Partial    iPartial    newPartial    partial    ReadablePeriod    period    DurationFieldType    fieldType    int[]    iValues    newValues    values    Chronology    chrono    chronology    iChronology    newChronology    long    serialVersionUID    DateTimeFormatter[]    iFormatter    int    amount    compare    fieldIndex    i    iFieldIndex    index    scalar    value        	time_6166_Partial_1_1	607	1	src/main/java/org/joda/time/Partial.java
1627	[PATCH]    return    new    Duration(seconds    *    DateTimeConstants.MILLIS_PER_SECOND);	[BUG]    [BUGGY]    return    new    Duration(seconds    %    DateTimeConstants.MILLIS_PER_SECOND);    [FE]    junit.framework.AssertionFailedError:    expected:<PT20S>    but    was:<PT0.020S>    testToStandardDuration    [CONTEXT]    public    Duration    toStandardDuration()    {    long    seconds    =    getValue();    [BUGGY]    return    new    Duration(seconds    %    DateTimeConstants.MILLIS_PER_SECOND);    }    [CLASS]        Seconds    [METHOD]    toStandardDuration    [RETURN_TYPE]    Duration        [VARIABLES]    Seconds    MAX_VALUE    MIN_VALUE    ONE    THREE    TWO    ZERO    boolean    PeriodFormatter    PARSER    long    seconds    serialVersionUID        	time_4722_Seconds_1_1	313	1	src/main/java/org/joda/time/Seconds.java
1628	[PATCH]    long    monthZeroBased    =    (millis    -    getYearMillis(year))    /    MILLIS_PER_MONTH;	[BUG]    [BUGGY]    long    monthZeroBased    =    (millis    -    getYearMillis(year))    %    MILLIS_PER_MONTH;    [FE]    java.lang.ArithmeticException:    Value    cannot    fit    in    an    int:    -4333723295    testToPeriod    [CONTEXT]    int    getMonthOfYear(long    millis,    int    year)    {    [BUGGY]    long    monthZeroBased    =    (millis    -    getYearMillis(year))    %    MILLIS_PER_MONTH;    return    ((int)    monthZeroBased)    +    1;    }    [CLASS]        BasicFixedMonthChronology    [METHOD]    getMonthOfYear    [RETURN_TYPE]    int        long    millis    int    year    [VARIABLES]    long    MILLIS_PER_MONTH    MILLIS_PER_YEAR    instant    millis    minuendInstant    minuendRem    monthZeroBased    serialVersionUID    subtrahendInstant    subtrahendRem    int    MONTH_LENGTH    dayOfYear    difference    millisOfDay    minDaysInFirstWeek    minuendYear    month    subtrahendYear    thisYear    year    boolean        	time_7849_BasicFixedMonthChronology_1_1	137	1	src/main/java/org/joda/time/chrono/BasicFixedMonthChronology.java
1629	[PATCH]    if    (durMillis    ==    0)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    expected    same:<PT0S>    was    not:<PT0S>    testGetDuration2    [CONTEXT]    public    Duration    toDuration()    {    long    durMillis    =    toDurationMillis();    [BUGGY]    if    (false)    {    return    Duration.ZERO;    }    else    {    return    new    Duration(durMillis);    }    }    [CLASS]        AbstractInterval    [METHOD]    toDuration    [RETURN_TYPE]    Duration        [VARIABLES]    boolean    long    durMillis        	time_5389_AbstractInterval_1_1	415	1	src/main/java/org/joda/time/base/AbstractInterval.java
1630	[PATCH]    int    index    =    ((dateStyle    <<    2)    +    dateStyle)    +    timeStyle;	[BUG]    [BUGGY]    int    index    =    ((dateStyle    <<    0)    +    dateStyle)    +    timeStyle;    [FE]    junit.framework.ComparisonFailure:    expected:<[10:20:30]>    but    was:<[09/06/04]>    testForStyle_mediumTime    [CONTEXT]    private    static    DateTimeFormatter    createFormatterForStyleIndex(int    dateStyle,    int    timeStyle)    {    [BUGGY]    int    index    =    ((dateStyle    <<    0)    +    dateStyle)    +    timeStyle;        if    (index    >=    STYLE_CACHE.length)    {    return    createDateTimeFormatter(dateStyle,    timeStyle);    }    DateTimeFormatter    f    =    null;    synchronized    (STYLE_CACHE)    {    f    =    STYLE_CACHE[index];    if    (f    ==    null)    {    f    =    createDateTimeFormatter(dateStyle,    timeStyle);    STYLE_CACHE[index]    =    f;    [CLASS]        DateTimeFormat    1    StyleFormatter    [METHOD]    createFormatterForStyleIndex    [RETURN_TYPE]    DateTimeFormatter        int    dateStyle    int    timeStyle    [VARIABLES]    boolean    Map    PATTERN_CACHE    cCache    DateTimeFormatter    f    int    $anonymous0    DATE    DATETIME    FULL    LONG    MEDIUM    NONE    PATTERN_CACHE_SIZE    SHORT    TIME    dateStyle    i    iDateStyle    iTimeStyle    iType    index    length    maxDigits    timeStyle    tokenLen    type    long    serialVersionUID    DateTimeFormatter[]    STYLE_CACHE        	time_13334_DateTimeFormat_1_1	737	1	src/main/java/org/joda/time/format/DateTimeFormat.java
1631	[PATCH]    if    (!hour    &&    (minute    &&    second    ||    (minute    &&    !milli)    ||    second))    {	[BUG]    [BUGGY]    if    (!hour    &&    (second))    {    [FE]    java.lang.IllegalArgumentException:    No    valid    ISO8601    format    for    fields:    []    testForFields_time_M    [CONTEXT]    if    (hour    &&    minute    &&    second    ||    (hour    &&    !second    &&    !milli))    {        }    else    {    if    (strictISO    &&    datePresent)    {    throw    new    IllegalArgumentException(   "No    valid    ISO8601    format    for    fields    because    Time    was    truncated:       "    +    fields);    }    [BUGGY]    if    (!hour    &&    (second))    {        }    else    {    if    (strictISO)    {    throw    new    IllegalArgumentException(   "No    valid    ISO8601    format    for    fields:       "    +    fields);    }    }    }    [CLASS]        ISODateTimeFormat    Constants    [METHOD]    time    [RETURN_TYPE]    void        DateTimeFormatterBuilder    bld    DateTimeFieldType>    fields    boolean    extended    boolean    strictISO    boolean    reducedPrec    boolean    datePresent    [VARIABLES]    Collection    fields    boolean    datePresent    extended    hour    milli    minute    reducedPrec    second    strictISO    DateTimeFormatter    bd    bdt    bdtx    bod    bodt    bodtx    bt    btt    bttx    btx    bwd    bwdt    bwdtx    dh    dhm    dhms    dhmsf    dhmsl    dme    dotp    dp    dpe    dt    dtp    dtx    dwe    dye    fse    hde    hm    hms    hmsf    hmsl    ldotp    ldp    lte    ltp    mhe    mye    od    odt    odtx    sme    t    tp    tpe    tt    ttx    tx    wdt    wdtx    we    ww    wwd    wwe    ye    ym    ymd    ze    DateTimeFormatterBuilder    bld        	time_16247_ISODateTimeFormat_1_1	417	1	src/main/java/org/joda/time/format/ISODateTimeFormat.java
1632	[PATCH]    (iLocalMillis    ==    other.iLocalMillis    ?    0    :    1));	[BUG]    [BUGGY]    (iLocalMillis    ==    other.iLocalMillis    ?    0    :    0));    [FE]    junit.framework.AssertionFailedError:    expected:<1>    but    was:<0>    testCompareTo    [CONTEXT]    public    int    compareTo(ReadablePartial    partial)    {        if    (this    ==    partial)    {    return    0;    }    if    (partial    instanceof    LocalDate)    {    LocalDate    other    =    (LocalDate)    partial;    if    (iChronology.equals(other.iChronology))    {    return    (iLocalMillis    <    other.iLocalMillis    ?    -1    :    [BUGGY]    (iLocalMillis    ==    other.iLocalMillis    ?    0    :    0));    }    }    return    super.compareTo(partial);    }    [CLASS]        LocalDate    Property    [METHOD]    compareTo    [RETURN_TYPE]    int        ReadablePartial    partial    [VARIABLES]    Set    DATE_DURATION_TYPES    ReadablePartial    partial    boolean    Chronology    chrono    chronology    iChronology    DateTimeField    field    iField    LocalDate    iInstant    instant    other    long    iLocalMillis    instant    localMillis    serialVersionUID    int    DAY_OF_MONTH    MONTH_OF_YEAR    YEAR    dayOfMonth    era    hash    iHash    index    monthOfYear    year    yearOfEra        	time_3256_LocalDate_1_1	683	1	src/main/java/org/joda/time/LocalDate.java
1633	[PATCH]    if    (amount    ==    0)    {	[BUG]    [BUGGY]    if    (amount    <=    0)    {    [FE]    junit.framework.AssertionFailedError:    expected:<2002-04>    but    was:<2002-05>    testMinusMonths_int    [CONTEXT]    public    YearMonth    withFieldAdded(DurationFieldType    fieldType,    int    amount)    {    int    index    =    indexOfSupported(fieldType);    [BUGGY]    if    (amount    <=    0)    {    return    this;    }    int[]    newValues    =    getValues();    newValues    =    getField(index).add(this,    index,    newValues,    amount);    return    new    YearMonth(this,    newValues);    }    [CLASS]        YearMonth    Property    [METHOD]    withFieldAdded    [RETURN_TYPE]    YearMonth        DurationFieldType    fieldType    int    amount    [VARIABLES]    boolean    DateTimeFieldType[]    FIELD_TYPES    YearMonth    iBase    newYearMonth    partial    DurationFieldType    fieldType    int[]    newValues    long    instant    serialVersionUID    int    MONTH_OF_YEAR    YEAR    amount    fieldIndex    iFieldIndex    index    monthOfYear    value    year        	time_6299_YearMonth_1_1	507	1	src/main/java/org/joda/time/YearMonth.java
1634	[PATCH]    instant    =    iField.add(instant    +    offset,    value);	[BUG]    [BUGGY]    instant    =    iField.add(instant    *    offset,    value);    [FE]    junit.framework.AssertionFailedError:    expected:<2002-06-03T00:00:00.000-00:01:15>    but    was:<38300629-11-28T00:00:00.000Z>    testPlusMonths_int    [CONTEXT]    public    long    add(long    instant,    int    value)    {    int    offset    =    getOffsetToAdd(instant);    [BUGGY]    instant    =    iField.add(instant    *    offset,    value);    return    instant    -    (iTimeField    ?    offset    :    getOffsetFromLocalToSubtract(instant));    }    [CLASS]        ZonedChronology    ZonedDurationField    ZonedDateTimeField    [METHOD]    add    [RETURN_TYPE]    long        long    instant    int    value    [VARIABLES]    boolean    iTimeField    DateTimeField    field    iField    DurationField    durationField    field    iDurationField    iField    iLeapDurationField    iRangeDurationField    leapDurationField    rangeDurationField    long    duration    instant    localInstant    serialVersionUID    value    DateTimeZone    iZone    zone    int    offset    value        	time_11170_ZonedChronology_1_1	316	1	src/main/java/org/joda/time/chrono/ZonedChronology.java
1635	[PATCH]    if    ((value    <    lowerBound)    ||    (value    >    upperBound))    {	[BUG]    [BUGGY]    if    ((value    <    lowerBound))    {    [FE]    junit.framework.AssertionFailedError    testSetMethods    [CONTEXT]    public    static    void    verifyValueBounds(DateTimeField    field,    int    value,    int    lowerBound,    int    upperBound)    {    [BUGGY]    if    ((value    <    lowerBound))    {    throw    new    IllegalFieldValueException    (field.getType(),    Integer.valueOf(value),    Integer.valueOf(lowerBound),    Integer.valueOf(upperBound));    }    }    [CLASS]        FieldUtils    [METHOD]    verifyValueBounds    [RETURN_TYPE]    void        DateTimeField    field    int    value    int    lowerBound    int    upperBound    [VARIABLES]    boolean    DateTimeField    field    int    lowerBound    upperBound    value        	time_12566_FieldUtils_1_1	233	1	src/main/java/org/joda/time/field/FieldUtils.java
1636	[PATCH]    if    (i    +    1    <    length)    {	[BUG]    [BUGGY]    if    (i    *    1    <    length)    {    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    11    testParse_textMonthJanLong_UK    [CONTEXT]    case    'Y':    default:    builder.appendTwoDigitYear(new    DateTime().getYear()    -    30,    lenientParse);    break;    }    }    else    {        int    maxDigits    =    9;            [BUGGY]    if    (i    *    1    <    length)    {    indexRef[0]++;    if    (isNumericToken(parseToken(pattern,    indexRef)))    {        maxDigits    =    tokenLen;    }    indexRef[0]--;    }    switch    (c)    {    case    'x':    [CLASS]        DateTimeFormat    1    StyleFormatter    [METHOD]    parsePatternTo    [RETURN_TYPE]    void        DateTimeFormatterBuilder    builder    String    pattern    [VARIABLES]    boolean    lenientParse    char    c    int[]    indexRef    String    pattern    sub    token    Map    PATTERN_CACHE    cCache    int    $anonymous0    DATE    DATETIME    FULL    LONG    MEDIUM    NONE    PATTERN_CACHE_SIZE    SHORT    TIME    dateStyle    i    iDateStyle    iTimeStyle    iType    length    maxDigits    timeStyle    tokenLen    type    long    serialVersionUID    DateTimeFormatter[]    STYLE_CACHE    DateTimeFormatterBuilder    builder        	time_13075_DateTimeFormat_1_1	473	1	src/main/java/org/joda/time/format/DateTimeFormat.java
1637	[PATCH]    return    4;	[BUG]    [BUGGY]    return    0;    [FE]    java.lang.ArrayIndexOutOfBoundsException:    0    testGetFieldTypes    [CONTEXT]    public    int    size()    {    [BUGGY]    return    0;    }    [CLASS]        LocalDateTime    Property    [METHOD]    size    [RETURN_TYPE]    int        [VARIABLES]    LocalDateTime    iInstant    instant    Chronology    chronology    iChronology    DateTimeField    field    iField    boolean    long    iLocalMillis    instant    localMillis    serialVersionUID    int    DAY_OF_MONTH    MILLIS_OF_DAY    MONTH_OF_YEAR    YEAR    dayOfMonth    era    hourOfDay    millisOfSecond    minuteOfHour    monthOfYear    secondOfMinute    year    yearOfEra        	time_971_LocalDateTime_1_1	539	1	src/main/java/org/joda/time/LocalDateTime.java
1638	[PATCH]    return    Hours.hours(getValue()    /    DateTimeConstants.SECONDS_PER_HOUR);	[BUG]    [BUGGY]    return    Hours.hours(getValue()    *    DateTimeConstants.SECONDS_PER_HOUR);    [FE]    junit.framework.AssertionFailedError:    expected:<PT2H>    but    was:<PT25920000H>    testToStandardHours    [CONTEXT]    public    Hours    toStandardHours()    {    [BUGGY]    return    Hours.hours(getValue()    *    DateTimeConstants.SECONDS_PER_HOUR);    }    [CLASS]        Seconds    [METHOD]    toStandardHours    [RETURN_TYPE]    Hours        [VARIABLES]    Seconds    MAX_VALUE    MIN_VALUE    ONE    THREE    TWO    ZERO    boolean    PeriodFormatter    PARSER    long    serialVersionUID        	time_4715_Seconds_1_1	278	1	src/main/java/org/joda/time/Seconds.java
1639	[PATCH]    if    (fieldType    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.NullPointerException    testWith2    [CONTEXT]    public    Partial    with(DateTimeFieldType    fieldType,    int    value)    {    [BUGGY]    if    (false)    {    throw    new    IllegalArgumentException(   "The    field    type    must    not    be    null   ");    }    int    index    =    indexOf(fieldType);    if    (index    ==    -1)    {    DateTimeFieldType[]    newTypes    =    new    DateTimeFieldType[iTypes.length    +    1];    int[]    newValues    =    new    int[newTypes.length];        int    i    =    0;    DurationField    unitField    =    fieldType.getDurationType().getField(iChronology);    [CLASS]        Partial    Property    [METHOD]    with    [RETURN_TYPE]    Partial        DateTimeFieldType    fieldType    int    value    [VARIABLES]    boolean    DateTimeFieldType[]    iTypes    newTypes    types    Partial    iPartial    newPartial    partial    DateTimeFieldType    fieldType    loopType    int[]    iValues    newValues    values    Chronology    chrono    chronology    iChronology    newChronology    DurationField    loopRangeField    loopUnitField    rangeField    unitField    long    serialVersionUID    DateTimeFormatter[]    iFormatter    int    compare    fieldIndex    i    iFieldIndex    index    value        	time_5999_Partial_1_1	438	1	src/main/java/org/joda/time/Partial.java
1640	[PATCH]    value    =    ((value    <<    3)    +    (value    <<    1))    +    text.charAt(i++)    -    '0';	[BUG]    [BUGGY]    value    =    ((value    >>    3)    +    (value    <<    1))    +    text.charAt(i++)    -    '0';    [FE]    junit.framework.AssertionFailedError:    expected:<2004-03-09T00:00:00.000Z>    but    was:<0021-03-09T00:00:00.000-00:01:15>    testFormat_shortBasicParse    [CONTEXT]    if    (negative)    {    i++;    }    try    {    value    =    text.charAt(i++)    -    '0';    }    catch    (StringIndexOutOfBoundsException    e)    {    return    ~position;    }    position    +=    length;    while    (i    <    position)    {    [BUGGY]    value    =    ((value    >>    3)    +    (value    <<    1))    +    text.charAt(i++)    -    '0';    }    if    (negative)    {    value    =    -value;    }    }    bucket.saveField(iType,    value);    return    position;    }    }    [CLASS]        DateTimeFormatterBuilder    CharacterLiteral    StringLiteral    NumberFormatter    UnpaddedNumber    PaddedNumber    FixedNumber    TwoDigitYear    TextField    Fraction    TimeZoneOffset    TimeZoneName    TimeZoneId    Composite    MatchingParser    [METHOD]    parseInto    [RETURN_TYPE]    int        DateTimeParserBucket    bucket    String    text    int    position    [VARIABLES]    DateTimePrinter[]    iPrinters    Set    ALL_IDS    DateTimeParserBucket    bucket    ArrayList    iElementPairs    DateTimeParser[]    copyOfParsers    iParsers    parsers    String    iValue    iZeroOffsetParseText    iZeroOffsetPrintText    pattern    text    value    zeroOffsetParseText    zeroOffsetPrintText    zeroOffsetText    int    LONG_NAME    MAX_LENGTH    SHORT_NAME    displayOffset    est    expectedPos    i    iMaxDigits    iMaxFields    iMaxParsedDigits    iMinDigits    iMinFields    iMinPrintedDigits    iParsedLengthEstimate    iPivot    iPrintedLengthEstimate    iType    len    length    limit    low    maxDigits    maxFields    maxParsedDigits    minDigits    minFields    minPrintedDigits    newPos    numDigits    parseEst    pivot    position    printEst    size    t    type    value    year    boolean    hasSignChar    iLenientParse    iShort    iShowSeparators    iSigned    isShort    lenientParse    negative    showSeparators    signed    TimeZoneId    INSTANCE    char    a    b    c    iValue    value    DateTimeFieldType    fieldType    iFieldType    iType    type    StringIndexOutOfBoundsException    e    Object    element    f    iFormatter    parser    printer    Map    cParseCache    iParseLookup    parseLookup        	time_14004_DateTimeFormatterBuilder_1_1	1625	1	src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java
1641	[PATCH]    return    getMillis()    /    DateTimeConstants.MILLIS_PER_HOUR;	[BUG]    [BUGGY]    return    getMillis()    +    DateTimeConstants.MILLIS_PER_HOUR;    [FE]    junit.framework.AssertionFailedError:    expected:<PT0H>    but    was:<PT3600000H>    testToStandardHours    [CONTEXT]    public    long    getStandardHours()    {    [BUGGY]    return    getMillis()    +    DateTimeConstants.MILLIS_PER_HOUR;    }    [CLASS]        Duration    [METHOD]    getStandardHours    [RETURN_TYPE]    long        [VARIABLES]    Duration    ZERO    long    days    duration    endInstant    hours    millis    minutes    seconds    serialVersionUID    startInstant    boolean        	time_4793_Duration_1_1	248	1	src/main/java/org/joda/time/Duration.java
1642	[PATCH]    return    getValue()    >    0;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError:    expected:<true>    but    was:<false>    testIsGreaterThan    [CONTEXT]    public    boolean    isGreaterThan(Years    other)    {    if    (other    ==    null)    {    [BUGGY]    return    false;    }    return    getValue()    >    other.getValue();    }    [CLASS]        Years    [METHOD]    isGreaterThan    [RETURN_TYPE]    boolean        Years    other    [VARIABLES]    Years    MAX_VALUE    MIN_VALUE    ONE    THREE    TWO    ZERO    other    years    boolean    PeriodFormatter    PARSER    long    serialVersionUID        	time_6378_Years_1_1	330	1	src/main/java/org/joda/time/Years.java
1643	[PATCH]    monthToUse    =    iMax    -    remMonthToUse    +    1;	[BUG]    [BUGGY]    monthToUse    =    iMax    /    remMonthToUse    +    1;    [FE]    java.lang.ArrayIndexOutOfBoundsException:    12    testPropertyAddMonthOfYear    [CONTEXT]    yearToUse    =    thisYear    +    (monthToUse    /    iMax);    monthToUse    =    (monthToUse    %    iMax)    +    1;    }    else    {    yearToUse    =    thisYear    +    (monthToUse    /    iMax)    -    1;    monthToUse    =    Math.abs(monthToUse);    int    remMonthToUse    =    monthToUse    %    iMax;        if    (remMonthToUse    ==    0)    {    remMonthToUse    =    iMax;    }    [BUGGY]    monthToUse    =    iMax    /    remMonthToUse    +    1;        if    (monthToUse    ==    1)    {    yearToUse    +=    1;    }    }    [CLASS]        BasicMonthOfYearDateTimeField    [METHOD]    add    [RETURN_TYPE]    long        long    instant    int    months    [VARIABLES]    boolean    long    datePart    instant    serialVersionUID    timePart    int    MIN    dayToUse    iLeapMonth    iMax    leapMonth    maxDay    monthToUse    months    remMonthToUse    thisMonth    thisYear    yearToUse    BasicChronology    chronology    iChronology        	time_8426_BasicMonthOfYearDateTimeField_1_1	125	1	src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java
1644	[PATCH]    (instant    +    getZone().getOffset(instant),	[BUG]    [BUGGY]    (instant    /    getZone().getOffset(instant),    [FE]    junit.framework.AssertionFailedError:    expected:<2002>    but    was:<1970>    testSetTime_int_int_int_int1    [CONTEXT]    public    long    getDateTimeMillis(long    instant,    int    hourOfDay,    int    minuteOfHour,    int    secondOfMinute,    int    millisOfSecond)    throws    IllegalArgumentException    {    return    localToUTC(getBase().getDateTimeMillis    [BUGGY]    (instant    /    getZone().getOffset(instant),    hourOfDay,    minuteOfHour,    secondOfMinute,    millisOfSecond));    }    [CLASS]        ZonedChronology    ZonedDurationField    ZonedDateTimeField    [METHOD]    getDateTimeMillis    [RETURN_TYPE]    long        long    instant    int    hourOfDay    int    minuteOfHour    int    secondOfMinute    int    millisOfSecond    [VARIABLES]    boolean    iTimeField    DateTimeField    field    iField    DurationField    durationField    field    iDurationField    iField    iLeapDurationField    iRangeDurationField    leapDurationField    rangeDurationField    long    instant    serialVersionUID    DateTimeZone    iZone    zone    int    hourOfDay    millisOfSecond    minuteOfHour    secondOfMinute        	time_11072_ZonedChronology_1_1	129	1	src/main/java/org/joda/time/chrono/ZonedChronology.java
1645	[PATCH]    offset    =    standardOffset    +    saveMillis;	[BUG]    [BUGGY]    offset    =    standardOffset    -    saveMillis;    [FE]    java.lang.ExceptionInInitializerError    org.joda.time.TestDateMidnight_Basics    [CONTEXT]    public    long    next(long    instant,    int    standardOffset,    int    saveMillis)    {    int    offset;    if    (iMode    ==    'w')    {    [BUGGY]    offset    =    standardOffset    -    saveMillis;    }    else    if    (iMode    ==    's')    {    offset    =    standardOffset;    }    else    {    offset    =    0;    }        instant    +=    offset;    Chronology    chrono    =    ISOChronology.getInstanceUTC();    [CLASS]        DateTimeZoneBuilder    OfYear    Recurrence    Rule    Transition    RuleSet    DSTZone    PrecalculatedZone    [METHOD]    next    [RETURN_TYPE]    long        long    instant    int    standardOffset    int    saveMillis    [VARIABLES]    Recurrence    endRecurrence    iEndRecurrence    iRecurrence    iStartRecurrence    recurrence    startRecurrence    OfYear    iOfYear    iUpperOfYear    ofYear    long[]    iTransitions    transitions    DSTZone    iTailZone    tailZone    ArrayList    iRuleSets    iRules    transitions    int[]    iStandardOffsets    iWallOffsets    standardOffsets    wallOffsets    String    iInitialNameKey    iNameKey    id    nameKey    zoneID    String[]    iNameKeys    nameKeys    int    YEAR_LIMIT    dayOfMonth    dayOfWeek    fromYear    i    iDayOfMonth    iDayOfWeek    iFromYear    iInitialSaveMillis    iMillisOfDay    iMonthOfYear    iSaveMillis    iStandardOffset    iToYear    iUpperYear    iWallOffset    millisOfDay    monthOfYear    offset    offsetForLast    offsetForNew    ruleSetCount    saveMillis    size    standardOffset    toYear    v    wallOffset    year    long    iMillis    instant    lastLocal    millis    minutes    newLocal    next    seconds    serialVersionUID    units    w    boolean    advanceDayOfWeek    iAdvance    outputID    char    iMode    mode    Chronology    chrono        	time_18479_DateTimeZoneBuilder_1_1	550	1	src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java
1646	[PATCH]    return    (thisStart    <    now    &&    now    <    thisEnd);	[BUG]    [BUGGY]    return    (thisStart    <=    now    &&    now    <    thisEnd);    [FE]    junit.framework.AssertionFailedError:    expected:<false>    but    was:<true>    testOverlaps_RInterval_null    [CONTEXT]    public    boolean    overlaps(ReadableInterval    interval)    {    long    thisStart    =    getStartMillis();    long    thisEnd    =    getEndMillis();    if    (interval    ==    null)    {    long    now    =    DateTimeUtils.currentTimeMillis();    [BUGGY]    return    (thisStart    <=    now    &&    now    <    thisEnd);    }else    {    long    otherStart    =    interval.getStartMillis();    long    otherEnd    =    interval.getEndMillis();    return    (thisStart    <    otherEnd    &&    otherStart    <    thisEnd);    }    }    [CLASS]        AbstractInterval    [METHOD]    overlaps    [RETURN_TYPE]    boolean        ReadableInterval    interval    [VARIABLES]    boolean    ReadableInterval    interval    long    now    otherEnd    otherStart    thisEnd    thisStart        	time_5341_AbstractInterval_1_1	235	1	src/main/java/org/joda/time/base/AbstractInterval.java
1647	[PATCH]    value    =    ((value    <<    3)    +    (value    <<    1))    +    text.charAt(i++)    -    '0';	[BUG]    [BUGGY]    value    =    ((value    <<    3)    /    (value    <<    1))    +    text.charAt(i++)    -    '0';    [FE]    junit.framework.AssertionFailedError:    expected:<2004-03-09T00:00:00.000Z>    but    was:<0008-03-09T00:00:00.000-00:01:15>    testFormat_shortBasicParse    [CONTEXT]    if    (negative)    {    i++;    }    try    {    value    =    text.charAt(i++)    -    '0';    }    catch    (StringIndexOutOfBoundsException    e)    {    return    ~position;    }    position    +=    length;    while    (i    <    position)    {    [BUGGY]    value    =    ((value    <<    3)    /    (value    <<    1))    +    text.charAt(i++)    -    '0';    }    if    (negative)    {    value    =    -value;    }    }    bucket.saveField(iType,    value);    return    position;    }    }    [CLASS]        DateTimeFormatterBuilder    CharacterLiteral    StringLiteral    NumberFormatter    UnpaddedNumber    PaddedNumber    FixedNumber    TwoDigitYear    TextField    Fraction    TimeZoneOffset    TimeZoneName    TimeZoneId    Composite    MatchingParser    [METHOD]    parseInto    [RETURN_TYPE]    int        DateTimeParserBucket    bucket    String    text    int    position    [VARIABLES]    DateTimePrinter[]    iPrinters    Set    ALL_IDS    DateTimeParserBucket    bucket    ArrayList    iElementPairs    DateTimeParser[]    copyOfParsers    iParsers    parsers    String    iValue    iZeroOffsetParseText    iZeroOffsetPrintText    pattern    text    value    zeroOffsetParseText    zeroOffsetPrintText    zeroOffsetText    int    LONG_NAME    MAX_LENGTH    SHORT_NAME    displayOffset    est    expectedPos    i    iMaxDigits    iMaxFields    iMaxParsedDigits    iMinDigits    iMinFields    iMinPrintedDigits    iParsedLengthEstimate    iPivot    iPrintedLengthEstimate    iType    len    length    limit    low    maxDigits    maxFields    maxParsedDigits    minDigits    minFields    minPrintedDigits    newPos    numDigits    parseEst    pivot    position    printEst    size    t    type    value    year    boolean    hasSignChar    iLenientParse    iShort    iShowSeparators    iSigned    isShort    lenientParse    negative    showSeparators    signed    TimeZoneId    INSTANCE    char    a    b    c    iValue    value    DateTimeFieldType    fieldType    iFieldType    iType    type    StringIndexOutOfBoundsException    e    Object    element    f    iFormatter    parser    printer    Map    cParseCache    iParseLookup    parseLookup        	time_14013_DateTimeFormatterBuilder_1_1	1625	1	src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java
1648	[PATCH]    prev    =    chrono.year().add(prev,    -1);	[BUG]    [BUGGY]    prev    =    chrono.year().add(prev,    1);    [FE]    java.lang.ExceptionInInitializerError    org.joda.time.TestAbstractPartial    [CONTEXT]    if    (iDayOfWeek    ==    0)    {    if    (prev    >=    instant)    {    prev    =    chrono.year().add(prev,    -1);    prev    =    setDayOfMonthPrevious(chrono,    prev);    }    }    else    {    prev    =    setDayOfWeek(chrono,    prev);    if    (prev    >=    instant)    {    [BUGGY]    prev    =    chrono.year().add(prev,    1);    prev    =    chrono.monthOfYear().set(prev,    iMonthOfYear);    prev    =    setDayOfMonthPrevious(chrono,    prev);    prev    =    setDayOfWeek(chrono,    prev);    }    }    [CLASS]        DateTimeZoneBuilder    OfYear    Recurrence    Rule    Transition    RuleSet    DSTZone    PrecalculatedZone    [METHOD]    previous    [RETURN_TYPE]    long        long    instant    int    standardOffset    int    saveMillis    [VARIABLES]    Recurrence    endRecurrence    iEndRecurrence    iRecurrence    iStartRecurrence    recurrence    startRecurrence    OfYear    iOfYear    iUpperOfYear    ofYear    long[]    iTransitions    transitions    DSTZone    iTailZone    tailZone    ArrayList    iRuleSets    iRules    transitions    int[]    iStandardOffsets    iWallOffsets    standardOffsets    wallOffsets    String    iInitialNameKey    iNameKey    id    nameKey    zoneID    String[]    iNameKeys    nameKeys    int    YEAR_LIMIT    dayOfMonth    dayOfWeek    fromYear    i    iDayOfMonth    iDayOfWeek    iFromYear    iInitialSaveMillis    iMillisOfDay    iMonthOfYear    iSaveMillis    iStandardOffset    iToYear    iUpperYear    iWallOffset    millisOfDay    monthOfYear    offset    offsetForLast    offsetForNew    ruleSetCount    saveMillis    size    standardOffset    toYear    v    wallOffset    year    long    iMillis    instant    lastLocal    millis    minutes    newLocal    next    prev    seconds    serialVersionUID    units    w    boolean    advanceDayOfWeek    iAdvance    outputID    char    iMode    mode    Chronology    chrono        	time_18553_DateTimeZoneBuilder_1_1	617	1	src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java
1649	[PATCH]    if    (str.charAt(i)    >=    '0'    &&    str.charAt(i)    <=    '9')    {	[BUG]    [BUGGY]    if    (str.charAt(i)    >    '0'    &&    str.charAt(i)    <=    '9')    {    [FE]    java.lang.IllegalArgumentException:    Invalid    format:       "pt-0.32s   "    testGetDurationMillis_Object1    [CONTEXT]    (str.charAt(1)    ==    'T'    ||    str.charAt(1)    ==    't')    &&    (str.charAt(len    -    1)    ==    'S'    ||    str.charAt(len    -    1)    ==    's'))    {        }    else    {    throw    new    IllegalArgumentException(   "Invalid    format:    \   "   "    +    original    +    '   "');    }    str    =    str.substring(2,    len    -    1);    int    dot    =    -1;    boolean    negative    =    false;    for    (int    i    =    0;    i    <    str.length();    i++)    {    [BUGGY]    if    (str.charAt(i)    >    '0'    &&    str.charAt(i)    <=    '9')    {        }    else    if    (i    ==    0    &&    str.charAt(0)    ==    '-')    {        negative    =    true;    }    else    if    (i    >    (negative    ?    1    :    0)    &&    str.charAt(i)    ==    '.'    &&    dot    ==    -1)    {        dot    =    i;    }    else    {    throw    new    IllegalArgumentException(   "Invalid    format:    \   "   "    +    original    +    '   "');    }    [CLASS]        StringConverter    [METHOD]    getDurationMillis    [RETURN_TYPE]    long        Object    object    [VARIABLES]    Object    object    String    original    str    boolean    negative    StringConverter    INSTANCE    int    dot    firstDigit    i    len    long    millis    seconds        	time_11879_StringConverter_1_1	117	1	src/main/java/org/joda/time/convert/StringConverter.java
1650	[PATCH]    return    withPeriodAdded(period,    1);	[BUG]    [BUGGY]    return    withPeriodAdded(period,    -1);    [FE]    junit.framework.AssertionFailedError:    expected:<2006-06-02T02:00:00.000>    but    was:<2006-05-30T22:00:00.000>    testAddToLocalDate    [CONTEXT]    public    LocalDateTime    plus(ReadablePeriod    period)    {    [BUGGY]    return    withPeriodAdded(period,    -1);    }    [CLASS]        LocalDateTime    Property    [METHOD]    plus    [RETURN_TYPE]    LocalDateTime        ReadablePeriod    period    [VARIABLES]    LocalDateTime    check    iInstant    instant    other    boolean    ReadablePeriod    period    Chronology    chrono    chronology    iChronology    DateTimeField    field    iField    long    iLocalMillis    instant    localMillis    newMillis    serialVersionUID    int    DAY_OF_MONTH    MILLIS_OF_DAY    MONTH_OF_YEAR    YEAR    amount    dayOfMonth    dom    era    hourOfDay    index    millisOfSecond    minuteOfHour    monthOfYear    scalar    secondOfMinute    value    year    yearOfEra        	time_1115_LocalDateTime_1_1	1086	1	src/main/java/org/joda/time/LocalDateTime.java
1651	[PATCH]    if    (type    ==    null    ||    length    ==    0)    {	[BUG]    [BUGGY]    if    (length    ==    0)    {    [FE]    java.lang.NullPointerException    testGetInstantConverterRemovedNull    [CONTEXT]    if    (supportedType    ==    null    ||    (type    !=    null    &&    !supportedType.isAssignableFrom(type)))    {        set    =    set.remove(i,    null);    converters    =    set.iConverters;    length    =    converters.length;    }    }            [BUGGY]    if    (length    ==    0)    {    return    null;    }    if    (length    ==    1)    {        return    converters[0];    }                [CLASS]        ConverterSet    Entry    [METHOD]    selectSlow    [RETURN_TYPE]    Converter        ConverterSet    set    Class<?>    type    [VARIABLES]    boolean    StringBuilder    msg    Converter[]    converters    copy    iConverters    removed    ConverterSet    set    Converter    converter    existing    iConverter    Class    iType    supportedType    type    int    i    j    length    Entry[]    entries    iSelectEntries    newEntries        	time_11693_ConverterSet_1_1	266	1	src/main/java/org/joda/time/convert/ConverterSet.java
1652	[PATCH]    return    instant    -    1;	[BUG]    [BUGGY]    return    instant    -    -1;    [FE]    junit.framework.ComparisonFailure:    2007-10-28T02:00:00.000+03:00    expected:<...10-28T02:00:00.000+0[4]:00>    but    was:<...10-28T02:00:00.000+0[3]:00>    test_getOffsetFromLocal_Moscow_Autumn_overlap_mins    [CONTEXT]    public    long    previousTransition(long    instant)    {    long[]    transitions    =    iTransitions;    int    i    =    Arrays.binarySearch(transitions,    instant);    if    (i    >=    0)    {    if    (instant    >    Long.MIN_VALUE)    {    [BUGGY]    return    instant    -    -1;    }    return    instant;    }    i    =    ~i;    if    (i    <    transitions.length)    {    if    (i    >    0)    {    long    prev    =    transitions[i    -    1];    if    (prev    >    Long.MIN_VALUE)    {    return    prev    -    1;    }    [CLASS]        DateTimeZoneBuilder    OfYear    Recurrence    Rule    Transition    RuleSet    DSTZone    PrecalculatedZone    [METHOD]    previousTransition    [RETURN_TYPE]    long        long    instant    [VARIABLES]    Recurrence    endRecurrence    iEndRecurrence    iRecurrence    iStartRecurrence    other    recurrence    startRecurrence    OfYear    iOfYear    iUpperOfYear    ofYear    other    long[]    iTransitions    trans    transitions    DSTZone    iTailZone    other    tailZone    ArrayList    copy    iRuleSets    iRules    transitions    int[]    iStandardOffsets    iWallOffsets    standardOffsets    wallOffsets    String    appendNameKey    curNameKey    iInitialNameKey    iNameKey    id    nameKey    nextNameKey    zoneID    String[]    iNameKeys    nameKeys    pool    set    zoneNameData    int    YEAR_LIMIT    dayOfMonth    dayOfWeek    daysToAdd    fromYear    i    iDayOfMonth    iDayOfWeek    iFromYear    iInitialSaveMillis    iMillisOfDay    iMonthOfYear    iSaveMillis    iStandardOffset    iToYear    iUpperYear    iWallOffset    index    j    millisOfDay    monthOfYear    offset    offsetForLast    offsetForNew    poolSize    ruleSetCount    saveMillis    size    standardOffset    toYear    v    wallOffset    year    long    curOffset    curStdOffset    end    firstMillis    iMillis    instant    lastLocal    millis    minutes    newLocal    next    nextMillis    nextOffset    nextStdOffset    prev    seconds    serialVersionUID    start    testInstant    units    upperMillis    w    boolean    advanceDayOfWeek    iAdvance    outputID    char    iMode    mode        	time_19288_DateTimeZoneBuilder_1_1	1594	1	src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java
1653	[PATCH]    while    (i    +    1    <    length)    {	[BUG]    [BUGGY]    while    (i    -    1    <    length)    {    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    7    testToString_String    [CONTEXT]    int    i    =    indexRef[0];    int    length    =    pattern.length();    char    c    =    pattern.charAt(i);    if    (c    >=    'A'    &&    c    <=    'Z'    ||    c    >=    'a'    &&    c    <=    'z')    {            buf.append(c);        [BUGGY]    while    (i    -    1    <    length)    {    char    peek    =    pattern.charAt(i    +    1);    if    (peek    ==    c)    {    buf.append(c);    i++;    }    else    {    break;    }    }    }    else    {        [CLASS]        DateTimeFormat    1    StyleFormatter    [METHOD]    parseToken    [RETURN_TYPE]    String        String    pattern    int[]    indexRef    [VARIABLES]    boolean    inLiteral    StringBuilder    buf    char    c    peek    int[]    indexRef    String    pattern    Map    PATTERN_CACHE    cCache    int    $anonymous0    DATE    DATETIME    FULL    LONG    MEDIUM    NONE    PATTERN_CACHE_SIZE    SHORT    TIME    dateStyle    i    iDateStyle    iTimeStyle    iType    length    maxDigits    timeStyle    tokenLen    type    long    serialVersionUID    DateTimeFormatter[]    STYLE_CACHE        	time_13197_DateTimeFormat_1_1	602	1	src/main/java/org/joda/time/format/DateTimeFormat.java
1654	[PATCH]    if    (months    ==    0)    {	[BUG]    [BUGGY]    if    (months    <=    0)    {    [FE]    junit.framework.AssertionFailedError:    expected:<P2M>    but    was:<P3M>    testMinusFields    [CONTEXT]    public    Period    plusMonths(int    months)    {    [BUGGY]    if    (months    <=    0)    {    return    this;    }    int[]    values    =    getValues();    getPeriodType().addIndexedField(this,    PeriodType.MONTH_INDEX,    values,    months);    return    new    Period(values,    getPeriodType());    }    [CLASS]        Period    [METHOD]    plusMonths    [RETURN_TYPE]    Period        int    months    [VARIABLES]    Period    ZERO    int[]    values    boolean    long    duration    endInstant    serialVersionUID    startInstant    int    months        	time_2477_Period_1_1	1068	1	src/main/java/org/joda/time/Period.java
1655	[PATCH]    if    (hoursOffset    <    -23    ||    hoursOffset    >    23)    {	[BUG]    [BUGGY]    if    (hoursOffset    <    -23    ||    hoursOffset    !=    23)    {    [FE]    java.lang.IllegalArgumentException:    Hours    out    of    range:    3    testForOffsetHours_int    [CONTEXT]    public    static    DateTimeZone    forOffsetHoursMinutes(int    hoursOffset,    int    minutesOffset)    throws    IllegalArgumentException    {    if    (hoursOffset    ==    0    &&    minutesOffset    ==    0)    {    return    DateTimeZone.UTC;    }    [BUGGY]    if    (hoursOffset    <    -23    ||    hoursOffset    !=    23)    {    throw    new    IllegalArgumentException(   "Hours    out    of    range:       "    +    hoursOffset);    }    if    (minutesOffset    <    -59    ||    minutesOffset    >    59)    {    throw    new    IllegalArgumentException(   "Minutes    out    of    range:       "    +    minutesOffset);    }    if    (hoursOffset    >    0    &&    minutesOffset    <    0)    {    throw    new    IllegalArgumentException(   "Positive    hours    must    not    have    negative    minutes:       "    +    minutesOffset);    }    int    offset    =    0;    try    {    [CLASS]        DateTimeZone    1    Stub    [METHOD]    forOffsetHoursMinutes    [RETURN_TYPE]    DateTimeZone        int    hoursOffset    int    minutesOffset    [VARIABLES]    Set    cAvailableIDs    ArithmeticException    ex    boolean    NameProvider    cNameProvider    String    iID    id    DateTimeFormatter    cOffsetFormatter    Map    cZoneIdConversion    iFixedOffsetCache    long    serialVersionUID    DateTimeZone    UTC    cDefault    temp    zone    int    MAX_MILLIS    hoursInMinutes    hoursOffset    minutesOffset    offset    Provider    cProvider        	time_58_DateTimeZone_1_1	276	1	src/main/java/org/joda/time/DateTimeZone.java
1656	[PATCH]    value    =    (int)    (valueLong    /    DateTimeConstants.MILLIS_PER_SECOND);	[BUG]    [BUGGY]    value    =    (int)    (valueLong    +    DateTimeConstants.MILLIS_PER_SECOND);    [FE]    junit.framework.ComparisonFailure:    expected:<P1Y2M3W4DT5H6M[7].008S>    but    was:<P1Y2M3W4DT5H6M[8008].008S>    testToString    [CONTEXT]    public    void    printTo(StringBuffer    buf,    ReadablePeriod    period,    Locale    locale)    {    long    valueLong    =    getFieldValue(period);    if    (valueLong    ==    Long.MAX_VALUE)    {    return;    }    int    value    =    (int)    valueLong;    if    (iFieldType    >=    SECONDS_MILLIS)    {    [BUGGY]    value    =    (int)    (valueLong    +    DateTimeConstants.MILLIS_PER_SECOND);    }    if    (iPrefix    !=    null)    {    iPrefix.printTo(buf,    value);    }    int    bufLen    =    buf.length();    int    minDigits    =    iMinPrintedDigits;    if    (minDigits    <=    1)    {    FormatUtils.appendUnpaddedInteger(buf,    value);    }    else    {    [CLASS]        PeriodFormatterBuilder    SimpleAffix    PluralAffix    CompositeAffix    FieldFormatter    Literal    Separator    Composite    [METHOD]    printTo    [RETURN_TYPE]    void        StringBuffer    buf    ReadablePeriod    period    Locale    locale    [VARIABLES]    Locale    locale    PeriodPrinter[]    iPrinters    PeriodParser    beforeParser    iAfterParser    iBeforeParser    parser    PeriodParser[]    iParsers    String    finalText    iFinalText    iPluralText    iSingularText    iText    periodStr    pluralText    singularText    temp    text    text1    text2    String[]    iParsedForms    variants    int    DAYS    HOURS    MAX_FIELD    MILLIS    MINUTES    MONTHS    PRINT_ZERO_ALWAYS    PRINT_ZERO_IF_SUPPORTED    PRINT_ZERO_NEVER    PRINT_ZERO_RARELY_FIRST    PRINT_ZERO_RARELY_LAST    SECONDS    SECONDS_MILLIS    SECONDS_OPTIONAL_MILLIS    WEEKS    YEARS    bufLen    dp    fieldType    i    iFieldType    iMaxParsedDigits    iMinPrintedDigits    iPrintZeroSetting    maxDigits    maxParsedDigits    minDigits    minPrinted    minPrintedDigits    pos    position    printZeroSetting    size    sourceLength    stopAt    sum    textLength    textLength1    textLength2    type    value    PeriodPrinter    beforePrinter    iAfterPrinter    iBeforePrinter    printer    long    valueLong    StringBuffer    buf    boolean    iNotParser    iNotPrinter    iRejectSignedValues    iUseAfter    iUseBefore    notParser    notPrinter    rejectSignedValues    useAfter    useBefore    v    ReadablePeriod    period    Literal    EMPTY    literal    List    elementPairs    iElementPairs    pairs    parserList    printerList    FieldFormatter[]    fieldFormatters    iFieldFormatters    PeriodFieldAffix    iLeft    iPrefix    iRight    iSuffix    left    prefix    right    suffix        	time_16931_PeriodFormatterBuilder_1_1	1127	1	src/main/java/org/joda/time/format/PeriodFormatterBuilder.java
1657	[PATCH]    if    (total    /    val2    !=    val1)    {	[BUG]    [BUGGY]    if    (total    /    val2    >    val1)    {    [FE]    junit.framework.AssertionFailedError    testSafeMultiplyLongInt    [CONTEXT]    if    (val1    ==    Long.MIN_VALUE)    {    throw    new    ArithmeticException(   "Multiplication    overflows    a    long:       "    +    val1    +       "    *       "    +    val2);    }    return    -val1;    case    0:    return    0L;    case    1:    return    val1;    }    long    total    =    val1    *    val2;    [BUGGY]    if    (total    /    val2    >    val1)    {    throw    new    ArithmeticException(   "Multiplication    overflows    a    long:       "    +    val1    +       "    *       "    +    val2);    }    return    total;    }    [CLASS]        FieldUtils    [METHOD]    safeMultiply    [RETURN_TYPE]    long        long    val1    int    val2    [VARIABLES]    boolean    long    total    val1    int    val2        	time_12462_FieldUtils_1_1	148	1	src/main/java/org/joda/time/field/FieldUtils.java
1658	[PATCH]    char    peek    =    pattern.charAt(i    +    1);	[BUG]    [BUGGY]    char    peek    =    pattern.charAt(i    /    1);    [FE]    junit.framework.ComparisonFailure:    expected:<[2002    ]00>    but    was:<[02002]00>    testToString_String    [CONTEXT]    int    i    =    indexRef[0];    int    length    =    pattern.length();    char    c    =    pattern.charAt(i);    if    (c    >=    'A'    &&    c    <=    'Z'    ||    c    >=    'a'    &&    c    <=    'z')    {            buf.append(c);    while    (i    +    1    <    length)    {    [BUGGY]    char    peek    =    pattern.charAt(i    /    1);    if    (peek    ==    c)    {    buf.append(c);    i++;    }    else    {    break;    }    }    }    else    {        buf.append('\'');    [CLASS]        DateTimeFormat    1    StyleFormatter    [METHOD]    parseToken    [RETURN_TYPE]    String        String    pattern    int[]    indexRef    [VARIABLES]    boolean    inLiteral    StringBuilder    buf    char    c    peek    int[]    indexRef    String    pattern    Map    PATTERN_CACHE    cCache    int    $anonymous0    DATE    DATETIME    FULL    LONG    MEDIUM    NONE    PATTERN_CACHE_SIZE    SHORT    TIME    dateStyle    i    iDateStyle    iTimeStyle    iType    length    maxDigits    timeStyle    tokenLen    type    long    serialVersionUID    DateTimeFormatter[]    STYLE_CACHE        	time_13207_DateTimeFormat_1_1	603	1	src/main/java/org/joda/time/format/DateTimeFormat.java
1659	[PATCH]    hourOfDay,    minuteOfHour,    secondOfMinute,    0,    zone);	[BUG]    [BUGGY]    hourOfDay,    minuteOfHour,    secondOfMinute,    -1,    zone);    [FE]    org.joda.time.IllegalFieldValueException:    Value    -1    for    millisOfSecond    must    be    in    the    range    [0,999]    testConstructor_int_int_int_int_int_int_nullDateTimeZone    [CONTEXT]    public    DateTime(    int    year,    int    monthOfYear,    int    dayOfMonth,    int    hourOfDay,    int    minuteOfHour,    int    secondOfMinute,    DateTimeZone    zone)    {    super(year,    monthOfYear,    dayOfMonth,    [BUGGY]    hourOfDay,    minuteOfHour,    secondOfMinute,    -1,    zone);    }    [CLASS]        DateTime    Property    [METHOD]    <init>    [RETURN_TYPE]    DateTimeZone)        int    year    int    monthOfYear    int    dayOfMonth    int    hourOfDay    int    minuteOfHour    int    secondOfMinute    DateTimeZone    zone    [VARIABLES]    DateTimeField    iField    boolean    long    instant    serialVersionUID    DateTime    iInstant    int    dayOfMonth    hourOfDay    minuteOfHour    monthOfYear    secondOfMinute    year    DateTimeZone    zone        	time_1455_DateTime_1_1	408	1	src/main/java/org/joda/time/DateTime.java
1660	[PATCH]    for    (int    i    =    fieldIndex    +    1;    i    <    partial.size();    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    fieldIndex    +    -1;    i    <    partial.size();    i++)    {    [FE]    java.lang.IndexOutOfBoundsException    testSetMethods    [CONTEXT]    public    int[]    set(ReadablePartial    partial,    int    fieldIndex,    int[]    values,    int    newValue)    {    FieldUtils.verifyValueBounds(this,    newValue,    getMinimumValue(partial,    values),    getMaximumValue(partial,    values));    values[fieldIndex]    =    newValue;            [BUGGY]    for    (int    i    =    fieldIndex    +    -1;    i    <    partial.size();    i++)    {    DateTimeField    field    =    partial.getField(i);    if    (values[i]    >    field.getMaximumValue(partial,    values))    {    values[i]    =    field.getMaximumValue(partial,    values);    }    if    (values[i]    <    field.getMinimumValue(partial,    values))    {    values[i]    =    field.getMinimumValue(partial,    values);    }    }    return    values;    }    [CLASS]        BaseDateTimeField    [METHOD]    set    [RETURN_TYPE]    int[]        ReadablePartial    partial    int    fieldIndex    int[]    values    int    newValue    [VARIABLES]    DateTimeFieldType    iType    type    int[]    values    ReadablePartial    partial    DateTimeField    field    boolean    int    fieldIndex    i    newValue        	time_7602_BaseDateTimeField_1_1	589	1	src/main/java/org/joda/time/field/BaseDateTimeField.java
1661	[PATCH]    DateTime    lowerLimit    =    new    DateTime(1,    1,    1,    0,    0,    0,    0,    chrono);	[BUG]    [BUGGY]    DateTime    lowerLimit    =    new    DateTime(1,    1,    1,    0,    0,    -1,    0,    chrono);    [FE]    java.lang.ExceptionInInitializerError    testGetFieldTypes    [CONTEXT]    if    (zone    ==    null)    {    zone    =    DateTimeZone.getDefault();    }    BuddhistChronology    chrono;    synchronized    (cCache)    {    chrono    =    cCache.get(zone);    if    (chrono    ==    null)    {        chrono    =    new    BuddhistChronology(GJChronology.getInstance(zone,    null),    null);        [BUGGY]    DateTime    lowerLimit    =    new    DateTime(1,    1,    1,    0,    0,    -1,    0,    chrono);    chrono    =    new    BuddhistChronology(LimitChronology.getInstance(chrono,    lowerLimit,    null),       "   ");    cCache.put(zone,    chrono);    }    }    return    chrono;    }    [CLASS]        BuddhistChronology    [METHOD]    getInstance    [RETURN_TYPE]    BuddhistChronology        DateTimeZone    zone    [VARIABLES]    boolean    BuddhistChronology    INSTANCE_UTC    chrono    DateTimeField    ERA_FIELD    Map    cCache    long    serialVersionUID    int    BE    BUDDHIST_OFFSET    DateTimeZone    zone    DateTime    lowerLimit        	time_8996_BuddhistChronology_1_1	116	1	src/main/java/org/joda/time/chrono/BuddhistChronology.java
1662	[PATCH]    if    (value    ==    '-')    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<-3>    but    was:<-27>    testFactory_parseDays_String    [CONTEXT]    if    (length    >=    10)    {        return    Integer.parseInt(text.substring(position,    position    +    length));    }    if    (length    <=    0)    {    return    0;    }    int    value    =    text.charAt(position++);    length--;    boolean    negative;    [BUGGY]    if    (false)    {    if    (--length    <    0)    {    return    0;    }    negative    =    true;    value    =    text.charAt(position++);    }    else    {    negative    =    false;    }    value    -=    '0';    while    (length--    >    0)    {    [CLASS]        PeriodFormatterBuilder    SimpleAffix    PluralAffix    CompositeAffix    FieldFormatter    Literal    Separator    Composite    [METHOD]    parseInt    [RETURN_TYPE]    int        String    text    int    position    int    length    [VARIABLES]    PeriodPrinter[]    iPrinters    PeriodParser    beforeParser    iAfterParser    iBeforeParser    parser    PeriodParser[]    iParsers    String    finalText    iFinalText    iPluralText    iSingularText    iText    periodStr    pluralText    singularText    temp    text    text1    text2    String[]    iParsedForms    variants    int    DAYS    HOURS    MAX_FIELD    MILLIS    MINUTES    MONTHS    PRINT_ZERO_ALWAYS    PRINT_ZERO_IF_SUPPORTED    PRINT_ZERO_NEVER    PRINT_ZERO_RARELY_FIRST    PRINT_ZERO_RARELY_LAST    SECONDS    SECONDS_MILLIS    SECONDS_OPTIONAL_MILLIS    WEEKS    YEARS    bufLen    dp    fieldType    fractLen    fractPos    fractValue    i    iFieldType    iMaxParsedDigits    iMinPrintedDigits    iPrintZeroSetting    length    limit    maxDigits    maxParsedDigits    minDigits    minPrinted    minPrintedDigits    pos    position    printZeroSetting    size    sourceLength    stopAt    suffixPos    sum    textLength    textLength1    textLength2    type    value    wholeValue    PeriodPrinter    beforePrinter    iAfterPrinter    iBeforePrinter    printer    boolean    hasDigits    iNotParser    iNotPrinter    iRejectSignedValues    iUseAfter    iUseBefore    mustParse    negative    notParser    notPrinter    rejectSignedValues    useAfter    useBefore    v    Literal    EMPTY    literal    List    elementPairs    iElementPairs    pairs    parserList    printerList    FieldFormatter[]    fieldFormatters    iFieldFormatters    PeriodFieldAffix    iLeft    iPrefix    iRight    iSuffix    left    prefix    right    suffix        	time_17361_PeriodFormatterBuilder_1_1	1365	1	src/main/java/org/joda/time/format/PeriodFormatterBuilder.java
1663	[PATCH]    return    ((value    <<    3)    +    (value    <<    1))    +    text.charAt(position    +    1)    -    '0';	[BUG]    [BUGGY]    return    ((value    >>>    3)    +    (value    <<    1))    +    text.charAt(position    +    1)    -    '0';    [FE]    junit.framework.ComparisonFailure:    expected:<+01:[23]>    but    was:<+01:[07]>    testForID_String    [CONTEXT]    static    int    parseTwoDigits(String    text,    int    position)    {    int    value    =    text.charAt(position)    -    '0';    [BUGGY]    return    ((value    >>>    3)    +    (value    <<    1))    +    text.charAt(position    +    1)    -    '0';    }    [CLASS]        FormatUtils    [METHOD]    parseTwoDigits    [RETURN_TYPE]    int        String    text    int    position    [VARIABLES]    String    text    boolean    double    LOG_10    int    position    value        	time_15959_FormatUtils_1_1	353	1	src/main/java/org/joda/time/format/FormatUtils.java
1664	[PATCH]    DateTime    lowerLimit    =    new    DateTime(1,    1,    1,    0,    0,    0,    0,    chrono);	[BUG]    [BUGGY]    DateTime    lowerLimit    =    new    DateTime(0,    1,    1,    0,    0,    0,    0,    chrono);    [FE]    java.lang.ExceptionInInitializerError    testToString    [CONTEXT]    if    (chronos    ==    null)    {    chronos    =    new    IslamicChronology[4];    cCache.put(zone,    chronos);    }    chrono    =    chronos[leapYears.index];    if    (chrono    ==    null)    {    if    (zone    ==    DateTimeZone.UTC)    {        chrono    =    new    IslamicChronology(null,    null,    leapYears);        [BUGGY]    DateTime    lowerLimit    =    new    DateTime(0,    1,    1,    0,    0,    0,    0,    chrono);    chrono    =    new    IslamicChronology(    LimitChronology.getInstance(chrono,    lowerLimit,    null),    null,    leapYears);    }    else    {    chrono    =    getInstance(DateTimeZone.UTC,    leapYears);    chrono    =    new    IslamicChronology    (ZonedChronology.getInstance(chrono,    zone),    null,    leapYears);    }    chronos[leapYears.index]    =    chrono;    }    [CLASS]        IslamicChronology    LeapYearPatternType    [METHOD]    getInstance    [RETURN_TYPE]    IslamicChronology        DateTimeZone    zone    LeapYearPatternType    leapYears    [VARIABLES]    LeapYearPatternType    LEAP_YEAR_15_BASED    LEAP_YEAR_16_BASED    LEAP_YEAR_HABASH_AL_HASIB    LEAP_YEAR_INDIAN    iLeapYears    leapYears    IslamicChronology[]    chronos    boolean    byte    index    DateTimeField    ERA_FIELD    IslamicChronology    INSTANCE_UTC    chrono    Map    cCache    long    MILLIS_PER_CYCLE    MILLIS_PER_LONG_MONTH    MILLIS_PER_LONG_YEAR    MILLIS_PER_MONTH    MILLIS_PER_MONTH_PAIR    MILLIS_PER_SHORT_YEAR    MILLIS_PER_YEAR    MILLIS_YEAR_1    serialVersionUID    int    AH    CYCLE    LONG_MONTH_LENGTH    MAX_YEAR    MIN_YEAR    MONTH_PAIR_LENGTH    SHORT_MONTH_LENGTH    index    pattern    DateTimeZone    zone    DateTime    lowerLimit        	time_10432_IslamicChronology_1_1	208	1	src/main/java/org/joda/time/chrono/IslamicChronology.java
1665	[PATCH]    leapYears    =    (relativeYear    +    3)    >>    2;	[BUG]    [BUGGY]    leapYears    =    (relativeYear    /    3)    >>    2;    [FE]    junit.framework.AssertionFailedError:    expected:<0284-08-29T00:00:00.000Z>    but    was:<0285-06-05T00:00:00.000Z>    testEpoch    [CONTEXT]    long    calculateFirstDayOfYearMillis(int    year)    {                int    relativeYear    =    year    -    1687;    int    leapYears;    if    (relativeYear    <=    0)    {            [BUGGY]    leapYears    =    (relativeYear    /    3)    >>    2;    }    else    {    leapYears    =    relativeYear    >>    2;        if    (!isLeapYear(year))    {    leapYears++;    }    }    long    millis    =    (relativeYear    *    365L    +    leapYears)        [CLASS]        CopticChronology    [METHOD]    calculateFirstDayOfYearMillis    [RETURN_TYPE]    long        int    year    [VARIABLES]    CopticChronology    INSTANCE_UTC    chrono    DateTimeField    ERA_FIELD    boolean    Map    cCache    long    millis    serialVersionUID    int    AM    MAX_YEAR    MIN_YEAR    leapYears    minDays    minDaysInFirstWeek    relativeYear    year        	time_9117_CopticChronology_1_1	214	1	src/main/java/org/joda/time/chrono/CopticChronology.java
1666	[PATCH]    }    else    if    (workingFields.contains(DateTimeFieldType.dayOfYear()))    {	[BUG]    [BUGGY]    }    else    if    (false)    {    [FE]    java.lang.IllegalArgumentException:    No    valid    format    for    fields:    [dayOfYear]    testForFields_ordinalBased_D    [CONTEXT]    if    (fields    ==    null    ||    fields.size()    ==    0)    {    throw    new    IllegalArgumentException(   "The    fields    must    not    be    null    or    empty   ");    }    Set<DateTimeFieldType>    workingFields    =    new    HashSet<DateTimeFieldType>(fields);    int    inputSize    =    workingFields.size();    boolean    reducedPrec    =    false;    DateTimeFormatterBuilder    bld    =    new    DateTimeFormatterBuilder();        if    (workingFields.contains(DateTimeFieldType.monthOfYear()))    {    reducedPrec    =    dateByMonth(bld,    workingFields,    extended,    strictISO);    [BUGGY]    }    else    if    (false)    {    reducedPrec    =    dateByOrdinal(bld,    workingFields,    extended,    strictISO);    }    else    if    (workingFields.contains(DateTimeFieldType.weekOfWeekyear()))    {    reducedPrec    =    dateByWeek(bld,    workingFields,    extended,    strictISO);    }    else    if    (workingFields.contains(DateTimeFieldType.dayOfMonth()))    {    reducedPrec    =    dateByMonth(bld,    workingFields,    extended,    strictISO);    }    else    if    (workingFields.contains(DateTimeFieldType.dayOfWeek()))    {    reducedPrec    =    dateByWeek(bld,    workingFields,    extended,    strictISO);    }    else    if    (workingFields.remove(DateTimeFieldType.year()))    {    bld.append(Constants.ye);    reducedPrec    =    true;    [CLASS]        ISODateTimeFormat    Constants    [METHOD]    forFields    [RETURN_TYPE]    DateTimeFormatter        DateTimeFieldType>    fields    boolean    extended    boolean    strictISO    [VARIABLES]    boolean    datePresent    extended    reducedPrec    strictISO    Set    workingFields    Collection    fields    DateTimeFormatter    bd    bdt    bdtx    bod    bodt    bodtx    bt    btt    bttx    btx    bwd    bwdt    bwdtx    dh    dhm    dhms    dhmsf    dhmsl    dme    dotp    dp    dpe    dt    dtp    dtx    dwe    dye    fse    hde    hm    hms    hmsf    hmsl    ldotp    ldp    lte    ltp    mhe    mye    od    odt    odtx    sme    t    tp    tpe    tt    ttx    tx    wdt    wdtx    we    ww    wwd    wwe    ye    ym    ymd    ze    int    inputSize    DateTimeFormatterBuilder    bld    UnsupportedOperationException    ex        	time_16021_ISODateTimeFormat_1_1	166	1	src/main/java/org/joda/time/format/ISODateTimeFormat.java
1667	[PATCH]    if    (length    ==    0    &&    (c    ==    '-'    ||    c    ==    '+')    &&    !iRejectSignedValues)    {	[BUG]    [BUGGY]    if    (length    ==    -1    &&    (c    ==    '-'    ||    c    ==    '+')    &&    !iRejectSignedValues)    {    [FE]    java.lang.IllegalArgumentException:    Invalid    format:       "P-3D   "    is    malformed    at       "-3D   "    testFactory_parseDays_String    [CONTEXT]    limit    =    Math.min(iMaxParsedDigits,    text.length()    -    position);    }        int    length    =    0;    int    fractPos    =    -1;    boolean    hasDigits    =    false;    while    (length    <    limit)    {    char    c    =    text.charAt(position    +    length);        [BUGGY]    if    (length    ==    -1    &&    (c    ==    '-'    ||    c    ==    '+')    &&    !iRejectSignedValues)    {    boolean    negative    =    c    ==    '-';        if    (length    +    1    >=    limit    ||    (c    =    text.charAt(position    +    length    +    1))    <    '0'    ||    c    >    '9')    {    break;    }    if    (negative)    {    [CLASS]        PeriodFormatterBuilder    SimpleAffix    PluralAffix    CompositeAffix    FieldFormatter    Literal    Separator    Composite    [METHOD]    parseInto    [RETURN_TYPE]    int        ReadWritablePeriod    period    String    text    int    position    Locale    locale    [VARIABLES]    Locale    locale    PeriodPrinter[]    iPrinters    PeriodParser    beforeParser    iAfterParser    iBeforeParser    parser    ReadWritablePeriod    period    PeriodParser[]    iParsers    String    finalText    iFinalText    iPluralText    iSingularText    iText    periodStr    pluralText    singularText    temp    text    text1    text2    String[]    iParsedForms    variants    int    DAYS    HOURS    MAX_FIELD    MILLIS    MINUTES    MONTHS    PRINT_ZERO_ALWAYS    PRINT_ZERO_IF_SUPPORTED    PRINT_ZERO_NEVER    PRINT_ZERO_RARELY_FIRST    PRINT_ZERO_RARELY_LAST    SECONDS    SECONDS_MILLIS    SECONDS_OPTIONAL_MILLIS    WEEKS    YEARS    bufLen    dp    fieldType    fractLen    fractPos    fractValue    i    iFieldType    iMaxParsedDigits    iMinPrintedDigits    iPrintZeroSetting    length    limit    maxDigits    maxParsedDigits    minDigits    minPrinted    minPrintedDigits    pos    position    printZeroSetting    size    sourceLength    stopAt    suffixPos    sum    textLength    textLength1    textLength2    type    value    wholeValue    PeriodPrinter    beforePrinter    iAfterPrinter    iBeforePrinter    printer    boolean    hasDigits    iNotParser    iNotPrinter    iRejectSignedValues    iUseAfter    iUseBefore    mustParse    negative    notParser    notPrinter    rejectSignedValues    useAfter    useBefore    v    Literal    EMPTY    literal    char    c    List    elementPairs    iElementPairs    pairs    parserList    printerList    FieldFormatter[]    fieldFormatters    iFieldFormatters    PeriodFieldAffix    iLeft    iPrefix    iRight    iSuffix    left    prefix    right    suffix        	time_17100_PeriodFormatterBuilder_1_1	1254	1	src/main/java/org/joda/time/format/PeriodFormatterBuilder.java
1668	[PATCH]    iMillis    =    FieldUtils.safeAdd(endMillis,    -startMillis);	[BUG]    [BUGGY]    iMillis    =    FieldUtils.safeAdd(endMillis,    +startMillis);    [FE]    junit.framework.AssertionFailedError:    expected:<34218061001>    but    was:<2207689261001>    testConstructor_Object4    [CONTEXT]    protected    BaseDuration(ReadableInstant    start,    ReadableInstant    end)    {    super();    if    (start    ==    end)    {    iMillis    =    0L;    }    else    {    long    startMillis    =    DateTimeUtils.getInstantMillis(start);    long    endMillis    =    DateTimeUtils.getInstantMillis(end);    [BUGGY]    iMillis    =    FieldUtils.safeAdd(endMillis,    +startMillis);    }    }    [CLASS]        BaseDuration    [METHOD]    <init>    [RETURN_TYPE]    ReadableInstant)        ReadableInstant    start    ReadableInstant    end    [VARIABLES]    long    duration    endInstant    endMillis    iMillis    serialVersionUID    startInstant    startMillis    ReadableInstant    end    start    boolean        	time_4863_BaseDuration_1_1	91	1	src/main/java/org/joda/time/base/BaseDuration.java
1669	[PATCH]    return    getInstance(zone,    4);	[BUG]    [BUGGY]    return    getInstance(zone,    -4);    [FE]    java.lang.ExceptionInInitializerError    testToString    [CONTEXT]    public    static    EthiopicChronology    getInstance(DateTimeZone    zone)    {    [BUGGY]    return    getInstance(zone,    -4);    }    [CLASS]        EthiopicChronology    [METHOD]    getInstance    [RETURN_TYPE]    EthiopicChronology        DateTimeZone    zone    [VARIABLES]    boolean    EthiopicChronology    INSTANCE_UTC    DateTimeField    ERA_FIELD    Map    cCache    long    serialVersionUID    int    EE    MAX_YEAR    MIN_YEAR    minDaysInFirstWeek    DateTimeZone    zone        	time_9193_EthiopicChronology_1_1	108	1	src/main/java/org/joda/time/chrono/EthiopicChronology.java
1670	[PATCH]    if    (days    ==    0)    {	[BUG]    [BUGGY]    if    (days    >=    0)    {    [FE]    junit.framework.AssertionFailedError:    expected:<5>    but    was:<2>    testPlus_int    [CONTEXT]    public    Days    plus(int    days)    {    [BUGGY]    if    (days    >=    0)    {    return    this;    }    return    Days.days(FieldUtils.safeAdd(getValue(),    days));    }    [CLASS]        Days    [METHOD]    plus    [RETURN_TYPE]    Days        int    days    [VARIABLES]    boolean    PeriodFormatter    PARSER    long    days    serialVersionUID    int    days    Days    FIVE    FOUR    MAX_VALUE    MIN_VALUE    ONE    SEVEN    SIX    THREE    TWO    ZERO        	time_4527_Days_1_1	357	1	src/main/java/org/joda/time/Days.java
1671	[PATCH]    if    (instant    >=    0)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError:    expected:<2>    but    was:<-5>    testCalendar    [CONTEXT]    int    getDayOfWeek(long    instant)    {        long    daysSince19700101;    [BUGGY]    if    (true)    {    daysSince19700101    =    instant    /    DateTimeConstants.MILLIS_PER_DAY;    }    else    {    daysSince19700101    =    (instant    -    (DateTimeConstants.MILLIS_PER_DAY    -    1))        if    (daysSince19700101    <    -3)    {    return    7    +    (int)    ((daysSince19700101    +    4)    %    7);    }    }    return    1    +    (int)    ((daysSince19700101    +    3)    %    7);    [CLASS]        BasicChronology    HalfdayField    YearInfo    [METHOD]    getDayOfWeek    [RETURN_TYPE]    int        long    instant    [VARIABLES]    DateTimeField    cClockhourOfDayField    cClockhourOfHalfdayField    cHalfdayOfDayField    cHourOfDayField    cHourOfHalfdayField    cMillisOfDayField    cMillisOfSecondField    cMinuteOfDayField    cMinuteOfHourField    cSecondOfDayField    cSecondOfMinuteField    field    boolean    DurationField    cDaysField    cHalfdaysField    cHoursField    cMillisField    cMinutesField    cSecondsField    cWeeksField    YearInfo[]    iYearInfoCache    long    dateMillis    daysSince19700101    diff    firstDayMillis    firstWeekMillis1    firstWeekMillis2    i2    iFirstDayMillis    instant    jan1millis    millis    oneYear    serialVersionUID    unitMillis    yearStart    int    CACHE_MASK    CACHE_SIZE    dayOfMonth    hourOfDay    iMinDaysInFirstWeek    iYear    index    jan1dayOfWeek    millisOfDay    millisOfSecond    minDaysInFirstWeek    minuteOfHour    month    monthOfYear    secondOfMinute    week    year        	time_7070_BasicChronology_1_1	542	1	src/main/java/org/joda/time/chrono/BasicChronology.java
1672	[PATCH]    if    (fieldIndex    ==    -1)    {	[BUG]    [BUGGY]    if    (fieldIndex    ==    1)    {    [FE]    junit.framework.AssertionFailedError:    expected:<0>    but    was:<1>    testSetPeriod_long_long_NoMonths    [CONTEXT]    private    PeriodType    withFieldRemoved(int    indicesIndex,    String    name)    {    int    fieldIndex    =    iIndices[indicesIndex];    [BUGGY]    if    (fieldIndex    ==    1)    {    return    this;    }    DurationFieldType[]    types    =    new    DurationFieldType[size()    -    1];    for    (int    i    =    0;    i    <    iTypes.length;    i++)    {    if    (i    <    fieldIndex)    {    types[i]    =    iTypes[i];    }    else    if    (i    >    fieldIndex)    {    types[i    -    1]    =    iTypes[i];    }    [CLASS]        PeriodType    [METHOD]    withFieldRemoved    [RETURN_TYPE]    PeriodType        int    indicesIndex    String    name    [VARIABLES]    PeriodType    cDTime    cDays    cHours    cMillis    cMinutes    cMonths    cSeconds    cStandard    cTime    cWeeks    cYD    cYDTime    cYMD    cYMDTime    cYWD    cYWDTime    cYears    checkPartType    checkedType    inPartType    type    boolean    DurationFieldType[]    iTypes    types    int[]    iIndices    indices    values    String    iName    name    Map    cTypes    cache    long    serialVersionUID    int    DAY_INDEX    HOUR_INDEX    MILLI_INDEX    MINUTE_INDEX    MONTH_INDEX    SECOND_INDEX    WEEK_INDEX    YEAR_INDEX    fieldIndex    i    index    indicesIndex    isize    newValue    realIndex    valueToAdd        	time_2191_PeriodType_1_1	800	1	src/main/java/org/joda/time/PeriodType.java
1673	[PATCH]    if    (time    !=    null    &&    getChronology()    !=    time.getChronology())    {	[BUG]    [BUGGY]    if    (time    !=    null    &&    true)    {    [FE]    java.lang.IllegalArgumentException:    The    chronology    of    the    time    does    not    match    testToDateTime_LocalTime_Zone    [CONTEXT]    public    DateTime    toDateTime(LocalTime    time,    DateTimeZone    zone)    {    [BUGGY]    if    (time    !=    null    &&    true)    {    throw    new    IllegalArgumentException(   "The    chronology    of    the    time    does    not    match   ");    }    Chronology    chrono    =    getChronology().withZone(zone);    long    instant    =    DateTimeUtils.currentTimeMillis();    instant    =    chrono.set(this,    instant);    if    (time    !=    null)    {    instant    =    chrono.set(time,    instant);    }    return    new    DateTime(instant,    chrono);    }    [CLASS]        LocalDate    Property    [METHOD]    toDateTime    [RETURN_TYPE]    DateTime        LocalTime    time    DateTimeZone    zone    [VARIABLES]    Set    DATE_DURATION_TYPES    boolean    LocalTime    time    Chronology    chrono    chronology    iChronology    DateTimeField    field    iField    LocalDate    iInstant    instant    other    long    iLocalMillis    instant    instantMillis    localMillis    resolved    serialVersionUID    int    DAY_OF_MONTH    MONTH_OF_YEAR    YEAR    dayOfMonth    era    hash    iHash    index    monthOfYear    year    yearOfEra    DateTimeZone    zone        	time_3289_LocalDate_1_1	939	1	src/main/java/org/joda/time/LocalDate.java
1674	[PATCH]    return    ((value    <<    3)    +    (value    <<    1))    +    text.charAt(position    +    1)    -    '0';	[BUG]    [BUGGY]    return    ((value    <<    3)    +    (value    <<    0))    +    text.charAt(position    +    1)    -    '0';    [FE]    junit.framework.ComparisonFailure:    expected:<+01:2[3]>    but    was:<+01:2[1]>    testForID_String    [CONTEXT]    static    int    parseTwoDigits(String    text,    int    position)    {    int    value    =    text.charAt(position)    -    '0';    [BUGGY]    return    ((value    <<    3)    +    (value    <<    0))    +    text.charAt(position    +    1)    -    '0';    }    [CLASS]        FormatUtils    [METHOD]    parseTwoDigits    [RETURN_TYPE]    int        String    text    int    position    [VARIABLES]    String    text    boolean    double    LOG_10    int    position    value        	time_15960_FormatUtils_1_1	353	1	src/main/java/org/joda/time/format/FormatUtils.java
1675	[PATCH]    if    (wholeValue    <    0)    {	[BUG]    [BUGGY]    if    (wholeValue    <=    0)    {    [FE]    junit.framework.AssertionFailedError:    expected:<56>    but    was:<-56>    testSetIntoPeriod_Object4    [CONTEXT]    if    (fractLen    >=    3)    {    fractValue    =    parseInt(text,    fractPos,    3);    }    else    {    fractValue    =    parseInt(text,    fractPos,    fractLen);    if    (fractLen    ==    1)    {    fractValue    *=    100;    }    else    {    fractValue    *=    10;    }    }    [BUGGY]    if    (wholeValue    <=    0)    {    fractValue    =    -fractValue;    }    }    [CLASS]        PeriodFormatterBuilder    SimpleAffix    PluralAffix    CompositeAffix    FieldFormatter    Literal    Separator    Composite    [METHOD]    parseInto    [RETURN_TYPE]    int        ReadWritablePeriod    period    String    text    int    position    Locale    locale    [VARIABLES]    Locale    locale    PeriodPrinter[]    iPrinters    PeriodParser    beforeParser    iAfterParser    iBeforeParser    parser    ReadWritablePeriod    period    PeriodParser[]    iParsers    String    finalText    iFinalText    iPluralText    iSingularText    iText    periodStr    pluralText    singularText    temp    text    text1    text2    String[]    iParsedForms    variants    int    DAYS    HOURS    MAX_FIELD    MILLIS    MINUTES    MONTHS    PRINT_ZERO_ALWAYS    PRINT_ZERO_IF_SUPPORTED    PRINT_ZERO_NEVER    PRINT_ZERO_RARELY_FIRST    PRINT_ZERO_RARELY_LAST    SECONDS    SECONDS_MILLIS    SECONDS_OPTIONAL_MILLIS    WEEKS    YEARS    bufLen    dp    fieldType    fractLen    fractPos    fractValue    i    iFieldType    iMaxParsedDigits    iMinPrintedDigits    iPrintZeroSetting    length    limit    maxDigits    maxParsedDigits    minDigits    minPrinted    minPrintedDigits    pos    position    printZeroSetting    size    sourceLength    stopAt    suffixPos    sum    textLength    textLength1    textLength2    type    value    wholeValue    PeriodPrinter    beforePrinter    iAfterPrinter    iBeforePrinter    printer    boolean    hasDigits    iNotParser    iNotPrinter    iRejectSignedValues    iUseAfter    iUseBefore    mustParse    negative    notParser    notPrinter    rejectSignedValues    useAfter    useBefore    v    Literal    EMPTY    literal    char    c    List    elementPairs    iElementPairs    pairs    parserList    printerList    FieldFormatter[]    fieldFormatters    iFieldFormatters    PeriodFieldAffix    iLeft    iPrefix    iRight    iSuffix    left    prefix    right    suffix        	time_17324_PeriodFormatterBuilder_1_1	1331	1	src/main/java/org/joda/time/format/PeriodFormatterBuilder.java
1676	[PATCH]    for    (int    i    =    0,    isize    =    period.size();    i    <    isize;    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    0,    isize    =    period.size();    i    <=    isize;    i++)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    8    testWithDurationAdded_RP_int    [CONTEXT]    public    long    add(ReadablePeriod    period,    long    instant,    int    scalar)    {    if    (scalar    !=    0    &&    period    !=    null)    {    [BUGGY]    for    (int    i    =    0,    isize    =    period.size();    i    <=    isize;    i++)    {    long    value    =    period.getValue(i);    if    (value    !=    0)    {    instant    =    period.getFieldType(i).getField(this).add(instant,    value    *    scalar);    }    }    }    return    instant;    }    [CLASS]        BaseChronology    [METHOD]    add    [RETURN_TYPE]    long        ReadablePeriod    period    long    instant    int    scalar    [VARIABLES]    boolean    ReadablePeriod    period    long    current    duration    endInstant    instant    serialVersionUID    startInstant    value    int    i    isize    scalar        	time_629_BaseChronology_1_1	302	1	src/main/java/org/joda/time/chrono/BaseChronology.java
1677	[PATCH]    return    (1969L    *    MILLIS_PER_YEAR    +    352L    *    DateTimeConstants.MILLIS_PER_DAY)    /    2;	[BUG]    [BUGGY]    return    (1969L    *    MILLIS_PER_YEAR    +    352L    *    DateTimeConstants.MILLIS_PER_DAY)    *    2;    [FE]    java.lang.ExceptionInInitializerError    testGetFieldTypes    [CONTEXT]    long    getApproxMillisAtEpochDividedByTwo()    {    [BUGGY]    return    (1969L    *    MILLIS_PER_YEAR    +    352L    *    DateTimeConstants.MILLIS_PER_DAY)    *    2;    }    [CLASS]        JulianChronology    [METHOD]    getApproxMillisAtEpochDividedByTwo    [RETURN_TYPE]    long        [VARIABLES]    boolean    JulianChronology    INSTANCE_UTC    chrono    Map    cCache    long    MILLIS_PER_MONTH    MILLIS_PER_YEAR    millis    serialVersionUID    int    MAX_YEAR    MIN_YEAR    dayOfMonth    leapYears    minDays    minDaysInFirstWeek    monthOfYear    relativeYear    year        	time_9959_JulianChronology_1_1	261	1	src/main/java/org/joda/time/chrono/JulianChronology.java
1678	[PATCH]    if    (length    ==    0    &&    (c    ==    '-'    ||    c    ==    '+'))    {	[BUG]    [BUGGY]    if    (length    ==    -1    &&    (c    ==    '-'    ||    c    ==    '+'))    {    [FE]    java.lang.IllegalArgumentException:    Invalid    format:       "+50   "    testFormat_year_twoDigit    [CONTEXT]    limit    =    Math.min(2,    limit);    if    (limit    <    2)    {    return    ~position;    }    }    else    {    boolean    hasSignChar    =    false;    boolean    negative    =    false;    int    length    =    0;    while    (length    <    limit)    {    char    c    =    text.charAt(position    +    length);    [BUGGY]    if    (length    ==    -1    &&    (c    ==    '-'    ||    c    ==    '+'))    {    hasSignChar    =    true;    negative    =    c    ==    '-';    if    (negative)    {    length++;    }    else    {        position++;    limit--;    }    continue;    [CLASS]        DateTimeFormatterBuilder    CharacterLiteral    StringLiteral    NumberFormatter    UnpaddedNumber    PaddedNumber    FixedNumber    TwoDigitYear    TextField    Fraction    TimeZoneOffset    TimeZoneName    TimeZoneId    Composite    MatchingParser    [METHOD]    parseInto    [RETURN_TYPE]    int        DateTimeParserBucket    bucket    String    text    int    position    [VARIABLES]    DateTimePrinter[]    iPrinters    Set    ALL_IDS    DateTimeParserBucket    bucket    ArrayList    iElementPairs    DateTimeParser[]    copyOfParsers    iParsers    parsers    String    iValue    iZeroOffsetParseText    iZeroOffsetPrintText    pattern    text    value    zeroOffsetParseText    zeroOffsetPrintText    zeroOffsetText    int    LONG_NAME    MAX_LENGTH    SHORT_NAME    displayOffset    est    expectedPos    i    iMaxDigits    iMaxFields    iMaxParsedDigits    iMinDigits    iMinFields    iMinPrintedDigits    iParsedLengthEstimate    iPivot    iPrintedLengthEstimate    iType    len    length    limit    low    maxDigits    maxFields    maxParsedDigits    minDigits    minFields    minPrintedDigits    newPos    numDigits    parseEst    pivot    position    printEst    size    t    type    value    year    boolean    hasSignChar    iLenientParse    iShort    iShowSeparators    iSigned    isShort    lenientParse    negative    showSeparators    signed    TimeZoneId    INSTANCE    char    a    b    c    iValue    value    DateTimeFieldType    fieldType    iFieldType    iType    type    StringIndexOutOfBoundsException    e    Object    element    f    iFormatter    parser    printer    Map    cParseCache    iParseLookup    parseLookup        	time_13928_DateTimeFormatterBuilder_1_1	1585	1	src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java
1679	[PATCH]    bucket.setOffset(Integer.valueOf(0));	[BUG]    [BUGGY]    bucket.setOffset(Integer.valueOf(1));    [FE]    junit.framework.AssertionFailedError:    expected:<292278993-01-01T00:00:00.000Z>    but    was:<292278992-12-31T23:59:59.999Z>    testMaxYear    [CONTEXT]    if    (limit    >    0)    {    char    c    =    text.charAt(position);    if    (c    ==    '-'    ||    c    ==    '+')    {    break    zeroOffset;    }    }    bucket.setOffset(Integer.valueOf(0));    return    position;    }    if    (text.regionMatches(true,    position,    iZeroOffsetParseText,    0,    iZeroOffsetParseText.length()))    {    [BUGGY]    bucket.setOffset(Integer.valueOf(1));    return    position    +    iZeroOffsetParseText.length();    }    }            if    (limit    <=    1)    {    return    ~position;    }        [CLASS]        DateTimeFormatterBuilder    CharacterLiteral    StringLiteral    NumberFormatter    UnpaddedNumber    PaddedNumber    FixedNumber    TwoDigitYear    TextField    Fraction    TimeZoneOffset    TimeZoneName    TimeZoneId    Composite    MatchingParser    [METHOD]    parseInto    [RETURN_TYPE]    int        DateTimeParserBucket    bucket    String    text    int    position    [VARIABLES]    DateTimePrinter[]    iPrinters    Set    ALL_IDS    validValues    DateTimeParserBucket    bucket    ArrayList    iElementPairs    DateTimeParser[]    copyOfParsers    iParsers    parsers    String    iValue    iZeroOffsetParseText    iZeroOffsetPrintText    match    pattern    str    text    value    zeroOffsetParseText    zeroOffsetPrintText    zeroOffsetText    int    LONG_NAME    MAX_LENGTH    SHORT_NAME    count    digits    displayOffset    est    expectedPos    hours    i    iMaxDigits    iMaxFields    iMaxParsedDigits    iMinDigits    iMinFields    iMinPrintedDigits    iParsedLengthEstimate    iPivot    iPrintedLengthEstimate    iType    len    length    limit    low    max    maxDigits    maxFields    maxLength    maxParsedDigits    min    minDigits    minFields    minPrintedDigits    minutes    newPos    numDigits    offset    parseEst    pivot    position    printEst    seconds    size    t    type    value    year    boolean    expectSeparators    hasSignChar    iLenientParse    iShort    iShowSeparators    iSigned    isShort    lenientParse    negative    showSeparators    signed    TimeZoneId    INSTANCE    char    a    b    c    iValue    value    DateTimeFieldType    fieldType    iFieldType    iType    type    Object    element    f    iFormatter    parser    printer    Map    cParseCache    iParseLookup    innerMap    parseLookup        	time_14873_DateTimeFormatterBuilder_1_1	2294	1	src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java
1680	[PATCH]    if    (field    ==    null    ||    !field.isSupported())    {	[BUG]    [BUGGY]    if    (field    ==    null    !=    !field.isSupported())    {    [FE]    java.lang.ExceptionInInitializerError    testFactory_standardPeriodIn_RPeriod    [CONTEXT]    private    DurationField    convertField(DurationField    field,    HashMap<Object,    Object>    converted)    {    [BUGGY]    if    (field    ==    null    !=    !field.isSupported())    {    return    field;    }    if    (converted.containsKey(field))    {    return    (DurationField)converted.get(field);    }    ZonedDurationField    zonedField    =    new    ZonedDurationField(field,    getZone());    converted.put(field,    zonedField);    return    zonedField;    }    [CLASS]        ZonedChronology    ZonedDurationField    ZonedDateTimeField    [METHOD]    convertField    [RETURN_TYPE]    DurationField        DurationField    field    Object>    converted    [VARIABLES]    boolean    iTimeField    ZonedDurationField    zonedField    HashMap    converted    DateTimeField    field    iField    DurationField    durationField    field    iDurationField    iField    iLeapDurationField    iRangeDurationField    leapDurationField    rangeDurationField    long    instant    localInstant    serialVersionUID    DateTimeZone    iZone    zone        	time_11113_ZonedChronology_1_1	197	1	src/main/java/org/joda/time/chrono/ZonedChronology.java
1681	[PATCH]    if    (bld.canBuildFormatter()    ==    false)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.UnsupportedOperationException:    Both    printing    and    parsing    not    supported    testToString5    [CONTEXT]    }    else    if    (workingFields.remove(DateTimeFieldType.weekyear()))    {    bld.append(Constants.we);    reducedPrec    =    true;    }    boolean    datePresent    =    (workingFields.size()    <    inputSize);        time(bld,    workingFields,    extended,    strictISO,    reducedPrec,    datePresent);            [BUGGY]    if    (false)    {    throw    new    IllegalArgumentException(   "No    valid    format    for    fields:       "    +    fields);    }            try    {    fields.retainAll(workingFields);    }    catch    (UnsupportedOperationException    ex)    {        }    [CLASS]        ISODateTimeFormat    Constants    [METHOD]    forFields    [RETURN_TYPE]    DateTimeFormatter        DateTimeFieldType>    fields    boolean    extended    boolean    strictISO    [VARIABLES]    boolean    datePresent    extended    reducedPrec    strictISO    Set    workingFields    Collection    fields    DateTimeFormatter    bd    bdt    bdtx    bod    bodt    bodtx    bt    btt    bttx    btx    bwd    bwdt    bwdtx    dh    dhm    dhms    dhmsf    dhmsl    dme    dotp    dp    dpe    dt    dtp    dtx    dwe    dye    fse    hde    hm    hms    hmsf    hmsl    ldotp    ldp    lte    ltp    mhe    mye    od    odt    odtx    sme    t    tp    tpe    tt    ttx    tx    wdt    wdtx    we    ww    wwd    wwe    ye    ym    ymd    ze    int    inputSize    DateTimeFormatterBuilder    bld    UnsupportedOperationException    ex        	time_16048_ISODateTimeFormat_1_1	187	1	src/main/java/org/joda/time/format/ISODateTimeFormat.java
1682	[PATCH]    return    iTimeField    ?    iField.isPrecise()    :    iField.isPrecise()    &&    this.iZone.isFixed();	[BUG]    [BUGGY]    return    iTimeField    ?    iField.isPrecise()    :    iField.isPrecise();    [FE]    junit.framework.AssertionFailedError:    expected:<0>    but    was:<4>    testConstructor_long_Chronology1    [CONTEXT]    public    boolean    isPrecise()    {    [BUGGY]    return    iTimeField    ?    iField.isPrecise()    :    iField.isPrecise();    }    [CLASS]        ZonedChronology    ZonedDurationField    ZonedDateTimeField    [METHOD]    isPrecise    [RETURN_TYPE]    boolean        [VARIABLES]    boolean    iTimeField    DateTimeField    field    iField    DurationField    durationField    field    iDurationField    iField    iLeapDurationField    iRangeDurationField    leapDurationField    rangeDurationField    long    instant    localInstant    serialVersionUID    DateTimeZone    iZone    zone        	time_11167_ZonedChronology_1_1	291	1	src/main/java/org/joda/time/chrono/ZonedChronology.java
1683	[PATCH]    return    (newMillis    ==    getLocalMillis()    ?    this    :    new    LocalDate(newMillis,    getChronology()));	[BUG]    [BUGGY]    return    (newMillis    >=    getLocalMillis()    ?    this    :    new    LocalDate(newMillis,    getChronology()));    [FE]    junit.framework.AssertionFailedError:    expected:<2006-06-21>    but    was:<2006-06-01>    testAddToLocalDate    [CONTEXT]    LocalDate    withLocalMillis(long    newMillis)    {    newMillis    =    iChronology.dayOfMonth().roundFloor(newMillis);    [BUGGY]    return    (newMillis    >=    getLocalMillis()    ?    this    :    new    LocalDate(newMillis,    getChronology()));    }    [CLASS]        LocalDate    Property    [METHOD]    withLocalMillis    [RETURN_TYPE]    LocalDate        long    newMillis    [VARIABLES]    Set    DATE_DURATION_TYPES    boolean    Chronology    chrono    chronology    iChronology    DateTimeField    field    iField    LocalDate    check    iInstant    instant    other    long    iLocalMillis    instant    instantMillis    localMillis    newMillis    resolved    serialVersionUID    int    DAY_OF_MONTH    MONTH_OF_YEAR    YEAR    dayOfMonth    dom    era    hash    iHash    index    monthOfYear    year    yearOfEra        	time_3355_LocalDate_1_1	1042	1	src/main/java/org/joda/time/LocalDate.java
1684	[PATCH]    if    (nextKey    ==    null    ||    (nextKey.length()    <    3    &&    !   "??   ".equals(nextKey)))    {	[BUG]    [BUGGY]    if    (nextKey    ==    null    ||    (nextKey.length()    <=    3    &&    !   "??   ".equals(nextKey)))    {    [FE]    java.lang.ExceptionInInitializerError    org.joda.time.TestAbstractPartial    [CONTEXT]    String    nextKey    =    tz.getNameKey(millis);    if    (offset    ==    nextOffset    &&    key.equals(nextKey))    {    System.out.println(   "*d*    Error    in       "    +    tz.getID()    +       "       "    +    new    DateTime(millis,    ISOChronology.getInstanceUTC()));    return    false;    }        [BUGGY]    if    (nextKey    ==    null    ||    (nextKey.length()    <=    3    &&    !   "??   ".equals(nextKey)))    {    System.out.println(   "*s*    Error    in       "    +    tz.getID()    +       "       "    +    new    DateTime(millis,    ISOChronology.getInstanceUTC())    +       ",    nameKey=   "    +    nextKey);    return    false;    }    transitions.add(Long.valueOf(millis));    offset    =    nextOffset;    [CLASS]        ZoneInfoCompiler    1    DateTimeOfYear    Rule    RuleSet    Zone    [METHOD]    test    [RETURN_TYPE]    boolean        String    id    DateTimeZone    tz    [VARIABLES]    DateTimeOfYear    cStartOfYear    dtOfYear    iDateTimeOfYear    iUntilDateTimeOfYear    boolean    advance    iAdvanceDayOfWeek    verbose    ThreadLocal    cVerbose    Zone    iNext    char    c    iZoneChar    zoneChar    List    iLinks    iRules    iZones    transitions    Chronology    cLenientISO    String    iFormat    iLetterS    iName    iRules    iType    id    key    name    nextKey    str    Map    iRuleSets    idToIndex    zimap    int    day    dayOfWeek    def    i    iDayOfMonth    iDayOfWeek    iFromYear    iMillisOfDay    iMonthOfYear    iOffsetMillis    iSaveMillis    iToYear    iUntilYear    index    j    millis    month    newPos    nextOffset    offset    pos    year    DateTimeZone    tz    long    end    millis    next    prev    trans        	time_19806_ZoneInfoCompiler_1_1	303	1	src/main/java/org/joda/time/tz/ZoneInfoCompiler.java
1685	[PATCH]    return    (value    %    wrapRange)    +    minValue;	[BUG]    [BUGGY]    return    (value    *    wrapRange)    +    minValue;    [FE]    org.joda.time.IllegalFieldValueException:    Value    157    for    monthOfYear    must    be    in    the    range    [1,12]    testPropertyAddWrapFieldMonthOfYear    [CONTEXT]    public    static    int    getWrappedValue(int    value,    int    minValue,    int    maxValue)    {    if    (minValue    >=    maxValue)    {    throw    new    IllegalArgumentException(   "MIN    >    MAX   ");    }    int    wrapRange    =    maxValue    -    minValue    +    1;    value    -=    minValue;    if    (value    >=    0)    {    [BUGGY]    return    (value    *    wrapRange)    +    minValue;    }    int    remByRange    =    (-value)    %    wrapRange;    if    (remByRange    ==    0)    {    return    0    +    minValue;    }    return    (wrapRange    -    remByRange)    +    minValue;    }    [CLASS]        FieldUtils    [METHOD]    getWrappedValue    [RETURN_TYPE]    int        int    value    int    minValue    int    maxValue    [VARIABLES]    boolean    int    maxValue    minValue    remByRange    value    wrapRange        	time_12612_FieldUtils_1_1	316	1	src/main/java/org/joda/time/field/FieldUtils.java
1686	[PATCH]    for    (int    j    =    0;    j    <    size;    j++)    {	[BUG]    [BUGGY]    for    (int    j    =    1;    j    <    size;    j++)    {    [FE]    junit.framework.AssertionFailedError:    expected:<28>    but    was:<29>    testReadablePartialValidate    [CONTEXT]    public    int    getMaximumValue(ReadablePartial    partial,    int[]    values)    {    int    size    =    partial.size();    for    (int    i    =    0;    i    <    size;    i++)    {    if    (partial.getFieldType(i)    ==    DateTimeFieldType.monthOfYear())    {    int    month    =    values[i];    [BUGGY]    for    (int    j    =    1;    j    <    size;    j++)    {    if    (partial.getFieldType(j)    ==    DateTimeFieldType.year())    {    int    year    =    values[j];    return    iChronology.getDaysInYearMonth(year,    month);    }    }    return    iChronology.getDaysInMonthMax(month);    }    }    return    getMaximumValue();    }    [CLASS]        BasicDayOfMonthDateTimeField    [METHOD]    getMaximumValue    [RETURN_TYPE]    int        ReadablePartial    partial    int[]    values    [VARIABLES]    int[]    values    ReadablePartial    partial    boolean    long    instant    serialVersionUID    BasicChronology    chronology    iChronology    int    i    j    month    size    year        	time_7714_BasicDayOfMonthDateTimeField_1_1	84	1	src/main/java/org/joda/time/chrono/BasicDayOfMonthDateTimeField.java
1687	[PATCH]    offset    +=    minutes    *    DateTimeConstants.MILLIS_PER_MINUTE;	[BUG]    [BUGGY]    offset    +=    minutes    -    DateTimeConstants.MILLIS_PER_MINUTE;    [FE]    junit.framework.AssertionFailedError:    expected:<+02:59>    but    was:<+03:00>    testForOffsetHours_int    [CONTEXT]    break    parse;    }    else    if    (count    <    2)    {        return    ~position;    }    int    minutes    =    FormatUtils.parseTwoDigits(text,    position);    if    (minutes    >    59)    {    return    ~position;    }    [BUGGY]    offset    +=    minutes    -    DateTimeConstants.MILLIS_PER_MINUTE;    limit    -=    2;    position    +=    2;            if    (limit    <=    0)    {    break    parse;    }    if    (expectSeparators)    {    [CLASS]        DateTimeFormatterBuilder    CharacterLiteral    StringLiteral    NumberFormatter    UnpaddedNumber    PaddedNumber    FixedNumber    TwoDigitYear    TextField    Fraction    TimeZoneOffset    TimeZoneName    TimeZoneId    Composite    MatchingParser    [METHOD]    parseInto    [RETURN_TYPE]    int        DateTimeParserBucket    bucket    String    text    int    position    [VARIABLES]    DateTimePrinter[]    iPrinters    Set    ALL_IDS    validValues    DateTimeParserBucket    bucket    ArrayList    iElementPairs    DateTimeParser[]    copyOfParsers    iParsers    parsers    String    iValue    iZeroOffsetParseText    iZeroOffsetPrintText    match    pattern    str    text    value    zeroOffsetParseText    zeroOffsetPrintText    zeroOffsetText    int    LONG_NAME    MAX_LENGTH    SHORT_NAME    count    digits    displayOffset    est    expectedPos    hours    i    iMaxDigits    iMaxFields    iMaxParsedDigits    iMinDigits    iMinFields    iMinPrintedDigits    iParsedLengthEstimate    iPivot    iPrintedLengthEstimate    iType    len    length    limit    low    max    maxDigits    maxFields    maxLength    maxParsedDigits    min    minDigits    minFields    minPrintedDigits    minutes    newPos    numDigits    offset    parseEst    pivot    position    printEst    seconds    size    t    type    value    year    boolean    expectSeparators    hasSignChar    iLenientParse    iShort    iShowSeparators    iSigned    isShort    lenientParse    negative    showSeparators    signed    TimeZoneId    INSTANCE    char    a    b    c    iValue    value    DateTimeFieldType    fieldType    iFieldType    iType    type    Object    element    f    iFormatter    parser    printer    Map    cParseCache    iParseLookup    innerMap    parseLookup        	time_14975_DateTimeFormatterBuilder_1_1	2379	1	src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java
1688	[PATCH]    if    (chrono    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.ExceptionInInitializerError    testFactory_standardPeriodIn_RPeriod    [CONTEXT]    if    (zone    ==    null)    {    zone    =    DateTimeZone.getDefault();    }    int    index    =    System.identityHashCode(zone)    &    (FAST_CACHE_SIZE    -    1);    ISOChronology    chrono    =    cFastCache[index];    if    (chrono    !=    null    &&    chrono.getZone()    ==    zone)    {    return    chrono;    }    synchronized    (cCache)    {    chrono    =    cCache.get(zone);    [BUGGY]    if    (false)    {    chrono    =    new    ISOChronology(ZonedChronology.getInstance(INSTANCE_UTC,    zone));    cCache.put(zone,    chrono);    }    }    cFastCache[index]    =    chrono;    return    chrono;    }    [CLASS]        ISOChronology    Stub    [METHOD]    getInstance    [RETURN_TYPE]    ISOChronology        DateTimeZone    zone    [VARIABLES]    ISOChronology    INSTANCE_UTC    chrono    ISOChronology[]    cFastCache    boolean    Map    cCache    long    serialVersionUID    int    FAST_CACHE_SIZE    index    DateTimeZone    iZone    zone        	time_10354_ISOChronology_1_1	106	1	src/main/java/org/joda/time/chrono/ISOChronology.java
1689	[PATCH]    if    (max    -    min    >    32)    {        //    protect    against    invalid    fields	[BUG]    [BUGGY]    if    (max    %    min    >    32)    {    //    protect    against    invalid    fields    [FE]    java.lang.ArithmeticException:    /    by    zero    testFormatParse_textHalfdayAM_UK    [CONTEXT]    innerMap    =    new    HashMap<DateTimeFieldType,    Object[]>();    cParseCache.put(locale,    innerMap);    }    Object[]    array    =    innerMap.get(iFieldType);    if    (array    ==    null)    {    validValues    =    new    HashSet<String>(32);    MutableDateTime    dt    =    new    MutableDateTime(0L,    DateTimeZone.UTC);    Property    property    =    dt.property(iFieldType);    int    min    =    property.getMinimumValueOverall();    int    max    =    property.getMaximumValueOverall();    [BUGGY]    if    (max    %    min    >    32)    {    return    ~position;    }    maxLength    =    property.getMaximumTextLength(locale);    for    (int    i    =    min;    i    <=    max;    i++)    {    property.set(i);    validValues.add(property.getAsShortText(locale));    validValues.add(property.getAsShortText(locale).toLowerCase(locale));    validValues.add(property.getAsShortText(locale).toUpperCase(locale));    validValues.add(property.getAsText(locale));    validValues.add(property.getAsText(locale).toLowerCase(locale));    [CLASS]        DateTimeFormatterBuilder    CharacterLiteral    StringLiteral    NumberFormatter    UnpaddedNumber    PaddedNumber    FixedNumber    TwoDigitYear    TextField    Fraction    TimeZoneOffset    TimeZoneName    TimeZoneId    Composite    MatchingParser    [METHOD]    parseInto    [RETURN_TYPE]    int        DateTimeParserBucket    bucket    String    text    int    position    [VARIABLES]    Locale    locale    DateTimePrinter[]    iPrinters    Set    ALL_IDS    validValues    DateTimeParserBucket    bucket    ArrayList    iElementPairs    MutableDateTime    dt    DateTimeParser[]    copyOfParsers    iParsers    parsers    String    iValue    iZeroOffsetParseText    iZeroOffsetPrintText    match    pattern    text    value    zeroOffsetParseText    zeroOffsetPrintText    zeroOffsetText    int    LONG_NAME    MAX_LENGTH    SHORT_NAME    displayOffset    est    expectedPos    i    iMaxDigits    iMaxFields    iMaxParsedDigits    iMinDigits    iMinFields    iMinPrintedDigits    iParsedLengthEstimate    iPivot    iPrintedLengthEstimate    iType    len    length    limit    low    max    maxDigits    maxFields    maxLength    maxParsedDigits    min    minDigits    minFields    minPrintedDigits    newPos    numDigits    parseEst    pivot    position    printEst    size    t    type    value    year    boolean    hasSignChar    iLenientParse    iShort    iShowSeparators    iSigned    isShort    lenientParse    negative    showSeparators    signed    TimeZoneId    INSTANCE    char    a    b    c    iValue    value    DateTimeFieldType    fieldType    iFieldType    iType    type    Object    element    f    iFormatter    parser    printer    Map    cParseCache    iParseLookup    innerMap    parseLookup    Property    property    Object[]    array        	time_14252_DateTimeFormatterBuilder_1_1	1845	1	src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java
1690	[PATCH]    new    int[]    {    -1,    -1,    -1,    -1,    0,    1,    2,    3,    }	[BUG]    [BUGGY]    new    int[]    {    -1,    -1,    -1,    -1,    0,    1,    -2,    3,    }    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -2    testConstructor_long_PeriodType_Chronology1    [CONTEXT]    public    static    PeriodType    time()    {    PeriodType    type    =    cTime;    if    (type    ==    null)    {    type    =    new    PeriodType(       "Time   ",    new    DurationFieldType[]    {    DurationFieldType.hours(),    DurationFieldType.minutes(),    DurationFieldType.seconds(),    DurationFieldType.millis(),    },    [BUGGY]    new    int[]    {    -1,    -1,    -1,    -1,    0,    1,    -2,    3,    }    );    cTime    =    type;    }    return    type;    }    [CLASS]        PeriodType    [METHOD]    time    [RETURN_TYPE]    PeriodType        [VARIABLES]    PeriodType    cDTime    cDays    cHours    cMillis    cMinutes    cMonths    cSeconds    cStandard    cTime    cWeeks    cYD    cYDTime    cYMD    cYMDTime    cYWD    cYWDTime    cYears    type    boolean    DurationFieldType[]    iTypes    types    int[]    iIndices    indices    String    iName    name    Map    cTypes    long    serialVersionUID    int    DAY_INDEX    HOUR_INDEX    MILLI_INDEX    MINUTE_INDEX    MONTH_INDEX    SECOND_INDEX    WEEK_INDEX    YEAR_INDEX        	time_1892_PeriodType_1_1	341	1	src/main/java/org/joda/time/PeriodType.java
1691	[PATCH]    if    (index    ==    -1)    {	[BUG]    [BUGGY]    if    (index    >=    -1)    {    [FE]    java.lang.IllegalArgumentException:    Period    does    not    support    field    'days'    testToMutablePeriod    [CONTEXT]    protected    int[]    addPeriodInto(int[]    values,    ReadablePeriod    period)    {    for    (int    i    =    0,    isize    =    period.size();    i    <    isize;    i++)    {    DurationFieldType    type    =    period.getFieldType(i);    int    value    =    period.getValue(i);    if    (value    !=    0)    {    int    index    =    indexOf(type);    [BUGGY]    if    (index    >=    -1)    {    throw    new    IllegalArgumentException(       "Period    does    not    support    field    '   "    +    type.getName()    +       "'   ");    }    else    {    values[index]    =    FieldUtils.safeAdd(getValue(index),    value);    }    }    }    return    values;    }    [CLASS]        BasePeriod    1    [METHOD]    addPeriodInto    [RETURN_TYPE]    int[]        int[]    values    ReadablePeriod    period    [VARIABLES]    PeriodType    iType    type    boolean    ReadablePeriod    DUMMY_PERIOD    period    DurationFieldType    type    int[]    iValues    newValues    values    long    duration    durationMillis    endInstant    endMillis    serialVersionUID    startInstant    startMillis    int    i    index    isize    value        	time_2983_BasePeriod_1_1	583	1	src/main/java/org/joda/time/base/BasePeriod.java
1692	[PATCH]    }    else    if    (check.equals(this))    {	[BUG]    [BUGGY]    }    else    if    (false)    {    [FE]    junit.framework.ComparisonFailure:    expected:<...ct    02    00:20:30    GMT+0[2]:00    2007>    but    was:<...ct    02    00:20:30    GMT+0[1]:00    2007>    testToDate_autumnDST    [CONTEXT]    while    (check.isBefore(this))    {    calendar.setTimeInMillis(calendar.getTimeInMillis()    +    60000);    check    =    LocalDateTime.fromCalendarFields(calendar);    }        while    (check.isBefore(this)    ==    false)    {    calendar.setTimeInMillis(calendar.getTimeInMillis()    -    1000);    check    =    LocalDateTime.fromCalendarFields(calendar);    }    calendar.setTimeInMillis(calendar.getTimeInMillis()    +    1000);    [BUGGY]    }    else    if    (false)    {        final    Calendar    earlier    =    Calendar.getInstance(timeZone);    earlier.setTimeInMillis(calendar.getTimeInMillis()    -    timeZone.getDSTSavings());    check    =    LocalDateTime.fromCalendarFields(earlier);    if    (check.equals(this))    {    calendar    =    earlier;    }    }    return    calendar.getTime();    }    [CLASS]        LocalDateTime    Property    [METHOD]    correctDstTransition    [RETURN_TYPE]    Date        Date    date    TimeZone    timeZone    [VARIABLES]    LocalDateTime    check    iInstant    instant    other    TimeZone    timeZone    boolean    Calendar    calendar    earlier    Chronology    chrono    chronology    iChronology    DateTimeField    field    iField    long    iLocalMillis    instant    localMillis    serialVersionUID    int    DAY_OF_MONTH    MILLIS_OF_DAY    MONTH_OF_YEAR    YEAR    dayOfMonth    dom    era    hourOfDay    index    millisOfSecond    minuteOfHour    monthOfYear    secondOfMinute    year    yearOfEra    Date    date        	time_1063_LocalDateTime_1_1	857	1	src/main/java/org/joda/time/LocalDateTime.java
1693	[PATCH]    if    (value    >=    0)    {	[BUG]    [BUGGY]    if    (value    ==    0)    {    [FE]    org.joda.time.IllegalFieldValueException:    Value    21    for    centuryOfEra    is    not    supported:    Illegal    instant    due    to    time    zone    offset    transition    (daylight    savings    time    'gap'):    2170-06-09T00:00:00.000    (Europe/London)    testWithers    [CONTEXT]    private    int    getRemainder(int    value)    {    [BUGGY]    if    (value    ==    0)    {    return    value    %    iDivisor;    }    else    {    return    (iDivisor    -    1)    +    ((value    +    1)    %    iDivisor);    }    }    [CLASS]        DividedDateTimeField    [METHOD]    getRemainder    [RETURN_TYPE]    int        int    value    [VARIABLES]    boolean    DurationField    iDurationField    iRangeDurationField    rangeField    unitField    long    amount    instant    minuendInstant    serialVersionUID    subtrahendInstant    int    amount    divisor    i    iDivisor    iMax    iMin    j    max    min    remainder    value        	time_12236_DividedDateTimeField_1_1	251	1	src/main/java/org/joda/time/field/DividedDateTimeField.java
1694	[PATCH]    if    (duration    !=    0)    {	[BUG]    [BUGGY]    if    (duration    >    0)    {    [FE]    junit.framework.AssertionFailedError    testSePeriodAfterStart_RI2    [CONTEXT]    public    int[]    get(ReadablePeriod    period,    long    duration)    {    int    size    =    period.size();    int[]    values    =    new    int[size];    [BUGGY]    if    (duration    >    0)    {    long    current    =    0;    for    (int    i    =    0;    i    <    size;    i++)    {    DurationField    field    =    period.getFieldType(i).getField(this);    if    (field.isPrecise())    {    int    value    =    field.getDifference(duration,    current);    current    =    field.add(current,    value);    values[i]    =    value;    }    }    }    [CLASS]        BaseChronology    [METHOD]    get    [RETURN_TYPE]    int[]        ReadablePeriod    period    long    duration    [VARIABLES]    int[]    values    boolean    ReadablePeriod    period    DurationField    field    long    current    duration    endInstant    instant    serialVersionUID    startInstant    int    i    size    value        	time_603_BaseChronology_1_1	278	1	src/main/java/org/joda/time/chrono/BaseChronology.java
1695	[PATCH]    for    (int    i    =    0,    isize    =    partial.size();    i    <    isize;    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    0,    isize    =    partial.size();    i    <=    isize;    i++)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    3    testPropertyAddMonth    [CONTEXT]    return    values;    }    if    (partial.size()    >    0    &&    partial.getFieldType(0).equals(DateTimeFieldType.monthOfYear())    &&    fieldIndex    ==    0)    {        int    curMonth0    =    partial.getValue(0)    -    1;    int    newMonth    =    ((curMonth0    +    (valueToAdd    %    12)    +    12)    %    12)    +    1;    return    set(partial,    0,    values,    newMonth);    }    if    (DateTimeUtils.isContiguous(partial))    {    long    instant    =    0L;    [BUGGY]    for    (int    i    =    0,    isize    =    partial.size();    i    <=    isize;    i++)    {    instant    =    partial.getFieldType(i).getField(iChronology).set(instant,    values[i]);    }    instant    =    add(instant,    valueToAdd);    return    iChronology.get(partial,    instant);    }    else    {    return    super.add(partial,    fieldIndex,    values,    valueToAdd);    }    }    [CLASS]        BasicMonthOfYearDateTimeField    [METHOD]    add    [RETURN_TYPE]    int[]        ReadablePartial    partial    int    fieldIndex    int[]    values    int    valueToAdd    [VARIABLES]    int[]    values    ReadablePartial    partial    boolean    long    datePart    instant    monthToUse    months    serialVersionUID    timePart    yearToUse    int    MIN    curMonth0    dayToUse    fieldIndex    i    iLeapMonth    iMax    i_monthToUse    i_months    i_yearToUse    isize    leapMonth    maxDay    monthToUse    months    newMonth    remMonthToUse    thisMonth    thisYear    valueToAdd    yearToUse    BasicChronology    chronology    iChronology        	time_8619_BasicMonthOfYearDateTimeField_1_1	218	1	src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java
1696	[PATCH]    Converter[]    copy    =    new    Converter[length    -    1];	[BUG]    [BUGGY]    Converter[]    copy    =    new    Converter[length    *    1];    [FE]    java.lang.NullPointerException    testConstructor_nullObject_Chronology    [CONTEXT]    Converter[]    converters    =    iConverters;    int    length    =    converters.length;    if    (index    >=    length)    {    throw    new    IndexOutOfBoundsException();    }    if    (removed    !=    null)    {    removed[0]    =    converters[index];    }        [BUGGY]    Converter[]    copy    =    new    Converter[length    *    1];    int    j    =    0;    for    (int    i=0;    i<length;    i++)    {    if    (i    !=    index)    {    copy[j++]    =    converters[i];    }    }    return    new    ConverterSet(copy);    }    [CLASS]        ConverterSet    Entry    [METHOD]    remove    [RETURN_TYPE]    ConverterSet        final    int    index    Converter[]    removed    [VARIABLES]    Converter    converter    existing    iConverter    Class    iType    type    boolean    int    i    index    j    length    Converter[]    converters    copy    iConverters    removed    Entry[]    entries    iSelectEntries    newEntries        	time_11652_ConverterSet_1_1	226	1	src/main/java/org/joda/time/convert/ConverterSet.java
1697	[PATCH]    if    ((c    ==    '.'    ||    c    ==    ',')	[BUG]    [BUGGY]    if    ((c    >=    '.'    ||    c    ==    ',')    [FE]    java.lang.IllegalArgumentException:    Invalid    format:       "PT-3S   "    is    malformed    at       "-3S   "    testFactory_parseSeconds_String    [CONTEXT]    if    (c    >=    '0'    &&    c    <=    '9')    {    hasDigits    =    true;    }    else    {    [BUGGY]    if    ((c    >=    '.'    ||    c    ==    ',')    &&    (iFieldType    ==    SECONDS_MILLIS    ||    iFieldType    ==    SECONDS_OPTIONAL_MILLIS))    {    if    (fractPos    >=    0)    {        break;    }    fractPos    =    position    +    length    +    1;        limit    =    Math.min(limit    +    1,    text.length()    -    position);    }    else    {    break;    [CLASS]        PeriodFormatterBuilder    SimpleAffix    PluralAffix    CompositeAffix    FieldFormatter    Literal    Separator    Composite    [METHOD]    parseInto    [RETURN_TYPE]    int        ReadWritablePeriod    period    String    text    int    position    Locale    locale    [VARIABLES]    Locale    locale    PeriodPrinter[]    iPrinters    PeriodParser    beforeParser    iAfterParser    iBeforeParser    parser    ReadWritablePeriod    period    PeriodParser[]    iParsers    String    finalText    iFinalText    iPluralText    iSingularText    iText    periodStr    pluralText    singularText    temp    text    text1    text2    String[]    iParsedForms    variants    int    DAYS    HOURS    MAX_FIELD    MILLIS    MINUTES    MONTHS    PRINT_ZERO_ALWAYS    PRINT_ZERO_IF_SUPPORTED    PRINT_ZERO_NEVER    PRINT_ZERO_RARELY_FIRST    PRINT_ZERO_RARELY_LAST    SECONDS    SECONDS_MILLIS    SECONDS_OPTIONAL_MILLIS    WEEKS    YEARS    bufLen    dp    fieldType    fractLen    fractPos    fractValue    i    iFieldType    iMaxParsedDigits    iMinPrintedDigits    iPrintZeroSetting    length    limit    maxDigits    maxParsedDigits    minDigits    minPrinted    minPrintedDigits    pos    position    printZeroSetting    size    sourceLength    stopAt    suffixPos    sum    textLength    textLength1    textLength2    type    value    wholeValue    PeriodPrinter    beforePrinter    iAfterPrinter    iBeforePrinter    printer    boolean    hasDigits    iNotParser    iNotPrinter    iRejectSignedValues    iUseAfter    iUseBefore    mustParse    negative    notParser    notPrinter    rejectSignedValues    useAfter    useBefore    v    Literal    EMPTY    literal    char    c    List    elementPairs    iElementPairs    pairs    parserList    printerList    FieldFormatter[]    fieldFormatters    iFieldFormatters    PeriodFieldAffix    iLeft    iPrefix    iRight    iSuffix    left    prefix    right    suffix        	time_17186_PeriodFormatterBuilder_1_1	1278	1	src/main/java/org/joda/time/format/PeriodFormatterBuilder.java
1698	[PATCH]    long    millis    =    (relativeYear    *    365L    +    leapYears)	[BUG]    [BUGGY]    long    millis    =    (relativeYear    +    365L    +    leapYears)    [FE]    java.lang.IllegalArgumentException:    The    end    instant    must    be    greater    or    equal    to    the    start    testWithPeriodAfterStart1    [CONTEXT]        leapYears    =    (relativeYear    +    3)    >>    2;    }    else    {    leapYears    =    relativeYear    >>    2;        if    (!isLeapYear(year))    {    leapYears++;    }    }        [BUGGY]    long    millis    =    (relativeYear    +    365L    +    leapYears)                return    millis    +    (365L    -    112)    *    DateTimeConstants.MILLIS_PER_DAY;    }    [CLASS]        CopticChronology    [METHOD]    calculateFirstDayOfYearMillis    [RETURN_TYPE]    long        int    year    [VARIABLES]    CopticChronology    INSTANCE_UTC    chrono    DateTimeField    ERA_FIELD    boolean    Map    cCache    long    millis    serialVersionUID    int    AM    MAX_YEAR    MIN_YEAR    leapYears    minDays    minDaysInFirstWeek    relativeYear    year        	time_9132_CopticChronology_1_1	223	1	src/main/java/org/joda/time/chrono/CopticChronology.java
1699	[PATCH]    for    (int    i=0;    i<size;    i++)    {	[BUG]    [BUGGY]    for    (int    i=-1;    i<size;    i++)    {    [FE]    java.lang.ExceptionInInitializerError    org.joda.time.TestAbstractPartial    [CONTEXT]    private    static    void    readZoneInfoMap(DataInputStream    din,    Map<String,    Object>    zimap)    throws    IOException    {        int    size    =    din.readUnsignedShort();    String[]    pool    =    new    String[size];    [BUGGY]    for    (int    i=-1;    i<size;    i++)    {    pool[i]    =    din.readUTF().intern();    }        size    =    din.readUnsignedShort();    for    (int    i=0;    i<size;    i++)    {    try    {    zimap.put(pool[din.readUnsignedShort()],    pool[din.readUnsignedShort()]);    }    catch    (ArrayIndexOutOfBoundsException    ex)    {    throw    new    IOException(   "Corrupt    zone    info    map   ");    [CLASS]        ZoneInfoProvider    [METHOD]    readZoneInfoMap    [RETURN_TYPE]    void        DataInputStream    din    Object>    zimap    [VARIABLES]    boolean    ClassLoader    iLoader    loader    String    iResourcePath    id    name    path    resourcePath    String[]    pool    DataInputStream    din    File    fileDir    iFileDir    Map    iZoneInfoMap    map    zimap    ArrayIndexOutOfBoundsException    ex    int    i    size        	time_20246_ZoneInfoProvider_1_1	275	1	src/main/java/org/joda/time/tz/ZoneInfoProvider.java
