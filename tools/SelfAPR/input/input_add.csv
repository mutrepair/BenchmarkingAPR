bugid	patch	buggy	id	buglineNo	removeNo	filepath
0	[PATCH]    iMillis    =    FieldUtils.safeAdd(endMillis,    -startMillis);	[BUG]    [BUGGY]    iMillis    =    FieldUtils.safeAdd(endMillis,    ~startMillis);    [FE]    junit.framework.AssertionFailedError:    expected:<34218061001>    but    was:<34218061000>    testConstructor_Object4    [CONTEXT]    protected    BaseDuration(ReadableInstant    start,    ReadableInstant    end)    {    super();    if    (start    ==    end)    {    iMillis    =    0L;    }    else    {    long    startMillis    =    DateTimeUtils.getInstantMillis(start);    long    endMillis    =    DateTimeUtils.getInstantMillis(end);    [BUGGY]    iMillis    =    FieldUtils.safeAdd(endMillis,    ~startMillis);    [BUGGY]    }    }    [CLASS]        BaseDuration    [METHOD]    <init>    [RETURN_TYPE]    ReadableInstant)        ReadableInstant    start    ReadableInstant    end    [VARIABLES]    long    duration    endInstant    endMillis    iMillis    serialVersionUID    startInstant    startMillis    ReadableInstant    end    start    boolean        	time_4864_BaseDuration_1_1	91	1	src/main/java/org/joda/time/base/BaseDuration.java
1	[PATCH]    if    (k    ==    -d    ||    k    !=    d    &&    vDown[i-1]    <    vDown[i+1])    {	[BUG]    [BUGGY]    if    (k    ==    ~d    ||    k    !=    d    &&    vDown[i-1]    <    vDown[i+1])    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    5    testLongestCommonSubsequence    [CONTEXT]    final    int    offset    =    (sum    %    2    ==    0    ?    sum    :    sum    +    1)    /    2;    vDown[1+offset]    =    start1;    vUp[1+offset]    =    end1    +    1;    for    (int    d    =    0;    d    <=    offset    ;    ++d)    {        for    (int    k    =    -d;    k    <=    d;    k    +=    2)    {        final    int    i    =    k    +    offset;    [BUGGY]    if    (k    ==    ~d    ||    k    !=    d    &&    vDown[i-1]    <    vDown[i+1])    {    [BUGGY]    vDown[i]    =    vDown[i+1];    }    else    {    vDown[i]    =    vDown[i-1]    +    1;    }    int    x    =    vDown[i];    int    y    =    x    -    start1    +    start2    -    k;    while    (x    <    end1    &&    y    <    end2    &&    equator.equate(sequence1.get(x),    sequence2.get(y)))    {    vDown[i]    =    ++x;    [CLASS]        SequencesComparator    Snake    [METHOD]    getMiddleSnake    [RETURN_TYPE]    SequencesComparator$Snake        final    int    start1    final    int    end1    final    int    start2    final    int    end2    [VARIABLES]    List    sequence1    sequence2    int[]    vDown    vUp    boolean    int    d    delta    diag    end    end1    end2    i    k    m    n    offset    size    start    start1    start2    sum    x    y    Equator    equator        	collections_10087_SequencesComparator_1_1	190	1	src/main/java/org/apache/commons/collections4/sequence/SequencesComparator.java
2	[PATCH]    this.data.add(-index    -    1,    item);	[BUG]    [BUGGY]    this.data.add(+index    -    1,    item);    [FE]    java.lang.IndexOutOfBoundsException:    Index:    -2,    Size:    0    testDrawWithNullInfo    [CONTEXT]    public    void    add(XYDataItem    item,    boolean    notify)    {    if    (item    ==    null)    {    throw    new    IllegalArgumentException(   "Null    'item'    argument.   ");    }    item    =    (XYDataItem)    item.clone();    if    (this.autoSort)    {    int    index    =    Collections.binarySearch(this.data,    item);    if    (index    <    0)    {    [BUGGY]    this.data.add(+index    -    1,    item);    [BUGGY]    }    else    {    if    (this.allowDuplicateXValues)    {        int    size    =    this.data.size();    while    (index    <    size    &&    item.compareTo(    this.data.get(index))    ==    0)    {    index++;    }    if    (index    <    this.data.size())    {    [CLASS]        XYSeries    [METHOD]    add    [RETURN_TYPE]    void        XYDataItem    item    boolean    notify    [VARIABLES]    List    data    boolean    allowDuplicateXValues    autoSort    itemContributesToXBounds    itemContributesToYBounds    notify    double    maxX    maxY    minX    minY    x    y    long    serialVersionUID    int    index    maximum    maximumItemCount    remove    size    XYDataItem    item    removed        	chart_70393_XYSeries_1_1	511	1	source/org/jfree/data/xy/XYSeries.java
3	[PATCH]    final    double    m0    =    -r.getQ0();	[BUG]    [BUGGY]    final    double    m0    =    +r.getQ0();    [FE]    junit.framework.AssertionFailedError:    expected:<-0.8840744653312117>    but    was:<-0.9158153741363079>    testDoubleRotations    [CONTEXT]                public    static    <T    extends    RealFieldElement<T>>    FieldVector3D<T>    applyInverseTo(final    Rotation    r,    final    FieldVector3D<T>    u)    {    final    T    x    =    u.getX();    final    T    y    =    u.getY();    final    T    z    =    u.getZ();    final    T    s=    x.multiply(r.getQ1()).add(y.multiply(r.getQ2())).add(z.multiply(r.getQ3()));    [BUGGY]    final    double    m0    =    +r.getQ0();    [BUGGY]    return    new    FieldVector3D<T>(x.multiply(m0).subtract(z.multiply(r.getQ2()).subtract(y.multiply(r.getQ3()))).multiply(m0).add(s.multiply(r.getQ1())).multiply(2).subtract(x),    y.multiply(m0).subtract(x.multiply(r.getQ3()).subtract(z.multiply(r.getQ1()))).multiply(m0).add(s.multiply(r.getQ2())).multiply(2).subtract(y),    z.multiply(m0).subtract(y.multiply(r.getQ1()).subtract(x.multiply(r.getQ2()))).multiply(m0).add(s.multiply(r.getQ3())).multiply(2).subtract(z));    }                    [CLASS]    	math_35228_FieldRotation_1_1	941	1	src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
4	[PATCH]    return    createComplex(-real,    -imaginary);	[BUG]    [BUGGY]    return    createComplex(+real,    -imaginary);    [FE]    junit.framework.AssertionFailedError:    expected:<1.0>    but    was:<-1.0>    testExp    [CONTEXT]    public    Complex    negate()    {    if    (isNaN)    {    return    NaN;    }        [BUGGY]    return    createComplex(+real,    -imaginary);    [BUGGY]    }    [CLASS]        Complex    [METHOD]    negate    [RETURN_TYPE]    Complex        [VARIABLES]    boolean    isInfinite    isNaN    double    addend    c    d    denominator    divisor    factor    imaginary    q    real    scale    long    serialVersionUID    Complex    I    INF    NaN    ONE    ZERO    addend    c    divisor    factor        	math_16011_Complex_1_1	505	1	src/main/java/org/apache/commons/math3/complex/Complex.java
5	[PATCH]    return    (x    ^    (~i    +    1))    +    i;	[BUG]    [BUGGY]    return    (x    ^    (+i    +    1))    +    i;    [FE]    java.lang.NegativeArraySizeException    testComputeRoots    [CONTEXT]    public    static    int    abs(final    int    x)    {    final    int    i    =    x    >>>    31;    [BUGGY]    return    (x    ^    (+i    +    1))    +    i;    [BUGGY]    }    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    abs    [RETURN_TYPE]    int        final    int    x    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    bita    bitb    bitsum    cotanFlag    leftPlane    negate    negative    subnormal    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    hiPrecOut    lnCoef_i    lnCoef_last    lnm    lns    reduceResults    result    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    a2    aa    ab    absAsinh    absAtanh    b    base    baseA    baseB    c    cD2pH    cRH    cTmpH    cd    cosEpsA    cosEpsB    cosa    cosaa    cosab    cosb    costA    costB    d    d1High    d1Low    d2p    d2pHH    d2pHL    d2pHigh    d2pLow    da    daa    dab    db    denom    denomb    denomr    dx    epsA    epsA2    epsB    epsilon    err    est    esta    estb    extra    facta    factb    finalRemA    finalRemB    fracPartA    fracPartB    fx1    intPartA    intPartB    invx    invy    lna    lnb    lnza    lnzb    lores    mant    na    nb    numer    oneOverXa    p    p2    pi2a    pi2b    pia    pib    r    rHH    rHL    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    resultHigh    resultLow    resultb    rln10a    rln10b    sinEpsA    sinEpsB    sina    sinb    sintA    sintB    sumA    sumB    t    temp    temp2    tempA    tempB    tempC    tmp    tmp1    tmp2    tmpA    tmpB    tmpHigh    tmpLow    x    x2    xa    xb    xbadj    xpa    xpb    xs    y    ya    yaa    yab    yb    z    za    zaa    zab    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    e    exp    exp3    exponent    finalK    i    idx    intFrac    intPart    intVal    k    quadrant    shift    splitFactor    x    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    a    ac    ad    b    bc    bd    bits    c    d    inbits    prod2A    prod2B    prodA    prodB    shpi0    shpiA    shpiB    xl    yi        	math_118026_FastMath_1_1	2992	1	src/main/java/org/apache/commons/math3/util/FastMath.java
6	[PATCH]    return    FastMath.pow(2    *    FastMath.PI,    -0.5    *    dim)    *	[BUG]    [BUGGY]    return    FastMath.pow(2    *    FastMath.PI,    +0.5    *    dim)    *    [FE]    junit.framework.AssertionFailedError:    expected:<0.09528357207691344>    but    was:<3.76164464928728>    testDensities    [CONTEXT]    public    double    density(final    double[]    vals)    throws    DimensionMismatchException    {    final    int    dim    =    getDimension();    if    (vals.length    !=    dim)    {    throw    new    DimensionMismatchException(vals.length,    dim);    }        [BUGGY]    return    FastMath.pow(2    *    FastMath.PI,    +0.5    *    dim)    *    [BUGGY]    FastMath.pow(covarianceMatrixDeterminant,    -0.5)    *    getExponentTerm(vals);    }    [CLASS]        MultivariateNormalDistribution    [METHOD]    density    [RETURN_TYPE]    double        final    double[]    vals    [VARIABLES]    boolean    double[]    covMatEigenvalues    evec    means    vals    RealMatrix    covarianceMatrix    covarianceMatrixInverse    samplingMatrix    tmpMatrix    double    covarianceMatrixDeterminant    factor    int    dim        	math_27082_MultivariateNormalDistribution_1_1	183	1	src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java
7	[PATCH]    infinity    =    -infinity;	[BUG]    [BUGGY]    infinity    =    +infinity;    [FE]    junit.framework.AssertionFailedError:    expected:<-Infinity>    but    was:<Infinity>    testPowDoubleDS    [CONTEXT]    final    double[]    result,    final    int    resultOffset)    {            final    double[]    function    =    new    double[1    +    order];    if    (a    ==    0)    {    if    (operand[operandOffset]    ==    0)    {    function[0]    =    1;    double    infinity    =    Double.POSITIVE_INFINITY;    for    (int    i    =    1;    i    <    function.length;    ++i)    {    [BUGGY]    infinity    =    +infinity;    [BUGGY]    function[i]    =    infinity;    }    }    else    if    (operand[operandOffset]    <    0)    {    Arrays.fill(function,    Double.NaN);    }    }    else    {    function[0]    =    FastMath.pow(a,    operand[operandOffset]);    final    double    lnA    =    FastMath.log(a);    for    (int    i    =    1;    i    <    function.length;    ++i)    {    function[i]    =    lnA    *    function[i    -    1];    [CLASS]        DSCompiler    [METHOD]    pow    [RETURN_TYPE]    void        final    double    a    final    double[]    operand    final    int    operandOffset    final    double[]    result    final    int    resultOffset    [VARIABLES]    int[][][]    compIndirection    multIndirection    int[][]    dRow    derivativesIndirection    destSizes    mappingI    sizes    srcDerivativesIndirection    boolean    double[]    function    operand    result    double    a    infinity    lnA    AtomicReference    compilers    int[]    derivedTermF    derivedTermG    lowerIndirection    orders    term    termJ    termK    int    dSize    derivativeOrder    destO    destP    diag    i    index    j    k    l    lhsOffset    m    maxOrder    maxParameters    o    offset1    offset2    offset3    offset4    operandOffset    order    ordersSum    p    parameters    resultOffset    rhsOffset    srcP    vSize        	math_1872_DSCompiler_1_1	860	1	src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
8	[PATCH]    iMillis    =    FieldUtils.safeAdd(endMillis,    -startMillis);	[BUG]    [BUGGY]    iMillis    =    FieldUtils.safeAdd(endMillis,    +startMillis);    [FE]    junit.framework.AssertionFailedError:    expected:<34218061001>    but    was:<2207689261001>    testConstructor_Object4    [CONTEXT]    protected    BaseDuration(ReadableInstant    start,    ReadableInstant    end)    {    super();    if    (start    ==    end)    {    iMillis    =    0L;    }    else    {    long    startMillis    =    DateTimeUtils.getInstantMillis(start);    long    endMillis    =    DateTimeUtils.getInstantMillis(end);    [BUGGY]    iMillis    =    FieldUtils.safeAdd(endMillis,    +startMillis);    [BUGGY]    }    }    [CLASS]        BaseDuration    [METHOD]    <init>    [RETURN_TYPE]    ReadableInstant)        ReadableInstant    start    ReadableInstant    end    [VARIABLES]    long    duration    endInstant    endMillis    iMillis    serialVersionUID    startInstant    startMillis    ReadableInstant    end    start    boolean        	time_4863_BaseDuration_1_1	91	1	src/main/java/org/joda/time/base/BaseDuration.java
9	[PATCH]    return    new    FieldVector3D<T>(1.0,    this,    -factor,    v);	[BUG]    [BUGGY]    return    new    FieldVector3D<T>(1.0,    this,    +factor,    v);    [FE]    junit.framework.AssertionFailedError:    expected:<-15.0>    but    was:<9.0>    testSubtract    [CONTEXT]    y.subtract(factor.multiply(v.getY())),    z.subtract(factor.multiply(v.getZ())));    }                        public    FieldVector3D<T>    subtract(final    double    factor,    final    FieldVector3D<T>    v)    {    [BUGGY]    return    new    FieldVector3D<T>(1.0,    this,    +factor,    v);    [BUGGY]    }                        public    FieldVector3D<T>    subtract(final    double    factor,    final    Vector3D    v)    {    return    new    FieldVector3D<T>(x.subtract(factor    *    v.getX()),    y.subtract(factor    *    v.getY()),    [CLASS]    	math_35785_FieldVector3D_1_1	505	1	src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
10	[PATCH]    offset    =    -offset;	[BUG]    [BUGGY]    offset    =    +offset;    [FE]    junit.framework.AssertionFailedError:    expected:<T10:11:12-0[3]:00>    but    was:<T10:11:12-0[-]:00>    testTimeISO    [CONTEXT]    public    void    appendTo(final    StringBuffer    buffer,    final    Calendar    calendar)    {    int    offset    =    calendar.get(Calendar.ZONE_OFFSET)    +    calendar.get(Calendar.DST_OFFSET);    if    (offset    <    0)    {    buffer.append('-');    [BUGGY]    offset    =    +offset;    [BUGGY]    }    else    {    buffer.append('+');    }    final    int    hours    =    offset    /    (60    *    60    *    1000);    buffer.append((char)(hours    /    10    +    '0'));    buffer.append((char)(hours    %    10    +    '0'));    if    (mColon)    {    buffer.append(':');    [CLASS]        FastDatePrinter    CharacterLiteral    StringLiteral    TextField    UnpaddedNumberField    UnpaddedMonthField    PaddedNumberField    TwoDigitNumberField    TwoDigitYearField    TwoDigitMonthField    TwelveHourField    TwentyFourHourField    TimeZoneNameRule    TimeZoneNumberRule    TimeZoneDisplayKey    [METHOD]    appendTo    [RETURN_TYPE]    void        StringBuffer    buffer    Calendar    calendar    [VARIABLES]    Locale    locale    mLocale    TimeZoneNumberRule    INSTANCE_COLON    INSTANCE_NO_COLON    Calendar    calendar    ConcurrentMap    cTimeZoneDisplayCache    TwoDigitYearField    INSTANCE    String    mDaylight    mPattern    mStandard    mValue    pattern    prior    sub    token    value    String[]    AmPmStrings    ERAs    mValues    months    shortMonths    shortWeekdays    values    weekdays    long    millis    serialVersionUID    int    FULL    LONG    MEDIUM    SHORT    digits    field    hours    i    len    length    mField    mMaxLengthEstimate    mSize    mStyle    max    minutes    offset    padding    size    style    tokenLen    value    Rule[]    mRules    TimeZone    mTimeZone    timeZone    tz    zone    StringBuffer    buffer    boolean    colon    daylight    inLiteral    mColon    NumberRule    mRule    rule    char    c    mValue    peek    value    TwoDigitMonthField    INSTANCE    UnpaddedMonthField    INSTANCE        	lang_21179_FastDatePrinter_1_1	1189	1	src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java
11	[PATCH]    final    Vector3D    n    =    new    Vector3D(1.0,    d,    -d.dotProduct(direction),    direction);	[BUG]    [BUGGY]    final    Vector3D    n    =    new    Vector3D(1.0,    d,    +d.dotProduct(direction),    direction);    [FE]    junit.framework.AssertionFailedError    testContains    [CONTEXT]    public    double    distance(final    Vector3D    p)    {    final    Vector3D    d    =    p.subtract(zero);    [BUGGY]    final    Vector3D    n    =    new    Vector3D(1.0,    d,    +d.dotProduct(direction),    direction);    [BUGGY]    return    n.getNorm();    }    [CLASS]        Line    [METHOD]    distance    [RETURN_TYPE]    double        Vector3D    p    [VARIABLES]    Vector3D    d    delta    direction    n    p    p1    p2    point    zero    boolean        	math_39490_Line_1_1	165	1	src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java
12	[PATCH]    return    add(instant,    -value);	[BUG]    [BUGGY]    return    add(instant,    +value);    [FE]    junit.framework.AssertionFailedError:    expected:<2002-04-26T00:00:00.000-00:01:15>    but    was:<2002-05-10T00:00:00.000-00:01:15>    testMinusWeeks_int    [CONTEXT]    public    long    subtract(long    instant,    int    value)    {    if    (value    ==    Integer.MIN_VALUE)    {    return    subtract(instant,    (long)    value);    }    [BUGGY]    return    add(instant,    +value);    [BUGGY]    }    [CLASS]        DurationField    [METHOD]    subtract    [RETURN_TYPE]    long        long    instant    int    value    [VARIABLES]    boolean    long    instant    int    value        	time_658_DurationField_1_1	212	1	src/main/java/org/joda/time/DurationField.java
13	[PATCH]    double    zb    =    -(za    -    EIGHTHS[idx]    -    ya);	[BUG]    [BUGGY]    double    zb    =    +(za    -    EIGHTHS[idx]    -    ya);    [FE]    junit.framework.AssertionFailedError:    expected:<0.0>    but    was:<-1.1102230246251565E-16>    testTanAtan    [CONTEXT]    temp    =    ya    +    yb;    yb    =    -(temp    -    ya    -    yb);    ya    =    temp;        yb    +=    epsB    /    (1d    +    epsA    *    epsA);        double    za    =    EIGHTHS[idx]    +    ya;    [BUGGY]    double    zb    =    +(za    -    EIGHTHS[idx]    -    ya);    [BUGGY]    temp    =    za    +    yb;    zb    +=    -(temp    -    za    -    yb);    za    =    temp;    double    result    =    za    +    zb;    if    (leftPlane)    {        final    double    resultb    =    -(result    -    za    -    zb);    final    double    pia    =    1.5707963267948966    *    2;    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    atan    [RETURN_TYPE]    double        double    xa    double    xb    boolean    leftPlane    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    bita    bitb    bitsum    cotanFlag    leftPlane    negate    negative    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    hiPrecOut    lnCoef_i    lnCoef_last    lnm    lns    reduceResults    result    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    a2    aa    ab    absAsinh    absAtanh    b    base    baseA    baseB    c    cD2pH    cRH    cTmpH    cd    cosEpsA    cosEpsB    cosa    cosaa    cosab    cosb    costA    costB    d    d1High    d1Low    d2p    d2pHH    d2pHL    d2pHigh    d2pLow    da    daa    dab    db    denom    denomb    denomr    epsA    epsA2    epsB    epsilon    err    est    esta    estb    extra    finalRemA    finalRemB    fracPartA    fracPartB    fx1    intPartA    intPartB    lna    lnb    lnza    lnzb    lores    na    nb    numer    oneOverXa    p    pi2a    pi2b    pia    pib    rHH    rHL    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    resultHigh    resultLow    resultb    rln10a    rln10b    sinEpsA    sinEpsB    sina    sinb    sintA    sintB    sumA    sumB    t    temp    temp2    tempA    tempB    tempC    tmp    tmp1    tmp2    tmpA    tmpB    tmpHigh    tmpLow    x    x2    xa    xb    xbadj    xpa    xpb    y    ya    yaa    yab    yb    z    za    zaa    zab    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    e    exp    exponent    finalK    i    idx    intFrac    intPart    intVal    k    quadrant    shift    splitFactor    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    a    ac    ad    b    bc    bd    bits    c    d    inbits    prod2A    prod2B    prodA    prodB    shpi0    shpiA    shpiB    xl    yi        	math_116617_FastMath_1_1	2546	1	src/main/java/org/apache/commons/math3/util/FastMath.java
14	[PATCH]    h    +=    ~(h    <<    9);	[BUG]    [BUGGY]    h    +=    -(h    <<    9);    [FE]    junit.framework.AssertionFailedError:    expected:<2A>    but    was:<null>    testMultiKeyGet    [CONTEXT]    protected    int    hash(final    Object    key)    {        int    h    =    key.hashCode();    [BUGGY]    h    +=    -(h    <<    9);    [BUGGY]    h    ^=h    >>>    14;    h    +=h    <<    4;    h    ^=h    >>>    10;    return    h;    }    [CLASS]        AbstractHashedMap    HashMapIterator    EntrySet    EntrySetIterator    KeySet    KeySetIterator    Values    ValuesIterator    HashEntry    HashIterator    [METHOD]    hash    [RETURN_TYPE]    int        Object    key    [VARIABLES]    KeySet    keySet    AbstractHashedMap    parent    HashEntry    element    entry    last    next    previous    boolean    Values    values    Object    NULL    convertedKey    key    value    String    GETKEY_INVALID    GETVALUE_INVALID    NO_NEXT_ENTRY    NO_PREVIOUS_ENTRY    REMOVE_INVALID    SETVALUE_INVALID    float    DEFAULT_LOAD_FACTOR    loadFactor    int    DEFAULT_CAPACITY    DEFAULT_THRESHOLD    MAXIMUM_CAPACITY    expectedModCount    h    hashCode    hashIndex    i    index    initialCapacity    mapSize    modCount    newSize    size    threshold    HashEntry[]    data    EntrySet    entrySet        	collections_6148_AbstractHashedMap_1_1	396	1	src/main/java/org/apache/commons/collections4/map/AbstractHashedMap.java
15	[PATCH]    p    =        -1.3654692000834678645e-06    +    p    *    w;	[BUG]    [BUGGY]    p    =    +1.3654692000834679E-6    +    p    *    w;    [FE]    junit.framework.AssertionFailedError:    Incorrect    inverse    cumulative    probability    value    returned    for    0.449691797969    expected:<1.9>    but    was:<1.8982471788483952>    testInverseCumulativeProbabilities    [CONTEXT]    p    =    6.6376381343583238325e-15    +    p    *    w;    p    =-4.0545662729752068639e-14    +    p    *    w;    p    =-8.1519341976054721522e-14    +    p    *    w;    p    =    2.6335093153082322977e-12    +    p    *    w;    p    =-1.2975133253453532498e-11    +    p    *    w;    p    =-5.4154120542946279317e-11    +    p    *    w;    p    =1.051212273321532285e-09    +    p    *    w;    p    =-4.1126339803469836976e-09    +    p    *    w;    p    =-2.9070369957882005086e-08    +    p    *    w;    p    =    4.2347877827932403518e-07    +    p    *    w;    [BUGGY]    p    =+1.3654692000834679E-6    +    p    *    w;    [BUGGY]    p    =-1.3882523362786468719e-05    +    p    *    w;    p    =0.0001867342080340571352    +    p    *    w;    p    =-0.00074070253416626697512    +    p    *    w;    p    =    -0.0060336708714301490533    +    p    *    w;    p    =0.24015818242558961693    +    p    *    w;    p    =    1.6536545626831027356    +    p    *    w;    }    else    if    (w    <    16.0)    {    w    =    FastMath.sqrt(w)    -    3.25;    p    =    2.2137376921775787049e-09;    p    =    9.0756561938885390979e-08    +    p    *    w;    [CLASS]        Erf    [METHOD]    erfInv    [RETURN_TYPE]    double        final    double    x    [VARIABLES]    double    X_CRIT    p    ret    w    x    x1    x2    boolean        	math_95878_Erf_1_1	170	1	src/main/java/org/apache/commons/math3/special/Erf.java
16	[PATCH]    comparison    =    (lhs.length    <    rhs.length)    ?    -1    :    +1;	[BUG]    [BUGGY]    comparison    =    (lhs.length    <    rhs.length)    ?    -1    :    ~1;    [FE]    junit.framework.AssertionFailedError    testMultiBooleanArray    [CONTEXT]    }    if    (lhs    ==    null)    {    comparison    =    -1;    return    this;    }    if    (rhs    ==    null)    {    comparison    =    +1;    return    this;    }    if    (lhs.length    !=    rhs.length)    {    [BUGGY]    comparison    =    (lhs.length    <    rhs.length)    ?    -1    :    ~1;    [BUGGY]    return    this;    }    for    (int    i    =    0;    i    <    lhs.length    &&    comparison    ==    0;    i++)    {    append(lhs[i],    rhs[i]);    }    return    this;    }    [CLASS]        CompareToBuilder    [METHOD]    append    [RETURN_TYPE]    CompareToBuilder        final    boolean[]    lhs    final    boolean[]    rhs    [VARIABLES]    int    comparison    i    lhs    rhs    superCompareTo    boolean[]    lhs    rhs    boolean        	lang_15195_CompareToBuilder_1_1	983	1	src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java
17	[PATCH]    return    -val1;	[BUG]    [BUGGY]    return    +val1;    [FE]    junit.framework.AssertionFailedError:    expected:<2545-04-03T00:00:00.000+01:00>    but    was:<2545-04-06T00:00:00.000+01:00>    testMinus_RD    [CONTEXT]    public    static    long    safeMultiply(long    val1,    int    val2)    {    switch    (val2)    {    case    -1:    if    (val1    ==    Long.MIN_VALUE)    {    throw    new    ArithmeticException(   "Multiplication    overflows    a    long:       "    +    val1    +       "    *       "    +    val2);    }    [BUGGY]    return    +val1;    [BUGGY]    case    0:    return    0L;    case    1:    return    val1;    }    long    total    =    val1    *    val2;    if    (total    /    val2    !=    val1)    {    throw    new    ArithmeticException(   "Multiplication    overflows    a    long:       "    +    val1    +       "    *       "    +    val2);    }    return    total;    [CLASS]        FieldUtils    [METHOD]    safeMultiply    [RETURN_TYPE]    long        long    val1    int    val2    [VARIABLES]    boolean    long    total    val1    int    val2        	time_12449_FieldUtils_1_1	141	1	src/main/java/org/joda/time/field/FieldUtils.java
18	[PATCH]    return    new    FieldVector3D<T>(x.linearCombination(v.getZ(),    y,    -v.getY(),    z),	[BUG]    [BUGGY]    return    new    FieldVector3D<T>(x.linearCombination(v.getZ(),    y,    +v.getY(),    z),    [FE]    junit.framework.AssertionFailedError:    expected:<3.0>    but    was:<-5.0>    testVectorialProducts    [CONTEXT]    return    new    FieldVector3D<T>(x.linearCombination(y,    v.z,    z.negate(),    v.y),    y.linearCombination(z,    v.x,    x.negate(),    v.z),    z.linearCombination(x,    v.y,    y.negate(),    v.x));    }                    public    FieldVector3D<T>    crossProduct(final    Vector3D    v)    {    [BUGGY]    return    new    FieldVector3D<T>(x.linearCombination(v.getZ(),    y,    +v.getY(),    z),    [BUGGY]    y.linearCombination(v.getX(),    z,    -v.getZ(),    x),    z.linearCombination(v.getY(),    x,    -v.getX(),    y));    }                                [CLASS]    	math_35937_FieldVector3D_1_1	793	1	src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
19	[PATCH]    double    yb    =    -(ya    -    hiPrec[0]    -    hiPrec[1]);	[BUG]    [BUGGY]    double    yb    =    +(ya    -    hiPrec[0]    -    hiPrec[1]);    [FE]    junit.framework.AssertionFailedError:    double    tanh(-1.1102230246251565E-16)    expected    bca0000000000000    actual    bc9ffffffffffffe    entries    [8]    test1[45]    [CONTEXT]    ratiob    +=    -db    *    na    /    da    /    da;    result    =    ratioa    +    ratiob;    }    else    {    double    hiPrec[]    =    new    double[2];        expm1(x*2.0,    hiPrec);    double    ya    =    hiPrec[0]    +    hiPrec[1];    [BUGGY]    double    yb    =    +(ya    -    hiPrec[0]    -    hiPrec[1]);    [BUGGY]        double    na    =    ya;    double    nb    =    yb;        double    da    =    2.0    +    ya;    double    db    =    -(da    -    2.0    -    ya);    double    temp    =    da    +    yb;    db    +=    -(temp    -    da    -    yb);    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    tanh    [RETURN_TYPE]    double        double    x    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    negate    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    b    d    da    daa    dab    db    denom    denomb    denomr    finalRemA    finalRemB    na    nb    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    t    temp    x    xa    ya    yaa    yab    yb    za    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    finalK    k    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    xl        	math_111244_FastMath_1_1	665	1	src/main/java/org/apache/commons/math3/util/FastMath.java
20	[PATCH]    return    -0.5    *    exp(-x);	[BUG]    [BUGGY]    return    -0.5    *    exp(+x);    [FE]    junit.framework.AssertionFailedError:    expected:<0.0>    but    was:<9.007161973606077E15>    testHyperbolic    [CONTEXT]    if    (x    <=    -LOG_MAX_VALUE)    {        final    double    t    =    exp(-0.5    *    x);    return    (-0.5    *    t)    *    t;    }    else    {    [BUGGY]    return    -0.5    *    exp(+x);    [BUGGY]    }    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    sinh    [RETURN_TYPE]    double        double    x    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    negate    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    b    d    denom    denomb    denomr    finalRemA    finalRemB    ra    ratio    rb    recip    recipa    recipb    remA    remB    result    t    temp    x    xa    ya    yaa    yab    yb    za    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    finalK    k    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    xl        	math_110625_FastMath_1_1	486	1	src/main/java/org/apache/commons/math3/util/FastMath.java
21	[PATCH]    comparison    =    (lhs.length    <    rhs.length)    ?    -1    :    +1;	[BUG]    [BUGGY]    comparison    =    (lhs.length    <    rhs.length)    ?    -1    :    ~1;    [FE]    junit.framework.AssertionFailedError    testDoubleArrayHiddenByObject    [CONTEXT]    }    if    (lhs    ==    null)    {    comparison    =    -1;    return    this;    }    if    (rhs    ==    null)    {    comparison    =    +1;    return    this;    }    if    (lhs.length    !=    rhs.length)    {    [BUGGY]    comparison    =    (lhs.length    <    rhs.length)    ?    -1    :    ~1;    [BUGGY]    return    this;    }    for    (int    i    =    0;    i    <    lhs.length    &&    comparison    ==    0;    i++)    {    append(lhs[i],    rhs[i]);    }    return    this;    }    [CLASS]        CompareToBuilder    [METHOD]    append    [RETURN_TYPE]    CompareToBuilder        final    double[]    lhs    final    double[]    rhs    [VARIABLES]    double[]    lhs    rhs    int    comparison    i    lhs    rhs    superCompareTo    boolean        	lang_15107_CompareToBuilder_1_1	903	1	src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java
22	[PATCH]    return    new    Vector3D(0,    inverse    *    z,    -inverse    *    y);	[BUG]    [BUGGY]    return    new    Vector3D(0,    inverse    *    z,    +inverse    *    y);    [FE]    junit.framework.AssertionFailedError:    expected:<0.3333333333333333>    but    was:<0.1851851851851872>    testTetrahedron    [CONTEXT]    public    Vector3D    orthogonal()    throws    MathArithmeticException    {    double    threshold    =    0.6    *    getNorm();    if    (threshold    ==    0)    {    throw    new    MathArithmeticException(LocalizedFormats.ZERO_NORM);    }    if    (FastMath.abs(x)    <=    threshold)    {    double    inverse=    1    /    FastMath.sqrt(y    *    y    +    z    *    z);    [BUGGY]    return    new    Vector3D(0,    inverse    *    z,    +inverse    *    y);    [BUGGY]    }    else    if    (FastMath.abs(y)    <=    threshold)    {    double    inverse=    1    /    FastMath.sqrt(x    *    x    +    z    *    z);    return    new    Vector3D(-inverse    *    z,    0,    inverse    *    x);    }    double    inverse=    1    /    FastMath.sqrt(x    *    x    +    y    *    y);    return    new    Vector3D(inverse    *    y,    -inverse    *    x,    0);    }    [CLASS]        Vector3D    [METHOD]    orthogonal    [RETURN_TYPE]    Vector3D        [VARIABLES]    boolean    Vector3D    MINUS_I    MINUS_J    MINUS_K    NEGATIVE_INFINITY    NaN    PLUS_I    PLUS_J    PLUS_K    POSITIVE_INFINITY    ZERO    u    u1    u2    u3    u4    v3    double    a    a1    a2    a3    a4    alpha    cosDelta    delta    factor    inverse    s    threshold    x    y    z    long    serialVersionUID        	math_39136_Vector3D_1_1	328	1	src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java
23	[PATCH]    return    plusMillis(-millis);	[BUG]    [BUGGY]    return    plusMillis(+millis);    [FE]    junit.framework.AssertionFailedError:    expected:<PT0.002S>    but    was:<PT0.004S>    testMinusFields    [CONTEXT]    public    Period    minusMillis(int    millis)    {    [BUGGY]    return    plusMillis(+millis);    [BUGGY]    }    [CLASS]        Period    [METHOD]    minusMillis    [RETURN_TYPE]    Period        int    millis    [VARIABLES]    Period    ZERO    boolean    long    duration    endInstant    serialVersionUID    startInstant    int    millis        	time_2556_Period_1_1	1320	1	src/main/java/org/joda/time/Period.java
24	[PATCH]    final    double    b2    =    h    *    (-27.0/32.0    +    theta2    *    (459.0/32.0    +    theta    *    (-243.0/8.0    +    theta    *    135.0/8.0)));	[BUG]    [BUGGY]    final    double    b2    =    h    *    (-27.0/32.0    +    theta2    *    (459.0/32.0    +    theta    *    (+243.0/8.0    +    theta    *    135.0/8.0)));    [FE]    junit.framework.AssertionFailedError    testBackward    [CONTEXT]    final    double    yDot4    =    yDotK[4][i];    final    double    yDot5    =    yDotK[5][i];    interpolatedState[i]    =    previousState[i]    +    b0    *    yDot0    +    b2    *    yDot2    +    b3    *    yDot3    +    b4    *    yDot4    +    b5    *    yDot5;    interpolatedDerivatives[i]    =    bDot0    *    yDot0    +    bDot2    *    yDot2    +    bDot3    *    yDot3    +    bDot4    *    yDot4    +    bDot5    *    yDot5;    }    }    else    {    final    double    theta2    =    theta    *    theta;    final    double    b0    =    h    *    (-1.0/12.0    +    theta    *    (1.0    +    theta    *    (-15.0/4.0    +    theta    *    (16.0/3.0    +    theta    *    -5.0/2.0))));    [BUGGY]    final    double    b2    =    h    *    (-27.0/32.0    +    theta2    *    (459.0/32.0    +    theta    *    (+243.0/8.0    +    theta    *    135.0/8.0)));    [BUGGY]    final    double    b3    =    h    *    (4.0/3.0    +    theta2    *    (-22.0    +    theta    *    (152.0/3.0+    theta    *    -30.0)));    final    double    b4    =    h    *    (-125.0/96.0    +    theta2    *    (375.0/32.0    +    theta    *    (-625.0/24.0    +    theta    *    125.0/8.0)));    final    double    b5    =    h    *    (-5.0/48.0    +    theta2    *    (-5.0/16.0    +    theta    *    5.0/12.0));    for    (int    i    =    0;    i    <    interpolatedState.length;    ++i)    {    final    double    yDot0    =    yDotK[0][i];    final    double    yDot2    =    yDotK[2][i];    final    double    yDot3    =    yDotK[3][i];    final    double    yDot4    =    yDotK[4][i];    final    double    yDot5    =    yDotK[5][i];    interpolatedState[i]    =    [CLASS]        HighamHall54StepInterpolator    [METHOD]    computeInterpolatedStateAndDerivatives    [RETURN_TYPE]    void        final    double    theta    final    double    oneMinusThetaH    [VARIABLES]    boolean    long    serialVersionUID    double    b0    b2    b3    b4    b5    bDot0    bDot2    bDot3    bDot4    bDot5    hTheta    oneMinusThetaH    theta    theta2    yDot0    yDot2    yDot3    yDot4    yDot5    int    i        	math_74852_HighamHall54StepInterpolator_1_1	101	1	src/main/java/org/apache/commons/math3/ode/nonstiff/HighamHall54StepInterpolator.java
25	[PATCH]    yb    +=    -(temp    -    ya    -    ra);	[BUG]    [BUGGY]    yb    +=    +(temp    -    ya    -    ra);    [FE]    junit.framework.AssertionFailedError:    sinh()    had    errors    in    excess    of    0.51    ULP    testSinhAccuracy    [CONTEXT]    double    zb    =    denom    -    za;    rb    +=    (ya    -    za*ra    -    za*rb    -    zb*ra    -    zb*rb)    *    denomr;        rb    +=    yb*denomr;    rb    +=    -ya    *    denomb    *    denomr    *    denomr;            temp    =    ya    +    ra;    [BUGGY]    yb    +=    +(temp    -    ya    -    ra);    [BUGGY]    ya    =    temp;    temp    =    ya    +    rb;    yb    +=    -(temp    -    ya    -    rb);    ya    =    temp;    result    =    ya    +    yb;    result    *=    0.5;    }    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    sinh    [RETURN_TYPE]    double        double    x    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    negate    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    b    d    denom    denomb    denomr    finalRemA    finalRemB    ra    ratio    rb    recip    recipa    recipb    remA    remB    result    t    temp    x    xa    ya    yaa    yab    yb    za    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    finalK    k    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    xl        	math_110955_FastMath_1_1	565	1	src/main/java/org/apache/commons/math3/util/FastMath.java
26	[PATCH]    return    +1;	[BUG]    [BUGGY]    return    ~1;    [FE]    junit.framework.AssertionFailedError:    expected:<1.0>    but    was:<-125.49893320735326>    testModelsMerging    [CONTEXT]    return    -1;    }    else    if    (time    >    interval.getCurrentTime())    {    return    +1;    }    else    {    return    0;    }    }    if    (time    >    interval.getPreviousTime())    {    return    -1;    }    else    if    (time    <    interval.getCurrentTime())    {    [BUGGY]    return    ~1;    [BUGGY]    }    else    {    return    0;    }    }    [CLASS]        ContinuousOutputModel    [METHOD]    locatePoint    [RETURN_TYPE]    int        final    double    time    StepInterpolator    interval    [VARIABLES]    List    steps    boolean    forward    isLast    StepInterpolator    interval    double    current    d12    d13    d23    dt1    dt2    dt3    finalTime    gap    iLagrange    initialTime    previous    step    t    t0    tMax    tMed    tMin    time    long    serialVersionUID    int    high    iMax    iMed    iMin    index    location    low    secondaryStateIndex        	math_64974_ContinuousOutputModel_1_1	377	1	src/main/java/org/apache/commons/math3/ode/ContinuousOutputModel.java
27	[PATCH]    final    int    orderingSign    =    interpolator.isForward()    ?    +1    :    -1;	[BUG]    [BUGGY]    final    int    orderingSign    =    interpolator.isForward()    ?    ~1    :    -1;    [FE]    junit.framework.AssertionFailedError:    expected:<32.0>    but    was:<31.000000000000004>    testIssue695    [CONTEXT]        if    (!    statesInitialized)    {    for    (EventState    state    :    eventsStates)    {    state.reinitializeBegin(interpolator);    }    statesInitialized    =    true;    }            [BUGGY]    final    int    orderingSign    =    interpolator.isForward()    ?    ~1    :    -1;    [BUGGY]    SortedSet<EventState>    occurringEvents    =    new    TreeSet<EventState>(new    Comparator<EventState>()    {        public    int    compare(EventState    es0,    EventState    es1)    {    return    orderingSign    *    Double.compare(es0.getEventTime(),    es1.getEventTime());    }    });    for    (final    EventState    state    :    eventsStates)    {    [CLASS]        AbstractIntegrator    1    [METHOD]    acceptStep    [RETURN_TYPE]    double        AbstractStepInterpolator    interpolator    final    double[]    y    final    double[]    yDot    final    double    tEnd    [VARIABLES]    ExpandableStatefulODE    equations    expandable    expandableODE    EventState    currentEvent    es0    es1    state    double    convergence    currentT    eventT    maxCheckInterval    previousT    stepSize    stepStart    t    t0    tEnd    Incrementor    evaluations    StepHandler    handler    String    name    SortedSet    occurringEvents    int    index    orderingSign    EquationsMapper    secondary    boolean    isLastStep    needReset    resetOccurred    stateInitialized    statesInitialized    double[]    currentY    eventYComplete    y    yDot    Iterator    iterator    Collection    eventsStates    stepHandlers    AbstractStepInterpolator    interpolator        	math_63972_AbstractIntegrator_1_1	329	1	src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
28	[PATCH]    i    =    ~i;	[BUG]    [BUGGY]    i    =    -i;    [FE]    junit.framework.AssertionFailedError:    expected:<-28378000>    but    was:<-28800000>    testSerialization    [CONTEXT]    public    int    getStandardOffset(long    instant)    {    long[]    transitions    =    iTransitions;    int    i    =    Arrays.binarySearch(transitions,    instant);    if    (i    >=    0)    {    return    iStandardOffsets[i];    }    [BUGGY]    i    =    -i;    [BUGGY]    if    (i    <    transitions.length)    {    if    (i    >    0)    {    return    iStandardOffsets[i    -    1];    }    return    0;    }    if    (iTailZone    ==    null)    {    return    iStandardOffsets[i    -    1];    }    return    iTailZone.getStandardOffset(instant);    [CLASS]        DateTimeZoneBuilder    OfYear    Recurrence    Rule    Transition    RuleSet    DSTZone    PrecalculatedZone    [METHOD]    getStandardOffset    [RETURN_TYPE]    int        long    instant    [VARIABLES]    Recurrence    endRecurrence    iEndRecurrence    iRecurrence    iStartRecurrence    other    recurrence    startRecurrence    OfYear    iOfYear    iUpperOfYear    ofYear    other    long[]    iTransitions    trans    transitions    DSTZone    iTailZone    other    tailZone    ArrayList    copy    iRuleSets    iRules    transitions    int[]    iStandardOffsets    iWallOffsets    standardOffsets    wallOffsets    String    appendNameKey    curNameKey    iInitialNameKey    iNameKey    id    nameKey    nextNameKey    zoneID    String[]    iNameKeys    nameKeys    pool    set    zoneNameData    int    YEAR_LIMIT    dayOfMonth    dayOfWeek    daysToAdd    fromYear    i    iDayOfMonth    iDayOfWeek    iFromYear    iInitialSaveMillis    iMillisOfDay    iMonthOfYear    iSaveMillis    iStandardOffset    iToYear    iUpperYear    iWallOffset    index    j    millisOfDay    monthOfYear    offset    offsetForLast    offsetForNew    poolSize    ruleSetCount    saveMillis    size    standardOffset    toYear    v    wallOffset    year    long    curOffset    curStdOffset    end    firstMillis    iMillis    instant    lastLocal    millis    minutes    newLocal    next    nextMillis    nextOffset    nextStdOffset    prev    seconds    serialVersionUID    start    testInstant    units    upperMillis    w    boolean    advanceDayOfWeek    iAdvance    outputID    char    iMode    mode        	time_19225_DateTimeZoneBuilder_1_1	1555	1	src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java
29	[PATCH]    bitset    &=    ~mask;	[BUG]    [BUGGY]    bitset    &=    +mask;    [FE]    junit.framework.AssertionFailedError    testMultipleSetFlags1    [CONTEXT]    private    void    setFlag(boolean    value,    int    mask)    {    if    (value)    {    bitset    |=    mask;    }    else    {    [BUGGY]    bitset    &=    +mask;    [BUGGY]    }    }    [CLASS]        JSDocInfo    Visibility    LazilyInitializedInfo    LazilyInitializedDocumentation    StringPosition    TrimmedStringPosition    NamePosition    TypePosition    Marker    [METHOD]    setFlag    [RETURN_TYPE]    void        boolean    value    int    mask    [VARIABLES]    Set    modifies    suppressions    ImmutableList    templateTypeNames    Node    associatedNode    String    blockDescription    deprecated    description    fileOverview    item    lendsName    license    meaning    returnDescription    sourceComment    version    long    serialVersionUID    StringPosition    description    p    int    MASK_CONSISTIDGEN    MASK_CONSTANT    MASK_CONSTRUCTOR    MASK_DEFINE    MASK_DEPRECATED    MASK_DICT    MASK_EXPORT    MASK_EXPOSE    MASK_EXTERNS    MASK_FILEOVERVIEW    MASK_FLAGS    MASK_HIDDEN    MASK_IDGEN    MASK_IMPLICITCAST    MASK_INTERFACE    MASK_JAVADISPATCH    MASK_NOALIAS    MASK_NOCHECK    MASK_NOCOMPILE    MASK_NOSHADOW    MASK_NOSIDEEFFECTS    MASK_OVERRIDE    MASK_PRESERVETRY    MASK_STALBEIDGEN    MASK_STRUCT    MASK_TYPEFIELD    TYPEFIELD_ENUM    TYPEFIELD_RETURN    TYPEFIELD_TYPE    TYPEFIELD_TYPEDEF    bitset    mask    TrimmedStringPosition    annotation    name    p    TypePosition    p    type    boolean    brackets    includeDocumentation    newVal    value    SourcePosition    nameNode    p    LazilyInitializedDocumentation    documentation    JSTypeExpression    baseType    thisType    type    Visibility    INHERITED    PRIVATE    PROTECTED    PUBLIC    visibility    List    authors    extendedInterfaces    implementedInterfaces    markers    sees    thrownTypes    LazilyInitializedInfo    info    Map    parameters    throwsDescriptions        	closure_11209_JSDocInfo_1_1	438	1	src/com/google/javascript/rhino/JSDocInfo.java
30	[PATCH]    x    =    -x;	[BUG]    [BUGGY]    x    =    +x;    [FE]    junit.framework.AssertionFailedError:    x=5.764607523034235E-13    expected:<1.922073611382302E-13>    but    was:<-1.9215358410114116E-13>    testDerivativeShortcut    [CONTEXT]    while    (exponent    <    -1023)    {    exponent++;    mantissa    >>>=    1;    }    long    bits    =    mantissa    |    ((exponent    +    1023L)    <<    52);    double    x    =    Double.longBitsToDouble(bits);    if    (negate)    {    [BUGGY]    x    =    +x;    [BUGGY]    }    return    x;    }    [CLASS]        Dfp    [METHOD]    toDouble    [RETURN_TYPE]    double        [VARIABLES]    boolean    negate    byte    FINITE    INFINITE    QNAN    SNAN    asign    bsign    code    nans    rsign    sig    sign    x    double    x    DfpField    field    int[]    dividend    mant    product    quotient    remainder    String    ADD_TRAP    ALIGN_TRAP    DIVIDE_TRAP    GREATER_THAN_TRAP    LESS_THAN_TRAP    MULTIPLY_TRAP    NAN_STRING    NEG_INFINITY_STRING    NEW_INSTANCE_TRAP    NEXT_AFTER_TRAP    POS_INFINITY_STRING    SQRT_TRAP    TRUNC_TRAP    fpdecimal    fpexp    s    str    what    int    ERR_SCALE    MAX_EXP    MIN_EXP    RADIX    adiff    ae    aextradigit    bextradigit    cmp0    decimalPos    diff    divMsb    divisor    dm    e    excp    exp    exponent    extra    i    j    lostdigit    max    md    min    minadj    n    nsqd    offset    p    q    qd    r    result    rh    rl    rsize    sciexp    shf    significantDigits    trial    type    x    long    bits    mantissa    Dfp    tempDfp    y        	math_22130_Dfp_1_1	2494	1	src/main/java/org/apache/commons/math3/dfp/Dfp.java
31	[PATCH]    _features    &=    ~f.getMask();	[BUG]    [BUGGY]    _features    &=    +f.getMask();    [FE]    junit.framework.AssertionFailedError    testConfig    [CONTEXT]    public    JsonParser    disable(Feature    f)    {    [BUGGY]    _features    &=    +f.getMask();    [BUGGY]    return    this;    }    [CLASS]        JsonParser    NumberType    Feature    [METHOD]    disable    [RETURN_TYPE]    JsonParser        Feature    f    [VARIABLES]    NumberType    BIG_DECIMAL    BIG_INTEGER    DOUBLE    FLOAT    INT    LONG    boolean    _defaultState    defaultState    Feature    ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER    ALLOW_COMMENTS    ALLOW_NON_NUMERIC_NUMBERS    ALLOW_NUMERIC_LEADING_ZEROS    ALLOW_SINGLE_QUOTES    ALLOW_UNQUOTED_CONTROL_CHARS    ALLOW_UNQUOTED_FIELD_NAMES    AUTO_CLOSE_SOURCE    f    int    MAX_BYTE_I    MAX_SHORT_I    MIN_BYTE_I    MIN_SHORT_I    _features    features    flags        	jacksoncore_2147_JsonParser_1_1	420	1	src/main/java/com/fasterxml/jackson/core/JsonParser.java
32	[PATCH]    final    double    f2    =    f.value(-p);	[BUG]    [BUGGY]    final    double    f2    =    f.value(+p);    [FE]    junit.framework.AssertionFailedError:    while    integrating    monomial    x**1    with    a    2-point    quadrature    rule    expected:<0.0>    but    was:<-1.2533141373155003>    testAllMonomials[1]    [CONTEXT]    }    final    int    iMax    =    ruleLength    /    2;    double    s    =    0;    double    c    =    0;    for    (int    i    =    0;    i    <    iMax;    i++)    {    final    double    p    =    getPoint(i);    final    double    w    =    getWeight(i);    final    double    f1    =    f.value(p);    [BUGGY]    final    double    f2    =    f.value(+p);    [BUGGY]    final    double    y    =    w    *    (f1    +    f2)    -    c;    final    double    t    =    s    +    y;    c    =    (t    -    s)    -    y;    s    =    t;    }    if    (ruleLength    %    2    !=    0)    {    final    double    w    =    getWeight(iMax);    [CLASS]        SymmetricGaussIntegrator    [METHOD]    integrate    [RETURN_TYPE]    double        UnivariateFunction    f    [VARIABLES]    boolean    UnivariateFunction    f    double    c    f1    f2    p    s    t    w    y    int    i    iMax    ruleLength        	math_7710_SymmetricGaussIntegrator_1_1	84	1	src/main/java/org/apache/commons/math3/analysis/integration/gauss/SymmetricGaussIntegrator.java
33	[PATCH]    result    =    -result;	[BUG]    [BUGGY]    result    =    +result;    [FE]    junit.framework.AssertionFailedError:    expected:<1.2601582175503392>    but    was:<-1.2601582175503392>    testTan    [CONTEXT]    }    double    result;    if    ((quadrant    &    1)    ==    0)    {    result    =    tanQ(xa,    xb,    false);    }    else    {    result    =    -tanQ(xa,    xb,    true);    }    if    (negative)    {    [BUGGY]    result    =    +result;    [BUGGY]    }    return    result;    }    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    tan    [RETURN_TYPE]    double        double    x    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    bita    bitb    bitsum    cotanFlag    negate    negative    CodyWaite    cw    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    hiPrecOut    lnCoef_i    lnCoef_last    lnm    lns    reduceResults    result    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    a2    aa    ab    absAsinh    absAtanh    b    base    baseA    baseB    c    cD2pH    cRH    cTmpH    cd    cosEpsA    cosEpsB    cosa    cosaa    cosab    cosb    costA    costB    d    d1High    d1Low    d2p    d2pHH    d2pHL    d2pHigh    d2pLow    da    daa    dab    db    denom    denomb    denomr    epsilon    err    est    esta    estb    extra    finalRemA    finalRemB    fracPartA    fracPartB    fx1    intPartA    intPartB    lna    lnb    lnza    lnzb    lores    na    nb    numer    p    pi2a    pi2b    rHH    rHL    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    resultHigh    resultLow    rln10a    rln10b    sinEpsA    sinEpsB    sina    sinb    sintA    sintB    sumA    sumB    t    temp    temp2    tempA    tempB    tempC    tmp    tmp1    tmp2    tmpA    tmpB    tmpHigh    tmpLow    x    x2    xa    xb    xbadj    xpa    xpb    y    ya    yaa    yab    yb    z    za    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    e    exp    exponent    finalK    i    idx    intFrac    intPart    intVal    k    quadrant    shift    splitFactor    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    a    ac    ad    b    bc    bd    bits    c    d    inbits    prod2A    prod2B    prodA    prodB    shpi0    shpiA    shpiB    xl    yi        	math_116154_FastMath_1_1	2413	1	src/main/java/org/apache/commons/math3/util/FastMath.java
34	[PATCH]    return    -h;	[BUG]    [BUGGY]    return    +h;    [FE]    junit.framework.AssertionFailedError:    expected:<1.6651093057213993>    but    was:<2.884053773201766>    testRootLogLikelihood    [CONTEXT]    }    }    for    (int    i    =    0;    i    <    k.length;    i++)    {    for    (int    j    =    0;    j    <    k[i].length;    j++)    {    if    (k[i][j]    !=    0)    {    final    double    p_ij    =    (double)    k[i][j]    /    sum_k;    h    +=    p_ij    *    Math.log(p_ij);    }    }    }    [BUGGY]    return    +h;    [BUGGY]    }    [CLASS]        GTest    [METHOD]    entropy    [RETURN_TYPE]    double        final    long[][]    k    [VARIABLES]    boolean    double    h    p_ij    sum_k    long[][]    k    int    i    j        	math_101658_GTest_1_1	277	1	src/main/java/org/apache/commons/math3/stat/inference/GTest.java
35	[PATCH]    rb    +=    -ya    *    denomb    *    denomr    *    denomr;            //    denominator	[BUG]    [BUGGY]    rb    +=    +ya    *    denomb    *    denomr    *    denomr;        //    denominator    [FE]    junit.framework.AssertionFailedError:    sinh()    had    errors    in    excess    of    0.51    ULP    testSinhAccuracy    [CONTEXT]    double    rb    =    ratio    -    ra;    temp    =    denom    *    HEX_40000000;    double    za    =    denom    +    temp    -    temp;    double    zb    =    denom    -    za;    rb    +=    (ya    -    za*ra    -    za*rb    -    zb*ra    -    zb*rb)    *    denomr;        rb    +=    yb*denomr;    [BUGGY]    rb    +=    +ya    *    denomb    *    denomr    *    denomr;        [BUGGY]        temp    =    ya    +    ra;    yb    +=    -(temp    -    ya    -    ra);    ya    =    temp;    temp    =    ya    +    rb;    yb    +=    -(temp    -    ya    -    rb);    ya    =    temp;    result    =    ya    +    yb;    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    sinh    [RETURN_TYPE]    double        double    x    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    negate    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    b    d    denom    denomb    denomr    finalRemA    finalRemB    ra    ratio    rb    recip    recipa    recipb    remA    remB    result    t    temp    x    xa    ya    yaa    yab    yb    za    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    finalK    k    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    xl        	math_110936_FastMath_1_1	561	1	src/main/java/org/apache/commons/math3/util/FastMath.java
36	[PATCH]    if    (x    >    1.0    ||    x    <    -1.0)    {	[BUG]    [BUGGY]    if    (x    >    1.0    ||    x    <    +1.0)    {    [FE]    junit.framework.AssertionFailedError:    expected:<0.0>    but    was:<NaN>    testSinAsin    [CONTEXT]    public    static    double    asin(double    x)    {    if    (x    !=    x)    {    return    Double.NaN;    }        [BUGGY]    if    (x    >    1.0    ||    x    <    +1.0)    {    [BUGGY]    return    Double.NaN;    }    if    (x    ==    1.0)    {    return    Math.PI/2.0;    }    if    (x    ==    -1.0)    {    return    -Math.PI/2.0;    }    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    asin    [RETURN_TYPE]    double        double    x    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    bita    bitb    bitsum    cotanFlag    leftPlane    negate    negative    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    hiPrecOut    lnCoef_i    lnCoef_last    lnm    lns    reduceResults    result    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    a2    aa    ab    absAsinh    absAtanh    b    base    baseA    baseB    c    cD2pH    cRH    cTmpH    cd    cosEpsA    cosEpsB    cosa    cosaa    cosab    cosb    costA    costB    d    d1High    d1Low    d2p    d2pHH    d2pHL    d2pHigh    d2pLow    da    daa    dab    db    denom    denomb    denomr    dx    epsA    epsA2    epsB    epsilon    err    est    esta    estb    extra    finalRemA    finalRemB    fracPartA    fracPartB    fx1    intPartA    intPartB    invx    invy    lna    lnb    lnza    lnzb    lores    na    nb    numer    oneOverXa    p    pi2a    pi2b    pia    pib    r    rHH    rHL    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    resultHigh    resultLow    resultb    rln10a    rln10b    sinEpsA    sinEpsB    sina    sinb    sintA    sintB    sumA    sumB    t    temp    temp2    tempA    tempB    tempC    tmp    tmp1    tmp2    tmpA    tmpB    tmpHigh    tmpLow    x    x2    xa    xb    xbadj    xpa    xpb    y    ya    yaa    yab    yb    z    za    zaa    zab    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    e    exp    exponent    finalK    i    idx    intFrac    intPart    intVal    k    quadrant    shift    splitFactor    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    a    ac    ad    b    bc    bd    bits    c    d    inbits    prod2A    prod2B    prodA    prodB    shpi0    shpiA    shpiB    xl    yi        	math_117041_FastMath_1_1	2706	1	src/main/java/org/apache/commons/math3/util/FastMath.java
37	[PATCH]    this.data.add(-index    -    1,    item);	[BUG]    [BUGGY]    this.data.add(~index    -    1,    item);    [FE]    java.lang.IndexOutOfBoundsException:    Index:    -1,    Size:    0    testAddOrUpdate    [CONTEXT]    this.maxY    =    minIgnoreNaN(this.maxY,    yy);    }    }    else    {                    item    =    (XYDataItem)    item.clone();    if    (this.autoSort)    {    [BUGGY]    this.data.add(~index    -    1,    item);    [BUGGY]    }    else    {    this.data.add(item);    }    updateBoundsForAddedItem(item);        if    (getItemCount()    >    this.maximumItemCount)    {    XYDataItem    removed    =    (XYDataItem)    this.data.remove(0);    updateBoundsForRemovedItem(removed);    [CLASS]        XYSeries    [METHOD]    addOrUpdate    [RETURN_TYPE]    XYDataItem        XYDataItem    item    [VARIABLES]    List    data    boolean    allowDuplicateXValues    autoSort    itemContributesToXBounds    itemContributesToYBounds    iterate    notify    double    a    b    maxX    maxY    minX    minY    oldY    x    y    yy    long    serialVersionUID    int    end    index    maximum    maximumItemCount    remove    size    start    XYDataItem    existing    item    overwritten    removed        	chart_70533_XYSeries_1_1	835	1	source/org/jfree/data/xy/XYSeries.java
38	[PATCH]    p    =    -p;	[BUG]    [BUGGY]    p    =    +p;    [FE]    junit.framework.AssertionFailedError:    found[0]=-3.394846568305354E-7    value=-1.9999999999999616    expected:<0.0>    but    was:<-3.394846568305354E-7>    testSumSinc    [CONTEXT]    double    r    =    0;    double    u    =    0;    if    (FastMath.abs(e)    >    tol1)    {    r    =    (x    -    w)    *    (fx    -    fv);    q    =    (x    -    v)    *    (fx    -    fw);    p    =    (x    -    v)    *    q    -    (x    -    w)    *    r;    q    =    2    *    (q    -    r);    if    (q    >    0)    {    [BUGGY]    p    =    +p;    [BUGGY]    }    else    {    q    =    -q;    }    r    =    e;    e    =    d;    if    (p    >    q    *    (a    -    x)    &&    p    <    q    *    (b    -    x)    &&    FastMath.abs(p)    <    FastMath.abs(0.5    *    q    *    r))    {    [CLASS]        BrentOptimizer    [METHOD]    doOptimize    [RETURN_TYPE]    UnivariatePointValuePair        [VARIABLES]    ConvergenceChecker    checker    UnivariatePointValuePair    best    current    previous    boolean    isMinim    stop    double    GOLDEN_SECTION    MIN_RELATIVE_TOLERANCE    a    abs    absoluteThreshold    b    d    e    fu    fv    fw    fx    hi    lo    m    mid    p    q    r    rel    relativeThreshold    tol1    tol2    u    v    w    x    int    iter        	math_84963_BrentOptimizer_1_1	176	1	src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java
39	[PATCH]    return    iChronology.setYear(instant,    -year);	[BUG]    [BUGGY]    return    iChronology.setYear(instant,    +year);    [FE]    org.joda.time.IllegalFieldValueException:    Value    0    for    era    is    not    supported:    Illegal    instant    due    to    time    zone    offset    transition    (daylight    savings    time    'gap'):    1970-06-09T00:00:00.000    (Europe/London)    testWithers    [CONTEXT]    public    long    set(long    instant,    int    era)    {    FieldUtils.verifyValueBounds(this,    era,    DateTimeConstants.BCE,    DateTimeConstants.CE);    int    oldEra    =    get(instant);    if    (oldEra    !=    era)    {    int    year    =    iChronology.getYear(instant);    [BUGGY]    return    iChronology.setYear(instant,    +year);    [BUGGY]    }    else    {    return    instant;    }    }    [CLASS]        GJEraDateTimeField    [METHOD]    set    [RETURN_TYPE]    long        long    instant    int    era    [VARIABLES]    boolean    long    instant    serialVersionUID    BasicChronology    chronology    iChronology    int    era    oldEra    year        	time_10160_GJEraDateTimeField_1_1	86	1	src/main/java/org/joda/time/chrono/GJEraDateTimeField.java
40	[PATCH]    y.linearCombination(v.getX(),    z,    -v.getZ(),    x),	[BUG]    [BUGGY]    y.linearCombination(v.getX(),    z,    +v.getZ(),    x),    [FE]    junit.framework.AssertionFailedError:    expected:<-10.0>    but    was:<-14.0>    testVectorialProducts    [CONTEXT]    y.linearCombination(z,    v.x,    x.negate(),    v.z),    z.linearCombination(x,    v.y,    y.negate(),    v.x));    }                    public    FieldVector3D<T>    crossProduct(final    Vector3D    v)    {    return    new    FieldVector3D<T>(x.linearCombination(v.getZ(),    y,    -v.getY(),    z),    [BUGGY]    y.linearCombination(v.getX(),    z,    +v.getZ(),    x),    [BUGGY]    z.linearCombination(v.getY(),    x,    -v.getX(),    y));    }                                    [CLASS]    	math_35938_FieldVector3D_1_1	794	1	src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
41	[PATCH]    return    new    Decimal64(-FastMath.pow(-value,    1.0    /    n));	[BUG]    [BUGGY]    return    new    Decimal64(+FastMath.pow(-value,    1.0    /    n));    [FE]    junit.framework.AssertionFailedError:    expected:<-0.9>    but    was:<0.9>    testRootN    [CONTEXT]    public    Decimal64    rootN(final    int    n)    {    if    (value    <    0)    {    [BUGGY]    return    new    Decimal64(+FastMath.pow(-value,    1.0    /    n));    [BUGGY]    }    else    {    return    new    Decimal64(FastMath.pow(value,    1.0    /    n));    }    }    [CLASS]        Decimal64    [METHOD]    rootN    [RETURN_TYPE]    Decimal64        final    int    n    [VARIABLES]    Decimal64    NAN    NEGATIVE_INFINITY    ONE    POSITIVE_INFINITY    ZERO    a    o    sign    that    y    boolean    double    a    sign    value    x    long    serialVersionUID    v    int    n        	math_109722_Decimal64_1_1	444	1	src/main/java/org/apache/commons/math3/util/Decimal64.java
42	[PATCH]    -r.q1    *    q0    +    r.q0    *    q1    +    (r.q2    *    q3    -    r.q3    *    q2),	[BUG]    [BUGGY]    +r.q1    *    q0    +    r.q0    *    q1    +    (r.q2    *    q3    -    r.q3    *    q2),    [FE]    junit.framework.AssertionFailedError:    expected:<0.0>    but    was:<1.5707963267948963>    testVectorTwoPairs    [CONTEXT]    public    Rotation    applyInverseTo(Rotation    r)    {    return    new    Rotation(-r.q0    *    q0    -    (r.q1    *    q1    +    r.q2    *    q2    +    r.q3    *    q3),    [BUGGY]    +r.q1    *    q0    +    r.q0    *    q1    +    (r.q2    *    q3    -    r.q3    *    q2),    [BUGGY]    -r.q2    *    q0    +    r.q0    *    q2    +    (r.q3    *    q1    -    r.q1    *    q3),    -r.q3    *    q0    +    r.q0    *    q3    +    (r.q1    *    q2    -    r.q2    *    q1),    false);    }    [CLASS]        Rotation    [METHOD]    applyInverseTo    [RETURN_TYPE]    Rotation        Rotation    r    [VARIABLES]    boolean    Rotation    IDENTITY    composed    r    r1    r2    r3    double    alpha1    alpha2    alpha3    angle    coeff    det    dot    halfAngle    inv    inverse    m0    norm    normProduct    q0    q0q0    q0q1    q0q2    q0q3    q1    q1q1    q1q2    q1q3    q2    q2q2    q2q3    q3    q3q3    s    squaredSine    threshold    x    y    z    long    serialVersionUID        	math_38034_Rotation_1_1	921	1	src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
43	[PATCH]    return    (a    <    0.0)    ?    -1.0    :    ((a    >    0.0)    ?    1.0    :    a);    //    return    +0.0/-0.0/NaN    depending    on    a	[BUG]    [BUGGY]    return    (a    <    0.0)    ?    +1.0    :    ((a    >    0.0)    ?    1.0    :    a);    //    return    +0.0/-0.0/NaN    depending    on    a    [FE]    junit.framework.AssertionFailedError:    expected:<-1.0>    but    was:<1.0>    testSignum    [CONTEXT]    public    static    double    signum(final    double    a)    {    [BUGGY]    return    (a    <    0.0)    ?    +1.0    :    ((a    >    0.0)    ?    1.0    :    a);        [BUGGY]    }    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    signum    [RETURN_TYPE]    double        final    double    a    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    negate    negative    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    a2    absAsinh    absAtanh    b    d    da    daa    dab    db    denom    denomb    denomr    finalRemA    finalRemB    na    nb    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    t    temp    x    xa    ya    yaa    yab    yb    za    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    finalK    k    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    xl        	math_111968_FastMath_1_1	780	1	src/main/java/org/apache/commons/math3/util/FastMath.java
44	[PATCH]    return    new    Quaternion(q0,    -q1,    -q2,    -q3);	[BUG]    [BUGGY]    return    new    Quaternion(q0,    +q1,    -q2,    -q3);    [FE]    junit.framework.AssertionFailedError:    expected:<5.291502622129181>    but    was:<5.477225575051661>    testNorm    [CONTEXT]    public    Quaternion    getConjugate()    {    [BUGGY]    return    new    Quaternion(q0,    +q1,    -q2,    -q3);    [BUGGY]    }    [CLASS]        Quaternion    [METHOD]    getConjugate    [RETURN_TYPE]    Quaternion        [VARIABLES]    boolean    Quaternion    I    IDENTITY    J    K    ZERO    double    a    b    c    d    q0    q1    q2    q3    scalar    long    serialVersionUID        	math_17424_Quaternion_1_1	115	1	src/main/java/org/apache/commons/math3/complex/Quaternion.java
45	[PATCH]    return    createComplex(real,    -imaginary);	[BUG]    [BUGGY]    return    createComplex(real,    +imaginary);    [FE]    junit.framework.AssertionFailedError:    expected:<-4.0>    but    was:<4.0>    testConjugate    [CONTEXT]    public    Complex    conjugate()    {    if    (isNaN)    {    return    NaN;    }        [BUGGY]    return    createComplex(real,    +imaginary);    [BUGGY]    }    [CLASS]        Complex    [METHOD]    conjugate    [RETURN_TYPE]    Complex        [VARIABLES]    boolean    isInfinite    isNaN    double    addend    imaginary    q    real    long    serialVersionUID    Complex    I    INF    NaN    ONE    ZERO    addend        	math_15714_Complex_1_1	201	1	src/main/java/org/apache/commons/math3/complex/Complex.java
46	[PATCH]    if    ((v2.getX().getReal()    <    -0.9999999999)    ||    (v2.getX().getReal()    >    0.9999999999))    {	[BUG]    [BUGGY]    if    ((v2.getX().getReal()    <    +0.9999999999)    ||    (v2.getX().getReal()    >    0.9999999999))    {    [FE]    org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException:    Cardan    angles    singularity    testAngles    [CONTEXT]    }    else    if    (order    ==    RotationOrder.ZYX)    {                        final    FieldVector3D<T>    v1    =    applyTo(vector(1,    0,    0));    final    FieldVector3D<T>    v2    =    applyInverseTo(vector(0,    0,    1));    [BUGGY]    if    ((v2.getX().getReal()    <    +0.9999999999)    ||    (v2.getX().getReal()    >    0.9999999999))    {    [BUGGY]    throw    new    CardanEulerSingularityException(true);    }    return    buildArray(v1.getY().atan2(v1.getX()),    v2.getX().asin().negate(),    v2.getY().atan2(v2.getZ()));    }    else    if    (order    ==    RotationOrder.XYX)    {                [CLASS]    	math_34840_FieldRotation_1_1	583	1	src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
47	[PATCH]    comparison    =    +1;	[BUG]    [BUGGY]    comparison    =    -1;    [FE]    junit.framework.AssertionFailedError    testShortArray    [CONTEXT]    return    this;    }    if    (lhs    ==    rhs)    {    return    this;    }    if    (lhs    ==    null)    {    comparison    =    -1;    return    this;    }    if    (rhs    ==    null)    {    [BUGGY]    comparison    =    -1;    [BUGGY]    return    this;    }    if    (lhs.length    !=    rhs.length)    {    comparison    =    (lhs.length    <    rhs.length)    ?    -1    :    +1;    return    this;    }    for    (int    i    =    0;    i    <    lhs.length    &&    comparison    ==    0;    i++)    {    append(lhs[i],    rhs[i]);    }    return    this;    [CLASS]        CompareToBuilder    [METHOD]    append    [RETURN_TYPE]    CompareToBuilder        final    short[]    lhs    final    short[]    rhs    [VARIABLES]    short[]    lhs    rhs    int    comparison    i    lhs    rhs    superCompareTo    boolean        	lang_14961_CompareToBuilder_1_1	779	1	src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java
48	[PATCH]    return    +1;	[BUG]    [BUGGY]    return    ~1;    [FE]    junit.framework.AssertionFailedError:    expected:<1.0>    but    was:<0.0>    testBox    [CONTEXT]    encode(ot.offset);    }    else    if    (offset    >    ot.offset)    {    ot.encode(offset);    }    final    int    limit    =    FastMath.min(encoding.length,    ot.encoding.length);    for    (int    i    =    0;    i    <    limit;    ++i)    {    if    (encoding[i]    <    ot.encoding[i])    {    return    -1;    }    else    if    (encoding[i]    >    ot.encoding[i])    {    [BUGGY]    return    ~1;    [BUGGY]    }    }    if    (encoding.length    <    ot.encoding.length)    {    return    -1;    }    else    if    (encoding.length    >    ot.encoding.length)    {    return    +1;    }    else    {    return    0;    }    [CLASS]        OrderedTuple    [METHOD]    compareTo    [RETURN_TYPE]    int        OrderedTuple    ot    [VARIABLES]    boolean    nan    negInf    posInf    OrderedTuple    ot    double[]    components    long[]    encoding    long    EXPONENT_MASK    IMPLICIT_ONE    MANTISSA_MASK    SIGN_MASK    b    m    word    int    e    eIndex    i    k    limit    lsb    minOffset    msb    neededBits    neededLongs    offset    shift    vIndex        	math_41844_OrderedTuple_1_1	270	1	src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java
49	[PATCH]    return    plusHours(-hours);	[BUG]    [BUGGY]    return    plusHours(~hours);    [FE]    junit.framework.AssertionFailedError:    expected:<PT2H>    but    was:<PT1H>    testMinusFields    [CONTEXT]    public    Period    minusHours(int    hours)    {    [BUGGY]    return    plusHours(~hours);    [BUGGY]    }    [CLASS]        Period    [METHOD]    minusHours    [RETURN_TYPE]    Period        int    hours    [VARIABLES]    Period    ZERO    boolean    long    duration    endInstant    serialVersionUID    startInstant    int    hours        	time_2551_Period_1_1	1281	1	src/main/java/org/joda/time/Period.java
50	[PATCH]    singularValues[k]    =    -singularValues[k];	[BUG]    [BUGGY]    singularValues[k]    =    +singularValues[k];    [FE]    junit.framework.AssertionFailedError:    [0][1]    expected:<0.0>    but    was:<-2.694719447582372E-14>    testBlockInverse    [CONTEXT]    if    (k    <    nct)    {                singularValues[k]    =    0;    for    (int    i    =    k;    i    <    m;    i++)    {    singularValues[k]    =    FastMath.hypot(singularValues[k],    A[i][k]);    }    if    (singularValues[k]    !=    0)    {    if    (A[k][k]    <    0)    {    [BUGGY]    singularValues[k]    =    +singularValues[k];    [BUGGY]    }    for    (int    i    =    k;    i    <    m;    i++)    {    A[i][k]    /=    singularValues[k];    }    A[k][k]    +=    1;    }    singularValues[k]    =    -singularValues[k];    }    for    (int    j    =    k    +    1;    j    <    n;    j++)    {    if    (k    <    nct    &&    [CLASS]        SingularValueDecomposition    1    Solver    [METHOD]    <init>    [RETURN_TYPE]    RealMatrix)        RealMatrix    matrix    [VARIABLES]    double[][]    A    U    V    boolean    nonSingular    transposed    double[]    e    singularValues    work    RealMatrix    cachedS    cachedU    cachedUt    cachedV    cachedVt    matrix    pseudoInverse    double    EPS    TINY    b    c    cs    ek    epm1    f    g    maxPm1Pm2    scale    shift    sk    sn    sp    spm1    t    threshold    tol    int    i    iter    j    k    kase    ks    m    n    nct    nrt    p    pp        	math_60729_SingularValueDecomposition_1_1	124	1	src/main/java/org/apache/commons/math3/linear/SingularValueDecomposition.java
51	[PATCH]    iMillis    =    FieldUtils.safeAdd(endInstant,    -startInstant);	[BUG]    [BUGGY]    iMillis    =    FieldUtils.safeAdd(endInstant,    +startInstant);    [FE]    junit.framework.AssertionFailedError:    expected:<34218061001>    but    was:<2207689261001>    testConstructor_long_long1    [CONTEXT]    protected    BaseDuration(long    startInstant,    long    endInstant)    {    super();    [BUGGY]    iMillis    =    FieldUtils.safeAdd(endInstant,    +startInstant);    [BUGGY]    }    [CLASS]        BaseDuration    [METHOD]    <init>    [RETURN_TYPE]    BaseDuration(long,long)        long    startInstant    long    endInstant    [VARIABLES]    long    duration    endInstant    iMillis    serialVersionUID    startInstant    boolean        	time_4856_BaseDuration_1_1	74	1	src/main/java/org/joda/time/base/BaseDuration.java
52	[PATCH]    value    =    -value;	[BUG]    [BUGGY]    value    =    +value;    [FE]    com.fasterxml.jackson.core.JsonParseException:    Unexpected    character    ('#'    (code    35))    in    numeric    value:    expected    digit    (0-9)    to    follow    minus    sign,    for    valid    numeric    value    testRootIntsWrite    [CONTEXT]    {    if    (value    <    0)    {    if    (value    ==    Integer.MIN_VALUE)    {                return    outputLong((long)    value,    buffer,    offset);    }    buffer[offset++]    =    '-';    [BUGGY]    value    =    +value;    [BUGGY]    }    if    (value    <    MILLION)    {    if    (value    <    1000)    {    if    (value    <    10)    {    buffer[offset++]    =    (char)    ('0'    +    value);    }    else    {    offset    =    outputLeadingTriplet(value,    buffer,    offset);    }    }    else    {    [CLASS]        NumberOutput    [METHOD]    outputInt    [RETURN_TYPE]    int        int    value    char[]    buffer    int    offset    [VARIABLES]    byte[]    FULL_TRIPLETS_B    boolean    hasBillions    char    NULL_CHAR    String    SMALLEST_LONG    String[]    sSmallIntStrs    sSmallIntStrs2    int    BILLION    MILLION    newValue    offset    ones    thousands    value    long    MAX_INT_AS_LONG    MIN_INT_AS_LONG    TEN_BILLION_L    THOUSAND_L    char[]    FULL_TRIPLETS    LEADING_TRIPLETS    buffer        	jacksoncore_5447_NumberOutput_1_1	78	1	src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java
53	[PATCH]    p    =        -5.4154120542946279317e-11    +    p    *    w;	[BUG]    [BUGGY]    p    =    +5.415412054294628E-11    +    p    *    w;    [FE]    junit.framework.AssertionFailedError:    Incorrect    inverse    cumulative    probability    value    returned    for    0.763024600553    expected:<5.6>    but    was:<5.6002394672343385>    testInverseCumulativeProbabilities    [CONTEXT]    p    =    -1.685059138182016589e-19    +    p    *    w;    p    =    1.2858480715256400167e-18    +    p    *    w;    p    =1.115787767802518096e-17    +    p    *    w;    p    =    -1.333171662854620906e-16    +    p    *    w;    p    =    2.0972767875968561637e-17    +    p    *    w;    p    =    6.6376381343583238325e-15    +    p    *    w;    p    =-4.0545662729752068639e-14    +    p    *    w;    p    =-8.1519341976054721522e-14    +    p    *    w;    p    =    2.6335093153082322977e-12    +    p    *    w;    p    =-1.2975133253453532498e-11    +    p    *    w;    [BUGGY]    p    =+5.415412054294628E-11    +    p    *    w;    [BUGGY]    p    =1.051212273321532285e-09    +    p    *    w;    p    =-4.1126339803469836976e-09    +    p    *    w;    p    =-2.9070369957882005086e-08    +    p    *    w;    p    =    4.2347877827932403518e-07    +    p    *    w;    p    =-1.3654692000834678645e-06    +    p    *    w;    p    =-1.3882523362786468719e-05    +    p    *    w;    p    =0.0001867342080340571352    +    p    *    w;    p    =-0.00074070253416626697512    +    p    *    w;    p    =    -0.0060336708714301490533    +    p    *    w;    p    =0.24015818242558961693    +    p    *    w;    [CLASS]        Erf    [METHOD]    erfInv    [RETURN_TYPE]    double        final    double    x    [VARIABLES]    double    X_CRIT    p    ret    w    x    x1    x2    boolean        	math_95820_Erf_1_1	165	1	src/main/java/org/apache/commons/math3/special/Erf.java
54	[PATCH]    matrixT[k][k    -    1]    =    -matrixT[k][k    -    1];	[BUG]    [BUGGY]    matrixT[k][k    -    1]    =    +matrixT[k][k    -    1];    [FE]    junit.framework.AssertionFailedError:    expected:<0.0>    but    was:<8.491359517748265E-5>    testRandomData    [CONTEXT]    break;    }    double    s    =    FastMath.sqrt(p    *    p    +    q    *    q    +    r    *    r);    if    (p    <    0.0)    {    s    =    -s;    }    if    (s    !=    0.0)    {    if    (k    !=    im)    {    matrixT[k][k    -    1]    =    -s    *    shift.x;    }    else    if    (il    !=    im)    {    [BUGGY]    matrixT[k][k    -    1]    =    +matrixT[k][k    -    1];    [BUGGY]    }    p    =    p    +    s;    shift.x    =    p    /    s;    shift.y    =    q    /    s;    double    z    =    r    /    s;    q    =    q    /    p;    r    =    r    /    p;        for    (int    j    =    k;    j    <    n;    j++)    {    [CLASS]        SchurTransformer    ShiftInfo    [METHOD]    performDoubleQRStep    [RETURN_TYPE]    void        final    int    il    final    int    im    final    int    iu    ShiftInfo    shift    final    double[]    hVec    [VARIABLES]    boolean    notlast    RealMatrix    cachedP    cachedPt    cachedT    matrix    double[]    hVec    double    epsilon    exShift    lhs    norm    p    q    r    rhs    s    w    x    y    z    double[][]    matrixP    matrixT    ShiftInfo    shift    int    MAX_ITERATIONS    high    i    idx    il    im    iteration    iu    j    k    l    n    startIdx        	math_57451_SchurTransformer_1_1	384	1	src/main/java/org/apache/commons/math3/linear/SchurTransformer.java
55	[PATCH]    rb    +=    -x    *    dx    /    y    /    y;        //    Add    in    effect    additional    bits    of    sqrt.	[BUG]    [BUGGY]    rb    +=    +x    *    dx    /    y    /    y;    //    Add    in    effect    additional    bits    of    sqrt.    [FE]    junit.framework.AssertionFailedError:    asin()    had    errors    in    excess    of    0.51    ULP    testAsinAccuracy    [CONTEXT]        double    dx    =    zb    /    (2.0*y);        double    r    =    x/y;    temp    =    r    *    HEX_40000000;    double    ra    =    r    +    temp    -    temp;    double    rb    =    r    -    ra;    rb    +=    (x    -    ra*ya    -    ra*yb    -    rb*ya    -    rb*yb)    /    y;    [BUGGY]    rb    +=    +x    *    dx    /    y    /    y;    [BUGGY]    temp    =    ra    +    rb;    rb    =    -(temp    -    ra    -    rb);    ra    =    temp;    return    atan(ra,    rb,    false);    }    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    asin    [RETURN_TYPE]    double        double    x    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    bita    bitb    bitsum    cotanFlag    leftPlane    negate    negative    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    hiPrecOut    lnCoef_i    lnCoef_last    lnm    lns    reduceResults    result    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    a2    aa    ab    absAsinh    absAtanh    b    base    baseA    baseB    c    cD2pH    cRH    cTmpH    cd    cosEpsA    cosEpsB    cosa    cosaa    cosab    cosb    costA    costB    d    d1High    d1Low    d2p    d2pHH    d2pHL    d2pHigh    d2pLow    da    daa    dab    db    denom    denomb    denomr    dx    epsA    epsA2    epsB    epsilon    err    est    esta    estb    extra    finalRemA    finalRemB    fracPartA    fracPartB    fx1    intPartA    intPartB    invx    invy    lna    lnb    lnza    lnzb    lores    na    nb    numer    oneOverXa    p    pi2a    pi2b    pia    pib    r    rHH    rHL    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    resultHigh    resultLow    resultb    rln10a    rln10b    sinEpsA    sinEpsB    sina    sinb    sintA    sintB    sumA    sumB    t    temp    temp2    tempA    tempB    tempC    tmp    tmp1    tmp2    tmpA    tmpB    tmpHigh    tmpLow    x    x2    xa    xb    xbadj    xpa    xpb    y    ya    yaa    yab    yb    z    za    zaa    zab    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    e    exp    exponent    finalK    i    idx    intFrac    intPart    intVal    k    quadrant    shift    splitFactor    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    a    ac    ad    b    bc    bd    bits    c    d    inbits    prod2A    prod2B    prodA    prodB    shpi0    shpiA    shpiB    xl    yi        	math_117283_FastMath_1_1	2764	1	src/main/java/org/apache/commons/math3/util/FastMath.java
56	[PATCH]    lmDiag[i]    =    -sin    *    rik    +    cos    *    lmDiag[i];	[BUG]    [BUGGY]    lmDiag[i]    =    +sin    *    rik    +    cos    *    lmDiag[i];    [FE]    junit.framework.AssertionFailedError:    expected:<53.1572792>    but    was:<57.69119149779634>    testMath519    [CONTEXT]        weightedJacobian[k][pk]    =    cos    *    rkk    +    sin    *    lmDiag[k];    final    double    temp    =    cos    *    work[k]    +    sin    *    qtbpj;    qtbpj    =    -sin    *    work[k]    +    cos    *    qtbpj;    work[k]    =    temp;        for    (int    i    =    k    +    1;    i    <    solvedCols;    ++i)    {    double    rik    =    weightedJacobian[i][pk];    final    double    temp2    =    cos    *    rik    +    sin    *    lmDiag[i];    [BUGGY]    lmDiag[i]    =    +sin    *    rik    +    cos    *    lmDiag[i];    [BUGGY]    weightedJacobian[i][pk]    =    temp2;    }    }    }            lmDiag[j]    =    weightedJacobian[j][permutation[j]];    weightedJacobian[j][permutation[j]]    =    lmDir[j];    }    [CLASS]        LevenbergMarquardtOptimizer    [METHOD]    determineLMDirection    [RETURN_TYPE]    void        double[]    qy    double[]    diag    double[]    lmDiag    double[]    work    [VARIABLES]    double[][]    weightedJacobian    int[]    permutation    boolean    double[]    beta    currentObjective    currentPoint    currentResiduals    diag    diagR    jacNorm    lmDiag    lmDir    oldObj    oldRes    oldX    qtf    qy    tmpVec    weightedResidual    work    work1    work2    work3    double    TWO_EPS    actRed    coeff1    coeff2    correction    cos    costRelativeTolerance    cotan    currentCost    delta    dirDer    dirJ    dk    dpj    dxNorm    fp    gNorm    initialStepBoundFactor    lmNorm    lmPar    maxCosine    orthoTolerance    parRelativeTolerance    parl    paru    pc2    preRed    previousCost    previousFP    qrRankingThreshold    qtbpj    r    ratio    rik    rkk    s    sPar    sin    sum    sum2    tan    temp    temp2    threshold    tmp    xK    xNorm    xk    ypk    int    countdown    i    j    k    nC    nR    nSing    pj    pk    rank    solvedCols        	math_81535_LevenbergMarquardtOptimizer_1_1	793	1	src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java
57	[PATCH]    result    =    -result;	[BUG]    [BUGGY]    result    =    +result;    [FE]    junit.framework.AssertionFailedError    testNeta    [CONTEXT]    if    (rounded.lessThan(newInstance(-2147483648)))    {    return    -2147483648;    }    for    (int    i    =    mant.length    -    1;    i    >=    mant.length    -    rounded.exp;    i--)    {    result    =    result    *    RADIX    +    rounded.mant[i];    }    if    (rounded.sign    ==    -1)    {    [BUGGY]    result    =    +result;    [BUGGY]    }    return    result;    }    [CLASS]        Dfp    [METHOD]    intValue    [RETURN_TYPE]    int        [VARIABLES]    boolean    byte    FINITE    INFINITE    QNAN    SNAN    code    nans    sig    sign    x    DfpField    field    int[]    mant    String    ADD_TRAP    ALIGN_TRAP    DIVIDE_TRAP    GREATER_THAN_TRAP    LESS_THAN_TRAP    MULTIPLY_TRAP    NAN_STRING    NEG_INFINITY_STRING    NEW_INSTANCE_TRAP    NEXT_AFTER_TRAP    POS_INFINITY_STRING    SQRT_TRAP    TRUNC_TRAP    fpdecimal    fpexp    s    int    ERR_SCALE    MAX_EXP    MIN_EXP    RADIX    adiff    decimalPos    diff    e    exp    exponent    i    lostdigit    offset    p    q    result    rsize    sciexp    significantDigits    x    Dfp    rounded        	math_19560_Dfp_1_1	1160	1	src/main/java/org/apache/commons/math3/dfp/Dfp.java
58	[PATCH]    zb    +=    -(temp    -    za    -    yb);	[BUG]    [BUGGY]    zb    +=    +(temp    -    za    -    yb);    [FE]    junit.framework.AssertionFailedError:    acos()    had    errors    in    excess    of    0.51    ULP    testAcosAccuracy    [CONTEXT]    double    yb    =    xa*xb*2.0    +    xb*xb;        ya    =    -ya;    yb    =    -yb;    double    za    =    1.0    +    ya;    double    zb    =    -(za    -    1.0    -    ya);    temp    =    za    +    yb;    [BUGGY]    zb    +=    +(temp    -    za    -    yb);    [BUGGY]    za    =    temp;        double    y    =    sqrt(za);    temp    =    y    *    HEX_40000000;    ya    =    y    +    temp    -    temp;    yb    =    y    -    ya;        yb    +=    (za    -    ya*ya    -    2*ya*yb    -    yb*yb)    /    (2.0*y);    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    acos    [RETURN_TYPE]    double        double    x    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    bita    bitb    bitsum    cotanFlag    leftPlane    negate    negative    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    hiPrecOut    lnCoef_i    lnCoef_last    lnm    lns    reduceResults    result    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    a2    aa    ab    absAsinh    absAtanh    b    base    baseA    baseB    c    cD2pH    cRH    cTmpH    cd    cosEpsA    cosEpsB    cosa    cosaa    cosab    cosb    costA    costB    d    d1High    d1Low    d2p    d2pHH    d2pHL    d2pHigh    d2pLow    da    daa    dab    db    denom    denomb    denomr    dx    epsA    epsA2    epsB    epsilon    err    est    esta    estb    extra    finalRemA    finalRemB    fracPartA    fracPartB    fx1    intPartA    intPartB    invx    invy    lna    lnb    lnza    lnzb    lores    na    nb    numer    oneOverXa    p    pi2a    pi2b    pia    pib    r    rHH    rHL    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    resultHigh    resultLow    resultb    rln10a    rln10b    sinEpsA    sinEpsB    sina    sinb    sintA    sintB    sumA    sumB    t    temp    temp2    tempA    tempB    tempC    tmp    tmp1    tmp2    tmpA    tmpB    tmpHigh    tmpLow    x    x2    xa    xb    xbadj    xpa    xpb    y    ya    yaa    yab    yb    z    za    zaa    zab    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    e    exp    exponent    finalK    i    idx    intFrac    intPart    intVal    k    quadrant    shift    splitFactor    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    a    ac    ad    b    bc    bd    bits    c    d    inbits    prod2A    prod2B    prodA    prodB    shpi0    shpiA    shpiB    xl    yi        	math_117420_FastMath_1_1	2817	1	src/main/java/org/apache/commons/math3/util/FastMath.java
59	[PATCH]    rb    =    -(temp    -    ra    -    rb);	[BUG]    [BUGGY]    rb    =    +(temp    -    ra    -    rb);    [FE]    junit.framework.AssertionFailedError:    acos()    had    errors    in    excess    of    0.51    ULP    testAcosAccuracy    [CONTEXT]    return    Math.PI/2;    }    double    ra    =    doubleHighPart(r);    double    rb    =    r    -    ra;    rb    +=    (y    -    ra*xa    -    ra*xb    -    rb*xa    -    rb*xb)    /    x;    rb    +=    yb    /    x;    temp    =    ra    +    rb;    [BUGGY]    rb    =    +(temp    -    ra    -    rb);    [BUGGY]    ra    =    temp;    return    atan(ra,    rb,    x<0);    }    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    acos    [RETURN_TYPE]    double        double    x    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    bita    bitb    bitsum    cotanFlag    leftPlane    negate    negative    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    hiPrecOut    lnCoef_i    lnCoef_last    lnm    lns    reduceResults    result    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    a2    aa    ab    absAsinh    absAtanh    b    base    baseA    baseB    c    cD2pH    cRH    cTmpH    cd    cosEpsA    cosEpsB    cosa    cosaa    cosab    cosb    costA    costB    d    d1High    d1Low    d2p    d2pHH    d2pHL    d2pHigh    d2pLow    da    daa    dab    db    denom    denomb    denomr    dx    epsA    epsA2    epsB    epsilon    err    est    esta    estb    extra    finalRemA    finalRemB    fracPartA    fracPartB    fx1    intPartA    intPartB    invx    invy    lna    lnb    lnza    lnzb    lores    na    nb    numer    oneOverXa    p    pi2a    pi2b    pia    pib    r    rHH    rHL    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    resultHigh    resultLow    resultb    rln10a    rln10b    sinEpsA    sinEpsB    sina    sinb    sintA    sintB    sumA    sumB    t    temp    temp2    tempA    tempB    tempC    tmp    tmp1    tmp2    tmpA    tmpB    tmpHigh    tmpLow    x    x2    xa    xb    xbadj    xpa    xpb    y    ya    yaa    yab    yb    z    za    zaa    zab    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    e    exp    exponent    finalK    i    idx    intFrac    intPart    intVal    k    quadrant    shift    splitFactor    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    a    ac    ad    b    bc    bd    bits    c    d    inbits    prod2A    prod2B    prodA    prodB    shpi0    shpiA    shpiB    xl    yi        	math_117580_FastMath_1_1	2849	1	src/main/java/org/apache/commons/math3/util/FastMath.java
60	[PATCH]    db    +=    -(temp    -    da    -    yb);	[BUG]    [BUGGY]    db    +=    +(temp    -    da    -    yb);    [FE]    junit.framework.AssertionFailedError:    tanh()    had    errors    in    excess    of    0.51    ULP    testTanhAccuracy    [CONTEXT]    double    yb    =    -(ya    -    hiPrec[0]    -    hiPrec[1]);        double    na    =    ya;    double    nb    =    yb;        double    da    =    2.0    +    ya;    double    db    =    -(da    -    2.0    -    ya);    double    temp    =    da    +    yb;    [BUGGY]    db    +=    +(temp    -    da    -    yb);    [BUGGY]    da    =    temp;    temp    =    da    *    HEX_40000000;    double    daa    =    da    +    temp    -    temp;    double    dab    =    da    -    daa;        double    ratio    =    na/da;    temp    =    ratio    *    HEX_40000000;    double    ratioa    =    ratio    +    temp    -    temp;    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    tanh    [RETURN_TYPE]    double        double    x    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    negate    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    b    d    da    daa    dab    db    denom    denomb    denomr    finalRemA    finalRemB    na    nb    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    t    temp    x    xa    ya    yaa    yab    yb    za    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    finalK    k    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    xl        	math_111278_FastMath_1_1	675	1	src/main/java/org/apache/commons/math3/util/FastMath.java
61	[PATCH]    x[k]    =    smartAdd(xk,    -xi    *    r[nextr]);	[BUG]    [BUGGY]    x[k]    =    smartAdd(xk,    +xi    *    r[nextr]);    [FE]    junit.framework.AssertionFailedError:    expected:<0.014550003835864325>    but    was:<0.05974674963487535>    testHdiagConstant    [CONTEXT]    if    (FastMath.abs(tmp)    >    Precision.EPSILON)    {    w    =    (di    *    w)    /    dpi;    }    }    else    {    dpi    =    wxi    *    xi;    w    =    0.0;    }    d[i]    =    dpi;    for    (int    k    =    i    +    1;    k    <    nvars;    k++)    {    xk    =    x[k];    [BUGGY]    x[k]    =    smartAdd(xk,    +xi    *    r[nextr]);    [BUGGY]    if    (di    !=    0.0)    {    r[nextr]    =    smartAdd(di    *    r[nextr],    (_w    *    xi)    *    xk)    /    dpi;    }    else    {    r[nextr]    =    xk    /    xi;    }    ++nextr;    }    xk    =    y;    y    =    smartAdd(xk,    -xi    *    rhs[i]);    if    (di    !=    0.0)    {    [CLASS]        MillerUpdatingRegression    [METHOD]    include    [RETURN_TYPE]    void        final    double[]    x    final    double    wi    final    double    yi    [VARIABLES]    boolean    hasIntercept    includeConstant    rss_set    tol_set    double[]    d    r    rhs    rss    tmp    tol    work_sing    work_tolset    x    x_sing    y    double    _w    di    dpi    epsilon    errorTolerance    sserr    sumsqy    sumy    tmp    w    wi    wxi    xi    xk    y    yi    int[]    vorder    boolean[]    lindep    int    i    k    nextr    numberOfVariables    nvars    long    nobs        	math_103223_MillerUpdatingRegression_1_1	268	1	src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java
62	[PATCH]    if    ((q0.getReal()    <    -0.1)    ||    (q0.getReal()    >    0.1))    {	[BUG]    [BUGGY]    if    ((q0.getReal()    <    +0.1)    ||    (q0.getReal()    >    0.1))    {    [FE]    junit.framework.AssertionFailedError:    expected:<3.1415926237874707>    but    was:<3.141592653589793>    testVectorOnePair    [CONTEXT]    }    final    T    inverse    =    squaredSine.sqrt().reciprocal().negate();    return    new    FieldVector3D<T>(q1.multiply(inverse),    q2.multiply(inverse),    q3.multiply(inverse));    }                    public    T    getAngle()    {    [BUGGY]    if    ((q0.getReal()    <    +0.1)    ||    (q0.getReal()    >    0.1))    {    [BUGGY]    return    q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);    }    else    if    (q0.getReal()    <    0)    {    return    q0.negate().acos().multiply(2);    }    return    q0.acos().multiply(2);    }                [CLASS]    	math_34656_FieldRotation_1_1	448	1	src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
63	[PATCH]    double    a    =    -k    *    1.570796251296997;	[BUG]    [BUGGY]    double    a    =    ~k    *    1.570796251296997;    [FE]    junit.framework.AssertionFailedError:    expected:<-1.5947795819319734>    but    was:<-1.8040030243122933>    testAddDifferentiable    [CONTEXT]    CodyWaite(double    xa)    {            int    k    =    (int)(xa    *    0.6366197723675814);        double    remA;    double    remB;    while    (true)    {    [BUGGY]    double    a    =    ~k    *    1.570796251296997;    [BUGGY]    remA    =    xa    +    a;    remB    =    -(remA    -    xa    -    a);    a    =    -k    *    7.549789948768648E-8;    double    b    =    remA;    remA    =    a    +    b;    remB    +=    -(remA    -    b    -    a);    a    =    -k    *    6.123233995736766E-17;    b    =    remA;    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    <init>    [RETURN_TYPE]    FastMath$CodyWaite(double)        double    xa    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    b    finalRemA    finalRemB    remA    remB    xa    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    finalK    k    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG        	math_119014_FastMath_1_1	3834	1	src/main/java/org/apache/commons/math3/util/FastMath.java
64	[PATCH]    result    =    -result;	[BUG]    [BUGGY]    result    =    ~result;    [FE]    junit.framework.AssertionFailedError:    assersion    failed    pow    #85    x    =    -0.0625    flags    =    16    testPow    [CONTEXT]    if    (rounded.lessThan(newInstance(-2147483648)))    {    return    -2147483648;    }    for    (int    i    =    mant.length    -    1;    i    >=    mant.length    -    rounded.exp;    i--)    {    result    =    result    *    RADIX    +    rounded.mant[i];    }    if    (rounded.sign    ==    -1)    {    [BUGGY]    result    =    ~result;    [BUGGY]    }    return    result;    }    [CLASS]        Dfp    [METHOD]    intValue    [RETURN_TYPE]    int        [VARIABLES]    boolean    byte    FINITE    INFINITE    QNAN    SNAN    code    nans    sig    sign    x    DfpField    field    int[]    mant    String    ADD_TRAP    ALIGN_TRAP    DIVIDE_TRAP    GREATER_THAN_TRAP    LESS_THAN_TRAP    MULTIPLY_TRAP    NAN_STRING    NEG_INFINITY_STRING    NEW_INSTANCE_TRAP    NEXT_AFTER_TRAP    POS_INFINITY_STRING    SQRT_TRAP    TRUNC_TRAP    fpdecimal    fpexp    s    int    ERR_SCALE    MAX_EXP    MIN_EXP    RADIX    adiff    decimalPos    diff    e    exp    exponent    i    lostdigit    offset    p    q    result    rsize    sciexp    significantDigits    x    Dfp    rounded        	math_19561_Dfp_1_1	1160	1	src/main/java/org/apache/commons/math3/dfp/Dfp.java
65	[PATCH]    comparison    =    (lhs.length    <    rhs.length)    ?    -1    :    +1;	[BUG]    [BUGGY]    comparison    =    (lhs.length    <    rhs.length)    ?    -1    :    ~1;    [FE]    junit.framework.AssertionFailedError    testFloatArray    [CONTEXT]    }    if    (lhs    ==    null)    {    comparison    =    -1;    return    this;    }    if    (rhs    ==    null)    {    comparison    =    +1;    return    this;    }    if    (lhs.length    !=    rhs.length)    {    [BUGGY]    comparison    =    (lhs.length    <    rhs.length)    ?    -1    :    ~1;    [BUGGY]    return    this;    }    for    (int    i    =    0;    i    <    lhs.length    &&    comparison    ==    0;    i++)    {    append(lhs[i],    rhs[i]);    }    return    this;    }    [CLASS]        CompareToBuilder    [METHOD]    append    [RETURN_TYPE]    CompareToBuilder        final    float[]    lhs    final    float[]    rhs    [VARIABLES]    int    comparison    i    lhs    rhs    superCompareTo    float[]    lhs    rhs    boolean        	lang_15151_CompareToBuilder_1_1	943	1	src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java
66	[PATCH]    if    (u>0)    {    u=-u;    }    //    make    u    negative	[BUG]    [BUGGY]    if    (u>0)    {    u=~u;    }    //    make    u    negative    [FE]    junit.framework.AssertionFailedError:    expected:<3>    but    was:<6>    testReducedFactory_int_int    [CONTEXT]    return    Math.abs(u)    +    Math.abs(v);    }        if    (Math.abs(u)    ==    1    ||    Math.abs(v)    ==    1)    {    return    1;    }                    [BUGGY]    if    (u>0)    {    u=~u;    }        [BUGGY]    if    (v>0)    {    v=-v;    }        int    k=0;    while    ((u&1)==0    &&    (v&1)==0    &&    k<31)    {    u/=2;    v/=2;    k++;    }    if    (k==31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2^31   ");    }        [CLASS]        Fraction    [METHOD]    greatestCommonDivisor    [RETURN_TYPE]    int        int    u    int    v    [VARIABLES]    Fraction    FOUR_FIFTHS    ONE    ONE_FIFTH    ONE_HALF    ONE_QUARTER    ONE_THIRD    THREE_FIFTHS    THREE_QUARTERS    TWO_FIFTHS    TWO_QUARTERS    TWO_THIRDS    ZERO    f    String    str    toProperString    toString    boolean    long    numeratorValue    serialVersionUID    int    a1    a2    denom    denom0    denom1    denom2    denominator    gcd    hashCode    i    k    numer    numer0    numer1    numer2    numerator    pos    power    sign    t    u    v    whole    wholeNumber        	lang_17101_Fraction_1_1	592	1	src/main/java/org/apache/commons/lang3/math/Fraction.java
67	[PATCH]    h    +=    ~(h    <<    9);	[BUG]    [BUGGY]    h    +=    +(h    <<    9);    [FE]    junit.framework.AssertionFailedError:    expected:<true>    but    was:<false>    testMultiKeyContainsKey    [CONTEXT]    }    if    (key3    !=    null)    {    h    ^=    key3.hashCode();    }    if    (key4    !=    null)    {    h    ^=    key4.hashCode();    }    if    (key5    !=    null)    {    h    ^=    key5.hashCode();    }    [BUGGY]    h    +=    +(h    <<    9);    [BUGGY]    h    ^=h    >>>    14;    h    +=h    <<    4;    h    ^=h    >>>    10;    return    h;    }    [CLASS]        MultiKeyMap    [METHOD]    hash    [RETURN_TYPE]    int        Object    key1    Object    key2    Object    key3    Object    key4    Object    key5    [VARIABLES]    Object    key1    key2    key3    key4    key5    boolean    long    serialVersionUID    int    h        	collections_8492_MultiKeyMap_1_1	674	1	src/main/java/org/apache/commons/collections4/map/MultiKeyMap.java
68	[PATCH]    v2.y.linearCombination(v1.getZ(),    v2.x,    -v1.getX(),    v2.z),	[BUG]    [BUGGY]    v2.y.linearCombination(v1.getZ(),    v2.x,    +v1.getX(),    v2.z),    [FE]    junit.framework.AssertionFailedError:    expected:<-10.0>    but    was:<-14.0>    testVectorialProducts    [CONTEXT]                            public    static    <T    extends    RealFieldElement<T>>    FieldVector3D<T>    crossProduct(final    Vector3D    v1,    final    FieldVector3D<T>    v2)    {    return    new    FieldVector3D<T>(v2.x.linearCombination(v1.getY(),    v2.z,    -v1.getZ(),    v2.y),    [BUGGY]    v2.y.linearCombination(v1.getZ(),    v2.x,    +v1.getX(),    v2.z),    [BUGGY]    v2.z.linearCombination(v1.getX(),    v2.y,    -v1.getY(),    v2.x));    }                                    [CLASS]    	math_35959_FieldVector3D_1_1	998	1	src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldVector3D.java
69	[PATCH]    final    double    invExp1    =    1    /    (1    +    FastMath.exp(-x));	[BUG]    [BUGGY]    final    double    invExp1    =    1    /    (1    +    FastMath.exp(+x));    [FE]    junit.framework.AssertionFailedError:    expected:<0.5308233645167708>    but    was:<0.4691766354832292>    testGradientComponent0Component4    [CONTEXT]    public    double[]    gradient(double    x,    double    ...    param)    throws    NullArgumentException,    DimensionMismatchException    {    validateParameters(param);        [BUGGY]    final    double    invExp1    =    1    /    (1    +    FastMath.exp(+x));    [BUGGY]    return    new    double[]    {    1    -    invExp1,    invExp1    };    }    [CLASS]        Sigmoid    Parametric    [METHOD]    gradient    [RETURN_TYPE]    double[]        double    x    param    [VARIABLES]    double[]    param    double    hi    invExp1    lo    x    boolean        	math_5010_Sigmoid_1_1	126	1	src/main/java/org/apache/commons/math3/analysis/function/Sigmoid.java
70	[PATCH]    v    =    -v;	[BUG]    [BUGGY]    v    =    ~v;    [FE]    junit.framework.AssertionFailedError:    expected:<5767>    but    was:<1>    testGcdConsistency    [CONTEXT]    }                        if    (u    >    0)    {    u    =    -u;    }    if    (v    >    0)    {    [BUGGY]    v    =    ~v;    [BUGGY]    }        int    k    =    0;    while    ((u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    63)    {        u    /=    2;    v    /=    2;    k++;    }    if    (k    ==    63)    {    [CLASS]        ArithmeticUtils    [METHOD]    gcd    [RETURN_TYPE]    long        final    long    p    final    long    q    [VARIABLES]    boolean    long    p    q    t    u    v    int    k        	math_108351_ArithmeticUtils_1_1	412	1	src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java
71	[PATCH]    return    FastMath.exp(-0.5    *    sum);	[BUG]    [BUGGY]    return    FastMath.exp(+0.5    *    sum);    [FE]    junit.framework.AssertionFailedError:    expected:<5.80932710124009E-9>    but    was:<1562824.5663423303>    testDensities    [CONTEXT]    private    double    getExponentTerm(final    double[]    values)    {    final    double[]    centered    =    new    double[values.length];    for    (int    i    =    0;    i    <    centered.length;    i++)    {    centered[i]    =    values[i]    -    getMeans()[i];    }    final    double[]    preMultiplied    =    covarianceMatrixInverse.preMultiply(centered);    double    sum    =    0;    for    (int    i    =    0;    i    <    preMultiplied.length;    i++)    {    sum    +=    preMultiplied[i]    *    centered[i];    }    [BUGGY]    return    FastMath.exp(+0.5    *    sum);    [BUGGY]    }    [CLASS]        MultivariateNormalDistribution    [METHOD]    getExponentTerm    [RETURN_TYPE]    double        final    double[]    values    [VARIABLES]    boolean    double[]    centered    covMatEigenvalues    evec    means    normalVals    preMultiplied    std    vals    values    RealMatrix    covarianceMatrix    covarianceMatrixInverse    samplingMatrix    tmpMatrix    double    covarianceMatrixDeterminant    factor    sum    int    i        	math_27140_MultivariateNormalDistribution_1_1	239	1	src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution.java
72	[PATCH]    return    -iChronology.getYearDifference(subtrahendInstant,    minuendInstant);	[BUG]    [BUGGY]    return    ~iChronology.getYearDifference(subtrahendInstant,    minuendInstant);    [FE]    junit.framework.AssertionFailedError:    expected:<-3>    but    was:<-4>    testConstructor_RI_RI4    [CONTEXT]    public    long    getDifferenceAsLong(long    minuendInstant,    long    subtrahendInstant)    {    if    (minuendInstant    <    subtrahendInstant)    {    [BUGGY]    return    ~iChronology.getYearDifference(subtrahendInstant,    minuendInstant);    [BUGGY]    }    return    iChronology.getYearDifference(minuendInstant,    subtrahendInstant);    }    [CLASS]        BasicYearDateTimeField    [METHOD]    getDifferenceAsLong    [RETURN_TYPE]    long        long    minuendInstant    long    subtrahendInstant    [VARIABLES]    long    instant    minuendInstant    serialVersionUID    subtrahendInstant    years    BasicChronology    chronology    iChronology    boolean        	time_8960_BasicYearDateTimeField_1_1	90	1	src/main/java/org/joda/time/chrono/BasicYearDateTimeField.java
73	[PATCH]    d    =    -(c    -    a    -    lnzb);	[BUG]    [BUGGY]    d    =    +(c    -    a    -    lnzb);    [FE]    junit.framework.AssertionFailedError:    pow()    had    errors    in    excess    of    0.51    ULP    testPowAccuracy    [CONTEXT]    d    =    -(c    -    a    -    LN_2_B*exp);    a    =    c;    b    =    b    +    d;    c    =    a    +    lnm[1];    d    =    -(c    -    a    -    lnm[1]);    a    =    c;    b    =    b    +    d;    c    =    a    +    lnzb;    [BUGGY]    d    =    +(c    -    a    -    lnzb);    [BUGGY]    a    =    c;    b    =    b    +    d;    if    (hiPrec    !=    null)    {    hiPrec[0]    =    a;    hiPrec[1]    =    b;    }    return    a    +    b;    }    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    log    [RETURN_TYPE]    double        final    double    x    final    double[]    hiPrec    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    negate    negative    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    hiPrecOut    lnCoef_i    lnCoef_last    lnm    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    a2    aa    ab    absAsinh    absAtanh    b    baseA    baseB    c    d    da    daa    dab    db    denom    denomb    denomr    epsilon    extra    finalRemA    finalRemB    fracPartA    fracPartB    intPartA    intPartB    lnza    lnzb    na    nb    numer    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    t    temp    tempA    tempB    tempC    tmp    x    xa    xb    ya    yaa    yab    yb    z    za    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    exp    finalK    i    intFrac    intVal    k    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    bits    xl        	math_113518_FastMath_1_1	1345	1	src/main/java/org/apache/commons/math3/util/FastMath.java
74	[PATCH]    va[i][j]    +=    -beta    *    hK[i];	[BUG]    [BUGGY]    va[i][j]    +=    +beta    *    hK[i];    [FE]    junit.framework.AssertionFailedError:    expected:<0.0>    but    was:<6.456758646380277>    testSingularMatrix    [CONTEXT]    va[k][k]    =    1;    if    (hK[k]    !=    0.0)    {    for    (int    j    =    k;    j    <    n;    ++j)    {    double    beta    =    0;    for    (int    i    =    k;    i    <    n;    ++i)    {    beta    -=    va[i][j]    *    hK[i];    }    beta    /=    diagonal[k    -    diagOffset]    *    hK[k];    for    (int    i    =    k;    i    <    n;    ++i)    {    [BUGGY]    va[i][j]    +=    +beta    *    hK[i];    [BUGGY]    }    }    }    }    if    (diagOffset    >    0)    {    va[0][0]    =    1;    }    cachedV    =    MatrixUtils.createRealMatrix(va);    }        [CLASS]        BiDiagonalTransformer    [METHOD]    getV    [RETURN_TYPE]    RealMatrix        [VARIABLES]    double[][]    ba    householderVectors    ua    va    boolean    double[]    diagonal    hK    main    secondary    RealMatrix    cachedB    cachedU    cachedV    matrix    int    diagOffset    i    j    k    m    n    p    double    beta        	math_48177_BiDiagonalTransformer_1_1	198	1	src/main/java/org/apache/commons/math3/linear/BiDiagonalTransformer.java
75	[PATCH]    return    -u    *    (1L    <<    k);    //    gcd    is    u*2^k	[BUG]    [BUGGY]    return    ~u    *    (1L    <<    k);    //    gcd    is    u*2^k    [FE]    junit.framework.AssertionFailedError:    expected:<2109>    but    was:<2108>    testGcdConsistency    [CONTEXT]    if    (t    >    0)    {    u    =    -t;    }    else    {    v    =    t;    }        t    =    (v    -    u)    /    2;            }    while    (t    !=    0);    [BUGGY]    return    ~u    *    (1L    <<    k);        [BUGGY]    }    [CLASS]        ArithmeticUtils    [METHOD]    gcd    [RETURN_TYPE]    long        final    long    p    final    long    q    [VARIABLES]    boolean    long    p    q    t    u    v    int    k        	math_108453_ArithmeticUtils_1_1	448	1	src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java
76	[PATCH]    denominator    =    -denominator;	[BUG]    [BUGGY]    denominator    =    ~denominator;    [FE]    org.apache.commons.math3.exception.MathArithmeticException:    zero    denominator    in    fraction    -1/0    testGetReducedFraction    [CONTEXT]    if    (denominator==Integer.MIN_VALUE    &&    (numerator&1)==0)    {    numerator/=2;    denominator/=2;    }    if    (denominator    <    0)    {    if    (numerator==Integer.MIN_VALUE    ||    denominator==Integer.MIN_VALUE)    {    throw    new    MathArithmeticException(LocalizedFormats.OVERFLOW_IN_FRACTION,    numerator,    denominator);    }    numerator    =    -numerator;    [BUGGY]    denominator    =    ~denominator;    [BUGGY]    }        int    gcd    =    ArithmeticUtils.gcd(numerator,    denominator);    numerator    /=    gcd;    denominator    /=    gcd;    return    new    Fraction(numerator,    denominator);    }    [CLASS]        Fraction    [METHOD]    getReducedFraction    [RETURN_TYPE]    Fraction        int    numerator    int    denominator    [VARIABLES]    Fraction    FOUR_FIFTHS    MINUS_ONE    ONE    ONE_FIFTH    ONE_HALF    ONE_QUARTER    ONE_THIRD    THREE_FIFTHS    THREE_QUARTERS    TWO    TWO_FIFTHS    TWO_QUARTERS    TWO_THIRDS    ZERO    fraction    object    ret    rhs    boolean    double    DEFAULT_EPSILON    convergent    epsilon    r0    r1    value    long    a0    a1    dOn    nOd    overflow    p0    p1    p2    q0    q1    q2    serialVersionUID    int    d    d1    d2    den    denominator    gcd    i    maxDenominator    maxIterations    n    num    numerator    tmodd1    upv    uvp        	math_32583_Fraction_1_1	638	1	src/main/java/org/apache/commons/math3/fraction/Fraction.java
77	[PATCH]    out    =    (out    &    ~mask)    |    bits;	[BUG]    [BUGGY]    out    =    (out    &    -mask)    |    bits;    [FE]    junit.framework.AssertionFailedError:    expected:<12>    but    was:<8>    testBinaryToInt    [CONTEXT]    if    (nBools    -    1    +    dstPos    >=    32)    {    throw    new    IllegalArgumentException(       "nBools-1+dstPos    is    greather    or    equal    to    than    32   ");    }    int    out    =    dstInit;    int    shift    =    0;    for    (int    i    =    0;    i    <    nBools;    i++    )    {    shift    =    i    *    1    +    dstPos;    final    int    bits    =    (src[i    +    srcPos]    ?    1    :    0)    <<    shift;    final    int    mask    =    0x1    <<    shift;    [BUGGY]    out    =    (out    &    -mask)    |    bits;    [BUGGY]    }    return    out;    }    [CLASS]        Conversion    [METHOD]    binaryToInt    [RETURN_TYPE]    int        final    boolean[]    src    final    int    srcPos    final    int    dstInit    final    int    dstPos    final    int    nBools    [VARIABLES]    boolean    boolean[]    src    int    bits    dstInit    dstPos    i    mask    nBools    out    shift    srcPos        	lang_6724_Conversion_1_1	1091	1	src/main/java/org/apache/commons/lang3/Conversion.java
78	[PATCH]    nb    +=    -(temp    -    na    -    yb);	[BUG]    [BUGGY]    nb    +=    +(temp    -    na    -    yb);    [FE]    junit.framework.AssertionFailedError:    expected:<0.0>    but    was:<3.3306690738754696E-16>    testTanhAtanh    [CONTEXT]        exp(x*2.0,    0.0,    hiPrec);    double    ya    =    hiPrec[0]    +    hiPrec[1];    double    yb    =    -(ya    -    hiPrec[0]    -    hiPrec[1]);        double    na    =    -1.0    +    ya;    double    nb    =    -(na    +    1.0    -    ya);    double    temp    =    na    +    yb;    [BUGGY]    nb    +=    +(temp    -    na    -    yb);    [BUGGY]    na    =    temp;        double    da    =    1.0    +    ya;    double    db    =    -(da    -    1.0    -    ya);    temp    =    da    +    yb;    db    +=    -(temp    -    da    -    yb);    da    =    temp;    temp    =    da    *    HEX_40000000;    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    tanh    [RETURN_TYPE]    double        double    x    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    negate    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    b    d    da    daa    dab    db    denom    denomb    denomr    finalRemA    finalRemB    na    nb    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    t    temp    x    xa    ya    yaa    yab    yb    za    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    finalK    k    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    xl        	math_111085_FastMath_1_1	629	1	src/main/java/org/apache/commons/math3/util/FastMath.java
79	[PATCH]    double    yb    =    -(ya    -    hiPrec[0]    -    hiPrec[1]);	[BUG]    [BUGGY]    double    yb    =    +(ya    -    hiPrec[0]    -    hiPrec[1]);    [FE]    junit.framework.AssertionFailedError:    tanh()    had    errors    in    excess    of    0.51    ULP    testTanhAccuracy    [CONTEXT]    negate    =    true;    }    double    result;    if    (x    >=    0.5)    {    double    hiPrec[]    =    new    double[2];        exp(x*2.0,    0.0,    hiPrec);    double    ya    =    hiPrec[0]    +    hiPrec[1];    [BUGGY]    double    yb    =    +(ya    -    hiPrec[0]    -    hiPrec[1]);    [BUGGY]        double    na    =    -1.0    +    ya;    double    nb    =    -(na    +    1.0    -    ya);    double    temp    =    na    +    yb;    nb    +=    -(temp    -    na    -    yb);    na    =    temp;        double    da    =    1.0    +    ya;    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    tanh    [RETURN_TYPE]    double        double    x    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    negate    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    b    d    da    daa    dab    db    denom    denomb    denomr    finalRemA    finalRemB    na    nb    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    t    temp    x    xa    ya    yaa    yab    yb    za    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    finalK    k    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    xl        	math_111050_FastMath_1_1	623	1	src/main/java/org/apache/commons/math3/util/FastMath.java
80	[PATCH]    final    int    wrk_off    =    -(in    +    1);	[BUG]    [BUGGY]    final    int    wrk_off    =    ~(in    +    1);    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testPCorr    [CONTEXT]    public    double[]    getPartialCorrelations(int    in)    {    final    double[]    output    =    new    double[(nvars    -    in    +    1)    *    (nvars    -    in)    /    2];    int    pos;    int    pos1;    int    pos2;    final    int    rms_off    =    -in;    [BUGGY]    final    int    wrk_off    =    ~(in    +    1);    [BUGGY]    final    double[]    rms    =    new    double[nvars    -    in];    final    double[]    work    =    new    double[nvars    -    in    -    1];    double    sumxx;    double    sumxy;    double    sumyy;    final    int    offXX    =    (nvars    -    in)    *    (nvars    -    in    -    1)    /    2;    if    (in    <    -1    ||    in    >=    nvars)    {    return    null;    }    final    int    nvm    =    nvars    -    1;    [CLASS]        MillerUpdatingRegression    [METHOD]    getPartialCorrelations    [RETURN_TYPE]    double[]        int    in    [VARIABLES]    boolean    hasIntercept    includeConstant    rankProblem    rss_set    tol_set    double[]    covmat    d    output    r    ret    rhs    rinv    rms    rss    tmp    tol    work    work_sing    work_tolset    x    x_sing    y    double    _a    _b    _w    a    b    di    dpi    eps    epsilon    errorTolerance    rnk    sserr    sumsqy    sumxx    sumxy    sumy    sumyy    temp    tmp    total    var    w    weight    wi    wxi    xi    xk    y    yi    int[]    vorder    boolean[]    lindep    int    _pi    _xi    base_pos    col    col1    col2    i    in    j    k    nextr    nreq    numberOfVariables    nvars    nvm    offXX    pos    pos1    pos2    rms_off    row    start    wrk_off    long    nobs        	math_103968_MillerUpdatingRegression_1_1	615	1	src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java
81	[PATCH]    p    =        -0.00021503011930044477347    +    p    *    w;	[BUG]    [BUGGY]    p    =    +2.1503011930044477E-4    +    p    *    w;    [FE]    junit.framework.AssertionFailedError:    expected:<-4.660000000000025>    but    was:<-4.659996999669228>    testErfcInv    [CONTEXT]    p    =-3.7894654401267369937e-09    +    p    *    w;    p    =    7.6157012080783393804e-09    +    p    *    w;    p    =-1.4960026627149240478e-08    +    p    *    w;    p    =    2.9147953450901080826e-08    +    p    *    w;    p    =-6.7711997758452339498e-08    +    p    *    w;    p    =    2.2900482228026654717e-07    +    p    *    w;    p    =-9.9298272942317002539e-07    +    p    *    w;    p    =    4.5260625972231537039e-06    +    p    *    w;    p    =-1.9681778105531670567e-05    +    p    *    w;    p    =    7.5995277030017761139e-05    +    p    *    w;    [BUGGY]    p    =+2.1503011930044477E-4    +    p    *    w;    [BUGGY]    p    =-0.00013871931833623122026    +    p    *    w;    p    =    1.0103004648645343977    +    p    *    w;    p    =    4.8499064014085844221    +    p    *    w;    }    else    {                            [CLASS]        Erf    [METHOD]    erfInv    [RETURN_TYPE]    double        final    double    x    [VARIABLES]    double    X_CRIT    p    ret    w    x    x1    x2    boolean        	math_96327_Erf_1_1	213	1	src/main/java/org/apache/commons/math3/special/Erf.java
82	[PATCH]    return    upper    -    FastMath.exp(-y);	[BUG]    [BUGGY]    return    upper    -    FastMath.exp(+y);    [FE]    junit.framework.AssertionFailedError:    expected:<4.0>    but    was:<4.000001139752102>    testHalfBounded    [CONTEXT]    public    double    unboundedToBounded(final    double    y)    {    [BUGGY]    return    upper    -    FastMath.exp(+y);    [BUGGY]    }    [CLASS]        MultivariateFunctionMappingAdapter    NoBoundsMapper    LowerBoundMapper    UpperBoundMapper    LowerUpperBoundMapper    [METHOD]    unboundedToBounded    [RETURN_TYPE]    double        final    double    y    [VARIABLES]    MultivariateFunction    bounded    boolean    UnivariateFunction    boundingFunction    unboundingFunction    Mapper[]    mappers    double    lower    upper    x    y        	math_77143_MultivariateFunctionMappingAdapter_1_1	257	1	src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java
83	[PATCH]    this.exceptionSegments.add(-(p    +    1),    segment);	[BUG]    [BUGGY]    this.exceptionSegments.add(+(p    +    1),    segment);    [FE]    java.lang.IndexOutOfBoundsException:    Index:    -1,    Size:    1    testMs2BaseTimelineTranslations    [CONTEXT]    private    void    addException(Segment    segment)    {    if    (segment.inIncludeSegments())    {    int    p    =    binarySearchExceptionSegments(segment);    [BUGGY]    this.exceptionSegments.add(+(p    +    1),    segment);    [BUGGY]    }    }    [CLASS]        SegmentedTimeline    Segment    SegmentRange    BaseTimelineSegmentRange    [METHOD]    addException    [RETURN_TYPE]    void        Segment    segment    [VARIABLES]    TimeZone    DEFAULT_TIME_ZONE    NO_DST_TIME_ZONE    z    boolean    adjust    adjustForDaylightSaving    contains    SegmentedTimeline    baseTimeline    timeline    Calendar    cal    workingCalendar    workingCalendarNoDST    List    exceptionList    exceptionSegments    long    DAY_SEGMENT_SIZE    FIFTEEN_MINUTE_SEGMENT_SIZE    FIRST_MONDAY_AFTER_1900    HOUR_SEGMENT_SIZE    MINUTE_SEGMENT_SIZE    date    domainValueEnd    domainValueStart    exceptionSegmentCount    fromDomainValue    fromMillisecond    groupIndex    groupMilliseconds    lastIndex    millisecond    rawMilliseconds    result    segmentCount    segmentEnd    segmentNumber    segmentSize    segmentStart    segmentsExcludedSize    segmentsGroupSize    segmentsIncludedSize    serialVersionUID    shiftedSegmentedValue    startTime    timelineValue    toDomainValue    toMillisecond    wholeExceptionsBeforeDomainValue    x    y    int    groupSegmentCount    i    offset    p    segmentsExcluded    segmentsIncluded    Segment    segment        	chart_34236_SegmentedTimeline_1_1	889	1	source/org/jfree/chart/axis/SegmentedTimeline.java
84	[PATCH]    this.data.add(-index    -    1,    item);	[BUG]    [BUGGY]    this.data.add(+index    -    1,    item);    [FE]    java.lang.IndexOutOfBoundsException:    Index:    -2,    Size:    1    test1    [CONTEXT]    if    (item.getPeriod().compareTo(last)    >    0)    {    this.data.add(item);    added    =    true;    }    else    {    int    index    =    Collections.binarySearch(this.data,    item);    if    (index    <    0)    {    [BUGGY]    this.data.add(+index    -    1,    item);    [BUGGY]    added    =    true;    }    else    {    StringBuffer    b    =    new    StringBuffer();    b.append(   "You    are    attempting    to    add    an    observation    for       ");    b.append(   "the    time    period       ");    b.append(item.getPeriod().toString());    b.append(   "    but    the    series    already    contains    an    observation   ");    b.append(   "    for    that    time    period.    Duplicates    are    not       ");    b.append(   "permitted.Try    using    the    addOrUpdate()    method.   ");    [CLASS]        TimeSeries    [METHOD]    add    [RETURN_TYPE]    void        TimeSeriesDataItem    item    boolean    notify    [VARIABLES]    StringBuffer    b    boolean    added    notify    double    maxY    minY    TimeSeriesDataItem    d    item    Class    c    timePeriodClass    List    data    String    DEFAULT_DOMAIN_DESCRIPTION    DEFAULT_RANGE_DESCRIPTION    description    domain    old    range    RegularTimePeriod    last    long    maximumItemAge    periods    serialVersionUID    int    count    i    index    maximum    maximumItemCount        	chart_76686_TimeSeries_1_1	611	1	source/org/jfree/data/time/TimeSeries.java
85	[PATCH]    out    =    (short)((out    &    ~mask)    |    bits);	[BUG]    [BUGGY]    out    =    (short)((out    &    -mask)    |    bits);    [FE]    junit.framework.AssertionFailedError:    expected:<-3635>    but    was:<-3840>    testByteArrayToShort    [CONTEXT]    if    ((nBytes    -    1)    *    8    +    dstPos    >=    16)    {    throw    new    IllegalArgumentException(       "(nBytes-1)*8+dstPos    is    greather    or    equal    to    than    16   ");    }    short    out    =    dstInit;    int    shift    =    0;    for    (int    i    =    0;    i    <    nBytes;    i++    )    {    shift    =    i    *    8    +    dstPos;    final    int    bits    =    (0xff    &    src[i    +    srcPos])    <<    shift;    final    int    mask    =    0xff    <<    shift;    [BUGGY]    out    =    (short)((out    &    -mask)    |    bits);    [BUGGY]    }    return    out;    }    [CLASS]        Conversion    [METHOD]    byteArrayToShort    [RETURN_TYPE]    short        final    byte[]    src    final    int    srcPos    final    short    dstInit    final    int    dstPos    final    int    nBytes    [VARIABLES]    byte[]    src    boolean    short    dstInit    out    int    bits    dstPos    i    mask    nBytes    shift    srcPos        	lang_6310_Conversion_1_1	882	1	src/main/java/org/apache/commons/lang3/Conversion.java
86	[PATCH]    int    newSerFeatures    =    _serFeatures    &    ~feature.getMask();	[BUG]    [BUGGY]    int    newSerFeatures    =    _serFeatures    &    +feature.getMask();    [FE]    junit.framework.AssertionFailedError:    Conversion    should    have    failed    testIssue11    [CONTEXT]    public    SerializationConfig    without(SerializationFeature    feature)    {    [BUGGY]    int    newSerFeatures    =    _serFeatures    &    +feature.getMask();    [BUGGY]    return    (newSerFeatures    ==    _serFeatures)    ?    this    :    new    SerializationConfig(this,    _mapperFeatures,    newSerFeatures);    }    [CLASS]        SerializationConfig    [METHOD]    without    [RETURN_TYPE]    SerializationConfig        SerializationFeature    feature    [VARIABLES]    Include    _serializationInclusion    incl    boolean    SerializationFeature    feature    long    serialVersionUID    int    _serFeatures    mapperFeatures    newMapperFlags    newSerFeatures    serFeatures    FilterProvider    _filterProvider    filters        	jacksondatabind_927_SerializationConfig_1_1	342	1	src/main/java/com/fasterxml/jackson/databind/SerializationConfig.java
87	[PATCH]    final    double    g    =    (ort[m]    >    0)    ?    -FastMath.sqrt(h)    :    FastMath.sqrt(h);	[BUG]    [BUGGY]    final    double    g    =    (ort[m]    >    0)    ?    +FastMath.sqrt(h)    :    FastMath.sqrt(h);    [FE]    junit.framework.AssertionFailedError:    Failed    to    create    EigenDecomposition    for    matrix    Array2DRowRealMatrix{{0.0,1.0,0.0,0.0},{1.0,0.0,0.0000002,0.0},{0.0,-0.0000002,0.0,1.0},{0.0,0.0,1.0,0.0}},    ex=org.apache.commons.math3.exception.MaxCountExceededException:    illegal    state:    convergence    failed    testUnsymmetric    [CONTEXT]    scale    +=    FastMath.abs(householderVectors[i][m    -    1]);    }    if    (!Precision.equals(scale,    0))    {        double    h    =    0;    for    (int    i    =    high;    i    >=    m;    i--)    {    ort[i]    =    householderVectors[i][m    -    1]    /    scale;    h    +=    ort[i]    *    ort[i];    }    [BUGGY]    final    double    g    =    (ort[m]    >    0)    ?    +FastMath.sqrt(h)    :    FastMath.sqrt(h);    [BUGGY]    h    =    h    -    ort[m]    *    g;    ort[m]    =    ort[m]    -    g;                for    (int    j    =    m;    j    <    n;    j++)    {    double    f    =    0;    for    (int    i    =    high;    i    >=    m;    i--)    {    [CLASS]        HessenbergTransformer    [METHOD]    transform    [RETURN_TYPE]    void        [VARIABLES]    double[][]    h    householderVectors    pa    boolean    double[]    ort    RealMatrix    cachedH    cachedP    cachedPt    matrix    int    high    i    j    m    n    double    f    g    h    scale        	math_58288_HessenbergTransformer_1_1	198	1	src/main/java/org/apache/commons/math3/linear/HessenbergTransformer.java
88	[PATCH]    return    -Math.PI    *    F_1_4;	[BUG]    [BUGGY]    return    +Math.PI    *    F_1_4;    [FE]    junit.framework.AssertionFailedError:    expected:<-0.7853981633974483>    but    was:<0.7853981633974483>    testLogInf    [CONTEXT]    if    (x    ==    Double.NEGATIVE_INFINITY)    {    return    Math.PI    *    F_3_4;    }    return    Math.PI    *    F_1_2;    }    if    (y    ==    Double.NEGATIVE_INFINITY)    {    if    (x    ==    Double.POSITIVE_INFINITY)    {    [BUGGY]    return    +Math.PI    *    F_1_4;    [BUGGY]    }    if    (x    ==    Double.NEGATIVE_INFINITY)    {    return    -Math.PI    *    F_3_4;    }    return    -Math.PI    *    F_1_2;    }    if    (x    ==    Double.POSITIVE_INFINITY)    {    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    atan2    [RETURN_TYPE]    double        double    y    double    x    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    bita    bitb    bitsum    cotanFlag    leftPlane    negate    negative    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    hiPrecOut    lnCoef_i    lnCoef_last    lnm    lns    reduceResults    result    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    a2    aa    ab    absAsinh    absAtanh    b    base    baseA    baseB    c    cD2pH    cRH    cTmpH    cd    cosEpsA    cosEpsB    cosa    cosaa    cosab    cosb    costA    costB    d    d1High    d1Low    d2p    d2pHH    d2pHL    d2pHigh    d2pLow    da    daa    dab    db    denom    denomb    denomr    epsA    epsA2    epsB    epsilon    err    est    esta    estb    extra    finalRemA    finalRemB    fracPartA    fracPartB    fx1    intPartA    intPartB    invx    invy    lna    lnb    lnza    lnzb    lores    na    nb    numer    oneOverXa    p    pi2a    pi2b    pia    pib    r    rHH    rHL    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    resultHigh    resultLow    resultb    rln10a    rln10b    sinEpsA    sinEpsB    sina    sinb    sintA    sintB    sumA    sumB    t    temp    temp2    tempA    tempB    tempC    tmp    tmp1    tmp2    tmpA    tmpB    tmpHigh    tmpLow    x    x2    xa    xb    xbadj    xpa    xpb    y    ya    yaa    yab    yb    z    za    zaa    zab    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    e    exp    exponent    finalK    i    idx    intFrac    intPart    intVal    k    quadrant    shift    splitFactor    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    a    ac    ad    b    bc    bd    bits    c    d    inbits    prod2A    prod2B    prodA    prodB    shpi0    shpiA    shpiB    xl    yi        	math_116783_FastMath_1_1	2625	1	src/main/java/org/apache/commons/math3/util/FastMath.java
89	[PATCH]    ArithmeticUtils.pow(numerator,            -exponent));	[BUG]    [BUGGY]    ArithmeticUtils.pow(numerator,        +exponent));    [FE]    org.apache.commons.math3.exception.NotPositiveException:    exponent    (-13)    testPow    [CONTEXT]    public    BigFraction    pow(final    long    exponent)    {    if    (exponent    <    0)    {    return    new    BigFraction(ArithmeticUtils.pow(denominator,    -exponent),    [BUGGY]    ArithmeticUtils.pow(numerator,    +exponent));    [BUGGY]    }    return    new    BigFraction(ArithmeticUtils.pow(numerator,    exponent),    ArithmeticUtils.pow(denominator,    exponent));    }    [CLASS]        BigFraction    [METHOD]    pow    [RETURN_TYPE]    BigFraction        final    long    exponent    [VARIABLES]    BigInteger    ONE_HUNDRED    bg    dOn    den    denominator    gcd    nOd    num    numerator    boolean    BigFraction    FOUR_FIFTHS    MINUS_ONE    ONE    ONE_FIFTH    ONE_HALF    ONE_QUARTER    ONE_THIRD    THREE_FIFTHS    THREE_QUARTERS    TWO    TWO_FIFTHS    TWO_QUARTERS    TWO_THIRDS    ZERO    fraction    object    rhs    thisOne    long    a0    a1    bits    den    exponent    l    m    num    overflow    p0    p1    p2    q0    q1    q2    serialVersionUID    sign        	math_14349_BigFraction_1_1	981	1	src/main/java/org/apache/commons/math3/fraction/BigFraction.java
90	[PATCH]    return    new    Vector3D(p2D.getX(),    u,    p2D.getY(),    v,    -originOffset,    w);	[BUG]    [BUGGY]    return    new    Vector3D(p2D.getX(),    u,    p2D.getY(),    v,    +originOffset,    w);    [FE]    junit.framework.AssertionFailedError:    expected:<1.0>    but    was:<Infinity>    testBox    [CONTEXT]    public    Vector3D    toSpace(final    Vector<Euclidean2D>    point)    {    final    Vector2D    p2D    =    (Vector2D)    point;    [BUGGY]    return    new    Vector3D(p2D.getX(),    u,    p2D.getY(),    v,    +originOffset,    w);    [BUGGY]    }    [CLASS]        Plane    [METHOD]    toSpace    [RETURN_TYPE]    Vector3D        Euclidean2D>    point    [VARIABLES]    boolean    Vector2D    p2D    Vector3D    normal    origin    p    p1    p2    p3    tmp    u    v    w    Vector    point    double    norm    originOffset        	math_42114_Plane_1_1	238	1	src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java
91	[PATCH]    q    =    -q;	[BUG]    [BUGGY]    q    =    +q;    [FE]    org.apache.commons.math3.exception.TooManyEvaluationsException:    illegal    state:    maximal    count    (99)    exceeded:    evaluations    testMath832    [CONTEXT]    p    =    2    *    m    *    s;    q    =    1    -    s;    }    else    {        q    =    fa    /    fc;    final    double    r    =    fb    /    fc;    p    =    s    *    (2    *    m    *    q    *    (q    -    r)    -    (b    -    a)    *    (r    -    1));    q    =    (q    -    1)    *    (r    -    1)    *    (s    -    1);    }    if    (p    >    0)    {    [BUGGY]    q    =    +q;    [BUGGY]    }    else    {    p    =    -p;    }    s    =    e;    e    =    d;    if    (p    >=    1.5    *    m    *    q    -    FastMath.abs(tol    *    q)    ||    p    >=    FastMath.abs(0.5    *    s    *    q))    {                [CLASS]        BrentSolver    [METHOD]    brent    [RETURN_TYPE]    double        double    lo    double    hi    double    fLo    double    fHi    [VARIABLES]    double    DEFAULT_ABSOLUTE_ACCURACY    a    absoluteAccuracy    b    c    d    e    eps    fHi    fLo    fa    fb    fc    functionValueAccuracy    hi    initial    lo    m    max    min    p    q    r    relativeAccuracy    s    t    tol    yInitial    yMax    yMin    boolean        	math_15302_BrentSolver_1_1	197	1	src/main/java/org/apache/commons/math3/analysis/solvers/BrentSolver.java
92	[PATCH]    return    ~globalCrc;	[BUG]    [BUGGY]    return    +globalCrc;    [FE]    java.io.IOException:    BZip2    CRC    error    testBzip2Unarchive    [CONTEXT]    int    getFinalCRC()    {    [BUGGY]    return    +globalCrc;    [BUGGY]    }    [CLASS]        CRC    [METHOD]    getFinalCRC    [RETURN_TYPE]    int        [VARIABLES]    int[]    crc32Table    int    globalCrc    boolean        	compress_7940_CRC_1_1	102	1	src/main/java/org/apache/commons/compress/compressors/bzip2/CRC.java
93	[PATCH]    this.exceptionSegments.add(-(p    +    1),    segment);	[BUG]    [BUGGY]    this.exceptionSegments.add(~(p    +    1),    segment);    [FE]    java.lang.IndexOutOfBoundsException:    Index:    -1,    Size:    0    testMs2BaseTimelineTranslations    [CONTEXT]    private    void    addException(Segment    segment)    {    if    (segment.inIncludeSegments())    {    int    p    =    binarySearchExceptionSegments(segment);    [BUGGY]    this.exceptionSegments.add(~(p    +    1),    segment);    [BUGGY]    }    }    [CLASS]        SegmentedTimeline    Segment    SegmentRange    BaseTimelineSegmentRange    [METHOD]    addException    [RETURN_TYPE]    void        Segment    segment    [VARIABLES]    TimeZone    DEFAULT_TIME_ZONE    NO_DST_TIME_ZONE    z    boolean    adjust    adjustForDaylightSaving    contains    SegmentedTimeline    baseTimeline    timeline    Calendar    cal    workingCalendar    workingCalendarNoDST    List    exceptionList    exceptionSegments    long    DAY_SEGMENT_SIZE    FIFTEEN_MINUTE_SEGMENT_SIZE    FIRST_MONDAY_AFTER_1900    HOUR_SEGMENT_SIZE    MINUTE_SEGMENT_SIZE    date    domainValueEnd    domainValueStart    exceptionSegmentCount    fromDomainValue    fromMillisecond    groupIndex    groupMilliseconds    lastIndex    millisecond    rawMilliseconds    result    segmentCount    segmentEnd    segmentNumber    segmentSize    segmentStart    segmentsExcludedSize    segmentsGroupSize    segmentsIncludedSize    serialVersionUID    shiftedSegmentedValue    startTime    timelineValue    toDomainValue    toMillisecond    wholeExceptionsBeforeDomainValue    x    y    int    groupSegmentCount    i    offset    p    segmentsExcluded    segmentsIncluded    Segment    segment        	chart_34237_SegmentedTimeline_1_1	889	1	source/org/jfree/chart/axis/SegmentedTimeline.java
94	[PATCH]    comparison    =    +1;	[BUG]    [BUGGY]    comparison    =    -1;    [FE]    junit.framework.AssertionFailedError    testBooleanArray    [CONTEXT]    return    this;    }    if    (lhs    ==    rhs)    {    return    this;    }    if    (lhs    ==    null)    {    comparison    =    -1;    return    this;    }    if    (rhs    ==    null)    {    [BUGGY]    comparison    =    -1;    [BUGGY]    return    this;    }    if    (lhs.length    !=    rhs.length)    {    comparison    =    (lhs.length    <    rhs.length)    ?    -1    :    +1;    return    this;    }    for    (int    i    =    0;    i    <    lhs.length    &&    comparison    ==    0;    i++)    {    append(lhs[i],    rhs[i]);    }    return    this;    [CLASS]        CompareToBuilder    [METHOD]    append    [RETURN_TYPE]    CompareToBuilder        final    boolean[]    lhs    final    boolean[]    rhs    [VARIABLES]    int    comparison    i    lhs    rhs    superCompareTo    boolean[]    lhs    rhs    boolean        	lang_15181_CompareToBuilder_1_1	979	1	src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java
95	[PATCH]    return    new    BigFraction(ArithmeticUtils.pow(denominator,    -exponent),	[BUG]    [BUGGY]    return    new    BigFraction(ArithmeticUtils.pow(denominator,    +exponent),    [FE]    org.apache.commons.math3.exception.NotPositiveException:    exponent    (-13)    testPow    [CONTEXT]    public    BigFraction    pow(final    long    exponent)    {    if    (exponent    <    0)    {    [BUGGY]    return    new    BigFraction(ArithmeticUtils.pow(denominator,    +exponent),    [BUGGY]    ArithmeticUtils.pow(numerator,    -exponent));    }    return    new    BigFraction(ArithmeticUtils.pow(numerator,    exponent),    ArithmeticUtils.pow(denominator,    exponent));    }    [CLASS]        BigFraction    [METHOD]    pow    [RETURN_TYPE]    BigFraction        final    long    exponent    [VARIABLES]    BigInteger    ONE_HUNDRED    bg    dOn    den    denominator    gcd    nOd    num    numerator    boolean    BigFraction    FOUR_FIFTHS    MINUS_ONE    ONE    ONE_FIFTH    ONE_HALF    ONE_QUARTER    ONE_THIRD    THREE_FIFTHS    THREE_QUARTERS    TWO    TWO_FIFTHS    TWO_QUARTERS    TWO_THIRDS    ZERO    fraction    object    rhs    thisOne    long    a0    a1    bits    den    exponent    l    m    num    overflow    p0    p1    p2    q0    q1    q2    serialVersionUID    sign        	math_14347_BigFraction_1_1	980	1	src/main/java/org/apache/commons/math3/fraction/BigFraction.java
96	[PATCH]    double    actRed    =    -1.0;	[BUG]    [BUGGY]    double    actRed    =    +1.0;    [FE]    org.apache.commons.math3.exception.ConvergenceException:    illegal    state:    unable    to    perform    Q.R    decomposition    on    the    27x3    jacobian    matrix    testMath519    [CONTEXT]    delta    =    FastMath.min(delta,    lmNorm);    }        currentObjective    =    computeObjectiveValue(currentPoint);    currentResiduals    =    computeResiduals(currentObjective);    current    =    new    PointVectorValuePair(currentPoint,    currentObjective);    currentCost    =    computeCost(currentResiduals);            [BUGGY]    double    actRed    =    +1.0;    [BUGGY]    if    (0.1    *    currentCost    <    previousCost)    {    double    r    =    currentCost    /    previousCost;    actRed    =    1.0    -    r    *    r;    }            for    (int    j    =    0;    j    <    solvedCols;    ++j)    {    int    pj    =    permutation[j];    double    dirJ    =    lmDir[pj];    [CLASS]        LevenbergMarquardtOptimizer    [METHOD]    doOptimize    [RETURN_TYPE]    PointVectorValuePair        [VARIABLES]    PointVectorValuePair    current    previous    ConvergenceChecker    checker    boolean    firstIteration    double[]    beta    currentObjective    currentPoint    currentResiduals    diag    diagR    jacNorm    lmDir    oldObj    oldRes    oldX    qtf    tmpVec    weightedResidual    work1    work2    work3    RealMatrix    weightMatrixSqrt    double    TWO_EPS    actRed    coeff1    coeff2    costRelativeTolerance    currentCost    delta    dirDer    dirJ    dk    initialStepBoundFactor    lmNorm    lmPar    maxCosine    orthoTolerance    parRelativeTolerance    pc2    preRed    previousCost    qrRankingThreshold    r    ratio    s    sum    threshold    tmp    xK    xNorm    xk    double[][]    weightedJacobian    int[]    permutation    int    i    j    k    nC    nR    pj    pk    rank    solvedCols        	math_80734_LevenbergMarquardtOptimizer_1_1	439	1	src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java
97	[PATCH]    -FastMath.asin(v2.getX()),	[BUG]    [BUGGY]    +FastMath.asin(v2.getX()),    [FE]    junit.framework.AssertionFailedError:    expected:<1.5500000000000067>    but    was:<-1.55>    testAngles    [CONTEXT]                Vector3D    v1    =    applyTo(Vector3D.PLUS_I);    Vector3D    v2    =    applyInverseTo(Vector3D.PLUS_K);    if    ((v2.getX()    <    -0.9999999999)    ||    (v2.getX()    >    0.9999999999))    {    throw    new    CardanEulerSingularityException(true);    }    return    new    double[]    {    FastMath.atan2(v1.getY(),    v1.getX()),    [BUGGY]    +FastMath.asin(v2.getX()),    [BUGGY]    FastMath.atan2(v2.getY(),    v2.getZ())    };    }    else    if    (order    ==    RotationOrder.XYX)    {                            [CLASS]        Rotation    [METHOD]    getAngles    [RETURN_TYPE]    double[]        RotationOrder    order    [VARIABLES]    RotationOrder    order    boolean    Rotation    IDENTITY    composed    r1    r2    r3    Vector3D    v1    v2    double    alpha1    alpha2    alpha3    angle    coeff    det    dot    halfAngle    inv    inverse    norm    normProduct    q0    q1    q2    q3    s    squaredSine    threshold    long    serialVersionUID        	math_36958_Rotation_1_1	660	1	src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
98	[PATCH]    points[idx]    =    -c;	[BUG]    [BUGGY]    points[idx]    =    +c;    [FE]    org.apache.commons.math3.exception.NonMonotonicSequenceException:    points    0    and    1    are    not    strictly    increasing    (-0.707    >=    -0.707)    org.apache.commons.math3.analysis.integration.gauss.HermiteParametricTest    [CONTEXT]    c    =    0.5    *    (a    +    b);    }    }    final    double    d    =    sqrtTwoTimesNumPoints    *    hmc;    final    double    w    =    2    /    (d    *    d);    points[i]    =    c;    weights[i]    =    w;    final    int    idx    =    lastNumPoints    -    i;    [BUGGY]    points[idx]    =    +c;    [BUGGY]    weights[idx]    =    w;    }                    if    (numberOfPoints    %    2    !=    0)    {    double    hm    =    H0;    for    (int    j    =    1;    j    <    numberOfPoints;    j    +=    2)    {    [CLASS]        HermiteRuleFactory    [METHOD]    computeRule    [RETURN_TYPE]    Pair        int    numberOfPoints    [VARIABLES]    Double[]    points    previousPoints    weights    boolean    done    double    H0    H1    SQRT_PI    a    b    c    d    ha    hb    hc    hm    hma    hmb    hmc    hpa    hpb    hpc    jp1    s    sm    sqrtTwoTimesLastNumPoints    sqrtTwoTimesNumPoints    w    int    i    iMax    idx    j    lastNumPoints    numberOfPoints        	math_8954_HermiteRuleFactory_1_1	156	1	src/main/java/org/apache/commons/math3/analysis/integration/gauss/HermiteRuleFactory.java
99	[PATCH]    if    (imaginary    <    -20.0)    {	[BUG]    [BUGGY]    if    (imaginary    <    +20.0)    {    [FE]    junit.framework.AssertionFailedError:    expected:<-1.87346E-4>    but    was:<0.0>    testTan    [CONTEXT]    public    Complex    tan()    {    if    (isNaN    ||    Double.isInfinite(real))    {    return    NaN;    }    if    (imaginary    >    20.0)    {    return    createComplex(0.0,    1.0);    }    [BUGGY]    if    (imaginary    <    +20.0)    {    [BUGGY]    return    createComplex(0.0,    -1.0);    }    double    real2    =    2.0    *    real;    double    imaginary2    =    2.0    *    imaginary;    double    d    =    FastMath.cos(real2)    +    FastMath.cosh(imaginary2);    return    createComplex(FastMath.sin(real2)    /    d,    FastMath.sinh(imaginary2)    /    d);    }    [CLASS]        Complex    [METHOD]    tan    [RETURN_TYPE]    Complex        [VARIABLES]    boolean    isInfinite    isNaN    double    addend    c    d    denominator    divisor    expReal    factor    imaginary    imaginary2    q    real    real2    scale    subtrahend    t    x    long    serialVersionUID    Complex    I    INF    NaN    ONE    ZERO    addend    c    divisor    factor    subtrahend    x        	math_16176_Complex_1_1	1022	1	src/main/java/org/apache/commons/math3/complex/Complex.java
100	[PATCH]    return    _value    ?    1.0    :    0.0;	[BUG]    [BUGGY]    return    true    ?    1.0    :    0.0;    [FE]    junit.framework.AssertionFailedError:    expected:<0.0>    but    was:<1.0>    testBoolean    [CONTEXT]    public    double    asDouble(double    defaultValue)    {    [BUGGY]    return    true    ?    1.0    :    0.0;    [BUGGY]    }    [CLASS]        BooleanNode    [METHOD]    asDouble    [RETURN_TYPE]    double        double    defaultValue    [VARIABLES]    BooleanNode    FALSE    TRUE    double    defaultValue    boolean    _value    b    defaultValue    v        	jacksondatabind_1096_BooleanNode_1_1	70	1	src/main/java/com/fasterxml/jackson/databind/node/BooleanNode.java
101	[PATCH]    if    (componentType.equals(Boolean.TYPE))    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    java.lang.ClassCastException:    [Lorg.apache.commons.lang3.AnnotationUtilsTest$Stooge;    cannot    be    cast    to    [Z    testHashCode    [CONTEXT]    }    if    (componentType.equals(Long.TYPE))    {    return    Arrays.hashCode((long[])    o);    }    if    (componentType.equals(Float.TYPE))    {    return    Arrays.hashCode((float[])    o);    }    if    (componentType.equals(Double.TYPE))    {    return    Arrays.hashCode((double[])    o);    }    [BUGGY]    if    (true)    {    [BUGGY]    return    Arrays.hashCode((boolean[])    o);    }    return    Arrays.hashCode((Object[])    o);    }    [CLASS]        AnnotationUtils    1    [METHOD]    arrayMemberHash    [RETURN_TYPE]    int        Class<?>    componentType    Object    o    [VARIABLES]    ToStringStyle    TO_STRING_STYLE    Class    componentType    Object    o    boolean    long    serialVersionUID        	lang_157_AnnotationUtils_1_1	366	1	src/main/java/org/apache/commons/lang3/AnnotationUtils.java
102	[PATCH]    if    (!info.periodClass.equals(this.periodClass))    {	[BUG]    [BUGGY]    if    (!false)    {    [FE]    junit.framework.AssertionFailedError    testSerialization    [CONTEXT]    public    boolean    equals(Object    obj)    {    if    (obj    ==    this)    {    return    true;    }    if    (obj    instanceof    PeriodAxisLabelInfo)    {    PeriodAxisLabelInfo    info    =    (PeriodAxisLabelInfo)    obj;    [BUGGY]    if    (!false)    {    [BUGGY]    return    false;    }    if    (!info.dateFormat.equals(this.dateFormat))    {    return    false;    }    if    (!info.padding.equals(this.padding))    {    return    false;    }    if    (!info.labelFont.equals(this.labelFont))    {    return    false;    [CLASS]        PeriodAxisLabelInfo    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    Stroke    DEFAULT_DIVIDER_STROKE    dividerStroke    boolean    drawDividers    PeriodAxisLabelInfo    info    DateFormat    dateFormat    RectangleInsets    DEFAULT_INSETS    padding    Class    periodClass    Object    obj    Paint    DEFAULT_DIVIDER_PAINT    DEFAULT_LABEL_PAINT    dividerPaint    labelPaint    long    serialVersionUID    Font    DEFAULT_FONT    labelFont        	chart_25962_PeriodAxisLabelInfo_1_1	303	1	source/org/jfree/chart/axis/PeriodAxisLabelInfo.java
103	[PATCH]    if    (_intern)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError:    expected    not    same    testInterningWithStreams    [CONTEXT]    public    Name    addName(String    symbolStr,    int[]    quads,    int    qlen)    {    [BUGGY]    if    (true)    {    [BUGGY]    symbolStr    =    InternCache.instance.intern(symbolStr);    }    int    hash;    if    (qlen    <    3)    {    hash    =    (qlen    ==    1)    ?    calcHash(quads[0])    :    calcHash(quads[0],    quads[1]);    }    else    {    hash    =    calcHash(quads,    qlen);    }    Name    symbol    =    constructName(hash,    symbolStr,    quads,    qlen);    _addSymbol(hash,    symbol);    [CLASS]        BytesToNameCanonicalizer    TableInfo    Bucket    [METHOD]    addName    [RETURN_TYPE]    Name        String    symbolStr    int[]    quads    int    qlen    [VARIABLES]    boolean    _collListShared    _intern    _mainHashShared    _mainNamesShared    _needRehash    canonicalize    intern    Bucket[]    _collList    collList    Bucket    _next    bucket    next    BytesToNameCanonicalizer    _parent    parent    src    AtomicReference    _tableInfo    int[]    _mainHash    mainHash    quads    String    symbolStr    int    DEFAULT_TABLE_SIZE    INITIAL_COLLISION_LEN    LAST_VALID_BUCKET    MAX_COLL_CHAIN_FOR_REUSE    MAX_COLL_CHAIN_LENGTH    MAX_ENTRIES_FOR_REUSE    MAX_TABLE_SIZE    MIN_HASH_SIZE    MULT    MULT2    MULT3    _collCount    _collEnd    _count    _hashSeed    _length    _longestCollisionList    _mainHashMask    childCount    collCount    collEnd    count    curr    firstQuad    hash    hashSeed    hashSize    ix    longestCollisionList    mainHashMask    q1    q2    qlen    secondQuad    seed    val    Name[]    _mainNames    mainNames    Name    _name    name    symbol        	jacksoncore_1468_BytesToNameCanonicalizer_1_1	628	1	src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java
104	[PATCH]    return    !queue.isEmpty()    &&    Character.isLetterOrDigit(queue.peek());	[BUG]    [BUGGY]    return    !queue.isEmpty();    [FE]    java.lang.IllegalArgumentException:    The    validated    string    is    empty    testYahooJp    [CONTEXT]    public    boolean    matchesWord()    {    [BUGGY]    return    !queue.isEmpty();    [BUGGY]    }    [CLASS]        TokenQueue    [METHOD]    matchesWord    [RETURN_TYPE]    boolean        [VARIABLES]    LinkedList    queue    boolean        	jsoup_1320_TokenQueue_1_1	126	1	src/main/java/org/jsoup/parser/TokenQueue.java
105	[PATCH]    if    (child.tagName.equals(   "base   ")    ||    child.tagName.equals(   "script   ")    ||    child.tagName.equals(   "noscript   ")    ||    child.tagName.equals(   "link   ")    ||	[BUG]    [BUGGY]    if    (child.tagName.equals(   "base   ")    ||    child.tagName.equals(   "script   ")    ||    child.tagName.equals(   "noscript   ")    ||    [FE]    junit.framework.AssertionFailedError:    expected:<2>    but    was:<3>    createsDocumentStructure    [CONTEXT]    if    (this.optionalClosing    &&    this.equals(child))    return    false;    if    (this.empty    ||    this.isData())    return    false;            if    (this.tagName.equals(   "head   "))    {    [BUGGY]    if    (child.tagName.equals(   "base   ")    ||    child.tagName.equals(   "script   ")    ||    child.tagName.equals(   "noscript   ")    ||    [BUGGY]    child.tagName.equals(   "meta   ")    ||    child.tagName.equals(   "title   ")    ||    child.tagName.equals(   "style   ")    ||    child.tagName.equals(   "object   "))    {    return    true;    }    return    false;    }        if    (this.tagName.equals(   "dt   ")    &&    child.tagName.equals(   "dd   "))    return    false;    if    (this.tagName.equals(   "dd   ")    &&    child.tagName.equals(   "dt   "))    [CLASS]        Tag    [METHOD]    canContain    [RETURN_TYPE]    boolean        Tag    child    [VARIABLES]    List    ancestors    boolean    canContainBlock    canContainInline    empty    isBlock    optionalClosing    preserveWhitespace    Tag    child    defaultAncestor    tag    String    tagName    Map    tags        	jsoup_569_Tag_1_1	85	1	src/main/java/org/jsoup/parser/Tag.java
106	[PATCH]    if    (child.tagName.equals(   "base   ")    ||    child.tagName.equals(   "script   ")    ||    child.tagName.equals(   "noscript   ")    ||    child.tagName.equals(   "link   ")    ||	[BUG]    [BUGGY]    if    (true    ||    child.tagName.equals(   "link   ")    ||    [FE]    junit.framework.AssertionFailedError:    expected:<2>    but    was:<1>    createsDocumentStructure    [CONTEXT]    if    (this.optionalClosing    &&    this.equals(child))    return    false;    if    (this.empty    ||    this.isData())    return    false;            if    (this.tagName.equals(   "head   "))    {    [BUGGY]    if    (true    ||    child.tagName.equals(   "link   ")    ||    [BUGGY]    child.tagName.equals(   "meta   ")    ||    child.tagName.equals(   "title   ")    ||    child.tagName.equals(   "style   ")    ||    child.tagName.equals(   "object   "))    {    return    true;    }    return    false;    }        if    (this.tagName.equals(   "dt   ")    &&    child.tagName.equals(   "dd   "))    return    false;    if    (this.tagName.equals(   "dd   ")    &&    child.tagName.equals(   "dt   "))    [CLASS]        Tag    [METHOD]    canContain    [RETURN_TYPE]    boolean        Tag    child    [VARIABLES]    List    ancestors    boolean    canContainBlock    canContainInline    empty    isBlock    optionalClosing    preserveWhitespace    Tag    child    defaultAncestor    tag    String    tagName    Map    tags        	jsoup_567_Tag_1_1	85	1	src/main/java/org/jsoup/parser/Tag.java
107	[PATCH]    if    (_elementNameStack.isEmpty()    &&    (_xmlPrettyPrinter    !=    null))    {	[BUG]    [BUGGY]    if    ((_xmlPrettyPrinter    !=    null))    {    [FE]    junit.framework.ComparisonFailure:    expected:<...pe>    testMultiLevel172    [CONTEXT]        if    (_elementNameStack.isEmpty())    {    throw    new    JsonGenerationException(   "Can    not    write    END_ELEMENT    without    open    START_ELEMENT   ");    }    _nextName    =    _elementNameStack.removeLast();    try    {        _nextIsAttribute    =    false;    _xmlWriter.writeEndElement();        [BUGGY]    if    ((_xmlPrettyPrinter    !=    null))    {    [BUGGY]        if    (!_stax2Emulation)    {    _xmlPrettyPrinter.writePrologLinefeed(_xmlWriter);    }    }    }    catch    (XMLStreamException    e)    {    StaxUtil.throwXmlAsIOException(e);    }    }    [CLASS]        ToXmlGenerator    Feature    [METHOD]    _handleEndObject    [RETURN_TYPE]    void        [VARIABLES]    XMLStreamWriter2    _xmlWriter    boolean    _defaultState    _initialized    _nextIsAttribute    _nextIsCData    _nextIsUnwrapped    _stax2Emulation    defaultState    isAttribute    isCData    isUnwrapped    state    XMLStreamException    e    XMLStreamWriter    _originalXmlWriter    sw    QName    _nextName    name    wrappedName    wrapperName    IOContext    _ioContext    ctxt    XmlPrettyPrinter    _xmlPrettyPrinter    String    DEFAULT_UNKNOWN_ELEMENT    fieldName    name    ns    value    Feature    WRITE_XML_1_1    WRITE_XML_DECLARATION    f    int    _formatFeatures    _mask    count    flags    mask    newF    oldF    stdFeatures    values    xmlFeatures    LinkedList    _elementNameStack        	jacksonxml_812_ToXmlGenerator_1_1	546	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java
108	[PATCH]    if    ((header    !=    null)    &&    (header.trim().length()    >    0))	[BUG]    [BUGGY]    if    ((header.trim().length()    >    0))    [FE]    junit.framework.AssertionFailedError:    Unexpected    Exception:    null    test13666    [CONTEXT]    if    (autoUsage)    {    printUsage(pw,    width,    cmdLineSyntax,    options);    }    else    {    printUsage(pw,    width,    cmdLineSyntax);    }        [BUGGY]    if    ((header.trim().length()    >    0))    [BUGGY]    {    printWrapped(pw,    width,    header);    }    printOptions(pw,    width,    options,    leftPad,    descPad);    if    ((footer    !=    null)    &&    (footer.trim().length()    >    0))    {    printWrapped(pw,    width,    footer);    }    [CLASS]        HelpFormatter    OptionComparator    [METHOD]    printHelp    [RETURN_TYPE]    void        PrintWriter    pw    int    width    String    cmdLineSyntax    String    header    Options    options    int    leftPad    int    descPad    String    footer    boolean    autoUsage    [VARIABLES]    Options    options    String    DEFAULT_ARG_NAME    DEFAULT_LONG_OPT_PREFIX    DEFAULT_OPT_PREFIX    DEFAULT_SYNTAX_PREFIX    cmdLineSyntax    defaultArgName    defaultLongOptPrefix    defaultNewLine    defaultOptPrefix    defaultSyntaxPrefix    footer    header    name    newline    prefix    boolean    autoUsage    int    DEFAULT_DESC_PAD    DEFAULT_LEFT_PAD    DEFAULT_WIDTH    defaultDescPad    defaultLeftPad    defaultWidth    descPad    leftPad    padding    width    PrintWriter    pw        	cli_476_HelpFormatter_1_1	409	1	src/java/org/apache/commons/cli/HelpFormatter.java
109	[PATCH]    if    (isPrimitiveWrapper(clazz))    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError    shouldNotReturnNullForPrimitives    [CONTEXT]    public    <T>    T    returnFor(Class<T>    clazz)    {    [BUGGY]    if    (true)    {    [BUGGY]    return    primitiveWrapperOf(clazz);    }    return    primitiveValueOrNullFor(clazz);    }    [CLASS]        HandyReturnValues    [METHOD]    returnFor    [RETURN_TYPE]    <T>        Class<T>    clazz    [VARIABLES]    boolean    Class    clazz        	mockito_61_HandyReturnValues_1_1	40	1	src/org/mockito/internal/progress/HandyReturnValues.java
110	[PATCH]    if    (tq.matchChomp(   "=   "))    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    java.lang.NullPointerException    testYahooJp    [CONTEXT]    private    Attribute    parseAttribute()    {    tq.consumeWhitespace();    String    key    =    tq.consumeAttributeKey();    String    value    =       "   ";    tq.consumeWhitespace();    [BUGGY]    if    (true)    {    [BUGGY]    tq.consumeWhitespace();    if    (tq.matchChomp(SQ))    {    value    =    tq.chompTo(SQ);    }    else    if    (tq.matchChomp(DQ))    {    value    =    tq.chompTo(DQ);    }    else    {    StringBuilder    valueAccum    =    new    StringBuilder();        while    (!tq.matchesAny(   "<   ",       "/>   ",       ">   ")    &&    !tq.matchesWhitespace()    &&    !tq.isEmpty())    {    [CLASS]        Parser    [METHOD]    parseAttribute    [RETURN_TYPE]    Attribute        [VARIABLES]    TokenQueue    tq    boolean    StringBuilder    valueAccum    String    DQ    SQ    baseUri    bodyHtml    data    href    html    key    tagName    value    Tag    bodyTag    headTag    htmlTag    tag    textareaTag    titleTag    Document    doc    LinkedList    stack        	jsoup_1176_Parser_1_1	173	1	src/main/java/org/jsoup/parser/Parser.java
111	[PATCH]    if    (isJsonArray())    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.IllegalStateException:    This    is    not    a    JSON    Array.    testParseComments    [CONTEXT]    public    JsonArray    getAsJsonArray()    {    [BUGGY]    if    (false)    {    [BUGGY]    return    (JsonArray)    this;    }    throw    new    IllegalStateException(   "This    is    not    a    JSON    Array.   ");    }    [CLASS]        JsonElement    [METHOD]    getAsJsonArray    [RETURN_TYPE]    JsonArray        [VARIABLES]    Escaper    BASIC_ESCAPER    boolean        	gson_341_JsonElement_1_1	96	1	gson/src/main/java/com/google/gson/JsonElement.java
112	[PATCH]    if    (alreadyAssigned)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    org.mockito.exceptions.base.MockitoException:    You    cannot    have    more    than    one    Mockito    annotation    on    a    field!    shouldAllowVerifyingInThreads    [CONTEXT]    static    void    throwIfAlreadyAssigned(Field    field,    boolean    alreadyAssigned)    {    [BUGGY]    if    (true)    {    [BUGGY]    new    Reporter().moreThanOneAnnotationNotAllowed(field.getName());    }    }    [CLASS]        MockitoAnnotations    [METHOD]    throwIfAlreadyAssigned    [RETURN_TYPE]    void        Field    field    boolean    alreadyAssigned    [VARIABLES]    Field    field    boolean    alreadyAssigned        	mockito_512_MockitoAnnotations_1_1	133	1	src/org/mockito/MockitoAnnotations.java
113	[PATCH]    if(Double.isNaN(b))    {	[BUG]    [BUGGY]    if(false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<1.2>    but    was:<NaN>    testLang381    [CONTEXT]    public    static    double    min(final    double    a,    final    double    b)    {    if(Double.isNaN(a))    {    return    b;    }    else    [BUGGY]    if(false)    {    [BUGGY]    return    a;    }    else    {    return    Math.min(a,    b);    }    }    [CLASS]        IEEE754rUtils    [METHOD]    min    [RETURN_TYPE]    double        final    double    a    final    double    b    [VARIABLES]    boolean    double    a    b        	lang_17515_IEEE754rUtils_1_1	106	1	src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java
114	[PATCH]    if    (c.equals(p))    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<1>    but    was:<2>    deeperDescendant    [CONTEXT]    private    static    Elements    filterForDescendants(Collection<Element>    parents,    Collection<Element>    candidates)    {    Elements    children    =    new    Elements();    CHILD:    for    (Element    c    :    candidates)    {    boolean    found    =    false;    for    (Element    p    :    parents)    {    [BUGGY]    if    (false)    {    [BUGGY]    found    =    true;    continue    CHILD;    }    }    if    (!found)    children.add(c);    }    return    children;    }    [CLASS]        Selector    SelectorParseException    [METHOD]    filterForDescendants    [RETURN_TYPE]    Elements        Element>    parents    Element>    candidates    [VARIABLES]    LinkedHashSet    elements    TokenQueue    tq    boolean    found    Element    c    found    p    root    Collection    candidates    parents    String[]    combinators    String    className    combinator    id    indexS    key    query    s    subQuery    tagName    Elements    children        	jsoup_1488_Selector_1_1	271	1	src/main/java/org/jsoup/select/Selector.java
115	[PATCH]    while    (!queue.isEmpty()    &&    (Character.isLetterOrDigit(c)    ||    c.equals('-')    ||    c.equals('_')))    {	[BUG]    [BUGGY]    while    (!queue.isEmpty()    ==    (Character.isLetterOrDigit(c)    ||    c.equals('-')    ||    c.equals('_')))    {    [FE]    java.lang.NullPointerException    filter    [CONTEXT]    public    String    consumeCssIdentifier()    {    StringBuilder    accum    =    new    StringBuilder();    Character    c    =    queue.peek();    [BUGGY]    while    (!queue.isEmpty()    ==    (Character.isLetterOrDigit(c)    ||    c.equals('-')    ||    c.equals('_')))    {    [BUGGY]    accum.append(queue.removeFirst());    c    =    queue.peek();    }    return    accum.toString();    }    [CLASS]        TokenQueue    [METHOD]    consumeCssIdentifier    [RETURN_TYPE]    String        [VARIABLES]    boolean    StringBuilder    accum    Character    c    LinkedList    queue        	jsoup_1360_TokenQueue_1_1	223	1	src/main/java/org/jsoup/parser/TokenQueue.java
116	[PATCH]    if    (descend)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.RuntimeException:    INTERNAL    COMPILER    ERROR.    testExternedPropertyNameDefinedByObjectLiteral    [CONTEXT]    n.isScript())    {    Preconditions.checkNotNull(inputId);    sourceName    =    NodeUtil.getSourceName(n);    }            boolean    descend    =    parent    ==    null    ||    !parent.isFunction()    ||    n    ==    parent.getFirstChild()    ||    parent    ==    scope.getRootNode();        [BUGGY]    if    (false)    {    [BUGGY]            if    (NodeUtil.isStatementParent(n))    {    for    (Node    child    =    n.getFirstChild();    child    !=    null;    child    =    child.getNext())    {    if    (NodeUtil.isHoistedFunctionDeclaration(child))    {    defineFunctionLiteral(child);    }    }    [CLASS]        TypedScopeCreator    DeferredSetType    DiscoverEnumsAndTypedefs    AbstractScopeBuilder    CollectProperties    StubDeclaration    GlobalScopeBuilder    LocalScopeBuilder    FirstOrderFunctionAnalyzer    [METHOD]    shouldTraverse    [RETURN_TYPE]    boolean        NodeTraversal    t    Node    n    Node    parent    [VARIABLES]    JSType    fnThisType    globalThis    t    thisType    type    NodeTraversal    t    Node    child    firstChild    functionNode    n    nameNode    node    parent    root    scriptRoot    valueNode    String    DELEGATE_PROXY_SUFFIX    name    ownerName    scriptName    sourceName    TypeValidator    validator    ObjectType    unknownType    AbstractCompiler    compiler    ErrorReporter    typeParsingErrorReporter    JSTypeRegistry    registry    typeRegistry    boolean    descend    isExtern    Scope    globalScope    newScope    parent    s    scope    DiagnosticType    CONSTRUCTOR_EXPECTED    CTOR_INITIALIZER    ENUM_INITIALIZER    IFACE_INITIALIZER    LENDS_ON_NON_OBJECT    MALFORMED_TYPEDEF    UNKNOWN_LENDS    CodingConvention    codingConvention    InputId    inputId    List    deferredSetTypes    delegateProxyPrototypes    lentObjectLiterals    nonExternFunctions    stubDeclarations    varsToRemove    Map    data    delegateCallingConventions    functionAnalysisResults    outParam        	closure_15331_TypedScopeCreator_1_1	495	1	src/com/google/javascript/jscomp/TypedScopeCreator.java
117	[PATCH]    return    iTimeField    ?    iField.isPrecise()    :    iField.isPrecise()    &&    this.iZone.isFixed();	[BUG]    [BUGGY]    return    iTimeField    ?    iField.isPrecise()    :    iField.isPrecise();    [FE]    junit.framework.AssertionFailedError:    expected:<0>    but    was:<4>    testConstructor_long_Chronology1    [CONTEXT]    public    boolean    isPrecise()    {    [BUGGY]    return    iTimeField    ?    iField.isPrecise()    :    iField.isPrecise();    [BUGGY]    }    [CLASS]        ZonedChronology    ZonedDurationField    ZonedDateTimeField    [METHOD]    isPrecise    [RETURN_TYPE]    boolean        [VARIABLES]    boolean    iTimeField    DateTimeField    field    iField    DurationField    durationField    field    iDurationField    iField    iLeapDurationField    iRangeDurationField    leapDurationField    rangeDurationField    long    instant    localInstant    serialVersionUID    DateTimeZone    iZone    zone        	time_11167_ZonedChronology_1_1	291	1	src/main/java/org/joda/time/chrono/ZonedChronology.java
118	[PATCH]    if    (strategy.shouldSkipClass(clazz))    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError    testSkipFieldsWithMixedTrueAndFalse    [CONTEXT]    public    boolean    shouldSkipClass(Class<?>    clazz)    {    for    (ExclusionStrategy    strategy    :    strategies)    {    [BUGGY]    if    (false)    {    [BUGGY]    return    true;    }    }    return    false;    }    [CLASS]        DisjunctionExclusionStrategy    [METHOD]    shouldSkipClass    [RETURN_TYPE]    boolean        Class<?>    clazz    [VARIABLES]    Collection    strategies    Class    clazz    ExclusionStrategy    strategy    boolean        	gson_762_DisjunctionExclusionStrategy_1_1	46	1	gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java
119	[PATCH]    }    else    if    (checkNextIsUnwrapped())    {	[BUG]    [BUGGY]    }    else    if    (true)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Can    not    deserialize    instance    of    java.util.ArrayList    out    of    VALUE_STRING    token    testRoundtrip    [CONTEXT]    {    _verifyValueWrite(   "write    String    value   ");    if    (_nextName    ==    null)    {    handleMissingName();    }    try    {    if    (_nextIsAttribute)    {    _xmlWriter.writeAttribute(_nextName.getNamespaceURI(),    _nextName.getLocalPart(),    text);    [BUGGY]    }    else    if    (true)    {    [BUGGY]                if(_nextIsCData)    {    _xmlWriter.writeCData(text);    }    else    {    _xmlWriter.writeCharacters(text);    }    }    else    if    (_xmlPrettyPrinter    !=    null)    {    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,    [CLASS]        ToXmlGenerator    Feature    [METHOD]    writeString    [RETURN_TYPE]    void        String    text    [VARIABLES]    XMLStreamWriter2    _xmlWriter    boolean    _defaultState    _initialized    _nextIsAttribute    _nextIsCData    _nextIsUnwrapped    _stax2Emulation    defaultState    isAttribute    isCData    isUnwrapped    state    XMLStreamException    e    XMLStreamWriter    _originalXmlWriter    sw    QName    _nextName    name    wrappedName    wrapperName    IOContext    _ioContext    ctxt    XmlPrettyPrinter    _xmlPrettyPrinter    String    DEFAULT_UNKNOWN_ELEMENT    fieldName    name    ns    text    value    Feature    WRITE_XML_1_1    WRITE_XML_DECLARATION    f    int    _formatFeatures    _mask    count    flags    mask    newF    oldF    stdFeatures    values    xmlFeatures    LinkedList    _elementNameStack        	jacksonxml_825_ToXmlGenerator_1_1	579	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java
120	[PATCH]    if    (it.hasNext())    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    java.util.NoSuchElementException    testPrefixMap    [CONTEXT]    private    int    fixup()    {        if    (size    ==    -    1    ||    AbstractPatriciaTrie.this.modCount    !=    expectedModCount)    {    final    Iterator<Map.Entry<K,    V>>    it    =    super.entrySet().iterator();    size    =    0;    Map.Entry<K,    V>    entry    =    null;    [BUGGY]    if    (true)    {    [BUGGY]    entry    =    it.next();    size    =    1;    }    fromKey    =    entry    ==    null    ?    null    :    entry.getKey();    if    (fromKey    !=    null)    {    final    TrieEntry<K,    V>    prior    =    previousEntry((TrieEntry<K,    V>)entry);    fromKey    =    prior    ==    null    ?    null    :    prior.getKey();    }        [CLASS]        AbstractPatriciaTrie    Reference    TrieEntry    EntrySet    EntryIterator    KeySet    KeyIterator    Values    ValueIterator    TrieIterator    TrieMapIterator    RangeMap    RangeEntryMap    RangeEntrySet    EntryIterator    PrefixRangeMap    PrefixRangeEntrySet    SingletonIterator    EntryIterator    [METHOD]    fixup    [RETURN_TYPE]    int        [VARIABLES]    Entry    entry    Set    entrySet    keySet    boolean    forceInclusive    fromInclusive    lastOne    toInclusive    RangeMap    delegate    E    item    Iterator    it    Collection    values    TrieEntry    added    candidate    ceil    child    current    e    entry    first    firstEntry    floor    found    from    h    last    left    next    nextEntry    node    p    parent    parentOfSubtree    path    predecessor    prefixStart    prevEntry    previous    prior    right    root    start    startScan    subtree    t    tree    K    excludedKey    first    fromKey    key    last    prefix    toKey    PrefixRangeMap    delegate    long    serialVersionUID    int    bitIndex    endIndexInBits    expectedModCount    hit    lengthInBits    modCount    offset    offsetInBits    offsetLength    ret    size        	collections_11591_AbstractPatriciaTrie_1_1	2102	1	src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java
121	[PATCH]    if    (_inputPtr    >=    _inputEnd    &&    !loadMore())    {	[BUG]    [BUGGY]    if    (_inputPtr    >=    _inputEnd    ==    !loadMore())    {    [FE]    junit.framework.AssertionFailedError:    Expected    token    VALUE_NUMBER_FLOAT,    current    token    VALUE_NUMBER_INT    testParsingOfLongerSequences    [CONTEXT]        int_loop:    while    (c    >=    '0'    &&    c    <=    '9')    {    ++intLen;    if    (outPtr    >=    outBuf.length)    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    outBuf[outPtr++]    =    c;    [BUGGY]    if    (_inputPtr    >=    _inputEnd    ==    !loadMore())    {    [BUGGY]        c    =    CHAR_NULL;    eof    =    true;    break    int_loop;    }    c    =    _inputBuffer[_inputPtr++];    }        if    (intLen    ==    0)    {    reportInvalidNumber(   "Missing    integer    part    (next    char       "+_getCharDesc(c)+   ")   ");    [CLASS]        ReaderBasedJsonParser    [METHOD]    parseNumberText2    [RETURN_TYPE]    JsonToken        boolean    negative    [VARIABLES]    boolean    _tokenIncomplete    eof    inObject    negative    char    c    Reader    _reader    r    ObjectCodec    _objectCodec    c    codec    CharsToNameCanonicalizer    _symbols    st    int    _hashSeed    bits    ch    count    decodedData    defaultValue    expLen    features    fractLen    i    inputLen    intLen    len    nameLen    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    startPtr    char[]    _inputBuffer    buf    outBuf        	jacksoncore_8057_ReaderBasedJsonParser_1_1	991	1	src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
122	[PATCH]    if    (jj_3R_40())    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    '/    +    1.1074352304237802'.    Syntax    error    after:    '/'    testThreads    [CONTEXT]    if    (jj_3R_35())    {    jj_scanpos    =    xsp;    if    (jj_3R_36())    {    jj_scanpos    =    xsp;    if    (jj_3R_37())    {    jj_scanpos    =    xsp;    if    (jj_3R_38())    {    jj_scanpos    =    xsp;    if    (jj_3R_39())    {    jj_scanpos    =    xsp;    [BUGGY]    if    (false)    {    [BUGGY]    jj_scanpos    =    xsp;    if    (jj_3R_41())    {    jj_scanpos    =    xsp;    if    (jj_3R_42())    {    jj_scanpos    =    xsp;    if    (jj_3R_43())    {    jj_scanpos    =    xsp;    if    (jj_3R_44())    {    jj_scanpos    =    xsp;    if    (jj_3R_45())    {    [CLASS]    	jxpath_3738_XPathParser_1_1	2488	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java
123	[PATCH]    if    (jj_3R_142())    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    'count(descendant-or-self::root)'.    Syntax    error    after:    'c'    testAxisDescendantOrSelf    [CONTEXT]    return    false;    }    final    private    boolean    jj_3R_129()    {    Token    xsp;    xsp    =    jj_scanpos;    if    (jj_3R_140())    {    jj_scanpos    =    xsp;    if    (jj_3R_141())    {    jj_scanpos    =    xsp;    [BUGGY]    if    (false)    {    [BUGGY]    jj_scanpos    =    xsp;    if    (jj_3R_143())    {    jj_scanpos    =    xsp;    if    (jj_3R_144())    {    jj_scanpos    =    xsp;    if    (jj_3R_145())    {    jj_scanpos    =    xsp;    if    (jj_3R_146())    {    jj_scanpos    =    xsp;    if    (jj_3R_147())    {    [CLASS]    	jxpath_4205_XPathParser_1_1	2574	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java
124	[PATCH]    }    else    if    (!alternate.isParameterizedType())    {	[BUG]    [BUGGY]    }    else    if    (!true)    {    [FE]    java.lang.RuntimeException:    INTERNAL    COMPILER    ERROR.    testTypeAnnotationsTypeDef    [CONTEXT]                if    (!current.isParameterizedType())    {    if    (alternate.isSubtype(current))    {        return    this;    }        [BUGGY]    }    else    if    (!true)    {    [BUGGY]    if    (current.isSubtype(alternate))    {        removeCurrent    =    true;    }        }    else    {    Preconditions.checkState(current.isParameterizedType()    &&    alternate.isParameterizedType());    ParameterizedType    parameterizedAlternate    =    alternate.toMaybeParameterizedType();    ParameterizedType    parameterizedCurrent    =    current.toMaybeParameterizedType();    [CLASS]        UnionTypeBuilder    [METHOD]    addAlternate    [RETURN_TYPE]    UnionTypeBuilder        JSType    alternate    [VARIABLES]    ParameterizedType    parameterizedAlternate    parameterizedCurrent    UnionType    union    JSTypeRegistry    registry    boolean    areAllUnknownsChecked    isAllType    isAlternateUnknown    isNativeUnknownType    removeCurrent    JSType    alternate    alternateTypeParameter    current    currentTypeParameter    merged    result    specialCaseType    unionAlt    FunctionType    other    supremum    Iterator    it    List    alternates    long    serialVersionUID    int    DEFAULT_MAX_UNION_SIZE    currentIndex    functionTypePosition    maxUnionSize        	closure_12753_UnionTypeBuilder_1_1	215	1	src/com/google/javascript/rhino/jstype/UnionTypeBuilder.java
125	[PATCH]    if    (parsePattern.endsWith(   "ZZ   "))    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.text.ParseException:    Unable    to    parse    the    date:    2022-12-24T14:32:08-08:00    testLang530    [CONTEXT]        if    (parsePattern.endsWith(   "ZZ   "))    {    pattern    =    pattern.substring(0,    pattern.length()    -    1);    }    parser.applyPattern(pattern);    pos.setIndex(0);    String    str2    =    str;        [BUGGY]    if    (false)    {    [BUGGY]    str2    =    str.replaceAll(   "([-+][0-9][0-9]):([0-9][0-9])$   ",       "$1$2   ");    }    final    Date    date    =    parser.parse(str2,    pos);    if    (date    !=    null    &&    pos.getIndex()    ==    str2.length())    {    return    date;    }    }    throw    new    ParseException(   "Unable    to    parse    the    date:       "    +    str,    -1);    }    [CLASS]        DateUtils    DateIterator    [METHOD]    parseDateWithLeniency    [RETURN_TYPE]    Date        String    str    Locale    locale    String[]    parsePatterns    final    boolean    lenient    [VARIABLES]    Locale    locale    int[][]    fields    boolean    lenient    Calendar    cal1    cal2    endFinal    spot    startFinal    String    parsePattern    pattern    str    str2    String[]    parsePatterns    SimpleDateFormat    parser    long    MILLIS_PER_DAY    MILLIS_PER_HOUR    MILLIS_PER_MINUTE    MILLIS_PER_SECOND    int    MODIFY_CEILING    MODIFY_ROUND    MODIFY_TRUNCATE    RANGE_MONTH_MONDAY    RANGE_MONTH_SUNDAY    RANGE_WEEK_CENTER    RANGE_WEEK_MONDAY    RANGE_WEEK_RELATIVE    RANGE_WEEK_SUNDAY    SEMI_MONTH    Date    date    ParsePosition    pos        	lang_21721_DateUtils_1_1	381	1	src/main/java/org/apache/commons/lang3/time/DateUtils.java
126	[PATCH]    return    number    instanceof    BigDecimal    ||    number    instanceof    Double    ||    number    instanceof    Float;	[BUG]    [BUGGY]    return    number    instanceof    BigDecimal    ||    number    instanceof    Float;    [FE]    junit.framework.AssertionFailedError:    expected:<10.25>    but    was:<10.25>    testDoubleEqualsBigDecimal    [CONTEXT]    private    static    boolean    isFloatingPoint(JsonPrimitive    primitive)    {    if    (primitive.value    instanceof    Number)    {    Number    number    =    (Number)    primitive.value;    [BUGGY]    return    number    instanceof    BigDecimal    ||    number    instanceof    Float;    [BUGGY]    }    return    false;    }    [CLASS]        JsonPrimitive    [METHOD]    isFloatingPoint    [RETURN_TYPE]    boolean        JsonPrimitive    primitive    [VARIABLES]    BigInteger    INTEGER_MAX    LONG_MAX    big    Object    obj    primitive    target    value    Class[]    PRIMITIVE_TYPES    boolean    Number    number    JsonPrimitive    primitive        	gson_733_JsonPrimitive_1_1	383	1	gson/src/main/java/com/google/gson/JsonPrimitive.java
127	[PATCH]    if    (_annotationIntrospector.hasIgnoreMarker(_defaultConstructor))    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Can    not    construct    instance    of    com.fasterxml.jackson.databind.TestHandlerInstantiation$MyMap,    problem:    No    default    constructor    found    testKeyDeserializer    [CONTEXT]    }    }                        if    (_annotationIntrospector    !=    null)    {    if    (_defaultConstructor    !=    null)    {    [BUGGY]    if    (true)    {    [BUGGY]    _defaultConstructor    =    null;    }    }    if    (_constructors    !=    null)    {        for    (int    i    =    _constructors.size();    --i    >=    0;    )    {    if    (_annotationIntrospector.hasIgnoreMarker(_constructors.get(i)))    {    _constructors.remove(i);    }    }    [CLASS]        AnnotatedClass    [METHOD]    resolveCreators    [RETURN_TYPE]    void        [VARIABLES]    Constructor    ctor    Constructor[]    declaredCtors    AnnotationIntrospector    _annotationIntrospector    aintr    AnnotatedMethodMap    _memberMethods    Method    m    int    i    AnnotationMap[]    NO_ANNOTATION_MAPS    MixInResolver    _mixInResolver    mir    boolean    _creatorsResolved    AnnotatedConstructor    _defaultConstructor    AnnotationMap    _classAnnotations    ann    classAnnotations    Class    _class    _primaryMixIn    acls    cls    List    _constructors    _creatorMethods    _fields    _superTypes    constructors    creatorMethods    superTypes        	jacksondatabind_1788_AnnotatedClass_1_1	357	1	src/main/java/com/fasterxml/jackson/databind/introspect/AnnotatedClass.java
128	[PATCH]    if    (ns    ==    null    ||    ns.length()    ==    0)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError:    Expected    XML    to    begin    with    '<person    xmlns=',    instead    got:    <person><wstxns1:name    xmlns:wstxns1=   "http://example.org/person   ">hello</wstxns1:name></person>    testRootNamespace    [CONTEXT]    ns    =    root.getNamespace();    }        if    (localName    ==    null    ||    localName.length()    ==    0)    {            localName    =    StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());    return    new    QName(   "   ",    localName);    }        [BUGGY]    if    (true)    {    [BUGGY]    ns    =    findNamespace(intr,    ac);    }    if    (ns    ==    null)    {    ns    =       "   ";    }    return    new    QName(ns,    localName);    }    [CLASS]        XmlRootNameLookup    [METHOD]    _findRootName    [RETURN_TYPE]    QName        Class<?>    rootType    MapperConfig<?>    config    [VARIABLES]    PropertyName    root    boolean    AnnotatedClass    ac    LRUMap    _rootNames    BeanDescription    beanDesc    AnnotationIntrospector    intr    MapperConfig    config    Class    rootType    String    localName    ns    long    serialVersionUID        	jacksonxml_2075_XmlRootNameLookup_1_1	84	1	src/main/java/com/fasterxml/jackson/dataformat/xml/util/XmlRootNameLookup.java
129	[PATCH]    if    (!wrap    ||    !(t    instanceof    JsonMappingException))    {	[BUG]    [BUGGY]    if    (!wrap)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Current    token    (VALUE_STRING)    not    numeric,    can    not    use    numeric    value    accessors    testDeserializeDecimalProperException    [CONTEXT]    while    (t    instanceof    InvocationTargetException    &&    t.getCause()    !=    null)    {    t    =    t.getCause();    }        if    (t    instanceof    Error)    {    throw    (Error)    t;    }    boolean    wrap    =    (ctxt    ==    null)    ||    ctxt.isEnabled(DeserializationFeature.WRAP_EXCEPTIONS);        if    (t    instanceof    IOException)    {    [BUGGY]    if    (!wrap)    {    [BUGGY]    throw    (IOException)    t;    }    }    else    if    (!wrap)    {    if    (t    instanceof    RuntimeException)    {    throw    (RuntimeException)    t;    }    }        throw    JsonMappingException.wrapWithPath(t,    bean,    fieldName);    }    [CLASS]        BeanDeserializerBase    [METHOD]    wrapAndThrow    [RETURN_TYPE]    void        Throwable    t    Object    bean    String    fieldName    DeserializationContext    ctxt    [VARIABLES]    UnwrappedPropertyHandler    _unwrappedPropertyHandler    unwrapped    Shape    _serializationShape    shape    ValueInjector[]    _injectables    HashMap    _subDeserializers    ValueInstantiator    _valueInstantiator    vi    ObjectIdReader    _objectIdReader    oir    String    fieldName    JsonDeserializer    _delegateDeserializer    cd    contentDeser    deser    orig    ser    subDeser    unwrapping    valueDeser    PropertyBasedCreator    _propertyBasedCreator    long    serialVersionUID    SettableAnyProperty    _anySetter    JavaType    _beanType    backRefType    delegateType    idType    referredType    type    Annotations    _classAnnotations    boolean    _ignoreAllUnknown    _needViewProcesing    _nonStandardCreation    _vanillaProcessing    hasViews    ignoreAllUnknown    isContainer    value    wrap    BeanPropertyMap    _beanProperties    properties    Throwable    t    DeserializationContext    ctxt    Object    bean    Map    _backRefs    backRefs    ExternalTypeHandler    _externalTypeIdHandler    HashSet    _ignorableProps    ignorableProps    newIgnored        	jacksondatabind_6863_BeanDeserializerBase_1_1	1323	1	src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java
130	[PATCH]    if    (surroundingSpacesIgnored)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    Token    content    expected:<uv[]>    but    was:<uv[    ]>    testNextToken1    [CONTEXT]    break;    }    else    if    (isEscape(c))    {    tkn.content.append((char)    readEscape(c));    }    else    {    tkn.content.append((char)    c);    }    c    =    in.read();    }        [BUGGY]    if    (false)    {    [BUGGY]    trimTrailingSpaces(tkn.content);    }    return    tkn;    }    [CLASS]        CSVLexer    [METHOD]    simpleTokenLexer    [RETURN_TYPE]    Token        Token    tkn    int    c    [VARIABLES]    boolean    Token    tkn    int    c        	csv_181_CSVLexer_1_1	161	1	src/main/java/org/apache/commons/csv/CSVLexer.java
131	[PATCH]    if    (accum.length()    >    0    &&    element.isBlock()    &&    !TextNode.lastCharIsWhitespace(accum))	[BUG]    [BUGGY]    if    (!TextNode.lastCharIsWhitespace(accum))    [FE]    junit.framework.AssertionFailedError:    expected:<...llo    There.    Here    is    s[]ome    text.>    but    was:<...llo    There.    Here    is    s[    ]ome    text.>    testNormalisesText    [CONTEXT]    if    (!preserveWhitespace())    {    text    =    TextNode.normaliseWhitespace(text);    if    (TextNode.lastCharIsWhitespace(accum))    text    =    TextNode.stripLeadingWhitespace(text);    }    accum.append(text);    }    else    if    (child    instanceof    Element)    {    Element    element    =    (Element)    child;    [BUGGY]    if    (!TextNode.lastCharIsWhitespace(accum))    [BUGGY]    accum.append(   "       ");    element.text(accum);    }    }    }    [CLASS]        Element    [METHOD]    text    [RETURN_TYPE]    void        StringBuilder    accum    [VARIABLES]    Set    classNames    boolean    StringBuilder    accum    Node    child    Element    element    TextNode    textNode    Tag    tag    String    text        	jsoup_204_Element_1_1	577	1	src/main/java/org/jsoup/nodes/Element.java
132	[PATCH]    if    (RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(fnName))    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    testRenamePropertyFunction    [CONTEXT]                            return    false;    }            [BUGGY]    if    (false)    {    [BUGGY]    return    false;    }        if    (specializationState    !=    null    &&    !specializationState.canFixupFunction(fn.getFunctionNode()))    {    return    false;    }    Node    fnNode    =    fn.getFunctionNode();    [CLASS]        InlineFunctions    FindCandidateFunctions    CallVisitor    FindCandidatesReferences    Inline    FunctionState    NamedFunction    FunctionVar    FunctionExpression    Reference    [METHOD]    isCandidateFunction    [RETURN_TYPE]    boolean        Function    fn    [VARIABLES]    Set    fnNames    namesToAlias    Node    block    callNode    externs    fn    fnIdentifingNode    fnNode    n    nameNode    parent    root    safeFnNode    var    String    fakeName    fnName    name    SpecializationState    specializationState    int    callsSeen    index    Function    fn    AbstractCompiler    compiler    boolean    assumeMinimumCapture    assumeStrictThis    blockFunctionInliningEnabled    decompose    hasInnerFunctions    inline    inlineDirectly    inlineGlobalFunctions    inlineLocalFunctions    inlined    referencesThis    remove    requiresDecomposition    CallVisitorCallback    callback    JSModule    module    Map    anonFns    anonFunctionMap    fns    functionMap    references    FunctionInjector    injector        	closure_31358_InlineFunctions_1_1	349	1	src/com/google/javascript/jscomp/InlineFunctions.java
133	[PATCH]    if    (surroundingSpacesIgnored)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError    testBackslashEscaping2    [CONTEXT]    break;    }    else    if    (isEscape(c))    {    tkn.content.append((char)    readEscape(c));    }    else    {    tkn.content.append((char)    c);    }    c    =    in.read();    }        [BUGGY]    if    (true)    {    [BUGGY]    trimTrailingSpaces(tkn.content);    }    return    tkn;    }    [CLASS]        CSVLexer    [METHOD]    simpleTokenLexer    [RETURN_TYPE]    Token        Token    tkn    int    c    [VARIABLES]    boolean    Token    tkn    int    c        	csv_182_CSVLexer_1_1	161	1	src/main/java/org/apache/commons/csv/CSVLexer.java
134	[PATCH]    return    wanted    !=    null    &&    object    !=    null    &&    object.getClass()    ==    wanted.getClass();	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError    shouldMatchTypes    [CONTEXT]    public    boolean    typeMatches(Object    object)    {    [BUGGY]    return    false;    [BUGGY]    }    [CLASS]        Equals    1    [METHOD]    typeMatches    [RETURN_TYPE]    boolean        Object    object    [VARIABLES]    Object    actual    o    object    wanted    long    serialVersionUID    boolean        	mockito_1110_Equals_1_1	77	1	src/org/mockito/internal/matchers/Equals.java
135	[PATCH]    return    shortOpts.containsKey(opt)    ||    longOpts.containsKey(opt);	[BUG]    [BUGGY]    return    shortOpts.containsKey(opt);    [FE]    junit.framework.AssertionFailedError:    org.apache.commons.cli.UnrecognizedOptionException:    Unrecognized    option:    --enable-a    testSimpleLong    [CONTEXT]    public    boolean    hasOption(String    opt)    {    opt    =    Util.stripLeadingHyphens(opt);        [BUGGY]    return    shortOpts.containsKey(opt);    [BUGGY]    }    [CLASS]        Options    [METHOD]    hasOption    [RETURN_TYPE]    boolean        String    opt    [VARIABLES]    List    opts    requiredOpts    String    opt    boolean    Map    longOpts    optionGroups    shortOpts        	cli_128_Options_1_1	244	1	src/java/org/apache/commons/cli/Options.java
136	[PATCH]    if    (makesStructs    &&    !isConstructor)    {	[BUG]    [BUGGY]    if    (makesStructs    ==    !isConstructor)    {    [FE]    junit.framework.AssertionFailedError:    Unexpected    warning(s):    JSC_CONSTRUCTOR_REQUIRED.    @struct    used    without    @constructor    for    Bar    at    testcode    line    1    :    30    expected:<0>    but    was:<1>    testExternedPropertyName    [CONTEXT]    FunctionTypeBuilder    inferInheritance(@Nullable    JSDocInfo    info)    {    if    (info    !=    null)    {    isConstructor    =    info.isConstructor();    makesStructs    =    info.makesStructs();    makesDicts    =    info.makesDicts();    isInterface    =    info.isInterface();        [BUGGY]    if    (makesStructs    ==    !isConstructor)    {    [BUGGY]    reportWarning(CONSTRUCTOR_REQUIRED,       "@struct   ",    fnName);    }    else    if    (makesDicts    &&    !isConstructor)    {    reportWarning(CONSTRUCTOR_REQUIRED,       "@dict   ",    fnName);    }        if    (info.hasBaseType())    {    if    (isConstructor)    {    JSType    maybeBaseType    =    info.getBaseType().evaluate(scope,    typeRegistry);    [CLASS]        FunctionTypeBuilder    ExtendedTypeValidator    ImplementedTypeValidator    UnknownFunctionContents    AstFunctionContents    [METHOD]    inferInheritance    [RETURN_TYPE]    FunctionTypeBuilder        JSDocInfo    info    [VARIABLES]    JSType    maybeBaseType    maybeInterType    maybeInterfaceType    returnType    thisType    type    Set    escapedQualifiedNames    escapedVarNames    ImmutableList    templateTypeNames    Node    currentParam    errorRoot    n    newParam    oldParam    parametersNode    paramsParent    FunctionContents    contents    String    fnName    sourceName    JSDocInfo    info    UnknownFunctionContents    singleton    ObjectType    baseType    objectType    AbstractCompiler    compiler    JSTypeRegistry    typeRegistry    boolean    hasNonEmptyReturns    isConstructor    isInterface    makesDicts    makesStructs    oldParamsListHitOptArgs    returnTypeInferred    warnedAboutArgList    Scope    scope    DiagnosticType    CONSTRUCTOR_REQUIRED    EXTENDS_NON_OBJECT    EXTENDS_WITHOUT_TYPEDEF    IMPLEMENTS_WITHOUT_CONSTRUCTOR    INEXISTANT_PARAM    OPTIONAL_ARG_AT_END    RESOLVED_TAG_EMPTY    TEMPLATE_TYPE_DUPLICATED    TEMPLATE_TYPE_EXPECTED    THIS_TYPE_NON_OBJECT    TYPE_REDEFINITION    VAR_ARGS_MUST_BE_LAST    CodingConvention    codingConvention    JSTypeExpression    t    List    extendedInterfaces    implementedInterfaces    Multiset    assignedVarNames        	closure_14938_FunctionTypeBuilder_1_1	316	1	src/com/google/javascript/jscomp/FunctionTypeBuilder.java
137	[PATCH]    }    else    if    (isEscape(c))    {	[BUG]    [BUGGY]    }    else    if    (false)    {    [FE]    junit.framework.AssertionFailedError    testBackslashEscaping2    [CONTEXT]    break;    }    else    if    (isEndOfFile(c))    {        tkn.type    =    EOF;    tkn.isReady    =    true;    break;    }    else    if    (isDelimiter(c))    {        tkn.type    =    TOKEN;    break;    [BUGGY]    }    else    if    (false)    {    [BUGGY]    tkn.content.append((char)    readEscape(c));    }    else    {    tkn.content.append((char)    c);    }    c    =    in.read();    }    if    (surroundingSpacesIgnored)    {    trimTrailingSpaces(tkn.content);    [CLASS]        CSVLexer    [METHOD]    simpleTokenLexer    [RETURN_TYPE]    Token        Token    tkn    int    c    [VARIABLES]    boolean    Token    tkn    int    c        	csv_176_CSVLexer_1_1	152	1	src/main/java/org/apache/commons/csv/CSVLexer.java
138	[PATCH]    if    (!isValidChar(chars[i]))	[BUG]    [BUGGY]    if    (!false)    [FE]    java.lang.IllegalArgumentException:    opt    contains    illegal    character    value    'h'    testAnt    [CONTEXT]    }    }        else    {    char[]    chars    =    opt.toCharArray();    for    (int    i    =    0;    i    <    chars.length;    i++)    {    [BUGGY]    if    (!false)    [BUGGY]    {    throw    new    IllegalArgumentException(       "opt    contains    illegal    character    value    '   "    +    chars[i]    +       "'   ");    }    }    }    [CLASS]        OptionValidator    [METHOD]    validateOption    [RETURN_TYPE]    void        String    opt    [VARIABLES]    boolean    char    ch    String    opt    int    i    char[]    chars        	cli_818_OptionValidator_1_1	68	1	src/java/org/apache/commons/cli/OptionValidator.java
139	[PATCH]    if    (currentInfo.documentParam(parameterName,    description))    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError    testDocumentationParameter    [CONTEXT]    public    boolean    recordParameterDescription(    String    parameterName,    String    description)    {    [BUGGY]    if    (true)    {    [BUGGY]    populated    =    true;    return    true;    }    else    {    return    false;    }    }    [CLASS]        JSDocInfoBuilder    [METHOD]    recordParameterDescription    [RETURN_TYPE]    boolean        String    parameterName    String    description    [VARIABLES]    boolean    hasLC    parseDocumentation    populated    Marker    currentMarker    marker    String    description    parameterName    JSDocInfo    built    currentInfo    info        	closure_47541_JSDocInfoBuilder_1_1	284	1	src/com/google/javascript/rhino/JSDocInfoBuilder.java
140	[PATCH]    if    (jj_scan_token(FUNCTION_CEILING))    return    true;	[BUG]    [BUGGY]    if    (false)    return    true;    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    '/    +    1.898365864917467'.    Syntax    error    after:    '/'    testThreads    [CONTEXT]    return    false;    }    final    private    boolean    jj_3R_52()    {    if    (jj_scan_token(FUNCTION_ROUND))    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_51()    {    [BUGGY]    if    (false)    return    true;    [BUGGY]    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_50()    {    if    (jj_scan_token(FUNCTION_FLOOR))    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }        [CLASS]    	jxpath_2781_XPathParser_1_1	2114	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java
141	[PATCH]    hasEFS    ?    ZipEncodingHelper.UTF8_ZIP_ENCODING    :    zipEncoding;	[BUG]    [BUGGY]    true    ?    ZipEncodingHelper.UTF8_ZIP_ENCODING    :    zipEncoding;    [FE]    junit.framework.AssertionFailedError:    expected:<2012925693>    but    was:<2965532848>    testCP437FileRoundtripImplicitUnicodeExtra    [CONTEXT]    int    versionMadeBy    =    ZipShort.getValue(cfh,    off);    off    +=    SHORT;    ze.setPlatform((versionMadeBy    >>    BYTE_SHIFT)    &    NIBLET_MASK);    off    +=    SHORT;        final    int    generalPurposeFlag    =    ZipShort.getValue(cfh,    off);    final    boolean    hasEFS    =    (generalPurposeFlag    &    ZipArchiveOutputStream.EFS_FLAG)    !=    0;    final    ZipEncoding    entryEncoding    =    [BUGGY]    true    ?    ZipEncodingHelper.UTF8_ZIP_ENCODING    :    zipEncoding;    [BUGGY]    off    +=    SHORT;    ze.setMethod(ZipShort.getValue(cfh,    off));    off    +=    SHORT;                long    time    =    ZipUtil.dosToJavaTime(ZipLong.getValue(cfh,    off));    [CLASS]        ZipFile    OffsetEntry    BoundedInputStream    NameAndComment    [METHOD]    populateFromCentralDirectory    [RETURN_TYPE]    Map        [VARIABLES]    byte[]    cdExtraData    cfh    comment    fileName    name    signatureBytes    boolean    addDummyByte    hasEFS    success    useUnicodeExtraFields    ZipEncoding    entryEncoding    zipEncoding    RandomAccessFile    archive    HashMap    noEFS    OffsetEntry    offset    ZipArchiveEntry    ze    String    encoding    name    Map    entries    entriesWithoutEFS    nameMap    int    BYTE_SHIFT    CFD_LOCATOR_OFFSET    CFH_LEN    HASH_SIZE    MAX_EOCD_SIZE    MIN_EOCD_SIZE    NIBLET_MASK    POS_0    POS_1    POS_2    POS_3    SHORT    WORD    commentLen    extraLen    fileNameLen    generalPurposeFlag    off    versionMadeBy    long    LFH_OFFSET_FOR_FILENAME_LENGTH    cfhSig    dataOffset    headerOffset    loc    remaining    sig    start    time        	compress_4576_ZipFile_1_1	337	1	src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java
142	[PATCH]    if    (!(s.equals(   "number   ")    ||    s.equals(   "string   ")    ||    s.equals(   "boolean   ")    ||	[BUG]    [BUGGY]    if    (!(s.equals(   "string   ")    ||    s.equals(   "boolean   ")    ||    [FE]    junit.framework.AssertionFailedError:    unexpected    warnings(s):    testTypeOfReduction1    [CONTEXT]    private    void    checkTypeofString(NodeTraversal    t,    Node    n,    String    s)    {    [BUGGY]    if    (!(s.equals(   "string   ")    ||    s.equals(   "boolean   ")    ||    [BUGGY]    s.equals(   "undefined   ")    ||    s.equals(   "function   ")    ||    s.equals(   "object   ")    ||    s.equals(   "unknown   ")))    {    validator.expectValidTypeofName(t,    n,    s);    }    }    [CLASS]        TypeCheck    [METHOD]    checkTypeofString    [RETURN_TYPE]    void        NodeTraversal    t    Node    n    String    s    [VARIABLES]    ReverseAbstractInterpreter    reverseInterpreter    NodeTraversal    t    DiagnosticGroup    ALL_DIAGNOSTICS    CheckLevel    reportMissingOverride    reportUnknownTypes    Node    n    String    OVERRIDING_PROTOTYPE_WITH_NON_OBJECT    functionPrivateName    message    s    MemoizedScopeCreator    scopeCreator    int    noTypeCheckSection    nullCount    typedCount    unknownCount    TypeValidator    validator    AbstractCompiler    compiler    JSTypeRegistry    typeRegistry    boolean    enterSection    externs    inExterns    report    reportMissingProperties    typeable    Scope    outerScope    topScope    DiagnosticType    BAD_DELETE    BAD_IMPLEMENTED_TYPE    BIT_OPERATION    CONFLICTING_EXTENDED_TYPE    CONFLICTING_IMPLEMENTED_TYPE    CONSTRUCTOR_NOT_CALLABLE    DETERMINISTIC_TEST    DETERMINISTIC_TEST_NO_RESULT    ENUM_DUP    ENUM_NOT_CONSTANT    EXPECTED_THIS_TYPE    FUNCTION_MASKS_VARIABLE    HIDDEN_INTERFACE_PROPERTY    HIDDEN_SUPERCLASS_PROPERTY    HIDDEN_SUPERCLASS_PROPERTY_MISMATCH    ILLEGAL_IMPLICIT_CAST    ILLEGAL_OBJLIT_KEY    ILLEGAL_PROPERTY_CREATION    INCOMPATIBLE_EXTENDED_PROPERTY_TYPE    INEXISTENT_ENUM_ELEMENT    INEXISTENT_PROPERTY    INTERFACE_FUNCTION_NOT_EMPTY    INTERFACE_METHOD_OVERRIDE    INVALID_INTERFACE_MEMBER_DECLARATION    IN_USED_WITH_STRUCT    MULTIPLE_VAR_DEF    NOT_A_CONSTRUCTOR    NOT_CALLABLE    UNEXPECTED_TOKEN    UNKNOWN_EXPR_TYPE    UNKNOWN_OVERRIDE    UNRESOLVED_TYPE    WRONG_ARGUMENT_COUNT    diagnosticType    InferJSDocInfo    inferJSDocInfo        	closure_14220_TypeCheck_1_1	857	1	src/com/google/javascript/jscomp/TypeCheck.java
143	[PATCH]    while    (!queue.isEmpty()    &&    (Character.isLetterOrDigit(c)    ||    c.equals('-')    ||    c.equals('_')))    {	[BUG]    [BUGGY]    while    (!queue.isEmpty()    &&    (true))    {    [FE]    junit.framework.AssertionFailedError:    expected:<12>    but    was:<0>    testGoogleSearchIpod    [CONTEXT]    public    String    consumeCssIdentifier()    {    StringBuilder    accum    =    new    StringBuilder();    Character    c    =    queue.peek();    [BUGGY]    while    (!queue.isEmpty()    &&    (true))    {    [BUGGY]    accum.append(queue.removeFirst());    c    =    queue.peek();    }    return    accum.toString();    }    [CLASS]        TokenQueue    [METHOD]    consumeCssIdentifier    [RETURN_TYPE]    String        [VARIABLES]    boolean    StringBuilder    accum    Character    c    LinkedList    queue        	jsoup_1359_TokenQueue_1_1	223	1	src/main/java/org/jsoup/parser/TokenQueue.java
144	[PATCH]    return    shortOpts.containsKey(opt)    ||    longOpts.containsKey(opt);	[BUG]    [BUGGY]    return    longOpts.containsKey(opt);    [FE]    junit.framework.AssertionFailedError:    Unexpected    exception:Unrecognized    option:    -buildfile    testAnt    [CONTEXT]    public    boolean    hasOption(String    opt)    {    opt    =    Util.stripLeadingHyphens(opt);        [BUGGY]    return    longOpts.containsKey(opt);    [BUGGY]    }    [CLASS]        Options    [METHOD]    hasOption    [RETURN_TYPE]    boolean        String    opt    [VARIABLES]    List    opts    requiredOpts    String    opt    boolean    Map    longOpts    optionGroups    shortOpts        	cli_129_Options_1_1	244	1	src/java/org/apache/commons/cli/Options.java
145	[PATCH]    if    (!deserializers.hasSpecificHandlerFor(Date.class))    {	[BUG]    [BUGGY]    if    (!true)    {    [FE]    com.google.gson.JsonSyntaxException:    java.text.ParseException:    Unparseable    date:       "2022-12-24   "    testDateDeserializationWithPattern    [CONTEXT]    if    (datePattern    !=    null    &&    !   "   ".equals(datePattern.trim()))    {    dateTypeAdapter    =    new    DefaultDateTypeAdapter(datePattern);    }    else    if    (dateStyle    !=    DateFormat.DEFAULT    &&    timeStyle    !=    DateFormat.DEFAULT)    {    dateTypeAdapter    =    new    DefaultDateTypeAdapter(dateStyle,    timeStyle);    }    if    (dateTypeAdapter    !=    null)    {    if    (!serializers.hasSpecificHandlerFor(Date.class))    {    serializers.register(Date.class,    dateTypeAdapter);    }    [BUGGY]    if    (!true)    {    [BUGGY]    deserializers.register(Date.class,    dateTypeAdapter);    }    }    }    [CLASS]        GsonBuilder    [METHOD]    addTypeAdaptersForDate    [RETURN_TYPE]    void        String    datePattern    int    dateStyle    int    timeStyle    JsonSerializer<?>>    serializers    JsonDeserializer<?>>    deserializers    [VARIABLES]    ExposeAnnotationSerializationExclusionStrategy    exposeAnnotationSerializationExclusionStrategy    ModifierBasedExclusionStrategy    modifierBasedExclusionStrategy    InnerClassExclusionStrategy    innerClassExclusionStrategy    double    ignoreVersionsAfter    LongSerializationPolicy    longSerializationPolicy    serializationPolicy    String    datePattern    pattern    DefaultDateTypeAdapter    dateTypeAdapter    int    dateStyle    style    timeStyle    ExposeAnnotationDeserializationExclusionStrategy    exposeAnnotationDeserializationExclusionStrategy    boolean    escapeHtmlChars    excludeFieldsWithoutExposeAnnotation    generateNonExecutableJson    prettyPrinting    serializeInnerClasses    serializeNulls    serializeSpecialFloatingPointValues    Collection    exclusionStrategies    FieldNamingStrategy2    fieldNamingPolicy    fieldNamingStrategy    ParameterizedTypeHandlerMap    customDeserializers    customInstanceCreators    customSerializers    deserializers    instanceCreators    serializers        	gson_1754_GsonBuilder_1_1	565	1	gson/src/main/java/com/google/gson/GsonBuilder.java
146	[PATCH]    if    (!modules.isEmpty())    {	[BUG]    [BUGGY]    if    (!true)    {    [FE]    junit.framework.ComparisonFailure:    expected:<[var    module$foo$bar={},module$foo$bar={foo:1};]>    but    was:<[]>    testModuleJSON    [CONTEXT]    cjs.process(null,    root);    JSModule    m    =    cjs.getModule();    if    (m    !=    null)    {    modulesByName.put(m.getName(),    m);    modulesByInput.put(input,    m);    }    }    }    if    (options.processCommonJSModules)    {    List<JSModule>    modules    =    Lists.newArrayList(modulesByName.values());    [BUGGY]    if    (!true)    {    [BUGGY]    this.modules    =    modules;    this.moduleGraph    =    new    JSModuleGraph(this.modules);    }    for    (JSModule    module    :    modules)    {    for    (CompilerInput    input    :    module.getInputs())    {    for    (String    require    :    input.getRequires())    {    JSModule    dependency    =    modulesByName.get(require);    if    (dependency    ==    null)    {    report(JSError.make(MISSING_ENTRY_ERROR,    require));    }    else    {    [CLASS]        Compiler    1    3    4    2    5    6    7    8    9    10    CodeBuilder    IntermediateState    [METHOD]    processAMDAndCommonJSModules    [RETURN_TYPE]    void        [VARIABLES]    FunctionInformationMap    functionInformationMap    ErrorManager    errorManager    StringBuilder    debugLog    sb    Config    parserConfig    Node    externAndJsRoot    externsRoot    jsRoot    n    n1    n2    newRoot    oldRoot    root    PerformanceTracker    tracker    PassConfig    passes    String    CONFIG_RESOURCE    SINGLETON_MODULE_NAME    SYNTHETIC_EXTERNS    comment    currentPassName    externExports    inputName    lastPassName    moduleName    name    passName    passToCheck    provide    require    LifeCycleStage    lifeCycleStage    Logger    logger    PassFactory    sanityCheck    long    COMPILER_STACK_SIZE    result    serialVersionUID    TypeValidator    typeValidator    JSTypeRegistry    typeRegistry    ErrorReporter    defaultErrorReporter    oldErrorReporter    RecentChange    recentChange    GlobalVarReferenceMap    globalRefMap    DiagnosticType    DUPLICATE_EXTERN_INPUT    DUPLICATE_INPUT    EMPTY_MODULE_LIST_ERROR    EMPTY_ROOT_MODULE_ERROR    MISSING_ENTRY_ERROR    MODULE_DEPENDENCY_ERROR    MOTION_ITERATIONS_ERROR    OPTIMIZE_LOOP_ERROR    SourceMap    sourceMap    List    codeChangeHandlers    externs    files    guards    inputs    modules    WarningsGuard    warningsGuard    ReverseAbstractInterpreter    abstractInterpreter    PrintStream    outStream    stream    double    progress    Tracer    currentTracer    t    tracer    ProcessCommonJSModules    cjs    JSModuleGraph    e    moduleGraph    int    colCount    lineCount    syntheticCodeId    uniqueNameId    Exception    e    Thread    compilerThread    CompilerInput    input    newInput    oldInput    previous    synthesizedExternsInput    boolean    colorize    devMode    dumpTraceReport    hasRegExpGlobalReferences    isExtern    staleInputs    useThreads    SortedDependencies    sorter    State    passConfigState    state    CodingConvention    defaultCodingConvention    CompilerOptions    options    ExecutorService    compilerExecutor    JSModule    dependency    m    module    root    Map    injectedLibraries    inputMap    inputsById    modulesByInput    modulesByName        	closure_6769_Compiler_1_1	1511	1	src/com/google/javascript/jscomp/Compiler.java
147	[PATCH]    if    (index    !=    WHOLE_COLLECTION    &&    isCollection())    {	[BUG]    [BUGGY]    if    (index    !=    WHOLE_COLLECTION    ==    isCollection())    {    [FE]    junit.framework.ComparisonFailure:    Evaluating    pointer    <//.[name    =    'three']>    expected:</first[/first/second]>    but    was:</first[[-2147483647]/first[-2147483647]/second[-2147483647]]>    testInfiniteDescent    [CONTEXT]    if    (buffer.length()    ==    0    ||    buffer.charAt(buffer.length()    -    1)    !=    '/')    {    buffer.append('/');    }    if    (attribute)    {    buffer.append('@');    }    buffer.append(getName());        [BUGGY]    if    (index    !=    WHOLE_COLLECTION    ==    isCollection())    {    [BUGGY]    buffer.append('[').append(index    +    1).append(']');    }    return    buffer.toString();    }    [CLASS]        NodePointer    [METHOD]    asPath    [RETURN_TYPE]    String        [VARIABLES]    Locale    loc    locale    StringBuffer    buffer    boolean    attribute    reverse    NamespaceResolver    namespaceResolver    Object    bean    rootNode    value    String    UNKNOWN_NAMESPACE    id    key    lang    name    namespace    nodeNS    nodePrefix    prefix    s1    s2    testNS    testPrefix    value    NodePointer    ivp    parent    pointer    pointer1    pointer2    startWith    valuePointer    int    WHOLE_COLLECTION    i    index        	jxpath_916_NodePointer_1_1	626	1	src/java/org/apache/commons/jxpath/ri/model/NodePointer.java
148	[PATCH]    if    (parent    !=    null    &&    parent.getIndex()    !=    WHOLE_COLLECTION)    {	[BUG]    [BUGGY]    if    (parent    !=    null)    {    [FE]    junit.framework.ComparisonFailure:    Null    path    as    path:    $testnull/nothing[2]    expected:<$testnull/nothing[][2]>    but    was:<$testnull/nothing[/.][2]>    testInterpretExpressionPath    [CONTEXT]    public    String    asPath()    {    StringBuffer    buffer    =    new    StringBuffer();    NodePointer    parent    =    getImmediateParentPointer();    if    (parent    !=    null)    {    buffer.append(parent.asPath());    }    if    (index    !=    WHOLE_COLLECTION)    {        [BUGGY]    if    (parent    !=    null)    {    [BUGGY]    buffer.append(   "/.   ");    }    else    if    (parent    !=    null    &&    parent.getImmediateParentPointer()    !=    null    &&    parent.getImmediateParentPointer().getIndex()    !=    WHOLE_COLLECTION)    {    buffer.append(   "/.   ");    }    buffer.append(   "[   ").append(index    +    1).append(']');    [CLASS]        NullElementPointer    [METHOD]    asPath    [RETURN_TYPE]    String        [VARIABLES]    StringBuffer    buffer    boolean    NodePointer    parent        	jxpath_16232_NullElementPointer_1_1	120	1	src/java/org/apache/commons/jxpath/ri/model/beans/NullElementPointer.java
149	[PATCH]    if    (o    ==    null    ||    !(o    instanceof    ZipShort))    {	[BUG]    [BUGGY]    if    (o    ==    null)    {    [FE]    java.lang.ClassCastException:    java.lang.Integer    cannot    be    cast    to    org.apache.commons.compress.archivers.zip.ZipShort    testEquals    [CONTEXT]    public    boolean    equals(Object    o)    {    [BUGGY]    if    (o    ==    null)    {    [BUGGY]    return    false;    }    return    value    ==    ((ZipShort)    o).getValue();    }    [CLASS]        ZipShort    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    o    [VARIABLES]    int    BYTE_1_MASK    BYTE_1_SHIFT    BYTE_MASK    offset    value    Object    o    boolean        	compress_1643_ZipShort_1_1	115	1	src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java
150	[PATCH]    if    (!this.domainAxisLocations.equals(that.domainAxisLocations))    {	[BUG]    [BUGGY]    if    (!false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<org.jfree.chart.JFreeChart@340c5fb6>    but    was:<org.jfree.chart.JFreeChart@69f9b561>    testSerialization4    [CONTEXT]    XYPlot    that    =    (XYPlot)    obj;    if    (this.weight    !=    that.weight)    {    return    false;    }    if    (this.orientation    !=    that.orientation)    {    return    false;    }    if    (!this.domainAxes.equals(that.domainAxes))    {    return    false;    }    [BUGGY]    if    (!false)    {    [BUGGY]    return    false;    }    if    (this.rangeCrosshairLockedOnData    !=    that.rangeCrosshairLockedOnData)    {    return    false;    }    if    (this.domainGridlinesVisible    !=    that.domainGridlinesVisible)    {    return    false;    }    if    (this.rangeGridlinesVisible    !=    that.rangeGridlinesVisible)    {    [CLASS]        XYPlot    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    Stroke    DEFAULT_CROSSHAIR_STROKE    DEFAULT_GRIDLINE_STROKE    domainCrosshairStroke    domainGridlineStroke    domainMinorGridlineStroke    domainZeroBaselineStroke    gridStroke    rangeCrosshairStroke    rangeGridlineStroke    rangeMinorGridlineStroke    rangeZeroBaselineStroke    stroke    PlotOrientation    orient    orientation    double    anchorX    anchorY    current    cursor    domainCrosshairValue    end    factor    hvalue    lowerPercent    percent    previous    rangeCrosshairValue    sourceX    sourceY    upperPercent    value    vvalue    x    xmax    xmin    xx    xxmax    xxmin    y    ymax    ymin    yy    yymax    yymin    LegendItemCollection    fixedLegendItems    items    result    Paint    DEFAULT_CROSSHAIR_PAINT    DEFAULT_GRIDLINE_PAINT    bandPaint    domainCrosshairPaint    domainGridlinePaint    domainMinorGridlinePaint    domainTickBandPaint    domainZeroBaselinePaint    gridPaint    paint    rangeCrosshairPaint    rangeGridlinePaint    rangeMinorGridlinePaint    rangeTickBandPaint    rangeZeroBaselinePaint    long    serialVersionUID    int    axisIndex    count    datasetIndex    domainAxisCount    domainIndex    firstItem    i    index    item    lastItem    pass    passCount    rangeAxisCount    rangeIndex    rendererCount    result    series    seriesCount    upper    weight    x    x0    x1    xAxisIndex    y    y0    y1    yAxisIndex    DatasetRenderingOrder    datasetRenderingOrder    order    ShadowGenerator    generator    shadowGenerator    boolean    DEFAULT_CROSSHAIR_VISIBLE    b1    b2    domainCrosshairLockedOnData    domainCrosshairVisible    domainGridlinesVisible    domainMinorGridlinesVisible    domainPannable    domainZeroBaselineVisible    fillBand    flag    foundData    isDomainAxis    notify    paintLine    pannable    rangeCrosshairLockedOnData    rangeCrosshairVisible    rangeGridlinesVisible    rangeMinorGridlinesVisible    rangePannable    rangeZeroBaselineVisible    removed    selected    somethingToDraw    useAnchor    visible    Paint[]    quadrantPaint    XYPlot    that    Point2D    anchor    origin    quadrantOrigin    source    RectangleInsets    axisOffset    insets    offset    ObjectList    datasets    domainAxes    domainAxisLocations    rangeAxes    rangeAxisLocations    renderers    ResourceBundle    localizationResources    List    annotations    axisIndices    includedAnnotations    indices    mappedAxes    mappedDatasets    result    ticks    Object    obj    AxisSpace    fixedDomainAxisSpace    fixedRangeAxisSpace    space    SeriesRenderingOrder    order    seriesOrder    seriesRenderingOrder    Map    axisStateMap    backgroundDomainMarkers    backgroundRangeMarkers    datasetToDomainAxesMap    datasetToRangeAxesMap    foregroundDomainMarkers    foregroundRangeMarkers        	chart_6256_XYPlot_1_1	5446	1	source/org/jfree/chart/plot/XYPlot.java
151	[PATCH]    (ch3    ==    's'    ||    ch3    ==    'S')    &&	[BUG]    [BUGGY]    (ch3    ==    's')    &&    [FE]    junit.framework.AssertionFailedError:    expected:<false>    but    was:<null>    test_toBooleanObject_String    [CONTEXT]    if    ((ch0    ==    'f'    ||    ch0    ==    'F')    &&    (ch1    ==    'a'    ||    ch1    ==    'A')    &&    (ch2    ==    'l'    ||    ch2    ==    'L')    &&    [BUGGY]    (ch3    ==    's')    &&    [BUGGY]    (ch4    ==    'e'    ||    ch4    ==    'E')    )    {    return    Boolean.FALSE;    }    [CLASS]        BooleanUtils    [METHOD]    toBooleanObject    [RETURN_TYPE]    Boolean        String    str    [VARIABLES]    boolean    char    ch0    ch1    ch2    ch3    ch4    String    str        	lang_3904_BooleanUtils_1_1	622	1	src/main/java/org/apache/commons/lang3/BooleanUtils.java
152	[PATCH]    if    (!_class.isAssignableFrom(subclass))    {	[BUG]    [BUGGY]    if    (!true)    {    [FE]    junit.framework.AssertionFailedError:    Expected    an    exception    with    one    of    substrings    ([is    not    assignable    to]):    got    one    with    message       "Unrecognized    field       "123   "    (class    com.fasterxml.jackson.databind.deser.TestValueAnnotations$BrokenMapKeyHolder),    not    marked    as    ignorable    (one    known    property:       "strings   "])    testOverrideKeyClassInvalid    [CONTEXT]    protected    void    _assertSubclass(Class<?>    subclass,    Class<?>    superClass)    {    [BUGGY]    if    (!true)    {    [BUGGY]    throw    new    IllegalArgumentException(   "Class       "+subclass.getName()+   "    is    not    assignable    to       "+_class.getName());    }    }    [CLASS]        JavaType    [METHOD]    _assertSubclass    [RETURN_TYPE]    void        Class<?>    subclass    Class<?>    superClass    [VARIABLES]    Class    _class    clz    contentClass    raw    subclass    superClass    superclass    Object    _typeHandler    _valueHandler    h    typeHandler    valueHandler    boolean    _asStatic    asStatic    long    serialVersionUID    int    _hashCode    additionalHash    index    mod        	jacksondatabind_173_JavaType_1_1	427	1	src/main/java/com/fasterxml/jackson/databind/JavaType.java
153	[PATCH]    &&    (lastChar    ==    '\n'    ||    lastChar    ==    '\r'    ||    lastChar    ==    ExtendedBufferedReader.UNDEFINED)	[BUG]    [BUGGY]    &&    (lastChar    ==    '\n'    ||    lastChar    ==    '\r')    [FE]    junit.framework.AssertionFailedError:    expected:<3>    but    was:<4>    testIgnoreEmptyLines    [CONTEXT]                int    c    =    in.read();    boolean    eol    =    isEndOfLine(c);    c    =    in.readAgain();        if    (emptyLinesIgnored)    {    while    (eol    [BUGGY]    &&    (lastChar    ==    '\n'    ||    lastChar    ==    '\r')    [BUGGY]    &&    !isEndOfFile(lastChar))    {        lastChar    =    c;    c    =    in.read();    eol    =    isEndOfLine(c);    c    =    in.readAgain();        if    (isEndOfFile(c))    {    tkn.type    =    EOF;        [CLASS]        CSVLexer    [METHOD]    nextToken    [RETURN_TYPE]    Token        Token    tkn    [VARIABLES]    boolean    eol    Token    tkn    int    c    lastChar        	csv_110_CSVLexer_1_1	58	1	src/main/java/org/apache/commons/csv/CSVLexer.java
154	[PATCH]    if    (isEmptyType()    ||    that.isEmptyType())    {	[BUG]    [BUGGY]    if    (isEmptyType())    {    [FE]    junit.framework.AssertionFailedError:    unexpected    warnings(s):    testBug901455    [CONTEXT]    public    final    boolean    canTestForShallowEqualityWith(JSType    that)    {    [BUGGY]    if    (isEmptyType())    {    [BUGGY]    return    isSubtype(that)    ||    that.isSubtype(this);    }    JSType    inf    =    getGreatestSubtype(that);    return    !inf.isEmptyType()    ||                    inf    ==    registry.getNativeType(JSTypeNative.LEAST_FUNCTION_TYPE);    [CLASS]        JSType    1    TypePair    [METHOD]    canTestForShallowEqualityWith    [RETURN_TYPE]    boolean        JSType    that    [VARIABLES]    JSTypeRegistry    registry    boolean    aIsEmpty    bIsEmpty    inTemplatedCheckVisit    paramsMatch    resolved    result    thatUnknown    thisUnknown    JSType    aType    autobox    bType    inf    meet    otherType    resolveResult    restricted    t1    t2    templatizedType    templatizedType1    templatizedType2    that    thatRootType    thisRootType    type    type1    type2    typeA    typeB    ImmutableList    templateKeys    templatizedTypes    templatizedTypes1    templatizedTypes2    CanCastToVisitor    CAN_CAST_TO_VISITOR    String    EMPTY_TYPE_COMPONENT    NOT_A_CLASS    NOT_A_TYPE    UNKNOWN_NAME    displayName    key    pname    propertyName    long    serialVersionUID    int    ENUMDECL    NOT_ENUMDECL    i    index    keysLength    nTemplatizedTypes1    nTemplatizedTypes2    typesLength    Comparator    ALPHA        	closure_5827_JSType_1_1	976	1	src/com/google/javascript/rhino/jstype/JSType.java
155	[PATCH]    if    ((node.isAnd())    ||    (node.isOr()))    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError:    testHiddenSideEffect    [CONTEXT]    if    (node.isFunction())    {    return    false;    }        if    (node.isHook())    {    return    processHook(node);    }            [BUGGY]    if    (true)    {    [BUGGY]    return    processShortCircuitExpression(node);    }    if    (!NodeUtil.nodeTypeMayHaveSideEffects(node,    compiler))    {    return    true;    }    else    {            if    (node.isCall())    {    [CLASS]        GatherSideEffectSubexpressionsCallback    GetReplacementSideEffectSubexpressions    [METHOD]    shouldTraverse    [RETURN_TYPE]    boolean        NodeTraversal    traversal    Node    node    Node    parent    [VARIABLES]    AbstractCompiler    compiler    Set    FORBIDDEN_TYPES    boolean    SideEffectAccumulator    accumulator    NodeTraversal    traversal    Node    node    parent    List    parts    replacements        	closure_30434_GatherSideEffectSubexpressionsCallback_1_1	247	1	src/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallback.java
156	[PATCH]    if    ((injectId    ==    null)    &&    (name    ==    null    ||    name.length()    ==    0))    {    //    not    property    based	[BUG]    [BUGGY]    if    (false)    {    //    not    property    based    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Can    not    instantiate    value    of    type    [simple    type,    class    com.fasterxml.jackson.databind.TestObjectMapperBeanDeserializer$FactoryValueBean]    from    Long    integral    number;    no    single-long-arg    constructor/factory    method    testFromLongFactory    [CONTEXT]    }    continue;    }        if    (argCount    ==    1)    {    AnnotatedParameter    param    =    factory.getParameter(0);    PropertyName    pn    =    (param    ==    null)    ?    null    :    intr.findNameForDeserialization(param);    String    name    =    (pn    ==    null)    ?    null    :    pn.getSimpleName();    Object    injectId    =    intr.findInjectableValueId(param);        [BUGGY]    if    (false)    {        [BUGGY]    _handleSingleArgumentFactory(config,    beanDesc,    vchecker,    intr,    creators,    factory,    isCreator);        continue;    }        }    else    {        if    (!intr.hasCreatorAnnotation(factory))    {    continue;    [CLASS]        BasicDeserializerFactory    [METHOD]    _addDeserializerFactoryMethods    [RETURN_TYPE]    void        DeserializationContext    ctxt    BeanDescription    beanDesc    VisibilityChecker<?>    vchecker    AnnotationIntrospector    intr    CreatorCollector    creators    [VARIABLES]    PropertyName    pn    CreatorProperty[]    properties    DeserializerFactoryConfig    _factoryConfig    config    AnnotatedMethod    factory    HashMap    _collectionFallbacks    _mapFallbacks    AnnotatedParameter    nonAnnotatedParam    param    BeanDescription    beanDesc    AnnotationIntrospector    intr    DeserializationConfig    config    String    name    int    argCount    i    injectCount    namedCount    boolean    isCreator    VisibilityChecker    vchecker    DeserializationContext    ctxt    Class    CLASS_CHAR_BUFFER    CLASS_ITERABLE    CLASS_OBJECT    CLASS_STRING    currClass    instClass    nextCls    prevCls    type    CreatorCollector    creators    Object    injectId        	jacksondatabind_5789_BasicDeserializerFactory_1_1	530	1	src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java
157	[PATCH]    printSettings.setMultiline(wanted.toString().contains(   "\n   ")    ||    actual.toString().contains(   "\n   "));	[BUG]    [BUGGY]    printSettings.setMultiline(true);    [FE]    junit.framework.AssertionFailedError:    shouldPrintBothInSingleLineWhenBothAreShort    [CONTEXT]    public    SmartPrinter(PrintingFriendlyInvocation    wanted,    PrintingFriendlyInvocation    actual,    Integer    ...    indexesOfMatchersToBeDescribedWithExtraTypeInfo)    {    PrintSettings    printSettings    =    new    PrintSettings();    [BUGGY]    printSettings.setMultiline(true);    [BUGGY]    printSettings.setMatchersToBeDescribedWithExtraTypeInfo(indexesOfMatchersToBeDescribedWithExtraTypeInfo);    this.wanted    =    wanted.toString(printSettings);    this.actual    =    actual.toString(printSettings);    }    [CLASS]        SmartPrinter    [METHOD]    <init>    [RETURN_TYPE]    Integer[])        PrintingFriendlyInvocation    wanted    PrintingFriendlyInvocation    actual    indexesOfMatchersToBeDescribedWithExtraTypeInfo    [VARIABLES]    PrintSettings    printSettings    String    actual    wanted    PrintingFriendlyInvocation    actual    wanted    boolean    Integer[]    indexesOfMatchersToBeDescribedWithExtraTypeInfo        	mockito_1779_SmartPrinter_1_1	20	1	src/org/mockito/internal/reporting/SmartPrinter.java
158	[PATCH]    if    (!lname.equals(   "*   "))    {	[BUG]    [BUGGY]    if    (!false)    {    [FE]    junit.framework.AssertionFailedError:    Evaluating    value    iterator    <vendor/location[1]/@*>    expected:<[,    100,    local]>    but    was:<[]>    testAxisAttribute    [CONTEXT]    public    DOMAttributeIterator(NodePointer    parent,    QName    name)    {    this.parent    =    parent;    this.name    =    name;    attributes    =    new    ArrayList();    Node    node    =    (Node)    parent.getNode();    if    (node.getNodeType()    ==    Node.ELEMENT_NODE)    {    String    lname    =    name.getName();    [BUGGY]    if    (!false)    {    [BUGGY]    Attr    attr    =    getAttribute((Element)    node,    name);    if    (attr    !=    null)    {    attributes.add(attr);    }    }    else    {    NamedNodeMap    map    =    node.getAttributes();    int    count    =    map.getLength();    for    (int    i    =    0;    i    <    count;    i++)    {    Attr    attr    =    (Attr)    map.item(i);    [CLASS]        DOMAttributeIterator    [METHOD]    <init>    [RETURN_TYPE]    QName)        NodePointer    parent    QName    name    [VARIABLES]    NamedNodeMap    map    boolean    QName    name    Node    node    List    attributes    NodePointer    parent    String    lname    int    count    i    position    Attr    attr        	jxpath_16396_DOMAttributeIterator_1_1	49	1	src/java/org/apache/commons/jxpath/ri/model/dom/DOMAttributeIterator.java
159	[PATCH]    while    (!queue.isEmpty()    &&    (Character.isLetterOrDigit(c)    ||    c.equals('-')    ||    c.equals('_')))    {	[BUG]    [BUGGY]    while    ((Character.isLetterOrDigit(c)    ||    c.equals('-')    ||    c.equals('_')))    {    [FE]    java.lang.NullPointerException    filter    [CONTEXT]    public    String    consumeCssIdentifier()    {    StringBuilder    accum    =    new    StringBuilder();    Character    c    =    queue.peek();    [BUGGY]    while    ((Character.isLetterOrDigit(c)    ||    c.equals('-')    ||    c.equals('_')))    {    [BUGGY]    accum.append(queue.removeFirst());    c    =    queue.peek();    }    return    accum.toString();    }    [CLASS]        TokenQueue    [METHOD]    consumeCssIdentifier    [RETURN_TYPE]    String        [VARIABLES]    boolean    StringBuilder    accum    Character    c    LinkedList    queue        	jsoup_1363_TokenQueue_1_1	223	1	src/main/java/org/jsoup/parser/TokenQueue.java
160	[PATCH]    }    else    if    (!firstChunk.isEmpty())    {	[BUG]    [BUGGY]    }    else    if    (!false)    {    [FE]    junit.framework.AssertionFailedError:    shouldPersistRecalculatedArticle    [CONTEXT]    private    List<Invocation>    getFirstMatchingChunk(InvocationMatcher    wanted,    List<Invocation>    unverified)    {    List<Invocation>    firstChunk    =    new    LinkedList<Invocation>();    for    (Invocation    invocation    :    unverified)    {    if    (wanted.matches(invocation))    {    firstChunk.add(invocation);    [BUGGY]    }    else    if    (!false)    {    [BUGGY]    break;    }    }    return    firstChunk;    }    [CLASS]        InvocationsFinder    RemoveNotMatching    RemoveUnverifiedInOrder    [METHOD]    getFirstMatchingChunk    [RETURN_TYPE]    List        InvocationMatcher    wanted    Invocation>    unverified    [VARIABLES]    InvocationMatcher    wanted    List    firstChunk    unverified    boolean    InOrderContext    context    orderingContext    Invocation    invocation        	mockito_910_InvocationsFinder_1_1	58	1	src/org/mockito/internal/invocation/InvocationsFinder.java
161	[PATCH]    if    (isAutoRange())    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<0.9465508226401592>    but    was:<0.9999999945>    testXYAutoRange1    [CONTEXT]    public    void    configure()    {    [BUGGY]    if    (false)    {    [BUGGY]    autoAdjustRange();    }    }    [CLASS]        NumberAxis    [METHOD]    configure    [RETURN_TYPE]    void        [VARIABLES]    RangeType    rangeType    boolean    DEFAULT_AUTO_RANGE_INCLUDES_ZERO    DEFAULT_AUTO_RANGE_STICKY_ZERO    DEFAULT_VERTICAL_TICK_LABELS    autoRangeIncludesZero    autoRangeStickyZero    flag    notify    turnOffAutoSelect    MarkerAxisBand    band    markerBand    long    serialVersionUID    NumberTickUnit    DEFAULT_TICK_UNIT    tickUnit    unit    NumberFormat    formatter    numberFormatOverride        	chart_19941_NumberAxis_1_1	416	1	source/org/jfree/chart/axis/NumberAxis.java
162	[PATCH]    if    (value    ==    null    ||    (token    !=    JsonToken.STRING    &&    token    !=    JsonToken.NUMBER))    {	[BUG]    [BUGGY]    if    (value    ==    null    ||    (token    !=    JsonToken.NUMBER))    {    [FE]    java.lang.IllegalStateException:    Expected    a    string    but    was    STRING    testParseComments    [CONTEXT]    public    String    nextString()    throws    IOException    {    peek();    [BUGGY]    if    (value    ==    null    ||    (token    !=    JsonToken.NUMBER))    {    [BUGGY]    throw    new    IllegalStateException(   "Expected    a    string    but    was       "    +    peek());    }    String    result    =    value;    advance();    return    result;    }    [CLASS]        JsonReader    [METHOD]    nextString    [RETURN_TYPE]    String        [VARIABLES]    boolean    hasToken    lenient    skipping    Reader    in    List    stack    JsonToken    expected    firstToken    result    token    String    name    result    value    int    i    limit    pos    char[]    NON_EXECUTE_PREFIX    buffer        	gson_1085_JsonReader_1_1	461	1	gson/src/main/java/com/google/gson/stream/JsonReader.java
163	[PATCH]    if    (raw    ==    null    ||    raw.length    ==    0)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.ComparisonFailure:    expected:<[00000000]>    but    was:<[]>    testToAsciiBytes    [CONTEXT]    public    static    byte[]    toAsciiBytes(byte[]    raw)    {    [BUGGY]    if    (true)    {    [BUGGY]    return    EMPTY_BYTE_ARRAY;    }        byte[]    l_ascii    =    new    byte[raw.length    <<    3];                    for    (int    ii    =    0,    jj    =    l_ascii.length    -    1;    ii    <    raw.length;    ii++,    jj    -=    8)    {    for    (int    bits    =    0;    bits    <    BITS.length;    ++bits)    {    [CLASS]        BinaryCodec    [METHOD]    toAsciiBytes    [RETURN_TYPE]    byte[]        byte[]    raw    [VARIABLES]    byte[]    EMPTY_BYTE_ARRAY    ascii    l_ascii    l_raw    raw    int[]    BITS    boolean    int    BIT_0    BIT_1    BIT_2    BIT_3    BIT_4    BIT_5    BIT_6    BIT_7    bits    ii    jj    char[]    EMPTY_CHAR_ARRAY    ascii        	codec_965_BinaryCodec_1_1	223	1	src/java/org/apache/commons/codec/binary/BinaryCodec.java
164	[PATCH]    if    (escape    !=    DISABLED    &&    escape    ==    commentStart)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError    testValidation    [CONTEXT]    }    if    (delimiter    ==    commentStart)    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    delimiter    cannot    be    the    same    (\   "   "    +    commentStart    +       "\   ")   ");    }    if    (encapsulator    !=    DISABLED    &&    encapsulator    ==    commentStart)    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    encapsulator    cannot    be    the    same    (\   "   "    +    commentStart    +       "\   ")   ");    }        [BUGGY]    if    (false)    {    [BUGGY]    throw    new    IllegalArgumentException(   "The    comment    start    and    the    escape    character    cannot    be    the    same    (\   "   "    +    commentStart    +       "\   ")   ");    }    }    [CLASS]        CSVFormat    [METHOD]    validate    [RETURN_TYPE]    void        [VARIABLES]    char    DISABLED    c    commentStart    delimiter    encapsulator    escape    CSVFormat    DEFAULT    EXCEL    MYSQL    PRISTINE    RFC4180    TDF    boolean    emptyLinesIgnored    surroundingSpacesIgnored    String    CRLF    lineSeparator    String[]    header        	csv_42_CSVFormat_1_1	192	1	src/main/java/org/apache/commons/csv/CSVFormat.java
165	[PATCH]    if    (isLineBreak(escape))    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError    testValidation    [CONTEXT]    public    CSVFormat    withEscape(char    escape)    {    [BUGGY]    if    (false)    {    [BUGGY]    throw    new    IllegalArgumentException(   "The    escape    character    cannot    be    a    line    break   ");    }    return    new    CSVFormat(delimiter,    encapsulator,    commentStart,    escape,    surroundingSpacesIgnored,    emptyLinesIgnored,    lineSeparator,    header);    }    [CLASS]        CSVFormat    [METHOD]    withEscape    [RETURN_TYPE]    CSVFormat        char    escape    [VARIABLES]    char    DISABLED    c    commentStart    delimiter    encapsulator    escape    CSVFormat    DEFAULT    EXCEL    MYSQL    PRISTINE    RFC4180    TDF    boolean    emptyLinesIgnored    surroundingSpacesIgnored    String    CRLF    lineSeparator    String[]    header        	csv_57_CSVFormat_1_1	299	1	src/main/java/org/apache/commons/csv/CSVFormat.java
166	[PATCH]    if    (ns    ==    null    ||    ns.isEmpty())    {	[BUG]    [BUGGY]    if    (ns    ==    null    !=    ns.isEmpty())    {    [FE]    java.lang.NullPointerException    testRenamedRootItem    [CONTEXT]    protected    QName    _rootNameFromConfig()    {    PropertyName    name    =    _config.getFullRootName();    if    (name    ==    null)    {    return    null;    }    String    ns    =    name.getNamespace();    [BUGGY]    if    (ns    ==    null    !=    ns.isEmpty())    {    [BUGGY]    return    new    QName(name.getSimpleName());    }    return    new    QName(ns,    name.getSimpleName());    }    [CLASS]        XmlSerializerProvider    [METHOD]    _rootNameFromConfig    [RETURN_TYPE]    QName        [VARIABLES]    XmlRootNameLookup    _rootNameLookup    rootNames    PropertyName    name    String    ns    boolean    QName    ROOT_NAME_FOR_NULL    rootName    long    serialVersionUID        	jacksonxml_2040_XmlSerializerProvider_1_1	248	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java
167	[PATCH]    if    ((symb    !=    'C')    &&    (isPreviousChar(    local,    n,    symb    ))    )    {	[BUG]    [BUGGY]    if    (false    )    {    [FE]    junit.framework.AssertionFailedError:    Source:    Paris,    should    have    same    Metaphone    as:    Perris    testIsMetaphoneEqualParis    [CONTEXT]    while    ((code.length()    <    this.getMaxCodeLen())    &&    (n    <    wdsz)    )    {    char    symb    =    local.charAt(n)    ;        [BUGGY]    if    (false    )    {    [BUGGY]    n++    ;    }    else    {    switch(symb)    {    case    'A'    :    case    'E'    :    case    'I'    :    case    'O'    :    case    'U'    :    if    (n    ==    0)    {    code.append(symb);    }    break    ;    case    'B'    :    if    (    isPreviousChar(local,    n,    'M')    &&    [CLASS]        Metaphone    [METHOD]    metaphone    [RETURN_TYPE]    String        String    txt    [VARIABLES]    char    symb    StringBuffer    code    local    String    FRONTV    VARSON    VOWELS    txt    boolean    hard    int    maxCodeLen    n    wdsz    char[]    inwd        	codec_3466_Metaphone_1_1	140	1	src/java/org/apache/commons/codec/language/Metaphone.java
168	[PATCH]    if    (c    ==    '\n'    ||    c    ==    '\r'    ||    c    ==    encapsulator    ||    c    ==    delim)    {	[BUG]    [BUGGY]    if    (c    ==    '\n'    ||    c    ==    encapsulator    ||    c    ==    delim)    {    [FE]    junit.framework.AssertionFailedError    testRandom    [CONTEXT]    quote    =    true;        }    else    if    (c    <=    '#')    {                quote    =    true;    }    else    {    while    (pos    <    end)    {    c    =    value.charAt(pos);    [BUGGY]    if    (c    ==    '\n'    ||    c    ==    encapsulator    ||    c    ==    delim)    {    [BUGGY]    quote    =    true;    break;    }    pos++;    }    if    (!quote)    {    pos    =    end    -    1;    c    =    value.charAt(pos);        [CLASS]        CSVPrinter    [METHOD]    printAndEncapsulate    [RETURN_TYPE]    void        CharSequence    value    int    offset    int    len    [VARIABLES]    CharSequence    value    char    c    delim    encapsulator    CSVFormat    format    boolean    first    newLine    quote    int    end    len    offset    pos    start    Appendable    out        	csv_629_CSVPrinter_1_1	227	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
169	[PATCH]    if    (o1    ==    null    ||    o2    ==    null)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    Argument(s)    are    different!    Wanted:    shouldAllowVerifyingInThreads    [CONTEXT]    public    static    boolean    areEqual(Object    o1,    Object    o2)    {    [BUGGY]    if    (true)    {    [BUGGY]    return    o1    ==    null    &&    o2    ==    null;    }    else    if    (isArray(o1))    {    return    isArray(o2)    &&    areArraysEqual(o1,    o2);    }    else    {    return    o1.equals(o2);    }    }    [CLASS]        Equality    [METHOD]    areEqual    [RETURN_TYPE]    boolean        Object    o1    Object    o2    [VARIABLES]    boolean    Object    o1    o2        	mockito_1137_Equality_1_1	13	1	src/org/mockito/internal/matchers/Equality.java
170	[PATCH]    return    Enhancer.isEnhanced(mock.getClass())    &&    getInterceptor(mock)    !=    null;	[BUG]    [BUGGY]    return    getInterceptor(mock)    !=    null;    [FE]    java.lang.Exception:    Unexpected    exception,    expected<org.mockito.exceptions.misusing.NotAMockException>    but    was<java.lang.ClassCastException>    shouldValidateMockWhenVerifying    [CONTEXT]    private    <T>    boolean    isMockitoMock(T    mock)    {    [BUGGY]    return    getInterceptor(mock)    !=    null;    [BUGGY]    }    [CLASS]        MockUtil    [METHOD]    isMockitoMock    [RETURN_TYPE]    <T>        T    mock    [VARIABLES]    T    mock    MockCreationValidator    creationValidator    boolean        	mockito_369_MockUtil_1_1	84	1	src/org/mockito/internal/util/MockUtil.java
171	[PATCH]    if    (jj_scan_token(PLUS))    return    true;	[BUG]    [BUGGY]    if    (true)    return    true;    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    '(3    +    1)    +    4'.    Syntax    error    at    the    beginning    of    the    expression    testCoreOperationSum    [CONTEXT]    return    false;    }    final    private    boolean    jj_3R_149()    {    if    (jj_scan_token(AXIS_ANCESTOR_OR_SELF))    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_163()    {    [BUGGY]    if    (true)    return    true;    [BUGGY]    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    if    (jj_3R_162())    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_22()    {    if    (jj_scan_token(TEXT))    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    [CLASS]    	jxpath_3471_XPathParser_1_1	2366	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java
172	[PATCH]    if    (java.nio.charset.Charset.class.isAssignableFrom(raw))    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.ComparisonFailure:    expected:<[   "UTF-8   "]>    but    was:<[{   "registered   ":true}]>    testCharset    [CONTEXT]    Class<?>    raw    =    type.getRawClass();        if    (InetAddress.class.isAssignableFrom(raw))    {    return    InetAddressSerializer.instance;    }        if    (TimeZone.class.isAssignableFrom(raw))    {    return    TimeZoneSerializer.instance;    }        [BUGGY]    if    (false)    {    [BUGGY]    return    ToStringSerializer.instance;    }        JsonSerializer<?>    ser    =    findOptionalStdSerializer(prov,    type,    beanDesc,    staticTyping);    if    (ser    !=    null)    {    return    ser;    }    if    (Number.class.isAssignableFrom(raw))    {    [CLASS]        BasicSerializerFactory    [METHOD]    findSerializerByPrimaryType    [RETURN_TYPE]    JsonSerializer        SerializerProvider    prov    JavaType    type    BeanDescription    beanDesc    boolean    staticTyping    [VARIABLES]    SerializerFactoryConfig    _factoryConfig    config    JavaType    type    boolean    staticTyping    HashMap    _concrete    _concreteLazy    BeanDescription    beanDesc    Class    raw    JsonSerializer    ser    SerializerProvider    prov        	jacksondatabind_12020_BasicSerializerFactory_1_1	372	1	src/main/java/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java
173	[PATCH]    if    (!methodNameEquals    ||    !isUnverified    ||    !mockIsTheSame)    {	[BUG]    [BUGGY]    if    ((!methodNameEquals    ||    !isUnverified)    !=    !mockIsTheSame)    {    [FE]    junit.framework.AssertionFailedError    shouldNotBeSimilarToVerifiedInvocation    [CONTEXT]    public    boolean    hasSimilarMethod(Invocation    candidate)    {    String    wantedMethodName    =    getMethod().getName();    String    currentMethodName    =    candidate.getMethod().getName();    final    boolean    methodNameEquals    =    wantedMethodName.equals(currentMethodName);    final    boolean    isUnverified    =    !candidate.isVerified();    final    boolean    mockIsTheSame    =    getInvocation().getMock()    ==    candidate.getMock();    final    boolean    methodEquals    =    hasSameMethod(candidate);        [BUGGY]    if    ((!methodNameEquals    ||    !isUnverified)    !=    !mockIsTheSame)    {    [BUGGY]    return    false;    }    final    boolean    overloadedButSameArgs    =    !methodEquals    &&    safelyArgumentsMatch(candidate.getArguments());    return    !overloadedButSameArgs;    }    [CLASS]        InvocationMatcher    [METHOD]    hasSimilarMethod    [RETURN_TYPE]    boolean        Invocation    candidate    [VARIABLES]    List    matchers    String    currentMethodName    wantedMethodName    boolean    isUnverified    methodEquals    methodNameEquals    mockIsTheSame    overloadedButSameArgs    Invocation    actual    candidate    invocation    long    serialVersionUID        	mockito_182_InvocationMatcher_1_1	83	1	src/org/mockito/internal/invocation/InvocationMatcher.java
174	[PATCH]    }    else    if    (ctxt.inObject())    {	[BUG]    [BUGGY]    }    else    if    (true)    {    [FE]    com.fasterxml.jackson.core.JsonGenerationException:    Current    context    not    an    object    but    ROOT    testRoundtrip    [CONTEXT]                    if    (isEnabled(JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT))    {    try    {    while    (true)    {    JsonStreamContext    ctxt    =    getOutputContext();    if    (ctxt.inArray())    {    writeEndArray();    [BUGGY]    }    else    if    (true)    {    [BUGGY]    writeEndObject();    }    else    {    break;    }    }    }    catch    (ArrayIndexOutOfBoundsException    e)    {                throw    new    JsonGenerationException(e);    [CLASS]        ToXmlGenerator    Feature    [METHOD]    close    [RETURN_TYPE]    void        [VARIABLES]    QName    _nextName    name    wrappedName    wrapperName    String    DEFAULT_UNKNOWN_ELEMENT    encodedValue    fieldName    name    ns    text    typeMsg    value    Feature    WRITE_XML_1_1    WRITE_XML_DECLARATION    f    int    _formatFeatures    _mask    count    flags    i    len    length    mask    newF    offset    oldF    status    stdFeatures    values    xmlFeatures    LinkedList    _elementNameStack    XMLStreamWriter2    _xmlWriter    boolean    _defaultState    _initialized    _nextIsAttribute    _nextIsCData    _nextIsUnwrapped    _stax2Emulation    defaultState    isAttribute    isCData    isUnwrapped    state    usePlain    value    XMLStreamException    e    XMLStreamWriter    _originalXmlWriter    sw    IOContext    _ioContext    ctxt    XmlPrettyPrinter    _xmlPrettyPrinter    ArrayIndexOutOfBoundsException    e    JsonStreamContext    ctxt        	jacksonxml_1061_ToXmlGenerator_1_1	1079	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java
175	[PATCH]    return    key1    ==    key2    ||    key1.equals(key2);	[BUG]    [BUGGY]    return    key1    ==    key2;    [FE]    junit.framework.AssertionFailedError:    expected:<4>    but    was:<5>    testPutAll    [CONTEXT]    protected    boolean    isEqualKey(final    Object    key1,    final    Object    key2)    {    [BUGGY]    return    key1    ==    key2;    [BUGGY]    }    [CLASS]        AbstractHashedMap    HashMapIterator    EntrySet    EntrySetIterator    KeySet    KeySetIterator    Values    ValuesIterator    HashEntry    HashIterator    [METHOD]    isEqualKey    [RETURN_TYPE]    boolean        Object    key1    Object    key2    [VARIABLES]    KeySet    keySet    AbstractHashedMap    parent    HashEntry    element    entry    last    next    previous    boolean    Values    values    Object    NULL    convertedKey    key    key1    key2    value    String    GETKEY_INVALID    GETVALUE_INVALID    NO_NEXT_ENTRY    NO_PREVIOUS_ENTRY    REMOVE_INVALID    SETVALUE_INVALID    float    DEFAULT_LOAD_FACTOR    loadFactor    int    DEFAULT_CAPACITY    DEFAULT_THRESHOLD    MAXIMUM_CAPACITY    expectedModCount    h    hashCode    hashIndex    i    index    initialCapacity    mapSize    modCount    newSize    size    threshold    HashEntry[]    data    EntrySet    entrySet        	collections_6171_AbstractHashedMap_1_1	413	1	src/main/java/org/apache/commons/collections4/map/AbstractHashedMap.java
176	[PATCH]    if    (child.tagName.equals(   "base   ")    ||    child.tagName.equals(   "script   ")    ||    child.tagName.equals(   "noscript   ")    ||    child.tagName.equals(   "link   ")    ||	[BUG]    [BUGGY]    if    (true    ||    child.tagName.equals(   "noscript   ")    ||    child.tagName.equals(   "link   ")    ||    [FE]    junit.framework.AssertionFailedError:    expected:<2>    but    was:<1>    createsDocumentStructure    [CONTEXT]    if    (this.optionalClosing    &&    this.equals(child))    return    false;    if    (this.empty    ||    this.isData())    return    false;            if    (this.tagName.equals(   "head   "))    {    [BUGGY]    if    (true    ||    child.tagName.equals(   "noscript   ")    ||    child.tagName.equals(   "link   ")    ||    [BUGGY]    child.tagName.equals(   "meta   ")    ||    child.tagName.equals(   "title   ")    ||    child.tagName.equals(   "style   ")    ||    child.tagName.equals(   "object   "))    {    return    true;    }    return    false;    }        if    (this.tagName.equals(   "dt   ")    &&    child.tagName.equals(   "dd   "))    return    false;    if    (this.tagName.equals(   "dd   ")    &&    child.tagName.equals(   "dt   "))    [CLASS]        Tag    [METHOD]    canContain    [RETURN_TYPE]    boolean        Tag    child    [VARIABLES]    List    ancestors    boolean    canContainBlock    canContainInline    empty    isBlock    optionalClosing    preserveWhitespace    Tag    child    defaultAncestor    tag    String    tagName    Map    tags        	jsoup_563_Tag_1_1	85	1	src/main/java/org/jsoup/parser/Tag.java
177	[PATCH]    if    (format.isEncapsulating())    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<[   "x,y   "],z>    but    was:<[x,y],z>    testFormat    [CONTEXT]    private    void    print(CharSequence    value,    int    offset,    int    len)    throws    IOException    {    [BUGGY]    if    (false)    {    [BUGGY]    printAndEncapsulate(value,    offset,    len);    }    else    if    (format.isEscaping())    {    printAndEscape(value,    offset,    len);    }    else    {    printSep();    out.append(value,    offset,    offset    +    len);    }    }    [CLASS]        CSVPrinter    [METHOD]    print    [RETURN_TYPE]    void        CharSequence    value    int    offset    int    len    [VARIABLES]    CharSequence    value    CSVFormat    format    boolean    newLine    int    len    offset    Appendable    out        	csv_479_CSVPrinter_1_1	132	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
178	[PATCH]    if    (!hasOption)	[BUG]    [BUGGY]    if    (!false)    [FE]    junit.framework.AssertionFailedError:    Unexpected    exception:Unrecognized    option:    -buildfile    testAnt    [CONTEXT]    {    boolean    hasOption    =    options.hasOption(arg);            [BUGGY]    if    (!false)    [BUGGY]    {    throw    new    UnrecognizedOptionException(   "Unrecognized    option:       "    +    arg);    }        final    Option    opt    =    options.getOption(arg);                [CLASS]        Parser    [METHOD]    processOption    [RETURN_TYPE]    void        String    arg    ListIterator    iter    [VARIABLES]    Options    options    opts    CommandLine    cmd    boolean    hasOption    OptionGroup    group    List    requiredOptions    tokenList    Option    opt    String    arg    ListIterator    iter        	cli_87_Parser_1_1	366	1	src/java/org/apache/commons/cli/Parser.java
179	[PATCH]    if    (!e.parent().equals(c.parent()))	[BUG]    [BUGGY]    if    (!false)    [FE]    junit.framework.AssertionFailedError:    expected:<2>    but    was:<0>    mixCombinator    [CONTEXT]    private    static    Elements    filterForAdjacentSiblings(Collection<Element>    elements,    Collection<Element>    candidates)    {    Elements    siblings    =    new    Elements();    SIBLING:    for    (Element    c:    candidates)    {    for    (Element    e:    elements)    {    [BUGGY]    if    (!false)    [BUGGY]    continue;    Element    previousSib    =    c.previousElementSibling();    if    (previousSib    !=    null    &&    previousSib.equals(e))    {    siblings.add(c);    continue    SIBLING;    }    }    }    return    siblings;    }    [CLASS]        Selector    SelectorParseException    [METHOD]    filterForAdjacentSiblings    [RETURN_TYPE]    Elements        Element>    elements    Element>    candidates    [VARIABLES]    LinkedHashSet    elements    TokenQueue    tq    boolean    Element    c    e    found    p    previousSib    root    Collection    candidates    elements    String[]    combinators    String    className    combinator    id    indexS    key    query    s    subQuery    tagName    Elements    siblings        	jsoup_1495_Selector_1_1	287	1	src/main/java/org/jsoup/select/Selector.java
180	[PATCH]    if    (validXmlNameStartChar(acc,    b))    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError    testSimpleValidPI    [CONTEXT]    if    (acc.hasMoreBytes()    &&    acc.nextByte()    ==    BYTE_m)    {    if    (acc.hasMoreBytes()    &&    acc.nextByte()    ==    BYTE_l)    {    return    MatchStrength.FULL_MATCH;    }    }    }        return    MatchStrength.SOLID_MATCH;    }        [BUGGY]    if    (false)    {    [BUGGY]    return    MatchStrength.SOLID_MATCH;    }    }    else    if    (b    ==    BYTE_EXCL)    {                if    (!acc.hasMoreBytes())    {    return    MatchStrength.INCONCLUSIVE;    }    b    =    acc.nextByte();    [CLASS]        XmlFactory    [METHOD]    hasXMLFormat    [RETURN_TYPE]    MatchStrength        InputAccessor    acc    [VARIABLES]    XMLOutputFactory    _xmlOutputFactory    f    outf    xmlOut    boolean    maybeXmlDecl    byte    BYTE_D    BYTE_EXCL    BYTE_HYPHEN    BYTE_LT    BYTE_QMARK    BYTE_l    BYTE_m    BYTE_x    UTF8_BOM_1    UTF8_BOM_2    UTF8_BOM_3    b    String    FORMAT_NAME_XML    _cfgNameForTextElement    _jdkXmlInFactory    _jdkXmlOutFactory    content    name    nameForTextElem    InputAccessor    acc    long    serialVersionUID    int    DEFAULT_XML_GENERATOR_FEATURE_FLAGS    DEFAULT_XML_PARSER_FEATURE_FLAGS    _xmlGeneratorFeatures    _xmlParserFeatures    ch    len    offset    xgFeatures    xpFeatures    XMLInputFactory    _xmlInputFactory    f    inf    xmlIn        	jacksonxml_249_XmlFactory_1_1	742	1	src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java
181	[PATCH]    if    (Character.isUpperCase(character)    &&    translation.length()    !=    0)    {	[BUG]    [BUGGY]    if    (Character.isUpperCase(character))    {    [FE]    junit.framework.ComparisonFailure:    expected:<[]Test_Name_Begins_Wit...>    but    was:<[_]Test_Name_Begins_Wit...>    testNameBeginsWithCapital    [CONTEXT]    protected    String    translateName(String    target,    Type    fieldType,    Collection<Annotation>    annnotations)    {    StringBuilder    translation    =    new    StringBuilder();    for    (int    i    =    0;    i    <    target.length();    i++)    {    char    character    =    target.charAt(i);    [BUGGY]    if    (Character.isUpperCase(character))    {    [BUGGY]    translation.append(separatorString);    }    translation.append(character);    }    return    translation.toString();    }    [CLASS]        CamelCaseSeparatorNamingPolicy    [METHOD]    translateName    [RETURN_TYPE]    String        String    target    Type    fieldType    Annotation>    annnotations    [VARIABLES]    Type    fieldType    boolean    StringBuilder    translation    char    character    Collection    annnotations    String    separatorString    target    int    i        	gson_77_CamelCaseSeparatorNamingPolicy_1_1	65	1	gson/src/main/java/com/google/gson/CamelCaseSeparatorNamingPolicy.java
182	[PATCH]    if    (c    ==    '\n'    ||    c    ==    '\r'    ||    c    ==    encapsulator    ||    c    ==    delim)    {	[BUG]    [BUGGY]    if    (true    ||    c    ==    encapsulator    ||    c    ==    delim)    {    [FE]    junit.framework.AssertionFailedError:    expected:<[a,b,c]>    but    was:<[   "a   ",   "b   ",   "c   "]>    testFormat    [CONTEXT]    quote    =    true;        }    else    if    (c    <=    '#')    {                quote    =    true;    }    else    {    while    (pos    <    end)    {    c    =    value.charAt(pos);    [BUGGY]    if    (true    ||    c    ==    encapsulator    ||    c    ==    delim)    {    [BUGGY]    quote    =    true;    break;    }    pos++;    }    if    (!quote)    {    pos    =    end    -    1;    c    =    value.charAt(pos);        [CLASS]        CSVPrinter    [METHOD]    printAndEncapsulate    [RETURN_TYPE]    void        CharSequence    value    int    offset    int    len    [VARIABLES]    CharSequence    value    char    c    delim    encapsulator    CSVFormat    format    boolean    first    newLine    quote    int    end    len    offset    pos    start    Appendable    out        	csv_631_CSVPrinter_1_1	227	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
183	[PATCH]    }    else    if    (tq.matchesWord())    {	[BUG]    [BUGGY]    }    else    if    (false)    {    [FE]    org.jsoup.select.Selector$SelectorParseException:    Could    not    parse    query    html    testYahooJp    [CONTEXT]    private    Elements    findElements()    {    if    (tq.matchChomp(   "#   "))    {    return    byId();    }    else    if    (tq.matchChomp(   ".   "))    {    return    byClass();    [BUGGY]    }    else    if    (false)    {    [BUGGY]    return    byTag();    }    else    if    (tq.matchChomp(   "[   "))    {    return    byAttribute();    }    else    if    (tq.matchChomp(   "*   "))    {    return    allElements();    }    else    if    (tq.matchChomp(   ":lt(   "))    {    return    indexLessThan();    }    else    if    (tq.matchChomp(   ":gt(   "))    {    return    indexGreaterThan();    }    else    if    (tq.matchChomp(   ":eq(   "))    {    [CLASS]        Selector    SelectorParseException    [METHOD]    findElements    [RETURN_TYPE]    Elements        [VARIABLES]    LinkedHashSet    elements    TokenQueue    tq    String[]    combinators    String    combinator    query    s    subQuery    boolean    Element    root        	jsoup_1448_Selector_1_1	148	1	src/main/java/org/jsoup/select/Selector.java
184	[PATCH]    if    (ch    <    '0'    ||    ch    >    '9')    {	[BUG]    [BUGGY]    if    (ch    >    '9')    {    [FE]    com.fasterxml.jackson.core.JsonParseException:    Invalid    numeric    value:    Leading    zeroes    not    allowed    testLongWrite    [CONTEXT]    {        if    (_inputPtr    >=    _inputEnd    &&    !loadMore())    {    return    '0';    }    char    ch    =    _inputBuffer[_inputPtr];        [BUGGY]    if    (ch    >    '9')    {    [BUGGY]    return    '0';    }    if    (!isEnabled(Feature.ALLOW_NUMERIC_LEADING_ZEROS))    {    reportInvalidNumber(   "Leading    zeroes    not    allowed   ");    }        ++_inputPtr;    if    (ch    ==    INT_0)    {    while    (_inputPtr    <    _inputEnd    ||    loadMore())    {    ch    =    _inputBuffer[_inputPtr];    [CLASS]        ReaderBasedJsonParser    [METHOD]    _verifyNoLeadingZeroes    [RETURN_TYPE]    char        [VARIABLES]    boolean    _tokenIncomplete    eof    inObject    negative    char    ch    Reader    _reader    r    ObjectCodec    _objectCodec    c    codec    CharsToNameCanonicalizer    _symbols    st    int    _hashSeed    bits    ch    count    decodedData    defaultValue    expLen    features    fractLen    i    inputLen    intLen    len    nameLen    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    startPtr    char[]    _inputBuffer    buf    outBuf        	jacksoncore_8212_ReaderBasedJsonParser_1_1	1096	1	src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
185	[PATCH]    if    (!TypeUtil.isIndexedType(type))    {	[BUG]    [BUGGY]    if    (!true)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Current    state    not    XML_START_ELEMENT    (1)    but    3    (through    reference    chain:    com.fasterxml.jackson.dataformat.xml.jaxb.Company[   "computers   "]->java.util.ArrayList[0])    testPolyIdList178    [CONTEXT]        Iterator<SettableBeanProperty>    it    =    newDelegatee.properties();    HashSet<String>    unwrappedNames    =    null;    while    (it.hasNext())    {    SettableBeanProperty    prop    =    it.next();                JavaType    type    =    prop.getType();    [BUGGY]    if    (!true)    {    [BUGGY]    continue;    }    PropertyName    wrapperName    =    prop.getWrapperName();        if    (wrapperName    !=    null    &&    wrapperName    !=    PropertyName.NO_NAME)    {    continue;    }    if    (unwrappedNames    ==    null)    {    unwrappedNames    =    new    HashSet<String>();    }    [CLASS]        WrapperHandlingDeserializer    [METHOD]    createContextual    [RETURN_TYPE]    JsonDeserializer        DeserializationContext    ctxt    BeanProperty    property    [VARIABLES]    PropertyName    wrapperName    JavaType    _type    type    Set    _namesToWrap    namesToWrap    BeanDeserializerBase    newDelegatee    boolean    SettableBeanProperty    prop    Iterator    it    DeserializationContext    ctxt    JsonDeserializer    del    long    serialVersionUID    BeanProperty    property    HashSet    unwrappedNames        	jacksonxml_1548_WrapperHandlingDeserializer_1_1	88	1	src/main/java/com/fasterxml/jackson/dataformat/xml/deser/WrapperHandlingDeserializer.java
186	[PATCH]    if    (_mayBeLeaf)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.ComparisonFailure:    expected:<[content]>    but    was:<[]>    testRoundtrip    [CONTEXT]    _parsingContext    =    _parsingContext.createChildObjectContext(-1,    -1);    return    (_currToken    =    JsonToken.START_OBJECT);    }    _parsingContext.setCurrentName(_xmlTokens.getLocalName());    return    (_currToken    =    JsonToken.FIELD_NAME);    case    XmlTokenStream.XML_ATTRIBUTE_VALUE:    _currText    =    _xmlTokens.getText();    return    (_currToken    =    JsonToken.VALUE_STRING);    case    XmlTokenStream.XML_TEXT:    _currText    =    _xmlTokens.getText();    [BUGGY]    if    (false)    {    [BUGGY]    _mayBeLeaf    =    false;                        _xmlTokens.skipEndElement();    if    (_parsingContext.inArray())    {    if    (_isEmpty(_currText))    {        [CLASS]        FromXmlParser    Feature    [METHOD]    nextToken    [RETURN_TYPE]    JsonToken        [VARIABLES]    byte[]    _binaryValue    boolean    _closed    _defaultState    _mayBeLeaf    defaultState    state    Set    _namesToWrap    namesToWrap    XmlReadContext    _parsingContext    ctxt    parent    XmlTokenStream    _xmlTokens    IOContext    _ioContext    ctxt    JsonToken    _nextToken    t    String    DEFAULT_UNNAMED_TEXT_PROPERTY    _cfgNameForTextElement    _currText    name    ObjectCodec    _objectCodec    c    codec    ByteArrayBuilder    _byteArrayBuilder    int    _formatFeatures    _mask    flags    genericParserFeatures    mask    token    values    xmlFeatures        	jacksonxml_492_FromXmlParser_1_1	542	1	src/main/java/com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java
187	[PATCH]    }    else    if    (tq.matches(   "<?   ")    ||    tq.matches(   "<!   "))    {	[BUG]    [BUGGY]    }    else    if    (true)    {    [FE]    java.lang.IllegalStateException:    Queue    did    not    match    expected    sequence    testYahooJp    [CONTEXT]    private    Document    parse()    {    while    (!tq.isEmpty())    {    if    (tq.matches(   "<!--   "))    {    parseComment();    }    else    if    (tq.matches(   "<![CDATA[   "))    {    parseCdata();    [BUGGY]    }    else    if    (true)    {    [BUGGY]    parseXmlDecl();    }    else    if    (tq.matches(   "</   "))    {    parseEndTag();    }    else    if    (tq.matches(   "<   "))    {    parseStartTag();    }    else    {    parseTextNode();    }    }    return    doc.normalise();    [CLASS]        Parser    [METHOD]    parse    [RETURN_TYPE]    Document        [VARIABLES]    TokenQueue    tq    String    DQ    SQ    baseUri    bodyHtml    html    Tag    bodyTag    headTag    htmlTag    textareaTag    titleTag    boolean    Document    doc    LinkedList    stack        	jsoup_1104_Parser_1_1	72	1	src/main/java/org/jsoup/parser/Parser.java
188	[PATCH]    if    (t    ==    JsonToken.VALUE_NUMBER_INT    ||    t    ==    JsonToken.VALUE_NUMBER_FLOAT)    {	[BUG]    [BUGGY]    if    (t    ==    JsonToken.VALUE_NUMBER_INT)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Can    not    deserialize    instance    of    java.math.BigDecimal    out    of    VALUE_NUMBER_FLOAT    token    testBigDecimal    [CONTEXT]    public    BigDecimal    deserialize(JsonParser    jp,    DeserializationContext    ctxt)    throws    IOException,    JsonProcessingException    {    JsonToken    t    =    jp.getCurrentToken();    [BUGGY]    if    (t    ==    JsonToken.VALUE_NUMBER_INT)    {    [BUGGY]    return    jp.getDecimalValue();    }        if    (t    ==    JsonToken.VALUE_STRING)    {    String    text    =    jp.getText().trim();    if    (text.length()    ==    0)    {    return    null;    }    try    {    return    new    BigDecimal(text);    [CLASS]        NumberDeserializers    PrimitiveOrWrapperDeserializer    BooleanDeserializer    ByteDeserializer    ShortDeserializer    CharacterDeserializer    IntegerDeserializer    LongDeserializer    FloatDeserializer    DoubleDeserializer    NumberDeserializer    BigIntegerDeserializer    BigDecimalDeserializer    [METHOD]    deserialize    [RETURN_TYPE]    BigDecimal        JsonParser    jp    DeserializationContext    ctxt    [VARIABLES]    IntegerDeserializer    primitiveInstance    wrapperInstance    CharacterDeserializer    primitiveInstance    wrapperInstance    FloatDeserializer    primitiveInstance    wrapperInstance    String    text    long    serialVersionUID    value    ShortDeserializer    primitiveInstance    wrapperInstance    BigDecimalDeserializer    instance    NumberDeserializer    instance    boolean    T    _nullValue    nvl    LongDeserializer    primitiveInstance    wrapperInstance    BigIntegerDeserializer    instance    BooleanDeserializer    primitiveInstance    wrapperInstance    DeserializationContext    ctxt    JsonToken    t    ByteDeserializer    primitiveInstance    wrapperInstance    DoubleDeserializer    primitiveInstance    wrapperInstance    IllegalArgumentException    iae    HashSet    _classNames    JsonParser    jp        	jacksondatabind_9333_NumberDeserializers_1_1	573	1	src/main/java/com/fasterxml/jackson/databind/deser/std/NumberDeserializers.java
189	[PATCH]    if    (!this.blocks.equals(that.blocks))    {	[BUG]    [BUGGY]    if    (!true)    {    [FE]    junit.framework.AssertionFailedError    testEquals    [CONTEXT]    if    (!(obj    instanceof    BlockContainer))    {    return    false;    }    if    (!super.equals(obj))    {    return    false;    }    BlockContainer    that    =    (BlockContainer)    obj;    if    (!this.arrangement.equals(that.arrangement))    {    return    false;    }    [BUGGY]    if    (!true)    {    [BUGGY]    return    false;    }    return    true;    }    [CLASS]        BlockContainer    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    List    blocks    Object    obj    boolean    long    serialVersionUID    Arrangement    arrangement    BlockContainer    that        	chart_7836_BlockContainer_1_1	263	1	source/org/jfree/chart/block/BlockContainer.java
190	[PATCH]    if    ((ch    !=    '@')    &&    (ch    !=    ':')    &&    (ch    !=    '%')    &&    (ch    !=    '+')	[BUG]    [BUGGY]    if    (false    &&    (ch    !=    '+')    [FE]    junit.framework.ComparisonFailure:    flag    a    expected:<foo>    but    was:<null>    testSimplePattern    [CONTEXT]    public    static    boolean    isValueCode(char    ch)    {    [BUGGY]    if    (false    &&    (ch    !=    '+')    [BUGGY]    &&    (ch    !=    '#')    &&    (ch    !=    '<')    &&    (ch    !=    '>')    &&    (ch    !=    '*')    &&    (ch    !=    '/')    &&    (ch    !=    '!'))    {    return    false;    }    return    true;    }    [CLASS]        PatternOptionBuilder    [METHOD]    isValueCode    [RETURN_TYPE]    boolean        char    ch    [VARIABLES]    char    ch    Class    CLASS_VALUE    DATE_VALUE    EXISTING_FILE_VALUE    FILES_VALUE    FILE_VALUE    NUMBER_VALUE    OBJECT_VALUE    STRING_VALUE    URL_VALUE    boolean        	cli_882_PatternOptionBuilder_1_1	138	1	src/java/org/apache/commons/cli/PatternOptionBuilder.java
191	[PATCH]    return    (edge    ==    RectangleEdge.LEFT    ||    edge    ==    RectangleEdge.RIGHT);	[BUG]    [BUGGY]    return    (edge    ==    RectangleEdge.LEFT);    [FE]    junit.framework.AssertionFailedError    testJava2DToValue    [CONTEXT]    public    static    boolean    isLeftOrRight(RectangleEdge    edge)    {    [BUGGY]    return    (edge    ==    RectangleEdge.LEFT);    [BUGGY]    }    [CLASS]        RectangleEdge    [METHOD]    isLeftOrRight    [RETURN_TYPE]    boolean        RectangleEdge    edge    [VARIABLES]    String    name    boolean    long    serialVersionUID    RectangleEdge    BOTTOM    LEFT    RIGHT    TOP    edge    order        	chart_7182_RectangleEdge_1_1	149	1	source/org/jfree/chart/util/RectangleEdge.java
192	[PATCH]    if    (!invocation.isVoid())    {	[BUG]    [BUGGY]    if    (!true)    {    [FE]    junit.framework.AssertionFailedError:    Expected    exception:    org.mockito.exceptions.base.MockitoException    shouldFailWhenNonVoidMethodDoesNothing    [CONTEXT]    private    void    validateDoNothing(DoesNothing    answer,    Invocation    invocation)    {    [BUGGY]    if    (!true)    {    [BUGGY]    reporter.onlyVoidMethodsCanBeSetToDoNothing();    }    }    [CLASS]        AnswersValidator    [METHOD]    validateDoNothing    [RETURN_TYPE]    void        DoesNothing    answer    Invocation    invocation    [VARIABLES]    boolean    Invocation    invocation    DoesNothing    answer    Reporter    reporter        	mockito_1841_AnswersValidator_1_1	40	1	src/org/mockito/internal/stubbing/answers/AnswersValidator.java
193	[PATCH]    if    (ch    <    '0'    ||    ch    >    '9')    break;	[BUG]    [BUGGY]    if    (ch    <    '0')    break;    [FE]    java.lang.NumberFormatException:    For    input    string:       "foobar   "    testInvalid    [CONTEXT]    {    if    (looksLikeISO8601(dateStr))    {    return    parseAsISO8601(dateStr,    pos);    }                int    i    =    dateStr.length();    while    (--i    >=    0)    {    char    ch    =    dateStr.charAt(i);    [BUGGY]    if    (ch    <    '0')    break;    [BUGGY]    }    if    (i    <    0)    {    if    (NumberInput.inLongRange(dateStr,    false))    {    return    new    Date(Long.parseLong(dateStr));    }    }        return    parseAsRFC1123(dateStr,    pos);    }    [CLASS]        StdDateFormat    [METHOD]    parse    [RETURN_TYPE]    Date        String    dateStr    ParsePosition    pos    [VARIABLES]    TimeZone    DEFAULT_TIMEZONE    _timezone    tz    boolean    DateFormat    DATE_FORMAT_ISO8601    DATE_FORMAT_ISO8601_Z    DATE_FORMAT_PLAIN    DATE_FORMAT_RFC1123    _formatISO8601    _formatISO8601_z    _formatPlain    _formatRFC1123    char    ch    StdDateFormat    instance    String    DATE_FORMAT_STR_ISO8601    DATE_FORMAT_STR_ISO8601_Z    DATE_FORMAT_STR_PLAIN    DATE_FORMAT_STR_RFC1123    dateStr    f    String[]    ALL_FORMATS    int    i    ParsePosition    pos        	jacksondatabind_14590_StdDateFormat_1_1	240	1	src/main/java/com/fasterxml/jackson/databind/util/StdDateFormat.java
194	[PATCH]    &&    (clazz.isAnonymousClass()    ||    clazz.isLocalClass());	[BUG]    [BUGGY]    &&    (true);    [FE]    junit.framework.AssertionFailedError:    expected:<[a,    b,    c]>    but    was:<[]>    testParseComments    [CONTEXT]    private    boolean    isAnonymousOrLocal(Class<?>    clazz)    {    return    !Enum.class.isAssignableFrom(clazz)    [BUGGY]    &&    (true);    [BUGGY]    }    [CLASS]        AnonymousAndLocalClassExclusionStrategy    [METHOD]    isAnonymousOrLocal    [RETURN_TYPE]    boolean        Class<?>    clazz    [VARIABLES]    boolean    Class    clazz        	gson_4_AnonymousAndLocalClassExclusionStrategy_1_1	37	1	gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java
195	[PATCH]    if    (start    >=    0    &&    start    +    length    <=    value.length())    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    Expected    match    between    cookie    and    quick    (use    alternate:    false)    testIsDoubleMetaphoneEqualBasic    [CONTEXT]    protected    static    boolean    contains(String    value,    int    start,    int    length,    String[]    criteria)    {    boolean    result    =    false;    [BUGGY]    if    (false)    {    [BUGGY]    String    target    =    value.substring(start,    start    +    length);    for    (int    i    =    0;    i    <    criteria.length;    i++)    {    if    (target.equals(criteria[i]))    {    result    =    true;    break;    }    }    }    return    result;    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    contains    [RETURN_TYPE]    boolean        String    value    int    start    int    length    String[]    criteria    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    criteria    criteria1    criteria2    criteria3    criteria4    criteria5    criteria6    input    target    value    value1    value2    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    criteria    boolean    result    int    i    index    length    maxCodeLen    maxLength    start        	codec_3294_DoubleMetaphone_1_1	1012	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
196	[PATCH]    if    (propName.equals(   "apply   ")    ||    propName.equals(   "call   "))    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError:    expected:<true>    but    was:<false>    testFunctionGetIsAliased    [CONTEXT]    public    Collection<Definition>    getDefinitionsReferencedAt(Node    useSite)    {    if    (definitionSiteMap.containsKey(useSite))    {    return    null;    }    if    (useSite.isGetProp())    {    String    propName    =    useSite.getLastChild().getString();    [BUGGY]    if    (true)    {    [BUGGY]    useSite    =    useSite.getFirstChild();    }    }    String    name    =    getSimplifiedName(useSite);    if    (name    !=    null)    {    Collection<Definition>    defs    =    nameDefinitionMultimap.get(name);    if    (!defs.isEmpty())    {    return    defs;    }    else    {    [CLASS]        SimpleDefinitionFinder    DefinitionGatheringCallback    UseSiteGatheringCallback    [METHOD]    getDefinitionsReferencedAt    [RETURN_TYPE]    Collection        Node    useSite    [VARIABLES]    Multimap    nameDefinitionMultimap    nameUseSiteMultimap    AbstractCompiler    compiler    boolean    inExterns    Node    useSite    Collection    defs    String    name    propName    Map    definitionSiteMap        	closure_20091_SimpleDefinitionFinder_1_1	84	1	src/com/google/javascript/jscomp/SimpleDefinitionFinder.java
197	[PATCH]    if    (whitelist.isSafeAttribute(sourceTag,    sourceEl,    sourceAttr))	[BUG]    [BUGGY]    if    (false)    [FE]    junit.framework.AssertionFailedError:    expected:<<img    [alt=   "   "    ]/>>    but    was:<<img    []/>>    testHandlesEmptyAttributes    [CONTEXT]    private    ElementMeta    createSafeElement(Element    sourceEl)    {    String    sourceTag    =    sourceEl.tagName();    Attributes    destAttrs    =    new    Attributes();    Element    dest    =    new    Element(Tag.valueOf(sourceTag),    sourceEl.baseUri(),    destAttrs);    int    numDiscarded    =    0;    Attributes    sourceAttrs    =    sourceEl.attributes();    for    (Attribute    sourceAttr    :    sourceAttrs)    {    [BUGGY]    if    (false)    [BUGGY]    destAttrs.put(sourceAttr);    else    numDiscarded++;    }    Attributes    enforcedAttrs    =    whitelist.getEnforcedAttributes(sourceTag);    destAttrs.addAll(enforcedAttrs);    return    new    ElementMeta(dest,    numDiscarded);    }    [CLASS]        Cleaner    ElementMeta    [METHOD]    createSafeElement    [RETURN_TYPE]    Cleaner$ElementMeta        Element    sourceEl    [VARIABLES]    boolean    Attribute    sourceAttr    Element    dest    destChild    el    source    sourceEl    Attributes    destAttrs    enforcedAttrs    sourceAttrs    Whitelist    whitelist    String    sourceTag    int    numAttribsDiscarded    numDiscarded        	jsoup_1398_Cleaner_1_1	108	1	src/main/java/org/jsoup/safety/Cleaner.java
198	[PATCH]    if    (_nextIsAttribute)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.ComparisonFailure:    expected:<<Individual[    identifier=   "1   "]><givenName>Jay</giv...>    but    was:<<Individual[><identifier>1</identifier]><givenName>Jay</giv...>    testPersonAsXml    [CONTEXT]    public    void    writeNumber(long    l)    throws    IOException    {    _verifyValueWrite(   "write    number   ");    if    (_nextName    ==    null)    {    handleMissingName();    }    try    {    [BUGGY]    if    (false)    {    [BUGGY]    _xmlWriter.writeLongAttribute(null,    _nextName.getNamespaceURI(),    _nextName.getLocalPart(),    l);    }    else    if    (checkNextIsUnwrapped())    {    _xmlWriter.writeLong(l);    }    else    {    if    (_xmlPrettyPrinter    !=    null)    {    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,    _nextName.getNamespaceURI(),    _nextName.getLocalPart(),    l);    }    else    {    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(),    _nextName.getLocalPart());    [CLASS]        ToXmlGenerator    Feature    [METHOD]    writeNumber    [RETURN_TYPE]    void        long    l    [VARIABLES]    XMLStreamWriter2    _xmlWriter    boolean    _defaultState    _initialized    _nextIsAttribute    _nextIsCData    _nextIsUnwrapped    _stax2Emulation    defaultState    isAttribute    isCData    isUnwrapped    state    value    XMLStreamException    e    XMLStreamWriter    _originalXmlWriter    sw    QName    _nextName    name    wrappedName    wrapperName    IOContext    _ioContext    ctxt    XmlPrettyPrinter    _xmlPrettyPrinter    String    DEFAULT_UNKNOWN_ELEMENT    fieldName    name    ns    text    value    Feature    WRITE_XML_1_1    WRITE_XML_DECLARATION    f    int    _formatFeatures    _mask    count    flags    i    len    length    mask    newF    offset    oldF    stdFeatures    values    xmlFeatures    LinkedList    _elementNameStack    long    l        	jacksonxml_960_ToXmlGenerator_1_1	869	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java
199	[PATCH]    if    (f.enabledByDefault())    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.ComparisonFailure:    expected:<<[]NonNullBean><name>Bo...>    but    was:<<[?xml    version='1.1'    encoding='UTF-8'?><]NonNullBean><name>Bo...>    testNullSuppression    [CONTEXT]    public    static    int    collectDefaults()    {    int    flags    =    0;    for    (Feature    f    :    values())    {    [BUGGY]    if    (true)    {    [BUGGY]    flags    |=    f.getMask();    }    }    return    flags;    }    [CLASS]        ToXmlGenerator    Feature    [METHOD]    collectDefaults    [RETURN_TYPE]    int        [VARIABLES]    XMLStreamWriter2    _xmlWriter    boolean    _defaultState    _initialized    _nextIsAttribute    _nextIsCData    _nextIsUnwrapped    _stax2Emulation    defaultState    XMLStreamWriter    _originalXmlWriter    sw    QName    _nextName    IOContext    _ioContext    ctxt    XmlPrettyPrinter    _xmlPrettyPrinter    String    DEFAULT_UNKNOWN_ELEMENT    Feature    WRITE_XML_1_1    WRITE_XML_DECLARATION    f    int    _formatFeatures    _mask    flags    stdFeatures    xmlFeatures    LinkedList    _elementNameStack        	jacksonxml_674_ToXmlGenerator_1_1	73	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java
200	[PATCH]    char    peek    =    pattern.charAt(i    +    1);	[BUG]    [BUGGY]    char    peek    =    pattern.charAt(i    /    1);    [FE]    junit.framework.ComparisonFailure:    expected:<[2002    ]00>    but    was:<[02002]00>    testToString_String    [CONTEXT]    int    i    =    indexRef[0];    int    length    =    pattern.length();    char    c    =    pattern.charAt(i);    if    (c    >=    'A'    &&    c    <=    'Z'    ||    c    >=    'a'    &&    c    <=    'z')    {            buf.append(c);    while    (i    +    1    <    length)    {    [BUGGY]    char    peek    =    pattern.charAt(i    /    1);    [BUGGY]    if    (peek    ==    c)    {    buf.append(c);    i++;    }    else    {    break;    }    }    }    else    {        buf.append('\'');    [CLASS]        DateTimeFormat    1    StyleFormatter    [METHOD]    parseToken    [RETURN_TYPE]    String        String    pattern    int[]    indexRef    [VARIABLES]    boolean    inLiteral    StringBuilder    buf    char    c    peek    int[]    indexRef    String    pattern    Map    PATTERN_CACHE    cCache    int    $anonymous0    DATE    DATETIME    FULL    LONG    MEDIUM    NONE    PATTERN_CACHE_SIZE    SHORT    TIME    dateStyle    i    iDateStyle    iTimeStyle    iType    length    maxDigits    timeStyle    tokenLen    type    long    serialVersionUID    DateTimeFormatter[]    STYLE_CACHE        	time_13207_DateTimeFormat_1_1	603	1	src/main/java/org/joda/time/format/DateTimeFormat.java
201	[PATCH]    int                    end    =    offset    +    length;	[BUG]    [BUGGY]    int            end    =    offset    /    length;    [FE]    junit.framework.ComparisonFailure:    expected:<[bar.txt]>    but    was:<[hello    ]>    testTarFileWithFSRoot    [CONTEXT]    public    static    long    parseOctal(byte[]    header,    int    offset,    int    length)    {    longresult    =    0;    boolean    stillPadding    =    true;    [BUGGY]    int    end    =    offset    /    length;    [BUGGY]    for    (int    i    =    offset;    i    <    end;    ++i)    {    if    (header[i]    ==    0)    {    break;    }    if    (header[i]    ==    (byte)    '    '    ||    header[i]    ==    '0')    {    if    (stillPadding)    {    continue;    }    [CLASS]        TarUtils    [METHOD]    parseOctal    [RETURN_TYPE]    long        byte[]    header    int    offset    int    length    [VARIABLES]    byte[]    header    boolean    stillPadding    int    BYTE_MASK    end    i    length    offset    long    result        	compress_3039_TarUtils_1_1	42	1	src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
202	[PATCH]    (index    >    3    &&    contains(value,    index    -    4,    1,       "B   ",       "H   ")))    {	[BUG]    [BUGGY]    (index    >    3    &&    contains(value,    index    +    4,    1,       "B   ",       "H   ")))    {    [FE]    junit.framework.AssertionFailedError:    Expected    match    [371]    thruout    and    throughout    testIsDoubleMetaphoneEqualWithMATCHES    [CONTEXT]    index    +=    2;    }    else    if    (index    ==    0)    {    if    (charAt(value,    index    +    2)    ==    'I')    {    result.append('J');    }    else    {    result.append('K');    }    index    +=    2;    }    else    if    ((index    >    1    &&    contains(value,    index    -    2,    1,       "B   ",       "H   ",       "D   "))    ||    (index    >    2    &&    contains(value,    index    -    3,    1,       "B   ",       "H   ",       "D   "))    ||    [BUGGY]    (index    >    3    &&    contains(value,    index    +    4,    1,       "B   ",       "H   ")))    {    [BUGGY]        index    +=    2;    }    else    {    if    (index    >    2    &&    charAt(value,    index    -    1)    ==    'U'    &&    contains(value,    index    -    3,    1,       "C   ",       "G   ",       "L   ",       "R   ",       "T   "))    {        result.append('F');    }    else    if    (index    >    0    &&    charAt(value,    index    -    1)    !=    'I')    {    result.append('K');    }    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    handleGH    [RETURN_TYPE]    int        String    value    DoubleMetaphoneResult    result    int    index    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    value    value1    value2    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    boolean    int    index    maxCodeLen    maxLength    DoubleMetaphoneResult    result        	codec_2039_DoubleMetaphone_1_1	489	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
203	[PATCH]    while    (length    >    0    &&    Character.isWhitespace(buffer.charAt(length    -    1)))    {	[BUG]    [BUGGY]    while    (length    >    0    &&    Character.isWhitespace(buffer.charAt(length    /    1)))    {    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    3    testNextToken1    [CONTEXT]    void    trimTrailingSpaces(StringBuilder    buffer)    {    int    length    =    buffer.length();    [BUGGY]    while    (length    >    0    &&    Character.isWhitespace(buffer.charAt(length    /    1)))    {    [BUGGY]    length    =    length    -    1;    }    if    (length    !=    buffer.length())    {    buffer.setLength(length);    }    }    [CLASS]        Lexer    [METHOD]    trimTrailingSpaces    [RETURN_TYPE]    void        StringBuilder    buffer    [VARIABLES]    char    commmentStart    delimiter    encapsulator    escape    ExtendedBufferedReader    in    CSVFormat    format    boolean    emptyLinesIgnored    isCommentEnabled    isEncapsulating    isEscaping    surroundingSpacesIgnored    StringBuilder    buffer    int    length        	csv_222_Lexer_1_1	84	1	src/main/java/org/apache/commons/csv/Lexer.java
204	[PATCH]    long    millis    =    (relativeYear    *    365L    +    leapYears)	[BUG]    [BUGGY]    long    millis    =    (relativeYear    /    365L    +    leapYears)    [FE]    java.lang.IllegalArgumentException:    The    end    instant    must    be    greater    or    equal    to    the    start    testWithPeriodAfterStart1    [CONTEXT]        leapYears    =    (relativeYear    +    3)    >>    2;    }    else    {    leapYears    =    relativeYear    >>    2;        if    (!isLeapYear(year))    {    leapYears++;    }    }        [BUGGY]    long    millis    =    (relativeYear    /    365L    +    leapYears)    [BUGGY]                return    millis    +    (365L    -    112)    *    DateTimeConstants.MILLIS_PER_DAY;    }    [CLASS]        CopticChronology    [METHOD]    calculateFirstDayOfYearMillis    [RETURN_TYPE]    long        int    year    [VARIABLES]    CopticChronology    INSTANCE_UTC    chrono    DateTimeField    ERA_FIELD    boolean    Map    cCache    long    millis    serialVersionUID    int    AM    MAX_YEAR    MIN_YEAR    leapYears    minDays    minDaysInFirstWeek    relativeYear    year        	time_9134_CopticChronology_1_1	223	1	src/main/java/org/joda/time/chrono/CopticChronology.java
205	[PATCH]    double    wgk    =    weight    *    grad[k];	[BUG]    [BUGGY]    double    wgk    =    weight    /    grad[k];    [FE]    java.lang.Exception:    Unexpected    exception,    expected<org.apache.commons.math3.exception.ConvergenceException>    but    was<java.lang.AssertionError>    testHahn1    [CONTEXT]        final    double    wr    =    weight    *    residual;    for    (int    j    =    0;    j    <    nC;    ++j)    {    b[j]    +=    wr    *    grad[j];    }        for    (int    k    =    0;    k    <    nC;    ++k)    {    double[]    ak    =    a[k];    [BUGGY]    double    wgk    =    weight    /    grad[k];    [BUGGY]    for    (int    l    =    0;    l    <    nC;    ++l)    {    ak[l]    +=    wgk    *    grad[l];    }    }    }        if    (previous    !=    null)    {    converged    =    checker.converged(getIterations(),    previous,    current);    if    (converged)    {    [CLASS]        GaussNewtonOptimizer    [METHOD]    doOptimize    [RETURN_TYPE]    PointVectorValuePair        [VARIABLES]    ConvergenceChecker    checker    PointVectorValuePair    current    previous    boolean    converged    newUseLU    useLU    double[]    ak    b    currentObjective    currentPoint    currentResiduals    dX    grad    residualsWeights    targetValues    RealMatrix    mA    weightMatrix    weightedJacobian    DecompositionSolver    solver    double    residual    weight    wgk    wr    SingularMatrixException    e    double[][]    a    int    i    j    k    l    nC    nR        	math_32016_GaussNewtonOptimizer_1_1	165	1	src/main/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer.java
206	[PATCH]    |    (_inputBuffer[_inputPtr+3]    &    0xFF);	[BUG]    [BUGGY]    |    (_inputBuffer[_inputPtr    *    3]    &    0xFF);    [FE]    java.lang.ArrayIndexOutOfBoundsException:    150    testBytesAsSource    [CONTEXT]                            if    (ensureLoaded(4))    {    int    quad    =(_inputBuffer[_inputPtr]    <<    24)    |    ((_inputBuffer[_inputPtr+1]    &    0xFF)    <<    16)    |    ((_inputBuffer[_inputPtr+2]    &    0xFF)    <<    8)    [BUGGY]    |    (_inputBuffer[_inputPtr    *    3]    &    0xFF);    [BUGGY]    if    (handleBOM(quad))    {    foundEncoding    =    true;    }    else    {                            [CLASS]        ByteSourceJsonBootstrapper    [METHOD]    detectEncoding    [RETURN_TYPE]    JsonEncoding        [VARIABLES]    byte[]    _inputBuffer    inputBuffer    boolean    _bigEndian    _bufferRecyclable    foundEncoding    JsonEncoding    enc    byte    UTF8_BOM_1    UTF8_BOM_2    UTF8_BOM_3    InputStream    _in    in    IOContext    _context    ctxt    int    _bytesPerChar    _inputEnd    _inputProcessed    _inputPtr    i16    inputLen    inputStart    quad        	jacksoncore_6988_ByteSourceJsonBootstrapper_1_1	133	1	src/main/java/com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.java
207	[PATCH]    return    get(n    -    1);	[BUG]    [BUGGY]    return    get(n    *    1);    [FE]    java.lang.IndexOutOfBoundsException:    Index:    1,    Size:    1    testPushPeekPop    [CONTEXT]    public    E    peek()    throws    EmptyStackException    {    final    int    n    =    size();    if    (n    <=    0)    {    throw    new    EmptyStackException();    }    else    {    [BUGGY]    return    get(n    *    1);    [BUGGY]    }    }    [CLASS]        ArrayStack    [METHOD]    peek    [RETURN_TYPE]    E        [VARIABLES]    long    serialVersionUID    int    n    boolean        	collections_9_ArrayStack_1_1	92	1	src/main/java/org/apache/commons/collections4/ArrayStack.java
208	[PATCH]    return    charAt(value,    index    +    1)    ==    'R'    ?    index    +    2    :    index    +    1;	[BUG]    [BUGGY]    return    charAt(value,    index    -    1)    ==    'R'    ?    index    +    2    :    index    +    1;    [FE]    junit.framework.AssertionFailedError:    Expected    match    [57]    burracracy    and    bureaucracy    testIsDoubleMetaphoneEqualWithMATCHES    [CONTEXT]    DoubleMetaphoneResult    result,    int    index,    boolean    slavoGermanic)    {    if    (index    ==    value.length()    -    1    &&    !slavoGermanic    &&    contains(value,    index    -    2,    2,       "IE   ")    &&    !contains(value,    index    -    4,    2,       "ME   ",       "MA   "))    {    result.appendAlternate('R');    }    else    {    result.append('R');    }    [BUGGY]    return    charAt(value,    index    -    1)    ==    'R'    ?    index    +    2    :    index    +    1;    [BUGGY]    }    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    handleR    [RETURN_TYPE]    int        String    value    DoubleMetaphoneResult    result    int    index    boolean    slavoGermanic    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    value    value1    value2    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    boolean    slavoGermanic    int    index    maxCodeLen    maxLength    DoubleMetaphoneResult    result        	codec_2375_DoubleMetaphone_1_1	606	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
209	[PATCH]    return    j    <    i    ?    i    *    (i    +    1)    /    2    +    j    :    j    *    (j    +    1)    /    2    +    i;	[BUG]    [BUGGY]    return    j    <    i    ?    i    *    (i    +    1)    /    2    +    j    :    j    *    (j    *    1)    /    2    +    i;    [FE]    org.apache.commons.math3.exception.NumberIsTooSmallException:    insufficient    dimension    0,    must    be    at    least    2    testSymmetry    [CONTEXT]    private    int    indexOf(final    int    i,    final    int    j)    {    [BUGGY]    return    j    <    i    ?    i    *    (i    +    1)    /    2    +    j    :    j    *    (j    *    1)    /    2    +    i;    [BUGGY]    }    [CLASS]        StorelessCovariance    [METHOD]    indexOf    [RETURN_TYPE]    int        final    int    i    final    int    j    [VARIABLES]    int    dim    dimension    i    j    StorelessBivariateCovariance[]    covMatrix    boolean        	math_99096_StorelessCovariance_1_1	99	1	src/main/java/org/apache/commons/math3/stat/correlation/StorelessCovariance.java
210	[PATCH]    double    denomr    =    1.0    /    denom;	[BUG]    [BUGGY]    double    denomr    =    1.0    %    denom;    [FE]    junit.framework.AssertionFailedError:    expected:<0.0>    but    was:<5.262929486337525E-4>    testCoshDefinition    [CONTEXT]    }    else    {    double    hiPrec[]    =    new    double[2];    expm1(x,    hiPrec);    double    ya    =    hiPrec[0]    +    hiPrec[1];    double    yb    =    -(ya    -    hiPrec[0]    -    hiPrec[1]);        double    denom    =    1.0    +    ya;    [BUGGY]    double    denomr    =    1.0    %    denom;    [BUGGY]    double    denomb    =    -(denom    -    1.0    -    ya)    +    yb;    double    ratio    =    ya    *    denomr;    double    temp    =    ratio    *    HEX_40000000;    double    ra    =    ratio    +    temp    -    temp;    double    rb    =    ratio    -    ra;    temp    =    denom    *    HEX_40000000;    double    za    =    denom    +    temp    -    temp;    double    zb    =    denom    -    za;        [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    sinh    [RETURN_TYPE]    double        double    x    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    negate    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    b    d    denom    denomb    denomr    finalRemA    finalRemB    ra    ratio    rb    recip    recipa    recipb    remA    remB    result    t    temp    x    xa    ya    yaa    yab    yb    za    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    finalK    k    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    xl        	math_110838_FastMath_1_1	546	1	src/main/java/org/apache/commons/math3/util/FastMath.java
211	[PATCH]    res    =    (Math.pow(10,    val    +    1.0)    -    10.0)    /    9.0;    //invert    adjustLog10	[BUG]    [BUGGY]    res    =    (Math.pow(10,    val    +    1.0)    -    10.0)    %    9.0;    //invert    adjustLog10    [FE]    junit.framework.AssertionFailedError:    pow(log(x))    =    x    expected:<5.0>    but    was:<8.999999999999979>    testAdjustedLog10    [CONTEXT]    public    double    adjustedPow10(double    val)    {    boolean    negFlag    =    (val    <    0.0);    if    (negFlag)    {    val    =    -val;    }    double    res;    if    (val    <    1.0)    {    [BUGGY]    res    =    (Math.pow(10,    val    +    1.0)    -    10.0)    %    9.0;    //invert    adjustLog10    [BUGGY]    }    else    {    res    =    Math.pow(10,    val);    }    return    negFlag    ?    (-res)    :    res;    }    [CLASS]        LogarithmicAxis    [METHOD]    adjustedPow10    [RETURN_TYPE]    double        double    val    [VARIABLES]    boolean    allowNegativesFlag    autoRangeNextLogFlag    expTickLabelsFlag    flag    flgVal    log10TickLabelsFlag    negFlag    smallLogFlag    strictValuesFlag    double    LOG10_VALUE    SMALL_LOG_VALUE    lowerVal    res    val    long    serialVersionUID    NumberFormat    numberFormatterObj        	chart_32076_LogarithmicAxis_1_1	392	1	source/org/jfree/chart/axis/LogarithmicAxis.java
212	[PATCH]    ret    =    1.0    -    regularizedGammaQ(a,    x,    epsilon,    maxIterations);	[BUG]    [BUGGY]    ret    =    1.0    %    regularizedGammaQ(a,    x,    epsilon,    maxIterations);    [FE]    junit.framework.AssertionFailedError:    Incorrect    cumulative    probability    value    returned    for    5.472917    expected:<0.999>    but    was:<9.998738513425608E-4>    testSmallDf    [CONTEXT]    int    maxIterations)    {    double    ret;    if    (Double.isNaN(a)    ||    Double.isNaN(x)    ||    (a    <=    0.0)    ||    (x    <    0.0))    {    ret    =    Double.NaN;    }    else    if    (x    ==    0.0)    {    ret    =    0.0;    }    else    if    (x    >=    a    +    1)    {            [BUGGY]    ret    =    1.0    %    regularizedGammaQ(a,    x,    epsilon,    maxIterations);    [BUGGY]    }    else    {        double    n    =    0.0;    double    an    =    1.0    /    a;    double    sum    =    an;    while    (FastMath.abs(an/sum)    >    epsilon    &&    n    <    maxIterations    &&    sum    <    Double.POSITIVE_INFINITY)    {        n    =    n    +    1.0;    [CLASS]        Gamma    1    [METHOD]    regularizedGammaP    [RETURN_TYPE]    double        double    a    double    x    double    epsilon    int    maxIterations    [VARIABLES]    boolean    double[]    LANCZOS    double    C_LIMIT    DEFAULT_EPSILON    GAMMA    HALF_LOG_2_PI    INV_GAMMA1P_M1_A0    INV_GAMMA1P_M1_A1    INV_GAMMA1P_M1_B1    INV_GAMMA1P_M1_B2    INV_GAMMA1P_M1_B3    INV_GAMMA1P_M1_B4    INV_GAMMA1P_M1_B5    INV_GAMMA1P_M1_B6    INV_GAMMA1P_M1_B7    INV_GAMMA1P_M1_B8    INV_GAMMA1P_M1_C    INV_GAMMA1P_M1_C0    INV_GAMMA1P_M1_C1    INV_GAMMA1P_M1_C10    INV_GAMMA1P_M1_C11    INV_GAMMA1P_M1_C12    INV_GAMMA1P_M1_C13    INV_GAMMA1P_M1_C2    INV_GAMMA1P_M1_C3    INV_GAMMA1P_M1_C4    INV_GAMMA1P_M1_C5    INV_GAMMA1P_M1_C6    INV_GAMMA1P_M1_C7    INV_GAMMA1P_M1_C8    INV_GAMMA1P_M1_C9    INV_GAMMA1P_M1_P0    INV_GAMMA1P_M1_P1    INV_GAMMA1P_M1_P2    INV_GAMMA1P_M1_P3    INV_GAMMA1P_M1_P4    INV_GAMMA1P_M1_P5    INV_GAMMA1P_M1_P6    INV_GAMMA1P_M1_Q1    INV_GAMMA1P_M1_Q2    INV_GAMMA1P_M1_Q3    INV_GAMMA1P_M1_Q4    LANCZOS_G    SQRT_TWO_PI    S_LIMIT    a    an    epsilon    n    prod    ret    sum    tmp    x    int    maxIterations        	math_96579_Gamma_1_1	323	1	src/main/java/org/apache/commons/math3/special/Gamma.java
213	[PATCH]    this.data.add(-index    -    1,    item);	[BUG]    [BUGGY]    this.data.add(-index    %    1,    item);    [FE]    junit.framework.AssertionFailedError:    expected:<1.1>    but    was:<-1.1>    testGetMinY    [CONTEXT]    if    (item.getPeriod().compareTo(last)    >    0)    {    this.data.add(item);    added    =    true;    }    else    {    int    index    =    Collections.binarySearch(this.data,    item);    if    (index    <    0)    {    [BUGGY]    this.data.add(-index    %    1,    item);    [BUGGY]    added    =    true;    }    else    {    StringBuffer    b    =    new    StringBuffer();    b.append(   "You    are    attempting    to    add    an    observation    for       ");    b.append(   "the    time    period       ");    b.append(item.getPeriod().toString());    b.append(   "    but    the    series    already    contains    an    observation   ");    b.append(   "    for    that    time    period.    Duplicates    are    not       ");    b.append(   "permitted.Try    using    the    addOrUpdate()    method.   ");    [CLASS]        TimeSeries    [METHOD]    add    [RETURN_TYPE]    void        TimeSeriesDataItem    item    boolean    notify    [VARIABLES]    StringBuffer    b    boolean    added    notify    double    maxY    minY    TimeSeriesDataItem    d    item    Class    c    timePeriodClass    List    data    String    DEFAULT_DOMAIN_DESCRIPTION    DEFAULT_RANGE_DESCRIPTION    description    domain    old    range    RegularTimePeriod    last    long    maximumItemAge    periods    serialVersionUID    int    count    i    index    maximum    maximumItemCount        	chart_76690_TimeSeries_1_1	611	1	source/org/jfree/data/time/TimeSeries.java
214	[PATCH]    long    y    =    shiftedSegmentedValue    /    this.segmentsGroupSize;	[BUG]    [BUGGY]    long    y    =    shiftedSegmentedValue    -    this.segmentsGroupSize;    [FE]    junit.framework.AssertionFailedError:    expected:<144>    but    was:<1088>    testMs2BaseTimelineTranslations    [CONTEXT]    int    p;    while    ((p    =    binarySearchExceptionSegments(segment))    >=    0)    {    segment    =    getSegment(millisecond    =    ((Segment)    this.exceptionSegments.get(p)).getSegmentEnd()    +    1);    }    result    =    toTimelineValue(millisecond);    }    else    {    long    shiftedSegmentedValue    =    millisecond    -    this.startTime;    long    x    =    shiftedSegmentedValue    %    this.segmentsGroupSize;    [BUGGY]    long    y    =    shiftedSegmentedValue    -    this.segmentsGroupSize;    [BUGGY]    long    wholeExceptionsBeforeDomainValue    =    getExceptionSegmentCount(this.startTime,    millisecond    -    1);                                [CLASS]        SegmentedTimeline    Segment    SegmentRange    BaseTimelineSegmentRange    [METHOD]    toTimelineValue    [RETURN_TYPE]    long        long    millisecond    [VARIABLES]    TimeZone    DEFAULT_TIME_ZONE    NO_DST_TIME_ZONE    z    boolean    adjust    adjustForDaylightSaving    SegmentedTimeline    baseTimeline    timeline    Calendar    cal    workingCalendar    workingCalendarNoDST    List    exceptionSegments    long    DAY_SEGMENT_SIZE    FIFTEEN_MINUTE_SEGMENT_SIZE    FIRST_MONDAY_AFTER_1900    HOUR_SEGMENT_SIZE    MINUTE_SEGMENT_SIZE    fromDomainValue    fromMillisecond    groupIndex    groupMilliseconds    millisecond    rawMilliseconds    result    segmentCount    segmentEnd    segmentNumber    segmentSize    segmentStart    segmentsExcludedSize    segmentsGroupSize    segmentsIncludedSize    serialVersionUID    shiftedSegmentedValue    startTime    toDomainValue    toMillisecond    wholeExceptionsBeforeDomainValue    x    y    int    groupSegmentCount    offset    p    segmentsExcluded    segmentsIncluded    Segment    segment        	chart_34120_SegmentedTimeline_1_1	615	1	source/org/jfree/chart/axis/SegmentedTimeline.java
215	[PATCH]    builder.append(buffer,    start,    pos    -    start);	[BUG]    [BUGGY]    builder.append(buffer,    start,    pos    /    start);    [FE]    java.lang.ArithmeticException:    /    by    zero    testTypeAdapterThrowsException    [CONTEXT]    }    else    {    builder.append(buffer,    start,    pos    -    start);    return    builder.toString();    }    }    }    if    (builder    ==    null)    {    builder    =    new    StringBuilder();    }    [BUGGY]    builder.append(buffer,    start,    pos    /    start);    [BUGGY]    }    while    (fillBuffer(1));    return    builder.toString();    }    [CLASS]        JsonReader    [METHOD]    nextLiteral    [RETURN_TYPE]    String        [VARIABLES]    boolean    firstElement    hasToken    lenient    result    skipping    StringBuilder    builder    Reader    in    List    stack    JsonToken    expected    firstToken    result    token    String    name    result    toFind    value    int    c    count    i    limit    minimum    pos    quote    result    start    total    char[]    NON_EXECUTE_PREFIX    buffer        	gson_1468_JsonReader_1_1	1012	1	gson/src/main/java/com/google/gson/stream/JsonReader.java
216	[PATCH]    int    k    =    (p    -    p0)    *    jWidth    +    qStart    -    q0;	[BUG]    [BUGGY]    int    k    =    (p    /    p0)    *    jWidth    +    qStart    -    q0;    [FE]    java.lang.ArithmeticException:    /    by    zero    testWalk    [CONTEXT]    final    int    p0    =    iBlock    *    BLOCK_SIZE;    final    int    pStart    =    FastMath.max(startRow,    p0);    final    int    pEnd    =    FastMath.min((iBlock    +    1)    *    BLOCK_SIZE,    1    +    endRow);    for    (int    jBlock    =    startColumn    /    BLOCK_SIZE;    jBlock    <    1    +    endColumn    /    BLOCK_SIZE;    ++jBlock)    {    final    int    jWidth    =    blockWidth(jBlock);    final    int    q0    =    jBlock    *    BLOCK_SIZE;    final    int    qStart    =    FastMath.max(startColumn,    q0);    final    int    qEnd    =    FastMath.min((jBlock    +    1)    *    BLOCK_SIZE,    1    +    endColumn);    final    T[]    block    =    blocks[iBlock    *    blockColumns    +    jBlock];    for    (int    p    =    pStart;    p    <    pEnd;    ++p)    {    [BUGGY]    int    k    =    (p    /    p0)    *    jWidth    +    qStart    -    q0;    [BUGGY]    for    (int    q    =    qStart;    q    <    qEnd;    ++q)    {    visitor.visit(p,    q,    block[k]);    ++k;    }    }    }    }    return    visitor.end();    }        [CLASS]    	math_51166_BlockFieldMatrix_1_1	1565	1	src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
217	[PATCH]    index    =    end    -    position    +    2;	[BUG]    [BUGGY]    index    =    (end    -    position)    *    2;    [FE]    junit.framework.AssertionFailedError:    ITERATIONS:    Individual,    relativePropertyIndex=0,    offset=-1,    useStartLocation=true,    reverse=true    expected:<4>    but    was:<2>    testIndividualIterators    [CONTEXT]    }    if    (index    >    length)    {    return    false;    }    }    else    {    int    end    =    startIndex;    if    (end    ==    -1)    {    end    =    length    -    1;    }    [BUGGY]    index    =    (end    -    position)    *    2;    [BUGGY]    if    (!includeStart)    {    index--;    }    if    (index    <    1)    {    return    false;    }    }    [CLASS]        PropertyIterator    [METHOD]    setPositionIndividualProperty    [RETURN_TYPE]    boolean        int    position    [VARIABLES]    boolean    empty    includeStart    ready    reverse    targetReady    String    name    PropertyPointer    propertyNodePointer    int    end    index    length    position    startIndex    startPropertyIndex        	jxpath_15531_PropertyIterator_1_1	165	1	src/java/org/apache/commons/jxpath/ri/model/beans/PropertyIterator.java
218	[PATCH]    final    double    prod2Low            =    a2Low    *    b2Low    -    (((prod2High    -    a2High    *    b2High)    -    a2Low    *    b2High)    -    a2High    *    b2Low);	[BUG]    [BUGGY]    final    double    prod2Low        =    a2Low    *    b2Low    *    (((prod2High    -    a2High    *    b2High)    -    a2Low    *    b2High)    -    a2High    *    b2Low);    [FE]    junit.framework.AssertionFailedError:    expected:<1.2246609226461328E34>    but    was:<2.4836066977113867E34>    testLinearCombination2DSDS    [CONTEXT]        final    double    ca2=    SPLIT_FACTOR    *    a2;    final    double    a2High    =    ca2    -    (ca2    -    a2);    final    double    a2Low=    a2    -    a2High;    final    double    cb2=    SPLIT_FACTOR    *    b2;    final    double    b2High    =    cb2    -    (cb2    -    b2);    final    double    b2Low=    b2    -    b2High;        final    double    prod2High=    a2    *    b2;    [BUGGY]    final    double    prod2Low    =    a2Low    *    b2Low    *    (((prod2High    -    a2High    *    b2High)    -    a2Low    *    b2High)    -    a2High    *    b2Low);    [BUGGY]        final    double    ca3=    SPLIT_FACTOR    *    a3;    final    double    a3High    =    ca3    -    (ca3    -    a3);    final    double    a3Low=    a3    -    a3High;    final    double    cb3=    SPLIT_FACTOR    *    b3;    final    double    b3High    =    cb3    -    (cb3    -    b3);    final    double    b3Low=    b3    -    b3High;            [CLASS]        MathArrays    OrderDirection    1    2    Position    [METHOD]    linearCombination    [RETURN_TYPE]    double        final    double    a1    final    double    b1    final    double    a2    final    double    b2    final    double    a3    final    double    b3    final    double    a4    final    double    b4    [VARIABLES]    boolean    Position    HEAD    TAIL    int    SPLIT_FACTOR    comp    i    index    j    len    lenMinusOne    max    numElements    startIndex    sum    yListLen    OrderDirection    DECREASING    INCREASING    dir    double    a1    a1High    a1Low    a2    a2High    a2Low    a3    a3High    a3Low    a4    a4High    a4Low    b1    b1High    b1Low    b2    b2High    b2Low    b3    b3High    b3Low    b4    b4High    b4Low    ca1    ca2    ca3    ca4    cb1    cb2    cb3    cb4    prod1High    prod1Low    prod2High    prod2Low    prod3High    prod3Low    prod4High    prod4Low    result    s1234High    s1234Low    s1234Prime    s123High    s123Low    s123Prime    s12High    s12Low    s12Prime        	math_6938_MathArrays_1_1	1119	1	src/main/java/org/apache/commons/math3/util/MathArrays.java
219	[PATCH]    long    millis    =    (relativeYear    *    365L    +    leapYears)	[BUG]    [BUGGY]    long    millis    =    (relativeYear    +    365L    +    leapYears)    [FE]    java.lang.IllegalArgumentException:    The    end    instant    must    be    greater    or    equal    to    the    start    testWithPeriodAfterStart1    [CONTEXT]        leapYears    =    (relativeYear    +    3)    >>    2;    }    else    {    leapYears    =    relativeYear    >>    2;        if    (!isLeapYear(year))    {    leapYears++;    }    }        [BUGGY]    long    millis    =    (relativeYear    +    365L    +    leapYears)    [BUGGY]                return    millis    +    (365L    -    112)    *    DateTimeConstants.MILLIS_PER_DAY;    }    [CLASS]        CopticChronology    [METHOD]    calculateFirstDayOfYearMillis    [RETURN_TYPE]    long        int    year    [VARIABLES]    CopticChronology    INSTANCE_UTC    chrono    DateTimeField    ERA_FIELD    boolean    Map    cCache    long    millis    serialVersionUID    int    AM    MAX_YEAR    MIN_YEAR    leapYears    minDays    minDaysInFirstWeek    relativeYear    year        	time_9132_CopticChronology_1_1	223	1	src/main/java/org/joda/time/chrono/CopticChronology.java
220	[PATCH]    int    nextLineTabStop    =    max    +    descPad;	[BUG]    [BUGGY]    int    nextLineTabStop    =    max    *    descPad;    [FE]    junit.framework.ComparisonFailure:    simple    wrapped    option    expected:<...aaa    aaaa    aaaa    testPrintOptions    [CONTEXT]    option    =    (Option)    i.next();    optBuf    =    new    StringBuffer(prefixList.get(x++).toString());    if    (optBuf.length()    <    max)    {    optBuf.append(createPadding(max    -    optBuf.length()));    }    optBuf.append(dpad);        [BUGGY]    int    nextLineTabStop    =    max    *    descPad;    [BUGGY]    if    (option.getDescription()    !=    null)    {    optBuf.append(option.getDescription());    }    renderWrappedText(sb,    width,    nextLineTabStop,    optBuf.toString());    if    (i.hasNext())    {    [CLASS]        HelpFormatter    OptionComparator    [METHOD]    renderOptions    [RETURN_TYPE]    StringBuffer        StringBuffer    sb    int    width    Options    options    int    leftPad    int    descPad    [VARIABLES]    Options    options    StringBuffer    optBuf    sb    boolean    Iterator    i    List    optList    prefixList    Option    option    String    DEFAULT_ARG_NAME    DEFAULT_LONG_OPT_PREFIX    DEFAULT_OPT_PREFIX    DEFAULT_SYNTAX_PREFIX    app    cmdLineSyntax    defaultArgName    defaultLongOptPrefix    defaultNewLine    defaultOptPrefix    defaultSyntaxPrefix    dpad    footer    header    lpad    name    newline    prefix    text    int    DEFAULT_DESC_PAD    DEFAULT_LEFT_PAD    DEFAULT_WIDTH    argPos    defaultDescPad    defaultLeftPad    defaultWidth    descPad    leftPad    max    nextLineTabStop    padding    width    x        	cli_584_HelpFormatter_1_1	714	1	src/java/org/apache/commons/cli/HelpFormatter.java
221	[PATCH]    result    =    31    *    result    +    (    longOpt    !=    null    ?    longOpt.hashCode()    :    0    );	[BUG]    [BUGGY]    result    =    31    /    result    +    (    longOpt    !=    null    ?    longOpt.hashCode()    :    0    );    [FE]    java.lang.ArithmeticException:    /    by    zero    testLs    [CONTEXT]    public    int    hashCode()    {    int    result;    result    =    (    opt    !=    null    ?    opt.hashCode()    :    0    );    [BUGGY]    result    =    31    /    result    +    (    longOpt    !=    null    ?    longOpt.hashCode()    :    0    );    [BUGGY]    return    result;    }    [CLASS]        Option    [METHOD]    hashCode    [RETURN_TYPE]    int        [VARIABLES]    boolean    hasArg    optionalArg    required    ArrayList    values    char    sep    valuesep    Object    o    type    String    argName    defaultValue    description    longOpt    opt    value    int    UNINITIALIZED    UNLIMITED_VALUES    index    num    numberOfArgs    result        	cli_311_Option_1_1	630	1	src/java/org/apache/commons/cli/Option.java
222	[PATCH]    return    str.substring(start    +    open.length(),    end);	[BUG]    [BUGGY]    return    str.substring(start    -    open.length(),    end);    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    -1    testSubstringBetween_StringString    [CONTEXT]    public    static    String    substringBetween(final    String    str,    final    String    open,    final    String    close)    {    if    (str    ==    null    ||    open    ==    null    ||    close    ==    null)    {    return    null;    }    final    int    start    =    str.indexOf(open);    if    (start    !=    INDEX_NOT_FOUND)    {    final    int    end    =    str.indexOf(close,    start    +    open.length());    if    (end    !=    INDEX_NOT_FOUND)    {    [BUGGY]    return    str.substring(start    -    open.length(),    end);    [BUGGY]    }    }    return    null;    }    [CLASS]        StringUtils    [METHOD]    substringBetween    [RETURN_TYPE]    String        String    str    String    open    String    close    [VARIABLES]    Pattern    WHITESPACE_PATTERN    pattern    String    CR    EMPTY    LF    SPACE    close    decomposed    input    invalidChars    open    searchChars    separator    str    stripChars    tag    ts    validChars    boolean    int    INDEX_NOT_FOUND    PAD_LIMIT    csLast    csLen    csLength    end    endLimit    found    i    index    j    len    max    ordinal    pos    ret    searchChar    searchLast    searchLen    searchLength    start    startPos    strLen    strsLen    sz    tmp        	lang_12019_StringUtils_1_1	2385	1	src/main/java/org/apache/commons/lang3/StringUtils.java
223	[PATCH]    if    (inUse[i    *    16    +    j])    {	[BUG]    [BUGGY]    if    (inUse[i    *    16    /    j])    {    [FE]    java.lang.ArithmeticException:    /    by    zero    testBzipCreation    [CONTEXT]    if    (inUse16[i])    {    bsW(1,    1);    }    else    {    bsW(1,    0);    }    }    for    (i    =    0;    i    <    16;    i++)    {    if    (inUse16[i])    {    for    (j    =    0;    j    <    16;    j++)    {    [BUGGY]    if    (inUse[i    *    16    /    j])    {    [BUGGY]    bsW(1,    1);    }    else    {    bsW(1,    0);    }    }    }    }    }        [CLASS]        BZip2CompressorOutputStream    StackElem    [METHOD]    sendMTFValues    [RETURN_TYPE]    void        [VARIABLES]    boolean    blockRandomised    closed    firstAttempt    tooLong    int[][]    code    rfreq    CRC    mCrc    OutputStream    bsStream    f    inStream    short[]    cost    szptr    char    ll_i    tmp    tmp2    char[][]    len    short    cost0    cost1    cost2    cost3    cost4    cost5    icv    int[]    code    fave    freq    ftab    heap    incs    mtfFreq    parent    quadrant    weight    zptr    boolean[]    inUse    inUse16    int    CLEARMASK    DEPTH_THRESH    GREATER_ICOST    LESSER_ICOST    QSORT_STACK_SIZE    SETMASK    SMALL_THRESH    aFreq    allowableBlockSize    alphaSize    b    bc    blockCRC    blockSize100k    bsBuff    bsLive    bt    bv    bytesOut    c    ch    combinedCRC    curr    currentChar    dd    ge    gs    hh    i    inBlockSize    iter    j    k    last    ll    maxLen    minLen    n    n1    n2    nBlocksRandomised    nGroups    nHeap    nInUse    nMTF    nNodes    nPart    nSelectors    numBits    origPtr    remF    runLength    selCtr    t    tFreq    tmp    totc    u    v    vec    workDone    workFactor    workLimit    yy    zz    char[]    block    len    length    pos    selector    selectorMtf    seqToUnseq    unseqToSeq        	compress_9299_BZip2CompressorOutputStream_1_1	820	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java
224	[PATCH]    return    (((-0.5    *    FastMath.log(b)    +    HALF_LOG_TWO_PI)    +    w)    -    u)    -    v;	[BUG]    [BUGGY]    return    (((-0.5    -    FastMath.log(b)    +    HALF_LOG_TWO_PI)    +    w)    -    u)    -    v;    [FE]    junit.framework.AssertionFailedError:    expected:<250000>    but    was:<249999>    testMath718    [CONTEXT]    final    double    a    =    FastMath.min(p,    q);    final    double    b    =    FastMath.max(p,    q);    if    (a    >=    10.0)    {    final    double    w    =    sumDeltaMinusDeltaSum(a,    b);    final    double    h    =    a    /    b;    final    double    c    =    h    /    (1.0    +    h);    final    double    u    =    -(a    -    0.5)    *    FastMath.log(c);    final    double    v    =    b    *    FastMath.log1p(h);    if    (u    <=    v)    {    [BUGGY]    return    (((-0.5    -    FastMath.log(b)    +    HALF_LOG_TWO_PI)    +    w)    -    u)    -    v;    [BUGGY]    }    else    {    return    (((-0.5    *    FastMath.log(b)    +    HALF_LOG_TWO_PI)    +    w)    -    v)    -    u;    }    }    else    if    (a    >    2.0)    {    if    (b    >    1000.0)    {    final    int    n    =    (int)    FastMath.floor(a    -    1.0);    double    prod    =    1.0;    double    ared    =    a;    for    (int    i    =    0;    i    <    n;    i++)    {    ared    -=    1.0;    [CLASS]        Beta    1    [METHOD]    logBeta    [RETURN_TYPE]    double        final    double    p    final    double    q    [VARIABLES]    boolean    double[]    DELTA    s    double    DEFAULT_EPSILON    HALF_LOG_TWO_PI    a    ared    b    bred    c    d    epsilon    h    m    p    prod    prod1    prod2    q    q2    ret    sqrtT    t    u    v    w    x    z    int    i    n        	math_95239_Beta_1_1	433	1	src/main/java/org/apache/commons/math3/special/Beta.java
225	[PATCH]    accum.append(   "\n   ").append(StringUtils.leftPad(   "   ",    nodeDepth()    -1    *    2));	[BUG]    [BUGGY]    accum.append(   "\n   ").append(StringUtils.leftPad(   "   ",    nodeDepth()    -1    /    2));    [FE]    junit.framework.AssertionFailedError:    expected:<<html>    testFormatHtml    [CONTEXT]    protected    void    indent(StringBuilder    accum)    {    [BUGGY]    accum.append(   "\n   ").append(StringUtils.leftPad(   "   ",    nodeDepth()    -1    /    2));    [BUGGY]    }    [CLASS]        Node    [METHOD]    indent    [RETURN_TYPE]    void        StringBuilder    accum    [VARIABLES]    Attributes    attributes    List    childNodes    nodes    siblings    String    attributeKey    attributeValue    baseUri    relUrl    boolean    StringBuilder    accum    Node    in    out    parentNode        	jsoup_406_Node_1_1	331	1	src/main/java/org/jsoup/nodes/Node.java
226	[PATCH]    lastChar    =    buf[offset    +    len    -    1];	[BUG]    [BUGGY]    lastChar    =    buf[(offset    +    len)    /    1];    [FE]    junit.framework.AssertionFailedError:    expected:<99>    but    was:<0>    testReadLookahead2    [CONTEXT]    char    ch    =    buf[i];    if    (ch    ==    '\n')    {    if    ('\r'    !=    (i    >    0    ?    buf[i-1]:    lastChar))    {    lineCounter++;    }    }    else    if    (ch    ==    '\r')    {    lineCounter++;    }    }        [BUGGY]    lastChar    =    buf[(offset    +    len)    /    1];    [BUGGY]    }    else    if    (len    ==    -1)    {    lastChar    =    END_OF_STREAM;    }    return    len;    }    [CLASS]        ExtendedBufferedReader    [METHOD]    read    [RETURN_TYPE]    int        char[]    buf    int    offset    int    length    [VARIABLES]    char    ch    boolean    int    END_OF_STREAM    UNDEFINED    current    i    lastChar    len    length    lineCounter    offset    char[]    buf        	csv_364_ExtendedBufferedReader_1_1	100	1	src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java
227	[PATCH]    dataIndex    =    i    *    3;	[BUG]    [BUGGY]    dataIndex    =    i    %    3;    [FE]    junit.framework.AssertionFailedError:    Dest    string    doesn't    eausl    original    testDiscardWhitespace    [CONTEXT]    byte    k    =    0,    l    =    0,    b1    =    0,    b2    =    0,    b3    =    0;    int    encodedIndex    =    0;    int    dataIndex    =    0;    int    i    =    0;    int    nextSeparatorIndex    =    CHUNK_SIZE;    int    chunksSoFar    =    0;        for    (i    =    0;    i    <    tripletCount;    i++)    {    [BUGGY]    dataIndex    =    i    %    3;    [BUGGY]    b1    =    binaryData[dataIndex];    b2    =    binaryData[dataIndex    +    1];    b3    =    binaryData[dataIndex    +    2];            l    =    (byte)    (b2    &    0x0f);    k    =    (byte)    (b1    &    0x03);    byte    val1    =    ((b1    &    SIGN)    ==    0)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);    [CLASS]        Base64    [METHOD]    encodeBase64    [RETURN_TYPE]    byte[]        byte[]    binaryData    boolean    isChunked    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    binaryData    encodedData    lookUpBase64Alphabet    pArray    boolean    isChunked    byte    PAD    b1    b2    b3    k    l    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    length    nextSeparatorIndex    long    binaryDataLength    encodedDataLengthLong    fewerThan24bits    lengthDataBits    tripletCount        	codec_230_Base64_1_1	309	1	src/java/org/apache/commons/codec/binary/Base64.java
228	[PATCH]    for    (int    k    =    0;    k    <    sequence.length-1;    ++k)    {	[BUG]    [BUGGY]    for    (int    k    =    0;    k    <    sequence.length    *    1;    ++k)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    8    testGragg    [CONTEXT]        final    double[]    y0=    equations.getCompleteState();    final    double[]    y    =    y0.clone();    final    double[]    yDot0    =    new    double[y.length];    final    double[]    y1=    new    double[y.length];    final    double[]    yTmp=    new    double[y.length];    final    double[]    yTmpDot    =    new    double[y.length];    final    double[][]    diagonal    =    new    double[sequence.length-1][];    final    double[][]    y1Diag    =    new    double[sequence.length-1][];    [BUGGY]    for    (int    k    =    0;    k    <    sequence.length    *    1;    ++k)    {    [BUGGY]    diagonal[k]    =    new    double[y.length];    y1Diag[k]    =    new    double[y.length];    }    final    double[][][]    fk=    new    double[sequence.length][][];    for    (int    k    =    0;    k    <    sequence.length;    ++k)    {    fk[k]=    new    double[sequence[k]    +    1][];            [CLASS]        GraggBulirschStoerIntegrator    [METHOD]    integrate    [RETURN_TYPE]    void        ExpandableStatefulODE    equations    final    double    t    [VARIABLES]    double[][][]    fk    GraggBulirschStoerStepInterpolator    gbsInterpolator    ExpandableStatefulODE    equations    boolean    firstStepAlreadyComputed    firstTime    forward    loop    newStep    performStabilityCheck    performTest    previousRejected    reject    useInterpolationError    useInterpolationErrorForControl    double[]    costPerTimeUnit    last    optimalStep    scale    vecAbsoluteTolerance    vecRelativeTolerance    y    y0    y1    y2    yDot0    yDot1    yEnd    yMiddle    yTmp    yTmpDot    double    control1    control2    control3    control4    convergence    deltaNorm    e    error    exp    fac    factor    hInt    hNew    initialNorm    interpError    log10R    maxCheckInterval    maxError    maxStep    middle    minStep    nextT    orderControl1    orderControl2    pow    ratio    scalAbsoluteTolerance    scalRelativeTolerance    stabilityReduction    step    stepControl1    stepControl2    stepControl3    stepControl4    stepsizeReductionFactor    subStep    subStep2    t    t0    tol    yi    double[][]    coeff    diag    diagonal    f    y1Diag    yMidDots    int[]    costPerStep    sequence    AbstractStepInterpolator    interpolator    String    METHOD_NAME    int    i    j    k    l    l2    m    maxChecks    maxIter    maxIterationCount    maxNumChecks    maxNumIter    maxOrder    maximalOrder    middleIndex    mu    mudif    mudifControlParameter    n    offset    optimalIter    size    targetIter        	math_72181_GraggBulirschStoerIntegrator_1_1	567	1	src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator.java
229	[PATCH]    double    sxy    =    sumXY    -    (sumX    *    sumY)    /    n;	[BUG]    [BUGGY]    double    sxy    =    sumXY    +    (sumX    *    sumY)    /    n;    [FE]    junit.framework.AssertionFailedError:    expected:<0.2568093>    but    was:<-184.6637988916135>    testOLSRegression1a    [CONTEXT]    double    x    =    data[i][0];    double    y    =    data[i][1];    sumX    +=    x;    sumY    +=    y;    double    xx    =    x    *    x;    sumXX    +=    xx;    double    xy    =    x    *    y;    sumXY    +=    xy;    }    double    sxx    =    sumXX    -    (sumX    *    sumX)    /    n;    [BUGGY]    double    sxy    =    sumXY    +    (sumX    *    sumY)    /    n;    [BUGGY]    double    xbar    =    sumX    /    n;    double    ybar    =    sumY    /    n;    double[]    result    =    new    double[2];    result[1]    =    sxy    /    sxx;    result[0]    =    ybar    -    result[1]    *    xbar;    return    result;    }    [CLASS]        Regression    [METHOD]    getOLSRegression    [RETURN_TYPE]    double[]        double[][]    data    [VARIABLES]    boolean    double[]    result    double    sumX    sumXX    sumXY    sumY    sxx    sxy    x    xbar    xx    xy    y    ybar    double[][]    data    int    i    n        	chart_72764_Regression_1_1	86	1	source/org/jfree/data/statistics/Regression.java
230	[PATCH]    byte[]    temp    =    new    byte[length    +    1];	[BUG]    [BUGGY]    byte[]    temp    =    new    byte[length    %    1];    [FE]    java.lang.ArrayIndexOutOfBoundsException:    12    testTarArchiveLongNameCreation    [CONTEXT]    public    static    int    getLongOctalBytes(long    value,    byte[]    buf,    int    offset,    int    length)    {    [BUGGY]    byte[]    temp    =    new    byte[length    %    1];    [BUGGY]    getOctalBytes(value,    temp,    0,    length    +    1);    System.arraycopy(temp,    0,    buf,    offset,    length);    return    offset    +    length;    }    [CLASS]        TarUtils    [METHOD]    getLongOctalBytes    [RETURN_TYPE]    int        long    value    byte[]    buf    int    offset    int    length    [VARIABLES]    byte[]    buf    temp    boolean    int    BYTE_MASK    end    i    idx    length    offset    long    value        	compress_3201_TarUtils_1_1	160	1	src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java
231	[PATCH]    if    ((numberOfArgs    >    0)    &&    (values.size()    >    (numberOfArgs    -    1)))	[BUG]    [BUGGY]    if    ((numberOfArgs    >    0)    &&    (values.size()    >    (numberOfArgs    %    1)))    [FE]    java.lang.ArrayIndexOutOfBoundsException:    1    testLongOptionalNArgValues    [CONTEXT]    private    void    add(String    value)    {    [BUGGY]    if    ((numberOfArgs    >    0)    &&    (values.size()    >    (numberOfArgs    %    1)))    [BUGGY]    {    throw    new    RuntimeException(   "Cannot    add    value,    list    full.   ");    }            this.values.add(value);    }    [CLASS]        Option    [METHOD]    add    [RETURN_TYPE]    void        String    value    [VARIABLES]    boolean    hasArg    optionalArg    required    ArrayList    values    char    sep    valuesep    Object    type    String    argName    description    longOpt    opt    value    int    UNINITIALIZED    UNLIMITED_VALUES    index    num    numberOfArgs        	cli_250_Option_1_1	476	1	src/java/org/apache/commons/cli/Option.java
232	[PATCH]    if    (max    -    min    >    32)    {        //    protect    against    invalid    fields	[BUG]    [BUGGY]    if    (max    %    min    >    32)    {    //    protect    against    invalid    fields    [FE]    java.lang.ArithmeticException:    /    by    zero    testFormatParse_textHalfdayAM_UK    [CONTEXT]    innerMap    =    new    HashMap<DateTimeFieldType,    Object[]>();    cParseCache.put(locale,    innerMap);    }    Object[]    array    =    innerMap.get(iFieldType);    if    (array    ==    null)    {    validValues    =    new    HashSet<String>(32);    MutableDateTime    dt    =    new    MutableDateTime(0L,    DateTimeZone.UTC);    Property    property    =    dt.property(iFieldType);    int    min    =    property.getMinimumValueOverall();    int    max    =    property.getMaximumValueOverall();    [BUGGY]    if    (max    %    min    >    32)    {    [BUGGY]    return    ~position;    }    maxLength    =    property.getMaximumTextLength(locale);    for    (int    i    =    min;    i    <=    max;    i++)    {    property.set(i);    validValues.add(property.getAsShortText(locale));    validValues.add(property.getAsShortText(locale).toLowerCase(locale));    validValues.add(property.getAsShortText(locale).toUpperCase(locale));    validValues.add(property.getAsText(locale));    validValues.add(property.getAsText(locale).toLowerCase(locale));    [CLASS]        DateTimeFormatterBuilder    CharacterLiteral    StringLiteral    NumberFormatter    UnpaddedNumber    PaddedNumber    FixedNumber    TwoDigitYear    TextField    Fraction    TimeZoneOffset    TimeZoneName    TimeZoneId    Composite    MatchingParser    [METHOD]    parseInto    [RETURN_TYPE]    int        DateTimeParserBucket    bucket    String    text    int    position    [VARIABLES]    Locale    locale    DateTimePrinter[]    iPrinters    Set    ALL_IDS    validValues    DateTimeParserBucket    bucket    ArrayList    iElementPairs    MutableDateTime    dt    DateTimeParser[]    copyOfParsers    iParsers    parsers    String    iValue    iZeroOffsetParseText    iZeroOffsetPrintText    match    pattern    text    value    zeroOffsetParseText    zeroOffsetPrintText    zeroOffsetText    int    LONG_NAME    MAX_LENGTH    SHORT_NAME    displayOffset    est    expectedPos    i    iMaxDigits    iMaxFields    iMaxParsedDigits    iMinDigits    iMinFields    iMinPrintedDigits    iParsedLengthEstimate    iPivot    iPrintedLengthEstimate    iType    len    length    limit    low    max    maxDigits    maxFields    maxLength    maxParsedDigits    min    minDigits    minFields    minPrintedDigits    newPos    numDigits    parseEst    pivot    position    printEst    size    t    type    value    year    boolean    hasSignChar    iLenientParse    iShort    iShowSeparators    iSigned    isShort    lenientParse    negative    showSeparators    signed    TimeZoneId    INSTANCE    char    a    b    c    iValue    value    DateTimeFieldType    fieldType    iFieldType    iType    type    Object    element    f    iFormatter    parser    printer    Map    cParseCache    iParseLookup    innerMap    parseLookup    Property    property    Object[]    array        	time_14252_DateTimeFormatterBuilder_1_1	1845	1	src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java
233	[PATCH]    deleteImpl(i,    i    +    1,    1);	[BUG]    [BUGGY]    deleteImpl(i,    i    -    1,    1);    [FE]    java.lang.ArrayIndexOutOfBoundsException    testDeleteFirst_char    [CONTEXT]    public    StrBuilder    deleteFirst(final    char    ch)    {    for    (int    i    =    0;    i    <    size;    i++)    {    if    (buffer[i]    ==    ch)    {    [BUGGY]    deleteImpl(i,    i    -    1,    1);    [BUGGY]    break;    }    }    return    this;    }    [CLASS]        StrBuilder    StrBuilderTokenizer    StrBuilderReader    StrBuilderWriter    [METHOD]    deleteFirst    [RETURN_TYPE]    StrBuilder        final    char    ch    [VARIABLES]    char    ch    String    defaultIfEmpty    format    newLine    nullText    separator    standard    str    boolean    int    CAPACITY    capacity    destinationIndex    endIndex    i    index    initialCapacity    len    length    loopIndex    mark    newEnd    newSize    offset    oldEnd    padLen    pos    size    start    startIndex    strLen    value    width    long    serialVersionUID    value    char[]    buffer    chars    destination    old        	lang_9207_StrBuilder_1_1	1723	1	src/main/java/org/apache/commons/lang3/text/StrBuilder.java
234	[PATCH]    final    int    lEnd    =    lStart    +    kWidth;	[BUG]    [BUGGY]    final    int    lEnd    =    lStart    /    kWidth;    [FE]    junit.framework.AssertionFailedError:    expected:<0.0>    but    was:<37.382145043201646>    testOverdetermined    [CONTEXT]    final    double[]    outBlock    =    out.blocks[blockIndex];        for    (int    kBlock    =    0;    kBlock    <    blockColumns;    ++kBlock)    {    final    int    kWidth    =    blockWidth(kBlock);    final    double[]    tBlock    =    blocks[iBlock    *    blockColumns    +    kBlock];    final    int    rStart    =    kBlock    *    BLOCK_SIZE;    int    k    =    0;    for    (int    p    =    pStart;    p    <    pEnd;    ++p)    {    final    int    lStart    =    (p    -    pStart)    *    kWidth;    [BUGGY]    final    int    lEnd    =    lStart    /    kWidth;    [BUGGY]    for    (int    q    =    qStart;    q    <    qEnd;    ++q)    {    double    sum    =    0;    int    r    =    rStart;    for    (int    l    =    lStart;    l    <    lEnd;    ++l)    {    sum    +=    tBlock[l]    *    m.getEntry(r,    q);    ++r;    }    outBlock[k]    +=    sum;    ++k;    }    [CLASS]        BlockRealMatrix    [METHOD]    multiply    [RETURN_TYPE]    BlockRealMatrix        RealMatrix    m    [VARIABLES]    boolean    RealMatrix    m    double[]    outBlock    tBlock    double    sum    ClassCastException    cce    double[][]    blockData    blocks    rawData    BlockRealMatrix    out    int    BLOCK_SIZE    blockColumns    blockIndex    blockRows    columnDimension    columns    i    iBlock    iHeight    index    jBlock    jWidth    k    kBlock    kWidth    l    lEnd    lStart    length    p    pEnd    pStart    q    qEnd    qStart    r    rStart    rowDimension    rows    long    serialVersionUID        	math_51696_BlockRealMatrix_1_1	505	1	src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
235	[PATCH]    (vecAbsoluteTolerance[j]    +    vecRelativeTolerance[j]    *    yScale);	[BUG]    [BUGGY]    (vecAbsoluteTolerance[j]    *    (vecRelativeTolerance[j]    *    yScale));    [FE]    junit.framework.AssertionFailedError    testLowAccuracyExternalDifferentiation    [CONTEXT]    double    error    =    0;    for    (int    j    =    0;    j    <    mainSetDimension;    ++j)    {    final    double    errSum    =    E1    *    yDotK[0][j]    +E3    *    yDotK[2][j]    +    E4    *    yDotK[3][j]    +E5    *    yDotK[4][j]    +    E6    *    yDotK[5][j]    +E7    *    yDotK[6][j];    final    double    yScale    =    FastMath.max(FastMath.abs(y0[j]),    FastMath.abs(y1[j]));    final    double    tol    =    (vecAbsoluteTolerance    ==    null)    ?    (scalAbsoluteTolerance    +    scalRelativeTolerance    *    yScale)    :    [BUGGY]    (vecAbsoluteTolerance[j]    *    (vecRelativeTolerance[j]    *    yScale));    [BUGGY]    final    double    ratio=    h    *    errSum    /    tol;    error    +=    ratio    *    ratio;    }    return    FastMath.sqrt(error    /    mainSetDimension);    }    [CLASS]        DormandPrince54Integrator    [METHOD]    estimateError    [RETURN_TYPE]    double        final    double[][]    yDotK    final    double[]    y0    final    double[]    y1    final    double    h    [VARIABLES]    double[][]    STATIC_A    yDotK    String    METHOD_NAME    boolean    double[]    STATIC_B    STATIC_C    vecAbsoluteTolerance    vecRelativeTolerance    y0    y1    double    E1    E3    E4    E5    E6    E7    errSum    error    h    maxStep    minStep    ratio    scalAbsoluteTolerance    scalRelativeTolerance    tol    yScale    int    j        	math_67485_DormandPrince54Integrator_1_1	152	1	src/main/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54Integrator.java
236	[PATCH]    res.setEntry(key,    entries.get(key)    -    iter.value());	[BUG]    [BUGGY]    res.setEntry(key,    entries.get(key)    *    iter.value());    [FE]    junit.framework.AssertionFailedError:    entry    #16,    left    =    Infinity,    right    =    Infinity    expected:<NaN>    but    was:<Infinity>    testSubtractSameType    [CONTEXT]    public    OpenMapRealVector    subtract(OpenMapRealVector    v)    throws    DimensionMismatchException    {    checkVectorDimensions(v.getDimension());    OpenMapRealVector    res    =    copy();    Iterator    iter    =    v.getEntries().iterator();    while    (iter.hasNext())    {    iter.advance();    int    key    =    iter.key();    if    (entries.containsKey(key))    {    [BUGGY]    res.setEntry(key,    entries.get(key)    *    iter.value());    [BUGGY]    }    else    {    res.setEntry(key,    -iter.value());    }    }    return    res;    }    [CLASS]        OpenMapRealVector    OpenMapEntry    OpenMapSparseIterator    [METHOD]    subtract    [RETURN_TYPE]    OpenMapRealVector        OpenMapRealVector    v    [VARIABLES]    Entry    current    boolean    double    DEFAULT_ZERO_TOLERANCE    d    delta    epsilon    max    res    value    x    y    Iterator    iter    OpenMapRealVector    res    v    OpenIntToDoubleHashMap    entries    randomAccess    long    serialVersionUID    int    dimension    end    expectedSize    i    index    key    n    resize    virtualSize        	math_59965_OpenMapRealVector_1_1	645	1	src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java
237	[PATCH]    int    avail    =    _end    -    _ptr;	[BUG]    [BUGGY]    int    avail    =    _end    %    _ptr;    [FE]    java.lang.ArithmeticException:    /    by    zero    testSimpleValidArray    [CONTEXT]    public    int    read(byte[]    b,    int    off,    int    len)    throws    IOException    {    if    (_buffer    !=    null)    {    [BUGGY]    int    avail    =    _end    %    _ptr;    [BUGGY]    if    (len    >    avail)    {    len    =    avail;    }    System.arraycopy(_buffer,    _ptr,    b,    off,    len);    _ptr    +=    len;    if    (_ptr    >=    _end)    {    freeMergedBuffer();    }    return    len;    }    [CLASS]        MergedStream    [METHOD]    read    [RETURN_TYPE]    int        byte[]    b    int    off    int    len    [VARIABLES]    byte[]    _buffer    b    buf    IOContext    _context    context    boolean    InputStream    _in    in    int    _end    _ptr    avail    c    end    len    off    readlimit    start        	jacksoncore_4825_MergedStream_1_1	90	1	src/main/java/com/fasterxml/jackson/core/io/MergedStream.java
238	[PATCH]    result    =    31    *    result    +    (empty    ?    1    :    0);	[BUG]    [BUGGY]    result    =    31    *    result    %    (empty    ?    1    :    0);    [FE]    java.lang.ArithmeticException:    /    by    zero    testYahooJp    [CONTEXT]    public    int    hashCode()    {    int    result    =    tagName    !=    null    ?    tagName.hashCode()    :    0;    result    =    31    *    result    +    (isBlock    ?    1    :    0);    result    =    31    *    result    +    (canContainBlock    ?    1    :    0);    result    =    31    *    result    +    (canContainInline    ?    1    :    0);    result    =    31    *    result    +    (optionalClosing    ?    1    :    0);    [BUGGY]    result    =    31    *    result    %    (empty    ?    1    :    0);    [BUGGY]    return    result;    }    [CLASS]        Tag    [METHOD]    hashCode    [RETURN_TYPE]    int        [VARIABLES]    List    ancestors    boolean    canContainBlock    canContainInline    empty    isBlock    optionalClosing    preserveWhitespace    Tag    child    defaultAncestor    tag    String    tagName    Map    tags    int    result        	jsoup_730_Tag_1_1	188	1	src/main/java/org/jsoup/parser/Tag.java
239	[PATCH]    final    int    i    =    k    +    offset    -    delta;	[BUG]    [BUGGY]    final    int    i    =    (k    +    offset)    %    delta;    [FE]    java.lang.ArithmeticException:    /    by    zero    testLongestCommonSubsequence    [CONTEXT]    if    (delta    %    2    !=    0    &&    delta    -    d    <=    k    &&    k    <=    delta    +    d)    {    if    (vUp[i-delta]    <=    vDown[i])    {    return    buildSnake(vUp[i-delta],    k    +    start1    -    start2,    end1,    end2);    }    }    }        for    (int    k    =    delta    -    d;    k    <=    delta    +    d;    k    +=    2)    {        [BUGGY]    final    int    i    =    (k    +    offset)    %    delta;    [BUGGY]    if    (k    ==    delta    -    d    ||    k    !=    delta    +    d    &&    vUp[i+1]    <=    vUp[i-1])    {    vUp[i]    =    vUp[i+1]    -    1;    }    else    {    vUp[i]    =    vUp[i-1];    }    int    x    =    vUp[i]    -    1;    int    y    =    x    -    start1    +    start2    -    k;    while    (x    >=    start1    &&    y    >=    start2    [CLASS]        SequencesComparator    Snake    [METHOD]    getMiddleSnake    [RETURN_TYPE]    SequencesComparator$Snake        final    int    start1    final    int    end1    final    int    start2    final    int    end2    [VARIABLES]    List    sequence1    sequence2    int[]    vDown    vUp    boolean    int    d    delta    diag    end    end1    end2    i    k    m    n    offset    size    start    start1    start2    sum    x    y    Equator    equator        	collections_10234_SequencesComparator_1_1	214	1	src/main/java/org/apache/commons/collections4/sequence/SequencesComparator.java
240	[PATCH]    stack.remove(stack.size()    -    1);	[BUG]    [BUGGY]    stack.remove(stack.size()    /    1);    [FE]    java.lang.IndexOutOfBoundsException:    Index:    2,    Size:    2    testUserDefinedExclusionPolicies    [CONTEXT]    private    JsonWriter    close(JsonScope    empty,    JsonScope    nonempty,    String    closeBracket)    throws    IOException    {    JsonScope    context    =    peek();    if    (context    !=    nonempty    &&    context    !=    empty)    {    throw    new    IllegalStateException(   "Nesting    problem:       "    +    stack);    }        [BUGGY]    stack.remove(stack.size()    /    1);    [BUGGY]    if    (context    ==    nonempty)    {    newline();    }    out.write(closeBracket);    return    this;    }    [CLASS]        JsonWriter    [METHOD]    close    [RETURN_TYPE]    JsonWriter        JsonScope    empty    JsonScope    nonempty    String    closeBracket    [VARIABLES]    List    stack    boolean    htmlSafe    lenient    String    closeBracket    indent    openBracket    separator    JsonScope    context    empty    nonempty    Writer    out        	gson_879_JsonWriter_1_1	280	1	gson/src/main/java/com/google/gson/stream/JsonWriter.java
241	[PATCH]    return    z4    >>>    (32    -    bits);	[BUG]    [BUGGY]    return    z4    >>>    (32    +    bits);    [FE]    junit.framework.AssertionFailedError:    expected:<1.0>    but    was:<1.0000000000000004>    testDerivativesWithInverseFunction    [CONTEXT]    final    int    z0    =    v[indexRm1];    final    int    z1    =    v0^    (vM1    ^    (vM1    >>>    8));    final    int    z2    =    (vM2    ^    (vM2    <<    19))    ^    (vM3    ^    (vM3    <<    14));    final    int    z3    =    z1^    z2;    final    int    z4    =    (z0    ^    (z0    <<    11))    ^    (z1    ^    (z1    <<    7))    ^    (z2    ^    (z2    <<    13));    v[index]    =    z3;    v[indexRm1]=    z4;    index=    indexRm1;        [BUGGY]    return    z4    >>>    (32    +    bits);    [BUGGY]    }    [CLASS]        Well1024a    [METHOD]    next    [RETURN_TYPE]    int        final    int    bits    [VARIABLES]    long    seed    serialVersionUID    int    K    M1    M2    M3    bits    indexRm1    seed    v0    vM1    vM2    vM3    z0    z1    z2    z3    z4    boolean        	math_94075_Well1024a_1_1	103	1	src/main/java/org/apache/commons/math3/random/Well1024a.java
242	[PATCH]    str    =    str.substring(0,    str.length()-1);	[BUG]    [BUGGY]    str    =    str.substring(0,    str.length()    /    1);    [FE]    junit.framework.ComparisonFailure:    expected:<Two    Words[]>    but    was:<Two    Words[   "]>    test15648    [CONTEXT]    static    String    stripLeadingAndTrailingQuotes(String    str)    {    if    (str.startsWith(   "\   "   "))    {    str    =    str.substring(1,    str.length());    }    if    (str.endsWith(   "\   "   "))    {    [BUGGY]    str    =    str.substring(0,    str.length()    /    1);    [BUGGY]    }    return    str;    }    [CLASS]        Util    [METHOD]    stripLeadingAndTrailingQuotes    [RETURN_TYPE]    String        String    str    [VARIABLES]    boolean    String    str        	cli_1117_Util_1_1	62	1	src/java/org/apache/commons/cli/Util.java
243	[PATCH]    return    parentNode.nodeDepth()    +    1;	[BUG]    [BUGGY]    return    parentNode.nodeDepth()    *    1;    [FE]    junit.framework.AssertionFailedError:    expected:<...ead>    testFormatHtml    [CONTEXT]    protected    int    nodeDepth()    {    if    (parentNode    ==    null)    return    0;    else    [BUGGY]    return    parentNode.nodeDepth()    *    1;    [BUGGY]    }    [CLASS]        Node    [METHOD]    nodeDepth    [RETURN_TYPE]    int        [VARIABLES]    Attributes    attributes    List    childNodes    String    attributeKey    attributeValue    baseUri    relUrl    boolean    Node    in    out    parentNode        	jsoup_358_Node_1_1	249	1	src/main/java/org/jsoup/nodes/Node.java
244	[PATCH]    result    =    31    *    result    +    (attributes    !=    null    ?    attributes.hashCode()    :    0);	[BUG]    [BUGGY]    result    =    31    *    result    /    (attributes    !=    null    ?    attributes.hashCode()    :    0);    [FE]    java.lang.ArithmeticException:    /    by    zero    testYahooJp    [CONTEXT]    public    int    hashCode()    {    int    result    =    parentNode    !=    null    ?    parentNode.hashCode()    :    0;        [BUGGY]    result    =    31    *    result    /    (attributes    !=    null    ?    attributes.hashCode()    :    0);    [BUGGY]    return    result;    }    [CLASS]        Node    [METHOD]    hashCode    [RETURN_TYPE]    int        [VARIABLES]    Attributes    attributes    List    childNodes    nodes    siblings    String    attributeKey    attributeValue    baseUri    relUrl    boolean    int    result    Node    in    out    parentNode        	jsoup_430_Node_1_1	345	1	src/main/java/org/jsoup/nodes/Node.java
245	[PATCH]    T    result    =    (T)    sort.toArray()[(sort.size()    -    1)    /    2];	[BUG]    [BUGGY]    T    result    =    (T)    sort.toArray()[(sort.size()    -    1)    +    2];    [FE]    java.lang.ArrayIndexOutOfBoundsException:    2    testMedian    [CONTEXT]    public    static    <T    extends    Comparable<?    super    T>>    T    median(final    T...    items)    {    Validate.notEmpty(items);    Validate.noNullElements(items);    final    TreeSet<T>    sort    =    new    TreeSet<T>();    Collections.addAll(sort,    items);    @SuppressWarnings(   "unchecked   ")    //we    know    all    items    added    were    T    instances    final    [BUGGY]    T    result    =    (T)    sort.toArray()[(sort.size()    -    1)    +    2];    [BUGGY]    return    result;    }    [CLASS]        ObjectUtils    Null    [METHOD]    median    [RETURN_TYPE]    <T        items    [VARIABLES]    Null    NULL    boolean    T    result    long    serialVersionUID    TreeSet    sort    T[]    items        	lang_8214_ObjectUtils_1_1	511	1	src/main/java/org/apache/commons/lang3/ObjectUtils.java
246	[PATCH]    offset    +=    minutes    *    DateTimeConstants.MILLIS_PER_MINUTE;	[BUG]    [BUGGY]    offset    +=    minutes    -    DateTimeConstants.MILLIS_PER_MINUTE;    [FE]    junit.framework.AssertionFailedError:    expected:<+02:59>    but    was:<+03:00>    testForOffsetHours_int    [CONTEXT]    break    parse;    }    else    if    (count    <    2)    {        return    ~position;    }    int    minutes    =    FormatUtils.parseTwoDigits(text,    position);    if    (minutes    >    59)    {    return    ~position;    }    [BUGGY]    offset    +=    minutes    -    DateTimeConstants.MILLIS_PER_MINUTE;    [BUGGY]    limit    -=    2;    position    +=    2;            if    (limit    <=    0)    {    break    parse;    }    if    (expectSeparators)    {    [CLASS]        DateTimeFormatterBuilder    CharacterLiteral    StringLiteral    NumberFormatter    UnpaddedNumber    PaddedNumber    FixedNumber    TwoDigitYear    TextField    Fraction    TimeZoneOffset    TimeZoneName    TimeZoneId    Composite    MatchingParser    [METHOD]    parseInto    [RETURN_TYPE]    int        DateTimeParserBucket    bucket    String    text    int    position    [VARIABLES]    DateTimePrinter[]    iPrinters    Set    ALL_IDS    validValues    DateTimeParserBucket    bucket    ArrayList    iElementPairs    DateTimeParser[]    copyOfParsers    iParsers    parsers    String    iValue    iZeroOffsetParseText    iZeroOffsetPrintText    match    pattern    str    text    value    zeroOffsetParseText    zeroOffsetPrintText    zeroOffsetText    int    LONG_NAME    MAX_LENGTH    SHORT_NAME    count    digits    displayOffset    est    expectedPos    hours    i    iMaxDigits    iMaxFields    iMaxParsedDigits    iMinDigits    iMinFields    iMinPrintedDigits    iParsedLengthEstimate    iPivot    iPrintedLengthEstimate    iType    len    length    limit    low    max    maxDigits    maxFields    maxLength    maxParsedDigits    min    minDigits    minFields    minPrintedDigits    minutes    newPos    numDigits    offset    parseEst    pivot    position    printEst    seconds    size    t    type    value    year    boolean    expectSeparators    hasSignChar    iLenientParse    iShort    iShowSeparators    iSigned    isShort    lenientParse    negative    showSeparators    signed    TimeZoneId    INSTANCE    char    a    b    c    iValue    value    DateTimeFieldType    fieldType    iFieldType    iType    type    Object    element    f    iFormatter    parser    printer    Map    cParseCache    iParseLookup    innerMap    parseLookup        	time_14975_DateTimeFormatterBuilder_1_1	2379	1	src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java
247	[PATCH]    pos    =    base_pos    +    col    -    1    -    in;	[BUG]    [BUGGY]    pos    =    base_pos    *    col    -    1    -    in;    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testPCorr    [CONTEXT]    final    int    offXX    =    (nvars    -    in)    *    (nvars    -    in    -    1)    /    2;    if    (in    <    -1    ||    in    >=    nvars)    {    return    null;    }    final    int    nvm    =    nvars    -    1;    final    int    base_pos    =    r.length    -    (nvm    -    in)    *    (nvm    -    in    +    1)    /    2;    if    (d[in]    >    0.0)    {    rms[in    +    rms_off]    =    1.0    /    Math.sqrt(d[in]);    }    for    (int    col    =    in    +    1;    col    <    nvars;    col++)    {    [BUGGY]    pos    =    base_pos    *    col    -    1    -    in;    [BUGGY]    sumxx    =    d[col];    for    (int    row    =    in;    row    <    col;    row++)    {    sumxx    +=    d[row]    *    r[pos]    *    r[pos];    pos    +=    nvars    -    row    -    2;    }    if    (sumxx    >    0.0)    {    rms[col    +    rms_off]    =    1.0    /    Math.sqrt(sumxx);    }    else    {    rms[col    +    rms_off]    =    0.0;    }    [CLASS]        MillerUpdatingRegression    [METHOD]    getPartialCorrelations    [RETURN_TYPE]    double[]        int    in    [VARIABLES]    boolean    hasIntercept    includeConstant    rankProblem    rss_set    tol_set    double[]    covmat    d    output    r    ret    rhs    rinv    rms    rss    tmp    tol    work    work_sing    work_tolset    x    x_sing    y    double    _a    _b    _w    a    b    di    dpi    eps    epsilon    errorTolerance    rnk    sserr    sumsqy    sumxx    sumxy    sumy    sumyy    temp    tmp    total    var    w    weight    wi    wxi    xi    xk    y    yi    int[]    vorder    boolean[]    lindep    int    _pi    _xi    base_pos    col    col1    col2    i    in    j    k    nextr    nreq    numberOfVariables    nvars    nvm    offXX    pos    pos1    pos2    rms_off    row    start    wrk_off    long    nobs        	math_104085_MillerUpdatingRegression_1_1	631	1	src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java
248	[PATCH]    int    moveBy    =    i    -    attrCount;	[BUG]    [BUGGY]    int    moveBy    =    i    *    attrCount;    [FE]    junit.framework.ComparisonFailure:    expected:<<root><NameBean    [age=   "13   "><first>Grizabella</first><last>Glamour</last></NameBean><NameBean    age=   "17   "><first>Growl</first><last>Tiger</last]></NameBean></root>>    but    was:<<root><NameBean    [first=   "Grizabella   "><last>Glamour</last><age>13</age></NameBean><NameBean    first=   "Growl   "><last>Tiger</last><age>17</age]></NameBean></root>>    testSimple    [CONTEXT]    int    attrCount    =    0;    for    (int    i    =    0,    len    =    properties.length;    i    <    len;    ++i)    {    BeanPropertyWriter    bpw    =    properties[i];    if    (!_isAttribute(bpw))    {    continue;    }            [BUGGY]    int    moveBy    =    i    *    attrCount;    [BUGGY]    if    (moveBy    >    0)    {    System.arraycopy(properties,    attrCount,    properties,    attrCount    +    1,    moveBy);    properties[attrCount]    =    bpw;    if    (filteredProperties    !=    null)    {    BeanPropertyWriter    fbpw    =    filteredProperties[i];    System.arraycopy(filteredProperties,    attrCount,    filteredProperties,    attrCount+1,    moveBy);    filteredProperties[attrCount]    =    fbpw;    }    }    ++attrCount;    [CLASS]        XmlBeanSerializerBase    [METHOD]    _orderAttributesFirst    [RETURN_TYPE]    int        BeanPropertyWriter[]    properties    BeanPropertyWriter[]    filteredProperties    [VARIABLES]    QName[]    _xmlNames    xmlNames    boolean    BitSet    _cdata    cdata    String    KEY_XML_INFO    name    ns    BeanPropertyWriter[]    filteredProperties    properties    BeanPropertyWriter    bpw    fbpw    int    _attributeCount    _textPropertyIndex    attrCount    i    len    moveBy    textIndex        	jacksonxml_1866_XmlBeanSerializerBase_1_1	381	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerBase.java
249	[PATCH]    final    int    newSize    =    endIndexExclusive    -    startIndexInclusive;	[BUG]    [BUGGY]    final    int    newSize    =    endIndexExclusive    /    startIndexInclusive;    [FE]    java.lang.ArithmeticException:    /    by    zero    testSubarrayFloat    [CONTEXT]    public    static    float[]    subarray(final    float[]    array,    int    startIndexInclusive,    int    endIndexExclusive)    {    if    (array    ==    null)    {    return    null;    }    if    (startIndexInclusive    <    0)    {    startIndexInclusive    =    0;    }    if    (endIndexExclusive    >    array.length)    {    endIndexExclusive    =    array.length;    }    [BUGGY]    final    int    newSize    =    endIndexExclusive    /    startIndexInclusive;    [BUGGY]    if    (newSize    <=    0)    {    return    EMPTY_FLOAT_ARRAY;    }    final    float[]    subarray    =    new    float[newSize];    System.arraycopy(array,    startIndexInclusive,    subarray,    0,    newSize);    return    subarray;    }    [CLASS]        ArrayUtils    [METHOD]    subarray    [RETURN_TYPE]    float[]        final    float[]    array    int    startIndexInclusive    int    endIndexExclusive    [VARIABLES]    Class[]    EMPTY_CLASS_ARRAY    long[]    EMPTY_LONG_ARRAY    array    subarray    short[]    EMPTY_SHORT_ARRAY    array    subarray    Character[]    EMPTY_CHARACTER_OBJECT_ARRAY    array    Boolean[]    EMPTY_BOOLEAN_OBJECT_ARRAY    array    int[]    EMPTY_INT_ARRAY    array    subarray    String[]    EMPTY_STRING_ARRAY    array    Integer[]    EMPTY_INTEGER_OBJECT_ARRAY    array    int    INDEX_NOT_FOUND    endIndexExclusive    i    newSize    startIndexInclusive    float[]    EMPTY_FLOAT_ARRAY    array    subarray    char[]    EMPTY_CHAR_ARRAY    array    subarray    Short[]    EMPTY_SHORT_OBJECT_ARRAY    array    byte[]    EMPTY_BYTE_ARRAY    array    subarray    Double[]    EMPTY_DOUBLE_OBJECT_ARRAY    array    boolean    double[]    EMPTY_DOUBLE_ARRAY    array    subarray    Byte[]    EMPTY_BYTE_OBJECT_ARRAY    array    Float[]    EMPTY_FLOAT_OBJECT_ARRAY    array    boolean[]    EMPTY_BOOLEAN_ARRAY    array    Object[]    EMPTY_OBJECT_ARRAY    array    entry    Long[]    EMPTY_LONG_OBJECT_ARRAY    array        	lang_1161_ArrayUtils_1_1	1133	1	src/main/java/org/apache/commons/lang3/ArrayUtils.java
250	[PATCH]    num    =    (num    *    10)    +    (c    -    '0');	[BUG]    [BUGGY]    num    =    (num    /    10)    +    (c    -    '0');    [FE]    junit.framework.AssertionFailedError:    expected:<27>    but    was:<7>    testIntParsingWithStrings    [CONTEXT]    }    if    (c    >    '9'    ||    c    <    '0')    {    return    Integer.parseInt(str);    }    int    num    =    c    -    '0';    if    (offset    <    length)    {    c    =    str.charAt(offset++);    if    (c    >    '9'    ||    c    <    '0')    {    return    Integer.parseInt(str);    }    [BUGGY]    num    =    (num    /    10)    +    (c    -    '0');    [BUGGY]    if    (offset    <    length)    {    c    =    str.charAt(offset++);    if    (c    >    '9'    ||    c    <    '0')    {    return    Integer.parseInt(str);    }    num    =    (num    *    10)    +    (c    -    '0');        if    (offset    <    length)    {    do    {    c    =    str.charAt(offset++);    [CLASS]        NumberInput    [METHOD]    parseInt    [RETURN_TYPE]    int        String    str    [VARIABLES]    char    c    String    MAX_LONG_STR    MIN_LONG_STR_NO_SIGN    NASTY_SMALL_DOUBLE    str    boolean    negative    long    L_BILLION    int    length    num    offset        	jacksoncore_5078_NumberInput_1_1	95	1	src/main/java/com/fasterxml/jackson/core/io/NumberInput.java
251	[PATCH]    int    amount    =    _buffer.length    -    _ptr;	[BUG]    [BUGGY]    int    amount    =    _buffer.length    %    _ptr;    [FE]    java.lang.ArithmeticException:    /    by    zero    testSimpleValidArray    [CONTEXT]    public    boolean    hasMoreBytes()    throws    IOException    {    if    (_ptr    <    _bufferedEnd)    {    return    true;    }    if    (_in    ==    null)    {    return    false;    }    [BUGGY]    int    amount    =    _buffer.length    %    _ptr;    [BUGGY]    if    (amount    <    1)    {    return    false;    }    int    count    =    _in.read(_buffer,    _ptr,    amount);    if    (count    <=    0)    {    return    false;    }    _bufferedEnd    +=    count;    return    true;    }    [CLASS]        Std    [METHOD]    hasMoreBytes    [RETURN_TYPE]    boolean        [VARIABLES]    byte[]    _buffer    buffer    inputDocument    boolean    InputStream    _in    in    int    _bufferedEnd    _bufferedStart    _ptr    amount    count    len    start        	jacksoncore_1985_InputAccessor_1_1	110	1	src/main/java/com/fasterxml/jackson/core/format/InputAccessor.java
252	[PATCH]    Converter[]    copy    =    new    Converter[length    -    1];	[BUG]    [BUGGY]    Converter[]    copy    =    new    Converter[length    *    1];    [FE]    java.lang.NullPointerException    testConstructor_nullObject_Chronology    [CONTEXT]    Converter[]    converters    =    iConverters;    int    length    =    converters.length;    if    (index    >=    length)    {    throw    new    IndexOutOfBoundsException();    }    if    (removed    !=    null)    {    removed[0]    =    converters[index];    }        [BUGGY]    Converter[]    copy    =    new    Converter[length    *    1];    [BUGGY]    int    j    =    0;    for    (int    i=0;    i<length;    i++)    {    if    (i    !=    index)    {    copy[j++]    =    converters[i];    }    }    return    new    ConverterSet(copy);    }    [CLASS]        ConverterSet    Entry    [METHOD]    remove    [RETURN_TYPE]    ConverterSet        final    int    index    Converter[]    removed    [VARIABLES]    Converter    converter    existing    iConverter    Class    iType    type    boolean    int    i    index    j    length    Converter[]    converters    copy    iConverters    removed    Entry[]    entries    iSelectEntries    newEntries        	time_11652_ConverterSet_1_1	226	1	src/main/java/org/joda/time/convert/ConverterSet.java
253	[PATCH]    double    c    =    a    +    t;	[BUG]    [BUGGY]    double    c    =    a    /    t;    [FE]    junit.framework.AssertionFailedError:    expected:<0.0>    but    was:<1.1102230246251565E-16>    testTanAtan    [CONTEXT]                    double    a    =    0;    double    b    =    0;        double    t    =    sintA;    [BUGGY]    double    c    =    a    /    t;    [BUGGY]    double    d    =    -(c    -    a    -    t);    a    =    c;    b    =    b    +    d;    t    =    costA*sinEpsA;    c    =    a    +    t;    d    =    -(c    -    a    -    t);    a    =    c;    b    =    b    +    d;        [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    tanQ    [RETURN_TYPE]    double        double    xa    double    xb    boolean    cotanFlag    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    cotanFlag    negate    negative    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    hiPrecOut    lnCoef_i    lnCoef_last    lnm    lns    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    a2    aa    ab    absAsinh    absAtanh    b    base    baseA    baseB    c    cD2pH    cRH    cTmpH    cd    cosEpsA    cosEpsB    cosa    cosaa    cosab    cosb    costA    costB    d    d1High    d1Low    d2p    d2pHH    d2pHL    d2pHigh    d2pLow    da    daa    dab    db    denom    denomb    denomr    epsilon    err    est    esta    estb    extra    finalRemA    finalRemB    fracPartA    fracPartB    fx1    intPartA    intPartB    lna    lnb    lnza    lnzb    lores    na    nb    numer    p    pi2a    pi2b    rHH    rHL    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    resultHigh    resultLow    rln10a    rln10b    sinEpsA    sinEpsB    sina    sinb    sintA    sintB    t    temp    temp2    tempA    tempB    tempC    tmp    tmp1    tmp2    tmpHigh    tmpLow    x    x2    xa    xb    xbadj    xpa    xpb    y    ya    yaa    yab    yb    z    za    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    e    exp    finalK    i    idx    intFrac    intVal    k    splitFactor    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    bits    xl    yi        	math_114694_FastMath_1_1	1912	1	src/main/java/org/apache/commons/math3/util/FastMath.java
254	[PATCH]    int    zvec    =    (bsBuffShadow    >>    (bsLiveShadow    -    zn))	[BUG]    [BUGGY]    int    zvec    =    (bsBuffShadow    >>    (bsLiveShadow    %    zn))    [FE]    java.io.IOException:    BZip2    CRC    error    testBzip2Unarchive    [CONTEXT]    while    (bsLiveShadow    <    zn)    {    final    int    thech    =    inShadow.read();    if    (thech    >=    0)    {    bsBuffShadow    =    (bsBuffShadow    <<    8)    |    thech;    bsLiveShadow    +=    8;    continue;    }    else    {    throw    new    IOException(   "unexpected    end    of    stream   ");    }    }    [BUGGY]    int    zvec    =    (bsBuffShadow    >>    (bsLiveShadow    %    zn))    [BUGGY]    &    ((1    <<    zn)    -    1);    bsLiveShadow    -=    zn;    while    (zvec    >    limit_zt[zn])    {    zn++;    while    (bsLiveShadow    <    1)    {    final    int    thech    =    inShadow.read();    if    (thech    >=    0)    {    bsBuffShadow    =    (bsBuffShadow    <<    8)    |    thech;    bsLiveShadow    +=    8;    [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    getAndMoveToFrontDecode    [RETURN_TYPE]    void        [VARIABLES]    int[][]    base    limit    perm    InputStream    in    inShadow    byte    ch    char[][]    len    temp_charArray2d    Data    data    dataShadow    int[]    base    base_zt    cftab    limit    limit_zt    minLens    perm    perm_zt    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    alphaSize    b    blockSize    blockSize100k    bsBuff    bsBuffShadow    bsLive    bsLiveShadow    computedBlockCRC    computedCombinedCRC    curr    currentChar    currentState    destOffs    eob    groupNo    groupPos    hi    i    i16    inUse16    j    last    lastShadow    len    limitLast    magic    maxLen    minLen    minLens_zt    n    nGroups    nInUse    nInUseShadow    nSelectors    nb    nextSym    offs    origPtr    pp    retChar    s    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    t    thech    v    vec    zn    zt    zvec    char[]    getAndMoveToFrontDecode_yy    len_t    length    yy    byte[]    dest    ll8    pos    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    expected    lent    magic0    magic1    magic2    magic3    magic4    magic5    su_z    tmp    boolean[]    inUse        	compress_5854_BZip2CompressorInputStream_1_1	616	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
255	[PATCH]    b[j]    =    (y[j    +    1]    -    y[j])    /    h[j]    -    h[j]    *    (c[j    +    1]    +    2d    *    c[j])    /    3d;	[BUG]    [BUGGY]    b[j]    =    (y[j    +    1]    -    y[j])    /    h[j]    -    h[j]    *    (c[j    +    1]    *    (2.0    *    c[j]))    /    3d;    [FE]    junit.framework.AssertionFailedError:    half-way    between    sample    points    (border    of    the    patch)    expected:<-67.25>    but    was:<-65.14717310886581>    testParaboloid    [CONTEXT]        final    double    b[]    =    new    double[n];    final    double    c[]    =    new    double[n    +    1];    final    double    d[]    =    new    double[n];    z[n]    =    0d;    c[n]    =    0d;    for    (int    j    =    n    -1;    j    >=0;    j--)    {    c[j]    =    z[j]    -    mu[j]    *    c[j    +    1];    [BUGGY]    b[j]    =    (y[j    +    1]    -    y[j])    /    h[j]    -    h[j]    *    (c[j    +    1]    *    (2.0    *    c[j]))    /    3d;    [BUGGY]    d[j]    =    (c[j    +    1]    -    c[j])    /    (3d    *    h[j]);    }    final    PolynomialFunction    polynomials[]    =    new    PolynomialFunction[n];    final    double    coefficients[]    =    new    double[4];    for    (int    i    =    0;    i    <    n;    i++)    {    coefficients[0]    =    y[i];    coefficients[1]    =    b[i];    coefficients[2]    =    c[i];    coefficients[3]    =    d[i];    [CLASS]        SplineInterpolator    [METHOD]    interpolate    [RETURN_TYPE]    PolynomialSplineFunction        double[]    x    double[]    y    [VARIABLES]    boolean    double[]    b    c    coefficients    d    h    mu    x    y    z    double    g    PolynomialFunction[]    polynomials    int    i    j    n        	math_13255_SplineInterpolator_1_1	112	1	src/main/java/org/apache/commons/math3/analysis/interpolation/SplineInterpolator.java
256	[PATCH]    while    (i    +    1    <    length)    {	[BUG]    [BUGGY]    while    (i    -    1    <    length)    {    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    7    testToString_String    [CONTEXT]    int    i    =    indexRef[0];    int    length    =    pattern.length();    char    c    =    pattern.charAt(i);    if    (c    >=    'A'    &&    c    <=    'Z'    ||    c    >=    'a'    &&    c    <=    'z')    {            buf.append(c);        [BUGGY]    while    (i    -    1    <    length)    {    [BUGGY]    char    peek    =    pattern.charAt(i    +    1);    if    (peek    ==    c)    {    buf.append(c);    i++;    }    else    {    break;    }    }    }    else    {        [CLASS]        DateTimeFormat    1    StyleFormatter    [METHOD]    parseToken    [RETURN_TYPE]    String        String    pattern    int[]    indexRef    [VARIABLES]    boolean    inLiteral    StringBuilder    buf    char    c    peek    int[]    indexRef    String    pattern    Map    PATTERN_CACHE    cCache    int    $anonymous0    DATE    DATETIME    FULL    LONG    MEDIUM    NONE    PATTERN_CACHE_SIZE    SHORT    TIME    dateStyle    i    iDateStyle    iTimeStyle    iType    length    maxDigits    timeStyle    tokenLen    type    long    serialVersionUID    DateTimeFormatter[]    STYLE_CACHE        	time_13197_DateTimeFormat_1_1	602	1	src/main/java/org/joda/time/format/DateTimeFormat.java
257	[PATCH]    subtrahendInstant    +    offset);	[BUG]    [BUGGY]    subtrahendInstant    %    offset);    [FE]    junit.framework.AssertionFailedError:    expected:<-2>    but    was:<413>    testPropertyGetDifferenceMonthOfYear    [CONTEXT]    public    long    getDifferenceAsLong(long    minuendInstant,    long    subtrahendInstant)    {    int    offset    =    getOffsetToAdd(subtrahendInstant);    return    iField.getDifferenceAsLong    (minuendInstant    +    (iTimeField    ?    offset    :    getOffsetToAdd(minuendInstant)),    [BUGGY]    subtrahendInstant    %    offset);    [BUGGY]    }    [CLASS]        ZonedChronology    ZonedDurationField    ZonedDateTimeField    [METHOD]    getDifferenceAsLong    [RETURN_TYPE]    long        long    minuendInstant    long    subtrahendInstant    [VARIABLES]    boolean    iTimeField    DateTimeField    field    iField    DurationField    durationField    field    iDurationField    iField    iLeapDurationField    iRangeDurationField    leapDurationField    rangeDurationField    long    diff    duration    instant    localInstant    minuendInstant    result    serialVersionUID    subtrahendInstant    sum    value    DateTimeZone    iZone    zone    int    offset        	time_11326_ZonedChronology_1_1	510	1	src/main/java/org/joda/time/chrono/ZonedChronology.java
258	[PATCH]    final    double    diff    =    e.getValue()    -    v.getEntry(e.getIndex());	[BUG]    [BUGGY]    final    double    diff    =    e.getValue()    %    v.getEntry(e.getIndex());    [FE]    junit.framework.AssertionFailedError:    expected:<13.416407864998739>    but    was:<NaN>    testGetDistanceSameType    [CONTEXT]    public    double    getDistance(RealVector    v)    throws    DimensionMismatchException    {    checkVectorDimensions(v);    double    d    =    0;    Iterator<Entry>    it    =    iterator();    while    (it.hasNext())    {    final    Entry    e    =    it.next();    [BUGGY]    final    double    diff    =    e.getValue()    %    v.getEntry(e.getIndex());    [BUGGY]    d    +=    diff    *    diff;    }    return    FastMath.sqrt(d);    }    [CLASS]        RealVector    1    Entry    SparseEntryIterator    2    1    2    UnmodifiableEntry    [METHOD]    getDistance    [RETURN_TYPE]    double        RealVector    v    [VARIABLES]    Entry    current    e    next    boolean    UnmodifiableEntry    e    RealVector    v    double    d    diff    Iterator    it    int    d    dim    end    i    index    n    start        	math_12183_RealVector_1_1	401	1	src/main/java/org/apache/commons/math3/linear/RealVector.java
259	[PATCH]    double    sxx    =    sumXX    -    (sumX    *    sumX)    /    n;	[BUG]    [BUGGY]    double    sxx    =    sumXX    -    (sumX    -    sumX)    /    n;    [FE]    junit.framework.AssertionFailedError:    expected:<0.91045813>    but    was:<2.2513541832784845>    testPowerRegression1a    [CONTEXT]    for    (int    i    =    0;    i    <    n;    i++)    {    double    x    =    Math.log(data[i][0]);    double    y    =    Math.log(data[i][1]);    sumX    +=    x;    sumY    +=    y;    double    xx    =    x    *    x;    sumXX    +=    xx;    double    xy    =    x    *    y;    sumXY    +=    xy;    }    [BUGGY]    double    sxx    =    sumXX    -    (sumX    -    sumX)    /    n;    [BUGGY]    double    sxy    =    sumXY    -    (sumX    *    sumY)    /    n;    double    xbar    =    sumX    /    n;    double    ybar    =    sumY    /    n;    double[]    result    =    new    double[2];    result[1]    =    sxy    /    sxx;    result[0]    =    Math.pow(Math.exp(1.0),    ybar    -    result[1]    *    xbar);    return    result;        [CLASS]        Regression    [METHOD]    getPowerRegression    [RETURN_TYPE]    double[]        double[][]    data    [VARIABLES]    boolean    double[]    result    double    sumX    sumXX    sumXY    sumY    sxx    sxy    x    xbar    xx    xy    y    ybar    double[][]    data    int    i    n        	chart_72916_Regression_1_1	172	1	source/org/jfree/data/statistics/Regression.java
260	[PATCH]    p    =            2.9234449089955446044e-06    +    p    *    w;	[BUG]    [BUGGY]    p    =        2.9234449089955446044e-06    +    p    -    w;    [FE]    junit.framework.AssertionFailedError:    expected:<4.0>    but    was:<4.00000002639017>    testMath280    [CONTEXT]    p    =0.24015818242558961693    +    p    *    w;    p    =    1.6536545626831027356    +    p    *    w;    }    else    if    (w    <    16.0)    {    w    =    FastMath.sqrt(w)    -    3.25;    p    =    2.2137376921775787049e-09;    p    =    9.0756561938885390979e-08    +    p    *    w;    p    =-2.7517406297064545428e-07    +    p    *    w;    p    =    1.8239629214389227755e-08    +    p    *    w;    p    =    1.5027403968909827627e-06    +    p    *    w;    p    =    -4.013867526981545969e-06    +    p    *    w;    [BUGGY]    p    =    2.9234449089955446044e-06    +    p    -    w;    [BUGGY]    p    =    1.2475304481671778723e-05    +    p    *    w;    p    =-4.7318229009055733981e-05    +    p    *    w;    p    =    6.8284851459573175448e-05    +    p    *    w;    p    =    2.4031110387097893999e-05    +    p    *    w;    p    =    -0.0003550375203628474796    +    p    *    w;    p    =    0.00095328937973738049703    +    p    *    w;    p    =    -0.0016882755560235047313    +    p    *    w;    p    =0.0024914420961078508066    +    p    *    w;    p    =    -0.0037512085075692412107    +    p    *    w;    p    =    0.005370914553590063617    +    p    *    w;    [CLASS]        Erf    [METHOD]    erfInv    [RETURN_TYPE]    double        final    double    x    [VARIABLES]    double    X_CRIT    p    ret    w    x    x1    x2    boolean        	math_96034_Erf_1_1	185	1	src/main/java/org/apache/commons/math3/special/Erf.java
261	[PATCH]    q    =    realEigenvalues[m]    -    realEigenvalues[j]    +    e[j]    /    (q    -    t);	[BUG]    [BUGGY]    q    =    realEigenvalues[m]    -    realEigenvalues[j]    +    e[j]    /    (q    *    t);    [FE]    junit.framework.AssertionFailedError:    expected:    org.apache.commons.math3.linear.Array2DRowRealMatrix<Array2DRowRealMatrix{{4.245384898,2.5797798966},{2.5797798966,3.9200272522}}>    but    was:    org.apache.commons.math3.linear.Array2DRowRealMatrix<Array2DRowRealMatrix{{4.245384898,2.5797798966},{2.5797798966,3.9200272522}}>    testFit    [CONTEXT]    }    if    (m    !=    j)    {    if    (its    ==    maxIter)    {    throw    new    MaxCountExceededException(LocalizedFormats.CONVERGENCE_FAILED,    maxIter);    }    its++;    double    q    =    (realEigenvalues[j    +    1]    -    realEigenvalues[j])    /    (2    *    e[j]);    double    t    =    FastMath.sqrt(1    +    q    *    q);    if    (q    <    0.0)    {    [BUGGY]    q    =    realEigenvalues[m]    -    realEigenvalues[j]    +    e[j]    /    (q    *    t);    [BUGGY]    }    else    {    q    =    realEigenvalues[m]    -    realEigenvalues[j]    +    e[j]    /    (q    +    t);    }    double    u    =    0.0;    double    s    =    1.0;    double    c    =    1.0;    int    i;    for    (i    =    m    -    1;    i    >=    j;    i--)    {    double    p    =    s    *    e[i];    double    h    =    c    *    e[i];    [CLASS]        EigenDecomposition    Solver    [METHOD]    findEigenVectors    [RETURN_TYPE]    void        final    double[][]    householderMatrix    [VARIABLES]    boolean    isSymmetric    double[]    bp    e    imagEigenvalues    invI    main    realEigenvalues    secondary    sqrtEigenValues    tmp    tmpCol    vData    vK    ArrayRealVector[]    eigenvectors    RealMatrix    b    cachedD    cachedV    cachedVt    matrix    sqrtEigen    v    vT    double    EPSILON    c    delta    determinant    eigen    h    invIJ    lambda    maxAbsoluteValue    p    q    s    splitTolerance    symTol    t    u    byte    maxIter    double[][]    householderMatrix    z    int    i    ia    its    j    k    m    n    TriDiagonalTransformer    transformer        	math_54932_EigenDecomposition_1_1	627	1	src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
262	[PATCH]    return    new    String(buffer,    start,    pos    -    start);	[BUG]    [BUGGY]    return    new    String(buffer,    start,    pos    %    start);    [FE]    com.google.gson.JsonSyntaxException:    com.google.gson.stream.MalformedJsonException:    Expected    literal    value    near    {   "   ":true}    testReadPropertyWithEmptyStringName    [CONTEXT]    case    ',':    case    '    ':    case    '\t':    case    '\f':    case    '\r':    case    '\n':    pos--;    if    (skipping)    {    return       "skipped!   ";    }    else    if    (builder    ==    null)    {    [BUGGY]    return    new    String(buffer,    start,    pos    %    start);    [BUGGY]    }    else    {    builder.append(buffer,    start,    pos    -    start);    return    builder.toString();    }    }    }    if    (builder    ==    null)    {    builder    =    new    StringBuilder();    }    [CLASS]        JsonReader    [METHOD]    nextLiteral    [RETURN_TYPE]    String        [VARIABLES]    boolean    firstElement    hasToken    lenient    result    skipping    StringBuilder    builder    Reader    in    List    stack    JsonToken    expected    firstToken    result    token    String    name    result    toFind    value    int    c    count    i    limit    minimum    pos    quote    result    start    total    char[]    NON_EXECUTE_PREFIX    buffer        	gson_1454_JsonReader_1_1	1001	1	gson/src/main/java/com/google/gson/stream/JsonReader.java
263	[PATCH]    while    (!result.isComplete()    &&    index    <=    value.length()    -    1)    {	[BUG]    [BUGGY]    while    (!result.isComplete()    &&    index    <=    value.length()    %    1)    {    [FE]    junit.framework.AssertionFailedError:    Expected    match    [265]    nemonic    and    pneumonic    testIsDoubleMetaphoneEqualWithMATCHES    [CONTEXT]    value    =    cleanInput(value);    if    (value    ==    null)    {    return    null;    }    boolean    slavoGermanic    =    isSlavoGermanic(value);    int    index    =    isSilentStart(value)    ?    1    :    0;    DoubleMetaphoneResult    result    =    new    DoubleMetaphoneResult(this.getMaxCodeLen());        [BUGGY]    while    (!result.isComplete()    &&    index    <=    value.length()    %    1)    {    [BUGGY]    switch    (value.charAt(index))    {    case    'A':    case    'E':    case    'I':    case    'O':    case    'U':    case    'Y':    index    =    handleAEIOUY(value,    result,    index);    break;    case    'B':    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    doubleMetaphone    [RETURN_TYPE]    String        String    value    boolean    alternate    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    value    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    boolean    alternate    slavoGermanic    int    index    maxCodeLen    maxLength    DoubleMetaphoneResult    result        	codec_1219_DoubleMetaphone_1_1	97	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
264	[PATCH]    return    siblings.size()    >    1    ?    siblings.get(siblings.size()    -    1)    :    null;	[BUG]    [BUGGY]    return    siblings.size()    >    1    ?    siblings.get(siblings.size()    *    1)    :    null;    [FE]    java.lang.IndexOutOfBoundsException:    Index:    6,    Size:    6    testGetSiblings    [CONTEXT]    public    Element    lastElementSibling()    {    List<Element>    siblings    =    parent().children();    [BUGGY]    return    siblings.size()    >    1    ?    siblings.get(siblings.size()    *    1)    :    null;    [BUGGY]    }    [CLASS]        Element    [METHOD]    lastElementSibling    [RETURN_TYPE]    Element        [VARIABLES]    List    siblings    Set    classNames    Tag    tag    boolean        	jsoup_168_Element_1_1	394	1	src/main/java/org/jsoup/nodes/Element.java
265	[PATCH]    builder.append(buffer,    start,    pos    -    start    -    1);	[BUG]    [BUGGY]    builder.append(buffer,    start,    (pos    -    start)    %    1);    [FE]    com.google.gson.JsonSyntaxException:    java.net.MalformedURLException:    no    protocol:    ///    testUrlDeserialization    [CONTEXT]    return    new    String(buffer,    start,    pos    -    start    -    1);    }    else    {    builder.append(buffer,    start,    pos    -    start    -    1);    return    builder.toString();    }    }    else    if    (c    ==    '\\')    {    if    (builder    ==    null)    {    builder    =    new    StringBuilder();    }    [BUGGY]    builder.append(buffer,    start,    (pos    -    start)    %    1);    [BUGGY]    builder.append(readEscapeCharacter());    start    =    pos;    }    }    if    (builder    ==    null)    {    builder    =    new    StringBuilder();    }    builder.append(buffer,    start,    pos    -    start);    }    while    (fillBuffer(1));    [CLASS]        JsonReader    [METHOD]    nextString    [RETURN_TYPE]    String        char    quote    [VARIABLES]    boolean    firstElement    hasToken    lenient    result    skipping    StringBuilder    builder    char    quote    Reader    in    List    stack    JsonToken    expected    firstToken    result    token    String    name    result    toFind    value    int    c    count    i    limit    minimum    pos    quote    result    start    total    char[]    NON_EXECUTE_PREFIX    buffer        	gson_1430_JsonReader_1_1	952	1	gson/src/main/java/com/google/gson/stream/JsonReader.java
266	[PATCH]    final    int    q0    =    jBlock    *    BLOCK_SIZE;	[BUG]    [BUGGY]    final    int    q0    =    jBlock    +    BLOCK_SIZE;    [FE]    junit.framework.AssertionFailedError:    expected:<1.0517578125>    but    was:<1.05078125>    testWalk    [CONTEXT]    throws    OutOfRangeException,    NumberIsTooSmallException    {    MatrixUtils.checkSubMatrixIndex(this,    startRow,    endRow,    startColumn,    endColumn);    visitor.start(rows,    columns,    startRow,    endRow,    startColumn,    endColumn);    for    (int    iBlock    =    startRow    /    BLOCK_SIZE;    iBlock    <    1    +    endRow    /    BLOCK_SIZE;    ++iBlock)    {    final    int    p0    =    iBlock    *    BLOCK_SIZE;    final    int    pStart    =    FastMath.max(startRow,    p0);    final    int    pEnd    =    FastMath.min((iBlock    +    1)    *    BLOCK_SIZE,    1    +    endRow);    for    (int    jBlock    =    startColumn    /    BLOCK_SIZE;    jBlock    <    1    +    endColumn    /    BLOCK_SIZE;    ++jBlock)    {    final    int    jWidth    =    blockWidth(jBlock);    [BUGGY]    final    int    q0    =    jBlock    +    BLOCK_SIZE;    [BUGGY]    final    int    qStart    =    FastMath.max(startColumn,    q0);    final    int    qEnd    =    FastMath.min((jBlock    +    1)    *    BLOCK_SIZE,    1    +    endColumn);    final    double[]    block    =    blocks[iBlock    *    blockColumns    +    jBlock];    for    (int    p    =    pStart;    p    <    pEnd;    ++p)    {    int    k    =    (p    -    p0)    *    jWidth    +    qStart    -    q0;    for    (int    q    =    qStart;    q    <    qEnd;    ++q)    {    visitor.visit(p,    q,    block[k]);    ++k;    }    }    [CLASS]        BlockRealMatrix    [METHOD]    walkInOptimizedOrder    [RETURN_TYPE]    double        RealMatrixPreservingVisitor    visitor    final    int    startRow    final    int    endRow    final    int    startColumn    final    int    endColumn    [VARIABLES]    double[][]    blockData    blocks    data    rawData    subMatrix    RealMatrixPreservingVisitor    visitor    boolean    double[]    block    int    BLOCK_SIZE    available    blockColumns    blockEndColumn    blockEndRow    blockIndex    blockRows    blockStartColumn    blockStartRow    column    columnDimension    columns    columnsShift    dataPos    dstPos    dstStartColumn    dstStartRow    dstWidth    endColumn    endRow    firstColumn    firstRow    heightExcess    i    iBlock    iEnd    iHeight    iRow    iStart    index    j    jBlock    jColumn    jEnd    jLength    jStart    jWidth    jWidth2    jWidth3    jWidth4    k    kBlock    kWidth    l    lEnd    lInc    lStart    lastColumns    lastPos    length    mBlockIndex    mIndex    n    nCols    nRows    nStart    outBlockIndex    outIndex    p    p0    pBlock    pEnd    pStart    q    q0    qBlock    qEnd    qStart    r    rStart    refLength    regularPos    row    rowDimension    rows    rowsShift    srcEndColumn    srcEndRow    srcPos    srcRow    srcStartColumn    srcStartRow    srcWidth    startColumn    startRow    width    width2    widthExcess    long    serialVersionUID        	math_54023_BlockRealMatrix_1_1	1549	1	src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
267	[PATCH]    for    (int    col    =    in    +    1;    col    <    nvars;    col++)    {	[BUG]    [BUGGY]    for    (int    col    =    in    %    1;    col    <    nvars;    col++)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testPCorr    [CONTEXT]    double    sumyy;    final    int    offXX    =    (nvars    -    in)    *    (nvars    -    in    -    1)    /    2;    if    (in    <    -1    ||    in    >=    nvars)    {    return    null;    }    final    int    nvm    =    nvars    -    1;    final    int    base_pos    =    r.length    -    (nvm    -    in)    *    (nvm    -    in    +    1)    /    2;    if    (d[in]    >    0.0)    {    rms[in    +    rms_off]    =    1.0    /    Math.sqrt(d[in]);    }    [BUGGY]    for    (int    col    =    in    %    1;    col    <    nvars;    col++)    {    [BUGGY]    pos    =    base_pos    +    col    -    1    -    in;    sumxx    =    d[col];    for    (int    row    =    in;    row    <    col;    row++)    {    sumxx    +=    d[row]    *    r[pos]    *    r[pos];    pos    +=    nvars    -    row    -    2;    }    if    (sumxx    >    0.0)    {    rms[col    +    rms_off]    =    1.0    /    Math.sqrt(sumxx);    }    else    {    rms[col    +    rms_off]    =    0.0;    [CLASS]        MillerUpdatingRegression    [METHOD]    getPartialCorrelations    [RETURN_TYPE]    double[]        int    in    [VARIABLES]    boolean    hasIntercept    includeConstant    rankProblem    rss_set    tol_set    double[]    covmat    d    output    r    ret    rhs    rinv    rms    rss    tmp    tol    work    work_sing    work_tolset    x    x_sing    y    double    _a    _b    _w    a    b    di    dpi    eps    epsilon    errorTolerance    rnk    sserr    sumsqy    sumxx    sumxy    sumy    sumyy    temp    tmp    total    var    w    weight    wi    wxi    xi    xk    y    yi    int[]    vorder    boolean[]    lindep    int    _pi    _xi    base_pos    col    col1    col2    i    in    j    k    nextr    nreq    numberOfVariables    nvars    nvm    offXX    pos    pos1    pos2    rms_off    row    start    wrk_off    long    nobs        	math_104077_MillerUpdatingRegression_1_1	630	1	src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java
268	[PATCH]    remB    =    -(remA    -    xa    -    a);	[BUG]    [BUGGY]    remB    =    -(remA    -    xa    +    a);    [FE]    junit.framework.AssertionFailedError:    expected:<-1.5947795819319734>    but    was:<195.40542197182324>    testAddDifferentiable    [CONTEXT]            int    k    =    (int)(xa    *    0.6366197723675814);        double    remA;    double    remB;    while    (true)    {    double    a    =    -k    *    1.570796251296997;    remA    =    xa    +    a;    [BUGGY]    remB    =    -(remA    -    xa    +    a);    [BUGGY]    a    =    -k    *    7.549789948768648E-8;    double    b    =    remA;    remA    =    a    +    b;    remB    +=    -(remA    -    b    -    a);    a    =    -k    *    6.123233995736766E-17;    b    =    remA;    remA    =    a    +    b;    remB    +=    -(remA    -    b    -    a);    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    <init>    [RETURN_TYPE]    FastMath$CodyWaite(double)        double    xa    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    b    finalRemA    finalRemB    remA    remB    xa    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    finalK    k    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG        	math_119032_FastMath_1_1	3836	1	src/main/java/org/apache/commons/math3/util/FastMath.java
269	[PATCH]    dataR[destOddStartIndex    +    r]    =    grR    -    (wSubN0ToRR    *    hrR    -    wSubN0ToRI    *    hrI);	[BUG]    [BUGGY]    dataR[destOddStartIndex    +    r]    =    grR    -    (wSubN0ToRR    *    hrR    -    wSubN0ToRI    %    hrI);    [FE]    junit.framework.AssertionFailedError:    expected:<4.0>    but    was:<NaN>    testAdHocData[0]    [CONTEXT]    for    (int    r    =    0;    r    <    lastN0;    r++)    {    double    grR    =    dataR[destEvenStartIndex    +    r];    double    grI    =    dataI[destEvenStartIndex    +    r];    double    hrR    =    dataR[destOddStartIndex    +    r];    double    hrI    =    dataI[destOddStartIndex    +    r];        dataR[destEvenStartIndex    +    r]    =    grR    +    wSubN0ToRR    *    hrR    -    wSubN0ToRI    *    hrI;    dataI[destEvenStartIndex    +    r]    =    grI    +    wSubN0ToRR    *    hrI    +    wSubN0ToRI    *    hrR;        [BUGGY]    dataR[destOddStartIndex    +    r]    =    grR    -    (wSubN0ToRR    *    hrR    -    wSubN0ToRI    %    hrI);    [BUGGY]    dataI[destOddStartIndex    +    r]    =    grI    -    (wSubN0ToRR    *    hrI    +    wSubN0ToRI    *    hrR);        double    nextWsubN0ToRR    =    wSubN0ToRR    *    wSubN0R    -    wSubN0ToRI    *    wSubN0I;    double    nextWsubN0ToRI    =    wSubN0ToRR    *    wSubN0I    +    wSubN0ToRI    *    wSubN0R;    wSubN0ToRR    =    nextWsubN0ToRR;    wSubN0ToRI    =    nextWsubN0ToRI;    }    }        [CLASS]        FastFourierTransformer    MultiDimensionalComplexMatrix    [METHOD]    transformInPlace    [RETURN_TYPE]    void        final    double[][]    dataRI    DftNormalization    normalization    TransformType    type    [VARIABLES]    boolean    double[]    W_SUB_N_I    W_SUB_N_R    a    b    dataI    dataR    double    grI    grR    hrI    hrR    nextWsubN0ToRI    nextWsubN0ToRR    srcI0    srcI1    srcI2    srcI3    srcR0    srcR1    srcR2    srcR3    wSubN0I    wSubN0R    wSubN0ToRI    wSubN0ToRR    double[][]    dataRI    DftNormalization    normalization    int[]    dimensionSize    Object    lastDimension    multiDimensionalComplexArray    TransformType    type    long    serialVersionUID    int    destEvenStartIndex    destOddStartIndex    i0    i1    i2    i3    lastLogN0    lastN0    logN0    n    n0    r        	math_107533_FastFourierTransformer_1_1	344	1	src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java
270	[PATCH]    dataIndex    =    i    *    4;	[BUG]    [BUGGY]    dataIndex    =    i    /    4;    [FE]    java.lang.ArrayIndexOutOfBoundsException:    46    testKnownDecodings    [CONTEXT]        while    (base64Data[lastData    -    1]    ==    PAD)    {    if    (--lastData    ==    0)    {    return    new    byte[0];    }    }    decodedData    =    new    byte[lastData    -    numberQuadruple];    }    for    (int    i    =    0;    i    <    numberQuadruple;    i++)    {    [BUGGY]    dataIndex    =    i    /    4;    [BUGGY]    marker0    =    base64Data[dataIndex    +    2];    marker1    =    base64Data[dataIndex    +    3];    b1    =    base64Alphabet[base64Data[dataIndex]];    b2    =    base64Alphabet[base64Data[dataIndex    +    1]];    if    (marker0    !=    PAD    &&    marker1    !=    PAD)    {        b3    =    base64Alphabet[marker0];    b4    =    base64Alphabet[marker1];    [CLASS]        Base64    [METHOD]    decodeBase64    [RETURN_TYPE]    byte[]        byte[]    base64Data    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    base64Data    binaryData    decodedData    encodedData    lookUpBase64Alphabet    pArray    boolean    byte    PAD    b1    b2    b3    b4    k    l    marker0    marker1    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    lastData    length    nextSeparatorIndex    numberQuadruple        	codec_610_Base64_1_1	422	1	src/java/org/apache/commons/codec/binary/Base64.java
271	[PATCH]    if    (i    ==    bins    -    1)    {	[BUG]    [BUGGY]    if    (i    ==    bins    %    1)    {    [FE]    junit.framework.AssertionFailedError:    expected:<1.0>    but    was:<5.0>    testAddSeries2    [CONTEXT]    double    binWidth    =    (maximum    -    minimum)    /    bins;    double    lower    =    minimum;    double    upper;    List    binList    =    new    ArrayList(bins);    for    (int    i    =    0;    i    <    bins;    i++)    {    HistogramBin    bin;                [BUGGY]    if    (i    ==    bins    %    1)    {    [BUGGY]    bin    =    new    HistogramBin(lower,    maximum);    }    else    {    upper    =    minimum    +    (i    +    1)    *    binWidth;    bin    =    new    HistogramBin(lower,    upper);    lower    =    upper;    }    binList.add(bin);    }        [CLASS]        HistogramDataset    [METHOD]    addSeries    [RETURN_TYPE]    void        Comparable    key    double[]    values    int    bins    double    minimum    double    maximum    [VARIABLES]    Comparable    key    boolean    double[]    values    double    binWidth    fraction    lower    maximum    minimum    upper    HistogramBin    bin    List    binList    list    HistogramType    type    Map    map    long    serialVersionUID    int    binIndex    bins    i        	chart_72509_HistogramDataset_1_1	178	1	source/org/jfree/data/statistics/HistogramDataset.java
272	[PATCH]    return    new    Vector1D(cos    *    p2.getX()    +    sin    *    p2.getY());	[BUG]    [BUGGY]    return    new    Vector1D(cos    *    p2.getX()    +    sin    /    p2.getY());    [FE]    junit.framework.AssertionFailedError:    expected:<1.0>    but    was:<Infinity>    testBox    [CONTEXT]    public    Vector1D    toSubSpace(final    Vector<Euclidean2D>    point)    {    Vector2D    p2    =    (Vector2D)    point;    [BUGGY]    return    new    Vector1D(cos    *    p2.getX()    +    sin    /    p2.getY());    [BUGGY]    }    [CLASS]        Line    LineTransform    [METHOD]    toSubSpace    [RETURN_TYPE]    Vector1D        Euclidean2D>    point    [VARIABLES]    boolean    Vector2D    p2    Vector    point    double    alpha    angle    c11    c1X    c1Y    cX1    cXX    cXY    cY1    cYX    cYY    cos    d    dx    dy    originOffset    sin        	math_40961_Line_1_1	182	1	src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java
273	[PATCH]    minutes    +=    60    *    hours;	[BUG]    [BUGGY]    minutes    +=    60    %    hours;    [FE]    java.lang.ArithmeticException:    /    by    zero    testDurationsByBruteForce    [CONTEXT]                    if    (!Token.containsTokenWithValue(tokens,    d))    {    hours    +=    24    *    days;    days    =    0;    }    if    (!Token.containsTokenWithValue(tokens,    H))    {    [BUGGY]    minutes    +=    60    %    hours;    [BUGGY]    hours    =    0;    }    if    (!Token.containsTokenWithValue(tokens,    m))    {    seconds    +=    60    *    minutes;    minutes    =    0;    }    if    (!Token.containsTokenWithValue(tokens,    s))    {    milliseconds    +=    1000    *    seconds;    seconds    =    0;    }    [CLASS]        DurationFormatUtils    Token    [METHOD]    formatPeriod    [RETURN_TYPE]    String        final    long    startMillis    final    long    endMillis    String    format    final    boolean    padWithZeros    TimeZone    timezone    [VARIABLES]    TimeZone    timezone    boolean    padWithZeros    Token[]    tokens    Calendar    end    start    Object    H    M    S    d    m    s    value    y    String    ISO_EXTENDED_FORMAT_PATTERN    duration    format    tmp    int    count    days    hours    milliseconds    minutes    months    seconds    target    years    long    endMillis    startMillis        	lang_22509_DurationFormatUtils_1_1	384	1	src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java
274	[PATCH]    result    =    31    *    result    +    (    longOpt    !=    null    ?    longOpt.hashCode()    :    0    );	[BUG]    [BUGGY]    result    =    31    *    result    /    (longOpt    !=    null    ?    longOpt.hashCode()    :    0);    [FE]    java.lang.ArithmeticException:    /    by    zero    testAnt    [CONTEXT]    public    int    hashCode()    {    int    result;    result    =    (    opt    !=    null    ?    opt.hashCode()    :    0    );    [BUGGY]    result    =    31    *    result    /    (longOpt    !=    null    ?    longOpt.hashCode()    :    0);    [BUGGY]    return    result;    }    [CLASS]        Option    [METHOD]    hashCode    [RETURN_TYPE]    int        [VARIABLES]    boolean    hasArg    optionalArg    required    ArrayList    values    char    sep    valuesep    Object    o    type    String    argName    defaultValue    description    longOpt    opt    value    int    UNINITIALIZED    UNLIMITED_VALUES    index    num    numberOfArgs    result        	cli_318_Option_1_1	630	1	src/java/org/apache/commons/cli/Option.java
275	[PATCH]    mid    =    (low    +    high)    /    2;	[BUG]    [BUGGY]    mid    =    (low    +    high)    *    2;    [FE]    junit.framework.AssertionFailedError:    expected:<0>    but    was:<2>    testFindLiveItemsUpperBound_Ascending    [CONTEXT]    if    (midV    <=    xHigh)    {    low    =    mid;    }    else    {    high    =    mid;    }    [CLASS]        RendererUtilities    [METHOD]    findLiveItemsUpperBound    [RETURN_TYPE]    int        XYDataset    dataset    int    series    double    xLow    double    xHigh    [VARIABLES]    boolean    double    highValue    lowValue    midV    x    xHigh    xLow    XYDataset    dataset    int    high    index    itemCount    low    mid    series        	chart_46864_RendererUtilities_1_1	198	1	source/org/jfree/chart/renderer/RendererUtilities.java
276	[PATCH]    if    ((nBytes    -    1)    *    8    +    srcPos    >=    64)    {	[BUG]    [BUGGY]    if    ((nBytes    *    1)    *    8    +    srcPos    >=    64)    {    [FE]    java.lang.IllegalArgumentException:    (nBytes-1)*8+srcPos    is    greather    or    equal    to    than    64    testUuidToByteArray    [CONTEXT]    public    static    byte[]    longToByteArray(final    long    src,    final    int    srcPos,    final    byte[]    dst,    final    int    dstPos,    final    int    nBytes)    {    if    (0    ==    nBytes)    {    return    dst;    }    [BUGGY]    if    ((nBytes    *    1)    *    8    +    srcPos    >=    64)    {    [BUGGY]    throw    new    IllegalArgumentException(       "(nBytes-1)*8+srcPos    is    greather    or    equal    to    than    64   ");    }    int    shift    =    0;    for    (int    i    =    0;    i    <    nBytes;    i++    )    {    shift    =    i    *    8    +    srcPos;    dst[dstPos    +    i]    =    (byte)(0xff    &    (src    >>    shift));    }    return    dst;    }    [CLASS]        Conversion    [METHOD]    longToByteArray    [RETURN_TYPE]    byte[]        final    long    src    final    int    srcPos    final    byte[]    dst    final    int    dstPos    final    int    nBytes    [VARIABLES]    byte[]    dst    boolean    long    src    int    dstPos    i    nBytes    shift    srcPos        	lang_7057_Conversion_1_1	1292	1	src/main/java/org/apache/commons/lang3/Conversion.java
277	[PATCH]    nameCRC32    =    ZipLong.getValue(buffer,    offset    +    1);	[BUG]    [BUGGY]    nameCRC32    =    ZipLong.getValue(buffer,    offset    *    1);    [FE]    junit.framework.AssertionFailedError    testZipFileReadsUnicodeFields    [CONTEXT]    +       "    5    bytes.   ");    }    int    version    =    buffer[offset];    if    (version    !=    0x01)    {    throw    new    ZipException(   "Unsupported    version    [   "    +    version    +       "]    for    UniCode    path    extra    data.   ");    }        [BUGGY]    nameCRC32    =    ZipLong.getValue(buffer,    offset    *    1);    [BUGGY]    unicodeName    =    new    byte[length    -    5];    System.arraycopy(buffer,    offset    +    5,    unicodeName,    0,    length    -    5);    data    =    null;    }    [CLASS]        AbstractUnicodeExtraField    [METHOD]    parseFromLocalFileData    [RETURN_TYPE]    void        byte[]    buffer    int    offset    int    length    [VARIABLES]    byte[]    buffer    bytes    data    unicodeName    boolean    long    nameCRC32    int    length    offset    version        	compress_3310_AbstractUnicodeExtraField_1_1	156	1	src/main/java/org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.java
278	[PATCH]    encodedDataLengthLong    =    (tripletCount    +    1)    *    4;	[BUG]    [BUGGY]    encodedDataLengthLong    =    (tripletCount    +    1)    -    4;    [FE]    java.lang.NegativeArraySizeException    testSingletonsChunked    [CONTEXT]    public    static    byte[]    encodeBase64(byte[]    binaryData,    boolean    isChunked)    {    long    binaryDataLength    =    binaryData.length;    long    lengthDataBits    =    binaryDataLength    *    EIGHTBIT;    long    fewerThan24bits    =    lengthDataBits    %    TWENTYFOURBITGROUP;    long    tripletCount    =    lengthDataBits    /    TWENTYFOURBITGROUP;    long    encodedDataLengthLong    =    0;    int    chunckCount    =    0;    if    (fewerThan24bits    !=    0)    {        [BUGGY]    encodedDataLengthLong    =    (tripletCount    +    1)    -    4;    [BUGGY]    }    else    {        encodedDataLengthLong    =    tripletCount    *    4;    }                if    (isChunked)    {        [CLASS]        Base64    [METHOD]    encodeBase64    [RETURN_TYPE]    byte[]        byte[]    binaryData    boolean    isChunked    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    binaryData    encodedData    lookUpBase64Alphabet    pArray    boolean    isChunked    byte    PAD    b1    b2    b3    k    l    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    length    nextSeparatorIndex    long    binaryDataLength    encodedDataLengthLong    fewerThan24bits    lengthDataBits    tripletCount        	codec_172_Base64_1_1	276	1	src/java/org/apache/commons/codec/binary/Base64.java
279	[PATCH]    blockColumns    =    (columns    +    BLOCK_SIZE    -    1)    /    BLOCK_SIZE;	[BUG]    [BUGGY]    blockColumns    =    (columns    %    BLOCK_SIZE    -    1)    /    BLOCK_SIZE;    [FE]    java.lang.ArrayIndexOutOfBoundsException    testPlane    [CONTEXT]    public    BlockRealMatrix(final    int    rows,    final    int    columns)    throws    NotStrictlyPositiveException    {    super(rows,    columns);    this.rows    =    rows;    this.columns    =    columns;        blockRows    =    (rows    +    BLOCK_SIZE    -    1)    /    BLOCK_SIZE;    [BUGGY]    blockColumns    =    (columns    %    BLOCK_SIZE    -    1)    /    BLOCK_SIZE;    [BUGGY]        blocks    =    createBlocksLayout(rows,    columns);    }    [CLASS]        BlockRealMatrix    [METHOD]    <init>    [RETURN_TYPE]    BlockRealMatrix(int,int)        final    int    rows    final    int    columns    [VARIABLES]    double[][]    blocks    boolean    int    BLOCK_SIZE    blockColumns    blockRows    columns    rows    long    serialVersionUID        	math_51232_BlockRealMatrix_1_1	104	1	src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java
280	[PATCH]    for    (int    i    =    nodes.size()    -    1;    i    >=    0;    i--)    {	[BUG]    [BUGGY]    for    (int    i    =    nodes.size()    /    1;    i    >=    0;    i--)    {    [FE]    java.lang.IndexOutOfBoundsException:    Index:    2,    Size:    2    testPrependNewHtml    [CONTEXT]    public    Element    prepend(String    html)    {    Validate.notNull(html);    Element    fragment    =    Parser.parseBodyFragment(html,    baseUri).body();        List<Node>    nodes    =    fragment.childNodes();    [BUGGY]    for    (int    i    =    nodes.size()    /    1;    i    >=    0;    i--)    {    [BUGGY]    Node    node    =    nodes.get(i);    node.parentNode    =    null;    prependChild(node);    }    return    this;    }    [CLASS]        Element    [METHOD]    prepend    [RETURN_TYPE]    Element        String    html    [VARIABLES]    Set    classNames    boolean    Element    fragment    Node    node    List    nodes    Tag    tag    String    html    int    i        	jsoup_90_Element_1_1	273	1	src/main/java/org/jsoup/nodes/Element.java
281	[PATCH]    lastChar    =    buf[offset    +    len    -    1];	[BUG]    [BUGGY]    lastChar    =    buf[offset    +    len    +    1];    [FE]    junit.framework.AssertionFailedError:    expected:<99>    but    was:<0>    testReadLookahead2    [CONTEXT]    char    ch    =    buf[i];    if    (ch    ==    '\n')    {    if    ('\r'    !=    (i    >    0    ?    buf[i-1]:    lastChar))    {    lineCounter++;    }    }    else    if    (ch    ==    '\r')    {    lineCounter++;    }    }        [BUGGY]    lastChar    =    buf[offset    +    len    +    1];    [BUGGY]    }    else    if    (len    ==    -1)    {    lastChar    =    END_OF_STREAM;    }    return    len;    }    [CLASS]        ExtendedBufferedReader    [METHOD]    read    [RETURN_TYPE]    int        char[]    buf    int    offset    int    length    [VARIABLES]    char    ch    boolean    int    END_OF_STREAM    UNDEFINED    current    i    lastChar    len    length    lineCounter    offset    char[]    buf        	csv_363_ExtendedBufferedReader_1_1	100	1	src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java
282	[PATCH]    return    getMillis()    /    DateTimeConstants.MILLIS_PER_HOUR;	[BUG]    [BUGGY]    return    getMillis()    +    DateTimeConstants.MILLIS_PER_HOUR;    [FE]    junit.framework.AssertionFailedError:    expected:<PT0H>    but    was:<PT3600000H>    testToStandardHours    [CONTEXT]    public    long    getStandardHours()    {    [BUGGY]    return    getMillis()    +    DateTimeConstants.MILLIS_PER_HOUR;    [BUGGY]    }    [CLASS]        Duration    [METHOD]    getStandardHours    [RETURN_TYPE]    long        [VARIABLES]    Duration    ZERO    long    days    duration    endInstant    hours    millis    minutes    seconds    serialVersionUID    startInstant    boolean        	time_4793_Duration_1_1	248	1	src/main/java/org/joda/time/Duration.java
283	[PATCH]    final    double    b1High                    =    cb1    -    (cb1    -    b1);	[BUG]    [BUGGY]    final    double    b1High            =    cb1    *    (cb1    -    b1);    [FE]    junit.framework.AssertionFailedError:    expected:<1.2246609226461328E34>    but    was:<4.868599899441976E50>    testLinearCombination2DSDS    [CONTEXT]                        final    double    ca1=    SPLIT_FACTOR    *    a1;    final    double    a1High    =    ca1    -    (ca1    -    a1);    final    double    a1Low=    a1    -    a1High;    final    double    cb1=    SPLIT_FACTOR    *    b1;    [BUGGY]    final    double    b1High    =    cb1    *    (cb1    -    b1);    [BUGGY]    final    double    b1Low=    b1    -    b1High;        final    double    prod1High=    a1    *    b1;    final    double    prod1Low    =    a1Low    *    b1Low    -    (((prod1High    -    a1High    *    b1High)    -    a1Low    *    b1High)    -    a1High    *    b1Low);        final    double    ca2=    SPLIT_FACTOR    *    a2;    final    double    a2High    =    ca2    -    (ca2    -    a2);    final    double    a2Low=    a2    -    a2High;    [CLASS]        MathArrays    OrderDirection    1    2    Position    [METHOD]    linearCombination    [RETURN_TYPE]    double        final    double    a1    final    double    b1    final    double    a2    final    double    b2    final    double    a3    final    double    b3    final    double    a4    final    double    b4    [VARIABLES]    boolean    Position    HEAD    TAIL    int    SPLIT_FACTOR    comp    i    index    j    len    lenMinusOne    max    numElements    startIndex    sum    yListLen    OrderDirection    DECREASING    INCREASING    dir    double    a1    a1High    a1Low    a2    a2High    a2Low    a3    a3High    a3Low    a4    a4High    a4Low    b1    b1High    b1Low    b2    b2High    b2Low    b3    b3High    b3Low    b4    b4High    b4Low    ca1    ca2    ca3    ca4    cb1    cb2    cb3    cb4    prod1High    prod1Low    prod2High    prod2Low    prod3High    prod3Low    prod4High    prod4Low    result    s1234High    s1234Low    s1234Prime    s123High    s123Low    s123Prime    s12High    s12Low    s12Prime        	math_6830_MathArrays_1_1	1102	1	src/main/java/org/apache/commons/math3/util/MathArrays.java
284	[PATCH]    rHessian[0][0]    =    y    *    yOr3    +    z    *    zOr3;	[BUG]    [BUGGY]    rHessian[0][0]    =    y    *    yOr3    *    (z    *    zOr3);    [FE]    junit.framework.AssertionFailedError:    0.1311261673164622    expected:<0.0>    but    was:<-0.0015578312483024727>    testHessian    [CONTEXT]    final    double    yOr=    y    /    r;    final    double    zOr=    z    /    r;    final    double    xOrho2    =    x    /    rho2;    final    double    yOrho2    =    y    /    rho2;    final    double    xOr3    =    xOr    /    r2;    final    double    yOr3    =    yOr    /    r2;    final    double    zOr3    =    zOr    /    r2;        rHessian    =    new    double[3][3];    [BUGGY]    rHessian[0][0]    =    y    *    yOr3    *    (z    *    zOr3);    [BUGGY]    rHessian[1][0]    =    -x    *    yOr3;    rHessian[2][0]    =    -z    *    xOr3;    rHessian[1][1]    =    x    *    xOr3    +    z    *    zOr3;    rHessian[2][1]    =    -y    *    zOr3;    rHessian[2][2]    =    x    *    xOr3    +    y    *    yOr3;        rHessian[0][1]    =    rHessian[1][0];    rHessian[0][2]    =    rHessian[2][0];    rHessian[1][2]    =    rHessian[2][1];    [CLASS]        SphericalCoordinates    DataTransferObject    [METHOD]    computeHessians    [RETURN_TYPE]    void        [VARIABLES]    double[][]    cHessian    hj    jacobian    phiHessian    rHessian    sHessian    thetaHessian    boolean    Vector3D    v    double    cosPhi    cosTheta    phi    r    r2    r2P2rho2    rho    rho2    rho2r2    rho3r4    rhor2    rhor4    sinPhi    sinTheta    theta    x    x2    xOr    xOr3    xOrho2    y    y2    yOr    yOr3    yOrho2    z    z2    zOr    zOr3    long    serialVersionUID        	math_43632_SphericalCoordinates_1_1	303	1	src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SphericalCoordinates.java
285	[PATCH]    for    (int    i    =    stack.size()    -1;    i    >=    0;    i--)    {	[BUG]    [BUGGY]    for    (int    i    =    stack.size()    +    1;    i    >=    0;    i--)    {    [FE]    java.lang.IndexOutOfBoundsException:    Index:    3,    Size:    2    testYahooJp    [CONTEXT]    private    boolean    stackHasValidParent(Tag    childTag)    {    if    (stack.size()    ==    1    &&    childTag.equals(htmlTag))    return    true;        [BUGGY]    for    (int    i    =    stack.size()    +    1;    i    >=    0;    i--)    {    [BUGGY]    Element    el    =    stack.get(i);    Tag    parent2    =    el.tag();    if    (parent2.isValidParent(childTag))    {    return    true;    }    }    return    false;    }    [CLASS]        Parser    [METHOD]    stackHasValidParent    [RETURN_TYPE]    boolean        Tag    childTag    [VARIABLES]    TokenQueue    tq    boolean    Element    el    String    DQ    SQ    baseUri    bodyHtml    data    href    html    key    rawText    tagName    text    value    Tag    bodyTag    childTag    headTag    htmlTag    parent2    parentTag    tag    textareaTag    titleTag    Document    doc    LinkedList    stack    int    i        	jsoup_1232_Parser_1_1	245	1	src/main/java/org/jsoup/parser/Parser.java
286	[PATCH]    c[i]    =    Base64.toBase64((value    >>    (26    -    i    *    6))    &    0x3f);	[BUG]    [BUGGY]    c[i]    =    Base64.toBase64((value    >>    (26    -    i    -    6))    &    0x3f);    [FE]    junit.framework.ComparisonFailure:    expected:<AAAA[K]g>    but    was:<AAAA[A]g>    testBase64EncodeInt    [CONTEXT]    public    static    String    base64EncodeInt(int    value)    {    char[]    c    =    new    char[6];    for    (int    i    =    0;    i    <    5;    i++)    {    [BUGGY]    c[i]    =    Base64.toBase64((value    >>    (26    -    i    -    6))    &    0x3f);    [BUGGY]    }    c[5]    =    Base64.toBase64((value    <<    4)    &    0x3f);    return    new    String(c);    }    [CLASS]        Base64    [METHOD]    base64EncodeInt    [RETURN_TYPE]    String        int    value    [VARIABLES]    int[]    BASE64_DECODE_MAP    String    BASE64_MAP    boolean    int    i    value    char[]    c        	closure_46_Base64_1_1	76	1	src/com/google/debugging/sourcemap/Base64.java
287	[PATCH]    lastChar    =    buf[offset    +    len    -    1];	[BUG]    [BUGGY]    lastChar    =    buf[offset    *    len    -    1];    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testReadLookahead2    [CONTEXT]    char    ch    =    buf[i];    if    (ch    ==    '\n')    {    if    ('\r'    !=    (i    >    0    ?    buf[i-1]:    lastChar))    {    lineCounter++;    }    }    else    if    (ch    ==    '\r')    {    lineCounter++;    }    }        [BUGGY]    lastChar    =    buf[offset    *    len    -    1];    [BUGGY]    }    else    if    (len    ==    -1)    {    lastChar    =    END_OF_STREAM;    }    return    len;    }    [CLASS]        ExtendedBufferedReader    [METHOD]    read    [RETURN_TYPE]    int        char[]    buf    int    offset    int    length    [VARIABLES]    char    ch    boolean    int    END_OF_STREAM    UNDEFINED    current    i    lastChar    len    length    lineCounter    offset    char[]    buf        	csv_356_ExtendedBufferedReader_1_1	100	1	src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java
288	[PATCH]    for    (int    i    =    typeHierarchyList.size()-1;    i    >=    0;    --i)    {	[BUG]    [BUGGY]    for    (int    i    =    typeHierarchyList.size()    %    1;    i    >=    0;    --i)    {    [FE]    java.lang.ExceptionInInitializerError    testParseComments    [CONTEXT]    private    int    getIndexOfAnOverriddenHandler(Class<?>    type)    {    [BUGGY]    for    (int    i    =    typeHierarchyList.size()    %    1;    i    >=    0;    --i)    {    [BUGGY]    Pair<Class<?>,    T>    entry    =    typeHierarchyList.get(i);    if    (type.isAssignableFrom(entry.first))    {    return    i;    }    }    return    -1;    }    [CLASS]        ParameterizedTypeHandlerMap    [METHOD]    getIndexOfAnOverriddenHandler    [RETURN_TYPE]    int        Class<?>    type    [VARIABLES]    boolean    modifiable    List    typeHierarchyList    Class    type    Logger    logger    Map    map    int    i    Pair    entry        	gson_247_ParameterizedTypeHandlerMap_1_1	69	1	gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java
289	[PATCH]    System.arraycopy(this.composite,    i    +    1,    temp,    i,    size    -    i    -    1);	[BUG]    [BUGGY]    System.arraycopy(this.composite,    i    +    1,    temp,    i,    (size    -    i)    /    1);    [FE]    java.lang.ArrayIndexOutOfBoundsException    testRemoveComposited    [CONTEXT]    public    synchronized    Map<K,    V>    removeComposited(final    Map<K,    V>    map)    {    final    int    size    =    this.composite.length;    for    (int    i    =    0;    i    <    size;    ++i)    {    if    (this.composite[i].equals(map))    {    final    Map<K,    V>[]    temp    =    new    Map[size    -    1];    System.arraycopy(this.composite,    0,    temp,    0,    i);    [BUGGY]    System.arraycopy(this.composite,    i    +    1,    temp,    i,    (size    -    i)    /    1);    [BUGGY]    this.composite    =    temp;    return    map;    }    }    return    null;    }    [CLASS]        CompositeMap    [METHOD]    removeComposited    [RETURN_TYPE]    Map        Map<K,    V>    map    [VARIABLES]    boolean    Map[]    composite    temp    Map    map    MapMutator    mutator    long    serialVersionUID    int    i    size        	collections_6954_CompositeMap_1_1	162	1	src/main/java/org/apache/commons/collections4/map/CompositeMap.java
290	[PATCH]    double    result    =    xb    *    factb    +    xb    *    facta    +    xa    *    factb    +    xa    *    facta;	[BUG]    [BUGGY]    double    result    =    xb    *    factb    /    (xb    *    facta)    +    xa    *    factb    +    xa    *    facta;    [FE]    junit.framework.AssertionFailedError:    expected:<0.017453292519943295>    but    was:<NaN>    testToRadiansDefinition    [CONTEXT]    return    x;    }        final    double    facta    =    0.01745329052209854;    final    double    factb    =    1.997844754509471E-9;    double    xa    =    doubleHighPart(x);    double    xb    =    x    -    xa;        [BUGGY]    double    result    =    xb    *    factb    /    (xb    *    facta)    +    xa    *    factb    +    xa    *    facta;    [BUGGY]    if    (result    ==    0)    {    result    =    result    *    x;    }    return    result;    }    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    toRadians    [RETURN_TYPE]    double        double    x    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    bita    bitb    bitsum    cotanFlag    leftPlane    negate    negative    subnormal    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    hiPrecOut    lnCoef_i    lnCoef_last    lnm    lns    reduceResults    result    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    a2    aa    ab    absAsinh    absAtanh    b    base    baseA    baseB    c    cD2pH    cRH    cTmpH    cd    cosEpsA    cosEpsB    cosa    cosaa    cosab    cosb    costA    costB    d    d1High    d1Low    d2p    d2pHH    d2pHL    d2pHigh    d2pLow    da    daa    dab    db    denom    denomb    denomr    dx    epsA    epsA2    epsB    epsilon    err    est    esta    estb    extra    facta    factb    finalRemA    finalRemB    fracPartA    fracPartB    fx1    intPartA    intPartB    invx    invy    lna    lnb    lnza    lnzb    lores    mant    na    nb    numer    oneOverXa    p    p2    pi2a    pi2b    pia    pib    r    rHH    rHL    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    resultHigh    resultLow    resultb    rln10a    rln10b    sinEpsA    sinEpsB    sina    sinb    sintA    sintB    sumA    sumB    t    temp    temp2    tempA    tempB    tempC    tmp    tmp1    tmp2    tmpA    tmpB    tmpHigh    tmpLow    x    x2    xa    xb    xbadj    xpa    xpb    xs    y    ya    yaa    yab    yb    z    za    zaa    zab    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    e    exp    exp3    exponent    finalK    i    idx    intFrac    intPart    intVal    k    quadrant    shift    splitFactor    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    a    ac    ad    b    bc    bd    bits    c    d    inbits    prod2A    prod2B    prodA    prodB    shpi0    shpiA    shpiB    xl    yi        	math_117954_FastMath_1_1	2957	1	src/main/java/org/apache/commons/math3/util/FastMath.java
291	[PATCH]    y2    =    y2    +    (maxX    -    x2)    *    dy    /    dx;	[BUG]    [BUGGY]    y2    =    y2    %    ((maxX    -    x2)    *    dy    /    dx);    [FE]    junit.framework.AssertionFailedError    testClipLine    [CONTEXT]    else    if    (f2    !=    0)    {            if    ((f2    &    Rectangle2D.OUT_LEFT)    ==    Rectangle2D.OUT_LEFT    &&    dx    !=    0.0)    {    y2    =    y2    +    (minX    -    x2)    *    dy    /    dx;    x2    =    minX;    }    else    if    ((f2    &    Rectangle2D.OUT_RIGHT)    ==    Rectangle2D.OUT_RIGHT    &&    dx    !=    0.0)    {    [BUGGY]    y2    =    y2    %    ((maxX    -    x2)    *    dy    /    dx);    [BUGGY]    x2    =    maxX;    }    else    if    ((f2    &    Rectangle2D.OUT_BOTTOM)    ==    Rectangle2D.OUT_BOTTOM    &&    dy    !=    0.0)    {    x2    =    x2    +    (maxY    -    y2)    *    dx    /    dy;    y2    =    maxY;    }    else    if    ((f2    &    Rectangle2D.OUT_TOP)    ==    Rectangle2D.OUT_TOP    &&    dy    !=    0.0)    {    x2    =    x2    +    (minY    -    y2)    *    dx    /    dy;    [CLASS]        LineUtilities    [METHOD]    clipLine    [RETURN_TYPE]    boolean        Line2D    line    Rectangle2D    rect    [VARIABLES]    boolean    double    dx    dy    maxX    maxY    minX    minY    x1    x2    y1    y2    Rectangle2D    rect    Line2D    line    int    f1    f2        	chart_65291_LineUtilities_1_1	120	1	source/org/jfree/chart/util/LineUtilities.java
292	[PATCH]    k    +=    n    -    j;	[BUG]    [BUGGY]    k    +=    n    %    j;    [FE]    java.lang.RuntimeException:    java.lang.ExceptionInInitializerError    testRegExp1    [CONTEXT]    out[k++]    =    start;    out[k++]    =    end;    }    }        if    (i    <    m)    {    System.arraycopy(q,    i,    out,    k,    m    -    i);    k    +=    m    -    i;    }    else    if    (j    <    n)    {    System.arraycopy(r,    j,    out,    k,    n    -    j);    [BUGGY]    k    +=    n    %    j;    [BUGGY]    }        if    (k    !=    out.length)    {    int[]    clipped    =    new    int[k];    System.arraycopy(out,    0,    clipped,    0,    k);    out    =    clipped;    }    return    new    CharRanges(out);    }    [CLASS]        CharRanges    [METHOD]    union    [RETURN_TYPE]    CharRanges        CharRanges    other    [VARIABLES]    CharRanges    ALL_CODE_UNITS    EMPTY    other    int[]    clipped    members    out    q    r    ranges    boolean    int    a0    a1    b0    b1    end    i    j    k    m    n    start        	closure_48375_CharRanges_1_1	229	1	src/com/google/javascript/jscomp/regex/CharRanges.java
293	[PATCH]    int    p[]    =    new    int[n    +    1];    //'previous'    cost    array,    horizontally	[BUG]    [BUGGY]    int    p[]    =    new    int[n    /    1];    //'previous'    cost    array,    horizontally    [FE]    java.lang.ArrayIndexOutOfBoundsException:    3    testGetLevenshteinDistance_StringString    [CONTEXT]    if    (n    >    m)    {        final    CharSequence    tmp    =    s;    s    =    t;    t    =    tmp;    n    =    m;    m    =    t.length();    }        [BUGGY]    int    p[]    =    new    int[n    /    1];    //'previous'    cost    array,    horizontally    [BUGGY]    int    d[]    =    new    int[n    +    1];    int    _d[];    //placeholder    to    assist    in    swapping    p    and    d        int    i;    int    j;        char    t_j;        int    cost;        [CLASS]        StringUtils    [METHOD]    getLevenshteinDistance    [RETURN_TYPE]    int        CharSequence    s    CharSequence    t    [VARIABLES]    Pattern    WHITESPACE_PATTERN    pattern    boolean    CharSequence    s    t    tmp    char    t_j    int[]    _d    d    p    String    CR    EMPTY    LF    SPACE    abrevMarker    close    decomposed    defaultStr    input    invalidChars    middle    open    overlay    padStr    regex    remove    replaceChars    replacement    result    ret    searchChars    searchString    separator    separatorChars    source    str    str1    str2    stripChars    tag    text    ts    validChars    int    INDEX_NOT_FOUND    PAD_LIMIT    arrayLen    arrayPos    at    beg    closeLen    cost    count    csLast    csLen    csLength    currentType    end    endIndex    endLimit    endOffset    firstDiff    found    greater    i    idx    increase    index    inputLength    j    lastIdx    len    length    longestStrLen    m    max    maxWidth    n    newTokenStart    noOfItems    numberOfSubstrings    offset    openLen    ordinal    outputLength    padLen    pads    pos    repeat    replLength    replaceCharsLength    replaceIndex    replacementLength    ret    searchChar    searchLast    searchLen    searchLength    separatorLength    shortestStrLen    size    sizePlus1    smallestIndexOfDiff    start    startIndex    startOffset    startPos    strLen    strLength    stringPos    strsLen    sz    targetSting    temp    tempIndex    textIndex    textLength    timeToLive    tmp    tokenStart    type        	lang_14021_StringUtils_1_1	6674	1	src/main/java/org/apache/commons/lang3/StringUtils.java
294	[PATCH]    return    this.index    -    this.startIndex;	[BUG]    [BUGGY]    return    this.index    %    this.startIndex;    [FE]    java.lang.ArithmeticException:    /    by    zero    testArrayListIterator    [CONTEXT]    public    int    nextIndex()    {    [BUGGY]    return    this.index    %    this.startIndex;    [BUGGY]    }    [CLASS]        ArrayListIterator    [METHOD]    nextIndex    [RETURN_TYPE]    int        [VARIABLES]    int    endIndex    lastItemIndex    startIndex    boolean        	collections_3659_ArrayListIterator_1_1	145	1	src/main/java/org/apache/commons/collections4/iterators/ArrayListIterator.java
295	[PATCH]    while    ((pos    >    0)    &&    Character.isWhitespace(s.charAt(pos    -    1)))	[BUG]    [BUGGY]    while    ((pos    >    0)    &&    Character.isWhitespace(s.charAt(pos    +    1)))    [FE]    junit.framework.AssertionFailedError:    Unexpected    Exception:    String    index    out    of    range:    11    test13666    [CONTEXT]    protected    String    rtrim(String    s)    {    if    ((s    ==    null)    ||    (s.length()    ==    0))    {    return    s;    }    int    pos    =    s.length();        [BUGGY]    while    ((pos    >    0)    &&    Character.isWhitespace(s.charAt(pos    +    1)))    [BUGGY]    {    --pos;    }    return    s.substring(0,    pos);    }    [CLASS]        HelpFormatter    OptionComparator    [METHOD]    rtrim    [RETURN_TYPE]    String        String    s    [VARIABLES]    int    DEFAULT_DESC_PAD    DEFAULT_LEFT_PAD    DEFAULT_WIDTH    argPos    defaultDescPad    defaultLeftPad    defaultWidth    descPad    i    leftPad    len    max    nextLineTabStop    padding    pos    startPos    width    x    String    DEFAULT_ARG_NAME    DEFAULT_LONG_OPT_PREFIX    DEFAULT_OPT_PREFIX    DEFAULT_SYNTAX_PREFIX    app    cmdLineSyntax    defaultArgName    defaultLongOptPrefix    defaultNewLine    defaultOptPrefix    defaultSyntaxPrefix    dpad    footer    header    lpad    name    newline    padding    prefix    s    text    boolean        	cli_741_HelpFormatter_1_1	870	1	src/java/org/apache/commons/cli/HelpFormatter.java
296	[PATCH]    index    =    charAt(value,    index    +    1)    ==    'F'    ?    index    +    2    :    index    +    1;	[BUG]    [BUGGY]    index    =    charAt(value,    index    /    1)    ==    'F'    ?    index    +    2    :    index    +    1;    [FE]    junit.framework.ComparisonFailure:    expected:<KXF[S]>    but    was:<KXF[K]>    testDoubleMetaphone    [CONTEXT]    index++;    break;    case    'C':    index    =    handleC(value,    result,    index);    break;    case    'D':    index    =    handleD(value,    result,    index);    break;    case    'F':    result.append('F');    [BUGGY]    index    =    charAt(value,    index    /    1)    ==    'F'    ?    index    +    2    :    index    +    1;    [BUGGY]    break;    case    'G':    index    =    handleG(value,    result,    index,    slavoGermanic);    break;    case    'H':    index    =    handleH(value,    result,    index);    break;    case    'J':    index    =    handleJ(value,    result,    index,    slavoGermanic);    break;    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    doubleMetaphone    [RETURN_TYPE]    String        String    value    boolean    alternate    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    value    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    boolean    alternate    slavoGermanic    int    index    maxCodeLen    maxLength    DoubleMetaphoneResult    result        	codec_1264_DoubleMetaphone_1_1	124	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
297	[PATCH]    value    +=    (bytes[offset    +    BYTE_2]    <<    BYTE_2_SHIFT)    &    BYTE_2_MASK;	[BUG]    [BUGGY]    value    +=    (bytes[offset    *    BYTE_2]    <<    BYTE_2_SHIFT)    &    BYTE_2_MASK;    [FE]    java.io.EOFException    testJarMarker    [CONTEXT]    public    static    long    getValue(byte[]    bytes,    int    offset)    {    long    value    =    (bytes[offset    +    BYTE_3]    <<    BYTE_3_SHIFT)    &    BYTE_3_MASK;    [BUGGY]    value    +=    (bytes[offset    *    BYTE_2]    <<    BYTE_2_SHIFT)    &    BYTE_2_MASK;    [BUGGY]    value    +=    (bytes[offset    +    BYTE_1]    <<    BYTE_1_SHIFT)    &    BYTE_1_MASK;    value    +=    (bytes[offset]    &    BYTE_MASK);    return    value;    }    [CLASS]        ZipLong    [METHOD]    getValue    [RETURN_TYPE]    long        byte[]    bytes    int    offset    [VARIABLES]    byte[]    bytes    boolean    int    BYTE_1    BYTE_1_MASK    BYTE_1_SHIFT    BYTE_2    BYTE_2_MASK    BYTE_2_SHIFT    BYTE_3    BYTE_3_SHIFT    BYTE_MASK    WORD    offset    long    BYTE_3_MASK    value        	compress_4840_ZipLong_1_1	107	1	src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java
298	[PATCH]    while    ((pos    >    0)    &&    Character.isWhitespace(s.charAt(pos    -    1)))	[BUG]    [BUGGY]    while    ((pos    >    0)    &&    Character.isWhitespace(s.charAt(pos    /    1)))    [FE]    junit.framework.AssertionFailedError:    Unexpected    Exception:    String    index    out    of    range:    10    test13666    [CONTEXT]    protected    String    rtrim(String    s)    {    if    ((s    ==    null)    ||    (s.length()    ==    0))    {    return    s;    }    int    pos    =    s.length();        [BUGGY]    while    ((pos    >    0)    &&    Character.isWhitespace(s.charAt(pos    /    1)))    [BUGGY]    {    --pos;    }    return    s.substring(0,    pos);    }    [CLASS]        HelpFormatter    OptionComparator    [METHOD]    rtrim    [RETURN_TYPE]    String        String    s    [VARIABLES]    int    DEFAULT_DESC_PAD    DEFAULT_LEFT_PAD    DEFAULT_WIDTH    argPos    defaultDescPad    defaultLeftPad    defaultWidth    descPad    i    leftPad    len    max    nextLineTabStop    padding    pos    startPos    width    x    String    DEFAULT_ARG_NAME    DEFAULT_LONG_OPT_PREFIX    DEFAULT_OPT_PREFIX    DEFAULT_SYNTAX_PREFIX    app    cmdLineSyntax    defaultArgName    defaultLongOptPrefix    defaultNewLine    defaultOptPrefix    defaultSyntaxPrefix    dpad    footer    header    lpad    name    newline    padding    prefix    s    text    boolean        	cli_742_HelpFormatter_1_1	870	1	src/java/org/apache/commons/cli/HelpFormatter.java
299	[PATCH]    result    =    31    *    result    +    (canContainBlock    ?    1    :    0);	[BUG]    [BUGGY]    result    =    31    *    result    /    (canContainBlock    ?    1    :    0);    [FE]    java.lang.ArithmeticException:    /    by    zero    testYahooJp    [CONTEXT]    public    int    hashCode()    {    int    result    =    tagName    !=    null    ?    tagName.hashCode()    :    0;    result    =    31    *    result    +    (isBlock    ?    1    :    0);    [BUGGY]    result    =    31    *    result    /    (canContainBlock    ?    1    :    0);    [BUGGY]    result    =    31    *    result    +    (canContainInline    ?    1    :    0);    result    =    31    *    result    +    (optionalClosing    ?    1    :    0);    result    =    31    *    result    +    (empty    ?    1    :    0);    return    result;    }    [CLASS]        Tag    [METHOD]    hashCode    [RETURN_TYPE]    int        [VARIABLES]    List    ancestors    boolean    canContainBlock    canContainInline    empty    isBlock    optionalClosing    preserveWhitespace    Tag    child    defaultAncestor    tag    String    tagName    Map    tags    int    result        	jsoup_682_Tag_1_1	185	1	src/main/java/org/jsoup/parser/Tag.java
300	[PATCH]    return    (((((bsR(8)    <<    8)    |    bsR(8))    <<    8)    |    bsR(8))    <<    8)    |    bsR(8);	[BUG]    [BUGGY]    return    (((((bsR(8)    <<    8)    |    bsR(8))    >>>    8)    |    bsR(8))    <<    8)    |    bsR(8);    [FE]    java.io.IOException:    BZip2    CRC    error    testBzip2Unarchive    [CONTEXT]    private    int    bsGetInt()    throws    IOException    {    [BUGGY]    return    (((((bsR(8)    <<    8)    |    bsR(8))    >>>    8)    |    bsR(8))    <<    8)    |    bsR(8);    [BUGGY]    }    [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    bsGetInt    [RETURN_TYPE]    int        [VARIABLES]    int[][]    base    limit    perm    InputStream    in    inShadow    char[][]    temp_charArray2d    Data    data    int[]    cftab    minLens    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    b    blockSize    blockSize100k    bsBuff    bsBuffShadow    bsLive    bsLiveShadow    computedBlockCRC    computedCombinedCRC    currentChar    currentState    destOffs    hi    i    last    len    magic    n    nInUse    nInUseShadow    offs    origPtr    retChar    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    thech    char[]    getAndMoveToFrontDecode_yy    byte[]    dest    ll8    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    expected    magic0    magic1    magic2    magic3    magic4    magic5    su_z    boolean[]    inUse        	compress_5465_BZip2CompressorInputStream_1_1	382	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
301	[PATCH]    buffer[ptr++]    =    HEX_CHARS[hi    >>    4];	[BUG]    [BUGGY]    buffer[ptr++]    =    HEX_CHARS[hi    <<    4];    [FE]    java.lang.ArrayIndexOutOfBoundsException:    2208    testWriteLongCustomEscapes    [CONTEXT]    return    ptr;    }    if    (escCode    !=    CharacterEscapes.ESCAPE_CUSTOM)    {    if    (ptr    >    5    &&    ptr    <    end)    {    ptr    -=    6;    buffer[ptr++]    =    '\\';    buffer[ptr++]    =    'u';        if    (ch    >    0xFF)    {    int    hi    =    (ch    >>    8)    &    0xFF;    [BUGGY]    buffer[ptr++]    =    HEX_CHARS[hi    <<    4];    [BUGGY]    buffer[ptr++]    =    HEX_CHARS[hi    &    0xF];    ch    &=    0xFF;    }    else    {    buffer[ptr++]    =    '0';    buffer[ptr++]    =    '0';    }    buffer[ptr++]    =    HEX_CHARS[ch    >>    4];    buffer[ptr]    =    HEX_CHARS[ch    &    0xF];    ptr    -=    5;    }    else    {    [CLASS]        WriterBasedJsonGenerator    [METHOD]    _prependOrWriteCharacterEscape    [RETURN_TYPE]    int        char[]    buffer    int    ptr    int    end    char    ch    int    escCode    [VARIABLES]    SerializableString    _currentEscape    name    sstr    text    boolean    char    ch    String    escape    int    SHORT_WRITE    _outputEnd    _outputHead    _outputTail    amount    b24    bytes    bytesDone    bytesLeft    chunksBeforeLF    count    dataLength    end    escCode    escLen    escLimit    features    flushLen    hi    i    inputEnd    inputLeft    inputPtr    lastFullOffset    len    length    lo    max    maxNonEscaped    maxRead    missing    newAmount    offset    ptr    qlen    room    safeInputEnd    safeOutputEnd    segmentLen    start    status    textLen    Writer    _writer    w    char[]    HEX_CHARS    _entityBuffer    _outputBuffer    buf    buffer    ent    quoted    text        	jacksoncore_16309_WriterBasedJsonGenerator_1_1	1780	1	src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java
302	[PATCH]    if    ((((val    >>    8)    ^    hash)    <<    8)    ==    0)    {    //    match	[BUG]    [BUGGY]    if    ((((val    <<    8)    ^    hash)    <<    8)    ==    0)    {    //    match    [FE]    java.lang.NullPointerException    testAuxMethods    [CONTEXT]    {    int    hash    =    (secondQuad    ==    0)    ?    calcHash(firstQuad)    :    calcHash(firstQuad,    secondQuad);    int    ix    =    (hash    &    _mainHashMask);    int    val    =    _mainHash[ix];                    [BUGGY]    if    ((((val    <<    8)    ^    hash)    <<    8)    ==    0)    {        [BUGGY]        Name    name    =    _mainNames[ix];    if    (name    ==    null)    {    return    null;    }    if    (name.equals(firstQuad,    secondQuad))    {    return    name;    }    }    else    if    (val    ==    0)    {    return    null;    [CLASS]        BytesToNameCanonicalizer    TableInfo    Bucket    [METHOD]    findName    [RETURN_TYPE]    Name        int    firstQuad    int    secondQuad    [VARIABLES]    boolean    _collListShared    _intern    _mainHashShared    _mainNamesShared    _needRehash    canonicalize    intern    Bucket[]    _collList    collList    Bucket    _next    bucket    next    BytesToNameCanonicalizer    _parent    parent    src    AtomicReference    _tableInfo    int[]    _mainHash    mainHash    int    DEFAULT_TABLE_SIZE    INITIAL_COLLISION_LEN    LAST_VALID_BUCKET    MAX_COLL_CHAIN_FOR_REUSE    MAX_COLL_CHAIN_LENGTH    MAX_ENTRIES_FOR_REUSE    MAX_TABLE_SIZE    MIN_HASH_SIZE    MULT    MULT2    MULT3    _collCount    _collEnd    _count    _hashSeed    _length    _longestCollisionList    _mainHashMask    childCount    collCount    collEnd    count    curr    firstQuad    hash    hashSeed    hashSize    ix    longestCollisionList    mainHashMask    secondQuad    seed    val    Name[]    _mainNames    mainNames    Name    _name    name        	jacksoncore_1370_BytesToNameCanonicalizer_1_1	538	1	src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java
303	[PATCH]    return    z4    >>>    (32    -    bits);	[BUG]    [BUGGY]    return    z4    >>    (32    -    bits);    [FE]    junit.framework.AssertionFailedError:    expected:<-1.0984122081306073E23>    but    was:<-1.0984122081305908E23>    testLinearCombination2DSDS    [CONTEXT]    final    int    z0    =    v[indexRm1];    final    int    z1    =    v0^    (vM1    ^    (vM1    >>>    8));    final    int    z2    =    (vM2    ^    (vM2    <<    19))    ^    (vM3    ^    (vM3    <<    14));    final    int    z3    =    z1^    z2;    final    int    z4    =    (z0    ^    (z0    <<    11))    ^    (z1    ^    (z1    <<    7))    ^    (z2    ^    (z2    <<    13));    v[index]    =    z3;    v[indexRm1]=    z4;    index=    indexRm1;        [BUGGY]    return    z4    >>    (32    -    bits);    [BUGGY]    }    [CLASS]        Well1024a    [METHOD]    next    [RETURN_TYPE]    int        final    int    bits    [VARIABLES]    long    seed    serialVersionUID    int    K    M1    M2    M3    bits    indexRm1    seed    v0    vM1    vM2    vM3    z0    z1    z2    z3    z4    boolean        	math_94078_Well1024a_1_1	103	1	src/main/java/org/apache/commons/math3/random/Well1024a.java
304	[PATCH]    return    Float.intBitsToFloat(sign    |    (scaledExponent    <<    23)    |    mantissa);	[BUG]    [BUGGY]    return    Float.intBitsToFloat(sign    |    (scaledExponent    >>    23)    |    mantissa);    [FE]    junit.framework.AssertionFailedError:    expected:<1.7014118E38>    but    was:<0.0>    testFloatScalbSpecialCases    [CONTEXT]        while    ((mantissa    >>>    23)    !=    1)    {    mantissa    =    mantissa    <<    1;    --scaledExponent;    }    ++scaledExponent;    mantissa    =    mantissa    &    0x007fffff;    if    (scaledExponent    <    255)    {    [BUGGY]    return    Float.intBitsToFloat(sign    |    (scaledExponent    >>    23)    |    mantissa);    [BUGGY]    }    else    {    return    (sign    ==    0)    ?    Float.POSITIVE_INFINITY    :    Float.NEGATIVE_INFINITY;    }    }    else    if    (scaledExponent    <    255)    {    return    Float.intBitsToFloat(sign    |    (scaledExponent    <<    23)    |    mantissa);    }    else    {    return    (sign    ==    0)    ?    Float.POSITIVE_INFINITY    :    Float.NEGATIVE_INFINITY;    }    }    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    scalb    [RETURN_TYPE]    float        final    float    f    final    int    n    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    bita    bitb    bitsum    cotanFlag    leftPlane    negate    negative    subnormal    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    hiPrecOut    lnCoef_i    lnCoef_last    lnm    lns    reduceResults    result    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    a2    aa    ab    absAsinh    absAtanh    b    base    baseA    baseB    c    cD2pH    cRH    cTmpH    cd    cosEpsA    cosEpsB    cosa    cosaa    cosab    cosb    costA    costB    d    d1High    d1Low    d2p    d2pHH    d2pHL    d2pHigh    d2pLow    da    daa    dab    db    denom    denomb    denomr    dx    epsA    epsA2    epsB    epsilon    err    est    esta    estb    extra    facta    factb    finalRemA    finalRemB    fracPartA    fracPartB    fx1    intPartA    intPartB    invx    invy    lna    lnb    lnza    lnzb    lores    mant    na    nb    numer    oneOverXa    p    p2    pi2a    pi2b    pia    pib    r    rHH    rHL    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    resultHigh    resultLow    resultb    rln10a    rln10b    sinEpsA    sinEpsB    sina    sinb    sintA    sintB    sumA    sumB    t    temp    temp2    tempA    tempB    tempC    tmp    tmp1    tmp2    tmpA    tmpB    tmpHigh    tmpLow    x    x2    xa    xb    xbadj    xpa    xpb    xs    y    ya    yaa    yab    yb    z    za    zaa    zab    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    float    f    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    bits    e    exp    exp3    exponent    finalK    i    idx    intFrac    intPart    intVal    k    mantissa    mostSignificantLostBit    n    quadrant    scaledExponent    shift    sign    splitFactor    x    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    a    ac    ad    b    bc    bd    bits    c    d    inbits    l    mantissa    mostSignificantLostBit    prod2A    prod2B    prodA    prodB    shpi0    shpiA    shpiB    sign    x    xl    yi        	math_118483_FastMath_1_1	3205	1	src/main/java/org/apache/commons/math3/util/FastMath.java
305	[PATCH]    result[1]    =    (byte)    ((value    &    BYTE_1_MASK)    >>    BYTE_1_SHIFT);	[BUG]    [BUGGY]    result[1]    =    (byte)    ((value    &    BYTE_1_MASK)    <<    BYTE_1_SHIFT);    [FE]    junit.framework.AssertionFailedError:    no    link,    byte    0    expected:<-58>    but    was:<-119>    testContent    [CONTEXT]    public    static    byte[]    getBytes(int    value)    {    byte[]    result    =    new    byte[2];    result[0]    =    (byte)    (value    &    BYTE_MASK);    [BUGGY]    result[1]    =    (byte)    ((value    &    BYTE_1_MASK)    <<    BYTE_1_SHIFT);    [BUGGY]    return    result;    }    [CLASS]        ZipShort    [METHOD]    getBytes    [RETURN_TYPE]    byte[]        int    value    [VARIABLES]    byte[]    result    int    BYTE_1_MASK    BYTE_1_SHIFT    BYTE_MASK    offset    value    boolean        	compress_1623_ZipShort_1_1	84	1	src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java
306	[PATCH]    result[value.ordinal()    /    Long.SIZE]    |=    1    <<    (value.ordinal()    %    Long.SIZE);	[BUG]    [BUGGY]    result[value.ordinal()    /    Long.SIZE]    |=    1    >>    (value.ordinal()    %    Long.SIZE);    [FE]    junit.framework.AssertionFailedError:    arrays    first    differed    at    element    [0];    expected:<2>    but    was:<0>    test_generateBitVectorsFromArray    [CONTEXT]    public    static    <E    extends    Enum<E>>    long[]    generateBitVectors(final    Class<E>    enumClass,    final    E...    values)    {    asEnum(enumClass);    Validate.noNullElements(values);    final    EnumSet<E>    condensed    =    EnumSet.noneOf(enumClass);    Collections.addAll(condensed,    values);    final    long[]    result    =    new    long[(enumClass.getEnumConstants().length    -    1)    /    Long.SIZE    +    1];    for    (final    E    value    :    condensed)    {    [BUGGY]    result[value.ordinal()    /    Long.SIZE]    |=    1    >>    (value.ordinal()    %    Long.SIZE);    [BUGGY]    }    ArrayUtils.reverse(result);    return    result;    }    [CLASS]        EnumUtils    [METHOD]    generateBitVectors    [RETURN_TYPE]    <E        Class<E>    enumClass    values    [VARIABLES]    boolean    long[]    result    E    value    E[]    values    EnumSet    condensed    Class    enumClass    String    CANNOT_STORE_S_S_VALUES_IN_S_BITS    ENUM_CLASS_MUST_BE_DEFINED    NULL_ELEMENTS_NOT_PERMITTED    S_DOES_NOT_SEEM_TO_BE_AN_ENUM_TYPE    enumName        	lang_7857_EnumUtils_1_1	230	1	src/main/java/org/apache/commons/lang3/EnumUtils.java
307	[PATCH]    value    +=    (bytes[offset    +    BYTE_2]    <<    BYTE_2_SHIFT)    &    BYTE_2_MASK;	[BUG]    [BUGGY]    value    +=    (bytes[offset    +    BYTE_2]    >>>    BYTE_2_SHIFT)    &    BYTE_2_MASK;    [FE]    java.util.zip.ZipException:    bad    CRC    checksum    b60002c6    instead    of    b67802c6    testReparse    [CONTEXT]    public    static    long    getValue(byte[]    bytes,    int    offset)    {    long    value    =    (bytes[offset    +    BYTE_3]    <<    BYTE_3_SHIFT)    &    BYTE_3_MASK;    [BUGGY]    value    +=    (bytes[offset    +    BYTE_2]    >>>    BYTE_2_SHIFT)    &    BYTE_2_MASK;    [BUGGY]    value    +=    (bytes[offset    +    BYTE_1]    <<    BYTE_1_SHIFT)    &    BYTE_1_MASK;    value    +=    (bytes[offset]    &    BYTE_MASK);    return    value;    }    [CLASS]        ZipLong    [METHOD]    getValue    [RETURN_TYPE]    long        byte[]    bytes    int    offset    [VARIABLES]    byte[]    bytes    boolean    int    BYTE_1    BYTE_1_MASK    BYTE_1_SHIFT    BYTE_2    BYTE_2_MASK    BYTE_2_SHIFT    BYTE_3    BYTE_3_SHIFT    BYTE_MASK    WORD    offset    long    BYTE_3_MASK    value        	compress_4844_ZipLong_1_1	107	1	src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java
308	[PATCH]    globalCrc    =    (globalCrc    <<    8)    ^    CRC.crc32Table[temp];	[BUG]    [BUGGY]    globalCrc    =    (globalCrc    >>>    8)    ^    CRC.crc32Table[temp];    [FE]    java.io.IOException:    BZip2    CRC    error    testBzip2Unarchive    [CONTEXT]    void    updateCRC(int    inCh)    {    int    temp    =    (globalCrc    >>    24)    ^    inCh;    if    (temp    <    0)    {    temp    =    256    +    temp;    }    [BUGGY]    globalCrc    =    (globalCrc    >>>    8)    ^    CRC.crc32Table[temp];    [BUGGY]    }    [CLASS]        CRC    [METHOD]    updateCRC    [RETURN_TYPE]    void        int    inCh    [VARIABLES]    int[]    crc32Table    int    globalCrc    inCh    newCrc    temp    boolean        	compress_7964_CRC_1_1	118	1	src/main/java/org/apache/commons/compress/compressors/bzip2/CRC.java
309	[PATCH]    q    =    (q    <<    8)    |    i;	[BUG]    [BUGGY]    q    =    (q    >>    8)    |    i;    [FE]    junit.framework.ComparisonFailure:    Failed    for    name    #10/10    expected:<Yet    even[    longer]       "name   "!>    but    was:<Yet    even[  on  w]       "name   "!>    testNameEscaping    [CONTEXT]    q    =    (q    <<    8)    |    i;    i    =    _inputBuffer[_inputPtr++]    &    0xFF;    if    (codes[i]    !=    0)    {    if    (i    ==    INT_QUOTE)    {    return    findName(_quadBuffer,    qlen,    q,    2);    }    return    parseEscapedFieldName(_quadBuffer,    qlen,    q,    i,    2);    }        [BUGGY]    q    =    (q    >>    8)    |    i;    [BUGGY]    i    =    _inputBuffer[_inputPtr++]    &    0xFF;    if    (codes[i]    !=    0)    {    if    (i    ==    INT_QUOTE)    {    return    findName(_quadBuffer,    qlen,    q,    3);    }    return    parseEscapedFieldName(_quadBuffer,    qlen,    q,    i,    3);    }    q    =    (q    <<    8)    |    i;    i    =    _inputBuffer[_inputPtr++]    &    0xFF;    [CLASS]        UTF8StreamJsonParser    [METHOD]    parseLongFieldName    [RETURN_TYPE]    Name        int    q    [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    codes    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    c    ch    count    decodedData    defaultValue    end    expLen    features    fractLen    i    intLen    intPartLength    integerPartLength    len    minAvailable    nameLen    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    q2    qlen    start        	jacksoncore_12376_UTF8StreamJsonParser_1_1	1545	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
310	[PATCH]    a    ^=    (c    >>>    12);	[BUG]    [BUGGY]    a    ^=    (c    <<    12);    [FE]    junit.framework.AssertionFailedError:    testReplaceTwoPlaceholdersNonAlphaOrder    [CONTEXT]    a    -=    c;    a    ^=    (c    >>>    13);    b    -=    c;    b    -=    a;    b    ^=    (a    <<    8);    c    -=    a;    c    -=    b;    c    ^=    (b    >>>    13);    a    -=    b;    a    -=    c;    [BUGGY]    a    ^=    (c    <<    12);    [BUGGY]    b    -=    c;    b    -=    a;    b    ^=    (a    <<    16);    c    -=    a;    c    -=    b;    c    ^=    (b    >>>    5);    a    -=    b;    a    -=    c;    a    ^=    (c    >>>    3);    b    -=    c;    [CLASS]        GoogleJsMessageIdGenerator    FP    MessageId    [METHOD]    hash32    [RETURN_TYPE]    int        byte[]    str    int    start    int    limit    int    c    [VARIABLES]    byte[]    str    String    meaning    projectId    projectScopedMeaning    str    tcValue    boolean    int    a    b    c    i    limit    start        	closure_31081_GoogleJsMessageIdGenerator_1_1	196	1	src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java
311	[PATCH]    c    ^=    (b    >>>    5);	[BUG]    [BUGGY]    c    ^=    (b    >>    5);    [FE]    junit.framework.AssertionFailedError:    testReplaceTwoPlaceholders    [CONTEXT]    c    -=    b;    c    ^=    (b    >>>    13);    a    -=    b;    a    -=    c;    a    ^=    (c    >>>    12);    b    -=    c;    b    -=    a;    b    ^=    (a    <<    16);    c    -=    a;    c    -=    b;    [BUGGY]    c    ^=    (b    >>    5);    [BUGGY]    a    -=    b;    a    -=    c;    a    ^=    (c    >>>    3);    b    -=    c;    b    -=    a;    b    ^=    (a    <<    10);    c    -=    a;    c    -=    b;    c    ^=    (b    >>>    15);    return    c;    [CLASS]        GoogleJsMessageIdGenerator    FP    MessageId    [METHOD]    hash32    [RETURN_TYPE]    int        byte[]    str    int    start    int    limit    int    c    [VARIABLES]    byte[]    str    String    meaning    projectId    projectScopedMeaning    str    tcValue    boolean    int    a    b    c    i    limit    start        	closure_31096_GoogleJsMessageIdGenerator_1_1	202	1	src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java
312	[PATCH]    total    |=    1    <<    constant.ordinal();	[BUG]    [BUGGY]    total    |=    1    >>>    constant.ordinal();    [FE]    junit.framework.AssertionFailedError:    expected:<2>    but    was:<0>    test_generateBitVector    [CONTEXT]    public    static    <E    extends    Enum<E>>    long    generateBitVector(final    Class<E>    enumClass,    final    Iterable<E>    values)    {    checkBitVectorable(enumClass);    Validate.notNull(values);    long    total    =    0;    for    (final    E    constant    :    values)    {    Validate.isTrue(constant    !=    null,    NULL_ELEMENTS_NOT_PERMITTED);    [BUGGY]    total    |=    1    >>>    constant.ordinal();    [BUGGY]    }    return    total;    }    [CLASS]        EnumUtils    [METHOD]    generateBitVector    [RETURN_TYPE]    <E        Class<E>    enumClass    Iterable<E>    values    [VARIABLES]    Class    enumClass    String    CANNOT_STORE_S_S_VALUES_IN_S_BITS    ENUM_CLASS_MUST_BE_DEFINED    NULL_ELEMENTS_NOT_PERMITTED    S_DOES_NOT_SEEM_TO_BE_AN_ENUM_TYPE    enumName    boolean    Iterable    values    E    constant    long    total        	lang_7790_EnumUtils_1_1	148	1	src/main/java/org/apache/commons/lang3/EnumUtils.java
313	[PATCH]    ch2    =    (ch2    >>    ((3    -    byteIx)    <<    3));	[BUG]    [BUGGY]    ch2    =    (ch2    >>    ((3    -    byteIx)    >>>    3));    [FE]    com.fasterxml.jackson.core.JsonParseException:    Invalid    UTF-8    middle    byte    0xeca0a33f    testUtf8Name3Bytes    [CONTEXT]    ch2    =    (ch2    >>    ((3    -    byteIx)    <<    3));    ++ix;    if    ((ch2    &    0xC0)    !=    0x080)    {    _reportInvalidOther(ch2);    }    ch    =    (ch    <<    6)    |    (ch2    &    0x3F);    if    (needed    >    1)    {    ch2    =    quads[ix    >>    2];    byteIx    =    (ix    &    3);    [BUGGY]    ch2    =    (ch2    >>    ((3    -    byteIx)    >>>    3));    [BUGGY]    ++ix;    if    ((ch2    &    0xC0)    !=    0x080)    {    _reportInvalidOther(ch2);    }    ch    =    (ch    <<    6)    |    (ch2    &    0x3F);    if    (needed    >    2)    {    ch2    =    quads[ix    >>    2];    byteIx    =    (ix    &    3);    ch2    =    (ch2    >>    ((3    -    byteIx)    <<    3));    [CLASS]        UTF8StreamJsonParser    [METHOD]    addName    [RETURN_TYPE]    Name        int[]    quads    int    qlen    int    lastQuadBytes    [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    codes    quads    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    String    baseName    int    _quad1    amount    bits    byteIx    byteLen    c    ch    ch2    cix    count    currQuad    currQuadBytes    decodedData    defaultValue    end    expLen    features    fractLen    i    intLen    intPartLength    integerPartLength    ix    lastQuad    lastQuadBytes    len    minAvailable    nameLen    needed    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    q1    q2    qlen    start    char[]    cbuf        	jacksoncore_13101_UTF8StreamJsonParser_1_1	2012	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
314	[PATCH]    z4    =    z4    ^    ((z4    <<    15)    &    0xfa118000);	[BUG]    [BUGGY]    z4    =    z4    ^    ((z4    >>    15)    &    0xfa118000);    [FE]    junit.framework.AssertionFailedError:    expected:<123.456>    but    was:<132.79055440418864>    testCircleFitting2    [CONTEXT]    int    z4    =    z0    ^    (z1    ^    (z1    >>>    20))    ^    z2Second    ^    z3;    v[index]    =    z3;    v[indexRm1]=    z4;    v[indexRm2]    &=    0xFFFF8000;    index=    indexRm1;            z4    =    z4    ^    ((z4    <<7)    &    0x93dd1400);    [BUGGY]    z4    =    z4    ^    ((z4    >>    15)    &    0xfa118000);    [BUGGY]    return    z4    >>>    (32    -    bits);    }    [CLASS]        Well44497b    [METHOD]    next    [RETURN_TYPE]    int        final    int    bits    [VARIABLES]    long    seed    serialVersionUID    int    K    M1    M2    M3    bits    indexRm1    indexRm2    seed    v0    vM1    vM2    vM3    z0    z1    z2    z2Prime    z2Second    z3    z4    boolean        	math_94440_Well44497b_1_1	113	1	src/main/java/org/apache/commons/math3/random/Well44497b.java
315	[PATCH]    base[i]    =    ((limit[i    -    1]    +    1)    <<    1)    -    base[i];	[BUG]    [BUGGY]    base[i]    =    ((limit[i    -    1]    +    1)    >>    1)    -    base[i];    [FE]    org.apache.commons.compress.compressors.CompressorException:    Could    not    create    CompressorInputStream    testBzip2Unarchive    [CONTEXT]    for    (int    i    =    minLen,    vec    =    0,    b    =    base[i];    i    <=    maxLen;    i++)    {    final    int    nb    =    base[i    +    1];    vec    +=    nb    -    b;    b    =    nb;    limit[i]    =    vec    -    1;    vec    <<=    1;    }    for    (int    i    =    minLen    +    1;    i    <=    maxLen;    i++)    {    [BUGGY]    base[i]    =    ((limit[i    -    1]    +    1)    >>    1)    -    base[i];    [BUGGY]    }    }    [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    hbCreateDecodeTables    [RETURN_TYPE]    void        final    int[]    limit    final    int[]    base    final    int[]    perm    final    char[]    length    final    int    minLen    final    int    maxLen    final    int    alphaSize    [VARIABLES]    int[][]    base    limit    perm    InputStream    in    inShadow    char[][]    temp_charArray2d    Data    data    int[]    base    cftab    limit    minLens    perm    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    alphaSize    b    blockSize    blockSize100k    bsBuff    bsBuffShadow    bsLive    bsLiveShadow    computedBlockCRC    computedCombinedCRC    currentChar    currentState    destOffs    hi    i    j    last    len    magic    maxLen    minLen    n    nInUse    nInUseShadow    nb    offs    origPtr    pp    retChar    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    thech    vec    char[]    getAndMoveToFrontDecode_yy    length    byte[]    dest    ll8    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    expected    magic0    magic1    magic2    magic3    magic4    magic5    su_z    boolean[]    inUse        	compress_5574_BZip2CompressorInputStream_1_1	422	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
316	[PATCH]    bsBuffShadow    =    (bsBuffShadow    <<    8)    |    thech;	[BUG]    [BUGGY]    bsBuffShadow    =    (bsBuffShadow    >>>    8)    |    thech;    [FE]    java.io.IOException:    BZip2    CRC    error    testBzip2Unarchive    [CONTEXT]    groupPos--;    }    int    zn    =    minLens_zt;            while    (bsLiveShadow    <    zn)    {    final    int    thech    =    inShadow.read();    if    (thech    >=    0)    {    [BUGGY]    bsBuffShadow    =    (bsBuffShadow    >>>    8)    |    thech;    [BUGGY]    bsLiveShadow    +=    8;    continue;    }    else    {    throw    new    IOException(   "unexpected    end    of    stream   ");    }    }    int    zvec    =    (bsBuffShadow    >>    (bsLiveShadow    -    zn))    &    ((1    <<    zn)    -    1);    bsLiveShadow    -=    zn;        [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    getAndMoveToFrontDecode    [RETURN_TYPE]    void        [VARIABLES]    int[][]    base    limit    perm    InputStream    in    inShadow    byte    ch    char[][]    len    temp_charArray2d    Data    data    dataShadow    int[]    base    base_zt    cftab    limit    limit_zt    minLens    perm    perm_zt    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    alphaSize    b    blockSize    blockSize100k    bsBuff    bsBuffShadow    bsLive    bsLiveShadow    computedBlockCRC    computedCombinedCRC    curr    currentChar    currentState    destOffs    eob    groupNo    groupPos    hi    i    i16    inUse16    j    last    lastShadow    len    limitLast    magic    maxLen    minLen    minLens_zt    n    nGroups    nInUse    nInUseShadow    nSelectors    nb    nextSym    offs    origPtr    pp    retChar    s    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    t    thech    v    vec    zn    zt    zvec    char[]    getAndMoveToFrontDecode_yy    len_t    length    yy    byte[]    dest    ll8    pos    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    expected    lent    magic0    magic1    magic2    magic3    magic4    magic5    su_z    tmp    boolean[]    inUse        	compress_5847_BZip2CompressorInputStream_1_1	609	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
317	[PATCH]    +    ((bytes[offset    +    2]    &    0xffL)    <<    16)	[BUG]    [BUGGY]    +    ((bytes[offset    +    2]    &    255L)    >>    16)    [FE]    junit.framework.AssertionFailedError:    expected:<4894389798993746036>    but    was:<8863306669981603835>    testHashValues    [CONTEXT]    private    static    long    word64At(byte[]    bytes,    int    offset)    {    return    (bytes[offset    +    0]    &    0xffL)    +    ((bytes[offset    +    1]    &    0xffL)    <<    8)    [BUGGY]    +    ((bytes[offset    +    2]    &    255L)    >>    16)    [BUGGY]    +    ((bytes[offset    +    3]    &    0xffL)    <<    24)    +    ((bytes[offset    +    4]    &    0xffL)    <<    32)    +    ((bytes[offset    +    5]    &    0xffL)    <<    40)    +    ((bytes[offset    +    6]    &    0xffL)    <<    48)    +    ((bytes[offset    +    7]    &    0xffL)    <<    56);    }    [CLASS]        JsMessage    Style    PlaceholderReference    Builder    Hash    [METHOD]    word64At    [RETURN_TYPE]    long        byte[]    bytes    int    offset    [VARIABLES]    byte[]    bytes    Pattern    MSG_EXTERNAL_PATTERN    Set    placeholders    boolean    allowLegacyMessages    hidden    isAnonymous    isExternal    useClosure    Style    CLOSURE    LEGACY    RELAX    List    messageParts    parts    String    MESSAGE_REPRESENTATION_FORMAT    defactoMeaning    desc    externalId    id    identifier    key    meaning    name    part    sourceName    value    long    CONSTANT64    SEED64    a    b    c    nonnegativeHash    seed    int    offset        	closure_13793_JsMessage_1_1	627	1	src/com/google/javascript/jscomp/JsMessage.java
318	[PATCH]    h    +=    ~(h    <<    9);	[BUG]    [BUGGY]    h    +=    ~(h    >>>    9);    [FE]    junit.framework.AssertionFailedError:    expected:<true>    but    was:<false>    testMultiKeyRemove    [CONTEXT]    protected    int    hash(final    Object    key)    {        int    h    =    key.hashCode();    [BUGGY]    h    +=    ~(h    >>>    9);    [BUGGY]    h    ^=h    >>>    14;    h    +=h    <<    4;    h    ^=h    >>>    10;    return    h;    }    [CLASS]        AbstractHashedMap    HashMapIterator    EntrySet    EntrySetIterator    KeySet    KeySetIterator    Values    ValuesIterator    HashEntry    HashIterator    [METHOD]    hash    [RETURN_TYPE]    int        Object    key    [VARIABLES]    KeySet    keySet    AbstractHashedMap    parent    HashEntry    element    entry    last    next    previous    boolean    Values    values    Object    NULL    convertedKey    key    value    String    GETKEY_INVALID    GETVALUE_INVALID    NO_NEXT_ENTRY    NO_PREVIOUS_ENTRY    REMOVE_INVALID    SETVALUE_INVALID    float    DEFAULT_LOAD_FACTOR    loadFactor    int    DEFAULT_CAPACITY    DEFAULT_THRESHOLD    MAXIMUM_CAPACITY    expectedModCount    h    hashCode    hashIndex    i    index    initialCapacity    mapSize    modCount    newSize    size    threshold    HashEntry[]    data    EntrySet    entrySet        	collections_6152_AbstractHashedMap_1_1	396	1	src/main/java/org/apache/commons/collections4/map/AbstractHashedMap.java
319	[PATCH]    int    b24    =    ((int)    input[inputPtr++])    <<    8;	[BUG]    [BUGGY]    int    b24    =    ((int)input[inputPtr++])    >>    8;    [FE]    arrays    first    differed    at    element    [3];    expected:<0>    but    was:<3>    testBase64UsingReader    [CONTEXT]        int    safeOutputEnd    =    _outputEnd    -    6;    int    chunksBeforeLF    =    b64variant.getMaxLineLength()    >>    2;        while    (inputPtr    <=    safeInputEnd)    {    if    (_outputTail    >    safeOutputEnd)    {    _flushBuffer();    }        [BUGGY]    int    b24    =    ((int)input[inputPtr++])    >>    8;    [BUGGY]    b24    |=    ((int)    input[inputPtr++])    &    0xFF;    b24    =    (b24    <<    8)    |    (((int)    input[inputPtr++])    &    0xFF);    _outputTail    =    b64variant.encodeBase64Chunk(b24,    _outputBuffer,    _outputTail);    if    (--chunksBeforeLF    <=    0)    {        _outputBuffer[_outputTail++]    =    '\\';    _outputBuffer[_outputTail++]    =    'n';    chunksBeforeLF    =    b64variant.getMaxLineLength()    >>    2;    }    }    [CLASS]        WriterBasedJsonGenerator    [METHOD]    _writeBinary    [RETURN_TYPE]    void        Base64Variant    b64variant    byte[]    input    int    inputPtr    final    int    inputEnd    [VARIABLES]    byte[]    input    SerializableString    _currentEscape    name    sstr    text    boolean    Base64Variant    b64variant    int    SHORT_WRITE    _outputEnd    _outputHead    _outputTail    amount    b24    bytes    chunksBeforeLF    dataLength    end    escCode    escLen    escLimit    features    flushLen    i    inputEnd    inputLeft    inputPtr    len    length    max    maxNonEscaped    missing    newAmount    offset    ptr    qlen    room    safeInputEnd    safeOutputEnd    segmentLen    start    status    textLen    Writer    _writer    w    char[]    HEX_CHARS    _entityBuffer    _outputBuffer    buf    quoted    text        	jacksoncore_15722_WriterBasedJsonGenerator_1_1	1462	1	src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java
320	[PATCH]    dst[dstPos    +    i]    =    (byte)(0xff    &    (src    >>    shift));	[BUG]    [BUGGY]    dst[dstPos    +    i]    =    (byte)(0xff    &    (src    <<    shift));    [FE]    junit.framework.AssertionFailedError:    arrays    first    differed    at    element    [1];    expected:<-51>    but    was:<0>    testIntToByteArray    [CONTEXT]    if    (0    ==    nBytes)    {    return    dst;    }    if    ((nBytes    -    1)    *    8    +    srcPos    >=    32)    {    throw    new    IllegalArgumentException(       "(nBytes-1)*8+srcPos    is    greather    or    equal    to    than    32   ");    }    int    shift    =    0;    for    (int    i    =    0;    i    <    nBytes;    i++    )    {    shift    =    i    *    8    +    srcPos;    [BUGGY]    dst[dstPos    +    i]    =    (byte)(0xff    &    (src    <<    shift));    [BUGGY]    }    return    dst;    }    [CLASS]        Conversion    [METHOD]    intToByteArray    [RETURN_TYPE]    byte[]        final    int    src    final    int    srcPos    final    byte[]    dst    final    int    dstPos    final    int    nBytes    [VARIABLES]    byte[]    dst    boolean    int    dstPos    i    nBytes    shift    src    srcPos        	lang_7154_Conversion_1_1	1332	1	src/main/java/org/apache/commons/lang3/Conversion.java
321	[PATCH]    return    a    <<    shift;	[BUG]    [BUGGY]    return    a    >>>    shift;    [FE]    junit.framework.AssertionFailedError:    expected:<1>    but    was:<5>    testParseOne2    [CONTEXT]    while    (a    !=    b)    {    final    int    delta    =    a    -    b;    b    =    Math.min(a,    b);    a    =    Math.abs(delta);        a    >>=    Integer.numberOfTrailingZeros(a);    }            [BUGGY]    return    a    >>>    shift;    [BUGGY]    }    [CLASS]        ArithmeticUtils    [METHOD]    gcdPositive    [RETURN_TYPE]    int        int    a    int    b    [VARIABLES]    boolean    int    a    aTwos    b    bTwos    delta    shift        	math_108308_ArithmeticUtils_1_1	361	1	src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java
322	[PATCH]    return    Double.longBitsToDouble(sign    |    (((long)    scaledExponent)    <<    52)    |    mantissa);	[BUG]    [BUGGY]    return    Double.longBitsToDouble(sign    |    (((long)scaledExponent)    >>    52)    |    mantissa);    [FE]    junit.framework.AssertionFailedError:    double    hypot(-1.7976931348623157E308,    -1.7976931348623157E308)    expected    Infinity    actual    0.0    entries    [6,    6]    test1[46]    [CONTEXT]    intexponent    =    ((int)    (bits    >>>    52))    &    0x7ff;    long    mantissa    =    bits    &    0x000fffffffffffffL;        int    scaledExponent    =    exponent    +    n;    if    (n    <    0)    {        if    (scaledExponent    >    0)    {        [BUGGY]    return    Double.longBitsToDouble(sign    |    (((long)scaledExponent)    >>    52)    |    mantissa);    [BUGGY]    }    else    if    (scaledExponent    >    -53)    {            mantissa    =    mantissa    |    (1L    <<    52);        final    long    mostSignificantLostBit    =    mantissa    &    (1L    <<    (-scaledExponent));    mantissa    =    mantissa    >>>    (1    -    scaledExponent);    if    (mostSignificantLostBit    !=    0)    {    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    scalb    [RETURN_TYPE]    double        final    double    d    final    int    n    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    bita    bitb    bitsum    cotanFlag    leftPlane    negate    negative    subnormal    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    hiPrecOut    lnCoef_i    lnCoef_last    lnm    lns    reduceResults    result    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    a2    aa    ab    absAsinh    absAtanh    b    base    baseA    baseB    c    cD2pH    cRH    cTmpH    cd    cosEpsA    cosEpsB    cosa    cosaa    cosab    cosb    costA    costB    d    d1High    d1Low    d2p    d2pHH    d2pHL    d2pHigh    d2pLow    da    daa    dab    db    denom    denomb    denomr    dx    epsA    epsA2    epsB    epsilon    err    est    esta    estb    extra    facta    factb    finalRemA    finalRemB    fracPartA    fracPartB    fx1    intPartA    intPartB    invx    invy    lna    lnb    lnza    lnzb    lores    mant    na    nb    numer    oneOverXa    p    p2    pi2a    pi2b    pia    pib    r    rHH    rHL    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    resultHigh    resultLow    resultb    rln10a    rln10b    sinEpsA    sinEpsB    sina    sinb    sintA    sintB    sumA    sumB    t    temp    temp2    tempA    tempB    tempC    tmp    tmp1    tmp2    tmpA    tmpB    tmpHigh    tmpLow    x    x2    xa    xb    xbadj    xpa    xpb    xs    y    ya    yaa    yab    yb    z    za    zaa    zab    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    e    exp    exp3    exponent    finalK    i    idx    intFrac    intPart    intVal    k    n    quadrant    scaledExponent    shift    splitFactor    x    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    a    ac    ad    b    bc    bd    bits    c    d    inbits    l    mantissa    mostSignificantLostBit    prod2A    prod2B    prodA    prodB    shpi0    shpiA    shpiB    sign    x    xl    yi        	math_118180_FastMath_1_1	3088	1	src/main/java/org/apache/commons/math3/util/FastMath.java
323	[PATCH]    if    ((jjtoToken[jjmatchedKind    >>    6]    &    (1L    <<    (jjmatchedKind    &    077)))    !=    0L)	[BUG]    [BUGGY]    if    ((jjtoToken[jjmatchedKind    <<    6]    &    (1L    <<    (jjmatchedKind    &    077)))    !=    0L)    [FE]    java.lang.ArrayIndexOutOfBoundsException:    1280    testCoreOperationDivide    [CONTEXT]    if    (jjmatchedKind    !=    0x7fffffff)    {    if    (jjmatchedPos    +    1    <    curPos)    input_stream.backup(curPos    -    jjmatchedPos    -    1);    [BUGGY]    if    ((jjtoToken[jjmatchedKind    <<    6]    &    (1L    <<    (jjmatchedKind    &    077)))    !=    0L)    [BUGGY]    {    matchedToken    =    jjFillToken();    return    matchedToken;    }    else    {    continue    EOFLoop;    }    }    [CLASS]        XPathParserTokenManager    [METHOD]    getNextToken    [RETURN_TYPE]    Token        [VARIABLES]    PrintStream    debugStream    ds    boolean    EOFSeen    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    nextStates    Token    matchedToken    specialToken    String[]    jjstrLiteralImages    lexStateNames    IOException    e    e1    String    error_after    int    curLexState    curPos    defaultLexState    end    error_column    error_line    hiByte    i    i1    i2    j    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    kind    lexState    pos    start    startState    startsAt    state    state1    state2        	jxpath_12215_XPathParserTokenManager_1_1	1842	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
324	[PATCH]    int    digitOffset    =    (triplet    <<    2);	[BUG]    [BUGGY]    int    digitOffset    =    (triplet    >>>    2);    [FE]    junit.framework.AssertionFailedError:    expected:<10>    but    was:<0>    testLongerObjects    [CONTEXT]    private    static    int    outputLeadingTriplet(int    triplet,    byte[]    buffer,    int    offset)    {    [BUGGY]    int    digitOffset    =    (triplet    >>>    2);    [BUGGY]    char    c    =    LEADING_TRIPLETS[digitOffset++];    if    (c    !=    NULL_CHAR)    {    buffer[offset++]    =    (byte)    c;    }    c    =    LEADING_TRIPLETS[digitOffset++];    if    (c    !=    NULL_CHAR)    {    buffer[offset++]    =    (byte)    c;    }        buffer[offset++]    =    (byte)    LEADING_TRIPLETS[digitOffset];    [CLASS]        NumberOutput    [METHOD]    outputLeadingTriplet    [RETURN_TYPE]    int        int    triplet    byte[]    buffer    int    offset    [VARIABLES]    byte[]    FULL_TRIPLETS_B    buffer    boolean    char    NULL_CHAR    c    String    SMALLEST_LONG    String[]    sSmallIntStrs    sSmallIntStrs2    int    BILLION    MILLION    digitOffset    i    ivalue    len    newValue    offset    ones    origOffset    ptr    thousands    triplet    v2    value    long    MAX_INT_AS_LONG    MIN_INT_AS_LONG    TEN_BILLION_L    THOUSAND_L    newValue    value    char[]    FULL_TRIPLETS    LEADING_TRIPLETS    buffer        	jacksoncore_5817_NumberOutput_1_1	346	1	src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java
325	[PATCH]    c    =    (c    <<    6)    |    (d    &    0x3F);	[BUG]    [BUGGY]    c    =    (c    >>    6)    |    (d    &    0x3F);    [FE]    junit.framework.AssertionFailedError:    Long    text    differs    testLongText    [CONTEXT]    c1    &=    0x0F;    int    d    =    (int)    _inputBuffer[_inputPtr++];    if    ((d    &    0xC0)    !=    0x080)    {    _reportInvalidOther(d    &    0xFF,    _inputPtr);    }    int    c    =    (c1    <<    6)    |    (d    &    0x3F);    d    =    (int)    _inputBuffer[_inputPtr++];    if    ((d    &    0xC0)    !=    0x080)    {    _reportInvalidOther(d    &    0xFF,    _inputPtr);    }    [BUGGY]    c    =    (c    >>    6)    |    (d    &    0x3F);    [BUGGY]    return    c;    }    [CLASS]        UTF8StreamJsonParser    [METHOD]    _decodeUtf8_3fast    [RETURN_TYPE]    int        int    c1    [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    neg    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    codes    quads    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    byteIx    byteLen    c    c1    ch    ch2    cix    code    count    currQuad    currQuadBytes    d    decodedData    defaultValue    digit    end    expLen    features    firstByte    fractLen    i    intLen    intPartLength    integerPartLength    ix    lastQuad    lastQuadBytes    len    max    max2    minAvailable    nameLen    needed    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    q1    q2    qlen    start    value        	jacksoncore_14170_UTF8StreamJsonParser_1_1	2857	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
326	[PATCH]    b24    |=    (((int)    input[inputPtr++])    &    0xFF)    <<    8;	[BUG]    [BUGGY]    b24    |=    (((int)input[inputPtr++])    &    255)    >>    8;    [FE]    arrays    first    differed    at    element    [1];    expected:<0>    but    was:<1>    testBase64UsingReader    [CONTEXT]    }        int    inputLeft    =    inputEnd    -    inputPtr;    if    (inputLeft    >    0)    {    if    (_outputTail    >    safeOutputEnd)    {    _flushBuffer();    }    int    b24    =    ((int)    input[inputPtr++])    <<    16;    if    (inputLeft    ==    2)    {    [BUGGY]    b24    |=    (((int)input[inputPtr++])    &    255)    >>    8;    [BUGGY]    }    _outputTail    =    b64variant.encodeBase64Partial(b24,    inputLeft,    _outputBuffer,    _outputTail);    }    }    [CLASS]        WriterBasedJsonGenerator    [METHOD]    _writeBinary    [RETURN_TYPE]    void        Base64Variant    b64variant    byte[]    input    int    inputPtr    final    int    inputEnd    [VARIABLES]    byte[]    input    SerializableString    _currentEscape    name    sstr    text    boolean    Base64Variant    b64variant    int    SHORT_WRITE    _outputEnd    _outputHead    _outputTail    amount    b24    bytes    chunksBeforeLF    dataLength    end    escCode    escLen    escLimit    features    flushLen    i    inputEnd    inputLeft    inputPtr    len    length    max    maxNonEscaped    missing    newAmount    offset    ptr    qlen    room    safeInputEnd    safeOutputEnd    segmentLen    start    status    textLen    Writer    _writer    w    char[]    HEX_CHARS    _entityBuffer    _outputBuffer    buf    quoted    text        	jacksoncore_15781_WriterBasedJsonGenerator_1_1	1482	1	src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java
327	[PATCH]    b24    |=    (((int)    readBuffer[inputPtr])    &    0xFF)    <<    8;	[BUG]    [BUGGY]    b24    |=    (((int)readBuffer[inputPtr])    &    255)    >>>    8;    [FE]    junit.framework.ComparisonFailure:    expected:<...mUgd3JhcCBvciB0d28uL[i4]=   "]>    but    was:<...mUgd3JhcCBvciB0d28uL[gA]=   "]>    testStreamingWrites    [CONTEXT]    }        if    (inputPtr    <    inputEnd)    {    if    (_outputTail    >    safeOutputEnd)    {    _flushBuffer();    }    int    b24    =    ((int)    readBuffer[inputPtr++])    <<    16;    int    amount    =    1;    if    (inputPtr    <    inputEnd)    {    [BUGGY]    b24    |=    (((int)readBuffer[inputPtr])    &    255)    >>>    8;    [BUGGY]    amount    =    2;    }    bytesDone    +=    amount;    _outputTail    =    b64variant.encodeBase64Partial(b24,    amount,    _outputBuffer,    _outputTail);    }    return    bytesDone;    }    [CLASS]        UTF8JsonGenerator    [METHOD]    _writeBinary    [RETURN_TYPE]    int        Base64Variant    b64variant    InputStream    data    byte[]    readBuffer    [VARIABLES]    byte[]    FALSE_BYTES    HEX_CHARS    NULL_BYTES    TRUE_BYTES    _entityBuffer    _outputBuffer    bbuf    buf    bytes    data    encodingBuffer    input    keyword    outputBuffer    raw    readBuffer    text    utf8    boolean    _bufferRecyclable    addQuotes    bufferRecyclable    commaBefore    state    byte    BYTE_0    BYTE_BACKSLASH    BYTE_COLON    BYTE_COMMA    BYTE_LBRACKET    BYTE_LCURLY    BYTE_QUOTE    BYTE_RBRACKET    BYTE_RCURLY    BYTE_u    b    InputStream    data    OutputStream    _outputStream    out    Base64Variant    b64variant    int    MAX_BYTES_TO_BUFFER    SURR1_FIRST    SURR1_LAST    SURR2_FIRST    SURR2_LAST    _charBufferLength    _outputEnd    _outputMaxContiguous    _outputTail    amount    b24    blen    bytes    bytesDone    bytesLeft    ch    chunksBeforeLF    dataLength    end    escape    features    i    inputEnd    inputLeft    inputPtr    lastFullOffset    left    len    len2    len3    length    maxUnescaped    missing    offset    outputEnd    outputOffset    outputPtr    ptr    remainingChars    safeInputEnd    safeOutputEnd    start    status    totalLen    char[]    _charBuffer    buf    cbuf    text        	jacksoncore_10690_UTF8JsonGenerator_1_1	1688	1	src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java
328	[PATCH]    long    value    =        ((year    -    1980)    <<    25)	[BUG]    [BUGGY]    long    value    =    ((year    -    1980)    >>>    25)    [FE]    junit.framework.AssertionFailedError:    expected:<26770290>    but    was:<1436056434>    testZipLong    [CONTEXT]    public    static    byte[]    toDosTime(long    t)    {    Date    time    =    new    Date(t);            int    year    =    time.getYear()    +    1900;    if    (year    <    1980)    {    return    DOS_TIME_MIN;    }    int    month    =    time.getMonth()    +    1;    [BUGGY]    long    value    =((year    -    1980)    >>>    25)    [BUGGY]    |    (month    <<    21)    |    (time.getDate()    <<    16)    |    (time.getHours()    <<    11)    |    (time.getMinutes()    <<    5)    |    (time.getSeconds()    >>    1);    return    ZipLong.getBytes(value);        }    [CLASS]        ZipUtil    [METHOD]    toDosTime    [RETURN_TYPE]    byte[]        long    t    [VARIABLES]    byte[]    DOS_TIME_MIN    boolean    long    t    value    Date    time    int    month    year        	compress_4899_ZipUtil_1_1	54	1	src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java
329	[PATCH]    ch2    =    (ch2    >>    ((3    -    byteIx)    <<    3));	[BUG]    [BUGGY]    ch2    =    (ch2    <<    ((3    -    byteIx)    <<    3));    [FE]    com.fasterxml.jackson.core.JsonParseException:    Invalid    UTF-8    middle    byte    0xc3b66c00    testSimple    [CONTEXT]    _reportInvalidInitial(ch);    needed    =    ch    =    1;    }    if    ((ix    +    needed)    >    byteLen)    {    _reportInvalidEOF(   "    in    field    name   ");    }        int    ch2    =    quads[ix    >>    2];    byteIx    =    (ix    &    3);    [BUGGY]    ch2    =    (ch2    <<    ((3    -    byteIx)    <<    3));    [BUGGY]    ++ix;    if    ((ch2    &    0xC0)    !=    0x080)    {    _reportInvalidOther(ch2);    }    ch    =    (ch    <<    6)    |    (ch2    &    0x3F);    if    (needed    >    1)    {    ch2    =    quads[ix    >>    2];    byteIx    =    (ix    &    3);    ch2    =    (ch2    >>    ((3    -    byteIx)    <<    3));    [CLASS]        UTF8StreamJsonParser    [METHOD]    addName    [RETURN_TYPE]    Name        int[]    quads    int    qlen    int    lastQuadBytes    [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    codes    quads    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    String    baseName    int    _quad1    amount    bits    byteIx    byteLen    c    ch    ch2    cix    count    currQuad    currQuadBytes    decodedData    defaultValue    end    expLen    features    fractLen    i    intLen    intPartLength    integerPartLength    ix    lastQuad    lastQuadBytes    len    minAvailable    nameLen    needed    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    q1    q2    qlen    start    char[]    cbuf        	jacksoncore_13052_UTF8StreamJsonParser_1_1	2002	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
330	[PATCH]    v    =    (v    <<    (32    -    6))    >>    (32    -    6);	[BUG]    [BUGGY]    v    =    (v    >>>    (32    -    6))    >>    (32    -    6);    [FE]    junit.framework.ComparisonFailure:    expected:<...2-06-09T00:00:00.000[+01:00]>    but    was:<...2-06-09T00:00:00.000[Z]>    testToString_String    [CONTEXT]    static    long    readMillis(DataInput    in)    throws    IOException    {    int    v    =    in.readUnsignedByte();    switch    (v    >>    6)    {    case    0:    default:        [BUGGY]    v    =    (v    >>>    (32    -    6))    >>    (32    -    6);    [BUGGY]    return    v    *    (30    *    60000L);    case    1:        v    =    (v    <<    (32    -    6))    >>    (32    -    30);    v    |=    (in.readUnsignedByte())    <<    16;    v    |=    (in.readUnsignedByte())    <<    8;    v    |=    (in.readUnsignedByte());    return    v    *    60000L;        [CLASS]        DateTimeZoneBuilder    OfYear    Recurrence    Rule    Transition    RuleSet    DSTZone    PrecalculatedZone    [METHOD]    readMillis    [RETURN_TYPE]    long        DataInput    in    [VARIABLES]    Recurrence    endRecurrence    iEndRecurrence    iRecurrence    iStartRecurrence    recurrence    startRecurrence    OfYear    iOfYear    iUpperOfYear    ofYear    long[]    iTransitions    transitions    DSTZone    iTailZone    tailZone    ArrayList    iRuleSets    iRules    int[]    iStandardOffsets    iWallOffsets    standardOffsets    wallOffsets    String    iInitialNameKey    iNameKey    id    nameKey    String[]    iNameKeys    nameKeys    int    YEAR_LIMIT    dayOfMonth    dayOfWeek    fromYear    iDayOfMonth    iDayOfWeek    iFromYear    iInitialSaveMillis    iMillisOfDay    iMonthOfYear    iSaveMillis    iStandardOffset    iToYear    iUpperYear    iWallOffset    millisOfDay    monthOfYear    saveMillis    standardOffset    toYear    v    wallOffset    long    iMillis    millis    minutes    seconds    serialVersionUID    units    w    DataInput    in    boolean    advanceDayOfWeek    iAdvance    char    iMode    mode        	time_18136_DateTimeZoneBuilder_1_1	187	1	src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java
331	[PATCH]    bsBuffShadow    =    (bsBuffShadow    <<    8)    |    thech;	[BUG]    [BUGGY]    bsBuffShadow    =    (bsBuffShadow    >>>    8)    |    thech;    [FE]    org.apache.commons.compress.compressors.CompressorException:    Could    not    create    CompressorInputStream    testBzip2Unarchive    [CONTEXT]    if    (bsLiveShadow    <    n)    {    final    InputStream    inShadow    =    this.in;    do    {    int    thech    =    inShadow.read();    if    (thech    <    0)    {    throw    new    IOException(   "unexpected    end    of    stream   ");    }        [BUGGY]    bsBuffShadow    =    (bsBuffShadow    >>>    8)    |    thech;    [BUGGY]    bsLiveShadow    +=    8;    }    while    (bsLiveShadow    <    n);    this.bsBuff    =    bsBuffShadow;    }    this.bsLive    =    bsLiveShadow    -    n;    return    (bsBuffShadow    >>    (bsLiveShadow    -    n))    &    ((1    <<    n)    -    1);    }    [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    bsR    [RETURN_TYPE]    int        final    int    n    [VARIABLES]    int[][]    base    limit    perm    InputStream    in    inShadow    char[][]    temp_charArray2d    Data    data    int[]    cftab    minLens    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    b    blockSize    blockSize100k    bsBuff    bsBuffShadow    bsLive    bsLiveShadow    computedBlockCRC    computedCombinedCRC    currentChar    currentState    destOffs    hi    i    last    len    magic    n    nInUse    nInUseShadow    offs    origPtr    retChar    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    thech    char[]    getAndMoveToFrontDecode_yy    byte[]    dest    ll8    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    expected    magic0    magic1    magic2    magic3    magic4    magic5    su_z    boolean[]    inUse        	compress_5371_BZip2CompressorInputStream_1_1	346	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
332	[PATCH]    final    int    z2                            =    (vM2    ^    (vM2    <<    10))    ^    (vM3    <<    26);	[BUG]    [BUGGY]    final    int    z2                =    (vM2    ^    (vM2    <<    10))    ^    (vM3    >>    26);    [FE]    junit.framework.AssertionFailedError:    expected:<654.321>    but    was:<661.3136371779458>    testCircleFitting2    [CONTEXT]    final    int    indexRm2    =    iRm2[index];    final    int    v0    =    v[index];    final    int    vM1=    v[i1[index]];    final    int    vM2=    v[i2[index]];    final    int    vM3=    v[i3[index]];        final    int    z0    =    (0xFFFF8000    &    v[indexRm1])    ^    (0x00007FFF    &    v[indexRm2]);    final    int    z1    =    (v0    ^    (v0    <<    24))^    (vM1    ^    (vM1    >>>    30));    [BUGGY]    final    int    z2    =    (vM2    ^    (vM2    <<    10))    ^    (vM3    >>    26);    [BUGGY]    final    int    z3    =    z1^    z2;    final    int    z2Prime=    ((z2    <<    9)    ^    (z2    >>>    23))    &    0xfbffffff;    final    int    z2Second    =    ((z2    &    0x00020000)    !=    0)    ?    (z2Prime    ^    0xb729fcec)    :    z2Prime;    int    z4    =    z0    ^    (z1    ^    (z1    >>>    20))    ^    z2Second    ^    z3;    v[index]    =    z3;    v[indexRm1]=    z4;    v[indexRm2]    &=    0xFFFF8000;    index=    indexRm1;        [CLASS]        Well44497b    [METHOD]    next    [RETURN_TYPE]    int        final    int    bits    [VARIABLES]    long    seed    serialVersionUID    int    K    M1    M2    M3    bits    indexRm1    indexRm2    seed    v0    vM1    vM2    vM3    z0    z1    z2    z2Prime    z2Second    z3    z4    boolean        	math_94376_Well44497b_1_1	99	1	src/main/java/org/apache/commons/math3/random/Well44497b.java
333	[PATCH]    final    int    mask    =    0xff    <<    shift;	[BUG]    [BUGGY]    final    int    mask    =    255    >>>    shift;    [FE]    junit.framework.AssertionFailedError:    expected:<-13004>    but    was:<-8396>    testByteArrayToShort    [CONTEXT]    }    if    ((nBytes    -    1)    *    8    +    dstPos    >=    16)    {    throw    new    IllegalArgumentException(       "(nBytes-1)*8+dstPos    is    greather    or    equal    to    than    16   ");    }    short    out    =    dstInit;    int    shift    =    0;    for    (int    i    =    0;    i    <    nBytes;    i++    )    {    shift    =    i    *    8    +    dstPos;    final    int    bits    =    (0xff    &    src[i    +    srcPos])    <<    shift;    [BUGGY]    final    int    mask    =    255    >>>    shift;    [BUGGY]    out    =    (short)((out    &    ~mask)    |    bits);    }    return    out;    }    [CLASS]        Conversion    [METHOD]    byteArrayToShort    [RETURN_TYPE]    short        final    byte[]    src    final    int    srcPos    final    short    dstInit    final    int    dstPos    final    int    nBytes    [VARIABLES]    byte[]    src    boolean    short    dstInit    out    int    bits    dstPos    i    mask    nBytes    shift    srcPos        	lang_6308_Conversion_1_1	881	1	src/main/java/org/apache/commons/lang3/Conversion.java
334	[PATCH]    |    ((str[i    +    2]    &    0xff)    <<    16)	[BUG]    [BUGGY]    |    ((str[i    +    2]    &    255)    >>    16)    [FE]    junit.framework.AssertionFailedError:    testReplaceTwoPlaceholdersNonAlphaOrder    [CONTEXT]    private    static    int    hash32(byte[]    str,    int    start,    int    limit,    int    c)    {    int    a    =    0x9e3779b9;    int    b    =    0x9e3779b9;    int    i;    for    (i    =    start;    i    +    12    <=    limit;    i    +=    12)    {    a    +=    (((str[i    +    0]    &    0xff)    <<    0)    |    ((str[i    +    1]    &    0xff)    <<    8)    [BUGGY]    |    ((str[i    +    2]    &    255)    >>    16)    [BUGGY]    |    ((str[i    +    3]    &    0xff)    <<    24));    b    +=    (((str[i    +    4]    &    0xff)    <<    0)    |    ((str[i    +    5]    &    0xff)    <<    8)    |    ((str[i    +    6]    &    0xff)    <<    16)    |    ((str[i    +    7]    &    0xff)    <<    24));    c    +=    (((str[i    +    8]    &    0xff)    <<    0)    |    ((str[i    +    9]    &    0xff)    <<    8)    |    ((str[i    +    10]    &    0xff)    <<    16)    |    ((str[i    +    11]    &    0xff)    <<    24));            [CLASS]        GoogleJsMessageIdGenerator    FP    MessageId    [METHOD]    hash32    [RETURN_TYPE]    int        byte[]    str    int    start    int    limit    int    c    [VARIABLES]    byte[]    str    String    meaning    projectId    projectScopedMeaning    str    tcValue    boolean    int    a    b    c    i    limit    start        	closure_30680_GoogleJsMessageIdGenerator_1_1	116	1	src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java
335	[PATCH]    append(b24    >>    16);	[BUG]    [BUGGY]    append(b24    <<    16);    [FE]    arrays    first    differed    at    element    [498];    expected:<-10>    but    was:<0>    testInArray    [CONTEXT]    public    void    appendThreeBytes(int    b24)    {    if    ((_currBlockPtr    +    2)    <    _currBlock.length)    {    _currBlock[_currBlockPtr++]    =    (byte)    (b24    >>    16);    _currBlock[_currBlockPtr++]    =    (byte)    (b24    >>    8);    _currBlock[_currBlockPtr++]    =    (byte)    b24;    }    else    {    [BUGGY]    append(b24    <<    16);    [BUGGY]    append(b24    >>    8);    append(b24);    }    }    [CLASS]        ByteArrayBuilder    [METHOD]    appendThreeBytes    [RETURN_TYPE]    void        int    b24    [VARIABLES]    byte[]    NO_BYTES    _currBlock    BufferRecycler    _bufferRecycler    br    boolean    int    DEFAULT_BLOCK_ARRAY_SIZE    INITIAL_BLOCK_SIZE    MAX_BLOCK_SIZE    _currBlockPtr    _pastLen    b16    b24    firstBlockSize    i    LinkedList    _pastBlocks        	jacksoncore_621_ByteArrayBuilder_1_1	124	1	src/main/java/com/fasterxml/jackson/core/util/ByteArrayBuilder.java
336	[PATCH]    a    =    prodA    >>>    32;	[BUG]    [BUGGY]    a    =    prodA    >>    32;    [FE]    junit.framework.AssertionFailedError:    x=1.0633823966279328E7    expected:<-5.6130792037704396E-8>    but    was:<-1.9641117590046646E-8>    testDerivativeShortcut    [CONTEXT]        int    intPart    =    (int)(prodA    >>>    62);        prodA    <<=    2;    prodA    |=    prodB    >>>    62;    prodB    <<=    2;            [BUGGY]    a    =    prodA    >>    32;    [BUGGY]    b    =    prodA    &    0xffffffffL;    c    =    PI_O_4_BITS[0]    >>>    32;    d    =    PI_O_4_BITS[0]    &    0xffffffffL;    ac    =    a    *    c;    bd    =    b    *    d;    bc    =    b    *    c;    ad    =    a    *    d;        [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    reducePayneHanek    [RETURN_TYPE]    void        double    x    double[]    result    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    bita    bitb    bitsum    cotanFlag    negate    negative    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    hiPrecOut    lnCoef_i    lnCoef_last    lnm    lns    result    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    a2    aa    ab    absAsinh    absAtanh    b    base    baseA    baseB    c    cD2pH    cRH    cTmpH    cd    cosEpsA    cosEpsB    cosa    cosaa    cosab    cosb    costA    costB    d    d1High    d1Low    d2p    d2pHH    d2pHL    d2pHigh    d2pLow    da    daa    dab    db    denom    denomb    denomr    epsilon    err    est    esta    estb    extra    finalRemA    finalRemB    fracPartA    fracPartB    fx1    intPartA    intPartB    lna    lnb    lnza    lnzb    lores    na    nb    numer    p    pi2a    pi2b    rHH    rHL    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    resultHigh    resultLow    rln10a    rln10b    sinEpsA    sinEpsB    sina    sinb    sintA    sintB    sumA    sumB    t    temp    temp2    tempA    tempB    tempC    tmp    tmp1    tmp2    tmpA    tmpB    tmpHigh    tmpLow    x    x2    xa    xb    xbadj    xpa    xpb    y    ya    yaa    yab    yb    z    za    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    e    exp    exponent    finalK    i    idx    intFrac    intPart    intVal    k    shift    splitFactor    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    a    ac    ad    b    bc    bd    bits    c    d    inbits    prod2A    prod2B    prodA    prodB    shpi0    shpiA    shpiB    xl    yi        	math_115465_FastMath_1_1	2128	1	src/main/java/org/apache/commons/math3/util/FastMath.java
337	[PATCH]    b24    =    (b24    <<    8)    |    (((int)    readBuffer[inputPtr++])    &    0xFF);	[BUG]    [BUGGY]    b24    =    (b24    >>    8)    |    (((int)    readBuffer[inputPtr++])    &    0xFF);    [FE]    junit.framework.ComparisonFailure:    expected:<[   "[U29tZSBjb250ZW50IHNvIHRoYXQgd2UgY2FuIHRlc3QgZW5jb2Rpbmcgb2YgYmFzZTY0IGRhdGE7\nIG11c3QgYmUgbG9uZyBlbm91Z2ggaW5jbHVkZSBhIGxpbmUgd3JhcCBvciB0d28uLi5Tb21lIGNv\nbnRlbnQgc28gdGhhdCB3ZSBjYW4gdGVzdCBlbmNvZGluZyBvZiBiYXNlNjQgZGF0YTsgbXVzdCBi\nZSBsb25nIGVub3VnaCBpbmNsdWRlIGEgbGluZSB3cmFwIG9yIHR3by4uLlNvbWUgY29udGVudCBz\nbyB0aGF0IHdlIGNhbiB0ZXN0IGVuY29kaW5nIG9mIGJhc2U2NCBkYXRhOyBtdXN0IGJlIGxvbmcg\nZW5vdWdoIGluY2x1ZGUgYSBsaW5lIHdyYXAgb3IgdHdvLi4uU29tZSBjb250ZW50IHNvIHRoYXQg\nd2UgY2FuIHRlc3QgZW5jb2Rpbmcgb2YgYmFzZTY0IGRhdGE7IG11c3QgYmUgbG9uZyBlbm91Z2gg\naW5jbHVkZSBhIGxpbmUgd3JhcCBvciB0d28u]Li4=   "]>    but    was:<[   "[AAB/AABnAAB/AAB1AABvAABoAABhAAB3AABvAABlAABzAABnAABvAABuAABvAABzAAB1AABhAAB/\nAAB1AABzAABiAABuAABnAAB/AABnAABrAABsAABlAABpAABuAAB3AAB/AAB2AAB/AAB/AABvAABv\nAABvAABuAABzAAB1AAB3AABnAABhAAB3AAB1AABvAABuAABvAABmAABlAAA2AAB0AABhAAB/AAB2\nAABtAABvAABuAABvAABpAABuAAB1AAAgAABuAAB3AAByAAByAAB3AABvAABvAABtAABvAAB+AAB3\nAAB/AAB8AABlAABhAAB+AAB1AABuAABnAABvAABmAABhAAB3AAB0AABhAAB/AAB1AABlAABvAABu\nAABvAAB9AABuAAB3AABkAABtAABtAAByAABhAABvAAB/AAAuAAB/AABnAAB/AAB1AABvAABoAABh\nAAB3AABvAABlAABzAABnAABvAABuAABvAABzAAB1AABhAAB/AAB1AABzAABiAABuAABnAAB/AABn\nAABrAABsAABlAABpAABuAAB3AAB/AAB2AAB/]Li4=   "]>    testStreamingWrites    [CONTEXT]    if    (inputEnd    <    3)    {    break;    }    lastFullOffset    =    inputEnd-3;    }    if    (_outputTail    >    safeOutputEnd)    {    _flushBuffer();    }    int    b24    =    ((int)    readBuffer[inputPtr++])    <<    8;    b24    |=    ((int)    readBuffer[inputPtr++])    &    0xFF;    [BUGGY]    b24    =    (b24    >>    8)    |    (((int)    readBuffer[inputPtr++])    &    0xFF);    [BUGGY]    bytesLeft    -=    3;    _outputTail    =    b64variant.encodeBase64Chunk(b24,    _outputBuffer,    _outputTail);    if    (--chunksBeforeLF    <=    0)    {    _outputBuffer[_outputTail++]    =    '\\';    _outputBuffer[_outputTail++]    =    'n';    chunksBeforeLF    =    b64variant.getMaxLineLength()    >>    2;    }    }            [CLASS]        WriterBasedJsonGenerator    [METHOD]    _writeBinary    [RETURN_TYPE]    int        Base64Variant    b64variant    InputStream    data    byte[]    readBuffer    int    bytesLeft    [VARIABLES]    byte[]    readBuffer    SerializableString    _currentEscape    name    sstr    text    boolean    InputStream    data    Base64Variant    b64variant    int    SHORT_WRITE    _outputEnd    _outputHead    _outputTail    amount    b24    bytes    bytesLeft    chunksBeforeLF    dataLength    end    escCode    escLen    escLimit    features    flushLen    i    inputEnd    inputLeft    inputPtr    lastFullOffset    len    length    max    maxNonEscaped    missing    newAmount    offset    ptr    qlen    room    safeInputEnd    safeOutputEnd    segmentLen    start    status    textLen    Writer    _writer    w    char[]    HEX_CHARS    _entityBuffer    _outputBuffer    buf    quoted    text        	jacksoncore_15840_WriterBasedJsonGenerator_1_1	1515	1	src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java
338	[PATCH]    int    zvec    =    (bsBuffShadow    >>    (bsLiveShadow    -    zn))	[BUG]    [BUGGY]    int    zvec    =    (bsBuffShadow    <<    (bsLiveShadow    -    zn))    [FE]    org.apache.commons.compress.compressors.CompressorException:    Could    not    create    CompressorInputStream    testBzip2Unarchive    [CONTEXT]    while    (bsLiveShadow    <    zn)    {    final    int    thech    =    inShadow.read();    if    (thech    >=    0)    {    bsBuffShadow    =    (bsBuffShadow    <<    8)    |    thech;    bsLiveShadow    +=    8;    continue;    }    else    {    throw    new    IOException(   "unexpected    end    of    stream   ");    }    }    [BUGGY]    int    zvec    =    (bsBuffShadow    <<    (bsLiveShadow    -    zn))    [BUGGY]    &    ((1    <<    zn)    -    1);    bsLiveShadow    -=    zn;    while    (zvec    >    limit_zt[zn])    {    zn++;    while    (bsLiveShadow    <    1)    {    final    int    thech    =    inShadow.read();    if    (thech    >=    0)    {    bsBuffShadow    =    (bsBuffShadow    <<    8)    |    thech;    bsLiveShadow    +=    8;    [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    getAndMoveToFrontDecode    [RETURN_TYPE]    void        [VARIABLES]    int[][]    base    limit    perm    InputStream    in    inShadow    byte    ch    char[][]    len    temp_charArray2d    Data    data    dataShadow    int[]    base    base_zt    cftab    limit    limit_zt    minLens    perm    perm_zt    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    alphaSize    b    blockSize    blockSize100k    bsBuff    bsBuffShadow    bsLive    bsLiveShadow    computedBlockCRC    computedCombinedCRC    curr    currentChar    currentState    destOffs    eob    groupNo    groupPos    hi    i    i16    inUse16    j    last    lastShadow    len    limitLast    magic    maxLen    minLen    minLens_zt    n    nGroups    nInUse    nInUseShadow    nSelectors    nb    nextSym    offs    origPtr    pp    retChar    s    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    t    thech    v    vec    zn    zt    zvec    char[]    getAndMoveToFrontDecode_yy    len_t    length    yy    byte[]    dest    ll8    pos    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    expected    lent    magic0    magic1    magic2    magic3    magic4    magic5    su_z    tmp    boolean[]    inUse        	compress_6028_BZip2CompressorInputStream_1_1	699	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
339	[PATCH]    int    chunksBeforeLF    =    b64variant.getMaxLineLength()    >>    2;	[BUG]    [BUGGY]    int    chunksBeforeLF    =    b64variant.getMaxLineLength()    <<    2;    [FE]    junit.framework.ComparisonFailure:    expected:<...b2YgYmFzZTY0IGRhdGE7[\nIG11c3QgYmUgbG9uZyBlbm91Z2ggaW5jbHVkZSBhIGxpbmUgd3JhcCBvciB0d28uLi5Tb21lIGNv\nbnRlbnQgc28gdGhhdCB3ZSBjYW4gdGVzdCBlbmNvZGluZyBvZiBiYXNlNjQgZGF0YTsgbXVzdCBi\nZSBsb25nIGVub3VnaCBpbmNsdWRlIGEgbGluZSB3cmFwIG9yIHR3by4uLlNvbWUgY29udGVudCBz\nbyB0aGF0IHdlIGNhbiB0ZXN0IGVuY29kaW5nIG9mIGJhc2U2NCBkYXRhOyBtdXN0IGJlIGxvbmcg\nZW5vdWdoIGluY2x1ZGUgYSBsaW5lIHdyYXAgb3IgdHdvLi4uU29tZSBjb250ZW50IHNvIHRoYXQg\nd2UgY2FuIHRlc3QgZW5jb2Rpbmcgb2YgYmFzZTY0IGRhdGE7IG11c3QgYmUgbG9uZyBlbm91Z2gg\n]aW5jbHVkZSBhIGxpbmUg...>    but    was:<...b2YgYmFzZTY0IGRhdGE7[IG11c3QgYmUgbG9uZyBlbm91Z2ggaW5jbHVkZSBhIGxpbmUgd3JhcCBvciB0d28uLi5Tb21lIGNvbnRlbnQgc28gdGhhdCB3ZSBjYW4gdGVzdCBlbmNvZGluZyBvZiBiYXNlNjQgZGF0YTsgbXVzdCBiZSBsb25nIGVub3VnaCBpbmNsdWRlIGEgbGluZSB3cmFwIG9yIHR3by4uLlNvbWUgY29udGVudCBzbyB0aGF0IHdlIGNhbiB0ZXN0IGVuY29kaW5nIG9mIGJhc2U2NCBkYXRhOyBtdXN0IGJlIGxvbmcgZW5vdWdoIGluY2x1ZGUgYSBsaW5lIHdyYXAgb3IgdHdvLi4uU29tZSBjb250ZW50IHNvIHRoYXQgd2UgY2FuIHRlc3QgZW5jb2Rpbmcgb2YgYmFzZTY0IGRhdGE7IG11c3QgYmUgbG9uZyBlbm91Z2gg]aW5jbHVkZSBhIGxpbmUg...>    testStreamingWrites    [CONTEXT]    {    int    inputPtr    =    0;    int    inputEnd    =    0;    int    lastFullOffset    =    -3;        int    safeOutputEnd    =    _outputEnd    -    6;    [BUGGY]    int    chunksBeforeLF    =    b64variant.getMaxLineLength()    <<    2;    [BUGGY]    while    (bytesLeft    >    2)    {    if    (inputPtr    >    lastFullOffset)    {    inputEnd    =    _readMore(data,    readBuffer,    inputPtr,    inputEnd,    bytesLeft);    inputPtr    =    0;    if    (inputEnd    <    3)    {    break;    }    lastFullOffset    =    inputEnd-3;    }    [CLASS]        UTF8JsonGenerator    [METHOD]    _writeBinary    [RETURN_TYPE]    int        Base64Variant    b64variant    InputStream    data    byte[]    readBuffer    int    bytesLeft    [VARIABLES]    byte[]    FALSE_BYTES    HEX_CHARS    NULL_BYTES    TRUE_BYTES    _entityBuffer    _outputBuffer    bbuf    buf    bytes    data    encodingBuffer    input    keyword    outputBuffer    raw    readBuffer    text    utf8    boolean    _bufferRecyclable    addQuotes    bufferRecyclable    commaBefore    state    byte    BYTE_0    BYTE_BACKSLASH    BYTE_COLON    BYTE_COMMA    BYTE_LBRACKET    BYTE_LCURLY    BYTE_QUOTE    BYTE_RBRACKET    BYTE_RCURLY    BYTE_u    b    InputStream    data    OutputStream    _outputStream    out    Base64Variant    b64variant    int    MAX_BYTES_TO_BUFFER    SURR1_FIRST    SURR1_LAST    SURR2_FIRST    SURR2_LAST    _charBufferLength    _outputEnd    _outputMaxContiguous    _outputTail    amount    b24    blen    bytes    bytesLeft    ch    chunksBeforeLF    dataLength    end    escape    features    i    inputEnd    inputLeft    inputPtr    lastFullOffset    left    len    len2    len3    length    maxUnescaped    missing    offset    outputEnd    outputOffset    outputPtr    ptr    remainingChars    safeInputEnd    safeOutputEnd    start    status    totalLen    char[]    _charBuffer    buf    cbuf    text        	jacksoncore_10484_UTF8JsonGenerator_1_1	1591	1	src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java
340	[PATCH]    a    +=    (value[offset    +    3]    &    0xffL)    <<    24;	[BUG]    [BUGGY]    a    +=    (value[offset    +    3]    &    255L)    >>>    24;    [FE]    junit.framework.ComparisonFailure:    expected:<MSG_[16LJMYKCXT84X]>    but    was:<MSG_[LLJEKSJLHO6U]>    testUnnamedGoogleMessage    [CONTEXT]    case    8:    a    +=    word64At(value,    offset);    break;    case    7:    a    +=    (value[offset    +    6]    &    0xffL)    <<    48;    case    6:    a    +=    (value[offset    +    5]    &    0xffL)    <<    40;    case    5:    a    +=    (value[offset    +    4]    &    0xffL)    <<    32;    case    4:    [BUGGY]    a    +=    (value[offset    +    3]    &    255L)    >>>    24;    [BUGGY]    case    3:    a    +=    (value[offset    +    2]    &    0xffL)    <<    16;    case    2:    a    +=    (value[offset    +    1]    &    0xffL)    <<    8;    case    1:    a    +=    (value[offset    +    0]    &    0xffL);        }    return    mix64(a,    b,    c);    }    [CLASS]        JsMessage    Style    PlaceholderReference    Builder    Hash    [METHOD]    hash64    [RETURN_TYPE]    long        byte[]    value    int    offset    int    length    long    seed    [VARIABLES]    byte[]    value    Pattern    MSG_EXTERNAL_PATTERN    Set    placeholders    boolean    allowLegacyMessages    hidden    isAnonymous    isExternal    useClosure    Style    CLOSURE    LEGACY    RELAX    List    messageParts    parts    String    MESSAGE_REPRESENTATION_FORMAT    defactoMeaning    desc    externalId    id    identifier    key    meaning    name    part    sourceName    value    long    CONSTANT64    SEED64    a    b    c    nonnegativeHash    seed    int    keylen    length    offset        	closure_13710_JsMessage_1_1	612	1	src/com/google/javascript/jscomp/JsMessage.java
341	[PATCH]    word    |=    0x1L    <<    shift;	[BUG]    [BUGGY]    word    |=    1L    >>>    shift;    [FE]    junit.framework.AssertionFailedError:    expected:<1.0>    but    was:<0.0>    testBox    [CONTEXT]    final    int    neededLongs    =    (neededBits    +    62)    /    63;    encoding    =    new    long[components.length    *    neededLongs];        inteIndex    =    0;    intshift=    62;    long    word    =    0x0L;    for    (int    k    =    offset;    eIndex    <    encoding.length;    --k)    {    for    (int    vIndex    =    0;    vIndex    <    components.length;    ++vIndex)    {    if    (getBit(vIndex,    k)    !=    0)    {    [BUGGY]    word    |=    1L    >>>    shift;    [BUGGY]    }    if    (shift--    ==    0)    {    encoding[eIndex++]    =    word;    word=    0x0L;    shift    =    62;    }    }    }    }    [CLASS]        OrderedTuple    [METHOD]    encode    [RETURN_TYPE]    void        final    int    minOffset    [VARIABLES]    boolean    nan    negInf    posInf    double[]    components    long[]    encoding    long    EXPONENT_MASK    IMPLICIT_ONE    MANTISSA_MASK    SIGN_MASK    b    m    word    int    e    eIndex    i    k    lsb    minOffset    msb    neededBits    neededLongs    offset    shift    vIndex        	math_41781_OrderedTuple_1_1	205	1	src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java
342	[PATCH]    result    =    lvalInt    >>    rvalInt;	[BUG]    [BUGGY]    result    =    lvalInt    >>>    rvalInt;    [FE]    junit.framework.ComparisonFailure:    expected:<x=[-1]>    but    was:<x=[2147483647]>    testFoldBitShiftsStringCompare    [CONTEXT]    if    (rvalInt    !=    rval)    {    report(FRACTIONAL_BITWISE_OPERAND,    right);    return    n;    }    switch    (n.getType())    {    case    Token.LSH:    result    =    lvalInt    <<    rvalInt;    break;    case    Token.RSH:    [BUGGY]    result    =    lvalInt    >>>    rvalInt;    [BUGGY]    break;    case    Token.URSH:                long    lvalLong    =    lvalInt    &    0xffffffffL;    result    =    lvalLong    >>>    rvalInt;    break;    default:    throw    new    AssertionError(   "Unknown    shift    operator:       "    +    [CLASS]        PeepholeFoldConstants    [METHOD]    tryFoldShift    [RETURN_TYPE]    Node        Node    n    Node    left    Node    right    [VARIABLES]    boolean    late    lval    DiagnosticType    BITWISE_OPERAND_OUT_OF_RANGE    FRACTIONAL_BITWISE_OPERAND    INDEX_OUT_OF_BOUNDS_ERROR    INVALID_GETELEM_INDEX_ERROR    NEGATING_A_NON_NUMBER_ERROR    SHIFT_AMOUNT_OUT_OF_BOUNDS    double    MAX_FOLD_NUMBER    lval    negNum    numValue    result    rval    val    value    int    lvalInt    rvalInt    long    lvalLong    Node    left    n    newNumber    right        	closure_36346_PeepholeFoldConstants_1_1	896	1	src/com/google/javascript/jscomp/PeepholeFoldConstants.java
343	[PATCH]    return    (value    <<    1)    +    0;	[BUG]    [BUGGY]    return    (value    >>>    1)    +    0;    [FE]    junit.framework.AssertionFailedError:    expected:<1>    but    was:<0>    testBase64VLQSelectedValues1    [CONTEXT]    private    static    int    toVLQSigned(int    value)    {    if    (value    <    0)    {    return    ((-value)    <<    1)    +    1;    }    else    {    [BUGGY]    return    (value    >>>    1)    +    0;    [BUGGY]    }    }    [CLASS]        Base64VLQ    [METHOD]    toVLQSigned    [RETURN_TYPE]    int        int    value    [VARIABLES]    int    VLQ_BASE    VLQ_BASE_MASK    VLQ_BASE_SHIFT    VLQ_CONTINUATION_BIT    value    boolean        	closure_90_Base64VLQ_1_1	67	1	src/com/google/debugging/sourcemap/Base64VLQ.java
344	[PATCH]    b    -=    c;    b    -=    a;    b    ^=    a    <<    49;	[BUG]    [BUGGY]    b    -=    c;    b    -=    a;    b    ^=    a    >>    49;    [FE]    junit.framework.AssertionFailedError:    expected:<4894389798993746036>    but    was:<2504941566261970061>    testHashValues    [CONTEXT]    private    static    long    mix64(long    a,    long    b,    long    c)    {    a    -=    b;    a    -=    c;    a    ^=    c    >>>    43;    b    -=    c;    b    -=    a;    b    ^=    a    <<    9;    c    -=    a;    c    -=    b;    c    ^=    b    >>>    8;    a    -=    b;    a    -=    c;    a    ^=    c    >>>    38;    b    -=    c;    b    -=    a;    b    ^=    a    <<    23;    c    -=    a;    c    -=    b;    c    ^=    b    >>>    5;    a    -=    b;    a    -=    c;    a    ^=    c    >>>    35;    [BUGGY]    b    -=    c;    b    -=    a;    b    ^=    a    >>    49;    [BUGGY]    c    -=    a;    c    -=    b;    c    ^=    b    >>>    11;    a    -=    b;    a    -=    c;    a    ^=    c    >>>    12;    b    -=    c;    b    -=    a;    b    ^=    a    <<    18;    c    -=    a;    c    -=    b;    c    ^=    b    >>>    22;    return    c;    }    [CLASS]        JsMessage    Style    PlaceholderReference    Builder    Hash    [METHOD]    mix64    [RETURN_TYPE]    long        long    a    long    b    long    c    [VARIABLES]    Pattern    MSG_EXTERNAL_PATTERN    Set    placeholders    boolean    allowLegacyMessages    hidden    isAnonymous    isExternal    useClosure    Style    CLOSURE    LEGACY    RELAX    List    messageParts    parts    String    MESSAGE_REPRESENTATION_FORMAT    defactoMeaning    desc    externalId    id    identifier    key    meaning    name    part    sourceName    value    long    CONSTANT64    SEED64    a    b    c    nonnegativeHash    seed        	closure_13942_JsMessage_1_1	646	1	src/com/google/javascript/jscomp/JsMessage.java
345	[PATCH]    |    ((str[i    +    6]    &    0xff)    <<    16)	[BUG]    [BUGGY]    |    ((str[i    +    6]    &    255)    >>    16)    [FE]    junit.framework.AssertionFailedError:    testReplaceTwoPlaceholdersNonAlphaOrder    [CONTEXT]    int    a    =    0x9e3779b9;    int    b    =    0x9e3779b9;    int    i;    for    (i    =    start;    i    +    12    <=    limit;    i    +=    12)    {    a    +=    (((str[i    +    0]    &    0xff)    <<    0)    |    ((str[i    +    1]    &    0xff)    <<    8)    |    ((str[i    +    2]    &    0xff)    <<    16)    |    ((str[i    +    3]    &    0xff)    <<    24));    b    +=    (((str[i    +    4]    &    0xff)    <<    0)    |    ((str[i    +    5]    &    0xff)    <<    8)    [BUGGY]    |    ((str[i    +    6]    &    255)    >>    16)    [BUGGY]    |    ((str[i    +    7]    &    0xff)    <<    24));    c    +=    (((str[i    +    8]    &    0xff)    <<    0)    |    ((str[i    +    9]    &    0xff)    <<    8)    |    ((str[i    +    10]    &    0xff)    <<    16)    |    ((str[i    +    11]    &    0xff)    <<    24));        a    -=    b;    a    -=    c;    a    ^=    (c    >>>    13);    b    -=    c;    [CLASS]        GoogleJsMessageIdGenerator    FP    MessageId    [METHOD]    hash32    [RETURN_TYPE]    int        byte[]    str    int    start    int    limit    int    c    [VARIABLES]    byte[]    str    String    meaning    projectId    projectScopedMeaning    str    tcValue    boolean    int    a    b    c    i    limit    start        	closure_30743_GoogleJsMessageIdGenerator_1_1	120	1	src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java
346	[PATCH]    byte    val2    =    ((b2    &    SIGN)    ==    0)    ?    (byte)    (b2    >>    4)    :    (byte)    ((b2)    >>    4    ^    0xf0);	[BUG]    [BUGGY]    byte    val2    =    ((b2    &    SIGN)    ==    0)    ?    (byte)    (b2    <<    4)    :    (byte)    ((b2)    >>    4    ^    0xf0);    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -64    testDiscardWhitespace    [CONTEXT]    b1    =    binaryData[dataIndex];    b2    =    binaryData[dataIndex    +    1];    b3    =    binaryData[dataIndex    +    2];            l    =    (byte)    (b2    &    0x0f);    k    =    (byte)    (b1    &    0x03);    byte    val1    =    ((b1    &    SIGN)    ==    0)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);    [BUGGY]    byte    val2    =    ((b2    &    SIGN)    ==    0)    ?    (byte)    (b2    <<    4)    :    (byte)    ((b2)    >>    4    ^    0xf0);    [BUGGY]    byte    val3    =    ((b3    &    SIGN)    ==    0)    ?    (byte)    (b3    >>    6)    :    (byte)    ((b3)    >>    6    ^    0xfc);    encodedData[encodedIndex]    =    lookUpBase64Alphabet[val1];                encodedData[encodedIndex    +    1]    =    lookUpBase64Alphabet[val2    |    (k    <<    4)];    encodedData[encodedIndex    +    2]    =    lookUpBase64Alphabet[(l    <<    2)    |    val3];    encodedData[encodedIndex    +    3]    =    lookUpBase64Alphabet[b3    &    0x3f];        [CLASS]        Base64    [METHOD]    encodeBase64    [RETURN_TYPE]    byte[]        byte[]    binaryData    boolean    isChunked    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    binaryData    encodedData    lookUpBase64Alphabet    pArray    boolean    isChunked    byte    PAD    b1    b2    b3    k    l    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    length    nextSeparatorIndex    long    binaryDataLength    encodedDataLengthLong    fewerThan24bits    lengthDataBits    tripletCount        	codec_288_Base64_1_1	320	1	src/java/org/apache/commons/codec/binary/Base64.java
347	[PATCH]    decodedData[encodedIndex    +    2]    =    (byte)    (b3    <<    6    |    b4);	[BUG]    [BUGGY]    decodedData[encodedIndex    +    2]    =    (byte)    (b3    >>>    6    |    b4);    [FE]    junit.framework.ComparisonFailure:    expected:<Th[e    quick    brown    fox    jumped    over    the    lazy    dogs].>    but    was:<Th[%    q5ic+    b2ow.    f/x    *um0ed    ov%r    4he    la:y    $og3].>    testKnownDecodings    [CONTEXT]    b1    =    base64Alphabet[base64Data[dataIndex]];    b2    =    base64Alphabet[base64Data[dataIndex    +    1]];    if    (marker0    !=    PAD    &&    marker1    !=    PAD)    {        b3    =    base64Alphabet[marker0];    b4    =    base64Alphabet[marker1];    decodedData[encodedIndex]    =    (byte)    (b1    <<    2    |    b2    >>    4);    decodedData[encodedIndex    +    1]    =    (byte)    (((b2    &    0xf)    <<    4)    |    ((b3    >>    2)    &    0xf));    [BUGGY]    decodedData[encodedIndex    +    2]    =    (byte)    (b3    >>>    6    |    b4);    [BUGGY]    }    else    if    (marker0    ==    PAD)    {        decodedData[encodedIndex]    =    (byte)    (b1    <<    2    |    b2    >>    4);    }    else    if    (marker1    ==    PAD)    {        b3    =    base64Alphabet[marker0];    decodedData[encodedIndex]    =    (byte)    (b1    <<    2    |    b2    >>    4);    decodedData[encodedIndex    +    1]    =    (byte)    (((b2    &    0xf)    <<    4)    |    ((b3    >>    2)    &    0xf));    }    [CLASS]        Base64    [METHOD]    decodeBase64    [RETURN_TYPE]    byte[]        byte[]    base64Data    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    base64Data    binaryData    decodedData    encodedData    lookUpBase64Alphabet    pArray    boolean    byte    PAD    b1    b2    b3    b4    k    l    marker0    marker1    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    lastData    length    nextSeparatorIndex    numberQuadruple        	codec_691_Base64_1_1	436	1	src/java/org/apache/commons/codec/binary/Base64.java
348	[PATCH]    _mainHash[ix]    =    (hash    <<    8);	[BUG]    [BUGGY]    _mainHash[ix]    =    (hash    >>>    8);    [FE]    java.lang.ArrayIndexOutOfBoundsException:    90    testLargeUnquoted    [CONTEXT]    Bucket[]    oldBuckets    =    _collList;    _collList    =    new    Bucket[oldBuckets.length];    for    (int    i    =    0;    i    <    oldEnd;    ++i)    {    for    (Bucket    curr    =    oldBuckets[i];    curr    !=    null;    curr    =    curr._next)    {    ++symbolsSeen;    Name    symbol    =    curr._name;    int    hash    =    symbol.hashCode();    int    ix    =    (hash    &    _mainHashMask);    int    val    =    _mainHash[ix];    if    (_mainNames[ix]    ==    null)    {        [BUGGY]    _mainHash[ix]    =    (hash    >>>    8);    [BUGGY]    _mainNames[ix]    =    symbol;    }    else    {    ++_collCount;    int    bucket    =    val    &    0xFF;    if    (bucket    ==    0)    {    if    (_collEnd    <=    LAST_VALID_BUCKET)    {    bucket    =    _collEnd;    ++_collEnd;        if    (bucket    >=    _collList.length)    {    [CLASS]        BytesToNameCanonicalizer    TableInfo    Bucket    [METHOD]    rehash    [RETURN_TYPE]    void        [VARIABLES]    boolean    _collListShared    _intern    _mainHashShared    _mainNamesShared    _needRehash    canonicalize    intern    Bucket[]    _collList    collList    oldBuckets    Bucket    _next    bucket    curr    newB    next    BytesToNameCanonicalizer    _parent    parent    src    AtomicReference    _tableInfo    int[]    _mainHash    mainHash    oldMainHash    quads    result    int    DEFAULT_TABLE_SIZE    INITIAL_COLLISION_LEN    LAST_VALID_BUCKET    MAX_COLL_CHAIN_FOR_REUSE    MAX_COLL_CHAIN_LENGTH    MAX_ENTRIES_FOR_REUSE    MAX_TABLE_SIZE    MIN_HASH_SIZE    MULT    MULT2    MULT3    _collCount    _collEnd    _count    _hashSeed    _length    _longestCollisionList    _mainHashMask    blen    bucket    childCount    collCount    collEnd    count    curr    entryValue    firstQuad    hash    hashQuarter    hashSeed    hashSize    i    ix    len    longestCollisionList    mainHashMask    maxColl    newLen    oldEnd    q1    q2    qlen    secondQuad    seed    symbolsSeen    val    x    Name[]    _mainNames    mainNames    oldNames    Name    _name    name    symbol        	jacksoncore_1806_BytesToNameCanonicalizer_1_1	931	1	src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java
349	[PATCH]    int    b24    =    ((int)    readBuffer[inputPtr++])    <<    16;	[BUG]    [BUGGY]    int    b24    =    ((int)readBuffer[inputPtr++])    >>    16;    [FE]    junit.framework.ComparisonFailure:    expected:<...bmUgd3JhcCBvciB0d28u[Li]4=   "]>    but    was:<...bmUgd3JhcCBvciB0d28u[AC]4=   "]>    testStreamingWrites    [CONTEXT]    _outputBuffer[_outputTail++]    =    'n';    chunksBeforeLF    =    b64variant.getMaxLineLength()    >>    2;    }    }        if    (inputPtr    <    inputEnd)    {    if    (_outputTail    >    safeOutputEnd)    {    _flushBuffer();    }    [BUGGY]    int    b24    =    ((int)readBuffer[inputPtr++])    >>    16;    [BUGGY]    int    amount    =    1;    if    (inputPtr    <    inputEnd)    {    b24    |=    (((int)    readBuffer[inputPtr])    &    0xFF)    <<    8;    amount    =    2;    }    bytesDone    +=    amount;    _outputTail    =    b64variant.encodeBase64Partial(b24,    amount,    _outputBuffer,    _outputTail);    }    return    bytesDone;    }    [CLASS]        WriterBasedJsonGenerator    [METHOD]    _writeBinary    [RETURN_TYPE]    int        Base64Variant    b64variant    InputStream    data    byte[]    readBuffer    [VARIABLES]    byte[]    readBuffer    SerializableString    _currentEscape    name    sstr    text    boolean    InputStream    data    Base64Variant    b64variant    int    SHORT_WRITE    _outputEnd    _outputHead    _outputTail    amount    b24    bytes    bytesDone    bytesLeft    chunksBeforeLF    dataLength    end    escCode    escLen    escLimit    features    flushLen    i    inputEnd    inputLeft    inputPtr    lastFullOffset    len    length    max    maxNonEscaped    missing    newAmount    offset    ptr    qlen    room    safeInputEnd    safeOutputEnd    segmentLen    start    status    textLen    Writer    _writer    w    char[]    HEX_CHARS    _entityBuffer    _outputBuffer    buf    quoted    text        	jacksoncore_15991_WriterBasedJsonGenerator_1_1	1593	1	src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java
350	[PATCH]    int    b24    =    ((int)    readBuffer[inputPtr++])    <<    16;	[BUG]    [BUGGY]    int    b24    =    ((int)readBuffer[inputPtr++])    >>>    16;    [FE]    junit.framework.ComparisonFailure:    expected:<...bmUgd3JhcCBvciB0d28u[Li]4=   "]>    but    was:<...bmUgd3JhcCBvciB0d28u[AC]4=   "]>    testStreamingWrites    [CONTEXT]    }        if    (bytesLeft    >    0)    {    inputEnd    =    _readMore(data,    readBuffer,    inputPtr,    inputEnd,    bytesLeft);    inputPtr    =    0;    if    (inputEnd    >    0)    {    if    (_outputTail    >    safeOutputEnd)    {    _flushBuffer();    }    [BUGGY]    int    b24    =    ((int)readBuffer[inputPtr++])    >>>    16;    [BUGGY]    int    amount;    if    (inputPtr    <    inputEnd)    {    b24    |=    (((int)    readBuffer[inputPtr])    &    0xFF)    <<    8;    amount    =    2;    }    else    {    amount    =    1;    }    _outputTail    =    b64variant.encodeBase64Partial(b24,    amount,    _outputBuffer,    _outputTail);    bytesLeft    -=    amount;    }    [CLASS]        WriterBasedJsonGenerator    [METHOD]    _writeBinary    [RETURN_TYPE]    int        Base64Variant    b64variant    InputStream    data    byte[]    readBuffer    int    bytesLeft    [VARIABLES]    byte[]    readBuffer    SerializableString    _currentEscape    name    sstr    text    boolean    InputStream    data    Base64Variant    b64variant    int    SHORT_WRITE    _outputEnd    _outputHead    _outputTail    amount    b24    bytes    bytesLeft    chunksBeforeLF    dataLength    end    escCode    escLen    escLimit    features    flushLen    i    inputEnd    inputLeft    inputPtr    lastFullOffset    len    length    max    maxNonEscaped    missing    newAmount    offset    ptr    qlen    room    safeInputEnd    safeOutputEnd    segmentLen    start    status    textLen    Writer    _writer    w    char[]    HEX_CHARS    _entityBuffer    _outputBuffer    buf    quoted    text        	jacksoncore_15886_WriterBasedJsonGenerator_1_1	1533	1	src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java
351	[PATCH]    h    ^=        h    >>>    10;	[BUG]    [BUGGY]    h    ^=    h    <<    10;    [FE]    junit.framework.AssertionFailedError:    expected:<2A>    but    was:<null>    testMultiKeyGet    [CONTEXT]    int    h    =    0;    if    (key1    !=    null)    {    h    ^=    key1.hashCode();    }    if    (key2    !=    null)    {    h    ^=    key2.hashCode();    }    h    +=    ~(h    <<    9);    h    ^=h    >>>    14;    h    +=h    <<    4;    [BUGGY]    h    ^=h    <<    10;    [BUGGY]    return    h;    }    [CLASS]        MultiKeyMap    [METHOD]    hash    [RETURN_TYPE]    int        Object    key1    Object    key2    [VARIABLES]    Object    key1    key2    boolean    long    serialVersionUID    int    h        	collections_8112_MultiKeyMap_1_1	234	1	src/main/java/org/apache/commons/collections4/map/MultiKeyMap.java
352	[PATCH]    result[value.ordinal()    /    Long.SIZE]    |=    1    <<    (value.ordinal()    %    Long.SIZE);	[BUG]    [BUGGY]    result[value.ordinal()    /    Long.SIZE]    |=    1    >>>    (value.ordinal()    %    Long.SIZE);    [FE]    junit.framework.AssertionFailedError:    arrays    first    differed    at    element    [0];    expected:<2>    but    was:<0>    test_generateBitVectors    [CONTEXT]    public    static    <E    extends    Enum<E>>    long[]    generateBitVectors(final    Class<E>    enumClass,    final    Iterable<E>    values)    {    asEnum(enumClass);    Validate.notNull(values);    final    EnumSet<E>    condensed    =    EnumSet.noneOf(enumClass);    for    (final    E    constant    :    values)    {    Validate.isTrue(constant    !=    null,    NULL_ELEMENTS_NOT_PERMITTED);    condensed.add(constant);    }    final    long[]    result    =    new    long[(enumClass.getEnumConstants().length    -    1)    /    Long.SIZE    +    1];    for    (final    E    value    :    condensed)    {    [BUGGY]    result[value.ordinal()    /    Long.SIZE]    |=    1    >>>    (value.ordinal()    %    Long.SIZE);    [BUGGY]    }    ArrayUtils.reverse(result);    return    result;    }    [CLASS]        EnumUtils    [METHOD]    generateBitVectors    [RETURN_TYPE]    <E        Class<E>    enumClass    Iterable<E>    values    [VARIABLES]    boolean    Iterable    values    E    constant    value    long[]    result    EnumSet    condensed    Class    enumClass    String    CANNOT_STORE_S_S_VALUES_IN_S_BITS    ENUM_CLASS_MUST_BE_DEFINED    NULL_ELEMENTS_NOT_PERMITTED    S_DOES_NOT_SEEM_TO_BE_AN_ENUM_TYPE    enumName        	lang_7824_EnumUtils_1_1	179	1	src/main/java/org/apache/commons/lang3/EnumUtils.java
353	[PATCH]    b24    =    (b24    <<    8)    |    (((int)    readBuffer[inputPtr++])    &    0xFF);	[BUG]    [BUGGY]    b24    =    (b24    >>>    8)    |    (((int)    readBuffer[inputPtr++])    &    0xFF);    [FE]    junit.framework.ComparisonFailure:    expected:<[   "[U29tZSBjb250ZW50IHNvIHRoYXQgd2UgY2FuIHRlc3QgZW5jb2Rpbmcgb2YgYmFzZTY0IGRhdGE7\nIG11c3QgYmUgbG9uZyBlbm91Z2ggaW5jbHVkZSBhIGxpbmUgd3JhcCBvciB0d28uLi5Tb21lIGNv\nbnRlbnQgc28gdGhhdCB3ZSBjYW4gdGVzdCBlbmNvZGluZyBvZiBiYXNlNjQgZGF0YTsgbXVzdCBi\nZSBsb25nIGVub3VnaCBpbmNsdWRlIGEgbGluZSB3cmFwIG9yIHR3by4uLlNvbWUgY29udGVudCBz\nbyB0aGF0IHdlIGNhbiB0ZXN0IGVuY29kaW5nIG9mIGJhc2U2NCBkYXRhOyBtdXN0IGJlIGxvbmcg\nZW5vdWdoIGluY2x1ZGUgYSBsaW5lIHdyYXAgb3IgdHdvLi4uU29tZSBjb250ZW50IHNvIHRoYXQg\nd2UgY2FuIHRlc3QgZW5jb2Rpbmcgb2YgYmFzZTY0IGRhdGE7IG11c3QgYmUgbG9uZyBlbm91Z2gg\naW5jbHVkZSBhIGxpbmUgd3JhcCBvciB0d28u]Li4=   "]>    but    was:<[   "[AAB/AABnAAB/AAB1AABvAABoAABhAAB3AABvAABlAABzAABnAABvAABuAABvAABzAAB1AABhAAB/\nAAB1AABzAABiAABuAABnAAB/AABnAABrAABsAABlAABpAABuAAB3AAB/AAB2AAB/AAB/AABvAABv\nAABvAABuAABzAAB1AAB3AABnAABhAAB3AAB1AABvAABuAABvAABmAABlAAA2AAB0AABhAAB/AAB2\nAABtAABvAABuAABvAABpAABuAAB1AAAgAABuAAB3AAByAAByAAB3AABvAABvAABtAABvAAB+AAB3\nAAB/AAB8AABlAABhAAB+AAB1AABuAABnAABvAABmAABhAAB3AAB0AABhAAB/AAB1AABlAABvAABu\nAABvAAB9AABuAAB3AABkAABtAABtAAByAABhAABvAAB/AAAuAAB/AABnAAB/AAB1AABvAABoAABh\nAAB3AABvAABlAABzAABnAABvAABuAABvAABzAAB1AABhAAB/AAB1AABzAABiAABuAABnAAB/AABn\nAABrAABsAABlAABpAABuAAB3AAB/AAB2AAB/]Li4=   "]>    testStreamingWrites    [CONTEXT]    if    (inputEnd    <    3)    {    break;    }    lastFullOffset    =    inputEnd-3;    }    if    (_outputTail    >    safeOutputEnd)    {    _flushBuffer();    }    int    b24    =    ((int)    readBuffer[inputPtr++])    <<    8;    b24    |=    ((int)    readBuffer[inputPtr++])    &    0xFF;    [BUGGY]    b24    =    (b24    >>>    8)    |    (((int)    readBuffer[inputPtr++])    &    0xFF);    [BUGGY]    bytesLeft    -=    3;    _outputTail    =    b64variant.encodeBase64Chunk(b24,    _outputBuffer,    _outputTail);    if    (--chunksBeforeLF    <=    0)    {    _outputBuffer[_outputTail++]    =    '\\';    _outputBuffer[_outputTail++]    =    'n';    chunksBeforeLF    =    b64variant.getMaxLineLength()    >>    2;    }    }            [CLASS]        WriterBasedJsonGenerator    [METHOD]    _writeBinary    [RETURN_TYPE]    int        Base64Variant    b64variant    InputStream    data    byte[]    readBuffer    int    bytesLeft    [VARIABLES]    byte[]    readBuffer    SerializableString    _currentEscape    name    sstr    text    boolean    InputStream    data    Base64Variant    b64variant    int    SHORT_WRITE    _outputEnd    _outputHead    _outputTail    amount    b24    bytes    bytesLeft    chunksBeforeLF    dataLength    end    escCode    escLen    escLimit    features    flushLen    i    inputEnd    inputLeft    inputPtr    lastFullOffset    len    length    max    maxNonEscaped    missing    newAmount    offset    ptr    qlen    room    safeInputEnd    safeOutputEnd    segmentLen    start    status    textLen    Writer    _writer    w    char[]    HEX_CHARS    _entityBuffer    _outputBuffer    buf    quoted    text        	jacksoncore_15841_WriterBasedJsonGenerator_1_1	1515	1	src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java
354	[PATCH]    int    b24    =    ((int)    readBuffer[inputPtr++])    <<    16;	[BUG]    [BUGGY]    int    b24    =    ((int)readBuffer[inputPtr++])    >>    16;    [FE]    junit.framework.ComparisonFailure:    expected:<...bmUgd3JhcCBvciB0d28u[Li]4=   "]>    but    was:<...bmUgd3JhcCBvciB0d28u[AC]4=   "]>    testStreamingWrites    [CONTEXT]    }        if    (bytesLeft    >    0)    {    inputEnd    =    _readMore(data,    readBuffer,    inputPtr,    inputEnd,    bytesLeft);    inputPtr    =    0;    if    (inputEnd    >    0)    {    if    (_outputTail    >    safeOutputEnd)    {    _flushBuffer();    }    [BUGGY]    int    b24    =    ((int)readBuffer[inputPtr++])    >>    16;    [BUGGY]    int    amount;    if    (inputPtr    <    inputEnd)    {    b24    |=    (((int)    readBuffer[inputPtr])    &    0xFF)    <<    8;    amount    =    2;    }    else    {    amount    =    1;    }    _outputTail    =    b64variant.encodeBase64Partial(b24,    amount,    _outputBuffer,    _outputTail);    bytesLeft    -=    amount;    }    [CLASS]        UTF8JsonGenerator    [METHOD]    _writeBinary    [RETURN_TYPE]    int        Base64Variant    b64variant    InputStream    data    byte[]    readBuffer    int    bytesLeft    [VARIABLES]    byte[]    FALSE_BYTES    HEX_CHARS    NULL_BYTES    TRUE_BYTES    _entityBuffer    _outputBuffer    bbuf    buf    bytes    data    encodingBuffer    input    keyword    outputBuffer    raw    readBuffer    text    utf8    boolean    _bufferRecyclable    addQuotes    bufferRecyclable    commaBefore    state    byte    BYTE_0    BYTE_BACKSLASH    BYTE_COLON    BYTE_COMMA    BYTE_LBRACKET    BYTE_LCURLY    BYTE_QUOTE    BYTE_RBRACKET    BYTE_RCURLY    BYTE_u    b    InputStream    data    OutputStream    _outputStream    out    Base64Variant    b64variant    int    MAX_BYTES_TO_BUFFER    SURR1_FIRST    SURR1_LAST    SURR2_FIRST    SURR2_LAST    _charBufferLength    _outputEnd    _outputMaxContiguous    _outputTail    amount    b24    blen    bytes    bytesLeft    ch    chunksBeforeLF    dataLength    end    escape    features    i    inputEnd    inputLeft    inputPtr    lastFullOffset    left    len    len2    len3    length    maxUnescaped    missing    offset    outputEnd    outputOffset    outputPtr    ptr    remainingChars    safeInputEnd    safeOutputEnd    start    status    totalLen    char[]    _charBuffer    buf    cbuf    text        	jacksoncore_10570_UTF8JsonGenerator_1_1	1625	1	src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java
355	[PATCH]    final    int    z2    =    (vM2    >>>    9)    ^    (vM3    ^    (vM3    >>>    1));	[BUG]    [BUGGY]    final    int    z2    =    (vM2    >>>    9)    ^    (vM3    ^    (vM3    <<    1));    [FE]    junit.framework.AssertionFailedError:    expected:<-1842.0971568466603>    but    was:<-1580.5656757517168>    testInterpolation2    [CONTEXT]    final    int    indexRm1    =    iRm1[index];    final    int    indexRm2    =    iRm2[index];    final    int    v0    =    v[index];    final    int    vM1=    v[i1[index]];    final    int    vM2=    v[i2[index]];    final    int    vM3=    v[i3[index]];    final    int    z0    =    (0x80000000    &    v[indexRm1])    ^    (0x7FFFFFFF    &    v[indexRm2]);    final    int    z1    =    (v0    ^    (v0    <<    25))^    (vM1    ^    (vM1    >>>    27));    [BUGGY]    final    int    z2    =    (vM2    >>>    9)    ^    (vM3    ^    (vM3    <<    1));    [BUGGY]    final    int    z3    =    z1^    z2;    int    z4    =    z0    ^    (z1    ^    (z1    <<    9))    ^    (z2    ^    (z2    <<    21))    ^    (z3    ^    (z3    >>>    21));    v[index]    =    z3;    v[indexRm1]=    z4;    v[indexRm2]    &=    0x80000000;    index=    indexRm1;            [CLASS]        Well19937c    [METHOD]    next    [RETURN_TYPE]    int        final    int    bits    [VARIABLES]    long    seed    serialVersionUID    int    K    M1    M2    M3    bits    indexRm1    indexRm2    seed    v0    vM1    vM2    vM3    z0    z1    z2    z3    z4    boolean        	math_94185_Well19937c_1_1	96	1	src/main/java/org/apache/commons/math3/random/Well19937c.java
356	[PATCH]    decodedData[encodedIndex    +    2]    =    (byte)    (b3    <<    6    |    b4);	[BUG]    [BUGGY]    decodedData[encodedIndex    +    2]    =    (byte)    (b3    >>    6    |    b4);    [FE]    junit.framework.ComparisonFailure:    expected:<Th[e    quick    brown    fox    jumped    over    the    lazy    dogs].>    but    was:<Th[%    q5ic+    b2ow.    f/x    *um0ed    ov%r    4he    la:y    $og3].>    testKnownDecodings    [CONTEXT]    b1    =    base64Alphabet[base64Data[dataIndex]];    b2    =    base64Alphabet[base64Data[dataIndex    +    1]];    if    (marker0    !=    PAD    &&    marker1    !=    PAD)    {        b3    =    base64Alphabet[marker0];    b4    =    base64Alphabet[marker1];    decodedData[encodedIndex]    =    (byte)    (b1    <<    2    |    b2    >>    4);    decodedData[encodedIndex    +    1]    =    (byte)    (((b2    &    0xf)    <<    4)    |    ((b3    >>    2)    &    0xf));    [BUGGY]    decodedData[encodedIndex    +    2]    =    (byte)    (b3    >>    6    |    b4);    [BUGGY]    }    else    if    (marker0    ==    PAD)    {        decodedData[encodedIndex]    =    (byte)    (b1    <<    2    |    b2    >>    4);    }    else    if    (marker1    ==    PAD)    {        b3    =    base64Alphabet[marker0];    decodedData[encodedIndex]    =    (byte)    (b1    <<    2    |    b2    >>    4);    decodedData[encodedIndex    +    1]    =    (byte)    (((b2    &    0xf)    <<    4)    |    ((b3    >>    2)    &    0xf));    }    [CLASS]        Base64    [METHOD]    decodeBase64    [RETURN_TYPE]    byte[]        byte[]    base64Data    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    base64Data    binaryData    decodedData    encodedData    lookUpBase64Alphabet    pArray    boolean    byte    PAD    b1    b2    b3    b4    k    l    marker0    marker1    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    lastData    length    nextSeparatorIndex    numberQuadruple        	codec_690_Base64_1_1	436	1	src/java/org/apache/commons/codec/binary/Base64.java
357	[PATCH]    int    exponent    =    (int)    ((inbits    >>    52)    &    0x7ff)    -    1023;	[BUG]    [BUGGY]    int    exponent    =    (int)    ((inbits    <<    52)    &    0x7ff)    -    1023;    [FE]    junit.framework.AssertionFailedError:    double    cbrt(-1.7976931348623157E308)    expected    -5.643803094122362E102    actual    -Infinity    entries    [6]    test1[34]    [CONTEXT]    public    static    double    cbrt(double    x)    {        long    inbits    =    Double.doubleToRawLongBits(x);    [BUGGY]    int    exponent    =    (int)    ((inbits    <<    52)    &    0x7ff)    -    1023;    [BUGGY]    boolean    subnormal    =    false;    if    (exponent    ==    -1023)    {    if    (x    ==    0)    {    return    x;    }        subnormal    =    true;    x    *=    1.8014398509481984E16;    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    cbrt    [RETURN_TYPE]    double        double    x    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    bita    bitb    bitsum    cotanFlag    leftPlane    negate    negative    subnormal    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    hiPrecOut    lnCoef_i    lnCoef_last    lnm    lns    reduceResults    result    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    a2    aa    ab    absAsinh    absAtanh    b    base    baseA    baseB    c    cD2pH    cRH    cTmpH    cd    cosEpsA    cosEpsB    cosa    cosaa    cosab    cosb    costA    costB    d    d1High    d1Low    d2p    d2pHH    d2pHL    d2pHigh    d2pLow    da    daa    dab    db    denom    denomb    denomr    dx    epsA    epsA2    epsB    epsilon    err    est    esta    estb    extra    finalRemA    finalRemB    fracPartA    fracPartB    fx1    intPartA    intPartB    invx    invy    lna    lnb    lnza    lnzb    lores    mant    na    nb    numer    oneOverXa    p    p2    pi2a    pi2b    pia    pib    r    rHH    rHL    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    resultHigh    resultLow    resultb    rln10a    rln10b    sinEpsA    sinEpsB    sina    sinb    sintA    sintB    sumA    sumB    t    temp    temp2    tempA    tempB    tempC    tmp    tmp1    tmp2    tmpA    tmpB    tmpHigh    tmpLow    x    x2    xa    xb    xbadj    xpa    xpb    xs    y    ya    yaa    yab    yb    z    za    zaa    zab    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    e    exp    exp3    exponent    finalK    i    idx    intFrac    intPart    intVal    k    quadrant    shift    splitFactor    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    a    ac    ad    b    bc    bd    bits    c    d    inbits    prod2A    prod2B    prodA    prodB    shpi0    shpiA    shpiB    xl    yi        	math_117598_FastMath_1_1	2862	1	src/main/java/org/apache/commons/math3/util/FastMath.java
358	[PATCH]    int    zvec    =    (bsBuffShadow    >>    (bsLiveShadow    -    zn))	[BUG]    [BUGGY]    int    zvec    =    (bsBuffShadow    <<    (bsLiveShadow    -    zn))    [FE]    org.apache.commons.compress.compressors.CompressorException:    Could    not    create    CompressorInputStream    testBzip2Unarchive    [CONTEXT]    while    (bsLiveShadow    <    zn)    {    final    int    thech    =    inShadow.read();    if    (thech    >=    0)    {    bsBuffShadow    =    (bsBuffShadow    <<    8)    |    thech;    bsLiveShadow    +=    8;    continue;    }    else    {    throw    new    IOException(   "unexpected    end    of    stream   ");    }    }    [BUGGY]    int    zvec    =    (bsBuffShadow    <<    (bsLiveShadow    -    zn))    [BUGGY]    &    ((1    <<    zn)    -    1);    bsLiveShadow    -=    zn;    while    (zvec    >    limit_zt[zn])    {    zn++;    while    (bsLiveShadow    <    1)    {    final    int    thech    =    inShadow.read();    if    (thech    >=    0)    {    bsBuffShadow    =    (bsBuffShadow    <<    8)    |    thech;    bsLiveShadow    +=    8;    [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    getAndMoveToFrontDecode    [RETURN_TYPE]    void        [VARIABLES]    int[][]    base    limit    perm    InputStream    in    inShadow    byte    ch    char[][]    len    temp_charArray2d    Data    data    dataShadow    int[]    base    base_zt    cftab    limit    limit_zt    minLens    perm    perm_zt    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    alphaSize    b    blockSize    blockSize100k    bsBuff    bsBuffShadow    bsLive    bsLiveShadow    computedBlockCRC    computedCombinedCRC    curr    currentChar    currentState    destOffs    eob    groupNo    groupPos    hi    i    i16    inUse16    j    last    lastShadow    len    limitLast    magic    maxLen    minLen    minLens_zt    n    nGroups    nInUse    nInUseShadow    nSelectors    nb    nextSym    offs    origPtr    pp    retChar    s    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    t    thech    v    vec    zn    zt    zvec    char[]    getAndMoveToFrontDecode_yy    len_t    length    yy    byte[]    dest    ll8    pos    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    expected    lent    magic0    magic1    magic2    magic3    magic4    magic5    su_z    tmp    boolean[]    inUse        	compress_5858_BZip2CompressorInputStream_1_1	616	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
359	[PATCH]    buffer[outputPtr++]    =    (byte)    (decodedData    >>    8);	[BUG]    [BUGGY]    buffer[outputPtr++]    =    (byte)    (decodedData    <<    8);    [FE]    arrays    first    differed    at    element    [3];    expected:<3>    but    was:<0>    testStreaming    [CONTEXT]    bits    =    _decodeBase64Escape(b64variant,    ch,    3);    }    if    (bits    ==    Base64Variant.BASE64_VALUE_PADDING)    {                            decodedData    >>=    2;    [BUGGY]    buffer[outputPtr++]    =    (byte)    (decodedData    <<    8);    [BUGGY]    buffer[outputPtr++]    =    (byte)    decodedData;    continue;    }    }        decodedData    =    (decodedData    <<    6)    |    bits;    buffer[outputPtr++]    =    (byte)    (decodedData    >>    16);    buffer[outputPtr++]    =    (byte)    (decodedData    >>    8);    buffer[outputPtr++]    =    (byte)    decodedData;    }    [CLASS]        UTF8StreamJsonParser    [METHOD]    _readBinary    [RETURN_TYPE]    int        Base64Variant    b64variant    OutputStream    out    byte[]    buffer    [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    inputBuffer    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    OutputStream    out    Base64Variant    b64variant    int[]    _quadBuffer    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    ch    count    decodedData    end    features    minAvailable    nameLen    origPtr    outputCount    outputEnd    outputPtr    start        	jacksoncore_11378_UTF8StreamJsonParser_1_1	574	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
360	[PATCH]    double    tmpA    =    (prod2A    >>>    12)    /    TWO_POWER_52;        //    High    order    52    bits	[BUG]    [BUGGY]    double    tmpA    =    (prod2A    >>    12)    /    TWO_POWER_52;    //    High    order    52    bits    [FE]    java.lang.ArrayIndexOutOfBoundsException:    19    testDerivativeShortcut    [CONTEXT]    bitb    =    (ac    &    0x8000000000000000L    )    !=    0;    prod2B    +=    ac;    bitsum    =    (prod2B    &    0x8000000000000000L)    !=    0;        if    (    (bita    &&    bitb)    ||    ((bita    ||    bitb)    &&    !bitsum)    )    {    prod2A++;    }            [BUGGY]    double    tmpA    =    (prod2A    >>    12)    /    TWO_POWER_52;    [BUGGY]    double    tmpB    =    (((prod2A    &    0xfffL)    <<    40)    +    (prod2B    >>>    24))    /    TWO_POWER_52    /    TWO_POWER_52;        double    sumA    =    tmpA    +    tmpB;    double    sumB    =    -(sumA    -    tmpA    -    tmpB);        result[0]    =    intPart;    result[1]    =    sumA    *    2.0;    result[2]    =    sumB    *    2.0;    }    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    reducePayneHanek    [RETURN_TYPE]    void        double    x    double[]    result    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    bita    bitb    bitsum    cotanFlag    negate    negative    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    hiPrecOut    lnCoef_i    lnCoef_last    lnm    lns    result    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    a2    aa    ab    absAsinh    absAtanh    b    base    baseA    baseB    c    cD2pH    cRH    cTmpH    cd    cosEpsA    cosEpsB    cosa    cosaa    cosab    cosb    costA    costB    d    d1High    d1Low    d2p    d2pHH    d2pHL    d2pHigh    d2pLow    da    daa    dab    db    denom    denomb    denomr    epsilon    err    est    esta    estb    extra    finalRemA    finalRemB    fracPartA    fracPartB    fx1    intPartA    intPartB    lna    lnb    lnza    lnzb    lores    na    nb    numer    p    pi2a    pi2b    rHH    rHL    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    resultHigh    resultLow    rln10a    rln10b    sinEpsA    sinEpsB    sina    sinb    sintA    sintB    sumA    sumB    t    temp    temp2    tempA    tempB    tempC    tmp    tmp1    tmp2    tmpA    tmpB    tmpHigh    tmpLow    x    x2    xa    xb    xbadj    xpa    xpb    y    ya    yaa    yab    yb    z    za    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    e    exp    exponent    finalK    i    idx    intFrac    intPart    intVal    k    shift    splitFactor    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    a    ac    ad    b    bc    bd    bits    c    d    inbits    prod2A    prod2B    prodA    prodB    shpi0    shpiA    shpiB    xl    yi        	math_115827_FastMath_1_1	2209	1	src/main/java/org/apache/commons/math3/util/FastMath.java
361	[PATCH]    h    +=    ~(h    <<    9);	[BUG]    [BUGGY]    h    +=    ~(h    >>    9);    [FE]    junit.framework.AssertionFailedError:    expected:<true>    but    was:<false>    testMultiKeyContainsKey    [CONTEXT]    }    if    (key2    !=    null)    {    h    ^=    key2.hashCode();    }    if    (key3    !=    null)    {    h    ^=    key3.hashCode();    }    if    (key4    !=    null)    {    h    ^=    key4.hashCode();    }    [BUGGY]    h    +=    ~(h    >>    9);    [BUGGY]    h    ^=h    >>>    14;    h    +=h    <<    4;    h    ^=h    >>>    10;    return    h;    }    [CLASS]        MultiKeyMap    [METHOD]    hash    [RETURN_TYPE]    int        Object    key1    Object    key2    Object    key3    Object    key4    [VARIABLES]    Object    key1    key2    key3    key4    boolean    long    serialVersionUID    int    h        	collections_8343_MultiKeyMap_1_1	515	1	src/main/java/org/apache/commons/collections4/map/MultiKeyMap.java
362	[PATCH]    a    +=    (str[i    +    3]    &    0xff)    <<    24;	[BUG]    [BUGGY]    a    +=    (str[i    +    3]    &    255)    >>    24;    [FE]    junit.framework.AssertionFailedError:    testReplaceTwoPlaceholdersNonAlphaOrder    [CONTEXT]        case    8:    b    +=    (str[i    +    7]    &    0xff)    <<    24;    case    7:    b    +=    (str[i    +    6]    &    0xff)    <<    16;    case    6:    b    +=    (str[i    +    5]    &    0xff)    <<    8;    case    5:    b    +=    (str[i    +    4]    &    0xff);    case    4:    [BUGGY]    a    +=    (str[i    +    3]    &    255)    >>    24;    [BUGGY]    case    3:    a    +=    (str[i    +    2]    &    0xff)    <<    16;    case    2:    a    +=    (str[i    +    1]    &    0xff)    <<    8;    case    1:    a    +=    (str[i    +    0]    &    0xff);        }            [CLASS]        GoogleJsMessageIdGenerator    FP    MessageId    [METHOD]    hash32    [RETURN_TYPE]    int        byte[]    str    int    start    int    limit    int    c    [VARIABLES]    byte[]    str    String    meaning    projectId    projectScopedMeaning    str    tcValue    boolean    int    a    b    c    i    limit    start        	closure_31012_GoogleJsMessageIdGenerator_1_1	174	1	src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java
363	[PATCH]    zvec    =    (zvec    <<    1)    |    ((bsBuffShadow    >>    bsLiveShadow)    &    1);	[BUG]    [BUGGY]    zvec    =    (zvec    >>>    1)    |    ((bsBuffShadow    >>    bsLiveShadow)    &    1);    [FE]    java.io.IOException:    BZip2    CRC    error    testBzip2Unarchive    [CONTEXT]    if    (thech    >=    0)    {    bsBuffShadow    =    (bsBuffShadow    <<    8)    |    thech;    bsLiveShadow    +=    8;    continue;    }    else    {    throw    new    IOException(   "unexpected    end    of    stream   ");    }    }    bsLiveShadow--;    [BUGGY]    zvec    =    (zvec    >>>    1)    |    ((bsBuffShadow    >>    bsLiveShadow)    &    1);    [BUGGY]    }    this.bsLive    =    bsLiveShadow;    this.bsBuff    =    bsBuffShadow;    return    dataShadow.perm[zt][zvec    -    dataShadow.base[zt][zn]];    }    [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    getAndMoveToFrontDecode0    [RETURN_TYPE]    int        final    int    groupNo    [VARIABLES]    int[][]    base    limit    perm    InputStream    in    inShadow    char[][]    len    temp_charArray2d    Data    data    dataShadow    int[]    base    base_zt    cftab    limit    limit_zt    minLens    perm    perm_zt    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    alphaSize    b    blockSize    blockSize100k    bsBuff    bsBuffShadow    bsLive    bsLiveShadow    computedBlockCRC    computedCombinedCRC    curr    currentChar    currentState    destOffs    eob    groupNo    groupPos    hi    i    i16    inUse16    j    last    lastShadow    len    limitLast    magic    maxLen    minLen    minLens_zt    n    nGroups    nInUse    nInUseShadow    nSelectors    nb    nextSym    offs    origPtr    pp    retChar    s    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    t    thech    v    vec    zn    zt    zvec    char[]    getAndMoveToFrontDecode_yy    len_t    length    yy    byte[]    dest    ll8    pos    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    expected    lent    magic0    magic1    magic2    magic3    magic4    magic5    su_z    tmp    boolean[]    inUse        	compress_6121_BZip2CompressorInputStream_1_1	751	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
364	[PATCH]    leapYears    =    ((year    +    3)    >>    2)    -    leapYears    +    ((leapYears    +    3)    >>    2)    -    1;	[BUG]    [BUGGY]    leapYears    =    ((year    +    3)    >>    2)    -    leapYears    +    ((leapYears    +    3)    <<    2)    -    1;    [FE]    junit.framework.AssertionFailedError:    expected:<-292275054>    but    was:<292248987>    testPropertyAddWrapFieldYear    [CONTEXT]    long    calculateFirstDayOfYearMillis(int    year)    {        int    leapYears    =    year    /    100;    if    (year    <    0)    {                        [BUGGY]    leapYears    =    ((year    +    3)    >>    2)    -    leapYears    +    ((leapYears    +    3)    <<    2)    -    1;    [BUGGY]    }    else    {    leapYears    =    (year    >>    2)    -    leapYears    +    (leapYears    >>    2);    if    (isLeapYear(year))    {    leapYears--;    }    }    return    (year    *    365L    +    (leapYears    -    DAYS_0000_TO_1970))    *    DateTimeConstants.MILLIS_PER_DAY;    }    [CLASS]        GregorianChronology    [METHOD]    calculateFirstDayOfYearMillis    [RETURN_TYPE]    long        int    year    [VARIABLES]    boolean    Map    cCache    long    MILLIS_PER_MONTH    MILLIS_PER_YEAR    serialVersionUID    int    DAYS_0000_TO_1970    MAX_YEAR    MIN_YEAR    leapYears    minDays    minDaysInFirstWeek    year    GregorianChronology    INSTANCE_UTC    chrono        	time_10081_GregorianChronology_1_1	209	1	src/main/java/org/joda/time/chrono/GregorianChronology.java
365	[PATCH]    int    b24    =    ((int)    input[inputPtr++])    <<    8;	[BUG]    [BUGGY]    int    b24    =    ((int)input[inputPtr++])    >>>    8;    [FE]    junit.framework.ComparisonFailure:    expected:<[   "[AG9tACBjAG50AG50AHNvAHRoAHQgAGUgAGFuAHRlAHQgAG5jAGRpAGcgAGYgAGFzADY0AGRhAGE7\nAG11AHQgAGUgAG9uACBlAG91AGggAG5jAHVkACBhAGxpAGUgAHJhACBvACB0AG8uAC5TAG1lAGNv\nAHRlAHQgAG8gAGhhACB3ACBjAG4gAGVzACBlAGNvAGluACBvACBiAHNlADQgAGF0ADsgAHVzACBi\nACBsAG5nAGVuAHVnACBpAGNsAGRlAGEgAGluACB3AGFwAG9yAHR3AC4uAFNvAGUgAG9uAGVuACBz\nACB0AGF0AHdlAGNhACB0AHN0AGVuAG9kAG5nAG9mAGJhAGU2ACBkAHRhACBtAHN0AGJlAGxvAGcg\nAG5vAGdoAGluAGx1AGUgACBsAG5lAHdyAHAgAHIgAHdvAC4uAG9tACBjAG50AG50AHNvAHRoAHQg\nAGUgAGFuAHRlAHQgAG5jAGRpAGcgAGYgAGFzADY0AGRhAGE7AG11AHQgAGUgAG9uACBlAG91AGgg\nAG5jAHVkACBhAGxpAGUgAHJhACBvACB0AG]8uLi4=   "]>    but    was:<[   "[U29tZSBjb250ZW50IHNvIHRoYXQgd2UgY2FuIHRlc3QgZW5jb2Rpbmcgb2YgYmFzZTY0IGRhdGE7\nIG11c3QgYmUgbG9uZyBlbm91Z2ggaW5jbHVkZSBhIGxpbmUgd3JhcCBvciB0d28uLi5Tb21lIGNv\nbnRlbnQgc28gdGhhdCB3ZSBjYW4gdGVzdCBlbmNvZGluZyBvZiBiYXNlNjQgZGF0YTsgbXVzdCBi\nZSBsb25nIGVub3VnaCBpbmNsdWRlIGEgbGluZSB3cmFwIG9yIHR3by4uLlNvbWUgY29udGVudCBz\nbyB0aGF0IHdlIGNhbiB0ZXN0IGVuY29kaW5nIG9mIGJhc2U2NCBkYXRhOyBtdXN0IGJlIGxvbmcg\nZW5vdWdoIGluY2x1ZGUgYSBsaW5lIHdyYXAgb3IgdHdvLi4uU29tZSBjb250ZW50IHNvIHRoYXQg\nd2UgY2FuIHRlc3QgZW5jb2Rpbmcgb2YgYmFzZTY0IGRhdGE7IG11c3QgYmUgbG9uZyBlbm91Z2gg\naW5jbHVkZSBhIGxpbmUgd3JhcCBvciB0d2]8uLi4=   "]>    testStreamingWrites    [CONTEXT]    }    int    chunksBeforeLF    =    getMaxLineLength()    >>    2;        int    inputPtr    =    0;    int    safeInputEnd    =    inputEnd-3;        while    (inputPtr    <=    safeInputEnd)    {        [BUGGY]    int    b24    =    ((int)input[inputPtr++])    >>>    8;    [BUGGY]    b24    |=    ((int)    input[inputPtr++])    &    0xFF;    b24    =    (b24    <<    8)    |    (((int)    input[inputPtr++])    &    0xFF);    encodeBase64Chunk(sb,    b24);    if    (--chunksBeforeLF    <=    0)    {        sb.append('\\');    sb.append('n');    chunksBeforeLF    =    getMaxLineLength()    >>    2;    }    }    [CLASS]        Base64Variant    [METHOD]    encode    [RETURN_TYPE]    String        byte[]    input    boolean    addQuotes    [VARIABLES]    byte[]    _base64ToAsciiB    buffer    input    srcB    boolean    _usesPadding    addQuotes    usesPadding    StringBuilder    sb    char    PADDING_CHAR_NONE    _paddingChar    alpha    c    paddingChar    int[]    _asciiToBase64    srcV    String    _name    base64Alphabet    name    int    BASE64_VALUE_INVALID    BASE64_VALUE_PADDING    INT_SPACE    _maxLineLength    alphaLen    b24    bits    ch    chunksBeforeLF    i    inputEnd    inputLeft    inputPtr    maxLineLength    outPtr    outputBytes    outputLen    ptr    safeInputEnd    value    long    serialVersionUID    char[]    _base64ToAsciiC    buffer    srcC        	jacksoncore_345_Base64Variant_1_1	391	1	src/main/java/com/fasterxml/jackson/core/Base64Variant.java
366	[PATCH]    setExternalAttributes((mode    <<    SHORT_SHIFT)	[BUG]    [BUGGY]    setExternalAttributes((mode    >>    SHORT_SHIFT)    [FE]    junit.framework.AssertionFailedError:    expected:<493>    but    was:<0>    testUnixMode    [CONTEXT]    public    void    setUnixMode(int    mode)    {        [BUGGY]    setExternalAttributes((mode    >>    SHORT_SHIFT)    [BUGGY]        |    ((mode    &    0200)    ==    0    ?    1    :    0)        |    (isDirectory()    ?    0x10    :    0));        platform    =    PLATFORM_UNIX;    }    [CLASS]        ZipArchiveEntry    [METHOD]    setUnixMode    [RETURN_TYPE]    void        int    mode    [VARIABLES]    String    name    boolean    int    PLATFORM_FAT    PLATFORM_UNIX    SHORT_MASK    SHORT_SHIFT    internalAttributes    mode    platform    value    long    externalAttributes    value    LinkedHashMap    extraFields        	compress_1504_ZipArchiveEntry_1_1	139	1	src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java
367	[PATCH]    a    +=    (value[offset    +    2]    &    0xffL)    <<    16;	[BUG]    [BUGGY]    a    +=    (value[offset    +    2]    &    255L)    >>    16;    [FE]    junit.framework.ComparisonFailure:    expected:<MSG_1[6LJMYKCXT84X]>    but    was:<MSG_1[VJ5DT7Y900GZ]>    testUnnamedGoogleMessage    [CONTEXT]    break;    case    7:    a    +=    (value[offset    +    6]    &    0xffL)    <<    48;    case    6:    a    +=    (value[offset    +    5]    &    0xffL)    <<    40;    case    5:    a    +=    (value[offset    +    4]    &    0xffL)    <<    32;    case    4:    a    +=    (value[offset    +    3]    &    0xffL)    <<    24;    case    3:    [BUGGY]    a    +=    (value[offset    +    2]    &    255L)    >>    16;    [BUGGY]    case    2:    a    +=    (value[offset    +    1]    &    0xffL)    <<    8;    case    1:    a    +=    (value[offset    +    0]    &    0xffL);        }    return    mix64(a,    b,    c);    }    [CLASS]        JsMessage    Style    PlaceholderReference    Builder    Hash    [METHOD]    hash64    [RETURN_TYPE]    long        byte[]    value    int    offset    int    length    long    seed    [VARIABLES]    byte[]    value    Pattern    MSG_EXTERNAL_PATTERN    Set    placeholders    boolean    allowLegacyMessages    hidden    isAnonymous    isExternal    useClosure    Style    CLOSURE    LEGACY    RELAX    List    messageParts    parts    String    MESSAGE_REPRESENTATION_FORMAT    defactoMeaning    desc    externalId    id    identifier    key    meaning    name    part    sourceName    value    long    CONSTANT64    SEED64    a    b    c    nonnegativeHash    seed    int    keylen    length    offset        	closure_13724_JsMessage_1_1	614	1	src/com/google/javascript/jscomp/JsMessage.java
368	[PATCH]    decodedData[encodedIndex    +    1]    =    (byte)    (((b2    &    0xf)    <<    4)    |    ((b3    >>    2)    &    0xf));	[BUG]    [BUGGY]    decodedData[encodedIndex    +    1]    =    (byte)    (((b2    &    15)    >>    4)    |    ((b3    >>    2)    &    0xf));    [FE]    junit.framework.ComparisonFailure:    expected:<T[he    quick    brown    fox    jumped    over    the    lazy    dog]s.>    but    was:<T[e    uik    ron    ox ju    testKnownDecodings    [CONTEXT]    b1    =    base64Alphabet[base64Data[dataIndex]];    b2    =    base64Alphabet[base64Data[dataIndex    +    1]];    if    (marker0    !=    PAD    &&    marker1    !=    PAD)    {        b3    =    base64Alphabet[marker0];    b4    =    base64Alphabet[marker1];    decodedData[encodedIndex]    =    (byte)    (b1    <<    2    |    b2    >>    4);    [BUGGY]    decodedData[encodedIndex    +    1]    =    (byte)    (((b2    &    15)    >>    4)    |    ((b3    >>    2)    &    0xf));    [BUGGY]    decodedData[encodedIndex    +    2]    =    (byte)    (b3    <<    6    |    b4);    }    else    if    (marker0    ==    PAD)    {        decodedData[encodedIndex]    =    (byte)    (b1    <<    2    |    b2    >>    4);    }    else    if    (marker1    ==    PAD)    {        b3    =    base64Alphabet[marker0];    decodedData[encodedIndex]    =    (byte)    (b1    <<    2    |    b2    >>    4);    decodedData[encodedIndex    +    1]    =    (byte)    (((b2    &    0xf)    <<    4)    |    ((b3    >>    2)    &    0xf));    [CLASS]        Base64    [METHOD]    decodeBase64    [RETURN_TYPE]    byte[]        byte[]    base64Data    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    base64Data    binaryData    decodedData    encodedData    lookUpBase64Alphabet    pArray    boolean    byte    PAD    b1    b2    b3    b4    k    l    marker0    marker1    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    lastData    length    nextSeparatorIndex    numberQuadruple        	codec_669_Base64_1_1	435	1	src/java/org/apache/commons/codec/binary/Base64.java
369	[PATCH]    +    ((bytes[offset    +    6]    &    0xffL)    <<    48)	[BUG]    [BUGGY]    +    ((bytes[offset    +    6]    &    255L)    >>>    48)    [FE]    junit.framework.AssertionFailedError:    expected:<4894389798993746036>    but    was:<4307246180525882387>    testHashValues    [CONTEXT]    return    mix64(a,    b,    c);    }    private    static    long    word64At(byte[]    bytes,    int    offset)    {    return    (bytes[offset    +    0]    &    0xffL)    +    ((bytes[offset    +    1]    &    0xffL)    <<    8)    +    ((bytes[offset    +    2]    &    0xffL)    <<    16)    +    ((bytes[offset    +    3]    &    0xffL)    <<    24)    +    ((bytes[offset    +    4]    &    0xffL)    <<    32)    +    ((bytes[offset    +    5]    &    0xffL)    <<    40)    [BUGGY]    +    ((bytes[offset    +    6]    &    255L)    >>>    48)    [BUGGY]    +    ((bytes[offset    +    7]    &    0xffL)    <<    56);    }                private    static    long    mix64(long    a,    long    b,    long    c)    {    a    -=    b;    a    -=    c;    a    ^=    c    >>>    43;    b    -=    c;    b    -=    a;    b    ^=    a    <<    9;    c    -=    a;    c    -=    b;    c    ^=    b    >>>    8;    [CLASS]    	closure_13866_JsMessage_1_1	631	1	src/com/google/javascript/jscomp/JsMessage.java
370	[PATCH]    final    int    z1    =    (v0    ^    (v0    <<    25))        ^    (vM1    ^    (vM1    >>>    27));	[BUG]    [BUGGY]    final    int    z1    =    (v0    ^    (v0    <<    25))    ^    (vM1    ^    (vM1    >>    27));    [FE]    junit.framework.AssertionFailedError:    expected:<-1913.5529004453274>    but    was:<-1645.1507077084755>    testInterpolation2    [CONTEXT]    final    int    indexRm1    =    iRm1[index];    final    int    indexRm2    =    iRm2[index];    final    int    v0    =    v[index];    final    int    vM1=    v[i1[index]];    final    int    vM2=    v[i2[index]];    final    int    vM3=    v[i3[index]];    final    int    z0    =    (0x80000000    &    v[indexRm1])    ^    (0x7FFFFFFF    &    v[indexRm2]);    [BUGGY]    final    int    z1    =    (v0    ^    (v0    <<    25))^    (vM1    ^    (vM1    >>    27));    [BUGGY]    final    int    z2    =    (vM2    >>>    9)    ^    (vM3    ^    (vM3    >>>    1));    final    int    z3    =    z1^    z2;    int    z4    =    z0    ^    (z1    ^    (z1    <<    9))    ^    (z2    ^    (z2    <<    21))    ^    (z3    ^    (z3    >>>    21));    v[index]    =    z3;    v[indexRm1]=    z4;    v[indexRm2]    &=    0x80000000;    index=    indexRm1;        [CLASS]        Well19937c    [METHOD]    next    [RETURN_TYPE]    int        final    int    bits    [VARIABLES]    long    seed    serialVersionUID    int    K    M1    M2    M3    bits    indexRm1    indexRm2    seed    v0    vM1    vM2    vM3    z0    z1    z2    z3    z4    boolean        	math_94174_Well19937c_1_1	95	1	src/main/java/org/apache/commons/math3/random/Well19937c.java
371	[PATCH]    value    +=    (bytes[offset    +    BYTE_1]    <<    BYTE_1_SHIFT)    &    BYTE_1_MASK;	[BUG]    [BUGGY]    value    +=    (bytes[offset    +    BYTE_1]    >>>    BYTE_1_SHIFT)    &    BYTE_1_MASK;    [FE]    java.util.zip.ZipException:    bad    CRC    checksum    b67800c6    instead    of    b67802c6    testReparse    [CONTEXT]    public    static    long    getValue(byte[]    bytes,    int    offset)    {    long    value    =    (bytes[offset    +    BYTE_3]    <<    BYTE_3_SHIFT)    &    BYTE_3_MASK;    value    +=    (bytes[offset    +    BYTE_2]    <<    BYTE_2_SHIFT)    &    BYTE_2_MASK;    [BUGGY]    value    +=    (bytes[offset    +    BYTE_1]    >>>    BYTE_1_SHIFT)    &    BYTE_1_MASK;    [BUGGY]    value    +=    (bytes[offset]    &    BYTE_MASK);    return    value;    }    [CLASS]        ZipLong    [METHOD]    getValue    [RETURN_TYPE]    long        byte[]    bytes    int    offset    [VARIABLES]    byte[]    bytes    boolean    int    BYTE_1    BYTE_1_MASK    BYTE_1_SHIFT    BYTE_2    BYTE_2_MASK    BYTE_2_SHIFT    BYTE_3    BYTE_3_SHIFT    BYTE_MASK    WORD    offset    long    BYTE_3_MASK    value        	compress_4853_ZipLong_1_1	108	1	src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java
372	[PATCH]    outputBuffer[outputPtr++]    =    (byte)    (0xc0    |    (c    >>    6));	[BUG]    [BUGGY]    outputBuffer[outputPtr++]    =    (byte)    (0xc0    |    (c    <<    6));    [FE]    arrays    first    differed    at    element    [1];    expected:<-61>    but    was:<-64>    testEncodeAsUTF8    [CONTEXT]    c    =    text.charAt(inputPtr++);    }        if    (outputPtr    >=    outputEnd)    {    outputBuffer    =    byteBuilder.finishCurrentSegment();    outputEnd    =    outputBuffer.length;    outputPtr    =    0;    }    if    (c    <    0x800)    {        [BUGGY]    outputBuffer[outputPtr++]    =    (byte)    (0xc0    |    (c    <<    6));    [BUGGY]    }    else    {        if    (c    <    SURR1_FIRST    ||    c    >    SURR2_LAST)    {    outputBuffer[outputPtr++]    =    (byte)    (0xe0    |    (c    >>    12));    if    (outputPtr    >=    outputEnd)    {    outputBuffer    =    byteBuilder.finishCurrentSegment();    outputEnd    =    outputBuffer.length;    outputPtr    =    0;    }    outputBuffer[outputPtr++]    =    (byte)    (0x80    |    ((c    >>    6)    &    0x3f));    [CLASS]        JsonStringEncoder    [METHOD]    encodeAsUTF8    [RETURN_TYPE]    byte[]        String    text    [VARIABLES]    byte[]    HEX_BYTES    outputBuffer    boolean    TextBuffer    _textBuffer    textBuffer    ThreadLocal    _threadEncoder    ByteArrayBuilder    _byteBuilder    byteBuilder    String    text    int    INT_0    INT_BACKSLASH    INT_U    SURR1_FIRST    SURR1_LAST    SURR2_FIRST    SURR2_LAST    c    ch    escCode    escCodeCount    escape    first    inPtr    inputEnd    inputLen    inputPtr    length    outPtr    outputEnd    outputPtr    second    char[]    HEX_CHARS    _quoteBuffer    outputBuffer        	jacksoncore_4570_JsonStringEncoder_1_1	292	1	src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java
373	[PATCH]    h    ^=        h    >>>    14;	[BUG]    [BUGGY]    h    ^=    h    >>    14;    [FE]    junit.framework.AssertionFailedError:    expected:<true>    but    was:<false>    testMultiKeyRemove    [CONTEXT]    if    (key1    !=    null)    {    h    ^=    key1.hashCode();    }    if    (key2    !=    null)    {    h    ^=    key2.hashCode();    }    if    (key3    !=    null)    {    h    ^=    key3.hashCode();    }    h    +=    ~(h    <<    9);    [BUGGY]    h    ^=h    >>    14;    [BUGGY]    h    +=h    <<    4;    h    ^=h    >>>    10;    return    h;    }    [CLASS]        MultiKeyMap    [METHOD]    hash    [RETURN_TYPE]    int        Object    key1    Object    key2    Object    key3    [VARIABLES]    Object    key1    key2    key3    boolean    long    serialVersionUID    int    h        	collections_8216_MultiKeyMap_1_1	369	1	src/main/java/org/apache/commons/collections4/map/MultiKeyMap.java
374	[PATCH]    int    chunksBeforeLF    =    b64variant.getMaxLineLength()    >>    2;	[BUG]    [BUGGY]    int    chunksBeforeLF    =    b64variant.getMaxLineLength()    <<    2;    [FE]    junit.framework.ComparisonFailure:    expected:<...b2YgYmFzZTY0IGRhdGE7[\nIG11c3QgYmUgbG9uZyBlbm91Z2ggaW5jbHVkZSBhIGxpbmUgd3JhcCBvciB0d28uLi5Tb21lIGNv\nbnRlbnQgc28gdGhhdCB3ZSBjYW4gdGVzdCBlbmNvZGluZyBvZiBiYXNlNjQgZGF0YTsgbXVzdCBi\nZSBsb25nIGVub3VnaCBpbmNsdWRlIGEgbGluZSB3cmFwIG9yIHR3by4uLlNvbWUgY29udGVudCBz\nbyB0aGF0IHdlIGNhbiB0ZXN0IGVuY29kaW5nIG9mIGJhc2U2NCBkYXRhOyBtdXN0IGJlIGxvbmcg\nZW5vdWdoIGluY2x1ZGUgYSBsaW5lIHdyYXAgb3IgdHdvLi4uU29tZSBjb250ZW50IHNvIHRoYXQg\nd2UgY2FuIHRlc3QgZW5jb2Rpbmcgb2YgYmFzZTY0IGRhdGE7IG11c3QgYmUgbG9uZyBlbm91Z2gg\n]aW5jbHVkZSBhIGxpbmUg...>    but    was:<...b2YgYmFzZTY0IGRhdGE7[IG11c3QgYmUgbG9uZyBlbm91Z2ggaW5jbHVkZSBhIGxpbmUgd3JhcCBvciB0d28uLi5Tb21lIGNvbnRlbnQgc28gdGhhdCB3ZSBjYW4gdGVzdCBlbmNvZGluZyBvZiBiYXNlNjQgZGF0YTsgbXVzdCBiZSBsb25nIGVub3VnaCBpbmNsdWRlIGEgbGluZSB3cmFwIG9yIHR3by4uLlNvbWUgY29udGVudCBzbyB0aGF0IHdlIGNhbiB0ZXN0IGVuY29kaW5nIG9mIGJhc2U2NCBkYXRhOyBtdXN0IGJlIGxvbmcgZW5vdWdoIGluY2x1ZGUgYSBsaW5lIHdyYXAgb3IgdHdvLi4uU29tZSBjb250ZW50IHNvIHRoYXQgd2UgY2FuIHRlc3QgZW5jb2Rpbmcgb2YgYmFzZTY0IGRhdGE7IG11c3QgYmUgbG9uZyBlbm91Z2gg]aW5jbHVkZSBhIGxpbmUg...>    testStreamingWrites    [CONTEXT]    {    int    inputPtr    =    0;    int    inputEnd    =    0;    int    lastFullOffset    =    -3;        int    safeOutputEnd    =    _outputEnd    -    6;    [BUGGY]    int    chunksBeforeLF    =    b64variant.getMaxLineLength()    <<    2;    [BUGGY]    while    (bytesLeft    >    2)    {    if    (inputPtr    >    lastFullOffset)    {    inputEnd    =    _readMore(data,    readBuffer,    inputPtr,    inputEnd,    bytesLeft);    inputPtr    =    0;    if    (inputEnd    <    3)    {    break;    }    lastFullOffset    =    inputEnd-3;    }    [CLASS]        WriterBasedJsonGenerator    [METHOD]    _writeBinary    [RETURN_TYPE]    int        Base64Variant    b64variant    InputStream    data    byte[]    readBuffer    int    bytesLeft    [VARIABLES]    byte[]    readBuffer    SerializableString    _currentEscape    name    sstr    text    boolean    InputStream    data    Base64Variant    b64variant    int    SHORT_WRITE    _outputEnd    _outputHead    _outputTail    amount    b24    bytes    bytesLeft    chunksBeforeLF    dataLength    end    escCode    escLen    escLimit    features    flushLen    i    inputEnd    inputLeft    inputPtr    lastFullOffset    len    length    max    maxNonEscaped    missing    newAmount    offset    ptr    qlen    room    safeInputEnd    safeOutputEnd    segmentLen    start    status    textLen    Writer    _writer    w    char[]    HEX_CHARS    _entityBuffer    _outputBuffer    buf    quoted    text        	jacksoncore_15799_WriterBasedJsonGenerator_1_1	1499	1	src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java
375	[PATCH]    mem[isaacI]    =    mem[(isaacX    &    MASK)    >>    2]    +    isaacA    +    isaacB;	[BUG]    [BUGGY]    mem[isaacI]    =    mem[(isaacX    &    MASK)    <<    2]    +    isaacA    +    isaacB;    [FE]    java.lang.ArrayIndexOutOfBoundsException:    1472    testEquivalence    [CONTEXT]    private    void    isaac3()    {    [BUGGY]    mem[isaacI]    =    mem[(isaacX    &    MASK)    <<    2]    +    isaacA    +    isaacB;    [BUGGY]    isaacB    =    mem[(mem[isaacI]    >>    SIZE_L    &    MASK)    >>    2]    +    isaacX;    rsl[isaacI++]    =    isaacB;    }    [CLASS]        ISAACRandom    [METHOD]    isaac3    [RETURN_TYPE]    void        [VARIABLES]    int[]    arr    mem    rsl    seed    boolean    long    k    seed    serialVersionUID    int    GLD_RATIO    H_SIZE    MASK    SIZE    SIZE_L    bits    count    isaacA    isaacB    isaacC    isaacI    isaacJ    isaacX    j    rslLen    seed    seedLen        	math_92468_ISAACRandom_1_1	183	1	src/main/java/org/apache/commons/math3/random/ISAACRandom.java
376	[PATCH]    h    ^=        h    >>>    14;	[BUG]    [BUGGY]    h    ^=    h    <<    14;    [FE]    junit.framework.AssertionFailedError:    expected:<true>    but    was:<false>    testMultiKeyContainsKey    [CONTEXT]    if    (key2    !=    null)    {    h    ^=    key2.hashCode();    }    if    (key3    !=    null)    {    h    ^=    key3.hashCode();    }    if    (key4    !=    null)    {    h    ^=    key4.hashCode();    }    h    +=    ~(h    <<    9);    [BUGGY]    h    ^=h    <<    14;    [BUGGY]    h    +=h    <<    4;    h    ^=h    >>>    10;    return    h;    }    [CLASS]        MultiKeyMap    [METHOD]    hash    [RETURN_TYPE]    int        Object    key1    Object    key2    Object    key3    Object    key4    [VARIABLES]    Object    key1    key2    key3    key4    boolean    long    serialVersionUID    int    h        	collections_8348_MultiKeyMap_1_1	516	1	src/main/java/org/apache/commons/collections4/map/MultiKeyMap.java
377	[PATCH]    value    =    (value    <<    4)    |    digit;	[BUG]    [BUGGY]    value    =    (value    >>>    4)    |    digit;    [FE]    com.fasterxml.jackson.core.JsonParseException:    Failed    to    decode    VALUE_STRING    as    base64    (MIME-NO-LINEFEEDS):    Illegal    white    space    character    (code    0x7)    as    character    #2    of    4-char    base64    unit:    can    only    used    between    units    testWithEscaped    [CONTEXT]    if    (_inputPtr    >=    _inputEnd)    {    if    (!loadMore())    {    _reportInvalidEOF(   "    in    character    escape    sequence   ");    }    }    int    ch    =    (int)    _inputBuffer[_inputPtr++];    int    digit    =    CharTypes.charToHex(ch);    if    (digit    <    0)    {    _reportUnexpectedChar(ch,       "expected    a    hex-digit    for    character    escape    sequence   ");    }    [BUGGY]    value    =    (value    >>>    4)    |    digit;    [BUGGY]    }    return    (char)    value;    }    [CLASS]        UTF8StreamJsonParser    [METHOD]    _decodeEscaped    [RETURN_TYPE]    char        [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    neg    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    codes    quads    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    byteIx    byteLen    c    ch    ch2    cix    code    count    currQuad    currQuadBytes    decodedData    defaultValue    digit    end    expLen    features    fractLen    i    intLen    intPartLength    integerPartLength    ix    lastQuad    lastQuadBytes    len    max    max2    minAvailable    nameLen    needed    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    q1    q2    qlen    start    value        	jacksoncore_13888_UTF8StreamJsonParser_1_1	2750	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
378	[PATCH]    h    +=        h    <<    4;	[BUG]    [BUGGY]    h    +=    h    >>>    4;    [FE]    junit.framework.AssertionFailedError:    expected:<true>    but    was:<false>    testMultiKeyContainsKey    [CONTEXT]    protected    int    hash(final    Object    key1,    final    Object    key2)    {    int    h    =    0;    if    (key1    !=    null)    {    h    ^=    key1.hashCode();    }    if    (key2    !=    null)    {    h    ^=    key2.hashCode();    }    h    +=    ~(h    <<    9);    h    ^=h    >>>    14;    [BUGGY]    h    +=h    >>>    4;    [BUGGY]    h    ^=h    >>>    10;    return    h;    }    [CLASS]        MultiKeyMap    [METHOD]    hash    [RETURN_TYPE]    int        Object    key1    Object    key2    [VARIABLES]    Object    key1    key2    boolean    long    serialVersionUID    int    h        	collections_8108_MultiKeyMap_1_1	233	1	src/main/java/org/apache/commons/collections4/map/MultiKeyMap.java
379	[PATCH]    return    (1l    <<    (n    -    1))    -    1l;	[BUG]    [BUGGY]    return    (1L    >>    (n    -    1))    -    1l;    [FE]    junit.framework.AssertionFailedError:    expected:<33554431>    but    was:<-1>    testStirlingS2    [CONTEXT]    if    (n    <    stirlingS2.length)    {        return    stirlingS2[n][k];    }    else    {        if    (k    ==    0)    {    return    0;    }    else    if    (k    ==    1    ||    k    ==    n)    {    return    1;    }    else    if    (k    ==    2)    {    [BUGGY]    return    (1L    >>    (n    -    1))    -    1l;    [BUGGY]    }    else    if    (k    ==    n    -    1)    {    return    binomialCoefficient(n,    2);    }    else    {        long    sum    =    0;    long    sign    =    ((k    &    0x1)    ==    0)    ?    1    :    -1;    for    (int    j    =    1;    j    <=    k;    ++j)    {    sign    =    -sign;    sum    +=    sign    *    binomialCoefficient(k,    j)    *    ArithmeticUtils.pow(j,    n);    if    (sum    <    0)    {    [CLASS]        CombinatoricsUtils    LexicographicCombinationIterator    SingletonIterator    [METHOD]    stirlingS2    [RETURN_TYPE]    long        final    int    n    final    int    k    [VARIABLES]    boolean    more    long[]    FACTORIALS    AtomicReference    STIRLING_S2    int[]    c    singleton    long[][]    stirlingS2    int    i    j    k    maxIndex    n    long    sign    sum        	math_109334_CombinatoricsUtils_1_1	400	1	src/main/java/org/apache/commons/math3/util/CombinatoricsUtils.java
380	[PATCH]    c    ^=    (b    >>>    13);	[BUG]    [BUGGY]    c    ^=    (b    <<    13);    [FE]    junit.framework.AssertionFailedError:    testReplaceTwoPlaceholdersNonAlphaOrder    [CONTEXT]        a    -=    b;    a    -=    c;    a    ^=    (c    >>>    13);    b    -=    c;    b    -=    a;    b    ^=    (a    <<    8);    c    -=    a;    c    -=    b;    [BUGGY]    c    ^=    (b    <<    13);    [BUGGY]    a    -=    b;    a    -=    c;    a    ^=    (c    >>>    12);    b    -=    c;    b    -=    a;    b    ^=    (a    <<    16);    c    -=    a;    c    -=    b;    c    ^=    (b    >>>    5);    a    -=    b;    [CLASS]        GoogleJsMessageIdGenerator    FP    MessageId    [METHOD]    hash32    [RETURN_TYPE]    int        byte[]    str    int    start    int    limit    int    c    [VARIABLES]    byte[]    str    String    meaning    projectId    projectScopedMeaning    str    tcValue    boolean    int    a    b    c    i    limit    start        	closure_30845_GoogleJsMessageIdGenerator_1_1	135	1	src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java
381	[PATCH]    bbuf[outputPtr++]    =    HEX_CHARS[charToEscape    >>    4];	[BUG]    [BUGGY]    bbuf[outputPtr++]    =    HEX_CHARS[charToEscape    <<    4];    [FE]    java.lang.ArrayIndexOutOfBoundsException:    2560    testAboveAsciiEscapeWithUTF8Stream    [CONTEXT]    if    (charToEscape    >    0xFF)    {    int    hi    =    (charToEscape    >>    8)    &    0xFF;    bbuf[outputPtr++]    =    HEX_CHARS[hi    >>    4];    bbuf[outputPtr++]    =    HEX_CHARS[hi    &    0xF];    charToEscape    &=    0xFF;    }    else    {    bbuf[outputPtr++]    =    BYTE_0;    bbuf[outputPtr++]    =    BYTE_0;    }        [BUGGY]    bbuf[outputPtr++]    =    HEX_CHARS[charToEscape    <<    4];    [BUGGY]    bbuf[outputPtr++]    =    HEX_CHARS[charToEscape    &    0xF];    return    outputPtr;    }    [CLASS]        UTF8JsonGenerator    [METHOD]    _writeGenericEscape    [RETURN_TYPE]    int        int    charToEscape    int    outputPtr    [VARIABLES]    byte[]    FALSE_BYTES    HEX_CHARS    NULL_BYTES    TRUE_BYTES    _entityBuffer    _outputBuffer    bbuf    buf    bytes    data    encodingBuffer    input    keyword    outputBuffer    raw    readBuffer    text    utf8    boolean    _bufferRecyclable    addQuotes    bufferRecyclable    commaBefore    state    byte    BYTE_0    BYTE_BACKSLASH    BYTE_COLON    BYTE_COMMA    BYTE_LBRACKET    BYTE_LCURLY    BYTE_QUOTE    BYTE_RBRACKET    BYTE_RCURLY    BYTE_u    b    OutputStream    _outputStream    out    int    MAX_BYTES_TO_BUFFER    SURR1_FIRST    SURR1_LAST    SURR2_FIRST    SURR2_LAST    _charBufferLength    _outputEnd    _outputMaxContiguous    _outputTail    amount    b24    blen    bytes    bytesDone    bytesLeft    c    ch    charToEscape    chunksBeforeLF    count    dataLength    end    escape    features    hi    i    inputEnd    inputLeft    inputLen    inputOffset    inputPtr    lastFullOffset    left    len    len2    len3    length    maxRead    maxUnescaped    missing    offset    outputEnd    outputOffset    outputPtr    ptr    remainingChars    safeInputEnd    safeOutputEnd    start    status    surr1    surr2    totalLen    char[]    _charBuffer    buf    cbuf    text        	jacksoncore_10988_UTF8JsonGenerator_1_1	1840	1	src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java
382	[PATCH]    return    Float.intBitsToFloat(sign    |    (scaledExponent    <<    23)    |    mantissa);	[BUG]    [BUGGY]    return    Float.intBitsToFloat(sign    |    (scaledExponent    >>>    23)    |    mantissa);    [FE]    junit.framework.AssertionFailedError:    expected:<1.7014118E38>    but    was:<0.0>    testFloatScalbSpecialCases    [CONTEXT]        while    ((mantissa    >>>    23)    !=    1)    {    mantissa    =    mantissa    <<    1;    --scaledExponent;    }    ++scaledExponent;    mantissa    =    mantissa    &    0x007fffff;    if    (scaledExponent    <    255)    {    [BUGGY]    return    Float.intBitsToFloat(sign    |    (scaledExponent    >>>    23)    |    mantissa);    [BUGGY]    }    else    {    return    (sign    ==    0)    ?    Float.POSITIVE_INFINITY    :    Float.NEGATIVE_INFINITY;    }    }    else    if    (scaledExponent    <    255)    {    return    Float.intBitsToFloat(sign    |    (scaledExponent    <<    23)    |    mantissa);    }    else    {    return    (sign    ==    0)    ?    Float.POSITIVE_INFINITY    :    Float.NEGATIVE_INFINITY;    }    }    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    scalb    [RETURN_TYPE]    float        final    float    f    final    int    n    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    bita    bitb    bitsum    cotanFlag    leftPlane    negate    negative    subnormal    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    hiPrecOut    lnCoef_i    lnCoef_last    lnm    lns    reduceResults    result    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    a2    aa    ab    absAsinh    absAtanh    b    base    baseA    baseB    c    cD2pH    cRH    cTmpH    cd    cosEpsA    cosEpsB    cosa    cosaa    cosab    cosb    costA    costB    d    d1High    d1Low    d2p    d2pHH    d2pHL    d2pHigh    d2pLow    da    daa    dab    db    denom    denomb    denomr    dx    epsA    epsA2    epsB    epsilon    err    est    esta    estb    extra    facta    factb    finalRemA    finalRemB    fracPartA    fracPartB    fx1    intPartA    intPartB    invx    invy    lna    lnb    lnza    lnzb    lores    mant    na    nb    numer    oneOverXa    p    p2    pi2a    pi2b    pia    pib    r    rHH    rHL    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    resultHigh    resultLow    resultb    rln10a    rln10b    sinEpsA    sinEpsB    sina    sinb    sintA    sintB    sumA    sumB    t    temp    temp2    tempA    tempB    tempC    tmp    tmp1    tmp2    tmpA    tmpB    tmpHigh    tmpLow    x    x2    xa    xb    xbadj    xpa    xpb    xs    y    ya    yaa    yab    yb    z    za    zaa    zab    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    float    f    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    bits    e    exp    exp3    exponent    finalK    i    idx    intFrac    intPart    intVal    k    mantissa    mostSignificantLostBit    n    quadrant    scaledExponent    shift    sign    splitFactor    x    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    a    ac    ad    b    bc    bd    bits    c    d    inbits    l    mantissa    mostSignificantLostBit    prod2A    prod2B    prodA    prodB    shpi0    shpiA    shpiB    sign    x    xl    yi        	math_118484_FastMath_1_1	3205	1	src/main/java/org/apache/commons/math3/util/FastMath.java
383	[PATCH]    return    z4    >>>    (32    -    bits);	[BUG]    [BUGGY]    return    z4    <<    (32    -    bits);    [FE]    org.apache.commons.math3.exception.OutOfRangeException:    -5.812    out    of    [0,    1]    range    testSampling    [CONTEXT]    final    int    z1    =    (v0    ^    (v0    <<    25))^    (vM1    ^    (vM1    >>>    27));    final    int    z2    =    (vM2    >>>    9)    ^    (vM3    ^    (vM3    >>>    1));    final    int    z3    =    z1^    z2;    final    int    z4    =    z0    ^    (z1    ^    (z1    <<    9))    ^    (z2    ^    (z2    <<    21))    ^    (z3    ^    (z3    >>>    21));    v[index]    =    z3;    v[indexRm1]=    z4;    v[indexRm2]    &=    0x80000000;    index=    indexRm1;        [BUGGY]    return    z4    <<    (32    -    bits);    [BUGGY]    }    [CLASS]        Well19937a    [METHOD]    next    [RETURN_TYPE]    int        final    int    bits    [VARIABLES]    long    seed    serialVersionUID    int    K    M1    M2    M3    bits    indexRm1    indexRm2    seed    v0    vM1    vM2    vM3    z0    z1    z2    z3    z4    boolean        	math_94153_Well19937a_1_1	105	1	src/main/java/org/apache/commons/math3/random/Well19937a.java
384	[PATCH]    (long)(((exp3    +    1023)    &    0x7ff))    <<    52);	[BUG]    [BUGGY]    (long)(((exp3    +    1023)    &    2047))    >>>    52);    [FE]    junit.framework.AssertionFailedError:    expected:<0.0>    but    was:<NaN>    testCbrtPow3    [CONTEXT]    if    (exponent    ==    1024)    {        return    x;    }        int    exp3    =    exponent    /    3;        double    p2    =    Double.longBitsToDouble((inbits    &    0x8000000000000000L)    |    [BUGGY]    (long)(((exp3    +    1023)    &    2047))    >>>    52);    [BUGGY]        final    double    mant    =    Double.longBitsToDouble((inbits    &    0x000fffffffffffffL)    |    0x3ff0000000000000L);        double    est    =    -0.010714690733195933;    est    =    est    *    mant    +    0.0875862700108075;    est    =    est    *    mant    +    -0.3058015757857271;    est    =    est    *    mant    +    0.7249995199969751;    est    =    est    *    mant    +    0.5039018405998233;    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    cbrt    [RETURN_TYPE]    double        double    x    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    bita    bitb    bitsum    cotanFlag    leftPlane    negate    negative    subnormal    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    hiPrecOut    lnCoef_i    lnCoef_last    lnm    lns    reduceResults    result    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    a2    aa    ab    absAsinh    absAtanh    b    base    baseA    baseB    c    cD2pH    cRH    cTmpH    cd    cosEpsA    cosEpsB    cosa    cosaa    cosab    cosb    costA    costB    d    d1High    d1Low    d2p    d2pHH    d2pHL    d2pHigh    d2pLow    da    daa    dab    db    denom    denomb    denomr    dx    epsA    epsA2    epsB    epsilon    err    est    esta    estb    extra    finalRemA    finalRemB    fracPartA    fracPartB    fx1    intPartA    intPartB    invx    invy    lna    lnb    lnza    lnzb    lores    mant    na    nb    numer    oneOverXa    p    p2    pi2a    pi2b    pia    pib    r    rHH    rHL    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    resultHigh    resultLow    resultb    rln10a    rln10b    sinEpsA    sinEpsB    sina    sinb    sintA    sintB    sumA    sumB    t    temp    temp2    tempA    tempB    tempC    tmp    tmp1    tmp2    tmpA    tmpB    tmpHigh    tmpLow    x    x2    xa    xb    xbadj    xpa    xpb    xs    y    ya    yaa    yab    yb    z    za    zaa    zab    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    e    exp    exp3    exponent    finalK    i    idx    intFrac    intPart    intVal    k    quadrant    shift    splitFactor    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    a    ac    ad    b    bc    bd    bits    c    d    inbits    prod2A    prod2B    prodA    prodB    shpi0    shpiA    shpiB    xl    yi        	math_117670_FastMath_1_1	2887	1	src/main/java/org/apache/commons/math3/util/FastMath.java
385	[PATCH]    buf.append((char)    (value    -    (d    <<    3)    -    (d    <<    1)    +    '0'));	[BUG]    [BUGGY]    buf.append((char)    (value    -    (d    <<    3)    -    (d    >>    1)    +    '0'));    [FE]    junit.framework.ComparisonFailure:    expected:<2002-04-05T1[2:24]:00.000Z>    but    was:<2002-04-05T1[4:27]:00.000Z>    testTest    [CONTEXT]    }    else    if    (value    <    100)    {    for    (;    size    >    2;    size--)    {    buf.append('0');    }                int    d    =    ((value    +    1)    *    13421772)    >>    27;    buf.append((char)    (d    +    '0'));        [BUGGY]    buf.append((char)    (value    -    (d    <<    3)    -    (d    >>    1)    +    '0'));    [BUGGY]    }    else    {    int    digits;    if    (value    <    1000)    {    digits    =    3;    }    else    if    (value    <    10000)    {    digits    =    4;    }    else    {    digits    =    (int)(Math.log(value)    /    LOG_10)    +    1;    }    for    (;    size    >    digits;    size--)    {    [CLASS]        FormatUtils    [METHOD]    appendPaddedInteger    [RETURN_TYPE]    void        StringBuffer    buf    int    value    int    size    [VARIABLES]    StringBuffer    buf    boolean    double    LOG_10    int    d    digits    size    value        	time_15493_FormatUtils_1_1	77	1	src/main/java/org/joda/time/format/FormatUtils.java
386	[PATCH]    c[5]    =    Base64.toBase64((value    <<    4)    &    0x3f);	[BUG]    [BUGGY]    c[5]    =    Base64.toBase64((value    >>    4)    &    0x3f);    [FE]    junit.framework.ComparisonFailure:    expected:<AAAAA[Q]>    but    was:<AAAAA[A]>    testBase64EncodeInt    [CONTEXT]    public    static    String    base64EncodeInt(int    value)    {    char[]    c    =    new    char[6];    for    (int    i    =    0;    i    <    5;    i++)    {    c[i]    =    Base64.toBase64((value    >>    (26    -    i    *    6))    &    0x3f);    }    [BUGGY]    c[5]    =    Base64.toBase64((value    >>    4)    &    0x3f);    [BUGGY]    return    new    String(c);    }    [CLASS]        Base64    [METHOD]    base64EncodeInt    [RETURN_TYPE]    String        int    value    [VARIABLES]    int[]    BASE64_DECODE_MAP    String    BASE64_MAP    boolean    int    i    value    char[]    c        	closure_63_Base64_1_1	78	1	src/com/google/debugging/sourcemap/Base64.java
387	[PATCH]    result    =    lvalInt    >>    rvalInt;	[BUG]    [BUGGY]    result    =    lvalInt    <<    rvalInt;    [FE]    junit.framework.ComparisonFailure:    expected:<x=-[1]>    but    was:<x=-[2]>    testFoldBitShiftsStringCompare    [CONTEXT]    if    (rvalInt    !=    rval)    {    report(FRACTIONAL_BITWISE_OPERAND,    right);    return    n;    }    switch    (n.getType())    {    case    Token.LSH:    result    =    lvalInt    <<    rvalInt;    break;    case    Token.RSH:    [BUGGY]    result    =    lvalInt    <<    rvalInt;    [BUGGY]    break;    case    Token.URSH:                long    lvalLong    =    lvalInt    &    0xffffffffL;    result    =    lvalLong    >>>    rvalInt;    break;    default:    throw    new    AssertionError(   "Unknown    shift    operator:       "    +    [CLASS]        PeepholeFoldConstants    [METHOD]    tryFoldShift    [RETURN_TYPE]    Node        Node    n    Node    left    Node    right    [VARIABLES]    boolean    late    lval    DiagnosticType    BITWISE_OPERAND_OUT_OF_RANGE    FRACTIONAL_BITWISE_OPERAND    INDEX_OUT_OF_BOUNDS_ERROR    INVALID_GETELEM_INDEX_ERROR    NEGATING_A_NON_NUMBER_ERROR    SHIFT_AMOUNT_OUT_OF_BOUNDS    double    MAX_FOLD_NUMBER    lval    negNum    numValue    result    rval    val    value    int    lvalInt    rvalInt    long    lvalLong    Node    left    n    newNumber    right        	closure_36345_PeepholeFoldConstants_1_1	896	1	src/com/google/javascript/jscomp/PeepholeFoldConstants.java
388	[PATCH]    return    -u    *    (1L    <<    k);    //    gcd    is    u*2^k	[BUG]    [BUGGY]    return    -u    *    (1L    >>>    k);    //    gcd    is    u*2^k    [FE]    junit.framework.AssertionFailedError:    expected:<10>    but    was:<0>    testGcdLong    [CONTEXT]    if    (t    >    0)    {    u    =    -t;    }    else    {    v    =    t;    }        t    =    (v    -    u)    /    2;            }    while    (t    !=    0);    [BUGGY]    return    -u    *    (1L    >>>    k);        [BUGGY]    }    [CLASS]        ArithmeticUtils    [METHOD]    gcd    [RETURN_TYPE]    long        final    long    p    final    long    q    [VARIABLES]    boolean    long    p    q    t    u    v    int    k        	math_108457_ArithmeticUtils_1_1	448	1	src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java
389	[PATCH]    result    =    result    +    (digit    <<    shift);	[BUG]    [BUGGY]    result    =    result    +    (digit    >>>    shift);    [FE]    junit.framework.AssertionFailedError:    expected:<16>    but    was:<0>    testBase64VLQSelectedValues1    [CONTEXT]    public    static    int    decode(CharIterator    in)    {    int    result    =    0;    boolean    continuation;    int    shift    =    0;    do    {    char    c    =    in.next();    int    digit    =    Base64.fromBase64(c);    continuation    =    (digit    &    VLQ_CONTINUATION_BIT)    !=    0;    digit    &=    VLQ_BASE_MASK;    [BUGGY]    result    =    result    +    (digit    >>>    shift);    [BUGGY]    shift    =    shift    +    VLQ_BASE_SHIFT;    }    while    (continuation);    return    fromVLQSigned(result);    }    [CLASS]        Base64VLQ    [METHOD]    decode    [RETURN_TYPE]    int        CharIterator    in    [VARIABLES]    char    c    boolean    continuation    int    VLQ_BASE    VLQ_BASE_MASK    VLQ_BASE_SHIFT    VLQ_CONTINUATION_BIT    digit    result    shift    value    CharIterator    in        	closure_144_Base64VLQ_1_1	121	1	src/com/google/debugging/sourcemap/Base64VLQ.java
390	[PATCH]    a    -=    b;    a    -=    c;    a    ^=    c    >>>    12;	[BUG]    [BUGGY]    a    -=    b;    a    -=    c;    a    ^=    c    >>    12;    [FE]    junit.framework.AssertionFailedError:    expected:<5083893976283701674>    but    was:<472205553748369834>    testHashValues    [CONTEXT]    private    static    long    mix64(long    a,    long    b,    long    c)    {    a    -=    b;    a    -=    c;    a    ^=    c    >>>    43;    b    -=    c;    b    -=    a;    b    ^=    a    <<    9;    c    -=    a;    c    -=    b;    c    ^=    b    >>>    8;    a    -=    b;    a    -=    c;    a    ^=    c    >>>    38;    b    -=    c;    b    -=    a;    b    ^=    a    <<    23;    c    -=    a;    c    -=    b;    c    ^=    b    >>>    5;    a    -=    b;    a    -=    c;    a    ^=    c    >>>    35;    b    -=    c;    b    -=    a;    b    ^=    a    <<    49;    c    -=    a;    c    -=    b;    c    ^=    b    >>>    11;    [BUGGY]    a    -=    b;    a    -=    c;    a    ^=    c    >>    12;    [BUGGY]    b    -=    c;    b    -=    a;    b    ^=    a    <<    18;    c    -=    a;    c    -=    b;    c    ^=    b    >>>    22;    return    c;    }    [CLASS]        JsMessage    Style    PlaceholderReference    Builder    Hash    [METHOD]    mix64    [RETURN_TYPE]    long        long    a    long    b    long    c    [VARIABLES]    Pattern    MSG_EXTERNAL_PATTERN    Set    placeholders    boolean    allowLegacyMessages    hidden    isAnonymous    isExternal    useClosure    Style    CLOSURE    LEGACY    RELAX    List    messageParts    parts    String    MESSAGE_REPRESENTATION_FORMAT    defactoMeaning    desc    externalId    id    identifier    key    meaning    name    part    sourceName    value    long    CONSTANT64    SEED64    a    b    c    nonnegativeHash    seed        	closure_13957_JsMessage_1_1	648	1	src/com/google/javascript/jscomp/JsMessage.java
391	[PATCH]    decodedData[encodedIndex]    =    (byte)    (b1    <<    2    |    b2    >>    4);	[BUG]    [BUGGY]    decodedData[encodedIndex]    =    (byte)    (b1    <<    2    |    b2    <<    4);    [FE]    junit.framework.ComparisonFailure:    expected:<[The    quick    brown    fox    jumped    over    the    lazy    do]gs.>    but    was:<[thepquhck`br|wn`fox    jtmpdd    |vep    the    lazx    dl]gs.>    testKnownDecodings    [CONTEXT]    marker1    =    base64Data[dataIndex    +    3];    b1    =    base64Alphabet[base64Data[dataIndex]];    b2    =    base64Alphabet[base64Data[dataIndex    +    1]];    if    (marker0    !=    PAD    &&    marker1    !=    PAD)    {        b3    =    base64Alphabet[marker0];    b4    =    base64Alphabet[marker1];        [BUGGY]    decodedData[encodedIndex]    =    (byte)    (b1    <<    2    |    b2    <<    4);    [BUGGY]    decodedData[encodedIndex    +    1]    =    (byte)    (((b2    &    0xf)    <<    4)    |    ((b3    >>    2)    &    0xf));    decodedData[encodedIndex    +    2]    =    (byte)    (b3    <<    6    |    b4);    }    else    if    (marker0    ==    PAD)    {        decodedData[encodedIndex]    =    (byte)    (b1    <<    2    |    b2    >>    4);    }    else    if    (marker1    ==    PAD)    {        b3    =    base64Alphabet[marker0];    decodedData[encodedIndex]    =    (byte)    (b1    <<    2    |    b2    >>    4);    [CLASS]        Base64    [METHOD]    decodeBase64    [RETURN_TYPE]    byte[]        byte[]    base64Data    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    base64Data    binaryData    decodedData    encodedData    lookUpBase64Alphabet    pArray    boolean    byte    PAD    b1    b2    b3    b4    k    l    marker0    marker1    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    lastData    length    nextSeparatorIndex    numberQuadruple        	codec_652_Base64_1_1	434	1	src/java/org/apache/commons/codec/binary/Base64.java
392	[PATCH]    char[]    l_ascii    =    new    char[raw.length    <<    3];	[BUG]    [BUGGY]    char[]    l_ascii    =    new    char[raw.length    >>    3];    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testToAsciiChars    [CONTEXT]    public    static    char[]    toAsciiChars(byte[]    raw)    {    if    (raw    ==    null    ||    raw.length    ==    0)    {    return    EMPTY_CHAR_ARRAY;    }        [BUGGY]    char[]    l_ascii    =    new    char[raw.length    >>    3];    [BUGGY]                    for    (int    ii    =    0,    jj    =    l_ascii.length    -    1;    ii    <    raw.length;    ii++,    jj    -=    8)    {    for    (int    bits    =    0;    bits    <    BITS.length;    ++bits)    {    if    ((raw[ii]    &    BITS[bits])    ==    0)    {    l_ascii[jj    -    bits]    =    '0';    }    else    {    l_ascii[jj    -    bits]    =    '1';    [CLASS]        BinaryCodec    [METHOD]    toAsciiChars    [RETURN_TYPE]    char[]        byte[]    raw    [VARIABLES]    byte[]    EMPTY_BYTE_ARRAY    ascii    l_ascii    l_raw    raw    int[]    BITS    boolean    int    BIT_0    BIT_1    BIT_2    BIT_3    BIT_4    BIT_5    BIT_6    BIT_7    bits    ii    jj    char[]    EMPTY_CHAR_ARRAY    ascii    l_ascii        	codec_1017_BinaryCodec_1_1	257	1	src/java/org/apache/commons/codec/binary/BinaryCodec.java
393	[PATCH]    int    chunksBeforeLF    =    b64variant.getMaxLineLength()    >>    2;	[BUG]    [BUGGY]    int    chunksBeforeLF    =    b64variant.getMaxLineLength()    <<    2;    [FE]    junit.framework.ComparisonFailure:    expected:<...b2YgYmFzZTY0IGRhdGE7[\nIG11c3QgYmUgbG9uZyBlbm91Z2ggaW5jbHVkZSBhIGxpbmUgd3JhcCBvciB0d28uLi5Tb21lIGNv\nbnRlbnQgc28gdGhhdCB3ZSBjYW4gdGVzdCBlbmNvZGluZyBvZiBiYXNlNjQgZGF0YTsgbXVzdCBi\nZSBsb25nIGVub3VnaCBpbmNsdWRlIGEgbGluZSB3cmFwIG9yIHR3by4uLlNvbWUgY29udGVudCBz\nbyB0aGF0IHdlIGNhbiB0ZXN0IGVuY29kaW5nIG9mIGJhc2U2NCBkYXRhOyBtdXN0IGJlIGxvbmcg\nZW5vdWdoIGluY2x1ZGUgYSBsaW5lIHdyYXAgb3IgdHdvLi4uU29tZSBjb250ZW50IHNvIHRoYXQg\nd2UgY2FuIHRlc3QgZW5jb2Rpbmcgb2YgYmFzZTY0IGRhdGE7IG11c3QgYmUgbG9uZyBlbm91Z2gg\n]aW5jbHVkZSBhIGxpbmUg...>    but    was:<...b2YgYmFzZTY0IGRhdGE7[IG11c3QgYmUgbG9uZyBlbm91Z2ggaW5jbHVkZSBhIGxpbmUgd3JhcCBvciB0d28uLi5Tb21lIGNvbnRlbnQgc28gdGhhdCB3ZSBjYW4gdGVzdCBlbmNvZGluZyBvZiBiYXNlNjQgZGF0YTsgbXVzdCBiZSBsb25nIGVub3VnaCBpbmNsdWRlIGEgbGluZSB3cmFwIG9yIHR3by4uLlNvbWUgY29udGVudCBzbyB0aGF0IHdlIGNhbiB0ZXN0IGVuY29kaW5nIG9mIGJhc2U2NCBkYXRhOyBtdXN0IGJlIGxvbmcgZW5vdWdoIGluY2x1ZGUgYSBsaW5lIHdyYXAgb3IgdHdvLi4uU29tZSBjb250ZW50IHNvIHRoYXQgd2UgY2FuIHRlc3QgZW5jb2Rpbmcgb2YgYmFzZTY0IGRhdGE7IG11c3QgYmUgbG9uZyBlbm91Z2gg]aW5jbHVkZSBhIGxpbmUg...>    testStreamingWrites    [CONTEXT]    {    int    inputPtr    =    0;    int    inputEnd    =    0;    int    lastFullOffset    =    -3;    int    bytesDone    =    0;        int    safeOutputEnd    =    _outputEnd    -    6;    [BUGGY]    int    chunksBeforeLF    =    b64variant.getMaxLineLength()    <<    2;    [BUGGY]        while    (true)    {    if    (inputPtr    >    lastFullOffset)    {    inputEnd    =    _readMore(data,    readBuffer,    inputPtr,    inputEnd,    readBuffer.length);    inputPtr    =    0;    if    (inputEnd    <    3)    {    break;    }    lastFullOffset    =    inputEnd-3;    [CLASS]        UTF8JsonGenerator    [METHOD]    _writeBinary    [RETURN_TYPE]    int        Base64Variant    b64variant    InputStream    data    byte[]    readBuffer    [VARIABLES]    byte[]    FALSE_BYTES    HEX_CHARS    NULL_BYTES    TRUE_BYTES    _entityBuffer    _outputBuffer    bbuf    buf    bytes    data    encodingBuffer    input    keyword    outputBuffer    raw    readBuffer    text    utf8    boolean    _bufferRecyclable    addQuotes    bufferRecyclable    commaBefore    state    byte    BYTE_0    BYTE_BACKSLASH    BYTE_COLON    BYTE_COMMA    BYTE_LBRACKET    BYTE_LCURLY    BYTE_QUOTE    BYTE_RBRACKET    BYTE_RCURLY    BYTE_u    b    InputStream    data    OutputStream    _outputStream    out    Base64Variant    b64variant    int    MAX_BYTES_TO_BUFFER    SURR1_FIRST    SURR1_LAST    SURR2_FIRST    SURR2_LAST    _charBufferLength    _outputEnd    _outputMaxContiguous    _outputTail    amount    b24    blen    bytes    bytesDone    bytesLeft    ch    chunksBeforeLF    dataLength    end    escape    features    i    inputEnd    inputLeft    inputPtr    lastFullOffset    left    len    len2    len3    length    maxUnescaped    missing    offset    outputEnd    outputOffset    outputPtr    ptr    remainingChars    safeInputEnd    safeOutputEnd    start    status    totalLen    char[]    _charBuffer    buf    cbuf    text        	jacksoncore_10606_UTF8JsonGenerator_1_1	1652	1	src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java
394	[PATCH]    x[n    >>    1]    =    2.0    *    f[n    >>    1];	[BUG]    [BUGGY]    x[n    >>    1]    =    2.0    *    f[n    <<    1];    [FE]    java.lang.ArrayIndexOutOfBoundsException:    16    testAdHocData[0]    [CONTEXT]    }    final    int    n    =    f.length;    if    (n    ==    1)    {    transformed[0]    =    0.0;    return    transformed;    }        final    double[]    x    =    new    double[n];    x[0]    =    0.0;    [BUGGY]    x[n    >>    1]    =    2.0    *    f[n    <<    1];    [BUGGY]    for    (int    i    =    1;    i    <    (n    >>    1);    i++)    {    final    double    a    =    FastMath.sin(i    *    FastMath.PI    /    n)    *    (f[i]    +    f[n    -    i]);    final    double    b    =    0.5    *    (f[i]    -    f[n    -    i]);    x[i]    =    a    +    b;    x[n    -    i]    =    a    -    b;    }    FastFourierTransformer    transformer;    transformer    =    new    FastFourierTransformer(DftNormalization.STANDARD);    Complex[]    y    =    transformer.transform(x,    TransformType.FORWARD);        [CLASS]        FastSineTransformer    [METHOD]    fst    [RETURN_TYPE]    double[]        double[]    f    [VARIABLES]    Complex[]    y    boolean    double[]    f    transformed    x    double    a    b    FastFourierTransformer    transformer    long    serialVersionUID    DstNormalization    normalization    int    i    n        	math_107938_FastSineTransformer_1_1	160	1	src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java
395	[PATCH]    int    b24    =    ((int)    readBuffer[inputPtr++])    <<    8;	[BUG]    [BUGGY]    int    b24    =    ((int)readBuffer[inputPtr++])    >>    8;    [FE]    junit.framework.ComparisonFailure:    expected:<[   "[U29tZSBjb250ZW50IHNvIHRoYXQgd2UgY2FuIHRlc3QgZW5jb2Rpbmcgb2YgYmFzZTY0IGRhdGE7\nIG11c3QgYmUgbG9uZyBlbm91Z2ggaW5jbHVkZSBhIGxpbmUgd3JhcCBvciB0d28uLi5Tb21lIGNv\nbnRlbnQgc28gdGhhdCB3ZSBjYW4gdGVzdCBlbmNvZGluZyBvZiBiYXNlNjQgZGF0YTsgbXVzdCBi\nZSBsb25nIGVub3VnaCBpbmNsdWRlIGEgbGluZSB3cmFwIG9yIHR3by4uLlNvbWUgY29udGVudCBz\nbyB0aGF0IHdlIGNhbiB0ZXN0IGVuY29kaW5nIG9mIGJhc2U2NCBkYXRhOyBtdXN0IGJlIGxvbmcg\nZW5vdWdoIGluY2x1ZGUgYSBsaW5lIHdyYXAgb3IgdHdvLi4uU29tZSBjb250ZW50IHNvIHRoYXQg\nd2UgY2FuIHRlc3QgZW5jb2Rpbmcgb2YgYmFzZTY0IGRhdGE7IG11c3QgYmUgbG9uZyBlbm91Z2gg\naW5jbHVkZSBhIGxpbmUgd3JhcCBvciB0d2]8uLi4=   "]>    but    was:<[   "[AG9tACBjAG50AG50AHNvAHRoAHQgAGUgAGFuAHRlAHQgAG5jAGRpAGcgAGYgAGFzADY0AGRhAGE7\nAG11AHQgAGUgAG9uACBlAG91AGggAG5jAHVkACBhAGxpAGUgAHJhACBvACB0AG8uAC5TAG1lAGNv\nAHRlAHQgAG8gAGhhACB3ACBjAG4gAGVzACBlAGNvAGluACBvACBiAHNlADQgAGF0ADsgAHVzACBi\nACBsAG5nAGVuAHVnACBpAGNsAGRlAGEgAGluACB3AGFwAG9yAHR3AC4uAFNvAGUgAG9uAGVuACBz\nACB0AGF0AHdlAGNhACB0AHN0AGVuAG9kAG5nAG9mAGJhAGU2ACBkAHRhACBtAHN0AGJlAGxvAGcg\nAG5vAGdoAGluAGx1AGUgACBsAG5lAHdyAHAgAHIgAHdvAC4uAG9tACBjAG50AG50AHNvAHRoAHQg\nAGUgAGFuAHRlAHQgAG5jAGRpAGcgAGYgAGFzADY0AGRhAGE7AG11AHQgAGUgAG9uACBlAG91AGgg\nAG5jAHVkACBhAGxpAGUgAHJhACBvACB0AG]8uLi4=   "]>    testStreamingWrites    [CONTEXT]    inputEnd    =    _readMore(data,    readBuffer,    inputPtr,    inputEnd,    bytesLeft);    inputPtr    =    0;    if    (inputEnd    <    3)    {    break;    }    lastFullOffset    =    inputEnd-3;    }    if    (_outputTail    >    safeOutputEnd)    {    _flushBuffer();    }    [BUGGY]    int    b24    =    ((int)readBuffer[inputPtr++])    >>    8;    [BUGGY]    b24    |=    ((int)    readBuffer[inputPtr++])    &    0xFF;    b24    =    (b24    <<    8)    |    (((int)    readBuffer[inputPtr++])    &    0xFF);    bytesLeft    -=    3;    _outputTail    =    b64variant.encodeBase64Chunk(b24,    _outputBuffer,    _outputTail);    if    (--chunksBeforeLF    <=    0)    {    _outputBuffer[_outputTail++]    =    '\\';    _outputBuffer[_outputTail++]    =    'n';    chunksBeforeLF    =    b64variant.getMaxLineLength()    >>    2;    }    }    [CLASS]        UTF8JsonGenerator    [METHOD]    _writeBinary    [RETURN_TYPE]    int        Base64Variant    b64variant    InputStream    data    byte[]    readBuffer    int    bytesLeft    [VARIABLES]    byte[]    FALSE_BYTES    HEX_CHARS    NULL_BYTES    TRUE_BYTES    _entityBuffer    _outputBuffer    bbuf    buf    bytes    data    encodingBuffer    input    keyword    outputBuffer    raw    readBuffer    text    utf8    boolean    _bufferRecyclable    addQuotes    bufferRecyclable    commaBefore    state    byte    BYTE_0    BYTE_BACKSLASH    BYTE_COLON    BYTE_COMMA    BYTE_LBRACKET    BYTE_LCURLY    BYTE_QUOTE    BYTE_RBRACKET    BYTE_RCURLY    BYTE_u    b    InputStream    data    OutputStream    _outputStream    out    Base64Variant    b64variant    int    MAX_BYTES_TO_BUFFER    SURR1_FIRST    SURR1_LAST    SURR2_FIRST    SURR2_LAST    _charBufferLength    _outputEnd    _outputMaxContiguous    _outputTail    amount    b24    blen    bytes    bytesLeft    ch    chunksBeforeLF    dataLength    end    escape    features    i    inputEnd    inputLeft    inputPtr    lastFullOffset    left    len    len2    len3    length    maxUnescaped    missing    offset    outputEnd    outputOffset    outputPtr    ptr    remainingChars    safeInputEnd    safeOutputEnd    start    status    totalLen    char[]    _charBuffer    buf    cbuf    text        	jacksoncore_10516_UTF8JsonGenerator_1_1	1605	1	src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java
396	[PATCH]    mantissa    =    mantissa    |    (1L    <<    52);	[BUG]    [BUGGY]    mantissa    =    mantissa    |    (1L    >>    52);    [FE]    junit.framework.AssertionFailedError:    double    hypot(-0.0,    -4.9E-324)    expected    0000000000000001    actual    0000000000000000    entries    [1,    12]    test1[46]    [CONTEXT]    if    (n    <    0)    {        if    (scaledExponent    >    0)    {        return    Double.longBitsToDouble(sign    |    (((long)    scaledExponent)    <<    52)    |    mantissa);    }    else    if    (scaledExponent    >    -53)    {                [BUGGY]    mantissa    =    mantissa    |    (1L    >>    52);    [BUGGY]        final    long    mostSignificantLostBit    =    mantissa    &    (1L    <<    (-scaledExponent));    mantissa    =    mantissa    >>>    (1    -    scaledExponent);    if    (mostSignificantLostBit    !=    0)    {        mantissa++;    }    return    Double.longBitsToDouble(sign    |    mantissa);        [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    scalb    [RETURN_TYPE]    double        final    double    d    final    int    n    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    bita    bitb    bitsum    cotanFlag    leftPlane    negate    negative    subnormal    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    hiPrecOut    lnCoef_i    lnCoef_last    lnm    lns    reduceResults    result    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    a2    aa    ab    absAsinh    absAtanh    b    base    baseA    baseB    c    cD2pH    cRH    cTmpH    cd    cosEpsA    cosEpsB    cosa    cosaa    cosab    cosb    costA    costB    d    d1High    d1Low    d2p    d2pHH    d2pHL    d2pHigh    d2pLow    da    daa    dab    db    denom    denomb    denomr    dx    epsA    epsA2    epsB    epsilon    err    est    esta    estb    extra    facta    factb    finalRemA    finalRemB    fracPartA    fracPartB    fx1    intPartA    intPartB    invx    invy    lna    lnb    lnza    lnzb    lores    mant    na    nb    numer    oneOverXa    p    p2    pi2a    pi2b    pia    pib    r    rHH    rHL    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    resultHigh    resultLow    resultb    rln10a    rln10b    sinEpsA    sinEpsB    sina    sinb    sintA    sintB    sumA    sumB    t    temp    temp2    tempA    tempB    tempC    tmp    tmp1    tmp2    tmpA    tmpB    tmpHigh    tmpLow    x    x2    xa    xb    xbadj    xpa    xpb    xs    y    ya    yaa    yab    yb    z    za    zaa    zab    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    e    exp    exp3    exponent    finalK    i    idx    intFrac    intPart    intVal    k    n    quadrant    scaledExponent    shift    splitFactor    x    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    a    ac    ad    b    bc    bd    bits    c    d    inbits    l    mantissa    mostSignificantLostBit    prod2A    prod2B    prodA    prodB    shpi0    shpiA    shpiB    sign    x    xl    yi        	math_118195_FastMath_1_1	3093	1	src/main/java/org/apache/commons/math3/util/FastMath.java
397	[PATCH]    double    tmpA    =    (prod2A    >>>    12)    /    TWO_POWER_52;        //    High    order    52    bits	[BUG]    [BUGGY]    double    tmpA    =    (prod2A    <<    12)    /    TWO_POWER_52;    //    High    order    52    bits    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -30692    testDerivativeShortcut    [CONTEXT]    bitb    =    (ac    &    0x8000000000000000L    )    !=    0;    prod2B    +=    ac;    bitsum    =    (prod2B    &    0x8000000000000000L)    !=    0;        if    (    (bita    &&    bitb)    ||    ((bita    ||    bitb)    &&    !bitsum)    )    {    prod2A++;    }            [BUGGY]    double    tmpA    =    (prod2A    <<    12)    /    TWO_POWER_52;    [BUGGY]    double    tmpB    =    (((prod2A    &    0xfffL)    <<    40)    +    (prod2B    >>>    24))    /    TWO_POWER_52    /    TWO_POWER_52;        double    sumA    =    tmpA    +    tmpB;    double    sumB    =    -(sumA    -    tmpA    -    tmpB);        result[0]    =    intPart;    result[1]    =    sumA    *    2.0;    result[2]    =    sumB    *    2.0;    }    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    reducePayneHanek    [RETURN_TYPE]    void        double    x    double[]    result    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    bita    bitb    bitsum    cotanFlag    negate    negative    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    hiPrecOut    lnCoef_i    lnCoef_last    lnm    lns    result    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    a2    aa    ab    absAsinh    absAtanh    b    base    baseA    baseB    c    cD2pH    cRH    cTmpH    cd    cosEpsA    cosEpsB    cosa    cosaa    cosab    cosb    costA    costB    d    d1High    d1Low    d2p    d2pHH    d2pHL    d2pHigh    d2pLow    da    daa    dab    db    denom    denomb    denomr    epsilon    err    est    esta    estb    extra    finalRemA    finalRemB    fracPartA    fracPartB    fx1    intPartA    intPartB    lna    lnb    lnza    lnzb    lores    na    nb    numer    p    pi2a    pi2b    rHH    rHL    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    resultHigh    resultLow    rln10a    rln10b    sinEpsA    sinEpsB    sina    sinb    sintA    sintB    sumA    sumB    t    temp    temp2    tempA    tempB    tempC    tmp    tmp1    tmp2    tmpA    tmpB    tmpHigh    tmpLow    x    x2    xa    xb    xbadj    xpa    xpb    y    ya    yaa    yab    yb    z    za    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    e    exp    exponent    finalK    i    idx    intFrac    intPart    intVal    k    shift    splitFactor    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    a    ac    ad    b    bc    bd    bits    c    d    inbits    prod2A    prod2B    prodA    prodB    shpi0    shpiA    shpiB    xl    yi        	math_115826_FastMath_1_1	2209	1	src/main/java/org/apache/commons/math3/util/FastMath.java
398	[PATCH]    byte    val2    =    ((b2    &    SIGN)    ==    0)    ?    (byte)    (b2    >>    4)    :    (byte)    ((b2)    >>    4    ^    0xf0);	[BUG]    [BUGGY]    byte    val2    =    ((b2    &    SIGN)    ==    0)    ?    (byte)    (b2    <<    4)    :    (byte)    ((b2)    >>    4    ^    0xf0);    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -80    testCodeInteger2    [CONTEXT]    encodedData[encodedIndex    +    2]    =    PAD;    encodedData[encodedIndex    +    3]    =    PAD;    }    else    if    (fewerThan24bits    ==    SIXTEENBIT)    {    b1    =    binaryData[dataIndex];    b2    =    binaryData[dataIndex    +    1];    l    =    (byte)    (b2    &    0x0f);    k    =    (byte)    (b1    &    0x03);    byte    val1    =    ((b1    &    SIGN)    ==    0)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);    [BUGGY]    byte    val2    =    ((b2    &    SIGN)    ==    0)    ?    (byte)    (b2    <<    4)    :    (byte)    ((b2)    >>    4    ^    0xf0);    [BUGGY]    encodedData[encodedIndex]    =    lookUpBase64Alphabet[val1];    encodedData[encodedIndex    +    1]    =    lookUpBase64Alphabet[val2    |    (k    <<    4)];    encodedData[encodedIndex    +    2]    =    lookUpBase64Alphabet[l    <<    2];    encodedData[encodedIndex    +    3]    =    PAD;    }    if    (isChunked)    {        if    (chunksSoFar    <    chunckCount)    {    [CLASS]        Base64    [METHOD]    encodeBase64    [RETURN_TYPE]    byte[]        byte[]    binaryData    boolean    isChunked    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    binaryData    encodedData    lookUpBase64Alphabet    pArray    boolean    isChunked    byte    PAD    b1    b2    b3    k    l    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    length    nextSeparatorIndex    long    binaryDataLength    encodedDataLengthLong    fewerThan24bits    lengthDataBits    tripletCount        	codec_497_Base64_1_1	366	1	src/java/org/apache/commons/codec/binary/Base64.java
399	[PATCH]    public    int    getNumRanges()    {    return    ranges.length    >>    1;    }	[BUG]    [BUGGY]    public    int    getNumRanges()    {    return    ranges.length    <<    1;    }    [FE]    java.lang.ArrayIndexOutOfBoundsException:    2    testSingleCharAlterations    [CONTEXT]    [BUGGY]    public    int    getNumRanges()    {    return    ranges.length    <<    1;    }    [CLASS]        CharRanges    [METHOD]    getNumRanges    [RETURN_TYPE]    int        [VARIABLES]    CharRanges    ALL_CODE_UNITS    EMPTY    int[]    members    ranges    boolean        	closure_48224_CharRanges_1_1	149	1	src/com/google/javascript/jscomp/regex/CharRanges.java
400	[PATCH]    result[BYTE_1]    =    (byte)    ((value    &    BYTE_1_MASK)    >>    BYTE_1_SHIFT);	[BUG]    [BUGGY]    result[BYTE_1]    =    (byte)    ((value    ^    BYTE_1_MASK)    >>    BYTE_1_SHIFT);    [FE]    org.apache.commons.compress.archivers.ArchiveException:    No    Archiver    found    for    the    stream    signature    testDetection    [CONTEXT]    public    static    byte[]    getBytes(long    value)    {    byte[]    result    =    new    byte[WORD];    result[0]    =    (byte)    ((value    &    BYTE_MASK));    [BUGGY]    result[BYTE_1]    =    (byte)    ((value    ^    BYTE_1_MASK)    >>    BYTE_1_SHIFT);    [BUGGY]    result[BYTE_2]    =    (byte)    ((value    &    BYTE_2_MASK)    >>    BYTE_2_SHIFT);    result[BYTE_3]    =    (byte)    ((value    &    BYTE_3_MASK)    >>    BYTE_3_SHIFT);    return    result;    }    [CLASS]        ZipLong    [METHOD]    getBytes    [RETURN_TYPE]    byte[]        long    value    [VARIABLES]    byte[]    result    boolean    int    BYTE_1    BYTE_1_MASK    BYTE_1_SHIFT    BYTE_2    BYTE_2_MASK    BYTE_2_SHIFT    BYTE_3    BYTE_3_SHIFT    BYTE_MASK    WORD    offset    long    BYTE_3_MASK    value        	compress_4816_ZipLong_1_1	93	1	src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java
401	[PATCH]    if    ((active0    &    0x4000000000000L)    !=    0L)	[BUG]    [BUGGY]    if    ((active0    ^    1125899906842624L)    !=    0L)    [FE]    junit.framework.AssertionFailedError:    Expression    class    for    position()    expected:<class    org.apache.commons.jxpath.ri.compiler.CoreFunction>    but    was:<class    org.apache.commons.jxpath.ri.compiler.ExtensionFunction>    testCoreFunction    [CONTEXT]    return    jjMoveStringLiteralDfa5_0(active0,    0x8100002000000000L,    active1,    0L);    case    111:    return    jjMoveStringLiteralDfa5_0(active0,    0x240000000000L,    active1,    0L);    case    114:    if    ((active1    &    0x400L)    !=    0L)    return    jjStartNfaWithStates_0(4,    74,    12);    break;    case    115:    return    jjMoveStringLiteralDfa5_0(active0,    0x40114000000000L,    active1,    0x2L);    case    116:    [BUGGY]    if    ((active0    ^    1125899906842624L)    !=    0L)    [BUGGY]    return    jjStartNfaWithStates_0(4,    50,    12);    return    jjMoveStringLiteralDfa5_0(active0,    0x7402000000000000L,    active1,    0L);    default    :    break;    }    return    jjStartNfa_0(3,    active0,    active1);    }    [CLASS]        XPathParserTokenManager    [METHOD]    jjMoveStringLiteralDfa4_0    [RETURN_TYPE]    int        long    old0    long    active0    long    old1    long    active1    [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    IOException    e    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    kind    lexState    pos    state    long    active0    active1    old0    old1        	jxpath_9840_XPathParserTokenManager_1_1	697	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
402	[PATCH]    if    ((active1    &    0xc0000L)    !=    0L)	[BUG]    [BUGGY]    if    ((active1    |    786432L)    !=    0L)    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    '3>4'.    Syntax    error    after:    '3'    testCoreOperationGreaterThan    [CONTEXT]    {    switch    (pos)    {    case    0:    [BUGGY]    if    ((active1    |    786432L)    !=    0L)    [BUGGY]    return    10;    if    ((active0    &    0xfffffffff8000000L)    !=    0L    ||    (active1    &    0x3fffL)    !=    0L)    {    jjmatchedKind    =    78;    return    12;    }    return    -1;    case    1:    if    ((active0    &    0x8000008000000L)    !=    0L)    return    12;    [CLASS]        XPathParserTokenManager    [METHOD]    jjStopStringLiteralDfa_0    [RETURN_TYPE]    int        int    pos    long    active0    long    active1    [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    lexState    pos    long    active0    active1        	jxpath_7840_XPathParserTokenManager_1_1	15	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
403	[PATCH]    int    ix    =    (hash    &    _mainHashMask);	[BUG]    [BUGGY]    int    ix    =    (hash    |    _mainHashMask);    [FE]    java.lang.ArrayIndexOutOfBoundsException:    556301887    testSimpleValidObject    [CONTEXT]    {    int    hash    =    (secondQuad    ==    0)    ?    calcHash(firstQuad)    :    calcHash(firstQuad,    secondQuad);    [BUGGY]    int    ix    =    (hash    |    _mainHashMask);    [BUGGY]    int    val    =    _mainHash[ix];                if    ((((val    >>    8)    ^    hash)    <<    8)    ==    0)    {        Name    name    =    _mainNames[ix];    if    (name    ==    null)    {    return    null;    [CLASS]        BytesToNameCanonicalizer    TableInfo    Bucket    [METHOD]    findName    [RETURN_TYPE]    Name        int    firstQuad    int    secondQuad    [VARIABLES]    boolean    _collListShared    _intern    _mainHashShared    _mainNamesShared    _needRehash    canonicalize    intern    Bucket[]    _collList    collList    Bucket    _next    bucket    next    BytesToNameCanonicalizer    _parent    parent    src    AtomicReference    _tableInfo    int[]    _mainHash    mainHash    int    DEFAULT_TABLE_SIZE    INITIAL_COLLISION_LEN    LAST_VALID_BUCKET    MAX_COLL_CHAIN_FOR_REUSE    MAX_COLL_CHAIN_LENGTH    MAX_ENTRIES_FOR_REUSE    MAX_TABLE_SIZE    MIN_HASH_SIZE    MULT    MULT2    MULT3    _collCount    _collEnd    _count    _hashSeed    _length    _longestCollisionList    _mainHashMask    childCount    collCount    collEnd    count    curr    firstQuad    hash    hashSeed    hashSize    ix    longestCollisionList    mainHashMask    secondQuad    seed    val    Name[]    _mainNames    mainNames    Name    _name    name        	jacksoncore_1367_BytesToNameCanonicalizer_1_1	532	1	src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java
404	[PATCH]    sb.append(_base64ToAsciiC[(b24    >>    18)    &    0x3F]);	[BUG]    [BUGGY]    sb.append(_base64ToAsciiC[(b24    >>    18)    |    63]);    [FE]    junit.framework.ComparisonFailure:    expected:<[H]wdJ>    but    was:<[/]wdJ>    testCharEncoding    [CONTEXT]    public    void    encodeBase64Chunk(StringBuilder    sb,    int    b24)    {    [BUGGY]    sb.append(_base64ToAsciiC[(b24    >>    18)    |    63]);    [BUGGY]    sb.append(_base64ToAsciiC[(b24    >>    12)    &    0x3F]);    sb.append(_base64ToAsciiC[(b24    >>    6)    &    0x3F]);    sb.append(_base64ToAsciiC[b24    &    0x3F]);    }    [CLASS]        Base64Variant    [METHOD]    encodeBase64Chunk    [RETURN_TYPE]    void        StringBuilder    sb    int    b24    [VARIABLES]    byte[]    _base64ToAsciiB    srcB    boolean    _usesPadding    usesPadding    StringBuilder    sb    char    PADDING_CHAR_NONE    _paddingChar    alpha    c    paddingChar    int[]    _asciiToBase64    srcV    String    _name    base64Alphabet    name    int    BASE64_VALUE_INVALID    BASE64_VALUE_PADDING    INT_SPACE    _maxLineLength    alphaLen    b24    ch    i    maxLineLength    ptr    value    long    serialVersionUID    char[]    _base64ToAsciiC    buffer    srcC        	jacksoncore_103_Base64Variant_1_1	254	1	src/main/java/com/fasterxml/jackson/core/Base64Variant.java
405	[PATCH]    i    =    input[_inputPtr++]    &    0xFF;	[BUG]    [BUGGY]    i    =    input[_inputPtr++]    |    255;    [FE]    com.fasterxml.jackson.core.JsonParseException:    Invalid    UTF-8    start    byte    0xff    testStreaming    [CONTEXT]                    final    byte[]    input    =    _inputBuffer;    final    int[]    codes    =    sInputCodesLatin1;    int    q    =    input[_inputPtr++]    &    0xFF;    if    (codes[q]    ==    0)    {    [BUGGY]    i    =    input[_inputPtr++]    |    255;    [BUGGY]    if    (codes[i]    ==    0)    {    q    =    (q    <<    8)    |    i;    i    =    input[_inputPtr++]    &    0xFF;    if    (codes[i]    ==    0)    {    q    =    (q    <<    8)    |    i;    i    =    input[_inputPtr++]    &    0xFF;    if    (codes[i]    ==    0)    {    q    =    (q    <<    8)    |    i;    i    =    input[_inputPtr++]    &    0xFF;    if    (codes[i]    ==    0)    {    [CLASS]        UTF8StreamJsonParser    [METHOD]    _parseFieldName    [RETURN_TYPE]    Name        int    i    [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    codes    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    c    ch    count    decodedData    defaultValue    end    expLen    features    fractLen    i    intLen    intPartLength    integerPartLength    len    minAvailable    nameLen    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    start        	jacksoncore_12131_UTF8StreamJsonParser_1_1	1431	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
406	[PATCH]    _base64ToAsciiB[(bits    >>    6)    &    0x3F]    :    pb;	[BUG]    [BUGGY]    _base64ToAsciiB[(bits    >>    6)    |    63]    :    pb;    [FE]    java.lang.ArrayIndexOutOfBoundsException:    47295    testStreamingWrites    [CONTEXT]    public    int    encodeBase64Partial(int    bits,    int    outputBytes,    byte[]    buffer,    int    outPtr)    {    buffer[outPtr++]    =    _base64ToAsciiB[(bits    >>    18)    &    0x3F];    buffer[outPtr++]    =    _base64ToAsciiB[(bits    >>    12)    &    0x3F];    if    (_usesPadding)    {    byte    pb    =    (byte)    _paddingChar;    buffer[outPtr++]    =    (outputBytes    ==    2)    ?    [BUGGY]    _base64ToAsciiB[(bits    >>    6)    |    63]    :    pb;    [BUGGY]    buffer[outPtr++]    =    pb;    }    else    {    if    (outputBytes    ==    2)    {    buffer[outPtr++]    =    _base64ToAsciiB[(bits    >>    6)    &    0x3F];    }    }    return    outPtr;    }    [CLASS]        Base64Variant    [METHOD]    encodeBase64Partial    [RETURN_TYPE]    int        int    bits    int    outputBytes    byte[]    buffer    int    outPtr    [VARIABLES]    byte[]    _base64ToAsciiB    buffer    srcB    boolean    _usesPadding    usesPadding    byte    pb    char    PADDING_CHAR_NONE    _paddingChar    alpha    c    paddingChar    int[]    _asciiToBase64    srcV    String    _name    base64Alphabet    name    int    BASE64_VALUE_INVALID    BASE64_VALUE_PADDING    INT_SPACE    _maxLineLength    alphaLen    b24    bits    ch    i    maxLineLength    outPtr    outputBytes    ptr    value    long    serialVersionUID    char[]    _base64ToAsciiC    buffer    srcC        	jacksoncore_290_Base64Variant_1_1	333	1	src/main/java/com/fasterxml/jackson/core/Base64Variant.java
407	[PATCH]    char    hex1    =    Character.toUpperCase(Character.forDigit((b    >>    4)    &    0xF,    16));	[BUG]    [BUGGY]    char    hex1    =    Character.toUpperCase(Character.forDigit((b    >>    4)    ^    15,    16));    [FE]    junit.framework.ComparisonFailure:    expected:<=?UTF-8?Q?=[D0=92=D1=81=D0=B5=D0=BC=5F=D0=BF=D1=80=D0=B8=D0=B2=D0=B5=D1=8]2?=>    but    was:<=?UTF-8?Q?=[20=62=21=71=20=45=20=4C=AF=20=4F=21=70=20=48=20=42=20=45=21=7]2?=>    testUTF8RoundTrip    [CONTEXT]    private    static    final    void    encodeQuotedPrintable(int    b,    ByteArrayOutputStream    buffer)    {    buffer.write(ESCAPE_CHAR);    [BUGGY]    char    hex1    =    Character.toUpperCase(Character.forDigit((b    >>    4)    ^    15,    16));    [BUGGY]    char    hex2    =    Character.toUpperCase(Character.forDigit(b    &    0xF,    16));    buffer.write(hex1);    buffer.write(hex2);    }    [CLASS]        QuotedPrintableCodec    [METHOD]    encodeQuotedPrintable    [RETURN_TYPE]    void        int    b    ByteArrayOutputStream    buffer    [VARIABLES]    boolean    byte    ESCAPE_CHAR    SPACE    TAB    BitSet    PRINTABLE_CHARS    char    hex1    hex2    String    charset    ByteArrayOutputStream    buffer    int    b        	codec_4217_QuotedPrintableCodec_1_1	118	1	src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java
408	[PATCH]    else    if    ((active0    &    0x20000000000L)    !=    0L)	[BUG]    [BUGGY]    else    if    ((active0    |    2199023255552L)    !=    0L)    [FE]    junit.framework.ComparisonFailure:    Expression    toString()    for    following::foo:bar    expected:<[follow]ing::foo:bar>    but    was:<[preced]ing::foo:bar>    testLocationPathAxisOther    [CONTEXT]    }    switch(curChar)    {    case    45:    return    jjMoveStringLiteralDfa11_0(active0,    0x800400000000L,    active1,    0L);    case    58:    if    ((active0    &    0x8000000000L)    !=    0L)    return    jjStopAtPos(10,    39);    else    if    ((active0    &    0x10000000000L)    !=    0L)    return    jjStopAtPos(10,    40);    [BUGGY]    else    if    ((active0    |    2199023255552L)    !=    0L)    [BUGGY]    return    jjStopAtPos(10,    41);    else    if    ((active0    &    0x40000000000L)    !=    0L)    return    jjStopAtPos(10,    42);    return    jjMoveStringLiteralDfa11_0(active0,    0x80000000000L,    active1,    0L);    case    97:    return    jjMoveStringLiteralDfa11_0(active0,    0x2000000000000000L,    active1,    0L);    case    98:    return    jjMoveStringLiteralDfa11_0(active0,    0x1000000000000000L,    active1,    0x2000L);    case    103:    return    jjMoveStringLiteralDfa11_0(active0,    0x8000000000000000L,    active1,    0L);    [CLASS]        XPathParserTokenManager    [METHOD]    jjMoveStringLiteralDfa10_0    [RETURN_TYPE]    int        long    old0    long    active0    long    old1    long    active1    [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    IOException    e    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    kind    lexState    pos    state    long    active0    active1    old0    old1        	jxpath_10391_XPathParserTokenManager_1_1	943	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
409	[PATCH]    globalCrc    =    (globalCrc    <<    8)    ^    CRC.crc32Table[temp];	[BUG]    [BUGGY]    globalCrc    =    (globalCrc    <<    8)    |    CRC.crc32Table[temp];    [FE]    java.io.IOException:    BZip2    CRC    error    testBzip2Unarchive    [CONTEXT]    void    updateCRC(int    inCh)    {    int    temp    =    (globalCrc    >>    24)    ^    inCh;    if    (temp    <    0)    {    temp    =    256    +    temp;    }    [BUGGY]    globalCrc    =    (globalCrc    <<    8)    |    CRC.crc32Table[temp];    [BUGGY]    }    [CLASS]        CRC    [METHOD]    updateCRC    [RETURN_TYPE]    void        int    inCh    [VARIABLES]    int[]    crc32Table    int    globalCrc    inCh    newCrc    temp    boolean        	compress_7966_CRC_1_1	118	1	src/main/java/org/apache/commons/compress/compressors/bzip2/CRC.java
410	[PATCH]    if    ((active0    &    0x2000000000000000L)    !=    0L)	[BUG]    [BUGGY]    if    ((active0    |    2305843009213693952L)    !=    0L)    [FE]    junit.framework.AssertionFailedError:    Expression    class    for    substring-before('a',    1)    expected:<class    org.apache.commons.jxpath.ri.compiler.CoreFunction>    but    was:<class    org.apache.commons.jxpath.ri.compiler.ExtensionFunction>    testCoreFunction    [CONTEXT]    {    case    101:    if    ((active1    &    0x1L)    !=    0L)    return    jjStartNfaWithStates_0(14,    64,    12);    break;    case    105:    return    jjMoveStringLiteralDfa15_0(active0,    0x600000000000L,    active1,    0L);    case    108:    return    jjMoveStringLiteralDfa15_0(active0,    0x100000000000L,    active1,    0L);    case    114:    [BUGGY]    if    ((active0    |    2305843009213693952L)    !=    0L)    [BUGGY]    return    jjStartNfaWithStates_0(14,    61,    12);    return    jjMoveStringLiteralDfa15_0(active0,    0x1000000000000000L,    active1,    0L);    case    115:    return    jjMoveStringLiteralDfa15_0(active0,    0x800000000000L,    active1,    0L);    case    116:    return    jjMoveStringLiteralDfa15_0(active0,    0x400000000L,    active1,    0L);    default    :    break;    }    return    jjStartNfa_0(13,    active0,    active1);    [CLASS]        XPathParserTokenManager    [METHOD]    jjMoveStringLiteralDfa14_0    [RETURN_TYPE]    int        long    old0    long    active0    long    old1    long    active1    [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    IOException    e    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    kind    lexState    pos    state    long    active0    active1    old0    old1        	jxpath_10689_XPathParserTokenManager_1_1	1093	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
411	[PATCH]    int    ix    =    (hash    &    _mainHashMask);	[BUG]    [BUGGY]    int    ix    =    (hash    ^    _mainHashMask);    [FE]    java.lang.ArrayIndexOutOfBoundsException:    556266490    testSimpleValidObject    [CONTEXT]    {    int    hash    =    (secondQuad    ==    0)    ?    calcHash(firstQuad)    :    calcHash(firstQuad,    secondQuad);    [BUGGY]    int    ix    =    (hash    ^    _mainHashMask);    [BUGGY]    int    val    =    _mainHash[ix];                if    ((((val    >>    8)    ^    hash)    <<    8)    ==    0)    {        Name    name    =    _mainNames[ix];    if    (name    ==    null)    {    return    null;    [CLASS]        BytesToNameCanonicalizer    TableInfo    Bucket    [METHOD]    findName    [RETURN_TYPE]    Name        int    firstQuad    int    secondQuad    [VARIABLES]    boolean    _collListShared    _intern    _mainHashShared    _mainNamesShared    _needRehash    canonicalize    intern    Bucket[]    _collList    collList    Bucket    _next    bucket    next    BytesToNameCanonicalizer    _parent    parent    src    AtomicReference    _tableInfo    int[]    _mainHash    mainHash    int    DEFAULT_TABLE_SIZE    INITIAL_COLLISION_LEN    LAST_VALID_BUCKET    MAX_COLL_CHAIN_FOR_REUSE    MAX_COLL_CHAIN_LENGTH    MAX_ENTRIES_FOR_REUSE    MAX_TABLE_SIZE    MIN_HASH_SIZE    MULT    MULT2    MULT3    _collCount    _collEnd    _count    _hashSeed    _length    _longestCollisionList    _mainHashMask    childCount    collCount    collEnd    count    curr    firstQuad    hash    hashSeed    hashSize    ix    longestCollisionList    mainHashMask    secondQuad    seed    val    Name[]    _mainNames    mainNames    Name    _name    name        	jacksoncore_1366_BytesToNameCanonicalizer_1_1	532	1	src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java
412	[PATCH]    tt[cftab[ll8[i]    &    0xff]++]    =    i;	[BUG]    [BUGGY]    tt[cftab[ll8[i]    ^    255]++]    =    i;    [FE]    java.lang.ArrayIndexOutOfBoundsException:    26    testBzip2Unarchive    [CONTEXT]    final    byte[]    ll8    =    this.data.ll8;    cftab[0]    =    0;    System.arraycopy(this.data.unzftab,    0,    cftab,    1,    256);    for    (int    i    =    1,    c    =    cftab[0];    i    <=    256;    i++)    {    c    +=    cftab[i];    cftab[i]    =    c;    }    for    (int    i    =    0,    lastShadow    =    this.last;    i    <=    lastShadow;    i++)    {    [BUGGY]    tt[cftab[ll8[i]    ^    255]++]    =    i;    [BUGGY]    }    if    ((this.origPtr    <    0)    ||    (this.origPtr    >=    tt.length))    {    throw    new    IOException(   "stream    corrupted   ");    }    this.su_tPos    =    tt[this.origPtr];    this.su_count    =    0;    this.su_i2    =    0;    this.su_ch2    =    256;    /*    not    a    char    and    not    EOF    */    [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    setupBlock    [RETURN_TYPE]    void        [VARIABLES]    int[][]    base    limit    perm    InputStream    in    inShadow    char[][]    len    temp_charArray2d    Data    data    dataShadow    int[]    base    base_zt    cftab    limit    limit_zt    minLens    perm    perm_zt    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    alphaSize    b    blockSize    blockSize100k    bsBuff    bsBuffShadow    bsLive    bsLiveShadow    c    computedBlockCRC    computedCombinedCRC    curr    currentChar    currentState    destOffs    eob    groupNo    groupPos    hi    i    i16    inUse16    j    last    lastShadow    len    limitLast    magic    maxLen    minLen    minLens_zt    n    nGroups    nInUse    nInUseShadow    nSelectors    nb    nextSym    offs    origPtr    pp    retChar    s    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    t    thech    v    vec    zn    zt    zvec    char[]    getAndMoveToFrontDecode_yy    len_t    length    yy    byte[]    dest    ll8    pos    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    expected    lent    magic0    magic1    magic2    magic3    magic4    magic5    su_z    tmp    boolean[]    inUse        	compress_6174_BZip2CompressorInputStream_1_1	777	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
413	[PATCH]    return    type    |    (mode    &    PERM_MASK);	[BUG]    [BUGGY]    return    type    |    (mode    |    PERM_MASK);    [FE]    junit.framework.AssertionFailedError:    plain    file    expected:<32851>    but    was:<36863>    testModes    [CONTEXT]    protected    int    getMode(int    mode)    {    int    type    =    FILE_FLAG;    if    (isLink())    {    type    =    LINK_FLAG;    }    else    if    (isDirectory())    {    type    =    DIR_FLAG;    }    [BUGGY]    return    type    |    (mode    |    PERM_MASK);    [BUGGY]    }    [CLASS]        AsiExtraField    [METHOD]    getMode    [RETURN_TYPE]    int        int    mode    [VARIABLES]    ZipShort    HEADER_ID    boolean    dirFlag    String    link    name    CRC32    crc    int    WORD    gid    length    mode    newMode    offset    type    uid        	compress_3497_AsiExtraField_1_1	312	1	src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java
414	[PATCH]    int    newSerFeatures    =    _serFeatures    |    feature.getMask();	[BUG]    [BUGGY]    int    newSerFeatures    =    _serFeatures    &    feature.getMask();    [FE]    junit.framework.ComparisonFailure:    expected:<{   "[rudy   ":{   "a   ":3}]}>    but    was:<{   "[a   ":3]}>    testReconfiguringOfWrapping    [CONTEXT]    public    SerializationConfig    with(SerializationFeature    feature)    {    [BUGGY]    int    newSerFeatures    =    _serFeatures    &    feature.getMask();    [BUGGY]    return    (newSerFeatures    ==    _serFeatures)    ?    this    :    new    SerializationConfig(this,    _mapperFeatures,    newSerFeatures);    }    [CLASS]        SerializationConfig    [METHOD]    with    [RETURN_TYPE]    SerializationConfig        SerializationFeature    feature    [VARIABLES]    Include    _serializationInclusion    incl    boolean    SerializationFeature    feature    long    serialVersionUID    int    _serFeatures    mapperFeatures    newMapperFlags    newSerFeatures    serFeatures    FilterProvider    _filterProvider    filters        	jacksondatabind_912_SerializationConfig_1_1	303	1	src/main/java/com/fasterxml/jackson/databind/SerializationConfig.java
415	[PATCH]    byte    val1    =    ((b1    &    SIGN)    ==    0)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);	[BUG]    [BUGGY]    byte    val1    =    ((b1    |    SIGN)    ==    0)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -64    testTriplets    [CONTEXT]    dataIndex    =    i    *    3;    b1    =    binaryData[dataIndex];    b2    =    binaryData[dataIndex    +    1];    b3    =    binaryData[dataIndex    +    2];            l    =    (byte)    (b2    &    0x0f);    k    =    (byte)    (b1    &    0x03);        [BUGGY]    byte    val1    =    ((b1    |    SIGN)    ==    0)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);    [BUGGY]    byte    val2    =    ((b2    &    SIGN)    ==    0)    ?    (byte)    (b2    >>    4)    :    (byte)    ((b2)    >>    4    ^    0xf0);    byte    val3    =    ((b3    &    SIGN)    ==    0)    ?    (byte)    (b3    >>    6)    :    (byte)    ((b3)    >>    6    ^    0xfc);    encodedData[encodedIndex]    =    lookUpBase64Alphabet[val1];                encodedData[encodedIndex    +    1]    =    lookUpBase64Alphabet[val2    |    (k    <<    4)];    encodedData[encodedIndex    +    2]    =    lookUpBase64Alphabet[(l    <<    2)    |    val3];    encodedData[encodedIndex    +    3]    =    lookUpBase64Alphabet[b3    &    0x3f];    [CLASS]        Base64    [METHOD]    encodeBase64    [RETURN_TYPE]    byte[]        byte[]    binaryData    boolean    isChunked    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    binaryData    encodedData    lookUpBase64Alphabet    pArray    boolean    isChunked    byte    PAD    b1    b2    b3    k    l    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    length    nextSeparatorIndex    long    binaryDataLength    encodedDataLengthLong    fewerThan24bits    lengthDataBits    tripletCount        	codec_261_Base64_1_1	319	1	src/java/org/apache/commons/codec/binary/Base64.java
416	[PATCH]    if    ((n    &    0x1)    ==    0)    {	[BUG]    [BUGGY]    if    ((n    ^    1)    ==    0)    {    [FE]    junit.framework.AssertionFailedError:    expected:<0.0>    but    was:<0.04995837495779476>    testCoshAcosh    [CONTEXT]    double    v    =    0;    p[n    -    1]    =    (1    -    n)    *    p[n    -    2];    for    (int    k    =    n    -    1;    k    >=    0;    k    -=    2)    {    v    =    v    *    x2    +    p[k];    if    (k    >    2)    {    p[k    -    2]    =    (1    -    k)    *    p[k    -    1]    +    (k    -    2    *    n)    *    p[k    -    3];    }    else    if    (k    ==    2)    {    p[0]    =    -p[1];    }    }    [BUGGY]    if    ((n    ^    1)    ==    0)    {    [BUGGY]    v    *=    x;    }    coeff    *=    f;    function[n]    =    coeff    *    v;    }    }            [CLASS]        DSCompiler    [METHOD]    acosh    [RETURN_TYPE]    void        final    double[]    operand    final    int    operandOffset    final    double[]    result    final    int    resultOffset    [VARIABLES]    int[][][]    compIndirection    multIndirection    int[][]    dRow    derivativesIndirection    destSizes    mappingI    sizes    srcDerivativesIndirection    boolean    double[]    function    operand    p    result    double    coeff    f    v    x    x2    AtomicReference    compilers    int[]    derivedTermF    derivedTermG    lowerIndirection    orders    term    termJ    termK    int    dSize    derivativeOrder    destO    destP    diag    i    index    j    k    l    lhsOffset    m    maxOrder    maxParameters    n    o    offset1    offset2    offset3    offset4    operandOffset    order    ordersSum    p    parameters    resultOffset    rhsOffset    srcP    vSize    xOffset    yOffset        	math_3463_DSCompiler_1_1	1624	1	src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
417	[PATCH]    index    =    j    &    mask;	[BUG]    [BUGGY]    index    =    j    |    mask;    [FE]    java.lang.ArrayIndexOutOfBoundsException:    159    testContainsKey    [CONTEXT]    return    doRemove(index);    }    if    (states[index]    ==    FREE)    {    return    missingEntries;    }    int    j    =    index;    for    (int    perturb    =    perturb(hash);    states[index]    !=    FREE;    perturb    >>=    PERTURB_SHIFT)    {    j    =    probe(perturb,    j);    [BUGGY]    index    =    j    |    mask;    [BUGGY]    if    (containsKey(key,    index))    {    return    doRemove(index);    }    }    return    missingEntries;    }            [CLASS]    	math_62416_OpenIntToFieldHashMap_1_1	377	1	src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
418	[PATCH]    return    (key.charAt(index)    &    mask(bit))    !=    0;	[BUG]    [BUGGY]    return    (key.charAt(index)    |    mask(bit))    !=    0;    [FE]    junit.framework.AssertionFailedError:    expected:<all>    but    was:<null>    testNextKey    [CONTEXT]    public    boolean    isBitSet(final    String    key,    final    int    bitIndex,    final    int    lengthInBits)    {    if    (key    ==    null    ||    bitIndex    >=    lengthInBits)    {    return    false;    }    final    int    index    =    bitIndex    /    LENGTH;    final    int    bit    =    bitIndex    %    LENGTH;        [BUGGY]    return    (key.charAt(index)    |    mask(bit))    !=    0;    [BUGGY]    }    [CLASS]        StringKeyAnalyzer    [METHOD]    isBitSet    [RETURN_TYPE]    boolean        String    key    final    int    bitIndex    final    int    lengthInBits    [VARIABLES]    StringKeyAnalyzer    INSTANCE    String    key    boolean    long    serialVersionUID    int    LENGTH    MSB    beginIndex1    beginIndex2    bit    bitIndex    endIndex1    endIndex2    i    index    index1    index2    length    lengthInBits    offsetInBits    otherLengthInBits    otherOffsetInBits    x        	collections_11864_StringKeyAnalyzer_1_1	122	1	src/main/java/org/apache/commons/collections4/trie/analyzer/StringKeyAnalyzer.java
419	[PATCH]    final    long    bits    =    ((0xffffffffL    &    src[i    +    srcPos])    <<    shift);	[BUG]    [BUGGY]    final    long    bits    =    ((4294967295L    |    src[i    +    srcPos])    <<    shift);    [FE]    junit.framework.AssertionFailedError:    expected:<3455185089>    but    was:<-1>    testIntArrayToLong    [CONTEXT]    return    dstInit;    }    if    ((nInts    -    1)    *    32    +    dstPos    >=    64)    {    throw    new    IllegalArgumentException(       "(nInts-1)*32+dstPos    is    greather    or    equal    to    than    64   ");    }    long    out    =    dstInit;    int    shift    =    0;    for    (int    i    =    0;    i    <    nInts;    i++    )    {    shift    =    i    *    32    +    dstPos;    [BUGGY]    final    long    bits    =    ((4294967295L    |    src[i    +    srcPos])    <<    shift);    [BUGGY]    final    long    mask    =    0xffffffffL    <<    shift;    out    =    (out    &    ~mask)    |    bits;    }    return    out;    }    [CLASS]        Conversion    [METHOD]    intArrayToLong    [RETURN_TYPE]    long        final    int[]    src    final    int    srcPos    final    long    dstInit    final    int    dstPos    final    int    nInts    [VARIABLES]    boolean    int[]    src    int    dstPos    i    nInts    shift    srcPos    long    bits    dstInit    mask    out        	lang_5887_Conversion_1_1	696	1	src/main/java/org/apache/commons/lang3/Conversion.java
420	[PATCH]    ch    =    _inputBuffer[_inputPtr++]    &    0xFF;	[BUG]    [BUGGY]    ch    =    _inputBuffer[_inputPtr++]    |    255;    [FE]    com.fasterxml.jackson.core.JsonParseException:    Unexpected    end-of-input    in    field    name    testSingleQuotesEnabled    [CONTEXT]    }    quads[qlen++]    =    currQuad;    currQuad    =    ch;    currQuadBytes    =    1;    }    if    (_inputPtr    >=    _inputEnd)    {    if    (!loadMore())    {    _reportInvalidEOF(   "    in    field    name   ");    }    }    [BUGGY]    ch    =    _inputBuffer[_inputPtr++]    |    255;    [BUGGY]    }    if    (currQuadBytes    >    0)    {    if    (qlen    >=    quads.length)    {    _quadBuffer    =    quads    =    growArrayBy(quads,    quads.length);    }    quads[qlen++]    =    currQuad;    }    Name    name    =    _symbols.findName(quads,    qlen);    if    (name    ==    null)    {    [CLASS]        UTF8StreamJsonParser    [METHOD]    _parseApostropheFieldName    [RETURN_TYPE]    Name        [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    codes    quads    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    c    ch    count    currQuad    currQuadBytes    decodedData    defaultValue    end    expLen    features    fractLen    i    intLen    intPartLength    integerPartLength    lastQuadBytes    len    minAvailable    nameLen    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    q1    q2    qlen    start    Name    name        	jacksoncore_12861_UTF8StreamJsonParser_1_1	1876	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
421	[PATCH]    final    long    bits    =    ((0xffffffffL    &    src[i    +    srcPos])    <<    shift);	[BUG]    [BUGGY]    final    long    bits    =    ((4294967295L    ^    src[i    +    srcPos])    <<    shift);    [FE]    junit.framework.AssertionFailedError:    expected:<3455185089>    but    was:<-3455185090>    testIntArrayToLong    [CONTEXT]    return    dstInit;    }    if    ((nInts    -    1)    *    32    +    dstPos    >=    64)    {    throw    new    IllegalArgumentException(       "(nInts-1)*32+dstPos    is    greather    or    equal    to    than    64   ");    }    long    out    =    dstInit;    int    shift    =    0;    for    (int    i    =    0;    i    <    nInts;    i++    )    {    shift    =    i    *    32    +    dstPos;    [BUGGY]    final    long    bits    =    ((4294967295L    ^    src[i    +    srcPos])    <<    shift);    [BUGGY]    final    long    mask    =    0xffffffffL    <<    shift;    out    =    (out    &    ~mask)    |    bits;    }    return    out;    }    [CLASS]        Conversion    [METHOD]    intArrayToLong    [RETURN_TYPE]    long        final    int[]    src    final    int    srcPos    final    long    dstInit    final    int    dstPos    final    int    nInts    [VARIABLES]    boolean    int[]    src    int    dstPos    i    nInts    shift    srcPos    long    bits    dstInit    mask    out        	lang_5886_Conversion_1_1	696	1	src/main/java/org/apache/commons/lang3/Conversion.java
422	[PATCH]    ch    =    (0x80    |    (ch    &    0x3f));	[BUG]    [BUGGY]    ch    =    (0x80    |    (ch    |    63));    [FE]    arrays    first    differed    at    element    [2];    expected:<-75>    but    was:<-1>    testQuoteAsUTF8    [CONTEXT]    if    (ch    <    SURR1_FIRST    ||    ch    >    SURR2_LAST)    {    outputBuffer[outputPtr++]    =    (byte)    (0xe0    |    (ch    >>    12));    if    (outputPtr    >=    outputBuffer.length)    {    outputBuffer    =    byteBuilder.finishCurrentSegment();    outputPtr    =    0;    }    outputBuffer[outputPtr++]    =    (byte)    (0x80    |    ((ch    >>    6)    &    0x3f));    [BUGGY]    ch    =    (0x80    |    (ch    |    63));    [BUGGY]    }    else    {    if    (ch    >    SURR1_LAST)    {    _illegalSurrogate(ch);    }        if    (inputPtr    >=    inputEnd)    {    _illegalSurrogate(ch);    }    ch    =    _convertSurrogate(ch,    text.charAt(inputPtr++));    if    (ch    >    0x10FFFF)    {        [CLASS]        JsonStringEncoder    [METHOD]    quoteAsUTF8    [RETURN_TYPE]    byte[]        String    text    [VARIABLES]    byte[]    HEX_BYTES    outputBuffer    boolean    TextBuffer    _textBuffer    textBuffer    ThreadLocal    _threadEncoder    int[]    escCodes    ByteArrayBuilder    _byteBuilder    byteBuilder    String    text    int    INT_0    INT_BACKSLASH    INT_U    SURR1_FIRST    SURR1_LAST    SURR2_FIRST    SURR2_LAST    ch    escCode    escCodeCount    escape    first    inPtr    inputEnd    inputLen    inputPtr    length    outPtr    outputPtr    second    char[]    HEX_CHARS    _quoteBuffer    outputBuffer        	jacksoncore_4441_JsonStringEncoder_1_1	213	1	src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java
423	[PATCH]    dst[dstPos    +    i]    =    ((0x1    &    (src    >>    shift))    !=    0);	[BUG]    [BUGGY]    dst[dstPos    +    i]    =    ((1    |    (src    >>    shift))    !=    0);    [FE]    junit.framework.AssertionFailedError:    Mismatch    at    index    1    between:    testByteToBinary    [CONTEXT]    final    int    nBools)    {    if    (0    ==    nBools)    {    return    dst;    }    if    (nBools    -    1    +    srcPos    >=    8)    {    throw    new    IllegalArgumentException(   "nBools-1+srcPos    is    greather    or    equal    to    than    8   ");    }    int    shift    =    0;    for    (int    i    =    0;    i    <    nBools;    i++    )    {    shift    =    i    *    1    +    srcPos;    [BUGGY]    dst[dstPos    +    i]    =    ((1    |    (src    >>    shift))    !=    0);    [BUGGY]    }    return    dst;    }    [CLASS]        Conversion    [METHOD]    byteToBinary    [RETURN_TYPE]    boolean[]        final    byte    src    final    int    srcPos    final    boolean[]    dst    final    int    dstPos    final    int    nBools    [VARIABLES]    boolean    byte    src    boolean[]    dst    int    dstPos    i    nBools    shift    srcPos        	lang_7700_Conversion_1_1	1662	1	src/main/java/org/apache/commons/lang3/Conversion.java
424	[PATCH]    c    =    (int)    _inputBuffer[_inputPtr++]    &    0xFF;	[BUG]    [BUGGY]    c    =    (int)_inputBuffer[_inputPtr++]    ^    255;    [FE]    com.fasterxml.jackson.core.JsonParseException:    Unexpected    character    ('Ï'    (code    207))    in    numeric    value:    Decimal    point    not    followed    by    a    digit    testSimpleDouble    [CONTEXT]        if    (c    ==    '.')    {    outBuf[outPtr++]    =    (char)    c;    fract_loop:    while    (true)    {    if    (_inputPtr    >=    _inputEnd    &&    !loadMore())    {    eof    =    true;    break    fract_loop;    }    [BUGGY]    c    =    (int)_inputBuffer[_inputPtr++]    ^    255;    [BUGGY]    if    (c    <    INT_0    ||    c    >    INT_9)    {    break    fract_loop;    }    ++fractLen;    if    (outPtr    >=    outBuf.length)    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    outBuf[outPtr++]    =    (char)    c;    }    [CLASS]        UTF8StreamJsonParser    [METHOD]    _parseFloatText    [RETURN_TYPE]    JsonToken        char[]    outBuf    int    outPtr    int    c    boolean    negative    int    integerPartLength    [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    c    ch    count    decodedData    defaultValue    end    expLen    features    fractLen    i    intLen    intPartLength    integerPartLength    len    minAvailable    nameLen    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    start    char[]    outBuf        	jacksoncore_11980_UTF8StreamJsonParser_1_1	1329	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
425	[PATCH]    long    lvalLong    =    lvalInt    &    0xffffffffL;	[BUG]    [BUGGY]    long    lvalLong    =    lvalInt    ^    4294967295L;    [FE]    junit.framework.AssertionFailedError:    testFoldBitShifts    [CONTEXT]    case    Token.LSH:    result    =    lvalInt    <<    rvalInt;    break;    case    Token.RSH:    result    =    lvalInt    >>    rvalInt;    break;    case    Token.URSH:                [BUGGY]    long    lvalLong    =    lvalInt    ^    4294967295L;    [BUGGY]    result    =    lvalLong    >>>    rvalInt;    break;    default:    throw    new    AssertionError(   "Unknown    shift    operator:       "    +    Token.name(n.getType()));    }    Node    newNumber    =    IR.number(result);    n.getParent().replaceChild(n,    newNumber);    reportCodeChange();    [CLASS]        PeepholeFoldConstants    [METHOD]    tryFoldShift    [RETURN_TYPE]    Node        Node    n    Node    left    Node    right    [VARIABLES]    boolean    late    lval    DiagnosticType    BITWISE_OPERAND_OUT_OF_RANGE    FRACTIONAL_BITWISE_OPERAND    INDEX_OUT_OF_BOUNDS_ERROR    INVALID_GETELEM_INDEX_ERROR    NEGATING_A_NON_NUMBER_ERROR    SHIFT_AMOUNT_OUT_OF_BOUNDS    double    MAX_FOLD_NUMBER    lval    negNum    numValue    result    rval    val    value    int    lvalInt    rvalInt    long    lvalLong    Node    left    n    newNumber    right        	closure_36349_PeepholeFoldConstants_1_1	902	1	src/com/google/javascript/jscomp/PeepholeFoldConstants.java
426	[PATCH]    if    ((type    &    IMAGES)    !=    0)    {	[BUG]    [BUGGY]    if    ((type    |    IMAGES)    !=    0)    {    [FE]    junit.framework.AssertionFailedError    testEquals    [CONTEXT]    super();    setBaseToolTipGenerator(toolTipGenerator);    setBaseURLGenerator(urlGenerator);    if    ((type    &    SHAPES)    !=    0)    {    this.baseShapesVisible    =    true;    }    if    ((type    &    LINES)    !=    0)    {    this.plotLines    =    true;    }    [BUGGY]    if    ((type    |    IMAGES)    !=    0)    {    [BUGGY]    this.plotImages    =    true;    }    if    ((type    &    DISCONTINUOUS)    !=    0)    {    this.plotDiscontinuous    =    true;    }    this.seriesShapesFilled    =    new    BooleanList();    this.baseShapesFilled    =    true;    this.legendLine    =    new    Line2D.Double(-7.0,    0.0,    7.0,    0.0);    this.drawSeriesLineAsPath    =    false;    [CLASS]        StandardXYItemRenderer    State    [METHOD]    <init>    [RETURN_TYPE]    XYURLGenerator)        int    type    XYToolTipGenerator    toolTipGenerator    XYURLGenerator    urlGenerator    [VARIABLES]    BooleanList    seriesShapesFilled    boolean    baseShapesFilled    baseShapesVisible    drawSeriesLineAsPath    lastPointGood    plotDiscontinuous    plotImages    plotLines    Shape    legendLine    GeneralPath    seriesPath    UnitType    gapThresholdType    double    gapThreshold    XYURLGenerator    urlGenerator    XYToolTipGenerator    toolTipGenerator    long    serialVersionUID    int    DISCONTINUOUS    DISCONTINUOUS_LINES    IMAGES    LINES    SHAPES    SHAPES_AND_LINES    seriesIndex    type        	chart_54929_StandardXYItemRenderer_1_1	273	1	source/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java
427	[PATCH]    return    Float.intBitsToFloat(sign    |    ((bits    &    0x7fffffff)    -    1));	[BUG]    [BUGGY]    return    Float.intBitsToFloat(sign    &    ((bits    &    2147483647)    -    1));    [FE]    junit.framework.AssertionFailedError:    float    nextAfter(3.4028235E38,    -0.0)    expected    7f7ffffe    actual    00000000    entries    [7,    1]    test1[50]    [CONTEXT]    return    (direction    <    0)    ?    -Float.MIN_VALUE    :    Float.MIN_VALUE;    }            final    int    bits    =    Float.floatToIntBits(f);    final    int    sign    =    bits    &    0x80000000;    if    ((direction    <    f)    ^    (sign    ==    0))    {    return    Float.intBitsToFloat(sign    |    ((bits    &    0x7fffffff)    +    1));    }    else    {    [BUGGY]    return    Float.intBitsToFloat(sign    &    ((bits    &    2147483647)    -    1));    [BUGGY]    }    }    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    nextAfter    [RETURN_TYPE]    float        final    float    f    final    double    direction    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    bita    bitb    bitsum    cotanFlag    leftPlane    negate    negative    subnormal    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    hiPrecOut    lnCoef_i    lnCoef_last    lnm    lns    reduceResults    result    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    a2    aa    ab    absAsinh    absAtanh    b    base    baseA    baseB    c    cD2pH    cRH    cTmpH    cd    cosEpsA    cosEpsB    cosa    cosaa    cosab    cosb    costA    costB    d    d1High    d1Low    d2p    d2pHH    d2pHL    d2pHigh    d2pLow    da    daa    dab    db    denom    denomb    denomr    direction    dx    epsA    epsA2    epsB    epsilon    err    est    esta    estb    extra    facta    factb    finalRemA    finalRemB    fracPartA    fracPartB    fx1    intPartA    intPartB    invx    invy    lna    lnb    lnza    lnzb    lores    mant    na    nb    numer    oneOverXa    p    p2    pi2a    pi2b    pia    pib    r    rHH    rHL    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    resultHigh    resultLow    resultb    rln10a    rln10b    sinEpsA    sinEpsB    sina    sinb    sintA    sintB    sumA    sumB    t    temp    temp2    tempA    tempB    tempC    tmp    tmp1    tmp2    tmpA    tmpB    tmpHigh    tmpLow    x    x2    xa    xb    xbadj    xpa    xpb    xs    y    ya    yaa    yab    yb    z    za    zaa    zab    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    float    f    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    bits    e    exp    exp3    exponent    finalK    i    idx    intFrac    intPart    intVal    k    mantissa    mostSignificantLostBit    n    quadrant    scaledExponent    shift    sign    splitFactor    x    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    a    ac    ad    b    bc    bd    bits    c    d    inbits    l    mantissa    mostSignificantLostBit    prod2A    prod2B    prodA    prodB    shpi0    shpiA    shpiB    sign    x    xl    yi        	math_118638_FastMath_1_1	3326	1	src/main/java/org/apache/commons/math3/util/FastMath.java
428	[PATCH]    int    c    =    (int)    _inputBuffer[_inputPtr++]    &    0xFF;	[BUG]    [BUGGY]    int    c    =    (int)_inputBuffer[_inputPtr++]    ^    255;    [FE]    junit.framework.ComparisonFailure:    expected:<...11111111111111111111[111111111111111111111111111111111111111111111111111111111111111111111]>    but    was:<...11111111111111111111[]>    testBigNumbers    [CONTEXT]    {        while    (true)    {    if    (_inputPtr    >=    _inputEnd    &&    !loadMore())    {    _textBuffer.setCurrentLength(outPtr);    return    resetInt(negative,    intPartLength);    }    [BUGGY]    int    c    =    (int)_inputBuffer[_inputPtr++]    ^    255;    [BUGGY]    if    (c    >    INT_9    ||    c    <    INT_0)    {    if    (c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {    return    _parseFloatText(outBuf,    outPtr,    c,    negative,    intPartLength);    }    break;    }    if    (outPtr    >=    outBuf.length)    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    [CLASS]        UTF8StreamJsonParser    [METHOD]    _parserNumber2    [RETURN_TYPE]    JsonToken        char[]    outBuf    int    outPtr    boolean    negative    int    intPartLength    [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    match    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    c    ch    count    decodedData    defaultValue    end    features    i    intLen    intPartLength    len    minAvailable    nameLen    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    start    char[]    outBuf        	jacksoncore_11868_UTF8StreamJsonParser_1_1	1253	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
429	[PATCH]    c    +=    (str[i    +    9]    &    0xff)    <<    16;	[BUG]    [BUGGY]    c    +=    (str[i    +    9]    |    255)    <<    16;    [FE]    junit.framework.AssertionFailedError:    testReplaceSinglePlaceholder    [CONTEXT]    c    -=    a;    c    -=    b;    c    ^=    (b    >>>    15);    }    c    +=    limit    -    start;    switch    (limit    -    i)    {    case    11:    c    +=    (str[i    +    10]    &    0xff)    <<    24;    case    10:    [BUGGY]    c    +=    (str[i    +    9]    |    255)    <<    16;    [BUGGY]    case    9:    c    +=    (str[i    +    8]    &    0xff)    <<    8;        case    8:    b    +=    (str[i    +    7]    &    0xff)    <<    24;    case    7:    b    +=    (str[i    +    6]    &    0xff)    <<    16;    case    6:    b    +=    (str[i    +    5]    &    0xff)    <<    8;    case    5:    [CLASS]        GoogleJsMessageIdGenerator    FP    MessageId    [METHOD]    hash32    [RETURN_TYPE]    int        byte[]    str    int    start    int    limit    int    c    [VARIABLES]    byte[]    str    String    meaning    projectId    projectScopedMeaning    str    tcValue    boolean    int    a    b    c    i    limit    start        	closure_30923_GoogleJsMessageIdGenerator_1_1	161	1	src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java
430	[PATCH]    return    (int)    ((m    >>    (k    -    e))    &    0x1L);	[BUG]    [BUGGY]    return    (int)    ((m    >>    (k    -    e))    ^    1L);    [FE]    junit.framework.AssertionFailedError:    expected:<1.0>    but    was:<0.6666666666666666>    testBox    [CONTEXT]    final    long    bits    =    Double.doubleToLongBits(components[i]);    final    int    e    =    exponent(bits);    if    ((k    <    e)    ||    (k    >    offset))    {    return    0;    }    else    if    (k    ==    offset)    {    return    (sign(bits)    ==    0L)    ?    1    :    0;    }    else    if    (k    >    (e    +    52))    {    return    (sign(bits)    ==    0L)    ?    0    :    1;    }    else    {    final    long    m    =    (sign(bits)    ==    0L)    ?    mantissa(bits)    :    -mantissa(bits);    [BUGGY]    return    (int)    ((m    >>    (k    -    e))    ^    1L);    [BUGGY]    }    }    [CLASS]        OrderedTuple    [METHOD]    getBit    [RETURN_TYPE]    int        final    int    i    final    int    k    [VARIABLES]    boolean    nan    negInf    posInf    double[]    components    long[]    encoding    long    EXPONENT_MASK    IMPLICIT_ONE    MANTISSA_MASK    SIGN_MASK    b    bits    l    ll    m    mask    word    int    e    eIndex    falseHash    hash    i    k    limit    lsb    minOffset    msb    multiplier    neededBits    neededLongs    offset    scale    shift    trueHash    vIndex        	math_42068_OrderedTuple_1_1	425	1	src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java
431	[PATCH]    int    z4    =    z0    ^    (z1    ^    (z1    <<    9))    ^    (z2    ^    (z2    <<    21))    ^    (z3    ^    (z3    >>>    21));	[BUG]    [BUGGY]    int    z4    =    z0    ^    (z1    ^    (z1    <<    9))    ^    (z2    &    (z2    <<    21))    ^    (z3    ^    (z3    >>>    21));    [FE]    junit.framework.AssertionFailedError:    expected:<6.259990922080121>    but    was:<0.15214936791410638>    testSampling    [CONTEXT]    final    int    v0    =    v[index];    final    int    vM1=    v[i1[index]];    final    int    vM2=    v[i2[index]];    final    int    vM3=    v[i3[index]];    final    int    z0    =    (0x80000000    &    v[indexRm1])    ^    (0x7FFFFFFF    &    v[indexRm2]);    final    int    z1    =    (v0    ^    (v0    <<    25))^    (vM1    ^    (vM1    >>>    27));    final    int    z2    =    (vM2    >>>    9)    ^    (vM3    ^    (vM3    >>>    1));    final    int    z3    =    z1^    z2;    [BUGGY]    int    z4    =    z0    ^    (z1    ^    (z1    <<    9))    ^    (z2    &    (z2    <<    21))    ^    (z3    ^    (z3    >>>    21));    [BUGGY]    v[index]    =    z3;    v[indexRm1]=    z4;    v[indexRm2]    &=    0x80000000;    index=    indexRm1;                z4    =    z4    ^    ((z4    <<7)    &    0xe46e1700);    [CLASS]        Well19937c    [METHOD]    next    [RETURN_TYPE]    int        final    int    bits    [VARIABLES]    long    seed    serialVersionUID    int    K    M1    M2    M3    bits    indexRm1    indexRm2    seed    v0    vM1    vM2    vM3    z0    z1    z2    z3    z4    boolean        	math_94205_Well19937c_1_1	98	1	src/main/java/org/apache/commons/math3/random/Well19937c.java
432	[PATCH]    (long)(((exp3    +    1023)    &    0x7ff))    <<    52);	[BUG]    [BUGGY]    (long)(((exp3    +    1023)    |    2047))    <<    52);    [FE]    junit.framework.AssertionFailedError:    expected:<0.0>    but    was:<Infinity>    testCbrtPow3    [CONTEXT]    if    (exponent    ==    1024)    {        return    x;    }        int    exp3    =    exponent    /    3;        double    p2    =    Double.longBitsToDouble((inbits    &    0x8000000000000000L)    |    [BUGGY]    (long)(((exp3    +    1023)    |    2047))    <<    52);    [BUGGY]        final    double    mant    =    Double.longBitsToDouble((inbits    &    0x000fffffffffffffL)    |    0x3ff0000000000000L);        double    est    =    -0.010714690733195933;    est    =    est    *    mant    +    0.0875862700108075;    est    =    est    *    mant    +    -0.3058015757857271;    est    =    est    *    mant    +    0.7249995199969751;    est    =    est    *    mant    +    0.5039018405998233;    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    cbrt    [RETURN_TYPE]    double        double    x    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    bita    bitb    bitsum    cotanFlag    leftPlane    negate    negative    subnormal    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    hiPrecOut    lnCoef_i    lnCoef_last    lnm    lns    reduceResults    result    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    a2    aa    ab    absAsinh    absAtanh    b    base    baseA    baseB    c    cD2pH    cRH    cTmpH    cd    cosEpsA    cosEpsB    cosa    cosaa    cosab    cosb    costA    costB    d    d1High    d1Low    d2p    d2pHH    d2pHL    d2pHigh    d2pLow    da    daa    dab    db    denom    denomb    denomr    dx    epsA    epsA2    epsB    epsilon    err    est    esta    estb    extra    finalRemA    finalRemB    fracPartA    fracPartB    fx1    intPartA    intPartB    invx    invy    lna    lnb    lnza    lnzb    lores    mant    na    nb    numer    oneOverXa    p    p2    pi2a    pi2b    pia    pib    r    rHH    rHL    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    resultHigh    resultLow    resultb    rln10a    rln10b    sinEpsA    sinEpsB    sina    sinb    sintA    sintB    sumA    sumB    t    temp    temp2    tempA    tempB    tempC    tmp    tmp1    tmp2    tmpA    tmpB    tmpHigh    tmpLow    x    x2    xa    xb    xbadj    xpa    xpb    xs    y    ya    yaa    yab    yb    z    za    zaa    zab    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    e    exp    exp3    exponent    finalK    i    idx    intFrac    intPart    intVal    k    quadrant    shift    splitFactor    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    a    ac    ad    b    bc    bd    bits    c    d    inbits    prod2A    prod2B    prodA    prodB    shpi0    shpiA    shpiB    xl    yi        	math_117666_FastMath_1_1	2887	1	src/main/java/org/apache/commons/math3/util/FastMath.java
433	[PATCH]    if    (block    <    values.length    &&    (values[block]    &    1    <<    (constant.ordinal()    %    Long.SIZE))    !=    0)    {	[BUG]    [BUGGY]    if    (block    <    values.length    &&    (values[block]    ^    1    <<    (constant.ordinal()    %    Long.SIZE))    !=    0)    {    [FE]    junit.framework.AssertionFailedError:    expected:<[]>    but    was:<[RED,    AMBER,    GREEN]>    test_processBitVectors    [CONTEXT]    public    static    <E    extends    Enum<E>>    EnumSet<E>    processBitVectors(final    Class<E>    enumClass,    long...    values)    {    final    EnumSet<E>    results    =    EnumSet.noneOf(asEnum(enumClass));    values    =    ArrayUtils.clone(Validate.notNull(values));    ArrayUtils.reverse(values);    for    (final    E    constant    :    enumClass.getEnumConstants())    {    final    int    block    =    constant.ordinal()    /    Long.SIZE;    [BUGGY]    if    (block    <    values.length    &&    (values[block]    ^    1    <<    (constant.ordinal()    %    Long.SIZE))    !=    0)    {    [BUGGY]    results.add(constant);    }    }    return    results;    }    [CLASS]        EnumUtils    [METHOD]    processBitVectors    [RETURN_TYPE]    <E        Class<E>    enumClass    values    [VARIABLES]    boolean    long[]    values    E    constant    EnumSet    results    Class    enumClass    String    CANNOT_STORE_S_S_VALUES_IN_S_BITS    ENUM_CLASS_MUST_BE_DEFINED    NULL_ELEMENTS_NOT_PERMITTED    S_DOES_NOT_SEEM_TO_BE_AN_ENUM_TYPE    enumName    int    block        	lang_7879_EnumUtils_1_1	273	1	src/main/java/org/apache/commons/lang3/EnumUtils.java
434	[PATCH]    |    ((str[i    +    6]    &    0xff)    <<    16)	[BUG]    [BUGGY]    |    ((str[i    +    6]    |    255)    <<    16)    [FE]    junit.framework.AssertionFailedError:    testReplaceTwoPlaceholdersNonAlphaOrder    [CONTEXT]    int    a    =    0x9e3779b9;    int    b    =    0x9e3779b9;    int    i;    for    (i    =    start;    i    +    12    <=    limit;    i    +=    12)    {    a    +=    (((str[i    +    0]    &    0xff)    <<    0)    |    ((str[i    +    1]    &    0xff)    <<    8)    |    ((str[i    +    2]    &    0xff)    <<    16)    |    ((str[i    +    3]    &    0xff)    <<    24));    b    +=    (((str[i    +    4]    &    0xff)    <<    0)    |    ((str[i    +    5]    &    0xff)    <<    8)    [BUGGY]    |    ((str[i    +    6]    |    255)    <<    16)    [BUGGY]    |    ((str[i    +    7]    &    0xff)    <<    24));    c    +=    (((str[i    +    8]    &    0xff)    <<    0)    |    ((str[i    +    9]    &    0xff)    <<    8)    |    ((str[i    +    10]    &    0xff)    <<    16)    |    ((str[i    +    11]    &    0xff)    <<    24));        a    -=    b;    a    -=    c;    a    ^=    (c    >>>    13);    b    -=    c;    [CLASS]        GoogleJsMessageIdGenerator    FP    MessageId    [METHOD]    hash32    [RETURN_TYPE]    int        byte[]    str    int    start    int    limit    int    c    [VARIABLES]    byte[]    str    String    meaning    projectId    projectScopedMeaning    str    tcValue    boolean    int    a    b    c    i    limit    start        	closure_30740_GoogleJsMessageIdGenerator_1_1	120	1	src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java
435	[PATCH]    if    ((active0    &    0x100000000000L)    !=    0L)	[BUG]    [BUGGY]    if    ((active0    ^    17592186044416L)    !=    0L)    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    'ancestor-or-self::foo:bar'.    Syntax    error    after:    'ancestor-or-self:'    testLocationPathAxisOther    [CONTEXT]    if    (((active0    &=    old0))    ==    0L)    return    jjStartNfa_0(15,    old0,    0L);    try    {    curChar    =    input_stream.readChar();    }    catch(java.io.IOException    e)    {    jjStopStringLiteralDfa_0(16,    active0,    0L);    return    17;    }    switch(curChar)    {    case    58:    [BUGGY]    if    ((active0    ^    17592186044416L)    !=    0L)    [BUGGY]    return    jjStopAtPos(17,    44);    return    jjMoveStringLiteralDfa18_0(active0,    0x600000000000L);    case    99:    return    jjMoveStringLiteralDfa18_0(active0,    0x400000000L);    case    102:    return    jjMoveStringLiteralDfa18_0(active0,    0x800000000000L);    default    :    break;    }    return    jjStartNfa_0(16,    active0,    0L);    [CLASS]        XPathParserTokenManager    [METHOD]    jjMoveStringLiteralDfa17_0    [RETURN_TYPE]    int        long    old0    long    active0    [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    IOException    e    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    kind    lexState    pos    state    long    active0    old0        	jxpath_10804_XPathParserTokenManager_1_1	1167	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
436	[PATCH]    return    (_generatorFeatures    &    f.getMask())    !=    0;	[BUG]    [BUGGY]    return    (_generatorFeatures    |    f.getMask())    !=    0;    [FE]    junit.framework.AssertionFailedError    testCopy    [CONTEXT]    public    final    boolean    isEnabled(JsonGenerator.Feature    f)    {    [BUGGY]    return    (_generatorFeatures    |    f.getMask())    !=    0;    [BUGGY]    }    [CLASS]        JsonFactory    Feature    [METHOD]    isEnabled    [RETURN_TYPE]    boolean        Feature    f    [VARIABLES]    CharacterEscapes    _characterEscapes    BytesToNameCanonicalizer    _rootByteSymbols    InputDecorator    _inputDecorator    d    String    FORMAT_NAME_JSON    ourFormat    ObjectCodec    _objectCodec    codec    oc    Feature    CANONICALIZE_FIELD_NAMES    INTERN_FIELD_NAMES    f    long    serialVersionUID    int    DEFAULT_FACTORY_FEATURE_FLAGS    DEFAULT_GENERATOR_FEATURE_FLAGS    DEFAULT_PARSER_FEATURE_FLAGS    _factoryFeatures    _generatorFeatures    _parserFeatures    flags    boolean    _defaultState    defaultState    state    SerializableString    DEFAULT_ROOT_VALUE_SEPARATOR    _rootValueSeparator    ThreadLocal    _recyclerRef    OutputDecorator    _outputDecorator    CharsToNameCanonicalizer    _rootCharSymbols        	jacksoncore_834_JsonFactory_1_1	576	1	src/main/java/com/fasterxml/jackson/core/JsonFactory.java
437	[PATCH]    byte    val2    =    ((b2    &    SIGN)    ==    0)    ?    (byte)    (b2    >>    4)    :    (byte)    ((b2)    >>    4    ^    0xf0);	[BUG]    [BUGGY]    byte    val2    =    ((b2    &    SIGN)    ==    0)    ?    (byte)    (b2    >>    4)    :    (byte)    ((b2)    >>    4    |    240);    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testEncodeDecodeSmall    [CONTEXT]    b1    =    binaryData[dataIndex];    b2    =    binaryData[dataIndex    +    1];    b3    =    binaryData[dataIndex    +    2];            l    =    (byte)    (b2    &    0x0f);    k    =    (byte)    (b1    &    0x03);    byte    val1    =    ((b1    &    SIGN)    ==    0)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);    [BUGGY]    byte    val2    =    ((b2    &    SIGN)    ==    0)    ?    (byte)    (b2    >>    4)    :    (byte)    ((b2)    >>    4    |    240);    [BUGGY]    byte    val3    =    ((b3    &    SIGN)    ==    0)    ?    (byte)    (b3    >>    6)    :    (byte)    ((b3)    >>    6    ^    0xfc);    encodedData[encodedIndex]    =    lookUpBase64Alphabet[val1];                encodedData[encodedIndex    +    1]    =    lookUpBase64Alphabet[val2    |    (k    <<    4)];    encodedData[encodedIndex    +    2]    =    lookUpBase64Alphabet[(l    <<    2)    |    val3];    encodedData[encodedIndex    +    3]    =    lookUpBase64Alphabet[b3    &    0x3f];        [CLASS]        Base64    [METHOD]    encodeBase64    [RETURN_TYPE]    byte[]        byte[]    binaryData    boolean    isChunked    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    binaryData    encodedData    lookUpBase64Alphabet    pArray    boolean    isChunked    byte    PAD    b1    b2    b3    k    l    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    length    nextSeparatorIndex    long    binaryDataLength    encodedDataLengthLong    fewerThan24bits    lengthDataBits    tripletCount        	codec_297_Base64_1_1	320	1	src/java/org/apache/commons/codec/binary/Base64.java
438	[PATCH]    result[1]    =    (byte)    ((value    &    BYTE_1_MASK)    >>    BYTE_1_SHIFT);	[BUG]    [BUGGY]    result[1]    =    (byte)    ((value    ^    BYTE_1_MASK)    >>    BYTE_1_SHIFT);    [FE]    java.util.zip.ZipException:    data    starting    at    0    is    in    unknown    format    testJarUnarchive    [CONTEXT]    public    byte[]    getBytes()    {    byte[]    result    =    new    byte[2];    result[0]    =    (byte)    (value    &    BYTE_MASK);    [BUGGY]    result[1]    =    (byte)    ((value    ^    BYTE_1_MASK)    >>    BYTE_1_SHIFT);    [BUGGY]    return    result;    }    [CLASS]        ZipShort    [METHOD]    getBytes    [RETURN_TYPE]    byte[]        [VARIABLES]    byte[]    result    int    BYTE_1_MASK    BYTE_1_SHIFT    BYTE_MASK    offset    value    boolean        	compress_1607_ZipShort_1_1	64	1	src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java
439	[PATCH]    if    ((active0    &    0x2000000000L)    !=    0L)	[BUG]    [BUGGY]    if    ((active0    ^    137438953472L)    !=    0L)    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    'container/vendor/location/address/city'.    Syntax    error    after:    'c'    testBeanContainer    [CONTEXT]    {    jjmatchedKind    =    78;    jjmatchedPos    =    3;    }    return    -1;    }    return    -1;    case    6:    if    ((active0    &    0x200000000L)    !=    0L    ||    (active1    &    0x804L)    !=    0L)    return    12;    [BUGGY]    if    ((active0    ^    137438953472L)    !=    0L)    [BUGGY]    {    if    (jjmatchedPos    <    5)    {    jjmatchedKind    =    78;    jjmatchedPos    =    5;    }    return    -1;    }    if    ((active0    &    0x1000000000L)    !=    0L)    {    [CLASS]        XPathParserTokenManager    [METHOD]    jjStopStringLiteralDfa_0    [RETURN_TYPE]    int        int    pos    long    active0    long    active1    [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    lexState    pos    long    active0    active1        	jxpath_8246_XPathParserTokenManager_1_1	109	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
440	[PATCH]    outBuf[outPtr++]    =    (byte)    (0x80    |    (c    &    0x3f));	[BUG]    [BUGGY]    outBuf[outPtr++]    =    (byte)    (128    &    (c    &    63));    [FE]    junit.framework.AssertionFailedError:    expected:<15>    but    was:<17>    testSimple    [CONTEXT]    if    (c    >=    0x80)    {    break    ascii_loop;    }    outBuf[outPtr++]    =    (byte)    c;    }    }        if    (c    <    0x800)    {    outBuf[outPtr++]    =    (byte)    (0xc0    |    (c    >>    6));    [BUGGY]    outBuf[outPtr++]    =    (byte)    (128    &    (c    &    63));    [BUGGY]    }    else    {        if    (c    <    SURR1_FIRST    ||    c    >    SURR2_LAST)    {    outBuf[outPtr++]    =    (byte)    (0xe0    |    (c    >>    12));    outBuf[outPtr++]    =    (byte)    (0x80    |    ((c    >>    6)    &    0x3f));    outBuf[outPtr++]    =    (byte)    (0x80    |    (c    &    0x3f));    continue;    }        if    (c    >    SURR1_LAST)    {        [CLASS]        UTF8Writer    [METHOD]    write    [RETURN_TYPE]    void        String    str    int    off    int    len    [VARIABLES]    byte[]    _outBuffer    buf    outBuf    boolean    OutputStream    _out    out    char    second    IOContext    _context    ctxt    String    str    int    SURR1_FIRST    SURR1_LAST    SURR2_FIRST    SURR2_LAST    _outBufferEnd    _outPtr    _surrogate    c    code    len    maxInCount    maxOutCount    off    outBufLast    outPtr    ptr        	jacksoncore_6772_UTF8Writer_1_1	314	1	src/main/java/com/fasterxml/jackson/core/io/UTF8Writer.java
441	[PATCH]    index    =    type    ==    null    ?    0    :    type.hashCode()    &    (newLength    -    1);	[BUG]    [BUGGY]    index    =    type    ==    null    ?    0    :    type.hashCode()    ^    (newLength    -    1);    [FE]    java.lang.ArrayIndexOutOfBoundsException:    90346767    testBigHashtable    [CONTEXT]    }    }            int    newLength    =    length    <<    1;    Entry[]    newEntries    =    new    Entry[newLength];    for    (int    i=0;    i<length;    i++)    {    e    =    entries[i];    type    =    e.iType;    [BUGGY]    index    =    type    ==    null    ?    0    :    type.hashCode()    ^    (newLength    -    1);    [BUGGY]    while    (newEntries[index]    !=    null)    {    if    (++index    >=    newLength)    {    index    =    0;    }    }    newEntries[index]    =    e;    }        iSelectEntries    =    newEntries;    [CLASS]        ConverterSet    Entry    [METHOD]    select    [RETURN_TYPE]    Converter        Class<?>    type    [VARIABLES]    Entry    e    boolean    Converter[]    converters    iConverters    Converter    converter    iConverter    Class    iType    type    int    i    index    length    newLength    Entry[]    entries    iSelectEntries    newEntries        	time_11572_ConverterSet_1_1	100	1	src/main/java/org/joda/time/convert/ConverterSet.java
442	[PATCH]    if    ((mod    &    (Modifier.INTERFACE    |    Modifier.ABSTRACT))    ==    0)    {	[BUG]    [BUGGY]    if    ((mod    ^    (Modifier.INTERFACE    |    Modifier.ABSTRACT))    ==    0)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Can    not    construct    instance    of    com.fasterxml.jackson.databind.TestHandlerInstantiation$MyMap,    problem:    No    default    constructor    found    testKeyDeserializer    [CONTEXT]    public    boolean    isConcrete()    {    int    mod    =    _class.getModifiers();    [BUGGY]    if    ((mod    ^    (Modifier.INTERFACE    |    Modifier.ABSTRACT))    ==    0)    {    [BUGGY]    return    true;    }                if    (_class.isPrimitive())    {    return    true;    }    return    false;    }    [CLASS]        JavaType    [METHOD]    isConcrete    [RETURN_TYPE]    boolean        [VARIABLES]    Class    _class    clz    contentClass    raw    subclass    superclass    Object    _typeHandler    _valueHandler    h    typeHandler    valueHandler    boolean    _asStatic    asStatic    long    serialVersionUID    int    _hashCode    additionalHash    mod        	jacksondatabind_144_JavaType_1_1	251	1	src/main/java/com/fasterxml/jackson/databind/JavaType.java
443	[PATCH]    z4    =    z4    ^    ((z4    <<    15)    &    0x9b868000);	[BUG]    [BUGGY]    z4    =    z4    ^    ((z4    <<    15)    ^    -1685684224);    [FE]    junit.framework.AssertionFailedError:    expected:<-1425.0671800559421>    but    was:<-1200.0945401666825>    testInterpolation2    [CONTEXT]    v[index]    =    z3;    v[indexRm1]=    z4;    v[indexRm2]    &=    0x80000000;    index=    indexRm1;                z4    =    z4    ^    ((z4    <<7)    &    0xe46e1700);    [BUGGY]    z4    =    z4    ^    ((z4    <<    15)    ^    -1685684224);    [BUGGY]    return    z4    >>>    (32    -    bits);    }    [CLASS]        Well19937c    [METHOD]    next    [RETURN_TYPE]    int        final    int    bits    [VARIABLES]    long    seed    serialVersionUID    int    K    M1    M2    M3    bits    indexRm1    indexRm2    seed    v0    vM1    vM2    vM3    z0    z1    z2    z3    z4    boolean        	math_94240_Well19937c_1_1	109	1	src/main/java/org/apache/commons/math3/random/Well19937c.java
444	[PATCH]    final    int    z2                            =    (vM2    ^    (vM2    <<    10))    ^    (vM3    <<    26);	[BUG]    [BUGGY]    final    int    z2                =    (vM2    |    (vM2    <<    10))    ^    (vM3    <<    26);    [FE]    junit.framework.AssertionFailedError:    expected:<123.456>    but    was:<118.27678116550054>    testCircleFitting2    [CONTEXT]    final    int    indexRm2    =    iRm2[index];    final    int    v0    =    v[index];    final    int    vM1=    v[i1[index]];    final    int    vM2=    v[i2[index]];    final    int    vM3=    v[i3[index]];        final    int    z0    =    (0xFFFF8000    &    v[indexRm1])    ^    (0x00007FFF    &    v[indexRm2]);    final    int    z1    =    (v0    ^    (v0    <<    24))^    (vM1    ^    (vM1    >>>    30));    [BUGGY]    final    int    z2    =    (vM2    |    (vM2    <<    10))    ^    (vM3    <<    26);    [BUGGY]    final    int    z3    =    z1^    z2;    final    int    z2Prime=    ((z2    <<    9)    ^    (z2    >>>    23))    &    0xfbffffff;    final    int    z2Second    =    ((z2    &    0x00020000)    !=    0)    ?    (z2Prime    ^    0xb729fcec)    :    z2Prime;    int    z4    =    z0    ^    (z1    ^    (z1    >>>    20))    ^    z2Second    ^    z3;    v[index]    =    z3;    v[indexRm1]=    z4;    v[indexRm2]    &=    0xFFFF8000;    index=    indexRm1;        [CLASS]        Well44497b    [METHOD]    next    [RETURN_TYPE]    int        final    int    bits    [VARIABLES]    long    seed    serialVersionUID    int    K    M1    M2    M3    bits    indexRm1    indexRm2    seed    v0    vM1    vM2    vM3    z0    z1    z2    z2Prime    z2Second    z3    z4    boolean        	math_94373_Well44497b_1_1	99	1	src/main/java/org/apache/commons/math3/random/Well44497b.java
445	[PATCH]    int    index    =    name.hashCode()    &    (_buckets.length-1);	[BUG]    [BUGGY]    int    index    =    name.hashCode()    |    (_buckets.length    -    1);    [FE]    java.lang.ArrayIndexOutOfBoundsException:    121    testTypeIdResolver    [CONTEXT]    {    String    name    =    property.getName();    [BUGGY]    int    index    =    name.hashCode()    |    (_buckets.length    -    1);    [BUGGY]                Bucket    tail    =    null;    int    foundIndex    =    -1;    for    (Bucket    bucket    =    _buckets[index];    bucket    !=    null;    bucket    =    bucket.next)    {        if    (foundIndex    <    0    &&    bucket.key.equals(name))    {    [CLASS]        BeanPropertyMap    Bucket    IteratorImpl    [METHOD]    replace    [RETURN_TYPE]    void        SettableBeanProperty    property    [VARIABLES]    boolean    SettableBeanProperty    newProperty    oldProp    prop    property    value    Bucket[]    _buckets    buckets    newBuckets    Bucket    _currentBucket    b    bucket    next    root    tail    String    key    name    newName    propName    long    serialVersionUID    int    _hashMask    _nextBucketIndex    _size    bcount    bucketCount    count    foundIndex    i    index    len    needed    result    size        	jacksondatabind_7353_BeanPropertyMap_1_1	243	1	src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java
446	[PATCH]    zvec    =    (zvec    <<    1)    |    ((bsBuffShadow    >>    bsLiveShadow)    &    1);	[BUG]    [BUGGY]    zvec    =    (zvec    <<    1)    &    ((bsBuffShadow    >>    bsLiveShadow)    &    1);    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -3    testBzip2Unarchive    [CONTEXT]    if    (thech    >=    0)    {    bsBuffShadow    =    (bsBuffShadow    <<    8)    |    thech;    bsLiveShadow    +=    8;    continue;    }    else    {    throw    new    IOException(   "unexpected    end    of    stream   ");    }    }    bsLiveShadow--;    [BUGGY]    zvec    =    (zvec    <<    1)    &    ((bsBuffShadow    >>    bsLiveShadow)    &    1);    [BUGGY]    }    this.bsLive    =    bsLiveShadow;    this.bsBuff    =    bsBuffShadow;    return    dataShadow.perm[zt][zvec    -    dataShadow.base[zt][zn]];    }    [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    getAndMoveToFrontDecode0    [RETURN_TYPE]    int        final    int    groupNo    [VARIABLES]    int[][]    base    limit    perm    InputStream    in    inShadow    char[][]    len    temp_charArray2d    Data    data    dataShadow    int[]    base    base_zt    cftab    limit    limit_zt    minLens    perm    perm_zt    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    alphaSize    b    blockSize    blockSize100k    bsBuff    bsBuffShadow    bsLive    bsLiveShadow    computedBlockCRC    computedCombinedCRC    curr    currentChar    currentState    destOffs    eob    groupNo    groupPos    hi    i    i16    inUse16    j    last    lastShadow    len    limitLast    magic    maxLen    minLen    minLens_zt    n    nGroups    nInUse    nInUseShadow    nSelectors    nb    nextSym    offs    origPtr    pp    retChar    s    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    t    thech    v    vec    zn    zt    zvec    char[]    getAndMoveToFrontDecode_yy    len_t    length    yy    byte[]    dest    ll8    pos    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    expected    lent    magic0    magic1    magic2    magic3    magic4    magic5    su_z    tmp    boolean[]    inUse        	compress_6128_BZip2CompressorInputStream_1_1	751	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
447	[PATCH]    ch    =    (int)    _inputBuffer[_inputPtr++]    &    0xFF;	[BUG]    [BUGGY]    ch    =    (int)_inputBuffer[_inputPtr++]    ^    255;    [FE]    java.lang.IllegalArgumentException:    Illegal    character    '¾'    (code    0xbe)    in    base64    content    testStreaming    [CONTEXT]    final    int    outputEnd    =    buffer.length    -    3;    int    outputCount    =    0;    while    (true)    {        int    ch;    do    {    if    (_inputPtr    >=    _inputEnd)    {    loadMoreGuaranteed();    }    [BUGGY]    ch    =    (int)_inputBuffer[_inputPtr++]    ^    255;    [BUGGY]    }    while    (ch    <=    INT_SPACE);    int    bits    =    b64variant.decodeBase64Char(ch);    if    (bits    <    0)    {    if    (ch    ==    INT_QUOTE)    {    break;    }    bits    =    _decodeBase64Escape(b64variant,    ch,    0);    if    (bits    <    0)    {    continue;    }    [CLASS]        UTF8StreamJsonParser    [METHOD]    _readBinary    [RETURN_TYPE]    int        Base64Variant    b64variant    OutputStream    out    byte[]    buffer    [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    inputBuffer    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    OutputStream    out    Base64Variant    b64variant    int[]    _quadBuffer    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    ch    count    decodedData    end    features    minAvailable    nameLen    origPtr    outputCount    outputEnd    outputPtr    start        	jacksoncore_11218_UTF8StreamJsonParser_1_1	480	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
448	[PATCH]    if    ((MASK_TYPEFIELD    &    bitset)    ==    typefield)    {	[BUG]    [BUGGY]    if    ((MASK_TYPEFIELD    ^    bitset)    ==    typefield)    {    [FE]    java.lang.RuntimeException:    INTERNAL    COMPILER    ERROR.    testUnion    [CONTEXT]    private    JSTypeExpression    getType(int    typefield)    {    [BUGGY]    if    ((MASK_TYPEFIELD    ^    bitset)    ==    typefield)    {    [BUGGY]    return    type;    }    else    {    return    null;    }    }    [CLASS]        JSDocInfo    Visibility    LazilyInitializedInfo    LazilyInitializedDocumentation    StringPosition    TrimmedStringPosition    NamePosition    TypePosition    Marker    [METHOD]    getType    [RETURN_TYPE]    JSTypeExpression        int    typefield    [VARIABLES]    Set    modifies    suppressions    ImmutableList    templateTypeNames    Node    associatedNode    String    author    blockDescription    deprecated    description    fileOverview    item    lendsName    license    meaning    modifies    parameter    reason    reference    returnDescription    sourceComment    suppression    throwsDescription    version    long    serialVersionUID    StringPosition    description    p    int    MASK_CONSISTIDGEN    MASK_CONSTANT    MASK_CONSTRUCTOR    MASK_DEFINE    MASK_DEPRECATED    MASK_DICT    MASK_EXPORT    MASK_EXPOSE    MASK_EXTERNS    MASK_FILEOVERVIEW    MASK_FLAGS    MASK_HIDDEN    MASK_IDGEN    MASK_IMPLICITCAST    MASK_INTERFACE    MASK_JAVADISPATCH    MASK_NOALIAS    MASK_NOCHECK    MASK_NOCOMPILE    MASK_NOSHADOW    MASK_NOSIDEEFFECTS    MASK_OVERRIDE    MASK_PRESERVETRY    MASK_STALBEIDGEN    MASK_STRUCT    MASK_TYPEFIELD    TYPEFIELD_ENUM    TYPEFIELD_RETURN    TYPEFIELD_TYPE    TYPEFIELD_TYPEDEF    bitset    mask    typefield    TrimmedStringPosition    annotation    name    p    TypePosition    p    type    boolean    brackets    includeDocumentation    newVal    value    SourcePosition    nameNode    p    LazilyInitializedDocumentation    documentation    JSTypeExpression    baseType    jsType    thisType    type    Visibility    INHERITED    PRIVATE    PROTECTED    PUBLIC    visibility    List    authors    extendedInterfaces    implementedInterfaces    markers    sees    templateTypeNames    thrownTypes    LazilyInitializedInfo    info    Map    parameters    throwsDescriptions        	closure_11445_JSDocInfo_1_1	1138	1	src/com/google/javascript/rhino/JSDocInfo.java
449	[PATCH]    mt[k]    =    mt[k    +    M]    ^    (y    >>>    1)    ^    MAG01[y    &    0x1];	[BUG]    [BUGGY]    mt[k]    =    mt[k    +    M]    ^    (y    >>>    1)    ^    MAG01[y    ^    1];    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1760860915    testLinearFunction2D    [CONTEXT]    protected    int    next(int    bits)    {    int    y;    if    (mti    >=    N)    {    int    mtNext    =    mt[0];    for    (int    k    =    0;    k    <    N    -    M;    ++k)    {    int    mtCurr    =    mtNext;    mtNext    =    mt[k    +    1];    y    =    (mtCurr    &    0x80000000)    |    (mtNext    &    0x7fffffff);    [BUGGY]    mt[k]    =    mt[k    +    M]    ^    (y    >>>    1)    ^    MAG01[y    ^    1];    [BUGGY]    }    for    (int    k    =    N    -    M;    k    <    N    -    1;    ++k)    {    int    mtCurr    =    mtNext;    mtNext    =    mt[k    +    1];    y    =    (mtCurr    &    0x80000000)    |    (mtNext    &    0x7fffffff);    mt[k]    =    mt[k    +    (M    -    N)]    ^    (y    >>>    1)    ^    MAG01[y    &    0x1];    }    y    =    (mtNext    &    0x80000000)    |    (mt[0]    &    0x7fffffff);    mt[N    -    1]    =    mt[M    -    1]    ^    (y    >>>    1)    ^    MAG01[y    &    0x1];        [CLASS]        MersenneTwister    [METHOD]    next    [RETURN_TYPE]    int        int    bits    [VARIABLES]    int[]    MAG01    mt    seed    boolean    long    l    l0    l1    longMT    seed    serialVersionUID    int    M    N    bits    i    j    k    mtCurr    mtNext    mti    seed    y        	math_93203_MersenneTwister_1_1	239	1	src/main/java/org/apache/commons/math3/random/MersenneTwister.java
450	[PATCH]    }    else    if    (aIsNull    ^    bIsNull)    {	[BUG]    [BUGGY]    }    else    if    (aIsNull    &    bIsNull)    {    [FE]    java.lang.NullPointerException    testDiffer1    [CONTEXT]    private    boolean    diffSlots(StaticSlot<JSType>    slotA,    StaticSlot<JSType>    slotB)    {    boolean    aIsNull    =    slotA    ==    null    ||    slotA.getType()    ==    null;    boolean    bIsNull    =    slotB    ==    null    ||    slotB.getType()    ==    null;    if    (aIsNull    &&    bIsNull)    {    return    false;    [BUGGY]    }    else    if    (aIsNull    &    bIsNull)    {    [BUGGY]    return    true;    }        return    slotA.getType().differsFrom(slotB.getType());    }    [CLASS]        LinkedFlowScope    FlowScopeJoinOp    LinkedFlowSlot    FlatFlowScopeCache    [METHOD]    diffSlots    [RETURN_TYPE]    boolean        JSType>    slotA    JSType>    slotB    [VARIABLES]    LinkedFlowScope    current    currentScope    directParent    joinedScopeA    joinedScopeB    linkedA    linkedB    linkedEquivalent    parent    that    LinkedFlowSlot    currentSlot    lastSlot    parent    slot    StaticSlot    slotA    slotB    boolean    aIsNull    bIsNull    frozen    Set    dirtySymbols    symbolNames    Scope    functionScope    scope    Map    myFlowSlots    otherFlowSlots    slotsA    slotsB    symbols    int    MAX_DEPTH    depth    FlatFlowScopeCache    cache    flattened        	closure_33315_LinkedFlowScope_1_1	320	1	src/com/google/javascript/jscomp/LinkedFlowScope.java
451	[PATCH]    if    ((row    &    0x1)    ==    0)    {	[BUG]    [BUGGY]    if    ((row    |    1)    ==    0)    {    [FE]    junit.framework.AssertionFailedError    polynomial    [CONTEXT]    public    void    visit(int    row,    int    column,    double    value)    {    [BUGGY]    if    ((row    |    1)    ==    0)    {    [BUGGY]    after[column]    -=    value;    }    else    {    after[column]    +=    value;    }    }    [CLASS]        AdamsMoultonIntegrator    Corrector    [METHOD]    visit    [RETURN_TYPE]    void        int    row    int    column    double    value    [VARIABLES]    String    METHOD_NAME    boolean    double[]    after    before    correctedScaled    predictedScaled    previous    scaled    state    vecAbsoluteTolerance    vecRelativeTolerance    y    y0    yDot    yTmp    int    column    row    double    value        	math_66445_AdamsMoultonIntegrator_1_1	386	1	src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator.java
452	[PATCH]    if    ((d    &    0xC0)    !=    0x080)    {	[BUG]    [BUGGY]    if    ((d    |    192)    !=    0x080)    {    [FE]    com.fasterxml.jackson.core.JsonParseException:    Invalid    UTF-8    middle    byte    0xb8    testLongText    [CONTEXT]    private    int    _decodeUtf8_3fast(int    c1)    throws    IOException,    JsonParseException    {    c1    &=    0x0F;    int    d    =    (int)    _inputBuffer[_inputPtr++];    if    ((d    &    0xC0)    !=    0x080)    {    _reportInvalidOther(d    &    0xFF,    _inputPtr);    }    int    c    =    (c1    <<    6)    |    (d    &    0x3F);    d    =    (int)    _inputBuffer[_inputPtr++];    [BUGGY]    if    ((d    |    192)    !=    0x080)    {    [BUGGY]    _reportInvalidOther(d    &    0xFF,    _inputPtr);    }    c    =    (c    <<    6)    |    (d    &    0x3F);    return    c;    }    [CLASS]        UTF8StreamJsonParser    [METHOD]    _decodeUtf8_3fast    [RETURN_TYPE]    int        int    c1    [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    neg    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    codes    quads    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    byteIx    byteLen    c    c1    ch    ch2    cix    code    count    currQuad    currQuadBytes    d    decodedData    defaultValue    digit    end    expLen    features    firstByte    fractLen    i    intLen    intPartLength    integerPartLength    ix    lastQuad    lastQuadBytes    len    max    max2    minAvailable    nameLen    needed    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    q1    q2    qlen    start    value        	jacksoncore_14157_UTF8StreamJsonParser_1_1	2854	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
453	[PATCH]    if    ((_numTypesValid    &    NR_LONG)    ==    0)    {	[BUG]    [BUGGY]    if    ((_numTypesValid    ^    NR_LONG)    ==    0)    {    [FE]    junit.framework.AssertionFailedError:    expected:<1>    but    was:<0>    testLongWrite    [CONTEXT]    public    long    getLongValue()    throws    IOException,    JsonParseException    {    [BUGGY]    if    ((_numTypesValid    ^    NR_LONG)    ==    0)    {    [BUGGY]    if    (_numTypesValid    ==    NR_UNKNOWN)    {    _parseNumericValue(NR_LONG);    }    if    ((_numTypesValid    &    NR_LONG)    ==    0)    {    convertNumberToLong();    }    }    return    _numberLong;    }    [CLASS]        ParserBase    [METHOD]    getLongValue    [RETURN_TYPE]    long        [VARIABLES]    double    MAX_INT_D    MAX_LONG_D    MIN_INT_D    MIN_LONG_D    _numberDouble    value    ByteArrayBuilder    _byteArrayBuilder    int    INT_0    INT_1    INT_2    INT_3    INT_4    INT_5    INT_6    INT_7    INT_8    INT_9    INT_DECIMAL_POINT    INT_E    INT_MINUS    INT_PLUS    INT_e    NR_BIGDECIMAL    NR_BIGINT    NR_DOUBLE    NR_INT    NR_LONG    NR_UNKNOWN    _currInputRow    _currInputRowStart    _expLength    _fractLength    _inputEnd    _inputPtr    _intLength    _numTypesValid    _numberInt    _tokenInputCol    _tokenInputRow    actCh    col    expLen    features    fractLen    intLen    long    MAX_INT_L    MIN_INT_L    _currInputProcessed    _numberLong    _tokenInputTotal    BigDecimal    BD_MAX_INT    BD_MAX_LONG    BD_MIN_INT    BD_MIN_LONG    _numberBigDecimal    char[]    _nameCopyBuffer    buf    JsonReadContext    _parsingContext    ctxt    parent    byte[]    _binaryValue    boolean    _closed    _nameCopied    _numberNegative    negative    TextBuffer    _textBuffer    char    CHAR_NULL    expCh    IOContext    _ioContext    ctxt    BigInteger    BI_MAX_INT    BI_MAX_LONG    BI_MIN_INT    BI_MIN_LONG    _numberBigInt    JsonToken    _nextToken        	jacksoncore_3267_ParserBase_1_1	652	1	src/main/java/com/fasterxml/jackson/core/base/ParserBase.java
454	[PATCH]    buf[++ptr]    =    HEX_CHARS[ch    &    0xF];	[BUG]    [BUGGY]    buf[++ptr]    =    HEX_CHARS[ch    ^    15];    [FE]    java.lang.ArrayIndexOutOfBoundsException:    175    testAboveAsciiEscapeWithReader    [CONTEXT]    if    (ch    >    0xFF)    {    int    hi    =    (ch    >>    8)    &    0xFF;    buf[++ptr]    =    HEX_CHARS[hi    >>    4];    buf[++ptr]    =    HEX_CHARS[hi    &    0xF];    ch    &=    0xFF;    }    else    {    buf[++ptr]    =    '0';    buf[++ptr]    =    '0';    }    buf[++ptr]    =    HEX_CHARS[ch    >>    4];    [BUGGY]    buf[++ptr]    =    HEX_CHARS[ch    ^    15];    [BUGGY]    return;    }        char[]    buf    =    _entityBuffer;    if    (buf    ==    null)    {    buf    =    _allocateEntityBuffer();    }    _outputHead    =    _outputTail;    if    (ch    >    0xFF)    {    int    hi    =    (ch    >>    8)    &    0xFF;    [CLASS]        WriterBasedJsonGenerator    [METHOD]    _prependOrWriteCharacterEscape    [RETURN_TYPE]    void        char    ch    int    escCode    [VARIABLES]    SerializableString    _currentEscape    name    sstr    text    boolean    char    ch    String    escape    int    SHORT_WRITE    _outputEnd    _outputHead    _outputTail    amount    b24    bytes    bytesDone    bytesLeft    chunksBeforeLF    count    dataLength    end    escCode    escLen    escLimit    features    flushLen    hi    i    inputEnd    inputLeft    inputPtr    lastFullOffset    len    length    lo    max    maxNonEscaped    maxRead    missing    newAmount    offset    ptr    qlen    room    safeInputEnd    safeOutputEnd    segmentLen    start    status    textLen    Writer    _writer    w    char[]    HEX_CHARS    _entityBuffer    _outputBuffer    buf    quoted    text        	jacksoncore_16146_WriterBasedJsonGenerator_1_1	1702	1	src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java
455	[PATCH]    if    ((active0    &    0x10000000L)    !=    0L)	[BUG]    [BUGGY]    if    ((active0    ^    268435456L)    !=    0L)    [FE]    junit.framework.AssertionFailedError:    Expression    class    for    2    mod    4    expected:<class    org.apache.commons.jxpath.ri.compiler.CoreOperationMod>    but    was:<class    org.apache.commons.jxpath.ri.compiler.CoreOperationAnd>    testCoreOperationMod    [CONTEXT]    }    switch(curChar)    {    case    97:    return    jjMoveStringLiteralDfa3_0(active0,    0x400000000000000L,    active1,    0x2L);    case    98:    return    jjMoveStringLiteralDfa3_0(active0,    0x7000000000000000L,    active1,    0L);    case    99:    return    jjMoveStringLiteralDfa3_0(active0,    0x20104000000000L,    active1,    0L);    case    100:    [BUGGY]    if    ((active0    ^    268435456L)    !=    0L)    [BUGGY]    return    jjStartNfaWithStates_0(2,    28,    12);    else    if    ((active0    &    0x20000000L)    !=    0L)    return    jjStartNfaWithStates_0(2,    29,    12);    return    jjMoveStringLiteralDfa3_0(active0,    0x80000000L,    active1,    0L);    case    101:    return    jjMoveStringLiteralDfa3_0(active0,    0x420000000000L,    active1,    0L);    case    105:    return    jjMoveStringLiteralDfa3_0(active0,    0x1000000000L,    active1,    0x800L);    case    108:    return    jjMoveStringLiteralDfa3_0(active0,    0x240800000000L,    active1,    0x60L);    [CLASS]        XPathParserTokenManager    [METHOD]    jjMoveStringLiteralDfa2_0    [RETURN_TYPE]    int        long    old0    long    active0    long    old1    long    active1    [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    IOException    e    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    kind    lexState    pos    state    long    active0    active1    old0    old1        	jxpath_9432_XPathParserTokenManager_1_1	554	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
456	[PATCH]    return    (v1    ^    v2)    ?    (    (v1    ^    trueFirst)    ?    1    :    -1    )    :    0;	[BUG]    [BUGGY]    return    (v1    &    v2)    ?    (    (v1    ^    trueFirst)    ?    1    :    -1    )    :    0;    [FE]    junit.framework.AssertionFailedError:    expected:<0>    but    was:<1>    testConstructors    [CONTEXT]    public    int    compare(final    Boolean    b1,    final    Boolean    b2)    {    final    boolean    v1    =    b1.booleanValue();    final    boolean    v2    =    b2.booleanValue();        [BUGGY]    return    (v1    &    v2)    ?    (    (v1    ^    trueFirst)    ?    1    :    -1    )    :    0;    [BUGGY]    }    [CLASS]        BooleanComparator    [METHOD]    compare    [RETURN_TYPE]    int        Boolean    b1    Boolean    b2    [VARIABLES]    BooleanComparator    FALSE_FIRST    TRUE_FIRST    boolean    trueFirst    v1    v2    Boolean    b1    b2    long    serialVersionUID        	collections_2652_BooleanComparator_1_1	141	1	src/main/java/org/apache/commons/collections4/comparators/BooleanComparator.java
457	[PATCH]    return    (holder    &    ~_mask)    |    ((value    <<    _shift_count)    &    _mask);	[BUG]    [BUGGY]    return    (holder    &    ~_mask)    |    ((value    <<    _shift_count)    ^    _mask);    [FE]    junit.framework.AssertionFailedError:    expected:<127>    but    was:<0>    testSetShortValue    [CONTEXT]    public    int    setValue(final    int    holder,    final    int    value)    {    [BUGGY]    return    (holder    &    ~_mask)    |    ((value    <<    _shift_count)    ^    _mask);    [BUGGY]    }    [CLASS]        BitField    [METHOD]    setValue    [RETURN_TYPE]    int        final    int    holder    final    int    value    [VARIABLES]    int    _mask    _shift_count    bit_pattern    count    holder    mask    value    boolean        	lang_3503_BitField_1_1	153	1	src/main/java/org/apache/commons/lang3/BitField.java
458	[PATCH]    out    =    (out    &    ~mask)    |    bits;	[BUG]    [BUGGY]    out    =    (out    |    ~mask)    |    bits;    [FE]    junit.framework.AssertionFailedError:    expected:<12>    but    was:<-1>    testBinaryToInt    [CONTEXT]    if    (nBools    -    1    +    dstPos    >=    32)    {    throw    new    IllegalArgumentException(       "nBools-1+dstPos    is    greather    or    equal    to    than    32   ");    }    int    out    =    dstInit;    int    shift    =    0;    for    (int    i    =    0;    i    <    nBools;    i++    )    {    shift    =    i    *    1    +    dstPos;    final    int    bits    =    (src[i    +    srcPos]    ?    1    :    0)    <<    shift;    final    int    mask    =    0x1    <<    shift;    [BUGGY]    out    =    (out    |    ~mask)    |    bits;    [BUGGY]    }    return    out;    }    [CLASS]        Conversion    [METHOD]    binaryToInt    [RETURN_TYPE]    int        final    boolean[]    src    final    int    srcPos    final    int    dstInit    final    int    dstPos    final    int    nBools    [VARIABLES]    boolean    boolean[]    src    int    bits    dstInit    dstPos    i    mask    nBools    out    shift    srcPos        	lang_6726_Conversion_1_1	1091	1	src/main/java/org/apache/commons/lang3/Conversion.java
459	[PATCH]    b24    |=    (((int)    input[inputPtr++])    &    0xFF)    <<    8;	[BUG]    [BUGGY]    b24    |=    (((int)input[inputPtr++])    |    255)    <<    8;    [FE]    arrays    first    differed    at    element    [1];    expected:<1>    but    was:<-1>    testStreaming    [CONTEXT]    }        int    inputLeft    =    inputEnd    -    inputPtr;    if    (inputLeft    >    0)    {    if    (_outputTail    >    safeOutputEnd)    {    _flushBuffer();    }    int    b24    =    ((int)    input[inputPtr++])    <<    16;    if    (inputLeft    ==    2)    {    [BUGGY]    b24    |=    (((int)input[inputPtr++])    |    255)    <<    8;    [BUGGY]    }    _outputTail    =    b64variant.encodeBase64Partial(b24,    inputLeft,    _outputBuffer,    _outputTail);    }    }    [CLASS]        UTF8JsonGenerator    [METHOD]    _writeBinary    [RETURN_TYPE]    void        Base64Variant    b64variant    byte[]    input    int    inputPtr    final    int    inputEnd    [VARIABLES]    byte[]    FALSE_BYTES    HEX_CHARS    NULL_BYTES    TRUE_BYTES    _entityBuffer    _outputBuffer    bbuf    buf    bytes    data    encodingBuffer    input    keyword    outputBuffer    raw    text    utf8    boolean    _bufferRecyclable    addQuotes    bufferRecyclable    commaBefore    state    byte    BYTE_0    BYTE_BACKSLASH    BYTE_COLON    BYTE_COMMA    BYTE_LBRACKET    BYTE_LCURLY    BYTE_QUOTE    BYTE_RBRACKET    BYTE_RCURLY    BYTE_u    b    OutputStream    _outputStream    out    Base64Variant    b64variant    int    MAX_BYTES_TO_BUFFER    SURR1_FIRST    SURR1_LAST    SURR2_FIRST    SURR2_LAST    _charBufferLength    _outputEnd    _outputMaxContiguous    _outputTail    b24    blen    bytes    ch    chunksBeforeLF    dataLength    end    escape    features    i    inputEnd    inputLeft    inputPtr    left    len    len2    len3    length    maxUnescaped    missing    offset    outputEnd    outputOffset    outputPtr    ptr    remainingChars    safeInputEnd    safeOutputEnd    start    status    totalLen    char[]    _charBuffer    buf    cbuf    text        	jacksoncore_10463_UTF8JsonGenerator_1_1	1574	1	src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java
460	[PATCH]    total    +=    (element    ==    null    ?    0    :    element.hashCode())    ^    count.value;	[BUG]    [BUGGY]    total    +=    (element    ==    null    ?    0    :    element.hashCode())    &    count.value;    [FE]    junit.framework.AssertionFailedError:    expected:<197>    but    was:<3>    testBagHashCode    [CONTEXT]    public    int    hashCode()    {    int    total    =    0;    for    (final    Entry<E,    MutableInteger>    entry    :    map.entrySet())    {    final    E    element    =    entry.getKey();    final    MutableInteger    count    =    entry.getValue();    [BUGGY]    total    +=    (element    ==    null    ?    0    :    element.hashCode())    &    count.value;    [BUGGY]    }    return    total;    }    [CLASS]        AbstractMapBag    BagIterator    MutableInteger    [METHOD]    hashCode    [RETURN_TYPE]    int        [VARIABLES]    Entry    current    entry    Set    uniqueSet    boolean    added    canRemove    changed    result    E    element    MutableInteger    count    Iterator    entryIterator    i    it    Map    map    int    count    entrySize    i    index    itemCount    modCount    mods    myCount    nCopies    otherCount    size    total    value    AbstractMapBag    parent        	collections_1508_AbstractMapBag_1_1	572	1	src/main/java/org/apache/commons/collections4/bag/AbstractMapBag.java
461	[PATCH]    return    Float.intBitsToFloat(MASK_NON_SIGN_INT    &    Float.floatToRawIntBits(x));	[BUG]    [BUGGY]    return    Float.intBitsToFloat(MASK_NON_SIGN_INT    |    Float.floatToRawIntBits(x));    [FE]    junit.framework.AssertionFailedError:    float    abs(-0.0)    expected    0.0    actual    NaN    entries    [1]    test1[1]    [CONTEXT]    public    static    float    abs(final    float    x)    {    [BUGGY]    return    Float.intBitsToFloat(MASK_NON_SIGN_INT    |    Float.floatToRawIntBits(x));    [BUGGY]    }    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    abs    [RETURN_TYPE]    float        final    float    x    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    bita    bitb    bitsum    cotanFlag    leftPlane    negate    negative    subnormal    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    hiPrecOut    lnCoef_i    lnCoef_last    lnm    lns    reduceResults    result    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    a2    aa    ab    absAsinh    absAtanh    b    base    baseA    baseB    c    cD2pH    cRH    cTmpH    cd    cosEpsA    cosEpsB    cosa    cosaa    cosab    cosb    costA    costB    d    d1High    d1Low    d2p    d2pHH    d2pHL    d2pHigh    d2pLow    da    daa    dab    db    denom    denomb    denomr    dx    epsA    epsA2    epsB    epsilon    err    est    esta    estb    extra    facta    factb    finalRemA    finalRemB    fracPartA    fracPartB    fx1    intPartA    intPartB    invx    invy    lna    lnb    lnza    lnzb    lores    mant    na    nb    numer    oneOverXa    p    p2    pi2a    pi2b    pia    pib    r    rHH    rHL    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    resultHigh    resultLow    resultb    rln10a    rln10b    sinEpsA    sinEpsB    sina    sinb    sintA    sintB    sumA    sumB    t    temp    temp2    tempA    tempB    tempC    tmp    tmp1    tmp2    tmpA    tmpB    tmpHigh    tmpLow    x    x2    xa    xb    xbadj    xpa    xpb    xs    y    ya    yaa    yab    yb    z    za    zaa    zab    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    float    x    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    e    exp    exp3    exponent    finalK    i    idx    intFrac    intPart    intVal    k    quadrant    shift    splitFactor    x    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    a    ac    ad    b    bc    bd    bits    c    d    inbits    l    prod2A    prod2B    prodA    prodB    shpi0    shpiA    shpiB    x    xl    yi        	math_118059_FastMath_1_1	3015	1	src/main/java/org/apache/commons/math3/util/FastMath.java
462	[PATCH]    int    ch    =    (int)    b    &    0xFF;	[BUG]    [BUGGY]    int    ch    =    (int)b    |    255;    [FE]    junit.framework.AssertionFailedError    testSimpleValidComment    [CONTEXT]    private    final    static    int    skipSpace(InputAccessor    acc,    byte    b)    throws    IOException    {    while    (true)    {    [BUGGY]    int    ch    =    (int)b    |    255;    [BUGGY]    if    (!(ch    ==    '    '    ||    ch    ==    '\r'    ||    ch    ==    '\n'    ||    ch    ==    '\t'))    {    return    ch;    }    if    (!acc.hasMoreBytes())    {    return    -1;    }    b    =    acc.nextByte();    ch    =    (int)    b    &    0xFF;    }    }    [CLASS]        XmlFactory    [METHOD]    skipSpace    [RETURN_TYPE]    int        InputAccessor    acc    byte    b    [VARIABLES]    XMLOutputFactory    _xmlOutputFactory    f    outf    xmlOut    boolean    byte    BYTE_D    BYTE_EXCL    BYTE_HYPHEN    BYTE_LT    BYTE_QMARK    BYTE_l    BYTE_m    BYTE_x    UTF8_BOM_1    UTF8_BOM_2    UTF8_BOM_3    b    String    FORMAT_NAME_XML    _cfgNameForTextElement    _jdkXmlInFactory    _jdkXmlOutFactory    content    matchStr    name    nameForTextElem    InputAccessor    acc    long    serialVersionUID    int    DEFAULT_XML_GENERATOR_FEATURE_FLAGS    DEFAULT_XML_PARSER_FEATURE_FLAGS    _xmlGeneratorFeatures    _xmlParserFeatures    ch    i    len    offset    xgFeatures    xpFeatures    XMLInputFactory    _xmlInputFactory    f    inf    xmlIn        	jacksonxml_292_XmlFactory_1_1	803	1	src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java
463	[PATCH]    while    (((m    &    0x001ffffffffffffeL)    !=    0)    &&    ((m    &    0x1)    ==    0))    {	[BUG]    [BUGGY]    while    (((m    &    0x001ffffffffffffeL)    !=    0)    &&    ((m    |    1)    ==    0))    {    [FE]    junit.framework.AssertionFailedError:    expected:<[10    /    1]>    but    was:<[5,629,499,534,213,120    /    562,949,953,421,312]>    testLongFormat    [CONTEXT]    final    long    exponent    =    bits    &    0x7ff0000000000000L;    long    m=    bits    &    0x000fffffffffffffL;    if    (exponent    !=    0)    {        m    |=    0x0010000000000000L;    }    if    (sign    !=    0)    {    m    =    -m;    }    int    k    =    ((int)    (exponent    >>    52))    -    1075;    [BUGGY]    while    (((m    &    0x001ffffffffffffeL)    !=    0)    &&    ((m    |    1)    ==    0))    {    [BUGGY]    m    =    m    >>    1;    ++k;    }    if    (k    <    0)    {    numerator    =    BigInteger.valueOf(m);    denominator    =    BigInteger.ZERO.flipBit(-k);    }    else    {    numerator    =    BigInteger.valueOf(m).multiply(BigInteger.ZERO.flipBit(k));    denominator    =    BigInteger.ONE;    [CLASS]        BigFraction    [METHOD]    <init>    [RETURN_TYPE]    BigFraction(double)        final    double    value    [VARIABLES]    BigInteger    ONE_HUNDRED    den    denominator    gcd    num    numerator    boolean    BigFraction    FOUR_FIFTHS    MINUS_ONE    ONE    ONE_FIFTH    ONE_HALF    ONE_QUARTER    ONE_THIRD    THREE_FIFTHS    THREE_QUARTERS    TWO    TWO_FIFTHS    TWO_QUARTERS    TWO_THIRDS    ZERO    long    bits    exponent    m    serialVersionUID    sign    double    value    int    k        	math_14098_BigFraction_1_1	193	1	src/main/java/org/apache/commons/math3/fraction/BigFraction.java
464	[PATCH]    }    else    if    ((ch    &    0xF0)    ==    0xE0)    {    //    3    bytes    (0x0800    -    0xFFFF)	[BUG]    [BUGGY]    }    else    if    ((ch    ^    240)    ==    0xE0)    {    //    3    bytes    (0x0800    -    0xFFFF)    [FE]    com.fasterxml.jackson.core.JsonParseException:    Invalid    UTF-8    start    byte    0xec    testUtf8Name3Bytes    [CONTEXT]    int    ch    =    quads[ix    >>    2];    int    byteIx    =    (ix    &    3);    ch    =    (ch    >>    ((3    -    byteIx)    <<    3))    &    0xFF;    ++ix;    if    (ch    >    127)    {    int    needed;    if    ((ch    &    0xE0)    ==    0xC0)    {    ch    &=    0x1F;    needed    =    1;    [BUGGY]    }    else    if    ((ch    ^    240)    ==    0xE0)    {        [BUGGY]    ch    &=    0x0F;    needed    =    2;    }    else    if    ((ch    &    0xF8)    ==    0xF0)    {    ch    &=    0x07;    needed    =    3;    }    else    {    _reportInvalidInitial(ch);    needed    =    ch    =    1;    }    if    ((ix    +    needed)    >    byteLen)    {    [CLASS]        UTF8StreamJsonParser    [METHOD]    addName    [RETURN_TYPE]    Name        int[]    quads    int    qlen    int    lastQuadBytes    [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    codes    quads    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    String    baseName    int    _quad1    amount    bits    byteIx    byteLen    c    ch    ch2    cix    count    currQuad    currQuadBytes    decodedData    defaultValue    end    expLen    features    fractLen    i    intLen    intPartLength    integerPartLength    ix    lastQuad    lastQuadBytes    len    minAvailable    nameLen    needed    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    q1    q2    qlen    start    char[]    cbuf        	jacksoncore_12996_UTF8StreamJsonParser_1_1	1985	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
465	[PATCH]    b24    |=    (((int)    input[inputPtr++])    &    0xFF)    <<    8;	[BUG]    [BUGGY]    b24    |=    (((int)input[inputPtr++])    |    255)    <<    8;    [FE]    arrays    first    differed    at    element    [1];    expected:<-1>    but    was:<1>    testBase64UsingReader    [CONTEXT]    }        int    inputLeft    =    inputEnd    -    inputPtr;    if    (inputLeft    >    0)    {    if    (_outputTail    >    safeOutputEnd)    {    _flushBuffer();    }    int    b24    =    ((int)    input[inputPtr++])    <<    16;    if    (inputLeft    ==    2)    {    [BUGGY]    b24    |=    (((int)input[inputPtr++])    |    255)    <<    8;    [BUGGY]    }    _outputTail    =    b64variant.encodeBase64Partial(b24,    inputLeft,    _outputBuffer,    _outputTail);    }    }    [CLASS]        WriterBasedJsonGenerator    [METHOD]    _writeBinary    [RETURN_TYPE]    void        Base64Variant    b64variant    byte[]    input    int    inputPtr    final    int    inputEnd    [VARIABLES]    byte[]    input    SerializableString    _currentEscape    name    sstr    text    boolean    Base64Variant    b64variant    int    SHORT_WRITE    _outputEnd    _outputHead    _outputTail    amount    b24    bytes    chunksBeforeLF    dataLength    end    escCode    escLen    escLimit    features    flushLen    i    inputEnd    inputLeft    inputPtr    len    length    max    maxNonEscaped    missing    newAmount    offset    ptr    qlen    room    safeInputEnd    safeOutputEnd    segmentLen    start    status    textLen    Writer    _writer    w    char[]    HEX_CHARS    _entityBuffer    _outputBuffer    buf    quoted    text        	jacksoncore_15778_WriterBasedJsonGenerator_1_1	1482	1	src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java
466	[PATCH]    a    +=    (str[i    +    2]    &    0xff)    <<    16;	[BUG]    [BUGGY]    a    +=    (str[i    +    2]    ^    255)    <<    16;    [FE]    junit.framework.AssertionFailedError:    testReplaceTwoPlaceholdersNonAlphaOrder    [CONTEXT]    b    +=    (str[i    +    7]    &    0xff)    <<    24;    case    7:    b    +=    (str[i    +    6]    &    0xff)    <<    16;    case    6:    b    +=    (str[i    +    5]    &    0xff)    <<    8;    case    5:    b    +=    (str[i    +    4]    &    0xff);    case    4:    a    +=    (str[i    +    3]    &    0xff)    <<    24;    case    3:    [BUGGY]    a    +=    (str[i    +    2]    ^    255)    <<    16;    [BUGGY]    case    2:    a    +=    (str[i    +    1]    &    0xff)    <<    8;    case    1:    a    +=    (str[i    +    0]    &    0xff);        }        a    -=    b;    a    -=    c;    [CLASS]        GoogleJsMessageIdGenerator    FP    MessageId    [METHOD]    hash32    [RETURN_TYPE]    int        byte[]    str    int    start    int    limit    int    c    [VARIABLES]    byte[]    str    String    meaning    projectId    projectScopedMeaning    str    tcValue    boolean    int    a    b    c    i    limit    start        	closure_31023_GoogleJsMessageIdGenerator_1_1	176	1	src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java
467	[PATCH]    b    +=    (str[i    +    7]    &    0xff)    <<    24;	[BUG]    [BUGGY]    b    +=    (str[i    +    7]    |    255)    <<    24;    [FE]    junit.framework.AssertionFailedError:    testReplaceSinglePlaceholder    [CONTEXT]    c    +=    limit    -    start;    switch    (limit    -    i)    {    case    11:    c    +=    (str[i    +    10]    &    0xff)    <<    24;    case    10:    c    +=    (str[i    +    9]    &    0xff)    <<    16;    case    9:    c    +=    (str[i    +    8]    &    0xff)    <<    8;        case    8:    [BUGGY]    b    +=    (str[i    +    7]    |    255)    <<    24;    [BUGGY]    case    7:    b    +=    (str[i    +    6]    &    0xff)    <<    16;    case    6:    b    +=    (str[i    +    5]    &    0xff)    <<    8;    case    5:    b    +=    (str[i    +    4]    &    0xff);    case    4:    a    +=    (str[i    +    3]    &    0xff)    <<    24;    case    3:    a    +=    (str[i    +    2]    &    0xff)    <<    16;    [CLASS]        GoogleJsMessageIdGenerator    FP    MessageId    [METHOD]    hash32    [RETURN_TYPE]    int        byte[]    str    int    start    int    limit    int    c    [VARIABLES]    byte[]    str    String    meaning    projectId    projectScopedMeaning    str    tcValue    boolean    int    a    b    c    i    limit    start        	closure_30953_GoogleJsMessageIdGenerator_1_1	166	1	src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java
468	[PATCH]    }    else    if    ((i16    &    0x00FF)    ==    0)    {    //    UTF-16LE	[BUG]    [BUGGY]    }    else    if    ((i16    |    255)    ==    0)    {    //    UTF-16LE    [FE]    com.fasterxml.jackson.core.JsonParseException:    Illegal    character    ((CTRL-CHAR,    code    0)):    only    regular    white    space    (\r,    \n,    \t)    is    allowed    between    tokens    testJsonWithFiles    [CONTEXT]    private    boolean    checkUTF16(int    i16)    {    if    ((i16    &    0xFF00)    ==    0)    {    _bigEndian    =    true;    [BUGGY]    }    else    if    ((i16    |    255)    ==    0)    {        [BUGGY]    _bigEndian    =    false;    }    else    {    return    false;    }            _bytesPerChar    =    2;    return    true;    }    [CLASS]        ByteSourceJsonBootstrapper    [METHOD]    checkUTF16    [RETURN_TYPE]    boolean        int    i16    [VARIABLES]    byte[]    _inputBuffer    inputBuffer    boolean    _bigEndian    _bufferRecyclable    canonicalize    foundEncoding    intern    byte    UTF8_BOM_1    UTF8_BOM_2    UTF8_BOM_3    b    InputStream    _in    in    IOContext    _context    ctxt    int    _bytesPerChar    _inputEnd    _inputProcessed    _inputPtr    ch    i    i16    inputLen    inputStart    len    msw    parserFeatures    quad        	jacksoncore_7347_ByteSourceJsonBootstrapper_1_1	464	1	src/main/java/com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.java
469	[PATCH]    if    ((e    &    0x1)    !=    0)    {	[BUG]    [BUGGY]    if    ((e    ^    1)    !=    0)    {    [FE]    junit.framework.AssertionFailedError:    expected:<99.99999999999999>    but    was:<-100.0>    testReciprocal    [CONTEXT]    public    static    int    pow(final    int    k,    int    e)    throws    NotPositiveException    {    if    (e    <    0)    {    throw    new    NotPositiveException(LocalizedFormats.EXPONENT,    e);    }    int    result    =    1;    int    k2p=    k;    while    (e    !=    0)    {    [BUGGY]    if    ((e    ^    1)    !=    0)    {    [BUGGY]    result    *=    k2p;    }    k2p    *=    k2p;    e    =    e    >>    1;    }    return    result;    }    [CLASS]        ArithmeticUtils    [METHOD]    pow    [RETURN_TYPE]    int        final    int    k    int    e    [VARIABLES]    boolean    int    e    k    k2p    result        	math_108626_ArithmeticUtils_1_1	650	1	src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java
470	[PATCH]    int    exponent    =    (int)    ((bits    &    0x7ff0000000000000L)    >>    52)    -    1023;	[BUG]    [BUGGY]    int    exponent    =    (int)    ((bits    |    9218868437227405312L)    >>    52)    -    1023;    [FE]    junit.framework.AssertionFailedError:    x=1.0E-30    expected:<NaN>    but    was:<-3.3333333333333333E-31>    testDerivativeShortcut    [CONTEXT]        mant    =    new    int[field.getRadixDigits()];    sign    =    1;    exp    =    0;    nans    =    FINITE;    this.field    =    field;    long    bits    =    Double.doubleToLongBits(x);    long    mantissa    =    bits    &    0x000fffffffffffffL;    [BUGGY]    int    exponent    =    (int)    ((bits    |    9218868437227405312L)    >>    52)    -    1023;    [BUGGY]    if    (exponent    ==    -1023)    {        if    (x    ==    0)    {        if    ((bits    &    0x8000000000000000L)    !=    0)    {    sign    =    -1;    }    return;    }    [CLASS]        Dfp    [METHOD]    <init>    [RETURN_TYPE]    DfpField,double)        DfpField    field    double    x    [VARIABLES]    boolean    byte    FINITE    INFINITE    QNAN    SNAN    nans    sign    x    double    x    DfpField    field    int[]    mant    String    ADD_TRAP    ALIGN_TRAP    DIVIDE_TRAP    GREATER_THAN_TRAP    LESS_THAN_TRAP    MULTIPLY_TRAP    NAN_STRING    NEG_INFINITY_STRING    NEW_INSTANCE_TRAP    NEXT_AFTER_TRAP    POS_INFINITY_STRING    SQRT_TRAP    TRUNC_TRAP    int    ERR_SCALE    MAX_EXP    MIN_EXP    RADIX    exp    exponent    i    x    long    bits    mantissa    Dfp    xdfp        	math_18388_Dfp_1_1	269	1	src/main/java/org/apache/commons/math3/dfp/Dfp.java
471	[PATCH]    int    newDeserFeatures    =    _deserFeatures    &    ~feature.getMask();	[BUG]    [BUGGY]    int    newDeserFeatures    =    _deserFeatures    |    ~feature.getMask();    [FE]    junit.framework.AssertionFailedError    testCopy    [CONTEXT]    public    DeserializationConfig    without(DeserializationFeature    feature)    {    [BUGGY]    int    newDeserFeatures    =    _deserFeatures    |    ~feature.getMask();    [BUGGY]    return    (newDeserFeatures    ==    _deserFeatures)    ?    this    :    new    DeserializationConfig(this,    _mapperFeatures,    newDeserFeatures);    }    [CLASS]        DeserializationConfig    [METHOD]    without    [RETURN_TYPE]    DeserializationConfig        DeserializationFeature    feature    [VARIABLES]    LinkedNode    _problemHandlers    problemHandlers    DeserializationFeature    feature    boolean    long    serialVersionUID    int    _deserFeatures    deserFeatures    mapperFeatures    newDeserFeatures    newMapperFlags    JsonNodeFactory    _nodeFactory    f        	jacksondatabind_40_DeserializationConfig_1_1	367	1	src/main/java/com/fasterxml/jackson/databind/DeserializationConfig.java
472	[PATCH]    byte    val1    =    ((b1    &    SIGN)    ==    0)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);	[BUG]    [BUGGY]    byte    val1    =    ((b1    ^    SIGN)    ==    0)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -45    testEncodeDecodeSmall    [CONTEXT]    encodedData[encodedIndex    +    1]    =    lookUpBase64Alphabet[k    <<    4];    encodedData[encodedIndex    +    2]    =    PAD;    encodedData[encodedIndex    +    3]    =    PAD;    }    else    if    (fewerThan24bits    ==    SIXTEENBIT)    {    b1    =    binaryData[dataIndex];    b2    =    binaryData[dataIndex    +    1];    l    =    (byte)    (b2    &    0x0f);    k    =    (byte)    (b1    &    0x03);        [BUGGY]    byte    val1    =    ((b1    ^    SIGN)    ==    0)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);    [BUGGY]    byte    val2    =    ((b2    &    SIGN)    ==    0)    ?    (byte)    (b2    >>    4)    :    (byte)    ((b2)    >>    4    ^    0xf0);    encodedData[encodedIndex]    =    lookUpBase64Alphabet[val1];    encodedData[encodedIndex    +    1]    =    lookUpBase64Alphabet[val2    |    (k    <<    4)];    encodedData[encodedIndex    +    2]    =    lookUpBase64Alphabet[l    <<    2];    encodedData[encodedIndex    +    3]    =    PAD;    }    if    (isChunked)    {        [CLASS]        Base64    [METHOD]    encodeBase64    [RETURN_TYPE]    byte[]        byte[]    binaryData    boolean    isChunked    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    binaryData    encodedData    lookUpBase64Alphabet    pArray    boolean    isChunked    byte    PAD    b1    b2    b3    k    l    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    length    nextSeparatorIndex    long    binaryDataLength    encodedDataLengthLong    fewerThan24bits    lengthDataBits    tripletCount        	codec_469_Base64_1_1	365	1	src/java/org/apache/commons/codec/binary/Base64.java
473	[PATCH]    if    ((active1    &    0x4L)    !=    0L)	[BUG]    [BUGGY]    if    ((active1    ^    4L)    !=    0L)    [FE]    junit.framework.AssertionFailedError:    Expression    class    for    local-name()    expected:<class    org.apache.commons.jxpath.ri.compiler.CoreFunction>    but    was:<class    org.apache.commons.jxpath.ri.compiler.ExtensionFunction>    testCoreFunction    [CONTEXT]    return    jjMoveStringLiteralDfa7_0(active0,    0x40010000000000L,    active1,    0x2L);    case    100:    return    jjMoveStringLiteralDfa7_0(active0,    0x880000000000L,    active1,    0L);    case    103:    if    ((active1    &    0x800L)    !=    0L)    return    jjStartNfaWithStates_0(6,    75,    12);    break;    case    105:    return    jjMoveStringLiteralDfa7_0(active0,    0x7000660000000000L,    active1,    0x1L);    case    110:    [BUGGY]    if    ((active1    ^    4L)    !=    0L)    [BUGGY]    return    jjStartNfaWithStates_0(6,    66,    12);    return    jjMoveStringLiteralDfa7_0(active0,    0x820000000000000L,    active1,    0L);    case    111:    return    jjMoveStringLiteralDfa7_0(active0,    0x2104000000000L,    active1,    0L);    case    115:    return    jjMoveStringLiteralDfa7_0(active0,    0x400000000L,    active1,    0L);    case    116:    if    ((active0    &    0x200000000L)    !=    0L)    return    jjStartNfaWithStates_0(6,    33,    12);    break;    [CLASS]        XPathParserTokenManager    [METHOD]    jjMoveStringLiteralDfa6_0    [RETURN_TYPE]    int        long    old0    long    active0    long    old1    long    active1    [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    IOException    e    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    kind    lexState    pos    state    long    active0    active1    old0    old1        	jxpath_10053_XPathParserTokenManager_1_1	788	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
474	[PATCH]    |    ((str[i    +    6]    &    0xff)    <<    16)	[BUG]    [BUGGY]    |    ((str[i    +    6]    ^    255)    <<    16)    [FE]    junit.framework.AssertionFailedError:    testReplaceTwoPlaceholdersNonAlphaOrder    [CONTEXT]    int    a    =    0x9e3779b9;    int    b    =    0x9e3779b9;    int    i;    for    (i    =    start;    i    +    12    <=    limit;    i    +=    12)    {    a    +=    (((str[i    +    0]    &    0xff)    <<    0)    |    ((str[i    +    1]    &    0xff)    <<    8)    |    ((str[i    +    2]    &    0xff)    <<    16)    |    ((str[i    +    3]    &    0xff)    <<    24));    b    +=    (((str[i    +    4]    &    0xff)    <<    0)    |    ((str[i    +    5]    &    0xff)    <<    8)    [BUGGY]    |    ((str[i    +    6]    ^    255)    <<    16)    [BUGGY]    |    ((str[i    +    7]    &    0xff)    <<    24));    c    +=    (((str[i    +    8]    &    0xff)    <<    0)    |    ((str[i    +    9]    &    0xff)    <<    8)    |    ((str[i    +    10]    &    0xff)    <<    16)    |    ((str[i    +    11]    &    0xff)    <<    24));        a    -=    b;    a    -=    c;    a    ^=    (c    >>>    13);    b    -=    c;    [CLASS]        GoogleJsMessageIdGenerator    FP    MessageId    [METHOD]    hash32    [RETURN_TYPE]    int        byte[]    str    int    start    int    limit    int    c    [VARIABLES]    byte[]    str    String    meaning    projectId    projectScopedMeaning    str    tcValue    boolean    int    a    b    c    i    limit    start        	closure_30739_GoogleJsMessageIdGenerator_1_1	120	1	src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java
475	[PATCH]    sb.append(   "0x   ").append(Integer.toString(ranges[i]    -    (i    &    1),    16));	[BUG]    [BUGGY]    sb.append(   "0x   ").append(Integer.toString(ranges[i]    -    (i    |    1),    16));    [FE]    junit.framework.ComparisonFailure:    expected:<[0x[0-0x1    0x4    0x9]]>    but    was:<[0x[-1-0x1    0x1    0x4]]>    testCharRangesFactories    [CONTEXT]    public    String    toString()    {    StringBuilder    sb    =    new    StringBuilder();    sb.append('[');    for    (int    i    =    0;    i    <    ranges.length;    ++i)    {    if    ((i    &    1)    !=    0    &&    ranges[i]    ==    ranges[i    -    1]    +    1)    {    continue;    }    if    (i    !=    0)    {    sb.append((i    &    1)    ==    0    ?    '    '    :    '-');    }    [BUGGY]    sb.append(   "0x   ").append(Integer.toString(ranges[i]    -    (i    |    1),    16));    [BUGGY]    }    sb.append(']');    return    sb.toString();    }    [CLASS]        CharRanges    [METHOD]    toString    [RETURN_TYPE]    String        [VARIABLES]    CharRanges    ALL_CODE_UNITS    EMPTY    other    sub    subtrahendRanges    int[]    aRanges    bRanges    clipped    difference    intersection    members    minuend    newArr    out    q    r    ranges    shiftedRanges    subRanges    subtrahend    superRanges    boolean    StringBuilder    sb    int    i        	closure_48791_CharRanges_1_1	405	1	src/com/google/javascript/jscomp/regex/CharRanges.java
476	[PATCH]    final    int    sign    =    bits    &    0x80000000;	[BUG]    [BUGGY]    final    int    sign    =    bits    |    -2147483648;    [FE]    junit.framework.AssertionFailedError:    expected:<1.7014118E38>    but    was:<-1.701412E38>    testFloatScalbSpecialCases    [CONTEXT]    }    if    (n    <    -277)    {    return    (f    >    0)    ?    0.0f    :    -0.0f;    }    if    (n    >    276)    {    return    (f    >    0)    ?    Float.POSITIVE_INFINITY    :    Float.NEGATIVE_INFINITY;    }        final    int    bits    =    Float.floatToIntBits(f);    [BUGGY]    final    int    sign    =    bits    |    -2147483648;    [BUGGY]    intexponent=    (bits    >>>    23)    &    0xff;    int    mantissa    =    bits    &    0x007fffff;        int    scaledExponent    =    exponent    +    n;    if    (n    <    0)    {        if    (scaledExponent    >    0)    {        [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    scalb    [RETURN_TYPE]    float        final    float    f    final    int    n    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    bita    bitb    bitsum    cotanFlag    leftPlane    negate    negative    subnormal    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    hiPrecOut    lnCoef_i    lnCoef_last    lnm    lns    reduceResults    result    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    a2    aa    ab    absAsinh    absAtanh    b    base    baseA    baseB    c    cD2pH    cRH    cTmpH    cd    cosEpsA    cosEpsB    cosa    cosaa    cosab    cosb    costA    costB    d    d1High    d1Low    d2p    d2pHH    d2pHL    d2pHigh    d2pLow    da    daa    dab    db    denom    denomb    denomr    dx    epsA    epsA2    epsB    epsilon    err    est    esta    estb    extra    facta    factb    finalRemA    finalRemB    fracPartA    fracPartB    fx1    intPartA    intPartB    invx    invy    lna    lnb    lnza    lnzb    lores    mant    na    nb    numer    oneOverXa    p    p2    pi2a    pi2b    pia    pib    r    rHH    rHL    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    resultHigh    resultLow    resultb    rln10a    rln10b    sinEpsA    sinEpsB    sina    sinb    sintA    sintB    sumA    sumB    t    temp    temp2    tempA    tempB    tempC    tmp    tmp1    tmp2    tmpA    tmpB    tmpHigh    tmpLow    x    x2    xa    xb    xbadj    xpa    xpb    xs    y    ya    yaa    yab    yb    z    za    zaa    zab    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    float    f    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    bits    e    exp    exp3    exponent    finalK    i    idx    intFrac    intPart    intVal    k    mantissa    mostSignificantLostBit    n    quadrant    scaledExponent    shift    sign    splitFactor    x    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    a    ac    ad    b    bc    bd    bits    c    d    inbits    l    mantissa    mostSignificantLostBit    prod2A    prod2B    prodA    prodB    shpi0    shpiA    shpiB    sign    x    xl    yi        	math_118366_FastMath_1_1	3161	1	src/main/java/org/apache/commons/math3/util/FastMath.java
477	[PATCH]    if    ((_numTypesValid    &    NR_LONG)    ==    0)    {	[BUG]    [BUGGY]    if    ((_numTypesValid    ^    NR_LONG)    ==    0)    {    [FE]    junit.framework.AssertionFailedError:    expected:<1>    but    was:<0>    testLongWrite    [CONTEXT]    public    long    getLongValue()    throws    IOException,    JsonParseException    {    if    ((_numTypesValid    &    NR_LONG)    ==    0)    {    if    (_numTypesValid    ==    NR_UNKNOWN)    {    _parseNumericValue(NR_LONG);    }    [BUGGY]    if    ((_numTypesValid    ^    NR_LONG)    ==    0)    {    [BUGGY]    convertNumberToLong();    }    }    return    _numberLong;    }    [CLASS]        ParserBase    [METHOD]    getLongValue    [RETURN_TYPE]    long        [VARIABLES]    double    MAX_INT_D    MAX_LONG_D    MIN_INT_D    MIN_LONG_D    _numberDouble    value    ByteArrayBuilder    _byteArrayBuilder    int    INT_0    INT_1    INT_2    INT_3    INT_4    INT_5    INT_6    INT_7    INT_8    INT_9    INT_DECIMAL_POINT    INT_E    INT_MINUS    INT_PLUS    INT_e    NR_BIGDECIMAL    NR_BIGINT    NR_DOUBLE    NR_INT    NR_LONG    NR_UNKNOWN    _currInputRow    _currInputRowStart    _expLength    _fractLength    _inputEnd    _inputPtr    _intLength    _numTypesValid    _numberInt    _tokenInputCol    _tokenInputRow    actCh    col    expLen    features    fractLen    intLen    long    MAX_INT_L    MIN_INT_L    _currInputProcessed    _numberLong    _tokenInputTotal    BigDecimal    BD_MAX_INT    BD_MAX_LONG    BD_MIN_INT    BD_MIN_LONG    _numberBigDecimal    char[]    _nameCopyBuffer    buf    JsonReadContext    _parsingContext    ctxt    parent    byte[]    _binaryValue    boolean    _closed    _nameCopied    _numberNegative    negative    TextBuffer    _textBuffer    char    CHAR_NULL    expCh    IOContext    _ioContext    ctxt    BigInteger    BI_MAX_INT    BI_MAX_LONG    BI_MIN_INT    BI_MIN_LONG    _numberBigInt    JsonToken    _nextToken        	jacksoncore_3278_ParserBase_1_1	656	1	src/main/java/com/fasterxml/jackson/core/base/ParserBase.java
478	[PATCH]    ch    =    (int)    _inputBuffer[_inputPtr++]    &    0xFF;	[BUG]    [BUGGY]    ch    =    (int)_inputBuffer[_inputPtr++]    |    255;    [FE]    java.io.IOException:    Failed    (variant    MIME,    data    length    1):    Failed    to    decode    VALUE_STRING    as    base64    (MIME):    Illegal    character    'ÿ'    (code    0xff)    in    base64    content    testBase64UsingInputStream    [CONTEXT]    ByteArrayBuilder    builder    =    _getByteArrayBuilder();        while    (true)    {        int    ch;    do    {    if    (_inputPtr    >=    _inputEnd)    {    loadMoreGuaranteed();    }    [BUGGY]    ch    =    (int)_inputBuffer[_inputPtr++]    |    255;    [BUGGY]    }    while    (ch    <=    INT_SPACE);    int    bits    =    b64variant.decodeBase64Char(ch);    if    (bits    <    0)    {    if    (ch    ==    INT_QUOTE)    {    return    builder.toByteArray();    }    bits    =    _decodeBase64Escape(b64variant,    ch,    0);    if    (bits    <    0)    {    continue;    }    [CLASS]        UTF8StreamJsonParser    [METHOD]    _decodeBase64    [RETURN_TYPE]    byte[]        Base64Variant    b64variant    [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    neg    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    Base64Variant    b64variant    int[]    _quadBuffer    arr    codes    quads    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    ByteArrayBuilder    builder    int    _quad1    amount    bits    byteIx    byteLen    c    c1    ch    ch2    cix    code    count    currQuad    currQuadBytes    d    decodedData    defaultValue    digit    end    expLen    features    firstByte    fractLen    i    intLen    intPartLength    integerPartLength    ix    lastQuad    lastQuadBytes    len    mask    max    max2    minAvailable    more    nameLen    needed    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    q1    q2    qlen    start    value        	jacksoncore_14434_UTF8StreamJsonParser_1_1	3063	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
479	[PATCH]    if    ((active0    &    0xfffffffff8000000L)    !=    0L    ||    (active1    &    0x3fffL)    !=    0L)	[BUG]    [BUGGY]    if    ((active0    ^    -134217728L)    !=    0L    ||    (active1    &    0x3fffL)    !=    0L)    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    '3>4'.    Syntax    error    after:    '3'    testCoreOperationGreaterThan    [CONTEXT]    {    switch    (pos)    {    case    0:    if    ((active1    &    0xc0000L)    !=    0L)    return    10;    [BUGGY]    if    ((active0    ^    -134217728L)    !=    0L    ||    (active1    &    0x3fffL)    !=    0L)    [BUGGY]    {    jjmatchedKind    =    78;    return    12;    }    return    -1;    case    1:    if    ((active0    &    0x8000008000000L)    !=    0L)    return    12;    if    ((active0    &    0xfff7fffff0000000L)    !=    0L    ||    (active1    &    0x3fffL)    !=    0L)    {    [CLASS]        XPathParserTokenManager    [METHOD]    jjStopStringLiteralDfa_0    [RETURN_TYPE]    int        int    pos    long    active0    long    active1    [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    lexState    pos    long    active0    active1        	jxpath_7850_XPathParserTokenManager_1_1	17	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
480	[PATCH]    ch    =    (int)    _inputBuffer[_inputPtr++]    &    0xFF;	[BUG]    [BUGGY]    ch    =    (int)_inputBuffer[_inputPtr++]    |    255;    [FE]    java.lang.IllegalArgumentException:    Illegal    character    'ÿ'    (code    0xff)    in    base64    content    testStreaming    [CONTEXT]    final    int    outputEnd    =    buffer.length    -    3;    int    outputCount    =    0;    while    (true)    {        int    ch;    do    {    if    (_inputPtr    >=    _inputEnd)    {    loadMoreGuaranteed();    }    [BUGGY]    ch    =    (int)_inputBuffer[_inputPtr++]    |    255;    [BUGGY]    }    while    (ch    <=    INT_SPACE);    int    bits    =    b64variant.decodeBase64Char(ch);    if    (bits    <    0)    {    if    (ch    ==    INT_QUOTE)    {    break;    }    bits    =    _decodeBase64Escape(b64variant,    ch,    0);    if    (bits    <    0)    {    continue;    }    [CLASS]        UTF8StreamJsonParser    [METHOD]    _readBinary    [RETURN_TYPE]    int        Base64Variant    b64variant    OutputStream    out    byte[]    buffer    [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    inputBuffer    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    OutputStream    out    Base64Variant    b64variant    int[]    _quadBuffer    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    ch    count    decodedData    end    features    minAvailable    nameLen    origPtr    outputCount    outputEnd    outputPtr    start        	jacksoncore_11219_UTF8StreamJsonParser_1_1	480	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
481	[PATCH]    if    (denominator==Integer.MIN_VALUE    &&    (numerator&1)==0)    {	[BUG]    [BUGGY]    if    (denominator==Integer.MIN_VALUE    &&    (numerator    |    1)==0)    {    [FE]    java.lang.ArithmeticException:    overflow:    can't    negate    testReducedFactory_int_int    [CONTEXT]    public    static    Fraction    getReducedFraction(int    numerator,    int    denominator)    {    if    (denominator    ==    0)    {    throw    new    ArithmeticException(   "The    denominator    must    not    be    zero   ");    }    if    (numerator==0)    {    return    ZERO;    }        [BUGGY]    if    (denominator==Integer.MIN_VALUE    &&    (numerator    |    1)==0)    {    [BUGGY]    numerator/=2;    denominator/=2;    }    if    (denominator    <    0)    {    if    (numerator==Integer.MIN_VALUE    ||    denominator==Integer.MIN_VALUE)    {    throw    new    ArithmeticException(   "overflow:    can't    negate   ");    }    numerator    =    -numerator;    denominator    =    -denominator;    }    [CLASS]        Fraction    [METHOD]    getReducedFraction    [RETURN_TYPE]    Fraction        int    numerator    int    denominator    [VARIABLES]    Fraction    FOUR_FIFTHS    ONE    ONE_FIFTH    ONE_HALF    ONE_QUARTER    ONE_THIRD    THREE_FIFTHS    THREE_QUARTERS    TWO_FIFTHS    TWO_QUARTERS    TWO_THIRDS    ZERO    String    toProperString    toString    boolean    long    numeratorValue    serialVersionUID    int    denominator    gcd    hashCode    numerator    whole        	lang_16696_Fraction_1_1	217	1	src/main/java/org/apache/commons/lang3/math/Fraction.java
482	[PATCH]    |    ((_buffer[ptr+2]    &    0xFF)    <<    8)    |    (_buffer[ptr+3]    &    0xFF);	[BUG]    [BUGGY]    |    ((_buffer[ptr+2]    &    0xFF)    <<    8)    |    (_buffer[ptr    +    3]    ^    255);    [FE]    com.fasterxml.jackson.core.JsonParseException:    Unexpected    character    ((CTRL-CHAR,    code    132)):    expected    a    valid    value    (number,    String,    array,    object,    'true',    'false'    or    'null')    testLongText    [CONTEXT]    }    }    main_loop:    while    (outPtr    <    len)    {    int    ptr    =    _ptr;    int    ch;    if    (_bigEndian)    {    ch    =    (_buffer[ptr]    <<    24)    |    ((_buffer[ptr+1]    &    0xFF)    <<    16)    [BUGGY]    |    ((_buffer[ptr+2]    &    0xFF)    <<    8)    |    (_buffer[ptr    +    3]    ^    255);    [BUGGY]    }    else    {    ch    =    (_buffer[ptr]    &    0xFF)    |    ((_buffer[ptr+1]    &    0xFF)    <<    8)    |    ((_buffer[ptr+2]    &    0xFF)    <<    16)    |    (_buffer[ptr+3]    <<    24);    }    _ptr    +=    4;            if    (ch    >    0xFFFF)    {    if    (ch    >    LAST_VALID_UNICODE_CHAR)    {    [CLASS]        UTF32Reader    [METHOD]    read    [RETURN_TYPE]    int        char[]    cbuf    int    start    int    len    [VARIABLES]    char    _surrogate    boolean    _bigEndian    _managedBuffers    isBigEndian    int    _byteCount    _charCount    ch    left    len    outPtr    ptr    start    char[]    cbuf        	jacksoncore_6093_UTF32Reader_1_1	98	1	src/main/java/com/fasterxml/jackson/core/io/UTF32Reader.java
483	[PATCH]    if    ((active0    &    0x20000000000000L)    !=    0L)	[BUG]    [BUGGY]    if    ((active0    ^    9007199254740992L)    !=    0L)    [FE]    junit.framework.AssertionFailedError:    Expression    class    for    local-name()    expected:<class    org.apache.commons.jxpath.ri.compiler.CoreFunction>    but    was:<class    org.apache.commons.jxpath.ri.compiler.ExtensionFunction>    testCoreFunction    [CONTEXT]    }    switch(curChar)    {    case    45:    return    jjMoveStringLiteralDfa10_0(active0,    0x3040600000000000L,    active1,    0x1L);    case    58:    if    ((active0    &    0x4000000000L)    !=    0L)    return    jjStopAtPos(9,    38);    return    jjMoveStringLiteralDfa10_0(active0,    0x78000000000L,    active1,    0L);    case    101:    [BUGGY]    if    ((active0    ^    9007199254740992L)    !=    0L)    [BUGGY]    return    jjStartNfaWithStates_0(9,    53,    12);    break;    case    103:    return    jjMoveStringLiteralDfa10_0(active0,    0x400000000L,    active1,    0L);    case    109:    return    jjMoveStringLiteralDfa10_0(active0,    0L,    active1,    0x2000L);    case    110:    return    jjMoveStringLiteralDfa10_0(active0,    0x8000000000000000L,    active1,    0L);    case    111:    return    jjMoveStringLiteralDfa10_0(active0,    0x100000000000L,    active1,    0L);    [CLASS]        XPathParserTokenManager    [METHOD]    jjMoveStringLiteralDfa9_0    [RETURN_TYPE]    int        long    old0    long    active0    long    old1    long    active1    [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    IOException    e    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    kind    lexState    pos    state    long    active0    active1    old0    old1        	jxpath_10309_XPathParserTokenManager_1_1	907	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
484	[PATCH]    int        exponent            =    ((int)    (bits    >>>    52))    &    0x7ff;	[BUG]    [BUGGY]    int    exponent        =    ((int)(bits    >>>    52))    ^    2047;    [FE]    junit.framework.AssertionFailedError:    double    hypot(-0.0,    -4.9E-324)    expected    0000000000000001    actual    0340000000000000    entries    [1,    12]    test1[46]    [CONTEXT]    if    (n    <    -2098)    {    return    (d    >    0)    ?    0.0    :    -0.0;    }    if    (n    >    2097)    {    return    (d    >    0)    ?    Double.POSITIVE_INFINITY    :    Double.NEGATIVE_INFINITY;    }        final    long    bits    =    Double.doubleToRawLongBits(d);    final    long    sign    =    bits    &    0x8000000000000000L;    [BUGGY]    intexponent    =    ((int)(bits    >>>    52))    ^    2047;    [BUGGY]    long    mantissa    =    bits    &    0x000fffffffffffffL;        int    scaledExponent    =    exponent    +    n;    if    (n    <    0)    {        if    (scaledExponent    >    0)    {        return    Double.longBitsToDouble(sign    |    (((long)    scaledExponent)    <<    52)    |    mantissa);    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    scalb    [RETURN_TYPE]    double        final    double    d    final    int    n    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    bita    bitb    bitsum    cotanFlag    leftPlane    negate    negative    subnormal    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    hiPrecOut    lnCoef_i    lnCoef_last    lnm    lns    reduceResults    result    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    a2    aa    ab    absAsinh    absAtanh    b    base    baseA    baseB    c    cD2pH    cRH    cTmpH    cd    cosEpsA    cosEpsB    cosa    cosaa    cosab    cosb    costA    costB    d    d1High    d1Low    d2p    d2pHH    d2pHL    d2pHigh    d2pLow    da    daa    dab    db    denom    denomb    denomr    dx    epsA    epsA2    epsB    epsilon    err    est    esta    estb    extra    facta    factb    finalRemA    finalRemB    fracPartA    fracPartB    fx1    intPartA    intPartB    invx    invy    lna    lnb    lnza    lnzb    lores    mant    na    nb    numer    oneOverXa    p    p2    pi2a    pi2b    pia    pib    r    rHH    rHL    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    resultHigh    resultLow    resultb    rln10a    rln10b    sinEpsA    sinEpsB    sina    sinb    sintA    sintB    sumA    sumB    t    temp    temp2    tempA    tempB    tempC    tmp    tmp1    tmp2    tmpA    tmpB    tmpHigh    tmpLow    x    x2    xa    xb    xbadj    xpa    xpb    xs    y    ya    yaa    yab    yb    z    za    zaa    zab    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    e    exp    exp3    exponent    finalK    i    idx    intFrac    intPart    intVal    k    n    quadrant    scaledExponent    shift    splitFactor    x    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    a    ac    ad    b    bc    bd    bits    c    d    inbits    l    mantissa    mostSignificantLostBit    prod2A    prod2B    prodA    prodB    shpi0    shpiA    shpiB    sign    x    xl    yi        	math_118158_FastMath_1_1	3078	1	src/main/java/org/apache/commons/math3/util/FastMath.java
485	[PATCH]    int    index    =    hash    &    mask;	[BUG]    [BUGGY]    int    index    =    hash    ^    mask;    [FE]    java.lang.ArrayIndexOutOfBoundsException:    848121885    testPutKeysWithCollision2    [CONTEXT]                            public    T    remove(final    int    key)    {    final    int    hash=    hashOf(key);    [BUGGY]    int    index    =    hash    ^    mask;    [BUGGY]    if    (containsKey(key,    index))    {    return    doRemove(index);    }    if    (states[index]    ==    FREE)    {    return    missingEntries;    }    int    j    =    index;    for    (int    perturb    =    perturb(hash);    states[index]    !=    FREE;    perturb    >>=    PERTURB_SHIFT)    {    [CLASS]    	math_62404_OpenIntToFieldHashMap_1_1	365	1	src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
486	[PATCH]    final    int    z1                            =    (v0    ^    (v0    <<    24))        ^    (vM1    ^    (vM1    >>>    30));	[BUG]    [BUGGY]    final    int    z1                =    (v0    ^    (v0    <<    24))    ^    (vM1    &    (vM1    >>>    30));    [FE]    junit.framework.AssertionFailedError:    expected:<123.456>    but    was:<115.17408364432015>    testCircleFitting2    [CONTEXT]    final    int    indexRm1    =    iRm1[index];    final    int    indexRm2    =    iRm2[index];    final    int    v0    =    v[index];    final    int    vM1=    v[i1[index]];    final    int    vM2=    v[i2[index]];    final    int    vM3=    v[i3[index]];        final    int    z0    =    (0xFFFF8000    &    v[indexRm1])    ^    (0x00007FFF    &    v[indexRm2]);    [BUGGY]    final    int    z1    =    (v0    ^    (v0    <<    24))^    (vM1    &    (vM1    >>>    30));    [BUGGY]    final    int    z2    =    (vM2    ^    (vM2    <<    10))    ^    (vM3    <<    26);    final    int    z3    =    z1^    z2;    final    int    z2Prime=    ((z2    <<    9)    ^    (z2    >>>    23))    &    0xfbffffff;    final    int    z2Second    =    ((z2    &    0x00020000)    !=    0)    ?    (z2Prime    ^    0xb729fcec)    :    z2Prime;    int    z4    =    z0    ^    (z1    ^    (z1    >>>    20))    ^    z2Second    ^    z3;    v[index]    =    z3;    v[indexRm1]=    z4;    v[indexRm2]    &=    0xFFFF8000;    index=    indexRm1;    [CLASS]        Well44497b    [METHOD]    next    [RETURN_TYPE]    int        final    int    bits    [VARIABLES]    long    seed    serialVersionUID    int    K    M1    M2    M3    bits    indexRm1    indexRm2    seed    v0    vM1    vM2    vM3    z0    z1    z2    z2Prime    z2Second    z3    z4    boolean        	math_94364_Well44497b_1_1	98	1	src/main/java/org/apache/commons/math3/random/Well44497b.java
487	[PATCH]    b    +=    (((str[i    +    4]    &    0xff)    <<    0)	[BUG]    [BUGGY]    b    +=    (((str[i    +    4]    ^    255)    <<    0)    [FE]    junit.framework.AssertionFailedError:    testReplaceTwoPlaceholdersNonAlphaOrder    [CONTEXT]    private    static    int    hash32(byte[]    str,    int    start,    int    limit,    int    c)    {    int    a    =    0x9e3779b9;    int    b    =    0x9e3779b9;    int    i;    for    (i    =    start;    i    +    12    <=    limit;    i    +=    12)    {    a    +=    (((str[i    +    0]    &    0xff)    <<    0)    |    ((str[i    +    1]    &    0xff)    <<    8)    |    ((str[i    +    2]    &    0xff)    <<    16)    |    ((str[i    +    3]    &    0xff)    <<    24));    [BUGGY]    b    +=    (((str[i    +    4]    ^    255)    <<    0)    [BUGGY]    |    ((str[i    +    5]    &    0xff)    <<    8)    |    ((str[i    +    6]    &    0xff)    <<    16)    |    ((str[i    +    7]    &    0xff)    <<    24));    c    +=    (((str[i    +    8]    &    0xff)    <<    0)    |    ((str[i    +    9]    &    0xff)    <<    8)    |    ((str[i    +    10]    &    0xff)    <<    16)    |    ((str[i    +    11]    &    0xff)    <<    24));        a    -=    b;    a    -=    c;    [CLASS]        GoogleJsMessageIdGenerator    FP    MessageId    [METHOD]    hash32    [RETURN_TYPE]    int        byte[]    str    int    start    int    limit    int    c    [VARIABLES]    byte[]    str    String    meaning    projectId    projectScopedMeaning    str    tcValue    boolean    int    a    b    c    i    limit    start        	closure_30709_GoogleJsMessageIdGenerator_1_1	118	1	src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java
488	[PATCH]    if    ((d    &    0xC0)    !=    0x080)    {	[BUG]    [BUGGY]    if    ((d    |    192)    !=    0x080)    {    [FE]    com.fasterxml.jackson.core.JsonParseException:    Invalid    UTF-8    middle    byte    0xb5    testLongerRandomSingleChunk    [CONTEXT]    c1    &=    0x0F;    int    d    =    (int)    _inputBuffer[_inputPtr++];    if    ((d    &    0xC0)    !=    0x080)    {    _reportInvalidOther(d    &    0xFF,    _inputPtr);    }    int    c    =    (c1    <<    6)    |    (d    &    0x3F);    if    (_inputPtr    >=    _inputEnd)    {    loadMoreGuaranteed();    }    d    =    (int)    _inputBuffer[_inputPtr++];    [BUGGY]    if    ((d    |    192)    !=    0x080)    {    [BUGGY]    _reportInvalidOther(d    &    0xFF,    _inputPtr);    }    c    =    (c    <<    6)    |    (d    &    0x3F);    return    c;    }    [CLASS]        UTF8StreamJsonParser    [METHOD]    _decodeUtf8_3    [RETURN_TYPE]    int        int    c1    [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    neg    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    codes    quads    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    byteIx    byteLen    c    c1    ch    ch2    cix    code    count    currQuad    currQuadBytes    d    decodedData    defaultValue    digit    end    expLen    features    firstByte    fractLen    i    intLen    intPartLength    integerPartLength    ix    lastQuad    lastQuadBytes    len    max    max2    minAvailable    nameLen    needed    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    q1    q2    qlen    start    value        	jacksoncore_14104_UTF8StreamJsonParser_1_1	2837	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
489	[PATCH]    byte    val3    =    ((b3    &    SIGN)    ==    0)    ?    (byte)    (b3    >>    6)    :    (byte)    ((b3)    >>    6    ^    0xfc);	[BUG]    [BUGGY]    byte    val3    =    ((b3    &    SIGN)    ==    0)    ?    (byte)    (b3    >>    6)    :    (byte)    ((b3)    >>    6    |    252);    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testEncodeDecodeSmall    [CONTEXT]    b2    =    binaryData[dataIndex    +    1];    b3    =    binaryData[dataIndex    +    2];            l    =    (byte)    (b2    &    0x0f);    k    =    (byte)    (b1    &    0x03);    byte    val1    =    ((b1    &    SIGN)    ==    0)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);    byte    val2    =    ((b2    &    SIGN)    ==    0)    ?    (byte)    (b2    >>    4)    :    (byte)    ((b2)    >>    4    ^    0xf0);    [BUGGY]    byte    val3    =    ((b3    &    SIGN)    ==    0)    ?    (byte)    (b3    >>    6)    :    (byte)    ((b3)    >>    6    |    252);    [BUGGY]    encodedData[encodedIndex]    =    lookUpBase64Alphabet[val1];                encodedData[encodedIndex    +    1]    =    lookUpBase64Alphabet[val2    |    (k    <<    4)];    encodedData[encodedIndex    +    2]    =    lookUpBase64Alphabet[(l    <<    2)    |    val3];    encodedData[encodedIndex    +    3]    =    lookUpBase64Alphabet[b3    &    0x3f];    encodedIndex    +=    4;    [CLASS]        Base64    [METHOD]    encodeBase64    [RETURN_TYPE]    byte[]        byte[]    binaryData    boolean    isChunked    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    binaryData    encodedData    lookUpBase64Alphabet    pArray    boolean    isChunked    byte    PAD    b1    b2    b3    k    l    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    length    nextSeparatorIndex    long    binaryDataLength    encodedDataLengthLong    fewerThan24bits    lengthDataBits    tripletCount        	codec_316_Base64_1_1	321	1	src/java/org/apache/commons/codec/binary/Base64.java
490	[PATCH]    int    c    =    (int)    inputBuffer[ptr]    &    0xFF;	[BUG]    [BUGGY]    int    c    =    (int)inputBuffer[ptr]    |    255;    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testSurrogates    [CONTEXT]    loadMoreGuaranteed();    ptr    =    _inputPtr;    }    int    outPtr    =    0;    char[]    outBuf    =    _textBuffer.emptyAndGetCurrentSegment();    final    int[]    codes    =    sInputCodesUtf8;    final    int    max    =    Math.min(_inputEnd,    (ptr    +    outBuf.length));    final    byte[]    inputBuffer    =    _inputBuffer;    while    (ptr    <    max)    {    [BUGGY]    int    c    =    (int)inputBuffer[ptr]    |    255;    [BUGGY]    if    (codes[c]    !=    0)    {    if    (c    ==    INT_QUOTE)    {    _inputPtr    =    ptr+1;    _textBuffer.setCurrentLength(outPtr);    return;    }    break;    }    ++ptr;    outBuf[outPtr++]    =    (char)    c;    [CLASS]        UTF8StreamJsonParser    [METHOD]    _finishString    [RETURN_TYPE]    void        [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    codes    quads    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    byteIx    byteLen    c    ch    ch2    cix    count    currQuad    currQuadBytes    decodedData    defaultValue    end    expLen    features    fractLen    i    intLen    intPartLength    integerPartLength    ix    lastQuad    lastQuadBytes    len    max    minAvailable    nameLen    needed    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    q1    q2    qlen    start    char[]    outBuf        	jacksoncore_13249_UTF8StreamJsonParser_1_1	2077	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
491	[PATCH]    if    ((active0    &    0x10000070000000L)    !=    0L    ||    (active1    &    0x208L)    !=    0L)	[BUG]    [BUGGY]    if    ((active0    ^    4503601506418688L)    !=    0L    ||    (active1    &    0x208L)    !=    0L)    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    'vendor/x:pos//number'.    Invalid    symbol    '/'    after:    'vendor/x:pos'    testAxisChild    [CONTEXT]    if    ((active0    &    0x8000008000000L)    !=    0L)    return    12;    if    ((active0    &    0xfff7fffff0000000L)    !=    0L    ||    (active1    &    0x3fffL)    !=    0L)    {    jjmatchedKind    =    78;    jjmatchedPos    =    1;    return    12;    }    return    -1;    case    2:    [BUGGY]    if    ((active0    ^    4503601506418688L)    !=    0L    ||    (active1    &    0x208L)    !=    0L)    [BUGGY]    return    12;    if    ((active0    &    0xffe7ffff80000000L)    !=    0L    ||    (active1    &    0x3df7L)    !=    0L)    {    jjmatchedKind    =    78;    jjmatchedPos    =    2;    return    12;    }    return    -1;    case    3:    if    ((active0    &    0xc1010180000000L)    !=    0L    ||    (active1    &    0xd0L)    !=    0L)    [CLASS]        XPathParserTokenManager    [METHOD]    jjStopStringLiteralDfa_0    [RETURN_TYPE]    int        int    pos    long    active0    long    active1    [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    lexState    pos    long    active0    active1        	jxpath_7922_XPathParserTokenManager_1_1	34	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
492	[PATCH]    index    =    j    &    mask;	[BUG]    [BUGGY]    index    =    j    |    mask;    [FE]    java.lang.ArrayIndexOutOfBoundsException:    1489469439    testContainsKey    [CONTEXT]    return    true;    }    if    (states[index]    ==    FREE)    {    return    false;    }    int    j    =    index;    for    (int    perturb    =    perturb(hash);    states[index]    !=    FREE;    perturb    >>=    PERTURB_SHIFT)    {    j    =    probe(perturb,    j);    [BUGGY]    index    =    j    |    mask;    [BUGGY]    if    (containsKey(key,    index))    {    return    true;    }    }    return    false;    }    [CLASS]        OpenIntToDoubleHashMap    Iterator    [METHOD]    containsKey    [RETURN_TYPE]    boolean        final    int    key    [VARIABLES]    byte[]    states    boolean    double[]    values    byte    FREE    FULL    REMOVED    double    missingEntries    int[]    keys    float    LOAD_FACTOR    long    serialVersionUID    int    DEFAULT_EXPECTED_SIZE    PERTURB_SHIFT    RESIZE_MULTIPLIER    capacity    count    current    expectedSize    hash    i    index    j    key    length    mask    next    perturb    powerOfTwo    referenceCount    size        	math_59422_OpenIntToDoubleHashMap_1_1	220	1	src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
493	[PATCH]    mt[k]    =    mt[k    +    (M    -    N)]    ^    (y    >>>    1)    ^    MAG01[y    &    0x1];	[BUG]    [BUGGY]    mt[k]    =    mt[k    +    (M    -    N)]    ^    (y    >>>    1)    ^    MAG01[y    |    1];    [FE]    java.lang.ArrayIndexOutOfBoundsException:    1197484303    testLinearFunction2D    [CONTEXT]    for    (int    k    =    0;    k    <    N    -    M;    ++k)    {    int    mtCurr    =    mtNext;    mtNext    =    mt[k    +    1];    y    =    (mtCurr    &    0x80000000)    |    (mtNext    &    0x7fffffff);    mt[k]    =    mt[k    +    M]    ^    (y    >>>    1)    ^    MAG01[y    &    0x1];    }    for    (int    k    =    N    -    M;    k    <    N    -    1;    ++k)    {    int    mtCurr    =    mtNext;    mtNext    =    mt[k    +    1];    y    =    (mtCurr    &    0x80000000)    |    (mtNext    &    0x7fffffff);    [BUGGY]    mt[k]    =    mt[k    +    (M    -    N)]    ^    (y    >>>    1)    ^    MAG01[y    |    1];    [BUGGY]    }    y    =    (mtNext    &    0x80000000)    |    (mt[0]    &    0x7fffffff);    mt[N    -    1]    =    mt[M    -    1]    ^    (y    >>>    1)    ^    MAG01[y    &    0x1];    mti    =    0;    }    y    =    mt[mti++];            [CLASS]        MersenneTwister    [METHOD]    next    [RETURN_TYPE]    int        int    bits    [VARIABLES]    int[]    MAG01    mt    seed    boolean    long    l    l0    l1    longMT    seed    serialVersionUID    int    M    N    bits    i    j    k    mtCurr    mtNext    mti    seed    y        	math_93255_MersenneTwister_1_1	245	1	src/main/java/org/apache/commons/math3/random/MersenneTwister.java
494	[PATCH]    if    ((direction    <    d)    ^    (sign    ==    0L))    {	[BUG]    [BUGGY]    if    ((direction    <    d)    &    (sign    ==    0L))    {    [FE]    junit.framework.AssertionFailedError    testTooLargeFirstStep    [CONTEXT]    }    else    if    (Double.isInfinite(d))    {    return    (d    <    0)    ?    -Double.MAX_VALUE    :    Double.MAX_VALUE;    }    else    if    (d    ==    0)    {    return    (direction    <    0)    ?    -Double.MIN_VALUE    :    Double.MIN_VALUE;    }                final    long    bits    =    Double.doubleToRawLongBits(d);    final    long    sign    =    bits    &    0x8000000000000000L;    [BUGGY]    if    ((direction    <    d)    &    (sign    ==    0L))    {    [BUGGY]    return    Double.longBitsToDouble(sign    |    ((bits    &    0x7fffffffffffffffL)    +    1));    }    else    {    return    Double.longBitsToDouble(sign    |    ((bits    &    0x7fffffffffffffffL)    -    1));    }    }    [CLASS]        FastMath    ExpIntTable    ExpFracTable    lnMant    CodyWaite    [METHOD]    nextAfter    [RETURN_TYPE]    double        double    d    double    direction    [VARIABLES]    boolean    RECOMPUTE_TABLES_AT_RUNTIME    bita    bitb    bitsum    cotanFlag    leftPlane    negate    negative    subnormal    double[]    CBRTTWO    COSINE_TABLE_A    COSINE_TABLE_B    EIGHTHS    EXP_FRAC_TABLE_A    EXP_FRAC_TABLE_B    EXP_INT_TABLE_A    EXP_INT_TABLE_B    SINE_TABLE_A    SINE_TABLE_B    TANGENT_TABLE_A    TANGENT_TABLE_B    hiPrec    hiPrecOut    lnCoef_i    lnCoef_last    lnm    lns    reduceResults    result    long[]    PI_O_4_BITS    RECIP_2PI    double    E    F_11_12    F_13_14    F_15_16    F_1_11    F_1_13    F_1_15    F_1_17    F_1_2    F_1_3    F_1_4    F_1_5    F_1_7    F_1_9    F_3_4    F_5_6    F_7_8    F_9_10    LN_2_A    LN_2_B    LOG_MAX_VALUE    PI    TWO_POWER_52    TWO_POWER_53    a    a2    aa    ab    absAsinh    absAtanh    b    base    baseA    baseB    c    cD2pH    cRH    cTmpH    cd    cosEpsA    cosEpsB    cosa    cosaa    cosab    cosb    costA    costB    d    d1High    d1Low    d2p    d2pHH    d2pHL    d2pHigh    d2pLow    da    daa    dab    db    denom    denomb    denomr    direction    dx    epsA    epsA2    epsB    epsilon    err    est    esta    estb    extra    facta    factb    finalRemA    finalRemB    fracPartA    fracPartB    fx1    intPartA    intPartB    invx    invy    lna    lnb    lnza    lnzb    lores    mant    na    nb    numer    oneOverXa    p    p2    pi2a    pi2b    pia    pib    r    rHH    rHL    ra    ratio    ratioa    ratiob    rb    recip    recipa    recipb    remA    remB    result    resultHigh    resultLow    resultb    rln10a    rln10b    sinEpsA    sinEpsB    sina    sinb    sintA    sintB    sumA    sumB    t    temp    temp2    tempA    tempB    tempC    tmp    tmp1    tmp2    tmpA    tmpB    tmpHigh    tmpLow    x    x2    xa    xb    xbadj    xpa    xpb    xs    y    ya    yaa    yab    yb    z    za    zaa    zab    zb    double[][]    LN_HI_PREC_COEF    LN_MANT    LN_QUICK_COEF    int    EXP_FRAC_TABLE_LEN    EXP_INT_TABLE_LEN    EXP_INT_TABLE_MAX_INDEX    LN_MANT_LEN    MASK_NON_SIGN_INT    SINE_TABLE_LEN    bits    e    exp    exp3    exponent    finalK    i    idx    intFrac    intPart    intVal    k    mantissa    mostSignificantLostBit    n    quadrant    scaledExponent    shift    sign    splitFactor    x    long    HEX_40000000    MASK_30BITS    MASK_NON_SIGN_LONG    a    ac    ad    b    bc    bd    bits    c    d    inbits    l    mantissa    mostSignificantLostBit    prod2A    prod2B    prodA    prodB    shpi0    shpiA    shpiB    sign    x    xl    yi        	math_118550_FastMath_1_1	3267	1	src/main/java/org/apache/commons/math3/util/FastMath.java
495	[PATCH]    return    (n    >    0)    &&    ((n    &    (n    -    1))    ==    0);	[BUG]    [BUGGY]    return    (n    >    0)    &&    ((n    ^    (n    -    1))    ==    0);    [FE]    org.apache.commons.math3.exception.MathIllegalArgumentException:    9    is    not    a    power    of    2    plus    one    testAdHocData[0]    [CONTEXT]    public    static    boolean    isPowerOfTwo(long    n)    {    [BUGGY]    return    (n    >    0)    &&    ((n    ^    (n    -    1))    ==    0);    [BUGGY]    }    [CLASS]        ArithmeticUtils    [METHOD]    isPowerOfTwo    [RETURN_TYPE]    boolean        long    n    [VARIABLES]    boolean    long    n        	math_108819_ArithmeticUtils_1_1	886	1	src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java
496	[PATCH]    b    +=    (str[i    +    7]    &    0xff)    <<    24;	[BUG]    [BUGGY]    b    +=    (str[i    +    7]    ^    255)    <<    24;    [FE]    junit.framework.AssertionFailedError:    testReplaceSinglePlaceholder    [CONTEXT]    c    +=    limit    -    start;    switch    (limit    -    i)    {    case    11:    c    +=    (str[i    +    10]    &    0xff)    <<    24;    case    10:    c    +=    (str[i    +    9]    &    0xff)    <<    16;    case    9:    c    +=    (str[i    +    8]    &    0xff)    <<    8;        case    8:    [BUGGY]    b    +=    (str[i    +    7]    ^    255)    <<    24;    [BUGGY]    case    7:    b    +=    (str[i    +    6]    &    0xff)    <<    16;    case    6:    b    +=    (str[i    +    5]    &    0xff)    <<    8;    case    5:    b    +=    (str[i    +    4]    &    0xff);    case    4:    a    +=    (str[i    +    3]    &    0xff)    <<    24;    case    3:    a    +=    (str[i    +    2]    &    0xff)    <<    16;    [CLASS]        GoogleJsMessageIdGenerator    FP    MessageId    [METHOD]    hash32    [RETURN_TYPE]    int        byte[]    str    int    start    int    limit    int    c    [VARIABLES]    byte[]    str    String    meaning    projectId    projectScopedMeaning    str    tcValue    boolean    int    a    b    c    i    limit    start        	closure_30952_GoogleJsMessageIdGenerator_1_1	166	1	src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java
497	[PATCH]    if    ((n    &    0x1)    ==    0)    {	[BUG]    [BUGGY]    if    ((n    ^    1)    ==    0)    {    [FE]    junit.framework.AssertionFailedError:    expected:<0.0>    but    was:<-1.799330655829099>    testTanAtan    [CONTEXT]    double    v    =    0;    q[n    -    1]    =    -n    *    q[n    -    2];    for    (int    k    =    n    -    1;    k    >=    0;    k    -=    2)    {    v    =    v    *    x2    +    q[k];    if    (k    >    2)    {    q[k    -    2]    =    (k    -    1)    *    q[k    -    1]    +    (k    -    1    -    2    *    n)    *    q[k    -    3];    }    else    if    (k    ==    2)    {    q[0]    =    q[1];    }    }    [BUGGY]    if    ((n    ^    1)    ==    0)    {    [BUGGY]    v    *=    x;    }    coeff    *=    f;    function[n]    =    coeff    *    v;    }    }            [CLASS]        DSCompiler    [METHOD]    atan    [RETURN_TYPE]    void        final    double[]    operand    final    int    operandOffset    final    double[]    result    final    int    resultOffset    [VARIABLES]    int[][][]    compIndirection    multIndirection    int[][]    dRow    derivativesIndirection    destSizes    mappingI    sizes    srcDerivativesIndirection    boolean    double[]    function    operand    q    result    double    coeff    f    v    x    x2    AtomicReference    compilers    int[]    derivedTermF    derivedTermG    lowerIndirection    orders    term    termJ    termK    int    dSize    derivativeOrder    destO    destP    diag    i    index    j    k    l    lhsOffset    m    maxOrder    maxParameters    n    o    offset1    offset2    offset3    offset4    operandOffset    order    ordersSum    p    parameters    resultOffset    rhsOffset    srcP    vSize    xOffset    yOffset        	math_2977_DSCompiler_1_1	1409	1	src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
498	[PATCH]    if    ((d    &    0xC0)    !=    0x080)    {	[BUG]    [BUGGY]    if    ((d    |    192)    !=    0x080)    {    [FE]    com.fasterxml.jackson.core.JsonParseException:    Invalid    UTF-8    middle    byte    0x98    testSurrogates    [CONTEXT]    int    d    =    (int)    _inputBuffer[_inputPtr++];    if    ((d    &    0xC0)    !=    0x080)    {    _reportInvalidOther(d    &    0xFF,    _inputPtr);    }    c    =    ((c    &    0x07)    <<    6)    |    (d    &    0x3F);    if    (_inputPtr    >=    _inputEnd)    {    loadMoreGuaranteed();    }    d    =    (int)    _inputBuffer[_inputPtr++];    [BUGGY]    if    ((d    |    192)    !=    0x080)    {    [BUGGY]    _reportInvalidOther(d    &    0xFF,    _inputPtr);    }    c    =    (c    <<    6)    |    (d    &    0x3F);    if    (_inputPtr    >=    _inputEnd)    {    loadMoreGuaranteed();    }    d    =    (int)    _inputBuffer[_inputPtr++];    if    ((d    &    0xC0)    !=    0x080)    {    _reportInvalidOther(d    &    0xFF,    _inputPtr);    }    [CLASS]        UTF8StreamJsonParser    [METHOD]    _decodeUtf8_4    [RETURN_TYPE]    int        int    c    [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    neg    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    codes    quads    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    byteIx    byteLen    c    c1    ch    ch2    cix    code    count    currQuad    currQuadBytes    d    decodedData    defaultValue    digit    end    expLen    features    firstByte    fractLen    i    intLen    intPartLength    integerPartLength    ix    lastQuad    lastQuadBytes    len    max    max2    minAvailable    nameLen    needed    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    q1    q2    qlen    start    value        	jacksoncore_14220_UTF8StreamJsonParser_1_1	2881	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
499	[PATCH]    c    =    (int)    _inputBuffer[_inputPtr++]    &    0xFF;	[BUG]    [BUGGY]    c    =    (int)_inputBuffer[_inputPtr++]    |    255;    [FE]    com.fasterxml.jackson.core.JsonParseException:    Unexpected    character    ('ÿ'    (code    255))    in    numeric    value:    Exponent    indicator    not    followed    by    a    digit    testSimpleDouble    [CONTEXT]    if    (c    ==    '-'    ||    c    ==    '+')    {    if    (outPtr    >=    outBuf.length)    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    outBuf[outPtr++]    =    (char)    c;        if    (_inputPtr    >=    _inputEnd)    {    loadMoreGuaranteed();    }    [BUGGY]    c    =    (int)_inputBuffer[_inputPtr++]    |    255;    [BUGGY]    }    exp_loop:    while    (c    <=    INT_9    &&    c    >=    INT_0)    {    ++expLen;    if    (outPtr    >=    outBuf.length)    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    outBuf[outPtr++]    =    (char)    c;    [CLASS]        UTF8StreamJsonParser    [METHOD]    _parseFloatText    [RETURN_TYPE]    JsonToken        char[]    outBuf    int    outPtr    int    c    boolean    negative    int    integerPartLength    [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    c    ch    count    decodedData    defaultValue    end    expLen    features    fractLen    i    intLen    intPartLength    integerPartLength    len    minAvailable    nameLen    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    start    char[]    outBuf        	jacksoncore_12062_UTF8StreamJsonParser_1_1	1369	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
500	[PATCH]    &&    (c    !=    '\n')    &&    (c    !=    '\r'))	[BUG]    [BUGGY]    &&    (c    !=    '\n')    &&    (c    <    '\r'))    [FE]    junit.framework.ComparisonFailure:    single    line    text    expected:<This    is    a[    testPrintWrapped    [CONTEXT]    return    -1;    }            pos    =    startPos    +    width;    char    c;    while    ((pos    >=    startPos)    &&    ((c    =    text.charAt(pos))    !=    '    ')    [BUGGY]    &&    (c    !=    '\n')    &&    (c    <    '\r'))    [BUGGY]    {    --pos;    }        if    (pos    >    startPos)    {    return    pos;    }        [CLASS]        HelpFormatter    OptionComparator    [METHOD]    findWrapPos    [RETURN_TYPE]    int        String    text    int    width    int    startPos    [VARIABLES]    char    c    String    DEFAULT_ARG_NAME    DEFAULT_LONG_OPT_PREFIX    DEFAULT_OPT_PREFIX    DEFAULT_SYNTAX_PREFIX    app    cmdLineSyntax    defaultArgName    defaultLongOptPrefix    defaultNewLine    defaultOptPrefix    defaultSyntaxPrefix    dpad    footer    header    lpad    name    newline    padding    prefix    text    boolean    int    DEFAULT_DESC_PAD    DEFAULT_LEFT_PAD    DEFAULT_WIDTH    argPos    defaultDescPad    defaultLeftPad    defaultWidth    descPad    leftPad    max    nextLineTabStop    padding    pos    startPos    width    x        	cli_678_HelpFormatter_1_1	811	1	src/java/org/apache/commons/cli/HelpFormatter.java
501	[PATCH]    return    (values    ==    null)    ?    null    :    values[0];	[BUG]    [BUGGY]    return    (false)    ?    null    :    values[0];    [FE]    junit.framework.AssertionFailedError:    NullPointer    caught:    null    test11680    [CONTEXT]    public    String    getOptionValue(String    opt)    {    String[]    values    =    getOptionValues(opt);        [BUGGY]    return    (false)    ?    null    :    values[0];    [BUGGY]    }    [CLASS]        CommandLine    [METHOD]    getOptionValue    [RETURN_TYPE]    String        String    opt    [VARIABLES]    List    args    Set    options    String    opt    String[]    values    boolean        	cli_138_CommandLine_1_1	124	1	src/java/org/apache/commons/cli/CommandLine.java
502	[PATCH]    for    (int    i    =    256;    --i    >=    0;)    {	[BUG]    [BUGGY]    for    (int    i    =    256;    --i    ==    0;)    {    [FE]    java.io.IOException:    BZip2    CRC    error    testBzip2Unarchive    [CONTEXT]    final    int[][]    limit    =    dataShadow.limit;    final    int[][]    base    =    dataShadow.base;    final    int[][]    perm    =    dataShadow.perm;    final    int    limitLast    =    this.blockSize100k    *    100000;                            [BUGGY]    for    (int    i    =    256;    --i    ==    0;)    {    [BUGGY]    yy[i]    =    (char)    i;    unzftab[i]    =    0;    }    int    groupNo    =    0;    int    groupPos    =    G_SIZE    -    1;    final    int    eob    =    this.nInUse    +    1;    int    nextSym    =    getAndMoveToFrontDecode0(0);    int    bsBuffShadow    =    this.bsBuff;    int    bsLiveShadow    =    this.bsLive;    [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    getAndMoveToFrontDecode    [RETURN_TYPE]    void        [VARIABLES]    int[][]    base    limit    perm    InputStream    in    inShadow    byte    ch    char[][]    len    temp_charArray2d    Data    data    dataShadow    int[]    base    base_zt    cftab    limit    limit_zt    minLens    perm    perm_zt    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    alphaSize    b    blockSize    blockSize100k    bsBuff    bsBuffShadow    bsLive    bsLiveShadow    computedBlockCRC    computedCombinedCRC    curr    currentChar    currentState    destOffs    eob    groupNo    groupPos    hi    i    i16    inUse16    j    last    lastShadow    len    limitLast    magic    maxLen    minLen    minLens_zt    n    nGroups    nInUse    nInUseShadow    nSelectors    nb    nextSym    offs    origPtr    pp    retChar    s    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    t    thech    v    vec    zn    zt    zvec    char[]    getAndMoveToFrontDecode_yy    len_t    length    yy    byte[]    dest    ll8    pos    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    expected    lent    magic0    magic1    magic2    magic3    magic4    magic5    su_z    tmp    boolean[]    inUse        	compress_5754_BZip2CompressorInputStream_1_1	560	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
503	[PATCH]    if    (_cfgPrettyPrinter    !=    null)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    (was    java.lang.NullPointerException)    (through    reference    chain:    com.fasterxml.jackson.dataformat.xml.MediaItem[   "content   "]->com.fasterxml.jackson.dataformat.xml.Content[   "persons   "])    testRoundtrip    [CONTEXT]    public    final    void    writeStartArray()    throws    IOException    {    _verifyValueWrite(   "start    an    array   ");    _writeContext    =    _writeContext.createChildArrayContext();    [BUGGY]    if    (true)    {    [BUGGY]    _cfgPrettyPrinter.writeStartArray(this);    }    else    {        }    }    [CLASS]        ToXmlGenerator    Feature    [METHOD]    writeStartArray    [RETURN_TYPE]    void        [VARIABLES]    XMLStreamWriter2    _xmlWriter    boolean    _defaultState    _initialized    _nextIsAttribute    _nextIsCData    _nextIsUnwrapped    _stax2Emulation    defaultState    isAttribute    isCData    isUnwrapped    state    XMLStreamWriter    _originalXmlWriter    sw    QName    _nextName    name    wrappedName    wrapperName    IOContext    _ioContext    ctxt    XmlPrettyPrinter    _xmlPrettyPrinter    String    DEFAULT_UNKNOWN_ELEMENT    fieldName    name    ns    value    Feature    WRITE_XML_1_1    WRITE_XML_DECLARATION    f    int    _formatFeatures    _mask    flags    mask    newF    oldF    stdFeatures    values    xmlFeatures    LinkedList    _elementNameStack        	jacksonxml_773_ToXmlGenerator_1_1	469	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java
504	[PATCH]    if    (escape    !=    DISABLED    &&    escape    ==    commentStart)    {	[BUG]    [BUGGY]    if    (true    &&    escape    ==    commentStart)    {    [FE]    java.lang.IllegalArgumentException:    The    comment    start    and    the    escape    character    cannot    be    the    same    (   "￾   ")    testValidation    [CONTEXT]    }    if    (delimiter    ==    commentStart)    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    delimiter    cannot    be    the    same    (\   "   "    +    commentStart    +       "\   ")   ");    }    if    (encapsulator    !=    DISABLED    &&    encapsulator    ==    commentStart)    {    throw    new    IllegalArgumentException(   "The    comment    start    character    and    the    encapsulator    cannot    be    the    same    (\   "   "    +    commentStart    +       "\   ")   ");    }        [BUGGY]    if    (true    &&    escape    ==    commentStart)    {    [BUGGY]    throw    new    IllegalArgumentException(   "The    comment    start    and    the    escape    character    cannot    be    the    same    (\   "   "    +    commentStart    +       "\   ")   ");    }    }    [CLASS]        CSVFormat    [METHOD]    validate    [RETURN_TYPE]    void        [VARIABLES]    char    DISABLED    c    commentStart    delimiter    encapsulator    escape    CSVFormat    DEFAULT    EXCEL    MYSQL    PRISTINE    RFC4180    TDF    boolean    emptyLinesIgnored    surroundingSpacesIgnored    String    CRLF    lineSeparator    String[]    header        	csv_37_CSVFormat_1_1	192	1	src/main/java/org/apache/commons/csv/CSVFormat.java
505	[PATCH]    if    (months    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.NullPointerException    testPlus_Months    [CONTEXT]    public    Months    plus(Months    months)    {    [BUGGY]    if    (false)    {    [BUGGY]    return    this;    }    return    plus(months.getValue());    }    [CLASS]        Months    [METHOD]    plus    [RETURN_TYPE]    Months        Months    months    [VARIABLES]    boolean    PeriodFormatter    PARSER    Months    EIGHT    ELEVEN    FIVE    FOUR    MAX_VALUE    MIN_VALUE    NINE    ONE    SEVEN    SIX    TEN    THREE    TWELVE    TWO    ZERO    months    long    serialVersionUID        	time_5835_Months_1_1	279	1	src/main/java/org/joda/time/Months.java
506	[PATCH]    for    (int    i    =    0;    i    <    cmpLen;    ++i)    {	[BUG]    [BUGGY]    for    (int    i    =    0;    i    <=    cmpLen;    ++i)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    20    testLongWrite    [CONTEXT]    public    static    boolean    inLongRange(char[]    digitChars,    int    offset,    int    len,    boolean    negative)    {    String    cmpStr    =    negative    ?    MIN_LONG_STR_NO_SIGN    :    MAX_LONG_STR;    int    cmpLen    =    cmpStr.length();    if    (len    <    cmpLen)    return    true;    if    (len    >    cmpLen)    return    false;        [BUGGY]    for    (int    i    =    0;    i    <=    cmpLen;    ++i)    {    [BUGGY]    int    diff    =    digitChars[offset+i]    -    cmpStr.charAt(i);    if    (diff    !=    0)    {    return    (diff    <    0);    }    }    return    true;    }    [CLASS]        NumberInput    [METHOD]    inLongRange    [RETURN_TYPE]    boolean        char[]    digitChars    int    offset    int    len    boolean    negative    [VARIABLES]    String    MAX_LONG_STR    MIN_LONG_STR_NO_SIGN    NASTY_SMALL_DOUBLE    cmpStr    str    boolean    negative    long    L_BILLION    val    int    cmpLen    diff    i    len    offset    char[]    digitChars        	jacksoncore_5191_NumberInput_1_1	155	1	src/main/java/com/fasterxml/jackson/core/io/NumberInput.java
507	[PATCH]    if    (sourceCursor    ==    sourceEnd)    {	[BUG]    [BUGGY]    if    (sourceCursor    <=    sourceEnd)    {    [FE]    junit.framework.ComparisonFailure:    expected:<...testcode   ",       "count   ":    [6    }    testGoldenOutput5    [CONTEXT]    cursor++;    --ungetCursor;    if    (charno    ==    -1)    {    charno    =    getOffset();    }    return    ungetBuffer[ungetCursor];    }    for(;;)    {    int    c;    [BUGGY]    if    (sourceCursor    <=    sourceEnd)    {    [BUGGY]    hitEOF    =    true;    if    (charno    ==    -1)    {    charno    =    getOffset();    }    return    EOF_CHAR;    }    cursor++;    c    =    sourceString.charAt(sourceCursor++);        [CLASS]        JsDocTokenStream    [METHOD]    getChar    [RETURN_TYPE]    int        [VARIABLES]    int[]    ungetBuffer    boolean    hitEOF    String    sourceString    string    int    EOF_CHAR    N    c    c1    c2    charno    cursor    initCharno    initLineno    lineEndChar    lineStart    lineno    sourceCursor    sourceEnd    stringBufferTop    test    tokenBeg    tokenEnd    ungetCursor    char[]    stringBuffer    tmp        	closure_47308_JsDocTokenStream_1_1	348	1	src/com/google/javascript/jscomp/parsing/JsDocTokenStream.java
508	[PATCH]    if    (sr.getEventType()    !=    XMLStreamConstants.START_ELEMENT)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException:    Unrecognized    field       "   "    (class    com.fasterxml.jackson.dataformat.xml.XmlTestBase$NameBean),    not    marked    as    ignorable    (3    known    properties:       "first   ",       "last   ",       "age   "])    testSimpleRead    [CONTEXT]    public    FromXmlParser    createParser(XMLStreamReader    sr)    throws    IOException    {        [BUGGY]    if    (true)    {    [BUGGY]    try    {    sr    =    _initializeXmlReader(sr);    }    catch    (XMLStreamException    e)    {    return    StaxUtil.throwXmlAsIOException(e);    }    }        FromXmlParser    xp    =    new    FromXmlParser(_createContext(sr,    false),    _generatorFeatures,    _xmlGeneratorFeatures,    _objectCodec,    sr);    [CLASS]        XmlFactory    [METHOD]    createParser    [RETURN_TYPE]    FromXmlParser        XMLStreamReader    sr    [VARIABLES]    XMLOutputFactory    _xmlOutputFactory    f    outf    xmlOut    XMLStreamReader    sr    boolean    XMLStreamException    e    byte    BYTE_D    BYTE_EXCL    BYTE_HYPHEN    BYTE_LT    BYTE_QMARK    BYTE_l    BYTE_m    BYTE_x    UTF8_BOM_1    UTF8_BOM_2    UTF8_BOM_3    FromXmlParser    xp    String    FORMAT_NAME_XML    _cfgNameForTextElement    _jdkXmlInFactory    _jdkXmlOutFactory    content    name    nameForTextElem    long    serialVersionUID    int    DEFAULT_XML_GENERATOR_FEATURE_FLAGS    DEFAULT_XML_PARSER_FEATURE_FLAGS    _xmlGeneratorFeatures    _xmlParserFeatures    xgFeatures    xpFeatures    XMLInputFactory    _xmlInputFactory    f    inf    xmlIn        	jacksonxml_169_XmlFactory_1_1	489	1	src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java
509	[PATCH]    return    keyAnalyzer.compare(key,    other)    ==    0;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError:    expected:<all>    but    was:<null>    testNextKey    [CONTEXT]    final    boolean    compareKeys(final    K    key,    final    K    other)    {    if    (key    ==    null)    {    return    other    ==    null;    }    else    if    (other    ==    null)    {    return    false;    }        [BUGGY]    return    false;    [BUGGY]    }    [CLASS]        AbstractBitwiseTrie    BasicEntry    [METHOD]    compareKeys    [RETURN_TYPE]    boolean        final    K    key    final    K    other    [VARIABLES]    KeyAnalyzer    keyAnalyzer    K    foundKey    key    other    boolean    V    value    long    serialVersionUID        	collections_10740_AbstractBitwiseTrie_1_1	134	1	src/main/java/org/apache/commons/collections4/trie/AbstractBitwiseTrie.java
510	[PATCH]    if    (cls    ==    byte[].class    ||    cls    ==    char[].class)    {	[BUG]    [BUGGY]    if    (false    ||    cls    ==    char[].class)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Can    not    deserialize    instance    of    byte    out    of    VALUE_STRING    token    testRoundTripWithJacksonExample    [CONTEXT]    public    static    boolean    isIndexedType(JavaType    type)    {    if    (type.isContainerType())    {    Class<?>    cls    =    type.getRawClass();            [BUGGY]    if    (false    ||    cls    ==    char[].class)    {    [BUGGY]    return    false;    }        if    (Map.class.isAssignableFrom(cls))    {    return    false;    }    return    true;    }    return    false;    }    [CLASS]        TypeUtil    [METHOD]    isIndexedType    [RETURN_TYPE]    boolean        JavaType    type    [VARIABLES]    JavaType    type    boolean    Class    cls        	jacksonxml_2177_TypeUtil_1_1	20	1	src/main/java/com/fasterxml/jackson/dataformat/xml/util/TypeUtil.java
511	[PATCH]    if    (ix    >=    0)    {	[BUG]    [BUGGY]    if    (ix    ==    0)    {    [FE]    junit.framework.ComparisonFailure:    expected:<...PolymorphicTypesTest[..]SubTypeWithClassProp...>    but    was:<...PolymorphicTypesTest[$]SubTypeWithClassProp...>    testAsClassProperty    [CONTEXT]    protected    static    String    encodeXmlClassName(String    className)    {                int    ix    =    className.lastIndexOf('$');    [BUGGY]    if    (ix    ==    0)    {    [BUGGY]    StringBuilder    sb    =    new    StringBuilder(className);    do    {    sb.replace(ix,    ix+1,       "..   ");    ix    =    className.lastIndexOf('$',    ix-1);    }    while    (ix    >=    0);    className    =    sb.toString();    }    return    className;    }    [CLASS]        XmlTypeResolverBuilder    XmlClassNameIdResolver    XmlMinimalClassNameIdResolver    [METHOD]    encodeXmlClassName    [RETURN_TYPE]    String        String    className    [VARIABLES]    boolean    StringBuilder    sb    String    className    int    ix        	jacksonxml_1499_XmlTypeResolverBuilder_1_1	80	1	src/main/java/com/fasterxml/jackson/dataformat/xml/XmlTypeResolverBuilder.java
512	[PATCH]    if    (outPtr    >=    outBuf.length)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.ComparisonFailure:    expected:<   "[name   "]>    but    was:<   "[                                                                                                                                                                                                       n                                                                                                                                                                                                                                                                                                           a                                                                                                                                                                                                                                                                                                                                                                                                                                                                 m                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  e                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      "                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ]>    testSimple    [CONTEXT]    if    (i    <    INT_SPACE)    {    _throwUnquotedSpace(i,       "name   ");    }    }    }    hash    =    (hash    *    CharsToNameCanonicalizer.HASH_MULT)    +    i;        outBuf[outPtr++]    =    c;            [BUGGY]    if    (true)    {    [BUGGY]    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    }    _textBuffer.setCurrentLength(outPtr);    {    TextBuffer    tb    =    _textBuffer;    char[]    buf    =    tb.getTextBuffer();    int    start    =    tb.getTextOffset();    int    len    =    tb.size();    [CLASS]        ReaderBasedJsonParser    [METHOD]    _parseFieldName2    [RETURN_TYPE]    String        int    startPtr    int    hash    int    endChar    [VARIABLES]    boolean    _tokenIncomplete    eof    inObject    negative    TextBuffer    tb    char    c    Reader    _reader    r    ObjectCodec    _objectCodec    c    codec    CharsToNameCanonicalizer    _symbols    st    int    _hashSeed    bits    ch    count    decodedData    defaultValue    endChar    expLen    features    fractLen    hash    i    inputLen    intLen    len    maxCode    nameLen    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    start    startPtr    char[]    _inputBuffer    buf    outBuf        	jacksoncore_8366_ReaderBasedJsonParser_1_1	1237	1	src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
513	[PATCH]    if    (values.size()    ==    (numberOfArgs    -    1))	[BUG]    [BUGGY]    if    (values.size()    >=    (numberOfArgs    -    1))    [FE]    junit.framework.ComparisonFailure:    expected:<property[]>    but    was:<property[=value]>    testAnt    [CONTEXT]    while    (index    !=    -1)    {        [BUGGY]    if    (values.size()    >=    (numberOfArgs    -    1))    [BUGGY]    {    break;    }            add(value.substring(0,    index));            [CLASS]        Option    [METHOD]    processValue    [RETURN_TYPE]    void        String    value    [VARIABLES]    boolean    hasArg    optionalArg    required    ArrayList    values    char    sep    valuesep    Object    type    String    argName    description    longOpt    opt    value    int    UNINITIALIZED    UNLIMITED_VALUES    index    num    numberOfArgs        	cli_229_Option_1_1	441	1	src/java/org/apache/commons/cli/Option.java
514	[PATCH]    if    (b.getDimension()    !=    m)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    org.apache.commons.math3.exception.DimensionMismatchException:    2    !=    2    testPlane    [CONTEXT]    public    RealVector    solve(RealVector    b)    {    final    int    n    =    qrt.length;    final    int    m    =    qrt[0].length;    [BUGGY]    if    (true)    {    [BUGGY]    throw    new    DimensionMismatchException(b.getDimension(),    m);    }    if    (!isNonSingular())    {    throw    new    SingularMatrixException();    }    final    double[]    x    =    new    double[n];    final    double[]    y    =    b.toArray();            [CLASS]        QRDecomposition    Solver    [METHOD]    solve    [RETURN_TYPE]    RealVector        RealVector    b    [VARIABLES]    boolean    double[]    qrtCol    qrtMinor    qrtRow    rDiag    x    y    RealMatrix    cachedH    cachedQ    cachedQT    cachedR    matrix    double    a    alpha    c    diag    dotProduct    threshold    xNormSqr    yRow    RealVector    b    double[][]    ha    matrix    qrt    qta    ra    int    i    m    minor    n    row        	math_60252_QRDecomposition_1_1	343	1	src/main/java/org/apache/commons/math3/linear/QRDecomposition.java
515	[PATCH]    if    ((chars[i]    <    '0'    ||    chars[i]    >    '9')	[BUG]    [BUGGY]    if    ((chars[i]    <    '0'    ||    false)    [FE]    junit.framework.AssertionFailedError:    isNumber(String)    8    Neg    failed    testIsNumber    [CONTEXT]    boolean    foundDigit    =    false;        final    int    start    =    (chars[0]    ==    '-')    ?    1    :    0;    if    (sz    >    start    +    1    &&    chars[start]    ==    '0'    &&    chars[start    +    1]    ==    'x')    {    int    i    =    start    +    2;    if    (i    ==    sz)    {    return    false;    }        for    (;    i    <    chars.length;    i++)    {    [BUGGY]    if    ((chars[i]    <    '0'    ||    false)    [BUGGY]    &&    (chars[i]    <    'a'    ||    chars[i]    >    'f')    &&    (chars[i]    <    'A'    ||    chars[i]    >    'F'))    {    return    false;    }    }    return    true;    }    sz--;        int    i    =    start;    [CLASS]        NumberUtils    [METHOD]    isNumber    [RETURN_TYPE]    boolean        String    str    [VARIABLES]    Integer    INTEGER_MINUS_ONE    INTEGER_ONE    INTEGER_ZERO    Float    FLOAT_MINUS_ONE    FLOAT_ONE    FLOAT_ZERO    f    boolean    allowSigns    foundDigit    hasDecPoint    hasExp    Byte    BYTE_MINUS_ONE    BYTE_ONE    BYTE_ZERO    Long    LONG_MINUS_ONE    LONG_ONE    LONG_ZERO    String    str    Double    DOUBLE_MINUS_ONE    DOUBLE_ONE    DOUBLE_ZERO    d    Short    SHORT_MINUS_ONE    SHORT_ONE    SHORT_ZERO    int    i    start    sz    char[]    chars        	lang_18291_NumberUtils_1_1	1353	1	src/main/java/org/apache/commons/lang3/math/NumberUtils.java
516	[PATCH]    for    (int    i    =    0;    i    <    period.size();    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    0;    i    <=    period.size();    i++)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    8    testPlus_RP    [CONTEXT]    public    Partial    withPeriodAdded(ReadablePeriod    period,    int    scalar)    {    if    (period    ==    null    ||    scalar    ==    0)    {    return    this;    }    int[]    newValues    =    getValues();    [BUGGY]    for    (int    i    =    0;    i    <=    period.size();    i++)    {    [BUGGY]    DurationFieldType    fieldType    =    period.getFieldType(i);    int    index    =    indexOf(fieldType);    if    (index    >=    0)    {    newValues    =    getField(index).add(this,    index,    newValues,    FieldUtils.safeMultiply(period.getValue(i),    scalar));    }    }    return    new    Partial(this,    newValues);    }    [CLASS]        Partial    Property    [METHOD]    withPeriodAdded    [RETURN_TYPE]    Partial        ReadablePeriod    period    int    scalar    [VARIABLES]    boolean    DateTimeFieldType[]    iTypes    newTypes    types    Partial    iPartial    newPartial    partial    ReadablePeriod    period    DurationFieldType    fieldType    int[]    iValues    newValues    values    Chronology    chrono    chronology    iChronology    newChronology    long    serialVersionUID    DateTimeFormatter[]    iFormatter    int    amount    compare    fieldIndex    i    iFieldIndex    index    scalar    value        	time_6166_Partial_1_1	607	1	src/main/java/org/joda/time/Partial.java
517	[PATCH]    if    (complexity    <    minComplexity)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    testCharsetOptimizations    [CONTEXT]    char    groupName    =    0;    CharRanges    simplest    =    null;    int    minComplexity    =    DecomposedCharset.complexity(ranges);    for    (Map.Entry<Character,    CharRanges>    namedGroup    :    NAMED_CHAR_GROUPS.entrySet())    {    CharRanges    group    =    namedGroup.getValue();    if    (ranges.containsAll(group))    {    CharRanges    withoutGroup    =    ranges.difference(group).union(    rangesInterIeExplicits);    int    complexity    =    DecomposedCharset.complexity(withoutGroup);    [BUGGY]    if    (false)    {    [BUGGY]    simplest    =    withoutGroup;    groupName    =    namedGroup.getKey().charValue();    minComplexity    =    complexity;    }    }    }    if    (simplest    !=    null)    {    namedGroups.append('\\').append(groupName);    ranges    =    simplest;    }    else    {    [CLASS]        RegExpTree    1Parser    RegExpTreeAtom    Empty    Anchor    WordBoundary    BackReference    Text    Repetition    Alternation    LookaheadAssertion    CapturingGroup    Charset    DecomposedCharset    Concatenation    1Simplifier    [METHOD]    decompose    [RETURN_TYPE]    RegExpTree$DecomposedCharset        CharRanges    ranges    boolean    inverted    [VARIABLES]    RegExpTree    NEVER_MATCHES    a    alternative    atom    b    body    charAlternative    child    first    follower    last    out    preceder    simpleBody    t    StringBuilder    namedGroups    ImmutableList    alternatives    elements    Charset    DOT_CHARSET    cs    String    canonicalized    counts    flags    namedGroups    pattern    text    int    bestComplexity    bodyEnd    bodyLen    bodyStart    comma    complexity    digit    end    expanded    expandedMax    expandedMin    expandedSuffixLen    groupIndex    i    len    limit    max    memberIdx    min    minComplexity    n    nCharsets    nDigits    next    numCapturingGroups    octLimit    pos    possibleGroupIndex    result    start    suffixLen    twoDigitGroupIndex    type    ImmutableMap    NAMED_CHAR_GROUPS    Empty    INSTANCE    Entry    namedGroup    boolean    capturing    greedy    inverse    inverted    isCaseInsensitive    positive    char    ch    codeUnit    end    groupName    next    possibleGroupName    start    type    CharRanges    DIGITS    IE_SPACE_CHARS    IE_SPEC_ERRORS    INVERSE_WORD_CHARS    LCASE_LETTERS    LETTERS    SPACE_CHARS    UCASE_LETTERS    WORD_CHARS    best    charGroup    chars    group    ieExplicits    lcaseLetters    lcaseLettersToUpper    option    range    ranges    rangesInterIeExplicits    simplest    ucaseLetters    ucaseLettersToLower    withoutGroup    withoutNamedGroups    List    alternatives    charAlternatives    elements    simplified        	closure_50172_RegExpTree_1_1	1449	1	src/com/google/javascript/jscomp/regex/RegExpTree.java
518	[PATCH]    if    (lhs    ==    rhs)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError    testShortArray    [CONTEXT]    public    EqualsBuilder    append(short[]    lhs,    short[]    rhs)    {    if    (isEquals    ==    false)    {    return    this;    }    [BUGGY]    if    (false)    {    [BUGGY]    return    this;    }    if    (lhs    ==    null    ||    rhs    ==    null)    {    this.setEquals(false);    return    this;    }    if    (lhs.length    !=    rhs.length)    {    this.setEquals(false);    return    this;    }    [CLASS]        EqualsBuilder    [METHOD]    append    [RETURN_TYPE]    EqualsBuilder        short[]    lhs    short[]    rhs    [VARIABLES]    short[]    lhs    rhs    int    i    boolean    isEquals    lhs    rhs    superEquals    testTransients    useTransients        	mockito_1525_EqualsBuilder_1_1	640	1	src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java
519	[PATCH]    if    (bld.canBuildFormatter()    ==    false)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.UnsupportedOperationException:    Both    printing    and    parsing    not    supported    testToString5    [CONTEXT]    }    else    if    (workingFields.remove(DateTimeFieldType.weekyear()))    {    bld.append(Constants.we);    reducedPrec    =    true;    }    boolean    datePresent    =    (workingFields.size()    <    inputSize);        time(bld,    workingFields,    extended,    strictISO,    reducedPrec,    datePresent);            [BUGGY]    if    (false)    {    [BUGGY]    throw    new    IllegalArgumentException(   "No    valid    format    for    fields:       "    +    fields);    }            try    {    fields.retainAll(workingFields);    }    catch    (UnsupportedOperationException    ex)    {        }    [CLASS]        ISODateTimeFormat    Constants    [METHOD]    forFields    [RETURN_TYPE]    DateTimeFormatter        DateTimeFieldType>    fields    boolean    extended    boolean    strictISO    [VARIABLES]    boolean    datePresent    extended    reducedPrec    strictISO    Set    workingFields    Collection    fields    DateTimeFormatter    bd    bdt    bdtx    bod    bodt    bodtx    bt    btt    bttx    btx    bwd    bwdt    bwdtx    dh    dhm    dhms    dhmsf    dhmsl    dme    dotp    dp    dpe    dt    dtp    dtx    dwe    dye    fse    hde    hm    hms    hmsf    hmsl    ldotp    ldp    lte    ltp    mhe    mye    od    odt    odtx    sme    t    tp    tpe    tt    ttx    tx    wdt    wdtx    we    ww    wwd    wwe    ye    ym    ymd    ze    int    inputSize    DateTimeFormatterBuilder    bld    UnsupportedOperationException    ex        	time_16048_ISODateTimeFormat_1_1	187	1	src/main/java/org/joda/time/format/ISODateTimeFormat.java
520	[PATCH]    if    ((raw[ii]    &    BITS[bits])    ==    0)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.ComparisonFailure:    expected:<[00000000]>    but    was:<[11111111]>    testToAsciiChars    [CONTEXT]    return    EMPTY_CHAR_ARRAY;    }        char[]    l_ascii    =    new    char[raw.length    <<    3];                    for    (int    ii    =    0,    jj    =    l_ascii.length    -    1;    ii    <    raw.length;    ii++,    jj    -=    8)    {    for    (int    bits    =    0;    bits    <    BITS.length;    ++bits)    {    [BUGGY]    if    (false)    {    [BUGGY]    l_ascii[jj    -    bits]    =    '0';    }    else    {    l_ascii[jj    -    bits]    =    '1';    }    }    }    return    l_ascii;    }    [CLASS]        BinaryCodec    [METHOD]    toAsciiChars    [RETURN_TYPE]    char[]        byte[]    raw    [VARIABLES]    byte[]    EMPTY_BYTE_ARRAY    ascii    l_ascii    l_raw    raw    int[]    BITS    boolean    int    BIT_0    BIT_1    BIT_2    BIT_3    BIT_4    BIT_5    BIT_6    BIT_7    bits    ii    jj    char[]    EMPTY_CHAR_ARRAY    ascii    l_ascii        	codec_1043_BinaryCodec_1_1	264	1	src/java/org/apache/commons/codec/binary/BinaryCodec.java
521	[PATCH]    byte    val1    =    ((b1    &    SIGN)    ==    0)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);	[BUG]    [BUGGY]    byte    val1    =    ((b1    &    SIGN)    <=    0)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -24    testEncodeDecodeSmall    [CONTEXT]    }        dataIndex    =    i    *    3;    if    (fewerThan24bits    ==    EIGHTBIT)    {    b1    =    binaryData[dataIndex];    k    =    (byte)    (b1    &    0x03);            [BUGGY]    byte    val1    =    ((b1    &    SIGN)    <=    0)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);    [BUGGY]    encodedData[encodedIndex]    =    lookUpBase64Alphabet[val1];    encodedData[encodedIndex    +    1]    =    lookUpBase64Alphabet[k    <<    4];    encodedData[encodedIndex    +    2]    =    PAD;    encodedData[encodedIndex    +    3]    =    PAD;    }    else    if    (fewerThan24bits    ==    SIXTEENBIT)    {    b1    =    binaryData[dataIndex];    b2    =    binaryData[dataIndex    +    1];    l    =    (byte)    (b2    &    0x0f);    k    =    (byte)    (b1    &    0x03);    [CLASS]        Base64    [METHOD]    encodeBase64    [RETURN_TYPE]    byte[]        byte[]    binaryData    boolean    isChunked    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    binaryData    encodedData    lookUpBase64Alphabet    pArray    boolean    isChunked    byte    PAD    b1    b2    b3    k    l    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    length    nextSeparatorIndex    long    binaryDataLength    encodedDataLengthLong    fewerThan24bits    lengthDataBits    tripletCount        	codec_407_Base64_1_1	353	1	src/java/org/apache/commons/codec/binary/Base64.java
522	[PATCH]    if    (contentClass    ==    _elementType.getRawClass())    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    expected    same:<[collection    type;    class    java.util.List,    contains    [simple    type,    class    java.lang.String]]>    was    not:<[collection    type;    class    java.util.List,    contains    [simple    type,    class    java.lang.String]]>    testCollectionType    [CONTEXT]    public    JavaType    narrowContentsBy(Class<?>    contentClass)    {        [BUGGY]    if    (false)    {    [BUGGY]    return    this;    }    return    new    CollectionType(_class,    _elementType.narrowBy(contentClass),    _valueHandler,    _typeHandler,    _asStatic);    }    [CLASS]        CollectionType    [METHOD]    narrowContentsBy    [RETURN_TYPE]    JavaType        Class<?>    contentClass    [VARIABLES]    long    serialVersionUID    Class    contentClass    boolean        	jacksondatabind_2659_CollectionType_1_1	34	1	src/main/java/com/fasterxml/jackson/databind/type/CollectionType.java
523	[PATCH]    if    (numCapturingGroups    >=    possibleGroupIndex)    {	[BUG]    [BUGGY]    if    (numCapturingGroups    >    possibleGroupIndex)    {    [FE]    junit.framework.AssertionFailedError:    testBackReferences    [CONTEXT]    private    RegExpTree    parseEscape()    {    Preconditions.checkState(pattern.charAt(pos)    ==    '\\');    ++pos;    char    ch    =    pattern.charAt(pos);    if    (ch    ==    'b'    ||    ch    ==    'B')    {    ++pos;    return    new    WordBoundary(ch);    }    else    if    ('1'    <=    ch    &&    ch    <=    '9')    {    ++pos;    int    possibleGroupIndex    =    ch    -    '0';    [BUGGY]    if    (numCapturingGroups    >    possibleGroupIndex)    {    [BUGGY]    if    (pos    <    limit)    {    char    next    =    pattern.charAt(pos);    if    ('0'    <=    next    &&    next    <=    '9')    {    int    twoDigitGroupIndex    =    possibleGroupIndex    *    10    +    (next    -    '0');    if    (numCapturingGroups    >=    twoDigitGroupIndex)    {    ++pos;    possibleGroupIndex    =    twoDigitGroupIndex;    }    }    }    [CLASS]        RegExpTree    1Parser    RegExpTreeAtom    Empty    Anchor    WordBoundary    BackReference    Text    Repetition    Alternation    LookaheadAssertion    CapturingGroup    Charset    DecomposedCharset    Concatenation    1Simplifier    [METHOD]    parseRegExp    [RETURN_TYPE]    RegExpTree        String    pattern    String    flags    [VARIABLES]    RegExpTree    NEVER_MATCHES    a    atom    b    body    child    out    preceder    ImmutableList    alternatives    elements    Builder    alternatives    Charset    DOT_CHARSET    NumberFormatException    ex    String    counts    flags    namedGroups    pattern    text    int    comma    digit    end    groupIndex    len    limit    max    min    n    numCapturingGroups    octLimit    pos    possibleGroupIndex    result    start    twoDigitGroupIndex    type    ImmutableMap    NAMED_CHAR_GROUPS    Empty    INSTANCE    boolean    capturing    greedy    inverse    inverted    isCaseInsensitive    positive    char    ch    codeUnit    end    next    possibleGroupName    start    type    CharRanges    DIGITS    IE_SPACE_CHARS    IE_SPEC_ERRORS    INVERSE_WORD_CHARS    LCASE_LETTERS    LETTERS    SPACE_CHARS    UCASE_LETTERS    WORD_CHARS    charGroup    group    ieExplicits    range    ranges    List    alternatives    elements    simplified        	closure_49179_RegExpTree_1_1	426	1	src/com/google/javascript/jscomp/regex/RegExpTree.java
524	[PATCH]    }    else    if    (modules.get(0).getInputs().isEmpty()    &&    modules.size()    >    1)    {	[BUG]    [BUGGY]    }    else    if    (modules.get(0).getInputs().isEmpty()    &&    modules.size()    >=    1)    {    [FE]    junit.framework.AssertionFailedError:    Unexpected    parse    error(s):    JSC_EMPTY_ROOT_MODULE_ERROR.    Root    module    {0}    must    contain    at    least    one    source    code    input    at    (unknown    source)    line    (unknown    line)    :    (unknown    column)    testWithNoInputs    [CONTEXT]    private    void    checkFirstModule(List<JSModule>    modules)    {    if    (modules.isEmpty())    {    report(JSError.make(EMPTY_MODULE_LIST_ERROR));    [BUGGY]    }    else    if    (modules.get(0).getInputs().isEmpty()    &&    modules.size()    >=    1)    {    [BUGGY]        report(JSError.make(EMPTY_ROOT_MODULE_ERROR,    modules.get(0).getName()));    }    }    [CLASS]        Compiler    1    3    4    2    5    6    7    8    9    10    CodeBuilder    IntermediateState    [METHOD]    checkFirstModule    [RETURN_TYPE]    void        JSModule>    modules    [VARIABLES]    FunctionInformationMap    functionInformationMap    ErrorManager    errorManager    StringBuilder    debugLog    sb    Config    parserConfig    Node    externAndJsRoot    externsRoot    jsRoot    PerformanceTracker    tracker    PassConfig    passes    String    CONFIG_RESOURCE    SINGLETON_MODULE_NAME    SYNTHETIC_EXTERNS    currentPassName    externExports    lastPassName    LifeCycleStage    lifeCycleStage    Logger    logger    PassFactory    sanityCheck    long    COMPILER_STACK_SIZE    serialVersionUID    TypeValidator    typeValidator    JSTypeRegistry    typeRegistry    ErrorReporter    defaultErrorReporter    oldErrorReporter    RecentChange    recentChange    GlobalVarReferenceMap    globalRefMap    DiagnosticType    DUPLICATE_EXTERN_INPUT    DUPLICATE_INPUT    EMPTY_MODULE_LIST_ERROR    EMPTY_ROOT_MODULE_ERROR    MISSING_ENTRY_ERROR    MODULE_DEPENDENCY_ERROR    MOTION_ITERATIONS_ERROR    OPTIMIZE_LOOP_ERROR    SourceMap    sourceMap    List    codeChangeHandlers    externs    files    guards    inputs    modules    WarningsGuard    warningsGuard    ReverseAbstractInterpreter    abstractInterpreter    PrintStream    outStream    stream    double    progress    Tracer    currentTracer    JSModuleGraph    e    moduleGraph    int    colCount    lineCount    syntheticCodeId    uniqueNameId    Thread    compilerThread    CompilerInput    synthesizedExternsInput    boolean    colorize    hasRegExpGlobalReferences    isExtern    useThreads    State    passConfigState    CodingConvention    defaultCodingConvention    CompilerOptions    options    ExecutorService    compilerExecutor    Map    injectedLibraries    inputsById        	closure_6380_Compiler_1_1	448	1	src/com/google/javascript/jscomp/Compiler.java
525	[PATCH]    if    (type    ==    REPLAY_START_DELAYED)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.IllegalStateException:    Unrecognized    type    to    repeat:    3    testWithTwoAttributes    [CONTEXT]    }    if    (type    ==    REPLAY_END)    {        _localName    =    _xmlReader.getLocalName();    _namespaceURI    =    _xmlReader.getNamespaceURI();    if    (_currentWrapper    !=    null)    {    _currentWrapper    =    _currentWrapper.getParent();    }    return    XML_END_ELEMENT;    }    [BUGGY]    if    (false)    {    [BUGGY]    if    (_currentWrapper    !=    null)    {    _currentWrapper    =    _currentWrapper.intermediateWrapper();    }    _localName    =    _nextLocalName;    _namespaceURI    =    _nextNamespaceURI;    _nextLocalName    =    null;    _nextNamespaceURI    =    null;            [CLASS]        XmlTokenStream    [METHOD]    _handleRepeatElement    [RETURN_TYPE]    int        [VARIABLES]    XMLStreamReader2    _xmlReader    Object    _sourceReference    sourceRef    String    _localName    _namespaceURI    _nextLocalName    _nextNamespaceURI    _textValue    localName    ns    text    boolean    int    REPLAY_END    REPLAY_START_DELAYED    REPLAY_START_DUP    XML_ATTRIBUTE_NAME    XML_ATTRIBUTE_VALUE    XML_END    XML_END_ELEMENT    XML_START_ELEMENT    XML_TEXT    _attributeCount    _currentState    _nextAttributeIndex    _repeatElement    type    ElementWrapper    _currentWrapper        	jacksonxml_1248_XmlTokenStream_1_1	452	1	src/main/java/com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream.java
526	[PATCH]    value.indexOf(   "CZ   ")    >    -1    ||    value.indexOf(   "WITZ   ")    >    -1;	[BUG]    [BUGGY]    value.indexOf(   "CZ   ")    >=    -1    ||    value.indexOf(   "WITZ   ")    >    -1;    [FE]    junit.framework.AssertionFailedError:    Expected    match    [115]    disition    and    decision    testIsDoubleMetaphoneEqualWithMATCHES    [CONTEXT]    private    boolean    isSlavoGermanic(String    value)    {    return    value.indexOf('W')    >    -1    ||    value.indexOf('K')    >    -1    ||    [BUGGY]    value.indexOf(   "CZ   ")    >=    -1    ||    value.indexOf(   "WITZ   ")    >    -1;    [BUGGY]    }    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    isSlavoGermanic    [RETURN_TYPE]    boolean        String    value    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    value    value1    value2    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    boolean    int    index    maxCodeLen    maxLength        	codec_3231_DoubleMetaphone_1_1	889	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
527	[PATCH]    if    (signature[1]    !=    0x65)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    org.apache.commons.compress.archivers.ArchiveException:    No    Archiver    found    for    the    stream    signature    testDetection    [CONTEXT]    public    static    boolean    matches(byte[]    signature,    int    length)    {        if    (length    <    8)    {    return    false;    }    if    (signature[0]    !=    0x74)    {    return    false;    }    [BUGGY]    if    (true)    {    [BUGGY]    return    false;    }    if    (signature[2]    !=    0x73)    {    return    false;    }    if    (signature[3]    !=    0x74)    {    return    false;    }    if    (signature[4]    !=    0x31)    {    return    false;    [CLASS]        TarArchiveInputStream    [METHOD]    matches    [RETURN_TYPE]    boolean        byte[]    signature    int    length    [VARIABLES]    byte[]    b    buf    headerBuf    newBuf    oneBuf    readBuf    rec    signature    skipBuf    boolean    b    debug    hasHitEOF    TarBuffer    buffer    int    BUFFER_SIZE    BYTE_MASK    LARGE_BUFFER_SIZE    SMALL_BUFFER_SIZE    blockSize    length    newLen    num    numRead    numToRead    offset    realSkip    recLen    recordSize    sz    totalRead    long    entryOffset    entrySize    numToSkip    skip    skipped    TarArchiveEntry    currEntry    e        	compress_2636_TarArchiveInputStream_1_1	420	1	src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java
528	[PATCH]    (FRONTV.indexOf(local.charAt(n    +    1))    >=    0)    &&	[BUG]    [BUGGY]    (true)    &&    [FE]    junit.framework.AssertionFailedError:    Expected    match    between    Gary    and    Cahra    testIsMetaphoneEqual2    [CONTEXT]    (    regionMatch(local,    n,       "GN   ")    ||    regionMatch(local,    n,       "GNED   ")    )    )    {    break;    }    if    (isPreviousChar(local,    n,    'G'))    {    hard    =    true    ;    }    else    {    hard    =    false    ;    }    if    (!isLastChar(wdsz,    n)    &&    [BUGGY]    (true)    &&    [BUGGY]    (!hard))    {    code.append('J');    }    else    {    code.append('K');    }    break    ;    case    'H':    if    (isLastChar(wdsz,    n))    {    break    ;    }    [CLASS]        Metaphone    [METHOD]    metaphone    [RETURN_TYPE]    String        String    txt    [VARIABLES]    char    symb    StringBuffer    code    local    String    FRONTV    VARSON    VOWELS    txt    boolean    hard    int    maxCodeLen    n    wdsz    char[]    inwd        	codec_3638_Metaphone_1_1	219	1	src/java/org/apache/commons/codec/language/Metaphone.java
529	[PATCH]    if    (args    ==    null){	[BUG]    [BUGGY]    if    (false){    [FE]    java.lang.NullPointerException    testCoreFunction    [CONTEXT]    {if    (true)    return    compiler.function(name,    args.toArray());}    }    throw    new    Error(   "Missing    return    statement    in    function   ");    }    final    public    Object    CoreFunctionCall()    throws    ParseException    {    int    code    =    0;    ArrayList    args;    code    =    CoreFunctionName();    args    =    ArgumentList();    [BUGGY]    if    (false){    [BUGGY]    {if    (true)    return    compiler.function(code,    null);}    }    else    {    {if    (true)    return    compiler.function(code,    args.toArray());}    }    throw    new    Error(   "Missing    return    statement    in    function   ");    }    final    public    ArrayList    ArgumentList()    throws    ParseException    {    ArrayList    args    =    null;    [CLASS]    	jxpath_1709_XPathParser_1_1	1026	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java
530	[PATCH]    return    codePoint    <    0x20	[BUG]    [BUGGY]    return    false    [FE]    junit.framework.ComparisonFailure:    expected:<123[\n]456>    but    was:<123[    testNewlineEscaping    [CONTEXT]    private    static    boolean    isControlCharacter(int    codePoint)    {        [BUGGY]    return    false    [BUGGY]    ||    codePoint    ==    0x2028    ||    codePoint    ==    0x2029    ||    (codePoint    >=    0x7f    &&    codePoint    <=    0x9f);    }    [CLASS]        Escaper    [METHOD]    isControlCharacter    [RETURN_TYPE]    boolean        int    codePoint    [VARIABLES]    Set    HTML_ESCAPE_CHARS    JS_ESCAPE_CHARS    boolean    escapeHtmlCharacters    int    codePoint    char[]    HEX_CHARS        	gson_404_Escaper_1_1	136	1	gson/src/main/java/com/google/gson/Escaper.java
531	[PATCH]    return    (this.numberOfArgs    >    0)    ||    (numberOfArgs    ==    UNLIMITED_VALUES);	[BUG]    [BUGGY]    return    (this.numberOfArgs    >    0)    ||    (numberOfArgs    >=    UNLIMITED_VALUES);    [FE]    junit.framework.AssertionFailedError:    Unexpected    exception:Missing    argument    for    option:projecthelp    testAnt    [CONTEXT]    public    boolean    hasArg()    {    [BUGGY]    return    (this.numberOfArgs    >    0)    ||    (numberOfArgs    >=    UNLIMITED_VALUES);    [BUGGY]    }    [CLASS]        Option    [METHOD]    hasArg    [RETURN_TYPE]    boolean        [VARIABLES]    boolean    hasArg    optionalArg    required    ArrayList    values    char    valuesep    Object    type    String    argName    description    longOpt    opt    int    UNINITIALIZED    UNLIMITED_VALUES    numberOfArgs        	cli_176_Option_1_1	261	1	src/java/org/apache/commons/cli/Option.java
532	[PATCH]    if    (len    >    0)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<99>    but    was:<-2>    testReadLookahead2    [CONTEXT]    public    int    read(char[]    buf,    int    offset,    int    length)    throws    IOException    {    if    (length    ==    0)    {    return    0;    }    int    len    =    super.read(buf,    offset,    length);        [BUGGY]    if    (false)    {    [BUGGY]    for    (int    i    =    offset;    i    <    offset    +    len;    i++)    {    char    ch    =    buf[i];    if    (ch    ==    '\n')    {    if    ('\r'    !=    (i    >    0    ?    buf[i-1]:    lastChar))    {    lineCounter++;    }    }    else    if    (ch    ==    '\r')    {    lineCounter++;    }    [CLASS]        ExtendedBufferedReader    [METHOD]    read    [RETURN_TYPE]    int        char[]    buf    int    offset    int    length    [VARIABLES]    char    ch    boolean    int    END_OF_STREAM    UNDEFINED    current    i    lastChar    len    length    lineCounter    offset    char[]    buf        	csv_325_ExtendedBufferedReader_1_1	87	1	src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java
533	[PATCH]    if    (isBlock    !=    tag.isBlock)    return    false;	[BUG]    [BUGGY]    if    (true)    return    false;    [FE]    junit.framework.AssertionFailedError:    expected:    org.jsoup.parser.Tag<foo>    but    was:    org.jsoup.parser.Tag<foo>    defaultSemantics    [CONTEXT]    public    boolean    equals(Object    o)    {    if    (this    ==    o)    return    true;    if    (o    ==    null    ||    getClass()    !=    o.getClass())    return    false;    Tag    tag    =    (Tag)    o;    if    (canContainBlock    !=    tag.canContainBlock)    return    false;    if    (canContainInline    !=    tag.canContainInline)    return    false;    if    (empty    !=    tag.empty)    return    false;    [BUGGY]    if    (true)    return    false;    [BUGGY]    if    (optionalClosing    !=    tag.optionalClosing)    return    false;    if    (tagName    !=    null    ?    !tagName.equals(tag.tagName)    :    tag.tagName    !=    null)    return    false;    return    true;    }    [CLASS]        Tag    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    o    [VARIABLES]    List    ancestors    Object    o    boolean    canContainBlock    canContainInline    empty    isBlock    optionalClosing    preserveWhitespace    Tag    child    defaultAncestor    tag    String    tagName    Map    tags        	jsoup_637_Tag_1_1	174	1	src/main/java/org/jsoup/parser/Tag.java
534	[PATCH]    if    (retval    >    0)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError    testComparatorChainOnMinvaluedCompatator    [CONTEXT]        final    Iterator<Comparator<E>>    comparators    =    comparatorChain.iterator();    for    (int    comparatorIndex    =    0;    comparators.hasNext();    ++comparatorIndex)    {    final    Comparator<?    super    E>    comparator    =    comparators.next();    int    retval    =    comparator.compare(o1,o2);    if    (retval    !=    0)    {        if    (orderingBits.get(comparatorIndex)    ==    true)    {    [BUGGY]    if    (false)    {    [BUGGY]    retval    =    -1;    }    else    {    retval    =    1;    }    }    return    retval;    }    }            [CLASS]        ComparatorChain    [METHOD]    compare    [RETURN_TYPE]    int        final    E    o1    final    E    o2    [VARIABLES]    boolean    isLocked    reverse    E    o1    o2    BitSet    bits    orderingBits    Iterator    comparators    List    comparatorChain    list    long    serialVersionUID    int    comparatorIndex    retval    Comparator    comparator        	collections_2768_ComparatorChain_1_1	281	1	src/main/java/org/apache/commons/collections4/comparators/ComparatorChain.java
535	[PATCH]    if    (escape    >    0)    {    //    2-char    escape,    fine	[BUG]    [BUGGY]    if    (escape    !=    0)    {    //    2-char    escape,    fine    [FE]    com.fasterxml.jackson.core.JsonParseException:    Invalid    UTF-8    start    byte    0xff    testLongerRandomSingleChunk    [CONTEXT]    final    int[]    escCodes    =    _outputEscapes;    while    (offset    <    end)    {    int    ch    =    cbuf[offset++];    if    (ch    <=    0x7F)    {    if    (escCodes[ch]    ==    0)    {    outputBuffer[outputPtr++]    =    (byte)    ch;    continue;    }    int    escape    =    escCodes[ch];    [BUGGY]    if    (escape    !=    0)    {        [BUGGY]    outputBuffer[outputPtr++]    =    BYTE_BACKSLASH;    outputBuffer[outputPtr++]    =    (byte)    escape;    }    else    {        outputPtr    =    _writeGenericEscape(ch,    outputPtr);    }    continue;    }    if    (ch    <=    0x7FF)    {    outputBuffer[outputPtr++]    =    (byte)    (0xc0    |    (ch    >>    6));    [CLASS]        UTF8JsonGenerator    [METHOD]    _writeStringSegment2    [RETURN_TYPE]    void        final    char[]    cbuf    int    offset    final    int    end    [VARIABLES]    byte[]    FALSE_BYTES    HEX_CHARS    NULL_BYTES    TRUE_BYTES    _entityBuffer    _outputBuffer    bbuf    buf    bytes    data    encodingBuffer    keyword    outputBuffer    raw    text    boolean    _bufferRecyclable    addQuotes    bufferRecyclable    commaBefore    state    byte    BYTE_0    BYTE_BACKSLASH    BYTE_COLON    BYTE_COMMA    BYTE_LBRACKET    BYTE_LCURLY    BYTE_QUOTE    BYTE_RBRACKET    BYTE_RCURLY    BYTE_u    b    OutputStream    _outputStream    out    int[]    escCodes    int    MAX_BYTES_TO_BUFFER    SURR1_FIRST    SURR1_LAST    SURR2_FIRST    SURR2_LAST    _charBufferLength    _outputEnd    _outputMaxContiguous    _outputTail    blen    bytes    ch    dataLength    end    escape    features    i    left    len    len2    len3    length    missing    offset    outputOffset    outputPtr    start    status    totalLen    char[]    _charBuffer    buf    cbuf    text        	jacksoncore_10061_UTF8JsonGenerator_1_1	1272	1	src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java
536	[PATCH]    if    (this.labelTextAnchor    !=    that.labelTextAnchor)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError    testSerialization    [CONTEXT]    }    if    (!ObjectUtilities.equal(this.labelFont,    that.labelFont))    {    return    false;    }    if    (!PaintUtilities.equal(this.labelPaint,    that.labelPaint))    {    return    false;    }    if    (this.labelAnchor    !=    that.labelAnchor)    {    return    false;    }    [BUGGY]    if    (true)    {    [BUGGY]    return    false;    }    if    (!ObjectUtilities.equal(this.labelOffset,    that.labelOffset))    {    return    false;    }    if    (!this.labelOffsetType.equals(that.labelOffsetType))    {    return    false;    }    return    true;    }    [CLASS]        Marker    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    Stroke    outlineStroke    stroke    TextAnchor    anchor    labelTextAnchor    LengthAdjustmentType    adj    labelOffsetType    RectangleAnchor    anchor    labelAnchor    Paint    labelPaint    outlinePaint    paint    String    label    Marker    that    float    alpha    long    serialVersionUID    Font    font    labelFont    boolean    EventListenerList    listenerList    RectangleInsets    labelOffset    offset    Object    obj        	chart_10790_Marker_1_1	623	1	source/org/jfree/chart/plot/Marker.java
537	[PATCH]    if    (c    ==    '\r'    ||    c    ==    '\n')    {	[BUG]    [BUGGY]    if    (c    >=    '\r'    ||    c    ==    '\n')    {    [FE]    com.google.gson.JsonSyntaxException:    com.google.gson.stream.MalformedJsonException:    Unterminated    array    near    [    testParseComments    [CONTEXT]    private    void    skipToEndOfLine()    throws    IOException    {    while    (pos    <    limit    ||    fillBuffer(1))    {    char    c    =    buffer[pos++];    [BUGGY]    if    (c    >=    '\r'    ||    c    ==    '\n')    {    [BUGGY]    break;    }    }    }    [CLASS]        JsonReader    [METHOD]    skipToEndOfLine    [RETURN_TYPE]    void        [VARIABLES]    boolean    firstElement    hasToken    lenient    result    skipping    char    c    Reader    in    List    stack    JsonToken    expected    firstToken    result    token    String    name    result    value    int    c    count    i    limit    minimum    pos    quote    result    total    char[]    NON_EXECUTE_PREFIX    buffer        	gson_1355_JsonReader_1_1	901	1	gson/src/main/java/com/google/gson/stream/JsonReader.java
538	[PATCH]    }    else    if    (i    <=    INT_QUOTE)    {	[BUG]    [BUGGY]    }    else    if    (i    ==    INT_QUOTE)    {    [FE]    junit.framework.AssertionFailedError:    Expected    an    exception    for    un-escaped    linefeed    in    string    value    testMissingEscaping    [CONTEXT]    }    char    c    =    _inputBuffer[_inputPtr++];    int    i    =    (int)    c;    if    (i    <=    INT_BACKSLASH)    {    if    (i    ==    INT_BACKSLASH)    {                    c    =    _decodeEscaped();    [BUGGY]    }    else    if    (i    ==    INT_QUOTE)    {    [BUGGY]    if    (i    ==    INT_QUOTE)    {    break;    }    if    (i    <    INT_SPACE)    {    _throwUnquotedSpace(i,       "string    value   ");    }    }    }        if    (outPtr    >=    outBuf.length)    {    [CLASS]        ReaderBasedJsonParser    [METHOD]    _finishString2    [RETURN_TYPE]    void        [VARIABLES]    boolean    _tokenIncomplete    eof    firstOk    inObject    negative    char    c    Reader    _reader    r    ObjectCodec    _objectCodec    c    codec    CharsToNameCanonicalizer    _symbols    st    int    _hashSeed    bits    ch    count    decodedData    defaultValue    endChar    expLen    features    fractLen    hash    i    inputLen    intLen    len    maxCode    nameLen    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    start    startPtr    char[]    _inputBuffer    buf    outBuf        	jacksoncore_8656_ReaderBasedJsonParser_1_1	1542	1	src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
539	[PATCH]    return    coll    ==    null    ?    null    :    coll.iterator().next();	[BUG]    [BUGGY]    return    false    ?    null    :    coll.iterator().next();    [FE]    java.lang.NullPointerException    testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately    [CONTEXT]    public    C    get(final    K    key)    {    @SuppressWarnings(   "unchecked   ")    final    Collection<C>    coll    =    (Collection<C>)    index.get(key);    [BUGGY]    return    false    ?    null    :    coll.iterator().next();    [BUGGY]    }    [CLASS]        IndexedCollection    [METHOD]    get    [RETURN_TYPE]    C        final    K    key    [VARIABLES]    MultiMap    index    map    Collection    coll    Transformer    keyTransformer    boolean    added    changed    uniqueIndex    K    key    long    serialVersionUID        	collections_2614_IndexedCollection_1_1	182	1	src/main/java/org/apache/commons/collections4/collection/IndexedCollection.java
540	[PATCH]    for    (int    i    =    0,    isize    =    period.size();    i    <    isize;    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    0,    isize    =    period.size();    i    <=    isize;    i++)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    8    testWithDurationAdded_RP_int    [CONTEXT]    public    long    add(ReadablePeriod    period,    long    instant,    int    scalar)    {    if    (scalar    !=    0    &&    period    !=    null)    {    [BUGGY]    for    (int    i    =    0,    isize    =    period.size();    i    <=    isize;    i++)    {    [BUGGY]    long    value    =    period.getValue(i);    if    (value    !=    0)    {    instant    =    period.getFieldType(i).getField(this).add(instant,    value    *    scalar);    }    }    }    return    instant;    }    [CLASS]        BaseChronology    [METHOD]    add    [RETURN_TYPE]    long        ReadablePeriod    period    long    instant    int    scalar    [VARIABLES]    boolean    ReadablePeriod    period    long    current    duration    endInstant    instant    serialVersionUID    startInstant    value    int    i    isize    scalar        	time_629_BaseChronology_1_1	302	1	src/main/java/org/joda/time/chrono/BaseChronology.java
541	[PATCH]    if    (nameLength    ==    0    ||    name.charAt(nameLength    -    1)    !=    '/')    {	[BUG]    [BUGGY]    if    (false    ||    name.charAt(nameLength    -    1)    !=    '/')    {    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    -1    testTarFileWithFSRoot    [CONTEXT]    String    fileName    =    normalizeFileName(file.getPath());    this.linkName    =    new    StringBuffer(   "   ");    this.name    =    new    StringBuffer(fileName);    if    (file.isDirectory())    {    this.mode    =    DEFAULT_DIR_MODE;    this.linkFlag    =    LF_DIR;    int    nameLength    =    name.length();    [BUGGY]    if    (false    ||    name.charAt(nameLength    -    1)    !=    '/')    {    [BUGGY]    this.name.append(   "/   ");    }    this.size    =    0;    }    else    {    this.mode    =    DEFAULT_FILE_MODE;    this.linkFlag    =    LF_NORMAL;    this.size    =    file.length();    }    this.modTime    =    file.lastModified()    /    MILLIS_PER_SECOND;    [CLASS]        TarArchiveEntry    [METHOD]    <init>    [RETURN_TYPE]    File)        File    file    [VARIABLES]    StringBuffer    groupName    linkName    magic    name    userName    boolean    byte    linkFlag    String    fileName    File    file    int    DEFAULT_DIR_MODE    DEFAULT_FILE_MODE    MAX_NAMELEN    MILLIS_PER_SECOND    devMajor    devMinor    groupId    mode    nameLength    userId    long    modTime    size        	compress_2166_TarArchiveEntry_1_1	212	1	src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java
542	[PATCH]    return    (c    ==    '\n'    ||    c    ==    '\r');	[BUG]    [BUGGY]    return    (c    ==    '\n'    ||    c    <=    '\r');    [FE]    junit.framework.AssertionFailedError:    Token    type    expected:<EOF>    but    was:<EORECORD>    testNextToken1    [CONTEXT]    boolean    isEndOfLine(int    c)    throws    IOException    {        if    (c    ==    '\r'    &&    in.lookAhead()    ==    '\n')    {        c    =    in.read();    }    [BUGGY]    return    (c    ==    '\n'    ||    c    <=    '\r');    [BUGGY]    }    [CLASS]        Lexer    [METHOD]    isEndOfLine    [RETURN_TYPE]    boolean        int    c    [VARIABLES]    char    commmentStart    delimiter    encapsulator    escape    ExtendedBufferedReader    in    CSVFormat    format    boolean    emptyLinesIgnored    isCommentEnabled    isEncapsulating    isEscaping    surroundingSpacesIgnored    int    c        	csv_259_Lexer_1_1	111	1	src/main/java/org/apache/commons/csv/Lexer.java
543	[PATCH]    if    (lhs    ==    null    ||    rhs    ==    null)    {	[BUG]    [BUGGY]    if    (lhs    ==    null    ||    false)    {    [FE]    java.lang.NullPointerException    testShortArray    [CONTEXT]    public    EqualsBuilder    append(short[]    lhs,    short[]    rhs)    {    if    (isEquals    ==    false)    {    return    this;    }    if    (lhs    ==    rhs)    {    return    this;    }    [BUGGY]    if    (lhs    ==    null    ||    false)    {    [BUGGY]    this.setEquals(false);    return    this;    }    if    (lhs.length    !=    rhs.length)    {    this.setEquals(false);    return    this;    }    for    (int    i    =    0;    i    <    lhs.length    &&    isEquals;    ++i)    {    append(lhs[i],    rhs[i]);    }    [CLASS]        EqualsBuilder    [METHOD]    append    [RETURN_TYPE]    EqualsBuilder        short[]    lhs    short[]    rhs    [VARIABLES]    short[]    lhs    rhs    int    i    boolean    isEquals    lhs    rhs    superEquals    testTransients    useTransients        	mockito_1527_EqualsBuilder_1_1	643	1	src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java
544	[PATCH]    if    (wrapperName    !=    null    &&    wrapperName    !=    PropertyName.NO_NAME)    {	[BUG]    [BUGGY]    if    (wrapperName    !=    null    &&    true)    {    [FE]    com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException:    Unrecognized    field       "   "    (class    com.fasterxml.jackson.dataformat.xml.lists.EmptyListDeserTest$Entry),    not    marked    as    ignorable    (one    known    property:       "id   "])    testEmptyList    [CONTEXT]    SettableBeanProperty    prop    =    it.next();                JavaType    type    =    prop.getType();    if    (!TypeUtil.isIndexedType(type))    {    continue;    }    PropertyName    wrapperName    =    prop.getWrapperName();        [BUGGY]    if    (wrapperName    !=    null    &&    true)    {    [BUGGY]    continue;    }    if    (unwrappedNames    ==    null)    {    unwrappedNames    =    new    HashSet<String>();    }        unwrappedNames.add(prop.getName());    }        if    (unwrappedNames    ==    null)    {    [CLASS]        WrapperHandlingDeserializer    [METHOD]    createContextual    [RETURN_TYPE]    JsonDeserializer        DeserializationContext    ctxt    BeanProperty    property    [VARIABLES]    PropertyName    wrapperName    JavaType    _type    type    Set    _namesToWrap    namesToWrap    BeanDeserializerBase    newDelegatee    boolean    SettableBeanProperty    prop    Iterator    it    DeserializationContext    ctxt    JsonDeserializer    del    long    serialVersionUID    BeanProperty    property    HashSet    unwrappedNames        	jacksonxml_1550_WrapperHandlingDeserializer_1_1	93	1	src/main/java/com/fasterxml/jackson/dataformat/xml/deser/WrapperHandlingDeserializer.java
545	[PATCH]    if    (coll.contains(it.next())    ==    false)    {	[BUG]    [BUGGY]    if    (coll.contains(it.next()))    {    [FE]    junit.framework.ComparisonFailure:    expected:<[[2,    2,    4,    4]]>    but    was:<[[1,    1,    3,    3,    5,    5]]>    testRetainAll    [CONTEXT]    public    boolean    retainAll(final    Collection<?>    coll)    {    boolean    modified    =    false;    final    Iterator<E>    it    =    iterator();    while    (it.hasNext())    {    [BUGGY]    if    (coll.contains(it.next()))    {    [BUGGY]    it.remove();    modified    =    true;    }    }    return    modified;    }    [CLASS]        AbstractLinkedList    Node    LinkedListIterator    LinkedSubListIterator    LinkedSubList    [METHOD]    retainAll    [RETURN_TYPE]    boolean        Collection<?>    coll    [VARIABLES]    LinkedSubList    sub    AbstractLinkedList    parent    boolean    modified    E    e    oldValue    value    Node    current    header    next    node    previous    Iterator    it    Collection    coll    int    expectedModCount    fromIndex    fromIndexInclusive    i    index    modCount    nextIndex    offset    size    startIndex    toIndex    toIndexExclusive        	collections_4699_AbstractLinkedList_1_1	282	1	src/main/java/org/apache/commons/collections4/list/AbstractLinkedList.java
546	[PATCH]    if    ((footer    !=    null)    &&    (footer.trim().length()    >    0))	[BUG]    [BUGGY]    if    ((footer    !=    null)    &&    (false))    [FE]    junit.framework.ComparisonFailure:    expected:<...ge:    foobar    test21215    [CONTEXT]    printUsage(pw,    width,    cmdLineSyntax);    }    if    ((header    !=    null)    &&    (header.trim().length()    >    0))    {    printWrapped(pw,    width,    header);    }    printOptions(pw,    width,    options,    leftPad,    descPad);        [BUGGY]    if    ((footer    !=    null)    &&    (false))    [BUGGY]    {    printWrapped(pw,    width,    footer);    }    }    [CLASS]        HelpFormatter    OptionComparator    [METHOD]    printHelp    [RETURN_TYPE]    void        PrintWriter    pw    int    width    String    cmdLineSyntax    String    header    Options    options    int    leftPad    int    descPad    String    footer    boolean    autoUsage    [VARIABLES]    Options    options    String    DEFAULT_ARG_NAME    DEFAULT_LONG_OPT_PREFIX    DEFAULT_OPT_PREFIX    DEFAULT_SYNTAX_PREFIX    cmdLineSyntax    defaultArgName    defaultLongOptPrefix    defaultNewLine    defaultOptPrefix    defaultSyntaxPrefix    footer    header    name    newline    prefix    boolean    autoUsage    int    DEFAULT_DESC_PAD    DEFAULT_LEFT_PAD    DEFAULT_WIDTH    defaultDescPad    defaultLeftPad    defaultWidth    descPad    leftPad    padding    width    PrintWriter    pw        	cli_484_HelpFormatter_1_1	416	1	src/java/org/apache/commons/cli/HelpFormatter.java
547	[PATCH]    if    (index    ==    WHOLE_COLLECTION)    {	[BUG]    [BUGGY]    if    (index    >=    WHOLE_COLLECTION)    {    [FE]    junit.framework.ComparisonFailure:    Creating    path    <vendor/location[3]>    expected:</vendor[1]/location[[3]]>    but    was:</vendor[1]/location[[1]]>    testCreatePathAndSetValue    [CONTEXT]    {    [BUGGY]    if    (index    >=    WHOLE_COLLECTION)    {    [BUGGY]    index    =    0;    }    boolean    success    =    getAbstractFactory(context).createObject(    context,    this,    node,    name.toString(),    index);    if    (success)    {    [CLASS]        DOMNodePointer    [METHOD]    createChild    [RETURN_TYPE]    NodePointer        JXPathContext    context    QName    name    int    index    [VARIABLES]    NodeIterator    it    boolean    success    JXPathContext    context    QName    name    Node    aNode    child    n    node    textNode    valueNode    String    XMLNS_NAMESPACE_URI    XML_NAMESPACE_URI    attr    current    defaultNamespace    id    lang    ln    namespace    namespaceURI    nodeNS    nodePI    ns    prefix    qname    s1    s2    string    testPI    testPrefix    Map    namespaces    long    serialVersionUID    int    index    NodeTest    nodeTest        	jxpath_16911_DOMNodePointer_1_1	374	1	src/java/org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java
548	[PATCH]    if    (acc.nextByte()    ==    BYTE_HYPHEN)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError    testSimpleValidComment    [CONTEXT]            if    (!acc.hasMoreBytes())    {    return    MatchStrength.INCONCLUSIVE;    }    b    =    acc.nextByte();    if    (b    ==    BYTE_HYPHEN)    {    if    (!acc.hasMoreBytes())    {    return    MatchStrength.INCONCLUSIVE;    }    [BUGGY]    if    (false)    {    [BUGGY]    return    MatchStrength.SOLID_MATCH;    }    }    else    if    (b    ==    BYTE_D)    {    return    tryMatch(acc,       "OCTYPE   ",    MatchStrength.SOLID_MATCH);    }    }    else    {        if    (validXmlNameStartChar(acc,    b))    {    return    MatchStrength.SOLID_MATCH;    }    [CLASS]        XmlFactory    [METHOD]    hasXMLFormat    [RETURN_TYPE]    MatchStrength        InputAccessor    acc    [VARIABLES]    XMLOutputFactory    _xmlOutputFactory    f    outf    xmlOut    boolean    maybeXmlDecl    byte    BYTE_D    BYTE_EXCL    BYTE_HYPHEN    BYTE_LT    BYTE_QMARK    BYTE_l    BYTE_m    BYTE_x    UTF8_BOM_1    UTF8_BOM_2    UTF8_BOM_3    b    String    FORMAT_NAME_XML    _cfgNameForTextElement    _jdkXmlInFactory    _jdkXmlOutFactory    content    name    nameForTextElem    InputAccessor    acc    long    serialVersionUID    int    DEFAULT_XML_GENERATOR_FEATURE_FLAGS    DEFAULT_XML_PARSER_FEATURE_FLAGS    _xmlGeneratorFeatures    _xmlParserFeatures    ch    len    offset    xgFeatures    xpFeatures    XMLInputFactory    _xmlInputFactory    f    inf    xmlIn        	jacksonxml_264_XmlFactory_1_1	757	1	src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java
549	[PATCH]    if    (!(ch    ==    '    '    ||    ch    ==    '\r'    ||    ch    ==    '\n'    ||    ch    ==    '\t'))    {	[BUG]    [BUGGY]    if    (!(ch    ==    '    '    ||    ch    >=    '\r'    ||    ch    ==    '\n'    ||    ch    ==    '\t'))    {    [FE]    junit.framework.AssertionFailedError    testSimpleValidComment    [CONTEXT]    private    final    static    int    skipSpace(InputAccessor    acc,    byte    b)    throws    IOException    {    while    (true)    {    int    ch    =    (int)    b    &    0xFF;    [BUGGY]    if    (!(ch    ==    '    '    ||    ch    >=    '\r'    ||    ch    ==    '\n'    ||    ch    ==    '\t'))    {    [BUGGY]    return    ch;    }    if    (!acc.hasMoreBytes())    {    return    -1;    }    b    =    acc.nextByte();    ch    =    (int)    b    &    0xFF;    }    }    [CLASS]        XmlFactory    [METHOD]    skipSpace    [RETURN_TYPE]    int        InputAccessor    acc    byte    b    [VARIABLES]    XMLOutputFactory    _xmlOutputFactory    f    outf    xmlOut    boolean    byte    BYTE_D    BYTE_EXCL    BYTE_HYPHEN    BYTE_LT    BYTE_QMARK    BYTE_l    BYTE_m    BYTE_x    UTF8_BOM_1    UTF8_BOM_2    UTF8_BOM_3    b    String    FORMAT_NAME_XML    _cfgNameForTextElement    _jdkXmlInFactory    _jdkXmlOutFactory    content    matchStr    name    nameForTextElem    InputAccessor    acc    long    serialVersionUID    int    DEFAULT_XML_GENERATOR_FEATURE_FLAGS    DEFAULT_XML_PARSER_FEATURE_FLAGS    _xmlGeneratorFeatures    _xmlParserFeatures    ch    i    len    offset    xgFeatures    xpFeatures    XMLInputFactory    _xmlInputFactory    f    inf    xmlIn        	jacksonxml_297_XmlFactory_1_1	804	1	src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java
550	[PATCH]    if    (refName    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.IllegalArgumentException:    Can    not    handle    managed/back    reference    'null':    type    for    value    deserializer    is    not    BeanDeserializer    or    ContainerDeserializerBase,    but    com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer    testTypeIdResolver    [CONTEXT]    {    String    refName    =    prop.getManagedReferenceName();    [BUGGY]    if    (false)    {    [BUGGY]    return    prop;    }    JsonDeserializer<?>    valueDeser    =    prop.getValueDeserializer();    SettableBeanProperty    backProp    =    null;    boolean    isContainer    =    false;    if    (valueDeser    instanceof    BeanDeserializerBase)    {    backProp    =    ((BeanDeserializerBase)    valueDeser).findBackReference(refName);    }    else    if    (valueDeser    instanceof    ContainerDeserializerBase<?>)    {    JsonDeserializer<?>    contentDeser    =    ((ContainerDeserializerBase<?>)    valueDeser).getContentDeserializer();    if    (!(contentDeser    instanceof    BeanDeserializerBase))    {    [CLASS]        BeanDeserializerBase    [METHOD]    _resolveManagedReferenceProperty    [RETURN_TYPE]    SettableBeanProperty        DeserializationContext    ctxt    SettableBeanProperty    prop    [VARIABLES]    UnwrappedPropertyHandler    _unwrappedPropertyHandler    unwrapped    Shape    _serializationShape    shape    SettableBeanProperty    backProp    prop    ValueInjector[]    _injectables    HashMap    _subDeserializers    ValueInstantiator    _valueInstantiator    ObjectIdReader    _objectIdReader    oir    String    deserName    refName    JsonDeserializer    _delegateDeserializer    cd    contentDeser    deser    ser    valueDeser    PropertyBasedCreator    _propertyBasedCreator    long    serialVersionUID    SettableAnyProperty    _anySetter    JavaType    _beanType    backRefType    delegateType    idType    referredType    type    Annotations    _classAnnotations    boolean    _ignoreAllUnknown    _needViewProcesing    _nonStandardCreation    _vanillaProcessing    hasViews    ignoreAllUnknown    isContainer    BeanPropertyMap    _beanProperties    properties    DeserializationContext    ctxt    Map    _backRefs    backRefs    ExternalTypeHandler    _externalTypeIdHandler    HashSet    _ignorableProps    ignorableProps    newIgnored        	jacksondatabind_6682_BeanDeserializerBase_1_1	632	1	src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java
551	[PATCH]    while    (zvec    >    limit_zt[zn])    {	[BUG]    [BUGGY]    while    (zvec    !=    limit_zt[zn])    {    [FE]    org.apache.commons.compress.compressors.CompressorException:    Could    not    create    CompressorInputStream    testBzip2Unarchive    [CONTEXT]    private    int    getAndMoveToFrontDecode0(final    int    groupNo)    throws    IOException    {    final    InputStream    inShadow    =    this.in;    final    Data    dataShadow    =    this.data;    final    int    zt    =    dataShadow.selector[groupNo]    &    0xff;    final    int[]    limit_zt    =    dataShadow.limit[zt];    int    zn    =    dataShadow.minLens[zt];    int    zvec    =    bsR(zn);    int    bsLiveShadow    =    this.bsLive;    int    bsBuffShadow    =    this.bsBuff;        [BUGGY]    while    (zvec    !=    limit_zt[zn])    {    [BUGGY]    zn++;    while    (bsLiveShadow    <    1)    {    final    int    thech    =    inShadow.read();    if    (thech    >=    0)    {    bsBuffShadow    =    (bsBuffShadow    <<    8)    |    thech;    bsLiveShadow    +=    8;    continue;    }    else    {    throw    new    IOException(   "unexpected    end    of    stream   ");    [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    getAndMoveToFrontDecode0    [RETURN_TYPE]    int        final    int    groupNo    [VARIABLES]    int[][]    base    limit    perm    InputStream    in    inShadow    char[][]    len    temp_charArray2d    Data    data    dataShadow    int[]    base    base_zt    cftab    limit    limit_zt    minLens    perm    perm_zt    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    alphaSize    b    blockSize    blockSize100k    bsBuff    bsBuffShadow    bsLive    bsLiveShadow    computedBlockCRC    computedCombinedCRC    curr    currentChar    currentState    destOffs    eob    groupNo    groupPos    hi    i    i16    inUse16    j    last    lastShadow    len    limitLast    magic    maxLen    minLen    minLens_zt    n    nGroups    nInUse    nInUseShadow    nSelectors    nb    nextSym    offs    origPtr    pp    retChar    s    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    t    thech    v    vec    zn    zt    zvec    char[]    getAndMoveToFrontDecode_yy    len_t    length    yy    byte[]    dest    ll8    pos    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    expected    lent    magic0    magic1    magic2    magic3    magic4    magic5    su_z    tmp    boolean[]    inUse        	compress_6093_BZip2CompressorInputStream_1_1	737	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
552	[PATCH]    if    (!isVarArgs    ||    args[args.length    -    1]    !=    null    &&    !args[args.length    -    1].getClass().isArray())    {	[BUG]    [BUGGY]    if    (!isVarArgs    ||    true    &&    !args[args.length    -    1].getClass().isArray())    {    [FE]    java.lang.NullPointerException    shouldVerifyWithNullVarArgArray    [CONTEXT]    private    static    Object[]    expandVarArgs(final    boolean    isVarArgs,    final    Object[]    args)    {    [BUGGY]    if    (!isVarArgs    ||    true    &&    !args[args.length    -    1].getClass().isArray())    {    [BUGGY]    return    args    ==    null    ?    new    Object[0]    :    args;    }    final    int    nonVarArgsCount    =    args.length    -    1;    Object[]    varArgs;    if    (args[nonVarArgsCount]    ==    null)    {        varArgs    =    new    Object[]    {    null    };    }    else    {    varArgs    =    ArrayEquals.createObjectArray(args[nonVarArgsCount]);    [CLASS]        Invocation    [METHOD]    expandVarArgs    [RETURN_TYPE]    Object[]        final    boolean    isVarArgs    Object[]    args    [VARIABLES]    MockitoMethod    method    mockitoMethod    boolean    isVarArgs    verified    Object    mock    RealMethod    realMethod    long    serialVersionUID    int    MAX_LINE_LENGTH    nonVarArgsCount    sequenceNumber    varArgsCount    Object[]    args    arguments    newArgs    rawArguments    varArgs    Location    location    StubInfo    stubInfo        	mockito_69_Invocation_1_1	65	1	src/org/mockito/internal/invocation/Invocation.java
553	[PATCH]    return    (c    ==    '\n'    ||    c    ==    '\r');	[BUG]    [BUGGY]    return    (c    ==    '\n'    ||    false);    [FE]    junit.framework.AssertionFailedError:    expected:<1>    but    was:<2>    testGetLineNumberWithCR    [CONTEXT]    boolean    isEndOfLine(int    c)    throws    IOException    {        if    (c    ==    '\r'    &&    in.lookAhead()    ==    '\n')    {        c    =    in.read();    }    [BUGGY]    return    (c    ==    '\n'    ||    false);    [BUGGY]    }    [CLASS]        Lexer    [METHOD]    isEndOfLine    [RETURN_TYPE]    boolean        int    c    [VARIABLES]    char    commmentStart    delimiter    encapsulator    escape    ExtendedBufferedReader    in    CSVFormat    format    boolean    emptyLinesIgnored    isCommentEnabled    isEncapsulating    isEscaping    surroundingSpacesIgnored    int    c        	csv_261_Lexer_1_1	111	1	src/main/java/org/apache/commons/csv/Lexer.java
554	[PATCH]    if    (hint    ==    -1)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    Evaluating    pointer    iterator    <$e/errorString>    expected:<[$e/errorString]>    but    was:<[]>    testErrorProperty    [CONTEXT]    return    1;    }    if    (pd    instanceof    IndexedPropertyDescriptor)    {    return    ValueUtils.getIndexedPropertyLength(    getBean(),    (IndexedPropertyDescriptor)    pd);    }    int    hint    =    ValueUtils.getCollectionHint(pd.getPropertyType());    [BUGGY]    if    (false)    {    [BUGGY]    return    1;    }    return    ValueUtils.getLength(getBaseValue());    }    [CLASS]        BeanPropertyPointer    [METHOD]    getLength    [RETURN_TYPE]    int        [VARIABLES]    JXPathBeanInfo    beanInfo    boolean    PropertyDescriptor    pd    propertyDescriptor    Object    UNINITIALIZED    baseValue    value    String    propertyName    PropertyDescriptor[]    pds    propertyDescriptors    String[]    names    int    hint        	jxpath_15927_BeanPropertyPointer_1_1	196	1	src/java/org/apache/commons/jxpath/ri/model/beans/BeanPropertyPointer.java
555	[PATCH]    if    (data    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.RuntimeException    testZipFileReadsUnicodeFields    [CONTEXT]    public    byte[]    getCentralDirectoryData()    {    [BUGGY]    if    (false)    {    [BUGGY]    this.assembleData();    }    return    data;    }    [CLASS]        AbstractUnicodeExtraField    [METHOD]    getCentralDirectoryData    [RETURN_TYPE]    byte[]        [VARIABLES]    byte[]    bytes    data    unicodeName    long    nameCRC32    boolean        	compress_3293_AbstractUnicodeExtraField_1_1	120	1	src/main/java/org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.java
556	[PATCH]    return    (this.numberOfArgs    >    0)    ||    (numberOfArgs    ==    UNLIMITED_VALUES);	[BUG]    [BUGGY]    return    (this.numberOfArgs    >    0)    ||    (false);    [FE]    java.lang.NullPointerException    testAnt    [CONTEXT]    public    boolean    hasArg()    {    [BUGGY]    return    (this.numberOfArgs    >    0)    ||    (false);    [BUGGY]    }    [CLASS]        Option    [METHOD]    hasArg    [RETURN_TYPE]    boolean        [VARIABLES]    boolean    hasArg    optionalArg    required    ArrayList    values    char    valuesep    Object    type    String    argName    description    longOpt    opt    int    UNINITIALIZED    UNLIMITED_VALUES    numberOfArgs        	cli_177_Option_1_1	261	1	src/java/org/apache/commons/cli/Option.java
557	[PATCH]    String    name    =    (pn    ==    null)    ?    null    :    pn.getSimpleName();	[BUG]    [BUGGY]    String    name    =    (false)    ?    null    :    pn.getSimpleName();    [FE]    java.lang.NullPointerException    testWithFactoryAndDelegate    [CONTEXT]    }    }        AnnotatedParameter    nonAnnotatedParam    =    null;    CreatorProperty[]    properties    =    new    CreatorProperty[argCount];    int    namedCount    =    0;    int    injectCount    =    0;    for    (int    i    =    0;    i    <    argCount;    ++i)    {    AnnotatedParameter    param    =    factory.getParameter(i);    PropertyName    pn    =    (param    ==    null)    ?    null    :    intr.findNameForDeserialization(param);    [BUGGY]    String    name    =    (false)    ?    null    :    pn.getSimpleName();    [BUGGY]    Object    injectId    =    intr.findInjectableValueId(param);    if    (name    !=    null    &&    name.length()    >    0)    {    ++namedCount;    properties[i]    =    constructCreatorProperty(ctxt,    beanDesc,    name,    i,    param,    injectId);    }    else    if    (injectId    !=    null)    {    ++injectCount;    properties[i]    =    constructCreatorProperty(ctxt,    beanDesc,    name,    i,    param,    injectId);    }    else    if    (nonAnnotatedParam    ==    null)    {    nonAnnotatedParam    =    param;    }    [CLASS]        BasicDeserializerFactory    [METHOD]    _addDeserializerFactoryMethods    [RETURN_TYPE]    void        DeserializationContext    ctxt    BeanDescription    beanDesc    VisibilityChecker<?>    vchecker    AnnotationIntrospector    intr    CreatorCollector    creators    [VARIABLES]    PropertyName    pn    CreatorProperty[]    properties    DeserializerFactoryConfig    _factoryConfig    config    AnnotatedMethod    factory    HashMap    _collectionFallbacks    _mapFallbacks    AnnotatedParameter    nonAnnotatedParam    param    BeanDescription    beanDesc    AnnotationIntrospector    intr    DeserializationConfig    config    String    name    int    argCount    i    injectCount    namedCount    boolean    isCreator    VisibilityChecker    vchecker    DeserializationContext    ctxt    Class    CLASS_CHAR_BUFFER    CLASS_ITERABLE    CLASS_OBJECT    CLASS_STRING    currClass    instClass    nextCls    prevCls    type    CreatorCollector    creators    Object    injectId        	jacksondatabind_5805_BasicDeserializerFactory_1_1	551	1	src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java
558	[PATCH]    if    (b    !=    null    &&    b.booleanValue())    {	[BUG]    [BUGGY]    if    (true    &&    b.booleanValue())    {    [FE]    java.lang.NullPointerException    testRoundtrip    [CONTEXT]        if    (acc    ==    null)    {    continue;    }                        Boolean    b    =    AnnotationUtil.findIsTextAnnotation(intr,    acc);    [BUGGY]    if    (true    &&    b.booleanValue())    {    [BUGGY]        BeanPropertyDefinition    newProp    =    prop.withSimpleName(_cfgNameForTextValue);    if    (newProp    !=    prop)    {    propDefs.set(i,    newProp);    }    continue;    }        PropertyName    wrapperName    =    prop.getWrapperName();        [CLASS]        XmlBeanDeserializerModifier    [METHOD]    updateProperties    [RETURN_TYPE]    List        DeserializationConfig    config    BeanDescription    beanDesc    BeanPropertyDefinition>    propDefs    [VARIABLES]    PropertyName    wrapperName    boolean    BeanDescription    beanDesc    AnnotationIntrospector    intr    BeanPropertyDefinition    newProp    prop    AnnotatedMember    acc    DeserializationConfig    config    List    propDefs    String    _cfgNameForTextValue    localName    nameForTextValue    Boolean    b    long    serialVersionUID    int    changed    i    propCount        	jacksonxml_1572_XmlBeanDeserializerModifier_1_1	51	1	src/main/java/com/fasterxml/jackson/dataformat/xml/deser/XmlBeanDeserializerModifier.java
559	[PATCH]    if    (b    ==    ESCAPE_CHAR)    {	[BUG]    [BUGGY]    if    (b    >=    ESCAPE_CHAR)    {    [FE]    org.apache.commons.codec.DecoderException:    Invalid    quoted-printable    encoding    testUTF8RoundTrip    [CONTEXT]    public    static    final    byte[]    decodeQuotedPrintable(byte[]    bytes)    throws    DecoderException    {    if    (bytes    ==    null)    {    return    null;    }    ByteArrayOutputStream    buffer    =    new    ByteArrayOutputStream();    for    (int    i    =    0;    i    <    bytes.length;    i++)    {    int    b    =    bytes[i];    [BUGGY]    if    (b    >=    ESCAPE_CHAR)    {    [BUGGY]    try    {    int    u    =    Character.digit((char)    bytes[++i],    16);    int    l    =    Character.digit((char)    bytes[++i],    16);    if    (u    ==    -1    ||    l    ==    -1)    {    throw    new    DecoderException(   "Invalid    quoted-printable    encoding   ");    }    buffer.write((char)    ((u    <<    4)    +    l));    }    catch    (ArrayIndexOutOfBoundsException    e)    {    throw    new    DecoderException(   "Invalid    quoted-printable    encoding   ");    }    [CLASS]        QuotedPrintableCodec    [METHOD]    decodeQuotedPrintable    [RETURN_TYPE]    byte[]        byte[]    bytes    [VARIABLES]    byte[]    bytes    boolean    byte    ESCAPE_CHAR    SPACE    TAB    BitSet    PRINTABLE_CHARS    printable    String    charset    ByteArrayOutputStream    buffer    ArrayIndexOutOfBoundsException    e    int    b    i    l    u        	codec_4260_QuotedPrintableCodec_1_1	182	1	src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java
560	[PATCH]    if    (ptr    >    5    &&    ptr    <    end)    {    //    fits,    prepend    to    buffer	[BUG]    [BUGGY]    if    (ptr    >=    5    &&    ptr    <    end)    {    //    fits,    prepend    to    buffer    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testWriteLongCustomEscapes    [CONTEXT]    char[]    ent    =    _entityBuffer;    if    (ent    ==    null)    {    ent    =    _allocateEntityBuffer();    }    ent[1]    =    (char)    escCode;    _writer.write(ent,    0,    2);    }    return    ptr;    }    if    (escCode    !=    CharacterEscapes.ESCAPE_CUSTOM)    {        [BUGGY]    if    (ptr    >=    5    &&    ptr    <    end)    {        [BUGGY]    ptr    -=    6;    buffer[ptr++]    =    '\\';    buffer[ptr++]    =    'u';        if    (ch    >    0xFF)    {    int    hi    =    (ch    >>    8)    &    0xFF;    buffer[ptr++]    =    HEX_CHARS[hi    >>    4];    buffer[ptr++]    =    HEX_CHARS[hi    &    0xF];    ch    &=    0xFF;    }    else    {    [CLASS]        WriterBasedJsonGenerator    [METHOD]    _prependOrWriteCharacterEscape    [RETURN_TYPE]    int        char[]    buffer    int    ptr    int    end    char    ch    int    escCode    [VARIABLES]    SerializableString    _currentEscape    name    sstr    text    boolean    char    ch    String    escape    int    SHORT_WRITE    _outputEnd    _outputHead    _outputTail    amount    b24    bytes    bytesDone    bytesLeft    chunksBeforeLF    count    dataLength    end    escCode    escLen    escLimit    features    flushLen    hi    i    inputEnd    inputLeft    inputPtr    lastFullOffset    len    length    lo    max    maxNonEscaped    maxRead    missing    newAmount    offset    ptr    qlen    room    safeInputEnd    safeOutputEnd    segmentLen    start    status    textLen    Writer    _writer    w    char[]    HEX_CHARS    _entityBuffer    _outputBuffer    buf    buffer    ent    quoted    text        	jacksoncore_16280_WriterBasedJsonGenerator_1_1	1773	1	src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java
561	[PATCH]    if    (b    ==    BYTE_QMARK)    {    //    <?	[BUG]    [BUGGY]    if    (b    <=    BYTE_QMARK)    {    //    <?    [FE]    junit.framework.AssertionFailedError    testSimpleValidComment    [CONTEXT]        if    (b    !=    BYTE_LT)    {    return    MatchStrength.NO_MATCH;    }    }    if    (!acc.hasMoreBytes())    {    return    MatchStrength.INCONCLUSIVE;    }    b    =    acc.nextByte();        [BUGGY]    if    (b    <=    BYTE_QMARK)    {        [BUGGY]    b    =    acc.nextByte();    if    (b    ==    BYTE_x)    {    if    (maybeXmlDecl)    {    if    (acc.hasMoreBytes()    &&    acc.nextByte()    ==    BYTE_m)    {    if    (acc.hasMoreBytes()    &&    acc.nextByte()    ==    BYTE_l)    {    return    MatchStrength.FULL_MATCH;    }    }    }        [CLASS]        XmlFactory    [METHOD]    hasXMLFormat    [RETURN_TYPE]    MatchStrength        InputAccessor    acc    [VARIABLES]    XMLOutputFactory    _xmlOutputFactory    f    outf    xmlOut    boolean    maybeXmlDecl    byte    BYTE_D    BYTE_EXCL    BYTE_HYPHEN    BYTE_LT    BYTE_QMARK    BYTE_l    BYTE_m    BYTE_x    UTF8_BOM_1    UTF8_BOM_2    UTF8_BOM_3    b    String    FORMAT_NAME_XML    _cfgNameForTextElement    _jdkXmlInFactory    _jdkXmlOutFactory    content    name    nameForTextElem    InputAccessor    acc    long    serialVersionUID    int    DEFAULT_XML_GENERATOR_FEATURE_FLAGS    DEFAULT_XML_PARSER_FEATURE_FLAGS    _xmlGeneratorFeatures    _xmlParserFeatures    ch    len    offset    xgFeatures    xpFeatures    XMLInputFactory    _xmlInputFactory    f    inf    xmlIn        	jacksonxml_226_XmlFactory_1_1	728	1	src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java
562	[PATCH]    if    (propertyCtor    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.NullPointerException    testAnnotatedCtor    [CONTEXT]    }    }    String[]    ctorPropNames    =    null;    AnnotatedConstructor    propertyCtor    =    null;    for    (BeanPropertyDefinition    propDef    :    beanDesc.findProperties())    {    if    (propDef.getConstructorParameter()    !=    null)    {    AnnotatedParameter    param    =    propDef.getConstructorParameter();    AnnotatedWithParams    owner    =    param.getOwner();    if    (owner    instanceof    AnnotatedConstructor)    {    [BUGGY]    if    (false)    {    [BUGGY]    propertyCtor    =    (AnnotatedConstructor)    owner;    ctorPropNames    =    new    String[propertyCtor.getParameterCount()];    }    ctorPropNames[param.getIndex()]    =    propDef.getName();    }    }    }    for    (AnnotatedConstructor    ctor    :    beanDesc.getConstructors())    {    int    argCount    =    ctor.getParameterCount();    [CLASS]        BasicDeserializerFactory    [METHOD]    _addDeserializerConstructors    [RETURN_TYPE]    void        DeserializationContext    ctxt    BeanDescription    beanDesc    VisibilityChecker<?>    vchecker    AnnotationIntrospector    intr    CreatorCollector    creators    [VARIABLES]    PropertyName    pn    CreatorProperty[]    properties    DeserializerFactoryConfig    _factoryConfig    config    HashMap    _collectionFallbacks    _mapFallbacks    AnnotatedParameter    nonAnnotatedParam    param    BeanDescription    beanDesc    AnnotationIntrospector    intr    String[]    ctorPropNames    String    name    int    argCount    i    injectCount    namedCount    AnnotatedWithParams    owner    AnnotatedConstructor    ctor    defaultCtor    propertyCtor    boolean    isCreator    isVisible    VisibilityChecker    vchecker    BeanPropertyDefinition    propDef    DeserializationContext    ctxt    Class    CLASS_CHAR_BUFFER    CLASS_ITERABLE    CLASS_OBJECT    CLASS_STRING    currClass    instClass    nextCls    prevCls    CreatorCollector    creators    Object    injectId        	jacksondatabind_5580_BasicDeserializerFactory_1_1	380	1	src/main/java/com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java
563	[PATCH]    }    else    if    (agingB    >=    MAXIMAL_AGING)    {	[BUG]    [BUGGY]    }    else    if    (true)    {    [FE]    org.apache.commons.math3.exception.MaxCountExceededException:    illegal    state:    maximal    count    (20)    exceeded    testConvergenceOnFunctionAccuracy    [CONTEXT]        throw    new    MathInternalError(null);    }    }        Dfp    targetY;    if    (agingA    >=    MAXIMAL_AGING)    {        targetY    =    yB.divide(16).negate();    [BUGGY]    }    else    if    (true)    {    [BUGGY]        targetY    =    yA.divide(16).negate();    }    else    {        targetY    =    zero;    }        Dfp    nextX;    int    start    =    0;    [CLASS]        BracketingNthOrderBrentSolverDFP    [METHOD]    solve    [RETURN_TYPE]    Dfp        final    int    maxEval    UnivariateDfpFunction    f    Dfp    min    Dfp    max    Dfp    startValue    AllowedSolution    allowedSolution    [VARIABLES]    AllowedSolution    allowedSolution    boolean    Incrementor    evaluations    UnivariateDfpFunction    f    int    MAXIMAL_AGING    agingA    agingB    end    maxEval    maximalOrder    nbPoints    signChangeIndex    start    Dfp[]    tmpX    x    y    Dfp    absXA    absXB    absYA    absYB    absoluteAccuracy    functionValueAccuracy    max    maxX    maxY    min    nan    nextX    nextY    relativeAccuracy    startValue    targetY    xA    xB    xTol    yA    yB    zero        	math_18081_BracketingNthOrderBrentSolverDFP_1_1	290	1	src/main/java/org/apache/commons/math3/dfp/BracketingNthOrderBrentSolverDFP.java
564	[PATCH]    if    (c    ==    '\r'    ||    c    ==    '\n'    ||    c    ==    delim    ||    c    ==    escape)    {	[BUG]    [BUGGY]    if    (c    ==    '\r'    ||    c    ==    '\n'    ||    c    ==    delim    ||    c    >=    escape)    {    [FE]    junit.framework.AssertionFailedError    testRandom    [CONTEXT]    int    pos    =    offset;    int    end    =    offset    +    len;    printSep();    char    delim    =    format.getDelimiter();    char    escape    =    format.getEscape();    while    (pos    <    end)    {    char    c    =    value.charAt(pos);    [BUGGY]    if    (c    ==    '\r'    ||    c    ==    '\n'    ||    c    ==    delim    ||    c    >=    escape)    {    [BUGGY]        if    (pos    >    start)    {    out.append(value,    start,    pos);    }    if    (c    ==    '\n')    {    c    =    'n';    }    else    if    (c    ==    '\r')    {    c    =    'r';    }        [CLASS]        CSVPrinter    [METHOD]    printAndEscape    [RETURN_TYPE]    void        CharSequence    value    int    offset    int    len    [VARIABLES]    CharSequence    value    char    c    delim    escape    CSVFormat    format    boolean    newLine    int    end    len    offset    pos    start    Appendable    out        	csv_522_CSVPrinter_1_1	162	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
565	[PATCH]    if    (startIndex    <    0)    {	[BUG]    [BUGGY]    if    (startIndex    !=    0)    {    [FE]    junit.framework.AssertionFailedError:    expected:<0>    but    was:<-1>    testLastIndexOfShortWithStartIndex    [CONTEXT]    public    static    int    lastIndexOf(final    short[]    array,    final    short    valueToFind,    int    startIndex)    {    if    (array    ==    null)    {    return    INDEX_NOT_FOUND;    }    [BUGGY]    if    (startIndex    !=    0)    {    [BUGGY]    return    INDEX_NOT_FOUND;    }    else    if    (startIndex    >=    array.length)    {    startIndex    =    array.length    -    1;    }    for    (int    i    =    startIndex;    i    >=    0;    i--)    {    if    (valueToFind    ==    array[i])    {    return    i;    }    }    return    INDEX_NOT_FOUND;    [CLASS]        ArrayUtils    [METHOD]    lastIndexOf    [RETURN_TYPE]    int        final    short[]    array    final    short    valueToFind    int    startIndex    [VARIABLES]    Class[]    EMPTY_CLASS_ARRAY    long[]    EMPTY_LONG_ARRAY    array    array1    array2    subarray    short[]    EMPTY_SHORT_ARRAY    array    array1    array2    subarray    Character[]    EMPTY_CHARACTER_OBJECT_ARRAY    array    Boolean[]    EMPTY_BOOLEAN_OBJECT_ARRAY    array    int[]    EMPTY_INT_ARRAY    array    array1    array2    subarray    String[]    EMPTY_STRING_ARRAY    array    Integer[]    EMPTY_INTEGER_OBJECT_ARRAY    array    int    INDEX_NOT_FOUND    endIndexExclusive    i    j    newSize    startIndex    startIndexInclusive    tmp    valueToFind    float[]    EMPTY_FLOAT_ARRAY    array    array1    array2    subarray    char[]    EMPTY_CHAR_ARRAY    array    array1    array2    subarray    Short[]    EMPTY_SHORT_OBJECT_ARRAY    array    byte[]    EMPTY_BYTE_ARRAY    array    array1    array2    subarray    Double[]    EMPTY_DOUBLE_OBJECT_ARRAY    array    boolean    double[]    EMPTY_DOUBLE_ARRAY    array    array1    array2    subarray    Byte[]    EMPTY_BYTE_OBJECT_ARRAY    array    Float[]    EMPTY_FLOAT_OBJECT_ARRAY    array    short    valueToFind    boolean[]    EMPTY_BOOLEAN_ARRAY    array    array1    array2    subarray    Object[]    EMPTY_OBJECT_ARRAY    array    array1    array2    entry    Long[]    EMPTY_LONG_OBJECT_ARRAY    array        	lang_1991_ArrayUtils_1_1	2008	1	src/main/java/org/apache/commons/lang3/ArrayUtils.java
566	[PATCH]    if    (wantedCount    >    actualCount)    {	[BUG]    [BUGGY]    if    (wantedCount    >=    actualCount)    {    [FE]    junit.framework.AssertionFailedError:    shouldVerifyInOrderWhenMultipleThreadsInteractWithMock    [CONTEXT]    public    void    check(List<Invocation>    invocations,    InvocationMatcher    wanted,    int    wantedCount,    InOrderContext    context)    {    List<Invocation>    chunk    =    finder.findMatchingChunk(invocations,    wanted,    wantedCount,    context);    int    actualCount    =    chunk.size();        [BUGGY]    if    (wantedCount    >=    actualCount)    {    [BUGGY]    Location    lastInvocation    =    finder.getLastLocation(chunk);    reporter.tooLittleActualInvocationsInOrder(new    Discrepancy(wantedCount,    actualCount),    wanted,    lastInvocation);    }    else    if    (wantedCount    <    actualCount)    {    Location    firstUndesired    =    chunk.get(wantedCount).getLocation();    reporter.tooManyActualInvocationsInOrder(wantedCount,    actualCount,    wanted,    firstUndesired);    }    invocationMarker.markVerifiedInOrder(chunk,    wanted,    context);    }    [CLASS]        NumberOfInvocationsInOrderChecker    [METHOD]    check    [RETURN_TYPE]    void        Invocation>    invocations    InvocationMatcher    wanted    int    wantedCount    InOrderContext    context    [VARIABLES]    boolean    InvocationMarker    invocationMarker    InvocationsFinder    finder    Reporter    reporter    InvocationMatcher    wanted    List    chunk    invocations    InOrderContext    context    int    actualCount    wantedCount    Location    firstUndesired    lastInvocation        	mockito_2196_NumberOfInvocationsInOrderChecker_1_1	38	1	src/org/mockito/internal/verification/checkers/NumberOfInvocationsInOrderChecker.java
567	[PATCH]    for(int    i    =    0;    i    <    size;    i++){	[BUG]    [BUGGY]    for(int    i    =    0;    i    <=    size;    i++){    [FE]    java.io.OptionalDataException    testEmptyMapCompatibility    [CONTEXT]    private    void    readObject(final    ObjectInputStream    stream)    throws    IOException,    ClassNotFoundException{    stream.defaultReadObject();    root    =    new    TrieEntry<K,    V>(null,    null,    -1);    int    size    =    stream.readInt();    [BUGGY]    for(int    i    =    0;    i    <=    size;    i++){    [BUGGY]    K    k    =    (K)    stream.readObject();    V    v    =    (V)    stream.readObject();    put(k,    v);    }    }    [CLASS]        AbstractPatriciaTrie    Reference    TrieEntry    EntrySet    EntryIterator    KeySet    KeyIterator    Values    ValueIterator    TrieIterator    TrieMapIterator    RangeMap    RangeEntryMap    RangeEntrySet    EntryIterator    PrefixRangeMap    PrefixRangeEntrySet    SingletonIterator    EntryIterator    [METHOD]    readObject    [RETURN_TYPE]    void        ObjectInputStream    stream    [VARIABLES]    Set    empty    entrySet    keySet    boolean    forceInclusive    fromInclusive    lastOne    needsFixing    toInclusive    RangeMap    delegate    E    item    V    v    Collection    values    TrieEntry    added    candidate    ceil    child    current    e    entry    first    firstEntry    floor    found    from    h    last    left    next    nextEntry    node    p    parent    parentOfSubtree    path    predecessor    prefixStart    prevEntry    previous    prior    right    root    start    startScan    subtree    t    tree    K    excludedKey    first    fromKey    k    key    last    prefix    toKey    PrefixRangeMap    delegate    long    serialVersionUID    int    bitIdx    bitIndex    endIndexInBits    expectedModCount    hit    i    lengthInBits    modCount    offset    offsetInBits    offsetLength    ret    size    ObjectInputStream    stream        	collections_11694_AbstractPatriciaTrie_1_1	2387	1	src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java
568	[PATCH]    if    (c    ==    '.'    ||    c    ==    'e'    ||    c    ==    'E')    {	[BUG]    [BUGGY]    if    (c    ==    '.'    ||    c    >=    'e'    ||    c    ==    'E')    {    [FE]    junit.framework.AssertionFailedError:    expected:<VALUE_NUMBER_FLOAT>    but    was:<VALUE_NUMBER_INT>    testNextFieldName    [CONTEXT]    if    (c    <    INT_0    ||    c    >    INT_9)    {    break;    }    ++intLen;    if    (outPtr    >=    outBuf.length)    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    outBuf[outPtr++]    =    (char)    c;    }    [BUGGY]    if    (c    ==    '.'    ||    c    >=    'e'    ||    c    ==    'E')    {    [BUGGY]    return    _parseFloatText(outBuf,    outPtr,    c,    negative,    intLen);    }    --_inputPtr;    _textBuffer.setCurrentLength(outPtr);        return    resetInt(negative,    intLen);    }    [CLASS]        UTF8StreamJsonParser    [METHOD]    parseNumberText    [RETURN_TYPE]    JsonToken        int    c    [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    match    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    c    ch    count    decodedData    defaultValue    end    features    i    intLen    len    minAvailable    nameLen    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    start    char[]    outBuf        	jacksoncore_11843_UTF8StreamJsonParser_1_1	1228	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
569	[PATCH]    if    (preds.length    ==    0)    {	[BUG]    [BUGGY]    if    (preds.length    >=    0)    {    [FE]    junit.framework.AssertionFailedError:    expected:<false>    but    was:<true>    testAllPredicate    [CONTEXT]    public    static    <T>    Predicate<T>    allPredicate(final    Collection<?    extends    Predicate<?    super    T>>    predicates)    {    final    Predicate<?    super    T>[]    preds    =    validate(predicates);    [BUGGY]    if    (preds.length    >=    0)    {    [BUGGY]    return    truePredicate();    }    if    (preds.length    ==    1)    {    return    coerce(preds[0]);    }    return    new    AllPredicate<T>(preds);    }    [CLASS]        AllPredicate    [METHOD]    allPredicate    [RETURN_TYPE]    <T>        Predicate<?    super    T>>    predicates    [VARIABLES]    Collection    predicates    boolean    Predicate[]    preds    long    serialVersionUID        	collections_3079_AllPredicate_1_1	81	1	src/main/java/org/apache/commons/collections4/functors/AllPredicate.java
570	[PATCH]    if    (keyIndex    >=    0)    {	[BUG]    [BUGGY]    if    (keyIndex    ==    0)    {    [FE]    junit.framework.AssertionFailedError:    expected:<AAA>    but    was:<null>    testSetObject    [CONTEXT]    public    void    setObject(Comparable    key,    Object    object)    {    int    keyIndex    =    getIndex(key);    [BUGGY]    if    (keyIndex    ==    0)    {    [BUGGY]    KeyedObject    ko    =    (KeyedObject)    this.data.get(keyIndex);    ko.setObject(object);    }    else    {    KeyedObject    ko    =    new    KeyedObject(key,    object);    this.data.add(ko);    }    }    [CLASS]        KeyedObjects    [METHOD]    setObject    [RETURN_TYPE]    void        Comparable    key    Object    object    [VARIABLES]    KeyedObject    ko    Comparable    key    boolean    List    data    result    Object    object    long    serialVersionUID    int    keyIndex        	chart_67813_KeyedObjects_1_1	206	1	source/org/jfree/data/KeyedObjects.java
571	[PATCH]    if    (inputId    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.NullPointerException    testNonWellformedAlias1    [CONTEXT]    void    traverseAtScope(Scope    s)    {    Node    n    =    s.getRootNode();    if    (n.isFunction())    {            [BUGGY]    if    (false)    {    [BUGGY]    inputId    =    NodeUtil.getInputId(n);    }    sourceName    =    getSourceName(n);    curNode    =    n;    pushScope(s);    Node    args    =    n.getFirstChild().getNext();    Node    body    =    args.getNext();    traverseBranch(args,    n);    traverseBranch(body,    n);    [CLASS]        NodeTraversal    AbstractPostOrderCallback    AbstractScopedCallback    AbstractShallowCallback    AbstractShallowStatementCallback    AbstractNodeTypePruningCallback    [METHOD]    traverseAtScope    [RETURN_TYPE]    void        Scope    s    [VARIABLES]    ScopedCallback    scopeCallback    AbstractCompiler    compiler    Callback    callback    cb    Set    nodeTypes    boolean    include    Scope    s    DiagnosticType    NODE_TRAVERSAL_ERROR    Node    args    body    curNode    n    parent    root    scopeRoot    InputId    inputId    ScopeCreator    scopeCreator    String    MISSING_SOURCE    label    message    sourceFileName    sourceName    src    Deque    cfgs    scopeRoots    scopes        	closure_4046_NodeTraversal_1_1	356	1	src/com/google/javascript/jscomp/NodeTraversal.java
572	[PATCH]    if    (str    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<[null]barbaz>    but    was:<[]barbaz>    testInsertWithNullText    [CONTEXT]    public    StrBuilder    insert(final    int    index,    String    str)    {    validateIndex(index);    [BUGGY]    if    (false)    {    [BUGGY]    str    =    nullText;    }    if    (str    !=    null)    {    final    int    strLen    =    str.length();    if    (strLen    >    0)    {    final    int    newSize    =    size    +    strLen;    ensureCapacity(newSize);    System.arraycopy(buffer,    index,    buffer,    index    +    strLen,    size    -    index);    size    =    newSize;    str.getChars(0,    strLen,    buffer,    index);    [CLASS]        StrBuilder    StrBuilderTokenizer    StrBuilderReader    StrBuilderWriter    [METHOD]    insert    [RETURN_TYPE]    StrBuilder        final    int    index    String    str    [VARIABLES]    String    defaultIfEmpty    format    newLine    nullText    separator    standard    str    boolean    int    CAPACITY    capacity    destinationIndex    endIndex    i    index    initialCapacity    len    length    loopIndex    mark    newEnd    newSize    oldEnd    padLen    pos    size    startIndex    strLen    value    width    long    serialVersionUID    value    char[]    buffer    chars    destination    old        	lang_8981_StrBuilder_1_1	1491	1	src/main/java/org/apache/commons/lang3/text/StrBuilder.java
573	[PATCH]    if    (_inputBuffer[_inputPtr]    ==    INT_SLASH)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    com.fasterxml.jackson.core.JsonParseException:    Unexpected    end-of-input    in    a    comment    testCommentsWithUTF8    [CONTEXT]    main_loop:    while    ((_inputPtr    <    _inputEnd)    ||    loadMore())    {    int    i    =    (int)    _inputBuffer[_inputPtr++]    &    0xFF;    int    code    =    codes[i];    if    (code    !=    0)    {    switch    (code)    {    case    INT_ASTERISK:    if    (_inputPtr    >=    _inputEnd    &&    !loadMore())    {    break    main_loop;    }    [BUGGY]    if    (false)    {    [BUGGY]    ++_inputPtr;    return;    }    break;    case    INT_LF:    _skipLF();    break;    case    INT_CR:    _skipCR();    break;    [CLASS]        UTF8StreamJsonParser    [METHOD]    _skipCComment    [RETURN_TYPE]    void        [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    neg    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    codes    quads    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    byteIx    byteLen    c    ch    ch2    cix    code    count    currQuad    currQuadBytes    decodedData    defaultValue    end    expLen    features    fractLen    i    intLen    intPartLength    integerPartLength    ix    lastQuad    lastQuadBytes    len    max    max2    minAvailable    nameLen    needed    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    q1    q2    qlen    start        	jacksoncore_13827_UTF8StreamJsonParser_1_1	2636	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
574	[PATCH]    if    (token    !=    expected)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    java.lang.IllegalStateException:    Expected    BEGIN_ARRAY    but    was    BEGIN_ARRAY    testParseComments    [CONTEXT]    private    void    expect(JsonToken    expected)    throws    IOException    {    quickPeek();    [BUGGY]    if    (true)    {    [BUGGY]    throw    new    IllegalStateException(   "Expected       "    +    expected    +       "    but    was       "    +    peek());    }    advance();    }    [CLASS]        JsonReader    [METHOD]    expect    [RETURN_TYPE]    void        JsonToken    expected    [VARIABLES]    boolean    hasToken    lenient    skipping    Reader    in    List    stack    JsonToken    expected    token    String    name    value    int    limit    pos    char[]    NON_EXECUTE_PREFIX    buffer        	gson_1006_JsonReader_1_1	322	1	gson/src/main/java/com/google/gson/stream/JsonReader.java
575	[PATCH]    if    (name    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    No    serializer    found    for    class    com.fasterxml.jackson.dataformat.xml.misc.TextValueTest$TextOnlyBean    and    no    properties    discovered    to    create    BeanSerializer    (to    avoid    exception,    disable    SerializationFeature.FAIL_ON_EMPTY_BEANS)    )    (through    reference    chain:    com.fasterxml.jackson.dataformat.xml.misc.TextOnlyWrapper[   "a   "])    testTextOnlyPojo    [CONTEXT]    public    PropertyName    findNameForSerialization(Annotated    a)    {    PropertyName    name    =    _findXmlName(a);    [BUGGY]    if    (false)    {    [BUGGY]    name    =    super.findNameForSerialization(a);    if    (name    ==    null)    {    if    (a.hasAnnotation(JacksonXmlText.class))    {    return    PropertyName.USE_DEFAULT;    }    }    }    return    name;    }    [CLASS]        JacksonXmlAnnotationIntrospector    [METHOD]    findNameForSerialization    [RETURN_TYPE]    PropertyName        Annotated    a    [VARIABLES]    Annotated    a    PropertyName    name    boolean    DEFAULT_USE_WRAPPER    _cfgDefaultUseWrapper    b    defaultUseWrapper    long    serialVersionUID        	jacksonxml_43_JacksonXmlAnnotationIntrospector_1_1	151	1	src/main/java/com/fasterxml/jackson/dataformat/xml/JacksonXmlAnnotationIntrospector.java
576	[PATCH]    if    (read    >    0)    {	[BUG]    [BUGGY]    if    (read    !=    0)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException    testYahooJp    [CONTEXT]    private    static    String    readInputStream(InputStream    inStream,    String    charsetName)    throws    IOException    {    char[]    buffer    =    new    char[0x20000];    StringBuilder    data    =    new    StringBuilder(0x20000);    Reader    inReader    =    new    InputStreamReader(inStream,    charsetName);    int    read;    do    {    read    =    inReader.read(buffer,    0,    buffer.length);    [BUGGY]    if    (read    !=    0)    {    [BUGGY]    data.append(buffer,    0,    read);    }    }    while    (read    >=    0);    return    data.toString();    }    [CLASS]        DataUtil    [METHOD]    readInputStream    [RETURN_TYPE]    String        InputStream    inStream    String    charsetName    [VARIABLES]    boolean    StringBuilder    data    InputStream    inStream    Reader    inReader    String    charsetName    int    read    char[]    buffer        	jsoup_29_DataUtil_1_1	70	1	src/main/java/org/jsoup/DataUtil.java
577	[PATCH]    else    if    (step.getAxis()    ==    Compiler.AXIS_CHILD	[BUG]    [BUGGY]    else    if    (false    [FE]    junit.framework.ComparisonFailure:    Checking    signature:    /int    expected:<Bb[]>    but    was:<Bb[B]>    testDoStepNoPredicatesPropertyOwner    [CONTEXT]    NodeTest    nodeTest    =    step.getNodeTest();    if    (!(nodeTest    instanceof    NodeTypeTest))    {    return    false;    }    int    nodeType    =    ((NodeTypeTest)    nodeTest).getNodeType();    if    (nodeType    !=    Compiler.NODE_TYPE_NODE)    {    return    false;    }    return    areBasicPredicates(step.getPredicates());    }    [BUGGY]    else    if    (false    [BUGGY]    ||    step.getAxis()    ==    Compiler.AXIS_ATTRIBUTE)    {    NodeTest    nodeTest    =    step.getNodeTest();    if    (!(nodeTest    instanceof    NodeNameTest)){    return    false;    }    if    (((NodeNameTest)    nodeTest).isWildcard())    {    return    false;    }    return    areBasicPredicates(step.getPredicates());    [CLASS]        Path    [METHOD]    isSimpleStep    [RETURN_TYPE]    boolean        Step    step    [VARIABLES]    Step[]    steps    boolean    basic    basicKnown    Step    step    NodeTest    nodeTest    int    nodeType        	jxpath_14926_Path_1_1	104	1	src/java/org/apache/commons/jxpath/ri/compiler/Path.java
578	[PATCH]    if    (fieldType    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    java.lang.NullPointerException    testWith2    [CONTEXT]    public    Partial    with(DateTimeFieldType    fieldType,    int    value)    {    [BUGGY]    if    (false)    {    [BUGGY]    throw    new    IllegalArgumentException(   "The    field    type    must    not    be    null   ");    }    int    index    =    indexOf(fieldType);    if    (index    ==    -1)    {    DateTimeFieldType[]    newTypes    =    new    DateTimeFieldType[iTypes.length    +    1];    int[]    newValues    =    new    int[newTypes.length];        int    i    =    0;    DurationField    unitField    =    fieldType.getDurationType().getField(iChronology);    [CLASS]        Partial    Property    [METHOD]    with    [RETURN_TYPE]    Partial        DateTimeFieldType    fieldType    int    value    [VARIABLES]    boolean    DateTimeFieldType[]    iTypes    newTypes    types    Partial    iPartial    newPartial    partial    DateTimeFieldType    fieldType    loopType    int[]    iValues    newValues    values    Chronology    chrono    chronology    iChronology    newChronology    DurationField    loopRangeField    loopUnitField    rangeField    unitField    long    serialVersionUID    DateTimeFormatter[]    iFormatter    int    compare    fieldIndex    i    iFieldIndex    index    value        	time_5999_Partial_1_1	438	1	src/main/java/org/joda/time/Partial.java
579	[PATCH]    if    (typeIdPropName    ==    null    ||    typeIdPropName.length()    ==    0)    {	[BUG]    [BUGGY]    if    (typeIdPropName    ==    null    ||    typeIdPropName.length()    >=    0)    {    [FE]    junit.framework.ComparisonFailure:    expected:<<dynaBean    [class]=   "TestSerializationA...>    but    was:<<dynaBean    [_type]=   "TestSerializationA...>    testIssue117AnySetterAttrs    [CONTEXT]    public    StdTypeResolverBuilder    typeProperty(String    typeIdPropName)    {        [BUGGY]    if    (typeIdPropName    ==    null    ||    typeIdPropName.length()    >=    0)    {    [BUGGY]    typeIdPropName    =    _idType.getDefaultPropertyName();    }    _typeProperty    =    StaxUtil.sanitizeXmlTypeName(typeIdPropName);    return    this;    }    [CLASS]        XmlTypeResolverBuilder    XmlClassNameIdResolver    XmlMinimalClassNameIdResolver    [METHOD]    typeProperty    [RETURN_TYPE]    StdTypeResolverBuilder        String    typeIdPropName    [VARIABLES]    boolean    String    typeIdPropName        	jacksonxml_1488_XmlTypeResolverBuilder_1_1	37	1	src/main/java/com/fasterxml/jackson/dataformat/xml/XmlTypeResolverBuilder.java
580	[PATCH]    if    (length    >    0)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    org.apache.commons.jxpath.JXPathException:    Exception    trying    to    set    value    with    xpath    integers[2];    Cannot    access    property:    integers,    Cannot    convert    value    of    class    [I    to    type    int;    For    input    string:       "   "    testSetCollectionElement    [CONTEXT]    else    if    (Collection.class.isAssignableFrom(toType))    {    Collection    collection    =    allocateCollection(toType);    for    (int    i    =    0;    i    <    length;    i++)    {    collection.add(Array.get(object,    i));    }    return    unmodifiableCollection(collection);    }    else    {    [BUGGY]    if    (false)    {    [BUGGY]    Object    value    =    Array.get(object,    0);    return    convert(value,    toType);    }    else    {    return    convert(   "   ",    toType);    }    }    [CLASS]        BasicTypeConverter    ValueNodeSet    ValuePointer    [METHOD]    convert    [RETURN_TYPE]    Object        Object    object    Class    toType    [VARIABLES]    boolean    value    double    value    Iterator    it    Collection    collection    Converter    converter    List    pointers    values    Object    array    bean    object    value    Class    cType    fromType    toType    int    i    length        	jxpath_18603_BasicTypeConverter_1_1	218	1	src/java/org/apache/commons/jxpath/util/BasicTypeConverter.java
581	[PATCH]    if    (builder    !=    null)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Unrecognized    Type:    [null]    testKeyDeserializer    [CONTEXT]        JavaType    newType    =    modifyTypeByAnnotation(ctxt,    beanDesc.getClassInfo(),    type);    if    (newType    !=    type)    {    type    =    newType;    beanDesc    =    config.introspect(newType);    }        Class<?>    builder    =    beanDesc.findPOJOBuilder();    [BUGGY]    if    (true)    {    [BUGGY]    return    (JsonDeserializer<Object>)    factory.createBuilderBasedDeserializer(    ctxt,    type,    beanDesc,    builder);    }        Converter<Object,Object>    conv    =    beanDesc.findDeserializationConverter();    if    (conv    ==    null)    {    return    (JsonDeserializer<Object>)    _createDeserializer2(ctxt,    factory,    type,    beanDesc);    }        [CLASS]        DeserializerCache    [METHOD]    _createDeserializer    [RETURN_TYPE]    JsonDeserializer        DeserializationContext    ctxt    DeserializerFactory    factory    JavaType    type    [VARIABLES]    DeserializerFactory    factory    JavaType    delegateType    newType    type    boolean    HashMap    _incompleteDeserializers    BeanDescription    beanDesc    DeserializationContext    ctxt    Converter    conv    DeserializationConfig    config    Class    builder    ConcurrentHashMap    _cachedDeserializers    JsonDeserializer    deser    long    serialVersionUID        	jacksondatabind_2942_DeserializerCache_1_1	346	1	src/main/java/com/fasterxml/jackson/databind/deser/DeserializerCache.java
582	[PATCH]    if    (closures[i]    ==    null)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError    testChainedClosure    [CONTEXT]    static    void    validate(final    Closure<?>...    closures)    {    if    (closures    ==    null)    {    throw    new    IllegalArgumentException(   "The    closure    array    must    not    be    null   ");    }    for    (int    i    =    0;    i    <    closures.length;    i++)    {    [BUGGY]    if    (false)    {    [BUGGY]    throw    new    IllegalArgumentException(       "The    closure    array    must    not    contain    a    null    closure,    index       "    +    i    +       "    was    null   ");    }    }    }    [CLASS]        FunctorUtils    [METHOD]    validate    [RETURN_TYPE]    void        closures    [VARIABLES]    Closure[]    closures    boolean    int    i        	collections_3053_FunctorUtils_1_1	139	1	src/main/java/org/apache/commons/collections4/functors/FunctorUtils.java
583	[PATCH]    if    (other.size()    !=    size())    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError:    expected:<[]>    but    was:<[]>    testEmptyBagCompatibility    [CONTEXT]    public    boolean    equals(final    Object    object)    {    if    (object    ==    this)    {    return    true;    }    if    (object    instanceof    Bag    ==    false)    {    return    false;    }    final    Bag<?>    other    =    (Bag<?>)    object;    [BUGGY]    if    (true)    {    [BUGGY]    return    false;    }    for    (final    E    element    :    map.keySet())    {    if    (other.getCount(element)    !=    getCount(element))    {    return    false;    }    }    return    true;    }    [CLASS]        AbstractMapBag    BagIterator    MutableInteger    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    object    [VARIABLES]    Entry    current    entry    Set    uniqueSet    boolean    added    canRemove    changed    result    E    element    Iterator    entryIterator    i    it    Bag    other    Object    object    Map    map    int    count    entrySize    i    index    itemCount    modCount    mods    myCount    nCopies    otherCount    size    value    AbstractMapBag    parent        	collections_1496_AbstractMapBag_1_1	546	1	src/main/java/org/apache/commons/collections4/bag/AbstractMapBag.java
584	[PATCH]    return    n    !=    parent.getFirstChild();	[BUG]    [BUGGY]    return    true;    [FE]    junit.framework.ComparisonFailure:    expected:<try    {    testPrettyPrinter3    [CONTEXT]    int    type    =    parent.getType();    switch    (type)    {    case    Token.DO:        return    false;    case    Token.FUNCTION:        return    false;    case    Token.TRY:        [BUGGY]    return    true;    [BUGGY]    case    Token.CATCH:        return    !NodeUtil.hasFinally(getTryForCatch(parent));    case    Token.IF:        return    n    ==    parent.getLastChild();    }    }    return    true;    }    [CLASS]        CodePrinter    MappedCodePrinter    Mapping    PrettyCodePrinter    CompactCodePrinter    Builder    Format    [METHOD]    breakAfterBlockFor    [RETURN_TYPE]    boolean        Node    n    boolean    isStatementContext    [VARIABLES]    StringBuilder    code    Node    n    node    parent    root    String    INDENT    op    str    FilePosition    end    position    start    Deque    mappings    int    DEFAULT_LINE_LENGTH_THRESHOLD    charIndex    characterPosition    i    indent    index    line    lineIndex    lineLength    lineLengthThreshold    lineStartPosition    originalChar    originalLine    preferredBreakPosition    prevCutPosition    prevLineStartPosition    type    boolean    binOp    createSourceMap    createSrcMap    insertion    isStatementContext    lineBreak    outputTypes    preferLineBreakAtEndOfFile    statementContext    tagAsStrict    Format    COMPACT    PRETTY    TYPED    DetailLevel    sourceMapDetailLevel    SourceMap    map    sourceMap    CompilerOptions    options    List    allMappings        	closure_23685_CodePrinter_1_1	383	1	src/com/google/javascript/jscomp/CodePrinter.java
585	[PATCH]    if    ((c    ==    '.'    ||    c    ==    ',')	[BUG]    [BUGGY]    if    ((c    >=    '.'    ||    c    ==    ',')    [FE]    java.lang.IllegalArgumentException:    Invalid    format:       "PT-3S   "    is    malformed    at       "-3S   "    testFactory_parseSeconds_String    [CONTEXT]    if    (c    >=    '0'    &&    c    <=    '9')    {    hasDigits    =    true;    }    else    {    [BUGGY]    if    ((c    >=    '.'    ||    c    ==    ',')    [BUGGY]    &&    (iFieldType    ==    SECONDS_MILLIS    ||    iFieldType    ==    SECONDS_OPTIONAL_MILLIS))    {    if    (fractPos    >=    0)    {        break;    }    fractPos    =    position    +    length    +    1;        limit    =    Math.min(limit    +    1,    text.length()    -    position);    }    else    {    break;    [CLASS]        PeriodFormatterBuilder    SimpleAffix    PluralAffix    CompositeAffix    FieldFormatter    Literal    Separator    Composite    [METHOD]    parseInto    [RETURN_TYPE]    int        ReadWritablePeriod    period    String    text    int    position    Locale    locale    [VARIABLES]    Locale    locale    PeriodPrinter[]    iPrinters    PeriodParser    beforeParser    iAfterParser    iBeforeParser    parser    ReadWritablePeriod    period    PeriodParser[]    iParsers    String    finalText    iFinalText    iPluralText    iSingularText    iText    periodStr    pluralText    singularText    temp    text    text1    text2    String[]    iParsedForms    variants    int    DAYS    HOURS    MAX_FIELD    MILLIS    MINUTES    MONTHS    PRINT_ZERO_ALWAYS    PRINT_ZERO_IF_SUPPORTED    PRINT_ZERO_NEVER    PRINT_ZERO_RARELY_FIRST    PRINT_ZERO_RARELY_LAST    SECONDS    SECONDS_MILLIS    SECONDS_OPTIONAL_MILLIS    WEEKS    YEARS    bufLen    dp    fieldType    fractLen    fractPos    fractValue    i    iFieldType    iMaxParsedDigits    iMinPrintedDigits    iPrintZeroSetting    length    limit    maxDigits    maxParsedDigits    minDigits    minPrinted    minPrintedDigits    pos    position    printZeroSetting    size    sourceLength    stopAt    suffixPos    sum    textLength    textLength1    textLength2    type    value    wholeValue    PeriodPrinter    beforePrinter    iAfterPrinter    iBeforePrinter    printer    boolean    hasDigits    iNotParser    iNotPrinter    iRejectSignedValues    iUseAfter    iUseBefore    mustParse    negative    notParser    notPrinter    rejectSignedValues    useAfter    useBefore    v    Literal    EMPTY    literal    char    c    List    elementPairs    iElementPairs    pairs    parserList    printerList    FieldFormatter[]    fieldFormatters    iFieldFormatters    PeriodFieldAffix    iLeft    iPrefix    iRight    iSuffix    left    prefix    right    suffix        	time_17186_PeriodFormatterBuilder_1_1	1278	1	src/main/java/org/joda/time/format/PeriodFormatterBuilder.java
586	[PATCH]    if    (this.legendItemToolTipGenerator    !=    null)    {	[BUG]    [BUGGY]    if    (true)    {    [FE]    junit.framework.AssertionFailedError    testDrawWithNullInfo    [CONTEXT]        if    (!isSeriesVisible(series)    ||    !isSeriesVisibleInLegend(series))    {    return    null;    }    CategoryDataset    dataset    =    p.getDataset(datasetIndex);    String    label    =    this.legendItemLabelGenerator.generateLabel(dataset,    series);    String    description    =    label;    String    toolTipText    =    null;    [BUGGY]    if    (true)    {    [BUGGY]    toolTipText    =    this.legendItemToolTipGenerator.generateLabel(    dataset,    series);    }    String    urlText    =    null;    if    (this.legendItemURLGenerator    !=    null)    {    urlText    =    this.legendItemURLGenerator.generateLabel(dataset,    series);    }    Shape    shape    =    lookupLegendShape(series);    Paint    paint    =    lookupSeriesPaint(series);    [CLASS]        AbstractCategoryItemRenderer    [METHOD]    getLegendItem    [RETURN_TYPE]    LegendItem        int    datasetIndex    int    series    [VARIABLES]    Stroke    outlineStroke    Shape    shape    CategoryURLGenerator    baseURLGenerator    generator    CategoryItemLabelGenerator    baseItemLabelGenerator    generator    String    description    label    toolTipText    urlText    Paint    labelPaint    outlinePaint    paint    long    serialVersionUID    CategoryPlot    p    plot    int    column    columnCount    columnIndex    datasetIndex    row    rowCount    s    series    seriesCount    visibleSeriesCount    boolean    LegendItem    item    CategorySeriesLabelGenerator    generator    legendItemLabelGenerator    legendItemToolTipGenerator    legendItemURLGenerator    CategoryToolTipGenerator    baseToolTipGenerator    generator    result    CategoryDataset    dataset    ObjectList    itemLabelGeneratorList    toolTipGeneratorList    urlGeneratorList    List    backgroundAnnotations    foregroundAnnotations    visibleSeriesKeys        	chart_24236_AbstractCategoryItemRenderer_1_1	1434	1	source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java
587	[PATCH]    for    (int    i    =    1;    i    <    stack.size();    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    1;    i    <=    stack.size();    i++)    {    [FE]    junit.framework.ComparisonFailure:    expected:<[    testWriteMixedStreamed    [CONTEXT]    private    void    newline()    throws    IOException    {    if    (indent    ==    null)    {    return;    }    out.write(   "\n   ");    [BUGGY]    for    (int    i    =    1;    i    <=    stack.size();    i++)    {    [BUGGY]    out.write(indent);    }    }    [CLASS]        JsonWriter    [METHOD]    newline    [RETURN_TYPE]    void        [VARIABLES]    List    stack    boolean    htmlSafe    lenient    value    String    closeBracket    indent    name    openBracket    separator    string    value    Writer    out    int    i        	gson_971_JsonWriter_1_1	492	1	gson/src/main/java/com/google/gson/stream/JsonWriter.java
588	[PATCH]    if    (strLen    >    0)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<[foo]    testAppendln_StringBuilder    [CONTEXT]    public    StrBuilder    append(final    StringBuilder    str)    {    if    (str    ==    null)    {    return    appendNull();    }    final    int    strLen    =    str.length();    [BUGGY]    if    (false)    {    [BUGGY]    final    int    len    =    length();    ensureCapacity(len    +    strLen);    str.getChars(0,    strLen,    buffer,    len);    size    +=    strLen;    }    return    this;    }    [CLASS]        StrBuilder    StrBuilderTokenizer    StrBuilderReader    StrBuilderWriter    [METHOD]    append    [RETURN_TYPE]    StrBuilder        StringBuilder    str    [VARIABLES]    String    format    newLine    nullText    str    boolean    StringBuilder    str    int    CAPACITY    capacity    destinationIndex    endIndex    i    index    initialCapacity    len    length    mark    newEnd    oldEnd    pos    size    startIndex    strLen    long    serialVersionUID    char[]    buffer    chars    destination    old        	lang_8593_StrBuilder_1_1	627	1	src/main/java/org/apache/commons/lang3/text/StrBuilder.java
589	[PATCH]    if    ((cdata    !=    null)    &&    cdata.get(i))    {	[BUG]    [BUGGY]    if    ((true)    &&    cdata.get(i))    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    (was    java.lang.NullPointerException)    (through    reference    chain:    com.fasterxml.jackson.dataformat.xml.MediaItem[   "content   "])    testRoundtrip    [CONTEXT]    if    (i    ==    attrCount    &&    !(isAttribute    &&    isUnwrappingSerializer()))    {    xgen.setNextIsAttribute(false);    }        if    (i    ==    textIndex)    {    xgen.setNextIsUnwrapped(true);    }    xgen.setNextName(xmlNames[i]);    BeanPropertyWriter    prop    =    props[i];    if    (prop    !=    null)    {        [BUGGY]    if    ((true)    &&    cdata.get(i))    {    [BUGGY]    xgen.setNextIsCData(true);    prop.serializeAsField(bean,    xgen,    provider);    xgen.setNextIsCData(false);    }    else    {    prop.serializeAsField(bean,    xgen,    provider);    }    }            if    (i    ==    textIndex)    {    [CLASS]        XmlBeanSerializerBase    [METHOD]    serializeFields    [RETURN_TYPE]    void        Object    bean    JsonGenerator    gen0    SerializerProvider    provider    [VARIABLES]    QName[]    _xmlNames    xmlNames    BitSet    _cdata    cdata    String    KEY_XML_INFO    name    ns    BeanPropertyWriter[]    props    int    _attributeCount    _textPropertyIndex    attrCount    i    len    textIndex    Exception    e    boolean    isAttribute    JsonMappingException    mapE    ToXmlGenerator    xgen    JsonGenerator    gen0    Object    bean    SerializerProvider    provider    BeanPropertyWriter    prop    StackOverflowError    e        	jacksonxml_1728_XmlBeanSerializerBase_1_1	197	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerBase.java
590	[PATCH]    return    c    ==    delimiter;	[BUG]    [BUGGY]    return    c    >=    delimiter;    [FE]    junit.framework.AssertionFailedError:    Token    content    expected:<[abc]>    but    was:<[]>    testNextToken1    [CONTEXT]    boolean    isDelimiter(int    c)    {    [BUGGY]    return    c    >=    delimiter;    [BUGGY]    }    [CLASS]        Lexer    [METHOD]    isDelimiter    [RETURN_TYPE]    boolean        int    c    [VARIABLES]    char    commmentStart    delimiter    encapsulator    escape    ExtendedBufferedReader    in    CSVFormat    format    boolean    emptyLinesIgnored    isCommentEnabled    isEncapsulating    isEscaping    surroundingSpacesIgnored    int    c        	csv_270_Lexer_1_1	124	1	src/main/java/org/apache/commons/csv/Lexer.java
591	[PATCH]    return    (ch    >=    'A'    &&    ch    <=    'Z')    ||    (ch    >=    'a'    &&    ch    <=    'z')    ||    (ch    >=    '0'    &&    ch    <=    '9');	[BUG]    [BUGGY]    return    (ch    >=    'A'    &&    ch    <=    'Z')    ||    (ch    >=    'a'    &&    true)    ||    (ch    >=    '0'    &&    ch    <=    '9');    [FE]    junit.framework.AssertionFailedError    testIsAsciiAlphanumeric_char    [CONTEXT]    public    static    boolean    isAsciiAlphanumeric(final    char    ch)    {    [BUGGY]    return    (ch    >=    'A'    &&    ch    <=    'Z')    ||    (ch    >=    'a'    &&    true)    ||    (ch    >=    '0'    &&    ch    <=    '9');    [BUGGY]    }    [CLASS]        CharUtils    [METHOD]    isAsciiAlphanumeric    [RETURN_TYPE]    boolean        final    char    ch    [VARIABLES]    char    CR    LF    ch    defaultValue    String[]    CHAR_STRING_ARRAY    boolean        	lang_4694_CharUtils_1_1	536	1	src/main/java/org/apache/commons/lang3/CharUtils.java
592	[PATCH]    if        ((v2.getZ().getReal()    <    -0.9999999999)    ||    (v2.getZ().getReal()    >    0.9999999999))    {	[BUG]    [BUGGY]    if    ((false)    ||    (v2.getZ().getReal()    >    0.9999999999))    {    [FE]    junit.framework.AssertionFailedError:    an    exception    should    have    been    caught    testSingularities    [CONTEXT]    if    (order    ==    RotationOrder.XYZ)    {                    final    FieldVector3D<T>    v1    =    applyTo(vector(0,    0,    1));    final    FieldVector3D<T>    v2    =    applyInverseTo(vector(1,    0,    0));    [BUGGY]    if((false)    ||    (v2.getZ().getReal()    >    0.9999999999))    {    [BUGGY]    throw    new    CardanEulerSingularityException(true);    }    return    buildArray(v1.getY().negate().atan2(v1.getZ()),    v2.getZ().asin(),    v2.getY().negate().atan2(v2.getX()));    }    else    if    (order    ==    RotationOrder.XZY)    {                [CLASS]    	math_34700_FieldRotation_1_1	503	1	src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
593	[PATCH]    if    (c    ==    quote)    {	[BUG]    [BUGGY]    if    (c    <=    quote)    {    [FE]    junit.framework.ComparisonFailure:    expected:<[        ]>    but    was:<[]>    testParseEmptyString    [CONTEXT]    private    String    nextString(char    quote)    throws    IOException    {    StringBuilder    builder    =    null;    do    {        int    start    =    pos;    while    (pos    <    limit)    {    int    c    =    buffer[pos++];        [BUGGY]    if    (c    <=    quote)    {    [BUGGY]    if    (skipping)    {    return       "skipped!   ";    }    else    if    (builder    ==    null)    {    return    new    String(buffer,    start,    pos    -    start    -    1);    }    else    {    builder.append(buffer,    start,    pos    -    start    -    1);    return    builder.toString();    }    }    else    if    (c    ==    '\\')    {    [CLASS]        JsonReader    [METHOD]    nextString    [RETURN_TYPE]    String        char    quote    [VARIABLES]    boolean    firstElement    hasToken    lenient    result    skipping    StringBuilder    builder    char    quote    Reader    in    List    stack    JsonToken    expected    firstToken    result    token    String    name    result    toFind    value    int    c    count    i    limit    minimum    pos    quote    result    start    total    char[]    NON_EXECUTE_PREFIX    buffer        	gson_1392_JsonReader_1_1	938	1	gson/src/main/java/com/google/gson/stream/JsonReader.java
594	[PATCH]    if    (c    >    a)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    maximum(short,short,short)    1    failed    expected:<1236>    but    was:<1235>    testMaximumShort    [CONTEXT]    public    static    short    max(short    a,    final    short    b,    final    short    c)    {    if    (b    >    a)    {    a    =    b;    }    [BUGGY]    if    (false)    {    [BUGGY]    a    =    c;    }    return    a;    }    [CLASS]        NumberUtils    [METHOD]    max    [RETURN_TYPE]    short        short    a    final    short    b    final    short    c    [VARIABLES]    Integer    INTEGER_MINUS_ONE    INTEGER_ONE    INTEGER_ZERO    Float    FLOAT_MINUS_ONE    FLOAT_ONE    FLOAT_ZERO    f    boolean    Byte    BYTE_MINUS_ONE    BYTE_ONE    BYTE_ZERO    Long    LONG_MINUS_ONE    LONG_ONE    LONG_ZERO    short    a    b    c    Double    DOUBLE_MINUS_ONE    DOUBLE_ONE    DOUBLE_ZERO    d    Short    SHORT_MINUS_ONE    SHORT_ONE    SHORT_ZERO        	lang_18206_NumberUtils_1_1	1242	1	src/main/java/org/apache/commons/lang3/math/NumberUtils.java
595	[PATCH]    }    else    if    (type    ==    Map.class)    {	[BUG]    [BUGGY]    }    else    if    (false)    {    [FE]    java.lang.NullPointerException    shouldReturnEmptyCollectionsOrNullForNonCollections    [CONTEXT]    }    else    if    (type    ==    TreeSet.class)    {    return    new    TreeSet<Object>();    }    else    if    (type    ==    LinkedHashSet.class)    {    return    new    LinkedHashSet<Object>();    }    else    if    (type    ==    List.class)    {    return    new    LinkedList<Object>();    }    else    if    (type    ==    LinkedList.class)    {    return    new    LinkedList<Object>();    }    else    if    (type    ==    ArrayList.class)    {    return    new    ArrayList<Object>();    [BUGGY]    }    else    if    (false)    {    [BUGGY]    return    new    HashMap<Object,    Object>();    }    else    if    (type    ==    HashMap.class)    {    return    new    HashMap<Object,    Object>();    }    else    if    (type    ==    SortedMap.class)    {    return    new    TreeMap<Object,    Object>();    }    else    if    (type    ==    TreeMap.class)    {    return    new    TreeMap<Object,    Object>();    }    else    if    (type    ==    LinkedHashMap.class)    {    return    new    LinkedHashMap<Object,    Object>();    }    [CLASS]        ReturnsEmptyValues    [METHOD]    returnValueFor    [RETURN_TYPE]    Object        Class<?>    type    [VARIABLES]    long    serialVersionUID    Class    type    boolean        	mockito_1898_ReturnsEmptyValues_1_1	98	1	src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java
596	[PATCH]    if    (className.length()    ==    0)    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.ComparisonFailure:    expected:<<[custom    argument    matcher]>>    but    was:<<[]>>    shouldProduceDecentDescription    [CONTEXT]    public    static    String    decamelizeMatcher(String    className)    {    [BUGGY]    if    (false)    {    [BUGGY]    return       "<custom    argument    matcher>   ";    }    String    decamelized    =    decamelizeClassName(className);    if    (decamelized.length()    ==    0)    {    return       "<   "    +    className    +       ">   ";    }    return       "<   "    +    decamelized    +       ">   ";    [CLASS]        Decamelizer    [METHOD]    decamelizeMatcher    [RETURN_TYPE]    String        String    className    [VARIABLES]    Pattern    CAPS    String    className    decamelized    boolean        	mockito_1942_Decamelizer_1_1	15	1	src/org/mockito/internal/util/Decamelizer.java
597	[PATCH]    if    (value    ==    '-')    {	[BUG]    [BUGGY]    if    (false)    {    [FE]    junit.framework.AssertionFailedError:    expected:<-3>    but    was:<-27>    testFactory_parseDays_String    [CONTEXT]    if    (length    >=    10)    {        return    Integer.parseInt(text.substring(position,    position    +    length));    }    if    (length    <=    0)    {    return    0;    }    int    value    =    text.charAt(position++);    length--;    boolean    negative;    [BUGGY]    if    (false)    {    [BUGGY]    if    (--length    <    0)    {    return    0;    }    negative    =    true;    value    =    text.charAt(position++);    }    else    {    negative    =    false;    }    value    -=    '0';    while    (length--    >    0)    {    [CLASS]        PeriodFormatterBuilder    SimpleAffix    PluralAffix    CompositeAffix    FieldFormatter    Literal    Separator    Composite    [METHOD]    parseInt    [RETURN_TYPE]    int        String    text    int    position    int    length    [VARIABLES]    PeriodPrinter[]    iPrinters    PeriodParser    beforeParser    iAfterParser    iBeforeParser    parser    PeriodParser[]    iParsers    String    finalText    iFinalText    iPluralText    iSingularText    iText    periodStr    pluralText    singularText    temp    text    text1    text2    String[]    iParsedForms    variants    int    DAYS    HOURS    MAX_FIELD    MILLIS    MINUTES    MONTHS    PRINT_ZERO_ALWAYS    PRINT_ZERO_IF_SUPPORTED    PRINT_ZERO_NEVER    PRINT_ZERO_RARELY_FIRST    PRINT_ZERO_RARELY_LAST    SECONDS    SECONDS_MILLIS    SECONDS_OPTIONAL_MILLIS    WEEKS    YEARS    bufLen    dp    fieldType    fractLen    fractPos    fractValue    i    iFieldType    iMaxParsedDigits    iMinPrintedDigits    iPrintZeroSetting    length    limit    maxDigits    maxParsedDigits    minDigits    minPrinted    minPrintedDigits    pos    position    printZeroSetting    size    sourceLength    stopAt    suffixPos    sum    textLength    textLength1    textLength2    type    value    wholeValue    PeriodPrinter    beforePrinter    iAfterPrinter    iBeforePrinter    printer    boolean    hasDigits    iNotParser    iNotPrinter    iRejectSignedValues    iUseAfter    iUseBefore    mustParse    negative    notParser    notPrinter    rejectSignedValues    useAfter    useBefore    v    Literal    EMPTY    literal    List    elementPairs    iElementPairs    pairs    parserList    printerList    FieldFormatter[]    fieldFormatters    iFieldFormatters    PeriodFieldAffix    iLeft    iPrefix    iRight    iSuffix    left    prefix    right    suffix        	time_17361_PeriodFormatterBuilder_1_1	1365	1	src/main/java/org/joda/time/format/PeriodFormatterBuilder.java
598	[PATCH]    return    this.commentStart    !=    DISABLED;	[BUG]    [BUGGY]    return    true;    [FE]    junit.framework.AssertionFailedError:    expected:<[]>    but    was:<[￾    This    is    a    comment    testDisabledComment    [CONTEXT]    public    boolean    isCommentingEnabled()    {    [BUGGY]    return    true;    [BUGGY]    }    [CLASS]        CSVFormat    [METHOD]    isCommentingEnabled    [RETURN_TYPE]    boolean        [VARIABLES]    char    DISABLED    c    commentStart    delimiter    encapsulator    escape    CSVFormat    DEFAULT    EXCEL    MYSQL    PRISTINE    RFC4180    TDF    boolean    emptyLinesIgnored    surroundingSpacesIgnored    String    CRLF    lineSeparator    String[]    header        	csv_56_CSVFormat_1_1	279	1	src/main/java/org/apache/commons/csv/CSVFormat.java
599	[PATCH]    if    (c    ==    '\r'    ||    c    ==    '\n'    ||    c    ==    delim    ||    c    ==    escape)    {	[BUG]    [BUGGY]    if    (c    ==    '\r'    ||    c    ==    '\n'    ||    false    ||    c    ==    escape)    {    [FE]    junit.framework.AssertionFailedError    testRandom    [CONTEXT]    int    pos    =    offset;    int    end    =    offset    +    len;    printSep();    char    delim    =    format.getDelimiter();    char    escape    =    format.getEscape();    while    (pos    <    end)    {    char    c    =    value.charAt(pos);    [BUGGY]    if    (c    ==    '\r'    ||    c    ==    '\n'    ||    false    ||    c    ==    escape)    {    [BUGGY]        if    (pos    >    start)    {    out.append(value,    start,    pos);    }    if    (c    ==    '\n')    {    c    =    'n';    }    else    if    (c    ==    '\r')    {    c    =    'r';    }        [CLASS]        CSVPrinter    [METHOD]    printAndEscape    [RETURN_TYPE]    void        CharSequence    value    int    offset    int    len    [VARIABLES]    CharSequence    value    char    c    delim    escape    CSVFormat    format    boolean    newLine    int    end    len    offset    pos    start    Appendable    out        	csv_516_CSVPrinter_1_1	162	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
600	[PATCH]    System.arraycopy(c,    start,    _currentSegment,    0,    amount);	[BUG]    [BUGGY]    System.arraycopy(c,    start,    _currentSegment,    -1,    amount);    [FE]    java.lang.ArrayIndexOutOfBoundsException    testLongAppend    [CONTEXT]    start    +=    max;    len    -=    max;    }                    do    {    expand(len);    int    amount    =    Math.min(_currentSegment.length,    len);    [BUGGY]    System.arraycopy(c,    start,    _currentSegment,    -1,    amount);    [BUGGY]    _currentSize    +=    amount;    start    +=    amount;    len    -=    amount;    }    while    (len    >    0);    }    [CLASS]        TextBuffer    [METHOD]    append    [RETURN_TYPE]    void        char[]    c    int    start    int    len    [VARIABLES]    boolean    _hasSegments    BufferRecycler    _allocator    allocator    ArrayList    _segments    String    _resultString    value    int    MAX_SEGMENT_LEN    MIN_SEGMENT_LEN    _currentSize    _inputLen    _inputStart    _segmentSize    amount    currLen    i    len    max    needed    segLen    start    char[]    NO_CHARS    _currentSegment    _inputBuffer    _resultArray    buf    c    curr    result        	jacksoncore_2665_TextBuffer_1_1	474	1	src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java
601	[PATCH]    buffer[ptr++]    =    _base64ToAsciiC[b24    &    0x3F];	[BUG]    [BUGGY]    buffer[ptr++]    =    _base64ToAsciiC[b24    &    0];    [FE]    junit.framework.ComparisonFailure:    expected:<[   "U29[tZSBjb250ZW50IHNvIHRoYXQgd2UgY2FuIHRlc3QgZW5jb2Rpbmcgb2YgYmFzZTY0IGRhdGE7\nIG11c3QgYmUgbG9uZyBlbm91Z2ggaW5jbHVkZSBhIGxpbmUgd3JhcCBvciB0d28uLi5Tb21lIGNv\nbnRlbnQgc28gdGhhdCB3ZSBjYW4gdGVzdCBlbmNvZGluZyBvZiBiYXNlNjQgZGF0YTsgbXVzdCBi\nZSBsb25nIGVub3VnaCBpbmNsdWRlIGEgbGluZSB3cmFwIG9yIHR3by4uLlNvbWUgY29udGVudCBz\nbyB0aGF0IHdlIGNhbiB0ZXN0IGVuY29kaW5nIG9mIGJhc2U2NCBkYXRhOyBtdXN0IGJlIGxvbmcg\nZW5vdWdoIGluY2x1ZGUgYSBsaW5lIHdyYXAgb3IgdHdvLi4uU29tZSBjb250ZW50IHNvIHRoYXQg\nd2UgY2FuIHRlc3QgZW5jb2Rpbmcgb2YgYmFzZTY0IGRhdGE7IG11c3QgYmUgbG9uZyBlbm91Z2gg\naW5jbHVkZSBhIGxpbmUgd3JhcCBvciB0d28u]Li4=   "]>    but    was:<[   "U29[AZSBAb25AZW5AIHNAIHRAYXQAd2UAY2FAIHRAc3QAZW5Ab2RAbmcAb2YAYmFAZTYAIGRAdGEA\nIG1Ac3QAYmUAbG9AZyBAbm9AZ2gAaW5AbHVAZSBAIGxAbmUAd3JAcCBAciBAd28ALi5Ab21AIGNA\nbnRAbnQAc28AdGhAdCBAZSBAYW4AdGVAdCBAbmNAZGlAZyBAZiBAYXNANjQAZGFAYTsAbXVAdCBA\nZSBAb25AIGVAb3VAaCBAbmNAdWRAIGEAbGlAZSBAcmFAIG9AIHRAby4ALlNAbWUAY29AdGVAdCBA\nbyBAaGFAIHdAIGNAbiBAZXNAIGVAY29AaW5AIG9AIGJAc2UANCBAYXRAOyBAdXNAIGJAIGxAbmcA\nZW5AdWdAIGlAY2xAZGUAYSBAaW5AIHdAYXAAb3IAdHdALi4AU29AZSBAb25AZW5AIHNAIHRAYXQA\nd2UAY2FAIHRAc3QAZW5Ab2RAbmcAb2YAYmFAZTYAIGRAdGEAIG1Ac3QAYmUAbG9AZyBAbm9AZ2gA\naW5AbHVAZSBAIGxAbmUAd3JAcCBAciBAd28A]Li4=   "]>    testStreamingWrites    [CONTEXT]    public    int    encodeBase64Chunk(int    b24,    char[]    buffer,    int    ptr)    {    buffer[ptr++]    =    _base64ToAsciiC[(b24    >>    18)    &    0x3F];    buffer[ptr++]    =    _base64ToAsciiC[(b24    >>    12)    &    0x3F];    buffer[ptr++]    =    _base64ToAsciiC[(b24    >>    6)    &    0x3F];    [BUGGY]    buffer[ptr++]    =    _base64ToAsciiC[b24    &    0];    [BUGGY]    return    ptr;    }    [CLASS]        Base64Variant    [METHOD]    encodeBase64Chunk    [RETURN_TYPE]    int        int    b24    char[]    buffer    int    ptr    [VARIABLES]    byte[]    _base64ToAsciiB    srcB    boolean    _usesPadding    usesPadding    char    PADDING_CHAR_NONE    _paddingChar    alpha    c    paddingChar    int[]    _asciiToBase64    srcV    String    _name    base64Alphabet    name    int    BASE64_VALUE_INVALID    BASE64_VALUE_PADDING    INT_SPACE    _maxLineLength    alphaLen    b24    ch    i    maxLineLength    ptr    value    long    serialVersionUID    char[]    _base64ToAsciiC    buffer    srcC        	jacksoncore_91_Base64Variant_1_1	248	1	src/main/java/com/fasterxml/jackson/core/Base64Variant.java
602	[PATCH]    return    false;	[BUG]    [BUGGY]    return    true;    [FE]    junit.framework.AssertionFailedError    testEquals    [CONTEXT]    public    boolean    equals(Object    obj)    {    if    (obj    ==    this)    {    return    true;    }    if    (!(obj    instanceof    StandardBarPainter))    {    [BUGGY]    return    true;    [BUGGY]    }    return    true;    }    [CLASS]        StandardBarPainter    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    boolean    Object    obj        	chart_52697_StandardBarPainter_1_1	210	1	source/org/jfree/chart/renderer/category/StandardBarPainter.java
603	[PATCH]    if    (getDocumentOrder()    ==    1)    {	[BUG]    [BUGGY]    if    (getDocumentOrder()    ==    -1)    {    [FE]    junit.framework.AssertionFailedError:    Evaluating    value    iterator    <integers    |    beans[1]/strings>    expected:<[String    1,    String    2,    String    3,    1,    2,    3,    4]>    but    was:<[4,    3,    2,    1,    String    3,    String    2,    String    1]>    testUnion    [CONTEXT]        set.add(pointer);    list.add(pointer);    }    }    }    if    (list.isEmpty())    {    return    false;    }        [BUGGY]    if    (getDocumentOrder()    ==    -1)    {    [BUGGY]    Collections.sort(list);    }    else    {    Collections.sort(list,    REVERSE_COMPARATOR);    }    pointerIterator    =    list.iterator();    return    true;    }    [CLASS]        EvalContext    1    [METHOD]    constructIterator    [RETURN_TYPE]    boolean        [VARIABLES]    RootContext    rootContext    boolean    done    hasPerformedIteratorStep    startedSetIteration    EvalContext    parentContext    Iterator    pointerIterator    ArrayList    list    NodePointer    pointer    int    position    Comparator    REVERSE_COMPARATOR    HashSet    set        	jxpath_660_EvalContext_1_1	195	1	src/java/org/apache/commons/jxpath/ri/EvalContext.java
604	[PATCH]    if    (types.length    >=    1	[BUG]    [BUGGY]    if    (types.length    >=    0    [FE]    org.apache.commons.jxpath.JXPathInvalidAccessException:    Cannot    invoke    public    static    java.util.Collection    org.apache.commons.jxpath.ri.compiler.TestFunctions.collection();    0    testCollectionReturn    [CONTEXT]    try    {    Object    target;    Object[]    args;    if    (Modifier.isStatic(method.getModifiers()))    {    target    =    null;    if    (parameters    ==    null)    {    parameters    =    EMPTY_ARRAY;    }    int    pi    =    0;    Class    types[]    =    method.getParameterTypes();    [BUGGY]    if    (types.length    >=    0    [BUGGY]    &&    ExpressionContext.class.isAssignableFrom(types[0]))    {    pi    =    1;    }    args    =    new    Object[parameters.length    +    pi];    if    (pi    ==    1)    {    args[0]    =    context;    }    for    (int    i    =    0;    i    <    parameters.length;    i++)    {    args[i    +    pi]    =    TypeUtils.convert(parameters[i],    types[i    +    pi]);    [CLASS]        MethodFunction    [METHOD]    invoke    [RETURN_TYPE]    Object        ExpressionContext    context    Object[]    parameters    [VARIABLES]    Class[]    types    boolean    ExpressionContext    context    Throwable    ex    Object    target    Method    method    Object[]    EMPTY_ARRAY    args    parameters    int    i    pi        	jxpath_480_MethodFunction_1_1	55	1	src/java/org/apache/commons/jxpath/functions/MethodFunction.java
605	[PATCH]    for    (int    i    =    0;    i    <    data.length;    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    -1;    i    <    data.length;    i++)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testEncodeDecodeBlanks    [CONTEXT]    protected    byte[]    doEncoding(byte[]    bytes)    {    if    (bytes    ==    null)    {    return    null;    }    byte[]    data    =    QuotedPrintableCodec.encodeQuotedPrintable(PRINTABLE_CHARS,    bytes);    if    (this.encodeBlanks)    {    [BUGGY]    for    (int    i    =    -1;    i    <    data.length;    i++)    {    [BUGGY]    if    (data[i]    ==    BLANK)    {    data[i]    =    UNDERSCORE;    }    }    }    return    data;    }    [CLASS]        QCodec    [METHOD]    doEncoding    [RETURN_TYPE]    byte[]        byte[]    bytes    [VARIABLES]    BitSet    PRINTABLE_CHARS    byte[]    bytes    data    boolean    encodeBlanks    String    charset    byte    BLANK    UNDERSCORE    int    i        	codec_4151_QCodec_1_1	139	1	src/java/org/apache/commons/codec/net/QCodec.java
606	[PATCH]    for    (int    i    =    1;    i    <    stack.size();    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    -1;    i    <    stack.size();    i++)    {    [FE]    junit.framework.ComparisonFailure:    expected:<[    testWriteMixedStreamed    [CONTEXT]    private    void    newline()    throws    IOException    {    if    (indent    ==    null)    {    return;    }    out.write(   "\n   ");    [BUGGY]    for    (int    i    =    -1;    i    <    stack.size();    i++)    {    [BUGGY]    out.write(indent);    }    }    [CLASS]        JsonWriter    [METHOD]    newline    [RETURN_TYPE]    void        [VARIABLES]    List    stack    boolean    htmlSafe    lenient    value    String    closeBracket    indent    name    openBracket    separator    string    value    Writer    out    int    i        	gson_969_JsonWriter_1_1	492	1	gson/src/main/java/com/google/gson/stream/JsonWriter.java
607	[PATCH]    DateTime    lowerLimit    =    new    DateTime(1,    1,    1,    0,    0,    0,    0,    chrono);	[BUG]    [BUGGY]    DateTime    lowerLimit    =    new    DateTime(0,    1,    1,    0,    0,    0,    0,    chrono);    [FE]    java.lang.ExceptionInInitializerError    testToString    [CONTEXT]    if    (chronos    ==    null)    {    chronos    =    new    IslamicChronology[4];    cCache.put(zone,    chronos);    }    chrono    =    chronos[leapYears.index];    if    (chrono    ==    null)    {    if    (zone    ==    DateTimeZone.UTC)    {        chrono    =    new    IslamicChronology(null,    null,    leapYears);        [BUGGY]    DateTime    lowerLimit    =    new    DateTime(0,    1,    1,    0,    0,    0,    0,    chrono);    [BUGGY]    chrono    =    new    IslamicChronology(    LimitChronology.getInstance(chrono,    lowerLimit,    null),    null,    leapYears);    }    else    {    chrono    =    getInstance(DateTimeZone.UTC,    leapYears);    chrono    =    new    IslamicChronology    (ZonedChronology.getInstance(chrono,    zone),    null,    leapYears);    }    chronos[leapYears.index]    =    chrono;    }    [CLASS]        IslamicChronology    LeapYearPatternType    [METHOD]    getInstance    [RETURN_TYPE]    IslamicChronology        DateTimeZone    zone    LeapYearPatternType    leapYears    [VARIABLES]    LeapYearPatternType    LEAP_YEAR_15_BASED    LEAP_YEAR_16_BASED    LEAP_YEAR_HABASH_AL_HASIB    LEAP_YEAR_INDIAN    iLeapYears    leapYears    IslamicChronology[]    chronos    boolean    byte    index    DateTimeField    ERA_FIELD    IslamicChronology    INSTANCE_UTC    chrono    Map    cCache    long    MILLIS_PER_CYCLE    MILLIS_PER_LONG_MONTH    MILLIS_PER_LONG_YEAR    MILLIS_PER_MONTH    MILLIS_PER_MONTH_PAIR    MILLIS_PER_SHORT_YEAR    MILLIS_PER_YEAR    MILLIS_YEAR_1    serialVersionUID    int    AH    CYCLE    LONG_MONTH_LENGTH    MAX_YEAR    MIN_YEAR    MONTH_PAIR_LENGTH    SHORT_MONTH_LENGTH    index    pattern    DateTimeZone    zone    DateTime    lowerLimit        	time_10432_IslamicChronology_1_1	208	1	src/main/java/org/joda/time/chrono/IslamicChronology.java
608	[PATCH]    this.intervalPositionFactor    =    0.5;	[BUG]    [BUGGY]    this.intervalPositionFactor    =    0.0;    [FE]    junit.framework.AssertionFailedError    testFindDomainBounds    [CONTEXT]    public    IntervalXYDelegate(XYDataset    dataset,    boolean    autoWidth)    {    if    (dataset    ==    null)    {    throw    new    IllegalArgumentException(   "Null    'dataset'    argument.   ");    }    this.dataset    =    dataset;    this.autoWidth    =    autoWidth;    [BUGGY]    this.intervalPositionFactor    =    0.0;    [BUGGY]    this.autoIntervalWidth    =    Double.POSITIVE_INFINITY;    this.fixedIntervalWidth    =    1.0;    }    [CLASS]        IntervalXYDelegate    [METHOD]    <init>    [RETURN_TYPE]    XYDataset,boolean)        XYDataset    dataset    boolean    autoWidth    [VARIABLES]    XYDataset    dataset    boolean    autoWidth    double    autoIntervalWidth    fixedIntervalWidth    intervalPositionFactor    long    serialVersionUID        	chart_79073_IntervalXYDelegate_1_1	138	1	source/org/jfree/data/xy/IntervalXYDelegate.java
609	[PATCH]    if    (c    ==    INT_APOSTROPHE    ||    codes[c]    !=    0)    {	[BUG]    [BUGGY]    if    (c    ==    INT_APOSTROPHE    ||    codes[c]    !=    1)    {    [FE]    com.fasterxml.jackson.core.JsonParseException:    Invalid    UTF-8    start    byte    0x62    testSingleQuotesEnabled    [CONTEXT]    }    int    max    =    _inputEnd;    {    int    max2    =    _inputPtr    +    (outBuf.length    -    outPtr);    if    (max2    <    max)    {    max    =    max2;    }    }    while    (_inputPtr    <    max)    {    c    =    (int)    inputBuffer[_inputPtr++]    &    0xFF;    [BUGGY]    if    (c    ==    INT_APOSTROPHE    ||    codes[c]    !=    1)    {    [BUGGY]    break    ascii_loop;    }    outBuf[outPtr++]    =    (char)    c;    }    }        if    (c    ==    INT_APOSTROPHE)    {    break    main_loop;    }    [CLASS]        UTF8StreamJsonParser    [METHOD]    _handleApostropheValue    [RETURN_TYPE]    JsonToken        [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    codes    quads    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    byteIx    byteLen    c    ch    ch2    cix    count    currQuad    currQuadBytes    decodedData    defaultValue    end    expLen    features    fractLen    i    intLen    intPartLength    integerPartLength    ix    lastQuad    lastQuadBytes    len    max    max2    minAvailable    nameLen    needed    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    q1    q2    qlen    start    char[]    outBuf        	jacksoncore_13462_UTF8StreamJsonParser_1_1	2321	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
610	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError:    testLoopWithFunctionWithFunction    [CONTEXT]    static    boolean    isCandidateUsage(Node    name)    {    Node    parent    =    name.getParent();    Preconditions.checkState(name.isName());    if    (parent.isVar()    ||    parent.isFunction())    {            [BUGGY]    return    false;    [BUGGY]    }    if    (parent.isCall()    &&    parent.getFirstChild()    ==    name)    {        return    true;    }                    [CLASS]        InlineFunctions    FindCandidateFunctions    CallVisitor    FindCandidatesReferences    Inline    FunctionState    NamedFunction    FunctionVar    FunctionExpression    Reference    [METHOD]    isCandidateUsage    [RETURN_TYPE]    boolean        Node    name    [VARIABLES]    Set    fnNames    namesToAlias    Node    block    callNode    child    externs    fn    fnIdentifingNode    fnNode    gramps    n    name    nameNode    parent    root    safeFnNode    var    String    fakeName    fnName    name    SpecializationState    specializationState    int    callsSeen    index    Function    fn    AbstractCompiler    compiler    boolean    assumeMinimumCapture    assumeStrictThis    blockFunctionInliningEnabled    decompose    hasInnerFunctions    inline    inlineDirectly    inlineGlobalFunctions    inlineLocalFunctions    inlined    referencesThis    remove    requiresDecomposition    CallVisitorCallback    callback    JSModule    module    Map    anonFns    anonFunctionMap    fns    functionMap    references    FunctionInjector    injector        	closure_31393_InlineFunctions_1_1	433	1	src/com/google/javascript/jscomp/InlineFunctions.java
611	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError:    Collection    should    remove    extant    element:    again=blahv    testCollectionRemove    [CONTEXT]    public    boolean    remove(final    Object    obj)    {    if    (obj    instanceof    Map.Entry    ==    false)    {    return    false;    }    if    (getEntrySet().contains(obj))    {    final    Object    key    =    ((Map.Entry<K,    V>)    obj).getKey();    parent.remove(key);    [BUGGY]    return    false;    [BUGGY]    }    return    false;    }    [CLASS]        ListOrderedMap    ValuesView    1    KeySetView    1    EntrySetView    ListOrderedIterator    ListOrderedMapEntry    ListOrderedMapIterator    [METHOD]    remove    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    Set    entrySet    boolean    contains    first    readable    ListOrderedMap    parent    List    insertOrder    Object    key    obj    K    key    last    ListIterator    iterator    long    serialVersionUID        	collections_7994_ListOrderedMap_1_1	632	1	src/main/java/org/apache/commons/collections4/map/ListOrderedMap.java
612	[PATCH]    System.arraycopy(data,    0,    result,    WORD,    data.length);	[BUG]    [BUGGY]    System.arraycopy(data,    -1,    result,    WORD,    data.length);    [FE]    java.lang.ArrayIndexOutOfBoundsException    testContent    [CONTEXT]    System.arraycopy(linkArray,    0,    data,    10,    linkArray.length);        crc.reset();    crc.update(data);    long    checksum    =    crc.getValue();    byte[]    result    =    new    byte[data.length    +    WORD];    System.arraycopy(ZipLong.getBytes(checksum),    0,    result,    0,    WORD);    [BUGGY]    System.arraycopy(data,    -1,    result,    WORD,    data.length);    [BUGGY]    return    result;    }    [CLASS]        AsiExtraField    [METHOD]    getLocalFileDataData    [RETURN_TYPE]    byte[]        [VARIABLES]    byte[]    data    linkArray    result    ZipShort    HEADER_ID    boolean    dirFlag    CRC32    crc    String    link    int    WORD    gid    mode    uid    long    checksum        	compress_3420_AsiExtraField_1_1	144	1	src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java
613	[PATCH]    if    (argsToBind    >=    0)    {	[BUG]    [BUGGY]    if    (argsToBind    >=    -1)    {    [FE]    junit.framework.ComparisonFailure:    expected:<...number=):    function    ([...[?]]):    boolean>    but    was:<...number=):    function    ([string,    number]):    boolean>    testBindSignature    [CONTEXT]    public    FunctionType    getBindReturnType(int    argsToBind)    {    FunctionBuilder    builder    =    new    FunctionBuilder(registry)    .withReturnType(getReturnType())    .withTemplateKeys(getTemplateKeys());    [BUGGY]    if    (argsToBind    >=    -1)    {    [BUGGY]    Node    origParams    =    getParametersNode();    if    (origParams    !=    null)    {    Node    params    =    origParams.cloneTree();    for    (int    i    =    1;    i    <    argsToBind    &&    params.getFirstChild()    !=    null;    i++)    {    if    (params.getFirstChild().isVarArgs())    {    break;    }    params.removeFirstChild();    }    builder.withParamsNode(params);    [CLASS]        FunctionType    Kind    PropAccess    [METHOD]    getBindReturnType    [RETURN_TYPE]    FunctionType        int    argsToBind    [VARIABLES]    PropAccess    ANY    DICT    STRUCT    propAccess    JSType    typeOfThis    boolean    FunctionBuilder    builder    Kind    CONSTRUCTOR    INTERFACE    ORDINARY    kind    Node    lastParam    n    origParams    params    propertyNode    source    ArrowType    arrowType    call    List    extendedInterfaces    implementedInterfaces    subTypes    Property    prototypeSlot    long    serialVersionUID    int    argsToBind    i        	closure_4882_FunctionType_1_1	629	1	src/com/google/javascript/rhino/jstype/FunctionType.java
614	[PATCH]    rawdigits[p++]    =    (char)    (((mant[i])    %    10)    +    '0');	[BUG]    [BUGGY]    rawdigits[p++]    =    (char)    (((mant[i])    %    0)    +    '0');    [FE]    java.lang.ArithmeticException:    /    by    zero    testToString    [CONTEXT]    int    e;    int    ae;    int    shf;        p    =    0;    for    (int    i    =    mant.length    -    1;    i    >=    0;    i--)    {    rawdigits[p++]    =    (char)    ((mant[i]    /    1000)    +    '0');    rawdigits[p++]    =    (char)    (((mant[i]    /    100)    %10)    +    '0');    rawdigits[p++]    =    (char)    (((mant[i]    /    10)    %    10)    +    '0');    [BUGGY]    rawdigits[p++]    =    (char)    (((mant[i])    %    0)    +    '0');    [BUGGY]    }        for    (p    =    0;    p    <    rawdigits.length;    p++)    {    if    (rawdigits[p]    !=    '0')    {    break;    }    }    shf    =    p;        [CLASS]        Dfp    [METHOD]    dfp2sci    [RETURN_TYPE]    String        [VARIABLES]    boolean    byte    FINITE    INFINITE    QNAN    SNAN    asign    bsign    code    nans    rsign    sig    sign    x    DfpField    field    int[]    dividend    mant    product    quotient    remainder    String    ADD_TRAP    ALIGN_TRAP    DIVIDE_TRAP    GREATER_THAN_TRAP    LESS_THAN_TRAP    MULTIPLY_TRAP    NAN_STRING    NEG_INFINITY_STRING    NEW_INSTANCE_TRAP    NEXT_AFTER_TRAP    POS_INFINITY_STRING    SQRT_TRAP    TRUNC_TRAP    fpdecimal    fpexp    s    int    ERR_SCALE    MAX_EXP    MIN_EXP    RADIX    adiff    ae    aextradigit    bextradigit    decimalPos    diff    divMsb    divisor    dm    e    excp    exp    exponent    extra    i    j    lostdigit    max    md    min    minadj    n    nsqd    offset    p    q    qd    r    result    rh    rl    rsize    sciexp    shf    significantDigits    trial    x    char[]    outputbuffer    rawdigits        	math_21554_Dfp_1_1	2102	1	src/main/java/org/apache/commons/math3/dfp/Dfp.java
615	[PATCH]    offset    =    fill(offset,    16,    '    ');	[BUG]    [BUGGY]    offset    =    fill(offset,    -16,    '    ');    [FE]    java.io.IOException:    invalid    entry    header.    not    read    the    content?    testArUnarchive    [CONTEXT]    private    long    writeEntryHeader(    final    ArArchiveEntry    pEntry    )    throws    IOException    {    long    offset    =    0;    final    String    n    =    pEntry.getName();    if    (n.length()    >    16)    {    throw    new    IOException(   "filename    too    long   ");    }    offset    +=    write(n);        [BUGGY]    offset    =    fill(offset,    -16,    '    ');    [BUGGY]    final    String    m    =       "   "    +    (pEntry.getLastModified()    /    1000);    if    (m.length()    >    12)    {    throw    new    IOException(   "modified    too    long   ");    }    offset    +=    write(m);    offset    =    fill(offset,    28,    '    ');    final    String    u    =       "   "    +    pEntry.getUserId();    if    (u.length()    >    6)    {    throw    new    IOException(   "userid    too    long   ");    [CLASS]        ArArchiveOutputStream    [METHOD]    writeEntryHeader    [RETURN_TYPE]    long        ArArchiveEntry    pEntry    [VARIABLES]    ArArchiveEntry    pArEntry    pEntry    prevEntry    String    fm    g    m    n    s    u    boolean    long    archiveOffset    diff    entryOffset    offset    pNewOffset    pOffset    OutputStream    out    pOut        	compress_260_ArArchiveOutputStream_1_1	101	1	src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java
616	[PATCH]    return    jjStopAtPos(1,    14);	[BUG]    [BUGGY]    return    jjStopAtPos(1,    0);    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    '1    >    (1    and    2    <=    (2    or    3)    =    4)'.    Syntax    error    after:    '1    >'    testCoreOperationGreaterThan    [CONTEXT]    return    jjStopAtPos(1,    83);    break;    case    47:    if    ((active0    &    0x80L)    !=    0L)    return    jjStopAtPos(1,    7);    break;    case    61:    if    ((active0    &    0x1000L)    !=    0L)    return    jjStopAtPos(1,    12);    else    if    ((active0    &    0x4000L)    !=    0L)    [BUGGY]    return    jjStopAtPos(1,    0);    [BUGGY]    else    if    ((active0    &    0x10000L)    !=    0L)    return    jjStopAtPos(1,    16);    break;    case    97:    return    jjMoveStringLiteralDfa2_0(active0,    0xc1012000000000L,    active1,    0xa0L);    case    100:    if    ((active0    &    0x8000000000000L)    !=    0L)    return    jjStartNfaWithStates_0(1,    51,    12);    break;    case    101:    [CLASS]        XPathParserTokenManager    [METHOD]    jjMoveStringLiteralDfa1_0    [RETURN_TYPE]    int        long    active0    long    active1    [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    IOException    e    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    kind    lexState    pos    state    long    active0    active1        	jxpath_9317_XPathParserTokenManager_1_1	501	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
617	[PATCH]    double[]    result    =    new    double[2];	[BUG]    [BUGGY]    double[]    result    =    new    double[0];    [FE]    java.lang.ArrayIndexOutOfBoundsException:    1    testPowerRegression1a    [CONTEXT]    double    xx    =    x    *    x;    sumXX    +=    xx;    double    xy    =    x    *    y;    sumXY    +=    xy;    }    double    sxx    =    sumXX    -    (sumX    *    sumX)    /    n;    double    sxy    =    sumXY    -    (sumX    *    sumY)    /    n;    double    xbar    =    sumX    /    n;    double    ybar    =    sumY    /    n;        [BUGGY]    double[]    result    =    new    double[0];    [BUGGY]    result[1]    =    sxy    /    sxx;    result[0]    =    Math.pow(Math.exp(1.0),    ybar    -    result[1]    *    xbar);    return    result;    }    [CLASS]        Regression    [METHOD]    getPowerRegression    [RETURN_TYPE]    double[]        double[][]    data    [VARIABLES]    boolean    double[]    result    double    sumX    sumXX    sumXY    sumY    sxx    sxy    x    xbar    xx    xy    y    ybar    double[][]    data    int    i    n        	chart_72946_Regression_1_1	177	1	source/org/jfree/data/statistics/Regression.java
618	[PATCH]    if    ((numberOfArgs    >    0)    &&    (values.size()    >    (numberOfArgs    -    1)))	[BUG]    [BUGGY]    if    ((numberOfArgs    >    0)    &&    (values.size()    >    (numberOfArgs    -    0)))    [FE]    junit.framework.AssertionFailedError:    Confirm    size    of    extra    args    testSimpleLong    [CONTEXT]    private    void    add(String    value)    {    [BUGGY]    if    ((numberOfArgs    >    0)    &&    (values.size()    >    (numberOfArgs    -    0)))    [BUGGY]    {    throw    new    RuntimeException(   "Cannot    add    value,    list    full.   ");    }            this.values.add(value);    }    [CLASS]        Option    [METHOD]    add    [RETURN_TYPE]    void        String    value    [VARIABLES]    boolean    hasArg    optionalArg    required    ArrayList    values    char    sep    valuesep    Object    type    String    argName    description    longOpt    opt    value    int    UNINITIALIZED    UNLIMITED_VALUES    index    num    numberOfArgs        	cli_248_Option_1_1	476	1	src/java/org/apache/commons/cli/Option.java
619	[PATCH]    canContainBlock    =    false;	[BUG]    [BUGGY]    canContainBlock    =    true;    [FE]    junit.framework.AssertionFailedError:    expected:<...--    comment    -->Hello<[/p><p>there]</p></div></body></h...>    but    was:<...--    comment    -->Hello<[p>there</p>]</p></div></body></h...>    testOuterHtml    [CONTEXT]    private    Tag    setContainInlineOnly()    {    [BUGGY]    canContainBlock    =    true;    [BUGGY]    canContainInline    =    true;    return    this;    }    [CLASS]        Tag    [METHOD]    setContainInlineOnly    [RETURN_TYPE]    Tag        [VARIABLES]    List    ancestors    boolean    canContainBlock    canContainInline    empty    isBlock    optionalClosing    preserveWhitespace    Tag    child    defaultAncestor    inline    tag    String    tagName    Map    tags        	jsoup_824_Tag_1_1	334	1	src/main/java/org/jsoup/parser/Tag.java
620	[PATCH]    return    jjMoveStringLiteralDfa10_0(active0,    0x400880000000000L,    active1,    0L);	[BUG]    [BUGGY]    return    jjMoveStringLiteralDfa10_0(active0,    -288379909733089280L,    active1,    0L);    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    'descendant-or-self::foo:bar'.    Syntax    error    after:    'descendant-or-self:'    testLocationPathAxisDescendantOrSelf    [CONTEXT]    break;    case    103:    return    jjMoveStringLiteralDfa10_0(active0,    0x400000000L,    active1,    0L);    case    109:    return    jjMoveStringLiteralDfa10_0(active0,    0L,    active1,    0x2000L);    case    110:    return    jjMoveStringLiteralDfa10_0(active0,    0x8000000000000000L,    active1,    0L);    case    111:    return    jjMoveStringLiteralDfa10_0(active0,    0x100000000000L,    active1,    0L);    case    116:    [BUGGY]    return    jjMoveStringLiteralDfa10_0(active0,    -288379909733089280L,    active1,    0L);    [BUGGY]    default    :    break;    }    return    jjStartNfa_0(8,    active0,    active1);    }    [CLASS]        XPathParserTokenManager    [METHOD]    jjMoveStringLiteralDfa9_0    [RETURN_TYPE]    int        long    old0    long    active0    long    old1    long    active1    [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    IOException    e    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    kind    lexState    pos    state    long    active0    active1    old0    old1        	jxpath_10339_XPathParserTokenManager_1_1	919	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
621	[PATCH]    double    sumY    =    0;	[BUG]    [BUGGY]    double    sumY    =    -1;    [FE]    junit.framework.AssertionFailedError:    expected:<0.91045813>    but    was:<0.02549209487624623>    testPowerRegression1a    [CONTEXT]    public    static    double[]    getPowerRegression(double[][]    data)    {    int    n    =    data.length;    if    (n    <    2)    {    throw    new    IllegalArgumentException(   "Not    enough    data.   ");    }    double    sumX    =    0;    [BUGGY]    double    sumY    =    -1;    [BUGGY]    double    sumXX    =    0;    double    sumXY    =    0;    for    (int    i    =    0;    i    <    n;    i++)    {    double    x    =    Math.log(data[i][0]);    double    y    =    Math.log(data[i][1]);    sumX    +=    x;    sumY    +=    y;    double    xx    =    x    *    x;    sumXX    +=    xx;    double    xy    =    x    *    y;    [CLASS]        Regression    [METHOD]    getPowerRegression    [RETURN_TYPE]    double[]        double[][]    data    [VARIABLES]    boolean    double[]    result    double    sumX    sumXX    sumXY    sumY    sxx    sxy    x    xbar    xx    xy    y    ybar    double[][]    data    int    i    n        	chart_72888_Regression_1_1	159	1	source/org/jfree/data/statistics/Regression.java
622	[PATCH]    for    (int    i    =    0;    i    <    children.size();    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    -1;    i    <    children.size();    i++)    {    [FE]    java.lang.IndexOutOfBoundsException:    Index:    -1    Size:    19    testDefaultNamespaceIgnored    [CONTEXT]    private    int    getRelativePositionByName()    {    if    (node    instanceof    Element)    {    Object    parent    =    ((Element)    node).getParent();    if    (!(parent    instanceof    Element))    {    return    1;    }    List    children    =    ((Element)parent).getContent();    int    count    =    0;    String    name    =    ((Element)    node).getQualifiedName();    [BUGGY]    for    (int    i    =    -1;    i    <    children.size();    i++)    {    [BUGGY]    Object    child    =    children.get(i);    if    ((child    instanceof    Element)    &&    ((Element)    child).getQualifiedName().equals(name))    {    count++;    }    if    (child    ==    node)    {    break;    }    }    return    count;    [CLASS]        JDOMNodePointer    [METHOD]    getRelativePositionByName    [RETURN_TYPE]    int        [VARIABLES]    Object    child    n    node    node1    node2    parent    value    List    children    String    XMLNS_NAMESPACE_URI    XML_NAMESPACE_URI    attr    current    id    lang    ln    name    namespaceURI    nodeNS    nodePI    ns    nsURI    prefix    s1    s2    string    target    testPI    testPrefix    text    boolean    long    serialVersionUID    int    count    i        	jxpath_18273_JDOMNodePointer_1_1	656	1	src/java/org/apache/commons/jxpath/ri/model/jdom/JDOMNodePointer.java
623	[PATCH]    return    -1;	[BUG]    [BUGGY]    return    0;    [FE]    com.fasterxml.jackson.core.JsonParseException:    Unexpected    character    ((CTRL-CHAR,    code    0)):    expected    a    valid    value    (number,    String,    array,    object,    'true',    'false'    or    'null')    testBase64UsingReader    [CONTEXT]    _skipLF();    }    else    if    (i    ==    INT_CR)    {    _skipCR();    }    else    if    (i    !=    INT_TAB)    {    _throwInvalidSpace(i);    }    }    }        _handleEOF();    [BUGGY]    return    0;    [BUGGY]    }    [CLASS]        ReaderBasedJsonParser    [METHOD]    _skipWSOrEnd    [RETURN_TYPE]    int        [VARIABLES]    boolean    _tokenIncomplete    eof    firstOk    inObject    negative    Reader    _reader    r    ObjectCodec    _objectCodec    c    codec    CharsToNameCanonicalizer    _symbols    st    int    _hashSeed    bits    ch    count    decodedData    defaultValue    endChar    expLen    features    fractLen    hash    i    inputLen    inputPtr    intLen    len    maxCode    nameLen    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    start    startPtr    char[]    _inputBuffer    buf    inputBuffer    outBuf        	jacksoncore_8781_ReaderBasedJsonParser_1_1	1685	1	src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
624	[PATCH]    return    (v1    ^    v2)    ?    (    (v1    ^    trueFirst)    ?    1    :    -1    )    :    0;	[BUG]    [BUGGY]    return    (v1    ^    v2)    ?    (    (v1    ^    trueFirst)    ?    -1    :    -1    )    :    0;    [FE]    junit.framework.AssertionFailedError    testConstructors    [CONTEXT]    public    int    compare(final    Boolean    b1,    final    Boolean    b2)    {    final    boolean    v1    =    b1.booleanValue();    final    boolean    v2    =    b2.booleanValue();        [BUGGY]    return    (v1    ^    v2)    ?    (    (v1    ^    trueFirst)    ?    -1    :    -1    )    :    0;    [BUGGY]    }    [CLASS]        BooleanComparator    [METHOD]    compare    [RETURN_TYPE]    int        Boolean    b1    Boolean    b2    [VARIABLES]    BooleanComparator    FALSE_FIRST    TRUE_FIRST    boolean    trueFirst    v1    v2    Boolean    b1    b2    long    serialVersionUID        	collections_2657_BooleanComparator_1_1	141	1	src/main/java/org/apache/commons/collections4/comparators/BooleanComparator.java
625	[PATCH]    System.arraycopy(rest,    0,    all,    1,    rest.length);	[BUG]    [BUGGY]    System.arraycopy(rest,    0,    all,    -1,    rest.length);    [FE]    java.lang.ArrayIndexOutOfBoundsException    shouldAllowVerifyingInThreads    [CONTEXT]    private    Class<?>[]    prepend(Class<?>    first,    Class<?>...    rest)    {    Class<?>[]    all    =    new    Class<?>[rest.length+1];    all[0]    =    first;    [BUGGY]    System.arraycopy(rest,    0,    all,    -1,    rest.length);    [BUGGY]    return    all;    }    [CLASS]        ClassImposterizer    1    2    3    ClassWithSuperclassToWorkAroundCglibBug    [METHOD]    prepend    [RETURN_TYPE]    Class[]        Class<?>    first    rest    [VARIABLES]    ObjenesisStd    objenesis    Class[]    all    rest    boolean    ClassImposterizer    INSTANCE    Class    first    CallbackFilter    IGNORE_BRIDGE_METHODS    NamingPolicy    NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES        	mockito_766_ClassImposterizer_1_1	119	1	src/org/mockito/internal/creation/jmock/ClassImposterizer.java
626	[PATCH]    return    false;	[BUG]    [BUGGY]    return    true;    [FE]    junit.framework.ComparisonFailure:    flag    a    expected:<foo>    but    was:<null>    testSimplePattern    [CONTEXT]    public    static    boolean    isValueCode(char    ch)    {    if    ((ch    !=    '@')    &&    (ch    !=    ':')    &&    (ch    !=    '%')    &&    (ch    !=    '+')    &&    (ch    !=    '#')    &&    (ch    !=    '<')    &&    (ch    !=    '>')    &&    (ch    !=    '*')    &&    (ch    !=    '/')    &&    (ch    !=    '!'))    {    [BUGGY]    return    true;    [BUGGY]    }    return    true;    }    [CLASS]        PatternOptionBuilder    [METHOD]    isValueCode    [RETURN_TYPE]    boolean        char    ch    [VARIABLES]    char    ch    Class    CLASS_VALUE    DATE_VALUE    EXISTING_FILE_VALUE    FILES_VALUE    FILE_VALUE    NUMBER_VALUE    OBJECT_VALUE    STRING_VALUE    URL_VALUE    boolean        	cli_934_PatternOptionBuilder_1_1	142	1	src/java/org/apache/commons/cli/PatternOptionBuilder.java
627	[PATCH]    if    (sb.length()    ==    0)	[BUG]    [BUGGY]    if    (sb.length()    ==    1)    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    -1    testYahooJp    [CONTEXT]    static    boolean    lastCharIsWhitespace(StringBuilder    sb)    {    [BUGGY]    if    (sb.length()    ==    1)    [BUGGY]    return    false;    String    lastChar    =    sb.substring(sb.length()-1,    sb.length());    Validate.isTrue(lastChar.length()    ==    1);    return    lastChar.equals(   "       ");    }    [CLASS]        TextNode    [METHOD]    lastCharIsWhitespace    [RETURN_TYPE]    boolean        StringBuilder    sb    [VARIABLES]    StringBuilder    sb    String    TEXT_KEY    baseUri    encodedText    html    lastChar    text    boolean        	jsoup_1064_TextNode_1_1	100	1	src/main/java/org/jsoup/nodes/TextNode.java
628	[PATCH]    return    ((c    <<    6)    |    (d    &    0x3F))    -    0x10000;	[BUG]    [BUGGY]    return    ((c    <<    6)    |    (d    &    -63))    -    0x10000;    [FE]    junit.framework.ComparisonFailure:    expected:<[😃]>    but    was:<[﾿?]>    testSurrogates    [CONTEXT]    loadMoreGuaranteed();    }    d    =    (int)    _inputBuffer[_inputPtr++];    if    ((d    &    0xC0)    !=    0x080)    {    _reportInvalidOther(d    &    0xFF,    _inputPtr);    }                    [BUGGY]    return    ((c    <<    6)    |    (d    &    -63))    -    0x10000;    [BUGGY]    }    [CLASS]        UTF8StreamJsonParser    [METHOD]    _decodeUtf8_4    [RETURN_TYPE]    int        int    c    [VARIABLES]    byte[]    _inputBuffer    b    buf    buffer    input    inputBuffer    nameBytes    boolean    _bufferRecyclable    _tokenIncomplete    bufferRecyclable    eof    match    neg    negative    byte    BYTE_LF    InputStream    _inputStream    in    BytesToNameCanonicalizer    _symbols    sym    int[]    _quadBuffer    codes    quads    sInputCodesLatin1    sInputCodesUtf8    ObjectCodec    _objectCodec    c    codec    int    _quad1    amount    bits    byteIx    byteLen    c    c1    ch    ch2    cix    code    count    currQuad    currQuadBytes    d    decodedData    defaultValue    digit    end    expLen    features    firstByte    fractLen    i    intLen    intPartLength    integerPartLength    ix    lastQuad    lastQuadBytes    len    max    max2    minAvailable    nameLen    needed    offset    origPtr    outPtr    outputCount    outputEnd    outputPtr    ptr    q    q1    q2    qlen    start    value        	jacksoncore_14266_UTF8StreamJsonParser_1_1	2896	1	src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java
629	[PATCH]    written    +=    12;	[BUG]    [BUGGY]    written    +=    0;    [FE]    java.io.IOException:    central    directory    is    empty,    can't    expand    corrupt    archive.    testJarMarker    [CONTEXT]    if    (zipMethod    ==    DEFLATED    ||    raf    !=    null)    {    writeOut(LZERO);    writeOut(LZERO);    writeOut(LZERO);    }    else    {    writeOut(ZipLong.getBytes(ze.getCrc()));    writeOut(ZipLong.getBytes(ze.getSize()));    writeOut(ZipLong.getBytes(ze.getSize()));    }        [BUGGY]    written    +=    0;    [BUGGY]            writeOut(ZipShort.getBytes(name.limit()));    written    +=    SHORT;        byte[]    extra    =    ze.getLocalFileDataExtra();    writeOut(ZipShort.getBytes(extra.length));    written    +=    SHORT;    [CLASS]        ZipArchiveOutputStream    UnicodeExtraFieldPolicy    [METHOD]    writeLocalFileHeader    [RETURN_TYPE]    void        ZipArchiveEntry    ze    [VARIABLES]    ZipEncoding    entryEncoding    zipEncoding    UnicodeExtraFieldPolicy    ALWAYS    NEVER    NOT_ENCODEABLE    b    createUnicodeExtraFields    CRC32    crc    OutputStream    o    out    String    DEFAULT_ENCODING    comm    comment    encoding    n    name    ByteBuffer    commentB    name    int    BUFFER_SIZE    BYTE_MASK    DEFAULT_COMPRESSION    DEFLATED    DEFLATER_BLOCK_SIZE    EFS_FLAG    SHORT    STORED    WORD    b    done    fullblocks    i    len    length    level    method    offset    zipMethod    long    cdLength    cdOffset    dataStart    localDataStart    realCrc    save    size    written    byte[]    CFH_SIG    DD_SIG    EOCD_SIG    LFH_SIG    LZERO    ZERO    b    buf    buff    extra    boolean    b    commentEncodable    encodable    fallbackToUTF8    hasCompressionLevelChanged    useEFS    Deflater    def    RandomAccessFile    _raf    raf    ZipArchiveEntry    entry    ze    List    entries    Map    offsets        	compress_1978_ZipArchiveOutputStream_1_1	695	1	src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java
630	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError:    escapeJava(String)    failed    expected:<\u1234[]>    but    was:<\u1234[ሴ]>    testEscapeJava    [CONTEXT]    out.write(toUtf16Escape(codepoint));    }    else    if    (codepoint    >    0xfff)    {    out.write(   "\\u   "    +    hex(codepoint));    }    else    if    (codepoint    >    0xff)    {    out.write(   "\\u0   "    +    hex(codepoint));    }    else    if    (codepoint    >    0xf)    {    out.write(   "\\u00   "    +    hex(codepoint));    }    else    {    out.write(   "\\u000   "    +    hex(codepoint));    }    [BUGGY]    return    false;    [BUGGY]    }    [CLASS]        UnicodeEscaper    [METHOD]    translate    [RETURN_TYPE]    boolean        final    int    codepoint    Writer    out    [VARIABLES]    int    above    below    codepoint    codepointHigh    codepointLow    Writer    out    boolean    between        	lang_20151_UnicodeEscaper_1_1	126	1	src/main/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java
631	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError:    Full    collection    should    containAll    itself    testCollectionContainsAll    [CONTEXT]    public    boolean    equals(final    Object    obj)    {    if    (obj    ==    this)    {    [BUGGY]    return    false;    [BUGGY]    }    if    (obj    instanceof    Map.Entry<?,    ?>    ==    false)    {    return    false;    }    final    Map.Entry<?,    ?>    e2    =    (Map.Entry<?,    ?>)    obj;    return    (    (key    ==    null    ?    e2.getKey()    ==    null    :    key.equals(e2.getKey()))    &&    (value    ==    null    ?    e2.getValue()    ==    null    :    value.equals(e2.getValue())));    }    [CLASS]        StaticBucketMap    Node    Lock    BaseIterator    EntryIterator    ValueIterator    KeyIterator    EntrySet    KeySet    Values    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    Node[]    buckets    Entry    e2    entry    last    boolean    Lock[]    locks    V    returnVal    value    Node    n    newNode    next    prev    ArrayList    current    Object    obj    K    key    int    DEFAULT_BUCKETS    bucket    cnt    hash    hashCode    i    numBuckets    size        	collections_9168_StaticBucketMap_1_1	464	1	src/main/java/org/apache/commons/collections4/map/StaticBucketMap.java
632	[PATCH]    return    elements.get(0);	[BUG]    [BUGGY]    return    elements.get(-1);    [FE]    java.lang.IndexOutOfBoundsException:    Index:    -1,    Size:    1    shouldReturnNullIfNecessary    [CONTEXT]    public    Object    answer(InvocationOnMock    invocation)    throws    Throwable    {    if    (elements.size()    ==    1)    [BUGGY]    return    elements.get(-1);    [BUGGY]    else    return    elements.poll();    }    [CLASS]        ReturnsElementsOf    [METHOD]    answer    [RETURN_TYPE]    Object        InvocationOnMock    invocation    [VARIABLES]    LinkedList    elements    InvocationOnMock    invocation    boolean        	mockito_2225_ReturnsElementsOf_1_1	41	1	src/org/mockito/stubbing/answers/ReturnsElementsOf.java
633	[PATCH]    if    (_currentState    !=    XML_ATTRIBUTE_NAME    ||    _nextAttributeIndex    !=    0)    {	[BUG]    [BUGGY]    if    (_currentState    !=    XML_ATTRIBUTE_NAME    ||    _nextAttributeIndex    !=    -1)    {    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Can    not    deserialize    instance    of    java.lang.String    out    of    START_OBJECT    token    testStringArrayWithAttribute    [CONTEXT]    {        [BUGGY]    if    (_currentState    !=    XML_ATTRIBUTE_NAME    ||    _nextAttributeIndex    !=    -1)    {    [BUGGY]    return    null;    }    try    {    String    text    =    _collectUntilTag();            if    (_xmlReader.getEventType()    ==    XMLStreamReader.END_ELEMENT)    {    if    (text    ==    null)    {    text    =       "   ";    }    [CLASS]        XmlTokenStream    [METHOD]    convertToString    [RETURN_TYPE]    String        [VARIABLES]    boolean    XMLStreamException    e    ElementWrapper    _currentWrapper    XMLStreamReader2    _xmlReader    Object    _sourceReference    sourceRef    String    _localName    _namespaceURI    _nextLocalName    _nextNamespaceURI    _textValue    text    int    REPLAY_END    REPLAY_START_DELAYED    REPLAY_START_DUP    XML_ATTRIBUTE_NAME    XML_ATTRIBUTE_VALUE    XML_END    XML_END_ELEMENT    XML_START_ELEMENT    XML_TEXT    _attributeCount    _currentState    _nextAttributeIndex    _repeatElement    type        	jacksonxml_1178_XmlTokenStream_1_1	268	1	src/main/java/com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream.java
634	[PATCH]    start    =    pos    +    1;    //    start    on    the    current    char    after    this    one	[BUG]    [BUGGY]    start    =    pos    +    -1;    //    start    on    the    current    char    after    this    one    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    -1    testRandom    [CONTEXT]    }    if    (c    ==    '\n')    {    c    =    'n';    }    else    if    (c    ==    '\r')    {    c    =    'r';    }    out.append(escape);    out.append(c);        [BUGGY]    start    =    pos    +    -1;        [BUGGY]    }    pos++;    }        if    (pos    >    start)    {    out.append(value,    start,    pos);    }    }    [CLASS]        CSVPrinter    [METHOD]    printAndEscape    [RETURN_TYPE]    void        CharSequence    value    int    offset    int    len    [VARIABLES]    CharSequence    value    char    c    delim    escape    CSVFormat    format    boolean    newLine    int    end    len    offset    pos    start    Appendable    out        	csv_543_CSVPrinter_1_1	176	1	src/main/java/org/apache/commons/csv/CSVPrinter.java
635	[PATCH]    double    height    =    h[0]    +    h[1]    +    centerHeight;	[BUG]    [BUGGY]    double    height    =    h[1]    +    h[1]    +    centerHeight;    [FE]    junit.framework.AssertionFailedError:    expected:<45.6>    but    was:<91.2>    testSizing    [CONTEXT]    h[3]    =    h[2];    if    (this.centerBlock    !=    null)    {    Size2D    size    =    this.centerBlock.arrange(g2,    RectangleConstraint.NONE);    w[4]    =    size.width;    h[4]    =    size.height;    }    double    width    =    Math.max(w[0],    Math.max(w[1],    w[2]    +    w[4]    +    w[3]));    double    centerHeight    =    Math.max(h[2],    Math.max(h[3],    h[4]));    [BUGGY]    double    height    =    h[1]    +    h[1]    +    centerHeight;    [BUGGY]    if    (this.topBlock    !=    null)    {    this.topBlock.setBounds(new    Rectangle2D.Double(0.0,    0.0,    width,    h[0]));    }    if    (this.bottomBlock    !=    null)    {    this.bottomBlock.setBounds(new    Rectangle2D.Double(0.0,    height    -    h[1],    width,    h[1]));    }    if    (this.leftBlock    !=    null)    {    this.leftBlock.setBounds(new    Rectangle2D.Double(0.0,    h[0],    w[2],    [CLASS]        BorderArrangement    [METHOD]    arrangeNN    [RETURN_TYPE]    Size2D        BlockContainer    container    Graphics2D    g2    [VARIABLES]    Size2D    size    boolean    double[]    h    w    BlockContainer    container    double    centerHeight    height    width    Block    block    bottomBlock    centerBlock    leftBlock    rightBlock    topBlock    long    serialVersionUID    Graphics2D    g2        	chart_35093_BorderArrangement_1_1	218	1	source/org/jfree/chart/block/BorderArrangement.java
636	[PATCH]    int    attrCount    =    0;	[BUG]    [BUGGY]    int    attrCount    =    1;    [FE]    junit.framework.ComparisonFailure:    expected:<...ue44Bean    first=   "abc   "[><second>13</second></Issue44Bean]>>    but    was:<...ue44Bean    first=   "abc   "[    second=   "13   "/]>>    testIssue44    [CONTEXT]    {    [BUGGY]    int    attrCount    =    1;    [BUGGY]    for    (int    i    =    0,    len    =    properties.length;    i    <    len;    ++i)    {    BeanPropertyWriter    bpw    =    properties[i];    if    (!_isAttribute(bpw))    {    continue;    }        int    moveBy    =    i    -    attrCount;    [CLASS]        XmlBeanSerializerBase    [METHOD]    _orderAttributesFirst    [RETURN_TYPE]    int        BeanPropertyWriter[]    properties    BeanPropertyWriter[]    filteredProperties    [VARIABLES]    QName[]    _xmlNames    xmlNames    boolean    BitSet    _cdata    cdata    String    KEY_XML_INFO    name    ns    BeanPropertyWriter[]    filteredProperties    properties    BeanPropertyWriter    bpw    fbpw    int    _attributeCount    _textPropertyIndex    attrCount    i    len    moveBy    textIndex        	jacksonxml_1856_XmlBeanSerializerBase_1_1	371	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerBase.java
637	[PATCH]    final    int    yy    =    ((y    -    1900)    *    365)    +    SerialDate.leapYearCount(y    -    1);	[BUG]    [BUGGY]    final    int    yy    =    ((y    -    -1900)    *    365)    +    SerialDate.leapYearCount(y    -    1);    [FE]    java.lang.IllegalArgumentException:    Range(double,    double):    require    lower    (1.6718688E12)    <=    upper    (1.669363199999E12).    testSerialization4    [CONTEXT]    private    int    calcSerial(final    int    d,    final    int    m,    final    int    y)    {    [BUGGY]    final    int    yy    =    ((y    -    -1900)    *    365)    +    SerialDate.leapYearCount(y    -    1);    [BUGGY]    int    mm    =    SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];    if    (m    >    MonthConstants.FEBRUARY)    {    if    (SerialDate.isLeapYear(y))    {    mm    =    mm    +    1;    }    }    final    int    dd    =    d;    return    yy    +    mm    +    dd    +    1;    }    [CLASS]        SpreadsheetDate    [METHOD]    calcSerial    [RETURN_TYPE]    int        final    int    d    final    int    m    final    int    y    [VARIABLES]    long    serialVersionUID    int    d    day    days    dd    end    include    leaps    m    mm    month    nonleapdays    overestimatedYYYY    s    s1    s2    serial    ss1    ss2    sss    start    underestimatedYYYY    y    year    yy    boolean        	chart_77833_SpreadsheetDate_1_1	449	1	source/org/jfree/data/time/SpreadsheetDate.java
638	[PATCH]    Character.forDigit((b    >>    4)    &    0xF,    16));	[BUG]    [BUGGY]    Character.forDigit((b    >>    4)    &    0xF,    -16));    [FE]    junit.framework.ComparisonFailure:    expected:<%[D0%92%D1%81%D0%B5%D0%BC_%D0%BF%D1%80%D0%B8%D0%B2%D0%B5%D1%8]2>    but    was:<%[ 0% 2% 1% 1% 0% 5% 0% C_% 0% F% 1% 0% 0% 8% 0% 2% 0% 5% 1% ]2>    testUTF8RoundTrip    [CONTEXT]    if    (urlsafe.get(b))    {    if    (b    ==    '    ')    {    b    =    '+';    }    buffer.write(b);    }    else    {    buffer.write('%');    char    hex1    =    Character.toUpperCase(    [BUGGY]    Character.forDigit((b    >>    4)    &    0xF,    -16));    [BUGGY]    char    hex2    =    Character.toUpperCase(    Character.forDigit(b    &    0xF,    16));    buffer.write(hex1);    buffer.write(hex2);    }    [CLASS]        URLCodec    [METHOD]    encodeUrl    [RETURN_TYPE]    byte[]        BitSet    urlsafe    byte[]    bytes    [VARIABLES]    byte[]    bytes    boolean    byte    ESCAPE_CHAR    BitSet    WWW_FORM_URL    urlsafe    char    hex1    hex2    String    charset    ByteArrayOutputStream    buffer    int    b    i        	codec_4353_URLCodec_1_1	135	1	src/java/org/apache/commons/codec/net/URLCodec.java
639	[PATCH]    return    false;	[BUG]    [BUGGY]    return    true;    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    Can    not    construct    instance    of    org.w3c.dom.Document,    problem:    abstract    types    either    need    to    be    mapped    to    concrete    types,    have    custom    deserializer,    or    be    instantiated    with    additional    type    information    testDeserializeNonNS    [CONTEXT]    if    (supertype.getName().startsWith(prefix))    {    return    true;    }    }        for    (Class<?>    cls    =    rawType;    cls    !=    null;    cls    =    cls.getSuperclass())    {    if    (hasInterfaceStartingWith(cls,    prefix))    {    return    true;    }    }    [BUGGY]    return    true;    [BUGGY]    }    [CLASS]        OptionalHandlerFactory    [METHOD]    hasSupertypeStartingWith    [RETURN_TYPE]    boolean        Class<?>    rawType    String    prefix    [VARIABLES]    OptionalHandlerFactory    instance    Class    cls    rawType    supertype    String    CLASS_NAME_DOM_DOCUMENT    CLASS_NAME_DOM_NODE    DESERIALIZERS_FOR_JAVAX_XML    DESERIALIZER_FOR_DOM_DOCUMENT    DESERIALIZER_FOR_DOM_NODE    PACKAGE_PREFIX_JAVAX_XML    SERIALIZERS_FOR_JAVAX_XML    SERIALIZER_FOR_DOM_NODE    className    classNameToImplement    factoryName    interfaceToImplement    prefix    boolean    long    serialVersionUID        	jacksondatabind_10130_OptionalHandlerFactory_1_1	154	1	src/main/java/com/fasterxml/jackson/databind/ext/OptionalHandlerFactory.java
640	[PATCH]    for    (int    i    =    0,    ct    =    e.getValue().intValue();    i    <    ct;    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    1,    ct    =    e.getValue().intValue();    i    <    ct;    i++)    {    [FE]    junit.framework.AssertionFailedError    testRemoveElementLongArray    [CONTEXT]    if    (count    ==    null)    {    occurrences.put(boxed,    new    MutableInt(1));    }    else    {    count.increment();    }    }    final    BitSet    toRemove    =    new    BitSet();    for    (final    Map.Entry<Long,    MutableInt>    e    :    occurrences.entrySet())    {    final    Long    v    =    e.getKey();    int    found    =    0;    [BUGGY]    for    (int    i    =    1,    ct    =    e.getValue().intValue();    i    <    ct;    i++)    {    [BUGGY]    found    =    indexOf(array,    v.longValue(),    found);    if    (found    <    0)    {    break;    }    toRemove.set(found++);    }    }    return    (long[])    removeAll(array,    toRemove);    }    [CLASS]        ArrayUtils    [METHOD]    removeElements    [RETURN_TYPE]    long[]        final    long[]    array    values    [VARIABLES]    long[]    EMPTY_LONG_ARRAY    array    array1    array2    joinedArray    newArray    result    subarray    values    HashMap    occurrences    Character[]    EMPTY_CHARACTER_OBJECT_ARRAY    array    result    Boolean[]    EMPTY_BOOLEAN_OBJECT_ARRAY    array    result    String[]    EMPTY_STRING_ARRAY    array    Integer[]    EMPTY_INTEGER_OBJECT_ARRAY    array    result    long    v    Short[]    EMPTY_SHORT_OBJECT_ARRAY    array    result    Entry    e    Float[]    EMPTY_FLOAT_OBJECT_ARRAY    array    result    Class[]    EMPTY_CLASS_ARRAY    short[]    EMPTY_SHORT_ARRAY    array    array1    array2    joinedArray    newArray    result    subarray    values    BitSet    toRemove    int[]    EMPTY_INT_ARRAY    array    array1    array2    indices    joinedArray    newArray    result    subarray    values    int    INDEX_NOT_FOUND    arrayLength    ct    element    endIndexExclusive    found    i    index    j    length    newSize    startIndex    startIndexInclusive    tmp    v    valueForNull    valueToFind    float[]    EMPTY_FLOAT_ARRAY    array    array1    array2    joinedArray    newArray    result    subarray    char[]    EMPTY_CHAR_ARRAY    array    array1    array2    joinedArray    newArray    result    subarray    values    byte[]    EMPTY_BYTE_ARRAY    array    array1    array2    joinedArray    newArray    result    subarray    values    Double[]    EMPTY_DOUBLE_OBJECT_ARRAY    array    result    boolean    double[]    EMPTY_DOUBLE_ARRAY    array    array1    array2    joinedArray    newArray    result    subarray    Byte[]    EMPTY_BYTE_OBJECT_ARRAY    array    result    MutableInt    count    Long    boxed    v    boolean[]    EMPTY_BOOLEAN_ARRAY    array    array1    array2    joinedArray    newArray    result    subarray    Object[]    EMPTY_OBJECT_ARRAY    array    array1    array2    entry    Long[]    EMPTY_LONG_OBJECT_ARRAY    array    result        	lang_3257_ArrayUtils_1_1	5465	1	src/main/java/org/apache/commons/lang3/ArrayUtils.java
641	[PATCH]    encodedData[encodedIndex    +    1]    =    lookUpBase64Alphabet[k    <<    4];	[BUG]    [BUGGY]    encodedData[encodedIndex    +    1]    =    lookUpBase64Alphabet[k    <<    -4];    [FE]    java.lang.ArrayIndexOutOfBoundsException:    268435456    testSingletonsChunked    [CONTEXT]        dataIndex    =    i    *    3;    if    (fewerThan24bits    ==    EIGHTBIT)    {    b1    =    binaryData[dataIndex];    k    =    (byte)    (b1    &    0x03);            byte    val1    =    ((b1    &    SIGN)    ==    0)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);    encodedData[encodedIndex]    =    lookUpBase64Alphabet[val1];    [BUGGY]    encodedData[encodedIndex    +    1]    =    lookUpBase64Alphabet[k    <<    -4];    [BUGGY]    encodedData[encodedIndex    +    2]    =    PAD;    encodedData[encodedIndex    +    3]    =    PAD;    }    else    if    (fewerThan24bits    ==    SIXTEENBIT)    {    b1    =    binaryData[dataIndex];    b2    =    binaryData[dataIndex    +    1];    l    =    (byte)    (b2    &    0x0f);    k    =    (byte)    (b1    &    0x03);    byte    val1    =    ((b1    &    SIGN)    ==    0)    ?    (byte)    (b1    >>    2)    :    (byte)    ((b1)    >>    2    ^    0xc0);    [CLASS]        Base64    [METHOD]    encodeBase64    [RETURN_TYPE]    byte[]        byte[]    binaryData    boolean    isChunked    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    binaryData    encodedData    lookUpBase64Alphabet    pArray    boolean    isChunked    byte    PAD    b1    b2    b3    k    l    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    length    nextSeparatorIndex    long    binaryDataLength    encodedDataLengthLong    fewerThan24bits    lengthDataBits    tripletCount        	codec_430_Base64_1_1	355	1	src/java/org/apache/commons/codec/binary/Base64.java
642	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    java.lang.NullPointerException    testTarUnarchive    [CONTEXT]    if    (debug)    {    System.err.println(   "ReadBlock:    INCOMPLETE    READ       "    +    numBytes    +       "    of       "    +    blockSize    +       "    bytes    read.   ");    }    }    }    currBlkIdx++;        [BUGGY]    return    false;    [BUGGY]    }    [CLASS]        TarBuffer    [METHOD]    readBlock    [RETURN_TYPE]    boolean        [VARIABLES]    byte[]    blockBuffer    record    result    boolean    debug    InputStream    inStream    int    DEFAULT_BLKSIZE    DEFAULT_RCDSIZE    blockSize    bytesNeeded    currBlkIdx    currRecIdx    i    offset    recordSize    recsPerBlock    sz    long    numBytes    OutputStream    outStream        	compress_2795_TarBuffer_1_1	300	1	src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java
643	[PATCH]    for    (int    col    =    0;    col    <    columnCount;    ++col)    {	[BUG]    [BUGGY]    for    (int    col    =    1;    col    <    columnCount;    ++col)    {    [FE]    org.apache.commons.math3.linear.SingularMatrixException:    matrix    is    singular    testFit    [CONTEXT]    public    RealMatrix    scalarMultiply(final    double    d)    {    final    int    rowCount=    getRowDimension();    final    int    columnCount    =    getColumnDimension();    final    RealMatrix    out    =    createMatrix(rowCount,    columnCount);    for    (int    row    =    0;    row    <    rowCount;    ++row)    {    [BUGGY]    for    (int    col    =    1;    col    <    columnCount;    ++col)    {    [BUGGY]    out.setEntry(row,    col,    getEntry(row,    col)    *    d);    }    }    return    out;    }    [CLASS]        AbstractRealMatrix    1    2    3    4    5    [METHOD]    scalarMultiply    [RETURN_TYPE]    RealMatrix        final    double    d    [VARIABLES]    RealMatrixFormat    DEFAULT_FORMAT    boolean    RealMatrix    out    double    columnSum    d    endRow    maxColSum    sum    int    col    columnCount    columnDimension    row    rowCount    rowDimension    startColumn    startRow        	math_45113_AbstractRealMatrix_1_1	130	1	src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java
644	[PATCH]    return    1;	[BUG]    [BUGGY]    return    0;    [FE]    junit.framework.AssertionFailedError:    expected:<1>    but    was:<0>    testElementCompareTo    [CONTEXT]    public    int    elementCompareTo(final    T    element)    {    if    (element    ==    null)    {        throw    new    NullPointerException(   "Element    is    null   ");    }    if    (isAfter(element))    {    return    -1;    }    else    if    (isBefore(element))    {    [BUGGY]    return    0;    [BUGGY]    }    else    {    return    0;    }    }    [CLASS]        Range    ComparableComparator    [METHOD]    elementCompareTo    [RETURN_TYPE]    int        final    T    element    [VARIABLES]    boolean    T    element    element1    element2    fromInclusive    maximum    minimum    toInclusive    String    toString    ComparableComparator    INSTANCE    long    serialVersionUID    int    hashCode    Comparator    comparator        	lang_10807_Range_1_1	295	1	src/main/java/org/apache/commons/lang3/Range.java
645	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError:    expected:<...ollow   ">Dodgy</a>    <a    [href=   "http://nice.com   "    ]rel=   "nofollow   ">Nice<...>    but    was:<...ollow   ">Dodgy</a>    <a    []rel=   "nofollow   ">Nice<...>    basicBehaviourTest    [CONTEXT]    private    boolean    testValidProtocol(Element    el,    Attribute    attr,    Set<Protocol>    protocols)    {            String    value    =    el.absUrl(attr.getKey());    attr.setValue(value);    for    (Protocol    protocol    :    protocols)    {    String    prot    =    protocol.toString()    +       ":   ";    if    (value.toString().toLowerCase().startsWith(prot))    {    [BUGGY]    return    false;    [BUGGY]    }    }    return    false;    }    [CLASS]        Whitelist    TagName    AttributeKey    AttributeValue    Protocol    TypedValue    [METHOD]    testValidProtocol    [RETURN_TYPE]    boolean        Element    el    Attribute    attr    Protocol>    protocols    [VARIABLES]    Set    attributeSet    currentSet    protSet    protocols    tagNames    boolean    Attribute    attr    Element    el    String    key    prot    protocol    tag    tagName    value    Protocol    protocol    Map    attrMap    attrProts    attributes    enforcedAttributes    protocols        	jsoup_485_Whitelist_1_1	326	1	src/main/java/org/jsoup/safety/Whitelist.java
646	[PATCH]    for    (int    j    =    1;    j    <    array.length;    j++)    {	[BUG]    [BUGGY]    for    (int    j    =    -1;    j    <    array.length;    j++)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testMaxLong    [CONTEXT]    public    static    long    max(final    long[]    array)    {        validateArray(array);        long    max    =    array[0];    [BUGGY]    for    (int    j    =    -1;    j    <    array.length;    j++)    {    [BUGGY]    if    (array[j]    >    max)    {    max    =    array[j];    }    }    return    max;    }    [CLASS]        NumberUtils    [METHOD]    max    [RETURN_TYPE]    long        final    long[]    array    [VARIABLES]    Integer    INTEGER_MINUS_ONE    INTEGER_ONE    INTEGER_ZERO    Float    FLOAT_MINUS_ONE    FLOAT_ONE    FLOAT_ZERO    f    boolean    long[]    array    Byte    BYTE_MINUS_ONE    BYTE_ONE    BYTE_ZERO    Long    LONG_MINUS_ONE    LONG_ONE    LONG_ZERO    Double    DOUBLE_MINUS_ONE    DOUBLE_ONE    DOUBLE_ZERO    d    Short    SHORT_MINUS_ONE    SHORT_ONE    SHORT_ZERO    long    max    int    j        	lang_18074_NumberUtils_1_1	940	1	src/main/java/org/apache/commons/lang3/math/NumberUtils.java
647	[PATCH]    return    jjMoveStringLiteralDfa3_0(active0,    0x7000000000000000L,    active1,    0L);	[BUG]    [BUGGY]    return    jjMoveStringLiteralDfa3_0(active0,    -8070450532247928832L,    active1,    0L);    [FE]    junit.framework.AssertionFailedError:    Expression    class    for    substring-after('a',    2)    expected:<class    org.apache.commons.jxpath.ri.compiler.CoreFunction>    but    was:<class    org.apache.commons.jxpath.ri.compiler.ExtensionFunction>    testCoreFunction    [CONTEXT]    try    {    curChar    =    input_stream.readChar();    }    catch(java.io.IOException    e)    {    jjStopStringLiteralDfa_0(1,    active0,    active1);    return    2;    }    switch(curChar)    {    case    97:    return    jjMoveStringLiteralDfa3_0(active0,    0x400000000000000L,    active1,    0x2L);    case    98:    [BUGGY]    return    jjMoveStringLiteralDfa3_0(active0,    -8070450532247928832L,    active1,    0L);    [BUGGY]    case    99:    return    jjMoveStringLiteralDfa3_0(active0,    0x20104000000000L,    active1,    0L);    case    100:    if    ((active0    &    0x10000000L)    !=    0L)    return    jjStartNfaWithStates_0(2,    28,    12);    else    if    ((active0    &    0x20000000L)    !=    0L)    return    jjStartNfaWithStates_0(2,    29,    12);    return    jjMoveStringLiteralDfa3_0(active0,    0x80000000L,    active1,    0L);    case    101:    return    jjMoveStringLiteralDfa3_0(active0,    0x420000000000L,    active1,    0L);    [CLASS]        XPathParserTokenManager    [METHOD]    jjMoveStringLiteralDfa2_0    [RETURN_TYPE]    int        long    old0    long    active0    long    old1    long    active1    [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    IOException    e    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    kind    lexState    pos    state    long    active0    active1    old0    old1        	jxpath_9423_XPathParserTokenManager_1_1	550	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
648	[PATCH]    final    boolean    chFound    =    CharSequenceUtils.indexOf(searchChars,    ch,    0)    >=    0;	[BUG]    [BUGGY]    final    boolean    chFound    =    CharSequenceUtils.indexOf(searchChars,    ch,    0)    >=    -1;    [FE]    junit.framework.AssertionFailedError:    expected:<3>    but    was:<-1>    testIndexOfAnyBut_StringString    [CONTEXT]    public    static    int    indexOfAnyBut(final    CharSequence    seq,    final    CharSequence    searchChars)    {    if    (isEmpty(seq)    ||    isEmpty(searchChars))    {    return    INDEX_NOT_FOUND;    }    final    int    strLen    =    seq.length();    for    (int    i    =    0;    i    <    strLen;    i++)    {    final    char    ch    =    seq.charAt(i);    [BUGGY]    final    boolean    chFound    =    CharSequenceUtils.indexOf(searchChars,    ch,    0)    >=    -1;    [BUGGY]    if    (i    +    1    <    strLen    &&    Character.isHighSurrogate(ch))    {    final    char    ch2    =    seq.charAt(i    +    1);    if    (chFound    &&    CharSequenceUtils.indexOf(searchChars,    ch2,    0)    <    0)    {    return    i;    }    }    else    {    if    (!chFound)    {    return    i;    }    }    [CLASS]        StringUtils    [METHOD]    indexOfAnyBut    [RETURN_TYPE]    int        CharSequence    seq    CharSequence    searchChars    [VARIABLES]    CharSequence    searchChars    seq    char    ch    ch2    Pattern    WHITESPACE_PATTERN    pattern    String    CR    EMPTY    LF    SPACE    decomposed    input    searchChars    str    stripChars    ts    boolean    chFound    int    INDEX_NOT_FOUND    PAD_LIMIT    csLast    csLen    csLength    end    endLimit    found    i    index    j    len    max    ordinal    searchChar    searchLast    searchLen    searchLength    start    startPos    strLen    strsLen        	lang_11640_StringUtils_1_1	1663	1	src/main/java/org/apache/commons/lang3/StringUtils.java
649	[PATCH]    for    (int    i    =    0;    i    <    sz;    i++)	[BUG]    [BUGGY]    for    (int    i    =    1;    i    <    sz;    i++)    [FE]    junit.framework.ComparisonFailure:    flag    a    expected:<foo>    but    was:<null>    testSimplePattern    [CONTEXT]    {    int    sz    =    pattern.length();    char    opt    =    '    ';    char    ch    =    '    ';    boolean    required    =    false;    Object    type    =    null;    Options    options    =    new    Options();        [BUGGY]    for    (int    i    =    1;    i    <    sz;    i++)    [BUGGY]    {    ch    =    pattern.charAt(i);            if    (!isValueCode(ch))    {    if    (opt    !=    '    ')    {    OptionBuilder.hasArg(type    !=    null);    [CLASS]        PatternOptionBuilder    [METHOD]    parsePattern    [RETURN_TYPE]    Options        String    pattern    [VARIABLES]    Options    options    boolean    required    char    ch    opt    Class    CLASS_VALUE    DATE_VALUE    EXISTING_FILE_VALUE    FILES_VALUE    FILE_VALUE    NUMBER_VALUE    OBJECT_VALUE    STRING_VALUE    URL_VALUE    Object    type    String    pattern    int    i    sz        	cli_937_PatternOptionBuilder_1_1	166	1	src/java/org/apache/commons/cli/PatternOptionBuilder.java
650	[PATCH]    return    false;	[BUG]    [BUGGY]    return    true;    [FE]    junit.framework.AssertionFailedError:    testThisAlias    [CONTEXT]    boolean    isEscaped()    {    Scope    scope    =    null;    for    (Reference    ref    :    references)    {    if    (scope    ==    null)    {    scope    =    ref.scope;    }    else    if    (scope    !=    ref.scope)    {    return    true;    }    }    [BUGGY]    return    true;    [BUGGY]    }    [CLASS]        ReferenceCollectingCallback    ReferenceMapWrapper    1    ReferenceCollection    Reference    BasicBlock    [METHOD]    isEscaped    [RETURN_TYPE]    boolean        [VARIABLES]    Set    DECLARATION_PARENTS    Reference    ref    Node    externs    n    nameNode    originalRoot    parent    root    scriptRoot    BasicBlock    basicBlock    initBlock    parent    Deque    blockStack    Predicate    varFilter    AbstractCompiler    compiler    boolean    isFunction    isHoisted    isLoop    Scope    scope    InputId    inputId    List    references    Behavior    DO_NOTHING_BEHAVIOR    behavior    StaticSourceFile    sourceFile    Map    referenceMap        	closure_6018_ReferenceCollectingCallback_1_1	347	1	src/com/google/javascript/jscomp/ReferenceCollectingCallback.java
651	[PATCH]    for    (int    i    =    0;    i    <    n;    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    -1;    i    <    n;    i++)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testOLSRegression1a    [CONTEXT]    int    n    =    data.length;    if    (n    <    2)    {    throw    new    IllegalArgumentException(   "Not    enough    data.   ");    }    double    sumX    =    0;    double    sumY    =    0;    double    sumXX    =    0;    double    sumXY    =    0;    [BUGGY]    for    (int    i    =    -1;    i    <    n;    i++)    {    [BUGGY]    double    x    =    data[i][0];    double    y    =    data[i][1];    sumX    +=    x;    sumY    +=    y;    double    xx    =    x    *    x;    sumXX    +=    xx;    double    xy    =    x    *    y;    sumXY    +=    xy;    }    double    sxx    =    sumXX    -    (sumX    *    sumX)    /    n;    [CLASS]        Regression    [METHOD]    getOLSRegression    [RETURN_TYPE]    double[]        double[][]    data    [VARIABLES]    boolean    double[]    result    double    sumX    sumXX    sumXY    sumY    sxx    sxy    x    xbar    xx    xy    y    ybar    double[][]    data    int    i    n        	chart_72722_Regression_1_1	75	1	source/org/jfree/data/statistics/Regression.java
652	[PATCH]    if    (c    <    escCodeCount    &&    escCodes[c]    !=    0)    {	[BUG]    [BUGGY]    if    (c    <    escCodeCount    &&    escCodes[c]    !=    1)    {    [FE]    java.lang.AssertionError:    array    lengths    differed,    expected.length=6    actual.length=12    testQuoteAsString    [CONTEXT]    final    int    escCodeCount    =    escCodes.length;    int    inPtr    =    0;    final    int    inputLen    =    input.length();    int    outPtr    =    0;    outer_loop:    while    (inPtr    <    inputLen)    {    tight_loop:    while    (true)    {    char    c    =    input.charAt(inPtr);    [BUGGY]    if    (c    <    escCodeCount    &&    escCodes[c]    !=    1)    {    [BUGGY]    break    tight_loop;    }    if    (outPtr    >=    outputBuffer.length)    {    outputBuffer    =    textBuffer.finishCurrentSegment();    outPtr    =    0;    }    outputBuffer[outPtr++]    =    c;    if    (++inPtr    >=    inputLen)    {    break    outer_loop;    }    [CLASS]        JsonStringEncoder    [METHOD]    quoteAsString    [RETURN_TYPE]    char[]        String    input    [VARIABLES]    byte[]    HEX_BYTES    boolean    TextBuffer    _textBuffer    textBuffer    ThreadLocal    _threadEncoder    char    c    d    int[]    escCodes    ByteArrayBuilder    _byteBuilder    String    input    int    INT_0    INT_BACKSLASH    INT_U    SURR1_FIRST    SURR1_LAST    SURR2_FIRST    SURR2_LAST    escCode    escCodeCount    first    inPtr    inputLen    length    outPtr    second    char[]    HEX_CHARS    _quoteBuffer    outputBuffer        	jacksoncore_4268_JsonStringEncoder_1_1	116	1	src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java
653	[PATCH]    str    =    str.substring(0,    str.length()-1);	[BUG]    [BUGGY]    str    =    str.substring(-1,    str.length()-1);    [FE]    org.apache.commons.cli.MissingArgumentException:    Missing    argument    for    option:m    test15648    [CONTEXT]    static    String    stripLeadingAndTrailingQuotes(String    str)    {    if    (str.startsWith(   "\   "   "))    {    str    =    str.substring(1,    str.length());    }    if    (str.endsWith(   "\   "   "))    {    [BUGGY]    str    =    str.substring(-1,    str.length()-1);    [BUGGY]    }    return    str;    }    [CLASS]        Util    [METHOD]    stripLeadingAndTrailingQuotes    [RETURN_TYPE]    String        String    str    [VARIABLES]    boolean    String    str        	cli_1111_Util_1_1	62	1	src/java/org/apache/commons/cli/Util.java
654	[PATCH]    return    method.isBridge()    ?    1    :    0;	[BUG]    [BUGGY]    return    method.isBridge()    ?    0    :    0;    [FE]    junit.framework.AssertionFailedError:    shouldVerifyCorrectlyWhenBridgeMethodCalled    [CONTEXT]    private    static    final    CallbackFilter    IGNORE_BRIDGE_METHODS    =    new    CallbackFilter()    {    public    int    accept(Method    method)    {    [BUGGY]    return    method.isBridge()    ?    0    :    0;    [BUGGY]    }    };    [CLASS]        ClassImposterizer    1    2    3    ClassWithSuperclassToWorkAroundCglibBug        [VARIABLES]    	mockito_722_ClassImposterizer_1_1	39	1	src/org/mockito/internal/creation/jmock/ClassImposterizer.java
655	[PATCH]    return    false;	[BUG]    [BUGGY]    return    true;    [FE]    junit.framework.AssertionFailedError:    expected    warnings    were    not    reported    testBadModifies6    [CONTEXT]    public    boolean    recordModifies(Set<String>    modifies)    {    if    (!hasAnySingletonSideEffectTags()    &&    currentInfo.setModifies(modifies))    {    populated    =    true;    return    true;    }    else    {    [BUGGY]    return    true;    [BUGGY]    }    }    [CLASS]        JSDocInfoBuilder    [METHOD]    recordModifies    [RETURN_TYPE]    boolean        String>    modifies    [VARIABLES]    boolean    hasLC    parseDocumentation    populated    Marker    currentMarker    marker    Set    modifies    JSDocInfo    built    currentInfo    info        	closure_47618_JSDocInfoBuilder_1_1	441	1	src/com/google/javascript/rhino/JSDocInfoBuilder.java
656	[PATCH]    if    ((series    <    0)    ||    (series    >=    getSeriesCount()))    {	[BUG]    [BUGGY]    if    ((series    <    1)    ||    (series    >=    getSeriesCount()))    {    [FE]    java.lang.IllegalArgumentException:    DefaultIntervalCategoryDataset.getValue():    series    index    out    of    range.    testDrawWithNullInfo    [CONTEXT]    public    Number    getStartValue(int    series,    int    category)    {            [BUGGY]    if    ((series    <    1)    ||    (series    >=    getSeriesCount()))    {    [BUGGY]    throw    new    IllegalArgumentException(       "DefaultIntervalCategoryDataset.getValue():       "    +       "series    index    out    of    range.   ");    }    if    ((category    <    0)    ||    (category    >=    getCategoryCount()))    {    throw    new    IllegalArgumentException(       "DefaultIntervalCategoryDataset.getValue():       "    +       "category    index    out    of    range.   ");    }    [CLASS]        DefaultIntervalCategoryDataset    [METHOD]    getStartValue    [RETURN_TYPE]    Number        int    series    int    category    [VARIABLES]    Number[][]    endData    ends    startData    starts    boolean    int    category    series    Comparable[]    categoryKeys    seriesKeys        	chart_68419_DefaultIntervalCategoryDataset_1_1	437	1	source/org/jfree/data/category/DefaultIntervalCategoryDataset.java
657	[PATCH]    boolean[]    inUse16    =    new    boolean[16];	[BUG]    [BUGGY]    boolean[]    inUse16    =    new    boolean[0];    [FE]    java.lang.ArrayIndexOutOfBoundsException:    0    testBzipCreation    [CONTEXT]    panic();    }    if    (minLen    <    1)    {    panic();    }    hbAssignCodes(code[t],    len[t],    minLen,    maxLen,    alphaSize);    }        {    [BUGGY]    boolean[]    inUse16    =    new    boolean[0];    [BUGGY]    for    (i    =    0;    i    <    16;    i++)    {    inUse16[i]    =    false;    for    (j    =    0;    j    <    16;    j++)    {    if    (inUse[i    *    16    +    j])    {    inUse16[i]    =    true;    }    }    }            [CLASS]        BZip2CompressorOutputStream    StackElem    [METHOD]    sendMTFValues    [RETURN_TYPE]    void        [VARIABLES]    boolean    blockRandomised    closed    firstAttempt    tooLong    int[][]    code    rfreq    CRC    mCrc    OutputStream    bsStream    f    inStream    short[]    cost    szptr    char    ll_i    tmp    tmp2    char[][]    len    short    cost0    cost1    cost2    cost3    cost4    cost5    icv    int[]    code    fave    freq    ftab    heap    incs    mtfFreq    parent    quadrant    weight    zptr    boolean[]    inUse    inUse16    int    CLEARMASK    DEPTH_THRESH    GREATER_ICOST    LESSER_ICOST    QSORT_STACK_SIZE    SETMASK    SMALL_THRESH    aFreq    allowableBlockSize    alphaSize    b    bc    blockCRC    blockSize100k    bsBuff    bsLive    bt    bv    bytesOut    c    ch    combinedCRC    curr    currentChar    dd    ge    gs    hh    i    inBlockSize    iter    j    k    last    ll    maxLen    minLen    n    n1    n2    nBlocksRandomised    nGroups    nHeap    nInUse    nMTF    nNodes    nPart    nSelectors    numBits    origPtr    remF    runLength    selCtr    t    tFreq    tmp    totc    u    v    vec    workDone    workFactor    workLimit    yy    zz    char[]    block    len    length    pos    selector    selectorMtf    seqToUnseq    unseqToSeq        	compress_9226_BZip2CompressorOutputStream_1_1	798	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java
658	[PATCH]    return    false;	[BUG]    [BUGGY]    return    true;    [FE]    junit.framework.AssertionFailedError    testEquals    [CONTEXT]    if    (this.baseRadius    !=    that.baseRadius)    {    return    false;    }    if    (this.arrowLength    !=    that.arrowLength)    {    return    false;    }    if    (this.arrowWidth    !=    that.arrowWidth)    {    return    false;    }    if    (!this.arrowPaint.equals(that.arrowPaint))    {    [BUGGY]    return    true;    [BUGGY]    }    if    (!ObjectUtilities.equal(this.arrowStroke,    that.arrowStroke))    {    return    false;    }    if    (this.labelOffset    !=    that.labelOffset)    {    return    false;    }    return    true;    }    [CLASS]        CategoryPointerAnnotation    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    CategoryPointerAnnotation    that    Stroke    arrowStroke    stroke    boolean    double    DEFAULT_ARROW_LENGTH    DEFAULT_ARROW_WIDTH    DEFAULT_BASE_RADIUS    DEFAULT_LABEL_OFFSET    DEFAULT_TIP_RADIUS    angle    arrowBaseX    arrowBaseY    arrowLeftX    arrowLeftY    arrowLength    arrowRightX    arrowRightY    arrowWidth    baseRadius    endX    endY    j2DX    j2DY    labelOffset    labelX    labelY    length    offset    radius    startX    startY    temp    tipRadius    value    width    Object    obj    Paint    arrowPaint    paint    long    serialVersionUID        	chart_26744_CategoryPointerAnnotation_1_1	466	1	source/org/jfree/chart/annotations/CategoryPointerAnnotation.java
659	[PATCH]    for    (int    i    =    0;    i    <    cmpLen;    ++i)    {	[BUG]    [BUGGY]    for    (int    i    =    -1;    i    <    cmpLen;    ++i)    {    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    -1    testLongBoundsChecks    [CONTEXT]    public    static    boolean    inLongRange(String    numberStr,    boolean    negative)    {    String    cmpStr    =    negative    ?    MIN_LONG_STR_NO_SIGN    :    MAX_LONG_STR;    int    cmpLen    =    cmpStr.length();    int    actualLen    =    numberStr.length();    if    (actualLen    <    cmpLen)    return    true;    if    (actualLen    >    cmpLen)    return    false;            [BUGGY]    for    (int    i    =    -1;    i    <    cmpLen;    ++i)    {    [BUGGY]    int    diff    =    numberStr.charAt(i)    -    cmpStr.charAt(i);    if    (diff    !=    0)    {    return    (diff    <    0);    }    }    return    true;    }    [CLASS]        NumberInput    [METHOD]    inLongRange    [RETURN_TYPE]    boolean        String    numberStr    boolean    negative    [VARIABLES]    String    MAX_LONG_STR    MIN_LONG_STR_NO_SIGN    NASTY_SMALL_DOUBLE    cmpStr    numberStr    str    boolean    negative    long    L_BILLION    val    int    actualLen    cmpLen    diff    i        	jacksoncore_5223_NumberInput_1_1	180	1	src/main/java/com/fasterxml/jackson/core/io/NumberInput.java
660	[PATCH]    contains(value,    index    -    3,    1,       "C   ",       "G   ",       "L   ",       "R   ",       "T   "))    {	[BUG]    [BUGGY]    contains(value,    index    -    3,    -1,       "C   ",       "G   ",       "L   ",       "R   ",       "T   "))    {    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    -1    testIsDoubleMetaphoneEqualExtended3    [CONTEXT]    }    else    if    ((index    >    1    &&    contains(value,    index    -    2,    1,       "B   ",       "H   ",       "D   "))    ||    (index    >    2    &&    contains(value,    index    -    3,    1,       "B   ",       "H   ",       "D   "))    ||    (index    >    3    &&    contains(value,    index    -    4,    1,       "B   ",       "H   ")))    {        index    +=    2;    }    else    {    if    (index    >    2    &&    charAt(value,    index    -    1)    ==    'U'    &&    [BUGGY]    contains(value,    index    -    3,    -1,       "C   ",       "G   ",       "L   ",       "R   ",       "T   "))    {    [BUGGY]        result.append('F');    }    else    if    (index    >    0    &&    charAt(value,    index    -    1)    !=    'I')    {    result.append('K');    }    index    +=    2;    }    [CLASS]        DoubleMetaphone    DoubleMetaphoneResult    [METHOD]    handleGH    [RETURN_TYPE]    int        String    value    DoubleMetaphoneResult    result    int    index    [VARIABLES]    StringBuffer    alternate    primary    String    VOWELS    value    value1    value2    String[]    ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER    L_R_N_M_B_H_F_V_W_SPACE    L_T_K_S_N_M_B_Z    SILENT_START    boolean    int    index    maxCodeLen    maxLength    DoubleMetaphoneResult    result        	codec_2079_DoubleMetaphone_1_1	494	1	src/java/org/apache/commons/codec/language/DoubleMetaphone.java
661	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError:    expected:<org.jfree.chart.LegendItemCollection@bb12f41>    but    was:<org.jfree.chart.LegendItemCollection@1f26b992>    testSerialization    [CONTEXT]    if    (obj    ==    this)    {    return    true;    }    if    (!(obj    instanceof    LegendItemCollection))    {    return    false;    }    LegendItemCollection    that    =    (LegendItemCollection)    obj;    if    (!this.items.equals(that.items))    {    return    false;    }    [BUGGY]    return    false;    [BUGGY]    }    [CLASS]        LegendItemCollection    [METHOD]    equals    [RETURN_TYPE]    boolean        Object    obj    [VARIABLES]    List    items    Object    obj    boolean    long    serialVersionUID    LegendItemCollection    that        	chart_7468_LegendItemCollection_1_1	137	1	source/org/jfree/chart/LegendItemCollection.java
662	[PATCH]    if    (index    ==    0)    {    //    whitespace    only    allowed    to    be    skipped    between    triplets	[BUG]    [BUGGY]    if    (index    ==    1)    {    //    whitespace    only    allowed    to    be    skipped    between    triplets    [FE]    com.fasterxml.jackson.core.JsonParseException:    Failed    to    decode    VALUE_STRING    as    base64    (MIME-NO-LINEFEEDS):    Illegal    white    space    character    (code    0xa)    as    character    #1    of    4-char    base64    unit:    can    only    used    between    units    testWithEscaped    [CONTEXT]    protected    final    int    _decodeBase64Escape(Base64Variant    b64variant,    char    ch,    int    index)    throws    IOException,    JsonParseException    {        if    (ch    !=    '\\')    {    throw    reportInvalidBase64Char(b64variant,    ch,    index);    }    char    unescaped    =    _decodeEscaped();        if    (unescaped    <=    INT_SPACE)    {    [BUGGY]    if    (index    ==    1)    {        [BUGGY]    return    -1;    }    }        int    bits    =    b64variant.decodeBase64Char(unescaped);    if    (bits    <    0)    {    throw    reportInvalidBase64Char(b64variant,    unescaped,    index);    }    return    bits;    }    [CLASS]        ParserBase    [METHOD]    _decodeBase64Escape    [RETURN_TYPE]    int        Base64Variant    b64variant    char    ch    int    index    [VARIABLES]    double    MAX_INT_D    MAX_LONG_D    MIN_INT_D    MIN_LONG_D    _numberDouble    value    ByteArrayBuilder    _byteArrayBuilder    int    INT_0    INT_1    INT_2    INT_3    INT_4    INT_5    INT_6    INT_7    INT_8    INT_9    INT_DECIMAL_POINT    INT_E    INT_MINUS    INT_PLUS    INT_e    NR_BIGDECIMAL    NR_BIGINT    NR_DOUBLE    NR_INT    NR_LONG    NR_UNKNOWN    _currInputRow    _currInputRowStart    _expLength    _fractLength    _inputEnd    _inputPtr    _intLength    _numTypesValid    _numberInt    _tokenInputCol    _tokenInputRow    actCh    bits    ch    col    expLen    expType    features    fractLen    i    index    intLen    len    offset    result    unescaped    long    MAX_INT_L    MIN_INT_L    _currInputProcessed    _numberLong    _tokenInputTotal    l    BigDecimal    BD_MAX_INT    BD_MAX_LONG    BD_MIN_INT    BD_MIN_LONG    _numberBigDecimal    char[]    _nameCopyBuffer    buf    JsonReadContext    _parsingContext    ctxt    parent    byte[]    _binaryValue    boolean    _closed    _nameCopied    _numberNegative    negative    TextBuffer    _textBuffer    char    CHAR_NULL    ch    expCh    unescaped    IOContext    _ioContext    ctxt    BigInteger    BI_MAX_INT    BI_MAX_LONG    BI_MIN_INT    BI_MIN_LONG    _numberBigInt    Base64Variant    b64variant    JsonToken    _nextToken        	jacksoncore_3692_ParserBase_1_1	1053	1	src/main/java/com/fasterxml/jackson/core/base/ParserBase.java
663	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError    testClassAndFieldAreAtSameVersion    [CONTEXT]    private    boolean    isValidUntil(Until    annotation)    {    if    (annotation    !=    null)    {    double    annotationVersion    =    annotation.value();    if    (annotationVersion    <=    version)    {    return    false;    }    }    [BUGGY]    return    false;    [BUGGY]    }    [CLASS]        VersionExclusionStrategy    [METHOD]    isValidUntil    [RETURN_TYPE]    boolean        Until    annotation    [VARIABLES]    double    annotationVersion    version    Until    annotation    boolean        	gson_2232_VersionExclusionStrategy_1_1	65	1	gson/src/main/java/com/google/gson/VersionExclusionStrategy.java
664	[PATCH]    if    (signature[4]    !=    0x30)    {	[BUG]    [BUGGY]    if    (signature[4]    !=    -48)    {    [FE]    org.apache.commons.compress.archivers.ArchiveException:    No    Archiver    found    for    the    stream    signature    testDetection    [CONTEXT]    }    if    (signature[1]    !=    0x37)    {    return    false;    }    if    (signature[2]    !=    0x30)    {    return    false;    }    if    (signature[3]    !=    0x37)    {    return    false;    }    [BUGGY]    if    (signature[4]    !=    -48)    {    [BUGGY]    return    false;    }    return    true;    }    [CLASS]        CpioArchiveInputStream    [METHOD]    matches    [RETURN_TYPE]    boolean        byte[]    signature    int    length    [VARIABLES]    byte[]    b    magic    more_magic    signature    singleByteBuf    tmp    tmpBuffer    tmpbuf    boolean    closed    entryEOF    hasCrc    swapHalfWord    InputStream    in    CpioArchiveEntry    entry    ret    long    count    crc    entryBytesRead    n    namesize    skip    int    length        	compress_968_CpioArchiveInputStream_1_1	442	1	src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java
665	[PATCH]    length    =    length    -    1;	[BUG]    [BUGGY]    length    =    length    -    -1;    [FE]    java.lang.StringIndexOutOfBoundsException:    String    index    out    of    range:    3    testNextToken1    [CONTEXT]    void    trimTrailingSpaces(StringBuilder    buffer)    {    int    length    =    buffer.length();    while    (length    >    0    &&    Character.isWhitespace(buffer.charAt(length    -    1)))    {    [BUGGY]    length    =    length    -    -1;    [BUGGY]    }    if    (length    !=    buffer.length())    {    buffer.setLength(length);    }    }    [CLASS]        Lexer    [METHOD]    trimTrailingSpaces    [RETURN_TYPE]    void        StringBuilder    buffer    [VARIABLES]    char    commmentStart    delimiter    encapsulator    escape    ExtendedBufferedReader    in    CSVFormat    format    boolean    emptyLinesIgnored    isCommentEnabled    isEncapsulating    isEscaping    surroundingSpacesIgnored    StringBuilder    buffer    int    length        	csv_228_Lexer_1_1	85	1	src/main/java/org/apache/commons/csv/Lexer.java
666	[PATCH]    return    elements.get(0).getAsDouble();	[BUG]    [BUGGY]    return    elements.get(1).getAsDouble();    [FE]    com.google.gson.JsonParseException:    The    JsonDeserializer    DoubleDeserializer    failed    to    deserialized    json    object    [-122.08]    given    the    type    double    testPrimitiveDoubleAutoboxedInASingleElementArrayDeserialization    [CONTEXT]    public    double    getAsDouble()    {    if    (elements.size()    ==    1)    {    [BUGGY]    return    elements.get(1).getAsDouble();    [BUGGY]    }    throw    new    IllegalStateException();    }    [CLASS]        JsonArray    [METHOD]    getAsDouble    [RETURN_TYPE]    double        [VARIABLES]    List    elements    boolean        	gson_527_JsonArray_1_1	147	1	gson/src/main/java/com/google/gson/JsonArray.java
667	[PATCH]    result[value.ordinal()    /    Long.SIZE]    |=    1    <<    (value.ordinal()    %    Long.SIZE);	[BUG]    [BUGGY]    result[value.ordinal()    /    Long.SIZE]    |=    -1    <<    (value.ordinal()    %    Long.SIZE);    [FE]    junit.framework.AssertionFailedError:    arrays    first    differed    at    element    [0];    expected:<1>    but    was:<-1>    test_generateBitVectorsFromArray    [CONTEXT]    public    static    <E    extends    Enum<E>>    long[]    generateBitVectors(final    Class<E>    enumClass,    final    E...    values)    {    asEnum(enumClass);    Validate.noNullElements(values);    final    EnumSet<E>    condensed    =    EnumSet.noneOf(enumClass);    Collections.addAll(condensed,    values);    final    long[]    result    =    new    long[(enumClass.getEnumConstants().length    -    1)    /    Long.SIZE    +    1];    for    (final    E    value    :    condensed)    {    [BUGGY]    result[value.ordinal()    /    Long.SIZE]    |=    -1    <<    (value.ordinal()    %    Long.SIZE);    [BUGGY]    }    ArrayUtils.reverse(result);    return    result;    }    [CLASS]        EnumUtils    [METHOD]    generateBitVectors    [RETURN_TYPE]    <E        Class<E>    enumClass    values    [VARIABLES]    boolean    long[]    result    E    value    E[]    values    EnumSet    condensed    Class    enumClass    String    CANNOT_STORE_S_S_VALUES_IN_S_BITS    ENUM_CLASS_MUST_BE_DEFINED    NULL_ELEMENTS_NOT_PERMITTED    S_DOES_NOT_SEEM_TO_BE_AN_ENUM_TYPE    enumName        	lang_7852_EnumUtils_1_1	230	1	src/main/java/org/apache/commons/lang3/EnumUtils.java
668	[PATCH]    for    (int    jBlock    =    0;    jBlock    <    blockRows;    ++jBlock)    {	[BUG]    [BUGGY]    for    (int    jBlock    =    -1;    jBlock    <    blockRows;    ++jBlock)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -2    testSeveralBlocks    [CONTEXT]        @Override    public    FieldMatrix<T>    transpose()    {    final    int    nRows    =    getRowDimension();    final    int    nCols    =    getColumnDimension();    final    BlockFieldMatrix<T>    out    =    new    BlockFieldMatrix<T>(getField(),    nCols,    nRows);        int    blockIndex    =    0;    for    (int    iBlock    =    0;    iBlock    <    blockColumns;    ++iBlock)    {    [BUGGY]    for    (int    jBlock    =    -1;    jBlock    <    blockRows;    ++jBlock)    {    [BUGGY]        final    T[]    outBlock    =    out.blocks[blockIndex];    final    T[]    tBlock    =    blocks[jBlock    *    blockColumns    +    iBlock];    final    intpStart    =    iBlock    *    BLOCK_SIZE;    final    intpEnd    =    FastMath.min(pStart    +    BLOCK_SIZE,    columns);    final    intqStart    =    jBlock    *    BLOCK_SIZE;    final    intqEnd    =    FastMath.min(qStart    +    BLOCK_SIZE,    rows);    int    k    =    0;    for    (int    p    =    pStart;    p    <    pEnd;    ++p)    {    [CLASS]    	math_50253_BlockFieldMatrix_1_1	1229	1	src/main/java/org/apache/commons/math3/linear/BlockFieldMatrix.java
669	[PATCH]    for    (int    i    =    0;    i    <    array.length;    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    1;    i    <    array.length;    i++)    {    [FE]    junit.framework.AssertionFailedError    testToPrimitive_boolean_boolean    [CONTEXT]    public    static    boolean[]    toPrimitive(final    Boolean[]    array,    final    boolean    valueForNull)    {    if    (array    ==    null)    {    return    null;    }    else    if    (array.length    ==    0)    {    return    EMPTY_BOOLEAN_ARRAY;    }    final    boolean[]    result    =    new    boolean[array.length];    [BUGGY]    for    (int    i    =    1;    i    <    array.length;    i++)    {    [BUGGY]    final    Boolean    b    =    array[i];    result[i]    =    (b    ==    null    ?    valueForNull    :    b.booleanValue());    }    return    result;    }    [CLASS]        ArrayUtils    [METHOD]    toPrimitive    [RETURN_TYPE]    boolean[]        Boolean[]    array    final    boolean    valueForNull    [VARIABLES]    Class[]    EMPTY_CLASS_ARRAY    long[]    EMPTY_LONG_ARRAY    array    array1    array2    result    subarray    short[]    EMPTY_SHORT_ARRAY    array    array1    array2    result    subarray    Character[]    EMPTY_CHARACTER_OBJECT_ARRAY    array    result    Boolean[]    EMPTY_BOOLEAN_OBJECT_ARRAY    array    int[]    EMPTY_INT_ARRAY    array    array1    array2    result    subarray    String[]    EMPTY_STRING_ARRAY    array    Integer[]    EMPTY_INTEGER_OBJECT_ARRAY    array    result    int    INDEX_NOT_FOUND    endIndexExclusive    i    j    newSize    startIndex    startIndexInclusive    tmp    valueForNull    valueToFind    float[]    EMPTY_FLOAT_ARRAY    array    array1    array2    result    subarray    char[]    EMPTY_CHAR_ARRAY    array    array1    array2    result    subarray    Short[]    EMPTY_SHORT_OBJECT_ARRAY    array    result    byte[]    EMPTY_BYTE_ARRAY    array    array1    array2    result    subarray    Double[]    EMPTY_DOUBLE_OBJECT_ARRAY    array    result    boolean    valueForNull    double[]    EMPTY_DOUBLE_ARRAY    array    array1    array2    result    subarray    Byte[]    EMPTY_BYTE_OBJECT_ARRAY    array    result    Float[]    EMPTY_FLOAT_OBJECT_ARRAY    array    result    boolean[]    EMPTY_BOOLEAN_ARRAY    array    array1    array2    result    subarray    Boolean    b    Object[]    EMPTY_OBJECT_ARRAY    array    array1    array2    entry    Long[]    EMPTY_LONG_OBJECT_ARRAY    array    result        	lang_2596_ArrayUtils_1_1	3196	1	src/main/java/org/apache/commons/lang3/ArrayUtils.java
670	[PATCH]    if    (c    >=    0x80)    {	[BUG]    [BUGGY]    if    (c    >=    0)    {    [FE]    junit.framework.AssertionFailedError:    expected:<30>    but    was:<32>    testSimple    [CONTEXT]    if    (maxInCount    >    maxOutCount)    {    maxInCount    =    maxOutCount;    }    maxInCount    +=    off;    ascii_loop:    while    (true)    {    if    (off    >=    maxInCount)    {    continue    output_loop;    }    c    =    str.charAt(off++);    [BUGGY]    if    (c    >=    0)    {    [BUGGY]    break    ascii_loop;    }    outBuf[outPtr++]    =    (byte)    c;    }    }        if    (c    <    0x800)    {    outBuf[outPtr++]    =    (byte)    (0xc0    |    (c    >>    6));    outBuf[outPtr++]    =    (byte)    (0x80    |    (c    &    0x3f));    [CLASS]        UTF8Writer    [METHOD]    write    [RETURN_TYPE]    void        String    str    int    off    int    len    [VARIABLES]    byte[]    _outBuffer    buf    outBuf    boolean    OutputStream    _out    out    char    second    IOContext    _context    ctxt    String    str    int    SURR1_FIRST    SURR1_LAST    SURR2_FIRST    SURR2_LAST    _outBufferEnd    _outPtr    _surrogate    c    code    len    maxInCount    maxOutCount    off    outBufLast    outPtr    ptr        	jacksoncore_6746_UTF8Writer_1_1	304	1	src/main/java/com/fasterxml/jackson/core/io/UTF8Writer.java
671	[PATCH]    hourOfDay,    minuteOfHour,    secondOfMinute,    0,    zone);	[BUG]    [BUGGY]    hourOfDay,    minuteOfHour,    secondOfMinute,    -1,    zone);    [FE]    org.joda.time.IllegalFieldValueException:    Value    -1    for    millisOfSecond    must    be    in    the    range    [0,999]    testConstructor_int_int_int_int_int_int_nullDateTimeZone    [CONTEXT]    public    DateTime(    int    year,    int    monthOfYear,    int    dayOfMonth,    int    hourOfDay,    int    minuteOfHour,    int    secondOfMinute,    DateTimeZone    zone)    {    super(year,    monthOfYear,    dayOfMonth,    [BUGGY]    hourOfDay,    minuteOfHour,    secondOfMinute,    -1,    zone);    [BUGGY]    }    [CLASS]        DateTime    Property    [METHOD]    <init>    [RETURN_TYPE]    DateTimeZone)        int    year    int    monthOfYear    int    dayOfMonth    int    hourOfDay    int    minuteOfHour    int    secondOfMinute    DateTimeZone    zone    [VARIABLES]    DateTimeField    iField    boolean    long    instant    serialVersionUID    DateTime    iInstant    int    dayOfMonth    hourOfDay    minuteOfHour    monthOfYear    secondOfMinute    year    DateTimeZone    zone        	time_1455_DateTime_1_1	408	1	src/main/java/org/joda/time/DateTime.java
672	[PATCH]    int    numDiscarded    =    0;	[BUG]    [BUGGY]    int    numDiscarded    =    1;    [FE]    junit.framework.AssertionFailedError    testIsValid    [CONTEXT]    private    int    copySafeNodes(Element    source,    Element    dest)    {    List<Node>    sourceChildren    =    source.childNodes();    [BUGGY]    int    numDiscarded    =    1;    [BUGGY]    for    (Node    sourceChild    :    sourceChildren)    {    if    (sourceChild    instanceof    Element)    {    Element    sourceEl    =    (Element)    sourceChild;    if    (whitelist.isSafeTag(sourceEl.tagName()))    {    ElementMeta    meta    =    createSafeElement(sourceEl);    Element    destChild    =    meta.el;    dest.appendChild(destChild);        [CLASS]        Cleaner    ElementMeta    [METHOD]    copySafeNodes    [RETURN_TYPE]    int        Element    source    Element    dest    [VARIABLES]    ElementMeta    meta    boolean    Element    dest    destChild    el    source    sourceEl    Node    sourceChild    Whitelist    whitelist    List    sourceChildren    TextNode    destText    sourceText    int    numAttribsDiscarded    numDiscarded        	jsoup_1386_Cleaner_1_1	74	1	src/main/java/org/jsoup/safety/Cleaner.java
673	[PATCH]    if    ((txt    ==    null)    ||    (txt.length()    ==    0))    {	[BUG]    [BUGGY]    if    ((txt    ==    null)    ||    (txt.length()    ==    1))    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    0    testEncodeEmpty    [CONTEXT]    public    String    metaphone(String    txt)    {    boolean    hard    =    false    ;    [BUGGY]    if    ((txt    ==    null)    ||    (txt.length()    ==    1))    {    [BUGGY]    return       "   "    ;    }        if    (txt.length()    ==    1)    {    return    txt.toUpperCase(java.util.Locale.ENGLISH)    ;    }    char[]    inwd    =    txt.toUpperCase(java.util.Locale.ENGLISH).toCharArray()    ;    StringBuffer    local    =    new    StringBuffer(40);        [CLASS]        Metaphone    [METHOD]    metaphone    [RETURN_TYPE]    String        String    txt    [VARIABLES]    char    symb    StringBuffer    code    local    String    FRONTV    VARSON    VOWELS    txt    boolean    hard    int    maxCodeLen    n    wdsz    char[]    inwd        	codec_3363_Metaphone_1_1	83	1	src/java/org/apache/commons/codec/language/Metaphone.java
674	[PATCH]    List<Character>    chars    =    queue.subList(0,    len);	[BUG]    [BUGGY]    List<Character>    chars    =    queue.subList(-1,    len);    [FE]    java.lang.IndexOutOfBoundsException:    fromIndex    =    -1    testYahooJp    [CONTEXT]    public    boolean    matches(String    seq)    {    int    len    =    seq.length();    if    (len    >    queue.size())    return    false;    [BUGGY]    List<Character>    chars    =    queue.subList(-1,    len);    [BUGGY]    char[]    seqChars    =    seq.toCharArray();    for    (int    i    =    0;    i    <    len;    i++)    {    Character    found    =    Character.toLowerCase(chars.get(i));    Character    check    =    Character.toLowerCase(seqChars[i]);    if    (!found.equals(check))    return    false;    }    return    true;    }    [CLASS]        TokenQueue    [METHOD]    matches    [RETURN_TYPE]    boolean        String    seq    [VARIABLES]    boolean    Character    check    found    List    chars    String    seq    LinkedList    queue    int    i    len    char[]    seqChars        	jsoup_1295_TokenQueue_1_1	74	1	src/main/java/org/jsoup/parser/TokenQueue.java
675	[PATCH]    sGradient[0]    *    jacobian[0][0]    +    sGradient[1]    *    jacobian[1][0]    +    sGradient[2]    *    jacobian[2][0],	[BUG]    [BUGGY]    sGradient[0]    *    jacobian[0][0]    +    sGradient[1]    *    jacobian[1][0]    +    sGradient[2]    *    jacobian[0][0],    [FE]    junit.framework.AssertionFailedError:    expected:<0.0>    but    was:<0.9008958962137328>    testGradient    [CONTEXT]    public    double[]    toCartesianGradient(final    double[]    sGradient)    {        computeJacobian();            return    new    double[]    {    [BUGGY]    sGradient[0]    *    jacobian[0][0]    +    sGradient[1]    *    jacobian[1][0]    +    sGradient[2]    *    jacobian[0][0],    [BUGGY]    sGradient[0]    *    jacobian[0][1]    +    sGradient[1]    *    jacobian[1][1]    +    sGradient[2]    *    jacobian[2][1],    sGradient[0]    *    jacobian[0][2]    +    sGradient[2]    *    jacobian[2][2]    };    }    [CLASS]        SphericalCoordinates    DataTransferObject    [METHOD]    toCartesianGradient    [RETURN_TYPE]    double[]        final    double[]    sGradient    [VARIABLES]    double[][]    jacobian    phiHessian    rHessian    thetaHessian    boolean    double[]    sGradient    Vector3D    v    double    cosPhi    cosTheta    phi    r    sinPhi    sinTheta    theta    x    y    z    long    serialVersionUID        	math_42512_SphericalCoordinates_1_1	170	1	src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SphericalCoordinates.java
676	[PATCH]    JavaType    idType    =    provider.getTypeFactory().findTypeParameters(type,    ObjectIdGenerator.class)[0];	[BUG]    [BUGGY]    JavaType    idType    =    provider.getTypeFactory().findTypeParameters(type,    ObjectIdGenerator.class)[-1];    [FE]    com.fasterxml.jackson.databind.JsonMappingException:    -1    (through    reference    chain:    com.fasterxml.jackson.databind.struct.IdWrapperCustom[   "node   "])    testCustomPropertyViaProperty    [CONTEXT]                        objectIdInfo    =    intr.findObjectReferenceInfo(accessor,    objectIdInfo);    ObjectIdGenerator<?>    gen;    Class<?>    implClass    =    objectIdInfo.getGeneratorType();    JavaType    type    =    provider.constructType(implClass);    [BUGGY]    JavaType    idType    =    provider.getTypeFactory().findTypeParameters(type,    ObjectIdGenerator.class)[-1];    [BUGGY]        if    (implClass    ==    ObjectIdGenerators.PropertyGenerator.class)    {    String    propName    =    objectIdInfo.getPropertyName();    BeanPropertyWriter    idProp    =    null;    for    (int    i    =    0,    len    =    _props.length    ;;    ++i)    {    if    (i    ==    len)    {    throw    new    IllegalArgumentException(   "Invalid    Object    Id    definition    for       "+_handledType.getName()    +   ":    can    not    find    property    with    name    '   "+propName+   "'   ");    }    [CLASS]        BeanSerializerBase    [METHOD]    createContextual    [RETURN_TYPE]    JsonSerializer        SerializerProvider    provider    BeanProperty    property    [VARIABLES]    ObjectIdGenerator    gen    Shape    _serializationShape    shape    BeanSerializerBase    contextual    AnnotatedMember    _typeId    accessor    AnnotationIntrospector    intr    String[]    ignorals    String    propName    JsonSerializer    ser    ObjectIdInfo    objectIdInfo    BeanPropertyWriter[]    NO_PROPS    _filteredProps    _props    filteredProperties    fpropsIn    properties    props    propsIn    result    AnyGetterWriter    _anyGetterWriter    int    i    len    BeanProperty    property    JavaType    idType    type    ObjectIdWriter    _objectIdWriter    objectIdWriter    oiw    boolean    Value    format    Object    _propertyFilterId    convDef    Class    implClass    SerializerProvider    provider    BeanPropertyWriter    fp    idProp    prop        	jacksondatabind_4175_BeanSerializerBase_1_1	386	1	src/main/java/com/fasterxml/jackson/databind/ser/std/BeanSerializerBase.java
677	[PATCH]    base[length[i]    +    1]++;	[BUG]    [BUGGY]    base[length[i]    +    -1]++;    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -3    testBzip2Unarchive    [CONTEXT]    }    }    }    for    (int    i    =    MAX_CODE_LEN;    --i    >    0;)    {    base[i]    =    0;    limit[i]    =    0;    }    for    (int    i    =    0;    i    <    alphaSize;    i++)    {    [BUGGY]    base[length[i]    +    -1]++;    [BUGGY]    }    for    (int    i    =    1,    b    =    base[0];    i    <    MAX_CODE_LEN;    i++)    {    b    +=    base[i];    base[i]    =    b;    }    for    (int    i    =    minLen,    vec    =    0,    b    =    base[i];    i    <=    maxLen;    i++)    {    final    int    nb    =    base[i    +    1];    vec    +=    nb    -    b;    [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    hbCreateDecodeTables    [RETURN_TYPE]    void        final    int[]    limit    final    int[]    base    final    int[]    perm    final    char[]    length    final    int    minLen    final    int    maxLen    final    int    alphaSize    [VARIABLES]    int[][]    base    limit    perm    InputStream    in    inShadow    char[][]    temp_charArray2d    Data    data    int[]    base    cftab    limit    minLens    perm    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    alphaSize    b    blockSize    blockSize100k    bsBuff    bsBuffShadow    bsLive    bsLiveShadow    computedBlockCRC    computedCombinedCRC    currentChar    currentState    destOffs    hi    i    j    last    len    magic    maxLen    minLen    n    nInUse    nInUseShadow    nb    offs    origPtr    pp    retChar    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    thech    vec    char[]    getAndMoveToFrontDecode_yy    length    byte[]    dest    ll8    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    expected    magic0    magic1    magic2    magic3    magic4    magic5    su_z    boolean[]    inUse        	compress_5509_BZip2CompressorInputStream_1_1	405	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
678	[PATCH]    for    (int    i    =    0;    i    <    len;    i++)    {	[BUG]    [BUGGY]    for    (int    i    =    1;    i    <    len;    i++)    {    [FE]    java.lang.IllegalStateException:    Unknown    combinator:    h    testYahooJp    [CONTEXT]    public    boolean    matches(String    seq)    {    int    len    =    seq.length();    if    (len    >    queue.size())    return    false;    List<Character>    chars    =    queue.subList(0,    len);    char[]    seqChars    =    seq.toCharArray();    [BUGGY]    for    (int    i    =    1;    i    <    len;    i++)    {    [BUGGY]    Character    found    =    Character.toLowerCase(chars.get(i));    Character    check    =    Character.toLowerCase(seqChars[i]);    if    (!found.equals(check))    return    false;    }    return    true;    }    [CLASS]        TokenQueue    [METHOD]    matches    [RETURN_TYPE]    boolean        String    seq    [VARIABLES]    boolean    Character    check    found    List    chars    String    seq    LinkedList    queue    int    i    len    char[]    seqChars        	jsoup_1296_TokenQueue_1_1	76	1	src/main/java/org/jsoup/parser/TokenQueue.java
679	[PATCH]    AccessibleObject.setAccessible(declaredConstructors,    true);	[BUG]    [BUGGY]    AccessibleObject.setAccessible(declaredConstructors,    false);    [FE]    java.lang.RuntimeException:    Unable    to    invoke    no-args    constructor    for    class    com.google.gson.functional.CircularReferenceTest$ContainsReferenceToSelfType.    Register    an    InstanceCreator    with    Gson    for    this    type    may    fix    this    problem.    testDirectedAcyclicGraphDeserialization    [CONTEXT]    private    <T>    Constructor<T>    getNoArgsConstructor(Type    typeOfT)    {    TypeInfo    typeInfo    =    new    TypeInfo(typeOfT);    Class<T>    clazz    =    (Class<T>)    typeInfo.getRawClass();    Constructor<T>[]    declaredConstructors    =    (Constructor<T>[])    clazz.getDeclaredConstructors();    [BUGGY]    AccessibleObject.setAccessible(declaredConstructors,    false);    [BUGGY]    for    (Constructor<T>    constructor    :    declaredConstructors)    {    if    (constructor.getParameterTypes().length    ==    0)    {    return    constructor;    }    }    return    null;    }    [CLASS]        MappedObjectConstructor    [METHOD]    getNoArgsConstructor    [RETURN_TYPE]    <T>        Type    typeOfT    [VARIABLES]    Type    typeOfT    boolean    Constructor    constructor    Constructor[]    declaredConstructors    Class    clazz    Logger    log    ParameterizedTypeHandlerMap    instanceCreatorMap    instanceCreators    TypeInfo    typeInfo        	gson_838_MappedObjectConstructor_1_1	85	1	gson/src/main/java/com/google/gson/MappedObjectConstructor.java
680	[PATCH]    int    i    =    0;	[BUG]    [BUGGY]    int    i    =    1;    [FE]    junit.framework.AssertionFailedError:    expected:<0>    but    was:<1>    testIndexOf    [CONTEXT]    public    int    indexOf(final    Object    value)    {    [BUGGY]    int    i    =    1;    [BUGGY]    for    (Node<E>    node    =    header.next;    node    !=    header;    node    =    node.next)    {    if    (isEqualValue(node.getValue(),    value))    {    return    i;    }    i++;    }    return    -1;    }    [CLASS]        AbstractLinkedList    Node    LinkedListIterator    LinkedSubListIterator    LinkedSubList    [METHOD]    indexOf    [RETURN_TYPE]    int        Object    value    [VARIABLES]    LinkedSubList    sub    AbstractLinkedList    parent    boolean    E    value    Node    current    header    next    node    previous    Object    value    int    expectedModCount    fromIndex    i    index    modCount    nextIndex    offset    size    startIndex    toIndex        	collections_4634_AbstractLinkedList_1_1	133	1	src/main/java/org/apache/commons/collections4/list/AbstractLinkedList.java
681	[PATCH]    printHelp(defaultWidth,    cmdLineSyntax,    null,    options,    null,    false);	[BUG]    [BUGGY]    printHelp(defaultWidth,    cmdLineSyntax,    null,    options,    null,    true);    [FE]    junit.framework.ComparisonFailure:    expected:<usage:    dir[]    test13666    [CONTEXT]    public    void    printHelp(String    cmdLineSyntax,    Options    options)    {    [BUGGY]    printHelp(defaultWidth,    cmdLineSyntax,    null,    options,    null,    true);    [BUGGY]    }    [CLASS]        HelpFormatter    OptionComparator    [METHOD]    printHelp    [RETURN_TYPE]    void        String    cmdLineSyntax    Options    options    [VARIABLES]    Options    options    String    DEFAULT_ARG_NAME    DEFAULT_LONG_OPT_PREFIX    DEFAULT_OPT_PREFIX    DEFAULT_SYNTAX_PREFIX    cmdLineSyntax    defaultArgName    defaultLongOptPrefix    defaultNewLine    defaultOptPrefix    defaultSyntaxPrefix    name    newline    prefix    boolean    int    DEFAULT_DESC_PAD    DEFAULT_LEFT_PAD    DEFAULT_WIDTH    defaultDescPad    defaultLeftPad    defaultWidth    padding    width        	cli_441_HelpFormatter_1_1	256	1	src/java/org/apache/commons/cli/HelpFormatter.java
682	[PATCH]    if    (jj_3R_156())    return    true;	[BUG]    [BUGGY]    if    (jj_3R_156())    return    false;    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    'my:function(3,    other.function())'.    Syntax    error    after:    'my:f'    testExtensionFunction    [CONTEXT]    return    false;    }    final    private    boolean    jj_3R_115()    {    if    (jj_3R_123())    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_134()    {    [BUGGY]    if    (jj_3R_156())    return    false;    [BUGGY]    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    Token    xsp;    while    (true)    {    xsp    =    jj_scanpos;    if    (jj_3R_157())    {    jj_scanpos    =    xsp;    break;    }    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    }    return    false;    }        [CLASS]    	jxpath_4887_XPathParser_1_1	2775	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java
683	[PATCH]    return    true;	[BUG]    [BUGGY]    return    false;    [FE]    junit.framework.AssertionFailedError:    expected:<[Yahoo!    JAPAN]>    but    was:<[]>    testYahooJp    [CONTEXT]    if    (len    >    queue.size())    return    false;    List<Character>    chars    =    queue.subList(0,    len);    char[]    seqChars    =    seq.toCharArray();    for    (int    i    =    0;    i    <    len;    i++)    {    Character    found    =    Character.toLowerCase(chars.get(i));    Character    check    =    Character.toLowerCase(seqChars[i]);    if    (!found.equals(check))    return    false;    }    [BUGGY]    return    false;    [BUGGY]    }    [CLASS]        TokenQueue    [METHOD]    matches    [RETURN_TYPE]    boolean        String    seq    [VARIABLES]    boolean    Character    check    found    List    chars    String    seq    LinkedList    queue    int    i    len    char[]    seqChars        	jsoup_1304_TokenQueue_1_1	82	1	src/main/java/org/jsoup/parser/TokenQueue.java
684	[PATCH]    for    (int    i    =    nodes.size()    -    1;    i    >=    0;    i--)    {	[BUG]    [BUGGY]    for    (int    i    =    nodes.size()    -    -1;    i    >=    0;    i--)    {    [FE]    java.lang.IndexOutOfBoundsException:    Index:    3,    Size:    2    testPrependNewHtml    [CONTEXT]    public    Element    prepend(String    html)    {    Validate.notNull(html);    Element    fragment    =    Parser.parseBodyFragment(html,    baseUri).body();        List<Node>    nodes    =    fragment.childNodes();    [BUGGY]    for    (int    i    =    nodes.size()    -    -1;    i    >=    0;    i--)    {    [BUGGY]    Node    node    =    nodes.get(i);    node.parentNode    =    null;    prependChild(node);    }    return    this;    }    [CLASS]        Element    [METHOD]    prepend    [RETURN_TYPE]    Element        String    html    [VARIABLES]    Set    classNames    boolean    Element    fragment    Node    node    List    nodes    Tag    tag    String    html    int    i        	jsoup_86_Element_1_1	273	1	src/main/java/org/jsoup/nodes/Element.java
685	[PATCH]    int    i    =    j    -    1;	[BUG]    [BUGGY]    int    i    =    j    -    0;    [FE]    org.apache.commons.math3.exception.ConvergenceException:    illegal    state:    unable    to    perform    Q.R    decomposition    on    the    100x3    jacobian    matrix    testUnsorted    [CONTEXT]                WeightedObservedPoint    curr    =    observations[0];    for    (int    j    =    1;    j    <    observations.length;    ++j)    {    WeightedObservedPoint    prec    =    curr;    curr    =    observations[j];    if    (curr.getX()    <    prec.getX())    {        [BUGGY]    int    i    =    j    -    0;    [BUGGY]    WeightedObservedPoint    mI    =    observations[i];    while    ((i    >=    0)    &&    (curr.getX()    <    mI.getX()))    {    observations[i    +    1]    =    mI;    if    (i--    !=    0)    {    mI    =    observations[i];    }    }    observations[i    +    1]    =    curr;    curr    =    observations[j];    }    [CLASS]        HarmonicFitter    ParameterGuesser    [METHOD]    sortObservations    [RETURN_TYPE]    WeightedObservedPoint[]        WeightedObservedPoint[]    unsorted    [VARIABLES]    boolean    WeightedObservedPoint[]    observations    unsorted    double    a    omega    phi    WeightedObservedPoint    curr    mI    prec    int    i    j        	math_31622_HarmonicFitter_1_1	242	1	src/main/java/org/apache/commons/math3/fitting/HarmonicFitter.java
686	[PATCH]    return    false;	[BUG]    [BUGGY]    return    true;    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    'string-length(\'a\')'.    Syntax    error    after:    's'    testCoreFunction    [CONTEXT]    }    else    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    }    else    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    }    else    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    }    else    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_76()    {    if    (jj_scan_token(FUNCTION_STRING_LENGTH))    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    [BUGGY]    return    true;    [BUGGY]    }    final    private    boolean    jj_3R_75()    {    if    (jj_scan_token(FUNCTION_SUBSTRING))    return    true;    if    (jj_la    ==    0    &&    jj_scanpos    ==    jj_lastpos)    return    false;    return    false;    }    final    private    boolean    jj_3R_74()    {    if    (jj_scan_token(FUNCTION_SUBSTRING_AFTER))    return    true;    [CLASS]    	jxpath_6889_XPathParser_1_1	3445	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParser.java
687	[PATCH]    return    jjMoveNfa_0(0,    0);	[BUG]    [BUGGY]    return    jjMoveNfa_0(-1,    0);    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    '2    div    4'.    Invalid    symbol    '2'    at    the    beginning    of    the    expression    testCoreOperationDivide    [CONTEXT]    return    jjMoveStringLiteralDfa1_0(0x2422400000000L,    0x0L);    case    114:    return    jjMoveStringLiteralDfa1_0(0x0L,    0x1000L);    case    115:    return    jjMoveStringLiteralDfa1_0(0xf500000800000000L,    0x200L);    case    116:    return    jjMoveStringLiteralDfa1_0(0x100000000L,    0x12L);    case    124:    return    jjStopAtPos(0,    8);    default    :    [BUGGY]    return    jjMoveNfa_0(-1,    0);    [BUGGY]    }    }    [CLASS]        XPathParserTokenManager    [METHOD]    jjMoveStringLiteralDfa0_0    [RETURN_TYPE]    int        [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    kind    lexState    pos    state        	jxpath_9259_XPathParserTokenManager_1_1	477	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
688	[PATCH]    for    (int    i    =    0;    i    <    order;    ++i)    {	[BUG]    [BUGGY]    for    (int    i    =    -1;    i    <    order;    ++i)    {    [FE]    java.lang.ArrayIndexOutOfBoundsException:    -1    testToDifferentiableMultivariateFunction    [CONTEXT]    private    static    int[][]    compileSizes(final    int    parameters,    final    int    order,    final    DSCompiler    valueCompiler)    {    final    int[][]    sizes    =    new    int[parameters    +    1][order    +    1];    if    (parameters    ==    0)    {    Arrays.fill(sizes[0],    1);    }    else    {    System.arraycopy(valueCompiler.sizes,    0,    sizes,    0,    parameters);    sizes[parameters][0]    =    1;    [BUGGY]    for    (int    i    =    -1;    i    <    order;    ++i)    {    [BUGGY]    sizes[parameters][i    +    1]    =    sizes[parameters][i]    +    sizes[parameters    -    1][i    +    1];    }    }    return    sizes;    }    [CLASS]        DSCompiler    [METHOD]    compileSizes    [RETURN_TYPE]    int[][]        final    int    parameters    final    int    order    DSCompiler    valueCompiler    [VARIABLES]    int[][][]    compIndirection    multIndirection    int[][]    derivativesIndirection    sizes    boolean    AtomicReference    compilers    int[]    lowerIndirection    int    diag    i    maxOrder    maxParameters    o    order    p    parameters    DSCompiler    valueCompiler        	math_1200_DSCompiler_1_1	248	1	src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
689	[PATCH]    units.add(new    DateTickUnit(DateTickUnitType.MINUTE,    30,	[BUG]    [BUGGY]    units.add(new    DateTickUnit(DateTickUnitType.MINUTE,    0,    [FE]    java.lang.IllegalArgumentException:    Requires    'multiple'    >    0.    testSetMaximumDate    [CONTEXT]    units.add(new    DateTickUnit(DateTickUnitType.MINUTE,    2,    DateTickUnitType.SECOND,    10,    f3));    units.add(new    DateTickUnit(DateTickUnitType.MINUTE,    5,    DateTickUnitType.MINUTE,    1,    f3));    units.add(new    DateTickUnit(DateTickUnitType.MINUTE,    10,    DateTickUnitType.MINUTE,    1,    f3));    units.add(new    DateTickUnit(DateTickUnitType.MINUTE,    15,    DateTickUnitType.MINUTE,    5,    f3));    units.add(new    DateTickUnit(DateTickUnitType.MINUTE,    20,    DateTickUnitType.MINUTE,    5,    f3));    [BUGGY]    units.add(new    DateTickUnit(DateTickUnitType.MINUTE,    0,    [BUGGY]    DateTickUnitType.MINUTE,    5,    f3));        units.add(new    DateTickUnit(DateTickUnitType.HOUR,    1,    DateTickUnitType.MINUTE,    5,    f3));    units.add(new    DateTickUnit(DateTickUnitType.HOUR,    2,    DateTickUnitType.MINUTE,    10,    f3));    units.add(new    DateTickUnit(DateTickUnitType.HOUR,    4,    DateTickUnitType.MINUTE,    30,    f3));    units.add(new    DateTickUnit(DateTickUnitType.HOUR,    6,    [CLASS]        DateAxis    DefaultTimeline    [METHOD]    createStandardDateTickUnits    [RETURN_TYPE]    TickUnitSource        TimeZone    zone    Locale    locale    [VARIABLES]    DateTickMarkPosition    position    tickMarkPosition    Locale    locale    DateRange    DEFAULT_DATE_RANGE    r    range    Timeline    DEFAULT_TIMELINE    timeline    TimeZone    timeZone    zone    TickUnits    units    boolean    DateTickUnit    DEFAULT_DATE_TICK_UNIT    tickUnit    unit    double    DEFAULT_AUTO_RANGE_MINIMUM_SIZE_IN_MILLISECONDS    axisMax    axisMin    java2DValue    lower    max    maxX    maxY    min    minX    minY    result    upper    value    DateFormat    dateFormatOverride    f1    f2    f3    f4    f5    f6    f7    formatter    long    from    length    maxMillis    millis    millisecond    minMillis    newMaxMillis    newMinMillis    serialVersionUID    to    value    Date    DEFAULT_ANCHOR_DATE    d0    d1    d2    d3    date    dd    from    lower    maxDate    maximumDate    minDate    mm    oldMax    oldMin    previous    result    standardDate    to    upper        	chart_30439_DateAxis_1_1	1215	1	source/org/jfree/chart/axis/DateAxis.java
690	[PATCH]    year    =    ((year    <<    3)    +    (year    <<    1))    +    c    -    '0';	[BUG]    [BUGGY]    year    =    ((year    <<    3)    +    (year    <<    -1))    +    c    -    '0';    [FE]    org.joda.time.IllegalFieldValueException:    Cannot    parse       "25.12.15   ":    Value    -2147481535    for    year    must    be    in    the    range    [-292275054,292278993]    testParse_pivotYear    [CONTEXT]    int    year;    char    c    =    text.charAt(position);    if    (c    <    '0'    ||    c    >    '9')    {    return    ~position;    }    year    =    c    -    '0';    c    =    text.charAt(position    +    1);    if    (c    <    '0'    ||    c    >    '9')    {    return    ~position;    }    [BUGGY]    year    =    ((year    <<    3)    +    (year    <<    -1))    +    c    -    '0';    [BUGGY]    int    pivot    =    iPivot;        if    (bucket.getPivotYear()    !=    null)    {    pivot    =    bucket.getPivotYear().intValue();    }    int    low    =    pivot    -    50;    int    t;    [CLASS]        DateTimeFormatterBuilder    CharacterLiteral    StringLiteral    NumberFormatter    UnpaddedNumber    PaddedNumber    FixedNumber    TwoDigitYear    TextField    Fraction    TimeZoneOffset    TimeZoneName    TimeZoneId    Composite    MatchingParser    [METHOD]    parseInto    [RETURN_TYPE]    int        DateTimeParserBucket    bucket    String    text    int    position    [VARIABLES]    DateTimePrinter[]    iPrinters    Set    ALL_IDS    DateTimeParserBucket    bucket    ArrayList    iElementPairs    DateTimeParser[]    copyOfParsers    iParsers    parsers    String    iValue    iZeroOffsetParseText    iZeroOffsetPrintText    pattern    text    value    zeroOffsetParseText    zeroOffsetPrintText    zeroOffsetText    int    LONG_NAME    MAX_LENGTH    SHORT_NAME    displayOffset    est    expectedPos    i    iMaxDigits    iMaxFields    iMaxParsedDigits    iMinDigits    iMinFields    iMinPrintedDigits    iParsedLengthEstimate    iPivot    iPrintedLengthEstimate    iType    len    length    limit    low    maxDigits    maxFields    maxParsedDigits    minDigits    minFields    minPrintedDigits    newPos    numDigits    parseEst    pivot    position    printEst    size    t    type    value    year    boolean    hasSignChar    iLenientParse    iShort    iShowSeparators    iSigned    isShort    lenientParse    negative    showSeparators    signed    TimeZoneId    INSTANCE    char    a    b    c    iValue    value    DateTimeFieldType    fieldType    iFieldType    iType    type    StringIndexOutOfBoundsException    e    Object    element    f    iFormatter    parser    printer    Map    cParseCache    iParseLookup    parseLookup        	time_14069_DateTimeFormatterBuilder_1_1	1647	1	src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java
691	[PATCH]    jjmatchedPos    =    2;	[BUG]    [BUGGY]    jjmatchedPos    =    -2;    [FE]    org.apache.commons.jxpath.JXPathInvalidSyntaxException:    Invalid    XPath:    'vendor/x:pos//number'.    Syntax    error    after:    'vendor/x:p'    testAxisChild    [CONTEXT]    if    ((active0    &    0xffe7ffff80000000L)    !=    0L    ||    (active1    &    0x3df7L)    !=    0L)    {    jjmatchedKind    =    78;    [BUGGY]    jjmatchedPos    =    -2;    [BUGGY]    return    12;    }    [CLASS]        XPathParserTokenManager    [METHOD]    jjStopStringLiteralDfa_0    [RETURN_TYPE]    int        int    pos    long    active0    long    active1    [VARIABLES]    PrintStream    debugStream    ds    boolean    long[]    jjbitVec0    jjbitVec10    jjbitVec11    jjbitVec12    jjbitVec13    jjbitVec14    jjbitVec15    jjbitVec16    jjbitVec17    jjbitVec18    jjbitVec19    jjbitVec2    jjbitVec20    jjbitVec21    jjbitVec22    jjbitVec23    jjbitVec24    jjbitVec25    jjbitVec26    jjbitVec27    jjbitVec28    jjbitVec29    jjbitVec3    jjbitVec30    jjbitVec31    jjbitVec32    jjbitVec33    jjbitVec34    jjbitVec35    jjbitVec36    jjbitVec37    jjbitVec38    jjbitVec39    jjbitVec4    jjbitVec40    jjbitVec41    jjbitVec5    jjbitVec6    jjbitVec7    jjbitVec8    jjbitVec9    jjtoSkip    jjtoToken    SimpleCharStream    input_stream    stream    char    curChar    int[]    jjnextStates    jjrounds    jjstateSet    String[]    jjstrLiteralImages    lexStateNames    int    curLexState    defaultLexState    jjmatchedKind    jjmatchedPos    jjnewStateCnt    jjround    lexState    pos    long    active0    active1        	jxpath_7970_XPathParserTokenManager_1_1	39	1	src/java/org/apache/commons/jxpath/ri/parser/XPathParserTokenManager.java
692	[PATCH]    return    new    byte[0];	[BUG]    [BUGGY]    return    new    byte[-1];    [FE]    java.lang.NegativeArraySizeException    testDecodePadOnlyChunked    [CONTEXT]        int    encodedIndex    =    0;    int    dataIndex    =    0;    {        int    lastData    =    base64Data.length;        while    (base64Data[lastData    -    1]    ==    PAD)    {    if    (--lastData    ==    0)    {    [BUGGY]    return    new    byte[-1];    [BUGGY]    }    }    decodedData    =    new    byte[lastData    -    numberQuadruple];    }    for    (int    i    =    0;    i    <    numberQuadruple;    i++)    {    dataIndex    =    i    *    4;    marker0    =    base64Data[dataIndex    +    2];    marker1    =    base64Data[dataIndex    +    3];        [CLASS]        Base64    [METHOD]    decodeBase64    [RETURN_TYPE]    byte[]        byte[]    base64Data    [VARIABLES]    byte[]    CHUNK_SEPARATOR    arrayOctect    base64Alphabet    base64Data    binaryData    decodedData    encodedData    lookUpBase64Alphabet    pArray    boolean    byte    PAD    b1    b2    b3    b4    k    l    marker0    marker1    octect    val1    val2    val3    int    BASELENGTH    CHUNK_SIZE    EIGHTBIT    FOURBYTE    LOOKUPLENGTH    SIGN    SIXTEENBIT    TWENTYFOURBITGROUP    chunckCount    chunksSoFar    dataIndex    encodedDataLength    encodedIndex    i    lastData    length    nextSeparatorIndex    numberQuadruple        	codec_594_Base64_1_1	415	1	src/java/org/apache/commons/codec/binary/Base64.java
693	[PATCH]    return    getSymbol()    +    parenthesize(args[0],    false);	[BUG]    [BUGGY]    return    getSymbol()    +    parenthesize(args[1],    false);    [FE]    java.lang.ArrayIndexOutOfBoundsException:    1    testCoreOperationDivide    [CONTEXT]    public    String    toString()    {    if    (args.length    ==    1)    {    [BUGGY]    return    getSymbol()    +    parenthesize(args[1],    false);    [BUGGY]    }    else    {    StringBuffer    buffer    =    new    StringBuffer();    for    (int    i    =    0;    i    <    args.length;    i++)    {    if    (i    >    0)    {    buffer.append('    ');    buffer.append(getSymbol());    buffer.append('    ');    }    buffer.append(parenthesize(args[i],    i    ==    0));    [CLASS]        CoreOperation    [METHOD]    toString    [RETURN_TYPE]    String        [VARIABLES]    StringBuffer    buffer    boolean    int    i        	jxpath_14538_CoreOperation_1_1	58	1	src/java/org/apache/commons/jxpath/ri/compiler/CoreOperation.java
694	[PATCH]    next    =    parent.root.get(nextIndex    -    1);	[BUG]    [BUGGY]    next    =    parent.root.get(nextIndex    -    -1);    [FE]    java.lang.NullPointerException    testBug35258    [CONTEXT]    public    E    previous()    {    checkModCount();    if    (!hasPrevious())    {    throw    new    NoSuchElementException(   "Already    at    start    of    list.   ");    }    if    (next    ==    null)    {    [BUGGY]    next    =    parent.root.get(nextIndex    -    -1);    [BUGGY]    }    else    {    next    =    next.previous();    }    final    E    value    =    next.getValue();    current    =    next;    currentIndex    =    --nextIndex;    return    value;    }    [CLASS]        TreeList    AVLNode    TreeListIterator    [METHOD]    previous    [RETURN_TYPE]    E        [VARIABLES]    AVLNode    cTree    current    left    leftFollower    leftMax    leftPrevious    leftSubTree    maxNode    movedNode    newTop    next    nextNode    node    otherTree    otherTreeMin    prev    previous    ret    right    rightFollower    rightMin    root    s    sAncestor    TreeList    parent    boolean    leftIsPrevious    rightIsNext    E    obj    result    value    int    absolutePositionOfParent    currentIndex    currentSize    end    endIndex    expectedModCount    fromIndex    height    index    indexRelativeToMe    mid    movedPosition    myNewPosition    newOffest    newTopPosition    nextIndex    oldOffset    relativePosition    result    sAbsolutePosition    sParentAbsolutePosition    size    start    startIndex        	collections_5974_TreeList_1_1	1066	1	src/main/java/org/apache/commons/collections4/list/TreeList.java
695	[PATCH]    0);	[BUG]    [BUGGY]    1);    [FE]    junit.framework.AssertionFailedError:    Checking    value:    /vendor/contact/.[@name='jack']    expected:<Jack>    but    was:<John>    testDoPredicatesStandard    [CONTEXT]    Expression    predicates[]    =    step.getPredicates();    int    axis    =    step.getAxis();    if    (axis    ==    Compiler.AXIS_SELF)    {    return    doPredicate(    context,    parent,    steps,    currentStep,    predicates,    [BUGGY]    1);    [BUGGY]    }    Expression    predicate    =    predicates[0];                        if    (predicates.length    ==    1)    {    [CLASS]    	jxpath_13652_SimplePathInterpreter_1_1	362	1	src/java/org/apache/commons/jxpath/ri/axes/SimplePathInterpreter.java
696	[PATCH]    return    (((((bsR(8)    <<    8)    |    bsR(8))    <<    8)    |    bsR(8))    <<    8)    |    bsR(8);	[BUG]    [BUGGY]    return    (((((bsR(8)    <<    8)    |    bsR(-8))    <<    8)    |    bsR(8))    <<    8)    |    bsR(8);    [FE]    org.apache.commons.compress.compressors.CompressorException:    Could    not    create    CompressorInputStream    testBzip2Unarchive    [CONTEXT]    private    int    bsGetInt()    throws    IOException    {    [BUGGY]    return    (((((bsR(8)    <<    8)    |    bsR(-8))    <<    8)    |    bsR(8))    <<    8)    |    bsR(8);    [BUGGY]    }    [CLASS]        BZip2CompressorInputStream    Data    [METHOD]    bsGetInt    [RETURN_TYPE]    int        [VARIABLES]    int[][]    base    limit    perm    InputStream    in    inShadow    char[][]    temp_charArray2d    Data    data    int[]    cftab    minLens    tt    unzftab    int    EOF    NO_RAND_PART_A_STATE    NO_RAND_PART_B_STATE    NO_RAND_PART_C_STATE    RAND_PART_A_STATE    RAND_PART_B_STATE    RAND_PART_C_STATE    START_BLOCK_STATE    b    blockSize    blockSize100k    bsBuff    bsBuffShadow    bsLive    bsLiveShadow    computedBlockCRC    computedCombinedCRC    currentChar    currentState    destOffs    hi    i    last    len    magic    n    nInUse    nInUseShadow    offs    origPtr    retChar    storedBlockCRC    storedCombinedCRC    su_ch2    su_chPrev    su_count    su_i2    su_j2    su_rNToGo    su_rTPos    su_tPos    thech    char[]    getAndMoveToFrontDecode_yy    byte[]    dest    ll8    recvDecodingTables_pos    selector    selectorMtf    seqToUnseq    boolean    blockRandomised    CRC    crc    char    expected    magic0    magic1    magic2    magic3    magic4    magic5    su_z    boolean[]    inUse        	compress_5459_BZip2CompressorInputStream_1_1	382	1	src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java
697	[PATCH]    int    textIndex    =    -1;	[BUG]    [BUGGY]    int    textIndex    =    0;    [FE]    junit.framework.AssertionFailedError:    expected:<com.fasterxml.jackson.dataformat.xml.XmlTestBase$FiveMinuteUser@6d303498>    but    was:<com.fasterxml.jackson.dataformat.xml.XmlTestBase$FiveMinuteUser@6ba7383d>    testRoundTripWithJacksonExample    [CONTEXT]    if    (cdata    ==    null)    {    cdata    =    new    BitSet(len);    }    cdata.set(i);    }    }    _cdata    =    cdata;        _xmlNames    =    new    QName[_props.length];    [BUGGY]    int    textIndex    =    0;    [BUGGY]    for    (int    i    =    0,    len    =    _props.length;    i    <    len;    ++i)    {    BeanPropertyWriter    bpw    =    _props[i];    XmlInfo    info    =    (XmlInfo)    bpw.getInternalSetting(KEY_XML_INFO);    String    ns    =    null;    if    (info    !=    null)    {    ns    =    info.getNamespace();    if    (textIndex    <    0    &&    info.isText())    {    textIndex    =    i;    }    }    [CLASS]        XmlBeanSerializerBase    [METHOD]    <init>    [RETURN_TYPE]    BeanSerializerBase)        BeanSerializerBase    src    [VARIABLES]    QName[]    _xmlNames    boolean    BeanSerializerBase    src    BitSet    _cdata    cdata    String    KEY_XML_INFO    ns    XmlInfo    info    BeanPropertyWriter    bpw    int    _attributeCount    _textPropertyIndex    attrCount    i    len    textIndex        	jacksonxml_1668_XmlBeanSerializerBase_1_1	92	1	src/main/java/com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerBase.java
698	[PATCH]    if    (chars.length    ==    1)    {	[BUG]    [BUGGY]    if    (chars.length    ==    -1)    {    [FE]    junit.framework.AssertionFailedError    testCharSetMatcher_charArray    [CONTEXT]    public    static    StrMatcher    charSetMatcher(final    char...    chars)    {    if    (chars    ==    null    ||    chars.length    ==    0)    {    return    NONE_MATCHER;    }    [BUGGY]    if    (chars.length    ==    -1)    {    [BUGGY]    return    new    CharMatcher(chars[0]);    }    return    new    CharSetMatcher(chars);    }    [CLASS]        StrMatcher    CharSetMatcher    CharMatcher    StringMatcher    NoMatcher    TrimMatcher    [METHOD]    charSetMatcher    [RETURN_TYPE]    StrMatcher        chars    [VARIABLES]    char    ch    boolean    StrMatcher    COMMA_MATCHER    DOUBLE_QUOTE_MATCHER    NONE_MATCHER    QUOTE_MATCHER    SINGLE_QUOTE_MATCHER    SPACE_MATCHER    SPLIT_MATCHER    TAB_MATCHER    TRIM_MATCHER    char[]    chars        	lang_10471_StrMatcher_1_1	177	1	src/main/java/org/apache/commons/lang3/text/StrMatcher.java
699	[PATCH]    writeAsciiLong(entry.getMode(),    8,    16);	[BUG]    [BUGGY]    writeAsciiLong(entry.getMode(),    0,    16);    [FE]    java.lang.NumberFormatException:    For    input    string:       "test1.xm   "    testCpioUnarchive    [CONTEXT]    private    void    writeNewEntry(final    CpioArchiveEntry    entry)    throws    IOException    {    writeAsciiLong(entry.getInode(),    8,    16);    [BUGGY]    writeAsciiLong(entry.getMode(),    0,    16);    [BUGGY]    writeAsciiLong(entry.getUID(),    8,    16);    writeAsciiLong(entry.getGID(),    8,    16);    writeAsciiLong(entry.getNumberOfLinks(),    8,    16);    writeAsciiLong(entry.getTime(),    8,    16);    writeAsciiLong(entry.getSize(),    8,    16);    writeAsciiLong(entry.getDeviceMaj(),    8,    16);    writeAsciiLong(entry.getDeviceMin(),    8,    16);    writeAsciiLong(entry.getRemoteDeviceMaj(),    8,    16);    writeAsciiLong(entry.getRemoteDeviceMin(),    8,    16);    writeAsciiLong(entry.getName().length()    +    1,    8,    16);    [CLASS]        CpioArchiveOutputStream    [METHOD]    writeNewEntry    [RETURN_TYPE]    void        CpioArchiveEntry    entry    [VARIABLES]    boolean    closed    finished    swapHalfWord    HashMap    names    OutputStream    out    short    entryFormat    format    CpioArchiveEntry    cpioEntry    e    entry    long    crc    written        	compress_1018_CpioArchiveOutputStream_1_1	197	1	src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java
