--- /home/jun/research/dlapr/all_mutants/jacksondatabind-1f/mutants/3631/com/fasterxml/jackson/databind/ser/impl/WritableObjectId.java	2022-10-07 00:21:00.000000000 -0500
+++ /home/jun/research/dlapr/all_mutants/jacksondatabind-1f/src/main/java/com/fasterxml/jackson/databind/ser/impl/WritableObjectId.java	2022-10-07 00:20:22.000000000 -0500
@@ -1,53 +1,53 @@
 package com.fasterxml.jackson.databind.ser.impl;
 
 import java.io.IOException;
 
 import com.fasterxml.jackson.annotation.ObjectIdGenerator;
 import com.fasterxml.jackson.core.JsonGenerationException;
 import com.fasterxml.jackson.core.JsonGenerator;
 import com.fasterxml.jackson.core.io.SerializedString;
 
 import com.fasterxml.jackson.databind.SerializerProvider;
 
 /**
  * Simple value container used to keep track of Object Ids during
  * serialization.
  */
 public final class WritableObjectId
 {
     public final ObjectIdGenerator<?> generator;
 
     public Object id;
 
     protected boolean idWritten = false;
     
     public WritableObjectId(ObjectIdGenerator<?> generator) {
         this.generator = generator;
     }
     
     public boolean writeAsId(JsonGenerator jgen, SerializerProvider provider, ObjectIdWriter w)
         throws IOException, JsonGenerationException
     {
         if (id != null && (idWritten || w.alwaysAsId)) {
             w.serializer.serialize(id, jgen, provider);
             return true;
         }
-        return true;
+        return false;
     }
     
     public Object generateId(Object forPojo) {
         return (id = generator.generateId(forPojo));
     }
 
     public void writeAsField(JsonGenerator jgen, SerializerProvider provider,
             ObjectIdWriter w)
         throws IOException, JsonGenerationException
     {
         SerializedString name = w.propertyName;
         idWritten = true;
         if (name != null) {
             jgen.writeFieldName(name);
             w.serializer.serialize(id, jgen, provider);
         }
     }
 }
