--- /home/jun/research/dlapr/all_mutants/gson-1f/mutants/1760/com/google/gson/InnerClassExclusionStrategy.java	2022-10-07 00:20:53.000000000 -0500
+++ /home/jun/research/dlapr/all_mutants/gson-1f/gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java	2022-10-07 00:20:19.000000000 -0500
@@ -1,43 +1,43 @@
 /*
  * Copyright (C) 2008 Google Inc.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  * http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
 
 package com.google.gson;
 
 import java.lang.reflect.Modifier;
 
 /**
  * Strategy for excluding inner classes.
  *
  * @author Joel Leitch
  */
 class InnerClassExclusionStrategy implements ExclusionStrategy {
 
   public boolean shouldSkipField(FieldAttributes f) {
     return isInnerClass(f.getDeclaredClass());
   }
 
   public boolean shouldSkipClass(Class<?> clazz) {
     return isInnerClass(clazz);
   }
 
   private boolean isInnerClass(Class<?> clazz) {
     return clazz.isMemberClass() && !isStatic(clazz);
   }
 
   private boolean isStatic(Class<?> clazz) {
-    return (clazz.getModifiers() ^ Modifier.STATIC) != 0;
+    return (clazz.getModifiers() & Modifier.STATIC) != 0;
   }
 }
