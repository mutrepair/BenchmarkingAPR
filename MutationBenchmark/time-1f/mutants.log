1:LVR:0:POS:org.joda.time.DateTimeZone:94:0 |==> 1
2:LVR:0:NEG:org.joda.time.DateTimeZone:94:0 |==> -1
3:LVR:0:POS:org.joda.time.DateTimeZone:94:0 |==> 1
4:LVR:0:NEG:org.joda.time.DateTimeZone:94:0 |==> -1
5:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone:116:setProvider0(null) |==> <NO-OP>
6:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone:117:setNameProvider0(null) |==> <NO-OP>
7:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():135:zone == null |==> false
8:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefault():137:zone = cDefault |==> <NO-OP>
9:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():138:zone == null |==> false
10:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():143:id != null |==> true
11:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefault():144:temp = forID(id) |==> <NO-OP>
12:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():149:temp == null |==> false
13:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefault():150:temp = forTimeZone(TimeZone.getDefault()) |==> <NO-OP>
14:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():155:temp == null |==> false
15:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefault():156:temp = UTC |==> <NO-OP>
16:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefault():158:cDefault = zone = temp |==> <NO-OP>
17:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setDefault(org.joda.time.DateTimeZone):176:sm != null |==> true
18:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@setDefault(org.joda.time.DateTimeZone):177:sm.checkPermission(new JodaTimePermission("DateTimeZone.setDefault")) |==> <NO-OP>
19:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setDefault(org.joda.time.DateTimeZone):179:zone == null |==> false
20:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@setDefault(org.joda.time.DateTimeZone):183:cDefault = zone |==> <NO-OP>
21:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forID(java.lang.String):205:id == null |==> false
22:COR:id.equals("UTC"):TRUE:org.joda.time.DateTimeZone@forID(java.lang.String):208:id.equals("UTC") |==> false
23:COR:id.equals("UTC"):FALSE:org.joda.time.DateTimeZone@forID(java.lang.String):208:id.equals("UTC") |==> true
24:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forID(java.lang.String):212:zone != null |==> true
25:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@forID(java.lang.String):215:id.startsWith("+") || id.startsWith("-") |==> id.startsWith("+") != id.startsWith("-")
26:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@forID(java.lang.String):215:id.startsWith("+") || id.startsWith("-") |==> id.startsWith("+")
27:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@forID(java.lang.String):215:id.startsWith("+") || id.startsWith("-") |==> id.startsWith("-")
28:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@forID(java.lang.String):215:id.startsWith("+") || id.startsWith("-") |==> true
29:LVR:0:POS:org.joda.time.DateTimeZone@forID(java.lang.String):217:0L |==> 1L
30:LVR:0:NEG:org.joda.time.DateTimeZone@forID(java.lang.String):217:0L |==> -1L
31:ROR:==(long,long):<=(long,long):org.joda.time.DateTimeZone@forID(java.lang.String):217:offset == 0L |==> offset <= 0L
32:ROR:==(long,long):>=(long,long):org.joda.time.DateTimeZone@forID(java.lang.String):217:offset == 0L |==> offset >= 0L
33:ROR:==(long,long):FALSE(long,long):org.joda.time.DateTimeZone@forID(java.lang.String):217:offset == 0L |==> false
34:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@forID(java.lang.String):220:id = printOffset(offset) |==> <NO-OP>
35:LVR:0:POS:org.joda.time.DateTimeZone@forOffsetHours(int):238:0 |==> 1
36:LVR:0:NEG:org.joda.time.DateTimeZone@forOffsetHours(int):238:0 |==> -1
37:LVR:0:POS:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:0 |==> 1
38:LVR:0:NEG:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:0 |==> -1
39:ROR:==(int,int):<=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:hoursOffset == 0 |==> hoursOffset <= 0
40:ROR:==(int,int):>=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:hoursOffset == 0 |==> hoursOffset >= 0
41:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:hoursOffset == 0 |==> false
42:LVR:0:POS:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:0 |==> 1
43:LVR:0:NEG:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:0 |==> -1
44:ROR:==(int,int):<=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:minutesOffset == 0 |==> minutesOffset <= 0
45:ROR:==(int,int):>=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:minutesOffset == 0 |==> minutesOffset >= 0
46:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:minutesOffset == 0 |==> false
47:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:hoursOffset == 0 && minutesOffset == 0 |==> hoursOffset == 0 == (minutesOffset == 0)
48:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:hoursOffset == 0 && minutesOffset == 0 |==> false
49:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:hoursOffset == 0 && minutesOffset == 0 |==> hoursOffset == 0
50:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:hoursOffset == 0 && minutesOffset == 0 |==> minutesOffset == 0
51:LVR:NEG:0:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:-23 |==> 0
52:LVR:NEG:POS:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:-23 |==> 23
53:ROR:<(int,int):!=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:hoursOffset < -23 |==> hoursOffset != -23
54:ROR:<(int,int):<=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:hoursOffset < -23 |==> hoursOffset <= -23
55:ROR:<(int,int):FALSE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:hoursOffset < -23 |==> false
56:LVR:POS:0:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:23 |==> 0
57:LVR:POS:NEG:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:23 |==> -23
58:ROR:>(int,int):!=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:hoursOffset > 23 |==> hoursOffset != 23
59:ROR:>(int,int):>=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:hoursOffset > 23 |==> hoursOffset >= 23
60:ROR:>(int,int):FALSE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:hoursOffset > 23 |==> false
61:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:hoursOffset < -23 || hoursOffset > 23 |==> hoursOffset < -23 != hoursOffset > 23
62:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:hoursOffset < -23 || hoursOffset > 23 |==> hoursOffset < -23
63:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:hoursOffset < -23 || hoursOffset > 23 |==> hoursOffset > 23
64:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:hoursOffset < -23 || hoursOffset > 23 |==> true
65:LVR:NEG:0:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:-59 |==> 0
66:LVR:NEG:POS:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:-59 |==> 59
67:ROR:<(int,int):!=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:minutesOffset < -59 |==> minutesOffset != -59
68:ROR:<(int,int):<=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:minutesOffset < -59 |==> minutesOffset <= -59
69:ROR:<(int,int):FALSE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:minutesOffset < -59 |==> false
70:LVR:POS:0:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:59 |==> 0
71:LVR:POS:NEG:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:59 |==> -59
72:ROR:>(int,int):!=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:minutesOffset > 59 |==> minutesOffset != 59
73:ROR:>(int,int):>=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:minutesOffset > 59 |==> minutesOffset >= 59
74:ROR:>(int,int):FALSE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:minutesOffset > 59 |==> false
75:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:minutesOffset < -59 || minutesOffset > 59 |==> minutesOffset < -59 != minutesOffset > 59
76:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:minutesOffset < -59 || minutesOffset > 59 |==> minutesOffset < -59
77:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:minutesOffset < -59 || minutesOffset > 59 |==> minutesOffset > 59
78:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:minutesOffset < -59 || minutesOffset > 59 |==> true
79:LVR:0:POS:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:0 |==> 1
80:LVR:0:NEG:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:0 |==> -1
81:ROR:>(int,int):!=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:hoursOffset > 0 |==> hoursOffset != 0
82:ROR:>(int,int):>=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:hoursOffset > 0 |==> hoursOffset >= 0
83:ROR:>(int,int):FALSE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:hoursOffset > 0 |==> false
84:LVR:0:POS:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:0 |==> 1
85:LVR:0:NEG:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:0 |==> -1
86:ROR:<(int,int):!=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:minutesOffset < 0 |==> minutesOffset != 0
87:ROR:<(int,int):<=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:minutesOffset < 0 |==> minutesOffset <= 0
88:ROR:<(int,int):FALSE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:minutesOffset < 0 |==> false
89:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:hoursOffset > 0 && minutesOffset < 0 |==> hoursOffset > 0 == minutesOffset < 0
90:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:hoursOffset > 0 && minutesOffset < 0 |==> false
91:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:hoursOffset > 0 && minutesOffset < 0 |==> hoursOffset > 0
92:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:hoursOffset > 0 && minutesOffset < 0 |==> minutesOffset < 0
93:LVR:0:POS:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):285:0 |==> 1
94:LVR:0:NEG:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):285:0 |==> -1
95:LVR:POS:0:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):287:60 |==> 0
96:LVR:POS:NEG:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):287:60 |==> -60
97:AOR:*(int,int):%(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):287:hoursOffset * 60 |==> hoursOffset % 60
98:AOR:*(int,int):+(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):287:hoursOffset * 60 |==> hoursOffset + 60
99:AOR:*(int,int):-(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):287:hoursOffset * 60 |==> hoursOffset - 60
100:AOR:*(int,int):/(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):287:hoursOffset * 60 |==> hoursOffset / 60
101:LVR:0:POS:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):288:0 |==> 1
102:LVR:0:NEG:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):288:0 |==> -1
103:ROR:<(int,int):!=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):288:hoursInMinutes < 0 |==> hoursInMinutes != 0
104:ROR:<(int,int):<=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):288:hoursInMinutes < 0 |==> hoursInMinutes <= 0
105:ROR:<(int,int):FALSE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):288:hoursInMinutes < 0 |==> false
106:AOR:-(int,int):%(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):289:hoursInMinutes - Math.abs(minutesOffset) |==> hoursInMinutes % Math.abs(minutesOffset)
107:AOR:-(int,int):*(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):289:hoursInMinutes - Math.abs(minutesOffset) |==> hoursInMinutes * Math.abs(minutesOffset)
108:AOR:-(int,int):+(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):289:hoursInMinutes - Math.abs(minutesOffset) |==> hoursInMinutes + Math.abs(minutesOffset)
109:AOR:-(int,int):/(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):289:hoursInMinutes - Math.abs(minutesOffset) |==> hoursInMinutes / Math.abs(minutesOffset)
110:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):289:minutesOffset = hoursInMinutes - Math.abs(minutesOffset) |==> <NO-OP>
111:AOR:+(int,int):%(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):291:hoursInMinutes + minutesOffset |==> hoursInMinutes % minutesOffset
112:AOR:+(int,int):*(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):291:hoursInMinutes + minutesOffset |==> hoursInMinutes * minutesOffset
113:AOR:+(int,int):-(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):291:hoursInMinutes + minutesOffset |==> hoursInMinutes - minutesOffset
114:AOR:+(int,int):/(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):291:hoursInMinutes + minutesOffset |==> hoursInMinutes / minutesOffset
115:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):291:minutesOffset = hoursInMinutes + minutesOffset |==> <NO-OP>
116:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):293:offset = FieldUtils.safeMultiply(minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE) |==> <NO-OP>
117:ORU:-(int):+(int):org.joda.time.DateTimeZone@forOffsetMillis(int):307:-MAX_MILLIS |==> +MAX_MILLIS
118:ORU:-(int):~(int):org.joda.time.DateTimeZone@forOffsetMillis(int):307:-MAX_MILLIS |==> ~MAX_MILLIS
119:ROR:<(int,int):!=(int,int):org.joda.time.DateTimeZone@forOffsetMillis(int):307:millisOffset < -MAX_MILLIS |==> millisOffset != -MAX_MILLIS
120:ROR:<(int,int):<=(int,int):org.joda.time.DateTimeZone@forOffsetMillis(int):307:millisOffset < -MAX_MILLIS |==> millisOffset <= -MAX_MILLIS
121:ROR:<(int,int):FALSE(int,int):org.joda.time.DateTimeZone@forOffsetMillis(int):307:millisOffset < -MAX_MILLIS |==> false
122:ROR:>(int,int):!=(int,int):org.joda.time.DateTimeZone@forOffsetMillis(int):307:millisOffset > MAX_MILLIS |==> millisOffset != MAX_MILLIS
123:ROR:>(int,int):>=(int,int):org.joda.time.DateTimeZone@forOffsetMillis(int):307:millisOffset > MAX_MILLIS |==> millisOffset >= MAX_MILLIS
124:ROR:>(int,int):FALSE(int,int):org.joda.time.DateTimeZone@forOffsetMillis(int):307:millisOffset > MAX_MILLIS |==> false
125:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@forOffsetMillis(int):307:millisOffset < -MAX_MILLIS || millisOffset > MAX_MILLIS |==> millisOffset < -MAX_MILLIS != millisOffset > MAX_MILLIS
126:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@forOffsetMillis(int):307:millisOffset < -MAX_MILLIS || millisOffset > MAX_MILLIS |==> millisOffset < -MAX_MILLIS
127:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@forOffsetMillis(int):307:millisOffset < -MAX_MILLIS || millisOffset > MAX_MILLIS |==> millisOffset > MAX_MILLIS
128:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@forOffsetMillis(int):307:millisOffset < -MAX_MILLIS || millisOffset > MAX_MILLIS |==> true
129:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):330:zone == null |==> false
130:COR:id.equals("UTC"):TRUE:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):334:id.equals("UTC") |==> false
131:COR:id.equals("UTC"):FALSE:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):334:id.equals("UTC") |==> true
132:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):341:convId != null |==> true
133:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):342:dtz = cProvider.getZone(convId) |==> <NO-OP>
134:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):344:dtz == null |==> false
135:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):345:dtz = cProvider.getZone(id) |==> <NO-OP>
136:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):347:dtz != null |==> true
137:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):352:convId == null |==> false
138:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):353:convId = zone.getID() |==> <NO-OP>
139:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):354:convId.startsWith("GMT+") || convId.startsWith("GMT-") |==> convId.startsWith("GMT+") != convId.startsWith("GMT-")
140:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):354:convId.startsWith("GMT+") || convId.startsWith("GMT-") |==> convId.startsWith("GMT+")
141:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):354:convId.startsWith("GMT+") || convId.startsWith("GMT-") |==> convId.startsWith("GMT-")
142:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):354:convId.startsWith("GMT+") || convId.startsWith("GMT-") |==> true
143:LVR:POS:0:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):355:3 |==> 0
144:LVR:POS:NEG:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):355:3 |==> -3
145:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):355:convId = convId.substring(3) |==> <NO-OP>
146:LVR:0:POS:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):357:0L |==> 1L
147:LVR:0:NEG:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):357:0L |==> -1L
148:ROR:==(long,long):<=(long,long):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):357:offset == 0L |==> offset <= 0L
149:ROR:==(long,long):>=(long,long):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):357:offset == 0L |==> offset >= 0L
150:ROR:==(long,long):FALSE(long,long):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):357:offset == 0L |==> false
151:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):360:convId = printOffset(offset) |==> <NO-OP>
152:LVR:0:POS:org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):377:0 |==> 1
153:LVR:0:NEG:org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):377:0 |==> -1
154:ROR:==(int,int):<=(int,int):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):377:offset == 0 |==> offset <= 0
155:ROR:==(int,int):>=(int,int):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):377:offset == 0 |==> offset >= 0
156:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):377:offset == 0 |==> false
157:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):380:iFixedOffsetCache == null |==> false
158:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):381:iFixedOffsetCache = new HashMap<String, SoftReference<DateTimeZone>>() |==> <NO-OP>
159:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):385:ref != null |==> true
160:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):387:zone != null |==> true
161:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):392:iFixedOffsetCache.put(id, new SoftReference<DateTimeZone>(zone)) |==> <NO-OP>
162:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setProvider(org.joda.time.tz.Provider):430:sm != null |==> true
163:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@setProvider(org.joda.time.tz.Provider):431:sm.checkPermission(new JodaTimePermission("DateTimeZone.setProvider")) |==> <NO-OP>
164:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@setProvider(org.joda.time.tz.Provider):433:setProvider0(provider) |==> <NO-OP>
165:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):443:provider == null |==> false
166:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):444:provider = getDefaultProvider() |==> <NO-OP>
167:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):447:ids == null |==> false
168:LVR:0:POS:org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):447:0 |==> 1
169:LVR:0:NEG:org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):447:0 |==> -1
170:ROR:==(int,int):<=(int,int):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):447:ids.size() == 0 |==> ids.size() <= 0
171:ROR:==(int,int):>=(int,int):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):447:ids.size() == 0 |==> ids.size() >= 0
172:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):447:ids.size() == 0 |==> false
173:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):447:ids == null || ids.size() == 0 |==> ids == null != (ids.size() == 0)
174:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):447:ids == null || ids.size() == 0 |==> ids == null
175:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):447:ids == null || ids.size() == 0 |==> ids.size() == 0
176:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):447:ids == null || ids.size() == 0 |==> true
177:COR:ids.contains("UTC"):TRUE:org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):451:ids.contains("UTC") |==> false
178:COR:ids.contains("UTC"):FALSE:org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):451:ids.contains("UTC") |==> true
179:COR:UTC.equals(provider.getZone("UTC")):TRUE:org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):454:UTC.equals(provider.getZone("UTC")) |==> false
180:COR:UTC.equals(provider.getZone("UTC")):FALSE:org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):454:UTC.equals(provider.getZone("UTC")) |==> true
181:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):457:cProvider = provider |==> <NO-OP>
182:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):458:cAvailableIDs = ids |==> <NO-OP>
183:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultProvider():475:providerClass != null |==> true
184:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefaultProvider():477:provider = (Provider)Class.forName(providerClass).newInstance() |==> <NO-OP>
185:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultProvider():486:provider == null |==> false
186:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefaultProvider():488:provider = new ZoneInfoProvider("org/joda/time/tz/data") |==> <NO-OP>
187:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getDefaultProvider():490:ex.printStackTrace() |==> <NO-OP>
188:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultProvider():494:provider == null |==> false
189:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefaultProvider():495:provider = new UTCProvider() |==> <NO-OP>
190:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setNameProvider(org.joda.time.tz.NameProvider):526:sm != null |==> true
191:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@setNameProvider(org.joda.time.tz.NameProvider):527:sm.checkPermission(new JodaTimePermission("DateTimeZone.setNameProvider")) |==> <NO-OP>
192:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@setNameProvider(org.joda.time.tz.NameProvider):529:setNameProvider0(nameProvider) |==> <NO-OP>
193:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setNameProvider0(org.joda.time.tz.NameProvider):539:nameProvider == null |==> false
194:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@setNameProvider0(org.joda.time.tz.NameProvider):540:nameProvider = getDefaultNameProvider() |==> <NO-OP>
195:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@setNameProvider0(org.joda.time.tz.NameProvider):542:cNameProvider = nameProvider |==> <NO-OP>
196:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultNameProvider():557:providerClass != null |==> true
197:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefaultNameProvider():559:nameProvider = (NameProvider)Class.forName(providerClass).newInstance() |==> <NO-OP>
198:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultNameProvider():568:nameProvider == null |==> false
199:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefaultNameProvider():569:nameProvider = new DefaultNameProvider() |==> <NO-OP>
200:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getConvertedId(java.lang.String):584:map == null |==> false
201:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):586:map = new HashMap<String, String>() |==> <NO-OP>
202:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):587:map.put("GMT", "UTC") |==> <NO-OP>
203:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):588:map.put("WET", "WET") |==> <NO-OP>
204:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):589:map.put("CET", "CET") |==> <NO-OP>
205:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):590:map.put("MET", "CET") |==> <NO-OP>
206:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):591:map.put("ECT", "CET") |==> <NO-OP>
207:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):592:map.put("EET", "EET") |==> <NO-OP>
208:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):593:map.put("MIT", "Pacific/Apia") |==> <NO-OP>
209:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):594:map.put("HST", "Pacific/Honolulu") |==> <NO-OP>
210:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):595:map.put("AST", "America/Anchorage") |==> <NO-OP>
211:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):596:map.put("PST", "America/Los_Angeles") |==> <NO-OP>
212:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):597:map.put("MST", "America/Denver") |==> <NO-OP>
213:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):598:map.put("PNT", "America/Phoenix") |==> <NO-OP>
214:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):599:map.put("CST", "America/Chicago") |==> <NO-OP>
215:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):600:map.put("EST", "America/New_York") |==> <NO-OP>
216:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):601:map.put("IET", "America/Indiana/Indianapolis") |==> <NO-OP>
217:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):602:map.put("PRT", "America/Puerto_Rico") |==> <NO-OP>
218:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):603:map.put("CNT", "America/St_Johns") |==> <NO-OP>
219:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):604:map.put("AGT", "America/Argentina/Buenos_Aires") |==> <NO-OP>
220:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):605:map.put("BET", "America/Sao_Paulo") |==> <NO-OP>
221:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):606:map.put("ART", "Africa/Cairo") |==> <NO-OP>
222:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):607:map.put("CAT", "Africa/Harare") |==> <NO-OP>
223:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):608:map.put("EAT", "Africa/Addis_Ababa") |==> <NO-OP>
224:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):609:map.put("NET", "Asia/Yerevan") |==> <NO-OP>
225:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):610:map.put("PLT", "Asia/Karachi") |==> <NO-OP>
226:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):611:map.put("IST", "Asia/Kolkata") |==> <NO-OP>
227:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):612:map.put("BST", "Asia/Dhaka") |==> <NO-OP>
228:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):613:map.put("VST", "Asia/Ho_Chi_Minh") |==> <NO-OP>
229:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):614:map.put("CTT", "Asia/Shanghai") |==> <NO-OP>
230:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):615:map.put("JST", "Asia/Tokyo") |==> <NO-OP>
231:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):616:map.put("ACT", "Australia/Darwin") |==> <NO-OP>
232:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):617:map.put("AET", "Australia/Sydney") |==> <NO-OP>
233:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):618:map.put("SST", "Pacific/Guadalcanal") |==> <NO-OP>
234:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):619:map.put("NST", "Pacific/Auckland") |==> <NO-OP>
235:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):620:cZoneIdConversion = map |==> <NO-OP>
236:ORU:-(int):+(int):org.joda.time.DateTimeZone@parseOffset(java.lang.String):643:-(int)offsetFormatter().withChronology(chrono).parseMillis(str) |==> +(int)offsetFormatter().withChronology(chrono).parseMillis(str)
237:ORU:-(int):~(int):org.joda.time.DateTimeZone@parseOffset(java.lang.String):643:-(int)offsetFormatter().withChronology(chrono).parseMillis(str) |==> ~(int)offsetFormatter().withChronology(chrono).parseMillis(str)
238:LVR:0:POS:org.joda.time.DateTimeZone@printOffset(int):657:0 |==> 1
239:LVR:0:NEG:org.joda.time.DateTimeZone@printOffset(int):657:0 |==> -1
240:ROR:>=(int,int):==(int,int):org.joda.time.DateTimeZone@printOffset(int):657:offset >= 0 |==> offset == 0
241:ROR:>=(int,int):>(int,int):org.joda.time.DateTimeZone@printOffset(int):657:offset >= 0 |==> offset > 0
242:ROR:>=(int,int):TRUE(int,int):org.joda.time.DateTimeZone@printOffset(int):657:offset >= 0 |==> true
243:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):658:buf.append('+') |==> <NO-OP>
244:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):660:buf.append('-') |==> <NO-OP>
245:ORU:-(int):+(int):org.joda.time.DateTimeZone@printOffset(int):661:-offset |==> +offset
246:ORU:-(int):~(int):org.joda.time.DateTimeZone@printOffset(int):661:-offset |==> ~offset
247:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):661:offset = -offset |==> <NO-OP>
248:AOR:/(int,int):%(int,int):org.joda.time.DateTimeZone@printOffset(int):664:offset / DateTimeConstants.MILLIS_PER_HOUR |==> offset % DateTimeConstants.MILLIS_PER_HOUR
249:AOR:/(int,int):*(int,int):org.joda.time.DateTimeZone@printOffset(int):664:offset / DateTimeConstants.MILLIS_PER_HOUR |==> offset * DateTimeConstants.MILLIS_PER_HOUR
250:AOR:/(int,int):+(int,int):org.joda.time.DateTimeZone@printOffset(int):664:offset / DateTimeConstants.MILLIS_PER_HOUR |==> offset + DateTimeConstants.MILLIS_PER_HOUR
251:AOR:/(int,int):-(int,int):org.joda.time.DateTimeZone@printOffset(int):664:offset / DateTimeConstants.MILLIS_PER_HOUR |==> offset - DateTimeConstants.MILLIS_PER_HOUR
252:LVR:POS:0:org.joda.time.DateTimeZone@printOffset(int):665:2 |==> 0
253:LVR:POS:NEG:org.joda.time.DateTimeZone@printOffset(int):665:2 |==> -2
254:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):665:FormatUtils.appendPaddedInteger(buf, hours, 2) |==> <NO-OP>
255:AOR:*(int,int):%(int,int):org.joda.time.DateTimeZone@printOffset(int):666:hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> hours % (int)DateTimeConstants.MILLIS_PER_HOUR
256:AOR:*(int,int):+(int,int):org.joda.time.DateTimeZone@printOffset(int):666:hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> hours + (int)DateTimeConstants.MILLIS_PER_HOUR
257:AOR:*(int,int):-(int,int):org.joda.time.DateTimeZone@printOffset(int):666:hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> hours - (int)DateTimeConstants.MILLIS_PER_HOUR
258:AOR:*(int,int):/(int,int):org.joda.time.DateTimeZone@printOffset(int):666:hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> hours / (int)DateTimeConstants.MILLIS_PER_HOUR
259:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):666:offset -= hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> <NO-OP>
260:AOR:/(int,int):%(int,int):org.joda.time.DateTimeZone@printOffset(int):668:offset / DateTimeConstants.MILLIS_PER_MINUTE |==> offset % DateTimeConstants.MILLIS_PER_MINUTE
261:AOR:/(int,int):*(int,int):org.joda.time.DateTimeZone@printOffset(int):668:offset / DateTimeConstants.MILLIS_PER_MINUTE |==> offset * DateTimeConstants.MILLIS_PER_MINUTE
262:AOR:/(int,int):+(int,int):org.joda.time.DateTimeZone@printOffset(int):668:offset / DateTimeConstants.MILLIS_PER_MINUTE |==> offset + DateTimeConstants.MILLIS_PER_MINUTE
263:AOR:/(int,int):-(int,int):org.joda.time.DateTimeZone@printOffset(int):668:offset / DateTimeConstants.MILLIS_PER_MINUTE |==> offset - DateTimeConstants.MILLIS_PER_MINUTE
264:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):669:buf.append(':') |==> <NO-OP>
265:LVR:POS:0:org.joda.time.DateTimeZone@printOffset(int):670:2 |==> 0
266:LVR:POS:NEG:org.joda.time.DateTimeZone@printOffset(int):670:2 |==> -2
267:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):670:FormatUtils.appendPaddedInteger(buf, minutes, 2) |==> <NO-OP>
268:AOR:*(int,int):%(int,int):org.joda.time.DateTimeZone@printOffset(int):671:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes % DateTimeConstants.MILLIS_PER_MINUTE
269:AOR:*(int,int):+(int,int):org.joda.time.DateTimeZone@printOffset(int):671:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes + DateTimeConstants.MILLIS_PER_MINUTE
270:AOR:*(int,int):-(int,int):org.joda.time.DateTimeZone@printOffset(int):671:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes - DateTimeConstants.MILLIS_PER_MINUTE
271:AOR:*(int,int):/(int,int):org.joda.time.DateTimeZone@printOffset(int):671:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes / DateTimeConstants.MILLIS_PER_MINUTE
272:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):671:offset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> <NO-OP>
273:LVR:0:POS:org.joda.time.DateTimeZone@printOffset(int):672:0 |==> 1
274:LVR:0:NEG:org.joda.time.DateTimeZone@printOffset(int):672:0 |==> -1
275:ROR:==(int,int):<=(int,int):org.joda.time.DateTimeZone@printOffset(int):672:offset == 0 |==> offset <= 0
276:ROR:==(int,int):>=(int,int):org.joda.time.DateTimeZone@printOffset(int):672:offset == 0 |==> offset >= 0
277:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTimeZone@printOffset(int):672:offset == 0 |==> false
278:AOR:/(int,int):%(int,int):org.joda.time.DateTimeZone@printOffset(int):676:offset / DateTimeConstants.MILLIS_PER_SECOND |==> offset % DateTimeConstants.MILLIS_PER_SECOND
279:AOR:/(int,int):*(int,int):org.joda.time.DateTimeZone@printOffset(int):676:offset / DateTimeConstants.MILLIS_PER_SECOND |==> offset * DateTimeConstants.MILLIS_PER_SECOND
280:AOR:/(int,int):+(int,int):org.joda.time.DateTimeZone@printOffset(int):676:offset / DateTimeConstants.MILLIS_PER_SECOND |==> offset + DateTimeConstants.MILLIS_PER_SECOND
281:AOR:/(int,int):-(int,int):org.joda.time.DateTimeZone@printOffset(int):676:offset / DateTimeConstants.MILLIS_PER_SECOND |==> offset - DateTimeConstants.MILLIS_PER_SECOND
282:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):677:buf.append(':') |==> <NO-OP>
283:LVR:POS:0:org.joda.time.DateTimeZone@printOffset(int):678:2 |==> 0
284:LVR:POS:NEG:org.joda.time.DateTimeZone@printOffset(int):678:2 |==> -2
285:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):678:FormatUtils.appendPaddedInteger(buf, seconds, 2) |==> <NO-OP>
286:AOR:*(int,int):%(int,int):org.joda.time.DateTimeZone@printOffset(int):679:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds % DateTimeConstants.MILLIS_PER_SECOND
287:AOR:*(int,int):+(int,int):org.joda.time.DateTimeZone@printOffset(int):679:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds + DateTimeConstants.MILLIS_PER_SECOND
288:AOR:*(int,int):-(int,int):org.joda.time.DateTimeZone@printOffset(int):679:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds - DateTimeConstants.MILLIS_PER_SECOND
289:AOR:*(int,int):/(int,int):org.joda.time.DateTimeZone@printOffset(int):679:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds / DateTimeConstants.MILLIS_PER_SECOND
290:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):679:offset -= seconds * DateTimeConstants.MILLIS_PER_SECOND |==> <NO-OP>
291:LVR:0:POS:org.joda.time.DateTimeZone@printOffset(int):680:0 |==> 1
292:LVR:0:NEG:org.joda.time.DateTimeZone@printOffset(int):680:0 |==> -1
293:ROR:==(int,int):<=(int,int):org.joda.time.DateTimeZone@printOffset(int):680:offset == 0 |==> offset <= 0
294:ROR:==(int,int):>=(int,int):org.joda.time.DateTimeZone@printOffset(int):680:offset == 0 |==> offset >= 0
295:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTimeZone@printOffset(int):680:offset == 0 |==> false
296:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):684:buf.append('.') |==> <NO-OP>
297:LVR:POS:0:org.joda.time.DateTimeZone@printOffset(int):685:3 |==> 0
298:LVR:POS:NEG:org.joda.time.DateTimeZone@printOffset(int):685:3 |==> -3
299:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):685:FormatUtils.appendPaddedInteger(buf, offset, 3) |==> <NO-OP>
300:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@offsetFormatter():695:cOffsetFormatter == null |==> false
301:LVR:TRUE:FALSE:org.joda.time.DateTimeZone@offsetFormatter():697:true |==> false
302:LVR:POS:0:org.joda.time.DateTimeZone@offsetFormatter():697:2 |==> 0
303:LVR:POS:NEG:org.joda.time.DateTimeZone@offsetFormatter():697:2 |==> -2
304:LVR:POS:0:org.joda.time.DateTimeZone@offsetFormatter():697:4 |==> 0
305:LVR:POS:NEG:org.joda.time.DateTimeZone@offsetFormatter():697:4 |==> -4
306:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@offsetFormatter():696:cOffsetFormatter = new DateTimeFormatterBuilder().appendTimeZoneOffset(null, true, 2, 4).toFormatter() |==> <NO-OP>
307:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@<init>(java.lang.String):715:id == null |==> false
308:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getShortName(long,java.util.Locale):769:locale == null |==> false
309:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getShortName(long,java.util.Locale):770:locale = Locale.getDefault() |==> <NO-OP>
310:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getShortName(long,java.util.Locale):773:nameKey == null |==> false
311:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getShortName(long,java.util.Locale):777:name != null |==> true
312:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getName(long,java.util.Locale):809:locale == null |==> false
313:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getName(long,java.util.Locale):810:locale = Locale.getDefault() |==> <NO-OP>
314:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getName(long,java.util.Locale):813:nameKey == null |==> false
315:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getName(long,java.util.Locale):817:name != null |==> true
316:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getOffset(org.joda.time.ReadableInstant):838:instant == null |==> false
317:ROR:==(int,int):<=(int,int):org.joda.time.DateTimeZone@isStandardOffset(long):869:getOffset(instant) == getStandardOffset(instant) |==> getOffset(instant) <= getStandardOffset(instant)
318:ROR:==(int,int):>=(int,int):org.joda.time.DateTimeZone@isStandardOffset(long):869:getOffset(instant) == getStandardOffset(instant) |==> getOffset(instant) >= getStandardOffset(instant)
319:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTimeZone@isStandardOffset(long):869:getOffset(instant) == getStandardOffset(instant) |==> false
320:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):909:instantLocal - offsetLocal |==> instantLocal % offsetLocal
321:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):909:instantLocal - offsetLocal |==> instantLocal * offsetLocal
322:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):909:instantLocal - offsetLocal |==> instantLocal + offsetLocal
323:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):909:instantLocal - offsetLocal |==> instantLocal / offsetLocal
324:ROR:!=(int,int):<(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):912:offsetLocal != offsetAdjusted |==> offsetLocal < offsetAdjusted
325:ROR:!=(int,int):>(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):912:offsetLocal != offsetAdjusted |==> offsetLocal > offsetAdjusted
326:ROR:!=(int,int):TRUE(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):912:offsetLocal != offsetAdjusted |==> true
327:AOR:-(int,int):%(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):915:offsetLocal - offsetAdjusted |==> offsetLocal % offsetAdjusted
328:AOR:-(int,int):*(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):915:offsetLocal - offsetAdjusted |==> offsetLocal * offsetAdjusted
329:AOR:-(int,int):+(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):915:offsetLocal - offsetAdjusted |==> offsetLocal + offsetAdjusted
330:AOR:-(int,int):/(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):915:offsetLocal - offsetAdjusted |==> offsetLocal / offsetAdjusted
331:LVR:0:POS:org.joda.time.DateTimeZone@getOffsetFromLocal(long):915:0 |==> 1
332:LVR:0:NEG:org.joda.time.DateTimeZone@getOffsetFromLocal(long):915:0 |==> -1
333:ROR:<(int,int):!=(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):915:(offsetLocal - offsetAdjusted) < 0 |==> (offsetLocal - offsetAdjusted) != 0
334:ROR:<(int,int):<=(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):915:(offsetLocal - offsetAdjusted) < 0 |==> (offsetLocal - offsetAdjusted) <= 0
335:ROR:<(int,int):FALSE(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):915:(offsetLocal - offsetAdjusted) < 0 |==> false
336:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):920:instantLocal - offsetAdjusted |==> instantLocal % offsetAdjusted
337:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):920:instantLocal - offsetAdjusted |==> instantLocal * offsetAdjusted
338:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):920:instantLocal - offsetAdjusted |==> instantLocal + offsetAdjusted
339:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):920:instantLocal - offsetAdjusted |==> instantLocal / offsetAdjusted
340:ROR:!=(long,long):<(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):921:nextLocal != nextAdjusted |==> nextLocal < nextAdjusted
341:ROR:!=(long,long):>(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):921:nextLocal != nextAdjusted |==> nextLocal > nextAdjusted
342:ROR:!=(long,long):TRUE(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):921:nextLocal != nextAdjusted |==> true
343:LVR:0:POS:org.joda.time.DateTimeZone@getOffsetFromLocal(long):925:0 |==> 1
344:LVR:0:NEG:org.joda.time.DateTimeZone@getOffsetFromLocal(long):925:0 |==> -1
345:ROR:>=(int,int):==(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):925:offsetLocal >= 0 |==> offsetLocal == 0
346:ROR:>=(int,int):>(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):925:offsetLocal >= 0 |==> offsetLocal > 0
347:ROR:>=(int,int):TRUE(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):925:offsetLocal >= 0 |==> true
348:ROR:<(long,long):!=(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):927:prev < instantAdjusted |==> prev != instantAdjusted
349:ROR:<(long,long):<=(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):927:prev < instantAdjusted |==> prev <= instantAdjusted
350:ROR:<(long,long):FALSE(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):927:prev < instantAdjusted |==> false
351:AOR:-(int,int):%(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):929:offsetPrev - offsetLocal |==> offsetPrev % offsetLocal
352:AOR:-(int,int):*(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):929:offsetPrev - offsetLocal |==> offsetPrev * offsetLocal
353:AOR:-(int,int):+(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):929:offsetPrev - offsetLocal |==> offsetPrev + offsetLocal
354:AOR:-(int,int):/(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):929:offsetPrev - offsetLocal |==> offsetPrev / offsetLocal
355:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):930:instantAdjusted - prev |==> instantAdjusted % prev
356:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):930:instantAdjusted - prev |==> instantAdjusted * prev
357:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):930:instantAdjusted - prev |==> instantAdjusted + prev
358:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):930:instantAdjusted - prev |==> instantAdjusted / prev
359:ROR:<=(long,long):<(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):930:instantAdjusted - prev <= diff |==> instantAdjusted - prev < diff
360:ROR:<=(long,long):==(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):930:instantAdjusted - prev <= diff |==> instantAdjusted - prev == diff
361:ROR:<=(long,long):TRUE(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):930:instantAdjusted - prev <= diff |==> true
362:AOR:+(long,long):%(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):950:instantUTC + offset |==> instantUTC % offset
363:AOR:+(long,long):*(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):950:instantUTC + offset |==> instantUTC * offset
364:AOR:+(long,long):-(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):950:instantUTC + offset |==> instantUTC - offset
365:AOR:+(long,long):/(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):950:instantUTC + offset |==> instantUTC / offset
366:LOR:^(long,long):&(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):952:instantUTC ^ instantLocal |==> instantUTC & instantLocal
367:LOR:^(long,long):|(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):952:instantUTC ^ instantLocal |==> instantUTC | instantLocal
368:LVR:0:POS:org.joda.time.DateTimeZone@convertUTCToLocal(long):952:0 |==> 1
369:LVR:0:NEG:org.joda.time.DateTimeZone@convertUTCToLocal(long):952:0 |==> -1
370:ROR:<(long,long):!=(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):952:(instantUTC ^ instantLocal) < 0 |==> (instantUTC ^ instantLocal) != 0
371:ROR:<(long,long):<=(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):952:(instantUTC ^ instantLocal) < 0 |==> (instantUTC ^ instantLocal) <= 0
372:ROR:<(long,long):FALSE(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):952:(instantUTC ^ instantLocal) < 0 |==> false
373:LOR:^(long,long):&(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):952:instantUTC ^ offset |==> instantUTC & offset
374:LOR:^(long,long):|(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):952:instantUTC ^ offset |==> instantUTC | offset
375:LVR:0:POS:org.joda.time.DateTimeZone@convertUTCToLocal(long):952:0 |==> 1
376:LVR:0:NEG:org.joda.time.DateTimeZone@convertUTCToLocal(long):952:0 |==> -1
377:ROR:>=(long,long):==(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):952:(instantUTC ^ offset) >= 0 |==> (instantUTC ^ offset) == 0
378:ROR:>=(long,long):>(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):952:(instantUTC ^ offset) >= 0 |==> (instantUTC ^ offset) > 0
379:ROR:>=(long,long):TRUE(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):952:(instantUTC ^ offset) >= 0 |==> true
380:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeZone@convertUTCToLocal(long):952:(instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0 |==> (instantUTC ^ instantLocal) < 0 == (instantUTC ^ offset) >= 0
381:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeZone@convertUTCToLocal(long):952:(instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0 |==> false
382:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@convertUTCToLocal(long):952:(instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0 |==> (instantUTC ^ instantLocal) < 0
383:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@convertUTCToLocal(long):952:(instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0 |==> (instantUTC ^ offset) >= 0
384:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):977:instantLocal - offsetOriginal |==> instantLocal % offsetOriginal
385:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):977:instantLocal - offsetOriginal |==> instantLocal * offsetOriginal
386:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):977:instantLocal - offsetOriginal |==> instantLocal + offsetOriginal
387:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):977:instantLocal - offsetOriginal |==> instantLocal / offsetOriginal
388:ROR:==(int,int):<=(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):979:offsetLocalFromOriginal == offsetOriginal |==> offsetLocalFromOriginal <= offsetOriginal
389:ROR:==(int,int):>=(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):979:offsetLocalFromOriginal == offsetOriginal |==> offsetLocalFromOriginal >= offsetOriginal
390:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):979:offsetLocalFromOriginal == offsetOriginal |==> false
391:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1001:instantLocal - offsetLocal |==> instantLocal % offsetLocal
392:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1001:instantLocal - offsetLocal |==> instantLocal * offsetLocal
393:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1001:instantLocal - offsetLocal |==> instantLocal + offsetLocal
394:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1001:instantLocal - offsetLocal |==> instantLocal / offsetLocal
395:ROR:!=(int,int):<(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1003:offsetLocal != offset |==> offsetLocal < offset
396:ROR:!=(int,int):>(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1003:offsetLocal != offset |==> offsetLocal > offset
397:ROR:!=(int,int):TRUE(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1003:offsetLocal != offset |==> true
398:LVR:0:POS:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1007:0 |==> 1
399:LVR:0:NEG:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1007:0 |==> -1
400:ROR:<(int,int):!=(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1007:offsetLocal < 0 |==> offsetLocal != 0
401:ROR:<(int,int):<=(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1007:offsetLocal < 0 |==> offsetLocal <= 0
402:ROR:<(int,int):FALSE(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1007:offsetLocal < 0 |==> false
403:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1007:strict || offsetLocal < 0 |==> strict != offsetLocal < 0
404:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1007:strict || offsetLocal < 0 |==> strict
405:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1007:strict || offsetLocal < 0 |==> offsetLocal < 0
406:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1007:strict || offsetLocal < 0 |==> true
407:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1009:instantLocal - offsetLocal |==> instantLocal % offsetLocal
408:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1009:instantLocal - offsetLocal |==> instantLocal * offsetLocal
409:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1009:instantLocal - offsetLocal |==> instantLocal + offsetLocal
410:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1009:instantLocal - offsetLocal |==> instantLocal / offsetLocal
411:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:instantLocal - offsetLocal |==> instantLocal % offsetLocal
412:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:instantLocal - offsetLocal |==> instantLocal * offsetLocal
413:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:instantLocal - offsetLocal |==> instantLocal + offsetLocal
414:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:instantLocal - offsetLocal |==> instantLocal / offsetLocal
415:ROR:==(long,long):<=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:nextLocal == (instantLocal - offsetLocal) |==> nextLocal <= (instantLocal - offsetLocal)
416:ROR:==(long,long):>=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:nextLocal == (instantLocal - offsetLocal) |==> nextLocal >= (instantLocal - offsetLocal)
417:ROR:==(long,long):FALSE(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:nextLocal == (instantLocal - offsetLocal) |==> false
418:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1011:nextLocal = Long.MAX_VALUE |==> <NO-OP>
419:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1013:instantLocal - offset |==> instantLocal % offset
420:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1013:instantLocal - offset |==> instantLocal * offset
421:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1013:instantLocal - offset |==> instantLocal + offset
422:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1013:instantLocal - offset |==> instantLocal / offset
423:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1014:instantLocal - offset |==> instantLocal % offset
424:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1014:instantLocal - offset |==> instantLocal * offset
425:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1014:instantLocal - offset |==> instantLocal + offset
426:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1014:instantLocal - offset |==> instantLocal / offset
427:ROR:==(long,long):<=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1014:nextAdjusted == (instantLocal - offset) |==> nextAdjusted <= (instantLocal - offset)
428:ROR:==(long,long):>=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1014:nextAdjusted == (instantLocal - offset) |==> nextAdjusted >= (instantLocal - offset)
429:ROR:==(long,long):FALSE(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1014:nextAdjusted == (instantLocal - offset) |==> false
430:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1015:nextAdjusted = Long.MAX_VALUE |==> <NO-OP>
431:ROR:!=(long,long):<(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1017:nextLocal != nextAdjusted |==> nextLocal < nextAdjusted
432:ROR:!=(long,long):>(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1017:nextLocal != nextAdjusted |==> nextLocal > nextAdjusted
433:ROR:!=(long,long):TRUE(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1017:nextLocal != nextAdjusted |==> true
434:COR:strict:TRUE:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1019:strict |==> false
435:COR:strict:FALSE:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1019:strict |==> true
436:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1026:offset = offsetLocal |==> <NO-OP>
437:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1032:instantLocal - offset |==> instantLocal % offset
438:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1032:instantLocal - offset |==> instantLocal * offset
439:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1032:instantLocal - offset |==> instantLocal + offset
440:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1032:instantLocal - offset |==> instantLocal / offset
441:LOR:^(long,long):&(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1034:instantLocal ^ instantUTC |==> instantLocal & instantUTC
442:LOR:^(long,long):|(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1034:instantLocal ^ instantUTC |==> instantLocal | instantUTC
443:LVR:0:POS:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1034:0 |==> 1
444:LVR:0:NEG:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1034:0 |==> -1
445:ROR:<(long,long):!=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1034:(instantLocal ^ instantUTC) < 0 |==> (instantLocal ^ instantUTC) != 0
446:ROR:<(long,long):<=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1034:(instantLocal ^ instantUTC) < 0 |==> (instantLocal ^ instantUTC) <= 0
447:ROR:<(long,long):FALSE(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1034:(instantLocal ^ instantUTC) < 0 |==> false
448:LOR:^(long,long):&(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1034:instantLocal ^ offset |==> instantLocal & offset
449:LOR:^(long,long):|(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1034:instantLocal ^ offset |==> instantLocal | offset
450:LVR:0:POS:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1034:0 |==> 1
451:LVR:0:NEG:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1034:0 |==> -1
452:ROR:<(long,long):!=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1034:(instantLocal ^ offset) < 0 |==> (instantLocal ^ offset) != 0
453:ROR:<(long,long):<=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1034:(instantLocal ^ offset) < 0 |==> (instantLocal ^ offset) <= 0
454:ROR:<(long,long):FALSE(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1034:(instantLocal ^ offset) < 0 |==> false
455:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1034:(instantLocal ^ instantUTC) < 0 && (instantLocal ^ offset) < 0 |==> (instantLocal ^ instantUTC) < 0 == (instantLocal ^ offset) < 0
456:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1034:(instantLocal ^ instantUTC) < 0 && (instantLocal ^ offset) < 0 |==> false
457:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1034:(instantLocal ^ instantUTC) < 0 && (instantLocal ^ offset) < 0 |==> (instantLocal ^ instantUTC) < 0
458:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1034:(instantLocal ^ instantUTC) < 0 && (instantLocal ^ offset) < 0 |==> (instantLocal ^ offset) < 0
459:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getMillisKeepLocal(org.joda.time.DateTimeZone,long):1051:newZone == null |==> false
460:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getMillisKeepLocal(org.joda.time.DateTimeZone,long):1052:newZone = DateTimeZone.getDefault() |==> <NO-OP>
461:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getMillisKeepLocal(org.joda.time.DateTimeZone,long):1054:newZone == this |==> false
462:LVR:FALSE:TRUE:org.joda.time.DateTimeZone@getMillisKeepLocal(org.joda.time.DateTimeZone,long):1058:false |==> true
463:COR:isFixed():TRUE:org.joda.time.DateTimeZone@isLocalDateTimeGap(org.joda.time.LocalDateTime):1168:isFixed() |==> false
464:COR:isFixed():FALSE:org.joda.time.DateTimeZone@isLocalDateTimeGap(org.joda.time.LocalDateTime):1168:isFixed() |==> true
465:LVR:FALSE:TRUE:org.joda.time.DateTimeZone@isLocalDateTimeGap(org.joda.time.LocalDateTime):1169:false |==> true
466:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@isLocalDateTimeGap(org.joda.time.LocalDateTime):1172:localDateTime.toDateTime(this) |==> <NO-OP>
467:LVR:FALSE:TRUE:org.joda.time.DateTimeZone@isLocalDateTimeGap(org.joda.time.LocalDateTime):1173:false |==> true
468:LVR:TRUE:FALSE:org.joda.time.DateTimeZone@isLocalDateTimeGap(org.joda.time.LocalDateTime):1175:true |==> false
469:LVR:POS:0:org.joda.time.DateTimeZone@adjustOffset(long,boolean):1190:3 |==> 0
470:LVR:POS:NEG:org.joda.time.DateTimeZone@adjustOffset(long,boolean):1190:3 |==> -3
471:AOR:*(int,int):%(int,int):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1190:3 * DateTimeConstants.MILLIS_PER_HOUR |==> 3 % DateTimeConstants.MILLIS_PER_HOUR
472:AOR:*(int,int):+(int,int):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1190:3 * DateTimeConstants.MILLIS_PER_HOUR |==> 3 + DateTimeConstants.MILLIS_PER_HOUR
473:AOR:*(int,int):-(int,int):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1190:3 * DateTimeConstants.MILLIS_PER_HOUR |==> 3 - DateTimeConstants.MILLIS_PER_HOUR
474:AOR:*(int,int):/(int,int):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1190:3 * DateTimeConstants.MILLIS_PER_HOUR |==> 3 / DateTimeConstants.MILLIS_PER_HOUR
475:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1190:instant - 3 * DateTimeConstants.MILLIS_PER_HOUR |==> instant % (3 * DateTimeConstants.MILLIS_PER_HOUR)
476:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1190:instant - 3 * DateTimeConstants.MILLIS_PER_HOUR |==> instant * (3 * DateTimeConstants.MILLIS_PER_HOUR)
477:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1190:instant - 3 * DateTimeConstants.MILLIS_PER_HOUR |==> instant + 3 * DateTimeConstants.MILLIS_PER_HOUR
478:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1190:instant - 3 * DateTimeConstants.MILLIS_PER_HOUR |==> instant / (3 * DateTimeConstants.MILLIS_PER_HOUR)
479:LVR:POS:0:org.joda.time.DateTimeZone@adjustOffset(long,boolean):1191:3 |==> 0
480:LVR:POS:NEG:org.joda.time.DateTimeZone@adjustOffset(long,boolean):1191:3 |==> -3
481:AOR:*(int,int):%(int,int):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1191:3 * DateTimeConstants.MILLIS_PER_HOUR |==> 3 % DateTimeConstants.MILLIS_PER_HOUR
482:AOR:*(int,int):+(int,int):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1191:3 * DateTimeConstants.MILLIS_PER_HOUR |==> 3 + DateTimeConstants.MILLIS_PER_HOUR
483:AOR:*(int,int):-(int,int):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1191:3 * DateTimeConstants.MILLIS_PER_HOUR |==> 3 - DateTimeConstants.MILLIS_PER_HOUR
484:AOR:*(int,int):/(int,int):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1191:3 * DateTimeConstants.MILLIS_PER_HOUR |==> 3 / DateTimeConstants.MILLIS_PER_HOUR
485:AOR:+(long,long):%(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1191:instant + 3 * DateTimeConstants.MILLIS_PER_HOUR |==> instant % (3 * DateTimeConstants.MILLIS_PER_HOUR)
486:AOR:+(long,long):*(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1191:instant + 3 * DateTimeConstants.MILLIS_PER_HOUR |==> instant * (3 * DateTimeConstants.MILLIS_PER_HOUR)
487:AOR:+(long,long):-(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1191:instant + 3 * DateTimeConstants.MILLIS_PER_HOUR |==> instant - 3 * DateTimeConstants.MILLIS_PER_HOUR
488:AOR:+(long,long):/(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1191:instant + 3 * DateTimeConstants.MILLIS_PER_HOUR |==> instant / (3 * DateTimeConstants.MILLIS_PER_HOUR)
489:ROR:<=(long,long):<(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1194:offsetBefore <= offsetAfter |==> offsetBefore < offsetAfter
490:ROR:<=(long,long):==(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1194:offsetBefore <= offsetAfter |==> offsetBefore == offsetAfter
491:ROR:<=(long,long):TRUE(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1194:offsetBefore <= offsetAfter |==> true
492:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1199:offsetBefore - offsetAfter |==> offsetBefore % offsetAfter
493:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1199:offsetBefore - offsetAfter |==> offsetBefore * offsetAfter
494:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1199:offsetBefore - offsetAfter |==> offsetBefore + offsetAfter
495:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1199:offsetBefore - offsetAfter |==> offsetBefore / offsetAfter
496:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1201:transition - diff |==> transition % diff
497:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1201:transition - diff |==> transition * diff
498:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1201:transition - diff |==> transition + diff
499:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1201:transition - diff |==> transition / diff
500:AOR:+(long,long):%(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1202:transition + diff |==> transition % diff
501:AOR:+(long,long):*(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1202:transition + diff |==> transition * diff
502:AOR:+(long,long):-(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1202:transition + diff |==> transition - diff
503:AOR:+(long,long):/(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1202:transition + diff |==> transition / diff
504:ROR:<(long,long):!=(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1203:instant < overlapStart |==> instant != overlapStart
505:ROR:<(long,long):<=(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1203:instant < overlapStart |==> instant <= overlapStart
506:ROR:<(long,long):FALSE(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1203:instant < overlapStart |==> false
507:ROR:>=(long,long):==(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1203:instant >= overlapEnd |==> instant == overlapEnd
508:ROR:>=(long,long):>(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1203:instant >= overlapEnd |==> instant > overlapEnd
509:ROR:>=(long,long):TRUE(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1203:instant >= overlapEnd |==> true
510:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1203:instant < overlapStart || instant >= overlapEnd |==> instant < overlapStart != instant >= overlapEnd
511:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1203:instant < overlapStart || instant >= overlapEnd |==> instant < overlapStart
512:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1203:instant < overlapStart || instant >= overlapEnd |==> instant >= overlapEnd
513:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1203:instant < overlapStart || instant >= overlapEnd |==> true
514:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1208:instant - overlapStart |==> instant % overlapStart
515:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1208:instant - overlapStart |==> instant * overlapStart
516:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1208:instant - overlapStart |==> instant + overlapStart
517:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1208:instant - overlapStart |==> instant / overlapStart
518:ROR:>=(long,long):==(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1209:afterStart >= diff |==> afterStart == diff
519:ROR:>=(long,long):>(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1209:afterStart >= diff |==> afterStart > diff
520:ROR:>=(long,long):TRUE(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1209:afterStart >= diff |==> true
521:COR:earlierOrLater:TRUE:org.joda.time.DateTimeZone@adjustOffset(long,boolean):1211:earlierOrLater |==> false
522:COR:earlierOrLater:FALSE:org.joda.time.DateTimeZone@adjustOffset(long,boolean):1211:earlierOrLater |==> true
523:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1211:instant - diff |==> instant % diff
524:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1211:instant - diff |==> instant * diff
525:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1211:instant - diff |==> instant + diff
526:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1211:instant - diff |==> instant / diff
527:COR:earlierOrLater:TRUE:org.joda.time.DateTimeZone@adjustOffset(long,boolean):1214:earlierOrLater |==> false
528:COR:earlierOrLater:FALSE:org.joda.time.DateTimeZone@adjustOffset(long,boolean):1214:earlierOrLater |==> true
529:AOR:+(long,long):%(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1214:instant + diff |==> instant % diff
530:AOR:+(long,long):*(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1214:instant + diff |==> instant * diff
531:AOR:+(long,long):-(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1214:instant + diff |==> instant - diff
532:AOR:+(long,long):/(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1214:instant + diff |==> instant / diff
533:LVR:POS:0:org.joda.time.DateTimeZone@hashCode():1273:57 |==> 0
534:LVR:POS:NEG:org.joda.time.DateTimeZone@hashCode():1273:57 |==> -57
535:AOR:+(int,int):%(int,int):org.joda.time.DateTimeZone@hashCode():1273:57 + getID().hashCode() |==> 57 % getID().hashCode()
536:AOR:+(int,int):*(int,int):org.joda.time.DateTimeZone@hashCode():1273:57 + getID().hashCode() |==> 57 * getID().hashCode()
537:AOR:+(int,int):-(int,int):org.joda.time.DateTimeZone@hashCode():1273:57 + getID().hashCode() |==> 57 - getID().hashCode()
538:AOR:+(int,int):/(int,int):org.joda.time.DateTimeZone@hashCode():1273:57 + getID().hashCode() |==> 57 / getID().hashCode()
539:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone$Stub@<init>(java.lang.String):1308:iID = id |==> <NO-OP>
540:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone$Stub@writeObject(java.io.ObjectOutputStream):1312:out.writeUTF(iID) |==> <NO-OP>
541:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone$Stub@readObject(java.io.ObjectInputStream):1316:iID = in.readUTF() |==> <NO-OP>
542:LVR:0:POS:org.joda.time.chrono.BaseChronology@getDateTimeMillis(int,int,int,int):102:0 |==> 1
543:LVR:0:NEG:org.joda.time.chrono.BaseChronology@getDateTimeMillis(int,int,int,int):102:0 |==> -1
544:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BaseChronology@getDateTimeMillis(int,int,int,int):103:instant = monthOfYear().set(instant, monthOfYear) |==> <NO-OP>
545:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BaseChronology@getDateTimeMillis(int,int,int,int):104:instant = dayOfMonth().set(instant, dayOfMonth) |==> <NO-OP>
546:LVR:0:POS:org.joda.time.chrono.BaseChronology@getDateTimeMillis(int,int,int,int,int,int,int):132:0 |==> 1
547:LVR:0:NEG:org.joda.time.chrono.BaseChronology@getDateTimeMillis(int,int,int,int,int,int,int):132:0 |==> -1
548:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BaseChronology@getDateTimeMillis(int,int,int,int,int,int,int):133:instant = monthOfYear().set(instant, monthOfYear) |==> <NO-OP>
549:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BaseChronology@getDateTimeMillis(int,int,int,int,int,int,int):134:instant = dayOfMonth().set(instant, dayOfMonth) |==> <NO-OP>
550:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BaseChronology@getDateTimeMillis(int,int,int,int,int,int,int):135:instant = hourOfDay().set(instant, hourOfDay) |==> <NO-OP>
551:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BaseChronology@getDateTimeMillis(int,int,int,int,int,int,int):136:instant = minuteOfHour().set(instant, minuteOfHour) |==> <NO-OP>
552:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BaseChronology@getDateTimeMillis(int,int,int,int,int,int,int):137:instant = secondOfMinute().set(instant, secondOfMinute) |==> <NO-OP>
553:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BaseChronology@getDateTimeMillis(long,int,int,int,int):163:instant = hourOfDay().set(instant, hourOfDay) |==> <NO-OP>
554:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BaseChronology@getDateTimeMillis(long,int,int,int,int):164:instant = minuteOfHour().set(instant, minuteOfHour) |==> <NO-OP>
555:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BaseChronology@getDateTimeMillis(long,int,int,int,int):165:instant = secondOfMinute().set(instant, secondOfMinute) |==> <NO-OP>
556:LVR:0:POS:org.joda.time.chrono.BaseChronology@validate(org.joda.time.ReadablePartial,int[]):184:0 |==> 1
557:LVR:0:NEG:org.joda.time.chrono.BaseChronology@validate(org.joda.time.ReadablePartial,int[]):184:0 |==> -1
558:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BaseChronology@validate(org.joda.time.ReadablePartial,int[]):184:i < size |==> i != size
559:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BaseChronology@validate(org.joda.time.ReadablePartial,int[]):184:i < size |==> i <= size
560:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BaseChronology@validate(org.joda.time.ReadablePartial,int[]):184:i < size |==> false
561:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BaseChronology@validate(org.joda.time.ReadablePartial,int[]):187:value < field.getMinimumValue() |==> value != field.getMinimumValue()
562:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BaseChronology@validate(org.joda.time.ReadablePartial,int[]):187:value < field.getMinimumValue() |==> value <= field.getMinimumValue()
563:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BaseChronology@validate(org.joda.time.ReadablePartial,int[]):187:value < field.getMinimumValue() |==> false
564:ROR:>(int,int):!=(int,int):org.joda.time.chrono.BaseChronology@validate(org.joda.time.ReadablePartial,int[]):192:value > field.getMaximumValue() |==> value != field.getMaximumValue()
565:ROR:>(int,int):>=(int,int):org.joda.time.chrono.BaseChronology@validate(org.joda.time.ReadablePartial,int[]):192:value > field.getMaximumValue() |==> value >= field.getMaximumValue()
566:ROR:>(int,int):FALSE(int,int):org.joda.time.chrono.BaseChronology@validate(org.joda.time.ReadablePartial,int[]):192:value > field.getMaximumValue() |==> false
567:LVR:0:POS:org.joda.time.chrono.BaseChronology@validate(org.joda.time.ReadablePartial,int[]):199:0 |==> 1
568:LVR:0:NEG:org.joda.time.chrono.BaseChronology@validate(org.joda.time.ReadablePartial,int[]):199:0 |==> -1
569:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BaseChronology@validate(org.joda.time.ReadablePartial,int[]):199:i < size |==> i != size
570:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BaseChronology@validate(org.joda.time.ReadablePartial,int[]):199:i < size |==> i <= size
571:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BaseChronology@validate(org.joda.time.ReadablePartial,int[]):199:i < size |==> false
572:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BaseChronology@validate(org.joda.time.ReadablePartial,int[]):202:value < field.getMinimumValue(partial, values) |==> value != field.getMinimumValue(partial, values)
573:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BaseChronology@validate(org.joda.time.ReadablePartial,int[]):202:value < field.getMinimumValue(partial, values) |==> value <= field.getMinimumValue(partial, values)
574:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BaseChronology@validate(org.joda.time.ReadablePartial,int[]):202:value < field.getMinimumValue(partial, values) |==> false
575:ROR:>(int,int):!=(int,int):org.joda.time.chrono.BaseChronology@validate(org.joda.time.ReadablePartial,int[]):207:value > field.getMaximumValue(partial, values) |==> value != field.getMaximumValue(partial, values)
576:ROR:>(int,int):>=(int,int):org.joda.time.chrono.BaseChronology@validate(org.joda.time.ReadablePartial,int[]):207:value > field.getMaximumValue(partial, values) |==> value >= field.getMaximumValue(partial, values)
577:ROR:>(int,int):FALSE(int,int):org.joda.time.chrono.BaseChronology@validate(org.joda.time.ReadablePartial,int[]):207:value > field.getMaximumValue(partial, values) |==> false
578:LVR:0:POS:org.joda.time.chrono.BaseChronology@get(org.joda.time.ReadablePartial,long):225:0 |==> 1
579:LVR:0:NEG:org.joda.time.chrono.BaseChronology@get(org.joda.time.ReadablePartial,long):225:0 |==> -1
580:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BaseChronology@get(org.joda.time.ReadablePartial,long):225:i < size |==> i != size
581:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BaseChronology@get(org.joda.time.ReadablePartial,long):225:i < size |==> i <= size
582:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BaseChronology@get(org.joda.time.ReadablePartial,long):225:i < size |==> false
583:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BaseChronology@get(org.joda.time.ReadablePartial,long):226:values[i] = partial.getFieldType(i).getField(this).get(instant) |==> <NO-OP>
584:LVR:0:POS:org.joda.time.chrono.BaseChronology@set(org.joda.time.ReadablePartial,long):239:0 |==> 1
585:LVR:0:NEG:org.joda.time.chrono.BaseChronology@set(org.joda.time.ReadablePartial,long):239:0 |==> -1
586:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BaseChronology@set(org.joda.time.ReadablePartial,long):239:i < isize |==> i != isize
587:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BaseChronology@set(org.joda.time.ReadablePartial,long):239:i < isize |==> i <= isize
588:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BaseChronology@set(org.joda.time.ReadablePartial,long):239:i < isize |==> false
589:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BaseChronology@set(org.joda.time.ReadablePartial,long):240:instant = partial.getFieldType(i).getField(this).set(instant, partial.getValue(i)) |==> <NO-OP>
590:ROR:!=(long,long):<(long,long):org.joda.time.chrono.BaseChronology@get(org.joda.time.ReadablePeriod,long,long):257:startInstant != endInstant |==> startInstant < endInstant
591:ROR:!=(long,long):>(long,long):org.joda.time.chrono.BaseChronology@get(org.joda.time.ReadablePeriod,long,long):257:startInstant != endInstant |==> startInstant > endInstant
592:ROR:!=(long,long):TRUE(long,long):org.joda.time.chrono.BaseChronology@get(org.joda.time.ReadablePeriod,long,long):257:startInstant != endInstant |==> true
593:LVR:0:POS:org.joda.time.chrono.BaseChronology@get(org.joda.time.ReadablePeriod,long,long):258:0 |==> 1
594:LVR:0:NEG:org.joda.time.chrono.BaseChronology@get(org.joda.time.ReadablePeriod,long,long):258:0 |==> -1
595:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BaseChronology@get(org.joda.time.ReadablePeriod,long,long):258:i < size |==> i != size
596:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BaseChronology@get(org.joda.time.ReadablePeriod,long,long):258:i < size |==> i <= size
597:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BaseChronology@get(org.joda.time.ReadablePeriod,long,long):258:i < size |==> false
598:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BaseChronology@get(org.joda.time.ReadablePeriod,long,long):261:startInstant = field.add(startInstant, value) |==> <NO-OP>
599:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BaseChronology@get(org.joda.time.ReadablePeriod,long,long):262:values[i] = value |==> <NO-OP>
600:LVR:0:POS:org.joda.time.chrono.BaseChronology@get(org.joda.time.ReadablePeriod,long):278:0 |==> 1
601:LVR:0:NEG:org.joda.time.chrono.BaseChronology@get(org.joda.time.ReadablePeriod,long):278:0 |==> -1
602:ROR:!=(long,long):<(long,long):org.joda.time.chrono.BaseChronology@get(org.joda.time.ReadablePeriod,long):278:duration != 0 |==> duration < 0
603:ROR:!=(long,long):>(long,long):org.joda.time.chrono.BaseChronology@get(org.joda.time.ReadablePeriod,long):278:duration != 0 |==> duration > 0
604:ROR:!=(long,long):TRUE(long,long):org.joda.time.chrono.BaseChronology@get(org.joda.time.ReadablePeriod,long):278:duration != 0 |==> true
605:LVR:0:POS:org.joda.time.chrono.BaseChronology@get(org.joda.time.ReadablePeriod,long):279:0 |==> 1
606:LVR:0:NEG:org.joda.time.chrono.BaseChronology@get(org.joda.time.ReadablePeriod,long):279:0 |==> -1
607:LVR:0:POS:org.joda.time.chrono.BaseChronology@get(org.joda.time.ReadablePeriod,long):280:0 |==> 1
608:LVR:0:NEG:org.joda.time.chrono.BaseChronology@get(org.joda.time.ReadablePeriod,long):280:0 |==> -1
609:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BaseChronology@get(org.joda.time.ReadablePeriod,long):280:i < size |==> i != size
610:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BaseChronology@get(org.joda.time.ReadablePeriod,long):280:i < size |==> i <= size
611:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BaseChronology@get(org.joda.time.ReadablePeriod,long):280:i < size |==> false
612:COR:field.isPrecise():TRUE:org.joda.time.chrono.BaseChronology@get(org.joda.time.ReadablePeriod,long):282:field.isPrecise() |==> false
613:COR:field.isPrecise():FALSE:org.joda.time.chrono.BaseChronology@get(org.joda.time.ReadablePeriod,long):282:field.isPrecise() |==> true
614:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BaseChronology@get(org.joda.time.ReadablePeriod,long):284:current = field.add(current, value) |==> <NO-OP>
615:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BaseChronology@get(org.joda.time.ReadablePeriod,long):285:values[i] = value |==> <NO-OP>
616:LVR:0:POS:org.joda.time.chrono.BaseChronology@add(org.joda.time.ReadablePeriod,long,int):301:0 |==> 1
617:LVR:0:NEG:org.joda.time.chrono.BaseChronology@add(org.joda.time.ReadablePeriod,long,int):301:0 |==> -1
618:ROR:!=(int,int):<(int,int):org.joda.time.chrono.BaseChronology@add(org.joda.time.ReadablePeriod,long,int):301:scalar != 0 |==> scalar < 0
619:ROR:!=(int,int):>(int,int):org.joda.time.chrono.BaseChronology@add(org.joda.time.ReadablePeriod,long,int):301:scalar != 0 |==> scalar > 0
620:ROR:!=(int,int):TRUE(int,int):org.joda.time.chrono.BaseChronology@add(org.joda.time.ReadablePeriod,long,int):301:scalar != 0 |==> true
621:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.BaseChronology@add(org.joda.time.ReadablePeriod,long,int):301:period != null |==> true
622:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.BaseChronology@add(org.joda.time.ReadablePeriod,long,int):301:scalar != 0 && period != null |==> scalar != 0 == (period != null)
623:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.BaseChronology@add(org.joda.time.ReadablePeriod,long,int):301:scalar != 0 && period != null |==> false
624:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.BaseChronology@add(org.joda.time.ReadablePeriod,long,int):301:scalar != 0 && period != null |==> scalar != 0
625:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.BaseChronology@add(org.joda.time.ReadablePeriod,long,int):301:scalar != 0 && period != null |==> period != null
626:LVR:0:POS:org.joda.time.chrono.BaseChronology@add(org.joda.time.ReadablePeriod,long,int):302:0 |==> 1
627:LVR:0:NEG:org.joda.time.chrono.BaseChronology@add(org.joda.time.ReadablePeriod,long,int):302:0 |==> -1
628:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BaseChronology@add(org.joda.time.ReadablePeriod,long,int):302:i < isize |==> i != isize
629:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BaseChronology@add(org.joda.time.ReadablePeriod,long,int):302:i < isize |==> i <= isize
630:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BaseChronology@add(org.joda.time.ReadablePeriod,long,int):302:i < isize |==> false
631:LVR:0:POS:org.joda.time.chrono.BaseChronology@add(org.joda.time.ReadablePeriod,long,int):304:0 |==> 1
632:LVR:0:NEG:org.joda.time.chrono.BaseChronology@add(org.joda.time.ReadablePeriod,long,int):304:0 |==> -1
633:ROR:!=(long,long):<(long,long):org.joda.time.chrono.BaseChronology@add(org.joda.time.ReadablePeriod,long,int):304:value != 0 |==> value < 0
634:ROR:!=(long,long):>(long,long):org.joda.time.chrono.BaseChronology@add(org.joda.time.ReadablePeriod,long,int):304:value != 0 |==> value > 0
635:ROR:!=(long,long):TRUE(long,long):org.joda.time.chrono.BaseChronology@add(org.joda.time.ReadablePeriod,long,int):304:value != 0 |==> true
636:AOR:*(long,long):%(long,long):org.joda.time.chrono.BaseChronology@add(org.joda.time.ReadablePeriod,long,int):305:value * scalar |==> value % scalar
637:AOR:*(long,long):+(long,long):org.joda.time.chrono.BaseChronology@add(org.joda.time.ReadablePeriod,long,int):305:value * scalar |==> value + scalar
638:AOR:*(long,long):-(long,long):org.joda.time.chrono.BaseChronology@add(org.joda.time.ReadablePeriod,long,int):305:value * scalar |==> value - scalar
639:AOR:*(long,long):/(long,long):org.joda.time.chrono.BaseChronology@add(org.joda.time.ReadablePeriod,long,int):305:value * scalar |==> value / scalar
640:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BaseChronology@add(org.joda.time.ReadablePeriod,long,int):305:instant = period.getFieldType(i).getField(this).add(instant, value * scalar) |==> <NO-OP>
641:LVR:0:POS:org.joda.time.chrono.BaseChronology@add(long,long,int):322:0 |==> 1
642:LVR:0:NEG:org.joda.time.chrono.BaseChronology@add(long,long,int):322:0 |==> -1
643:ROR:==(long,long):<=(long,long):org.joda.time.chrono.BaseChronology@add(long,long,int):322:duration == 0 |==> duration <= 0
644:ROR:==(long,long):>=(long,long):org.joda.time.chrono.BaseChronology@add(long,long,int):322:duration == 0 |==> duration >= 0
645:ROR:==(long,long):FALSE(long,long):org.joda.time.chrono.BaseChronology@add(long,long,int):322:duration == 0 |==> false
646:LVR:0:POS:org.joda.time.chrono.BaseChronology@add(long,long,int):322:0 |==> 1
647:LVR:0:NEG:org.joda.time.chrono.BaseChronology@add(long,long,int):322:0 |==> -1
648:ROR:==(int,int):<=(int,int):org.joda.time.chrono.BaseChronology@add(long,long,int):322:scalar == 0 |==> scalar <= 0
649:ROR:==(int,int):>=(int,int):org.joda.time.chrono.BaseChronology@add(long,long,int):322:scalar == 0 |==> scalar >= 0
650:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.BaseChronology@add(long,long,int):322:scalar == 0 |==> false
651:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.chrono.BaseChronology@add(long,long,int):322:duration == 0 || scalar == 0 |==> duration == 0 != (scalar == 0)
652:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.BaseChronology@add(long,long,int):322:duration == 0 || scalar == 0 |==> duration == 0
653:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.BaseChronology@add(long,long,int):322:duration == 0 || scalar == 0 |==> scalar == 0
654:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.chrono.BaseChronology@add(long,long,int):322:duration == 0 || scalar == 0 |==> true
655:ROR:==(int,int):<=(int,int):org.joda.time.DurationField@subtract(long,int):209:value == Integer.MIN_VALUE |==> value <= Integer.MIN_VALUE
656:ROR:==(int,int):>=(int,int):org.joda.time.DurationField@subtract(long,int):209:value == Integer.MIN_VALUE |==> value >= Integer.MIN_VALUE
657:ROR:==(int,int):FALSE(int,int):org.joda.time.DurationField@subtract(long,int):209:value == Integer.MIN_VALUE |==> false
658:ORU:-(int):+(int):org.joda.time.DurationField@subtract(long,int):212:-value |==> +value
659:ORU:-(int):~(int):org.joda.time.DurationField@subtract(long,int):212:-value |==> ~value
660:ROR:==(long,long):<=(long,long):org.joda.time.DurationField@subtract(long,long):224:value == Long.MIN_VALUE |==> value <= Long.MIN_VALUE
661:ROR:==(long,long):>=(long,long):org.joda.time.DurationField@subtract(long,long):224:value == Long.MIN_VALUE |==> value >= Long.MIN_VALUE
662:ROR:==(long,long):FALSE(long,long):org.joda.time.DurationField@subtract(long,long):224:value == Long.MIN_VALUE |==> false
663:ORU:-(long):+(long):org.joda.time.DurationField@subtract(long,long):227:-value |==> +value
664:ORU:-(long):~(long):org.joda.time.DurationField@subtract(long,long):227:-value |==> ~value
665:LVR:FALSE:TRUE:org.joda.time.format.DateTimeFormatter@<init>(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser):122:false |==> true
666:LVR:POS:0:org.joda.time.format.DateTimeFormatter@<init>(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser):126:2000 |==> 0
667:LVR:POS:NEG:org.joda.time.format.DateTimeFormatter@<init>(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser):126:2000 |==> -2000
668:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatter@isPrinter():155:iPrinter != null |==> true
669:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatter@isParser():173:iParser != null |==> true
670:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatter@withLocale(java.util.Locale):198:locale == getLocale() |==> false
671:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatter@withLocale(java.util.Locale):198:locale != null |==> true
672:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatter@withLocale(java.util.Locale):198:locale != null && locale.equals(getLocale()) |==> locale != null == locale.equals(getLocale())
673:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatter@withLocale(java.util.Locale):198:locale != null && locale.equals(getLocale()) |==> false
674:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatter@withLocale(java.util.Locale):198:locale != null && locale.equals(getLocale()) |==> locale != null
675:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatter@withLocale(java.util.Locale):198:locale != null && locale.equals(getLocale()) |==> locale.equals(getLocale())
676:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatter@withLocale(java.util.Locale):198:locale == getLocale() || (locale != null && locale.equals(getLocale())) |==> locale == getLocale() != (locale != null && locale.equals(getLocale()))
677:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatter@withLocale(java.util.Locale):198:locale == getLocale() || (locale != null && locale.equals(getLocale())) |==> locale == getLocale()
678:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatter@withLocale(java.util.Locale):198:locale == getLocale() || (locale != null && locale.equals(getLocale())) |==> (locale != null && locale.equals(getLocale()))
679:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatter@withLocale(java.util.Locale):198:locale == getLocale() || (locale != null && locale.equals(getLocale())) |==> true
680:LVR:TRUE:FALSE:org.joda.time.format.DateTimeFormatter@withOffsetParsed():231:true |==> false
681:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatter@withOffsetParsed():231:iOffsetParsed == true |==> false
682:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatter@withOffsetParsed():231:iOffsetParsed == true |==> iOffsetParsed
683:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatter@withOffsetParsed():231:iOffsetParsed == true |==> true
684:LVR:TRUE:FALSE:org.joda.time.format.DateTimeFormatter@withOffsetParsed():235:true |==> false
685:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatter@withChronology(org.joda.time.Chronology):266:iChrono == chrono |==> false
686:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatter@withZone(org.joda.time.DateTimeZone):330:iZone == zone |==> false
687:LVR:FALSE:TRUE:org.joda.time.format.DateTimeFormatter@withZone(org.joda.time.DateTimeZone):334:false |==> true
688:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatter@withPivotYear(java.lang.Integer):377:iPivotYear == pivotYear |==> false
689:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatter@withPivotYear(java.lang.Integer):377:iPivotYear != null |==> true
690:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatter@withPivotYear(java.lang.Integer):377:iPivotYear != null && iPivotYear.equals(pivotYear) |==> iPivotYear != null == iPivotYear.equals(pivotYear)
691:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatter@withPivotYear(java.lang.Integer):377:iPivotYear != null && iPivotYear.equals(pivotYear) |==> false
692:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatter@withPivotYear(java.lang.Integer):377:iPivotYear != null && iPivotYear.equals(pivotYear) |==> iPivotYear != null
693:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatter@withPivotYear(java.lang.Integer):377:iPivotYear != null && iPivotYear.equals(pivotYear) |==> iPivotYear.equals(pivotYear)
694:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatter@withPivotYear(java.lang.Integer):377:iPivotYear == pivotYear || (iPivotYear != null && iPivotYear.equals(pivotYear)) |==> iPivotYear == pivotYear != (iPivotYear != null && iPivotYear.equals(pivotYear))
695:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatter@withPivotYear(java.lang.Integer):377:iPivotYear == pivotYear || (iPivotYear != null && iPivotYear.equals(pivotYear)) |==> iPivotYear == pivotYear
696:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatter@withPivotYear(java.lang.Integer):377:iPivotYear == pivotYear || (iPivotYear != null && iPivotYear.equals(pivotYear)) |==> (iPivotYear != null && iPivotYear.equals(pivotYear))
697:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatter@withPivotYear(java.lang.Integer):377:iPivotYear == pivotYear || (iPivotYear != null && iPivotYear.equals(pivotYear)) |==> true
698:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadableInstant):471:printTo(buf, millis, chrono) |==> <NO-OP>
699:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatter@printTo(java.io.Writer,org.joda.time.ReadableInstant):483:printTo(out, millis, chrono) |==> <NO-OP>
700:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatter@printTo(java.lang.Appendable,org.joda.time.ReadableInstant):494:appendable.append(print(instant)) |==> <NO-OP>
701:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatter@printTo(java.lang.StringBuffer,long):506:printTo(buf, instant, null) |==> <NO-OP>
702:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatter@printTo(java.io.Writer,long):517:printTo(out, instant, null) |==> <NO-OP>
703:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatter@printTo(java.lang.Appendable,long):529:appendable.append(print(instant)) |==> <NO-OP>
704:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial):544:partial == null |==> false
705:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial):547:printer.printTo(buf, partial, iLocale) |==> <NO-OP>
706:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatter@printTo(java.io.Writer,org.joda.time.ReadablePartial):561:partial == null |==> false
707:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatter@printTo(java.io.Writer,org.joda.time.ReadablePartial):564:printer.printTo(out, partial, iLocale) |==> <NO-OP>
708:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatter@printTo(java.lang.Appendable,org.joda.time.ReadablePartial):578:appendable.append(print(partial)) |==> <NO-OP>
709:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatter@print(org.joda.time.ReadableInstant):593:printTo(buf, instant) |==> <NO-OP>
710:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatter@print(long):608:printTo(buf, instant) |==> <NO-OP>
711:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatter@print(org.joda.time.ReadablePartial):623:printTo(buf, partial) |==> <NO-OP>
712:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatter@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology):629:chrono = selectChronology(chrono) |==> <NO-OP>
713:AOR:+(long,long):%(long,long):org.joda.time.format.DateTimeFormatter@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology):634:instant + offset |==> instant % offset
714:AOR:+(long,long):*(long,long):org.joda.time.format.DateTimeFormatter@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology):634:instant + offset |==> instant * offset
715:AOR:+(long,long):-(long,long):org.joda.time.format.DateTimeFormatter@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology):634:instant + offset |==> instant - offset
716:AOR:+(long,long):/(long,long):org.joda.time.format.DateTimeFormatter@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology):634:instant + offset |==> instant / offset
717:LOR:^(long,long):&(long,long):org.joda.time.format.DateTimeFormatter@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology):635:instant ^ adjustedInstant |==> instant & adjustedInstant
718:LOR:^(long,long):|(long,long):org.joda.time.format.DateTimeFormatter@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology):635:instant ^ adjustedInstant |==> instant | adjustedInstant
719:LVR:0:POS:org.joda.time.format.DateTimeFormatter@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology):635:0 |==> 1
720:LVR:0:NEG:org.joda.time.format.DateTimeFormatter@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology):635:0 |==> -1
721:ROR:<(long,long):!=(long,long):org.joda.time.format.DateTimeFormatter@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology):635:(instant ^ adjustedInstant) < 0 |==> (instant ^ adjustedInstant) != 0
722:ROR:<(long,long):<=(long,long):org.joda.time.format.DateTimeFormatter@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology):635:(instant ^ adjustedInstant) < 0 |==> (instant ^ adjustedInstant) <= 0
723:ROR:<(long,long):FALSE(long,long):org.joda.time.format.DateTimeFormatter@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology):635:(instant ^ adjustedInstant) < 0 |==> false
724:LOR:^(long,long):&(long,long):org.joda.time.format.DateTimeFormatter@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology):635:instant ^ offset |==> instant & offset
725:LOR:^(long,long):|(long,long):org.joda.time.format.DateTimeFormatter@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology):635:instant ^ offset |==> instant | offset
726:LVR:0:POS:org.joda.time.format.DateTimeFormatter@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology):635:0 |==> 1
727:LVR:0:NEG:org.joda.time.format.DateTimeFormatter@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology):635:0 |==> -1
728:ROR:>=(long,long):==(long,long):org.joda.time.format.DateTimeFormatter@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology):635:(instant ^ offset) >= 0 |==> (instant ^ offset) == 0
729:ROR:>=(long,long):>(long,long):org.joda.time.format.DateTimeFormatter@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology):635:(instant ^ offset) >= 0 |==> (instant ^ offset) > 0
730:ROR:>=(long,long):TRUE(long,long):org.joda.time.format.DateTimeFormatter@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology):635:(instant ^ offset) >= 0 |==> true
731:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatter@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology):635:(instant ^ adjustedInstant) < 0 && (instant ^ offset) >= 0 |==> (instant ^ adjustedInstant) < 0 == (instant ^ offset) >= 0
732:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatter@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology):635:(instant ^ adjustedInstant) < 0 && (instant ^ offset) >= 0 |==> false
733:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatter@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology):635:(instant ^ adjustedInstant) < 0 && (instant ^ offset) >= 0 |==> (instant ^ adjustedInstant) < 0
734:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatter@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology):635:(instant ^ adjustedInstant) < 0 && (instant ^ offset) >= 0 |==> (instant ^ offset) >= 0
735:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatter@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology):637:zone = DateTimeZone.UTC |==> <NO-OP>
736:LVR:0:POS:org.joda.time.format.DateTimeFormatter@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology):638:0 |==> 1
737:LVR:0:NEG:org.joda.time.format.DateTimeFormatter@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology):638:0 |==> -1
738:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatter@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology):638:offset = 0 |==> <NO-OP>
739:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatter@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology):639:adjustedInstant = instant |==> <NO-OP>
740:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatter@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology):641:printer.printTo(buf, adjustedInstant, chrono.withUTC(), offset, zone, iLocale) |==> <NO-OP>
741:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatter@printTo(java.io.Writer,long,org.joda.time.Chronology):646:chrono = selectChronology(chrono) |==> <NO-OP>
742:AOR:+(long,long):%(long,long):org.joda.time.format.DateTimeFormatter@printTo(java.io.Writer,long,org.joda.time.Chronology):651:instant + offset |==> instant % offset
743:AOR:+(long,long):*(long,long):org.joda.time.format.DateTimeFormatter@printTo(java.io.Writer,long,org.joda.time.Chronology):651:instant + offset |==> instant * offset
744:AOR:+(long,long):-(long,long):org.joda.time.format.DateTimeFormatter@printTo(java.io.Writer,long,org.joda.time.Chronology):651:instant + offset |==> instant - offset
745:AOR:+(long,long):/(long,long):org.joda.time.format.DateTimeFormatter@printTo(java.io.Writer,long,org.joda.time.Chronology):651:instant + offset |==> instant / offset
746:LOR:^(long,long):&(long,long):org.joda.time.format.DateTimeFormatter@printTo(java.io.Writer,long,org.joda.time.Chronology):652:instant ^ adjustedInstant |==> instant & adjustedInstant
747:LOR:^(long,long):|(long,long):org.joda.time.format.DateTimeFormatter@printTo(java.io.Writer,long,org.joda.time.Chronology):652:instant ^ adjustedInstant |==> instant | adjustedInstant
748:LVR:0:POS:org.joda.time.format.DateTimeFormatter@printTo(java.io.Writer,long,org.joda.time.Chronology):652:0 |==> 1
749:LVR:0:NEG:org.joda.time.format.DateTimeFormatter@printTo(java.io.Writer,long,org.joda.time.Chronology):652:0 |==> -1
750:ROR:<(long,long):!=(long,long):org.joda.time.format.DateTimeFormatter@printTo(java.io.Writer,long,org.joda.time.Chronology):652:(instant ^ adjustedInstant) < 0 |==> (instant ^ adjustedInstant) != 0
751:ROR:<(long,long):<=(long,long):org.joda.time.format.DateTimeFormatter@printTo(java.io.Writer,long,org.joda.time.Chronology):652:(instant ^ adjustedInstant) < 0 |==> (instant ^ adjustedInstant) <= 0
752:ROR:<(long,long):FALSE(long,long):org.joda.time.format.DateTimeFormatter@printTo(java.io.Writer,long,org.joda.time.Chronology):652:(instant ^ adjustedInstant) < 0 |==> false
753:LOR:^(long,long):&(long,long):org.joda.time.format.DateTimeFormatter@printTo(java.io.Writer,long,org.joda.time.Chronology):652:instant ^ offset |==> instant & offset
754:LOR:^(long,long):|(long,long):org.joda.time.format.DateTimeFormatter@printTo(java.io.Writer,long,org.joda.time.Chronology):652:instant ^ offset |==> instant | offset
755:LVR:0:POS:org.joda.time.format.DateTimeFormatter@printTo(java.io.Writer,long,org.joda.time.Chronology):652:0 |==> 1
756:LVR:0:NEG:org.joda.time.format.DateTimeFormatter@printTo(java.io.Writer,long,org.joda.time.Chronology):652:0 |==> -1
757:ROR:>=(long,long):==(long,long):org.joda.time.format.DateTimeFormatter@printTo(java.io.Writer,long,org.joda.time.Chronology):652:(instant ^ offset) >= 0 |==> (instant ^ offset) == 0
758:ROR:>=(long,long):>(long,long):org.joda.time.format.DateTimeFormatter@printTo(java.io.Writer,long,org.joda.time.Chronology):652:(instant ^ offset) >= 0 |==> (instant ^ offset) > 0
759:ROR:>=(long,long):TRUE(long,long):org.joda.time.format.DateTimeFormatter@printTo(java.io.Writer,long,org.joda.time.Chronology):652:(instant ^ offset) >= 0 |==> true
760:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatter@printTo(java.io.Writer,long,org.joda.time.Chronology):652:(instant ^ adjustedInstant) < 0 && (instant ^ offset) >= 0 |==> (instant ^ adjustedInstant) < 0 == (instant ^ offset) >= 0
761:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatter@printTo(java.io.Writer,long,org.joda.time.Chronology):652:(instant ^ adjustedInstant) < 0 && (instant ^ offset) >= 0 |==> false
762:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatter@printTo(java.io.Writer,long,org.joda.time.Chronology):652:(instant ^ adjustedInstant) < 0 && (instant ^ offset) >= 0 |==> (instant ^ adjustedInstant) < 0
763:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatter@printTo(java.io.Writer,long,org.joda.time.Chronology):652:(instant ^ adjustedInstant) < 0 && (instant ^ offset) >= 0 |==> (instant ^ offset) >= 0
764:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatter@printTo(java.io.Writer,long,org.joda.time.Chronology):654:zone = DateTimeZone.UTC |==> <NO-OP>
765:LVR:0:POS:org.joda.time.format.DateTimeFormatter@printTo(java.io.Writer,long,org.joda.time.Chronology):655:0 |==> 1
766:LVR:0:NEG:org.joda.time.format.DateTimeFormatter@printTo(java.io.Writer,long,org.joda.time.Chronology):655:0 |==> -1
767:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatter@printTo(java.io.Writer,long,org.joda.time.Chronology):655:offset = 0 |==> <NO-OP>
768:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatter@printTo(java.io.Writer,long,org.joda.time.Chronology):656:adjustedInstant = instant |==> <NO-OP>
769:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatter@printTo(java.io.Writer,long,org.joda.time.Chronology):658:printer.printTo(buf, adjustedInstant, chrono.withUTC(), offset, zone, iLocale) |==> <NO-OP>
770:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatter@requirePrinter():668:printer == null |==> false
771:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatter@parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int):710:instant == null |==> false
772:AOR:+(long,long):%(long,long):org.joda.time.format.DateTimeFormatter@parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int):717:instantMillis + chrono.getZone().getOffset(instantMillis) |==> instantMillis % chrono.getZone().getOffset(instantMillis)
773:AOR:+(long,long):*(long,long):org.joda.time.format.DateTimeFormatter@parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int):717:instantMillis + chrono.getZone().getOffset(instantMillis) |==> instantMillis * chrono.getZone().getOffset(instantMillis)
774:AOR:+(long,long):-(long,long):org.joda.time.format.DateTimeFormatter@parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int):717:instantMillis + chrono.getZone().getOffset(instantMillis) |==> instantMillis - chrono.getZone().getOffset(instantMillis)
775:AOR:+(long,long):/(long,long):org.joda.time.format.DateTimeFormatter@parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int):717:instantMillis + chrono.getZone().getOffset(instantMillis) |==> instantMillis / chrono.getZone().getOffset(instantMillis)
776:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatter@parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int):718:chrono = selectChronology(chrono) |==> <NO-OP>
777:LVR:FALSE:TRUE:org.joda.time.format.DateTimeFormatter@parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int):723:false |==> true
778:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatter@parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int):723:instant.setMillis(bucket.computeMillis(false, text)) |==> <NO-OP>
779:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatter@parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int):724:bucket.getOffsetInteger() != null |==> true
780:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatter@parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int):724:iOffsetParsed && bucket.getOffsetInteger() != null |==> iOffsetParsed == (bucket.getOffsetInteger() != null)
781:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatter@parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int):724:iOffsetParsed && bucket.getOffsetInteger() != null |==> false
782:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatter@parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int):724:iOffsetParsed && bucket.getOffsetInteger() != null |==> iOffsetParsed
783:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatter@parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int):724:iOffsetParsed && bucket.getOffsetInteger() != null |==> bucket.getOffsetInteger() != null
784:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatter@parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int):727:chrono = chrono.withZone(parsedZone) |==> <NO-OP>
785:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatter@parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int):728:bucket.getZone() != null |==> true
786:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatter@parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int):729:chrono = chrono.withZone(bucket.getZone()) |==> <NO-OP>
787:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatter@parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int):731:instant.setChronology(chrono) |==> <NO-OP>
788:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatter@parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int):732:iZone != null |==> true
789:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatter@parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int):733:instant.setZone(iZone) |==> <NO-OP>
790:LVR:0:POS:org.joda.time.format.DateTimeFormatter@parseMillis(java.lang.String):754:0 |==> 1
791:LVR:0:NEG:org.joda.time.format.DateTimeFormatter@parseMillis(java.lang.String):754:0 |==> -1
792:LVR:0:POS:org.joda.time.format.DateTimeFormatter@parseMillis(java.lang.String):755:0 |==> 1
793:LVR:0:NEG:org.joda.time.format.DateTimeFormatter@parseMillis(java.lang.String):755:0 |==> -1
794:LVR:0:POS:org.joda.time.format.DateTimeFormatter@parseMillis(java.lang.String):756:0 |==> 1
795:LVR:0:NEG:org.joda.time.format.DateTimeFormatter@parseMillis(java.lang.String):756:0 |==> -1
796:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatter@parseMillis(java.lang.String):756:newPos >= 0 |==> newPos == 0
797:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatter@parseMillis(java.lang.String):756:newPos >= 0 |==> newPos > 0
798:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatter@parseMillis(java.lang.String):756:newPos >= 0 |==> true
799:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatter@parseMillis(java.lang.String):757:newPos >= text.length() |==> newPos == text.length()
800:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatter@parseMillis(java.lang.String):757:newPos >= text.length() |==> newPos > text.length()
801:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatter@parseMillis(java.lang.String):757:newPos >= text.length() |==> true
802:LVR:TRUE:FALSE:org.joda.time.format.DateTimeFormatter@parseMillis(java.lang.String):758:true |==> false
803:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatter@parseMillis(java.lang.String):761:~newPos |==> +newPos
804:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatter@parseMillis(java.lang.String):761:~newPos |==> -newPos
805:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatter@parseMillis(java.lang.String):761:newPos = ~newPos |==> <NO-OP>
806:LVR:0:POS:org.joda.time.format.DateTimeFormatter@parseLocalDateTime(java.lang.String):820:0 |==> 1
807:LVR:0:NEG:org.joda.time.format.DateTimeFormatter@parseLocalDateTime(java.lang.String):820:0 |==> -1
808:LVR:0:POS:org.joda.time.format.DateTimeFormatter@parseLocalDateTime(java.lang.String):821:0 |==> 1
809:LVR:0:NEG:org.joda.time.format.DateTimeFormatter@parseLocalDateTime(java.lang.String):821:0 |==> -1
810:LVR:0:POS:org.joda.time.format.DateTimeFormatter@parseLocalDateTime(java.lang.String):822:0 |==> 1
811:LVR:0:NEG:org.joda.time.format.DateTimeFormatter@parseLocalDateTime(java.lang.String):822:0 |==> -1
812:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatter@parseLocalDateTime(java.lang.String):822:newPos >= 0 |==> newPos == 0
813:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatter@parseLocalDateTime(java.lang.String):822:newPos >= 0 |==> newPos > 0
814:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatter@parseLocalDateTime(java.lang.String):822:newPos >= 0 |==> true
815:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatter@parseLocalDateTime(java.lang.String):823:newPos >= text.length() |==> newPos == text.length()
816:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatter@parseLocalDateTime(java.lang.String):823:newPos >= text.length() |==> newPos > text.length()
817:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatter@parseLocalDateTime(java.lang.String):823:newPos >= text.length() |==> true
818:LVR:TRUE:FALSE:org.joda.time.format.DateTimeFormatter@parseLocalDateTime(java.lang.String):824:true |==> false
819:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatter@parseLocalDateTime(java.lang.String):825:bucket.getOffsetInteger() != null |==> true
820:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatter@parseLocalDateTime(java.lang.String):828:chrono = chrono.withZone(parsedZone) |==> <NO-OP>
821:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatter@parseLocalDateTime(java.lang.String):829:bucket.getZone() != null |==> true
822:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatter@parseLocalDateTime(java.lang.String):830:chrono = chrono.withZone(bucket.getZone()) |==> <NO-OP>
823:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatter@parseLocalDateTime(java.lang.String):835:~newPos |==> +newPos
824:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatter@parseLocalDateTime(java.lang.String):835:~newPos |==> -newPos
825:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatter@parseLocalDateTime(java.lang.String):835:newPos = ~newPos |==> <NO-OP>
826:LVR:0:POS:org.joda.time.format.DateTimeFormatter@parseDateTime(java.lang.String):861:0 |==> 1
827:LVR:0:NEG:org.joda.time.format.DateTimeFormatter@parseDateTime(java.lang.String):861:0 |==> -1
828:LVR:0:POS:org.joda.time.format.DateTimeFormatter@parseDateTime(java.lang.String):862:0 |==> 1
829:LVR:0:NEG:org.joda.time.format.DateTimeFormatter@parseDateTime(java.lang.String):862:0 |==> -1
830:LVR:0:POS:org.joda.time.format.DateTimeFormatter@parseDateTime(java.lang.String):863:0 |==> 1
831:LVR:0:NEG:org.joda.time.format.DateTimeFormatter@parseDateTime(java.lang.String):863:0 |==> -1
832:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatter@parseDateTime(java.lang.String):863:newPos >= 0 |==> newPos == 0
833:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatter@parseDateTime(java.lang.String):863:newPos >= 0 |==> newPos > 0
834:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatter@parseDateTime(java.lang.String):863:newPos >= 0 |==> true
835:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatter@parseDateTime(java.lang.String):864:newPos >= text.length() |==> newPos == text.length()
836:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatter@parseDateTime(java.lang.String):864:newPos >= text.length() |==> newPos > text.length()
837:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatter@parseDateTime(java.lang.String):864:newPos >= text.length() |==> true
838:LVR:TRUE:FALSE:org.joda.time.format.DateTimeFormatter@parseDateTime(java.lang.String):865:true |==> false
839:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatter@parseDateTime(java.lang.String):866:bucket.getOffsetInteger() != null |==> true
840:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatter@parseDateTime(java.lang.String):866:iOffsetParsed && bucket.getOffsetInteger() != null |==> iOffsetParsed == (bucket.getOffsetInteger() != null)
841:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatter@parseDateTime(java.lang.String):866:iOffsetParsed && bucket.getOffsetInteger() != null |==> false
842:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatter@parseDateTime(java.lang.String):866:iOffsetParsed && bucket.getOffsetInteger() != null |==> iOffsetParsed
843:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatter@parseDateTime(java.lang.String):866:iOffsetParsed && bucket.getOffsetInteger() != null |==> bucket.getOffsetInteger() != null
844:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatter@parseDateTime(java.lang.String):869:chrono = chrono.withZone(parsedZone) |==> <NO-OP>
845:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatter@parseDateTime(java.lang.String):870:bucket.getZone() != null |==> true
846:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatter@parseDateTime(java.lang.String):871:chrono = chrono.withZone(bucket.getZone()) |==> <NO-OP>
847:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatter@parseDateTime(java.lang.String):874:iZone != null |==> true
848:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatter@parseDateTime(java.lang.String):875:dt = dt.withZone(iZone) |==> <NO-OP>
849:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatter@parseDateTime(java.lang.String):880:~newPos |==> +newPos
850:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatter@parseDateTime(java.lang.String):880:~newPos |==> -newPos
851:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatter@parseDateTime(java.lang.String):880:newPos = ~newPos |==> <NO-OP>
852:LVR:0:POS:org.joda.time.format.DateTimeFormatter@parseMutableDateTime(java.lang.String):906:0 |==> 1
853:LVR:0:NEG:org.joda.time.format.DateTimeFormatter@parseMutableDateTime(java.lang.String):906:0 |==> -1
854:LVR:0:POS:org.joda.time.format.DateTimeFormatter@parseMutableDateTime(java.lang.String):907:0 |==> 1
855:LVR:0:NEG:org.joda.time.format.DateTimeFormatter@parseMutableDateTime(java.lang.String):907:0 |==> -1
856:LVR:0:POS:org.joda.time.format.DateTimeFormatter@parseMutableDateTime(java.lang.String):908:0 |==> 1
857:LVR:0:NEG:org.joda.time.format.DateTimeFormatter@parseMutableDateTime(java.lang.String):908:0 |==> -1
858:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatter@parseMutableDateTime(java.lang.String):908:newPos >= 0 |==> newPos == 0
859:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatter@parseMutableDateTime(java.lang.String):908:newPos >= 0 |==> newPos > 0
860:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatter@parseMutableDateTime(java.lang.String):908:newPos >= 0 |==> true
861:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatter@parseMutableDateTime(java.lang.String):909:newPos >= text.length() |==> newPos == text.length()
862:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatter@parseMutableDateTime(java.lang.String):909:newPos >= text.length() |==> newPos > text.length()
863:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatter@parseMutableDateTime(java.lang.String):909:newPos >= text.length() |==> true
864:LVR:TRUE:FALSE:org.joda.time.format.DateTimeFormatter@parseMutableDateTime(java.lang.String):910:true |==> false
865:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatter@parseMutableDateTime(java.lang.String):911:bucket.getOffsetInteger() != null |==> true
866:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatter@parseMutableDateTime(java.lang.String):911:iOffsetParsed && bucket.getOffsetInteger() != null |==> iOffsetParsed == (bucket.getOffsetInteger() != null)
867:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatter@parseMutableDateTime(java.lang.String):911:iOffsetParsed && bucket.getOffsetInteger() != null |==> false
868:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatter@parseMutableDateTime(java.lang.String):911:iOffsetParsed && bucket.getOffsetInteger() != null |==> iOffsetParsed
869:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatter@parseMutableDateTime(java.lang.String):911:iOffsetParsed && bucket.getOffsetInteger() != null |==> bucket.getOffsetInteger() != null
870:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatter@parseMutableDateTime(java.lang.String):914:chrono = chrono.withZone(parsedZone) |==> <NO-OP>
871:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatter@parseMutableDateTime(java.lang.String):915:bucket.getZone() != null |==> true
872:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatter@parseMutableDateTime(java.lang.String):916:chrono = chrono.withZone(bucket.getZone()) |==> <NO-OP>
873:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatter@parseMutableDateTime(java.lang.String):919:iZone != null |==> true
874:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatter@parseMutableDateTime(java.lang.String):920:dt.setZone(iZone) |==> <NO-OP>
875:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatter@parseMutableDateTime(java.lang.String):925:~newPos |==> +newPos
876:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatter@parseMutableDateTime(java.lang.String):925:~newPos |==> -newPos
877:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatter@parseMutableDateTime(java.lang.String):925:newPos = ~newPos |==> <NO-OP>
878:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatter@requireParser():937:parser == null |==> false
879:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatter@selectChronology(org.joda.time.Chronology):951:chrono = DateTimeUtils.getChronology(chrono) |==> <NO-OP>
880:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatter@selectChronology(org.joda.time.Chronology):952:iChrono != null |==> true
881:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatter@selectChronology(org.joda.time.Chronology):953:chrono = iChrono |==> <NO-OP>
882:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatter@selectChronology(org.joda.time.Chronology):955:iZone != null |==> true
883:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatter@selectChronology(org.joda.time.Chronology):956:chrono = chrono.withZone(iZone) |==> <NO-OP>
884:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalDateTime@now(org.joda.time.DateTimeZone):124:zone == null |==> false
885:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalDateTime@now(org.joda.time.Chronology):140:chronology == null |==> false
886:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalDateTime@fromCalendarFields(java.util.Calendar):196:calendar == null |==> false
887:ROR:==(int,int):<=(int,int):org.joda.time.LocalDateTime@fromCalendarFields(java.util.Calendar):202:era == GregorianCalendar.AD |==> era <= GregorianCalendar.AD
888:ROR:==(int,int):>=(int,int):org.joda.time.LocalDateTime@fromCalendarFields(java.util.Calendar):202:era == GregorianCalendar.AD |==> era >= GregorianCalendar.AD
889:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalDateTime@fromCalendarFields(java.util.Calendar):202:era == GregorianCalendar.AD |==> false
890:LVR:POS:0:org.joda.time.LocalDateTime@fromCalendarFields(java.util.Calendar):202:1 |==> 0
891:LVR:POS:NEG:org.joda.time.LocalDateTime@fromCalendarFields(java.util.Calendar):202:1 |==> -1
892:AOR:-(int,int):%(int,int):org.joda.time.LocalDateTime@fromCalendarFields(java.util.Calendar):202:1 - yearOfEra |==> 1 % yearOfEra
893:AOR:-(int,int):*(int,int):org.joda.time.LocalDateTime@fromCalendarFields(java.util.Calendar):202:1 - yearOfEra |==> 1 * yearOfEra
894:AOR:-(int,int):+(int,int):org.joda.time.LocalDateTime@fromCalendarFields(java.util.Calendar):202:1 - yearOfEra |==> 1 + yearOfEra
895:AOR:-(int,int):/(int,int):org.joda.time.LocalDateTime@fromCalendarFields(java.util.Calendar):202:1 - yearOfEra |==> 1 / yearOfEra
896:LVR:POS:0:org.joda.time.LocalDateTime@fromCalendarFields(java.util.Calendar):203:1 |==> 0
897:LVR:POS:NEG:org.joda.time.LocalDateTime@fromCalendarFields(java.util.Calendar):203:1 |==> -1
898:AOR:+(int,int):%(int,int):org.joda.time.LocalDateTime@fromCalendarFields(java.util.Calendar):203:calendar.get(Calendar.MONTH) + 1 |==> calendar.get(Calendar.MONTH) % 1
899:AOR:+(int,int):*(int,int):org.joda.time.LocalDateTime@fromCalendarFields(java.util.Calendar):203:calendar.get(Calendar.MONTH) + 1 |==> calendar.get(Calendar.MONTH) * 1
900:AOR:+(int,int):-(int,int):org.joda.time.LocalDateTime@fromCalendarFields(java.util.Calendar):203:calendar.get(Calendar.MONTH) + 1 |==> calendar.get(Calendar.MONTH) - 1
901:AOR:+(int,int):/(int,int):org.joda.time.LocalDateTime@fromCalendarFields(java.util.Calendar):203:calendar.get(Calendar.MONTH) + 1 |==> calendar.get(Calendar.MONTH) / 1
902:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalDateTime@fromDateFields(java.util.Date):234:date == null |==> false
903:LVR:0:POS:org.joda.time.LocalDateTime@fromDateFields(java.util.Date):237:0 |==> 1
904:LVR:0:NEG:org.joda.time.LocalDateTime@fromDateFields(java.util.Date):237:0 |==> -1
905:ROR:<(long,long):!=(long,long):org.joda.time.LocalDateTime@fromDateFields(java.util.Date):237:date.getTime() < 0 |==> date.getTime() != 0
906:ROR:<(long,long):<=(long,long):org.joda.time.LocalDateTime@fromDateFields(java.util.Date):237:date.getTime() < 0 |==> date.getTime() <= 0
907:ROR:<(long,long):FALSE(long,long):org.joda.time.LocalDateTime@fromDateFields(java.util.Date):237:date.getTime() < 0 |==> false
908:STD:<CALL>:<NO-OP>:org.joda.time.LocalDateTime@fromDateFields(java.util.Date):240:cal.setTime(date) |==> <NO-OP>
909:LVR:POS:0:org.joda.time.LocalDateTime@fromDateFields(java.util.Date):244:1900 |==> 0
910:LVR:POS:NEG:org.joda.time.LocalDateTime@fromDateFields(java.util.Date):244:1900 |==> -1900
911:AOR:+(int,int):%(int,int):org.joda.time.LocalDateTime@fromDateFields(java.util.Date):244:date.getYear() + 1900 |==> date.getYear() % 1900
912:AOR:+(int,int):*(int,int):org.joda.time.LocalDateTime@fromDateFields(java.util.Date):244:date.getYear() + 1900 |==> date.getYear() * 1900
913:AOR:+(int,int):-(int,int):org.joda.time.LocalDateTime@fromDateFields(java.util.Date):244:date.getYear() + 1900 |==> date.getYear() - 1900
914:AOR:+(int,int):/(int,int):org.joda.time.LocalDateTime@fromDateFields(java.util.Date):244:date.getYear() + 1900 |==> date.getYear() / 1900
915:LVR:POS:0:org.joda.time.LocalDateTime@fromDateFields(java.util.Date):245:1 |==> 0
916:LVR:POS:NEG:org.joda.time.LocalDateTime@fromDateFields(java.util.Date):245:1 |==> -1
917:AOR:+(int,int):%(int,int):org.joda.time.LocalDateTime@fromDateFields(java.util.Date):245:date.getMonth() + 1 |==> date.getMonth() % 1
918:AOR:+(int,int):*(int,int):org.joda.time.LocalDateTime@fromDateFields(java.util.Date):245:date.getMonth() + 1 |==> date.getMonth() * 1
919:AOR:+(int,int):-(int,int):org.joda.time.LocalDateTime@fromDateFields(java.util.Date):245:date.getMonth() + 1 |==> date.getMonth() - 1
920:AOR:+(int,int):/(int,int):org.joda.time.LocalDateTime@fromDateFields(java.util.Date):245:date.getMonth() + 1 |==> date.getMonth() / 1
921:LVR:POS:0:org.joda.time.LocalDateTime@fromDateFields(java.util.Date):250:1000 |==> 0
922:LVR:POS:NEG:org.joda.time.LocalDateTime@fromDateFields(java.util.Date):250:1000 |==> -1000
923:AOR:%(long,long):*(long,long):org.joda.time.LocalDateTime@fromDateFields(java.util.Date):250:date.getTime() % 1000 |==> date.getTime() * 1000
924:AOR:%(long,long):+(long,long):org.joda.time.LocalDateTime@fromDateFields(java.util.Date):250:date.getTime() % 1000 |==> date.getTime() + 1000
925:AOR:%(long,long):-(long,long):org.joda.time.LocalDateTime@fromDateFields(java.util.Date):250:date.getTime() % 1000 |==> date.getTime() - 1000
926:AOR:%(long,long):/(long,long):org.joda.time.LocalDateTime@fromDateFields(java.util.Date):250:date.getTime() % 1000 |==> date.getTime() / 1000
927:LVR:POS:0:org.joda.time.LocalDateTime@fromDateFields(java.util.Date):250:1000 |==> 0
928:LVR:POS:NEG:org.joda.time.LocalDateTime@fromDateFields(java.util.Date):250:1000 |==> -1000
929:AOR:+(int,int):%(int,int):org.joda.time.LocalDateTime@fromDateFields(java.util.Date):250:((int)(date.getTime() % 1000)) + 1000 |==> ((int)(date.getTime() % 1000)) % 1000
930:AOR:+(int,int):*(int,int):org.joda.time.LocalDateTime@fromDateFields(java.util.Date):250:((int)(date.getTime() % 1000)) + 1000 |==> ((int)(date.getTime() % 1000)) * 1000
931:AOR:+(int,int):-(int,int):org.joda.time.LocalDateTime@fromDateFields(java.util.Date):250:((int)(date.getTime() % 1000)) + 1000 |==> ((int)(date.getTime() % 1000)) - 1000
932:AOR:+(int,int):/(int,int):org.joda.time.LocalDateTime@fromDateFields(java.util.Date):250:((int)(date.getTime() % 1000)) + 1000 |==> ((int)(date.getTime() % 1000)) / 1000
933:LVR:POS:0:org.joda.time.LocalDateTime@fromDateFields(java.util.Date):250:1000 |==> 0
934:LVR:POS:NEG:org.joda.time.LocalDateTime@fromDateFields(java.util.Date):250:1000 |==> -1000
935:AOR:%(int,int):*(int,int):org.joda.time.LocalDateTime@fromDateFields(java.util.Date):250:(((int)(date.getTime() % 1000)) + 1000) % 1000 |==> (((int)(date.getTime() % 1000)) + 1000) * 1000
936:AOR:%(int,int):+(int,int):org.joda.time.LocalDateTime@fromDateFields(java.util.Date):250:(((int)(date.getTime() % 1000)) + 1000) % 1000 |==> (((int)(date.getTime() % 1000)) + 1000) + 1000
937:AOR:%(int,int):-(int,int):org.joda.time.LocalDateTime@fromDateFields(java.util.Date):250:(((int)(date.getTime() % 1000)) + 1000) % 1000 |==> (((int)(date.getTime() % 1000)) + 1000) - 1000
938:AOR:%(int,int):/(int,int):org.joda.time.LocalDateTime@fromDateFields(java.util.Date):250:(((int)(date.getTime() % 1000)) + 1000) % 1000 |==> (((int)(date.getTime() % 1000)) + 1000) / 1000
939:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDateTime@<init>(long,org.joda.time.Chronology):333:chronology = DateTimeUtils.getChronology(chronology) |==> <NO-OP>
940:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDateTime@<init>(java.lang.Object,org.joda.time.DateTimeZone):382:chronology = DateTimeUtils.getChronology(chronology) |==> <NO-OP>
941:LVR:0:POS:org.joda.time.LocalDateTime@<init>(java.lang.Object,org.joda.time.DateTimeZone):385:0 |==> 1
942:LVR:0:NEG:org.joda.time.LocalDateTime@<init>(java.lang.Object,org.joda.time.DateTimeZone):385:0 |==> -1
943:LVR:POS:0:org.joda.time.LocalDateTime@<init>(java.lang.Object,org.joda.time.DateTimeZone):385:1 |==> 0
944:LVR:POS:NEG:org.joda.time.LocalDateTime@<init>(java.lang.Object,org.joda.time.DateTimeZone):385:1 |==> -1
945:LVR:POS:0:org.joda.time.LocalDateTime@<init>(java.lang.Object,org.joda.time.DateTimeZone):385:2 |==> 0
946:LVR:POS:NEG:org.joda.time.LocalDateTime@<init>(java.lang.Object,org.joda.time.DateTimeZone):385:2 |==> -2
947:LVR:POS:0:org.joda.time.LocalDateTime@<init>(java.lang.Object,org.joda.time.DateTimeZone):385:3 |==> 0
948:LVR:POS:NEG:org.joda.time.LocalDateTime@<init>(java.lang.Object,org.joda.time.DateTimeZone):385:3 |==> -3
949:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDateTime@<init>(java.lang.Object,org.joda.time.Chronology):411:chronology = converter.getChronology(instant, chronology) |==> <NO-OP>
950:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDateTime@<init>(java.lang.Object,org.joda.time.Chronology):412:chronology = DateTimeUtils.getChronology(chronology) |==> <NO-OP>
951:LVR:0:POS:org.joda.time.LocalDateTime@<init>(java.lang.Object,org.joda.time.Chronology):415:0 |==> 1
952:LVR:0:NEG:org.joda.time.LocalDateTime@<init>(java.lang.Object,org.joda.time.Chronology):415:0 |==> -1
953:LVR:POS:0:org.joda.time.LocalDateTime@<init>(java.lang.Object,org.joda.time.Chronology):415:1 |==> 0
954:LVR:POS:NEG:org.joda.time.LocalDateTime@<init>(java.lang.Object,org.joda.time.Chronology):415:1 |==> -1
955:LVR:POS:0:org.joda.time.LocalDateTime@<init>(java.lang.Object,org.joda.time.Chronology):415:2 |==> 0
956:LVR:POS:NEG:org.joda.time.LocalDateTime@<init>(java.lang.Object,org.joda.time.Chronology):415:2 |==> -2
957:LVR:POS:0:org.joda.time.LocalDateTime@<init>(java.lang.Object,org.joda.time.Chronology):415:3 |==> 0
958:LVR:POS:NEG:org.joda.time.LocalDateTime@<init>(java.lang.Object,org.joda.time.Chronology):415:3 |==> -3
959:LVR:0:POS:org.joda.time.LocalDateTime@<init>(int,int,int,int,int):436:0 |==> 1
960:LVR:0:NEG:org.joda.time.LocalDateTime@<init>(int,int,int,int,int):436:0 |==> -1
961:LVR:0:POS:org.joda.time.LocalDateTime@<init>(int,int,int,int,int):436:0 |==> 1
962:LVR:0:NEG:org.joda.time.LocalDateTime@<init>(int,int,int,int,int):436:0 |==> -1
963:LVR:0:POS:org.joda.time.LocalDateTime@<init>(int,int,int,int,int,int):458:0 |==> 1
964:LVR:0:NEG:org.joda.time.LocalDateTime@<init>(int,int,int,int,int,int):458:0 |==> -1
965:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDateTime@<init>(int,int,int,int,int,int,int,org.joda.time.Chronology):510:chronology = DateTimeUtils.getChronology(chronology).withUTC() |==> <NO-OP>
966:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalDateTime@readResolve():522:iChronology == null |==> false
967:LVR:FALSE:TRUE:org.joda.time.LocalDateTime@readResolve():525:false |==> true
968:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.LocalDateTime@readResolve():525:DateTimeZone.UTC.equals(iChronology.getZone()) == false |==> false
969:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.LocalDateTime@readResolve():525:DateTimeZone.UTC.equals(iChronology.getZone()) == false |==> DateTimeZone.UTC.equals(iChronology.getZone())
970:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.LocalDateTime@readResolve():525:DateTimeZone.UTC.equals(iChronology.getZone()) == false |==> false
971:LVR:POS:0:org.joda.time.LocalDateTime@size():539:4 |==> 0
972:LVR:POS:NEG:org.joda.time.LocalDateTime@size():539:4 |==> -4
973:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalDateTime@get(org.joda.time.DateTimeFieldType):607:type == null |==> false
974:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalDateTime@isSupported(org.joda.time.DateTimeFieldType):622:type == null |==> false
975:LVR:FALSE:TRUE:org.joda.time.LocalDateTime@isSupported(org.joda.time.DateTimeFieldType):623:false |==> true
976:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalDateTime@isSupported(org.joda.time.DurationFieldType):636:type == null |==> false
977:LVR:FALSE:TRUE:org.joda.time.LocalDateTime@isSupported(org.joda.time.DurationFieldType):637:false |==> true
978:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalDateTime@equals(java.lang.Object):673:this == partial |==> false
979:LVR:TRUE:FALSE:org.joda.time.LocalDateTime@equals(java.lang.Object):674:true |==> false
980:COR:iChronology.equals(other.iChronology):TRUE:org.joda.time.LocalDateTime@equals(java.lang.Object):678:iChronology.equals(other.iChronology) |==> false
981:COR:iChronology.equals(other.iChronology):FALSE:org.joda.time.LocalDateTime@equals(java.lang.Object):678:iChronology.equals(other.iChronology) |==> true
982:ROR:==(long,long):<=(long,long):org.joda.time.LocalDateTime@equals(java.lang.Object):679:iLocalMillis == other.iLocalMillis |==> iLocalMillis <= other.iLocalMillis
983:ROR:==(long,long):>=(long,long):org.joda.time.LocalDateTime@equals(java.lang.Object):679:iLocalMillis == other.iLocalMillis |==> iLocalMillis >= other.iLocalMillis
984:ROR:==(long,long):FALSE(long,long):org.joda.time.LocalDateTime@equals(java.lang.Object):679:iLocalMillis == other.iLocalMillis |==> false
985:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalDateTime@compareTo(org.joda.time.ReadablePartial):703:this == partial |==> false
986:LVR:0:POS:org.joda.time.LocalDateTime@compareTo(org.joda.time.ReadablePartial):704:0 |==> 1
987:LVR:0:NEG:org.joda.time.LocalDateTime@compareTo(org.joda.time.ReadablePartial):704:0 |==> -1
988:COR:iChronology.equals(other.iChronology):TRUE:org.joda.time.LocalDateTime@compareTo(org.joda.time.ReadablePartial):708:iChronology.equals(other.iChronology) |==> false
989:COR:iChronology.equals(other.iChronology):FALSE:org.joda.time.LocalDateTime@compareTo(org.joda.time.ReadablePartial):708:iChronology.equals(other.iChronology) |==> true
990:ROR:<(long,long):!=(long,long):org.joda.time.LocalDateTime@compareTo(org.joda.time.ReadablePartial):709:iLocalMillis < other.iLocalMillis |==> iLocalMillis != other.iLocalMillis
991:ROR:<(long,long):<=(long,long):org.joda.time.LocalDateTime@compareTo(org.joda.time.ReadablePartial):709:iLocalMillis < other.iLocalMillis |==> iLocalMillis <= other.iLocalMillis
992:ROR:<(long,long):FALSE(long,long):org.joda.time.LocalDateTime@compareTo(org.joda.time.ReadablePartial):709:iLocalMillis < other.iLocalMillis |==> false
993:LVR:NEG:0:org.joda.time.LocalDateTime@compareTo(org.joda.time.ReadablePartial):709:-1 |==> 0
994:LVR:NEG:POS:org.joda.time.LocalDateTime@compareTo(org.joda.time.ReadablePartial):709:-1 |==> 1
995:ROR:==(long,long):<=(long,long):org.joda.time.LocalDateTime@compareTo(org.joda.time.ReadablePartial):710:iLocalMillis == other.iLocalMillis |==> iLocalMillis <= other.iLocalMillis
996:ROR:==(long,long):>=(long,long):org.joda.time.LocalDateTime@compareTo(org.joda.time.ReadablePartial):710:iLocalMillis == other.iLocalMillis |==> iLocalMillis >= other.iLocalMillis
997:ROR:==(long,long):FALSE(long,long):org.joda.time.LocalDateTime@compareTo(org.joda.time.ReadablePartial):710:iLocalMillis == other.iLocalMillis |==> false
998:LVR:0:POS:org.joda.time.LocalDateTime@compareTo(org.joda.time.ReadablePartial):710:0 |==> 1
999:LVR:0:NEG:org.joda.time.LocalDateTime@compareTo(org.joda.time.ReadablePartial):710:0 |==> -1
1000:LVR:POS:0:org.joda.time.LocalDateTime@compareTo(org.joda.time.ReadablePartial):710:1 |==> 0
1001:LVR:POS:NEG:org.joda.time.LocalDateTime@compareTo(org.joda.time.ReadablePartial):710:1 |==> -1
1002:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDateTime@toDateTime(org.joda.time.DateTimeZone):740:zone = DateTimeUtils.getZone(zone) |==> <NO-OP>
1003:LVR:POS:0:org.joda.time.LocalDateTime@toDate():788:1900 |==> 0
1004:LVR:POS:NEG:org.joda.time.LocalDateTime@toDate():788:1900 |==> -1900
1005:AOR:-(int,int):%(int,int):org.joda.time.LocalDateTime@toDate():788:getYear() - 1900 |==> getYear() % 1900
1006:AOR:-(int,int):*(int,int):org.joda.time.LocalDateTime@toDate():788:getYear() - 1900 |==> getYear() * 1900
1007:AOR:-(int,int):+(int,int):org.joda.time.LocalDateTime@toDate():788:getYear() - 1900 |==> getYear() + 1900
1008:AOR:-(int,int):/(int,int):org.joda.time.LocalDateTime@toDate():788:getYear() - 1900 |==> getYear() / 1900
1009:LVR:POS:0:org.joda.time.LocalDateTime@toDate():788:1 |==> 0
1010:LVR:POS:NEG:org.joda.time.LocalDateTime@toDate():788:1 |==> -1
1011:AOR:-(int,int):%(int,int):org.joda.time.LocalDateTime@toDate():788:getMonthOfYear() - 1 |==> getMonthOfYear() % 1
1012:AOR:-(int,int):*(int,int):org.joda.time.LocalDateTime@toDate():788:getMonthOfYear() - 1 |==> getMonthOfYear() * 1
1013:AOR:-(int,int):+(int,int):org.joda.time.LocalDateTime@toDate():788:getMonthOfYear() - 1 |==> getMonthOfYear() + 1
1014:AOR:-(int,int):/(int,int):org.joda.time.LocalDateTime@toDate():788:getMonthOfYear() - 1 |==> getMonthOfYear() / 1
1015:AOR:+(long,long):%(long,long):org.joda.time.LocalDateTime@toDate():790:date.getTime() + getMillisOfSecond() |==> date.getTime() % getMillisOfSecond()
1016:AOR:+(long,long):*(long,long):org.joda.time.LocalDateTime@toDate():790:date.getTime() + getMillisOfSecond() |==> date.getTime() * getMillisOfSecond()
1017:AOR:+(long,long):-(long,long):org.joda.time.LocalDateTime@toDate():790:date.getTime() + getMillisOfSecond() |==> date.getTime() - getMillisOfSecond()
1018:AOR:+(long,long):/(long,long):org.joda.time.LocalDateTime@toDate():790:date.getTime() + getMillisOfSecond() |==> date.getTime() / getMillisOfSecond()
1019:STD:<CALL>:<NO-OP>:org.joda.time.LocalDateTime@toDate():790:date.setTime(date.getTime() + getMillisOfSecond()) |==> <NO-OP>
1020:STD:<CALL>:<NO-OP>:org.joda.time.LocalDateTime@toDate(java.util.TimeZone):817:calendar.clear() |==> <NO-OP>
1021:LVR:POS:0:org.joda.time.LocalDateTime@toDate(java.util.TimeZone):818:1 |==> 0
1022:LVR:POS:NEG:org.joda.time.LocalDateTime@toDate(java.util.TimeZone):818:1 |==> -1
1023:AOR:-(int,int):%(int,int):org.joda.time.LocalDateTime@toDate(java.util.TimeZone):818:getMonthOfYear() - 1 |==> getMonthOfYear() % 1
1024:AOR:-(int,int):*(int,int):org.joda.time.LocalDateTime@toDate(java.util.TimeZone):818:getMonthOfYear() - 1 |==> getMonthOfYear() * 1
1025:AOR:-(int,int):+(int,int):org.joda.time.LocalDateTime@toDate(java.util.TimeZone):818:getMonthOfYear() - 1 |==> getMonthOfYear() + 1
1026:AOR:-(int,int):/(int,int):org.joda.time.LocalDateTime@toDate(java.util.TimeZone):818:getMonthOfYear() - 1 |==> getMonthOfYear() / 1
1027:STD:<CALL>:<NO-OP>:org.joda.time.LocalDateTime@toDate(java.util.TimeZone):818:calendar.set(getYear(), getMonthOfYear() - 1, getDayOfMonth(), getHourOfDay(), getMinuteOfHour(), getSecondOfMinute()) |==> <NO-OP>
1028:AOR:+(long,long):%(long,long):org.joda.time.LocalDateTime@toDate(java.util.TimeZone):821:date.getTime() + getMillisOfSecond() |==> date.getTime() % getMillisOfSecond()
1029:AOR:+(long,long):*(long,long):org.joda.time.LocalDateTime@toDate(java.util.TimeZone):821:date.getTime() + getMillisOfSecond() |==> date.getTime() * getMillisOfSecond()
1030:AOR:+(long,long):-(long,long):org.joda.time.LocalDateTime@toDate(java.util.TimeZone):821:date.getTime() + getMillisOfSecond() |==> date.getTime() - getMillisOfSecond()
1031:AOR:+(long,long):/(long,long):org.joda.time.LocalDateTime@toDate(java.util.TimeZone):821:date.getTime() + getMillisOfSecond() |==> date.getTime() / getMillisOfSecond()
1032:STD:<CALL>:<NO-OP>:org.joda.time.LocalDateTime@toDate(java.util.TimeZone):821:date.setTime(date.getTime() + getMillisOfSecond()) |==> <NO-OP>
1033:STD:<CALL>:<NO-OP>:org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):842:calendar.setTime(date) |==> <NO-OP>
1034:COR:check.isBefore(this):TRUE:org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):844:check.isBefore(this) |==> false
1035:COR:check.isBefore(this):FALSE:org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):844:check.isBefore(this) |==> true
1036:LVR:POS:0:org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):848:60000 |==> 0
1037:LVR:POS:NEG:org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):848:60000 |==> -60000
1038:AOR:+(long,long):%(long,long):org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):848:calendar.getTimeInMillis() + 60000 |==> calendar.getTimeInMillis() % 60000
1039:AOR:+(long,long):*(long,long):org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):848:calendar.getTimeInMillis() + 60000 |==> calendar.getTimeInMillis() * 60000
1040:AOR:+(long,long):-(long,long):org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):848:calendar.getTimeInMillis() + 60000 |==> calendar.getTimeInMillis() - 60000
1041:AOR:+(long,long):/(long,long):org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):848:calendar.getTimeInMillis() + 60000 |==> calendar.getTimeInMillis() / 60000
1042:STD:<CALL>:<NO-OP>:org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):848:calendar.setTimeInMillis(calendar.getTimeInMillis() + 60000) |==> <NO-OP>
1043:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):849:check = LocalDateTime.fromCalendarFields(calendar) |==> <NO-OP>
1044:LVR:FALSE:TRUE:org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):852:false |==> true
1045:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):852:check.isBefore(this) == false |==> false
1046:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):852:check.isBefore(this) == false |==> check.isBefore(this)
1047:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):852:check.isBefore(this) == false |==> false
1048:LVR:POS:0:org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):853:1000 |==> 0
1049:LVR:POS:NEG:org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):853:1000 |==> -1000
1050:AOR:-(long,long):%(long,long):org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):853:calendar.getTimeInMillis() - 1000 |==> calendar.getTimeInMillis() % 1000
1051:AOR:-(long,long):*(long,long):org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):853:calendar.getTimeInMillis() - 1000 |==> calendar.getTimeInMillis() * 1000
1052:AOR:-(long,long):+(long,long):org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):853:calendar.getTimeInMillis() - 1000 |==> calendar.getTimeInMillis() + 1000
1053:AOR:-(long,long):/(long,long):org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):853:calendar.getTimeInMillis() - 1000 |==> calendar.getTimeInMillis() / 1000
1054:STD:<CALL>:<NO-OP>:org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):853:calendar.setTimeInMillis(calendar.getTimeInMillis() - 1000) |==> <NO-OP>
1055:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):854:check = LocalDateTime.fromCalendarFields(calendar) |==> <NO-OP>
1056:LVR:POS:0:org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):856:1000 |==> 0
1057:LVR:POS:NEG:org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):856:1000 |==> -1000
1058:AOR:+(long,long):%(long,long):org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):856:calendar.getTimeInMillis() + 1000 |==> calendar.getTimeInMillis() % 1000
1059:AOR:+(long,long):*(long,long):org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):856:calendar.getTimeInMillis() + 1000 |==> calendar.getTimeInMillis() * 1000
1060:AOR:+(long,long):-(long,long):org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):856:calendar.getTimeInMillis() + 1000 |==> calendar.getTimeInMillis() - 1000
1061:AOR:+(long,long):/(long,long):org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):856:calendar.getTimeInMillis() + 1000 |==> calendar.getTimeInMillis() / 1000
1062:STD:<CALL>:<NO-OP>:org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):856:calendar.setTimeInMillis(calendar.getTimeInMillis() + 1000) |==> <NO-OP>
1063:COR:check.equals(this):TRUE:org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):857:check.equals(this) |==> false
1064:COR:check.equals(this):FALSE:org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):857:check.equals(this) |==> true
1065:AOR:-(long,long):%(long,long):org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):860:calendar.getTimeInMillis() - timeZone.getDSTSavings() |==> calendar.getTimeInMillis() % timeZone.getDSTSavings()
1066:AOR:-(long,long):*(long,long):org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):860:calendar.getTimeInMillis() - timeZone.getDSTSavings() |==> calendar.getTimeInMillis() * timeZone.getDSTSavings()
1067:AOR:-(long,long):+(long,long):org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):860:calendar.getTimeInMillis() - timeZone.getDSTSavings() |==> calendar.getTimeInMillis() + timeZone.getDSTSavings()
1068:AOR:-(long,long):/(long,long):org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):860:calendar.getTimeInMillis() - timeZone.getDSTSavings() |==> calendar.getTimeInMillis() / timeZone.getDSTSavings()
1069:STD:<CALL>:<NO-OP>:org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):860:earlier.setTimeInMillis(calendar.getTimeInMillis() - timeZone.getDSTSavings()) |==> <NO-OP>
1070:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):861:check = LocalDateTime.fromCalendarFields(earlier) |==> <NO-OP>
1071:COR:check.equals(this):TRUE:org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):862:check.equals(this) |==> false
1072:COR:check.equals(this):FALSE:org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):862:check.equals(this) |==> true
1073:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDateTime@correctDstTransition(java.util.Date,java.util.TimeZone):863:calendar = earlier |==> <NO-OP>
1074:ROR:==(long,long):<=(long,long):org.joda.time.LocalDateTime@withLocalMillis(long):881:newMillis == getLocalMillis() |==> newMillis <= getLocalMillis()
1075:ROR:==(long,long):>=(long,long):org.joda.time.LocalDateTime@withLocalMillis(long):881:newMillis == getLocalMillis() |==> newMillis >= getLocalMillis()
1076:ROR:==(long,long):FALSE(long,long):org.joda.time.LocalDateTime@withLocalMillis(long):881:newMillis == getLocalMillis() |==> false
1077:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDateTime@withDate(int,int,int):905:instant = chrono.year().set(instant, year) |==> <NO-OP>
1078:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDateTime@withDate(int,int,int):906:instant = chrono.monthOfYear().set(instant, monthOfYear) |==> <NO-OP>
1079:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDateTime@withDate(int,int,int):907:instant = chrono.dayOfMonth().set(instant, dayOfMonth) |==> <NO-OP>
1080:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDateTime@withTime(int,int,int,int):932:instant = chrono.hourOfDay().set(instant, hourOfDay) |==> <NO-OP>
1081:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDateTime@withTime(int,int,int,int):933:instant = chrono.minuteOfHour().set(instant, minuteOfHour) |==> <NO-OP>
1082:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDateTime@withTime(int,int,int,int):934:instant = chrono.secondOfMinute().set(instant, secondOfMinute) |==> <NO-OP>
1083:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDateTime@withTime(int,int,int,int):935:instant = chrono.millisOfSecond().set(instant, millisOfSecond) |==> <NO-OP>
1084:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalDateTime@withFields(org.joda.time.ReadablePartial):953:partial == null |==> false
1085:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalDateTime@withField(org.joda.time.DateTimeFieldType,int):979:fieldType == null |==> false
1086:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalDateTime@withFieldAdded(org.joda.time.DurationFieldType,int):1006:fieldType == null |==> false
1087:LVR:0:POS:org.joda.time.LocalDateTime@withFieldAdded(org.joda.time.DurationFieldType,int):1009:0 |==> 1
1088:LVR:0:NEG:org.joda.time.LocalDateTime@withFieldAdded(org.joda.time.DurationFieldType,int):1009:0 |==> -1
1089:ROR:==(int,int):<=(int,int):org.joda.time.LocalDateTime@withFieldAdded(org.joda.time.DurationFieldType,int):1009:amount == 0 |==> amount <= 0
1090:ROR:==(int,int):>=(int,int):org.joda.time.LocalDateTime@withFieldAdded(org.joda.time.DurationFieldType,int):1009:amount == 0 |==> amount >= 0
1091:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalDateTime@withFieldAdded(org.joda.time.DurationFieldType,int):1009:amount == 0 |==> false
1092:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalDateTime@withDurationAdded(org.joda.time.ReadableDuration,int):1028:durationToAdd == null |==> false
1093:LVR:0:POS:org.joda.time.LocalDateTime@withDurationAdded(org.joda.time.ReadableDuration,int):1028:0 |==> 1
1094:LVR:0:NEG:org.joda.time.LocalDateTime@withDurationAdded(org.joda.time.ReadableDuration,int):1028:0 |==> -1
1095:ROR:==(int,int):<=(int,int):org.joda.time.LocalDateTime@withDurationAdded(org.joda.time.ReadableDuration,int):1028:scalar == 0 |==> scalar <= 0
1096:ROR:==(int,int):>=(int,int):org.joda.time.LocalDateTime@withDurationAdded(org.joda.time.ReadableDuration,int):1028:scalar == 0 |==> scalar >= 0
1097:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalDateTime@withDurationAdded(org.joda.time.ReadableDuration,int):1028:scalar == 0 |==> false
1098:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.LocalDateTime@withDurationAdded(org.joda.time.ReadableDuration,int):1028:durationToAdd == null || scalar == 0 |==> durationToAdd == null != (scalar == 0)
1099:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.LocalDateTime@withDurationAdded(org.joda.time.ReadableDuration,int):1028:durationToAdd == null || scalar == 0 |==> durationToAdd == null
1100:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.LocalDateTime@withDurationAdded(org.joda.time.ReadableDuration,int):1028:durationToAdd == null || scalar == 0 |==> scalar == 0
1101:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.LocalDateTime@withDurationAdded(org.joda.time.ReadableDuration,int):1028:durationToAdd == null || scalar == 0 |==> true
1102:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalDateTime@withPeriodAdded(org.joda.time.ReadablePeriod,int):1051:period == null |==> false
1103:LVR:0:POS:org.joda.time.LocalDateTime@withPeriodAdded(org.joda.time.ReadablePeriod,int):1051:0 |==> 1
1104:LVR:0:NEG:org.joda.time.LocalDateTime@withPeriodAdded(org.joda.time.ReadablePeriod,int):1051:0 |==> -1
1105:ROR:==(int,int):<=(int,int):org.joda.time.LocalDateTime@withPeriodAdded(org.joda.time.ReadablePeriod,int):1051:scalar == 0 |==> scalar <= 0
1106:ROR:==(int,int):>=(int,int):org.joda.time.LocalDateTime@withPeriodAdded(org.joda.time.ReadablePeriod,int):1051:scalar == 0 |==> scalar >= 0
1107:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalDateTime@withPeriodAdded(org.joda.time.ReadablePeriod,int):1051:scalar == 0 |==> false
1108:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.LocalDateTime@withPeriodAdded(org.joda.time.ReadablePeriod,int):1051:period == null || scalar == 0 |==> period == null != (scalar == 0)
1109:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.LocalDateTime@withPeriodAdded(org.joda.time.ReadablePeriod,int):1051:period == null || scalar == 0 |==> period == null
1110:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.LocalDateTime@withPeriodAdded(org.joda.time.ReadablePeriod,int):1051:period == null || scalar == 0 |==> scalar == 0
1111:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.LocalDateTime@withPeriodAdded(org.joda.time.ReadablePeriod,int):1051:period == null || scalar == 0 |==> true
1112:LVR:POS:0:org.joda.time.LocalDateTime@plus(org.joda.time.ReadableDuration):1069:1 |==> 0
1113:LVR:POS:NEG:org.joda.time.LocalDateTime@plus(org.joda.time.ReadableDuration):1069:1 |==> -1
1114:LVR:POS:0:org.joda.time.LocalDateTime@plus(org.joda.time.ReadablePeriod):1086:1 |==> 0
1115:LVR:POS:NEG:org.joda.time.LocalDateTime@plus(org.joda.time.ReadablePeriod):1086:1 |==> -1
1116:LVR:0:POS:org.joda.time.LocalDateTime@plusYears(int):1106:0 |==> 1
1117:LVR:0:NEG:org.joda.time.LocalDateTime@plusYears(int):1106:0 |==> -1
1118:ROR:==(int,int):<=(int,int):org.joda.time.LocalDateTime@plusYears(int):1106:years == 0 |==> years <= 0
1119:ROR:==(int,int):>=(int,int):org.joda.time.LocalDateTime@plusYears(int):1106:years == 0 |==> years >= 0
1120:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalDateTime@plusYears(int):1106:years == 0 |==> false
1121:LVR:0:POS:org.joda.time.LocalDateTime@plusMonths(int):1129:0 |==> 1
1122:LVR:0:NEG:org.joda.time.LocalDateTime@plusMonths(int):1129:0 |==> -1
1123:ROR:==(int,int):<=(int,int):org.joda.time.LocalDateTime@plusMonths(int):1129:months == 0 |==> months <= 0
1124:ROR:==(int,int):>=(int,int):org.joda.time.LocalDateTime@plusMonths(int):1129:months == 0 |==> months >= 0
1125:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalDateTime@plusMonths(int):1129:months == 0 |==> false
1126:LVR:0:POS:org.joda.time.LocalDateTime@plusWeeks(int):1152:0 |==> 1
1127:LVR:0:NEG:org.joda.time.LocalDateTime@plusWeeks(int):1152:0 |==> -1
1128:ROR:==(int,int):<=(int,int):org.joda.time.LocalDateTime@plusWeeks(int):1152:weeks == 0 |==> weeks <= 0
1129:ROR:==(int,int):>=(int,int):org.joda.time.LocalDateTime@plusWeeks(int):1152:weeks == 0 |==> weeks >= 0
1130:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalDateTime@plusWeeks(int):1152:weeks == 0 |==> false
1131:LVR:0:POS:org.joda.time.LocalDateTime@plusDays(int):1175:0 |==> 1
1132:LVR:0:NEG:org.joda.time.LocalDateTime@plusDays(int):1175:0 |==> -1
1133:ROR:==(int,int):<=(int,int):org.joda.time.LocalDateTime@plusDays(int):1175:days == 0 |==> days <= 0
1134:ROR:==(int,int):>=(int,int):org.joda.time.LocalDateTime@plusDays(int):1175:days == 0 |==> days >= 0
1135:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalDateTime@plusDays(int):1175:days == 0 |==> false
1136:LVR:0:POS:org.joda.time.LocalDateTime@plusHours(int):1199:0 |==> 1
1137:LVR:0:NEG:org.joda.time.LocalDateTime@plusHours(int):1199:0 |==> -1
1138:ROR:==(int,int):<=(int,int):org.joda.time.LocalDateTime@plusHours(int):1199:hours == 0 |==> hours <= 0
1139:ROR:==(int,int):>=(int,int):org.joda.time.LocalDateTime@plusHours(int):1199:hours == 0 |==> hours >= 0
1140:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalDateTime@plusHours(int):1199:hours == 0 |==> false
1141:LVR:0:POS:org.joda.time.LocalDateTime@plusMinutes(int):1222:0 |==> 1
1142:LVR:0:NEG:org.joda.time.LocalDateTime@plusMinutes(int):1222:0 |==> -1
1143:ROR:==(int,int):<=(int,int):org.joda.time.LocalDateTime@plusMinutes(int):1222:minutes == 0 |==> minutes <= 0
1144:ROR:==(int,int):>=(int,int):org.joda.time.LocalDateTime@plusMinutes(int):1222:minutes == 0 |==> minutes >= 0
1145:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalDateTime@plusMinutes(int):1222:minutes == 0 |==> false
1146:LVR:0:POS:org.joda.time.LocalDateTime@plusSeconds(int):1245:0 |==> 1
1147:LVR:0:NEG:org.joda.time.LocalDateTime@plusSeconds(int):1245:0 |==> -1
1148:ROR:==(int,int):<=(int,int):org.joda.time.LocalDateTime@plusSeconds(int):1245:seconds == 0 |==> seconds <= 0
1149:ROR:==(int,int):>=(int,int):org.joda.time.LocalDateTime@plusSeconds(int):1245:seconds == 0 |==> seconds >= 0
1150:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalDateTime@plusSeconds(int):1245:seconds == 0 |==> false
1151:LVR:0:POS:org.joda.time.LocalDateTime@plusMillis(int):1268:0 |==> 1
1152:LVR:0:NEG:org.joda.time.LocalDateTime@plusMillis(int):1268:0 |==> -1
1153:ROR:==(int,int):<=(int,int):org.joda.time.LocalDateTime@plusMillis(int):1268:millis == 0 |==> millis <= 0
1154:ROR:==(int,int):>=(int,int):org.joda.time.LocalDateTime@plusMillis(int):1268:millis == 0 |==> millis >= 0
1155:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalDateTime@plusMillis(int):1268:millis == 0 |==> false
1156:LVR:NEG:0:org.joda.time.LocalDateTime@minus(org.joda.time.ReadableDuration):1286:-1 |==> 0
1157:LVR:NEG:POS:org.joda.time.LocalDateTime@minus(org.joda.time.ReadableDuration):1286:-1 |==> 1
1158:LVR:NEG:0:org.joda.time.LocalDateTime@minus(org.joda.time.ReadablePeriod):1303:-1 |==> 0
1159:LVR:NEG:POS:org.joda.time.LocalDateTime@minus(org.joda.time.ReadablePeriod):1303:-1 |==> 1
1160:LVR:0:POS:org.joda.time.LocalDateTime@minusYears(int):1323:0 |==> 1
1161:LVR:0:NEG:org.joda.time.LocalDateTime@minusYears(int):1323:0 |==> -1
1162:ROR:==(int,int):<=(int,int):org.joda.time.LocalDateTime@minusYears(int):1323:years == 0 |==> years <= 0
1163:ROR:==(int,int):>=(int,int):org.joda.time.LocalDateTime@minusYears(int):1323:years == 0 |==> years >= 0
1164:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalDateTime@minusYears(int):1323:years == 0 |==> false
1165:LVR:0:POS:org.joda.time.LocalDateTime@minusMonths(int):1346:0 |==> 1
1166:LVR:0:NEG:org.joda.time.LocalDateTime@minusMonths(int):1346:0 |==> -1
1167:ROR:==(int,int):<=(int,int):org.joda.time.LocalDateTime@minusMonths(int):1346:months == 0 |==> months <= 0
1168:ROR:==(int,int):>=(int,int):org.joda.time.LocalDateTime@minusMonths(int):1346:months == 0 |==> months >= 0
1169:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalDateTime@minusMonths(int):1346:months == 0 |==> false
1170:LVR:0:POS:org.joda.time.LocalDateTime@minusWeeks(int):1369:0 |==> 1
1171:LVR:0:NEG:org.joda.time.LocalDateTime@minusWeeks(int):1369:0 |==> -1
1172:ROR:==(int,int):<=(int,int):org.joda.time.LocalDateTime@minusWeeks(int):1369:weeks == 0 |==> weeks <= 0
1173:ROR:==(int,int):>=(int,int):org.joda.time.LocalDateTime@minusWeeks(int):1369:weeks == 0 |==> weeks >= 0
1174:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalDateTime@minusWeeks(int):1369:weeks == 0 |==> false
1175:LVR:0:POS:org.joda.time.LocalDateTime@minusDays(int):1392:0 |==> 1
1176:LVR:0:NEG:org.joda.time.LocalDateTime@minusDays(int):1392:0 |==> -1
1177:ROR:==(int,int):<=(int,int):org.joda.time.LocalDateTime@minusDays(int):1392:days == 0 |==> days <= 0
1178:ROR:==(int,int):>=(int,int):org.joda.time.LocalDateTime@minusDays(int):1392:days == 0 |==> days >= 0
1179:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalDateTime@minusDays(int):1392:days == 0 |==> false
1180:LVR:0:POS:org.joda.time.LocalDateTime@minusHours(int):1416:0 |==> 1
1181:LVR:0:NEG:org.joda.time.LocalDateTime@minusHours(int):1416:0 |==> -1
1182:ROR:==(int,int):<=(int,int):org.joda.time.LocalDateTime@minusHours(int):1416:hours == 0 |==> hours <= 0
1183:ROR:==(int,int):>=(int,int):org.joda.time.LocalDateTime@minusHours(int):1416:hours == 0 |==> hours >= 0
1184:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalDateTime@minusHours(int):1416:hours == 0 |==> false
1185:LVR:0:POS:org.joda.time.LocalDateTime@minusMinutes(int):1439:0 |==> 1
1186:LVR:0:NEG:org.joda.time.LocalDateTime@minusMinutes(int):1439:0 |==> -1
1187:ROR:==(int,int):<=(int,int):org.joda.time.LocalDateTime@minusMinutes(int):1439:minutes == 0 |==> minutes <= 0
1188:ROR:==(int,int):>=(int,int):org.joda.time.LocalDateTime@minusMinutes(int):1439:minutes == 0 |==> minutes >= 0
1189:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalDateTime@minusMinutes(int):1439:minutes == 0 |==> false
1190:LVR:0:POS:org.joda.time.LocalDateTime@minusSeconds(int):1462:0 |==> 1
1191:LVR:0:NEG:org.joda.time.LocalDateTime@minusSeconds(int):1462:0 |==> -1
1192:ROR:==(int,int):<=(int,int):org.joda.time.LocalDateTime@minusSeconds(int):1462:seconds == 0 |==> seconds <= 0
1193:ROR:==(int,int):>=(int,int):org.joda.time.LocalDateTime@minusSeconds(int):1462:seconds == 0 |==> seconds >= 0
1194:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalDateTime@minusSeconds(int):1462:seconds == 0 |==> false
1195:LVR:0:POS:org.joda.time.LocalDateTime@minusMillis(int):1485:0 |==> 1
1196:LVR:0:NEG:org.joda.time.LocalDateTime@minusMillis(int):1485:0 |==> -1
1197:ROR:==(int,int):<=(int,int):org.joda.time.LocalDateTime@minusMillis(int):1485:millis == 0 |==> millis <= 0
1198:ROR:==(int,int):>=(int,int):org.joda.time.LocalDateTime@minusMillis(int):1485:millis == 0 |==> millis >= 0
1199:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalDateTime@minusMillis(int):1485:millis == 0 |==> false
1200:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalDateTime@property(org.joda.time.DateTimeFieldType):1502:fieldType == null |==> false
1201:LVR:FALSE:TRUE:org.joda.time.LocalDateTime@property(org.joda.time.DateTimeFieldType):1505:false |==> true
1202:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.LocalDateTime@property(org.joda.time.DateTimeFieldType):1505:isSupported(fieldType) == false |==> false
1203:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.LocalDateTime@property(org.joda.time.DateTimeFieldType):1505:isSupported(fieldType) == false |==> isSupported(fieldType)
1204:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.LocalDateTime@property(org.joda.time.DateTimeFieldType):1505:isSupported(fieldType) == false |==> false
1205:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalDateTime@toString(java.lang.String):2089:pattern == null |==> false
1206:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalDateTime@toString(java.lang.String,java.util.Locale):2103:pattern == null |==> false
1207:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDateTime$Property@<init>(org.joda.time.LocalDateTime,org.joda.time.DateTimeField):2156:iInstant = instant |==> <NO-OP>
1208:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDateTime$Property@<init>(org.joda.time.LocalDateTime,org.joda.time.DateTimeField):2157:iField = field |==> <NO-OP>
1209:STD:<CALL>:<NO-OP>:org.joda.time.LocalDateTime$Property@writeObject(java.io.ObjectOutputStream):2164:oos.writeObject(iInstant) |==> <NO-OP>
1210:STD:<CALL>:<NO-OP>:org.joda.time.LocalDateTime$Property@writeObject(java.io.ObjectOutputStream):2165:oos.writeObject(iField.getType()) |==> <NO-OP>
1211:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDateTime$Property@readObject(java.io.ObjectInputStream):2172:iInstant = (LocalDateTime)oos.readObject() |==> <NO-OP>
1212:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDateTime$Property@readObject(java.io.ObjectInputStream):2174:iField = type.getField(iInstant.getChronology()) |==> <NO-OP>
1213:LVR:0:POS:org.joda.time.base.AbstractPartial@getFieldTypes():91:0 |==> 1
1214:LVR:0:NEG:org.joda.time.base.AbstractPartial@getFieldTypes():91:0 |==> -1
1215:ROR:<(int,int):!=(int,int):org.joda.time.base.AbstractPartial@getFieldTypes():91:i < result.length |==> i != result.length
1216:ROR:<(int,int):<=(int,int):org.joda.time.base.AbstractPartial@getFieldTypes():91:i < result.length |==> i <= result.length
1217:ROR:<(int,int):FALSE(int,int):org.joda.time.base.AbstractPartial@getFieldTypes():91:i < result.length |==> false
1218:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.AbstractPartial@getFieldTypes():92:result[i] = getFieldType(i) |==> <NO-OP>
1219:LVR:0:POS:org.joda.time.base.AbstractPartial@getFields():117:0 |==> 1
1220:LVR:0:NEG:org.joda.time.base.AbstractPartial@getFields():117:0 |==> -1
1221:ROR:<(int,int):!=(int,int):org.joda.time.base.AbstractPartial@getFields():117:i < result.length |==> i != result.length
1222:ROR:<(int,int):<=(int,int):org.joda.time.base.AbstractPartial@getFields():117:i < result.length |==> i <= result.length
1223:ROR:<(int,int):FALSE(int,int):org.joda.time.base.AbstractPartial@getFields():117:i < result.length |==> false
1224:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.AbstractPartial@getFields():118:result[i] = getField(i) |==> <NO-OP>
1225:LVR:0:POS:org.joda.time.base.AbstractPartial@getValues():133:0 |==> 1
1226:LVR:0:NEG:org.joda.time.base.AbstractPartial@getValues():133:0 |==> -1
1227:ROR:<(int,int):!=(int,int):org.joda.time.base.AbstractPartial@getValues():133:i < result.length |==> i != result.length
1228:ROR:<(int,int):<=(int,int):org.joda.time.base.AbstractPartial@getValues():133:i < result.length |==> i <= result.length
1229:ROR:<(int,int):FALSE(int,int):org.joda.time.base.AbstractPartial@getValues():133:i < result.length |==> false
1230:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.AbstractPartial@getValues():134:result[i] = getValue(i) |==> <NO-OP>
1231:LVR:NEG:0:org.joda.time.base.AbstractPartial@isSupported(org.joda.time.DateTimeFieldType):160:-1 |==> 0
1232:LVR:NEG:POS:org.joda.time.base.AbstractPartial@isSupported(org.joda.time.DateTimeFieldType):160:-1 |==> 1
1233:ROR:!=(int,int):<(int,int):org.joda.time.base.AbstractPartial@isSupported(org.joda.time.DateTimeFieldType):160:indexOf(type) != -1 |==> indexOf(type) < -1
1234:ROR:!=(int,int):>(int,int):org.joda.time.base.AbstractPartial@isSupported(org.joda.time.DateTimeFieldType):160:indexOf(type) != -1 |==> indexOf(type) > -1
1235:ROR:!=(int,int):TRUE(int,int):org.joda.time.base.AbstractPartial@isSupported(org.joda.time.DateTimeFieldType):160:indexOf(type) != -1 |==> true
1236:LVR:0:POS:org.joda.time.base.AbstractPartial@indexOf(org.joda.time.DateTimeFieldType):170:0 |==> 1
1237:LVR:0:NEG:org.joda.time.base.AbstractPartial@indexOf(org.joda.time.DateTimeFieldType):170:0 |==> -1
1238:ROR:<(int,int):!=(int,int):org.joda.time.base.AbstractPartial@indexOf(org.joda.time.DateTimeFieldType):170:i < isize |==> i != isize
1239:ROR:<(int,int):<=(int,int):org.joda.time.base.AbstractPartial@indexOf(org.joda.time.DateTimeFieldType):170:i < isize |==> i <= isize
1240:ROR:<(int,int):FALSE(int,int):org.joda.time.base.AbstractPartial@indexOf(org.joda.time.DateTimeFieldType):170:i < isize |==> false
1241:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.AbstractPartial@indexOf(org.joda.time.DateTimeFieldType):171:getFieldType(i) == type |==> false
1242:LVR:NEG:0:org.joda.time.base.AbstractPartial@indexOf(org.joda.time.DateTimeFieldType):175:-1 |==> 0
1243:LVR:NEG:POS:org.joda.time.base.AbstractPartial@indexOf(org.joda.time.DateTimeFieldType):175:-1 |==> 1
1244:LVR:NEG:0:org.joda.time.base.AbstractPartial@indexOfSupported(org.joda.time.DateTimeFieldType):188:-1 |==> 0
1245:LVR:NEG:POS:org.joda.time.base.AbstractPartial@indexOfSupported(org.joda.time.DateTimeFieldType):188:-1 |==> 1
1246:ROR:==(int,int):<=(int,int):org.joda.time.base.AbstractPartial@indexOfSupported(org.joda.time.DateTimeFieldType):188:index == -1 |==> index <= -1
1247:ROR:==(int,int):>=(int,int):org.joda.time.base.AbstractPartial@indexOfSupported(org.joda.time.DateTimeFieldType):188:index == -1 |==> index >= -1
1248:ROR:==(int,int):FALSE(int,int):org.joda.time.base.AbstractPartial@indexOfSupported(org.joda.time.DateTimeFieldType):188:index == -1 |==> false
1249:LVR:0:POS:org.joda.time.base.AbstractPartial@indexOf(org.joda.time.DurationFieldType):202:0 |==> 1
1250:LVR:0:NEG:org.joda.time.base.AbstractPartial@indexOf(org.joda.time.DurationFieldType):202:0 |==> -1
1251:ROR:<(int,int):!=(int,int):org.joda.time.base.AbstractPartial@indexOf(org.joda.time.DurationFieldType):202:i < isize |==> i != isize
1252:ROR:<(int,int):<=(int,int):org.joda.time.base.AbstractPartial@indexOf(org.joda.time.DurationFieldType):202:i < isize |==> i <= isize
1253:ROR:<(int,int):FALSE(int,int):org.joda.time.base.AbstractPartial@indexOf(org.joda.time.DurationFieldType):202:i < isize |==> false
1254:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.AbstractPartial@indexOf(org.joda.time.DurationFieldType):203:getFieldType(i).getDurationType() == type |==> false
1255:LVR:NEG:0:org.joda.time.base.AbstractPartial@indexOf(org.joda.time.DurationFieldType):207:-1 |==> 0
1256:LVR:NEG:POS:org.joda.time.base.AbstractPartial@indexOf(org.joda.time.DurationFieldType):207:-1 |==> 1
1257:LVR:NEG:0:org.joda.time.base.AbstractPartial@indexOfSupported(org.joda.time.DurationFieldType):220:-1 |==> 0
1258:LVR:NEG:POS:org.joda.time.base.AbstractPartial@indexOfSupported(org.joda.time.DurationFieldType):220:-1 |==> 1
1259:ROR:==(int,int):<=(int,int):org.joda.time.base.AbstractPartial@indexOfSupported(org.joda.time.DurationFieldType):220:index == -1 |==> index <= -1
1260:ROR:==(int,int):>=(int,int):org.joda.time.base.AbstractPartial@indexOfSupported(org.joda.time.DurationFieldType):220:index == -1 |==> index >= -1
1261:ROR:==(int,int):FALSE(int,int):org.joda.time.base.AbstractPartial@indexOfSupported(org.joda.time.DurationFieldType):220:index == -1 |==> false
1262:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.AbstractPartial@equals(java.lang.Object):255:this == partial |==> false
1263:LVR:TRUE:FALSE:org.joda.time.base.AbstractPartial@equals(java.lang.Object):256:true |==> false
1264:LVR:FALSE:TRUE:org.joda.time.base.AbstractPartial@equals(java.lang.Object):258:false |==> true
1265:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.base.AbstractPartial@equals(java.lang.Object):258:partial instanceof ReadablePartial == false |==> false
1266:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.base.AbstractPartial@equals(java.lang.Object):258:partial instanceof ReadablePartial == false |==> partial instanceof ReadablePartial
1267:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.base.AbstractPartial@equals(java.lang.Object):258:partial instanceof ReadablePartial == false |==> false
1268:LVR:FALSE:TRUE:org.joda.time.base.AbstractPartial@equals(java.lang.Object):259:false |==> true
1269:ROR:!=(int,int):<(int,int):org.joda.time.base.AbstractPartial@equals(java.lang.Object):262:size() != other.size() |==> size() < other.size()
1270:ROR:!=(int,int):>(int,int):org.joda.time.base.AbstractPartial@equals(java.lang.Object):262:size() != other.size() |==> size() > other.size()
1271:ROR:!=(int,int):TRUE(int,int):org.joda.time.base.AbstractPartial@equals(java.lang.Object):262:size() != other.size() |==> true
1272:LVR:FALSE:TRUE:org.joda.time.base.AbstractPartial@equals(java.lang.Object):263:false |==> true
1273:LVR:0:POS:org.joda.time.base.AbstractPartial@equals(java.lang.Object):265:0 |==> 1
1274:LVR:0:NEG:org.joda.time.base.AbstractPartial@equals(java.lang.Object):265:0 |==> -1
1275:ROR:<(int,int):!=(int,int):org.joda.time.base.AbstractPartial@equals(java.lang.Object):265:i < isize |==> i != isize
1276:ROR:<(int,int):<=(int,int):org.joda.time.base.AbstractPartial@equals(java.lang.Object):265:i < isize |==> i <= isize
1277:ROR:<(int,int):FALSE(int,int):org.joda.time.base.AbstractPartial@equals(java.lang.Object):265:i < isize |==> false
1278:ROR:!=(int,int):<(int,int):org.joda.time.base.AbstractPartial@equals(java.lang.Object):266:getValue(i) != other.getValue(i) |==> getValue(i) < other.getValue(i)
1279:ROR:!=(int,int):>(int,int):org.joda.time.base.AbstractPartial@equals(java.lang.Object):266:getValue(i) != other.getValue(i) |==> getValue(i) > other.getValue(i)
1280:ROR:!=(int,int):TRUE(int,int):org.joda.time.base.AbstractPartial@equals(java.lang.Object):266:getValue(i) != other.getValue(i) |==> true
1281:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.base.AbstractPartial@equals(java.lang.Object):266:getFieldType(i) != other.getFieldType(i) |==> true
1282:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.base.AbstractPartial@equals(java.lang.Object):266:getValue(i) != other.getValue(i) || getFieldType(i) != other.getFieldType(i) |==> getValue(i) != other.getValue(i) != (getFieldType(i) != other.getFieldType(i))
1283:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.base.AbstractPartial@equals(java.lang.Object):266:getValue(i) != other.getValue(i) || getFieldType(i) != other.getFieldType(i) |==> getValue(i) != other.getValue(i)
1284:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.base.AbstractPartial@equals(java.lang.Object):266:getValue(i) != other.getValue(i) || getFieldType(i) != other.getFieldType(i) |==> getFieldType(i) != other.getFieldType(i)
1285:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.base.AbstractPartial@equals(java.lang.Object):266:getValue(i) != other.getValue(i) || getFieldType(i) != other.getFieldType(i) |==> true
1286:LVR:FALSE:TRUE:org.joda.time.base.AbstractPartial@equals(java.lang.Object):267:false |==> true
1287:LVR:POS:0:org.joda.time.base.AbstractPartial@hashCode():280:157 |==> 0
1288:LVR:POS:NEG:org.joda.time.base.AbstractPartial@hashCode():280:157 |==> -157
1289:LVR:0:POS:org.joda.time.base.AbstractPartial@hashCode():281:0 |==> 1
1290:LVR:0:NEG:org.joda.time.base.AbstractPartial@hashCode():281:0 |==> -1
1291:ROR:<(int,int):!=(int,int):org.joda.time.base.AbstractPartial@hashCode():281:i < isize |==> i != isize
1292:ROR:<(int,int):<=(int,int):org.joda.time.base.AbstractPartial@hashCode():281:i < isize |==> i <= isize
1293:ROR:<(int,int):FALSE(int,int):org.joda.time.base.AbstractPartial@hashCode():281:i < isize |==> false
1294:LVR:POS:0:org.joda.time.base.AbstractPartial@hashCode():282:23 |==> 0
1295:LVR:POS:NEG:org.joda.time.base.AbstractPartial@hashCode():282:23 |==> -23
1296:AOR:*(int,int):%(int,int):org.joda.time.base.AbstractPartial@hashCode():282:23 * total |==> 23 % total
1297:AOR:*(int,int):+(int,int):org.joda.time.base.AbstractPartial@hashCode():282:23 * total |==> 23 + total
1298:AOR:*(int,int):-(int,int):org.joda.time.base.AbstractPartial@hashCode():282:23 * total |==> 23 - total
1299:AOR:*(int,int):/(int,int):org.joda.time.base.AbstractPartial@hashCode():282:23 * total |==> 23 / total
1300:AOR:+(int,int):%(int,int):org.joda.time.base.AbstractPartial@hashCode():282:23 * total + getValue(i) |==> 23 * total % getValue(i)
1301:AOR:+(int,int):*(int,int):org.joda.time.base.AbstractPartial@hashCode():282:23 * total + getValue(i) |==> 23 * total * getValue(i)
1302:AOR:+(int,int):-(int,int):org.joda.time.base.AbstractPartial@hashCode():282:23 * total + getValue(i) |==> 23 * total - getValue(i)
1303:AOR:+(int,int):/(int,int):org.joda.time.base.AbstractPartial@hashCode():282:23 * total + getValue(i) |==> 23 * total / getValue(i)
1304:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.AbstractPartial@hashCode():282:total = 23 * total + getValue(i) |==> <NO-OP>
1305:LVR:POS:0:org.joda.time.base.AbstractPartial@hashCode():283:23 |==> 0
1306:LVR:POS:NEG:org.joda.time.base.AbstractPartial@hashCode():283:23 |==> -23
1307:AOR:*(int,int):%(int,int):org.joda.time.base.AbstractPartial@hashCode():283:23 * total |==> 23 % total
1308:AOR:*(int,int):+(int,int):org.joda.time.base.AbstractPartial@hashCode():283:23 * total |==> 23 + total
1309:AOR:*(int,int):-(int,int):org.joda.time.base.AbstractPartial@hashCode():283:23 * total |==> 23 - total
1310:AOR:*(int,int):/(int,int):org.joda.time.base.AbstractPartial@hashCode():283:23 * total |==> 23 / total
1311:AOR:+(int,int):%(int,int):org.joda.time.base.AbstractPartial@hashCode():283:23 * total + getFieldType(i).hashCode() |==> 23 * total % getFieldType(i).hashCode()
1312:AOR:+(int,int):*(int,int):org.joda.time.base.AbstractPartial@hashCode():283:23 * total + getFieldType(i).hashCode() |==> 23 * total * getFieldType(i).hashCode()
1313:AOR:+(int,int):-(int,int):org.joda.time.base.AbstractPartial@hashCode():283:23 * total + getFieldType(i).hashCode() |==> 23 * total - getFieldType(i).hashCode()
1314:AOR:+(int,int):/(int,int):org.joda.time.base.AbstractPartial@hashCode():283:23 * total + getFieldType(i).hashCode() |==> 23 * total / getFieldType(i).hashCode()
1315:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.AbstractPartial@hashCode():283:total = 23 * total + getFieldType(i).hashCode() |==> <NO-OP>
1316:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.AbstractPartial@hashCode():285:total += getChronology().hashCode() |==> <NO-OP>
1317:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.AbstractPartial@compareTo(org.joda.time.ReadablePartial):311:this == other |==> false
1318:LVR:0:POS:org.joda.time.base.AbstractPartial@compareTo(org.joda.time.ReadablePartial):312:0 |==> 1
1319:LVR:0:NEG:org.joda.time.base.AbstractPartial@compareTo(org.joda.time.ReadablePartial):312:0 |==> -1
1320:ROR:!=(int,int):<(int,int):org.joda.time.base.AbstractPartial@compareTo(org.joda.time.ReadablePartial):314:size() != other.size() |==> size() < other.size()
1321:ROR:!=(int,int):>(int,int):org.joda.time.base.AbstractPartial@compareTo(org.joda.time.ReadablePartial):314:size() != other.size() |==> size() > other.size()
1322:ROR:!=(int,int):TRUE(int,int):org.joda.time.base.AbstractPartial@compareTo(org.joda.time.ReadablePartial):314:size() != other.size() |==> true
1323:LVR:0:POS:org.joda.time.base.AbstractPartial@compareTo(org.joda.time.ReadablePartial):317:0 |==> 1
1324:LVR:0:NEG:org.joda.time.base.AbstractPartial@compareTo(org.joda.time.ReadablePartial):317:0 |==> -1
1325:ROR:<(int,int):!=(int,int):org.joda.time.base.AbstractPartial@compareTo(org.joda.time.ReadablePartial):317:i < isize |==> i != isize
1326:ROR:<(int,int):<=(int,int):org.joda.time.base.AbstractPartial@compareTo(org.joda.time.ReadablePartial):317:i < isize |==> i <= isize
1327:ROR:<(int,int):FALSE(int,int):org.joda.time.base.AbstractPartial@compareTo(org.joda.time.ReadablePartial):317:i < isize |==> false
1328:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.base.AbstractPartial@compareTo(org.joda.time.ReadablePartial):318:getFieldType(i) != other.getFieldType(i) |==> true
1329:LVR:0:POS:org.joda.time.base.AbstractPartial@compareTo(org.joda.time.ReadablePartial):323:0 |==> 1
1330:LVR:0:NEG:org.joda.time.base.AbstractPartial@compareTo(org.joda.time.ReadablePartial):323:0 |==> -1
1331:ROR:<(int,int):!=(int,int):org.joda.time.base.AbstractPartial@compareTo(org.joda.time.ReadablePartial):323:i < isize |==> i != isize
1332:ROR:<(int,int):<=(int,int):org.joda.time.base.AbstractPartial@compareTo(org.joda.time.ReadablePartial):323:i < isize |==> i <= isize
1333:ROR:<(int,int):FALSE(int,int):org.joda.time.base.AbstractPartial@compareTo(org.joda.time.ReadablePartial):323:i < isize |==> false
1334:ROR:>(int,int):!=(int,int):org.joda.time.base.AbstractPartial@compareTo(org.joda.time.ReadablePartial):324:getValue(i) > other.getValue(i) |==> getValue(i) != other.getValue(i)
1335:ROR:>(int,int):>=(int,int):org.joda.time.base.AbstractPartial@compareTo(org.joda.time.ReadablePartial):324:getValue(i) > other.getValue(i) |==> getValue(i) >= other.getValue(i)
1336:ROR:>(int,int):FALSE(int,int):org.joda.time.base.AbstractPartial@compareTo(org.joda.time.ReadablePartial):324:getValue(i) > other.getValue(i) |==> false
1337:LVR:POS:0:org.joda.time.base.AbstractPartial@compareTo(org.joda.time.ReadablePartial):325:1 |==> 0
1338:LVR:POS:NEG:org.joda.time.base.AbstractPartial@compareTo(org.joda.time.ReadablePartial):325:1 |==> -1
1339:ROR:<(int,int):!=(int,int):org.joda.time.base.AbstractPartial@compareTo(org.joda.time.ReadablePartial):327:getValue(i) < other.getValue(i) |==> getValue(i) != other.getValue(i)
1340:ROR:<(int,int):<=(int,int):org.joda.time.base.AbstractPartial@compareTo(org.joda.time.ReadablePartial):327:getValue(i) < other.getValue(i) |==> getValue(i) <= other.getValue(i)
1341:ROR:<(int,int):FALSE(int,int):org.joda.time.base.AbstractPartial@compareTo(org.joda.time.ReadablePartial):327:getValue(i) < other.getValue(i) |==> false
1342:LVR:NEG:0:org.joda.time.base.AbstractPartial@compareTo(org.joda.time.ReadablePartial):328:-1 |==> 0
1343:LVR:NEG:POS:org.joda.time.base.AbstractPartial@compareTo(org.joda.time.ReadablePartial):328:-1 |==> 1
1344:LVR:0:POS:org.joda.time.base.AbstractPartial@compareTo(org.joda.time.ReadablePartial):331:0 |==> 1
1345:LVR:0:NEG:org.joda.time.base.AbstractPartial@compareTo(org.joda.time.ReadablePartial):331:0 |==> -1
1346:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.AbstractPartial@isAfter(org.joda.time.ReadablePartial):350:partial == null |==> false
1347:LVR:0:POS:org.joda.time.base.AbstractPartial@isAfter(org.joda.time.ReadablePartial):353:0 |==> 1
1348:LVR:0:NEG:org.joda.time.base.AbstractPartial@isAfter(org.joda.time.ReadablePartial):353:0 |==> -1
1349:ROR:>(int,int):!=(int,int):org.joda.time.base.AbstractPartial@isAfter(org.joda.time.ReadablePartial):353:compareTo(partial) > 0 |==> compareTo(partial) != 0
1350:ROR:>(int,int):>=(int,int):org.joda.time.base.AbstractPartial@isAfter(org.joda.time.ReadablePartial):353:compareTo(partial) > 0 |==> compareTo(partial) >= 0
1351:ROR:>(int,int):FALSE(int,int):org.joda.time.base.AbstractPartial@isAfter(org.joda.time.ReadablePartial):353:compareTo(partial) > 0 |==> false
1352:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.AbstractPartial@isBefore(org.joda.time.ReadablePartial):372:partial == null |==> false
1353:LVR:0:POS:org.joda.time.base.AbstractPartial@isBefore(org.joda.time.ReadablePartial):375:0 |==> 1
1354:LVR:0:NEG:org.joda.time.base.AbstractPartial@isBefore(org.joda.time.ReadablePartial):375:0 |==> -1
1355:ROR:<(int,int):!=(int,int):org.joda.time.base.AbstractPartial@isBefore(org.joda.time.ReadablePartial):375:compareTo(partial) < 0 |==> compareTo(partial) != 0
1356:ROR:<(int,int):<=(int,int):org.joda.time.base.AbstractPartial@isBefore(org.joda.time.ReadablePartial):375:compareTo(partial) < 0 |==> compareTo(partial) <= 0
1357:ROR:<(int,int):FALSE(int,int):org.joda.time.base.AbstractPartial@isBefore(org.joda.time.ReadablePartial):375:compareTo(partial) < 0 |==> false
1358:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.AbstractPartial@isEqual(org.joda.time.ReadablePartial):394:partial == null |==> false
1359:LVR:0:POS:org.joda.time.base.AbstractPartial@isEqual(org.joda.time.ReadablePartial):397:0 |==> 1
1360:LVR:0:NEG:org.joda.time.base.AbstractPartial@isEqual(org.joda.time.ReadablePartial):397:0 |==> -1
1361:ROR:==(int,int):<=(int,int):org.joda.time.base.AbstractPartial@isEqual(org.joda.time.ReadablePartial):397:compareTo(partial) == 0 |==> compareTo(partial) <= 0
1362:ROR:==(int,int):>=(int,int):org.joda.time.base.AbstractPartial@isEqual(org.joda.time.ReadablePartial):397:compareTo(partial) == 0 |==> compareTo(partial) >= 0
1363:ROR:==(int,int):FALSE(int,int):org.joda.time.base.AbstractPartial@isEqual(org.joda.time.ReadablePartial):397:compareTo(partial) == 0 |==> false
1364:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.AbstractPartial@toString(org.joda.time.format.DateTimeFormatter):409:formatter == null |==> false
1365:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.AbstractReadableInstantFieldProperty@getDifference(org.joda.time.ReadableInstant):213:instant == null |==> false
1366:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.AbstractReadableInstantFieldProperty@getDifferenceAsLong(org.joda.time.ReadableInstant):230:instant == null |==> false
1367:LVR:POS:0:org.joda.time.field.AbstractReadableInstantFieldProperty@toInterval():372:1 |==> 0
1368:LVR:POS:NEG:org.joda.time.field.AbstractReadableInstantFieldProperty@toInterval():372:1 |==> -1
1369:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.AbstractReadableInstantFieldProperty@compareTo(org.joda.time.ReadableInstant):391:instant == null |==> false
1370:ROR:<(int,int):!=(int,int):org.joda.time.field.AbstractReadableInstantFieldProperty@compareTo(org.joda.time.ReadableInstant):396:thisValue < otherValue |==> thisValue != otherValue
1371:ROR:<(int,int):<=(int,int):org.joda.time.field.AbstractReadableInstantFieldProperty@compareTo(org.joda.time.ReadableInstant):396:thisValue < otherValue |==> thisValue <= otherValue
1372:ROR:<(int,int):FALSE(int,int):org.joda.time.field.AbstractReadableInstantFieldProperty@compareTo(org.joda.time.ReadableInstant):396:thisValue < otherValue |==> false
1373:LVR:NEG:0:org.joda.time.field.AbstractReadableInstantFieldProperty@compareTo(org.joda.time.ReadableInstant):397:-1 |==> 0
1374:LVR:NEG:POS:org.joda.time.field.AbstractReadableInstantFieldProperty@compareTo(org.joda.time.ReadableInstant):397:-1 |==> 1
1375:ROR:>(int,int):!=(int,int):org.joda.time.field.AbstractReadableInstantFieldProperty@compareTo(org.joda.time.ReadableInstant):398:thisValue > otherValue |==> thisValue != otherValue
1376:ROR:>(int,int):>=(int,int):org.joda.time.field.AbstractReadableInstantFieldProperty@compareTo(org.joda.time.ReadableInstant):398:thisValue > otherValue |==> thisValue >= otherValue
1377:ROR:>(int,int):FALSE(int,int):org.joda.time.field.AbstractReadableInstantFieldProperty@compareTo(org.joda.time.ReadableInstant):398:thisValue > otherValue |==> false
1378:LVR:POS:0:org.joda.time.field.AbstractReadableInstantFieldProperty@compareTo(org.joda.time.ReadableInstant):399:1 |==> 0
1379:LVR:POS:NEG:org.joda.time.field.AbstractReadableInstantFieldProperty@compareTo(org.joda.time.ReadableInstant):399:1 |==> -1
1380:LVR:0:POS:org.joda.time.field.AbstractReadableInstantFieldProperty@compareTo(org.joda.time.ReadableInstant):401:0 |==> 1
1381:LVR:0:NEG:org.joda.time.field.AbstractReadableInstantFieldProperty@compareTo(org.joda.time.ReadableInstant):401:0 |==> -1
1382:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.AbstractReadableInstantFieldProperty@compareTo(org.joda.time.ReadablePartial):420:partial == null |==> false
1383:ROR:<(int,int):!=(int,int):org.joda.time.field.AbstractReadableInstantFieldProperty@compareTo(org.joda.time.ReadablePartial):425:thisValue < otherValue |==> thisValue != otherValue
1384:ROR:<(int,int):<=(int,int):org.joda.time.field.AbstractReadableInstantFieldProperty@compareTo(org.joda.time.ReadablePartial):425:thisValue < otherValue |==> thisValue <= otherValue
1385:ROR:<(int,int):FALSE(int,int):org.joda.time.field.AbstractReadableInstantFieldProperty@compareTo(org.joda.time.ReadablePartial):425:thisValue < otherValue |==> false
1386:LVR:NEG:0:org.joda.time.field.AbstractReadableInstantFieldProperty@compareTo(org.joda.time.ReadablePartial):426:-1 |==> 0
1387:LVR:NEG:POS:org.joda.time.field.AbstractReadableInstantFieldProperty@compareTo(org.joda.time.ReadablePartial):426:-1 |==> 1
1388:ROR:>(int,int):!=(int,int):org.joda.time.field.AbstractReadableInstantFieldProperty@compareTo(org.joda.time.ReadablePartial):427:thisValue > otherValue |==> thisValue != otherValue
1389:ROR:>(int,int):>=(int,int):org.joda.time.field.AbstractReadableInstantFieldProperty@compareTo(org.joda.time.ReadablePartial):427:thisValue > otherValue |==> thisValue >= otherValue
1390:ROR:>(int,int):FALSE(int,int):org.joda.time.field.AbstractReadableInstantFieldProperty@compareTo(org.joda.time.ReadablePartial):427:thisValue > otherValue |==> false
1391:LVR:POS:0:org.joda.time.field.AbstractReadableInstantFieldProperty@compareTo(org.joda.time.ReadablePartial):428:1 |==> 0
1392:LVR:POS:NEG:org.joda.time.field.AbstractReadableInstantFieldProperty@compareTo(org.joda.time.ReadablePartial):428:1 |==> -1
1393:LVR:0:POS:org.joda.time.field.AbstractReadableInstantFieldProperty@compareTo(org.joda.time.ReadablePartial):430:0 |==> 1
1394:LVR:0:NEG:org.joda.time.field.AbstractReadableInstantFieldProperty@compareTo(org.joda.time.ReadablePartial):430:0 |==> -1
1395:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.AbstractReadableInstantFieldProperty@equals(java.lang.Object):442:this == object |==> false
1396:LVR:TRUE:FALSE:org.joda.time.field.AbstractReadableInstantFieldProperty@equals(java.lang.Object):443:true |==> false
1397:LVR:FALSE:TRUE:org.joda.time.field.AbstractReadableInstantFieldProperty@equals(java.lang.Object):445:false |==> true
1398:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.field.AbstractReadableInstantFieldProperty@equals(java.lang.Object):445:object instanceof AbstractReadableInstantFieldProperty == false |==> false
1399:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.field.AbstractReadableInstantFieldProperty@equals(java.lang.Object):445:object instanceof AbstractReadableInstantFieldProperty == false |==> object instanceof AbstractReadableInstantFieldProperty
1400:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.field.AbstractReadableInstantFieldProperty@equals(java.lang.Object):445:object instanceof AbstractReadableInstantFieldProperty == false |==> false
1401:LVR:FALSE:TRUE:org.joda.time.field.AbstractReadableInstantFieldProperty@equals(java.lang.Object):446:false |==> true
1402:ROR:==(int,int):<=(int,int):org.joda.time.field.AbstractReadableInstantFieldProperty@equals(java.lang.Object):450:get() == other.get() |==> get() <= other.get()
1403:ROR:==(int,int):>=(int,int):org.joda.time.field.AbstractReadableInstantFieldProperty@equals(java.lang.Object):450:get() == other.get() |==> get() >= other.get()
1404:ROR:==(int,int):FALSE(int,int):org.joda.time.field.AbstractReadableInstantFieldProperty@equals(java.lang.Object):450:get() == other.get() |==> false
1405:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.field.AbstractReadableInstantFieldProperty@equals(java.lang.Object):450:get() == other.get() && getFieldType().equals(other.getFieldType()) |==> get() == other.get() == getFieldType().equals(other.getFieldType())
1406:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.field.AbstractReadableInstantFieldProperty@equals(java.lang.Object):450:get() == other.get() && getFieldType().equals(other.getFieldType()) |==> false
1407:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.field.AbstractReadableInstantFieldProperty@equals(java.lang.Object):450:get() == other.get() && getFieldType().equals(other.getFieldType()) |==> get() == other.get()
1408:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.field.AbstractReadableInstantFieldProperty@equals(java.lang.Object):451:get() == other.get() && getFieldType().equals(other.getFieldType()) |==> getFieldType().equals(other.getFieldType())
1409:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.field.AbstractReadableInstantFieldProperty@equals(java.lang.Object):450:get() == other.get() && getFieldType().equals(other.getFieldType()) && FieldUtils.equals(getChronology(), other.getChronology()) |==> (get() == other.get() && getFieldType().equals(other.getFieldType())) == FieldUtils.equals(getChronology(), other.getChronology())
1410:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.field.AbstractReadableInstantFieldProperty@equals(java.lang.Object):451:get() == other.get() && getFieldType().equals(other.getFieldType()) && FieldUtils.equals(getChronology(), other.getChronology()) |==> false
1411:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.field.AbstractReadableInstantFieldProperty@equals(java.lang.Object):450:get() == other.get() && getFieldType().equals(other.getFieldType()) && FieldUtils.equals(getChronology(), other.getChronology()) |==> get() == other.get() && getFieldType().equals(other.getFieldType())
1412:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.field.AbstractReadableInstantFieldProperty@equals(java.lang.Object):452:get() == other.get() && getFieldType().equals(other.getFieldType()) && FieldUtils.equals(getChronology(), other.getChronology()) |==> FieldUtils.equals(getChronology(), other.getChronology())
1413:LVR:POS:0:org.joda.time.field.AbstractReadableInstantFieldProperty@hashCode():461:17 |==> 0
1414:LVR:POS:NEG:org.joda.time.field.AbstractReadableInstantFieldProperty@hashCode():461:17 |==> -17
1415:AOR:*(int,int):%(int,int):org.joda.time.field.AbstractReadableInstantFieldProperty@hashCode():461:get() * 17 |==> get() % 17
1416:AOR:*(int,int):+(int,int):org.joda.time.field.AbstractReadableInstantFieldProperty@hashCode():461:get() * 17 |==> get() + 17
1417:AOR:*(int,int):-(int,int):org.joda.time.field.AbstractReadableInstantFieldProperty@hashCode():461:get() * 17 |==> get() - 17
1418:AOR:*(int,int):/(int,int):org.joda.time.field.AbstractReadableInstantFieldProperty@hashCode():461:get() * 17 |==> get() / 17
1419:AOR:+(int,int):%(int,int):org.joda.time.field.AbstractReadableInstantFieldProperty@hashCode():461:get() * 17 + getFieldType().hashCode() |==> get() * 17 % getFieldType().hashCode()
1420:AOR:+(int,int):*(int,int):org.joda.time.field.AbstractReadableInstantFieldProperty@hashCode():461:get() * 17 + getFieldType().hashCode() |==> get() * 17 * getFieldType().hashCode()
1421:AOR:+(int,int):-(int,int):org.joda.time.field.AbstractReadableInstantFieldProperty@hashCode():461:get() * 17 + getFieldType().hashCode() |==> get() * 17 - getFieldType().hashCode()
1422:AOR:+(int,int):/(int,int):org.joda.time.field.AbstractReadableInstantFieldProperty@hashCode():461:get() * 17 + getFieldType().hashCode() |==> get() * 17 / getFieldType().hashCode()
1423:AOR:+(int,int):%(int,int):org.joda.time.field.AbstractReadableInstantFieldProperty@hashCode():461:get() * 17 + getFieldType().hashCode() + getChronology().hashCode() |==> (get() * 17 + getFieldType().hashCode()) % getChronology().hashCode()
1424:AOR:+(int,int):*(int,int):org.joda.time.field.AbstractReadableInstantFieldProperty@hashCode():461:get() * 17 + getFieldType().hashCode() + getChronology().hashCode() |==> (get() * 17 + getFieldType().hashCode()) * getChronology().hashCode()
1425:AOR:+(int,int):-(int,int):org.joda.time.field.AbstractReadableInstantFieldProperty@hashCode():461:get() * 17 + getFieldType().hashCode() + getChronology().hashCode() |==> get() * 17 + getFieldType().hashCode() - getChronology().hashCode()
1426:AOR:+(int,int):/(int,int):org.joda.time.field.AbstractReadableInstantFieldProperty@hashCode():461:get() * 17 + getFieldType().hashCode() + getChronology().hashCode() |==> (get() * 17 + getFieldType().hashCode()) / getChronology().hashCode()
1427:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeFieldType$StandardDateTimeFieldType@equals(java.lang.Object):463:this == obj |==> false
1428:LVR:TRUE:FALSE:org.joda.time.DateTimeFieldType$StandardDateTimeFieldType@equals(java.lang.Object):464:true |==> false
1429:ROR:==(int,int):<=(int,int):org.joda.time.DateTimeFieldType$StandardDateTimeFieldType@equals(java.lang.Object):467:iOrdinal == ((StandardDateTimeFieldType)obj).iOrdinal |==> iOrdinal <= ((StandardDateTimeFieldType)obj).iOrdinal
1430:ROR:==(int,int):>=(int,int):org.joda.time.DateTimeFieldType$StandardDateTimeFieldType@equals(java.lang.Object):467:iOrdinal == ((StandardDateTimeFieldType)obj).iOrdinal |==> iOrdinal >= ((StandardDateTimeFieldType)obj).iOrdinal
1431:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTimeFieldType$StandardDateTimeFieldType@equals(java.lang.Object):467:iOrdinal == ((StandardDateTimeFieldType)obj).iOrdinal |==> false
1432:LVR:FALSE:TRUE:org.joda.time.DateTimeFieldType$StandardDateTimeFieldType@equals(java.lang.Object):469:false |==> true
1433:LVR:POS:0:org.joda.time.DateTimeFieldType$StandardDateTimeFieldType@hashCode():475:1 |==> 0
1434:LVR:POS:NEG:org.joda.time.DateTimeFieldType$StandardDateTimeFieldType@hashCode():475:1 |==> -1
1435:SOR:<<(int,int):>>(int,int):org.joda.time.DateTimeFieldType$StandardDateTimeFieldType@hashCode():475:1 << iOrdinal |==> 1 >> iOrdinal
1436:SOR:<<(int,int):>>>(int,int):org.joda.time.DateTimeFieldType$StandardDateTimeFieldType@hashCode():475:1 << iOrdinal |==> 1 >>> iOrdinal
1437:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeFieldType$StandardDateTimeFieldType@getField(org.joda.time.Chronology):480:chronology = DateTimeUtils.getChronology(chronology) |==> <NO-OP>
1438:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTime@now(org.joda.time.DateTimeZone):101:zone == null |==> false
1439:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTime@now(org.joda.time.Chronology):116:chronology == null |==> false
1440:LVR:0:POS:org.joda.time.DateTime@<init>(int,int,int,int,int):307:0 |==> 1
1441:LVR:0:NEG:org.joda.time.DateTime@<init>(int,int,int,int,int):307:0 |==> -1
1442:LVR:0:POS:org.joda.time.DateTime@<init>(int,int,int,int,int):307:0 |==> 1
1443:LVR:0:NEG:org.joda.time.DateTime@<init>(int,int,int,int,int):307:0 |==> -1
1444:LVR:0:POS:org.joda.time.DateTime@<init>(int,int,int,int,int,org.joda.time.DateTimeZone):332:0 |==> 1
1445:LVR:0:NEG:org.joda.time.DateTime@<init>(int,int,int,int,int,org.joda.time.DateTimeZone):332:0 |==> -1
1446:LVR:0:POS:org.joda.time.DateTime@<init>(int,int,int,int,int,org.joda.time.DateTimeZone):332:0 |==> 1
1447:LVR:0:NEG:org.joda.time.DateTime@<init>(int,int,int,int,int,org.joda.time.DateTimeZone):332:0 |==> -1
1448:LVR:0:POS:org.joda.time.DateTime@<init>(int,int,int,int,int,org.joda.time.Chronology):358:0 |==> 1
1449:LVR:0:NEG:org.joda.time.DateTime@<init>(int,int,int,int,int,org.joda.time.Chronology):358:0 |==> -1
1450:LVR:0:POS:org.joda.time.DateTime@<init>(int,int,int,int,int,org.joda.time.Chronology):358:0 |==> 1
1451:LVR:0:NEG:org.joda.time.DateTime@<init>(int,int,int,int,int,org.joda.time.Chronology):358:0 |==> -1
1452:LVR:0:POS:org.joda.time.DateTime@<init>(int,int,int,int,int,int):381:0 |==> 1
1453:LVR:0:NEG:org.joda.time.DateTime@<init>(int,int,int,int,int,int):381:0 |==> -1
1454:LVR:0:POS:org.joda.time.DateTime@<init>(int,int,int,int,int,int,org.joda.time.DateTimeZone):408:0 |==> 1
1455:LVR:0:NEG:org.joda.time.DateTime@<init>(int,int,int,int,int,int,org.joda.time.DateTimeZone):408:0 |==> -1
1456:LVR:0:POS:org.joda.time.DateTime@<init>(int,int,int,int,int,int,org.joda.time.Chronology):436:0 |==> 1
1457:LVR:0:NEG:org.joda.time.DateTime@<init>(int,int,int,int,int,int,org.joda.time.Chronology):436:0 |==> -1
1458:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTime@toDateTimeISO():537:getChronology() == ISOChronology.getInstance() |==> false
1459:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTime@toDateTime(org.joda.time.DateTimeZone):550:zone = DateTimeUtils.getZone(zone) |==> <NO-OP>
1460:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTime@toDateTime(org.joda.time.DateTimeZone):551:getZone() == zone |==> false
1461:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTime@toDateTime(org.joda.time.Chronology):564:chronology = DateTimeUtils.getChronology(chronology) |==> <NO-OP>
1462:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTime@toDateTime(org.joda.time.Chronology):565:getChronology() == chronology |==> false
1463:ROR:==(long,long):<=(long,long):org.joda.time.DateTime@withMillis(long):582:newMillis == getMillis() |==> newMillis <= getMillis()
1464:ROR:==(long,long):>=(long,long):org.joda.time.DateTime@withMillis(long):582:newMillis == getMillis() |==> newMillis >= getMillis()
1465:ROR:==(long,long):FALSE(long,long):org.joda.time.DateTime@withMillis(long):582:newMillis == getMillis() |==> false
1466:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTime@withChronology(org.joda.time.Chronology):595:newChronology = DateTimeUtils.getChronology(newChronology) |==> <NO-OP>
1467:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTime@withChronology(org.joda.time.Chronology):596:newChronology == getChronology() |==> false
1468:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTime@withZoneRetainFields(org.joda.time.DateTimeZone):639:newZone = DateTimeUtils.getZone(newZone) |==> <NO-OP>
1469:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTime@withZoneRetainFields(org.joda.time.DateTimeZone):641:newZone == originalZone |==> false
1470:LVR:FALSE:TRUE:org.joda.time.DateTime@withEarlierOffsetAtOverlap():665:false |==> true
1471:LVR:TRUE:FALSE:org.joda.time.DateTime@withLaterOffsetAtOverlap():685:true |==> false
1472:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTime@withDate(int,int,int):711:instant = chrono.year().set(instant, year) |==> <NO-OP>
1473:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTime@withDate(int,int,int):712:instant = chrono.monthOfYear().set(instant, monthOfYear) |==> <NO-OP>
1474:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTime@withDate(int,int,int):713:instant = chrono.dayOfMonth().set(instant, dayOfMonth) |==> <NO-OP>
1475:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTime@withTime(int,int,int,int):739:instant = chrono.hourOfDay().set(instant, hourOfDay) |==> <NO-OP>
1476:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTime@withTime(int,int,int,int):740:instant = chrono.minuteOfHour().set(instant, minuteOfHour) |==> <NO-OP>
1477:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTime@withTime(int,int,int,int):741:instant = chrono.secondOfMinute().set(instant, secondOfMinute) |==> <NO-OP>
1478:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTime@withTime(int,int,int,int):742:instant = chrono.millisOfSecond().set(instant, millisOfSecond) |==> <NO-OP>
1479:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTime@withFields(org.joda.time.ReadablePartial):776:partial == null |==> false
1480:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTime@withField(org.joda.time.DateTimeFieldType,int):802:fieldType == null |==> false
1481:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTime@withFieldAdded(org.joda.time.DurationFieldType,int):828:fieldType == null |==> false
1482:LVR:0:POS:org.joda.time.DateTime@withFieldAdded(org.joda.time.DurationFieldType,int):831:0 |==> 1
1483:LVR:0:NEG:org.joda.time.DateTime@withFieldAdded(org.joda.time.DurationFieldType,int):831:0 |==> -1
1484:ROR:==(int,int):<=(int,int):org.joda.time.DateTime@withFieldAdded(org.joda.time.DurationFieldType,int):831:amount == 0 |==> amount <= 0
1485:ROR:==(int,int):>=(int,int):org.joda.time.DateTime@withFieldAdded(org.joda.time.DurationFieldType,int):831:amount == 0 |==> amount >= 0
1486:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTime@withFieldAdded(org.joda.time.DurationFieldType,int):831:amount == 0 |==> false
1487:LVR:0:POS:org.joda.time.DateTime@withDurationAdded(long,int):850:0 |==> 1
1488:LVR:0:NEG:org.joda.time.DateTime@withDurationAdded(long,int):850:0 |==> -1
1489:ROR:==(long,long):<=(long,long):org.joda.time.DateTime@withDurationAdded(long,int):850:durationToAdd == 0 |==> durationToAdd <= 0
1490:ROR:==(long,long):>=(long,long):org.joda.time.DateTime@withDurationAdded(long,int):850:durationToAdd == 0 |==> durationToAdd >= 0
1491:ROR:==(long,long):FALSE(long,long):org.joda.time.DateTime@withDurationAdded(long,int):850:durationToAdd == 0 |==> false
1492:LVR:0:POS:org.joda.time.DateTime@withDurationAdded(long,int):850:0 |==> 1
1493:LVR:0:NEG:org.joda.time.DateTime@withDurationAdded(long,int):850:0 |==> -1
1494:ROR:==(int,int):<=(int,int):org.joda.time.DateTime@withDurationAdded(long,int):850:scalar == 0 |==> scalar <= 0
1495:ROR:==(int,int):>=(int,int):org.joda.time.DateTime@withDurationAdded(long,int):850:scalar == 0 |==> scalar >= 0
1496:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTime@withDurationAdded(long,int):850:scalar == 0 |==> false
1497:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTime@withDurationAdded(long,int):850:durationToAdd == 0 || scalar == 0 |==> durationToAdd == 0 != (scalar == 0)
1498:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTime@withDurationAdded(long,int):850:durationToAdd == 0 || scalar == 0 |==> durationToAdd == 0
1499:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTime@withDurationAdded(long,int):850:durationToAdd == 0 || scalar == 0 |==> scalar == 0
1500:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTime@withDurationAdded(long,int):850:durationToAdd == 0 || scalar == 0 |==> true
1501:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTime@withDurationAdded(org.joda.time.ReadableDuration,int):868:durationToAdd == null |==> false
1502:LVR:0:POS:org.joda.time.DateTime@withDurationAdded(org.joda.time.ReadableDuration,int):868:0 |==> 1
1503:LVR:0:NEG:org.joda.time.DateTime@withDurationAdded(org.joda.time.ReadableDuration,int):868:0 |==> -1
1504:ROR:==(int,int):<=(int,int):org.joda.time.DateTime@withDurationAdded(org.joda.time.ReadableDuration,int):868:scalar == 0 |==> scalar <= 0
1505:ROR:==(int,int):>=(int,int):org.joda.time.DateTime@withDurationAdded(org.joda.time.ReadableDuration,int):868:scalar == 0 |==> scalar >= 0
1506:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTime@withDurationAdded(org.joda.time.ReadableDuration,int):868:scalar == 0 |==> false
1507:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTime@withDurationAdded(org.joda.time.ReadableDuration,int):868:durationToAdd == null || scalar == 0 |==> durationToAdd == null != (scalar == 0)
1508:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTime@withDurationAdded(org.joda.time.ReadableDuration,int):868:durationToAdd == null || scalar == 0 |==> durationToAdd == null
1509:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTime@withDurationAdded(org.joda.time.ReadableDuration,int):868:durationToAdd == null || scalar == 0 |==> scalar == 0
1510:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTime@withDurationAdded(org.joda.time.ReadableDuration,int):868:durationToAdd == null || scalar == 0 |==> true
1511:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTime@withPeriodAdded(org.joda.time.ReadablePeriod,int):890:period == null |==> false
1512:LVR:0:POS:org.joda.time.DateTime@withPeriodAdded(org.joda.time.ReadablePeriod,int):890:0 |==> 1
1513:LVR:0:NEG:org.joda.time.DateTime@withPeriodAdded(org.joda.time.ReadablePeriod,int):890:0 |==> -1
1514:ROR:==(int,int):<=(int,int):org.joda.time.DateTime@withPeriodAdded(org.joda.time.ReadablePeriod,int):890:scalar == 0 |==> scalar <= 0
1515:ROR:==(int,int):>=(int,int):org.joda.time.DateTime@withPeriodAdded(org.joda.time.ReadablePeriod,int):890:scalar == 0 |==> scalar >= 0
1516:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTime@withPeriodAdded(org.joda.time.ReadablePeriod,int):890:scalar == 0 |==> false
1517:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTime@withPeriodAdded(org.joda.time.ReadablePeriod,int):890:period == null || scalar == 0 |==> period == null != (scalar == 0)
1518:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTime@withPeriodAdded(org.joda.time.ReadablePeriod,int):890:period == null || scalar == 0 |==> period == null
1519:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTime@withPeriodAdded(org.joda.time.ReadablePeriod,int):890:period == null || scalar == 0 |==> scalar == 0
1520:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTime@withPeriodAdded(org.joda.time.ReadablePeriod,int):890:period == null || scalar == 0 |==> true
1521:LVR:POS:0:org.joda.time.DateTime@plus(long):909:1 |==> 0
1522:LVR:POS:NEG:org.joda.time.DateTime@plus(long):909:1 |==> -1
1523:LVR:POS:0:org.joda.time.DateTime@plus(org.joda.time.ReadableDuration):923:1 |==> 0
1524:LVR:POS:NEG:org.joda.time.DateTime@plus(org.joda.time.ReadableDuration):923:1 |==> -1
1525:LVR:POS:0:org.joda.time.DateTime@plus(org.joda.time.ReadablePeriod):949:1 |==> 0
1526:LVR:POS:NEG:org.joda.time.DateTime@plus(org.joda.time.ReadablePeriod):949:1 |==> -1
1527:LVR:0:POS:org.joda.time.DateTime@plusYears(int):976:0 |==> 1
1528:LVR:0:NEG:org.joda.time.DateTime@plusYears(int):976:0 |==> -1
1529:ROR:==(int,int):<=(int,int):org.joda.time.DateTime@plusYears(int):976:years == 0 |==> years <= 0
1530:ROR:==(int,int):>=(int,int):org.joda.time.DateTime@plusYears(int):976:years == 0 |==> years >= 0
1531:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTime@plusYears(int):976:years == 0 |==> false
1532:LVR:0:POS:org.joda.time.DateTime@plusMonths(int):1006:0 |==> 1
1533:LVR:0:NEG:org.joda.time.DateTime@plusMonths(int):1006:0 |==> -1
1534:ROR:==(int,int):<=(int,int):org.joda.time.DateTime@plusMonths(int):1006:months == 0 |==> months <= 0
1535:ROR:==(int,int):>=(int,int):org.joda.time.DateTime@plusMonths(int):1006:months == 0 |==> months >= 0
1536:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTime@plusMonths(int):1006:months == 0 |==> false
1537:LVR:0:POS:org.joda.time.DateTime@plusWeeks(int):1032:0 |==> 1
1538:LVR:0:NEG:org.joda.time.DateTime@plusWeeks(int):1032:0 |==> -1
1539:ROR:==(int,int):<=(int,int):org.joda.time.DateTime@plusWeeks(int):1032:weeks == 0 |==> weeks <= 0
1540:ROR:==(int,int):>=(int,int):org.joda.time.DateTime@plusWeeks(int):1032:weeks == 0 |==> weeks >= 0
1541:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTime@plusWeeks(int):1032:weeks == 0 |==> false
1542:LVR:0:POS:org.joda.time.DateTime@plusDays(int):1067:0 |==> 1
1543:LVR:0:NEG:org.joda.time.DateTime@plusDays(int):1067:0 |==> -1
1544:ROR:==(int,int):<=(int,int):org.joda.time.DateTime@plusDays(int):1067:days == 0 |==> days <= 0
1545:ROR:==(int,int):>=(int,int):org.joda.time.DateTime@plusDays(int):1067:days == 0 |==> days >= 0
1546:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTime@plusDays(int):1067:days == 0 |==> false
1547:LVR:0:POS:org.joda.time.DateTime@plusHours(int):1098:0 |==> 1
1548:LVR:0:NEG:org.joda.time.DateTime@plusHours(int):1098:0 |==> -1
1549:ROR:==(int,int):<=(int,int):org.joda.time.DateTime@plusHours(int):1098:hours == 0 |==> hours <= 0
1550:ROR:==(int,int):>=(int,int):org.joda.time.DateTime@plusHours(int):1098:hours == 0 |==> hours >= 0
1551:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTime@plusHours(int):1098:hours == 0 |==> false
1552:LVR:0:POS:org.joda.time.DateTime@plusMinutes(int):1125:0 |==> 1
1553:LVR:0:NEG:org.joda.time.DateTime@plusMinutes(int):1125:0 |==> -1
1554:ROR:==(int,int):<=(int,int):org.joda.time.DateTime@plusMinutes(int):1125:minutes == 0 |==> minutes <= 0
1555:ROR:==(int,int):>=(int,int):org.joda.time.DateTime@plusMinutes(int):1125:minutes == 0 |==> minutes >= 0
1556:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTime@plusMinutes(int):1125:minutes == 0 |==> false
1557:LVR:0:POS:org.joda.time.DateTime@plusSeconds(int):1152:0 |==> 1
1558:LVR:0:NEG:org.joda.time.DateTime@plusSeconds(int):1152:0 |==> -1
1559:ROR:==(int,int):<=(int,int):org.joda.time.DateTime@plusSeconds(int):1152:seconds == 0 |==> seconds <= 0
1560:ROR:==(int,int):>=(int,int):org.joda.time.DateTime@plusSeconds(int):1152:seconds == 0 |==> seconds >= 0
1561:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTime@plusSeconds(int):1152:seconds == 0 |==> false
1562:LVR:0:POS:org.joda.time.DateTime@plusMillis(int):1178:0 |==> 1
1563:LVR:0:NEG:org.joda.time.DateTime@plusMillis(int):1178:0 |==> -1
1564:ROR:==(int,int):<=(int,int):org.joda.time.DateTime@plusMillis(int):1178:millis == 0 |==> millis <= 0
1565:ROR:==(int,int):>=(int,int):org.joda.time.DateTime@plusMillis(int):1178:millis == 0 |==> millis >= 0
1566:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTime@plusMillis(int):1178:millis == 0 |==> false
1567:LVR:NEG:0:org.joda.time.DateTime@minus(long):1197:-1 |==> 0
1568:LVR:NEG:POS:org.joda.time.DateTime@minus(long):1197:-1 |==> 1
1569:LVR:NEG:0:org.joda.time.DateTime@minus(org.joda.time.ReadableDuration):1211:-1 |==> 0
1570:LVR:NEG:POS:org.joda.time.DateTime@minus(org.joda.time.ReadableDuration):1211:-1 |==> 1
1571:LVR:NEG:0:org.joda.time.DateTime@minus(org.joda.time.ReadablePeriod):1238:-1 |==> 0
1572:LVR:NEG:POS:org.joda.time.DateTime@minus(org.joda.time.ReadablePeriod):1238:-1 |==> 1
1573:LVR:0:POS:org.joda.time.DateTime@minusYears(int):1265:0 |==> 1
1574:LVR:0:NEG:org.joda.time.DateTime@minusYears(int):1265:0 |==> -1
1575:ROR:==(int,int):<=(int,int):org.joda.time.DateTime@minusYears(int):1265:years == 0 |==> years <= 0
1576:ROR:==(int,int):>=(int,int):org.joda.time.DateTime@minusYears(int):1265:years == 0 |==> years >= 0
1577:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTime@minusYears(int):1265:years == 0 |==> false
1578:LVR:0:POS:org.joda.time.DateTime@minusMonths(int):1295:0 |==> 1
1579:LVR:0:NEG:org.joda.time.DateTime@minusMonths(int):1295:0 |==> -1
1580:ROR:==(int,int):<=(int,int):org.joda.time.DateTime@minusMonths(int):1295:months == 0 |==> months <= 0
1581:ROR:==(int,int):>=(int,int):org.joda.time.DateTime@minusMonths(int):1295:months == 0 |==> months >= 0
1582:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTime@minusMonths(int):1295:months == 0 |==> false
1583:LVR:0:POS:org.joda.time.DateTime@minusWeeks(int):1321:0 |==> 1
1584:LVR:0:NEG:org.joda.time.DateTime@minusWeeks(int):1321:0 |==> -1
1585:ROR:==(int,int):<=(int,int):org.joda.time.DateTime@minusWeeks(int):1321:weeks == 0 |==> weeks <= 0
1586:ROR:==(int,int):>=(int,int):org.joda.time.DateTime@minusWeeks(int):1321:weeks == 0 |==> weeks >= 0
1587:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTime@minusWeeks(int):1321:weeks == 0 |==> false
1588:LVR:0:POS:org.joda.time.DateTime@minusDays(int):1356:0 |==> 1
1589:LVR:0:NEG:org.joda.time.DateTime@minusDays(int):1356:0 |==> -1
1590:ROR:==(int,int):<=(int,int):org.joda.time.DateTime@minusDays(int):1356:days == 0 |==> days <= 0
1591:ROR:==(int,int):>=(int,int):org.joda.time.DateTime@minusDays(int):1356:days == 0 |==> days >= 0
1592:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTime@minusDays(int):1356:days == 0 |==> false
1593:LVR:0:POS:org.joda.time.DateTime@minusHours(int):1388:0 |==> 1
1594:LVR:0:NEG:org.joda.time.DateTime@minusHours(int):1388:0 |==> -1
1595:ROR:==(int,int):<=(int,int):org.joda.time.DateTime@minusHours(int):1388:hours == 0 |==> hours <= 0
1596:ROR:==(int,int):>=(int,int):org.joda.time.DateTime@minusHours(int):1388:hours == 0 |==> hours >= 0
1597:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTime@minusHours(int):1388:hours == 0 |==> false
1598:LVR:0:POS:org.joda.time.DateTime@minusMinutes(int):1415:0 |==> 1
1599:LVR:0:NEG:org.joda.time.DateTime@minusMinutes(int):1415:0 |==> -1
1600:ROR:==(int,int):<=(int,int):org.joda.time.DateTime@minusMinutes(int):1415:minutes == 0 |==> minutes <= 0
1601:ROR:==(int,int):>=(int,int):org.joda.time.DateTime@minusMinutes(int):1415:minutes == 0 |==> minutes >= 0
1602:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTime@minusMinutes(int):1415:minutes == 0 |==> false
1603:LVR:0:POS:org.joda.time.DateTime@minusSeconds(int):1442:0 |==> 1
1604:LVR:0:NEG:org.joda.time.DateTime@minusSeconds(int):1442:0 |==> -1
1605:ROR:==(int,int):<=(int,int):org.joda.time.DateTime@minusSeconds(int):1442:seconds == 0 |==> seconds <= 0
1606:ROR:==(int,int):>=(int,int):org.joda.time.DateTime@minusSeconds(int):1442:seconds == 0 |==> seconds >= 0
1607:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTime@minusSeconds(int):1442:seconds == 0 |==> false
1608:LVR:0:POS:org.joda.time.DateTime@minusMillis(int):1469:0 |==> 1
1609:LVR:0:NEG:org.joda.time.DateTime@minusMillis(int):1469:0 |==> -1
1610:ROR:==(int,int):<=(int,int):org.joda.time.DateTime@minusMillis(int):1469:millis == 0 |==> millis <= 0
1611:ROR:==(int,int):>=(int,int):org.joda.time.DateTime@minusMillis(int):1469:millis == 0 |==> millis >= 0
1612:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTime@minusMillis(int):1469:millis == 0 |==> false
1613:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTime@property(org.joda.time.DateTimeFieldType):1485:type == null |==> false
1614:LVR:FALSE:TRUE:org.joda.time.DateTime@property(org.joda.time.DateTimeFieldType):1489:false |==> true
1615:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTime@property(org.joda.time.DateTimeFieldType):1489:field.isSupported() == false |==> false
1616:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTime@property(org.joda.time.DateTimeFieldType):1489:field.isSupported() == false |==> field.isSupported()
1617:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTime@property(org.joda.time.DateTimeFieldType):1489:field.isSupported() == false |==> false
1618:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTime$Property@<init>(org.joda.time.DateTime,org.joda.time.DateTimeField):2048:iInstant = instant |==> <NO-OP>
1619:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTime$Property@<init>(org.joda.time.DateTime,org.joda.time.DateTimeField):2049:iField = field |==> <NO-OP>
1620:STD:<CALL>:<NO-OP>:org.joda.time.DateTime$Property@writeObject(java.io.ObjectOutputStream):2056:oos.writeObject(iInstant) |==> <NO-OP>
1621:STD:<CALL>:<NO-OP>:org.joda.time.DateTime$Property@writeObject(java.io.ObjectOutputStream):2057:oos.writeObject(iField.getType()) |==> <NO-OP>
1622:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTime$Property@readObject(java.io.ObjectInputStream):2064:iInstant = (DateTime)oos.readObject() |==> <NO-OP>
1623:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTime$Property@readObject(java.io.ObjectInputStream):2066:iField = type.getField(iInstant.getChronology()) |==> <NO-OP>
1624:COR:IllegalInstantException.isIllegalInstant(ex):TRUE:org.joda.time.DateTime$Property@withMaximumValue():2235:IllegalInstantException.isIllegalInstant(ex) |==> false
1625:COR:IllegalInstantException.isIllegalInstant(ex):FALSE:org.joda.time.DateTime$Property@withMaximumValue():2235:IllegalInstantException.isIllegalInstant(ex) |==> true
1626:AOR:+(long,long):%(long,long):org.joda.time.DateTime$Property@withMaximumValue():2237:getMillis() + DateTimeConstants.MILLIS_PER_DAY |==> getMillis() % DateTimeConstants.MILLIS_PER_DAY
1627:AOR:+(long,long):*(long,long):org.joda.time.DateTime$Property@withMaximumValue():2237:getMillis() + DateTimeConstants.MILLIS_PER_DAY |==> getMillis() * DateTimeConstants.MILLIS_PER_DAY
1628:AOR:+(long,long):-(long,long):org.joda.time.DateTime$Property@withMaximumValue():2237:getMillis() + DateTimeConstants.MILLIS_PER_DAY |==> getMillis() - DateTimeConstants.MILLIS_PER_DAY
1629:AOR:+(long,long):/(long,long):org.joda.time.DateTime$Property@withMaximumValue():2237:getMillis() + DateTimeConstants.MILLIS_PER_DAY |==> getMillis() / DateTimeConstants.MILLIS_PER_DAY
1630:COR:IllegalInstantException.isIllegalInstant(ex):TRUE:org.joda.time.DateTime$Property@withMinimumValue():2264:IllegalInstantException.isIllegalInstant(ex) |==> false
1631:COR:IllegalInstantException.isIllegalInstant(ex):FALSE:org.joda.time.DateTime$Property@withMinimumValue():2264:IllegalInstantException.isIllegalInstant(ex) |==> true
1632:AOR:-(long,long):%(long,long):org.joda.time.DateTime$Property@withMinimumValue():2266:getMillis() - DateTimeConstants.MILLIS_PER_DAY |==> getMillis() % DateTimeConstants.MILLIS_PER_DAY
1633:AOR:-(long,long):*(long,long):org.joda.time.DateTime$Property@withMinimumValue():2266:getMillis() - DateTimeConstants.MILLIS_PER_DAY |==> getMillis() * DateTimeConstants.MILLIS_PER_DAY
1634:AOR:-(long,long):+(long,long):org.joda.time.DateTime$Property@withMinimumValue():2266:getMillis() - DateTimeConstants.MILLIS_PER_DAY |==> getMillis() + DateTimeConstants.MILLIS_PER_DAY
1635:AOR:-(long,long):/(long,long):org.joda.time.DateTime$Property@withMinimumValue():2266:getMillis() - DateTimeConstants.MILLIS_PER_DAY |==> getMillis() / DateTimeConstants.MILLIS_PER_DAY
1636:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseDateTime@<init>(long,org.joda.time.Chronology):125:iChronology = checkChronology(chronology) |==> <NO-OP>
1637:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseDateTime@<init>(long,org.joda.time.Chronology):126:iMillis = checkInstant(instant, iChronology) |==> <NO-OP>
1638:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseDateTime@<init>(java.lang.Object,org.joda.time.DateTimeZone):149:iChronology = chrono |==> <NO-OP>
1639:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseDateTime@<init>(java.lang.Object,org.joda.time.DateTimeZone):150:iMillis = checkInstant(converter.getInstantMillis(instant, chrono), chrono) |==> <NO-OP>
1640:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseDateTime@<init>(java.lang.Object,org.joda.time.Chronology):170:iChronology = checkChronology(converter.getChronology(instant, chronology)) |==> <NO-OP>
1641:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseDateTime@<init>(java.lang.Object,org.joda.time.Chronology):171:iMillis = checkInstant(converter.getInstantMillis(instant, chronology), iChronology) |==> <NO-OP>
1642:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseDateTime@<init>(int,int,int,int,int,int,int,org.joda.time.Chronology):253:iChronology = checkChronology(chronology) |==> <NO-OP>
1643:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseDateTime@<init>(int,int,int,int,int,int,int,org.joda.time.Chronology):256:iMillis = checkInstant(instant, iChronology) |==> <NO-OP>
1644:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseDateTime@setMillis(long):317:iMillis = checkInstant(instant, iChronology) |==> <NO-OP>
1645:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseDateTime@setChronology(org.joda.time.Chronology):329:iChronology = checkChronology(chronology) |==> <NO-OP>
1646:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.AbstractDateTime@get(org.joda.time.DateTimeFieldType):66:type == null |==> false
1647:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.AbstractDateTime@toCalendar(java.util.Locale):270:locale == null |==> false
1648:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.AbstractDateTime@toCalendar(java.util.Locale):271:locale = Locale.getDefault() |==> <NO-OP>
1649:STD:<CALL>:<NO-OP>:org.joda.time.base.AbstractDateTime@toCalendar(java.util.Locale):275:cal.setTime(toDate()) |==> <NO-OP>
1650:STD:<CALL>:<NO-OP>:org.joda.time.base.AbstractDateTime@toGregorianCalendar():296:cal.setTime(toDate()) |==> <NO-OP>
1651:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.AbstractDateTime@toString(java.lang.String):308:pattern == null |==> false
1652:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.AbstractDateTime@toString(java.lang.String,java.util.Locale):322:pattern == null |==> false
1653:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.AbstractInstant@get(org.joda.time.DateTimeFieldType):89:type == null |==> false
1654:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.AbstractInstant@isSupported(org.joda.time.DateTimeFieldType):103:type == null |==> false
1655:LVR:FALSE:TRUE:org.joda.time.base.AbstractInstant@isSupported(org.joda.time.DateTimeFieldType):104:false |==> true
1656:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.AbstractInstant@get(org.joda.time.DateTimeField):124:field == null |==> false
1657:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.AbstractInstant@toDateTime(org.joda.time.DateTimeZone):166:chrono = chrono.withZone(zone) |==> <NO-OP>
1658:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.AbstractInstant@toMutableDateTime(org.joda.time.DateTimeZone):211:chrono = chrono.withZone(zone) |==> <NO-OP>
1659:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.AbstractInstant@equals(java.lang.Object):259:this == readableInstant |==> false
1660:LVR:TRUE:FALSE:org.joda.time.base.AbstractInstant@equals(java.lang.Object):260:true |==> false
1661:LVR:FALSE:TRUE:org.joda.time.base.AbstractInstant@equals(java.lang.Object):262:false |==> true
1662:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.base.AbstractInstant@equals(java.lang.Object):262:readableInstant instanceof ReadableInstant == false |==> false
1663:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.base.AbstractInstant@equals(java.lang.Object):262:readableInstant instanceof ReadableInstant == false |==> readableInstant instanceof ReadableInstant
1664:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.base.AbstractInstant@equals(java.lang.Object):262:readableInstant instanceof ReadableInstant == false |==> false
1665:LVR:FALSE:TRUE:org.joda.time.base.AbstractInstant@equals(java.lang.Object):263:false |==> true
1666:ROR:==(long,long):<=(long,long):org.joda.time.base.AbstractInstant@equals(java.lang.Object):267:getMillis() == otherInstant.getMillis() |==> getMillis() <= otherInstant.getMillis()
1667:ROR:==(long,long):>=(long,long):org.joda.time.base.AbstractInstant@equals(java.lang.Object):267:getMillis() == otherInstant.getMillis() |==> getMillis() >= otherInstant.getMillis()
1668:ROR:==(long,long):FALSE(long,long):org.joda.time.base.AbstractInstant@equals(java.lang.Object):267:getMillis() == otherInstant.getMillis() |==> false
1669:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.base.AbstractInstant@equals(java.lang.Object):267:getMillis() == otherInstant.getMillis() && FieldUtils.equals(getChronology(), otherInstant.getChronology()) |==> getMillis() == otherInstant.getMillis() == FieldUtils.equals(getChronology(), otherInstant.getChronology())
1670:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.base.AbstractInstant@equals(java.lang.Object):267:getMillis() == otherInstant.getMillis() && FieldUtils.equals(getChronology(), otherInstant.getChronology()) |==> false
1671:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.base.AbstractInstant@equals(java.lang.Object):267:getMillis() == otherInstant.getMillis() && FieldUtils.equals(getChronology(), otherInstant.getChronology()) |==> getMillis() == otherInstant.getMillis()
1672:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.base.AbstractInstant@equals(java.lang.Object):268:getMillis() == otherInstant.getMillis() && FieldUtils.equals(getChronology(), otherInstant.getChronology()) |==> FieldUtils.equals(getChronology(), otherInstant.getChronology())
1673:LVR:POS:0:org.joda.time.base.AbstractInstant@hashCode():279:32 |==> 0
1674:LVR:POS:NEG:org.joda.time.base.AbstractInstant@hashCode():279:32 |==> -32
1675:SOR:>>>(long,int):<<(long,int):org.joda.time.base.AbstractInstant@hashCode():279:getMillis() >>> 32 |==> getMillis() << 32
1676:SOR:>>>(long,int):>>(long,int):org.joda.time.base.AbstractInstant@hashCode():279:getMillis() >>> 32 |==> getMillis() >> 32
1677:LOR:^(long,long):&(long,long):org.joda.time.base.AbstractInstant@hashCode():279:getMillis() ^ (getMillis() >>> 32) |==> getMillis() & (getMillis() >>> 32)
1678:LOR:^(long,long):|(long,long):org.joda.time.base.AbstractInstant@hashCode():279:getMillis() ^ (getMillis() >>> 32) |==> getMillis() | (getMillis() >>> 32)
1679:AOR:+(int,int):%(int,int):org.joda.time.base.AbstractInstant@hashCode():279:((int)(getMillis() ^ (getMillis() >>> 32))) + (getChronology().hashCode()) |==> ((int)(getMillis() ^ (getMillis() >>> 32))) % (getChronology().hashCode())
1680:AOR:+(int,int):*(int,int):org.joda.time.base.AbstractInstant@hashCode():279:((int)(getMillis() ^ (getMillis() >>> 32))) + (getChronology().hashCode()) |==> ((int)(getMillis() ^ (getMillis() >>> 32))) * (getChronology().hashCode())
1681:AOR:+(int,int):-(int,int):org.joda.time.base.AbstractInstant@hashCode():279:((int)(getMillis() ^ (getMillis() >>> 32))) + (getChronology().hashCode()) |==> ((int)(getMillis() ^ (getMillis() >>> 32))) - (getChronology().hashCode())
1682:AOR:+(int,int):/(int,int):org.joda.time.base.AbstractInstant@hashCode():279:((int)(getMillis() ^ (getMillis() >>> 32))) + (getChronology().hashCode()) |==> ((int)(getMillis() ^ (getMillis() >>> 32))) / (getChronology().hashCode())
1683:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.AbstractInstant@compareTo(org.joda.time.ReadableInstant):296:this == other |==> false
1684:LVR:0:POS:org.joda.time.base.AbstractInstant@compareTo(org.joda.time.ReadableInstant):297:0 |==> 1
1685:LVR:0:NEG:org.joda.time.base.AbstractInstant@compareTo(org.joda.time.ReadableInstant):297:0 |==> -1
1686:ROR:==(long,long):<=(long,long):org.joda.time.base.AbstractInstant@compareTo(org.joda.time.ReadableInstant):304:thisMillis == otherMillis |==> thisMillis <= otherMillis
1687:ROR:==(long,long):>=(long,long):org.joda.time.base.AbstractInstant@compareTo(org.joda.time.ReadableInstant):304:thisMillis == otherMillis |==> thisMillis >= otherMillis
1688:ROR:==(long,long):FALSE(long,long):org.joda.time.base.AbstractInstant@compareTo(org.joda.time.ReadableInstant):304:thisMillis == otherMillis |==> false
1689:LVR:0:POS:org.joda.time.base.AbstractInstant@compareTo(org.joda.time.ReadableInstant):305:0 |==> 1
1690:LVR:0:NEG:org.joda.time.base.AbstractInstant@compareTo(org.joda.time.ReadableInstant):305:0 |==> -1
1691:ROR:<(long,long):!=(long,long):org.joda.time.base.AbstractInstant@compareTo(org.joda.time.ReadableInstant):307:thisMillis < otherMillis |==> thisMillis != otherMillis
1692:ROR:<(long,long):<=(long,long):org.joda.time.base.AbstractInstant@compareTo(org.joda.time.ReadableInstant):307:thisMillis < otherMillis |==> thisMillis <= otherMillis
1693:ROR:<(long,long):FALSE(long,long):org.joda.time.base.AbstractInstant@compareTo(org.joda.time.ReadableInstant):307:thisMillis < otherMillis |==> false
1694:LVR:NEG:0:org.joda.time.base.AbstractInstant@compareTo(org.joda.time.ReadableInstant):308:-1 |==> 0
1695:LVR:NEG:POS:org.joda.time.base.AbstractInstant@compareTo(org.joda.time.ReadableInstant):308:-1 |==> 1
1696:LVR:POS:0:org.joda.time.base.AbstractInstant@compareTo(org.joda.time.ReadableInstant):310:1 |==> 0
1697:LVR:POS:NEG:org.joda.time.base.AbstractInstant@compareTo(org.joda.time.ReadableInstant):310:1 |==> -1
1698:ROR:>(long,long):!=(long,long):org.joda.time.base.AbstractInstant@isAfter(long):323:getMillis() > instant |==> getMillis() != instant
1699:ROR:>(long,long):>=(long,long):org.joda.time.base.AbstractInstant@isAfter(long):323:getMillis() > instant |==> getMillis() >= instant
1700:ROR:>(long,long):FALSE(long,long):org.joda.time.base.AbstractInstant@isAfter(long):323:getMillis() > instant |==> false
1701:ROR:<(long,long):!=(long,long):org.joda.time.base.AbstractInstant@isBefore(long):357:getMillis() < instant |==> getMillis() != instant
1702:ROR:<(long,long):<=(long,long):org.joda.time.base.AbstractInstant@isBefore(long):357:getMillis() < instant |==> getMillis() <= instant
1703:ROR:<(long,long):FALSE(long,long):org.joda.time.base.AbstractInstant@isBefore(long):357:getMillis() < instant |==> false
1704:ROR:==(long,long):<=(long,long):org.joda.time.base.AbstractInstant@isEqual(long):391:getMillis() == instant |==> getMillis() <= instant
1705:ROR:==(long,long):>=(long,long):org.joda.time.base.AbstractInstant@isEqual(long):391:getMillis() == instant |==> getMillis() >= instant
1706:ROR:==(long,long):FALSE(long,long):org.joda.time.base.AbstractInstant@isEqual(long):391:getMillis() == instant |==> false
1707:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.AbstractInstant@toString(org.joda.time.format.DateTimeFormatter):436:formatter == null |==> false
1708:LVR:POS:0:org.joda.time.PeriodType:56:32 |==> 0
1709:LVR:POS:NEG:org.joda.time.PeriodType:56:32 |==> -32
1710:LVR:0:POS:org.joda.time.PeriodType:58:0 |==> 1
1711:LVR:0:NEG:org.joda.time.PeriodType:58:0 |==> -1
1712:LVR:POS:0:org.joda.time.PeriodType:59:1 |==> 0
1713:LVR:POS:NEG:org.joda.time.PeriodType:59:1 |==> -1
1714:LVR:POS:0:org.joda.time.PeriodType:60:2 |==> 0
1715:LVR:POS:NEG:org.joda.time.PeriodType:60:2 |==> -2
1716:LVR:POS:0:org.joda.time.PeriodType:61:3 |==> 0
1717:LVR:POS:NEG:org.joda.time.PeriodType:61:3 |==> -3
1718:LVR:POS:0:org.joda.time.PeriodType:62:4 |==> 0
1719:LVR:POS:NEG:org.joda.time.PeriodType:62:4 |==> -4
1720:LVR:POS:0:org.joda.time.PeriodType:63:5 |==> 0
1721:LVR:POS:NEG:org.joda.time.PeriodType:63:5 |==> -5
1722:LVR:POS:0:org.joda.time.PeriodType:64:6 |==> 0
1723:LVR:POS:NEG:org.joda.time.PeriodType:64:6 |==> -6
1724:LVR:POS:0:org.joda.time.PeriodType:65:7 |==> 0
1725:LVR:POS:NEG:org.joda.time.PeriodType:65:7 |==> -7
1726:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.PeriodType@standard():103:type == null |==> false
1727:LVR:0:POS:org.joda.time.PeriodType@standard():112:0 |==> 1
1728:LVR:0:NEG:org.joda.time.PeriodType@standard():112:0 |==> -1
1729:LVR:POS:0:org.joda.time.PeriodType@standard():112:1 |==> 0
1730:LVR:POS:NEG:org.joda.time.PeriodType@standard():112:1 |==> -1
1731:LVR:POS:0:org.joda.time.PeriodType@standard():112:2 |==> 0
1732:LVR:POS:NEG:org.joda.time.PeriodType@standard():112:2 |==> -2
1733:LVR:POS:0:org.joda.time.PeriodType@standard():112:3 |==> 0
1734:LVR:POS:NEG:org.joda.time.PeriodType@standard():112:3 |==> -3
1735:LVR:POS:0:org.joda.time.PeriodType@standard():112:4 |==> 0
1736:LVR:POS:NEG:org.joda.time.PeriodType@standard():112:4 |==> -4
1737:LVR:POS:0:org.joda.time.PeriodType@standard():112:5 |==> 0
1738:LVR:POS:NEG:org.joda.time.PeriodType@standard():112:5 |==> -5
1739:LVR:POS:0:org.joda.time.PeriodType@standard():112:6 |==> 0
1740:LVR:POS:NEG:org.joda.time.PeriodType@standard():112:6 |==> -6
1741:LVR:POS:0:org.joda.time.PeriodType@standard():112:7 |==> 0
1742:LVR:POS:NEG:org.joda.time.PeriodType@standard():112:7 |==> -7
1743:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@standard():104:type = new PeriodType("Standard", new DurationFieldType[]{DurationFieldType.years(), DurationFieldType.months(), DurationFieldType.weeks(), DurationFieldType.days(), DurationFieldType.hours(), DurationFieldType.minutes(), DurationFieldType.seconds(), DurationFieldType.millis()}, new int[]{0, 1, 2, 3, 4, 5, 6, 7}) |==> <NO-OP>
1744:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@standard():114:cStandard = type |==> <NO-OP>
1745:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.PeriodType@yearMonthDayTime():135:type == null |==> false
1746:LVR:0:POS:org.joda.time.PeriodType@yearMonthDayTime():144:0 |==> 1
1747:LVR:0:NEG:org.joda.time.PeriodType@yearMonthDayTime():144:0 |==> -1
1748:LVR:POS:0:org.joda.time.PeriodType@yearMonthDayTime():144:1 |==> 0
1749:LVR:POS:NEG:org.joda.time.PeriodType@yearMonthDayTime():144:1 |==> -1
1750:LVR:NEG:0:org.joda.time.PeriodType@yearMonthDayTime():144:-1 |==> 0
1751:LVR:NEG:POS:org.joda.time.PeriodType@yearMonthDayTime():144:-1 |==> 1
1752:LVR:POS:0:org.joda.time.PeriodType@yearMonthDayTime():144:2 |==> 0
1753:LVR:POS:NEG:org.joda.time.PeriodType@yearMonthDayTime():144:2 |==> -2
1754:LVR:POS:0:org.joda.time.PeriodType@yearMonthDayTime():144:3 |==> 0
1755:LVR:POS:NEG:org.joda.time.PeriodType@yearMonthDayTime():144:3 |==> -3
1756:LVR:POS:0:org.joda.time.PeriodType@yearMonthDayTime():144:4 |==> 0
1757:LVR:POS:NEG:org.joda.time.PeriodType@yearMonthDayTime():144:4 |==> -4
1758:LVR:POS:0:org.joda.time.PeriodType@yearMonthDayTime():144:5 |==> 0
1759:LVR:POS:NEG:org.joda.time.PeriodType@yearMonthDayTime():144:5 |==> -5
1760:LVR:POS:0:org.joda.time.PeriodType@yearMonthDayTime():144:6 |==> 0
1761:LVR:POS:NEG:org.joda.time.PeriodType@yearMonthDayTime():144:6 |==> -6
1762:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@yearMonthDayTime():136:type = new PeriodType("YearMonthDayTime", new DurationFieldType[]{DurationFieldType.years(), DurationFieldType.months(), DurationFieldType.days(), DurationFieldType.hours(), DurationFieldType.minutes(), DurationFieldType.seconds(), DurationFieldType.millis()}, new int[]{0, 1, -1, 2, 3, 4, 5, 6}) |==> <NO-OP>
1763:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@yearMonthDayTime():146:cYMDTime = type |==> <NO-OP>
1764:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.PeriodType@yearMonthDay():164:type == null |==> false
1765:LVR:0:POS:org.joda.time.PeriodType@yearMonthDay():171:0 |==> 1
1766:LVR:0:NEG:org.joda.time.PeriodType@yearMonthDay():171:0 |==> -1
1767:LVR:POS:0:org.joda.time.PeriodType@yearMonthDay():171:1 |==> 0
1768:LVR:POS:NEG:org.joda.time.PeriodType@yearMonthDay():171:1 |==> -1
1769:LVR:NEG:0:org.joda.time.PeriodType@yearMonthDay():171:-1 |==> 0
1770:LVR:NEG:POS:org.joda.time.PeriodType@yearMonthDay():171:-1 |==> 1
1771:LVR:POS:0:org.joda.time.PeriodType@yearMonthDay():171:2 |==> 0
1772:LVR:POS:NEG:org.joda.time.PeriodType@yearMonthDay():171:2 |==> -2
1773:LVR:NEG:0:org.joda.time.PeriodType@yearMonthDay():171:-1 |==> 0
1774:LVR:NEG:POS:org.joda.time.PeriodType@yearMonthDay():171:-1 |==> 1
1775:LVR:NEG:0:org.joda.time.PeriodType@yearMonthDay():171:-1 |==> 0
1776:LVR:NEG:POS:org.joda.time.PeriodType@yearMonthDay():171:-1 |==> 1
1777:LVR:NEG:0:org.joda.time.PeriodType@yearMonthDay():171:-1 |==> 0
1778:LVR:NEG:POS:org.joda.time.PeriodType@yearMonthDay():171:-1 |==> 1
1779:LVR:NEG:0:org.joda.time.PeriodType@yearMonthDay():171:-1 |==> 0
1780:LVR:NEG:POS:org.joda.time.PeriodType@yearMonthDay():171:-1 |==> 1
1781:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@yearMonthDay():165:type = new PeriodType("YearMonthDay", new DurationFieldType[]{DurationFieldType.years(), DurationFieldType.months(), DurationFieldType.days()}, new int[]{0, 1, -1, 2, -1, -1, -1, -1}) |==> <NO-OP>
1782:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@yearMonthDay():173:cYMD = type |==> <NO-OP>
1783:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.PeriodType@yearWeekDayTime():194:type == null |==> false
1784:LVR:0:POS:org.joda.time.PeriodType@yearWeekDayTime():203:0 |==> 1
1785:LVR:0:NEG:org.joda.time.PeriodType@yearWeekDayTime():203:0 |==> -1
1786:LVR:NEG:0:org.joda.time.PeriodType@yearWeekDayTime():203:-1 |==> 0
1787:LVR:NEG:POS:org.joda.time.PeriodType@yearWeekDayTime():203:-1 |==> 1
1788:LVR:POS:0:org.joda.time.PeriodType@yearWeekDayTime():203:1 |==> 0
1789:LVR:POS:NEG:org.joda.time.PeriodType@yearWeekDayTime():203:1 |==> -1
1790:LVR:POS:0:org.joda.time.PeriodType@yearWeekDayTime():203:2 |==> 0
1791:LVR:POS:NEG:org.joda.time.PeriodType@yearWeekDayTime():203:2 |==> -2
1792:LVR:POS:0:org.joda.time.PeriodType@yearWeekDayTime():203:3 |==> 0
1793:LVR:POS:NEG:org.joda.time.PeriodType@yearWeekDayTime():203:3 |==> -3
1794:LVR:POS:0:org.joda.time.PeriodType@yearWeekDayTime():203:4 |==> 0
1795:LVR:POS:NEG:org.joda.time.PeriodType@yearWeekDayTime():203:4 |==> -4
1796:LVR:POS:0:org.joda.time.PeriodType@yearWeekDayTime():203:5 |==> 0
1797:LVR:POS:NEG:org.joda.time.PeriodType@yearWeekDayTime():203:5 |==> -5
1798:LVR:POS:0:org.joda.time.PeriodType@yearWeekDayTime():203:6 |==> 0
1799:LVR:POS:NEG:org.joda.time.PeriodType@yearWeekDayTime():203:6 |==> -6
1800:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@yearWeekDayTime():195:type = new PeriodType("YearWeekDayTime", new DurationFieldType[]{DurationFieldType.years(), DurationFieldType.weeks(), DurationFieldType.days(), DurationFieldType.hours(), DurationFieldType.minutes(), DurationFieldType.seconds(), DurationFieldType.millis()}, new int[]{0, -1, 1, 2, 3, 4, 5, 6}) |==> <NO-OP>
1801:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@yearWeekDayTime():205:cYWDTime = type |==> <NO-OP>
1802:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.PeriodType@yearWeekDay():223:type == null |==> false
1803:LVR:0:POS:org.joda.time.PeriodType@yearWeekDay():230:0 |==> 1
1804:LVR:0:NEG:org.joda.time.PeriodType@yearWeekDay():230:0 |==> -1
1805:LVR:NEG:0:org.joda.time.PeriodType@yearWeekDay():230:-1 |==> 0
1806:LVR:NEG:POS:org.joda.time.PeriodType@yearWeekDay():230:-1 |==> 1
1807:LVR:POS:0:org.joda.time.PeriodType@yearWeekDay():230:1 |==> 0
1808:LVR:POS:NEG:org.joda.time.PeriodType@yearWeekDay():230:1 |==> -1
1809:LVR:POS:0:org.joda.time.PeriodType@yearWeekDay():230:2 |==> 0
1810:LVR:POS:NEG:org.joda.time.PeriodType@yearWeekDay():230:2 |==> -2
1811:LVR:NEG:0:org.joda.time.PeriodType@yearWeekDay():230:-1 |==> 0
1812:LVR:NEG:POS:org.joda.time.PeriodType@yearWeekDay():230:-1 |==> 1
1813:LVR:NEG:0:org.joda.time.PeriodType@yearWeekDay():230:-1 |==> 0
1814:LVR:NEG:POS:org.joda.time.PeriodType@yearWeekDay():230:-1 |==> 1
1815:LVR:NEG:0:org.joda.time.PeriodType@yearWeekDay():230:-1 |==> 0
1816:LVR:NEG:POS:org.joda.time.PeriodType@yearWeekDay():230:-1 |==> 1
1817:LVR:NEG:0:org.joda.time.PeriodType@yearWeekDay():230:-1 |==> 0
1818:LVR:NEG:POS:org.joda.time.PeriodType@yearWeekDay():230:-1 |==> 1
1819:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@yearWeekDay():224:type = new PeriodType("YearWeekDay", new DurationFieldType[]{DurationFieldType.years(), DurationFieldType.weeks(), DurationFieldType.days()}, new int[]{0, -1, 1, 2, -1, -1, -1, -1}) |==> <NO-OP>
1820:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@yearWeekDay():232:cYWD = type |==> <NO-OP>
1821:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.PeriodType@yearDayTime():252:type == null |==> false
1822:LVR:0:POS:org.joda.time.PeriodType@yearDayTime():260:0 |==> 1
1823:LVR:0:NEG:org.joda.time.PeriodType@yearDayTime():260:0 |==> -1
1824:LVR:NEG:0:org.joda.time.PeriodType@yearDayTime():260:-1 |==> 0
1825:LVR:NEG:POS:org.joda.time.PeriodType@yearDayTime():260:-1 |==> 1
1826:LVR:NEG:0:org.joda.time.PeriodType@yearDayTime():260:-1 |==> 0
1827:LVR:NEG:POS:org.joda.time.PeriodType@yearDayTime():260:-1 |==> 1
1828:LVR:POS:0:org.joda.time.PeriodType@yearDayTime():260:1 |==> 0
1829:LVR:POS:NEG:org.joda.time.PeriodType@yearDayTime():260:1 |==> -1
1830:LVR:POS:0:org.joda.time.PeriodType@yearDayTime():260:2 |==> 0
1831:LVR:POS:NEG:org.joda.time.PeriodType@yearDayTime():260:2 |==> -2
1832:LVR:POS:0:org.joda.time.PeriodType@yearDayTime():260:3 |==> 0
1833:LVR:POS:NEG:org.joda.time.PeriodType@yearDayTime():260:3 |==> -3
1834:LVR:POS:0:org.joda.time.PeriodType@yearDayTime():260:4 |==> 0
1835:LVR:POS:NEG:org.joda.time.PeriodType@yearDayTime():260:4 |==> -4
1836:LVR:POS:0:org.joda.time.PeriodType@yearDayTime():260:5 |==> 0
1837:LVR:POS:NEG:org.joda.time.PeriodType@yearDayTime():260:5 |==> -5
1838:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@yearDayTime():253:type = new PeriodType("YearDayTime", new DurationFieldType[]{DurationFieldType.years(), DurationFieldType.days(), DurationFieldType.hours(), DurationFieldType.minutes(), DurationFieldType.seconds(), DurationFieldType.millis()}, new int[]{0, -1, -1, 1, 2, 3, 4, 5}) |==> <NO-OP>
1839:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@yearDayTime():262:cYDTime = type |==> <NO-OP>
1840:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.PeriodType@yearDay():279:type == null |==> false
1841:LVR:0:POS:org.joda.time.PeriodType@yearDay():285:0 |==> 1
1842:LVR:0:NEG:org.joda.time.PeriodType@yearDay():285:0 |==> -1
1843:LVR:NEG:0:org.joda.time.PeriodType@yearDay():285:-1 |==> 0
1844:LVR:NEG:POS:org.joda.time.PeriodType@yearDay():285:-1 |==> 1
1845:LVR:NEG:0:org.joda.time.PeriodType@yearDay():285:-1 |==> 0
1846:LVR:NEG:POS:org.joda.time.PeriodType@yearDay():285:-1 |==> 1
1847:LVR:POS:0:org.joda.time.PeriodType@yearDay():285:1 |==> 0
1848:LVR:POS:NEG:org.joda.time.PeriodType@yearDay():285:1 |==> -1
1849:LVR:NEG:0:org.joda.time.PeriodType@yearDay():285:-1 |==> 0
1850:LVR:NEG:POS:org.joda.time.PeriodType@yearDay():285:-1 |==> 1
1851:LVR:NEG:0:org.joda.time.PeriodType@yearDay():285:-1 |==> 0
1852:LVR:NEG:POS:org.joda.time.PeriodType@yearDay():285:-1 |==> 1
1853:LVR:NEG:0:org.joda.time.PeriodType@yearDay():285:-1 |==> 0
1854:LVR:NEG:POS:org.joda.time.PeriodType@yearDay():285:-1 |==> 1
1855:LVR:NEG:0:org.joda.time.PeriodType@yearDay():285:-1 |==> 0
1856:LVR:NEG:POS:org.joda.time.PeriodType@yearDay():285:-1 |==> 1
1857:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@yearDay():280:type = new PeriodType("YearDay", new DurationFieldType[]{DurationFieldType.years(), DurationFieldType.days()}, new int[]{0, -1, -1, 1, -1, -1, -1, -1}) |==> <NO-OP>
1858:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@yearDay():287:cYD = type |==> <NO-OP>
1859:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.PeriodType@dayTime():306:type == null |==> false
1860:LVR:NEG:0:org.joda.time.PeriodType@dayTime():314:-1 |==> 0
1861:LVR:NEG:POS:org.joda.time.PeriodType@dayTime():314:-1 |==> 1
1862:LVR:NEG:0:org.joda.time.PeriodType@dayTime():314:-1 |==> 0
1863:LVR:NEG:POS:org.joda.time.PeriodType@dayTime():314:-1 |==> 1
1864:LVR:NEG:0:org.joda.time.PeriodType@dayTime():314:-1 |==> 0
1865:LVR:NEG:POS:org.joda.time.PeriodType@dayTime():314:-1 |==> 1
1866:LVR:0:POS:org.joda.time.PeriodType@dayTime():314:0 |==> 1
1867:LVR:0:NEG:org.joda.time.PeriodType@dayTime():314:0 |==> -1
1868:LVR:POS:0:org.joda.time.PeriodType@dayTime():314:1 |==> 0
1869:LVR:POS:NEG:org.joda.time.PeriodType@dayTime():314:1 |==> -1
1870:LVR:POS:0:org.joda.time.PeriodType@dayTime():314:2 |==> 0
1871:LVR:POS:NEG:org.joda.time.PeriodType@dayTime():314:2 |==> -2
1872:LVR:POS:0:org.joda.time.PeriodType@dayTime():314:3 |==> 0
1873:LVR:POS:NEG:org.joda.time.PeriodType@dayTime():314:3 |==> -3
1874:LVR:POS:0:org.joda.time.PeriodType@dayTime():314:4 |==> 0
1875:LVR:POS:NEG:org.joda.time.PeriodType@dayTime():314:4 |==> -4
1876:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@dayTime():307:type = new PeriodType("DayTime", new DurationFieldType[]{DurationFieldType.days(), DurationFieldType.hours(), DurationFieldType.minutes(), DurationFieldType.seconds(), DurationFieldType.millis()}, new int[]{-1, -1, -1, 0, 1, 2, 3, 4}) |==> <NO-OP>
1877:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@dayTime():316:cDTime = type |==> <NO-OP>
1878:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.PeriodType@time():334:type == null |==> false
1879:LVR:NEG:0:org.joda.time.PeriodType@time():341:-1 |==> 0
1880:LVR:NEG:POS:org.joda.time.PeriodType@time():341:-1 |==> 1
1881:LVR:NEG:0:org.joda.time.PeriodType@time():341:-1 |==> 0
1882:LVR:NEG:POS:org.joda.time.PeriodType@time():341:-1 |==> 1
1883:LVR:NEG:0:org.joda.time.PeriodType@time():341:-1 |==> 0
1884:LVR:NEG:POS:org.joda.time.PeriodType@time():341:-1 |==> 1
1885:LVR:NEG:0:org.joda.time.PeriodType@time():341:-1 |==> 0
1886:LVR:NEG:POS:org.joda.time.PeriodType@time():341:-1 |==> 1
1887:LVR:0:POS:org.joda.time.PeriodType@time():341:0 |==> 1
1888:LVR:0:NEG:org.joda.time.PeriodType@time():341:0 |==> -1
1889:LVR:POS:0:org.joda.time.PeriodType@time():341:1 |==> 0
1890:LVR:POS:NEG:org.joda.time.PeriodType@time():341:1 |==> -1
1891:LVR:POS:0:org.joda.time.PeriodType@time():341:2 |==> 0
1892:LVR:POS:NEG:org.joda.time.PeriodType@time():341:2 |==> -2
1893:LVR:POS:0:org.joda.time.PeriodType@time():341:3 |==> 0
1894:LVR:POS:NEG:org.joda.time.PeriodType@time():341:3 |==> -3
1895:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@time():335:type = new PeriodType("Time", new DurationFieldType[]{DurationFieldType.hours(), DurationFieldType.minutes(), DurationFieldType.seconds(), DurationFieldType.millis()}, new int[]{-1, -1, -1, -1, 0, 1, 2, 3}) |==> <NO-OP>
1896:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@time():343:cTime = type |==> <NO-OP>
1897:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.PeriodType@years():355:type == null |==> false
1898:LVR:0:POS:org.joda.time.PeriodType@years():359:0 |==> 1
1899:LVR:0:NEG:org.joda.time.PeriodType@years():359:0 |==> -1
1900:LVR:NEG:0:org.joda.time.PeriodType@years():359:-1 |==> 0
1901:LVR:NEG:POS:org.joda.time.PeriodType@years():359:-1 |==> 1
1902:LVR:NEG:0:org.joda.time.PeriodType@years():359:-1 |==> 0
1903:LVR:NEG:POS:org.joda.time.PeriodType@years():359:-1 |==> 1
1904:LVR:NEG:0:org.joda.time.PeriodType@years():359:-1 |==> 0
1905:LVR:NEG:POS:org.joda.time.PeriodType@years():359:-1 |==> 1
1906:LVR:NEG:0:org.joda.time.PeriodType@years():359:-1 |==> 0
1907:LVR:NEG:POS:org.joda.time.PeriodType@years():359:-1 |==> 1
1908:LVR:NEG:0:org.joda.time.PeriodType@years():359:-1 |==> 0
1909:LVR:NEG:POS:org.joda.time.PeriodType@years():359:-1 |==> 1
1910:LVR:NEG:0:org.joda.time.PeriodType@years():359:-1 |==> 0
1911:LVR:NEG:POS:org.joda.time.PeriodType@years():359:-1 |==> 1
1912:LVR:NEG:0:org.joda.time.PeriodType@years():359:-1 |==> 0
1913:LVR:NEG:POS:org.joda.time.PeriodType@years():359:-1 |==> 1
1914:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@years():356:type = new PeriodType("Years", new DurationFieldType[]{DurationFieldType.years()}, new int[]{0, -1, -1, -1, -1, -1, -1, -1}) |==> <NO-OP>
1915:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@years():361:cYears = type |==> <NO-OP>
1916:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.PeriodType@months():373:type == null |==> false
1917:LVR:NEG:0:org.joda.time.PeriodType@months():377:-1 |==> 0
1918:LVR:NEG:POS:org.joda.time.PeriodType@months():377:-1 |==> 1
1919:LVR:0:POS:org.joda.time.PeriodType@months():377:0 |==> 1
1920:LVR:0:NEG:org.joda.time.PeriodType@months():377:0 |==> -1
1921:LVR:NEG:0:org.joda.time.PeriodType@months():377:-1 |==> 0
1922:LVR:NEG:POS:org.joda.time.PeriodType@months():377:-1 |==> 1
1923:LVR:NEG:0:org.joda.time.PeriodType@months():377:-1 |==> 0
1924:LVR:NEG:POS:org.joda.time.PeriodType@months():377:-1 |==> 1
1925:LVR:NEG:0:org.joda.time.PeriodType@months():377:-1 |==> 0
1926:LVR:NEG:POS:org.joda.time.PeriodType@months():377:-1 |==> 1
1927:LVR:NEG:0:org.joda.time.PeriodType@months():377:-1 |==> 0
1928:LVR:NEG:POS:org.joda.time.PeriodType@months():377:-1 |==> 1
1929:LVR:NEG:0:org.joda.time.PeriodType@months():377:-1 |==> 0
1930:LVR:NEG:POS:org.joda.time.PeriodType@months():377:-1 |==> 1
1931:LVR:NEG:0:org.joda.time.PeriodType@months():377:-1 |==> 0
1932:LVR:NEG:POS:org.joda.time.PeriodType@months():377:-1 |==> 1
1933:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@months():374:type = new PeriodType("Months", new DurationFieldType[]{DurationFieldType.months()}, new int[]{-1, 0, -1, -1, -1, -1, -1, -1}) |==> <NO-OP>
1934:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@months():379:cMonths = type |==> <NO-OP>
1935:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.PeriodType@weeks():391:type == null |==> false
1936:LVR:NEG:0:org.joda.time.PeriodType@weeks():395:-1 |==> 0
1937:LVR:NEG:POS:org.joda.time.PeriodType@weeks():395:-1 |==> 1
1938:LVR:NEG:0:org.joda.time.PeriodType@weeks():395:-1 |==> 0
1939:LVR:NEG:POS:org.joda.time.PeriodType@weeks():395:-1 |==> 1
1940:LVR:0:POS:org.joda.time.PeriodType@weeks():395:0 |==> 1
1941:LVR:0:NEG:org.joda.time.PeriodType@weeks():395:0 |==> -1
1942:LVR:NEG:0:org.joda.time.PeriodType@weeks():395:-1 |==> 0
1943:LVR:NEG:POS:org.joda.time.PeriodType@weeks():395:-1 |==> 1
1944:LVR:NEG:0:org.joda.time.PeriodType@weeks():395:-1 |==> 0
1945:LVR:NEG:POS:org.joda.time.PeriodType@weeks():395:-1 |==> 1
1946:LVR:NEG:0:org.joda.time.PeriodType@weeks():395:-1 |==> 0
1947:LVR:NEG:POS:org.joda.time.PeriodType@weeks():395:-1 |==> 1
1948:LVR:NEG:0:org.joda.time.PeriodType@weeks():395:-1 |==> 0
1949:LVR:NEG:POS:org.joda.time.PeriodType@weeks():395:-1 |==> 1
1950:LVR:NEG:0:org.joda.time.PeriodType@weeks():395:-1 |==> 0
1951:LVR:NEG:POS:org.joda.time.PeriodType@weeks():395:-1 |==> 1
1952:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@weeks():392:type = new PeriodType("Weeks", new DurationFieldType[]{DurationFieldType.weeks()}, new int[]{-1, -1, 0, -1, -1, -1, -1, -1}) |==> <NO-OP>
1953:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@weeks():397:cWeeks = type |==> <NO-OP>
1954:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.PeriodType@days():409:type == null |==> false
1955:LVR:NEG:0:org.joda.time.PeriodType@days():413:-1 |==> 0
1956:LVR:NEG:POS:org.joda.time.PeriodType@days():413:-1 |==> 1
1957:LVR:NEG:0:org.joda.time.PeriodType@days():413:-1 |==> 0
1958:LVR:NEG:POS:org.joda.time.PeriodType@days():413:-1 |==> 1
1959:LVR:NEG:0:org.joda.time.PeriodType@days():413:-1 |==> 0
1960:LVR:NEG:POS:org.joda.time.PeriodType@days():413:-1 |==> 1
1961:LVR:0:POS:org.joda.time.PeriodType@days():413:0 |==> 1
1962:LVR:0:NEG:org.joda.time.PeriodType@days():413:0 |==> -1
1963:LVR:NEG:0:org.joda.time.PeriodType@days():413:-1 |==> 0
1964:LVR:NEG:POS:org.joda.time.PeriodType@days():413:-1 |==> 1
1965:LVR:NEG:0:org.joda.time.PeriodType@days():413:-1 |==> 0
1966:LVR:NEG:POS:org.joda.time.PeriodType@days():413:-1 |==> 1
1967:LVR:NEG:0:org.joda.time.PeriodType@days():413:-1 |==> 0
1968:LVR:NEG:POS:org.joda.time.PeriodType@days():413:-1 |==> 1
1969:LVR:NEG:0:org.joda.time.PeriodType@days():413:-1 |==> 0
1970:LVR:NEG:POS:org.joda.time.PeriodType@days():413:-1 |==> 1
1971:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@days():410:type = new PeriodType("Days", new DurationFieldType[]{DurationFieldType.days()}, new int[]{-1, -1, -1, 0, -1, -1, -1, -1}) |==> <NO-OP>
1972:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@days():415:cDays = type |==> <NO-OP>
1973:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.PeriodType@hours():427:type == null |==> false
1974:LVR:NEG:0:org.joda.time.PeriodType@hours():431:-1 |==> 0
1975:LVR:NEG:POS:org.joda.time.PeriodType@hours():431:-1 |==> 1
1976:LVR:NEG:0:org.joda.time.PeriodType@hours():431:-1 |==> 0
1977:LVR:NEG:POS:org.joda.time.PeriodType@hours():431:-1 |==> 1
1978:LVR:NEG:0:org.joda.time.PeriodType@hours():431:-1 |==> 0
1979:LVR:NEG:POS:org.joda.time.PeriodType@hours():431:-1 |==> 1
1980:LVR:NEG:0:org.joda.time.PeriodType@hours():431:-1 |==> 0
1981:LVR:NEG:POS:org.joda.time.PeriodType@hours():431:-1 |==> 1
1982:LVR:0:POS:org.joda.time.PeriodType@hours():431:0 |==> 1
1983:LVR:0:NEG:org.joda.time.PeriodType@hours():431:0 |==> -1
1984:LVR:NEG:0:org.joda.time.PeriodType@hours():431:-1 |==> 0
1985:LVR:NEG:POS:org.joda.time.PeriodType@hours():431:-1 |==> 1
1986:LVR:NEG:0:org.joda.time.PeriodType@hours():431:-1 |==> 0
1987:LVR:NEG:POS:org.joda.time.PeriodType@hours():431:-1 |==> 1
1988:LVR:NEG:0:org.joda.time.PeriodType@hours():431:-1 |==> 0
1989:LVR:NEG:POS:org.joda.time.PeriodType@hours():431:-1 |==> 1
1990:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@hours():428:type = new PeriodType("Hours", new DurationFieldType[]{DurationFieldType.hours()}, new int[]{-1, -1, -1, -1, 0, -1, -1, -1}) |==> <NO-OP>
1991:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@hours():433:cHours = type |==> <NO-OP>
1992:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.PeriodType@minutes():445:type == null |==> false
1993:LVR:NEG:0:org.joda.time.PeriodType@minutes():449:-1 |==> 0
1994:LVR:NEG:POS:org.joda.time.PeriodType@minutes():449:-1 |==> 1
1995:LVR:NEG:0:org.joda.time.PeriodType@minutes():449:-1 |==> 0
1996:LVR:NEG:POS:org.joda.time.PeriodType@minutes():449:-1 |==> 1
1997:LVR:NEG:0:org.joda.time.PeriodType@minutes():449:-1 |==> 0
1998:LVR:NEG:POS:org.joda.time.PeriodType@minutes():449:-1 |==> 1
1999:LVR:NEG:0:org.joda.time.PeriodType@minutes():449:-1 |==> 0
2000:LVR:NEG:POS:org.joda.time.PeriodType@minutes():449:-1 |==> 1
2001:LVR:NEG:0:org.joda.time.PeriodType@minutes():449:-1 |==> 0
2002:LVR:NEG:POS:org.joda.time.PeriodType@minutes():449:-1 |==> 1
2003:LVR:0:POS:org.joda.time.PeriodType@minutes():449:0 |==> 1
2004:LVR:0:NEG:org.joda.time.PeriodType@minutes():449:0 |==> -1
2005:LVR:NEG:0:org.joda.time.PeriodType@minutes():449:-1 |==> 0
2006:LVR:NEG:POS:org.joda.time.PeriodType@minutes():449:-1 |==> 1
2007:LVR:NEG:0:org.joda.time.PeriodType@minutes():449:-1 |==> 0
2008:LVR:NEG:POS:org.joda.time.PeriodType@minutes():449:-1 |==> 1
2009:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@minutes():446:type = new PeriodType("Minutes", new DurationFieldType[]{DurationFieldType.minutes()}, new int[]{-1, -1, -1, -1, -1, 0, -1, -1}) |==> <NO-OP>
2010:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@minutes():451:cMinutes = type |==> <NO-OP>
2011:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.PeriodType@seconds():463:type == null |==> false
2012:LVR:NEG:0:org.joda.time.PeriodType@seconds():467:-1 |==> 0
2013:LVR:NEG:POS:org.joda.time.PeriodType@seconds():467:-1 |==> 1
2014:LVR:NEG:0:org.joda.time.PeriodType@seconds():467:-1 |==> 0
2015:LVR:NEG:POS:org.joda.time.PeriodType@seconds():467:-1 |==> 1
2016:LVR:NEG:0:org.joda.time.PeriodType@seconds():467:-1 |==> 0
2017:LVR:NEG:POS:org.joda.time.PeriodType@seconds():467:-1 |==> 1
2018:LVR:NEG:0:org.joda.time.PeriodType@seconds():467:-1 |==> 0
2019:LVR:NEG:POS:org.joda.time.PeriodType@seconds():467:-1 |==> 1
2020:LVR:NEG:0:org.joda.time.PeriodType@seconds():467:-1 |==> 0
2021:LVR:NEG:POS:org.joda.time.PeriodType@seconds():467:-1 |==> 1
2022:LVR:NEG:0:org.joda.time.PeriodType@seconds():467:-1 |==> 0
2023:LVR:NEG:POS:org.joda.time.PeriodType@seconds():467:-1 |==> 1
2024:LVR:0:POS:org.joda.time.PeriodType@seconds():467:0 |==> 1
2025:LVR:0:NEG:org.joda.time.PeriodType@seconds():467:0 |==> -1
2026:LVR:NEG:0:org.joda.time.PeriodType@seconds():467:-1 |==> 0
2027:LVR:NEG:POS:org.joda.time.PeriodType@seconds():467:-1 |==> 1
2028:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@seconds():464:type = new PeriodType("Seconds", new DurationFieldType[]{DurationFieldType.seconds()}, new int[]{-1, -1, -1, -1, -1, -1, 0, -1}) |==> <NO-OP>
2029:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@seconds():469:cSeconds = type |==> <NO-OP>
2030:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.PeriodType@millis():481:type == null |==> false
2031:LVR:NEG:0:org.joda.time.PeriodType@millis():485:-1 |==> 0
2032:LVR:NEG:POS:org.joda.time.PeriodType@millis():485:-1 |==> 1
2033:LVR:NEG:0:org.joda.time.PeriodType@millis():485:-1 |==> 0
2034:LVR:NEG:POS:org.joda.time.PeriodType@millis():485:-1 |==> 1
2035:LVR:NEG:0:org.joda.time.PeriodType@millis():485:-1 |==> 0
2036:LVR:NEG:POS:org.joda.time.PeriodType@millis():485:-1 |==> 1
2037:LVR:NEG:0:org.joda.time.PeriodType@millis():485:-1 |==> 0
2038:LVR:NEG:POS:org.joda.time.PeriodType@millis():485:-1 |==> 1
2039:LVR:NEG:0:org.joda.time.PeriodType@millis():485:-1 |==> 0
2040:LVR:NEG:POS:org.joda.time.PeriodType@millis():485:-1 |==> 1
2041:LVR:NEG:0:org.joda.time.PeriodType@millis():485:-1 |==> 0
2042:LVR:NEG:POS:org.joda.time.PeriodType@millis():485:-1 |==> 1
2043:LVR:NEG:0:org.joda.time.PeriodType@millis():485:-1 |==> 0
2044:LVR:NEG:POS:org.joda.time.PeriodType@millis():485:-1 |==> 1
2045:LVR:0:POS:org.joda.time.PeriodType@millis():485:0 |==> 1
2046:LVR:0:NEG:org.joda.time.PeriodType@millis():485:0 |==> -1
2047:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@millis():482:type = new PeriodType("Millis", new DurationFieldType[]{DurationFieldType.millis()}, new int[]{-1, -1, -1, -1, -1, -1, -1, 0}) |==> <NO-OP>
2048:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@millis():487:cMillis = type |==> <NO-OP>
2049:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):502:types == null |==> false
2050:LVR:0:POS:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):502:0 |==> 1
2051:LVR:0:NEG:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):502:0 |==> -1
2052:ROR:==(int,int):<=(int,int):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):502:types.length == 0 |==> types.length <= 0
2053:ROR:==(int,int):>=(int,int):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):502:types.length == 0 |==> types.length >= 0
2054:ROR:==(int,int):FALSE(int,int):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):502:types.length == 0 |==> false
2055:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):502:types == null || types.length == 0 |==> types == null != (types.length == 0)
2056:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):502:types == null || types.length == 0 |==> types == null
2057:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):502:types == null || types.length == 0 |==> types.length == 0
2058:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):502:types == null || types.length == 0 |==> true
2059:LVR:0:POS:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):505:0 |==> 1
2060:LVR:0:NEG:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):505:0 |==> -1
2061:ROR:<(int,int):!=(int,int):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):505:i < types.length |==> i != types.length
2062:ROR:<(int,int):<=(int,int):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):505:i < types.length |==> i <= types.length
2063:ROR:<(int,int):FALSE(int,int):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):505:i < types.length |==> false
2064:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):506:types[i] == null |==> false
2065:COR:cache.isEmpty():TRUE:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):511:cache.isEmpty() |==> false
2066:COR:cache.isEmpty():FALSE:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):511:cache.isEmpty() |==> true
2067:STD:<CALL>:<NO-OP>:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):512:cache.put(standard(), standard()) |==> <NO-OP>
2068:STD:<CALL>:<NO-OP>:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):513:cache.put(yearMonthDayTime(), yearMonthDayTime()) |==> <NO-OP>
2069:STD:<CALL>:<NO-OP>:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):514:cache.put(yearMonthDay(), yearMonthDay()) |==> <NO-OP>
2070:STD:<CALL>:<NO-OP>:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):515:cache.put(yearWeekDayTime(), yearWeekDayTime()) |==> <NO-OP>
2071:STD:<CALL>:<NO-OP>:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):516:cache.put(yearWeekDay(), yearWeekDay()) |==> <NO-OP>
2072:STD:<CALL>:<NO-OP>:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):517:cache.put(yearDayTime(), yearDayTime()) |==> <NO-OP>
2073:STD:<CALL>:<NO-OP>:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):518:cache.put(yearDay(), yearDay()) |==> <NO-OP>
2074:STD:<CALL>:<NO-OP>:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):519:cache.put(dayTime(), dayTime()) |==> <NO-OP>
2075:STD:<CALL>:<NO-OP>:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):520:cache.put(time(), time()) |==> <NO-OP>
2076:STD:<CALL>:<NO-OP>:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):521:cache.put(years(), years()) |==> <NO-OP>
2077:STD:<CALL>:<NO-OP>:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):522:cache.put(months(), months()) |==> <NO-OP>
2078:STD:<CALL>:<NO-OP>:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):523:cache.put(weeks(), weeks()) |==> <NO-OP>
2079:STD:<CALL>:<NO-OP>:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):524:cache.put(days(), days()) |==> <NO-OP>
2080:STD:<CALL>:<NO-OP>:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):525:cache.put(hours(), hours()) |==> <NO-OP>
2081:STD:<CALL>:<NO-OP>:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):526:cache.put(minutes(), minutes()) |==> <NO-OP>
2082:STD:<CALL>:<NO-OP>:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):527:cache.put(seconds(), seconds()) |==> <NO-OP>
2083:STD:<CALL>:<NO-OP>:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):528:cache.put(millis(), millis()) |==> <NO-OP>
2084:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):535:cached != null |==> true
2085:LVR:FALSE:TRUE:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):540:false |==> true
2086:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):540:list.remove(DurationFieldType.years()) == false |==> false
2087:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):540:list.remove(DurationFieldType.years()) == false |==> list.remove(DurationFieldType.years())
2088:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):540:list.remove(DurationFieldType.years()) == false |==> false
2089:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):541:type = type.withYearsRemoved() |==> <NO-OP>
2090:LVR:FALSE:TRUE:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):543:false |==> true
2091:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):543:list.remove(DurationFieldType.months()) == false |==> false
2092:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):543:list.remove(DurationFieldType.months()) == false |==> list.remove(DurationFieldType.months())
2093:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):543:list.remove(DurationFieldType.months()) == false |==> false
2094:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):544:type = type.withMonthsRemoved() |==> <NO-OP>
2095:LVR:FALSE:TRUE:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):546:false |==> true
2096:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):546:list.remove(DurationFieldType.weeks()) == false |==> false
2097:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):546:list.remove(DurationFieldType.weeks()) == false |==> list.remove(DurationFieldType.weeks())
2098:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):546:list.remove(DurationFieldType.weeks()) == false |==> false
2099:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):547:type = type.withWeeksRemoved() |==> <NO-OP>
2100:LVR:FALSE:TRUE:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):549:false |==> true
2101:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):549:list.remove(DurationFieldType.days()) == false |==> false
2102:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):549:list.remove(DurationFieldType.days()) == false |==> list.remove(DurationFieldType.days())
2103:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):549:list.remove(DurationFieldType.days()) == false |==> false
2104:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):550:type = type.withDaysRemoved() |==> <NO-OP>
2105:LVR:FALSE:TRUE:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):552:false |==> true
2106:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):552:list.remove(DurationFieldType.hours()) == false |==> false
2107:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):552:list.remove(DurationFieldType.hours()) == false |==> list.remove(DurationFieldType.hours())
2108:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):552:list.remove(DurationFieldType.hours()) == false |==> false
2109:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):553:type = type.withHoursRemoved() |==> <NO-OP>
2110:LVR:FALSE:TRUE:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):555:false |==> true
2111:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):555:list.remove(DurationFieldType.minutes()) == false |==> false
2112:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):555:list.remove(DurationFieldType.minutes()) == false |==> list.remove(DurationFieldType.minutes())
2113:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):555:list.remove(DurationFieldType.minutes()) == false |==> false
2114:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):556:type = type.withMinutesRemoved() |==> <NO-OP>
2115:LVR:FALSE:TRUE:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):558:false |==> true
2116:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):558:list.remove(DurationFieldType.seconds()) == false |==> false
2117:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):558:list.remove(DurationFieldType.seconds()) == false |==> list.remove(DurationFieldType.seconds())
2118:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):558:list.remove(DurationFieldType.seconds()) == false |==> false
2119:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):559:type = type.withSecondsRemoved() |==> <NO-OP>
2120:LVR:FALSE:TRUE:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):561:false |==> true
2121:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):561:list.remove(DurationFieldType.millis()) == false |==> false
2122:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):561:list.remove(DurationFieldType.millis()) == false |==> list.remove(DurationFieldType.millis())
2123:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):561:list.remove(DurationFieldType.millis()) == false |==> false
2124:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):562:type = type.withMillisRemoved() |==> <NO-OP>
2125:LVR:0:POS:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):564:0 |==> 1
2126:LVR:0:NEG:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):564:0 |==> -1
2127:ROR:>(int,int):!=(int,int):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):564:list.size() > 0 |==> list.size() != 0
2128:ROR:>(int,int):>=(int,int):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):564:list.size() > 0 |==> list.size() >= 0
2129:ROR:>(int,int):FALSE(int,int):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):564:list.size() > 0 |==> false
2130:STD:<CALL>:<NO-OP>:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):565:cache.put(inPartType, list) |==> <NO-OP>
2131:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):571:checkedType != null |==> true
2132:STD:<CALL>:<NO-OP>:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):572:cache.put(checkPartType, checkedType) |==> <NO-OP>
2133:STD:<CALL>:<NO-OP>:org.joda.time.PeriodType@forFields(org.joda.time.DurationFieldType[]):575:cache.put(checkPartType, type) |==> <NO-OP>
2134:LVR:0:POS:org.joda.time.PeriodType@isSupported(org.joda.time.DurationFieldType):638:0 |==> 1
2135:LVR:0:NEG:org.joda.time.PeriodType@isSupported(org.joda.time.DurationFieldType):638:0 |==> -1
2136:ROR:>=(int,int):==(int,int):org.joda.time.PeriodType@isSupported(org.joda.time.DurationFieldType):638:indexOf(type) >= 0 |==> indexOf(type) == 0
2137:ROR:>=(int,int):>(int,int):org.joda.time.PeriodType@isSupported(org.joda.time.DurationFieldType):638:indexOf(type) >= 0 |==> indexOf(type) > 0
2138:ROR:>=(int,int):TRUE(int,int):org.joda.time.PeriodType@isSupported(org.joda.time.DurationFieldType):638:indexOf(type) >= 0 |==> true
2139:LVR:0:POS:org.joda.time.PeriodType@indexOf(org.joda.time.DurationFieldType):648:0 |==> 1
2140:LVR:0:NEG:org.joda.time.PeriodType@indexOf(org.joda.time.DurationFieldType):648:0 |==> -1
2141:ROR:<(int,int):!=(int,int):org.joda.time.PeriodType@indexOf(org.joda.time.DurationFieldType):648:i < isize |==> i != isize
2142:ROR:<(int,int):<=(int,int):org.joda.time.PeriodType@indexOf(org.joda.time.DurationFieldType):648:i < isize |==> i <= isize
2143:ROR:<(int,int):FALSE(int,int):org.joda.time.PeriodType@indexOf(org.joda.time.DurationFieldType):648:i < isize |==> false
2144:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.PeriodType@indexOf(org.joda.time.DurationFieldType):649:iTypes[i] == type |==> false
2145:LVR:NEG:0:org.joda.time.PeriodType@indexOf(org.joda.time.DurationFieldType):653:-1 |==> 0
2146:LVR:NEG:POS:org.joda.time.PeriodType@indexOf(org.joda.time.DurationFieldType):653:-1 |==> 1
2147:LVR:NEG:0:org.joda.time.PeriodType@getIndexedField(org.joda.time.ReadablePeriod,int):675:-1 |==> 0
2148:LVR:NEG:POS:org.joda.time.PeriodType@getIndexedField(org.joda.time.ReadablePeriod,int):675:-1 |==> 1
2149:ROR:==(int,int):<=(int,int):org.joda.time.PeriodType@getIndexedField(org.joda.time.ReadablePeriod,int):675:realIndex == -1 |==> realIndex <= -1
2150:ROR:==(int,int):>=(int,int):org.joda.time.PeriodType@getIndexedField(org.joda.time.ReadablePeriod,int):675:realIndex == -1 |==> realIndex >= -1
2151:ROR:==(int,int):FALSE(int,int):org.joda.time.PeriodType@getIndexedField(org.joda.time.ReadablePeriod,int):675:realIndex == -1 |==> false
2152:LVR:0:POS:org.joda.time.PeriodType@getIndexedField(org.joda.time.ReadablePeriod,int):675:0 |==> 1
2153:LVR:0:NEG:org.joda.time.PeriodType@getIndexedField(org.joda.time.ReadablePeriod,int):675:0 |==> -1
2154:LVR:NEG:0:org.joda.time.PeriodType@setIndexedField(org.joda.time.ReadablePeriod,int,int[],int):689:-1 |==> 0
2155:LVR:NEG:POS:org.joda.time.PeriodType@setIndexedField(org.joda.time.ReadablePeriod,int,int[],int):689:-1 |==> 1
2156:ROR:==(int,int):<=(int,int):org.joda.time.PeriodType@setIndexedField(org.joda.time.ReadablePeriod,int,int[],int):689:realIndex == -1 |==> realIndex <= -1
2157:ROR:==(int,int):>=(int,int):org.joda.time.PeriodType@setIndexedField(org.joda.time.ReadablePeriod,int,int[],int):689:realIndex == -1 |==> realIndex >= -1
2158:ROR:==(int,int):FALSE(int,int):org.joda.time.PeriodType@setIndexedField(org.joda.time.ReadablePeriod,int,int[],int):689:realIndex == -1 |==> false
2159:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@setIndexedField(org.joda.time.ReadablePeriod,int,int[],int):692:values[realIndex] = newValue |==> <NO-OP>
2160:LVR:TRUE:FALSE:org.joda.time.PeriodType@setIndexedField(org.joda.time.ReadablePeriod,int,int[],int):693:true |==> false
2161:LVR:0:POS:org.joda.time.PeriodType@addIndexedField(org.joda.time.ReadablePeriod,int,int[],int):707:0 |==> 1
2162:LVR:0:NEG:org.joda.time.PeriodType@addIndexedField(org.joda.time.ReadablePeriod,int,int[],int):707:0 |==> -1
2163:ROR:==(int,int):<=(int,int):org.joda.time.PeriodType@addIndexedField(org.joda.time.ReadablePeriod,int,int[],int):707:valueToAdd == 0 |==> valueToAdd <= 0
2164:ROR:==(int,int):>=(int,int):org.joda.time.PeriodType@addIndexedField(org.joda.time.ReadablePeriod,int,int[],int):707:valueToAdd == 0 |==> valueToAdd >= 0
2165:ROR:==(int,int):FALSE(int,int):org.joda.time.PeriodType@addIndexedField(org.joda.time.ReadablePeriod,int,int[],int):707:valueToAdd == 0 |==> false
2166:LVR:FALSE:TRUE:org.joda.time.PeriodType@addIndexedField(org.joda.time.ReadablePeriod,int,int[],int):708:false |==> true
2167:LVR:NEG:0:org.joda.time.PeriodType@addIndexedField(org.joda.time.ReadablePeriod,int,int[],int):711:-1 |==> 0
2168:LVR:NEG:POS:org.joda.time.PeriodType@addIndexedField(org.joda.time.ReadablePeriod,int,int[],int):711:-1 |==> 1
2169:ROR:==(int,int):<=(int,int):org.joda.time.PeriodType@addIndexedField(org.joda.time.ReadablePeriod,int,int[],int):711:realIndex == -1 |==> realIndex <= -1
2170:ROR:==(int,int):>=(int,int):org.joda.time.PeriodType@addIndexedField(org.joda.time.ReadablePeriod,int,int[],int):711:realIndex == -1 |==> realIndex >= -1
2171:ROR:==(int,int):FALSE(int,int):org.joda.time.PeriodType@addIndexedField(org.joda.time.ReadablePeriod,int,int[],int):711:realIndex == -1 |==> false
2172:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@addIndexedField(org.joda.time.ReadablePeriod,int,int[],int):714:values[realIndex] = FieldUtils.safeAdd(values[realIndex], valueToAdd) |==> <NO-OP>
2173:LVR:TRUE:FALSE:org.joda.time.PeriodType@addIndexedField(org.joda.time.ReadablePeriod,int,int[],int):715:true |==> false
2174:LVR:0:POS:org.joda.time.PeriodType@withYearsRemoved():725:0 |==> 1
2175:LVR:0:NEG:org.joda.time.PeriodType@withYearsRemoved():725:0 |==> -1
2176:LVR:POS:0:org.joda.time.PeriodType@withMonthsRemoved():734:1 |==> 0
2177:LVR:POS:NEG:org.joda.time.PeriodType@withMonthsRemoved():734:1 |==> -1
2178:LVR:POS:0:org.joda.time.PeriodType@withWeeksRemoved():743:2 |==> 0
2179:LVR:POS:NEG:org.joda.time.PeriodType@withWeeksRemoved():743:2 |==> -2
2180:LVR:POS:0:org.joda.time.PeriodType@withDaysRemoved():752:3 |==> 0
2181:LVR:POS:NEG:org.joda.time.PeriodType@withDaysRemoved():752:3 |==> -3
2182:LVR:POS:0:org.joda.time.PeriodType@withHoursRemoved():761:4 |==> 0
2183:LVR:POS:NEG:org.joda.time.PeriodType@withHoursRemoved():761:4 |==> -4
2184:LVR:POS:0:org.joda.time.PeriodType@withMinutesRemoved():770:5 |==> 0
2185:LVR:POS:NEG:org.joda.time.PeriodType@withMinutesRemoved():770:5 |==> -5
2186:LVR:POS:0:org.joda.time.PeriodType@withSecondsRemoved():779:6 |==> 0
2187:LVR:POS:NEG:org.joda.time.PeriodType@withSecondsRemoved():779:6 |==> -6
2188:LVR:POS:0:org.joda.time.PeriodType@withMillisRemoved():788:7 |==> 0
2189:LVR:POS:NEG:org.joda.time.PeriodType@withMillisRemoved():788:7 |==> -7
2190:LVR:NEG:0:org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):800:-1 |==> 0
2191:LVR:NEG:POS:org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):800:-1 |==> 1
2192:ROR:==(int,int):<=(int,int):org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):800:fieldIndex == -1 |==> fieldIndex <= -1
2193:ROR:==(int,int):>=(int,int):org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):800:fieldIndex == -1 |==> fieldIndex >= -1
2194:ROR:==(int,int):FALSE(int,int):org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):800:fieldIndex == -1 |==> false
2195:LVR:POS:0:org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):804:1 |==> 0
2196:LVR:POS:NEG:org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):804:1 |==> -1
2197:AOR:-(int,int):%(int,int):org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):804:size() - 1 |==> size() % 1
2198:AOR:-(int,int):*(int,int):org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):804:size() - 1 |==> size() * 1
2199:AOR:-(int,int):+(int,int):org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):804:size() - 1 |==> size() + 1
2200:AOR:-(int,int):/(int,int):org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):804:size() - 1 |==> size() / 1
2201:LVR:0:POS:org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):805:0 |==> 1
2202:LVR:0:NEG:org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):805:0 |==> -1
2203:ROR:<(int,int):!=(int,int):org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):805:i < iTypes.length |==> i != iTypes.length
2204:ROR:<(int,int):<=(int,int):org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):805:i < iTypes.length |==> i <= iTypes.length
2205:ROR:<(int,int):FALSE(int,int):org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):805:i < iTypes.length |==> false
2206:ROR:<(int,int):!=(int,int):org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):806:i < fieldIndex |==> i != fieldIndex
2207:ROR:<(int,int):<=(int,int):org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):806:i < fieldIndex |==> i <= fieldIndex
2208:ROR:<(int,int):FALSE(int,int):org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):806:i < fieldIndex |==> false
2209:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):807:types[i] = iTypes[i] |==> <NO-OP>
2210:ROR:>(int,int):!=(int,int):org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):808:i > fieldIndex |==> i != fieldIndex
2211:ROR:>(int,int):>=(int,int):org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):808:i > fieldIndex |==> i >= fieldIndex
2212:ROR:>(int,int):FALSE(int,int):org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):808:i > fieldIndex |==> false
2213:LVR:POS:0:org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):809:1 |==> 0
2214:LVR:POS:NEG:org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):809:1 |==> -1
2215:AOR:-(int,int):%(int,int):org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):809:i - 1 |==> i % 1
2216:AOR:-(int,int):*(int,int):org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):809:i - 1 |==> i * 1
2217:AOR:-(int,int):+(int,int):org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):809:i - 1 |==> i + 1
2218:AOR:-(int,int):/(int,int):org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):809:i - 1 |==> i / 1
2219:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):809:types[i - 1] = iTypes[i] |==> <NO-OP>
2220:LVR:POS:0:org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):813:8 |==> 0
2221:LVR:POS:NEG:org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):813:8 |==> -8
2222:LVR:0:POS:org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):814:0 |==> 1
2223:LVR:0:NEG:org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):814:0 |==> -1
2224:ROR:<(int,int):!=(int,int):org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):814:i < indices.length |==> i != indices.length
2225:ROR:<(int,int):<=(int,int):org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):814:i < indices.length |==> i <= indices.length
2226:ROR:<(int,int):FALSE(int,int):org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):814:i < indices.length |==> false
2227:ROR:<(int,int):!=(int,int):org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):815:i < indicesIndex |==> i != indicesIndex
2228:ROR:<(int,int):<=(int,int):org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):815:i < indicesIndex |==> i <= indicesIndex
2229:ROR:<(int,int):FALSE(int,int):org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):815:i < indicesIndex |==> false
2230:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):816:indices[i] = iIndices[i] |==> <NO-OP>
2231:ROR:>(int,int):!=(int,int):org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):817:i > indicesIndex |==> i != indicesIndex
2232:ROR:>(int,int):>=(int,int):org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):817:i > indicesIndex |==> i >= indicesIndex
2233:ROR:>(int,int):FALSE(int,int):org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):817:i > indicesIndex |==> false
2234:LVR:NEG:0:org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):818:-1 |==> 0
2235:LVR:NEG:POS:org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):818:-1 |==> 1
2236:ROR:==(int,int):<=(int,int):org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):818:iIndices[i] == -1 |==> iIndices[i] <= -1
2237:ROR:==(int,int):>=(int,int):org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):818:iIndices[i] == -1 |==> iIndices[i] >= -1
2238:ROR:==(int,int):FALSE(int,int):org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):818:iIndices[i] == -1 |==> false
2239:LVR:NEG:0:org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):818:-1 |==> 0
2240:LVR:NEG:POS:org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):818:-1 |==> 1
2241:LVR:POS:0:org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):818:1 |==> 0
2242:LVR:POS:NEG:org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):818:1 |==> -1
2243:AOR:-(int,int):%(int,int):org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):818:iIndices[i] - 1 |==> iIndices[i] % 1
2244:AOR:-(int,int):*(int,int):org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):818:iIndices[i] - 1 |==> iIndices[i] * 1
2245:AOR:-(int,int):+(int,int):org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):818:iIndices[i] - 1 |==> iIndices[i] + 1
2246:AOR:-(int,int):/(int,int):org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):818:iIndices[i] - 1 |==> iIndices[i] / 1
2247:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):818:indices[i] = (iIndices[i] == -1 ? -1 : iIndices[i] - 1) |==> <NO-OP>
2248:LVR:NEG:0:org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):820:-1 |==> 0
2249:LVR:NEG:POS:org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):820:-1 |==> 1
2250:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@withFieldRemoved(int,java.lang.String):820:indices[i] = -1 |==> <NO-OP>
2251:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.PeriodType@equals(java.lang.Object):835:this == obj |==> false
2252:LVR:TRUE:FALSE:org.joda.time.PeriodType@equals(java.lang.Object):836:true |==> false
2253:LVR:FALSE:TRUE:org.joda.time.PeriodType@equals(java.lang.Object):838:false |==> true
2254:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.PeriodType@equals(java.lang.Object):838:obj instanceof PeriodType == false |==> false
2255:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.PeriodType@equals(java.lang.Object):838:obj instanceof PeriodType == false |==> obj instanceof PeriodType
2256:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.PeriodType@equals(java.lang.Object):838:obj instanceof PeriodType == false |==> false
2257:LVR:FALSE:TRUE:org.joda.time.PeriodType@equals(java.lang.Object):839:false |==> true
2258:LVR:0:POS:org.joda.time.PeriodType@hashCode():851:0 |==> 1
2259:LVR:0:NEG:org.joda.time.PeriodType@hashCode():851:0 |==> -1
2260:LVR:0:POS:org.joda.time.PeriodType@hashCode():852:0 |==> 1
2261:LVR:0:NEG:org.joda.time.PeriodType@hashCode():852:0 |==> -1
2262:ROR:<(int,int):!=(int,int):org.joda.time.PeriodType@hashCode():852:i < iTypes.length |==> i != iTypes.length
2263:ROR:<(int,int):<=(int,int):org.joda.time.PeriodType@hashCode():852:i < iTypes.length |==> i <= iTypes.length
2264:ROR:<(int,int):FALSE(int,int):org.joda.time.PeriodType@hashCode():852:i < iTypes.length |==> false
2265:STD:<ASSIGN>:<NO-OP>:org.joda.time.PeriodType@hashCode():853:hash += iTypes[i].hashCode() |==> <NO-OP>
2266:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DurationFieldType$StandardDurationFieldType@equals(java.lang.Object):266:this == obj |==> false
2267:LVR:TRUE:FALSE:org.joda.time.DurationFieldType$StandardDurationFieldType@equals(java.lang.Object):267:true |==> false
2268:ROR:==(int,int):<=(int,int):org.joda.time.DurationFieldType$StandardDurationFieldType@equals(java.lang.Object):270:iOrdinal == ((StandardDurationFieldType)obj).iOrdinal |==> iOrdinal <= ((StandardDurationFieldType)obj).iOrdinal
2269:ROR:==(int,int):>=(int,int):org.joda.time.DurationFieldType$StandardDurationFieldType@equals(java.lang.Object):270:iOrdinal == ((StandardDurationFieldType)obj).iOrdinal |==> iOrdinal >= ((StandardDurationFieldType)obj).iOrdinal
2270:ROR:==(int,int):FALSE(int,int):org.joda.time.DurationFieldType$StandardDurationFieldType@equals(java.lang.Object):270:iOrdinal == ((StandardDurationFieldType)obj).iOrdinal |==> false
2271:LVR:FALSE:TRUE:org.joda.time.DurationFieldType$StandardDurationFieldType@equals(java.lang.Object):272:false |==> true
2272:LVR:POS:0:org.joda.time.DurationFieldType$StandardDurationFieldType@hashCode():278:1 |==> 0
2273:LVR:POS:NEG:org.joda.time.DurationFieldType$StandardDurationFieldType@hashCode():278:1 |==> -1
2274:SOR:<<(int,int):>>(int,int):org.joda.time.DurationFieldType$StandardDurationFieldType@hashCode():278:1 << iOrdinal |==> 1 >> iOrdinal
2275:SOR:<<(int,int):>>>(int,int):org.joda.time.DurationFieldType$StandardDurationFieldType@hashCode():278:1 << iOrdinal |==> 1 >>> iOrdinal
2276:STD:<ASSIGN>:<NO-OP>:org.joda.time.DurationFieldType$StandardDurationFieldType@getField(org.joda.time.Chronology):282:chronology = DateTimeUtils.getChronology(chronology) |==> <NO-OP>
2277:LVR:0:POS:org.joda.time.Period@years(int):110:0 |==> 1
2278:LVR:0:NEG:org.joda.time.Period@years(int):110:0 |==> -1
2279:LVR:0:POS:org.joda.time.Period@years(int):110:0 |==> 1
2280:LVR:0:NEG:org.joda.time.Period@years(int):110:0 |==> -1
2281:LVR:0:POS:org.joda.time.Period@years(int):110:0 |==> 1
2282:LVR:0:NEG:org.joda.time.Period@years(int):110:0 |==> -1
2283:LVR:0:POS:org.joda.time.Period@years(int):110:0 |==> 1
2284:LVR:0:NEG:org.joda.time.Period@years(int):110:0 |==> -1
2285:LVR:0:POS:org.joda.time.Period@years(int):110:0 |==> 1
2286:LVR:0:NEG:org.joda.time.Period@years(int):110:0 |==> -1
2287:LVR:0:POS:org.joda.time.Period@years(int):110:0 |==> 1
2288:LVR:0:NEG:org.joda.time.Period@years(int):110:0 |==> -1
2289:LVR:0:POS:org.joda.time.Period@years(int):110:0 |==> 1
2290:LVR:0:NEG:org.joda.time.Period@years(int):110:0 |==> -1
2291:LVR:0:POS:org.joda.time.Period@years(int):110:0 |==> 1
2292:LVR:0:NEG:org.joda.time.Period@years(int):110:0 |==> -1
2293:LVR:0:POS:org.joda.time.Period@months(int):127:0 |==> 1
2294:LVR:0:NEG:org.joda.time.Period@months(int):127:0 |==> -1
2295:LVR:0:POS:org.joda.time.Period@months(int):127:0 |==> 1
2296:LVR:0:NEG:org.joda.time.Period@months(int):127:0 |==> -1
2297:LVR:0:POS:org.joda.time.Period@months(int):127:0 |==> 1
2298:LVR:0:NEG:org.joda.time.Period@months(int):127:0 |==> -1
2299:LVR:0:POS:org.joda.time.Period@months(int):127:0 |==> 1
2300:LVR:0:NEG:org.joda.time.Period@months(int):127:0 |==> -1
2301:LVR:0:POS:org.joda.time.Period@months(int):127:0 |==> 1
2302:LVR:0:NEG:org.joda.time.Period@months(int):127:0 |==> -1
2303:LVR:0:POS:org.joda.time.Period@months(int):127:0 |==> 1
2304:LVR:0:NEG:org.joda.time.Period@months(int):127:0 |==> -1
2305:LVR:0:POS:org.joda.time.Period@months(int):127:0 |==> 1
2306:LVR:0:NEG:org.joda.time.Period@months(int):127:0 |==> -1
2307:LVR:0:POS:org.joda.time.Period@weeks(int):144:0 |==> 1
2308:LVR:0:NEG:org.joda.time.Period@weeks(int):144:0 |==> -1
2309:LVR:0:POS:org.joda.time.Period@weeks(int):144:0 |==> 1
2310:LVR:0:NEG:org.joda.time.Period@weeks(int):144:0 |==> -1
2311:LVR:0:POS:org.joda.time.Period@weeks(int):144:0 |==> 1
2312:LVR:0:NEG:org.joda.time.Period@weeks(int):144:0 |==> -1
2313:LVR:0:POS:org.joda.time.Period@weeks(int):144:0 |==> 1
2314:LVR:0:NEG:org.joda.time.Period@weeks(int):144:0 |==> -1
2315:LVR:0:POS:org.joda.time.Period@weeks(int):144:0 |==> 1
2316:LVR:0:NEG:org.joda.time.Period@weeks(int):144:0 |==> -1
2317:LVR:0:POS:org.joda.time.Period@weeks(int):144:0 |==> 1
2318:LVR:0:NEG:org.joda.time.Period@weeks(int):144:0 |==> -1
2319:LVR:0:POS:org.joda.time.Period@weeks(int):144:0 |==> 1
2320:LVR:0:NEG:org.joda.time.Period@weeks(int):144:0 |==> -1
2321:LVR:0:POS:org.joda.time.Period@days(int):161:0 |==> 1
2322:LVR:0:NEG:org.joda.time.Period@days(int):161:0 |==> -1
2323:LVR:0:POS:org.joda.time.Period@days(int):161:0 |==> 1
2324:LVR:0:NEG:org.joda.time.Period@days(int):161:0 |==> -1
2325:LVR:0:POS:org.joda.time.Period@days(int):161:0 |==> 1
2326:LVR:0:NEG:org.joda.time.Period@days(int):161:0 |==> -1
2327:LVR:0:POS:org.joda.time.Period@days(int):161:0 |==> 1
2328:LVR:0:NEG:org.joda.time.Period@days(int):161:0 |==> -1
2329:LVR:0:POS:org.joda.time.Period@days(int):161:0 |==> 1
2330:LVR:0:NEG:org.joda.time.Period@days(int):161:0 |==> -1
2331:LVR:0:POS:org.joda.time.Period@days(int):161:0 |==> 1
2332:LVR:0:NEG:org.joda.time.Period@days(int):161:0 |==> -1
2333:LVR:0:POS:org.joda.time.Period@days(int):161:0 |==> 1
2334:LVR:0:NEG:org.joda.time.Period@days(int):161:0 |==> -1
2335:LVR:0:POS:org.joda.time.Period@hours(int):178:0 |==> 1
2336:LVR:0:NEG:org.joda.time.Period@hours(int):178:0 |==> -1
2337:LVR:0:POS:org.joda.time.Period@hours(int):178:0 |==> 1
2338:LVR:0:NEG:org.joda.time.Period@hours(int):178:0 |==> -1
2339:LVR:0:POS:org.joda.time.Period@hours(int):178:0 |==> 1
2340:LVR:0:NEG:org.joda.time.Period@hours(int):178:0 |==> -1
2341:LVR:0:POS:org.joda.time.Period@hours(int):178:0 |==> 1
2342:LVR:0:NEG:org.joda.time.Period@hours(int):178:0 |==> -1
2343:LVR:0:POS:org.joda.time.Period@hours(int):178:0 |==> 1
2344:LVR:0:NEG:org.joda.time.Period@hours(int):178:0 |==> -1
2345:LVR:0:POS:org.joda.time.Period@hours(int):178:0 |==> 1
2346:LVR:0:NEG:org.joda.time.Period@hours(int):178:0 |==> -1
2347:LVR:0:POS:org.joda.time.Period@hours(int):178:0 |==> 1
2348:LVR:0:NEG:org.joda.time.Period@hours(int):178:0 |==> -1
2349:LVR:0:POS:org.joda.time.Period@minutes(int):195:0 |==> 1
2350:LVR:0:NEG:org.joda.time.Period@minutes(int):195:0 |==> -1
2351:LVR:0:POS:org.joda.time.Period@minutes(int):195:0 |==> 1
2352:LVR:0:NEG:org.joda.time.Period@minutes(int):195:0 |==> -1
2353:LVR:0:POS:org.joda.time.Period@minutes(int):195:0 |==> 1
2354:LVR:0:NEG:org.joda.time.Period@minutes(int):195:0 |==> -1
2355:LVR:0:POS:org.joda.time.Period@minutes(int):195:0 |==> 1
2356:LVR:0:NEG:org.joda.time.Period@minutes(int):195:0 |==> -1
2357:LVR:0:POS:org.joda.time.Period@minutes(int):195:0 |==> 1
2358:LVR:0:NEG:org.joda.time.Period@minutes(int):195:0 |==> -1
2359:LVR:0:POS:org.joda.time.Period@minutes(int):195:0 |==> 1
2360:LVR:0:NEG:org.joda.time.Period@minutes(int):195:0 |==> -1
2361:LVR:0:POS:org.joda.time.Period@minutes(int):195:0 |==> 1
2362:LVR:0:NEG:org.joda.time.Period@minutes(int):195:0 |==> -1
2363:LVR:0:POS:org.joda.time.Period@seconds(int):212:0 |==> 1
2364:LVR:0:NEG:org.joda.time.Period@seconds(int):212:0 |==> -1
2365:LVR:0:POS:org.joda.time.Period@seconds(int):212:0 |==> 1
2366:LVR:0:NEG:org.joda.time.Period@seconds(int):212:0 |==> -1
2367:LVR:0:POS:org.joda.time.Period@seconds(int):212:0 |==> 1
2368:LVR:0:NEG:org.joda.time.Period@seconds(int):212:0 |==> -1
2369:LVR:0:POS:org.joda.time.Period@seconds(int):212:0 |==> 1
2370:LVR:0:NEG:org.joda.time.Period@seconds(int):212:0 |==> -1
2371:LVR:0:POS:org.joda.time.Period@seconds(int):212:0 |==> 1
2372:LVR:0:NEG:org.joda.time.Period@seconds(int):212:0 |==> -1
2373:LVR:0:POS:org.joda.time.Period@seconds(int):212:0 |==> 1
2374:LVR:0:NEG:org.joda.time.Period@seconds(int):212:0 |==> -1
2375:LVR:0:POS:org.joda.time.Period@seconds(int):212:0 |==> 1
2376:LVR:0:NEG:org.joda.time.Period@seconds(int):212:0 |==> -1
2377:LVR:0:POS:org.joda.time.Period@millis(int):226:0 |==> 1
2378:LVR:0:NEG:org.joda.time.Period@millis(int):226:0 |==> -1
2379:LVR:0:POS:org.joda.time.Period@millis(int):226:0 |==> 1
2380:LVR:0:NEG:org.joda.time.Period@millis(int):226:0 |==> -1
2381:LVR:0:POS:org.joda.time.Period@millis(int):226:0 |==> 1
2382:LVR:0:NEG:org.joda.time.Period@millis(int):226:0 |==> -1
2383:LVR:0:POS:org.joda.time.Period@millis(int):226:0 |==> 1
2384:LVR:0:NEG:org.joda.time.Period@millis(int):226:0 |==> -1
2385:LVR:0:POS:org.joda.time.Period@millis(int):226:0 |==> 1
2386:LVR:0:NEG:org.joda.time.Period@millis(int):226:0 |==> -1
2387:LVR:0:POS:org.joda.time.Period@millis(int):226:0 |==> 1
2388:LVR:0:NEG:org.joda.time.Period@millis(int):226:0 |==> -1
2389:LVR:0:POS:org.joda.time.Period@millis(int):226:0 |==> 1
2390:LVR:0:NEG:org.joda.time.Period@millis(int):226:0 |==> -1
2391:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Period@fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):257:start == null |==> false
2392:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Period@fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):257:end == null |==> false
2393:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.Period@fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):257:start == null || end == null |==> start == null != (end == null)
2394:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.Period@fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):257:start == null || end == null |==> start == null
2395:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.Period@fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):257:start == null || end == null |==> end == null
2396:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.Period@fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):257:start == null || end == null |==> true
2397:ROR:!=(int,int):<(int,int):org.joda.time.Period@fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):260:start.size() != end.size() |==> start.size() < end.size()
2398:ROR:!=(int,int):>(int,int):org.joda.time.Period@fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):260:start.size() != end.size() |==> start.size() > end.size()
2399:ROR:!=(int,int):TRUE(int,int):org.joda.time.Period@fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):260:start.size() != end.size() |==> true
2400:LVR:0:POS:org.joda.time.Period@fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):265:0 |==> 1
2401:LVR:0:NEG:org.joda.time.Period@fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):265:0 |==> -1
2402:ROR:<(int,int):!=(int,int):org.joda.time.Period@fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):265:i < isize |==> i != isize
2403:ROR:<(int,int):<=(int,int):org.joda.time.Period@fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):265:i < isize |==> i <= isize
2404:ROR:<(int,int):FALSE(int,int):org.joda.time.Period@fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):265:i < isize |==> false
2405:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.Period@fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):266:start.getFieldType(i) != end.getFieldType(i) |==> true
2406:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):269:types[i] = start.getFieldType(i).getDurationType() |==> <NO-OP>
2407:LVR:0:POS:org.joda.time.Period@fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):270:0 |==> 1
2408:LVR:0:NEG:org.joda.time.Period@fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):270:0 |==> -1
2409:ROR:>(int,int):!=(int,int):org.joda.time.Period@fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):270:i > 0 |==> i != 0
2410:ROR:>(int,int):>=(int,int):org.joda.time.Period@fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):270:i > 0 |==> i >= 0
2411:ROR:>(int,int):FALSE(int,int):org.joda.time.Period@fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):270:i > 0 |==> false
2412:LVR:POS:0:org.joda.time.Period@fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):270:1 |==> 0
2413:LVR:POS:NEG:org.joda.time.Period@fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):270:1 |==> -1
2414:AOR:-(int,int):%(int,int):org.joda.time.Period@fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):270:i - 1 |==> i % 1
2415:AOR:-(int,int):*(int,int):org.joda.time.Period@fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):270:i - 1 |==> i * 1
2416:AOR:-(int,int):+(int,int):org.joda.time.Period@fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):270:i - 1 |==> i + 1
2417:AOR:-(int,int):/(int,int):org.joda.time.Period@fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):270:i - 1 |==> i / 1
2418:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Period@fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):270:types[i - 1] == types[i] |==> false
2419:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.Period@fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):270:i > 0 && types[i - 1] == types[i] |==> i > 0 == (types[i - 1] == types[i])
2420:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.Period@fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):270:i > 0 && types[i - 1] == types[i] |==> false
2421:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.Period@fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):270:i > 0 && types[i - 1] == types[i] |==> i > 0
2422:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.Period@fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):270:i > 0 && types[i - 1] == types[i] |==> types[i - 1] == types[i]
2423:AOR:-(int,int):%(int,int):org.joda.time.Period@fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):273:end.getValue(i) - start.getValue(i) |==> end.getValue(i) % start.getValue(i)
2424:AOR:-(int,int):*(int,int):org.joda.time.Period@fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):273:end.getValue(i) - start.getValue(i) |==> end.getValue(i) * start.getValue(i)
2425:AOR:-(int,int):+(int,int):org.joda.time.Period@fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):273:end.getValue(i) - start.getValue(i) |==> end.getValue(i) + start.getValue(i)
2426:AOR:-(int,int):/(int,int):org.joda.time.Period@fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):273:end.getValue(i) - start.getValue(i) |==> end.getValue(i) / start.getValue(i)
2427:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):273:values[i] = end.getValue(i) - start.getValue(i) |==> <NO-OP>
2428:LVR:0:POS:org.joda.time.Period@<init>():298:0L |==> 1L
2429:LVR:0:NEG:org.joda.time.Period@<init>():298:0L |==> -1L
2430:LVR:0:POS:org.joda.time.Period@<init>(int,int,int,int):312:0 |==> 1
2431:LVR:0:NEG:org.joda.time.Period@<init>(int,int,int,int):312:0 |==> -1
2432:LVR:0:POS:org.joda.time.Period@<init>(int,int,int,int):312:0 |==> 1
2433:LVR:0:NEG:org.joda.time.Period@<init>(int,int,int,int):312:0 |==> -1
2434:LVR:0:POS:org.joda.time.Period@<init>(int,int,int,int):312:0 |==> 1
2435:LVR:0:NEG:org.joda.time.Period@<init>(int,int,int,int):312:0 |==> -1
2436:LVR:0:POS:org.joda.time.Period@<init>(int,int,int,int):312:0 |==> 1
2437:LVR:0:NEG:org.joda.time.Period@<init>(int,int,int,int):312:0 |==> -1
2438:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@withPeriodType(org.joda.time.PeriodType):816:type = DateTimeUtils.getPeriodType(type) |==> <NO-OP>
2439:COR:type.equals(getPeriodType()):TRUE:org.joda.time.Period@withPeriodType(org.joda.time.PeriodType):817:type.equals(getPeriodType()) |==> false
2440:COR:type.equals(getPeriodType()):FALSE:org.joda.time.Period@withPeriodType(org.joda.time.PeriodType):817:type.equals(getPeriodType()) |==> true
2441:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Period@withFields(org.joda.time.ReadablePeriod):834:period == null |==> false
2442:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@withFields(org.joda.time.ReadablePeriod):838:newValues = super.mergePeriodInto(newValues, period) |==> <NO-OP>
2443:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Period@withField(org.joda.time.DurationFieldType,int):854:field == null |==> false
2444:STD:<CALL>:<NO-OP>:org.joda.time.Period@withField(org.joda.time.DurationFieldType,int):858:super.setFieldInto(newValues, field, value) |==> <NO-OP>
2445:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Period@withFieldAdded(org.joda.time.DurationFieldType,int):873:field == null |==> false
2446:LVR:0:POS:org.joda.time.Period@withFieldAdded(org.joda.time.DurationFieldType,int):876:0 |==> 1
2447:LVR:0:NEG:org.joda.time.Period@withFieldAdded(org.joda.time.DurationFieldType,int):876:0 |==> -1
2448:ROR:==(int,int):<=(int,int):org.joda.time.Period@withFieldAdded(org.joda.time.DurationFieldType,int):876:value == 0 |==> value <= 0
2449:ROR:==(int,int):>=(int,int):org.joda.time.Period@withFieldAdded(org.joda.time.DurationFieldType,int):876:value == 0 |==> value >= 0
2450:ROR:==(int,int):FALSE(int,int):org.joda.time.Period@withFieldAdded(org.joda.time.DurationFieldType,int):876:value == 0 |==> false
2451:STD:<CALL>:<NO-OP>:org.joda.time.Period@withFieldAdded(org.joda.time.DurationFieldType,int):880:super.addFieldInto(newValues, field, value) |==> <NO-OP>
2452:STD:<CALL>:<NO-OP>:org.joda.time.Period@withYears(int):896:getPeriodType().setIndexedField(this, PeriodType.YEAR_INDEX, values, years) |==> <NO-OP>
2453:STD:<CALL>:<NO-OP>:org.joda.time.Period@withMonths(int):911:getPeriodType().setIndexedField(this, PeriodType.MONTH_INDEX, values, months) |==> <NO-OP>
2454:STD:<CALL>:<NO-OP>:org.joda.time.Period@withWeeks(int):926:getPeriodType().setIndexedField(this, PeriodType.WEEK_INDEX, values, weeks) |==> <NO-OP>
2455:STD:<CALL>:<NO-OP>:org.joda.time.Period@withDays(int):941:getPeriodType().setIndexedField(this, PeriodType.DAY_INDEX, values, days) |==> <NO-OP>
2456:STD:<CALL>:<NO-OP>:org.joda.time.Period@withHours(int):956:getPeriodType().setIndexedField(this, PeriodType.HOUR_INDEX, values, hours) |==> <NO-OP>
2457:STD:<CALL>:<NO-OP>:org.joda.time.Period@withMinutes(int):971:getPeriodType().setIndexedField(this, PeriodType.MINUTE_INDEX, values, minutes) |==> <NO-OP>
2458:STD:<CALL>:<NO-OP>:org.joda.time.Period@withSeconds(int):986:getPeriodType().setIndexedField(this, PeriodType.SECOND_INDEX, values, seconds) |==> <NO-OP>
2459:STD:<CALL>:<NO-OP>:org.joda.time.Period@withMillis(int):1001:getPeriodType().setIndexedField(this, PeriodType.MILLI_INDEX, values, millis) |==> <NO-OP>
2460:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Period@plus(org.joda.time.ReadablePeriod):1024:period == null |==> false
2461:STD:<CALL>:<NO-OP>:org.joda.time.Period@plus(org.joda.time.ReadablePeriod):1028:getPeriodType().addIndexedField(this, PeriodType.YEAR_INDEX, values, period.get(DurationFieldType.YEARS_TYPE)) |==> <NO-OP>
2462:STD:<CALL>:<NO-OP>:org.joda.time.Period@plus(org.joda.time.ReadablePeriod):1029:getPeriodType().addIndexedField(this, PeriodType.MONTH_INDEX, values, period.get(DurationFieldType.MONTHS_TYPE)) |==> <NO-OP>
2463:STD:<CALL>:<NO-OP>:org.joda.time.Period@plus(org.joda.time.ReadablePeriod):1030:getPeriodType().addIndexedField(this, PeriodType.WEEK_INDEX, values, period.get(DurationFieldType.WEEKS_TYPE)) |==> <NO-OP>
2464:STD:<CALL>:<NO-OP>:org.joda.time.Period@plus(org.joda.time.ReadablePeriod):1031:getPeriodType().addIndexedField(this, PeriodType.DAY_INDEX, values, period.get(DurationFieldType.DAYS_TYPE)) |==> <NO-OP>
2465:STD:<CALL>:<NO-OP>:org.joda.time.Period@plus(org.joda.time.ReadablePeriod):1032:getPeriodType().addIndexedField(this, PeriodType.HOUR_INDEX, values, period.get(DurationFieldType.HOURS_TYPE)) |==> <NO-OP>
2466:STD:<CALL>:<NO-OP>:org.joda.time.Period@plus(org.joda.time.ReadablePeriod):1033:getPeriodType().addIndexedField(this, PeriodType.MINUTE_INDEX, values, period.get(DurationFieldType.MINUTES_TYPE)) |==> <NO-OP>
2467:STD:<CALL>:<NO-OP>:org.joda.time.Period@plus(org.joda.time.ReadablePeriod):1034:getPeriodType().addIndexedField(this, PeriodType.SECOND_INDEX, values, period.get(DurationFieldType.SECONDS_TYPE)) |==> <NO-OP>
2468:STD:<CALL>:<NO-OP>:org.joda.time.Period@plus(org.joda.time.ReadablePeriod):1035:getPeriodType().addIndexedField(this, PeriodType.MILLI_INDEX, values, period.get(DurationFieldType.MILLIS_TYPE)) |==> <NO-OP>
2469:LVR:0:POS:org.joda.time.Period@plusYears(int):1050:0 |==> 1
2470:LVR:0:NEG:org.joda.time.Period@plusYears(int):1050:0 |==> -1
2471:ROR:==(int,int):<=(int,int):org.joda.time.Period@plusYears(int):1050:years == 0 |==> years <= 0
2472:ROR:==(int,int):>=(int,int):org.joda.time.Period@plusYears(int):1050:years == 0 |==> years >= 0
2473:ROR:==(int,int):FALSE(int,int):org.joda.time.Period@plusYears(int):1050:years == 0 |==> false
2474:STD:<CALL>:<NO-OP>:org.joda.time.Period@plusYears(int):1054:getPeriodType().addIndexedField(this, PeriodType.YEAR_INDEX, values, years) |==> <NO-OP>
2475:LVR:0:POS:org.joda.time.Period@plusMonths(int):1068:0 |==> 1
2476:LVR:0:NEG:org.joda.time.Period@plusMonths(int):1068:0 |==> -1
2477:ROR:==(int,int):<=(int,int):org.joda.time.Period@plusMonths(int):1068:months == 0 |==> months <= 0
2478:ROR:==(int,int):>=(int,int):org.joda.time.Period@plusMonths(int):1068:months == 0 |==> months >= 0
2479:ROR:==(int,int):FALSE(int,int):org.joda.time.Period@plusMonths(int):1068:months == 0 |==> false
2480:STD:<CALL>:<NO-OP>:org.joda.time.Period@plusMonths(int):1072:getPeriodType().addIndexedField(this, PeriodType.MONTH_INDEX, values, months) |==> <NO-OP>
2481:LVR:0:POS:org.joda.time.Period@plusWeeks(int):1086:0 |==> 1
2482:LVR:0:NEG:org.joda.time.Period@plusWeeks(int):1086:0 |==> -1
2483:ROR:==(int,int):<=(int,int):org.joda.time.Period@plusWeeks(int):1086:weeks == 0 |==> weeks <= 0
2484:ROR:==(int,int):>=(int,int):org.joda.time.Period@plusWeeks(int):1086:weeks == 0 |==> weeks >= 0
2485:ROR:==(int,int):FALSE(int,int):org.joda.time.Period@plusWeeks(int):1086:weeks == 0 |==> false
2486:STD:<CALL>:<NO-OP>:org.joda.time.Period@plusWeeks(int):1090:getPeriodType().addIndexedField(this, PeriodType.WEEK_INDEX, values, weeks) |==> <NO-OP>
2487:LVR:0:POS:org.joda.time.Period@plusDays(int):1104:0 |==> 1
2488:LVR:0:NEG:org.joda.time.Period@plusDays(int):1104:0 |==> -1
2489:ROR:==(int,int):<=(int,int):org.joda.time.Period@plusDays(int):1104:days == 0 |==> days <= 0
2490:ROR:==(int,int):>=(int,int):org.joda.time.Period@plusDays(int):1104:days == 0 |==> days >= 0
2491:ROR:==(int,int):FALSE(int,int):org.joda.time.Period@plusDays(int):1104:days == 0 |==> false
2492:STD:<CALL>:<NO-OP>:org.joda.time.Period@plusDays(int):1108:getPeriodType().addIndexedField(this, PeriodType.DAY_INDEX, values, days) |==> <NO-OP>
2493:LVR:0:POS:org.joda.time.Period@plusHours(int):1122:0 |==> 1
2494:LVR:0:NEG:org.joda.time.Period@plusHours(int):1122:0 |==> -1
2495:ROR:==(int,int):<=(int,int):org.joda.time.Period@plusHours(int):1122:hours == 0 |==> hours <= 0
2496:ROR:==(int,int):>=(int,int):org.joda.time.Period@plusHours(int):1122:hours == 0 |==> hours >= 0
2497:ROR:==(int,int):FALSE(int,int):org.joda.time.Period@plusHours(int):1122:hours == 0 |==> false
2498:STD:<CALL>:<NO-OP>:org.joda.time.Period@plusHours(int):1126:getPeriodType().addIndexedField(this, PeriodType.HOUR_INDEX, values, hours) |==> <NO-OP>
2499:LVR:0:POS:org.joda.time.Period@plusMinutes(int):1140:0 |==> 1
2500:LVR:0:NEG:org.joda.time.Period@plusMinutes(int):1140:0 |==> -1
2501:ROR:==(int,int):<=(int,int):org.joda.time.Period@plusMinutes(int):1140:minutes == 0 |==> minutes <= 0
2502:ROR:==(int,int):>=(int,int):org.joda.time.Period@plusMinutes(int):1140:minutes == 0 |==> minutes >= 0
2503:ROR:==(int,int):FALSE(int,int):org.joda.time.Period@plusMinutes(int):1140:minutes == 0 |==> false
2504:STD:<CALL>:<NO-OP>:org.joda.time.Period@plusMinutes(int):1144:getPeriodType().addIndexedField(this, PeriodType.MINUTE_INDEX, values, minutes) |==> <NO-OP>
2505:LVR:0:POS:org.joda.time.Period@plusSeconds(int):1158:0 |==> 1
2506:LVR:0:NEG:org.joda.time.Period@plusSeconds(int):1158:0 |==> -1
2507:ROR:==(int,int):<=(int,int):org.joda.time.Period@plusSeconds(int):1158:seconds == 0 |==> seconds <= 0
2508:ROR:==(int,int):>=(int,int):org.joda.time.Period@plusSeconds(int):1158:seconds == 0 |==> seconds >= 0
2509:ROR:==(int,int):FALSE(int,int):org.joda.time.Period@plusSeconds(int):1158:seconds == 0 |==> false
2510:STD:<CALL>:<NO-OP>:org.joda.time.Period@plusSeconds(int):1162:getPeriodType().addIndexedField(this, PeriodType.SECOND_INDEX, values, seconds) |==> <NO-OP>
2511:LVR:0:POS:org.joda.time.Period@plusMillis(int):1176:0 |==> 1
2512:LVR:0:NEG:org.joda.time.Period@plusMillis(int):1176:0 |==> -1
2513:ROR:==(int,int):<=(int,int):org.joda.time.Period@plusMillis(int):1176:millis == 0 |==> millis <= 0
2514:ROR:==(int,int):>=(int,int):org.joda.time.Period@plusMillis(int):1176:millis == 0 |==> millis >= 0
2515:ROR:==(int,int):FALSE(int,int):org.joda.time.Period@plusMillis(int):1176:millis == 0 |==> false
2516:STD:<CALL>:<NO-OP>:org.joda.time.Period@plusMillis(int):1180:getPeriodType().addIndexedField(this, PeriodType.MILLI_INDEX, values, millis) |==> <NO-OP>
2517:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Period@minus(org.joda.time.ReadablePeriod):1203:period == null |==> false
2518:ORU:-(int):+(int):org.joda.time.Period@minus(org.joda.time.ReadablePeriod):1207:-period.get(DurationFieldType.YEARS_TYPE) |==> +period.get(DurationFieldType.YEARS_TYPE)
2519:ORU:-(int):~(int):org.joda.time.Period@minus(org.joda.time.ReadablePeriod):1207:-period.get(DurationFieldType.YEARS_TYPE) |==> ~period.get(DurationFieldType.YEARS_TYPE)
2520:STD:<CALL>:<NO-OP>:org.joda.time.Period@minus(org.joda.time.ReadablePeriod):1207:getPeriodType().addIndexedField(this, PeriodType.YEAR_INDEX, values, -period.get(DurationFieldType.YEARS_TYPE)) |==> <NO-OP>
2521:ORU:-(int):+(int):org.joda.time.Period@minus(org.joda.time.ReadablePeriod):1208:-period.get(DurationFieldType.MONTHS_TYPE) |==> +period.get(DurationFieldType.MONTHS_TYPE)
2522:ORU:-(int):~(int):org.joda.time.Period@minus(org.joda.time.ReadablePeriod):1208:-period.get(DurationFieldType.MONTHS_TYPE) |==> ~period.get(DurationFieldType.MONTHS_TYPE)
2523:STD:<CALL>:<NO-OP>:org.joda.time.Period@minus(org.joda.time.ReadablePeriod):1208:getPeriodType().addIndexedField(this, PeriodType.MONTH_INDEX, values, -period.get(DurationFieldType.MONTHS_TYPE)) |==> <NO-OP>
2524:ORU:-(int):+(int):org.joda.time.Period@minus(org.joda.time.ReadablePeriod):1209:-period.get(DurationFieldType.WEEKS_TYPE) |==> +period.get(DurationFieldType.WEEKS_TYPE)
2525:ORU:-(int):~(int):org.joda.time.Period@minus(org.joda.time.ReadablePeriod):1209:-period.get(DurationFieldType.WEEKS_TYPE) |==> ~period.get(DurationFieldType.WEEKS_TYPE)
2526:STD:<CALL>:<NO-OP>:org.joda.time.Period@minus(org.joda.time.ReadablePeriod):1209:getPeriodType().addIndexedField(this, PeriodType.WEEK_INDEX, values, -period.get(DurationFieldType.WEEKS_TYPE)) |==> <NO-OP>
2527:ORU:-(int):+(int):org.joda.time.Period@minus(org.joda.time.ReadablePeriod):1210:-period.get(DurationFieldType.DAYS_TYPE) |==> +period.get(DurationFieldType.DAYS_TYPE)
2528:ORU:-(int):~(int):org.joda.time.Period@minus(org.joda.time.ReadablePeriod):1210:-period.get(DurationFieldType.DAYS_TYPE) |==> ~period.get(DurationFieldType.DAYS_TYPE)
2529:STD:<CALL>:<NO-OP>:org.joda.time.Period@minus(org.joda.time.ReadablePeriod):1210:getPeriodType().addIndexedField(this, PeriodType.DAY_INDEX, values, -period.get(DurationFieldType.DAYS_TYPE)) |==> <NO-OP>
2530:ORU:-(int):+(int):org.joda.time.Period@minus(org.joda.time.ReadablePeriod):1211:-period.get(DurationFieldType.HOURS_TYPE) |==> +period.get(DurationFieldType.HOURS_TYPE)
2531:ORU:-(int):~(int):org.joda.time.Period@minus(org.joda.time.ReadablePeriod):1211:-period.get(DurationFieldType.HOURS_TYPE) |==> ~period.get(DurationFieldType.HOURS_TYPE)
2532:STD:<CALL>:<NO-OP>:org.joda.time.Period@minus(org.joda.time.ReadablePeriod):1211:getPeriodType().addIndexedField(this, PeriodType.HOUR_INDEX, values, -period.get(DurationFieldType.HOURS_TYPE)) |==> <NO-OP>
2533:ORU:-(int):+(int):org.joda.time.Period@minus(org.joda.time.ReadablePeriod):1212:-period.get(DurationFieldType.MINUTES_TYPE) |==> +period.get(DurationFieldType.MINUTES_TYPE)
2534:ORU:-(int):~(int):org.joda.time.Period@minus(org.joda.time.ReadablePeriod):1212:-period.get(DurationFieldType.MINUTES_TYPE) |==> ~period.get(DurationFieldType.MINUTES_TYPE)
2535:STD:<CALL>:<NO-OP>:org.joda.time.Period@minus(org.joda.time.ReadablePeriod):1212:getPeriodType().addIndexedField(this, PeriodType.MINUTE_INDEX, values, -period.get(DurationFieldType.MINUTES_TYPE)) |==> <NO-OP>
2536:ORU:-(int):+(int):org.joda.time.Period@minus(org.joda.time.ReadablePeriod):1213:-period.get(DurationFieldType.SECONDS_TYPE) |==> +period.get(DurationFieldType.SECONDS_TYPE)
2537:ORU:-(int):~(int):org.joda.time.Period@minus(org.joda.time.ReadablePeriod):1213:-period.get(DurationFieldType.SECONDS_TYPE) |==> ~period.get(DurationFieldType.SECONDS_TYPE)
2538:STD:<CALL>:<NO-OP>:org.joda.time.Period@minus(org.joda.time.ReadablePeriod):1213:getPeriodType().addIndexedField(this, PeriodType.SECOND_INDEX, values, -period.get(DurationFieldType.SECONDS_TYPE)) |==> <NO-OP>
2539:ORU:-(int):+(int):org.joda.time.Period@minus(org.joda.time.ReadablePeriod):1214:-period.get(DurationFieldType.MILLIS_TYPE) |==> +period.get(DurationFieldType.MILLIS_TYPE)
2540:ORU:-(int):~(int):org.joda.time.Period@minus(org.joda.time.ReadablePeriod):1214:-period.get(DurationFieldType.MILLIS_TYPE) |==> ~period.get(DurationFieldType.MILLIS_TYPE)
2541:STD:<CALL>:<NO-OP>:org.joda.time.Period@minus(org.joda.time.ReadablePeriod):1214:getPeriodType().addIndexedField(this, PeriodType.MILLI_INDEX, values, -period.get(DurationFieldType.MILLIS_TYPE)) |==> <NO-OP>
2542:ORU:-(int):+(int):org.joda.time.Period@minusYears(int):1229:-years |==> +years
2543:ORU:-(int):~(int):org.joda.time.Period@minusYears(int):1229:-years |==> ~years
2544:ORU:-(int):+(int):org.joda.time.Period@minusMonths(int):1242:-months |==> +months
2545:ORU:-(int):~(int):org.joda.time.Period@minusMonths(int):1242:-months |==> ~months
2546:ORU:-(int):+(int):org.joda.time.Period@minusWeeks(int):1255:-weeks |==> +weeks
2547:ORU:-(int):~(int):org.joda.time.Period@minusWeeks(int):1255:-weeks |==> ~weeks
2548:ORU:-(int):+(int):org.joda.time.Period@minusDays(int):1268:-days |==> +days
2549:ORU:-(int):~(int):org.joda.time.Period@minusDays(int):1268:-days |==> ~days
2550:ORU:-(int):+(int):org.joda.time.Period@minusHours(int):1281:-hours |==> +hours
2551:ORU:-(int):~(int):org.joda.time.Period@minusHours(int):1281:-hours |==> ~hours
2552:ORU:-(int):+(int):org.joda.time.Period@minusMinutes(int):1294:-minutes |==> +minutes
2553:ORU:-(int):~(int):org.joda.time.Period@minusMinutes(int):1294:-minutes |==> ~minutes
2554:ORU:-(int):+(int):org.joda.time.Period@minusSeconds(int):1307:-seconds |==> +seconds
2555:ORU:-(int):~(int):org.joda.time.Period@minusSeconds(int):1307:-seconds |==> ~seconds
2556:ORU:-(int):+(int):org.joda.time.Period@minusMillis(int):1320:-millis |==> +millis
2557:ORU:-(int):~(int):org.joda.time.Period@minusMillis(int):1320:-millis |==> ~millis
2558:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Period@multipliedBy(int):1334:this == ZERO |==> false
2559:LVR:POS:0:org.joda.time.Period@multipliedBy(int):1334:1 |==> 0
2560:LVR:POS:NEG:org.joda.time.Period@multipliedBy(int):1334:1 |==> -1
2561:ROR:==(int,int):<=(int,int):org.joda.time.Period@multipliedBy(int):1334:scalar == 1 |==> scalar <= 1
2562:ROR:==(int,int):>=(int,int):org.joda.time.Period@multipliedBy(int):1334:scalar == 1 |==> scalar >= 1
2563:ROR:==(int,int):FALSE(int,int):org.joda.time.Period@multipliedBy(int):1334:scalar == 1 |==> false
2564:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.Period@multipliedBy(int):1334:this == ZERO || scalar == 1 |==> this == ZERO != (scalar == 1)
2565:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.Period@multipliedBy(int):1334:this == ZERO || scalar == 1 |==> this == ZERO
2566:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.Period@multipliedBy(int):1334:this == ZERO || scalar == 1 |==> scalar == 1
2567:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.Period@multipliedBy(int):1334:this == ZERO || scalar == 1 |==> true
2568:LVR:0:POS:org.joda.time.Period@multipliedBy(int):1338:0 |==> 1
2569:LVR:0:NEG:org.joda.time.Period@multipliedBy(int):1338:0 |==> -1
2570:ROR:<(int,int):!=(int,int):org.joda.time.Period@multipliedBy(int):1338:i < values.length |==> i != values.length
2571:ROR:<(int,int):<=(int,int):org.joda.time.Period@multipliedBy(int):1338:i < values.length |==> i <= values.length
2572:ROR:<(int,int):FALSE(int,int):org.joda.time.Period@multipliedBy(int):1338:i < values.length |==> false
2573:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@multipliedBy(int):1339:values[i] = FieldUtils.safeMultiply(values[i], scalar) |==> <NO-OP>
2574:LVR:NEG:0:org.joda.time.Period@negated():1352:-1 |==> 0
2575:LVR:NEG:POS:org.joda.time.Period@negated():1352:-1 |==> 1
2576:STD:<CALL>:<NO-OP>:org.joda.time.Period@toStandardWeeks():1376:checkYearsAndMonths("Weeks") |==> <NO-OP>
2577:AOR:*(long,long):%(long,long):org.joda.time.Period@toStandardWeeks():1378:((long)getSeconds()) * DateTimeConstants.MILLIS_PER_SECOND |==> ((long)getSeconds()) % DateTimeConstants.MILLIS_PER_SECOND
2578:AOR:*(long,long):+(long,long):org.joda.time.Period@toStandardWeeks():1378:((long)getSeconds()) * DateTimeConstants.MILLIS_PER_SECOND |==> ((long)getSeconds()) + DateTimeConstants.MILLIS_PER_SECOND
2579:AOR:*(long,long):-(long,long):org.joda.time.Period@toStandardWeeks():1378:((long)getSeconds()) * DateTimeConstants.MILLIS_PER_SECOND |==> ((long)getSeconds()) - DateTimeConstants.MILLIS_PER_SECOND
2580:AOR:*(long,long):/(long,long):org.joda.time.Period@toStandardWeeks():1378:((long)getSeconds()) * DateTimeConstants.MILLIS_PER_SECOND |==> ((long)getSeconds()) / DateTimeConstants.MILLIS_PER_SECOND
2581:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@toStandardWeeks():1378:millis += ((long)getSeconds()) * DateTimeConstants.MILLIS_PER_SECOND |==> <NO-OP>
2582:AOR:*(long,long):%(long,long):org.joda.time.Period@toStandardWeeks():1379:((long)getMinutes()) * DateTimeConstants.MILLIS_PER_MINUTE |==> ((long)getMinutes()) % DateTimeConstants.MILLIS_PER_MINUTE
2583:AOR:*(long,long):+(long,long):org.joda.time.Period@toStandardWeeks():1379:((long)getMinutes()) * DateTimeConstants.MILLIS_PER_MINUTE |==> ((long)getMinutes()) + DateTimeConstants.MILLIS_PER_MINUTE
2584:AOR:*(long,long):-(long,long):org.joda.time.Period@toStandardWeeks():1379:((long)getMinutes()) * DateTimeConstants.MILLIS_PER_MINUTE |==> ((long)getMinutes()) - DateTimeConstants.MILLIS_PER_MINUTE
2585:AOR:*(long,long):/(long,long):org.joda.time.Period@toStandardWeeks():1379:((long)getMinutes()) * DateTimeConstants.MILLIS_PER_MINUTE |==> ((long)getMinutes()) / DateTimeConstants.MILLIS_PER_MINUTE
2586:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@toStandardWeeks():1379:millis += ((long)getMinutes()) * DateTimeConstants.MILLIS_PER_MINUTE |==> <NO-OP>
2587:AOR:*(long,long):%(long,long):org.joda.time.Period@toStandardWeeks():1380:((long)getHours()) * DateTimeConstants.MILLIS_PER_HOUR |==> ((long)getHours()) % DateTimeConstants.MILLIS_PER_HOUR
2588:AOR:*(long,long):+(long,long):org.joda.time.Period@toStandardWeeks():1380:((long)getHours()) * DateTimeConstants.MILLIS_PER_HOUR |==> ((long)getHours()) + DateTimeConstants.MILLIS_PER_HOUR
2589:AOR:*(long,long):-(long,long):org.joda.time.Period@toStandardWeeks():1380:((long)getHours()) * DateTimeConstants.MILLIS_PER_HOUR |==> ((long)getHours()) - DateTimeConstants.MILLIS_PER_HOUR
2590:AOR:*(long,long):/(long,long):org.joda.time.Period@toStandardWeeks():1380:((long)getHours()) * DateTimeConstants.MILLIS_PER_HOUR |==> ((long)getHours()) / DateTimeConstants.MILLIS_PER_HOUR
2591:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@toStandardWeeks():1380:millis += ((long)getHours()) * DateTimeConstants.MILLIS_PER_HOUR |==> <NO-OP>
2592:AOR:*(long,long):%(long,long):org.joda.time.Period@toStandardWeeks():1381:((long)getDays()) * DateTimeConstants.MILLIS_PER_DAY |==> ((long)getDays()) % DateTimeConstants.MILLIS_PER_DAY
2593:AOR:*(long,long):+(long,long):org.joda.time.Period@toStandardWeeks():1381:((long)getDays()) * DateTimeConstants.MILLIS_PER_DAY |==> ((long)getDays()) + DateTimeConstants.MILLIS_PER_DAY
2594:AOR:*(long,long):-(long,long):org.joda.time.Period@toStandardWeeks():1381:((long)getDays()) * DateTimeConstants.MILLIS_PER_DAY |==> ((long)getDays()) - DateTimeConstants.MILLIS_PER_DAY
2595:AOR:*(long,long):/(long,long):org.joda.time.Period@toStandardWeeks():1381:((long)getDays()) * DateTimeConstants.MILLIS_PER_DAY |==> ((long)getDays()) / DateTimeConstants.MILLIS_PER_DAY
2596:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@toStandardWeeks():1381:millis += ((long)getDays()) * DateTimeConstants.MILLIS_PER_DAY |==> <NO-OP>
2597:AOR:/(long,long):%(long,long):org.joda.time.Period@toStandardWeeks():1382:millis / DateTimeConstants.MILLIS_PER_WEEK |==> millis % DateTimeConstants.MILLIS_PER_WEEK
2598:AOR:/(long,long):*(long,long):org.joda.time.Period@toStandardWeeks():1382:millis / DateTimeConstants.MILLIS_PER_WEEK |==> millis * DateTimeConstants.MILLIS_PER_WEEK
2599:AOR:/(long,long):+(long,long):org.joda.time.Period@toStandardWeeks():1382:millis / DateTimeConstants.MILLIS_PER_WEEK |==> millis + DateTimeConstants.MILLIS_PER_WEEK
2600:AOR:/(long,long):-(long,long):org.joda.time.Period@toStandardWeeks():1382:millis / DateTimeConstants.MILLIS_PER_WEEK |==> millis - DateTimeConstants.MILLIS_PER_WEEK
2601:AOR:+(long,long):%(long,long):org.joda.time.Period@toStandardWeeks():1382:((long)getWeeks()) + millis / DateTimeConstants.MILLIS_PER_WEEK |==> ((long)getWeeks()) % (millis / DateTimeConstants.MILLIS_PER_WEEK)
2602:AOR:+(long,long):*(long,long):org.joda.time.Period@toStandardWeeks():1382:((long)getWeeks()) + millis / DateTimeConstants.MILLIS_PER_WEEK |==> ((long)getWeeks()) * (millis / DateTimeConstants.MILLIS_PER_WEEK)
2603:AOR:+(long,long):-(long,long):org.joda.time.Period@toStandardWeeks():1382:((long)getWeeks()) + millis / DateTimeConstants.MILLIS_PER_WEEK |==> ((long)getWeeks()) - millis / DateTimeConstants.MILLIS_PER_WEEK
2604:AOR:+(long,long):/(long,long):org.joda.time.Period@toStandardWeeks():1382:((long)getWeeks()) + millis / DateTimeConstants.MILLIS_PER_WEEK |==> ((long)getWeeks()) / (millis / DateTimeConstants.MILLIS_PER_WEEK)
2605:STD:<CALL>:<NO-OP>:org.joda.time.Period@toStandardDays():1406:checkYearsAndMonths("Days") |==> <NO-OP>
2606:AOR:*(long,long):%(long,long):org.joda.time.Period@toStandardDays():1408:((long)getSeconds()) * DateTimeConstants.MILLIS_PER_SECOND |==> ((long)getSeconds()) % DateTimeConstants.MILLIS_PER_SECOND
2607:AOR:*(long,long):+(long,long):org.joda.time.Period@toStandardDays():1408:((long)getSeconds()) * DateTimeConstants.MILLIS_PER_SECOND |==> ((long)getSeconds()) + DateTimeConstants.MILLIS_PER_SECOND
2608:AOR:*(long,long):-(long,long):org.joda.time.Period@toStandardDays():1408:((long)getSeconds()) * DateTimeConstants.MILLIS_PER_SECOND |==> ((long)getSeconds()) - DateTimeConstants.MILLIS_PER_SECOND
2609:AOR:*(long,long):/(long,long):org.joda.time.Period@toStandardDays():1408:((long)getSeconds()) * DateTimeConstants.MILLIS_PER_SECOND |==> ((long)getSeconds()) / DateTimeConstants.MILLIS_PER_SECOND
2610:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@toStandardDays():1408:millis += ((long)getSeconds()) * DateTimeConstants.MILLIS_PER_SECOND |==> <NO-OP>
2611:AOR:*(long,long):%(long,long):org.joda.time.Period@toStandardDays():1409:((long)getMinutes()) * DateTimeConstants.MILLIS_PER_MINUTE |==> ((long)getMinutes()) % DateTimeConstants.MILLIS_PER_MINUTE
2612:AOR:*(long,long):+(long,long):org.joda.time.Period@toStandardDays():1409:((long)getMinutes()) * DateTimeConstants.MILLIS_PER_MINUTE |==> ((long)getMinutes()) + DateTimeConstants.MILLIS_PER_MINUTE
2613:AOR:*(long,long):-(long,long):org.joda.time.Period@toStandardDays():1409:((long)getMinutes()) * DateTimeConstants.MILLIS_PER_MINUTE |==> ((long)getMinutes()) - DateTimeConstants.MILLIS_PER_MINUTE
2614:AOR:*(long,long):/(long,long):org.joda.time.Period@toStandardDays():1409:((long)getMinutes()) * DateTimeConstants.MILLIS_PER_MINUTE |==> ((long)getMinutes()) / DateTimeConstants.MILLIS_PER_MINUTE
2615:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@toStandardDays():1409:millis += ((long)getMinutes()) * DateTimeConstants.MILLIS_PER_MINUTE |==> <NO-OP>
2616:AOR:*(long,long):%(long,long):org.joda.time.Period@toStandardDays():1410:((long)getHours()) * DateTimeConstants.MILLIS_PER_HOUR |==> ((long)getHours()) % DateTimeConstants.MILLIS_PER_HOUR
2617:AOR:*(long,long):+(long,long):org.joda.time.Period@toStandardDays():1410:((long)getHours()) * DateTimeConstants.MILLIS_PER_HOUR |==> ((long)getHours()) + DateTimeConstants.MILLIS_PER_HOUR
2618:AOR:*(long,long):-(long,long):org.joda.time.Period@toStandardDays():1410:((long)getHours()) * DateTimeConstants.MILLIS_PER_HOUR |==> ((long)getHours()) - DateTimeConstants.MILLIS_PER_HOUR
2619:AOR:*(long,long):/(long,long):org.joda.time.Period@toStandardDays():1410:((long)getHours()) * DateTimeConstants.MILLIS_PER_HOUR |==> ((long)getHours()) / DateTimeConstants.MILLIS_PER_HOUR
2620:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@toStandardDays():1410:millis += ((long)getHours()) * DateTimeConstants.MILLIS_PER_HOUR |==> <NO-OP>
2621:AOR:/(long,long):%(long,long):org.joda.time.Period@toStandardDays():1411:millis / DateTimeConstants.MILLIS_PER_DAY |==> millis % DateTimeConstants.MILLIS_PER_DAY
2622:AOR:/(long,long):*(long,long):org.joda.time.Period@toStandardDays():1411:millis / DateTimeConstants.MILLIS_PER_DAY |==> millis * DateTimeConstants.MILLIS_PER_DAY
2623:AOR:/(long,long):+(long,long):org.joda.time.Period@toStandardDays():1411:millis / DateTimeConstants.MILLIS_PER_DAY |==> millis + DateTimeConstants.MILLIS_PER_DAY
2624:AOR:/(long,long):-(long,long):org.joda.time.Period@toStandardDays():1411:millis / DateTimeConstants.MILLIS_PER_DAY |==> millis - DateTimeConstants.MILLIS_PER_DAY
2625:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@toStandardDays():1412:days = FieldUtils.safeAdd(days, getDays()) |==> <NO-OP>
2626:AOR:*(long,long):%(long,long):org.joda.time.Period@toStandardDays():1413:((long)getWeeks()) * ((long)DateTimeConstants.DAYS_PER_WEEK) |==> ((long)getWeeks()) % ((long)DateTimeConstants.DAYS_PER_WEEK)
2627:AOR:*(long,long):+(long,long):org.joda.time.Period@toStandardDays():1413:((long)getWeeks()) * ((long)DateTimeConstants.DAYS_PER_WEEK) |==> ((long)getWeeks()) + ((long)DateTimeConstants.DAYS_PER_WEEK)
2628:AOR:*(long,long):-(long,long):org.joda.time.Period@toStandardDays():1413:((long)getWeeks()) * ((long)DateTimeConstants.DAYS_PER_WEEK) |==> ((long)getWeeks()) - ((long)DateTimeConstants.DAYS_PER_WEEK)
2629:AOR:*(long,long):/(long,long):org.joda.time.Period@toStandardDays():1413:((long)getWeeks()) * ((long)DateTimeConstants.DAYS_PER_WEEK) |==> ((long)getWeeks()) / ((long)DateTimeConstants.DAYS_PER_WEEK)
2630:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@toStandardDays():1413:days = FieldUtils.safeAdd(days, ((long)getWeeks()) * ((long)DateTimeConstants.DAYS_PER_WEEK)) |==> <NO-OP>
2631:STD:<CALL>:<NO-OP>:org.joda.time.Period@toStandardHours():1437:checkYearsAndMonths("Hours") |==> <NO-OP>
2632:AOR:*(long,long):%(long,long):org.joda.time.Period@toStandardHours():1439:((long)getSeconds()) * DateTimeConstants.MILLIS_PER_SECOND |==> ((long)getSeconds()) % DateTimeConstants.MILLIS_PER_SECOND
2633:AOR:*(long,long):+(long,long):org.joda.time.Period@toStandardHours():1439:((long)getSeconds()) * DateTimeConstants.MILLIS_PER_SECOND |==> ((long)getSeconds()) + DateTimeConstants.MILLIS_PER_SECOND
2634:AOR:*(long,long):-(long,long):org.joda.time.Period@toStandardHours():1439:((long)getSeconds()) * DateTimeConstants.MILLIS_PER_SECOND |==> ((long)getSeconds()) - DateTimeConstants.MILLIS_PER_SECOND
2635:AOR:*(long,long):/(long,long):org.joda.time.Period@toStandardHours():1439:((long)getSeconds()) * DateTimeConstants.MILLIS_PER_SECOND |==> ((long)getSeconds()) / DateTimeConstants.MILLIS_PER_SECOND
2636:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@toStandardHours():1439:millis += ((long)getSeconds()) * DateTimeConstants.MILLIS_PER_SECOND |==> <NO-OP>
2637:AOR:*(long,long):%(long,long):org.joda.time.Period@toStandardHours():1440:((long)getMinutes()) * DateTimeConstants.MILLIS_PER_MINUTE |==> ((long)getMinutes()) % DateTimeConstants.MILLIS_PER_MINUTE
2638:AOR:*(long,long):+(long,long):org.joda.time.Period@toStandardHours():1440:((long)getMinutes()) * DateTimeConstants.MILLIS_PER_MINUTE |==> ((long)getMinutes()) + DateTimeConstants.MILLIS_PER_MINUTE
2639:AOR:*(long,long):-(long,long):org.joda.time.Period@toStandardHours():1440:((long)getMinutes()) * DateTimeConstants.MILLIS_PER_MINUTE |==> ((long)getMinutes()) - DateTimeConstants.MILLIS_PER_MINUTE
2640:AOR:*(long,long):/(long,long):org.joda.time.Period@toStandardHours():1440:((long)getMinutes()) * DateTimeConstants.MILLIS_PER_MINUTE |==> ((long)getMinutes()) / DateTimeConstants.MILLIS_PER_MINUTE
2641:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@toStandardHours():1440:millis += ((long)getMinutes()) * DateTimeConstants.MILLIS_PER_MINUTE |==> <NO-OP>
2642:AOR:/(long,long):%(long,long):org.joda.time.Period@toStandardHours():1441:millis / DateTimeConstants.MILLIS_PER_HOUR |==> millis % DateTimeConstants.MILLIS_PER_HOUR
2643:AOR:/(long,long):*(long,long):org.joda.time.Period@toStandardHours():1441:millis / DateTimeConstants.MILLIS_PER_HOUR |==> millis * DateTimeConstants.MILLIS_PER_HOUR
2644:AOR:/(long,long):+(long,long):org.joda.time.Period@toStandardHours():1441:millis / DateTimeConstants.MILLIS_PER_HOUR |==> millis + DateTimeConstants.MILLIS_PER_HOUR
2645:AOR:/(long,long):-(long,long):org.joda.time.Period@toStandardHours():1441:millis / DateTimeConstants.MILLIS_PER_HOUR |==> millis - DateTimeConstants.MILLIS_PER_HOUR
2646:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@toStandardHours():1442:hours = FieldUtils.safeAdd(hours, getHours()) |==> <NO-OP>
2647:AOR:*(long,long):%(long,long):org.joda.time.Period@toStandardHours():1443:((long)getDays()) * ((long)DateTimeConstants.HOURS_PER_DAY) |==> ((long)getDays()) % ((long)DateTimeConstants.HOURS_PER_DAY)
2648:AOR:*(long,long):+(long,long):org.joda.time.Period@toStandardHours():1443:((long)getDays()) * ((long)DateTimeConstants.HOURS_PER_DAY) |==> ((long)getDays()) + ((long)DateTimeConstants.HOURS_PER_DAY)
2649:AOR:*(long,long):-(long,long):org.joda.time.Period@toStandardHours():1443:((long)getDays()) * ((long)DateTimeConstants.HOURS_PER_DAY) |==> ((long)getDays()) - ((long)DateTimeConstants.HOURS_PER_DAY)
2650:AOR:*(long,long):/(long,long):org.joda.time.Period@toStandardHours():1443:((long)getDays()) * ((long)DateTimeConstants.HOURS_PER_DAY) |==> ((long)getDays()) / ((long)DateTimeConstants.HOURS_PER_DAY)
2651:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@toStandardHours():1443:hours = FieldUtils.safeAdd(hours, ((long)getDays()) * ((long)DateTimeConstants.HOURS_PER_DAY)) |==> <NO-OP>
2652:AOR:*(long,long):%(long,long):org.joda.time.Period@toStandardHours():1444:((long)getWeeks()) * ((long)DateTimeConstants.HOURS_PER_WEEK) |==> ((long)getWeeks()) % ((long)DateTimeConstants.HOURS_PER_WEEK)
2653:AOR:*(long,long):+(long,long):org.joda.time.Period@toStandardHours():1444:((long)getWeeks()) * ((long)DateTimeConstants.HOURS_PER_WEEK) |==> ((long)getWeeks()) + ((long)DateTimeConstants.HOURS_PER_WEEK)
2654:AOR:*(long,long):-(long,long):org.joda.time.Period@toStandardHours():1444:((long)getWeeks()) * ((long)DateTimeConstants.HOURS_PER_WEEK) |==> ((long)getWeeks()) - ((long)DateTimeConstants.HOURS_PER_WEEK)
2655:AOR:*(long,long):/(long,long):org.joda.time.Period@toStandardHours():1444:((long)getWeeks()) * ((long)DateTimeConstants.HOURS_PER_WEEK) |==> ((long)getWeeks()) / ((long)DateTimeConstants.HOURS_PER_WEEK)
2656:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@toStandardHours():1444:hours = FieldUtils.safeAdd(hours, ((long)getWeeks()) * ((long)DateTimeConstants.HOURS_PER_WEEK)) |==> <NO-OP>
2657:STD:<CALL>:<NO-OP>:org.joda.time.Period@toStandardMinutes():1468:checkYearsAndMonths("Minutes") |==> <NO-OP>
2658:AOR:*(long,long):%(long,long):org.joda.time.Period@toStandardMinutes():1470:((long)getSeconds()) * DateTimeConstants.MILLIS_PER_SECOND |==> ((long)getSeconds()) % DateTimeConstants.MILLIS_PER_SECOND
2659:AOR:*(long,long):+(long,long):org.joda.time.Period@toStandardMinutes():1470:((long)getSeconds()) * DateTimeConstants.MILLIS_PER_SECOND |==> ((long)getSeconds()) + DateTimeConstants.MILLIS_PER_SECOND
2660:AOR:*(long,long):-(long,long):org.joda.time.Period@toStandardMinutes():1470:((long)getSeconds()) * DateTimeConstants.MILLIS_PER_SECOND |==> ((long)getSeconds()) - DateTimeConstants.MILLIS_PER_SECOND
2661:AOR:*(long,long):/(long,long):org.joda.time.Period@toStandardMinutes():1470:((long)getSeconds()) * DateTimeConstants.MILLIS_PER_SECOND |==> ((long)getSeconds()) / DateTimeConstants.MILLIS_PER_SECOND
2662:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@toStandardMinutes():1470:millis += ((long)getSeconds()) * DateTimeConstants.MILLIS_PER_SECOND |==> <NO-OP>
2663:AOR:/(long,long):%(long,long):org.joda.time.Period@toStandardMinutes():1471:millis / DateTimeConstants.MILLIS_PER_MINUTE |==> millis % DateTimeConstants.MILLIS_PER_MINUTE
2664:AOR:/(long,long):*(long,long):org.joda.time.Period@toStandardMinutes():1471:millis / DateTimeConstants.MILLIS_PER_MINUTE |==> millis * DateTimeConstants.MILLIS_PER_MINUTE
2665:AOR:/(long,long):+(long,long):org.joda.time.Period@toStandardMinutes():1471:millis / DateTimeConstants.MILLIS_PER_MINUTE |==> millis + DateTimeConstants.MILLIS_PER_MINUTE
2666:AOR:/(long,long):-(long,long):org.joda.time.Period@toStandardMinutes():1471:millis / DateTimeConstants.MILLIS_PER_MINUTE |==> millis - DateTimeConstants.MILLIS_PER_MINUTE
2667:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@toStandardMinutes():1472:minutes = FieldUtils.safeAdd(minutes, getMinutes()) |==> <NO-OP>
2668:AOR:*(long,long):%(long,long):org.joda.time.Period@toStandardMinutes():1473:((long)getHours()) * ((long)DateTimeConstants.MINUTES_PER_HOUR) |==> ((long)getHours()) % ((long)DateTimeConstants.MINUTES_PER_HOUR)
2669:AOR:*(long,long):+(long,long):org.joda.time.Period@toStandardMinutes():1473:((long)getHours()) * ((long)DateTimeConstants.MINUTES_PER_HOUR) |==> ((long)getHours()) + ((long)DateTimeConstants.MINUTES_PER_HOUR)
2670:AOR:*(long,long):-(long,long):org.joda.time.Period@toStandardMinutes():1473:((long)getHours()) * ((long)DateTimeConstants.MINUTES_PER_HOUR) |==> ((long)getHours()) - ((long)DateTimeConstants.MINUTES_PER_HOUR)
2671:AOR:*(long,long):/(long,long):org.joda.time.Period@toStandardMinutes():1473:((long)getHours()) * ((long)DateTimeConstants.MINUTES_PER_HOUR) |==> ((long)getHours()) / ((long)DateTimeConstants.MINUTES_PER_HOUR)
2672:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@toStandardMinutes():1473:minutes = FieldUtils.safeAdd(minutes, ((long)getHours()) * ((long)DateTimeConstants.MINUTES_PER_HOUR)) |==> <NO-OP>
2673:AOR:*(long,long):%(long,long):org.joda.time.Period@toStandardMinutes():1474:((long)getDays()) * ((long)DateTimeConstants.MINUTES_PER_DAY) |==> ((long)getDays()) % ((long)DateTimeConstants.MINUTES_PER_DAY)
2674:AOR:*(long,long):+(long,long):org.joda.time.Period@toStandardMinutes():1474:((long)getDays()) * ((long)DateTimeConstants.MINUTES_PER_DAY) |==> ((long)getDays()) + ((long)DateTimeConstants.MINUTES_PER_DAY)
2675:AOR:*(long,long):-(long,long):org.joda.time.Period@toStandardMinutes():1474:((long)getDays()) * ((long)DateTimeConstants.MINUTES_PER_DAY) |==> ((long)getDays()) - ((long)DateTimeConstants.MINUTES_PER_DAY)
2676:AOR:*(long,long):/(long,long):org.joda.time.Period@toStandardMinutes():1474:((long)getDays()) * ((long)DateTimeConstants.MINUTES_PER_DAY) |==> ((long)getDays()) / ((long)DateTimeConstants.MINUTES_PER_DAY)
2677:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@toStandardMinutes():1474:minutes = FieldUtils.safeAdd(minutes, ((long)getDays()) * ((long)DateTimeConstants.MINUTES_PER_DAY)) |==> <NO-OP>
2678:AOR:*(long,long):%(long,long):org.joda.time.Period@toStandardMinutes():1475:((long)getWeeks()) * ((long)DateTimeConstants.MINUTES_PER_WEEK) |==> ((long)getWeeks()) % ((long)DateTimeConstants.MINUTES_PER_WEEK)
2679:AOR:*(long,long):+(long,long):org.joda.time.Period@toStandardMinutes():1475:((long)getWeeks()) * ((long)DateTimeConstants.MINUTES_PER_WEEK) |==> ((long)getWeeks()) + ((long)DateTimeConstants.MINUTES_PER_WEEK)
2680:AOR:*(long,long):-(long,long):org.joda.time.Period@toStandardMinutes():1475:((long)getWeeks()) * ((long)DateTimeConstants.MINUTES_PER_WEEK) |==> ((long)getWeeks()) - ((long)DateTimeConstants.MINUTES_PER_WEEK)
2681:AOR:*(long,long):/(long,long):org.joda.time.Period@toStandardMinutes():1475:((long)getWeeks()) * ((long)DateTimeConstants.MINUTES_PER_WEEK) |==> ((long)getWeeks()) / ((long)DateTimeConstants.MINUTES_PER_WEEK)
2682:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@toStandardMinutes():1475:minutes = FieldUtils.safeAdd(minutes, ((long)getWeeks()) * ((long)DateTimeConstants.MINUTES_PER_WEEK)) |==> <NO-OP>
2683:STD:<CALL>:<NO-OP>:org.joda.time.Period@toStandardSeconds():1499:checkYearsAndMonths("Seconds") |==> <NO-OP>
2684:AOR:/(int,int):%(int,int):org.joda.time.Period@toStandardSeconds():1500:getMillis() / DateTimeConstants.MILLIS_PER_SECOND |==> getMillis() % DateTimeConstants.MILLIS_PER_SECOND
2685:AOR:/(int,int):*(int,int):org.joda.time.Period@toStandardSeconds():1500:getMillis() / DateTimeConstants.MILLIS_PER_SECOND |==> getMillis() * DateTimeConstants.MILLIS_PER_SECOND
2686:AOR:/(int,int):+(int,int):org.joda.time.Period@toStandardSeconds():1500:getMillis() / DateTimeConstants.MILLIS_PER_SECOND |==> getMillis() + DateTimeConstants.MILLIS_PER_SECOND
2687:AOR:/(int,int):-(int,int):org.joda.time.Period@toStandardSeconds():1500:getMillis() / DateTimeConstants.MILLIS_PER_SECOND |==> getMillis() - DateTimeConstants.MILLIS_PER_SECOND
2688:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@toStandardSeconds():1501:seconds = FieldUtils.safeAdd(seconds, getSeconds()) |==> <NO-OP>
2689:AOR:*(long,long):%(long,long):org.joda.time.Period@toStandardSeconds():1502:((long)getMinutes()) * ((long)DateTimeConstants.SECONDS_PER_MINUTE) |==> ((long)getMinutes()) % ((long)DateTimeConstants.SECONDS_PER_MINUTE)
2690:AOR:*(long,long):+(long,long):org.joda.time.Period@toStandardSeconds():1502:((long)getMinutes()) * ((long)DateTimeConstants.SECONDS_PER_MINUTE) |==> ((long)getMinutes()) + ((long)DateTimeConstants.SECONDS_PER_MINUTE)
2691:AOR:*(long,long):-(long,long):org.joda.time.Period@toStandardSeconds():1502:((long)getMinutes()) * ((long)DateTimeConstants.SECONDS_PER_MINUTE) |==> ((long)getMinutes()) - ((long)DateTimeConstants.SECONDS_PER_MINUTE)
2692:AOR:*(long,long):/(long,long):org.joda.time.Period@toStandardSeconds():1502:((long)getMinutes()) * ((long)DateTimeConstants.SECONDS_PER_MINUTE) |==> ((long)getMinutes()) / ((long)DateTimeConstants.SECONDS_PER_MINUTE)
2693:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@toStandardSeconds():1502:seconds = FieldUtils.safeAdd(seconds, ((long)getMinutes()) * ((long)DateTimeConstants.SECONDS_PER_MINUTE)) |==> <NO-OP>
2694:AOR:*(long,long):%(long,long):org.joda.time.Period@toStandardSeconds():1503:((long)getHours()) * ((long)DateTimeConstants.SECONDS_PER_HOUR) |==> ((long)getHours()) % ((long)DateTimeConstants.SECONDS_PER_HOUR)
2695:AOR:*(long,long):+(long,long):org.joda.time.Period@toStandardSeconds():1503:((long)getHours()) * ((long)DateTimeConstants.SECONDS_PER_HOUR) |==> ((long)getHours()) + ((long)DateTimeConstants.SECONDS_PER_HOUR)
2696:AOR:*(long,long):-(long,long):org.joda.time.Period@toStandardSeconds():1503:((long)getHours()) * ((long)DateTimeConstants.SECONDS_PER_HOUR) |==> ((long)getHours()) - ((long)DateTimeConstants.SECONDS_PER_HOUR)
2697:AOR:*(long,long):/(long,long):org.joda.time.Period@toStandardSeconds():1503:((long)getHours()) * ((long)DateTimeConstants.SECONDS_PER_HOUR) |==> ((long)getHours()) / ((long)DateTimeConstants.SECONDS_PER_HOUR)
2698:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@toStandardSeconds():1503:seconds = FieldUtils.safeAdd(seconds, ((long)getHours()) * ((long)DateTimeConstants.SECONDS_PER_HOUR)) |==> <NO-OP>
2699:AOR:*(long,long):%(long,long):org.joda.time.Period@toStandardSeconds():1504:((long)getDays()) * ((long)DateTimeConstants.SECONDS_PER_DAY) |==> ((long)getDays()) % ((long)DateTimeConstants.SECONDS_PER_DAY)
2700:AOR:*(long,long):+(long,long):org.joda.time.Period@toStandardSeconds():1504:((long)getDays()) * ((long)DateTimeConstants.SECONDS_PER_DAY) |==> ((long)getDays()) + ((long)DateTimeConstants.SECONDS_PER_DAY)
2701:AOR:*(long,long):-(long,long):org.joda.time.Period@toStandardSeconds():1504:((long)getDays()) * ((long)DateTimeConstants.SECONDS_PER_DAY) |==> ((long)getDays()) - ((long)DateTimeConstants.SECONDS_PER_DAY)
2702:AOR:*(long,long):/(long,long):org.joda.time.Period@toStandardSeconds():1504:((long)getDays()) * ((long)DateTimeConstants.SECONDS_PER_DAY) |==> ((long)getDays()) / ((long)DateTimeConstants.SECONDS_PER_DAY)
2703:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@toStandardSeconds():1504:seconds = FieldUtils.safeAdd(seconds, ((long)getDays()) * ((long)DateTimeConstants.SECONDS_PER_DAY)) |==> <NO-OP>
2704:AOR:*(long,long):%(long,long):org.joda.time.Period@toStandardSeconds():1505:((long)getWeeks()) * ((long)DateTimeConstants.SECONDS_PER_WEEK) |==> ((long)getWeeks()) % ((long)DateTimeConstants.SECONDS_PER_WEEK)
2705:AOR:*(long,long):+(long,long):org.joda.time.Period@toStandardSeconds():1505:((long)getWeeks()) * ((long)DateTimeConstants.SECONDS_PER_WEEK) |==> ((long)getWeeks()) + ((long)DateTimeConstants.SECONDS_PER_WEEK)
2706:AOR:*(long,long):-(long,long):org.joda.time.Period@toStandardSeconds():1505:((long)getWeeks()) * ((long)DateTimeConstants.SECONDS_PER_WEEK) |==> ((long)getWeeks()) - ((long)DateTimeConstants.SECONDS_PER_WEEK)
2707:AOR:*(long,long):/(long,long):org.joda.time.Period@toStandardSeconds():1505:((long)getWeeks()) * ((long)DateTimeConstants.SECONDS_PER_WEEK) |==> ((long)getWeeks()) / ((long)DateTimeConstants.SECONDS_PER_WEEK)
2708:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@toStandardSeconds():1505:seconds = FieldUtils.safeAdd(seconds, ((long)getWeeks()) * ((long)DateTimeConstants.SECONDS_PER_WEEK)) |==> <NO-OP>
2709:STD:<CALL>:<NO-OP>:org.joda.time.Period@toStandardDuration():1529:checkYearsAndMonths("Duration") |==> <NO-OP>
2710:AOR:*(long,long):%(long,long):org.joda.time.Period@toStandardDuration():1531:((long)getSeconds()) * ((long)DateTimeConstants.MILLIS_PER_SECOND) |==> ((long)getSeconds()) % ((long)DateTimeConstants.MILLIS_PER_SECOND)
2711:AOR:*(long,long):+(long,long):org.joda.time.Period@toStandardDuration():1531:((long)getSeconds()) * ((long)DateTimeConstants.MILLIS_PER_SECOND) |==> ((long)getSeconds()) + ((long)DateTimeConstants.MILLIS_PER_SECOND)
2712:AOR:*(long,long):-(long,long):org.joda.time.Period@toStandardDuration():1531:((long)getSeconds()) * ((long)DateTimeConstants.MILLIS_PER_SECOND) |==> ((long)getSeconds()) - ((long)DateTimeConstants.MILLIS_PER_SECOND)
2713:AOR:*(long,long):/(long,long):org.joda.time.Period@toStandardDuration():1531:((long)getSeconds()) * ((long)DateTimeConstants.MILLIS_PER_SECOND) |==> ((long)getSeconds()) / ((long)DateTimeConstants.MILLIS_PER_SECOND)
2714:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@toStandardDuration():1531:millis += (((long)getSeconds()) * ((long)DateTimeConstants.MILLIS_PER_SECOND)) |==> <NO-OP>
2715:AOR:*(long,long):%(long,long):org.joda.time.Period@toStandardDuration():1532:((long)getMinutes()) * ((long)DateTimeConstants.MILLIS_PER_MINUTE) |==> ((long)getMinutes()) % ((long)DateTimeConstants.MILLIS_PER_MINUTE)
2716:AOR:*(long,long):+(long,long):org.joda.time.Period@toStandardDuration():1532:((long)getMinutes()) * ((long)DateTimeConstants.MILLIS_PER_MINUTE) |==> ((long)getMinutes()) + ((long)DateTimeConstants.MILLIS_PER_MINUTE)
2717:AOR:*(long,long):-(long,long):org.joda.time.Period@toStandardDuration():1532:((long)getMinutes()) * ((long)DateTimeConstants.MILLIS_PER_MINUTE) |==> ((long)getMinutes()) - ((long)DateTimeConstants.MILLIS_PER_MINUTE)
2718:AOR:*(long,long):/(long,long):org.joda.time.Period@toStandardDuration():1532:((long)getMinutes()) * ((long)DateTimeConstants.MILLIS_PER_MINUTE) |==> ((long)getMinutes()) / ((long)DateTimeConstants.MILLIS_PER_MINUTE)
2719:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@toStandardDuration():1532:millis += (((long)getMinutes()) * ((long)DateTimeConstants.MILLIS_PER_MINUTE)) |==> <NO-OP>
2720:AOR:*(long,long):%(long,long):org.joda.time.Period@toStandardDuration():1533:((long)getHours()) * ((long)DateTimeConstants.MILLIS_PER_HOUR) |==> ((long)getHours()) % ((long)DateTimeConstants.MILLIS_PER_HOUR)
2721:AOR:*(long,long):+(long,long):org.joda.time.Period@toStandardDuration():1533:((long)getHours()) * ((long)DateTimeConstants.MILLIS_PER_HOUR) |==> ((long)getHours()) + ((long)DateTimeConstants.MILLIS_PER_HOUR)
2722:AOR:*(long,long):-(long,long):org.joda.time.Period@toStandardDuration():1533:((long)getHours()) * ((long)DateTimeConstants.MILLIS_PER_HOUR) |==> ((long)getHours()) - ((long)DateTimeConstants.MILLIS_PER_HOUR)
2723:AOR:*(long,long):/(long,long):org.joda.time.Period@toStandardDuration():1533:((long)getHours()) * ((long)DateTimeConstants.MILLIS_PER_HOUR) |==> ((long)getHours()) / ((long)DateTimeConstants.MILLIS_PER_HOUR)
2724:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@toStandardDuration():1533:millis += (((long)getHours()) * ((long)DateTimeConstants.MILLIS_PER_HOUR)) |==> <NO-OP>
2725:AOR:*(long,long):%(long,long):org.joda.time.Period@toStandardDuration():1534:((long)getDays()) * ((long)DateTimeConstants.MILLIS_PER_DAY) |==> ((long)getDays()) % ((long)DateTimeConstants.MILLIS_PER_DAY)
2726:AOR:*(long,long):+(long,long):org.joda.time.Period@toStandardDuration():1534:((long)getDays()) * ((long)DateTimeConstants.MILLIS_PER_DAY) |==> ((long)getDays()) + ((long)DateTimeConstants.MILLIS_PER_DAY)
2727:AOR:*(long,long):-(long,long):org.joda.time.Period@toStandardDuration():1534:((long)getDays()) * ((long)DateTimeConstants.MILLIS_PER_DAY) |==> ((long)getDays()) - ((long)DateTimeConstants.MILLIS_PER_DAY)
2728:AOR:*(long,long):/(long,long):org.joda.time.Period@toStandardDuration():1534:((long)getDays()) * ((long)DateTimeConstants.MILLIS_PER_DAY) |==> ((long)getDays()) / ((long)DateTimeConstants.MILLIS_PER_DAY)
2729:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@toStandardDuration():1534:millis += (((long)getDays()) * ((long)DateTimeConstants.MILLIS_PER_DAY)) |==> <NO-OP>
2730:AOR:*(long,long):%(long,long):org.joda.time.Period@toStandardDuration():1535:((long)getWeeks()) * ((long)DateTimeConstants.MILLIS_PER_WEEK) |==> ((long)getWeeks()) % ((long)DateTimeConstants.MILLIS_PER_WEEK)
2731:AOR:*(long,long):+(long,long):org.joda.time.Period@toStandardDuration():1535:((long)getWeeks()) * ((long)DateTimeConstants.MILLIS_PER_WEEK) |==> ((long)getWeeks()) + ((long)DateTimeConstants.MILLIS_PER_WEEK)
2732:AOR:*(long,long):-(long,long):org.joda.time.Period@toStandardDuration():1535:((long)getWeeks()) * ((long)DateTimeConstants.MILLIS_PER_WEEK) |==> ((long)getWeeks()) - ((long)DateTimeConstants.MILLIS_PER_WEEK)
2733:AOR:*(long,long):/(long,long):org.joda.time.Period@toStandardDuration():1535:((long)getWeeks()) * ((long)DateTimeConstants.MILLIS_PER_WEEK) |==> ((long)getWeeks()) / ((long)DateTimeConstants.MILLIS_PER_WEEK)
2734:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@toStandardDuration():1535:millis += (((long)getWeeks()) * ((long)DateTimeConstants.MILLIS_PER_WEEK)) |==> <NO-OP>
2735:LVR:0:POS:org.joda.time.Period@checkYearsAndMonths(java.lang.String):1546:0 |==> 1
2736:LVR:0:NEG:org.joda.time.Period@checkYearsAndMonths(java.lang.String):1546:0 |==> -1
2737:ROR:!=(int,int):<(int,int):org.joda.time.Period@checkYearsAndMonths(java.lang.String):1546:getMonths() != 0 |==> getMonths() < 0
2738:ROR:!=(int,int):>(int,int):org.joda.time.Period@checkYearsAndMonths(java.lang.String):1546:getMonths() != 0 |==> getMonths() > 0
2739:ROR:!=(int,int):TRUE(int,int):org.joda.time.Period@checkYearsAndMonths(java.lang.String):1546:getMonths() != 0 |==> true
2740:LVR:0:POS:org.joda.time.Period@checkYearsAndMonths(java.lang.String):1549:0 |==> 1
2741:LVR:0:NEG:org.joda.time.Period@checkYearsAndMonths(java.lang.String):1549:0 |==> -1
2742:ROR:!=(int,int):<(int,int):org.joda.time.Period@checkYearsAndMonths(java.lang.String):1549:getYears() != 0 |==> getYears() < 0
2743:ROR:!=(int,int):>(int,int):org.joda.time.Period@checkYearsAndMonths(java.lang.String):1549:getYears() != 0 |==> getYears() > 0
2744:ROR:!=(int,int):TRUE(int,int):org.joda.time.Period@checkYearsAndMonths(java.lang.String):1549:getYears() != 0 |==> true
2745:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1617:type = DateTimeUtils.getPeriodType(type) |==> <NO-OP>
2746:AOR:*(long,long):%(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1619:((long)getSeconds()) * ((long)DateTimeConstants.MILLIS_PER_SECOND) |==> ((long)getSeconds()) % ((long)DateTimeConstants.MILLIS_PER_SECOND)
2747:AOR:*(long,long):+(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1619:((long)getSeconds()) * ((long)DateTimeConstants.MILLIS_PER_SECOND) |==> ((long)getSeconds()) + ((long)DateTimeConstants.MILLIS_PER_SECOND)
2748:AOR:*(long,long):-(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1619:((long)getSeconds()) * ((long)DateTimeConstants.MILLIS_PER_SECOND) |==> ((long)getSeconds()) - ((long)DateTimeConstants.MILLIS_PER_SECOND)
2749:AOR:*(long,long):/(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1619:((long)getSeconds()) * ((long)DateTimeConstants.MILLIS_PER_SECOND) |==> ((long)getSeconds()) / ((long)DateTimeConstants.MILLIS_PER_SECOND)
2750:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1619:millis += (((long)getSeconds()) * ((long)DateTimeConstants.MILLIS_PER_SECOND)) |==> <NO-OP>
2751:AOR:*(long,long):%(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1620:((long)getMinutes()) * ((long)DateTimeConstants.MILLIS_PER_MINUTE) |==> ((long)getMinutes()) % ((long)DateTimeConstants.MILLIS_PER_MINUTE)
2752:AOR:*(long,long):+(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1620:((long)getMinutes()) * ((long)DateTimeConstants.MILLIS_PER_MINUTE) |==> ((long)getMinutes()) + ((long)DateTimeConstants.MILLIS_PER_MINUTE)
2753:AOR:*(long,long):-(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1620:((long)getMinutes()) * ((long)DateTimeConstants.MILLIS_PER_MINUTE) |==> ((long)getMinutes()) - ((long)DateTimeConstants.MILLIS_PER_MINUTE)
2754:AOR:*(long,long):/(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1620:((long)getMinutes()) * ((long)DateTimeConstants.MILLIS_PER_MINUTE) |==> ((long)getMinutes()) / ((long)DateTimeConstants.MILLIS_PER_MINUTE)
2755:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1620:millis += (((long)getMinutes()) * ((long)DateTimeConstants.MILLIS_PER_MINUTE)) |==> <NO-OP>
2756:AOR:*(long,long):%(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1621:((long)getHours()) * ((long)DateTimeConstants.MILLIS_PER_HOUR) |==> ((long)getHours()) % ((long)DateTimeConstants.MILLIS_PER_HOUR)
2757:AOR:*(long,long):+(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1621:((long)getHours()) * ((long)DateTimeConstants.MILLIS_PER_HOUR) |==> ((long)getHours()) + ((long)DateTimeConstants.MILLIS_PER_HOUR)
2758:AOR:*(long,long):-(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1621:((long)getHours()) * ((long)DateTimeConstants.MILLIS_PER_HOUR) |==> ((long)getHours()) - ((long)DateTimeConstants.MILLIS_PER_HOUR)
2759:AOR:*(long,long):/(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1621:((long)getHours()) * ((long)DateTimeConstants.MILLIS_PER_HOUR) |==> ((long)getHours()) / ((long)DateTimeConstants.MILLIS_PER_HOUR)
2760:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1621:millis += (((long)getHours()) * ((long)DateTimeConstants.MILLIS_PER_HOUR)) |==> <NO-OP>
2761:AOR:*(long,long):%(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1622:((long)getDays()) * ((long)DateTimeConstants.MILLIS_PER_DAY) |==> ((long)getDays()) % ((long)DateTimeConstants.MILLIS_PER_DAY)
2762:AOR:*(long,long):+(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1622:((long)getDays()) * ((long)DateTimeConstants.MILLIS_PER_DAY) |==> ((long)getDays()) + ((long)DateTimeConstants.MILLIS_PER_DAY)
2763:AOR:*(long,long):-(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1622:((long)getDays()) * ((long)DateTimeConstants.MILLIS_PER_DAY) |==> ((long)getDays()) - ((long)DateTimeConstants.MILLIS_PER_DAY)
2764:AOR:*(long,long):/(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1622:((long)getDays()) * ((long)DateTimeConstants.MILLIS_PER_DAY) |==> ((long)getDays()) / ((long)DateTimeConstants.MILLIS_PER_DAY)
2765:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1622:millis += (((long)getDays()) * ((long)DateTimeConstants.MILLIS_PER_DAY)) |==> <NO-OP>
2766:AOR:*(long,long):%(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1623:((long)getWeeks()) * ((long)DateTimeConstants.MILLIS_PER_WEEK) |==> ((long)getWeeks()) % ((long)DateTimeConstants.MILLIS_PER_WEEK)
2767:AOR:*(long,long):+(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1623:((long)getWeeks()) * ((long)DateTimeConstants.MILLIS_PER_WEEK) |==> ((long)getWeeks()) + ((long)DateTimeConstants.MILLIS_PER_WEEK)
2768:AOR:*(long,long):-(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1623:((long)getWeeks()) * ((long)DateTimeConstants.MILLIS_PER_WEEK) |==> ((long)getWeeks()) - ((long)DateTimeConstants.MILLIS_PER_WEEK)
2769:AOR:*(long,long):/(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1623:((long)getWeeks()) * ((long)DateTimeConstants.MILLIS_PER_WEEK) |==> ((long)getWeeks()) / ((long)DateTimeConstants.MILLIS_PER_WEEK)
2770:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1623:millis += (((long)getWeeks()) * ((long)DateTimeConstants.MILLIS_PER_WEEK)) |==> <NO-OP>
2771:LVR:0:POS:org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1627:0 |==> 1
2772:LVR:0:NEG:org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1627:0 |==> -1
2773:ROR:!=(int,int):<(int,int):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1627:years != 0 |==> years < 0
2774:ROR:!=(int,int):>(int,int):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1627:years != 0 |==> years > 0
2775:ROR:!=(int,int):TRUE(int,int):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1627:years != 0 |==> true
2776:LVR:0:POS:org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1627:0 |==> 1
2777:LVR:0:NEG:org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1627:0 |==> -1
2778:ROR:!=(int,int):<(int,int):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1627:months != 0 |==> months < 0
2779:ROR:!=(int,int):>(int,int):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1627:months != 0 |==> months > 0
2780:ROR:!=(int,int):TRUE(int,int):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1627:months != 0 |==> true
2781:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1627:years != 0 || months != 0 |==> years != 0 != (months != 0)
2782:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1627:years != 0 || months != 0 |==> years != 0
2783:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1627:years != 0 || months != 0 |==> months != 0
2784:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1627:years != 0 || months != 0 |==> true
2785:LVR:POS:0:org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1628:12L |==> 0L
2786:LVR:POS:NEG:org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1628:12L |==> -12L
2787:AOR:*(long,long):%(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1628:years * 12L |==> years % 12L
2788:AOR:*(long,long):+(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1628:years * 12L |==> years + 12L
2789:AOR:*(long,long):-(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1628:years * 12L |==> years - 12L
2790:AOR:*(long,long):/(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1628:years * 12L |==> years / 12L
2791:AOR:+(long,long):%(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1628:years * 12L + months |==> years * 12L % months
2792:AOR:+(long,long):*(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1628:years * 12L + months |==> years * 12L * months
2793:AOR:+(long,long):-(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1628:years * 12L + months |==> years * 12L - months
2794:AOR:+(long,long):/(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1628:years * 12L + months |==> years * 12L / months
2795:COR:type.isSupported(DurationFieldType.YEARS_TYPE):TRUE:org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1629:type.isSupported(DurationFieldType.YEARS_TYPE) |==> false
2796:COR:type.isSupported(DurationFieldType.YEARS_TYPE):FALSE:org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1629:type.isSupported(DurationFieldType.YEARS_TYPE) |==> true
2797:LVR:POS:0:org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1630:12 |==> 0
2798:LVR:POS:NEG:org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1630:12 |==> -12
2799:AOR:/(long,long):%(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1630:totalMonths / 12 |==> totalMonths % 12
2800:AOR:/(long,long):*(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1630:totalMonths / 12 |==> totalMonths * 12
2801:AOR:/(long,long):+(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1630:totalMonths / 12 |==> totalMonths + 12
2802:AOR:/(long,long):-(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1630:totalMonths / 12 |==> totalMonths - 12
2803:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1631:result = result.withYears(normalizedYears) |==> <NO-OP>
2804:LVR:POS:0:org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1632:12 |==> 0
2805:LVR:POS:NEG:org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1632:12 |==> -12
2806:AOR:*(int,int):%(int,int):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1632:normalizedYears * 12 |==> normalizedYears % 12
2807:AOR:*(int,int):+(int,int):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1632:normalizedYears * 12 |==> normalizedYears + 12
2808:AOR:*(int,int):-(int,int):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1632:normalizedYears * 12 |==> normalizedYears - 12
2809:AOR:*(int,int):/(int,int):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1632:normalizedYears * 12 |==> normalizedYears / 12
2810:AOR:-(long,long):%(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1632:totalMonths - (normalizedYears * 12) |==> totalMonths % (normalizedYears * 12)
2811:AOR:-(long,long):*(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1632:totalMonths - (normalizedYears * 12) |==> totalMonths * (normalizedYears * 12)
2812:AOR:-(long,long):+(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1632:totalMonths - (normalizedYears * 12) |==> totalMonths + (normalizedYears * 12)
2813:AOR:-(long,long):/(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1632:totalMonths - (normalizedYears * 12) |==> totalMonths / (normalizedYears * 12)
2814:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1632:totalMonths = totalMonths - (normalizedYears * 12) |==> <NO-OP>
2815:COR:type.isSupported(DurationFieldType.MONTHS_TYPE):TRUE:org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1634:type.isSupported(DurationFieldType.MONTHS_TYPE) |==> false
2816:COR:type.isSupported(DurationFieldType.MONTHS_TYPE):FALSE:org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1634:type.isSupported(DurationFieldType.MONTHS_TYPE) |==> true
2817:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1636:result = result.withMonths(normalizedMonths) |==> <NO-OP>
2818:AOR:-(long,long):%(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1637:totalMonths - normalizedMonths |==> totalMonths % normalizedMonths
2819:AOR:-(long,long):*(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1637:totalMonths - normalizedMonths |==> totalMonths * normalizedMonths
2820:AOR:-(long,long):+(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1637:totalMonths - normalizedMonths |==> totalMonths + normalizedMonths
2821:AOR:-(long,long):/(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1637:totalMonths - normalizedMonths |==> totalMonths / normalizedMonths
2822:STD:<ASSIGN>:<NO-OP>:org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1637:totalMonths = totalMonths - normalizedMonths |==> <NO-OP>
2823:LVR:0:POS:org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1639:0 |==> 1
2824:LVR:0:NEG:org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1639:0 |==> -1
2825:ROR:!=(long,long):<(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1639:totalMonths != 0 |==> totalMonths < 0
2826:ROR:!=(long,long):>(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1639:totalMonths != 0 |==> totalMonths > 0
2827:ROR:!=(long,long):TRUE(long,long):org.joda.time.Period@normalizedStandard(org.joda.time.PeriodType):1639:totalMonths != 0 |==> true
2828:LVR:0:POS:org.joda.time.base.BasePeriod$1@getValue(int):59:0 |==> 1
2829:LVR:0:NEG:org.joda.time.base.BasePeriod$1@getValue(int):59:0 |==> -1
2830:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(int,int,int,int,int,int,int,int,org.joda.time.PeriodType):91:type = checkPeriodType(type) |==> <NO-OP>
2831:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(long,long,org.joda.time.PeriodType,org.joda.time.Chronology):107:type = checkPeriodType(type) |==> <NO-OP>
2832:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(long,long,org.joda.time.PeriodType,org.joda.time.Chronology):108:chrono = DateTimeUtils.getChronology(chrono) |==> <NO-OP>
2833:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.PeriodType):123:type = checkPeriodType(type) |==> <NO-OP>
2834:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.PeriodType):124:startInstant == null |==> false
2835:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.PeriodType):124:endInstant == null |==> false
2836:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.PeriodType):124:startInstant == null && endInstant == null |==> startInstant == null == (endInstant == null)
2837:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.PeriodType):124:startInstant == null && endInstant == null |==> false
2838:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.PeriodType):124:startInstant == null && endInstant == null |==> startInstant == null
2839:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.PeriodType):124:startInstant == null && endInstant == null |==> endInstant == null
2840:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):156:start == null |==> false
2841:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):156:end == null |==> false
2842:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):156:start == null || end == null |==> start == null != (end == null)
2843:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):156:start == null || end == null |==> start == null
2844:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):156:start == null || end == null |==> end == null
2845:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):156:start == null || end == null |==> true
2846:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):159:start instanceof BaseLocal && end instanceof BaseLocal |==> start instanceof BaseLocal == end instanceof BaseLocal
2847:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):159:start instanceof BaseLocal && end instanceof BaseLocal |==> false
2848:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):159:start instanceof BaseLocal && end instanceof BaseLocal |==> start instanceof BaseLocal
2849:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):159:start instanceof BaseLocal && end instanceof BaseLocal |==> end instanceof BaseLocal
2850:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):159:start.getClass() == end.getClass() |==> false
2851:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):159:start instanceof BaseLocal && end instanceof BaseLocal && start.getClass() == end.getClass() |==> (start instanceof BaseLocal && end instanceof BaseLocal) == (start.getClass() == end.getClass())
2852:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):159:start instanceof BaseLocal && end instanceof BaseLocal && start.getClass() == end.getClass() |==> false
2853:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):159:start instanceof BaseLocal && end instanceof BaseLocal && start.getClass() == end.getClass() |==> start instanceof BaseLocal && end instanceof BaseLocal
2854:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):159:start instanceof BaseLocal && end instanceof BaseLocal && start.getClass() == end.getClass() |==> start.getClass() == end.getClass()
2855:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):161:type = checkPeriodType(type) |==> <NO-OP>
2856:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):165:chrono = DateTimeUtils.getChronology(chrono) |==> <NO-OP>
2857:ROR:!=(int,int):<(int,int):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):169:start.size() != end.size() |==> start.size() < end.size()
2858:ROR:!=(int,int):>(int,int):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):169:start.size() != end.size() |==> start.size() > end.size()
2859:ROR:!=(int,int):TRUE(int,int):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):169:start.size() != end.size() |==> true
2860:LVR:0:POS:org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):172:0 |==> 1
2861:LVR:0:NEG:org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):172:0 |==> -1
2862:ROR:<(int,int):!=(int,int):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):172:i < isize |==> i != isize
2863:ROR:<(int,int):<=(int,int):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):172:i < isize |==> i <= isize
2864:ROR:<(int,int):FALSE(int,int):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):172:i < isize |==> false
2865:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):173:start.getFieldType(i) != end.getFieldType(i) |==> true
2866:LVR:FALSE:TRUE:org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):177:false |==> true
2867:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):177:DateTimeUtils.isContiguous(start) == false |==> false
2868:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):177:DateTimeUtils.isContiguous(start) == false |==> DateTimeUtils.isContiguous(start)
2869:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):177:DateTimeUtils.isContiguous(start) == false |==> false
2870:LVR:0:POS:org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):182:0L |==> 1L
2871:LVR:0:NEG:org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):182:0L |==> -1L
2872:LVR:0:POS:org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):182:0L |==> 1L
2873:LVR:0:NEG:org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):182:0L |==> -1L
2874:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration,org.joda.time.PeriodType):195:type = checkPeriodType(type) |==> <NO-OP>
2875:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant,org.joda.time.PeriodType):213:type = checkPeriodType(type) |==> <NO-OP>
2876:LVR:POS:0:org.joda.time.base.BasePeriod@<init>(long):237:8 |==> 0
2877:LVR:POS:NEG:org.joda.time.base.BasePeriod@<init>(long):237:8 |==> -8
2878:LVR:0:POS:org.joda.time.base.BasePeriod@<init>(long):238:0 |==> 1
2879:LVR:0:NEG:org.joda.time.base.BasePeriod@<init>(long):238:0 |==> -1
2880:LVR:POS:0:org.joda.time.base.BasePeriod@<init>(long):238:4 |==> 0
2881:LVR:POS:NEG:org.joda.time.base.BasePeriod@<init>(long):238:4 |==> -4
2882:LVR:POS:0:org.joda.time.base.BasePeriod@<init>(long):238:4 |==> 0
2883:LVR:POS:NEG:org.joda.time.base.BasePeriod@<init>(long):238:4 |==> -4
2884:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(long):238:System.arraycopy(values, 0, iValues, 4, 4) |==> <NO-OP>
2885:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(long,org.joda.time.PeriodType,org.joda.time.Chronology):255:type = checkPeriodType(type) |==> <NO-OP>
2886:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(long,org.joda.time.PeriodType,org.joda.time.Chronology):256:chrono = DateTimeUtils.getChronology(chrono) |==> <NO-OP>
2887:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.BasePeriod@<init>(java.lang.Object,org.joda.time.PeriodType,org.joda.time.Chronology):273:type == null |==> false
2888:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(java.lang.Object,org.joda.time.PeriodType,org.joda.time.Chronology):273:type = (type == null ? converter.getPeriodType(period) : type) |==> <NO-OP>
2889:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(java.lang.Object,org.joda.time.PeriodType,org.joda.time.Chronology):274:type = checkPeriodType(type) |==> <NO-OP>
2890:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(java.lang.Object,org.joda.time.PeriodType,org.joda.time.Chronology):278:chrono = DateTimeUtils.getChronology(chrono) |==> <NO-OP>
2891:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(java.lang.Object,org.joda.time.PeriodType,org.joda.time.Chronology):279:converter.setInto((ReadWritablePeriod)this, period, chrono) |==> <NO-OP>
2892:LVR:POS:0:org.joda.time.base.BasePeriod@toDurationFrom(org.joda.time.ReadableInstant):352:1 |==> 0
2893:LVR:POS:NEG:org.joda.time.base.BasePeriod@toDurationFrom(org.joda.time.ReadableInstant):352:1 |==> -1
2894:LVR:NEG:0:org.joda.time.base.BasePeriod@toDurationTo(org.joda.time.ReadableInstant):376:-1 |==> 0
2895:LVR:NEG:POS:org.joda.time.base.BasePeriod@toDurationTo(org.joda.time.ReadableInstant):376:-1 |==> 1
2896:LVR:NEG:0:org.joda.time.base.BasePeriod@checkAndUpdate(org.joda.time.DurationFieldType,int[],int):391:-1 |==> 0
2897:LVR:NEG:POS:org.joda.time.base.BasePeriod@checkAndUpdate(org.joda.time.DurationFieldType,int[],int):391:-1 |==> 1
2898:ROR:==(int,int):<=(int,int):org.joda.time.base.BasePeriod@checkAndUpdate(org.joda.time.DurationFieldType,int[],int):391:index == -1 |==> index <= -1
2899:ROR:==(int,int):>=(int,int):org.joda.time.base.BasePeriod@checkAndUpdate(org.joda.time.DurationFieldType,int[],int):391:index == -1 |==> index >= -1
2900:ROR:==(int,int):FALSE(int,int):org.joda.time.base.BasePeriod@checkAndUpdate(org.joda.time.DurationFieldType,int[],int):391:index == -1 |==> false
2901:LVR:0:POS:org.joda.time.base.BasePeriod@checkAndUpdate(org.joda.time.DurationFieldType,int[],int):392:0 |==> 1
2902:LVR:0:NEG:org.joda.time.base.BasePeriod@checkAndUpdate(org.joda.time.DurationFieldType,int[],int):392:0 |==> -1
2903:ROR:!=(int,int):<(int,int):org.joda.time.base.BasePeriod@checkAndUpdate(org.joda.time.DurationFieldType,int[],int):392:newValue != 0 |==> newValue < 0
2904:ROR:!=(int,int):>(int,int):org.joda.time.base.BasePeriod@checkAndUpdate(org.joda.time.DurationFieldType,int[],int):392:newValue != 0 |==> newValue > 0
2905:ROR:!=(int,int):TRUE(int,int):org.joda.time.base.BasePeriod@checkAndUpdate(org.joda.time.DurationFieldType,int[],int):392:newValue != 0 |==> true
2906:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@checkAndUpdate(org.joda.time.DurationFieldType,int[],int):397:values[index] = newValue |==> <NO-OP>
2907:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.BasePeriod@setPeriod(org.joda.time.ReadablePeriod):409:period == null |==> false
2908:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@setPeriod(org.joda.time.ReadablePeriod):410:setValues(new int[size()]) |==> <NO-OP>
2909:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@setPeriod(org.joda.time.ReadablePeriod):412:setPeriodInternal(period) |==> <NO-OP>
2910:LVR:0:POS:org.joda.time.base.BasePeriod@setPeriodInternal(org.joda.time.ReadablePeriod):421:0 |==> 1
2911:LVR:0:NEG:org.joda.time.base.BasePeriod@setPeriodInternal(org.joda.time.ReadablePeriod):421:0 |==> -1
2912:ROR:<(int,int):!=(int,int):org.joda.time.base.BasePeriod@setPeriodInternal(org.joda.time.ReadablePeriod):421:i < isize |==> i != isize
2913:ROR:<(int,int):<=(int,int):org.joda.time.base.BasePeriod@setPeriodInternal(org.joda.time.ReadablePeriod):421:i < isize |==> i <= isize
2914:ROR:<(int,int):FALSE(int,int):org.joda.time.base.BasePeriod@setPeriodInternal(org.joda.time.ReadablePeriod):421:i < isize |==> false
2915:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@setPeriodInternal(org.joda.time.ReadablePeriod):424:checkAndUpdate(type, newValues, value) |==> <NO-OP>
2916:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@setPeriodInternal(org.joda.time.ReadablePeriod):426:setValues(newValues) |==> <NO-OP>
2917:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@setPeriod(int,int,int,int,int,int,int,int):445:setValues(newValues) |==> <NO-OP>
2918:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@setPeriodInternal(int,int,int,int,int,int,int,int):454:checkAndUpdate(DurationFieldType.years(), newValues, years) |==> <NO-OP>
2919:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@setPeriodInternal(int,int,int,int,int,int,int,int):455:checkAndUpdate(DurationFieldType.months(), newValues, months) |==> <NO-OP>
2920:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@setPeriodInternal(int,int,int,int,int,int,int,int):456:checkAndUpdate(DurationFieldType.weeks(), newValues, weeks) |==> <NO-OP>
2921:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@setPeriodInternal(int,int,int,int,int,int,int,int):457:checkAndUpdate(DurationFieldType.days(), newValues, days) |==> <NO-OP>
2922:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@setPeriodInternal(int,int,int,int,int,int,int,int):458:checkAndUpdate(DurationFieldType.hours(), newValues, hours) |==> <NO-OP>
2923:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@setPeriodInternal(int,int,int,int,int,int,int,int):459:checkAndUpdate(DurationFieldType.minutes(), newValues, minutes) |==> <NO-OP>
2924:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@setPeriodInternal(int,int,int,int,int,int,int,int):460:checkAndUpdate(DurationFieldType.seconds(), newValues, seconds) |==> <NO-OP>
2925:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@setPeriodInternal(int,int,int,int,int,int,int,int):461:checkAndUpdate(DurationFieldType.millis(), newValues, millis) |==> <NO-OP>
2926:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@setField(org.joda.time.DurationFieldType,int):474:setFieldInto(iValues, field, value) |==> <NO-OP>
2927:LVR:NEG:0:org.joda.time.base.BasePeriod@setFieldInto(int[],org.joda.time.DurationFieldType,int):487:-1 |==> 0
2928:LVR:NEG:POS:org.joda.time.base.BasePeriod@setFieldInto(int[],org.joda.time.DurationFieldType,int):487:-1 |==> 1
2929:ROR:==(int,int):<=(int,int):org.joda.time.base.BasePeriod@setFieldInto(int[],org.joda.time.DurationFieldType,int):487:index == -1 |==> index <= -1
2930:ROR:==(int,int):>=(int,int):org.joda.time.base.BasePeriod@setFieldInto(int[],org.joda.time.DurationFieldType,int):487:index == -1 |==> index >= -1
2931:ROR:==(int,int):FALSE(int,int):org.joda.time.base.BasePeriod@setFieldInto(int[],org.joda.time.DurationFieldType,int):487:index == -1 |==> false
2932:LVR:0:POS:org.joda.time.base.BasePeriod@setFieldInto(int[],org.joda.time.DurationFieldType,int):488:0 |==> 1
2933:LVR:0:NEG:org.joda.time.base.BasePeriod@setFieldInto(int[],org.joda.time.DurationFieldType,int):488:0 |==> -1
2934:ROR:!=(int,int):<(int,int):org.joda.time.base.BasePeriod@setFieldInto(int[],org.joda.time.DurationFieldType,int):488:value != 0 |==> value < 0
2935:ROR:!=(int,int):>(int,int):org.joda.time.base.BasePeriod@setFieldInto(int[],org.joda.time.DurationFieldType,int):488:value != 0 |==> value > 0
2936:ROR:!=(int,int):TRUE(int,int):org.joda.time.base.BasePeriod@setFieldInto(int[],org.joda.time.DurationFieldType,int):488:value != 0 |==> true
2937:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.BasePeriod@setFieldInto(int[],org.joda.time.DurationFieldType,int):488:field == null |==> false
2938:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.base.BasePeriod@setFieldInto(int[],org.joda.time.DurationFieldType,int):488:value != 0 || field == null |==> value != 0 != (field == null)
2939:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.base.BasePeriod@setFieldInto(int[],org.joda.time.DurationFieldType,int):488:value != 0 || field == null |==> value != 0
2940:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.base.BasePeriod@setFieldInto(int[],org.joda.time.DurationFieldType,int):488:value != 0 || field == null |==> field == null
2941:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.base.BasePeriod@setFieldInto(int[],org.joda.time.DurationFieldType,int):488:value != 0 || field == null |==> true
2942:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@setFieldInto(int[],org.joda.time.DurationFieldType,int):493:values[index] = value |==> <NO-OP>
2943:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@addField(org.joda.time.DurationFieldType,int):505:addFieldInto(iValues, field, value) |==> <NO-OP>
2944:LVR:NEG:0:org.joda.time.base.BasePeriod@addFieldInto(int[],org.joda.time.DurationFieldType,int):518:-1 |==> 0
2945:LVR:NEG:POS:org.joda.time.base.BasePeriod@addFieldInto(int[],org.joda.time.DurationFieldType,int):518:-1 |==> 1
2946:ROR:==(int,int):<=(int,int):org.joda.time.base.BasePeriod@addFieldInto(int[],org.joda.time.DurationFieldType,int):518:index == -1 |==> index <= -1
2947:ROR:==(int,int):>=(int,int):org.joda.time.base.BasePeriod@addFieldInto(int[],org.joda.time.DurationFieldType,int):518:index == -1 |==> index >= -1
2948:ROR:==(int,int):FALSE(int,int):org.joda.time.base.BasePeriod@addFieldInto(int[],org.joda.time.DurationFieldType,int):518:index == -1 |==> false
2949:LVR:0:POS:org.joda.time.base.BasePeriod@addFieldInto(int[],org.joda.time.DurationFieldType,int):519:0 |==> 1
2950:LVR:0:NEG:org.joda.time.base.BasePeriod@addFieldInto(int[],org.joda.time.DurationFieldType,int):519:0 |==> -1
2951:ROR:!=(int,int):<(int,int):org.joda.time.base.BasePeriod@addFieldInto(int[],org.joda.time.DurationFieldType,int):519:value != 0 |==> value < 0
2952:ROR:!=(int,int):>(int,int):org.joda.time.base.BasePeriod@addFieldInto(int[],org.joda.time.DurationFieldType,int):519:value != 0 |==> value > 0
2953:ROR:!=(int,int):TRUE(int,int):org.joda.time.base.BasePeriod@addFieldInto(int[],org.joda.time.DurationFieldType,int):519:value != 0 |==> true
2954:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.BasePeriod@addFieldInto(int[],org.joda.time.DurationFieldType,int):519:field == null |==> false
2955:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.base.BasePeriod@addFieldInto(int[],org.joda.time.DurationFieldType,int):519:value != 0 || field == null |==> value != 0 != (field == null)
2956:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.base.BasePeriod@addFieldInto(int[],org.joda.time.DurationFieldType,int):519:value != 0 || field == null |==> value != 0
2957:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.base.BasePeriod@addFieldInto(int[],org.joda.time.DurationFieldType,int):519:value != 0 || field == null |==> field == null
2958:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.base.BasePeriod@addFieldInto(int[],org.joda.time.DurationFieldType,int):519:value != 0 || field == null |==> true
2959:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@addFieldInto(int[],org.joda.time.DurationFieldType,int):524:values[index] = FieldUtils.safeAdd(values[index], value) |==> <NO-OP>
2960:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.base.BasePeriod@mergePeriod(org.joda.time.ReadablePeriod):535:period != null |==> true
2961:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@mergePeriod(org.joda.time.ReadablePeriod):536:setValues(mergePeriodInto(getValues(), period)) |==> <NO-OP>
2962:LVR:0:POS:org.joda.time.base.BasePeriod@mergePeriodInto(int[],org.joda.time.ReadablePeriod):549:0 |==> 1
2963:LVR:0:NEG:org.joda.time.base.BasePeriod@mergePeriodInto(int[],org.joda.time.ReadablePeriod):549:0 |==> -1
2964:ROR:<(int,int):!=(int,int):org.joda.time.base.BasePeriod@mergePeriodInto(int[],org.joda.time.ReadablePeriod):549:i < isize |==> i != isize
2965:ROR:<(int,int):<=(int,int):org.joda.time.base.BasePeriod@mergePeriodInto(int[],org.joda.time.ReadablePeriod):549:i < isize |==> i <= isize
2966:ROR:<(int,int):FALSE(int,int):org.joda.time.base.BasePeriod@mergePeriodInto(int[],org.joda.time.ReadablePeriod):549:i < isize |==> false
2967:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@mergePeriodInto(int[],org.joda.time.ReadablePeriod):552:checkAndUpdate(type, values, value) |==> <NO-OP>
2968:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.base.BasePeriod@addPeriod(org.joda.time.ReadablePeriod):564:period != null |==> true
2969:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@addPeriod(org.joda.time.ReadablePeriod):565:setValues(addPeriodInto(getValues(), period)) |==> <NO-OP>
2970:LVR:0:POS:org.joda.time.base.BasePeriod@addPeriodInto(int[],org.joda.time.ReadablePeriod):578:0 |==> 1
2971:LVR:0:NEG:org.joda.time.base.BasePeriod@addPeriodInto(int[],org.joda.time.ReadablePeriod):578:0 |==> -1
2972:ROR:<(int,int):!=(int,int):org.joda.time.base.BasePeriod@addPeriodInto(int[],org.joda.time.ReadablePeriod):578:i < isize |==> i != isize
2973:ROR:<(int,int):<=(int,int):org.joda.time.base.BasePeriod@addPeriodInto(int[],org.joda.time.ReadablePeriod):578:i < isize |==> i <= isize
2974:ROR:<(int,int):FALSE(int,int):org.joda.time.base.BasePeriod@addPeriodInto(int[],org.joda.time.ReadablePeriod):578:i < isize |==> false
2975:LVR:0:POS:org.joda.time.base.BasePeriod@addPeriodInto(int[],org.joda.time.ReadablePeriod):581:0 |==> 1
2976:LVR:0:NEG:org.joda.time.base.BasePeriod@addPeriodInto(int[],org.joda.time.ReadablePeriod):581:0 |==> -1
2977:ROR:!=(int,int):<(int,int):org.joda.time.base.BasePeriod@addPeriodInto(int[],org.joda.time.ReadablePeriod):581:value != 0 |==> value < 0
2978:ROR:!=(int,int):>(int,int):org.joda.time.base.BasePeriod@addPeriodInto(int[],org.joda.time.ReadablePeriod):581:value != 0 |==> value > 0
2979:ROR:!=(int,int):TRUE(int,int):org.joda.time.base.BasePeriod@addPeriodInto(int[],org.joda.time.ReadablePeriod):581:value != 0 |==> true
2980:LVR:NEG:0:org.joda.time.base.BasePeriod@addPeriodInto(int[],org.joda.time.ReadablePeriod):583:-1 |==> 0
2981:LVR:NEG:POS:org.joda.time.base.BasePeriod@addPeriodInto(int[],org.joda.time.ReadablePeriod):583:-1 |==> 1
2982:ROR:==(int,int):<=(int,int):org.joda.time.base.BasePeriod@addPeriodInto(int[],org.joda.time.ReadablePeriod):583:index == -1 |==> index <= -1
2983:ROR:==(int,int):>=(int,int):org.joda.time.base.BasePeriod@addPeriodInto(int[],org.joda.time.ReadablePeriod):583:index == -1 |==> index >= -1
2984:ROR:==(int,int):FALSE(int,int):org.joda.time.base.BasePeriod@addPeriodInto(int[],org.joda.time.ReadablePeriod):583:index == -1 |==> false
2985:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@addPeriodInto(int[],org.joda.time.ReadablePeriod):587:values[index] = FieldUtils.safeAdd(getValue(index), value) |==> <NO-OP>
2986:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@setValue(int,int):603:iValues[index] = value |==> <NO-OP>
2987:LVR:0:POS:org.joda.time.base.BasePeriod@setValues(int[]):616:0 |==> 1
2988:LVR:0:NEG:org.joda.time.base.BasePeriod@setValues(int[]):616:0 |==> -1
2989:LVR:0:POS:org.joda.time.base.BasePeriod@setValues(int[]):616:0 |==> 1
2990:LVR:0:NEG:org.joda.time.base.BasePeriod@setValues(int[]):616:0 |==> -1
2991:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@setValues(int[]):616:System.arraycopy(values, 0, iValues, 0, iValues.length) |==> <NO-OP>
2992:LVR:0:POS:org.joda.time.base.AbstractPeriod@getFieldTypes():80:0 |==> 1
2993:LVR:0:NEG:org.joda.time.base.AbstractPeriod@getFieldTypes():80:0 |==> -1
2994:ROR:<(int,int):!=(int,int):org.joda.time.base.AbstractPeriod@getFieldTypes():80:i < result.length |==> i != result.length
2995:ROR:<(int,int):<=(int,int):org.joda.time.base.AbstractPeriod@getFieldTypes():80:i < result.length |==> i <= result.length
2996:ROR:<(int,int):FALSE(int,int):org.joda.time.base.AbstractPeriod@getFieldTypes():80:i < result.length |==> false
2997:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.AbstractPeriod@getFieldTypes():81:result[i] = getFieldType(i) |==> <NO-OP>
2998:LVR:0:POS:org.joda.time.base.AbstractPeriod@getValues():96:0 |==> 1
2999:LVR:0:NEG:org.joda.time.base.AbstractPeriod@getValues():96:0 |==> -1
3000:ROR:<(int,int):!=(int,int):org.joda.time.base.AbstractPeriod@getValues():96:i < result.length |==> i != result.length
3001:ROR:<(int,int):<=(int,int):org.joda.time.base.AbstractPeriod@getValues():96:i < result.length |==> i <= result.length
3002:ROR:<(int,int):FALSE(int,int):org.joda.time.base.AbstractPeriod@getValues():96:i < result.length |==> false
3003:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.AbstractPeriod@getValues():97:result[i] = getValue(i) |==> <NO-OP>
3004:LVR:NEG:0:org.joda.time.base.AbstractPeriod@get(org.joda.time.DurationFieldType):114:-1 |==> 0
3005:LVR:NEG:POS:org.joda.time.base.AbstractPeriod@get(org.joda.time.DurationFieldType):114:-1 |==> 1
3006:ROR:==(int,int):<=(int,int):org.joda.time.base.AbstractPeriod@get(org.joda.time.DurationFieldType):114:index == -1 |==> index <= -1
3007:ROR:==(int,int):>=(int,int):org.joda.time.base.AbstractPeriod@get(org.joda.time.DurationFieldType):114:index == -1 |==> index >= -1
3008:ROR:==(int,int):FALSE(int,int):org.joda.time.base.AbstractPeriod@get(org.joda.time.DurationFieldType):114:index == -1 |==> false
3009:LVR:0:POS:org.joda.time.base.AbstractPeriod@get(org.joda.time.DurationFieldType):115:0 |==> 1
3010:LVR:0:NEG:org.joda.time.base.AbstractPeriod@get(org.joda.time.DurationFieldType):115:0 |==> -1
3011:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.AbstractPeriod@equals(java.lang.Object):183:this == period |==> false
3012:LVR:TRUE:FALSE:org.joda.time.base.AbstractPeriod@equals(java.lang.Object):184:true |==> false
3013:LVR:FALSE:TRUE:org.joda.time.base.AbstractPeriod@equals(java.lang.Object):186:false |==> true
3014:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.base.AbstractPeriod@equals(java.lang.Object):186:period instanceof ReadablePeriod == false |==> false
3015:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.base.AbstractPeriod@equals(java.lang.Object):186:period instanceof ReadablePeriod == false |==> period instanceof ReadablePeriod
3016:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.base.AbstractPeriod@equals(java.lang.Object):186:period instanceof ReadablePeriod == false |==> false
3017:LVR:FALSE:TRUE:org.joda.time.base.AbstractPeriod@equals(java.lang.Object):187:false |==> true
3018:ROR:!=(int,int):<(int,int):org.joda.time.base.AbstractPeriod@equals(java.lang.Object):190:size() != other.size() |==> size() < other.size()
3019:ROR:!=(int,int):>(int,int):org.joda.time.base.AbstractPeriod@equals(java.lang.Object):190:size() != other.size() |==> size() > other.size()
3020:ROR:!=(int,int):TRUE(int,int):org.joda.time.base.AbstractPeriod@equals(java.lang.Object):190:size() != other.size() |==> true
3021:LVR:FALSE:TRUE:org.joda.time.base.AbstractPeriod@equals(java.lang.Object):191:false |==> true
3022:LVR:0:POS:org.joda.time.base.AbstractPeriod@equals(java.lang.Object):193:0 |==> 1
3023:LVR:0:NEG:org.joda.time.base.AbstractPeriod@equals(java.lang.Object):193:0 |==> -1
3024:ROR:<(int,int):!=(int,int):org.joda.time.base.AbstractPeriod@equals(java.lang.Object):193:i < isize |==> i != isize
3025:ROR:<(int,int):<=(int,int):org.joda.time.base.AbstractPeriod@equals(java.lang.Object):193:i < isize |==> i <= isize
3026:ROR:<(int,int):FALSE(int,int):org.joda.time.base.AbstractPeriod@equals(java.lang.Object):193:i < isize |==> false
3027:ROR:!=(int,int):<(int,int):org.joda.time.base.AbstractPeriod@equals(java.lang.Object):194:getValue(i) != other.getValue(i) |==> getValue(i) < other.getValue(i)
3028:ROR:!=(int,int):>(int,int):org.joda.time.base.AbstractPeriod@equals(java.lang.Object):194:getValue(i) != other.getValue(i) |==> getValue(i) > other.getValue(i)
3029:ROR:!=(int,int):TRUE(int,int):org.joda.time.base.AbstractPeriod@equals(java.lang.Object):194:getValue(i) != other.getValue(i) |==> true
3030:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.base.AbstractPeriod@equals(java.lang.Object):194:getFieldType(i) != other.getFieldType(i) |==> true
3031:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.base.AbstractPeriod@equals(java.lang.Object):194:getValue(i) != other.getValue(i) || getFieldType(i) != other.getFieldType(i) |==> getValue(i) != other.getValue(i) != (getFieldType(i) != other.getFieldType(i))
3032:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.base.AbstractPeriod@equals(java.lang.Object):194:getValue(i) != other.getValue(i) || getFieldType(i) != other.getFieldType(i) |==> getValue(i) != other.getValue(i)
3033:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.base.AbstractPeriod@equals(java.lang.Object):194:getValue(i) != other.getValue(i) || getFieldType(i) != other.getFieldType(i) |==> getFieldType(i) != other.getFieldType(i)
3034:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.base.AbstractPeriod@equals(java.lang.Object):194:getValue(i) != other.getValue(i) || getFieldType(i) != other.getFieldType(i) |==> true
3035:LVR:FALSE:TRUE:org.joda.time.base.AbstractPeriod@equals(java.lang.Object):195:false |==> true
3036:LVR:TRUE:FALSE:org.joda.time.base.AbstractPeriod@equals(java.lang.Object):198:true |==> false
3037:LVR:POS:0:org.joda.time.base.AbstractPeriod@hashCode():207:17 |==> 0
3038:LVR:POS:NEG:org.joda.time.base.AbstractPeriod@hashCode():207:17 |==> -17
3039:LVR:0:POS:org.joda.time.base.AbstractPeriod@hashCode():208:0 |==> 1
3040:LVR:0:NEG:org.joda.time.base.AbstractPeriod@hashCode():208:0 |==> -1
3041:ROR:<(int,int):!=(int,int):org.joda.time.base.AbstractPeriod@hashCode():208:i < isize |==> i != isize
3042:ROR:<(int,int):<=(int,int):org.joda.time.base.AbstractPeriod@hashCode():208:i < isize |==> i <= isize
3043:ROR:<(int,int):FALSE(int,int):org.joda.time.base.AbstractPeriod@hashCode():208:i < isize |==> false
3044:LVR:POS:0:org.joda.time.base.AbstractPeriod@hashCode():209:27 |==> 0
3045:LVR:POS:NEG:org.joda.time.base.AbstractPeriod@hashCode():209:27 |==> -27
3046:AOR:*(int,int):%(int,int):org.joda.time.base.AbstractPeriod@hashCode():209:27 * total |==> 27 % total
3047:AOR:*(int,int):+(int,int):org.joda.time.base.AbstractPeriod@hashCode():209:27 * total |==> 27 + total
3048:AOR:*(int,int):-(int,int):org.joda.time.base.AbstractPeriod@hashCode():209:27 * total |==> 27 - total
3049:AOR:*(int,int):/(int,int):org.joda.time.base.AbstractPeriod@hashCode():209:27 * total |==> 27 / total
3050:AOR:+(int,int):%(int,int):org.joda.time.base.AbstractPeriod@hashCode():209:27 * total + getValue(i) |==> 27 * total % getValue(i)
3051:AOR:+(int,int):*(int,int):org.joda.time.base.AbstractPeriod@hashCode():209:27 * total + getValue(i) |==> 27 * total * getValue(i)
3052:AOR:+(int,int):-(int,int):org.joda.time.base.AbstractPeriod@hashCode():209:27 * total + getValue(i) |==> 27 * total - getValue(i)
3053:AOR:+(int,int):/(int,int):org.joda.time.base.AbstractPeriod@hashCode():209:27 * total + getValue(i) |==> 27 * total / getValue(i)
3054:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.AbstractPeriod@hashCode():209:total = 27 * total + getValue(i) |==> <NO-OP>
3055:LVR:POS:0:org.joda.time.base.AbstractPeriod@hashCode():210:27 |==> 0
3056:LVR:POS:NEG:org.joda.time.base.AbstractPeriod@hashCode():210:27 |==> -27
3057:AOR:*(int,int):%(int,int):org.joda.time.base.AbstractPeriod@hashCode():210:27 * total |==> 27 % total
3058:AOR:*(int,int):+(int,int):org.joda.time.base.AbstractPeriod@hashCode():210:27 * total |==> 27 + total
3059:AOR:*(int,int):-(int,int):org.joda.time.base.AbstractPeriod@hashCode():210:27 * total |==> 27 - total
3060:AOR:*(int,int):/(int,int):org.joda.time.base.AbstractPeriod@hashCode():210:27 * total |==> 27 / total
3061:AOR:+(int,int):%(int,int):org.joda.time.base.AbstractPeriod@hashCode():210:27 * total + getFieldType(i).hashCode() |==> 27 * total % getFieldType(i).hashCode()
3062:AOR:+(int,int):*(int,int):org.joda.time.base.AbstractPeriod@hashCode():210:27 * total + getFieldType(i).hashCode() |==> 27 * total * getFieldType(i).hashCode()
3063:AOR:+(int,int):-(int,int):org.joda.time.base.AbstractPeriod@hashCode():210:27 * total + getFieldType(i).hashCode() |==> 27 * total - getFieldType(i).hashCode()
3064:AOR:+(int,int):/(int,int):org.joda.time.base.AbstractPeriod@hashCode():210:27 * total + getFieldType(i).hashCode() |==> 27 * total / getFieldType(i).hashCode()
3065:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.AbstractPeriod@hashCode():210:total = 27 * total + getFieldType(i).hashCode() |==> <NO-OP>
3066:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.AbstractPeriod@toString(org.joda.time.format.PeriodFormatter):240:formatter == null |==> false
3067:LVR:0:POS:org.joda.time.MutablePeriod@<init>():93:0L |==> 1L
3068:LVR:0:NEG:org.joda.time.MutablePeriod@<init>():93:0L |==> -1L
3069:LVR:0:POS:org.joda.time.MutablePeriod@<init>(org.joda.time.PeriodType):102:0L |==> 1L
3070:LVR:0:NEG:org.joda.time.MutablePeriod@<init>(org.joda.time.PeriodType):102:0L |==> -1L
3071:LVR:0:POS:org.joda.time.MutablePeriod@<init>(int,int,int,int):114:0 |==> 1
3072:LVR:0:NEG:org.joda.time.MutablePeriod@<init>(int,int,int,int):114:0 |==> -1
3073:LVR:0:POS:org.joda.time.MutablePeriod@<init>(int,int,int,int):114:0 |==> 1
3074:LVR:0:NEG:org.joda.time.MutablePeriod@<init>(int,int,int,int):114:0 |==> -1
3075:LVR:0:POS:org.joda.time.MutablePeriod@<init>(int,int,int,int):114:0 |==> 1
3076:LVR:0:NEG:org.joda.time.MutablePeriod@<init>(int,int,int,int):114:0 |==> -1
3077:LVR:0:POS:org.joda.time.MutablePeriod@<init>(int,int,int,int):114:0 |==> 1
3078:LVR:0:NEG:org.joda.time.MutablePeriod@<init>(int,int,int,int):114:0 |==> -1
3079:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@clear():434:super.setValues(new int[size()]) |==> <NO-OP>
3080:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@setValue(int,int):445:super.setValue(index, value) |==> <NO-OP>
3081:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@set(org.joda.time.DurationFieldType,int):458:super.setField(field, value) |==> <NO-OP>
3082:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@setPeriod(org.joda.time.ReadablePeriod):468:super.setPeriod(period) |==> <NO-OP>
3083:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@setPeriod(int,int,int,int,int,int,int,int):486:super.setPeriod(years, months, weeks, days, hours, minutes, seconds, millis) |==> <NO-OP>
3084:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.MutablePeriod@setPeriod(org.joda.time.ReadableInterval):497:interval == null |==> false
3085:LVR:0:POS:org.joda.time.MutablePeriod@setPeriod(org.joda.time.ReadableInterval):498:0L |==> 1L
3086:LVR:0:NEG:org.joda.time.MutablePeriod@setPeriod(org.joda.time.ReadableInterval):498:0L |==> -1L
3087:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@setPeriod(org.joda.time.ReadableInterval):498:setPeriod(0L) |==> <NO-OP>
3088:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@setPeriod(org.joda.time.ReadableInterval):501:setPeriod(interval.getStartMillis(), interval.getEndMillis(), chrono) |==> <NO-OP>
3089:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.MutablePeriod@setPeriod(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):516:start == end |==> false
3090:LVR:0:POS:org.joda.time.MutablePeriod@setPeriod(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):517:0L |==> 1L
3091:LVR:0:NEG:org.joda.time.MutablePeriod@setPeriod(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):517:0L |==> -1L
3092:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@setPeriod(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):517:setPeriod(0L) |==> <NO-OP>
3093:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@setPeriod(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):522:setPeriod(startMillis, endMillis, chrono) |==> <NO-OP>
3094:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@setPeriod(long,long):535:setPeriod(startInstant, endInstant, null) |==> <NO-OP>
3095:STD:<ASSIGN>:<NO-OP>:org.joda.time.MutablePeriod@setPeriod(long,long,org.joda.time.Chronology):547:chrono = DateTimeUtils.getChronology(chrono) |==> <NO-OP>
3096:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@setPeriod(long,long,org.joda.time.Chronology):548:setValues(chrono.get(this, startInstant, endInstant)) |==> <NO-OP>
3097:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@setPeriod(org.joda.time.ReadableDuration):563:setPeriod(duration, null) |==> <NO-OP>
3098:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@setPeriod(org.joda.time.ReadableDuration,org.joda.time.Chronology):580:setPeriod(durationMillis, chrono) |==> <NO-OP>
3099:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@setPeriod(long):595:setPeriod(duration, null) |==> <NO-OP>
3100:STD:<ASSIGN>:<NO-OP>:org.joda.time.MutablePeriod@setPeriod(long,org.joda.time.Chronology):610:chrono = DateTimeUtils.getChronology(chrono) |==> <NO-OP>
3101:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@setPeriod(long,org.joda.time.Chronology):611:setValues(chrono.get(this, duration)) |==> <NO-OP>
3102:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@add(org.joda.time.DurationFieldType,int):625:super.addField(field, value) |==> <NO-OP>
3103:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@add(org.joda.time.ReadablePeriod):637:super.addPeriod(period) |==> <NO-OP>
3104:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@add(int,int,int,int,int,int,int,int):657:setPeriod(FieldUtils.safeAdd(getYears(), years), FieldUtils.safeAdd(getMonths(), months), FieldUtils.safeAdd(getWeeks(), weeks), FieldUtils.safeAdd(getDays(), days), FieldUtils.safeAdd(getHours(), hours), FieldUtils.safeAdd(getMinutes(), minutes), FieldUtils.safeAdd(getSeconds(), seconds), FieldUtils.safeAdd(getMillis(), millis)) |==> <NO-OP>
3105:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.MutablePeriod@add(org.joda.time.ReadableInterval):677:interval != null |==> true
3106:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@add(org.joda.time.ReadableInterval):678:add(interval.toPeriod(getPeriodType())) |==> <NO-OP>
3107:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.MutablePeriod@add(org.joda.time.ReadableDuration):690:duration != null |==> true
3108:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@add(org.joda.time.ReadableDuration):691:add(new Period(duration.getMillis(), getPeriodType())) |==> <NO-OP>
3109:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@add(long):707:add(new Period(duration, getPeriodType())) |==> <NO-OP>
3110:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@add(long,org.joda.time.Chronology):723:add(new Period(duration, getPeriodType(), chrono)) |==> <NO-OP>
3111:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@mergePeriod(org.joda.time.ReadablePeriod):736:super.mergePeriod(period) |==> <NO-OP>
3112:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@setYears(int):821:super.setField(DurationFieldType.years(), years) |==> <NO-OP>
3113:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@addYears(int):832:super.addField(DurationFieldType.years(), years) |==> <NO-OP>
3114:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@setMonths(int):843:super.setField(DurationFieldType.months(), months) |==> <NO-OP>
3115:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@addMonths(int):854:super.addField(DurationFieldType.months(), months) |==> <NO-OP>
3116:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@setWeeks(int):865:super.setField(DurationFieldType.weeks(), weeks) |==> <NO-OP>
3117:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@addWeeks(int):876:super.addField(DurationFieldType.weeks(), weeks) |==> <NO-OP>
3118:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@setDays(int):887:super.setField(DurationFieldType.days(), days) |==> <NO-OP>
3119:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@addDays(int):898:super.addField(DurationFieldType.days(), days) |==> <NO-OP>
3120:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@setHours(int):909:super.setField(DurationFieldType.hours(), hours) |==> <NO-OP>
3121:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@addHours(int):920:super.addField(DurationFieldType.hours(), hours) |==> <NO-OP>
3122:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@setMinutes(int):931:super.setField(DurationFieldType.minutes(), minutes) |==> <NO-OP>
3123:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@addMinutes(int):942:super.addField(DurationFieldType.minutes(), minutes) |==> <NO-OP>
3124:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@setSeconds(int):953:super.setField(DurationFieldType.seconds(), seconds) |==> <NO-OP>
3125:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@addSeconds(int):964:super.addField(DurationFieldType.seconds(), seconds) |==> <NO-OP>
3126:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@setMillis(int):975:super.setField(DurationFieldType.millis(), millis) |==> <NO-OP>
3127:STD:<CALL>:<NO-OP>:org.joda.time.MutablePeriod@addMillis(int):986:super.addField(DurationFieldType.millis(), millis) |==> <NO-OP>
3128:STD:<CALL>:<NO-OP>:org.joda.time.LocalDate:98:DATE_DURATION_TYPES.add(DurationFieldType.days()) |==> <NO-OP>
3129:STD:<CALL>:<NO-OP>:org.joda.time.LocalDate:99:DATE_DURATION_TYPES.add(DurationFieldType.weeks()) |==> <NO-OP>
3130:STD:<CALL>:<NO-OP>:org.joda.time.LocalDate:100:DATE_DURATION_TYPES.add(DurationFieldType.months()) |==> <NO-OP>
3131:STD:<CALL>:<NO-OP>:org.joda.time.LocalDate:101:DATE_DURATION_TYPES.add(DurationFieldType.weekyears()) |==> <NO-OP>
3132:STD:<CALL>:<NO-OP>:org.joda.time.LocalDate:102:DATE_DURATION_TYPES.add(DurationFieldType.years()) |==> <NO-OP>
3133:STD:<CALL>:<NO-OP>:org.joda.time.LocalDate:103:DATE_DURATION_TYPES.add(DurationFieldType.centuries()) |==> <NO-OP>
3134:STD:<CALL>:<NO-OP>:org.joda.time.LocalDate:105:DATE_DURATION_TYPES.add(DurationFieldType.eras()) |==> <NO-OP>
3135:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalDate@now(org.joda.time.DateTimeZone):136:zone == null |==> false
3136:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalDate@now(org.joda.time.Chronology):151:chronology == null |==> false
3137:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalDate@fromCalendarFields(java.util.Calendar):207:calendar == null |==> false
3138:ROR:==(int,int):<=(int,int):org.joda.time.LocalDate@fromCalendarFields(java.util.Calendar):213:era == GregorianCalendar.AD |==> era <= GregorianCalendar.AD
3139:ROR:==(int,int):>=(int,int):org.joda.time.LocalDate@fromCalendarFields(java.util.Calendar):213:era == GregorianCalendar.AD |==> era >= GregorianCalendar.AD
3140:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalDate@fromCalendarFields(java.util.Calendar):213:era == GregorianCalendar.AD |==> false
3141:LVR:POS:0:org.joda.time.LocalDate@fromCalendarFields(java.util.Calendar):213:1 |==> 0
3142:LVR:POS:NEG:org.joda.time.LocalDate@fromCalendarFields(java.util.Calendar):213:1 |==> -1
3143:AOR:-(int,int):%(int,int):org.joda.time.LocalDate@fromCalendarFields(java.util.Calendar):213:1 - yearOfEra |==> 1 % yearOfEra
3144:AOR:-(int,int):*(int,int):org.joda.time.LocalDate@fromCalendarFields(java.util.Calendar):213:1 - yearOfEra |==> 1 * yearOfEra
3145:AOR:-(int,int):+(int,int):org.joda.time.LocalDate@fromCalendarFields(java.util.Calendar):213:1 - yearOfEra |==> 1 + yearOfEra
3146:AOR:-(int,int):/(int,int):org.joda.time.LocalDate@fromCalendarFields(java.util.Calendar):213:1 - yearOfEra |==> 1 / yearOfEra
3147:LVR:POS:0:org.joda.time.LocalDate@fromCalendarFields(java.util.Calendar):214:1 |==> 0
3148:LVR:POS:NEG:org.joda.time.LocalDate@fromCalendarFields(java.util.Calendar):214:1 |==> -1
3149:AOR:+(int,int):%(int,int):org.joda.time.LocalDate@fromCalendarFields(java.util.Calendar):214:calendar.get(Calendar.MONTH) + 1 |==> calendar.get(Calendar.MONTH) % 1
3150:AOR:+(int,int):*(int,int):org.joda.time.LocalDate@fromCalendarFields(java.util.Calendar):214:calendar.get(Calendar.MONTH) + 1 |==> calendar.get(Calendar.MONTH) * 1
3151:AOR:+(int,int):-(int,int):org.joda.time.LocalDate@fromCalendarFields(java.util.Calendar):214:calendar.get(Calendar.MONTH) + 1 |==> calendar.get(Calendar.MONTH) - 1
3152:AOR:+(int,int):/(int,int):org.joda.time.LocalDate@fromCalendarFields(java.util.Calendar):214:calendar.get(Calendar.MONTH) + 1 |==> calendar.get(Calendar.MONTH) / 1
3153:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalDate@fromDateFields(java.util.Date):241:date == null |==> false
3154:LVR:0:POS:org.joda.time.LocalDate@fromDateFields(java.util.Date):244:0 |==> 1
3155:LVR:0:NEG:org.joda.time.LocalDate@fromDateFields(java.util.Date):244:0 |==> -1
3156:ROR:<(long,long):!=(long,long):org.joda.time.LocalDate@fromDateFields(java.util.Date):244:date.getTime() < 0 |==> date.getTime() != 0
3157:ROR:<(long,long):<=(long,long):org.joda.time.LocalDate@fromDateFields(java.util.Date):244:date.getTime() < 0 |==> date.getTime() <= 0
3158:ROR:<(long,long):FALSE(long,long):org.joda.time.LocalDate@fromDateFields(java.util.Date):244:date.getTime() < 0 |==> false
3159:STD:<CALL>:<NO-OP>:org.joda.time.LocalDate@fromDateFields(java.util.Date):247:cal.setTime(date) |==> <NO-OP>
3160:LVR:POS:0:org.joda.time.LocalDate@fromDateFields(java.util.Date):251:1900 |==> 0
3161:LVR:POS:NEG:org.joda.time.LocalDate@fromDateFields(java.util.Date):251:1900 |==> -1900
3162:AOR:+(int,int):%(int,int):org.joda.time.LocalDate@fromDateFields(java.util.Date):251:date.getYear() + 1900 |==> date.getYear() % 1900
3163:AOR:+(int,int):*(int,int):org.joda.time.LocalDate@fromDateFields(java.util.Date):251:date.getYear() + 1900 |==> date.getYear() * 1900
3164:AOR:+(int,int):-(int,int):org.joda.time.LocalDate@fromDateFields(java.util.Date):251:date.getYear() + 1900 |==> date.getYear() - 1900
3165:AOR:+(int,int):/(int,int):org.joda.time.LocalDate@fromDateFields(java.util.Date):251:date.getYear() + 1900 |==> date.getYear() / 1900
3166:LVR:POS:0:org.joda.time.LocalDate@fromDateFields(java.util.Date):252:1 |==> 0
3167:LVR:POS:NEG:org.joda.time.LocalDate@fromDateFields(java.util.Date):252:1 |==> -1
3168:AOR:+(int,int):%(int,int):org.joda.time.LocalDate@fromDateFields(java.util.Date):252:date.getMonth() + 1 |==> date.getMonth() % 1
3169:AOR:+(int,int):*(int,int):org.joda.time.LocalDate@fromDateFields(java.util.Date):252:date.getMonth() + 1 |==> date.getMonth() * 1
3170:AOR:+(int,int):-(int,int):org.joda.time.LocalDate@fromDateFields(java.util.Date):252:date.getMonth() + 1 |==> date.getMonth() - 1
3171:AOR:+(int,int):/(int,int):org.joda.time.LocalDate@fromDateFields(java.util.Date):252:date.getMonth() + 1 |==> date.getMonth() / 1
3172:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDate@<init>(long,org.joda.time.Chronology):336:chronology = DateTimeUtils.getChronology(chronology) |==> <NO-OP>
3173:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDate@<init>(long,org.joda.time.Chronology):339:chronology = chronology.withUTC() |==> <NO-OP>
3174:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDate@<init>(java.lang.Object,org.joda.time.DateTimeZone):387:chronology = DateTimeUtils.getChronology(chronology) |==> <NO-OP>
3175:LVR:0:POS:org.joda.time.LocalDate@<init>(java.lang.Object,org.joda.time.DateTimeZone):390:0 |==> 1
3176:LVR:0:NEG:org.joda.time.LocalDate@<init>(java.lang.Object,org.joda.time.DateTimeZone):390:0 |==> -1
3177:LVR:POS:0:org.joda.time.LocalDate@<init>(java.lang.Object,org.joda.time.DateTimeZone):390:1 |==> 0
3178:LVR:POS:NEG:org.joda.time.LocalDate@<init>(java.lang.Object,org.joda.time.DateTimeZone):390:1 |==> -1
3179:LVR:POS:0:org.joda.time.LocalDate@<init>(java.lang.Object,org.joda.time.DateTimeZone):390:2 |==> 0
3180:LVR:POS:NEG:org.joda.time.LocalDate@<init>(java.lang.Object,org.joda.time.DateTimeZone):390:2 |==> -2
3181:LVR:0:POS:org.joda.time.LocalDate@<init>(java.lang.Object,org.joda.time.DateTimeZone):390:0 |==> 1
3182:LVR:0:NEG:org.joda.time.LocalDate@<init>(java.lang.Object,org.joda.time.DateTimeZone):390:0 |==> -1
3183:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDate@<init>(java.lang.Object,org.joda.time.Chronology):416:chronology = converter.getChronology(instant, chronology) |==> <NO-OP>
3184:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDate@<init>(java.lang.Object,org.joda.time.Chronology):417:chronology = DateTimeUtils.getChronology(chronology) |==> <NO-OP>
3185:LVR:0:POS:org.joda.time.LocalDate@<init>(java.lang.Object,org.joda.time.Chronology):420:0 |==> 1
3186:LVR:0:NEG:org.joda.time.LocalDate@<init>(java.lang.Object,org.joda.time.Chronology):420:0 |==> -1
3187:LVR:POS:0:org.joda.time.LocalDate@<init>(java.lang.Object,org.joda.time.Chronology):420:1 |==> 0
3188:LVR:POS:NEG:org.joda.time.LocalDate@<init>(java.lang.Object,org.joda.time.Chronology):420:1 |==> -1
3189:LVR:POS:0:org.joda.time.LocalDate@<init>(java.lang.Object,org.joda.time.Chronology):420:2 |==> 0
3190:LVR:POS:NEG:org.joda.time.LocalDate@<init>(java.lang.Object,org.joda.time.Chronology):420:2 |==> -2
3191:LVR:0:POS:org.joda.time.LocalDate@<init>(java.lang.Object,org.joda.time.Chronology):420:0 |==> 1
3192:LVR:0:NEG:org.joda.time.LocalDate@<init>(java.lang.Object,org.joda.time.Chronology):420:0 |==> -1
3193:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDate@<init>(int,int,int,org.joda.time.Chronology):456:chronology = DateTimeUtils.getChronology(chronology).withUTC() |==> <NO-OP>
3194:LVR:0:POS:org.joda.time.LocalDate@<init>(int,int,int,org.joda.time.Chronology):457:0 |==> 1
3195:LVR:0:NEG:org.joda.time.LocalDate@<init>(int,int,int,org.joda.time.Chronology):457:0 |==> -1
3196:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalDate@readResolve():467:iChronology == null |==> false
3197:LVR:FALSE:TRUE:org.joda.time.LocalDate@readResolve():470:false |==> true
3198:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.LocalDate@readResolve():470:DateTimeZone.UTC.equals(iChronology.getZone()) == false |==> false
3199:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.LocalDate@readResolve():470:DateTimeZone.UTC.equals(iChronology.getZone()) == false |==> DateTimeZone.UTC.equals(iChronology.getZone())
3200:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.LocalDate@readResolve():470:DateTimeZone.UTC.equals(iChronology.getZone()) == false |==> false
3201:LVR:POS:0:org.joda.time.LocalDate@size():486:3 |==> 0
3202:LVR:POS:NEG:org.joda.time.LocalDate@size():486:3 |==> -3
3203:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalDate@get(org.joda.time.DateTimeFieldType):552:fieldType == null |==> false
3204:LVR:FALSE:TRUE:org.joda.time.LocalDate@get(org.joda.time.DateTimeFieldType):555:false |==> true
3205:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.LocalDate@get(org.joda.time.DateTimeFieldType):555:isSupported(fieldType) == false |==> false
3206:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.LocalDate@get(org.joda.time.DateTimeFieldType):555:isSupported(fieldType) == false |==> isSupported(fieldType)
3207:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.LocalDate@get(org.joda.time.DateTimeFieldType):555:isSupported(fieldType) == false |==> false
3208:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalDate@isSupported(org.joda.time.DateTimeFieldType):570:type == null |==> false
3209:LVR:FALSE:TRUE:org.joda.time.LocalDate@isSupported(org.joda.time.DateTimeFieldType):571:false |==> true
3210:ROR:>=(long,long):==(long,long):org.joda.time.LocalDate@isSupported(org.joda.time.DateTimeFieldType):575:durType.getField(getChronology()).getUnitMillis() >= getChronology().days().getUnitMillis() |==> durType.getField(getChronology()).getUnitMillis() == getChronology().days().getUnitMillis()
3211:ROR:>=(long,long):>(long,long):org.joda.time.LocalDate@isSupported(org.joda.time.DateTimeFieldType):575:durType.getField(getChronology()).getUnitMillis() >= getChronology().days().getUnitMillis() |==> durType.getField(getChronology()).getUnitMillis() > getChronology().days().getUnitMillis()
3212:ROR:>=(long,long):TRUE(long,long):org.joda.time.LocalDate@isSupported(org.joda.time.DateTimeFieldType):575:durType.getField(getChronology()).getUnitMillis() >= getChronology().days().getUnitMillis() |==> true
3213:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.LocalDate@isSupported(org.joda.time.DateTimeFieldType):574:DATE_DURATION_TYPES.contains(durType) || durType.getField(getChronology()).getUnitMillis() >= getChronology().days().getUnitMillis() |==> DATE_DURATION_TYPES.contains(durType) != durType.getField(getChronology()).getUnitMillis() >= getChronology().days().getUnitMillis()
3214:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.LocalDate@isSupported(org.joda.time.DateTimeFieldType):574:DATE_DURATION_TYPES.contains(durType) || durType.getField(getChronology()).getUnitMillis() >= getChronology().days().getUnitMillis() |==> DATE_DURATION_TYPES.contains(durType)
3215:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.LocalDate@isSupported(org.joda.time.DateTimeFieldType):575:DATE_DURATION_TYPES.contains(durType) || durType.getField(getChronology()).getUnitMillis() >= getChronology().days().getUnitMillis() |==> durType.getField(getChronology()).getUnitMillis() >= getChronology().days().getUnitMillis()
3216:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.LocalDate@isSupported(org.joda.time.DateTimeFieldType):574:DATE_DURATION_TYPES.contains(durType) || durType.getField(getChronology()).getUnitMillis() >= getChronology().days().getUnitMillis() |==> true
3217:LVR:FALSE:TRUE:org.joda.time.LocalDate@isSupported(org.joda.time.DateTimeFieldType):579:false |==> true
3218:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalDate@isSupported(org.joda.time.DurationFieldType):590:type == null |==> false
3219:LVR:FALSE:TRUE:org.joda.time.LocalDate@isSupported(org.joda.time.DurationFieldType):591:false |==> true
3220:ROR:>=(long,long):==(long,long):org.joda.time.LocalDate@isSupported(org.joda.time.DurationFieldType):595:field.getUnitMillis() >= getChronology().days().getUnitMillis() |==> field.getUnitMillis() == getChronology().days().getUnitMillis()
3221:ROR:>=(long,long):>(long,long):org.joda.time.LocalDate@isSupported(org.joda.time.DurationFieldType):595:field.getUnitMillis() >= getChronology().days().getUnitMillis() |==> field.getUnitMillis() > getChronology().days().getUnitMillis()
3222:ROR:>=(long,long):TRUE(long,long):org.joda.time.LocalDate@isSupported(org.joda.time.DurationFieldType):595:field.getUnitMillis() >= getChronology().days().getUnitMillis() |==> true
3223:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.LocalDate@isSupported(org.joda.time.DurationFieldType):594:DATE_DURATION_TYPES.contains(type) || field.getUnitMillis() >= getChronology().days().getUnitMillis() |==> DATE_DURATION_TYPES.contains(type) != field.getUnitMillis() >= getChronology().days().getUnitMillis()
3224:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.LocalDate@isSupported(org.joda.time.DurationFieldType):594:DATE_DURATION_TYPES.contains(type) || field.getUnitMillis() >= getChronology().days().getUnitMillis() |==> DATE_DURATION_TYPES.contains(type)
3225:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.LocalDate@isSupported(org.joda.time.DurationFieldType):595:DATE_DURATION_TYPES.contains(type) || field.getUnitMillis() >= getChronology().days().getUnitMillis() |==> field.getUnitMillis() >= getChronology().days().getUnitMillis()
3226:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.LocalDate@isSupported(org.joda.time.DurationFieldType):594:DATE_DURATION_TYPES.contains(type) || field.getUnitMillis() >= getChronology().days().getUnitMillis() |==> true
3227:LVR:FALSE:TRUE:org.joda.time.LocalDate@isSupported(org.joda.time.DurationFieldType):598:false |==> true
3228:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalDate@equals(java.lang.Object):632:this == partial |==> false
3229:LVR:TRUE:FALSE:org.joda.time.LocalDate@equals(java.lang.Object):633:true |==> false
3230:COR:iChronology.equals(other.iChronology):TRUE:org.joda.time.LocalDate@equals(java.lang.Object):637:iChronology.equals(other.iChronology) |==> false
3231:COR:iChronology.equals(other.iChronology):FALSE:org.joda.time.LocalDate@equals(java.lang.Object):637:iChronology.equals(other.iChronology) |==> true
3232:ROR:==(long,long):<=(long,long):org.joda.time.LocalDate@equals(java.lang.Object):638:iLocalMillis == other.iLocalMillis |==> iLocalMillis <= other.iLocalMillis
3233:ROR:==(long,long):>=(long,long):org.joda.time.LocalDate@equals(java.lang.Object):638:iLocalMillis == other.iLocalMillis |==> iLocalMillis >= other.iLocalMillis
3234:ROR:==(long,long):FALSE(long,long):org.joda.time.LocalDate@equals(java.lang.Object):638:iLocalMillis == other.iLocalMillis |==> false
3235:LVR:0:POS:org.joda.time.LocalDate@hashCode():652:0 |==> 1
3236:LVR:0:NEG:org.joda.time.LocalDate@hashCode():652:0 |==> -1
3237:ROR:==(int,int):<=(int,int):org.joda.time.LocalDate@hashCode():652:hash == 0 |==> hash <= 0
3238:ROR:==(int,int):>=(int,int):org.joda.time.LocalDate@hashCode():652:hash == 0 |==> hash >= 0
3239:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalDate@hashCode():652:hash == 0 |==> false
3240:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDate@hashCode():653:hash = iHash = super.hashCode() |==> <NO-OP>
3241:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalDate@compareTo(org.joda.time.ReadablePartial):676:this == partial |==> false
3242:LVR:0:POS:org.joda.time.LocalDate@compareTo(org.joda.time.ReadablePartial):677:0 |==> 1
3243:LVR:0:NEG:org.joda.time.LocalDate@compareTo(org.joda.time.ReadablePartial):677:0 |==> -1
3244:COR:iChronology.equals(other.iChronology):TRUE:org.joda.time.LocalDate@compareTo(org.joda.time.ReadablePartial):681:iChronology.equals(other.iChronology) |==> false
3245:COR:iChronology.equals(other.iChronology):FALSE:org.joda.time.LocalDate@compareTo(org.joda.time.ReadablePartial):681:iChronology.equals(other.iChronology) |==> true
3246:ROR:<(long,long):!=(long,long):org.joda.time.LocalDate@compareTo(org.joda.time.ReadablePartial):682:iLocalMillis < other.iLocalMillis |==> iLocalMillis != other.iLocalMillis
3247:ROR:<(long,long):<=(long,long):org.joda.time.LocalDate@compareTo(org.joda.time.ReadablePartial):682:iLocalMillis < other.iLocalMillis |==> iLocalMillis <= other.iLocalMillis
3248:ROR:<(long,long):FALSE(long,long):org.joda.time.LocalDate@compareTo(org.joda.time.ReadablePartial):682:iLocalMillis < other.iLocalMillis |==> false
3249:LVR:NEG:0:org.joda.time.LocalDate@compareTo(org.joda.time.ReadablePartial):682:-1 |==> 0
3250:LVR:NEG:POS:org.joda.time.LocalDate@compareTo(org.joda.time.ReadablePartial):682:-1 |==> 1
3251:ROR:==(long,long):<=(long,long):org.joda.time.LocalDate@compareTo(org.joda.time.ReadablePartial):683:iLocalMillis == other.iLocalMillis |==> iLocalMillis <= other.iLocalMillis
3252:ROR:==(long,long):>=(long,long):org.joda.time.LocalDate@compareTo(org.joda.time.ReadablePartial):683:iLocalMillis == other.iLocalMillis |==> iLocalMillis >= other.iLocalMillis
3253:ROR:==(long,long):FALSE(long,long):org.joda.time.LocalDate@compareTo(org.joda.time.ReadablePartial):683:iLocalMillis == other.iLocalMillis |==> false
3254:LVR:0:POS:org.joda.time.LocalDate@compareTo(org.joda.time.ReadablePartial):683:0 |==> 1
3255:LVR:0:NEG:org.joda.time.LocalDate@compareTo(org.joda.time.ReadablePartial):683:0 |==> -1
3256:LVR:POS:0:org.joda.time.LocalDate@compareTo(org.joda.time.ReadablePartial):683:1 |==> 0
3257:LVR:POS:NEG:org.joda.time.LocalDate@compareTo(org.joda.time.ReadablePartial):683:1 |==> -1
3258:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDate@toDateTimeAtStartOfDay(org.joda.time.DateTimeZone):728:zone = DateTimeUtils.getZone(zone) |==> <NO-OP>
3259:LVR:POS:0:org.joda.time.LocalDate@toDateTimeAtStartOfDay(org.joda.time.DateTimeZone):730:6L |==> 0L
3260:LVR:POS:NEG:org.joda.time.LocalDate@toDateTimeAtStartOfDay(org.joda.time.DateTimeZone):730:6L |==> -6L
3261:AOR:*(long,long):%(long,long):org.joda.time.LocalDate@toDateTimeAtStartOfDay(org.joda.time.DateTimeZone):730:6L * DateTimeConstants.MILLIS_PER_HOUR |==> 6L % DateTimeConstants.MILLIS_PER_HOUR
3262:AOR:*(long,long):+(long,long):org.joda.time.LocalDate@toDateTimeAtStartOfDay(org.joda.time.DateTimeZone):730:6L * DateTimeConstants.MILLIS_PER_HOUR |==> 6L + DateTimeConstants.MILLIS_PER_HOUR
3263:AOR:*(long,long):-(long,long):org.joda.time.LocalDate@toDateTimeAtStartOfDay(org.joda.time.DateTimeZone):730:6L * DateTimeConstants.MILLIS_PER_HOUR |==> 6L - DateTimeConstants.MILLIS_PER_HOUR
3264:AOR:*(long,long):/(long,long):org.joda.time.LocalDate@toDateTimeAtStartOfDay(org.joda.time.DateTimeZone):730:6L * DateTimeConstants.MILLIS_PER_HOUR |==> 6L / DateTimeConstants.MILLIS_PER_HOUR
3265:AOR:+(long,long):%(long,long):org.joda.time.LocalDate@toDateTimeAtStartOfDay(org.joda.time.DateTimeZone):730:getLocalMillis() + 6L * DateTimeConstants.MILLIS_PER_HOUR |==> getLocalMillis() % (6L * DateTimeConstants.MILLIS_PER_HOUR)
3266:AOR:+(long,long):*(long,long):org.joda.time.LocalDate@toDateTimeAtStartOfDay(org.joda.time.DateTimeZone):730:getLocalMillis() + 6L * DateTimeConstants.MILLIS_PER_HOUR |==> getLocalMillis() * (6L * DateTimeConstants.MILLIS_PER_HOUR)
3267:AOR:+(long,long):-(long,long):org.joda.time.LocalDate@toDateTimeAtStartOfDay(org.joda.time.DateTimeZone):730:getLocalMillis() + 6L * DateTimeConstants.MILLIS_PER_HOUR |==> getLocalMillis() - 6L * DateTimeConstants.MILLIS_PER_HOUR
3268:AOR:+(long,long):/(long,long):org.joda.time.LocalDate@toDateTimeAtStartOfDay(org.joda.time.DateTimeZone):730:getLocalMillis() + 6L * DateTimeConstants.MILLIS_PER_HOUR |==> getLocalMillis() / (6L * DateTimeConstants.MILLIS_PER_HOUR)
3269:LVR:FALSE:TRUE:org.joda.time.LocalDate@toDateTimeAtStartOfDay(org.joda.time.DateTimeZone):731:false |==> true
3270:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDate@toDateTimeAtStartOfDay(org.joda.time.DateTimeZone):732:instant = chrono.dayOfMonth().roundFloor(instant) |==> <NO-OP>
3271:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDate@toDateTimeAtMidnight(org.joda.time.DateTimeZone):776:zone = DateTimeUtils.getZone(zone) |==> <NO-OP>
3272:LVR:0:POS:org.joda.time.LocalDate@toDateTimeAtMidnight(org.joda.time.DateTimeZone):778:0 |==> 1
3273:LVR:0:NEG:org.joda.time.LocalDate@toDateTimeAtMidnight(org.joda.time.DateTimeZone):778:0 |==> -1
3274:LVR:0:POS:org.joda.time.LocalDate@toDateTimeAtMidnight(org.joda.time.DateTimeZone):778:0 |==> 1
3275:LVR:0:NEG:org.joda.time.LocalDate@toDateTimeAtMidnight(org.joda.time.DateTimeZone):778:0 |==> -1
3276:LVR:0:POS:org.joda.time.LocalDate@toDateTimeAtMidnight(org.joda.time.DateTimeZone):778:0 |==> 1
3277:LVR:0:NEG:org.joda.time.LocalDate@toDateTimeAtMidnight(org.joda.time.DateTimeZone):778:0 |==> -1
3278:LVR:0:POS:org.joda.time.LocalDate@toDateTimeAtMidnight(org.joda.time.DateTimeZone):778:0 |==> 1
3279:LVR:0:NEG:org.joda.time.LocalDate@toDateTimeAtMidnight(org.joda.time.DateTimeZone):778:0 |==> -1
3280:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDate@toDateTimeAtCurrentTime(org.joda.time.DateTimeZone):815:zone = DateTimeUtils.getZone(zone) |==> <NO-OP>
3281:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDate@toDateMidnight(org.joda.time.DateTimeZone):865:zone = DateTimeUtils.getZone(zone) |==> <NO-OP>
3282:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalDate@toLocalDateTime(org.joda.time.LocalTime):888:time == null |==> false
3283:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.LocalDate@toLocalDateTime(org.joda.time.LocalTime):891:getChronology() != time.getChronology() |==> true
3284:AOR:+(long,long):%(long,long):org.joda.time.LocalDate@toLocalDateTime(org.joda.time.LocalTime):894:getLocalMillis() + time.getLocalMillis() |==> getLocalMillis() % time.getLocalMillis()
3285:AOR:+(long,long):*(long,long):org.joda.time.LocalDate@toLocalDateTime(org.joda.time.LocalTime):894:getLocalMillis() + time.getLocalMillis() |==> getLocalMillis() * time.getLocalMillis()
3286:AOR:+(long,long):-(long,long):org.joda.time.LocalDate@toLocalDateTime(org.joda.time.LocalTime):894:getLocalMillis() + time.getLocalMillis() |==> getLocalMillis() - time.getLocalMillis()
3287:AOR:+(long,long):/(long,long):org.joda.time.LocalDate@toLocalDateTime(org.joda.time.LocalTime):894:getLocalMillis() + time.getLocalMillis() |==> getLocalMillis() / time.getLocalMillis()
3288:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.LocalDate@toDateTime(org.joda.time.LocalTime,org.joda.time.DateTimeZone):939:time != null |==> true
3289:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.LocalDate@toDateTime(org.joda.time.LocalTime,org.joda.time.DateTimeZone):939:getChronology() != time.getChronology() |==> true
3290:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.LocalDate@toDateTime(org.joda.time.LocalTime,org.joda.time.DateTimeZone):939:time != null && getChronology() != time.getChronology() |==> time != null == (getChronology() != time.getChronology())
3291:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.LocalDate@toDateTime(org.joda.time.LocalTime,org.joda.time.DateTimeZone):939:time != null && getChronology() != time.getChronology() |==> false
3292:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.LocalDate@toDateTime(org.joda.time.LocalTime,org.joda.time.DateTimeZone):939:time != null && getChronology() != time.getChronology() |==> time != null
3293:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.LocalDate@toDateTime(org.joda.time.LocalTime,org.joda.time.DateTimeZone):939:time != null && getChronology() != time.getChronology() |==> getChronology() != time.getChronology()
3294:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDate@toDateTime(org.joda.time.LocalTime,org.joda.time.DateTimeZone):944:instant = chrono.set(this, instant) |==> <NO-OP>
3295:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.LocalDate@toDateTime(org.joda.time.LocalTime,org.joda.time.DateTimeZone):945:time != null |==> true
3296:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDate@toDateTime(org.joda.time.LocalTime,org.joda.time.DateTimeZone):946:instant = chrono.set(time, instant) |==> <NO-OP>
3297:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDate@toInterval(org.joda.time.DateTimeZone):979:zone = DateTimeUtils.getZone(zone) |==> <NO-OP>
3298:LVR:POS:0:org.joda.time.LocalDate@toInterval(org.joda.time.DateTimeZone):981:1 |==> 0
3299:LVR:POS:NEG:org.joda.time.LocalDate@toInterval(org.joda.time.DateTimeZone):981:1 |==> -1
3300:LVR:POS:0:org.joda.time.LocalDate@toDate():1004:1900 |==> 0
3301:LVR:POS:NEG:org.joda.time.LocalDate@toDate():1004:1900 |==> -1900
3302:AOR:-(int,int):%(int,int):org.joda.time.LocalDate@toDate():1004:getYear() - 1900 |==> getYear() % 1900
3303:AOR:-(int,int):*(int,int):org.joda.time.LocalDate@toDate():1004:getYear() - 1900 |==> getYear() * 1900
3304:AOR:-(int,int):+(int,int):org.joda.time.LocalDate@toDate():1004:getYear() - 1900 |==> getYear() + 1900
3305:AOR:-(int,int):/(int,int):org.joda.time.LocalDate@toDate():1004:getYear() - 1900 |==> getYear() / 1900
3306:LVR:POS:0:org.joda.time.LocalDate@toDate():1004:1 |==> 0
3307:LVR:POS:NEG:org.joda.time.LocalDate@toDate():1004:1 |==> -1
3308:AOR:-(int,int):%(int,int):org.joda.time.LocalDate@toDate():1004:getMonthOfYear() - 1 |==> getMonthOfYear() % 1
3309:AOR:-(int,int):*(int,int):org.joda.time.LocalDate@toDate():1004:getMonthOfYear() - 1 |==> getMonthOfYear() * 1
3310:AOR:-(int,int):+(int,int):org.joda.time.LocalDate@toDate():1004:getMonthOfYear() - 1 |==> getMonthOfYear() + 1
3311:AOR:-(int,int):/(int,int):org.joda.time.LocalDate@toDate():1004:getMonthOfYear() - 1 |==> getMonthOfYear() / 1
3312:COR:check.isBefore(this):TRUE:org.joda.time.LocalDate@toDate():1006:check.isBefore(this) |==> false
3313:COR:check.isBefore(this):FALSE:org.joda.time.LocalDate@toDate():1006:check.isBefore(this) |==> true
3314:LVR:FALSE:TRUE:org.joda.time.LocalDate@toDate():1009:false |==> true
3315:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.LocalDate@toDate():1009:check.equals(this) == false |==> false
3316:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.LocalDate@toDate():1009:check.equals(this) == false |==> check.equals(this)
3317:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.LocalDate@toDate():1009:check.equals(this) == false |==> false
3318:LVR:POS:0:org.joda.time.LocalDate@toDate():1010:3600000 |==> 0
3319:LVR:POS:NEG:org.joda.time.LocalDate@toDate():1010:3600000 |==> -3600000
3320:AOR:+(long,long):%(long,long):org.joda.time.LocalDate@toDate():1010:date.getTime() + 3600000 |==> date.getTime() % 3600000
3321:AOR:+(long,long):*(long,long):org.joda.time.LocalDate@toDate():1010:date.getTime() + 3600000 |==> date.getTime() * 3600000
3322:AOR:+(long,long):-(long,long):org.joda.time.LocalDate@toDate():1010:date.getTime() + 3600000 |==> date.getTime() - 3600000
3323:AOR:+(long,long):/(long,long):org.joda.time.LocalDate@toDate():1010:date.getTime() + 3600000 |==> date.getTime() / 3600000
3324:STD:<CALL>:<NO-OP>:org.joda.time.LocalDate@toDate():1010:date.setTime(date.getTime() + 3600000) |==> <NO-OP>
3325:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDate@toDate():1011:check = LocalDate.fromDateFields(date) |==> <NO-OP>
3326:ROR:==(int,int):<=(int,int):org.joda.time.LocalDate@toDate():1014:date.getDate() == dom |==> date.getDate() <= dom
3327:ROR:==(int,int):>=(int,int):org.joda.time.LocalDate@toDate():1014:date.getDate() == dom |==> date.getDate() >= dom
3328:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalDate@toDate():1014:date.getDate() == dom |==> false
3329:LVR:POS:0:org.joda.time.LocalDate@toDate():1015:1000 |==> 0
3330:LVR:POS:NEG:org.joda.time.LocalDate@toDate():1015:1000 |==> -1000
3331:AOR:-(long,long):%(long,long):org.joda.time.LocalDate@toDate():1015:date.getTime() - 1000 |==> date.getTime() % 1000
3332:AOR:-(long,long):*(long,long):org.joda.time.LocalDate@toDate():1015:date.getTime() - 1000 |==> date.getTime() * 1000
3333:AOR:-(long,long):+(long,long):org.joda.time.LocalDate@toDate():1015:date.getTime() - 1000 |==> date.getTime() + 1000
3334:AOR:-(long,long):/(long,long):org.joda.time.LocalDate@toDate():1015:date.getTime() - 1000 |==> date.getTime() / 1000
3335:STD:<CALL>:<NO-OP>:org.joda.time.LocalDate@toDate():1015:date.setTime(date.getTime() - 1000) |==> <NO-OP>
3336:LVR:POS:0:org.joda.time.LocalDate@toDate():1018:1000 |==> 0
3337:LVR:POS:NEG:org.joda.time.LocalDate@toDate():1018:1000 |==> -1000
3338:AOR:+(long,long):%(long,long):org.joda.time.LocalDate@toDate():1018:date.getTime() + 1000 |==> date.getTime() % 1000
3339:AOR:+(long,long):*(long,long):org.joda.time.LocalDate@toDate():1018:date.getTime() + 1000 |==> date.getTime() * 1000
3340:AOR:+(long,long):-(long,long):org.joda.time.LocalDate@toDate():1018:date.getTime() + 1000 |==> date.getTime() - 1000
3341:AOR:+(long,long):/(long,long):org.joda.time.LocalDate@toDate():1018:date.getTime() + 1000 |==> date.getTime() / 1000
3342:STD:<CALL>:<NO-OP>:org.joda.time.LocalDate@toDate():1018:date.setTime(date.getTime() + 1000) |==> <NO-OP>
3343:COR:check.equals(this):TRUE:org.joda.time.LocalDate@toDate():1019:check.equals(this) |==> false
3344:COR:check.equals(this):FALSE:org.joda.time.LocalDate@toDate():1019:check.equals(this) |==> true
3345:AOR:-(long,long):%(long,long):org.joda.time.LocalDate@toDate():1021:date.getTime() - TimeZone.getDefault().getDSTSavings() |==> date.getTime() % TimeZone.getDefault().getDSTSavings()
3346:AOR:-(long,long):*(long,long):org.joda.time.LocalDate@toDate():1021:date.getTime() - TimeZone.getDefault().getDSTSavings() |==> date.getTime() * TimeZone.getDefault().getDSTSavings()
3347:AOR:-(long,long):+(long,long):org.joda.time.LocalDate@toDate():1021:date.getTime() - TimeZone.getDefault().getDSTSavings() |==> date.getTime() + TimeZone.getDefault().getDSTSavings()
3348:AOR:-(long,long):/(long,long):org.joda.time.LocalDate@toDate():1021:date.getTime() - TimeZone.getDefault().getDSTSavings() |==> date.getTime() / TimeZone.getDefault().getDSTSavings()
3349:ROR:==(int,int):<=(int,int):org.joda.time.LocalDate@toDate():1022:earlier.getDate() == dom |==> earlier.getDate() <= dom
3350:ROR:==(int,int):>=(int,int):org.joda.time.LocalDate@toDate():1022:earlier.getDate() == dom |==> earlier.getDate() >= dom
3351:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalDate@toDate():1022:earlier.getDate() == dom |==> false
3352:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDate@toDate():1023:date = earlier |==> <NO-OP>
3353:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDate@withLocalMillis(long):1041:newMillis = iChronology.dayOfMonth().roundFloor(newMillis) |==> <NO-OP>
3354:ROR:==(long,long):<=(long,long):org.joda.time.LocalDate@withLocalMillis(long):1042:newMillis == getLocalMillis() |==> newMillis <= getLocalMillis()
3355:ROR:==(long,long):>=(long,long):org.joda.time.LocalDate@withLocalMillis(long):1042:newMillis == getLocalMillis() |==> newMillis >= getLocalMillis()
3356:ROR:==(long,long):FALSE(long,long):org.joda.time.LocalDate@withLocalMillis(long):1042:newMillis == getLocalMillis() |==> false
3357:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalDate@withFields(org.joda.time.ReadablePartial):1060:partial == null |==> false
3358:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalDate@withField(org.joda.time.DateTimeFieldType,int):1085:fieldType == null |==> false
3359:LVR:FALSE:TRUE:org.joda.time.LocalDate@withField(org.joda.time.DateTimeFieldType,int):1088:false |==> true
3360:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.LocalDate@withField(org.joda.time.DateTimeFieldType,int):1088:isSupported(fieldType) == false |==> false
3361:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.LocalDate@withField(org.joda.time.DateTimeFieldType,int):1088:isSupported(fieldType) == false |==> isSupported(fieldType)
3362:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.LocalDate@withField(org.joda.time.DateTimeFieldType,int):1088:isSupported(fieldType) == false |==> false
3363:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalDate@withFieldAdded(org.joda.time.DurationFieldType,int):1114:fieldType == null |==> false
3364:LVR:FALSE:TRUE:org.joda.time.LocalDate@withFieldAdded(org.joda.time.DurationFieldType,int):1117:false |==> true
3365:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.LocalDate@withFieldAdded(org.joda.time.DurationFieldType,int):1117:isSupported(fieldType) == false |==> false
3366:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.LocalDate@withFieldAdded(org.joda.time.DurationFieldType,int):1117:isSupported(fieldType) == false |==> isSupported(fieldType)
3367:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.LocalDate@withFieldAdded(org.joda.time.DurationFieldType,int):1117:isSupported(fieldType) == false |==> false
3368:LVR:0:POS:org.joda.time.LocalDate@withFieldAdded(org.joda.time.DurationFieldType,int):1120:0 |==> 1
3369:LVR:0:NEG:org.joda.time.LocalDate@withFieldAdded(org.joda.time.DurationFieldType,int):1120:0 |==> -1
3370:ROR:==(int,int):<=(int,int):org.joda.time.LocalDate@withFieldAdded(org.joda.time.DurationFieldType,int):1120:amount == 0 |==> amount <= 0
3371:ROR:==(int,int):>=(int,int):org.joda.time.LocalDate@withFieldAdded(org.joda.time.DurationFieldType,int):1120:amount == 0 |==> amount >= 0
3372:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalDate@withFieldAdded(org.joda.time.DurationFieldType,int):1120:amount == 0 |==> false
3373:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalDate@withPeriodAdded(org.joda.time.ReadablePeriod,int):1147:period == null |==> false
3374:LVR:0:POS:org.joda.time.LocalDate@withPeriodAdded(org.joda.time.ReadablePeriod,int):1147:0 |==> 1
3375:LVR:0:NEG:org.joda.time.LocalDate@withPeriodAdded(org.joda.time.ReadablePeriod,int):1147:0 |==> -1
3376:ROR:==(int,int):<=(int,int):org.joda.time.LocalDate@withPeriodAdded(org.joda.time.ReadablePeriod,int):1147:scalar == 0 |==> scalar <= 0
3377:ROR:==(int,int):>=(int,int):org.joda.time.LocalDate@withPeriodAdded(org.joda.time.ReadablePeriod,int):1147:scalar == 0 |==> scalar >= 0
3378:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalDate@withPeriodAdded(org.joda.time.ReadablePeriod,int):1147:scalar == 0 |==> false
3379:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.LocalDate@withPeriodAdded(org.joda.time.ReadablePeriod,int):1147:period == null || scalar == 0 |==> period == null != (scalar == 0)
3380:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.LocalDate@withPeriodAdded(org.joda.time.ReadablePeriod,int):1147:period == null || scalar == 0 |==> period == null
3381:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.LocalDate@withPeriodAdded(org.joda.time.ReadablePeriod,int):1147:period == null || scalar == 0 |==> scalar == 0
3382:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.LocalDate@withPeriodAdded(org.joda.time.ReadablePeriod,int):1147:period == null || scalar == 0 |==> true
3383:LVR:0:POS:org.joda.time.LocalDate@withPeriodAdded(org.joda.time.ReadablePeriod,int):1152:0 |==> 1
3384:LVR:0:NEG:org.joda.time.LocalDate@withPeriodAdded(org.joda.time.ReadablePeriod,int):1152:0 |==> -1
3385:ROR:<(int,int):!=(int,int):org.joda.time.LocalDate@withPeriodAdded(org.joda.time.ReadablePeriod,int):1152:i < period.size() |==> i != period.size()
3386:ROR:<(int,int):<=(int,int):org.joda.time.LocalDate@withPeriodAdded(org.joda.time.ReadablePeriod,int):1152:i < period.size() |==> i <= period.size()
3387:ROR:<(int,int):FALSE(int,int):org.joda.time.LocalDate@withPeriodAdded(org.joda.time.ReadablePeriod,int):1152:i < period.size() |==> false
3388:COR:isSupported(type):TRUE:org.joda.time.LocalDate@withPeriodAdded(org.joda.time.ReadablePeriod,int):1155:isSupported(type) |==> false
3389:COR:isSupported(type):FALSE:org.joda.time.LocalDate@withPeriodAdded(org.joda.time.ReadablePeriod,int):1155:isSupported(type) |==> true
3390:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDate@withPeriodAdded(org.joda.time.ReadablePeriod,int):1156:instant = type.getField(chrono).add(instant, value) |==> <NO-OP>
3391:LVR:POS:0:org.joda.time.LocalDate@plus(org.joda.time.ReadablePeriod):1180:1 |==> 0
3392:LVR:POS:NEG:org.joda.time.LocalDate@plus(org.joda.time.ReadablePeriod):1180:1 |==> -1
3393:LVR:0:POS:org.joda.time.LocalDate@plusYears(int):1202:0 |==> 1
3394:LVR:0:NEG:org.joda.time.LocalDate@plusYears(int):1202:0 |==> -1
3395:ROR:==(int,int):<=(int,int):org.joda.time.LocalDate@plusYears(int):1202:years == 0 |==> years <= 0
3396:ROR:==(int,int):>=(int,int):org.joda.time.LocalDate@plusYears(int):1202:years == 0 |==> years >= 0
3397:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalDate@plusYears(int):1202:years == 0 |==> false
3398:LVR:0:POS:org.joda.time.LocalDate@plusMonths(int):1228:0 |==> 1
3399:LVR:0:NEG:org.joda.time.LocalDate@plusMonths(int):1228:0 |==> -1
3400:ROR:==(int,int):<=(int,int):org.joda.time.LocalDate@plusMonths(int):1228:months == 0 |==> months <= 0
3401:ROR:==(int,int):>=(int,int):org.joda.time.LocalDate@plusMonths(int):1228:months == 0 |==> months >= 0
3402:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalDate@plusMonths(int):1228:months == 0 |==> false
3403:LVR:0:POS:org.joda.time.LocalDate@plusWeeks(int):1251:0 |==> 1
3404:LVR:0:NEG:org.joda.time.LocalDate@plusWeeks(int):1251:0 |==> -1
3405:ROR:==(int,int):<=(int,int):org.joda.time.LocalDate@plusWeeks(int):1251:weeks == 0 |==> weeks <= 0
3406:ROR:==(int,int):>=(int,int):org.joda.time.LocalDate@plusWeeks(int):1251:weeks == 0 |==> weeks >= 0
3407:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalDate@plusWeeks(int):1251:weeks == 0 |==> false
3408:LVR:0:POS:org.joda.time.LocalDate@plusDays(int):1274:0 |==> 1
3409:LVR:0:NEG:org.joda.time.LocalDate@plusDays(int):1274:0 |==> -1
3410:ROR:==(int,int):<=(int,int):org.joda.time.LocalDate@plusDays(int):1274:days == 0 |==> days <= 0
3411:ROR:==(int,int):>=(int,int):org.joda.time.LocalDate@plusDays(int):1274:days == 0 |==> days >= 0
3412:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalDate@plusDays(int):1274:days == 0 |==> false
3413:LVR:NEG:0:org.joda.time.LocalDate@minus(org.joda.time.ReadablePeriod):1299:-1 |==> 0
3414:LVR:NEG:POS:org.joda.time.LocalDate@minus(org.joda.time.ReadablePeriod):1299:-1 |==> 1
3415:LVR:0:POS:org.joda.time.LocalDate@minusYears(int):1321:0 |==> 1
3416:LVR:0:NEG:org.joda.time.LocalDate@minusYears(int):1321:0 |==> -1
3417:ROR:==(int,int):<=(int,int):org.joda.time.LocalDate@minusYears(int):1321:years == 0 |==> years <= 0
3418:ROR:==(int,int):>=(int,int):org.joda.time.LocalDate@minusYears(int):1321:years == 0 |==> years >= 0
3419:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalDate@minusYears(int):1321:years == 0 |==> false
3420:LVR:0:POS:org.joda.time.LocalDate@minusMonths(int):1347:0 |==> 1
3421:LVR:0:NEG:org.joda.time.LocalDate@minusMonths(int):1347:0 |==> -1
3422:ROR:==(int,int):<=(int,int):org.joda.time.LocalDate@minusMonths(int):1347:months == 0 |==> months <= 0
3423:ROR:==(int,int):>=(int,int):org.joda.time.LocalDate@minusMonths(int):1347:months == 0 |==> months >= 0
3424:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalDate@minusMonths(int):1347:months == 0 |==> false
3425:LVR:0:POS:org.joda.time.LocalDate@minusWeeks(int):1370:0 |==> 1
3426:LVR:0:NEG:org.joda.time.LocalDate@minusWeeks(int):1370:0 |==> -1
3427:ROR:==(int,int):<=(int,int):org.joda.time.LocalDate@minusWeeks(int):1370:weeks == 0 |==> weeks <= 0
3428:ROR:==(int,int):>=(int,int):org.joda.time.LocalDate@minusWeeks(int):1370:weeks == 0 |==> weeks >= 0
3429:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalDate@minusWeeks(int):1370:weeks == 0 |==> false
3430:LVR:0:POS:org.joda.time.LocalDate@minusDays(int):1393:0 |==> 1
3431:LVR:0:NEG:org.joda.time.LocalDate@minusDays(int):1393:0 |==> -1
3432:ROR:==(int,int):<=(int,int):org.joda.time.LocalDate@minusDays(int):1393:days == 0 |==> days <= 0
3433:ROR:==(int,int):>=(int,int):org.joda.time.LocalDate@minusDays(int):1393:days == 0 |==> days >= 0
3434:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalDate@minusDays(int):1393:days == 0 |==> false
3435:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalDate@property(org.joda.time.DateTimeFieldType):1410:fieldType == null |==> false
3436:LVR:FALSE:TRUE:org.joda.time.LocalDate@property(org.joda.time.DateTimeFieldType):1413:false |==> true
3437:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.LocalDate@property(org.joda.time.DateTimeFieldType):1413:isSupported(fieldType) == false |==> false
3438:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.LocalDate@property(org.joda.time.DateTimeFieldType):1413:isSupported(fieldType) == false |==> isSupported(fieldType)
3439:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.LocalDate@property(org.joda.time.DateTimeFieldType):1413:isSupported(fieldType) == false |==> false
3440:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalDate@toString(java.lang.String):1829:pattern == null |==> false
3441:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalDate@toString(java.lang.String,java.util.Locale):1843:pattern == null |==> false
3442:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDate$Property@<init>(org.joda.time.LocalDate,org.joda.time.DateTimeField):1895:iInstant = instant |==> <NO-OP>
3443:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDate$Property@<init>(org.joda.time.LocalDate,org.joda.time.DateTimeField):1896:iField = field |==> <NO-OP>
3444:STD:<CALL>:<NO-OP>:org.joda.time.LocalDate$Property@writeObject(java.io.ObjectOutputStream):1903:oos.writeObject(iInstant) |==> <NO-OP>
3445:STD:<CALL>:<NO-OP>:org.joda.time.LocalDate$Property@writeObject(java.io.ObjectOutputStream):1904:oos.writeObject(iField.getType()) |==> <NO-OP>
3446:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDate$Property@readObject(java.io.ObjectInputStream):1911:iInstant = (LocalDate)oos.readObject() |==> <NO-OP>
3447:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalDate$Property@readObject(java.io.ObjectInputStream):1913:iField = type.getField(iInstant.getChronology()) |==> <NO-OP>
3448:LVR:0:POS:org.joda.time.LocalTime:84:0 |==> 1
3449:LVR:0:NEG:org.joda.time.LocalTime:84:0 |==> -1
3450:LVR:0:POS:org.joda.time.LocalTime:84:0 |==> 1
3451:LVR:0:NEG:org.joda.time.LocalTime:84:0 |==> -1
3452:LVR:0:POS:org.joda.time.LocalTime:84:0 |==> 1
3453:LVR:0:NEG:org.joda.time.LocalTime:84:0 |==> -1
3454:LVR:0:POS:org.joda.time.LocalTime:84:0 |==> 1
3455:LVR:0:NEG:org.joda.time.LocalTime:84:0 |==> -1
3456:STD:<CALL>:<NO-OP>:org.joda.time.LocalTime:97:TIME_DURATION_TYPES.add(DurationFieldType.millis()) |==> <NO-OP>
3457:STD:<CALL>:<NO-OP>:org.joda.time.LocalTime:98:TIME_DURATION_TYPES.add(DurationFieldType.seconds()) |==> <NO-OP>
3458:STD:<CALL>:<NO-OP>:org.joda.time.LocalTime:99:TIME_DURATION_TYPES.add(DurationFieldType.minutes()) |==> <NO-OP>
3459:STD:<CALL>:<NO-OP>:org.joda.time.LocalTime:100:TIME_DURATION_TYPES.add(DurationFieldType.hours()) |==> <NO-OP>
3460:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalTime@now(org.joda.time.DateTimeZone):131:zone == null |==> false
3461:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalTime@now(org.joda.time.Chronology):147:chronology == null |==> false
3462:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalTime@fromMillisOfDay(long,org.joda.time.Chronology):205:chrono = DateTimeUtils.getChronology(chrono).withUTC() |==> <NO-OP>
3463:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalTime@fromCalendarFields(java.util.Calendar):234:calendar == null |==> false
3464:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalTime@fromDateFields(java.util.Date):267:date == null |==> false
3465:LVR:POS:0:org.joda.time.LocalTime@fromDateFields(java.util.Date):274:1000 |==> 0
3466:LVR:POS:NEG:org.joda.time.LocalTime@fromDateFields(java.util.Date):274:1000 |==> -1000
3467:AOR:%(long,long):*(long,long):org.joda.time.LocalTime@fromDateFields(java.util.Date):274:date.getTime() % 1000 |==> date.getTime() * 1000
3468:AOR:%(long,long):+(long,long):org.joda.time.LocalTime@fromDateFields(java.util.Date):274:date.getTime() % 1000 |==> date.getTime() + 1000
3469:AOR:%(long,long):-(long,long):org.joda.time.LocalTime@fromDateFields(java.util.Date):274:date.getTime() % 1000 |==> date.getTime() - 1000
3470:AOR:%(long,long):/(long,long):org.joda.time.LocalTime@fromDateFields(java.util.Date):274:date.getTime() % 1000 |==> date.getTime() / 1000
3471:LVR:POS:0:org.joda.time.LocalTime@fromDateFields(java.util.Date):274:1000 |==> 0
3472:LVR:POS:NEG:org.joda.time.LocalTime@fromDateFields(java.util.Date):274:1000 |==> -1000
3473:AOR:+(int,int):%(int,int):org.joda.time.LocalTime@fromDateFields(java.util.Date):274:((int)(date.getTime() % 1000)) + 1000 |==> ((int)(date.getTime() % 1000)) % 1000
3474:AOR:+(int,int):*(int,int):org.joda.time.LocalTime@fromDateFields(java.util.Date):274:((int)(date.getTime() % 1000)) + 1000 |==> ((int)(date.getTime() % 1000)) * 1000
3475:AOR:+(int,int):-(int,int):org.joda.time.LocalTime@fromDateFields(java.util.Date):274:((int)(date.getTime() % 1000)) + 1000 |==> ((int)(date.getTime() % 1000)) - 1000
3476:AOR:+(int,int):/(int,int):org.joda.time.LocalTime@fromDateFields(java.util.Date):274:((int)(date.getTime() % 1000)) + 1000 |==> ((int)(date.getTime() % 1000)) / 1000
3477:LVR:POS:0:org.joda.time.LocalTime@fromDateFields(java.util.Date):274:1000 |==> 0
3478:LVR:POS:NEG:org.joda.time.LocalTime@fromDateFields(java.util.Date):274:1000 |==> -1000
3479:AOR:%(int,int):*(int,int):org.joda.time.LocalTime@fromDateFields(java.util.Date):274:(((int)(date.getTime() % 1000)) + 1000) % 1000 |==> (((int)(date.getTime() % 1000)) + 1000) * 1000
3480:AOR:%(int,int):+(int,int):org.joda.time.LocalTime@fromDateFields(java.util.Date):274:(((int)(date.getTime() % 1000)) + 1000) % 1000 |==> (((int)(date.getTime() % 1000)) + 1000) + 1000
3481:AOR:%(int,int):-(int,int):org.joda.time.LocalTime@fromDateFields(java.util.Date):274:(((int)(date.getTime() % 1000)) + 1000) % 1000 |==> (((int)(date.getTime() % 1000)) + 1000) - 1000
3482:AOR:%(int,int):/(int,int):org.joda.time.LocalTime@fromDateFields(java.util.Date):274:(((int)(date.getTime() % 1000)) + 1000) % 1000 |==> (((int)(date.getTime() % 1000)) + 1000) / 1000
3483:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalTime@<init>(long,org.joda.time.Chronology):357:chronology = DateTimeUtils.getChronology(chronology) |==> <NO-OP>
3484:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalTime@<init>(long,org.joda.time.Chronology):360:chronology = chronology.withUTC() |==> <NO-OP>
3485:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalTime@<init>(java.lang.Object,org.joda.time.DateTimeZone):407:chronology = DateTimeUtils.getChronology(chronology) |==> <NO-OP>
3486:LVR:0:POS:org.joda.time.LocalTime@<init>(java.lang.Object,org.joda.time.DateTimeZone):410:0L |==> 1L
3487:LVR:0:NEG:org.joda.time.LocalTime@<init>(java.lang.Object,org.joda.time.DateTimeZone):410:0L |==> -1L
3488:LVR:0:POS:org.joda.time.LocalTime@<init>(java.lang.Object,org.joda.time.DateTimeZone):410:0 |==> 1
3489:LVR:0:NEG:org.joda.time.LocalTime@<init>(java.lang.Object,org.joda.time.DateTimeZone):410:0 |==> -1
3490:LVR:POS:0:org.joda.time.LocalTime@<init>(java.lang.Object,org.joda.time.DateTimeZone):410:1 |==> 0
3491:LVR:POS:NEG:org.joda.time.LocalTime@<init>(java.lang.Object,org.joda.time.DateTimeZone):410:1 |==> -1
3492:LVR:POS:0:org.joda.time.LocalTime@<init>(java.lang.Object,org.joda.time.DateTimeZone):410:2 |==> 0
3493:LVR:POS:NEG:org.joda.time.LocalTime@<init>(java.lang.Object,org.joda.time.DateTimeZone):410:2 |==> -2
3494:LVR:POS:0:org.joda.time.LocalTime@<init>(java.lang.Object,org.joda.time.DateTimeZone):410:3 |==> 0
3495:LVR:POS:NEG:org.joda.time.LocalTime@<init>(java.lang.Object,org.joda.time.DateTimeZone):410:3 |==> -3
3496:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalTime@<init>(java.lang.Object,org.joda.time.Chronology):432:chronology = converter.getChronology(instant, chronology) |==> <NO-OP>
3497:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalTime@<init>(java.lang.Object,org.joda.time.Chronology):433:chronology = DateTimeUtils.getChronology(chronology) |==> <NO-OP>
3498:LVR:0:POS:org.joda.time.LocalTime@<init>(java.lang.Object,org.joda.time.Chronology):436:0L |==> 1L
3499:LVR:0:NEG:org.joda.time.LocalTime@<init>(java.lang.Object,org.joda.time.Chronology):436:0L |==> -1L
3500:LVR:0:POS:org.joda.time.LocalTime@<init>(java.lang.Object,org.joda.time.Chronology):436:0 |==> 1
3501:LVR:0:NEG:org.joda.time.LocalTime@<init>(java.lang.Object,org.joda.time.Chronology):436:0 |==> -1
3502:LVR:POS:0:org.joda.time.LocalTime@<init>(java.lang.Object,org.joda.time.Chronology):436:1 |==> 0
3503:LVR:POS:NEG:org.joda.time.LocalTime@<init>(java.lang.Object,org.joda.time.Chronology):436:1 |==> -1
3504:LVR:POS:0:org.joda.time.LocalTime@<init>(java.lang.Object,org.joda.time.Chronology):436:2 |==> 0
3505:LVR:POS:NEG:org.joda.time.LocalTime@<init>(java.lang.Object,org.joda.time.Chronology):436:2 |==> -2
3506:LVR:POS:0:org.joda.time.LocalTime@<init>(java.lang.Object,org.joda.time.Chronology):436:3 |==> 0
3507:LVR:POS:NEG:org.joda.time.LocalTime@<init>(java.lang.Object,org.joda.time.Chronology):436:3 |==> -3
3508:LVR:0:POS:org.joda.time.LocalTime@<init>(int,int):450:0 |==> 1
3509:LVR:0:NEG:org.joda.time.LocalTime@<init>(int,int):450:0 |==> -1
3510:LVR:0:POS:org.joda.time.LocalTime@<init>(int,int):450:0 |==> 1
3511:LVR:0:NEG:org.joda.time.LocalTime@<init>(int,int):450:0 |==> -1
3512:LVR:0:POS:org.joda.time.LocalTime@<init>(int,int,int):465:0 |==> 1
3513:LVR:0:NEG:org.joda.time.LocalTime@<init>(int,int,int):465:0 |==> -1
3514:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalTime@<init>(int,int,int,int,org.joda.time.Chronology):505:chronology = DateTimeUtils.getChronology(chronology).withUTC() |==> <NO-OP>
3515:LVR:0:POS:org.joda.time.LocalTime@<init>(int,int,int,int,org.joda.time.Chronology):507:0L |==> 1L
3516:LVR:0:NEG:org.joda.time.LocalTime@<init>(int,int,int,int,org.joda.time.Chronology):507:0L |==> -1L
3517:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalTime@readResolve():517:iChronology == null |==> false
3518:LVR:FALSE:TRUE:org.joda.time.LocalTime@readResolve():520:false |==> true
3519:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.LocalTime@readResolve():520:DateTimeZone.UTC.equals(iChronology.getZone()) == false |==> false
3520:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.LocalTime@readResolve():520:DateTimeZone.UTC.equals(iChronology.getZone()) == false |==> DateTimeZone.UTC.equals(iChronology.getZone())
3521:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.LocalTime@readResolve():520:DateTimeZone.UTC.equals(iChronology.getZone()) == false |==> false
3522:LVR:POS:0:org.joda.time.LocalTime@size():535:4 |==> 0
3523:LVR:POS:NEG:org.joda.time.LocalTime@size():535:4 |==> -4
3524:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalTime@get(org.joda.time.DateTimeFieldType):604:fieldType == null |==> false
3525:LVR:FALSE:TRUE:org.joda.time.LocalTime@get(org.joda.time.DateTimeFieldType):607:false |==> true
3526:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.LocalTime@get(org.joda.time.DateTimeFieldType):607:isSupported(fieldType) == false |==> false
3527:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.LocalTime@get(org.joda.time.DateTimeFieldType):607:isSupported(fieldType) == false |==> isSupported(fieldType)
3528:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.LocalTime@get(org.joda.time.DateTimeFieldType):607:isSupported(fieldType) == false |==> false
3529:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalTime@isSupported(org.joda.time.DateTimeFieldType):622:type == null |==> false
3530:LVR:FALSE:TRUE:org.joda.time.LocalTime@isSupported(org.joda.time.DateTimeFieldType):623:false |==> true
3531:LVR:FALSE:TRUE:org.joda.time.LocalTime@isSupported(org.joda.time.DateTimeFieldType):625:false |==> true
3532:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.LocalTime@isSupported(org.joda.time.DateTimeFieldType):625:isSupported(type.getDurationType()) == false |==> false
3533:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.LocalTime@isSupported(org.joda.time.DateTimeFieldType):625:isSupported(type.getDurationType()) == false |==> isSupported(type.getDurationType())
3534:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.LocalTime@isSupported(org.joda.time.DateTimeFieldType):625:isSupported(type.getDurationType()) == false |==> false
3535:LVR:FALSE:TRUE:org.joda.time.LocalTime@isSupported(org.joda.time.DateTimeFieldType):626:false |==> true
3536:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalTime@isSupported(org.joda.time.DateTimeFieldType):629:range == DurationFieldType.days() |==> false
3537:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.LocalTime@isSupported(org.joda.time.DateTimeFieldType):629:isSupported(range) || range == DurationFieldType.days() |==> isSupported(range) != (range == DurationFieldType.days())
3538:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.LocalTime@isSupported(org.joda.time.DateTimeFieldType):629:isSupported(range) || range == DurationFieldType.days() |==> isSupported(range)
3539:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.LocalTime@isSupported(org.joda.time.DateTimeFieldType):629:isSupported(range) || range == DurationFieldType.days() |==> range == DurationFieldType.days()
3540:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.LocalTime@isSupported(org.joda.time.DateTimeFieldType):629:isSupported(range) || range == DurationFieldType.days() |==> true
3541:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalTime@isSupported(org.joda.time.DurationFieldType):640:type == null |==> false
3542:LVR:FALSE:TRUE:org.joda.time.LocalTime@isSupported(org.joda.time.DurationFieldType):641:false |==> true
3543:ROR:<(long,long):!=(long,long):org.joda.time.LocalTime@isSupported(org.joda.time.DurationFieldType):645:field.getUnitMillis() < getChronology().days().getUnitMillis() |==> field.getUnitMillis() != getChronology().days().getUnitMillis()
3544:ROR:<(long,long):<=(long,long):org.joda.time.LocalTime@isSupported(org.joda.time.DurationFieldType):645:field.getUnitMillis() < getChronology().days().getUnitMillis() |==> field.getUnitMillis() <= getChronology().days().getUnitMillis()
3545:ROR:<(long,long):FALSE(long,long):org.joda.time.LocalTime@isSupported(org.joda.time.DurationFieldType):645:field.getUnitMillis() < getChronology().days().getUnitMillis() |==> false
3546:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.LocalTime@isSupported(org.joda.time.DurationFieldType):644:TIME_DURATION_TYPES.contains(type) || field.getUnitMillis() < getChronology().days().getUnitMillis() |==> TIME_DURATION_TYPES.contains(type) != field.getUnitMillis() < getChronology().days().getUnitMillis()
3547:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.LocalTime@isSupported(org.joda.time.DurationFieldType):644:TIME_DURATION_TYPES.contains(type) || field.getUnitMillis() < getChronology().days().getUnitMillis() |==> TIME_DURATION_TYPES.contains(type)
3548:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.LocalTime@isSupported(org.joda.time.DurationFieldType):645:TIME_DURATION_TYPES.contains(type) || field.getUnitMillis() < getChronology().days().getUnitMillis() |==> field.getUnitMillis() < getChronology().days().getUnitMillis()
3549:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.LocalTime@isSupported(org.joda.time.DurationFieldType):644:TIME_DURATION_TYPES.contains(type) || field.getUnitMillis() < getChronology().days().getUnitMillis() |==> true
3550:LVR:FALSE:TRUE:org.joda.time.LocalTime@isSupported(org.joda.time.DurationFieldType):648:false |==> true
3551:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalTime@equals(java.lang.Object):682:this == partial |==> false
3552:LVR:TRUE:FALSE:org.joda.time.LocalTime@equals(java.lang.Object):683:true |==> false
3553:COR:iChronology.equals(other.iChronology):TRUE:org.joda.time.LocalTime@equals(java.lang.Object):687:iChronology.equals(other.iChronology) |==> false
3554:COR:iChronology.equals(other.iChronology):FALSE:org.joda.time.LocalTime@equals(java.lang.Object):687:iChronology.equals(other.iChronology) |==> true
3555:ROR:==(long,long):<=(long,long):org.joda.time.LocalTime@equals(java.lang.Object):688:iLocalMillis == other.iLocalMillis |==> iLocalMillis <= other.iLocalMillis
3556:ROR:==(long,long):>=(long,long):org.joda.time.LocalTime@equals(java.lang.Object):688:iLocalMillis == other.iLocalMillis |==> iLocalMillis >= other.iLocalMillis
3557:ROR:==(long,long):FALSE(long,long):org.joda.time.LocalTime@equals(java.lang.Object):688:iLocalMillis == other.iLocalMillis |==> false
3558:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalTime@compareTo(org.joda.time.ReadablePartial):712:this == partial |==> false
3559:LVR:0:POS:org.joda.time.LocalTime@compareTo(org.joda.time.ReadablePartial):713:0 |==> 1
3560:LVR:0:NEG:org.joda.time.LocalTime@compareTo(org.joda.time.ReadablePartial):713:0 |==> -1
3561:COR:iChronology.equals(other.iChronology):TRUE:org.joda.time.LocalTime@compareTo(org.joda.time.ReadablePartial):717:iChronology.equals(other.iChronology) |==> false
3562:COR:iChronology.equals(other.iChronology):FALSE:org.joda.time.LocalTime@compareTo(org.joda.time.ReadablePartial):717:iChronology.equals(other.iChronology) |==> true
3563:ROR:<(long,long):!=(long,long):org.joda.time.LocalTime@compareTo(org.joda.time.ReadablePartial):718:iLocalMillis < other.iLocalMillis |==> iLocalMillis != other.iLocalMillis
3564:ROR:<(long,long):<=(long,long):org.joda.time.LocalTime@compareTo(org.joda.time.ReadablePartial):718:iLocalMillis < other.iLocalMillis |==> iLocalMillis <= other.iLocalMillis
3565:ROR:<(long,long):FALSE(long,long):org.joda.time.LocalTime@compareTo(org.joda.time.ReadablePartial):718:iLocalMillis < other.iLocalMillis |==> false
3566:LVR:NEG:0:org.joda.time.LocalTime@compareTo(org.joda.time.ReadablePartial):718:-1 |==> 0
3567:LVR:NEG:POS:org.joda.time.LocalTime@compareTo(org.joda.time.ReadablePartial):718:-1 |==> 1
3568:ROR:==(long,long):<=(long,long):org.joda.time.LocalTime@compareTo(org.joda.time.ReadablePartial):719:iLocalMillis == other.iLocalMillis |==> iLocalMillis <= other.iLocalMillis
3569:ROR:==(long,long):>=(long,long):org.joda.time.LocalTime@compareTo(org.joda.time.ReadablePartial):719:iLocalMillis == other.iLocalMillis |==> iLocalMillis >= other.iLocalMillis
3570:ROR:==(long,long):FALSE(long,long):org.joda.time.LocalTime@compareTo(org.joda.time.ReadablePartial):719:iLocalMillis == other.iLocalMillis |==> false
3571:LVR:0:POS:org.joda.time.LocalTime@compareTo(org.joda.time.ReadablePartial):719:0 |==> 1
3572:LVR:0:NEG:org.joda.time.LocalTime@compareTo(org.joda.time.ReadablePartial):719:0 |==> -1
3573:LVR:POS:0:org.joda.time.LocalTime@compareTo(org.joda.time.ReadablePartial):719:1 |==> 0
3574:LVR:POS:NEG:org.joda.time.LocalTime@compareTo(org.joda.time.ReadablePartial):719:1 |==> -1
3575:ROR:==(long,long):<=(long,long):org.joda.time.LocalTime@withLocalMillis(long):738:newMillis == getLocalMillis() |==> newMillis <= getLocalMillis()
3576:ROR:==(long,long):>=(long,long):org.joda.time.LocalTime@withLocalMillis(long):738:newMillis == getLocalMillis() |==> newMillis >= getLocalMillis()
3577:ROR:==(long,long):FALSE(long,long):org.joda.time.LocalTime@withLocalMillis(long):738:newMillis == getLocalMillis() |==> false
3578:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalTime@withFields(org.joda.time.ReadablePartial):756:partial == null |==> false
3579:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalTime@withField(org.joda.time.DateTimeFieldType,int):782:fieldType == null |==> false
3580:LVR:FALSE:TRUE:org.joda.time.LocalTime@withField(org.joda.time.DateTimeFieldType,int):785:false |==> true
3581:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.LocalTime@withField(org.joda.time.DateTimeFieldType,int):785:isSupported(fieldType) == false |==> false
3582:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.LocalTime@withField(org.joda.time.DateTimeFieldType,int):785:isSupported(fieldType) == false |==> isSupported(fieldType)
3583:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.LocalTime@withField(org.joda.time.DateTimeFieldType,int):785:isSupported(fieldType) == false |==> false
3584:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalTime@withFieldAdded(org.joda.time.DurationFieldType,int):815:fieldType == null |==> false
3585:LVR:FALSE:TRUE:org.joda.time.LocalTime@withFieldAdded(org.joda.time.DurationFieldType,int):818:false |==> true
3586:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.LocalTime@withFieldAdded(org.joda.time.DurationFieldType,int):818:isSupported(fieldType) == false |==> false
3587:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.LocalTime@withFieldAdded(org.joda.time.DurationFieldType,int):818:isSupported(fieldType) == false |==> isSupported(fieldType)
3588:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.LocalTime@withFieldAdded(org.joda.time.DurationFieldType,int):818:isSupported(fieldType) == false |==> false
3589:LVR:0:POS:org.joda.time.LocalTime@withFieldAdded(org.joda.time.DurationFieldType,int):821:0 |==> 1
3590:LVR:0:NEG:org.joda.time.LocalTime@withFieldAdded(org.joda.time.DurationFieldType,int):821:0 |==> -1
3591:ROR:==(int,int):<=(int,int):org.joda.time.LocalTime@withFieldAdded(org.joda.time.DurationFieldType,int):821:amount == 0 |==> amount <= 0
3592:ROR:==(int,int):>=(int,int):org.joda.time.LocalTime@withFieldAdded(org.joda.time.DurationFieldType,int):821:amount == 0 |==> amount >= 0
3593:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalTime@withFieldAdded(org.joda.time.DurationFieldType,int):821:amount == 0 |==> false
3594:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalTime@withPeriodAdded(org.joda.time.ReadablePeriod,int):845:period == null |==> false
3595:LVR:0:POS:org.joda.time.LocalTime@withPeriodAdded(org.joda.time.ReadablePeriod,int):845:0 |==> 1
3596:LVR:0:NEG:org.joda.time.LocalTime@withPeriodAdded(org.joda.time.ReadablePeriod,int):845:0 |==> -1
3597:ROR:==(int,int):<=(int,int):org.joda.time.LocalTime@withPeriodAdded(org.joda.time.ReadablePeriod,int):845:scalar == 0 |==> scalar <= 0
3598:ROR:==(int,int):>=(int,int):org.joda.time.LocalTime@withPeriodAdded(org.joda.time.ReadablePeriod,int):845:scalar == 0 |==> scalar >= 0
3599:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalTime@withPeriodAdded(org.joda.time.ReadablePeriod,int):845:scalar == 0 |==> false
3600:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.LocalTime@withPeriodAdded(org.joda.time.ReadablePeriod,int):845:period == null || scalar == 0 |==> period == null != (scalar == 0)
3601:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.LocalTime@withPeriodAdded(org.joda.time.ReadablePeriod,int):845:period == null || scalar == 0 |==> period == null
3602:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.LocalTime@withPeriodAdded(org.joda.time.ReadablePeriod,int):845:period == null || scalar == 0 |==> scalar == 0
3603:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.LocalTime@withPeriodAdded(org.joda.time.ReadablePeriod,int):845:period == null || scalar == 0 |==> true
3604:LVR:POS:0:org.joda.time.LocalTime@plus(org.joda.time.ReadablePeriod):867:1 |==> 0
3605:LVR:POS:NEG:org.joda.time.LocalTime@plus(org.joda.time.ReadablePeriod):867:1 |==> -1
3606:LVR:0:POS:org.joda.time.LocalTime@plusHours(int):887:0 |==> 1
3607:LVR:0:NEG:org.joda.time.LocalTime@plusHours(int):887:0 |==> -1
3608:ROR:==(int,int):<=(int,int):org.joda.time.LocalTime@plusHours(int):887:hours == 0 |==> hours <= 0
3609:ROR:==(int,int):>=(int,int):org.joda.time.LocalTime@plusHours(int):887:hours == 0 |==> hours >= 0
3610:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalTime@plusHours(int):887:hours == 0 |==> false
3611:LVR:0:POS:org.joda.time.LocalTime@plusMinutes(int):910:0 |==> 1
3612:LVR:0:NEG:org.joda.time.LocalTime@plusMinutes(int):910:0 |==> -1
3613:ROR:==(int,int):<=(int,int):org.joda.time.LocalTime@plusMinutes(int):910:minutes == 0 |==> minutes <= 0
3614:ROR:==(int,int):>=(int,int):org.joda.time.LocalTime@plusMinutes(int):910:minutes == 0 |==> minutes >= 0
3615:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalTime@plusMinutes(int):910:minutes == 0 |==> false
3616:LVR:0:POS:org.joda.time.LocalTime@plusSeconds(int):933:0 |==> 1
3617:LVR:0:NEG:org.joda.time.LocalTime@plusSeconds(int):933:0 |==> -1
3618:ROR:==(int,int):<=(int,int):org.joda.time.LocalTime@plusSeconds(int):933:seconds == 0 |==> seconds <= 0
3619:ROR:==(int,int):>=(int,int):org.joda.time.LocalTime@plusSeconds(int):933:seconds == 0 |==> seconds >= 0
3620:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalTime@plusSeconds(int):933:seconds == 0 |==> false
3621:LVR:0:POS:org.joda.time.LocalTime@plusMillis(int):956:0 |==> 1
3622:LVR:0:NEG:org.joda.time.LocalTime@plusMillis(int):956:0 |==> -1
3623:ROR:==(int,int):<=(int,int):org.joda.time.LocalTime@plusMillis(int):956:millis == 0 |==> millis <= 0
3624:ROR:==(int,int):>=(int,int):org.joda.time.LocalTime@plusMillis(int):956:millis == 0 |==> millis >= 0
3625:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalTime@plusMillis(int):956:millis == 0 |==> false
3626:LVR:NEG:0:org.joda.time.LocalTime@minus(org.joda.time.ReadablePeriod):978:-1 |==> 0
3627:LVR:NEG:POS:org.joda.time.LocalTime@minus(org.joda.time.ReadablePeriod):978:-1 |==> 1
3628:LVR:0:POS:org.joda.time.LocalTime@minusHours(int):998:0 |==> 1
3629:LVR:0:NEG:org.joda.time.LocalTime@minusHours(int):998:0 |==> -1
3630:ROR:==(int,int):<=(int,int):org.joda.time.LocalTime@minusHours(int):998:hours == 0 |==> hours <= 0
3631:ROR:==(int,int):>=(int,int):org.joda.time.LocalTime@minusHours(int):998:hours == 0 |==> hours >= 0
3632:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalTime@minusHours(int):998:hours == 0 |==> false
3633:LVR:0:POS:org.joda.time.LocalTime@minusMinutes(int):1021:0 |==> 1
3634:LVR:0:NEG:org.joda.time.LocalTime@minusMinutes(int):1021:0 |==> -1
3635:ROR:==(int,int):<=(int,int):org.joda.time.LocalTime@minusMinutes(int):1021:minutes == 0 |==> minutes <= 0
3636:ROR:==(int,int):>=(int,int):org.joda.time.LocalTime@minusMinutes(int):1021:minutes == 0 |==> minutes >= 0
3637:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalTime@minusMinutes(int):1021:minutes == 0 |==> false
3638:LVR:0:POS:org.joda.time.LocalTime@minusSeconds(int):1044:0 |==> 1
3639:LVR:0:NEG:org.joda.time.LocalTime@minusSeconds(int):1044:0 |==> -1
3640:ROR:==(int,int):<=(int,int):org.joda.time.LocalTime@minusSeconds(int):1044:seconds == 0 |==> seconds <= 0
3641:ROR:==(int,int):>=(int,int):org.joda.time.LocalTime@minusSeconds(int):1044:seconds == 0 |==> seconds >= 0
3642:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalTime@minusSeconds(int):1044:seconds == 0 |==> false
3643:LVR:0:POS:org.joda.time.LocalTime@minusMillis(int):1067:0 |==> 1
3644:LVR:0:NEG:org.joda.time.LocalTime@minusMillis(int):1067:0 |==> -1
3645:ROR:==(int,int):<=(int,int):org.joda.time.LocalTime@minusMillis(int):1067:millis == 0 |==> millis <= 0
3646:ROR:==(int,int):>=(int,int):org.joda.time.LocalTime@minusMillis(int):1067:millis == 0 |==> millis >= 0
3647:ROR:==(int,int):FALSE(int,int):org.joda.time.LocalTime@minusMillis(int):1067:millis == 0 |==> false
3648:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalTime@property(org.joda.time.DateTimeFieldType):1084:fieldType == null |==> false
3649:LVR:FALSE:TRUE:org.joda.time.LocalTime@property(org.joda.time.DateTimeFieldType):1087:false |==> true
3650:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.LocalTime@property(org.joda.time.DateTimeFieldType):1087:isSupported(fieldType) == false |==> false
3651:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.LocalTime@property(org.joda.time.DateTimeFieldType):1087:isSupported(fieldType) == false |==> isSupported(fieldType)
3652:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.LocalTime@property(org.joda.time.DateTimeFieldType):1087:isSupported(fieldType) == false |==> false
3653:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalTime@toString(java.lang.String):1309:pattern == null |==> false
3654:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.LocalTime@toString(java.lang.String,java.util.Locale):1323:pattern == null |==> false
3655:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalTime$Property@<init>(org.joda.time.LocalTime,org.joda.time.DateTimeField):1374:iInstant = instant |==> <NO-OP>
3656:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalTime$Property@<init>(org.joda.time.LocalTime,org.joda.time.DateTimeField):1375:iField = field |==> <NO-OP>
3657:STD:<CALL>:<NO-OP>:org.joda.time.LocalTime$Property@writeObject(java.io.ObjectOutputStream):1382:oos.writeObject(iInstant) |==> <NO-OP>
3658:STD:<CALL>:<NO-OP>:org.joda.time.LocalTime$Property@writeObject(java.io.ObjectOutputStream):1383:oos.writeObject(iField.getType()) |==> <NO-OP>
3659:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalTime$Property@readObject(java.io.ObjectInputStream):1390:iInstant = (LocalTime)oos.readObject() |==> <NO-OP>
3660:STD:<ASSIGN>:<NO-OP>:org.joda.time.LocalTime$Property@readObject(java.io.ObjectInputStream):1392:iField = type.getField(iInstant.getChronology()) |==> <NO-OP>
3661:ROR:!=(long,long):<(long,long):org.joda.time.LocalTime$Property@addNoWrapToCopy(int):1475:rounded != millis |==> rounded < millis
3662:ROR:!=(long,long):>(long,long):org.joda.time.LocalTime$Property@addNoWrapToCopy(int):1475:rounded != millis |==> rounded > millis
3663:ROR:!=(long,long):TRUE(long,long):org.joda.time.LocalTime$Property@addNoWrapToCopy(int):1475:rounded != millis |==> true
3664:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.MutableDateTime@now(org.joda.time.DateTimeZone):118:zone == null |==> false
3665:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.MutableDateTime@now(org.joda.time.Chronology):133:chronology == null |==> false
3666:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@setRounding(org.joda.time.DateTimeField):418:setRounding(field, MutableDateTime.ROUND_FLOOR) |==> <NO-OP>
3667:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.MutableDateTime@setRounding(org.joda.time.DateTimeField,int):436:field != null |==> true
3668:ROR:<(int,int):!=(int,int):org.joda.time.MutableDateTime@setRounding(org.joda.time.DateTimeField,int):436:mode < ROUND_NONE |==> mode != ROUND_NONE
3669:ROR:<(int,int):<=(int,int):org.joda.time.MutableDateTime@setRounding(org.joda.time.DateTimeField,int):436:mode < ROUND_NONE |==> mode <= ROUND_NONE
3670:ROR:<(int,int):FALSE(int,int):org.joda.time.MutableDateTime@setRounding(org.joda.time.DateTimeField,int):436:mode < ROUND_NONE |==> false
3671:ROR:>(int,int):!=(int,int):org.joda.time.MutableDateTime@setRounding(org.joda.time.DateTimeField,int):436:mode > ROUND_HALF_EVEN |==> mode != ROUND_HALF_EVEN
3672:ROR:>(int,int):>=(int,int):org.joda.time.MutableDateTime@setRounding(org.joda.time.DateTimeField,int):436:mode > ROUND_HALF_EVEN |==> mode >= ROUND_HALF_EVEN
3673:ROR:>(int,int):FALSE(int,int):org.joda.time.MutableDateTime@setRounding(org.joda.time.DateTimeField,int):436:mode > ROUND_HALF_EVEN |==> false
3674:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.MutableDateTime@setRounding(org.joda.time.DateTimeField,int):436:mode < ROUND_NONE || mode > ROUND_HALF_EVEN |==> mode < ROUND_NONE != mode > ROUND_HALF_EVEN
3675:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.MutableDateTime@setRounding(org.joda.time.DateTimeField,int):436:mode < ROUND_NONE || mode > ROUND_HALF_EVEN |==> mode < ROUND_NONE
3676:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.MutableDateTime@setRounding(org.joda.time.DateTimeField,int):436:mode < ROUND_NONE || mode > ROUND_HALF_EVEN |==> mode > ROUND_HALF_EVEN
3677:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.MutableDateTime@setRounding(org.joda.time.DateTimeField,int):436:mode < ROUND_NONE || mode > ROUND_HALF_EVEN |==> true
3678:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.MutableDateTime@setRounding(org.joda.time.DateTimeField,int):436:field != null && (mode < ROUND_NONE || mode > ROUND_HALF_EVEN) |==> field != null == (mode < ROUND_NONE || mode > ROUND_HALF_EVEN)
3679:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.MutableDateTime@setRounding(org.joda.time.DateTimeField,int):436:field != null && (mode < ROUND_NONE || mode > ROUND_HALF_EVEN) |==> false
3680:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.MutableDateTime@setRounding(org.joda.time.DateTimeField,int):436:field != null && (mode < ROUND_NONE || mode > ROUND_HALF_EVEN) |==> field != null
3681:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.MutableDateTime@setRounding(org.joda.time.DateTimeField,int):436:field != null && (mode < ROUND_NONE || mode > ROUND_HALF_EVEN) |==> (mode < ROUND_NONE || mode > ROUND_HALF_EVEN)
3682:ROR:==(int,int):<=(int,int):org.joda.time.MutableDateTime@setRounding(org.joda.time.DateTimeField,int):439:mode == ROUND_NONE |==> mode <= ROUND_NONE
3683:ROR:==(int,int):>=(int,int):org.joda.time.MutableDateTime@setRounding(org.joda.time.DateTimeField,int):439:mode == ROUND_NONE |==> mode >= ROUND_NONE
3684:ROR:==(int,int):FALSE(int,int):org.joda.time.MutableDateTime@setRounding(org.joda.time.DateTimeField,int):439:mode == ROUND_NONE |==> false
3685:STD:<ASSIGN>:<NO-OP>:org.joda.time.MutableDateTime@setRounding(org.joda.time.DateTimeField,int):439:iRoundingField = (mode == ROUND_NONE ? null : field) |==> <NO-OP>
3686:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.MutableDateTime@setRounding(org.joda.time.DateTimeField,int):440:field == null |==> false
3687:STD:<ASSIGN>:<NO-OP>:org.joda.time.MutableDateTime@setRounding(org.joda.time.DateTimeField,int):440:iRoundingMode = (field == null ? ROUND_NONE : mode) |==> <NO-OP>
3688:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@setRounding(org.joda.time.DateTimeField,int):441:setMillis(getMillis()) |==> <NO-OP>
3689:STD:<ASSIGN>:<NO-OP>:org.joda.time.MutableDateTime@setMillis(long):458:instant = iRoundingField.roundFloor(instant) |==> <NO-OP>
3690:STD:<ASSIGN>:<NO-OP>:org.joda.time.MutableDateTime@setMillis(long):461:instant = iRoundingField.roundCeiling(instant) |==> <NO-OP>
3691:STD:<ASSIGN>:<NO-OP>:org.joda.time.MutableDateTime@setMillis(long):464:instant = iRoundingField.roundHalfFloor(instant) |==> <NO-OP>
3692:STD:<ASSIGN>:<NO-OP>:org.joda.time.MutableDateTime@setMillis(long):467:instant = iRoundingField.roundHalfCeiling(instant) |==> <NO-OP>
3693:STD:<ASSIGN>:<NO-OP>:org.joda.time.MutableDateTime@setMillis(long):470:instant = iRoundingField.roundHalfEven(instant) |==> <NO-OP>
3694:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@setMillis(long):473:super.setMillis(instant) |==> <NO-OP>
3695:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@setMillis(org.joda.time.ReadableInstant):486:setMillis(instantMillis) |==> <NO-OP>
3696:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@add(long):497:setMillis(FieldUtils.safeAdd(getMillis(), duration)) |==> <NO-OP>
3697:LVR:POS:0:org.joda.time.MutableDateTime@add(org.joda.time.ReadableDuration):509:1 |==> 0
3698:LVR:POS:NEG:org.joda.time.MutableDateTime@add(org.joda.time.ReadableDuration):509:1 |==> -1
3699:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@add(org.joda.time.ReadableDuration):509:add(duration, 1) |==> <NO-OP>
3700:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.MutableDateTime@add(org.joda.time.ReadableDuration,int):522:duration != null |==> true
3701:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@add(org.joda.time.ReadableDuration,int):523:add(FieldUtils.safeMultiply(duration.getMillis(), scalar)) |==> <NO-OP>
3702:LVR:POS:0:org.joda.time.MutableDateTime@add(org.joda.time.ReadablePeriod):536:1 |==> 0
3703:LVR:POS:NEG:org.joda.time.MutableDateTime@add(org.joda.time.ReadablePeriod):536:1 |==> -1
3704:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@add(org.joda.time.ReadablePeriod):536:add(period, 1) |==> <NO-OP>
3705:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.MutableDateTime@add(org.joda.time.ReadablePeriod,int):549:period != null |==> true
3706:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@add(org.joda.time.ReadablePeriod,int):550:setMillis(getChronology().add(period, getMillis(), scalar)) |==> <NO-OP>
3707:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@setChronology(org.joda.time.Chronology):563:super.setChronology(chronology) |==> <NO-OP>
3708:STD:<ASSIGN>:<NO-OP>:org.joda.time.MutableDateTime@setZone(org.joda.time.DateTimeZone):582:newZone = DateTimeUtils.getZone(newZone) |==> <NO-OP>
3709:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.MutableDateTime@setZone(org.joda.time.DateTimeZone):584:chrono.getZone() != newZone |==> true
3710:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@setZone(org.joda.time.DateTimeZone):585:setChronology(chrono.withZone(newZone)) |==> <NO-OP>
3711:STD:<ASSIGN>:<NO-OP>:org.joda.time.MutableDateTime@setZoneRetainFields(org.joda.time.DateTimeZone):601:newZone = DateTimeUtils.getZone(newZone) |==> <NO-OP>
3712:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.MutableDateTime@setZoneRetainFields(org.joda.time.DateTimeZone):603:newZone == originalZone |==> false
3713:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@setZoneRetainFields(org.joda.time.DateTimeZone):608:setChronology(getChronology().withZone(newZone)) |==> <NO-OP>
3714:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@setZoneRetainFields(org.joda.time.DateTimeZone):609:setMillis(millis) |==> <NO-OP>
3715:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.MutableDateTime@set(org.joda.time.DateTimeFieldType,int):621:type == null |==> false
3716:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@set(org.joda.time.DateTimeFieldType,int):624:setMillis(type.getField(getChronology()).set(getMillis(), value)) |==> <NO-OP>
3717:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.MutableDateTime@add(org.joda.time.DurationFieldType,int):636:type == null |==> false
3718:LVR:0:POS:org.joda.time.MutableDateTime@add(org.joda.time.DurationFieldType,int):639:0 |==> 1
3719:LVR:0:NEG:org.joda.time.MutableDateTime@add(org.joda.time.DurationFieldType,int):639:0 |==> -1
3720:ROR:!=(int,int):<(int,int):org.joda.time.MutableDateTime@add(org.joda.time.DurationFieldType,int):639:amount != 0 |==> amount < 0
3721:ROR:!=(int,int):>(int,int):org.joda.time.MutableDateTime@add(org.joda.time.DurationFieldType,int):639:amount != 0 |==> amount > 0
3722:ROR:!=(int,int):TRUE(int,int):org.joda.time.MutableDateTime@add(org.joda.time.DurationFieldType,int):639:amount != 0 |==> true
3723:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@add(org.joda.time.DurationFieldType,int):640:setMillis(type.getField(getChronology()).add(getMillis(), amount)) |==> <NO-OP>
3724:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@setYear(int):652:setMillis(getChronology().year().set(getMillis(), year)) |==> <NO-OP>
3725:LVR:0:POS:org.joda.time.MutableDateTime@addYears(int):662:0 |==> 1
3726:LVR:0:NEG:org.joda.time.MutableDateTime@addYears(int):662:0 |==> -1
3727:ROR:!=(int,int):<(int,int):org.joda.time.MutableDateTime@addYears(int):662:years != 0 |==> years < 0
3728:ROR:!=(int,int):>(int,int):org.joda.time.MutableDateTime@addYears(int):662:years != 0 |==> years > 0
3729:ROR:!=(int,int):TRUE(int,int):org.joda.time.MutableDateTime@addYears(int):662:years != 0 |==> true
3730:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@addYears(int):663:setMillis(getChronology().years().add(getMillis(), years)) |==> <NO-OP>
3731:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@setWeekyear(int):675:setMillis(getChronology().weekyear().set(getMillis(), weekyear)) |==> <NO-OP>
3732:LVR:0:POS:org.joda.time.MutableDateTime@addWeekyears(int):685:0 |==> 1
3733:LVR:0:NEG:org.joda.time.MutableDateTime@addWeekyears(int):685:0 |==> -1
3734:ROR:!=(int,int):<(int,int):org.joda.time.MutableDateTime@addWeekyears(int):685:weekyears != 0 |==> weekyears < 0
3735:ROR:!=(int,int):>(int,int):org.joda.time.MutableDateTime@addWeekyears(int):685:weekyears != 0 |==> weekyears > 0
3736:ROR:!=(int,int):TRUE(int,int):org.joda.time.MutableDateTime@addWeekyears(int):685:weekyears != 0 |==> true
3737:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@addWeekyears(int):686:setMillis(getChronology().weekyears().add(getMillis(), weekyears)) |==> <NO-OP>
3738:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@setMonthOfYear(int):698:setMillis(getChronology().monthOfYear().set(getMillis(), monthOfYear)) |==> <NO-OP>
3739:LVR:0:POS:org.joda.time.MutableDateTime@addMonths(int):708:0 |==> 1
3740:LVR:0:NEG:org.joda.time.MutableDateTime@addMonths(int):708:0 |==> -1
3741:ROR:!=(int,int):<(int,int):org.joda.time.MutableDateTime@addMonths(int):708:months != 0 |==> months < 0
3742:ROR:!=(int,int):>(int,int):org.joda.time.MutableDateTime@addMonths(int):708:months != 0 |==> months > 0
3743:ROR:!=(int,int):TRUE(int,int):org.joda.time.MutableDateTime@addMonths(int):708:months != 0 |==> true
3744:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@addMonths(int):709:setMillis(getChronology().months().add(getMillis(), months)) |==> <NO-OP>
3745:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@setWeekOfWeekyear(int):721:setMillis(getChronology().weekOfWeekyear().set(getMillis(), weekOfWeekyear)) |==> <NO-OP>
3746:LVR:0:POS:org.joda.time.MutableDateTime@addWeeks(int):731:0 |==> 1
3747:LVR:0:NEG:org.joda.time.MutableDateTime@addWeeks(int):731:0 |==> -1
3748:ROR:!=(int,int):<(int,int):org.joda.time.MutableDateTime@addWeeks(int):731:weeks != 0 |==> weeks < 0
3749:ROR:!=(int,int):>(int,int):org.joda.time.MutableDateTime@addWeeks(int):731:weeks != 0 |==> weeks > 0
3750:ROR:!=(int,int):TRUE(int,int):org.joda.time.MutableDateTime@addWeeks(int):731:weeks != 0 |==> true
3751:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@addWeeks(int):732:setMillis(getChronology().weeks().add(getMillis(), weeks)) |==> <NO-OP>
3752:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@setDayOfYear(int):744:setMillis(getChronology().dayOfYear().set(getMillis(), dayOfYear)) |==> <NO-OP>
3753:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@setDayOfMonth(int):754:setMillis(getChronology().dayOfMonth().set(getMillis(), dayOfMonth)) |==> <NO-OP>
3754:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@setDayOfWeek(int):764:setMillis(getChronology().dayOfWeek().set(getMillis(), dayOfWeek)) |==> <NO-OP>
3755:LVR:0:POS:org.joda.time.MutableDateTime@addDays(int):774:0 |==> 1
3756:LVR:0:NEG:org.joda.time.MutableDateTime@addDays(int):774:0 |==> -1
3757:ROR:!=(int,int):<(int,int):org.joda.time.MutableDateTime@addDays(int):774:days != 0 |==> days < 0
3758:ROR:!=(int,int):>(int,int):org.joda.time.MutableDateTime@addDays(int):774:days != 0 |==> days > 0
3759:ROR:!=(int,int):TRUE(int,int):org.joda.time.MutableDateTime@addDays(int):774:days != 0 |==> true
3760:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@addDays(int):775:setMillis(getChronology().days().add(getMillis(), days)) |==> <NO-OP>
3761:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@setHourOfDay(int):787:setMillis(getChronology().hourOfDay().set(getMillis(), hourOfDay)) |==> <NO-OP>
3762:LVR:0:POS:org.joda.time.MutableDateTime@addHours(int):797:0 |==> 1
3763:LVR:0:NEG:org.joda.time.MutableDateTime@addHours(int):797:0 |==> -1
3764:ROR:!=(int,int):<(int,int):org.joda.time.MutableDateTime@addHours(int):797:hours != 0 |==> hours < 0
3765:ROR:!=(int,int):>(int,int):org.joda.time.MutableDateTime@addHours(int):797:hours != 0 |==> hours > 0
3766:ROR:!=(int,int):TRUE(int,int):org.joda.time.MutableDateTime@addHours(int):797:hours != 0 |==> true
3767:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@addHours(int):798:setMillis(getChronology().hours().add(getMillis(), hours)) |==> <NO-OP>
3768:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@setMinuteOfDay(int):810:setMillis(getChronology().minuteOfDay().set(getMillis(), minuteOfDay)) |==> <NO-OP>
3769:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@setMinuteOfHour(int):820:setMillis(getChronology().minuteOfHour().set(getMillis(), minuteOfHour)) |==> <NO-OP>
3770:LVR:0:POS:org.joda.time.MutableDateTime@addMinutes(int):830:0 |==> 1
3771:LVR:0:NEG:org.joda.time.MutableDateTime@addMinutes(int):830:0 |==> -1
3772:ROR:!=(int,int):<(int,int):org.joda.time.MutableDateTime@addMinutes(int):830:minutes != 0 |==> minutes < 0
3773:ROR:!=(int,int):>(int,int):org.joda.time.MutableDateTime@addMinutes(int):830:minutes != 0 |==> minutes > 0
3774:ROR:!=(int,int):TRUE(int,int):org.joda.time.MutableDateTime@addMinutes(int):830:minutes != 0 |==> true
3775:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@addMinutes(int):831:setMillis(getChronology().minutes().add(getMillis(), minutes)) |==> <NO-OP>
3776:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@setSecondOfDay(int):843:setMillis(getChronology().secondOfDay().set(getMillis(), secondOfDay)) |==> <NO-OP>
3777:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@setSecondOfMinute(int):853:setMillis(getChronology().secondOfMinute().set(getMillis(), secondOfMinute)) |==> <NO-OP>
3778:LVR:0:POS:org.joda.time.MutableDateTime@addSeconds(int):863:0 |==> 1
3779:LVR:0:NEG:org.joda.time.MutableDateTime@addSeconds(int):863:0 |==> -1
3780:ROR:!=(int,int):<(int,int):org.joda.time.MutableDateTime@addSeconds(int):863:seconds != 0 |==> seconds < 0
3781:ROR:!=(int,int):>(int,int):org.joda.time.MutableDateTime@addSeconds(int):863:seconds != 0 |==> seconds > 0
3782:ROR:!=(int,int):TRUE(int,int):org.joda.time.MutableDateTime@addSeconds(int):863:seconds != 0 |==> true
3783:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@addSeconds(int):864:setMillis(getChronology().seconds().add(getMillis(), seconds)) |==> <NO-OP>
3784:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@setMillisOfDay(int):876:setMillis(getChronology().millisOfDay().set(getMillis(), millisOfDay)) |==> <NO-OP>
3785:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@setMillisOfSecond(int):886:setMillis(getChronology().millisOfSecond().set(getMillis(), millisOfSecond)) |==> <NO-OP>
3786:LVR:0:POS:org.joda.time.MutableDateTime@addMillis(int):898:0 |==> 1
3787:LVR:0:NEG:org.joda.time.MutableDateTime@addMillis(int):898:0 |==> -1
3788:ROR:!=(int,int):<(int,int):org.joda.time.MutableDateTime@addMillis(int):898:millis != 0 |==> millis < 0
3789:ROR:!=(int,int):>(int,int):org.joda.time.MutableDateTime@addMillis(int):898:millis != 0 |==> millis > 0
3790:ROR:!=(int,int):TRUE(int,int):org.joda.time.MutableDateTime@addMillis(int):898:millis != 0 |==> true
3791:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@addMillis(int):899:setMillis(getChronology().millis().add(getMillis(), millis)) |==> <NO-OP>
3792:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@setDate(long):912:setMillis(getChronology().millisOfDay().set(instant, getMillisOfDay())) |==> <NO-OP>
3793:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.MutableDateTime@setDate(org.joda.time.ReadableInstant):931:zone != null |==> true
3794:STD:<ASSIGN>:<NO-OP>:org.joda.time.MutableDateTime@setDate(org.joda.time.ReadableInstant):932:instantMillis = zone.getMillisKeepLocal(getZone(), instantMillis) |==> <NO-OP>
3795:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@setDate(org.joda.time.ReadableInstant):935:setDate(instantMillis) |==> <NO-OP>
3796:LVR:0:POS:org.joda.time.MutableDateTime@setDate(int,int,int):952:0 |==> 1
3797:LVR:0:NEG:org.joda.time.MutableDateTime@setDate(int,int,int):952:0 |==> -1
3798:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@setDate(int,int,int):953:setDate(instantMidnight) |==> <NO-OP>
3799:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@setTime(long):966:setMillis(getChronology().millisOfDay().set(getMillis(), millisOfDay)) |==> <NO-OP>
3800:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.MutableDateTime@setTime(org.joda.time.ReadableInstant):980:zone != null |==> true
3801:STD:<ASSIGN>:<NO-OP>:org.joda.time.MutableDateTime@setTime(org.joda.time.ReadableInstant):981:instantMillis = zone.getMillisKeepLocal(DateTimeZone.UTC, instantMillis) |==> <NO-OP>
3802:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@setTime(org.joda.time.ReadableInstant):983:setTime(instantMillis) |==> <NO-OP>
3803:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@setTime(int,int,int,int):1003:setMillis(instant) |==> <NO-OP>
3804:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime@setDateTime(int,int,int,int,int,int,int):1028:setMillis(instant) |==> <NO-OP>
3805:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.MutableDateTime@property(org.joda.time.DateTimeFieldType):1041:type == null |==> false
3806:LVR:FALSE:TRUE:org.joda.time.MutableDateTime@property(org.joda.time.DateTimeFieldType):1045:false |==> true
3807:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.MutableDateTime@property(org.joda.time.DateTimeFieldType):1045:field.isSupported() == false |==> false
3808:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.MutableDateTime@property(org.joda.time.DateTimeFieldType):1045:field.isSupported() == false |==> field.isSupported()
3809:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.MutableDateTime@property(org.joda.time.DateTimeFieldType):1045:field.isSupported() == false |==> false
3810:STD:<ASSIGN>:<NO-OP>:org.joda.time.MutableDateTime$Property@<init>(org.joda.time.MutableDateTime,org.joda.time.DateTimeField):1290:iInstant = instant |==> <NO-OP>
3811:STD:<ASSIGN>:<NO-OP>:org.joda.time.MutableDateTime$Property@<init>(org.joda.time.MutableDateTime,org.joda.time.DateTimeField):1291:iField = field |==> <NO-OP>
3812:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime$Property@writeObject(java.io.ObjectOutputStream):1298:oos.writeObject(iInstant) |==> <NO-OP>
3813:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime$Property@writeObject(java.io.ObjectOutputStream):1299:oos.writeObject(iField.getType()) |==> <NO-OP>
3814:STD:<ASSIGN>:<NO-OP>:org.joda.time.MutableDateTime$Property@readObject(java.io.ObjectInputStream):1306:iInstant = (MutableDateTime)oos.readObject() |==> <NO-OP>
3815:STD:<ASSIGN>:<NO-OP>:org.joda.time.MutableDateTime$Property@readObject(java.io.ObjectInputStream):1308:iField = type.getField(iInstant.getChronology()) |==> <NO-OP>
3816:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime$Property@add(int):1358:iInstant.setMillis(getField().add(iInstant.getMillis(), value)) |==> <NO-OP>
3817:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime$Property@add(long):1370:iInstant.setMillis(getField().add(iInstant.getMillis(), value)) |==> <NO-OP>
3818:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime$Property@addWrapField(int):1382:iInstant.setMillis(getField().addWrapField(iInstant.getMillis(), value)) |==> <NO-OP>
3819:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime$Property@set(int):1395:iInstant.setMillis(getField().set(iInstant.getMillis(), value)) |==> <NO-OP>
3820:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime$Property@set(java.lang.String,java.util.Locale):1409:iInstant.setMillis(getField().set(iInstant.getMillis(), text, locale)) |==> <NO-OP>
3821:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime$Property@set(java.lang.String):1422:set(text, null) |==> <NO-OP>
3822:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime$Property@roundFloor():1434:iInstant.setMillis(getField().roundFloor(iInstant.getMillis())) |==> <NO-OP>
3823:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime$Property@roundCeiling():1445:iInstant.setMillis(getField().roundCeiling(iInstant.getMillis())) |==> <NO-OP>
3824:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime$Property@roundHalfFloor():1457:iInstant.setMillis(getField().roundHalfFloor(iInstant.getMillis())) |==> <NO-OP>
3825:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime$Property@roundHalfCeiling():1469:iInstant.setMillis(getField().roundHalfCeiling(iInstant.getMillis())) |==> <NO-OP>
3826:STD:<CALL>:<NO-OP>:org.joda.time.MutableDateTime$Property@roundHalfEven():1481:iInstant.setMillis(getField().roundHalfEven(iInstant.getMillis())) |==> <NO-OP>
3827:ROR:==(long,long):<=(long,long):org.joda.time.Instant@withMillis(long):157:newMillis == iMillis |==> newMillis <= iMillis
3828:ROR:==(long,long):>=(long,long):org.joda.time.Instant@withMillis(long):157:newMillis == iMillis |==> newMillis >= iMillis
3829:ROR:==(long,long):FALSE(long,long):org.joda.time.Instant@withMillis(long):157:newMillis == iMillis |==> false
3830:LVR:0:POS:org.joda.time.Instant@withDurationAdded(long,int):171:0 |==> 1
3831:LVR:0:NEG:org.joda.time.Instant@withDurationAdded(long,int):171:0 |==> -1
3832:ROR:==(long,long):<=(long,long):org.joda.time.Instant@withDurationAdded(long,int):171:durationToAdd == 0 |==> durationToAdd <= 0
3833:ROR:==(long,long):>=(long,long):org.joda.time.Instant@withDurationAdded(long,int):171:durationToAdd == 0 |==> durationToAdd >= 0
3834:ROR:==(long,long):FALSE(long,long):org.joda.time.Instant@withDurationAdded(long,int):171:durationToAdd == 0 |==> false
3835:LVR:0:POS:org.joda.time.Instant@withDurationAdded(long,int):171:0 |==> 1
3836:LVR:0:NEG:org.joda.time.Instant@withDurationAdded(long,int):171:0 |==> -1
3837:ROR:==(int,int):<=(int,int):org.joda.time.Instant@withDurationAdded(long,int):171:scalar == 0 |==> scalar <= 0
3838:ROR:==(int,int):>=(int,int):org.joda.time.Instant@withDurationAdded(long,int):171:scalar == 0 |==> scalar >= 0
3839:ROR:==(int,int):FALSE(int,int):org.joda.time.Instant@withDurationAdded(long,int):171:scalar == 0 |==> false
3840:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.Instant@withDurationAdded(long,int):171:durationToAdd == 0 || scalar == 0 |==> durationToAdd == 0 != (scalar == 0)
3841:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.Instant@withDurationAdded(long,int):171:durationToAdd == 0 || scalar == 0 |==> durationToAdd == 0
3842:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.Instant@withDurationAdded(long,int):171:durationToAdd == 0 || scalar == 0 |==> scalar == 0
3843:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.Instant@withDurationAdded(long,int):171:durationToAdd == 0 || scalar == 0 |==> true
3844:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Instant@withDurationAdded(org.joda.time.ReadableDuration,int):189:durationToAdd == null |==> false
3845:LVR:0:POS:org.joda.time.Instant@withDurationAdded(org.joda.time.ReadableDuration,int):189:0 |==> 1
3846:LVR:0:NEG:org.joda.time.Instant@withDurationAdded(org.joda.time.ReadableDuration,int):189:0 |==> -1
3847:ROR:==(int,int):<=(int,int):org.joda.time.Instant@withDurationAdded(org.joda.time.ReadableDuration,int):189:scalar == 0 |==> scalar <= 0
3848:ROR:==(int,int):>=(int,int):org.joda.time.Instant@withDurationAdded(org.joda.time.ReadableDuration,int):189:scalar == 0 |==> scalar >= 0
3849:ROR:==(int,int):FALSE(int,int):org.joda.time.Instant@withDurationAdded(org.joda.time.ReadableDuration,int):189:scalar == 0 |==> false
3850:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.Instant@withDurationAdded(org.joda.time.ReadableDuration,int):189:durationToAdd == null || scalar == 0 |==> durationToAdd == null != (scalar == 0)
3851:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.Instant@withDurationAdded(org.joda.time.ReadableDuration,int):189:durationToAdd == null || scalar == 0 |==> durationToAdd == null
3852:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.Instant@withDurationAdded(org.joda.time.ReadableDuration,int):189:durationToAdd == null || scalar == 0 |==> scalar == 0
3853:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.Instant@withDurationAdded(org.joda.time.ReadableDuration,int):189:durationToAdd == null || scalar == 0 |==> true
3854:LVR:POS:0:org.joda.time.Instant@plus(long):206:1 |==> 0
3855:LVR:POS:NEG:org.joda.time.Instant@plus(long):206:1 |==> -1
3856:LVR:POS:0:org.joda.time.Instant@plus(org.joda.time.ReadableDuration):219:1 |==> 0
3857:LVR:POS:NEG:org.joda.time.Instant@plus(org.joda.time.ReadableDuration):219:1 |==> -1
3858:LVR:NEG:0:org.joda.time.Instant@minus(long):233:-1 |==> 0
3859:LVR:NEG:POS:org.joda.time.Instant@minus(long):233:-1 |==> 1
3860:LVR:NEG:0:org.joda.time.Instant@minus(org.joda.time.ReadableDuration):246:-1 |==> 0
3861:LVR:NEG:POS:org.joda.time.Instant@minus(org.joda.time.ReadableDuration):246:-1 |==> 1
3862:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateMidnight@now(org.joda.time.DateTimeZone):108:zone == null |==> false
3863:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateMidnight@now(org.joda.time.Chronology):124:chronology == null |==> false
3864:LVR:0:POS:org.joda.time.DateMidnight@<init>(int,int,int):317:0 |==> 1
3865:LVR:0:NEG:org.joda.time.DateMidnight@<init>(int,int,int):317:0 |==> -1
3866:LVR:0:POS:org.joda.time.DateMidnight@<init>(int,int,int):317:0 |==> 1
3867:LVR:0:NEG:org.joda.time.DateMidnight@<init>(int,int,int):317:0 |==> -1
3868:LVR:0:POS:org.joda.time.DateMidnight@<init>(int,int,int):317:0 |==> 1
3869:LVR:0:NEG:org.joda.time.DateMidnight@<init>(int,int,int):317:0 |==> -1
3870:LVR:0:POS:org.joda.time.DateMidnight@<init>(int,int,int):317:0 |==> 1
3871:LVR:0:NEG:org.joda.time.DateMidnight@<init>(int,int,int):317:0 |==> -1
3872:LVR:0:POS:org.joda.time.DateMidnight@<init>(int,int,int,org.joda.time.DateTimeZone):333:0 |==> 1
3873:LVR:0:NEG:org.joda.time.DateMidnight@<init>(int,int,int,org.joda.time.DateTimeZone):333:0 |==> -1
3874:LVR:0:POS:org.joda.time.DateMidnight@<init>(int,int,int,org.joda.time.DateTimeZone):333:0 |==> 1
3875:LVR:0:NEG:org.joda.time.DateMidnight@<init>(int,int,int,org.joda.time.DateTimeZone):333:0 |==> -1
3876:LVR:0:POS:org.joda.time.DateMidnight@<init>(int,int,int,org.joda.time.DateTimeZone):333:0 |==> 1
3877:LVR:0:NEG:org.joda.time.DateMidnight@<init>(int,int,int,org.joda.time.DateTimeZone):333:0 |==> -1
3878:LVR:0:POS:org.joda.time.DateMidnight@<init>(int,int,int,org.joda.time.DateTimeZone):333:0 |==> 1
3879:LVR:0:NEG:org.joda.time.DateMidnight@<init>(int,int,int,org.joda.time.DateTimeZone):333:0 |==> -1
3880:LVR:0:POS:org.joda.time.DateMidnight@<init>(int,int,int,org.joda.time.Chronology):350:0 |==> 1
3881:LVR:0:NEG:org.joda.time.DateMidnight@<init>(int,int,int,org.joda.time.Chronology):350:0 |==> -1
3882:LVR:0:POS:org.joda.time.DateMidnight@<init>(int,int,int,org.joda.time.Chronology):350:0 |==> 1
3883:LVR:0:NEG:org.joda.time.DateMidnight@<init>(int,int,int,org.joda.time.Chronology):350:0 |==> -1
3884:LVR:0:POS:org.joda.time.DateMidnight@<init>(int,int,int,org.joda.time.Chronology):350:0 |==> 1
3885:LVR:0:NEG:org.joda.time.DateMidnight@<init>(int,int,int,org.joda.time.Chronology):350:0 |==> -1
3886:LVR:0:POS:org.joda.time.DateMidnight@<init>(int,int,int,org.joda.time.Chronology):350:0 |==> 1
3887:LVR:0:NEG:org.joda.time.DateMidnight@<init>(int,int,int,org.joda.time.Chronology):350:0 |==> -1
3888:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateMidnight@withMillis(long):377:newMillis = checkInstant(newMillis, chrono) |==> <NO-OP>
3889:ROR:==(long,long):<=(long,long):org.joda.time.DateMidnight@withMillis(long):378:newMillis == getMillis() |==> newMillis <= getMillis()
3890:ROR:==(long,long):>=(long,long):org.joda.time.DateMidnight@withMillis(long):378:newMillis == getMillis() |==> newMillis >= getMillis()
3891:ROR:==(long,long):FALSE(long,long):org.joda.time.DateMidnight@withMillis(long):378:newMillis == getMillis() |==> false
3892:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateMidnight@withChronology(org.joda.time.Chronology):403:newChronology == getChronology() |==> false
3893:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateMidnight@withZoneRetainFields(org.joda.time.DateTimeZone):415:newZone = DateTimeUtils.getZone(newZone) |==> <NO-OP>
3894:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateMidnight@withZoneRetainFields(org.joda.time.DateTimeZone):417:newZone == originalZone |==> false
3895:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateMidnight@withFields(org.joda.time.ReadablePartial):439:partial == null |==> false
3896:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateMidnight@withField(org.joda.time.DateTimeFieldType,int):465:fieldType == null |==> false
3897:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateMidnight@withFieldAdded(org.joda.time.DurationFieldType,int):491:fieldType == null |==> false
3898:LVR:0:POS:org.joda.time.DateMidnight@withFieldAdded(org.joda.time.DurationFieldType,int):494:0 |==> 1
3899:LVR:0:NEG:org.joda.time.DateMidnight@withFieldAdded(org.joda.time.DurationFieldType,int):494:0 |==> -1
3900:ROR:==(int,int):<=(int,int):org.joda.time.DateMidnight@withFieldAdded(org.joda.time.DurationFieldType,int):494:amount == 0 |==> amount <= 0
3901:ROR:==(int,int):>=(int,int):org.joda.time.DateMidnight@withFieldAdded(org.joda.time.DurationFieldType,int):494:amount == 0 |==> amount >= 0
3902:ROR:==(int,int):FALSE(int,int):org.joda.time.DateMidnight@withFieldAdded(org.joda.time.DurationFieldType,int):494:amount == 0 |==> false
3903:LVR:0:POS:org.joda.time.DateMidnight@withDurationAdded(long,int):513:0 |==> 1
3904:LVR:0:NEG:org.joda.time.DateMidnight@withDurationAdded(long,int):513:0 |==> -1
3905:ROR:==(long,long):<=(long,long):org.joda.time.DateMidnight@withDurationAdded(long,int):513:durationToAdd == 0 |==> durationToAdd <= 0
3906:ROR:==(long,long):>=(long,long):org.joda.time.DateMidnight@withDurationAdded(long,int):513:durationToAdd == 0 |==> durationToAdd >= 0
3907:ROR:==(long,long):FALSE(long,long):org.joda.time.DateMidnight@withDurationAdded(long,int):513:durationToAdd == 0 |==> false
3908:LVR:0:POS:org.joda.time.DateMidnight@withDurationAdded(long,int):513:0 |==> 1
3909:LVR:0:NEG:org.joda.time.DateMidnight@withDurationAdded(long,int):513:0 |==> -1
3910:ROR:==(int,int):<=(int,int):org.joda.time.DateMidnight@withDurationAdded(long,int):513:scalar == 0 |==> scalar <= 0
3911:ROR:==(int,int):>=(int,int):org.joda.time.DateMidnight@withDurationAdded(long,int):513:scalar == 0 |==> scalar >= 0
3912:ROR:==(int,int):FALSE(int,int):org.joda.time.DateMidnight@withDurationAdded(long,int):513:scalar == 0 |==> false
3913:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateMidnight@withDurationAdded(long,int):513:durationToAdd == 0 || scalar == 0 |==> durationToAdd == 0 != (scalar == 0)
3914:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateMidnight@withDurationAdded(long,int):513:durationToAdd == 0 || scalar == 0 |==> durationToAdd == 0
3915:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateMidnight@withDurationAdded(long,int):513:durationToAdd == 0 || scalar == 0 |==> scalar == 0
3916:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateMidnight@withDurationAdded(long,int):513:durationToAdd == 0 || scalar == 0 |==> true
3917:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateMidnight@withDurationAdded(org.joda.time.ReadableDuration,int):531:durationToAdd == null |==> false
3918:LVR:0:POS:org.joda.time.DateMidnight@withDurationAdded(org.joda.time.ReadableDuration,int):531:0 |==> 1
3919:LVR:0:NEG:org.joda.time.DateMidnight@withDurationAdded(org.joda.time.ReadableDuration,int):531:0 |==> -1
3920:ROR:==(int,int):<=(int,int):org.joda.time.DateMidnight@withDurationAdded(org.joda.time.ReadableDuration,int):531:scalar == 0 |==> scalar <= 0
3921:ROR:==(int,int):>=(int,int):org.joda.time.DateMidnight@withDurationAdded(org.joda.time.ReadableDuration,int):531:scalar == 0 |==> scalar >= 0
3922:ROR:==(int,int):FALSE(int,int):org.joda.time.DateMidnight@withDurationAdded(org.joda.time.ReadableDuration,int):531:scalar == 0 |==> false
3923:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateMidnight@withDurationAdded(org.joda.time.ReadableDuration,int):531:durationToAdd == null || scalar == 0 |==> durationToAdd == null != (scalar == 0)
3924:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateMidnight@withDurationAdded(org.joda.time.ReadableDuration,int):531:durationToAdd == null || scalar == 0 |==> durationToAdd == null
3925:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateMidnight@withDurationAdded(org.joda.time.ReadableDuration,int):531:durationToAdd == null || scalar == 0 |==> scalar == 0
3926:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateMidnight@withDurationAdded(org.joda.time.ReadableDuration,int):531:durationToAdd == null || scalar == 0 |==> true
3927:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateMidnight@withPeriodAdded(org.joda.time.ReadablePeriod,int):553:period == null |==> false
3928:LVR:0:POS:org.joda.time.DateMidnight@withPeriodAdded(org.joda.time.ReadablePeriod,int):553:0 |==> 1
3929:LVR:0:NEG:org.joda.time.DateMidnight@withPeriodAdded(org.joda.time.ReadablePeriod,int):553:0 |==> -1
3930:ROR:==(int,int):<=(int,int):org.joda.time.DateMidnight@withPeriodAdded(org.joda.time.ReadablePeriod,int):553:scalar == 0 |==> scalar <= 0
3931:ROR:==(int,int):>=(int,int):org.joda.time.DateMidnight@withPeriodAdded(org.joda.time.ReadablePeriod,int):553:scalar == 0 |==> scalar >= 0
3932:ROR:==(int,int):FALSE(int,int):org.joda.time.DateMidnight@withPeriodAdded(org.joda.time.ReadablePeriod,int):553:scalar == 0 |==> false
3933:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateMidnight@withPeriodAdded(org.joda.time.ReadablePeriod,int):553:period == null || scalar == 0 |==> period == null != (scalar == 0)
3934:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateMidnight@withPeriodAdded(org.joda.time.ReadablePeriod,int):553:period == null || scalar == 0 |==> period == null
3935:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateMidnight@withPeriodAdded(org.joda.time.ReadablePeriod,int):553:period == null || scalar == 0 |==> scalar == 0
3936:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateMidnight@withPeriodAdded(org.joda.time.ReadablePeriod,int):553:period == null || scalar == 0 |==> true
3937:LVR:POS:0:org.joda.time.DateMidnight@plus(long):571:1 |==> 0
3938:LVR:POS:NEG:org.joda.time.DateMidnight@plus(long):571:1 |==> -1
3939:LVR:POS:0:org.joda.time.DateMidnight@plus(org.joda.time.ReadableDuration):584:1 |==> 0
3940:LVR:POS:NEG:org.joda.time.DateMidnight@plus(org.joda.time.ReadableDuration):584:1 |==> -1
3941:LVR:POS:0:org.joda.time.DateMidnight@plus(org.joda.time.ReadablePeriod):601:1 |==> 0
3942:LVR:POS:NEG:org.joda.time.DateMidnight@plus(org.joda.time.ReadablePeriod):601:1 |==> -1
3943:LVR:0:POS:org.joda.time.DateMidnight@plusYears(int):622:0 |==> 1
3944:LVR:0:NEG:org.joda.time.DateMidnight@plusYears(int):622:0 |==> -1
3945:ROR:==(int,int):<=(int,int):org.joda.time.DateMidnight@plusYears(int):622:years == 0 |==> years <= 0
3946:ROR:==(int,int):>=(int,int):org.joda.time.DateMidnight@plusYears(int):622:years == 0 |==> years >= 0
3947:ROR:==(int,int):FALSE(int,int):org.joda.time.DateMidnight@plusYears(int):622:years == 0 |==> false
3948:LVR:0:POS:org.joda.time.DateMidnight@plusMonths(int):646:0 |==> 1
3949:LVR:0:NEG:org.joda.time.DateMidnight@plusMonths(int):646:0 |==> -1
3950:ROR:==(int,int):<=(int,int):org.joda.time.DateMidnight@plusMonths(int):646:months == 0 |==> months <= 0
3951:ROR:==(int,int):>=(int,int):org.joda.time.DateMidnight@plusMonths(int):646:months == 0 |==> months >= 0
3952:ROR:==(int,int):FALSE(int,int):org.joda.time.DateMidnight@plusMonths(int):646:months == 0 |==> false
3953:LVR:0:POS:org.joda.time.DateMidnight@plusWeeks(int):670:0 |==> 1
3954:LVR:0:NEG:org.joda.time.DateMidnight@plusWeeks(int):670:0 |==> -1
3955:ROR:==(int,int):<=(int,int):org.joda.time.DateMidnight@plusWeeks(int):670:weeks == 0 |==> weeks <= 0
3956:ROR:==(int,int):>=(int,int):org.joda.time.DateMidnight@plusWeeks(int):670:weeks == 0 |==> weeks >= 0
3957:ROR:==(int,int):FALSE(int,int):org.joda.time.DateMidnight@plusWeeks(int):670:weeks == 0 |==> false
3958:LVR:0:POS:org.joda.time.DateMidnight@plusDays(int):694:0 |==> 1
3959:LVR:0:NEG:org.joda.time.DateMidnight@plusDays(int):694:0 |==> -1
3960:ROR:==(int,int):<=(int,int):org.joda.time.DateMidnight@plusDays(int):694:days == 0 |==> days <= 0
3961:ROR:==(int,int):>=(int,int):org.joda.time.DateMidnight@plusDays(int):694:days == 0 |==> days >= 0
3962:ROR:==(int,int):FALSE(int,int):org.joda.time.DateMidnight@plusDays(int):694:days == 0 |==> false
3963:LVR:NEG:0:org.joda.time.DateMidnight@minus(long):712:-1 |==> 0
3964:LVR:NEG:POS:org.joda.time.DateMidnight@minus(long):712:-1 |==> 1
3965:LVR:NEG:0:org.joda.time.DateMidnight@minus(org.joda.time.ReadableDuration):725:-1 |==> 0
3966:LVR:NEG:POS:org.joda.time.DateMidnight@minus(org.joda.time.ReadableDuration):725:-1 |==> 1
3967:LVR:NEG:0:org.joda.time.DateMidnight@minus(org.joda.time.ReadablePeriod):742:-1 |==> 0
3968:LVR:NEG:POS:org.joda.time.DateMidnight@minus(org.joda.time.ReadablePeriod):742:-1 |==> 1
3969:LVR:0:POS:org.joda.time.DateMidnight@minusYears(int):763:0 |==> 1
3970:LVR:0:NEG:org.joda.time.DateMidnight@minusYears(int):763:0 |==> -1
3971:ROR:==(int,int):<=(int,int):org.joda.time.DateMidnight@minusYears(int):763:years == 0 |==> years <= 0
3972:ROR:==(int,int):>=(int,int):org.joda.time.DateMidnight@minusYears(int):763:years == 0 |==> years >= 0
3973:ROR:==(int,int):FALSE(int,int):org.joda.time.DateMidnight@minusYears(int):763:years == 0 |==> false
3974:LVR:0:POS:org.joda.time.DateMidnight@minusMonths(int):787:0 |==> 1
3975:LVR:0:NEG:org.joda.time.DateMidnight@minusMonths(int):787:0 |==> -1
3976:ROR:==(int,int):<=(int,int):org.joda.time.DateMidnight@minusMonths(int):787:months == 0 |==> months <= 0
3977:ROR:==(int,int):>=(int,int):org.joda.time.DateMidnight@minusMonths(int):787:months == 0 |==> months >= 0
3978:ROR:==(int,int):FALSE(int,int):org.joda.time.DateMidnight@minusMonths(int):787:months == 0 |==> false
3979:LVR:0:POS:org.joda.time.DateMidnight@minusWeeks(int):811:0 |==> 1
3980:LVR:0:NEG:org.joda.time.DateMidnight@minusWeeks(int):811:0 |==> -1
3981:ROR:==(int,int):<=(int,int):org.joda.time.DateMidnight@minusWeeks(int):811:weeks == 0 |==> weeks <= 0
3982:ROR:==(int,int):>=(int,int):org.joda.time.DateMidnight@minusWeeks(int):811:weeks == 0 |==> weeks >= 0
3983:ROR:==(int,int):FALSE(int,int):org.joda.time.DateMidnight@minusWeeks(int):811:weeks == 0 |==> false
3984:LVR:0:POS:org.joda.time.DateMidnight@minusDays(int):835:0 |==> 1
3985:LVR:0:NEG:org.joda.time.DateMidnight@minusDays(int):835:0 |==> -1
3986:ROR:==(int,int):<=(int,int):org.joda.time.DateMidnight@minusDays(int):835:days == 0 |==> days <= 0
3987:ROR:==(int,int):>=(int,int):org.joda.time.DateMidnight@minusDays(int):835:days == 0 |==> days >= 0
3988:ROR:==(int,int):FALSE(int,int):org.joda.time.DateMidnight@minusDays(int):835:days == 0 |==> false
3989:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateMidnight@property(org.joda.time.DateTimeFieldType):851:type == null |==> false
3990:LVR:FALSE:TRUE:org.joda.time.DateMidnight@property(org.joda.time.DateTimeFieldType):855:false |==> true
3991:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateMidnight@property(org.joda.time.DateTimeFieldType):855:field.isSupported() == false |==> false
3992:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateMidnight@property(org.joda.time.DateTimeFieldType):855:field.isSupported() == false |==> field.isSupported()
3993:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateMidnight@property(org.joda.time.DateTimeFieldType):855:field.isSupported() == false |==> false
3994:LVR:POS:0:org.joda.time.DateMidnight@toInterval():897:1 |==> 0
3995:LVR:POS:NEG:org.joda.time.DateMidnight@toInterval():897:1 |==> -1
3996:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateMidnight$Property@<init>(org.joda.time.DateMidnight,org.joda.time.DateTimeField):1237:iInstant = instant |==> <NO-OP>
3997:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateMidnight$Property@<init>(org.joda.time.DateMidnight,org.joda.time.DateTimeField):1238:iField = field |==> <NO-OP>
3998:STD:<CALL>:<NO-OP>:org.joda.time.DateMidnight$Property@writeObject(java.io.ObjectOutputStream):1245:oos.writeObject(iInstant) |==> <NO-OP>
3999:STD:<CALL>:<NO-OP>:org.joda.time.DateMidnight$Property@writeObject(java.io.ObjectOutputStream):1246:oos.writeObject(iField.getType()) |==> <NO-OP>
4000:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateMidnight$Property@readObject(java.io.ObjectInputStream):1253:iInstant = (DateMidnight)oos.readObject() |==> <NO-OP>
4001:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateMidnight$Property@readObject(java.io.ObjectInputStream):1255:iField = type.getField(iInstant.getChronology()) |==> <NO-OP>
4002:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.YearMonthDay@fromCalendarFields(java.util.Calendar):106:calendar == null |==> false
4003:LVR:POS:0:org.joda.time.YearMonthDay@fromCalendarFields(java.util.Calendar):111:1 |==> 0
4004:LVR:POS:NEG:org.joda.time.YearMonthDay@fromCalendarFields(java.util.Calendar):111:1 |==> -1
4005:AOR:+(int,int):%(int,int):org.joda.time.YearMonthDay@fromCalendarFields(java.util.Calendar):111:calendar.get(Calendar.MONTH) + 1 |==> calendar.get(Calendar.MONTH) % 1
4006:AOR:+(int,int):*(int,int):org.joda.time.YearMonthDay@fromCalendarFields(java.util.Calendar):111:calendar.get(Calendar.MONTH) + 1 |==> calendar.get(Calendar.MONTH) * 1
4007:AOR:+(int,int):-(int,int):org.joda.time.YearMonthDay@fromCalendarFields(java.util.Calendar):111:calendar.get(Calendar.MONTH) + 1 |==> calendar.get(Calendar.MONTH) - 1
4008:AOR:+(int,int):/(int,int):org.joda.time.YearMonthDay@fromCalendarFields(java.util.Calendar):111:calendar.get(Calendar.MONTH) + 1 |==> calendar.get(Calendar.MONTH) / 1
4009:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.YearMonthDay@fromDateFields(java.util.Date):133:date == null |==> false
4010:LVR:POS:0:org.joda.time.YearMonthDay@fromDateFields(java.util.Date):137:1900 |==> 0
4011:LVR:POS:NEG:org.joda.time.YearMonthDay@fromDateFields(java.util.Date):137:1900 |==> -1900
4012:AOR:+(int,int):%(int,int):org.joda.time.YearMonthDay@fromDateFields(java.util.Date):137:date.getYear() + 1900 |==> date.getYear() % 1900
4013:AOR:+(int,int):*(int,int):org.joda.time.YearMonthDay@fromDateFields(java.util.Date):137:date.getYear() + 1900 |==> date.getYear() * 1900
4014:AOR:+(int,int):-(int,int):org.joda.time.YearMonthDay@fromDateFields(java.util.Date):137:date.getYear() + 1900 |==> date.getYear() - 1900
4015:AOR:+(int,int):/(int,int):org.joda.time.YearMonthDay@fromDateFields(java.util.Date):137:date.getYear() + 1900 |==> date.getYear() / 1900
4016:LVR:POS:0:org.joda.time.YearMonthDay@fromDateFields(java.util.Date):138:1 |==> 0
4017:LVR:POS:NEG:org.joda.time.YearMonthDay@fromDateFields(java.util.Date):138:1 |==> -1
4018:AOR:+(int,int):%(int,int):org.joda.time.YearMonthDay@fromDateFields(java.util.Date):138:date.getMonth() + 1 |==> date.getMonth() % 1
4019:AOR:+(int,int):*(int,int):org.joda.time.YearMonthDay@fromDateFields(java.util.Date):138:date.getMonth() + 1 |==> date.getMonth() * 1
4020:AOR:+(int,int):-(int,int):org.joda.time.YearMonthDay@fromDateFields(java.util.Date):138:date.getMonth() + 1 |==> date.getMonth() - 1
4021:AOR:+(int,int):/(int,int):org.joda.time.YearMonthDay@fromDateFields(java.util.Date):138:date.getMonth() + 1 |==> date.getMonth() / 1
4022:LVR:POS:0:org.joda.time.YearMonthDay@size():318:3 |==> 0
4023:LVR:POS:NEG:org.joda.time.YearMonthDay@size():318:3 |==> -3
4024:STD:<ASSIGN>:<NO-OP>:org.joda.time.YearMonthDay@withChronologyRetainFields(org.joda.time.Chronology):381:newChronology = DateTimeUtils.getChronology(newChronology) |==> <NO-OP>
4025:STD:<ASSIGN>:<NO-OP>:org.joda.time.YearMonthDay@withChronologyRetainFields(org.joda.time.Chronology):382:newChronology = newChronology.withUTC() |==> <NO-OP>
4026:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.YearMonthDay@withChronologyRetainFields(org.joda.time.Chronology):383:newChronology == getChronology() |==> false
4027:STD:<CALL>:<NO-OP>:org.joda.time.YearMonthDay@withChronologyRetainFields(org.joda.time.Chronology):387:newChronology.validate(newYearMonthDay, getValues()) |==> <NO-OP>
4028:ROR:==(int,int):<=(int,int):org.joda.time.YearMonthDay@withField(org.joda.time.DateTimeFieldType,int):412:value == getValue(index) |==> value <= getValue(index)
4029:ROR:==(int,int):>=(int,int):org.joda.time.YearMonthDay@withField(org.joda.time.DateTimeFieldType,int):412:value == getValue(index) |==> value >= getValue(index)
4030:ROR:==(int,int):FALSE(int,int):org.joda.time.YearMonthDay@withField(org.joda.time.DateTimeFieldType,int):412:value == getValue(index) |==> false
4031:STD:<ASSIGN>:<NO-OP>:org.joda.time.YearMonthDay@withField(org.joda.time.DateTimeFieldType,int):416:newValues = getField(index).set(this, index, newValues, value) |==> <NO-OP>
4032:LVR:0:POS:org.joda.time.YearMonthDay@withFieldAdded(org.joda.time.DurationFieldType,int):440:0 |==> 1
4033:LVR:0:NEG:org.joda.time.YearMonthDay@withFieldAdded(org.joda.time.DurationFieldType,int):440:0 |==> -1
4034:ROR:==(int,int):<=(int,int):org.joda.time.YearMonthDay@withFieldAdded(org.joda.time.DurationFieldType,int):440:amount == 0 |==> amount <= 0
4035:ROR:==(int,int):>=(int,int):org.joda.time.YearMonthDay@withFieldAdded(org.joda.time.DurationFieldType,int):440:amount == 0 |==> amount >= 0
4036:ROR:==(int,int):FALSE(int,int):org.joda.time.YearMonthDay@withFieldAdded(org.joda.time.DurationFieldType,int):440:amount == 0 |==> false
4037:STD:<ASSIGN>:<NO-OP>:org.joda.time.YearMonthDay@withFieldAdded(org.joda.time.DurationFieldType,int):444:newValues = getField(index).add(this, index, newValues, amount) |==> <NO-OP>
4038:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.YearMonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):465:period == null |==> false
4039:LVR:0:POS:org.joda.time.YearMonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):465:0 |==> 1
4040:LVR:0:NEG:org.joda.time.YearMonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):465:0 |==> -1
4041:ROR:==(int,int):<=(int,int):org.joda.time.YearMonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):465:scalar == 0 |==> scalar <= 0
4042:ROR:==(int,int):>=(int,int):org.joda.time.YearMonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):465:scalar == 0 |==> scalar >= 0
4043:ROR:==(int,int):FALSE(int,int):org.joda.time.YearMonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):465:scalar == 0 |==> false
4044:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.YearMonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):465:period == null || scalar == 0 |==> period == null != (scalar == 0)
4045:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.YearMonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):465:period == null || scalar == 0 |==> period == null
4046:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.YearMonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):465:period == null || scalar == 0 |==> scalar == 0
4047:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.YearMonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):465:period == null || scalar == 0 |==> true
4048:LVR:0:POS:org.joda.time.YearMonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):469:0 |==> 1
4049:LVR:0:NEG:org.joda.time.YearMonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):469:0 |==> -1
4050:ROR:<(int,int):!=(int,int):org.joda.time.YearMonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):469:i < period.size() |==> i != period.size()
4051:ROR:<(int,int):<=(int,int):org.joda.time.YearMonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):469:i < period.size() |==> i <= period.size()
4052:ROR:<(int,int):FALSE(int,int):org.joda.time.YearMonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):469:i < period.size() |==> false
4053:LVR:0:POS:org.joda.time.YearMonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):472:0 |==> 1
4054:LVR:0:NEG:org.joda.time.YearMonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):472:0 |==> -1
4055:ROR:>=(int,int):==(int,int):org.joda.time.YearMonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):472:index >= 0 |==> index == 0
4056:ROR:>=(int,int):>(int,int):org.joda.time.YearMonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):472:index >= 0 |==> index > 0
4057:ROR:>=(int,int):TRUE(int,int):org.joda.time.YearMonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):472:index >= 0 |==> true
4058:STD:<ASSIGN>:<NO-OP>:org.joda.time.YearMonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):473:newValues = getField(index).add(this, index, newValues, FieldUtils.safeMultiply(period.getValue(i), scalar)) |==> <NO-OP>
4059:LVR:POS:0:org.joda.time.YearMonthDay@plus(org.joda.time.ReadablePeriod):495:1 |==> 0
4060:LVR:POS:NEG:org.joda.time.YearMonthDay@plus(org.joda.time.ReadablePeriod):495:1 |==> -1
4061:LVR:NEG:0:org.joda.time.YearMonthDay@minus(org.joda.time.ReadablePeriod):574:-1 |==> 0
4062:LVR:NEG:POS:org.joda.time.YearMonthDay@minus(org.joda.time.ReadablePeriod):574:-1 |==> 1
4063:LVR:0:POS:org.joda.time.YearMonthDay@toDateTimeAtMidnight(org.joda.time.DateTimeZone):685:0 |==> 1
4064:LVR:0:NEG:org.joda.time.YearMonthDay@toDateTimeAtMidnight(org.joda.time.DateTimeZone):685:0 |==> -1
4065:LVR:0:POS:org.joda.time.YearMonthDay@toDateTimeAtMidnight(org.joda.time.DateTimeZone):685:0 |==> 1
4066:LVR:0:NEG:org.joda.time.YearMonthDay@toDateTimeAtMidnight(org.joda.time.DateTimeZone):685:0 |==> -1
4067:LVR:0:POS:org.joda.time.YearMonthDay@toDateTimeAtMidnight(org.joda.time.DateTimeZone):685:0 |==> 1
4068:LVR:0:NEG:org.joda.time.YearMonthDay@toDateTimeAtMidnight(org.joda.time.DateTimeZone):685:0 |==> -1
4069:LVR:0:POS:org.joda.time.YearMonthDay@toDateTimeAtMidnight(org.joda.time.DateTimeZone):685:0 |==> 1
4070:LVR:0:NEG:org.joda.time.YearMonthDay@toDateTimeAtMidnight(org.joda.time.DateTimeZone):685:0 |==> -1
4071:STD:<ASSIGN>:<NO-OP>:org.joda.time.YearMonthDay@toDateTime(org.joda.time.TimeOfDay,org.joda.time.DateTimeZone):772:instant = chrono.set(this, instant) |==> <NO-OP>
4072:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.YearMonthDay@toDateTime(org.joda.time.TimeOfDay,org.joda.time.DateTimeZone):773:time != null |==> true
4073:STD:<ASSIGN>:<NO-OP>:org.joda.time.YearMonthDay@toDateTime(org.joda.time.TimeOfDay,org.joda.time.DateTimeZone):774:instant = chrono.set(time, instant) |==> <NO-OP>
4074:STD:<ASSIGN>:<NO-OP>:org.joda.time.YearMonthDay@toInterval(org.joda.time.DateTimeZone):797:zone = DateTimeUtils.getZone(zone) |==> <NO-OP>
4075:STD:<ASSIGN>:<NO-OP>:org.joda.time.YearMonthDay@withYear(int):844:newValues = getChronology().year().set(this, YEAR, newValues, year) |==> <NO-OP>
4076:STD:<ASSIGN>:<NO-OP>:org.joda.time.YearMonthDay@withMonthOfYear(int):862:newValues = getChronology().monthOfYear().set(this, MONTH_OF_YEAR, newValues, monthOfYear) |==> <NO-OP>
4077:STD:<ASSIGN>:<NO-OP>:org.joda.time.YearMonthDay@withDayOfMonth(int):880:newValues = getChronology().dayOfMonth().set(this, DAY_OF_MONTH, newValues, dayOfMonth) |==> <NO-OP>
4078:STD:<ASSIGN>:<NO-OP>:org.joda.time.YearMonthDay$Property@addToCopy(int):1011:newValues = getField().add(iYearMonthDay, iFieldIndex, newValues, valueToAdd) |==> <NO-OP>
4079:STD:<ASSIGN>:<NO-OP>:org.joda.time.YearMonthDay$Property@addWrapFieldToCopy(int):1035:newValues = getField().addWrapField(iYearMonthDay, iFieldIndex, newValues, valueToAdd) |==> <NO-OP>
4080:STD:<ASSIGN>:<NO-OP>:org.joda.time.YearMonthDay$Property@setCopy(int):1052:newValues = getField().set(iYearMonthDay, iFieldIndex, newValues, value) |==> <NO-OP>
4081:STD:<ASSIGN>:<NO-OP>:org.joda.time.YearMonthDay$Property@setCopy(java.lang.String,java.util.Locale):1069:newValues = getField().set(iYearMonthDay, iFieldIndex, newValues, text, locale) |==> <NO-OP>
4082:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePartial@<init>(long,org.joda.time.Chronology):109:chronology = DateTimeUtils.getChronology(chronology) |==> <NO-OP>
4083:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePartial@<init>(java.lang.Object,org.joda.time.Chronology):133:chronology = converter.getChronology(instant, chronology) |==> <NO-OP>
4084:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePartial@<init>(java.lang.Object,org.joda.time.Chronology):134:chronology = DateTimeUtils.getChronology(chronology) |==> <NO-OP>
4085:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePartial@<init>(java.lang.Object,org.joda.time.Chronology,org.joda.time.format.DateTimeFormatter):160:chronology = converter.getChronology(instant, chronology) |==> <NO-OP>
4086:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePartial@<init>(java.lang.Object,org.joda.time.Chronology,org.joda.time.format.DateTimeFormatter):161:chronology = DateTimeUtils.getChronology(chronology) |==> <NO-OP>
4087:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePartial@<init>(int[],org.joda.time.Chronology):181:chronology = DateTimeUtils.getChronology(chronology) |==> <NO-OP>
4088:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePartial@<init>(int[],org.joda.time.Chronology):183:chronology.validate(this, values) |==> <NO-OP>
4089:LVR:0:POS:org.joda.time.base.BasePartial@setValue(int,int):267:0 |==> 1
4090:LVR:0:NEG:org.joda.time.base.BasePartial@setValue(int,int):267:0 |==> -1
4091:LVR:0:POS:org.joda.time.base.BasePartial@setValue(int,int):267:0 |==> 1
4092:LVR:0:NEG:org.joda.time.base.BasePartial@setValue(int,int):267:0 |==> -1
4093:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePartial@setValue(int,int):267:System.arraycopy(values, 0, iValues, 0, iValues.length) |==> <NO-OP>
4094:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePartial@setValues(int[]):280:getChronology().validate(this, values) |==> <NO-OP>
4095:LVR:0:POS:org.joda.time.base.BasePartial@setValues(int[]):281:0 |==> 1
4096:LVR:0:NEG:org.joda.time.base.BasePartial@setValues(int[]):281:0 |==> -1
4097:LVR:0:POS:org.joda.time.base.BasePartial@setValues(int[]):281:0 |==> 1
4098:LVR:0:NEG:org.joda.time.base.BasePartial@setValues(int[]):281:0 |==> -1
4099:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePartial@setValues(int[]):281:System.arraycopy(values, 0, iValues, 0, iValues.length) |==> <NO-OP>
4100:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.BasePartial@toString(java.lang.String):292:pattern == null |==> false
4101:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.BasePartial@toString(java.lang.String,java.util.Locale):306:pattern == null |==> false
4102:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.AbstractPartialFieldProperty@compareTo(org.joda.time.ReadableInstant):271:instant == null |==> false
4103:ROR:<(int,int):!=(int,int):org.joda.time.field.AbstractPartialFieldProperty@compareTo(org.joda.time.ReadableInstant):276:thisValue < otherValue |==> thisValue != otherValue
4104:ROR:<(int,int):<=(int,int):org.joda.time.field.AbstractPartialFieldProperty@compareTo(org.joda.time.ReadableInstant):276:thisValue < otherValue |==> thisValue <= otherValue
4105:ROR:<(int,int):FALSE(int,int):org.joda.time.field.AbstractPartialFieldProperty@compareTo(org.joda.time.ReadableInstant):276:thisValue < otherValue |==> false
4106:LVR:NEG:0:org.joda.time.field.AbstractPartialFieldProperty@compareTo(org.joda.time.ReadableInstant):277:-1 |==> 0
4107:LVR:NEG:POS:org.joda.time.field.AbstractPartialFieldProperty@compareTo(org.joda.time.ReadableInstant):277:-1 |==> 1
4108:ROR:>(int,int):!=(int,int):org.joda.time.field.AbstractPartialFieldProperty@compareTo(org.joda.time.ReadableInstant):278:thisValue > otherValue |==> thisValue != otherValue
4109:ROR:>(int,int):>=(int,int):org.joda.time.field.AbstractPartialFieldProperty@compareTo(org.joda.time.ReadableInstant):278:thisValue > otherValue |==> thisValue >= otherValue
4110:ROR:>(int,int):FALSE(int,int):org.joda.time.field.AbstractPartialFieldProperty@compareTo(org.joda.time.ReadableInstant):278:thisValue > otherValue |==> false
4111:LVR:POS:0:org.joda.time.field.AbstractPartialFieldProperty@compareTo(org.joda.time.ReadableInstant):279:1 |==> 0
4112:LVR:POS:NEG:org.joda.time.field.AbstractPartialFieldProperty@compareTo(org.joda.time.ReadableInstant):279:1 |==> -1
4113:LVR:0:POS:org.joda.time.field.AbstractPartialFieldProperty@compareTo(org.joda.time.ReadableInstant):281:0 |==> 1
4114:LVR:0:NEG:org.joda.time.field.AbstractPartialFieldProperty@compareTo(org.joda.time.ReadableInstant):281:0 |==> -1
4115:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.AbstractPartialFieldProperty@compareTo(org.joda.time.ReadablePartial):300:partial == null |==> false
4116:ROR:<(int,int):!=(int,int):org.joda.time.field.AbstractPartialFieldProperty@compareTo(org.joda.time.ReadablePartial):305:thisValue < otherValue |==> thisValue != otherValue
4117:ROR:<(int,int):<=(int,int):org.joda.time.field.AbstractPartialFieldProperty@compareTo(org.joda.time.ReadablePartial):305:thisValue < otherValue |==> thisValue <= otherValue
4118:ROR:<(int,int):FALSE(int,int):org.joda.time.field.AbstractPartialFieldProperty@compareTo(org.joda.time.ReadablePartial):305:thisValue < otherValue |==> false
4119:LVR:NEG:0:org.joda.time.field.AbstractPartialFieldProperty@compareTo(org.joda.time.ReadablePartial):306:-1 |==> 0
4120:LVR:NEG:POS:org.joda.time.field.AbstractPartialFieldProperty@compareTo(org.joda.time.ReadablePartial):306:-1 |==> 1
4121:ROR:>(int,int):!=(int,int):org.joda.time.field.AbstractPartialFieldProperty@compareTo(org.joda.time.ReadablePartial):307:thisValue > otherValue |==> thisValue != otherValue
4122:ROR:>(int,int):>=(int,int):org.joda.time.field.AbstractPartialFieldProperty@compareTo(org.joda.time.ReadablePartial):307:thisValue > otherValue |==> thisValue >= otherValue
4123:ROR:>(int,int):FALSE(int,int):org.joda.time.field.AbstractPartialFieldProperty@compareTo(org.joda.time.ReadablePartial):307:thisValue > otherValue |==> false
4124:LVR:POS:0:org.joda.time.field.AbstractPartialFieldProperty@compareTo(org.joda.time.ReadablePartial):308:1 |==> 0
4125:LVR:POS:NEG:org.joda.time.field.AbstractPartialFieldProperty@compareTo(org.joda.time.ReadablePartial):308:1 |==> -1
4126:LVR:0:POS:org.joda.time.field.AbstractPartialFieldProperty@compareTo(org.joda.time.ReadablePartial):310:0 |==> 1
4127:LVR:0:NEG:org.joda.time.field.AbstractPartialFieldProperty@compareTo(org.joda.time.ReadablePartial):310:0 |==> -1
4128:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.AbstractPartialFieldProperty@equals(java.lang.Object):322:this == object |==> false
4129:LVR:TRUE:FALSE:org.joda.time.field.AbstractPartialFieldProperty@equals(java.lang.Object):323:true |==> false
4130:LVR:FALSE:TRUE:org.joda.time.field.AbstractPartialFieldProperty@equals(java.lang.Object):325:false |==> true
4131:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.field.AbstractPartialFieldProperty@equals(java.lang.Object):325:object instanceof AbstractPartialFieldProperty == false |==> false
4132:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.field.AbstractPartialFieldProperty@equals(java.lang.Object):325:object instanceof AbstractPartialFieldProperty == false |==> object instanceof AbstractPartialFieldProperty
4133:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.field.AbstractPartialFieldProperty@equals(java.lang.Object):325:object instanceof AbstractPartialFieldProperty == false |==> false
4134:LVR:FALSE:TRUE:org.joda.time.field.AbstractPartialFieldProperty@equals(java.lang.Object):326:false |==> true
4135:ROR:==(int,int):<=(int,int):org.joda.time.field.AbstractPartialFieldProperty@equals(java.lang.Object):330:get() == other.get() |==> get() <= other.get()
4136:ROR:==(int,int):>=(int,int):org.joda.time.field.AbstractPartialFieldProperty@equals(java.lang.Object):330:get() == other.get() |==> get() >= other.get()
4137:ROR:==(int,int):FALSE(int,int):org.joda.time.field.AbstractPartialFieldProperty@equals(java.lang.Object):330:get() == other.get() |==> false
4138:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.AbstractPartialFieldProperty@equals(java.lang.Object):331:getFieldType() == other.getFieldType() |==> false
4139:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.field.AbstractPartialFieldProperty@equals(java.lang.Object):330:get() == other.get() && getFieldType() == other.getFieldType() |==> get() == other.get() == (getFieldType() == other.getFieldType())
4140:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.field.AbstractPartialFieldProperty@equals(java.lang.Object):330:get() == other.get() && getFieldType() == other.getFieldType() |==> false
4141:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.field.AbstractPartialFieldProperty@equals(java.lang.Object):330:get() == other.get() && getFieldType() == other.getFieldType() |==> get() == other.get()
4142:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.field.AbstractPartialFieldProperty@equals(java.lang.Object):331:get() == other.get() && getFieldType() == other.getFieldType() |==> getFieldType() == other.getFieldType()
4143:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.field.AbstractPartialFieldProperty@equals(java.lang.Object):330:get() == other.get() && getFieldType() == other.getFieldType() && FieldUtils.equals(getReadablePartial().getChronology(), other.getReadablePartial().getChronology()) |==> (get() == other.get() && getFieldType() == other.getFieldType()) == FieldUtils.equals(getReadablePartial().getChronology(), other.getReadablePartial().getChronology())
4144:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.field.AbstractPartialFieldProperty@equals(java.lang.Object):331:get() == other.get() && getFieldType() == other.getFieldType() && FieldUtils.equals(getReadablePartial().getChronology(), other.getReadablePartial().getChronology()) |==> false
4145:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.field.AbstractPartialFieldProperty@equals(java.lang.Object):330:get() == other.get() && getFieldType() == other.getFieldType() && FieldUtils.equals(getReadablePartial().getChronology(), other.getReadablePartial().getChronology()) |==> get() == other.get() && getFieldType() == other.getFieldType()
4146:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.field.AbstractPartialFieldProperty@equals(java.lang.Object):332:get() == other.get() && getFieldType() == other.getFieldType() && FieldUtils.equals(getReadablePartial().getChronology(), other.getReadablePartial().getChronology()) |==> FieldUtils.equals(getReadablePartial().getChronology(), other.getReadablePartial().getChronology())
4147:LVR:POS:0:org.joda.time.field.AbstractPartialFieldProperty@hashCode():343:19 |==> 0
4148:LVR:POS:NEG:org.joda.time.field.AbstractPartialFieldProperty@hashCode():343:19 |==> -19
4149:LVR:POS:0:org.joda.time.field.AbstractPartialFieldProperty@hashCode():344:13 |==> 0
4150:LVR:POS:NEG:org.joda.time.field.AbstractPartialFieldProperty@hashCode():344:13 |==> -13
4151:AOR:*(int,int):%(int,int):org.joda.time.field.AbstractPartialFieldProperty@hashCode():344:13 * hash |==> 13 % hash
4152:AOR:*(int,int):+(int,int):org.joda.time.field.AbstractPartialFieldProperty@hashCode():344:13 * hash |==> 13 + hash
4153:AOR:*(int,int):-(int,int):org.joda.time.field.AbstractPartialFieldProperty@hashCode():344:13 * hash |==> 13 - hash
4154:AOR:*(int,int):/(int,int):org.joda.time.field.AbstractPartialFieldProperty@hashCode():344:13 * hash |==> 13 / hash
4155:AOR:+(int,int):%(int,int):org.joda.time.field.AbstractPartialFieldProperty@hashCode():344:13 * hash + get() |==> 13 * hash % get()
4156:AOR:+(int,int):*(int,int):org.joda.time.field.AbstractPartialFieldProperty@hashCode():344:13 * hash + get() |==> 13 * hash * get()
4157:AOR:+(int,int):-(int,int):org.joda.time.field.AbstractPartialFieldProperty@hashCode():344:13 * hash + get() |==> 13 * hash - get()
4158:AOR:+(int,int):/(int,int):org.joda.time.field.AbstractPartialFieldProperty@hashCode():344:13 * hash + get() |==> 13 * hash / get()
4159:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.AbstractPartialFieldProperty@hashCode():344:hash = 13 * hash + get() |==> <NO-OP>
4160:LVR:POS:0:org.joda.time.field.AbstractPartialFieldProperty@hashCode():345:13 |==> 0
4161:LVR:POS:NEG:org.joda.time.field.AbstractPartialFieldProperty@hashCode():345:13 |==> -13
4162:AOR:*(int,int):%(int,int):org.joda.time.field.AbstractPartialFieldProperty@hashCode():345:13 * hash |==> 13 % hash
4163:AOR:*(int,int):+(int,int):org.joda.time.field.AbstractPartialFieldProperty@hashCode():345:13 * hash |==> 13 + hash
4164:AOR:*(int,int):-(int,int):org.joda.time.field.AbstractPartialFieldProperty@hashCode():345:13 * hash |==> 13 - hash
4165:AOR:*(int,int):/(int,int):org.joda.time.field.AbstractPartialFieldProperty@hashCode():345:13 * hash |==> 13 / hash
4166:AOR:+(int,int):%(int,int):org.joda.time.field.AbstractPartialFieldProperty@hashCode():345:13 * hash + getFieldType().hashCode() |==> 13 * hash % getFieldType().hashCode()
4167:AOR:+(int,int):*(int,int):org.joda.time.field.AbstractPartialFieldProperty@hashCode():345:13 * hash + getFieldType().hashCode() |==> 13 * hash * getFieldType().hashCode()
4168:AOR:+(int,int):-(int,int):org.joda.time.field.AbstractPartialFieldProperty@hashCode():345:13 * hash + getFieldType().hashCode() |==> 13 * hash - getFieldType().hashCode()
4169:AOR:+(int,int):/(int,int):org.joda.time.field.AbstractPartialFieldProperty@hashCode():345:13 * hash + getFieldType().hashCode() |==> 13 * hash / getFieldType().hashCode()
4170:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.AbstractPartialFieldProperty@hashCode():345:hash = 13 * hash + getFieldType().hashCode() |==> <NO-OP>
4171:LVR:POS:0:org.joda.time.field.AbstractPartialFieldProperty@hashCode():346:13 |==> 0
4172:LVR:POS:NEG:org.joda.time.field.AbstractPartialFieldProperty@hashCode():346:13 |==> -13
4173:AOR:*(int,int):%(int,int):org.joda.time.field.AbstractPartialFieldProperty@hashCode():346:13 * hash |==> 13 % hash
4174:AOR:*(int,int):+(int,int):org.joda.time.field.AbstractPartialFieldProperty@hashCode():346:13 * hash |==> 13 + hash
4175:AOR:*(int,int):-(int,int):org.joda.time.field.AbstractPartialFieldProperty@hashCode():346:13 * hash |==> 13 - hash
4176:AOR:*(int,int):/(int,int):org.joda.time.field.AbstractPartialFieldProperty@hashCode():346:13 * hash |==> 13 / hash
4177:AOR:+(int,int):%(int,int):org.joda.time.field.AbstractPartialFieldProperty@hashCode():346:13 * hash + getReadablePartial().getChronology().hashCode() |==> 13 * hash % getReadablePartial().getChronology().hashCode()
4178:AOR:+(int,int):*(int,int):org.joda.time.field.AbstractPartialFieldProperty@hashCode():346:13 * hash + getReadablePartial().getChronology().hashCode() |==> 13 * hash * getReadablePartial().getChronology().hashCode()
4179:AOR:+(int,int):-(int,int):org.joda.time.field.AbstractPartialFieldProperty@hashCode():346:13 * hash + getReadablePartial().getChronology().hashCode() |==> 13 * hash - getReadablePartial().getChronology().hashCode()
4180:AOR:+(int,int):/(int,int):org.joda.time.field.AbstractPartialFieldProperty@hashCode():346:13 * hash + getReadablePartial().getChronology().hashCode() |==> 13 * hash / getReadablePartial().getChronology().hashCode()
4181:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.AbstractPartialFieldProperty@hashCode():346:hash = 13 * hash + getReadablePartial().getChronology().hashCode() |==> <NO-OP>
4182:LVR:0:POS:org.joda.time.TimeOfDay:83:0 |==> 1
4183:LVR:0:NEG:org.joda.time.TimeOfDay:83:0 |==> -1
4184:LVR:0:POS:org.joda.time.TimeOfDay:83:0 |==> 1
4185:LVR:0:NEG:org.joda.time.TimeOfDay:83:0 |==> -1
4186:LVR:0:POS:org.joda.time.TimeOfDay:83:0 |==> 1
4187:LVR:0:NEG:org.joda.time.TimeOfDay:83:0 |==> -1
4188:LVR:0:POS:org.joda.time.TimeOfDay:83:0 |==> 1
4189:LVR:0:NEG:org.joda.time.TimeOfDay:83:0 |==> -1
4190:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.TimeOfDay@fromCalendarFields(java.util.Calendar):115:calendar == null |==> false
4191:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.TimeOfDay@fromDateFields(java.util.Date):145:date == null |==> false
4192:LVR:POS:0:org.joda.time.TimeOfDay@fromDateFields(java.util.Date):152:1000 |==> 0
4193:LVR:POS:NEG:org.joda.time.TimeOfDay@fromDateFields(java.util.Date):152:1000 |==> -1000
4194:AOR:%(long,long):*(long,long):org.joda.time.TimeOfDay@fromDateFields(java.util.Date):152:date.getTime() % 1000 |==> date.getTime() * 1000
4195:AOR:%(long,long):+(long,long):org.joda.time.TimeOfDay@fromDateFields(java.util.Date):152:date.getTime() % 1000 |==> date.getTime() + 1000
4196:AOR:%(long,long):-(long,long):org.joda.time.TimeOfDay@fromDateFields(java.util.Date):152:date.getTime() % 1000 |==> date.getTime() - 1000
4197:AOR:%(long,long):/(long,long):org.joda.time.TimeOfDay@fromDateFields(java.util.Date):152:date.getTime() % 1000 |==> date.getTime() / 1000
4198:LVR:POS:0:org.joda.time.TimeOfDay@fromDateFields(java.util.Date):152:1000 |==> 0
4199:LVR:POS:NEG:org.joda.time.TimeOfDay@fromDateFields(java.util.Date):152:1000 |==> -1000
4200:AOR:+(int,int):%(int,int):org.joda.time.TimeOfDay@fromDateFields(java.util.Date):152:((int)(date.getTime() % 1000)) + 1000 |==> ((int)(date.getTime() % 1000)) % 1000
4201:AOR:+(int,int):*(int,int):org.joda.time.TimeOfDay@fromDateFields(java.util.Date):152:((int)(date.getTime() % 1000)) + 1000 |==> ((int)(date.getTime() % 1000)) * 1000
4202:AOR:+(int,int):-(int,int):org.joda.time.TimeOfDay@fromDateFields(java.util.Date):152:((int)(date.getTime() % 1000)) + 1000 |==> ((int)(date.getTime() % 1000)) - 1000
4203:AOR:+(int,int):/(int,int):org.joda.time.TimeOfDay@fromDateFields(java.util.Date):152:((int)(date.getTime() % 1000)) + 1000 |==> ((int)(date.getTime() % 1000)) / 1000
4204:LVR:POS:0:org.joda.time.TimeOfDay@fromDateFields(java.util.Date):152:1000 |==> 0
4205:LVR:POS:NEG:org.joda.time.TimeOfDay@fromDateFields(java.util.Date):152:1000 |==> -1000
4206:AOR:%(int,int):*(int,int):org.joda.time.TimeOfDay@fromDateFields(java.util.Date):152:(((int)(date.getTime() % 1000)) + 1000) % 1000 |==> (((int)(date.getTime() % 1000)) + 1000) * 1000
4207:AOR:%(int,int):+(int,int):org.joda.time.TimeOfDay@fromDateFields(java.util.Date):152:(((int)(date.getTime() % 1000)) + 1000) % 1000 |==> (((int)(date.getTime() % 1000)) + 1000) + 1000
4208:AOR:%(int,int):-(int,int):org.joda.time.TimeOfDay@fromDateFields(java.util.Date):152:(((int)(date.getTime() % 1000)) + 1000) % 1000 |==> (((int)(date.getTime() % 1000)) + 1000) - 1000
4209:AOR:%(int,int):/(int,int):org.joda.time.TimeOfDay@fromDateFields(java.util.Date):152:(((int)(date.getTime() % 1000)) + 1000) % 1000 |==> (((int)(date.getTime() % 1000)) + 1000) / 1000
4210:STD:<ASSIGN>:<NO-OP>:org.joda.time.TimeOfDay@fromMillisOfDay(long,org.joda.time.Chronology):183:chrono = DateTimeUtils.getChronology(chrono) |==> <NO-OP>
4211:STD:<ASSIGN>:<NO-OP>:org.joda.time.TimeOfDay@fromMillisOfDay(long,org.joda.time.Chronology):184:chrono = chrono.withUTC() |==> <NO-OP>
4212:LVR:0:POS:org.joda.time.TimeOfDay@<init>(int,int):317:0 |==> 1
4213:LVR:0:NEG:org.joda.time.TimeOfDay@<init>(int,int):317:0 |==> -1
4214:LVR:0:POS:org.joda.time.TimeOfDay@<init>(int,int):317:0 |==> 1
4215:LVR:0:NEG:org.joda.time.TimeOfDay@<init>(int,int):317:0 |==> -1
4216:LVR:0:POS:org.joda.time.TimeOfDay@<init>(int,int,org.joda.time.Chronology):332:0 |==> 1
4217:LVR:0:NEG:org.joda.time.TimeOfDay@<init>(int,int,org.joda.time.Chronology):332:0 |==> -1
4218:LVR:0:POS:org.joda.time.TimeOfDay@<init>(int,int,org.joda.time.Chronology):332:0 |==> 1
4219:LVR:0:NEG:org.joda.time.TimeOfDay@<init>(int,int,org.joda.time.Chronology):332:0 |==> -1
4220:LVR:0:POS:org.joda.time.TimeOfDay@<init>(int,int,int):348:0 |==> 1
4221:LVR:0:NEG:org.joda.time.TimeOfDay@<init>(int,int,int):348:0 |==> -1
4222:LVR:0:POS:org.joda.time.TimeOfDay@<init>(int,int,int,org.joda.time.Chronology):364:0 |==> 1
4223:LVR:0:NEG:org.joda.time.TimeOfDay@<init>(int,int,int,org.joda.time.Chronology):364:0 |==> -1
4224:LVR:POS:0:org.joda.time.TimeOfDay@size():429:4 |==> 0
4225:LVR:POS:NEG:org.joda.time.TimeOfDay@size():429:4 |==> -4
4226:STD:<ASSIGN>:<NO-OP>:org.joda.time.TimeOfDay@withChronologyRetainFields(org.joda.time.Chronology):494:newChronology = DateTimeUtils.getChronology(newChronology) |==> <NO-OP>
4227:STD:<ASSIGN>:<NO-OP>:org.joda.time.TimeOfDay@withChronologyRetainFields(org.joda.time.Chronology):495:newChronology = newChronology.withUTC() |==> <NO-OP>
4228:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.TimeOfDay@withChronologyRetainFields(org.joda.time.Chronology):496:newChronology == getChronology() |==> false
4229:STD:<CALL>:<NO-OP>:org.joda.time.TimeOfDay@withChronologyRetainFields(org.joda.time.Chronology):500:newChronology.validate(newTimeOfDay, getValues()) |==> <NO-OP>
4230:ROR:==(int,int):<=(int,int):org.joda.time.TimeOfDay@withField(org.joda.time.DateTimeFieldType,int):525:value == getValue(index) |==> value <= getValue(index)
4231:ROR:==(int,int):>=(int,int):org.joda.time.TimeOfDay@withField(org.joda.time.DateTimeFieldType,int):525:value == getValue(index) |==> value >= getValue(index)
4232:ROR:==(int,int):FALSE(int,int):org.joda.time.TimeOfDay@withField(org.joda.time.DateTimeFieldType,int):525:value == getValue(index) |==> false
4233:STD:<ASSIGN>:<NO-OP>:org.joda.time.TimeOfDay@withField(org.joda.time.DateTimeFieldType,int):529:newValues = getField(index).set(this, index, newValues, value) |==> <NO-OP>
4234:LVR:0:POS:org.joda.time.TimeOfDay@withFieldAdded(org.joda.time.DurationFieldType,int):554:0 |==> 1
4235:LVR:0:NEG:org.joda.time.TimeOfDay@withFieldAdded(org.joda.time.DurationFieldType,int):554:0 |==> -1
4236:ROR:==(int,int):<=(int,int):org.joda.time.TimeOfDay@withFieldAdded(org.joda.time.DurationFieldType,int):554:amount == 0 |==> amount <= 0
4237:ROR:==(int,int):>=(int,int):org.joda.time.TimeOfDay@withFieldAdded(org.joda.time.DurationFieldType,int):554:amount == 0 |==> amount >= 0
4238:ROR:==(int,int):FALSE(int,int):org.joda.time.TimeOfDay@withFieldAdded(org.joda.time.DurationFieldType,int):554:amount == 0 |==> false
4239:STD:<ASSIGN>:<NO-OP>:org.joda.time.TimeOfDay@withFieldAdded(org.joda.time.DurationFieldType,int):558:newValues = getField(index).addWrapPartial(this, index, newValues, amount) |==> <NO-OP>
4240:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.TimeOfDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):580:period == null |==> false
4241:LVR:0:POS:org.joda.time.TimeOfDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):580:0 |==> 1
4242:LVR:0:NEG:org.joda.time.TimeOfDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):580:0 |==> -1
4243:ROR:==(int,int):<=(int,int):org.joda.time.TimeOfDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):580:scalar == 0 |==> scalar <= 0
4244:ROR:==(int,int):>=(int,int):org.joda.time.TimeOfDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):580:scalar == 0 |==> scalar >= 0
4245:ROR:==(int,int):FALSE(int,int):org.joda.time.TimeOfDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):580:scalar == 0 |==> false
4246:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.TimeOfDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):580:period == null || scalar == 0 |==> period == null != (scalar == 0)
4247:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.TimeOfDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):580:period == null || scalar == 0 |==> period == null
4248:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.TimeOfDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):580:period == null || scalar == 0 |==> scalar == 0
4249:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.TimeOfDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):580:period == null || scalar == 0 |==> true
4250:LVR:0:POS:org.joda.time.TimeOfDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):584:0 |==> 1
4251:LVR:0:NEG:org.joda.time.TimeOfDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):584:0 |==> -1
4252:ROR:<(int,int):!=(int,int):org.joda.time.TimeOfDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):584:i < period.size() |==> i != period.size()
4253:ROR:<(int,int):<=(int,int):org.joda.time.TimeOfDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):584:i < period.size() |==> i <= period.size()
4254:ROR:<(int,int):FALSE(int,int):org.joda.time.TimeOfDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):584:i < period.size() |==> false
4255:LVR:0:POS:org.joda.time.TimeOfDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):587:0 |==> 1
4256:LVR:0:NEG:org.joda.time.TimeOfDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):587:0 |==> -1
4257:ROR:>=(int,int):==(int,int):org.joda.time.TimeOfDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):587:index >= 0 |==> index == 0
4258:ROR:>=(int,int):>(int,int):org.joda.time.TimeOfDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):587:index >= 0 |==> index > 0
4259:ROR:>=(int,int):TRUE(int,int):org.joda.time.TimeOfDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):587:index >= 0 |==> true
4260:STD:<ASSIGN>:<NO-OP>:org.joda.time.TimeOfDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):588:newValues = getField(index).addWrapPartial(this, index, newValues, FieldUtils.safeMultiply(period.getValue(i), scalar)) |==> <NO-OP>
4261:LVR:POS:0:org.joda.time.TimeOfDay@plus(org.joda.time.ReadablePeriod):611:1 |==> 0
4262:LVR:POS:NEG:org.joda.time.TimeOfDay@plus(org.joda.time.ReadablePeriod):611:1 |==> -1
4263:LVR:NEG:0:org.joda.time.TimeOfDay@minus(org.joda.time.ReadablePeriod):711:-1 |==> 0
4264:LVR:NEG:POS:org.joda.time.TimeOfDay@minus(org.joda.time.ReadablePeriod):711:-1 |==> 1
4265:STD:<ASSIGN>:<NO-OP>:org.joda.time.TimeOfDay@withHourOfDay(int):902:newValues = getChronology().hourOfDay().set(this, HOUR_OF_DAY, newValues, hour) |==> <NO-OP>
4266:STD:<ASSIGN>:<NO-OP>:org.joda.time.TimeOfDay@withMinuteOfHour(int):920:newValues = getChronology().minuteOfHour().set(this, MINUTE_OF_HOUR, newValues, minute) |==> <NO-OP>
4267:STD:<ASSIGN>:<NO-OP>:org.joda.time.TimeOfDay@withSecondOfMinute(int):938:newValues = getChronology().secondOfMinute().set(this, SECOND_OF_MINUTE, newValues, second) |==> <NO-OP>
4268:STD:<ASSIGN>:<NO-OP>:org.joda.time.TimeOfDay@withMillisOfSecond(int):956:newValues = getChronology().millisOfSecond().set(this, MILLIS_OF_SECOND, newValues, millis) |==> <NO-OP>
4269:STD:<ASSIGN>:<NO-OP>:org.joda.time.TimeOfDay$Property@addToCopy(int):1098:newValues = getField().addWrapPartial(iTimeOfDay, iFieldIndex, newValues, valueToAdd) |==> <NO-OP>
4270:STD:<ASSIGN>:<NO-OP>:org.joda.time.TimeOfDay$Property@addNoWrapToCopy(int):1124:newValues = getField().add(iTimeOfDay, iFieldIndex, newValues, valueToAdd) |==> <NO-OP>
4271:STD:<ASSIGN>:<NO-OP>:org.joda.time.TimeOfDay$Property@addWrapFieldToCopy(int):1148:newValues = getField().addWrapField(iTimeOfDay, iFieldIndex, newValues, valueToAdd) |==> <NO-OP>
4272:STD:<ASSIGN>:<NO-OP>:org.joda.time.TimeOfDay$Property@setCopy(int):1165:newValues = getField().set(iTimeOfDay, iFieldIndex, newValues, value) |==> <NO-OP>
4273:STD:<ASSIGN>:<NO-OP>:org.joda.time.TimeOfDay$Property@setCopy(java.lang.String,java.util.Locale):1182:newValues = getField().set(iTimeOfDay, iFieldIndex, newValues, text, locale) |==> <NO-OP>
4274:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatter@isPrinter():119:iPrinter != null |==> true
4275:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatter@isParser():137:iParser != null |==> true
4276:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatter@withLocale(java.util.Locale):161:locale == getLocale() |==> false
4277:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatter@withLocale(java.util.Locale):161:locale != null |==> true
4278:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatter@withLocale(java.util.Locale):161:locale != null && locale.equals(getLocale()) |==> locale != null == locale.equals(getLocale())
4279:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatter@withLocale(java.util.Locale):161:locale != null && locale.equals(getLocale()) |==> false
4280:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatter@withLocale(java.util.Locale):161:locale != null && locale.equals(getLocale()) |==> locale != null
4281:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatter@withLocale(java.util.Locale):161:locale != null && locale.equals(getLocale()) |==> locale.equals(getLocale())
4282:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatter@withLocale(java.util.Locale):161:locale == getLocale() || (locale != null && locale.equals(getLocale())) |==> locale == getLocale() != (locale != null && locale.equals(getLocale()))
4283:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatter@withLocale(java.util.Locale):161:locale == getLocale() || (locale != null && locale.equals(getLocale())) |==> locale == getLocale()
4284:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatter@withLocale(java.util.Locale):161:locale == getLocale() || (locale != null && locale.equals(getLocale())) |==> (locale != null && locale.equals(getLocale()))
4285:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatter@withLocale(java.util.Locale):161:locale == getLocale() || (locale != null && locale.equals(getLocale())) |==> true
4286:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatter@withParseType(org.joda.time.PeriodType):187:type == iParseType |==> false
4287:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod):210:checkPrinter() |==> <NO-OP>
4288:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod):211:checkPeriod(period) |==> <NO-OP>
4289:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod):213:getPrinter().printTo(buf, period, iLocale) |==> <NO-OP>
4290:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod):223:checkPrinter() |==> <NO-OP>
4291:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod):224:checkPeriod(period) |==> <NO-OP>
4292:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod):226:getPrinter().printTo(out, period, iLocale) |==> <NO-OP>
4293:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatter@print(org.joda.time.ReadablePeriod):236:checkPrinter() |==> <NO-OP>
4294:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatter@print(org.joda.time.ReadablePeriod):237:checkPeriod(period) |==> <NO-OP>
4295:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatter@print(org.joda.time.ReadablePeriod):241:printer.printTo(buf, period, iLocale) |==> <NO-OP>
4296:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatter@checkPrinter():251:iPrinter == null |==> false
4297:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatter@checkPeriod(org.joda.time.ReadablePeriod):262:period == null |==> false
4298:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int):288:checkParser() |==> <NO-OP>
4299:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int):289:checkPeriod(period) |==> <NO-OP>
4300:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatter@parsePeriod(java.lang.String):302:checkParser() |==> <NO-OP>
4301:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatter@parseMutablePeriod(java.lang.String):315:checkParser() |==> <NO-OP>
4302:LVR:0:POS:org.joda.time.format.PeriodFormatter@parseMutablePeriod(java.lang.String):317:0 |==> 1
4303:LVR:0:NEG:org.joda.time.format.PeriodFormatter@parseMutablePeriod(java.lang.String):317:0 |==> -1
4304:LVR:0:POS:org.joda.time.format.PeriodFormatter@parseMutablePeriod(java.lang.String):318:0 |==> 1
4305:LVR:0:NEG:org.joda.time.format.PeriodFormatter@parseMutablePeriod(java.lang.String):318:0 |==> -1
4306:LVR:0:POS:org.joda.time.format.PeriodFormatter@parseMutablePeriod(java.lang.String):319:0 |==> 1
4307:LVR:0:NEG:org.joda.time.format.PeriodFormatter@parseMutablePeriod(java.lang.String):319:0 |==> -1
4308:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatter@parseMutablePeriod(java.lang.String):319:newPos >= 0 |==> newPos == 0
4309:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatter@parseMutablePeriod(java.lang.String):319:newPos >= 0 |==> newPos > 0
4310:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatter@parseMutablePeriod(java.lang.String):319:newPos >= 0 |==> true
4311:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatter@parseMutablePeriod(java.lang.String):320:newPos >= text.length() |==> newPos == text.length()
4312:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatter@parseMutablePeriod(java.lang.String):320:newPos >= text.length() |==> newPos > text.length()
4313:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatter@parseMutablePeriod(java.lang.String):320:newPos >= text.length() |==> true
4314:ORU:~(int):+(int):org.joda.time.format.PeriodFormatter@parseMutablePeriod(java.lang.String):324:~newPos |==> +newPos
4315:ORU:~(int):-(int):org.joda.time.format.PeriodFormatter@parseMutablePeriod(java.lang.String):324:~newPos |==> -newPos
4316:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatter@parseMutablePeriod(java.lang.String):324:newPos = ~newPos |==> <NO-OP>
4317:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatter@checkParser():335:iParser == null |==> false
4318:LVR:0:POS:org.joda.time.Weeks:45:0 |==> 1
4319:LVR:0:NEG:org.joda.time.Weeks:45:0 |==> -1
4320:LVR:POS:0:org.joda.time.Weeks:47:1 |==> 0
4321:LVR:POS:NEG:org.joda.time.Weeks:47:1 |==> -1
4322:LVR:POS:0:org.joda.time.Weeks:49:2 |==> 0
4323:LVR:POS:NEG:org.joda.time.Weeks:49:2 |==> -2
4324:LVR:POS:0:org.joda.time.Weeks:51:3 |==> 0
4325:LVR:POS:NEG:org.joda.time.Weeks:51:3 |==> -3
4326:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.Weeks@weeksBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):118:start instanceof LocalDate && end instanceof LocalDate |==> start instanceof LocalDate == end instanceof LocalDate
4327:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.Weeks@weeksBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):118:start instanceof LocalDate && end instanceof LocalDate |==> false
4328:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.Weeks@weeksBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):118:start instanceof LocalDate && end instanceof LocalDate |==> start instanceof LocalDate
4329:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.Weeks@weeksBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):118:start instanceof LocalDate && end instanceof LocalDate |==> end instanceof LocalDate
4330:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Weeks@weeksIn(org.joda.time.ReadableInterval):137:interval == null |==> false
4331:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Weeks@parseWeeks(java.lang.String):182:periodStr == null |==> false
4332:AOR:*(long,long):%(long,long):org.joda.time.Weeks@toStandardDuration():319:weeks * DateTimeConstants.MILLIS_PER_WEEK |==> weeks % DateTimeConstants.MILLIS_PER_WEEK
4333:AOR:*(long,long):+(long,long):org.joda.time.Weeks@toStandardDuration():319:weeks * DateTimeConstants.MILLIS_PER_WEEK |==> weeks + DateTimeConstants.MILLIS_PER_WEEK
4334:AOR:*(long,long):-(long,long):org.joda.time.Weeks@toStandardDuration():319:weeks * DateTimeConstants.MILLIS_PER_WEEK |==> weeks - DateTimeConstants.MILLIS_PER_WEEK
4335:AOR:*(long,long):/(long,long):org.joda.time.Weeks@toStandardDuration():319:weeks * DateTimeConstants.MILLIS_PER_WEEK |==> weeks / DateTimeConstants.MILLIS_PER_WEEK
4336:LVR:0:POS:org.joda.time.Weeks@plus(int):343:0 |==> 1
4337:LVR:0:NEG:org.joda.time.Weeks@plus(int):343:0 |==> -1
4338:ROR:==(int,int):<=(int,int):org.joda.time.Weeks@plus(int):343:weeks == 0 |==> weeks <= 0
4339:ROR:==(int,int):>=(int,int):org.joda.time.Weeks@plus(int):343:weeks == 0 |==> weeks >= 0
4340:ROR:==(int,int):FALSE(int,int):org.joda.time.Weeks@plus(int):343:weeks == 0 |==> false
4341:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Weeks@plus(org.joda.time.Weeks):359:weeks == null |==> false
4342:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Weeks@minus(org.joda.time.Weeks):389:weeks == null |==> false
4343:LVR:POS:0:org.joda.time.Weeks@dividedBy(int):420:1 |==> 0
4344:LVR:POS:NEG:org.joda.time.Weeks@dividedBy(int):420:1 |==> -1
4345:ROR:==(int,int):<=(int,int):org.joda.time.Weeks@dividedBy(int):420:divisor == 1 |==> divisor <= 1
4346:ROR:==(int,int):>=(int,int):org.joda.time.Weeks@dividedBy(int):420:divisor == 1 |==> divisor >= 1
4347:ROR:==(int,int):FALSE(int,int):org.joda.time.Weeks@dividedBy(int):420:divisor == 1 |==> false
4348:AOR:/(int,int):%(int,int):org.joda.time.Weeks@dividedBy(int):423:getValue() / divisor |==> getValue() % divisor
4349:AOR:/(int,int):*(int,int):org.joda.time.Weeks@dividedBy(int):423:getValue() / divisor |==> getValue() * divisor
4350:AOR:/(int,int):+(int,int):org.joda.time.Weeks@dividedBy(int):423:getValue() / divisor |==> getValue() + divisor
4351:AOR:/(int,int):-(int,int):org.joda.time.Weeks@dividedBy(int):423:getValue() / divisor |==> getValue() - divisor
4352:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Weeks@isGreaterThan(org.joda.time.Weeks):445:other == null |==> false
4353:LVR:0:POS:org.joda.time.Weeks@isGreaterThan(org.joda.time.Weeks):446:0 |==> 1
4354:LVR:0:NEG:org.joda.time.Weeks@isGreaterThan(org.joda.time.Weeks):446:0 |==> -1
4355:ROR:>(int,int):!=(int,int):org.joda.time.Weeks@isGreaterThan(org.joda.time.Weeks):446:getValue() > 0 |==> getValue() != 0
4356:ROR:>(int,int):>=(int,int):org.joda.time.Weeks@isGreaterThan(org.joda.time.Weeks):446:getValue() > 0 |==> getValue() >= 0
4357:ROR:>(int,int):FALSE(int,int):org.joda.time.Weeks@isGreaterThan(org.joda.time.Weeks):446:getValue() > 0 |==> false
4358:ROR:>(int,int):!=(int,int):org.joda.time.Weeks@isGreaterThan(org.joda.time.Weeks):448:getValue() > other.getValue() |==> getValue() != other.getValue()
4359:ROR:>(int,int):>=(int,int):org.joda.time.Weeks@isGreaterThan(org.joda.time.Weeks):448:getValue() > other.getValue() |==> getValue() >= other.getValue()
4360:ROR:>(int,int):FALSE(int,int):org.joda.time.Weeks@isGreaterThan(org.joda.time.Weeks):448:getValue() > other.getValue() |==> false
4361:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Weeks@isLessThan(org.joda.time.Weeks):458:other == null |==> false
4362:LVR:0:POS:org.joda.time.Weeks@isLessThan(org.joda.time.Weeks):459:0 |==> 1
4363:LVR:0:NEG:org.joda.time.Weeks@isLessThan(org.joda.time.Weeks):459:0 |==> -1
4364:ROR:<(int,int):!=(int,int):org.joda.time.Weeks@isLessThan(org.joda.time.Weeks):459:getValue() < 0 |==> getValue() != 0
4365:ROR:<(int,int):<=(int,int):org.joda.time.Weeks@isLessThan(org.joda.time.Weeks):459:getValue() < 0 |==> getValue() <= 0
4366:ROR:<(int,int):FALSE(int,int):org.joda.time.Weeks@isLessThan(org.joda.time.Weeks):459:getValue() < 0 |==> false
4367:ROR:<(int,int):!=(int,int):org.joda.time.Weeks@isLessThan(org.joda.time.Weeks):461:getValue() < other.getValue() |==> getValue() != other.getValue()
4368:ROR:<(int,int):<=(int,int):org.joda.time.Weeks@isLessThan(org.joda.time.Weeks):461:getValue() < other.getValue() |==> getValue() <= other.getValue()
4369:ROR:<(int,int):FALSE(int,int):org.joda.time.Weeks@isLessThan(org.joda.time.Weeks):461:getValue() < other.getValue() |==> false
4370:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.BaseSingleFieldPeriod@between(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.DurationFieldType):68:start == null |==> false
4371:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.BaseSingleFieldPeriod@between(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.DurationFieldType):68:end == null |==> false
4372:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.base.BaseSingleFieldPeriod@between(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.DurationFieldType):68:start == null || end == null |==> start == null != (end == null)
4373:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.base.BaseSingleFieldPeriod@between(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.DurationFieldType):68:start == null || end == null |==> start == null
4374:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.base.BaseSingleFieldPeriod@between(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.DurationFieldType):68:start == null || end == null |==> end == null
4375:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.base.BaseSingleFieldPeriod@between(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.DurationFieldType):68:start == null || end == null |==> true
4376:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.BaseSingleFieldPeriod@between(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.ReadablePeriod):90:start == null |==> false
4377:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.BaseSingleFieldPeriod@between(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.ReadablePeriod):90:end == null |==> false
4378:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.base.BaseSingleFieldPeriod@between(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.ReadablePeriod):90:start == null || end == null |==> start == null != (end == null)
4379:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.base.BaseSingleFieldPeriod@between(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.ReadablePeriod):90:start == null || end == null |==> start == null
4380:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.base.BaseSingleFieldPeriod@between(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.ReadablePeriod):90:start == null || end == null |==> end == null
4381:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.base.BaseSingleFieldPeriod@between(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.ReadablePeriod):90:start == null || end == null |==> true
4382:ROR:!=(int,int):<(int,int):org.joda.time.base.BaseSingleFieldPeriod@between(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.ReadablePeriod):93:start.size() != end.size() |==> start.size() < end.size()
4383:ROR:!=(int,int):>(int,int):org.joda.time.base.BaseSingleFieldPeriod@between(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.ReadablePeriod):93:start.size() != end.size() |==> start.size() > end.size()
4384:ROR:!=(int,int):TRUE(int,int):org.joda.time.base.BaseSingleFieldPeriod@between(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.ReadablePeriod):93:start.size() != end.size() |==> true
4385:LVR:0:POS:org.joda.time.base.BaseSingleFieldPeriod@between(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.ReadablePeriod):96:0 |==> 1
4386:LVR:0:NEG:org.joda.time.base.BaseSingleFieldPeriod@between(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.ReadablePeriod):96:0 |==> -1
4387:ROR:<(int,int):!=(int,int):org.joda.time.base.BaseSingleFieldPeriod@between(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.ReadablePeriod):96:i < isize |==> i != isize
4388:ROR:<(int,int):<=(int,int):org.joda.time.base.BaseSingleFieldPeriod@between(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.ReadablePeriod):96:i < isize |==> i <= isize
4389:ROR:<(int,int):FALSE(int,int):org.joda.time.base.BaseSingleFieldPeriod@between(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.ReadablePeriod):96:i < isize |==> false
4390:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.base.BaseSingleFieldPeriod@between(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.ReadablePeriod):97:start.getFieldType(i) != end.getFieldType(i) |==> true
4391:LVR:FALSE:TRUE:org.joda.time.base.BaseSingleFieldPeriod@between(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.ReadablePeriod):101:false |==> true
4392:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.base.BaseSingleFieldPeriod@between(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.ReadablePeriod):101:DateTimeUtils.isContiguous(start) == false |==> false
4393:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.base.BaseSingleFieldPeriod@between(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.ReadablePeriod):101:DateTimeUtils.isContiguous(start) == false |==> DateTimeUtils.isContiguous(start)
4394:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.base.BaseSingleFieldPeriod@between(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.ReadablePeriod):101:DateTimeUtils.isContiguous(start) == false |==> false
4395:LVR:0:POS:org.joda.time.base.BaseSingleFieldPeriod@between(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.ReadablePeriod):106:0 |==> 1
4396:LVR:0:NEG:org.joda.time.base.BaseSingleFieldPeriod@between(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.ReadablePeriod):106:0 |==> -1
4397:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.BaseSingleFieldPeriod@standardPeriodIn(org.joda.time.ReadablePeriod,long):130:period == null |==> false
4398:LVR:0:POS:org.joda.time.base.BaseSingleFieldPeriod@standardPeriodIn(org.joda.time.ReadablePeriod,long):131:0 |==> 1
4399:LVR:0:NEG:org.joda.time.base.BaseSingleFieldPeriod@standardPeriodIn(org.joda.time.ReadablePeriod,long):131:0 |==> -1
4400:LVR:0:POS:org.joda.time.base.BaseSingleFieldPeriod@standardPeriodIn(org.joda.time.ReadablePeriod,long):134:0L |==> 1L
4401:LVR:0:NEG:org.joda.time.base.BaseSingleFieldPeriod@standardPeriodIn(org.joda.time.ReadablePeriod,long):134:0L |==> -1L
4402:LVR:0:POS:org.joda.time.base.BaseSingleFieldPeriod@standardPeriodIn(org.joda.time.ReadablePeriod,long):135:0 |==> 1
4403:LVR:0:NEG:org.joda.time.base.BaseSingleFieldPeriod@standardPeriodIn(org.joda.time.ReadablePeriod,long):135:0 |==> -1
4404:ROR:<(int,int):!=(int,int):org.joda.time.base.BaseSingleFieldPeriod@standardPeriodIn(org.joda.time.ReadablePeriod,long):135:i < period.size() |==> i != period.size()
4405:ROR:<(int,int):<=(int,int):org.joda.time.base.BaseSingleFieldPeriod@standardPeriodIn(org.joda.time.ReadablePeriod,long):135:i < period.size() |==> i <= period.size()
4406:ROR:<(int,int):FALSE(int,int):org.joda.time.base.BaseSingleFieldPeriod@standardPeriodIn(org.joda.time.ReadablePeriod,long):135:i < period.size() |==> false
4407:LVR:0:POS:org.joda.time.base.BaseSingleFieldPeriod@standardPeriodIn(org.joda.time.ReadablePeriod,long):137:0 |==> 1
4408:LVR:0:NEG:org.joda.time.base.BaseSingleFieldPeriod@standardPeriodIn(org.joda.time.ReadablePeriod,long):137:0 |==> -1
4409:ROR:!=(int,int):<(int,int):org.joda.time.base.BaseSingleFieldPeriod@standardPeriodIn(org.joda.time.ReadablePeriod,long):137:value != 0 |==> value < 0
4410:ROR:!=(int,int):>(int,int):org.joda.time.base.BaseSingleFieldPeriod@standardPeriodIn(org.joda.time.ReadablePeriod,long):137:value != 0 |==> value > 0
4411:ROR:!=(int,int):TRUE(int,int):org.joda.time.base.BaseSingleFieldPeriod@standardPeriodIn(org.joda.time.ReadablePeriod,long):137:value != 0 |==> true
4412:LVR:FALSE:TRUE:org.joda.time.base.BaseSingleFieldPeriod@standardPeriodIn(org.joda.time.ReadablePeriod,long):139:false |==> true
4413:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.base.BaseSingleFieldPeriod@standardPeriodIn(org.joda.time.ReadablePeriod,long):139:field.isPrecise() == false |==> false
4414:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.base.BaseSingleFieldPeriod@standardPeriodIn(org.joda.time.ReadablePeriod,long):139:field.isPrecise() == false |==> field.isPrecise()
4415:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.base.BaseSingleFieldPeriod@standardPeriodIn(org.joda.time.ReadablePeriod,long):139:field.isPrecise() == false |==> false
4416:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseSingleFieldPeriod@standardPeriodIn(org.joda.time.ReadablePeriod,long):144:duration = FieldUtils.safeAdd(duration, FieldUtils.safeMultiply(field.getUnitMillis(), value)) |==> <NO-OP>
4417:AOR:/(long,long):%(long,long):org.joda.time.base.BaseSingleFieldPeriod@standardPeriodIn(org.joda.time.ReadablePeriod,long):147:duration / millisPerUnit |==> duration % millisPerUnit
4418:AOR:/(long,long):*(long,long):org.joda.time.base.BaseSingleFieldPeriod@standardPeriodIn(org.joda.time.ReadablePeriod,long):147:duration / millisPerUnit |==> duration * millisPerUnit
4419:AOR:/(long,long):+(long,long):org.joda.time.base.BaseSingleFieldPeriod@standardPeriodIn(org.joda.time.ReadablePeriod,long):147:duration / millisPerUnit |==> duration + millisPerUnit
4420:AOR:/(long,long):-(long,long):org.joda.time.base.BaseSingleFieldPeriod@standardPeriodIn(org.joda.time.ReadablePeriod,long):147:duration / millisPerUnit |==> duration - millisPerUnit
4421:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseSingleFieldPeriod@<init>(int):158:iPeriod = period |==> <NO-OP>
4422:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseSingleFieldPeriod@setValue(int):178:iPeriod = value |==> <NO-OP>
4423:LVR:POS:0:org.joda.time.base.BaseSingleFieldPeriod@size():203:1 |==> 0
4424:LVR:POS:NEG:org.joda.time.base.BaseSingleFieldPeriod@size():203:1 |==> -1
4425:LVR:0:POS:org.joda.time.base.BaseSingleFieldPeriod@getFieldType(int):217:0 |==> 1
4426:LVR:0:NEG:org.joda.time.base.BaseSingleFieldPeriod@getFieldType(int):217:0 |==> -1
4427:ROR:!=(int,int):<(int,int):org.joda.time.base.BaseSingleFieldPeriod@getFieldType(int):217:index != 0 |==> index < 0
4428:ROR:!=(int,int):>(int,int):org.joda.time.base.BaseSingleFieldPeriod@getFieldType(int):217:index != 0 |==> index > 0
4429:ROR:!=(int,int):TRUE(int,int):org.joda.time.base.BaseSingleFieldPeriod@getFieldType(int):217:index != 0 |==> true
4430:LVR:0:POS:org.joda.time.base.BaseSingleFieldPeriod@getValue(int):233:0 |==> 1
4431:LVR:0:NEG:org.joda.time.base.BaseSingleFieldPeriod@getValue(int):233:0 |==> -1
4432:ROR:!=(int,int):<(int,int):org.joda.time.base.BaseSingleFieldPeriod@getValue(int):233:index != 0 |==> index < 0
4433:ROR:!=(int,int):>(int,int):org.joda.time.base.BaseSingleFieldPeriod@getValue(int):233:index != 0 |==> index > 0
4434:ROR:!=(int,int):TRUE(int,int):org.joda.time.base.BaseSingleFieldPeriod@getValue(int):233:index != 0 |==> true
4435:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.BaseSingleFieldPeriod@get(org.joda.time.DurationFieldType):249:type == getFieldType() |==> false
4436:LVR:0:POS:org.joda.time.base.BaseSingleFieldPeriod@get(org.joda.time.DurationFieldType):252:0 |==> 1
4437:LVR:0:NEG:org.joda.time.base.BaseSingleFieldPeriod@get(org.joda.time.DurationFieldType):252:0 |==> -1
4438:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.BaseSingleFieldPeriod@isSupported(org.joda.time.DurationFieldType):262:type == getFieldType() |==> false
4439:STD:<CALL>:<NO-OP>:org.joda.time.base.BaseSingleFieldPeriod@toMutablePeriod():286:period.add(this) |==> <NO-OP>
4440:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.BaseSingleFieldPeriod@equals(java.lang.Object):301:this == period |==> false
4441:LVR:TRUE:FALSE:org.joda.time.base.BaseSingleFieldPeriod@equals(java.lang.Object):302:true |==> false
4442:LVR:FALSE:TRUE:org.joda.time.base.BaseSingleFieldPeriod@equals(java.lang.Object):304:false |==> true
4443:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.base.BaseSingleFieldPeriod@equals(java.lang.Object):304:period instanceof ReadablePeriod == false |==> false
4444:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.base.BaseSingleFieldPeriod@equals(java.lang.Object):304:period instanceof ReadablePeriod == false |==> period instanceof ReadablePeriod
4445:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.base.BaseSingleFieldPeriod@equals(java.lang.Object):304:period instanceof ReadablePeriod == false |==> false
4446:LVR:FALSE:TRUE:org.joda.time.base.BaseSingleFieldPeriod@equals(java.lang.Object):305:false |==> true
4447:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.BaseSingleFieldPeriod@equals(java.lang.Object):308:other.getPeriodType() == getPeriodType() |==> false
4448:LVR:0:POS:org.joda.time.base.BaseSingleFieldPeriod@equals(java.lang.Object):308:0 |==> 1
4449:LVR:0:NEG:org.joda.time.base.BaseSingleFieldPeriod@equals(java.lang.Object):308:0 |==> -1
4450:ROR:==(int,int):<=(int,int):org.joda.time.base.BaseSingleFieldPeriod@equals(java.lang.Object):308:other.getValue(0) == getValue() |==> other.getValue(0) <= getValue()
4451:ROR:==(int,int):>=(int,int):org.joda.time.base.BaseSingleFieldPeriod@equals(java.lang.Object):308:other.getValue(0) == getValue() |==> other.getValue(0) >= getValue()
4452:ROR:==(int,int):FALSE(int,int):org.joda.time.base.BaseSingleFieldPeriod@equals(java.lang.Object):308:other.getValue(0) == getValue() |==> false
4453:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.base.BaseSingleFieldPeriod@equals(java.lang.Object):308:other.getPeriodType() == getPeriodType() && other.getValue(0) == getValue() |==> other.getPeriodType() == getPeriodType() == (other.getValue(0) == getValue())
4454:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.base.BaseSingleFieldPeriod@equals(java.lang.Object):308:other.getPeriodType() == getPeriodType() && other.getValue(0) == getValue() |==> false
4455:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.base.BaseSingleFieldPeriod@equals(java.lang.Object):308:other.getPeriodType() == getPeriodType() && other.getValue(0) == getValue() |==> other.getPeriodType() == getPeriodType()
4456:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.base.BaseSingleFieldPeriod@equals(java.lang.Object):308:other.getPeriodType() == getPeriodType() && other.getValue(0) == getValue() |==> other.getValue(0) == getValue()
4457:LVR:POS:0:org.joda.time.base.BaseSingleFieldPeriod@hashCode():317:17 |==> 0
4458:LVR:POS:NEG:org.joda.time.base.BaseSingleFieldPeriod@hashCode():317:17 |==> -17
4459:LVR:POS:0:org.joda.time.base.BaseSingleFieldPeriod@hashCode():318:27 |==> 0
4460:LVR:POS:NEG:org.joda.time.base.BaseSingleFieldPeriod@hashCode():318:27 |==> -27
4461:AOR:*(int,int):%(int,int):org.joda.time.base.BaseSingleFieldPeriod@hashCode():318:27 * total |==> 27 % total
4462:AOR:*(int,int):+(int,int):org.joda.time.base.BaseSingleFieldPeriod@hashCode():318:27 * total |==> 27 + total
4463:AOR:*(int,int):-(int,int):org.joda.time.base.BaseSingleFieldPeriod@hashCode():318:27 * total |==> 27 - total
4464:AOR:*(int,int):/(int,int):org.joda.time.base.BaseSingleFieldPeriod@hashCode():318:27 * total |==> 27 / total
4465:AOR:+(int,int):%(int,int):org.joda.time.base.BaseSingleFieldPeriod@hashCode():318:27 * total + getValue() |==> 27 * total % getValue()
4466:AOR:+(int,int):*(int,int):org.joda.time.base.BaseSingleFieldPeriod@hashCode():318:27 * total + getValue() |==> 27 * total * getValue()
4467:AOR:+(int,int):-(int,int):org.joda.time.base.BaseSingleFieldPeriod@hashCode():318:27 * total + getValue() |==> 27 * total - getValue()
4468:AOR:+(int,int):/(int,int):org.joda.time.base.BaseSingleFieldPeriod@hashCode():318:27 * total + getValue() |==> 27 * total / getValue()
4469:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseSingleFieldPeriod@hashCode():318:total = 27 * total + getValue() |==> <NO-OP>
4470:LVR:POS:0:org.joda.time.base.BaseSingleFieldPeriod@hashCode():319:27 |==> 0
4471:LVR:POS:NEG:org.joda.time.base.BaseSingleFieldPeriod@hashCode():319:27 |==> -27
4472:AOR:*(int,int):%(int,int):org.joda.time.base.BaseSingleFieldPeriod@hashCode():319:27 * total |==> 27 % total
4473:AOR:*(int,int):+(int,int):org.joda.time.base.BaseSingleFieldPeriod@hashCode():319:27 * total |==> 27 + total
4474:AOR:*(int,int):-(int,int):org.joda.time.base.BaseSingleFieldPeriod@hashCode():319:27 * total |==> 27 - total
4475:AOR:*(int,int):/(int,int):org.joda.time.base.BaseSingleFieldPeriod@hashCode():319:27 * total |==> 27 / total
4476:AOR:+(int,int):%(int,int):org.joda.time.base.BaseSingleFieldPeriod@hashCode():319:27 * total + getFieldType().hashCode() |==> 27 * total % getFieldType().hashCode()
4477:AOR:+(int,int):*(int,int):org.joda.time.base.BaseSingleFieldPeriod@hashCode():319:27 * total + getFieldType().hashCode() |==> 27 * total * getFieldType().hashCode()
4478:AOR:+(int,int):-(int,int):org.joda.time.base.BaseSingleFieldPeriod@hashCode():319:27 * total + getFieldType().hashCode() |==> 27 * total - getFieldType().hashCode()
4479:AOR:+(int,int):/(int,int):org.joda.time.base.BaseSingleFieldPeriod@hashCode():319:27 * total + getFieldType().hashCode() |==> 27 * total / getFieldType().hashCode()
4480:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseSingleFieldPeriod@hashCode():319:total = 27 * total + getFieldType().hashCode() |==> <NO-OP>
4481:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.base.BaseSingleFieldPeriod@compareTo(org.joda.time.base.BaseSingleFieldPeriod):332:other.getClass() != getClass() |==> true
4482:ROR:>(int,int):!=(int,int):org.joda.time.base.BaseSingleFieldPeriod@compareTo(org.joda.time.base.BaseSingleFieldPeriod):337:thisValue > otherValue |==> thisValue != otherValue
4483:ROR:>(int,int):>=(int,int):org.joda.time.base.BaseSingleFieldPeriod@compareTo(org.joda.time.base.BaseSingleFieldPeriod):337:thisValue > otherValue |==> thisValue >= otherValue
4484:ROR:>(int,int):FALSE(int,int):org.joda.time.base.BaseSingleFieldPeriod@compareTo(org.joda.time.base.BaseSingleFieldPeriod):337:thisValue > otherValue |==> false
4485:LVR:POS:0:org.joda.time.base.BaseSingleFieldPeriod@compareTo(org.joda.time.base.BaseSingleFieldPeriod):338:1 |==> 0
4486:LVR:POS:NEG:org.joda.time.base.BaseSingleFieldPeriod@compareTo(org.joda.time.base.BaseSingleFieldPeriod):338:1 |==> -1
4487:ROR:<(int,int):!=(int,int):org.joda.time.base.BaseSingleFieldPeriod@compareTo(org.joda.time.base.BaseSingleFieldPeriod):340:thisValue < otherValue |==> thisValue != otherValue
4488:ROR:<(int,int):<=(int,int):org.joda.time.base.BaseSingleFieldPeriod@compareTo(org.joda.time.base.BaseSingleFieldPeriod):340:thisValue < otherValue |==> thisValue <= otherValue
4489:ROR:<(int,int):FALSE(int,int):org.joda.time.base.BaseSingleFieldPeriod@compareTo(org.joda.time.base.BaseSingleFieldPeriod):340:thisValue < otherValue |==> false
4490:LVR:NEG:0:org.joda.time.base.BaseSingleFieldPeriod@compareTo(org.joda.time.base.BaseSingleFieldPeriod):341:-1 |==> 0
4491:LVR:NEG:POS:org.joda.time.base.BaseSingleFieldPeriod@compareTo(org.joda.time.base.BaseSingleFieldPeriod):341:-1 |==> 1
4492:LVR:0:POS:org.joda.time.base.BaseSingleFieldPeriod@compareTo(org.joda.time.base.BaseSingleFieldPeriod):343:0 |==> 1
4493:LVR:0:NEG:org.joda.time.base.BaseSingleFieldPeriod@compareTo(org.joda.time.base.BaseSingleFieldPeriod):343:0 |==> -1
4494:LVR:0:POS:org.joda.time.Days:45:0 |==> 1
4495:LVR:0:NEG:org.joda.time.Days:45:0 |==> -1
4496:LVR:POS:0:org.joda.time.Days:47:1 |==> 0
4497:LVR:POS:NEG:org.joda.time.Days:47:1 |==> -1
4498:LVR:POS:0:org.joda.time.Days:49:2 |==> 0
4499:LVR:POS:NEG:org.joda.time.Days:49:2 |==> -2
4500:LVR:POS:0:org.joda.time.Days:51:3 |==> 0
4501:LVR:POS:NEG:org.joda.time.Days:51:3 |==> -3
4502:LVR:POS:0:org.joda.time.Days:53:4 |==> 0
4503:LVR:POS:NEG:org.joda.time.Days:53:4 |==> -4
4504:LVR:POS:0:org.joda.time.Days:55:5 |==> 0
4505:LVR:POS:NEG:org.joda.time.Days:55:5 |==> -5
4506:LVR:POS:0:org.joda.time.Days:57:6 |==> 0
4507:LVR:POS:NEG:org.joda.time.Days:57:6 |==> -6
4508:LVR:POS:0:org.joda.time.Days:59:7 |==> 0
4509:LVR:POS:NEG:org.joda.time.Days:59:7 |==> -7
4510:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.Days@daysBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):135:start instanceof LocalDate && end instanceof LocalDate |==> start instanceof LocalDate == end instanceof LocalDate
4511:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.Days@daysBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):135:start instanceof LocalDate && end instanceof LocalDate |==> false
4512:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.Days@daysBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):135:start instanceof LocalDate && end instanceof LocalDate |==> start instanceof LocalDate
4513:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.Days@daysBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):135:start instanceof LocalDate && end instanceof LocalDate |==> end instanceof LocalDate
4514:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Days@daysIn(org.joda.time.ReadableInterval):155:interval == null |==> false
4515:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Days@parseDays(java.lang.String):200:periodStr == null |==> false
4516:AOR:/(int,int):%(int,int):org.joda.time.Days@toStandardWeeks():261:getValue() / DateTimeConstants.DAYS_PER_WEEK |==> getValue() % DateTimeConstants.DAYS_PER_WEEK
4517:AOR:/(int,int):*(int,int):org.joda.time.Days@toStandardWeeks():261:getValue() / DateTimeConstants.DAYS_PER_WEEK |==> getValue() * DateTimeConstants.DAYS_PER_WEEK
4518:AOR:/(int,int):+(int,int):org.joda.time.Days@toStandardWeeks():261:getValue() / DateTimeConstants.DAYS_PER_WEEK |==> getValue() + DateTimeConstants.DAYS_PER_WEEK
4519:AOR:/(int,int):-(int,int):org.joda.time.Days@toStandardWeeks():261:getValue() / DateTimeConstants.DAYS_PER_WEEK |==> getValue() - DateTimeConstants.DAYS_PER_WEEK
4520:AOR:*(long,long):%(long,long):org.joda.time.Days@toStandardDuration():333:days * DateTimeConstants.MILLIS_PER_DAY |==> days % DateTimeConstants.MILLIS_PER_DAY
4521:AOR:*(long,long):+(long,long):org.joda.time.Days@toStandardDuration():333:days * DateTimeConstants.MILLIS_PER_DAY |==> days + DateTimeConstants.MILLIS_PER_DAY
4522:AOR:*(long,long):-(long,long):org.joda.time.Days@toStandardDuration():333:days * DateTimeConstants.MILLIS_PER_DAY |==> days - DateTimeConstants.MILLIS_PER_DAY
4523:AOR:*(long,long):/(long,long):org.joda.time.Days@toStandardDuration():333:days * DateTimeConstants.MILLIS_PER_DAY |==> days / DateTimeConstants.MILLIS_PER_DAY
4524:LVR:0:POS:org.joda.time.Days@plus(int):357:0 |==> 1
4525:LVR:0:NEG:org.joda.time.Days@plus(int):357:0 |==> -1
4526:ROR:==(int,int):<=(int,int):org.joda.time.Days@plus(int):357:days == 0 |==> days <= 0
4527:ROR:==(int,int):>=(int,int):org.joda.time.Days@plus(int):357:days == 0 |==> days >= 0
4528:ROR:==(int,int):FALSE(int,int):org.joda.time.Days@plus(int):357:days == 0 |==> false
4529:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Days@plus(org.joda.time.Days):373:days == null |==> false
4530:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Days@minus(org.joda.time.Days):403:days == null |==> false
4531:LVR:POS:0:org.joda.time.Days@dividedBy(int):434:1 |==> 0
4532:LVR:POS:NEG:org.joda.time.Days@dividedBy(int):434:1 |==> -1
4533:ROR:==(int,int):<=(int,int):org.joda.time.Days@dividedBy(int):434:divisor == 1 |==> divisor <= 1
4534:ROR:==(int,int):>=(int,int):org.joda.time.Days@dividedBy(int):434:divisor == 1 |==> divisor >= 1
4535:ROR:==(int,int):FALSE(int,int):org.joda.time.Days@dividedBy(int):434:divisor == 1 |==> false
4536:AOR:/(int,int):%(int,int):org.joda.time.Days@dividedBy(int):437:getValue() / divisor |==> getValue() % divisor
4537:AOR:/(int,int):*(int,int):org.joda.time.Days@dividedBy(int):437:getValue() / divisor |==> getValue() * divisor
4538:AOR:/(int,int):+(int,int):org.joda.time.Days@dividedBy(int):437:getValue() / divisor |==> getValue() + divisor
4539:AOR:/(int,int):-(int,int):org.joda.time.Days@dividedBy(int):437:getValue() / divisor |==> getValue() - divisor
4540:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Days@isGreaterThan(org.joda.time.Days):459:other == null |==> false
4541:LVR:0:POS:org.joda.time.Days@isGreaterThan(org.joda.time.Days):460:0 |==> 1
4542:LVR:0:NEG:org.joda.time.Days@isGreaterThan(org.joda.time.Days):460:0 |==> -1
4543:ROR:>(int,int):!=(int,int):org.joda.time.Days@isGreaterThan(org.joda.time.Days):460:getValue() > 0 |==> getValue() != 0
4544:ROR:>(int,int):>=(int,int):org.joda.time.Days@isGreaterThan(org.joda.time.Days):460:getValue() > 0 |==> getValue() >= 0
4545:ROR:>(int,int):FALSE(int,int):org.joda.time.Days@isGreaterThan(org.joda.time.Days):460:getValue() > 0 |==> false
4546:ROR:>(int,int):!=(int,int):org.joda.time.Days@isGreaterThan(org.joda.time.Days):462:getValue() > other.getValue() |==> getValue() != other.getValue()
4547:ROR:>(int,int):>=(int,int):org.joda.time.Days@isGreaterThan(org.joda.time.Days):462:getValue() > other.getValue() |==> getValue() >= other.getValue()
4548:ROR:>(int,int):FALSE(int,int):org.joda.time.Days@isGreaterThan(org.joda.time.Days):462:getValue() > other.getValue() |==> false
4549:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Days@isLessThan(org.joda.time.Days):472:other == null |==> false
4550:LVR:0:POS:org.joda.time.Days@isLessThan(org.joda.time.Days):473:0 |==> 1
4551:LVR:0:NEG:org.joda.time.Days@isLessThan(org.joda.time.Days):473:0 |==> -1
4552:ROR:<(int,int):!=(int,int):org.joda.time.Days@isLessThan(org.joda.time.Days):473:getValue() < 0 |==> getValue() != 0
4553:ROR:<(int,int):<=(int,int):org.joda.time.Days@isLessThan(org.joda.time.Days):473:getValue() < 0 |==> getValue() <= 0
4554:ROR:<(int,int):FALSE(int,int):org.joda.time.Days@isLessThan(org.joda.time.Days):473:getValue() < 0 |==> false
4555:ROR:<(int,int):!=(int,int):org.joda.time.Days@isLessThan(org.joda.time.Days):475:getValue() < other.getValue() |==> getValue() != other.getValue()
4556:ROR:<(int,int):<=(int,int):org.joda.time.Days@isLessThan(org.joda.time.Days):475:getValue() < other.getValue() |==> getValue() <= other.getValue()
4557:ROR:<(int,int):FALSE(int,int):org.joda.time.Days@isLessThan(org.joda.time.Days):475:getValue() < other.getValue() |==> false
4558:LVR:0:POS:org.joda.time.Hours:45:0 |==> 1
4559:LVR:0:NEG:org.joda.time.Hours:45:0 |==> -1
4560:LVR:POS:0:org.joda.time.Hours:47:1 |==> 0
4561:LVR:POS:NEG:org.joda.time.Hours:47:1 |==> -1
4562:LVR:POS:0:org.joda.time.Hours:49:2 |==> 0
4563:LVR:POS:NEG:org.joda.time.Hours:49:2 |==> -2
4564:LVR:POS:0:org.joda.time.Hours:51:3 |==> 0
4565:LVR:POS:NEG:org.joda.time.Hours:51:3 |==> -3
4566:LVR:POS:0:org.joda.time.Hours:53:4 |==> 0
4567:LVR:POS:NEG:org.joda.time.Hours:53:4 |==> -4
4568:LVR:POS:0:org.joda.time.Hours:55:5 |==> 0
4569:LVR:POS:NEG:org.joda.time.Hours:55:5 |==> -5
4570:LVR:POS:0:org.joda.time.Hours:57:6 |==> 0
4571:LVR:POS:NEG:org.joda.time.Hours:57:6 |==> -6
4572:LVR:POS:0:org.joda.time.Hours:59:7 |==> 0
4573:LVR:POS:NEG:org.joda.time.Hours:59:7 |==> -7
4574:LVR:POS:0:org.joda.time.Hours:61:8 |==> 0
4575:LVR:POS:NEG:org.joda.time.Hours:61:8 |==> -8
4576:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.Hours@hoursBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):138:start instanceof LocalTime && end instanceof LocalTime |==> start instanceof LocalTime == end instanceof LocalTime
4577:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.Hours@hoursBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):138:start instanceof LocalTime && end instanceof LocalTime |==> false
4578:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.Hours@hoursBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):138:start instanceof LocalTime && end instanceof LocalTime |==> start instanceof LocalTime
4579:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.Hours@hoursBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):138:start instanceof LocalTime && end instanceof LocalTime |==> end instanceof LocalTime
4580:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Hours@hoursIn(org.joda.time.ReadableInterval):157:interval == null |==> false
4581:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Hours@parseHours(java.lang.String):202:periodStr == null |==> false
4582:AOR:/(int,int):%(int,int):org.joda.time.Hours@toStandardWeeks():264:getValue() / DateTimeConstants.HOURS_PER_WEEK |==> getValue() % DateTimeConstants.HOURS_PER_WEEK
4583:AOR:/(int,int):*(int,int):org.joda.time.Hours@toStandardWeeks():264:getValue() / DateTimeConstants.HOURS_PER_WEEK |==> getValue() * DateTimeConstants.HOURS_PER_WEEK
4584:AOR:/(int,int):+(int,int):org.joda.time.Hours@toStandardWeeks():264:getValue() / DateTimeConstants.HOURS_PER_WEEK |==> getValue() + DateTimeConstants.HOURS_PER_WEEK
4585:AOR:/(int,int):-(int,int):org.joda.time.Hours@toStandardWeeks():264:getValue() / DateTimeConstants.HOURS_PER_WEEK |==> getValue() - DateTimeConstants.HOURS_PER_WEEK
4586:AOR:/(int,int):%(int,int):org.joda.time.Hours@toStandardDays():280:getValue() / DateTimeConstants.HOURS_PER_DAY |==> getValue() % DateTimeConstants.HOURS_PER_DAY
4587:AOR:/(int,int):*(int,int):org.joda.time.Hours@toStandardDays():280:getValue() / DateTimeConstants.HOURS_PER_DAY |==> getValue() * DateTimeConstants.HOURS_PER_DAY
4588:AOR:/(int,int):+(int,int):org.joda.time.Hours@toStandardDays():280:getValue() / DateTimeConstants.HOURS_PER_DAY |==> getValue() + DateTimeConstants.HOURS_PER_DAY
4589:AOR:/(int,int):-(int,int):org.joda.time.Hours@toStandardDays():280:getValue() / DateTimeConstants.HOURS_PER_DAY |==> getValue() - DateTimeConstants.HOURS_PER_DAY
4590:AOR:*(long,long):%(long,long):org.joda.time.Hours@toStandardDuration():332:hours * DateTimeConstants.MILLIS_PER_HOUR |==> hours % DateTimeConstants.MILLIS_PER_HOUR
4591:AOR:*(long,long):+(long,long):org.joda.time.Hours@toStandardDuration():332:hours * DateTimeConstants.MILLIS_PER_HOUR |==> hours + DateTimeConstants.MILLIS_PER_HOUR
4592:AOR:*(long,long):-(long,long):org.joda.time.Hours@toStandardDuration():332:hours * DateTimeConstants.MILLIS_PER_HOUR |==> hours - DateTimeConstants.MILLIS_PER_HOUR
4593:AOR:*(long,long):/(long,long):org.joda.time.Hours@toStandardDuration():332:hours * DateTimeConstants.MILLIS_PER_HOUR |==> hours / DateTimeConstants.MILLIS_PER_HOUR
4594:LVR:0:POS:org.joda.time.Hours@plus(int):356:0 |==> 1
4595:LVR:0:NEG:org.joda.time.Hours@plus(int):356:0 |==> -1
4596:ROR:==(int,int):<=(int,int):org.joda.time.Hours@plus(int):356:hours == 0 |==> hours <= 0
4597:ROR:==(int,int):>=(int,int):org.joda.time.Hours@plus(int):356:hours == 0 |==> hours >= 0
4598:ROR:==(int,int):FALSE(int,int):org.joda.time.Hours@plus(int):356:hours == 0 |==> false
4599:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Hours@plus(org.joda.time.Hours):372:hours == null |==> false
4600:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Hours@minus(org.joda.time.Hours):402:hours == null |==> false
4601:LVR:POS:0:org.joda.time.Hours@dividedBy(int):433:1 |==> 0
4602:LVR:POS:NEG:org.joda.time.Hours@dividedBy(int):433:1 |==> -1
4603:ROR:==(int,int):<=(int,int):org.joda.time.Hours@dividedBy(int):433:divisor == 1 |==> divisor <= 1
4604:ROR:==(int,int):>=(int,int):org.joda.time.Hours@dividedBy(int):433:divisor == 1 |==> divisor >= 1
4605:ROR:==(int,int):FALSE(int,int):org.joda.time.Hours@dividedBy(int):433:divisor == 1 |==> false
4606:AOR:/(int,int):%(int,int):org.joda.time.Hours@dividedBy(int):436:getValue() / divisor |==> getValue() % divisor
4607:AOR:/(int,int):*(int,int):org.joda.time.Hours@dividedBy(int):436:getValue() / divisor |==> getValue() * divisor
4608:AOR:/(int,int):+(int,int):org.joda.time.Hours@dividedBy(int):436:getValue() / divisor |==> getValue() + divisor
4609:AOR:/(int,int):-(int,int):org.joda.time.Hours@dividedBy(int):436:getValue() / divisor |==> getValue() - divisor
4610:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Hours@isGreaterThan(org.joda.time.Hours):458:other == null |==> false
4611:LVR:0:POS:org.joda.time.Hours@isGreaterThan(org.joda.time.Hours):459:0 |==> 1
4612:LVR:0:NEG:org.joda.time.Hours@isGreaterThan(org.joda.time.Hours):459:0 |==> -1
4613:ROR:>(int,int):!=(int,int):org.joda.time.Hours@isGreaterThan(org.joda.time.Hours):459:getValue() > 0 |==> getValue() != 0
4614:ROR:>(int,int):>=(int,int):org.joda.time.Hours@isGreaterThan(org.joda.time.Hours):459:getValue() > 0 |==> getValue() >= 0
4615:ROR:>(int,int):FALSE(int,int):org.joda.time.Hours@isGreaterThan(org.joda.time.Hours):459:getValue() > 0 |==> false
4616:ROR:>(int,int):!=(int,int):org.joda.time.Hours@isGreaterThan(org.joda.time.Hours):461:getValue() > other.getValue() |==> getValue() != other.getValue()
4617:ROR:>(int,int):>=(int,int):org.joda.time.Hours@isGreaterThan(org.joda.time.Hours):461:getValue() > other.getValue() |==> getValue() >= other.getValue()
4618:ROR:>(int,int):FALSE(int,int):org.joda.time.Hours@isGreaterThan(org.joda.time.Hours):461:getValue() > other.getValue() |==> false
4619:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Hours@isLessThan(org.joda.time.Hours):471:other == null |==> false
4620:LVR:0:POS:org.joda.time.Hours@isLessThan(org.joda.time.Hours):472:0 |==> 1
4621:LVR:0:NEG:org.joda.time.Hours@isLessThan(org.joda.time.Hours):472:0 |==> -1
4622:ROR:<(int,int):!=(int,int):org.joda.time.Hours@isLessThan(org.joda.time.Hours):472:getValue() < 0 |==> getValue() != 0
4623:ROR:<(int,int):<=(int,int):org.joda.time.Hours@isLessThan(org.joda.time.Hours):472:getValue() < 0 |==> getValue() <= 0
4624:ROR:<(int,int):FALSE(int,int):org.joda.time.Hours@isLessThan(org.joda.time.Hours):472:getValue() < 0 |==> false
4625:ROR:<(int,int):!=(int,int):org.joda.time.Hours@isLessThan(org.joda.time.Hours):474:getValue() < other.getValue() |==> getValue() != other.getValue()
4626:ROR:<(int,int):<=(int,int):org.joda.time.Hours@isLessThan(org.joda.time.Hours):474:getValue() < other.getValue() |==> getValue() <= other.getValue()
4627:ROR:<(int,int):FALSE(int,int):org.joda.time.Hours@isLessThan(org.joda.time.Hours):474:getValue() < other.getValue() |==> false
4628:LVR:0:POS:org.joda.time.Minutes:45:0 |==> 1
4629:LVR:0:NEG:org.joda.time.Minutes:45:0 |==> -1
4630:LVR:POS:0:org.joda.time.Minutes:47:1 |==> 0
4631:LVR:POS:NEG:org.joda.time.Minutes:47:1 |==> -1
4632:LVR:POS:0:org.joda.time.Minutes:49:2 |==> 0
4633:LVR:POS:NEG:org.joda.time.Minutes:49:2 |==> -2
4634:LVR:POS:0:org.joda.time.Minutes:51:3 |==> 0
4635:LVR:POS:NEG:org.joda.time.Minutes:51:3 |==> -3
4636:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.Minutes@minutesBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):118:start instanceof LocalTime && end instanceof LocalTime |==> start instanceof LocalTime == end instanceof LocalTime
4637:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.Minutes@minutesBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):118:start instanceof LocalTime && end instanceof LocalTime |==> false
4638:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.Minutes@minutesBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):118:start instanceof LocalTime && end instanceof LocalTime |==> start instanceof LocalTime
4639:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.Minutes@minutesBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):118:start instanceof LocalTime && end instanceof LocalTime |==> end instanceof LocalTime
4640:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Minutes@minutesIn(org.joda.time.ReadableInterval):137:interval == null |==> false
4641:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Minutes@parseMinutes(java.lang.String):182:periodStr == null |==> false
4642:AOR:/(int,int):%(int,int):org.joda.time.Minutes@toStandardWeeks():244:getValue() / DateTimeConstants.MINUTES_PER_WEEK |==> getValue() % DateTimeConstants.MINUTES_PER_WEEK
4643:AOR:/(int,int):*(int,int):org.joda.time.Minutes@toStandardWeeks():244:getValue() / DateTimeConstants.MINUTES_PER_WEEK |==> getValue() * DateTimeConstants.MINUTES_PER_WEEK
4644:AOR:/(int,int):+(int,int):org.joda.time.Minutes@toStandardWeeks():244:getValue() / DateTimeConstants.MINUTES_PER_WEEK |==> getValue() + DateTimeConstants.MINUTES_PER_WEEK
4645:AOR:/(int,int):-(int,int):org.joda.time.Minutes@toStandardWeeks():244:getValue() / DateTimeConstants.MINUTES_PER_WEEK |==> getValue() - DateTimeConstants.MINUTES_PER_WEEK
4646:AOR:/(int,int):%(int,int):org.joda.time.Minutes@toStandardDays():261:getValue() / DateTimeConstants.MINUTES_PER_DAY |==> getValue() % DateTimeConstants.MINUTES_PER_DAY
4647:AOR:/(int,int):*(int,int):org.joda.time.Minutes@toStandardDays():261:getValue() / DateTimeConstants.MINUTES_PER_DAY |==> getValue() * DateTimeConstants.MINUTES_PER_DAY
4648:AOR:/(int,int):+(int,int):org.joda.time.Minutes@toStandardDays():261:getValue() / DateTimeConstants.MINUTES_PER_DAY |==> getValue() + DateTimeConstants.MINUTES_PER_DAY
4649:AOR:/(int,int):-(int,int):org.joda.time.Minutes@toStandardDays():261:getValue() / DateTimeConstants.MINUTES_PER_DAY |==> getValue() - DateTimeConstants.MINUTES_PER_DAY
4650:AOR:/(int,int):%(int,int):org.joda.time.Minutes@toStandardHours():277:getValue() / DateTimeConstants.MINUTES_PER_HOUR |==> getValue() % DateTimeConstants.MINUTES_PER_HOUR
4651:AOR:/(int,int):*(int,int):org.joda.time.Minutes@toStandardHours():277:getValue() / DateTimeConstants.MINUTES_PER_HOUR |==> getValue() * DateTimeConstants.MINUTES_PER_HOUR
4652:AOR:/(int,int):+(int,int):org.joda.time.Minutes@toStandardHours():277:getValue() / DateTimeConstants.MINUTES_PER_HOUR |==> getValue() + DateTimeConstants.MINUTES_PER_HOUR
4653:AOR:/(int,int):-(int,int):org.joda.time.Minutes@toStandardHours():277:getValue() / DateTimeConstants.MINUTES_PER_HOUR |==> getValue() - DateTimeConstants.MINUTES_PER_HOUR
4654:AOR:*(long,long):%(long,long):org.joda.time.Minutes@toStandardDuration():313:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes % DateTimeConstants.MILLIS_PER_MINUTE
4655:AOR:*(long,long):+(long,long):org.joda.time.Minutes@toStandardDuration():313:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes + DateTimeConstants.MILLIS_PER_MINUTE
4656:AOR:*(long,long):-(long,long):org.joda.time.Minutes@toStandardDuration():313:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes - DateTimeConstants.MILLIS_PER_MINUTE
4657:AOR:*(long,long):/(long,long):org.joda.time.Minutes@toStandardDuration():313:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes / DateTimeConstants.MILLIS_PER_MINUTE
4658:LVR:0:POS:org.joda.time.Minutes@plus(int):337:0 |==> 1
4659:LVR:0:NEG:org.joda.time.Minutes@plus(int):337:0 |==> -1
4660:ROR:==(int,int):<=(int,int):org.joda.time.Minutes@plus(int):337:minutes == 0 |==> minutes <= 0
4661:ROR:==(int,int):>=(int,int):org.joda.time.Minutes@plus(int):337:minutes == 0 |==> minutes >= 0
4662:ROR:==(int,int):FALSE(int,int):org.joda.time.Minutes@plus(int):337:minutes == 0 |==> false
4663:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Minutes@plus(org.joda.time.Minutes):353:minutes == null |==> false
4664:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Minutes@minus(org.joda.time.Minutes):383:minutes == null |==> false
4665:LVR:POS:0:org.joda.time.Minutes@dividedBy(int):414:1 |==> 0
4666:LVR:POS:NEG:org.joda.time.Minutes@dividedBy(int):414:1 |==> -1
4667:ROR:==(int,int):<=(int,int):org.joda.time.Minutes@dividedBy(int):414:divisor == 1 |==> divisor <= 1
4668:ROR:==(int,int):>=(int,int):org.joda.time.Minutes@dividedBy(int):414:divisor == 1 |==> divisor >= 1
4669:ROR:==(int,int):FALSE(int,int):org.joda.time.Minutes@dividedBy(int):414:divisor == 1 |==> false
4670:AOR:/(int,int):%(int,int):org.joda.time.Minutes@dividedBy(int):417:getValue() / divisor |==> getValue() % divisor
4671:AOR:/(int,int):*(int,int):org.joda.time.Minutes@dividedBy(int):417:getValue() / divisor |==> getValue() * divisor
4672:AOR:/(int,int):+(int,int):org.joda.time.Minutes@dividedBy(int):417:getValue() / divisor |==> getValue() + divisor
4673:AOR:/(int,int):-(int,int):org.joda.time.Minutes@dividedBy(int):417:getValue() / divisor |==> getValue() - divisor
4674:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Minutes@isGreaterThan(org.joda.time.Minutes):439:other == null |==> false
4675:LVR:0:POS:org.joda.time.Minutes@isGreaterThan(org.joda.time.Minutes):440:0 |==> 1
4676:LVR:0:NEG:org.joda.time.Minutes@isGreaterThan(org.joda.time.Minutes):440:0 |==> -1
4677:ROR:>(int,int):!=(int,int):org.joda.time.Minutes@isGreaterThan(org.joda.time.Minutes):440:getValue() > 0 |==> getValue() != 0
4678:ROR:>(int,int):>=(int,int):org.joda.time.Minutes@isGreaterThan(org.joda.time.Minutes):440:getValue() > 0 |==> getValue() >= 0
4679:ROR:>(int,int):FALSE(int,int):org.joda.time.Minutes@isGreaterThan(org.joda.time.Minutes):440:getValue() > 0 |==> false
4680:ROR:>(int,int):!=(int,int):org.joda.time.Minutes@isGreaterThan(org.joda.time.Minutes):442:getValue() > other.getValue() |==> getValue() != other.getValue()
4681:ROR:>(int,int):>=(int,int):org.joda.time.Minutes@isGreaterThan(org.joda.time.Minutes):442:getValue() > other.getValue() |==> getValue() >= other.getValue()
4682:ROR:>(int,int):FALSE(int,int):org.joda.time.Minutes@isGreaterThan(org.joda.time.Minutes):442:getValue() > other.getValue() |==> false
4683:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Minutes@isLessThan(org.joda.time.Minutes):452:other == null |==> false
4684:LVR:0:POS:org.joda.time.Minutes@isLessThan(org.joda.time.Minutes):453:0 |==> 1
4685:LVR:0:NEG:org.joda.time.Minutes@isLessThan(org.joda.time.Minutes):453:0 |==> -1
4686:ROR:<(int,int):!=(int,int):org.joda.time.Minutes@isLessThan(org.joda.time.Minutes):453:getValue() < 0 |==> getValue() != 0
4687:ROR:<(int,int):<=(int,int):org.joda.time.Minutes@isLessThan(org.joda.time.Minutes):453:getValue() < 0 |==> getValue() <= 0
4688:ROR:<(int,int):FALSE(int,int):org.joda.time.Minutes@isLessThan(org.joda.time.Minutes):453:getValue() < 0 |==> false
4689:ROR:<(int,int):!=(int,int):org.joda.time.Minutes@isLessThan(org.joda.time.Minutes):455:getValue() < other.getValue() |==> getValue() != other.getValue()
4690:ROR:<(int,int):<=(int,int):org.joda.time.Minutes@isLessThan(org.joda.time.Minutes):455:getValue() < other.getValue() |==> getValue() <= other.getValue()
4691:ROR:<(int,int):FALSE(int,int):org.joda.time.Minutes@isLessThan(org.joda.time.Minutes):455:getValue() < other.getValue() |==> false
4692:LVR:0:POS:org.joda.time.Seconds:45:0 |==> 1
4693:LVR:0:NEG:org.joda.time.Seconds:45:0 |==> -1
4694:LVR:POS:0:org.joda.time.Seconds:47:1 |==> 0
4695:LVR:POS:NEG:org.joda.time.Seconds:47:1 |==> -1
4696:LVR:POS:0:org.joda.time.Seconds:49:2 |==> 0
4697:LVR:POS:NEG:org.joda.time.Seconds:49:2 |==> -2
4698:LVR:POS:0:org.joda.time.Seconds:51:3 |==> 0
4699:LVR:POS:NEG:org.joda.time.Seconds:51:3 |==> -3
4700:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.Seconds@secondsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):118:start instanceof LocalTime && end instanceof LocalTime |==> start instanceof LocalTime == end instanceof LocalTime
4701:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.Seconds@secondsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):118:start instanceof LocalTime && end instanceof LocalTime |==> false
4702:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.Seconds@secondsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):118:start instanceof LocalTime && end instanceof LocalTime |==> start instanceof LocalTime
4703:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.Seconds@secondsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):118:start instanceof LocalTime && end instanceof LocalTime |==> end instanceof LocalTime
4704:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Seconds@secondsIn(org.joda.time.ReadableInterval):137:interval == null |==> false
4705:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Seconds@parseSeconds(java.lang.String):182:periodStr == null |==> false
4706:AOR:/(int,int):%(int,int):org.joda.time.Seconds@toStandardWeeks():245:getValue() / DateTimeConstants.SECONDS_PER_WEEK |==> getValue() % DateTimeConstants.SECONDS_PER_WEEK
4707:AOR:/(int,int):*(int,int):org.joda.time.Seconds@toStandardWeeks():245:getValue() / DateTimeConstants.SECONDS_PER_WEEK |==> getValue() * DateTimeConstants.SECONDS_PER_WEEK
4708:AOR:/(int,int):+(int,int):org.joda.time.Seconds@toStandardWeeks():245:getValue() / DateTimeConstants.SECONDS_PER_WEEK |==> getValue() + DateTimeConstants.SECONDS_PER_WEEK
4709:AOR:/(int,int):-(int,int):org.joda.time.Seconds@toStandardWeeks():245:getValue() / DateTimeConstants.SECONDS_PER_WEEK |==> getValue() - DateTimeConstants.SECONDS_PER_WEEK
4710:AOR:/(int,int):%(int,int):org.joda.time.Seconds@toStandardDays():262:getValue() / DateTimeConstants.SECONDS_PER_DAY |==> getValue() % DateTimeConstants.SECONDS_PER_DAY
4711:AOR:/(int,int):*(int,int):org.joda.time.Seconds@toStandardDays():262:getValue() / DateTimeConstants.SECONDS_PER_DAY |==> getValue() * DateTimeConstants.SECONDS_PER_DAY
4712:AOR:/(int,int):+(int,int):org.joda.time.Seconds@toStandardDays():262:getValue() / DateTimeConstants.SECONDS_PER_DAY |==> getValue() + DateTimeConstants.SECONDS_PER_DAY
4713:AOR:/(int,int):-(int,int):org.joda.time.Seconds@toStandardDays():262:getValue() / DateTimeConstants.SECONDS_PER_DAY |==> getValue() - DateTimeConstants.SECONDS_PER_DAY
4714:AOR:/(int,int):%(int,int):org.joda.time.Seconds@toStandardHours():278:getValue() / DateTimeConstants.SECONDS_PER_HOUR |==> getValue() % DateTimeConstants.SECONDS_PER_HOUR
4715:AOR:/(int,int):*(int,int):org.joda.time.Seconds@toStandardHours():278:getValue() / DateTimeConstants.SECONDS_PER_HOUR |==> getValue() * DateTimeConstants.SECONDS_PER_HOUR
4716:AOR:/(int,int):+(int,int):org.joda.time.Seconds@toStandardHours():278:getValue() / DateTimeConstants.SECONDS_PER_HOUR |==> getValue() + DateTimeConstants.SECONDS_PER_HOUR
4717:AOR:/(int,int):-(int,int):org.joda.time.Seconds@toStandardHours():278:getValue() / DateTimeConstants.SECONDS_PER_HOUR |==> getValue() - DateTimeConstants.SECONDS_PER_HOUR
4718:AOR:/(int,int):%(int,int):org.joda.time.Seconds@toStandardMinutes():294:getValue() / DateTimeConstants.SECONDS_PER_MINUTE |==> getValue() % DateTimeConstants.SECONDS_PER_MINUTE
4719:AOR:/(int,int):*(int,int):org.joda.time.Seconds@toStandardMinutes():294:getValue() / DateTimeConstants.SECONDS_PER_MINUTE |==> getValue() * DateTimeConstants.SECONDS_PER_MINUTE
4720:AOR:/(int,int):+(int,int):org.joda.time.Seconds@toStandardMinutes():294:getValue() / DateTimeConstants.SECONDS_PER_MINUTE |==> getValue() + DateTimeConstants.SECONDS_PER_MINUTE
4721:AOR:/(int,int):-(int,int):org.joda.time.Seconds@toStandardMinutes():294:getValue() / DateTimeConstants.SECONDS_PER_MINUTE |==> getValue() - DateTimeConstants.SECONDS_PER_MINUTE
4722:AOR:*(long,long):%(long,long):org.joda.time.Seconds@toStandardDuration():313:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds % DateTimeConstants.MILLIS_PER_SECOND
4723:AOR:*(long,long):+(long,long):org.joda.time.Seconds@toStandardDuration():313:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds + DateTimeConstants.MILLIS_PER_SECOND
4724:AOR:*(long,long):-(long,long):org.joda.time.Seconds@toStandardDuration():313:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds - DateTimeConstants.MILLIS_PER_SECOND
4725:AOR:*(long,long):/(long,long):org.joda.time.Seconds@toStandardDuration():313:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds / DateTimeConstants.MILLIS_PER_SECOND
4726:LVR:0:POS:org.joda.time.Seconds@plus(int):337:0 |==> 1
4727:LVR:0:NEG:org.joda.time.Seconds@plus(int):337:0 |==> -1
4728:ROR:==(int,int):<=(int,int):org.joda.time.Seconds@plus(int):337:seconds == 0 |==> seconds <= 0
4729:ROR:==(int,int):>=(int,int):org.joda.time.Seconds@plus(int):337:seconds == 0 |==> seconds >= 0
4730:ROR:==(int,int):FALSE(int,int):org.joda.time.Seconds@plus(int):337:seconds == 0 |==> false
4731:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Seconds@plus(org.joda.time.Seconds):353:seconds == null |==> false
4732:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Seconds@minus(org.joda.time.Seconds):383:seconds == null |==> false
4733:LVR:POS:0:org.joda.time.Seconds@dividedBy(int):414:1 |==> 0
4734:LVR:POS:NEG:org.joda.time.Seconds@dividedBy(int):414:1 |==> -1
4735:ROR:==(int,int):<=(int,int):org.joda.time.Seconds@dividedBy(int):414:divisor == 1 |==> divisor <= 1
4736:ROR:==(int,int):>=(int,int):org.joda.time.Seconds@dividedBy(int):414:divisor == 1 |==> divisor >= 1
4737:ROR:==(int,int):FALSE(int,int):org.joda.time.Seconds@dividedBy(int):414:divisor == 1 |==> false
4738:AOR:/(int,int):%(int,int):org.joda.time.Seconds@dividedBy(int):417:getValue() / divisor |==> getValue() % divisor
4739:AOR:/(int,int):*(int,int):org.joda.time.Seconds@dividedBy(int):417:getValue() / divisor |==> getValue() * divisor
4740:AOR:/(int,int):+(int,int):org.joda.time.Seconds@dividedBy(int):417:getValue() / divisor |==> getValue() + divisor
4741:AOR:/(int,int):-(int,int):org.joda.time.Seconds@dividedBy(int):417:getValue() / divisor |==> getValue() - divisor
4742:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Seconds@isGreaterThan(org.joda.time.Seconds):439:other == null |==> false
4743:LVR:0:POS:org.joda.time.Seconds@isGreaterThan(org.joda.time.Seconds):440:0 |==> 1
4744:LVR:0:NEG:org.joda.time.Seconds@isGreaterThan(org.joda.time.Seconds):440:0 |==> -1
4745:ROR:>(int,int):!=(int,int):org.joda.time.Seconds@isGreaterThan(org.joda.time.Seconds):440:getValue() > 0 |==> getValue() != 0
4746:ROR:>(int,int):>=(int,int):org.joda.time.Seconds@isGreaterThan(org.joda.time.Seconds):440:getValue() > 0 |==> getValue() >= 0
4747:ROR:>(int,int):FALSE(int,int):org.joda.time.Seconds@isGreaterThan(org.joda.time.Seconds):440:getValue() > 0 |==> false
4748:ROR:>(int,int):!=(int,int):org.joda.time.Seconds@isGreaterThan(org.joda.time.Seconds):442:getValue() > other.getValue() |==> getValue() != other.getValue()
4749:ROR:>(int,int):>=(int,int):org.joda.time.Seconds@isGreaterThan(org.joda.time.Seconds):442:getValue() > other.getValue() |==> getValue() >= other.getValue()
4750:ROR:>(int,int):FALSE(int,int):org.joda.time.Seconds@isGreaterThan(org.joda.time.Seconds):442:getValue() > other.getValue() |==> false
4751:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Seconds@isLessThan(org.joda.time.Seconds):452:other == null |==> false
4752:LVR:0:POS:org.joda.time.Seconds@isLessThan(org.joda.time.Seconds):453:0 |==> 1
4753:LVR:0:NEG:org.joda.time.Seconds@isLessThan(org.joda.time.Seconds):453:0 |==> -1
4754:ROR:<(int,int):!=(int,int):org.joda.time.Seconds@isLessThan(org.joda.time.Seconds):453:getValue() < 0 |==> getValue() != 0
4755:ROR:<(int,int):<=(int,int):org.joda.time.Seconds@isLessThan(org.joda.time.Seconds):453:getValue() < 0 |==> getValue() <= 0
4756:ROR:<(int,int):FALSE(int,int):org.joda.time.Seconds@isLessThan(org.joda.time.Seconds):453:getValue() < 0 |==> false
4757:ROR:<(int,int):!=(int,int):org.joda.time.Seconds@isLessThan(org.joda.time.Seconds):455:getValue() < other.getValue() |==> getValue() != other.getValue()
4758:ROR:<(int,int):<=(int,int):org.joda.time.Seconds@isLessThan(org.joda.time.Seconds):455:getValue() < other.getValue() |==> getValue() <= other.getValue()
4759:ROR:<(int,int):FALSE(int,int):org.joda.time.Seconds@isLessThan(org.joda.time.Seconds):455:getValue() < other.getValue() |==> false
4760:LVR:0:POS:org.joda.time.Duration:44:0L |==> 1L
4761:LVR:0:NEG:org.joda.time.Duration:44:0L |==> -1L
4762:LVR:0:POS:org.joda.time.Duration@standardDays(long):82:0 |==> 1
4763:LVR:0:NEG:org.joda.time.Duration@standardDays(long):82:0 |==> -1
4764:ROR:==(long,long):<=(long,long):org.joda.time.Duration@standardDays(long):82:days == 0 |==> days <= 0
4765:ROR:==(long,long):>=(long,long):org.joda.time.Duration@standardDays(long):82:days == 0 |==> days >= 0
4766:ROR:==(long,long):FALSE(long,long):org.joda.time.Duration@standardDays(long):82:days == 0 |==> false
4767:LVR:0:POS:org.joda.time.Duration@standardHours(long):105:0 |==> 1
4768:LVR:0:NEG:org.joda.time.Duration@standardHours(long):105:0 |==> -1
4769:ROR:==(long,long):<=(long,long):org.joda.time.Duration@standardHours(long):105:hours == 0 |==> hours <= 0
4770:ROR:==(long,long):>=(long,long):org.joda.time.Duration@standardHours(long):105:hours == 0 |==> hours >= 0
4771:ROR:==(long,long):FALSE(long,long):org.joda.time.Duration@standardHours(long):105:hours == 0 |==> false
4772:LVR:0:POS:org.joda.time.Duration@standardMinutes(long):128:0 |==> 1
4773:LVR:0:NEG:org.joda.time.Duration@standardMinutes(long):128:0 |==> -1
4774:ROR:==(long,long):<=(long,long):org.joda.time.Duration@standardMinutes(long):128:minutes == 0 |==> minutes <= 0
4775:ROR:==(long,long):>=(long,long):org.joda.time.Duration@standardMinutes(long):128:minutes == 0 |==> minutes >= 0
4776:ROR:==(long,long):FALSE(long,long):org.joda.time.Duration@standardMinutes(long):128:minutes == 0 |==> false
4777:LVR:0:POS:org.joda.time.Duration@standardSeconds(long):150:0 |==> 1
4778:LVR:0:NEG:org.joda.time.Duration@standardSeconds(long):150:0 |==> -1
4779:ROR:==(long,long):<=(long,long):org.joda.time.Duration@standardSeconds(long):150:seconds == 0 |==> seconds <= 0
4780:ROR:==(long,long):>=(long,long):org.joda.time.Duration@standardSeconds(long):150:seconds == 0 |==> seconds >= 0
4781:ROR:==(long,long):FALSE(long,long):org.joda.time.Duration@standardSeconds(long):150:seconds == 0 |==> false
4782:LVR:0:POS:org.joda.time.Duration@millis(long):164:0 |==> 1
4783:LVR:0:NEG:org.joda.time.Duration@millis(long):164:0 |==> -1
4784:ROR:==(long,long):<=(long,long):org.joda.time.Duration@millis(long):164:millis == 0 |==> millis <= 0
4785:ROR:==(long,long):>=(long,long):org.joda.time.Duration@millis(long):164:millis == 0 |==> millis >= 0
4786:ROR:==(long,long):FALSE(long,long):org.joda.time.Duration@millis(long):164:millis == 0 |==> false
4787:AOR:/(long,long):%(long,long):org.joda.time.Duration@getStandardDays():230:getMillis() / DateTimeConstants.MILLIS_PER_DAY |==> getMillis() % DateTimeConstants.MILLIS_PER_DAY
4788:AOR:/(long,long):*(long,long):org.joda.time.Duration@getStandardDays():230:getMillis() / DateTimeConstants.MILLIS_PER_DAY |==> getMillis() * DateTimeConstants.MILLIS_PER_DAY
4789:AOR:/(long,long):+(long,long):org.joda.time.Duration@getStandardDays():230:getMillis() / DateTimeConstants.MILLIS_PER_DAY |==> getMillis() + DateTimeConstants.MILLIS_PER_DAY
4790:AOR:/(long,long):-(long,long):org.joda.time.Duration@getStandardDays():230:getMillis() / DateTimeConstants.MILLIS_PER_DAY |==> getMillis() - DateTimeConstants.MILLIS_PER_DAY
4791:AOR:/(long,long):%(long,long):org.joda.time.Duration@getStandardHours():248:getMillis() / DateTimeConstants.MILLIS_PER_HOUR |==> getMillis() % DateTimeConstants.MILLIS_PER_HOUR
4792:AOR:/(long,long):*(long,long):org.joda.time.Duration@getStandardHours():248:getMillis() / DateTimeConstants.MILLIS_PER_HOUR |==> getMillis() * DateTimeConstants.MILLIS_PER_HOUR
4793:AOR:/(long,long):+(long,long):org.joda.time.Duration@getStandardHours():248:getMillis() / DateTimeConstants.MILLIS_PER_HOUR |==> getMillis() + DateTimeConstants.MILLIS_PER_HOUR
4794:AOR:/(long,long):-(long,long):org.joda.time.Duration@getStandardHours():248:getMillis() / DateTimeConstants.MILLIS_PER_HOUR |==> getMillis() - DateTimeConstants.MILLIS_PER_HOUR
4795:AOR:/(long,long):%(long,long):org.joda.time.Duration@getStandardMinutes():266:getMillis() / DateTimeConstants.MILLIS_PER_MINUTE |==> getMillis() % DateTimeConstants.MILLIS_PER_MINUTE
4796:AOR:/(long,long):*(long,long):org.joda.time.Duration@getStandardMinutes():266:getMillis() / DateTimeConstants.MILLIS_PER_MINUTE |==> getMillis() * DateTimeConstants.MILLIS_PER_MINUTE
4797:AOR:/(long,long):+(long,long):org.joda.time.Duration@getStandardMinutes():266:getMillis() / DateTimeConstants.MILLIS_PER_MINUTE |==> getMillis() + DateTimeConstants.MILLIS_PER_MINUTE
4798:AOR:/(long,long):-(long,long):org.joda.time.Duration@getStandardMinutes():266:getMillis() / DateTimeConstants.MILLIS_PER_MINUTE |==> getMillis() - DateTimeConstants.MILLIS_PER_MINUTE
4799:AOR:/(long,long):%(long,long):org.joda.time.Duration@getStandardSeconds():283:getMillis() / DateTimeConstants.MILLIS_PER_SECOND |==> getMillis() % DateTimeConstants.MILLIS_PER_SECOND
4800:AOR:/(long,long):*(long,long):org.joda.time.Duration@getStandardSeconds():283:getMillis() / DateTimeConstants.MILLIS_PER_SECOND |==> getMillis() * DateTimeConstants.MILLIS_PER_SECOND
4801:AOR:/(long,long):+(long,long):org.joda.time.Duration@getStandardSeconds():283:getMillis() / DateTimeConstants.MILLIS_PER_SECOND |==> getMillis() + DateTimeConstants.MILLIS_PER_SECOND
4802:AOR:/(long,long):-(long,long):org.joda.time.Duration@getStandardSeconds():283:getMillis() / DateTimeConstants.MILLIS_PER_SECOND |==> getMillis() - DateTimeConstants.MILLIS_PER_SECOND
4803:ROR:==(long,long):<=(long,long):org.joda.time.Duration@withMillis(long):373:duration == getMillis() |==> duration <= getMillis()
4804:ROR:==(long,long):>=(long,long):org.joda.time.Duration@withMillis(long):373:duration == getMillis() |==> duration >= getMillis()
4805:ROR:==(long,long):FALSE(long,long):org.joda.time.Duration@withMillis(long):373:duration == getMillis() |==> false
4806:LVR:0:POS:org.joda.time.Duration@withDurationAdded(long,int):390:0 |==> 1
4807:LVR:0:NEG:org.joda.time.Duration@withDurationAdded(long,int):390:0 |==> -1
4808:ROR:==(long,long):<=(long,long):org.joda.time.Duration@withDurationAdded(long,int):390:durationToAdd == 0 |==> durationToAdd <= 0
4809:ROR:==(long,long):>=(long,long):org.joda.time.Duration@withDurationAdded(long,int):390:durationToAdd == 0 |==> durationToAdd >= 0
4810:ROR:==(long,long):FALSE(long,long):org.joda.time.Duration@withDurationAdded(long,int):390:durationToAdd == 0 |==> false
4811:LVR:0:POS:org.joda.time.Duration@withDurationAdded(long,int):390:0 |==> 1
4812:LVR:0:NEG:org.joda.time.Duration@withDurationAdded(long,int):390:0 |==> -1
4813:ROR:==(int,int):<=(int,int):org.joda.time.Duration@withDurationAdded(long,int):390:scalar == 0 |==> scalar <= 0
4814:ROR:==(int,int):>=(int,int):org.joda.time.Duration@withDurationAdded(long,int):390:scalar == 0 |==> scalar >= 0
4815:ROR:==(int,int):FALSE(int,int):org.joda.time.Duration@withDurationAdded(long,int):390:scalar == 0 |==> false
4816:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.Duration@withDurationAdded(long,int):390:durationToAdd == 0 || scalar == 0 |==> durationToAdd == 0 != (scalar == 0)
4817:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.Duration@withDurationAdded(long,int):390:durationToAdd == 0 || scalar == 0 |==> durationToAdd == 0
4818:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.Duration@withDurationAdded(long,int):390:durationToAdd == 0 || scalar == 0 |==> scalar == 0
4819:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.Duration@withDurationAdded(long,int):390:durationToAdd == 0 || scalar == 0 |==> true
4820:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Duration@withDurationAdded(org.joda.time.ReadableDuration,int):409:durationToAdd == null |==> false
4821:LVR:0:POS:org.joda.time.Duration@withDurationAdded(org.joda.time.ReadableDuration,int):409:0 |==> 1
4822:LVR:0:NEG:org.joda.time.Duration@withDurationAdded(org.joda.time.ReadableDuration,int):409:0 |==> -1
4823:ROR:==(int,int):<=(int,int):org.joda.time.Duration@withDurationAdded(org.joda.time.ReadableDuration,int):409:scalar == 0 |==> scalar <= 0
4824:ROR:==(int,int):>=(int,int):org.joda.time.Duration@withDurationAdded(org.joda.time.ReadableDuration,int):409:scalar == 0 |==> scalar >= 0
4825:ROR:==(int,int):FALSE(int,int):org.joda.time.Duration@withDurationAdded(org.joda.time.ReadableDuration,int):409:scalar == 0 |==> false
4826:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.Duration@withDurationAdded(org.joda.time.ReadableDuration,int):409:durationToAdd == null || scalar == 0 |==> durationToAdd == null != (scalar == 0)
4827:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.Duration@withDurationAdded(org.joda.time.ReadableDuration,int):409:durationToAdd == null || scalar == 0 |==> durationToAdd == null
4828:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.Duration@withDurationAdded(org.joda.time.ReadableDuration,int):409:durationToAdd == null || scalar == 0 |==> scalar == 0
4829:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.Duration@withDurationAdded(org.joda.time.ReadableDuration,int):409:durationToAdd == null || scalar == 0 |==> true
4830:LVR:POS:0:org.joda.time.Duration@plus(long):426:1 |==> 0
4831:LVR:POS:NEG:org.joda.time.Duration@plus(long):426:1 |==> -1
4832:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Duration@plus(org.joda.time.ReadableDuration):439:amount == null |==> false
4833:LVR:POS:0:org.joda.time.Duration@plus(org.joda.time.ReadableDuration):442:1 |==> 0
4834:LVR:POS:NEG:org.joda.time.Duration@plus(org.joda.time.ReadableDuration):442:1 |==> -1
4835:LVR:NEG:0:org.joda.time.Duration@minus(long):455:-1 |==> 0
4836:LVR:NEG:POS:org.joda.time.Duration@minus(long):455:-1 |==> 1
4837:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Duration@minus(org.joda.time.ReadableDuration):468:amount == null |==> false
4838:LVR:NEG:0:org.joda.time.Duration@minus(org.joda.time.ReadableDuration):471:-1 |==> 0
4839:LVR:NEG:POS:org.joda.time.Duration@minus(org.joda.time.ReadableDuration):471:-1 |==> 1
4840:LVR:POS:0:org.joda.time.Duration@multipliedBy(long):485:1 |==> 0
4841:LVR:POS:NEG:org.joda.time.Duration@multipliedBy(long):485:1 |==> -1
4842:ROR:==(long,long):<=(long,long):org.joda.time.Duration@multipliedBy(long):485:multiplicand == 1 |==> multiplicand <= 1
4843:ROR:==(long,long):>=(long,long):org.joda.time.Duration@multipliedBy(long):485:multiplicand == 1 |==> multiplicand >= 1
4844:ROR:==(long,long):FALSE(long,long):org.joda.time.Duration@multipliedBy(long):485:multiplicand == 1 |==> false
4845:LVR:POS:0:org.joda.time.Duration@dividedBy(long):502:1 |==> 0
4846:LVR:POS:NEG:org.joda.time.Duration@dividedBy(long):502:1 |==> -1
4847:ROR:==(long,long):<=(long,long):org.joda.time.Duration@dividedBy(long):502:divisor == 1 |==> divisor <= 1
4848:ROR:==(long,long):>=(long,long):org.joda.time.Duration@dividedBy(long):502:divisor == 1 |==> divisor >= 1
4849:ROR:==(long,long):FALSE(long,long):org.joda.time.Duration@dividedBy(long):502:divisor == 1 |==> false
4850:ROR:==(long,long):<=(long,long):org.joda.time.Duration@negated():515:getMillis() == Long.MIN_VALUE |==> getMillis() <= Long.MIN_VALUE
4851:ROR:==(long,long):>=(long,long):org.joda.time.Duration@negated():515:getMillis() == Long.MIN_VALUE |==> getMillis() >= Long.MIN_VALUE
4852:ROR:==(long,long):FALSE(long,long):org.joda.time.Duration@negated():515:getMillis() == Long.MIN_VALUE |==> false
4853:ORU:-(long):+(long):org.joda.time.Duration@negated():518:-getMillis() |==> +getMillis()
4854:ORU:-(long):~(long):org.joda.time.Duration@negated():518:-getMillis() |==> ~getMillis()
4855:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseDuration@<init>(long):62:iMillis = duration |==> <NO-OP>
4856:ORU:-(long):+(long):org.joda.time.base.BaseDuration@<init>(long,long):74:-startInstant |==> +startInstant
4857:ORU:-(long):~(long):org.joda.time.base.BaseDuration@<init>(long,long):74:-startInstant |==> ~startInstant
4858:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseDuration@<init>(long,long):74:iMillis = FieldUtils.safeAdd(endInstant, -startInstant) |==> <NO-OP>
4859:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.BaseDuration@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):86:start == end |==> false
4860:LVR:0:POS:org.joda.time.base.BaseDuration@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):87:0L |==> 1L
4861:LVR:0:NEG:org.joda.time.base.BaseDuration@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):87:0L |==> -1L
4862:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseDuration@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):87:iMillis = 0L |==> <NO-OP>
4863:ORU:-(long):+(long):org.joda.time.base.BaseDuration@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):91:-startMillis |==> +startMillis
4864:ORU:-(long):~(long):org.joda.time.base.BaseDuration@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):91:-startMillis |==> ~startMillis
4865:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseDuration@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):91:iMillis = FieldUtils.safeAdd(endMillis, -startMillis) |==> <NO-OP>
4866:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseDuration@<init>(java.lang.Object):105:iMillis = converter.getDurationMillis(duration) |==> <NO-OP>
4867:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseDuration@setMillis(long):125:iMillis = duration |==> <NO-OP>
4868:ROR:<(long,long):!=(long,long):org.joda.time.base.AbstractDuration@compareTo(org.joda.time.ReadableDuration):97:thisMillis < otherMillis |==> thisMillis != otherMillis
4869:ROR:<(long,long):<=(long,long):org.joda.time.base.AbstractDuration@compareTo(org.joda.time.ReadableDuration):97:thisMillis < otherMillis |==> thisMillis <= otherMillis
4870:ROR:<(long,long):FALSE(long,long):org.joda.time.base.AbstractDuration@compareTo(org.joda.time.ReadableDuration):97:thisMillis < otherMillis |==> false
4871:LVR:NEG:0:org.joda.time.base.AbstractDuration@compareTo(org.joda.time.ReadableDuration):98:-1 |==> 0
4872:LVR:NEG:POS:org.joda.time.base.AbstractDuration@compareTo(org.joda.time.ReadableDuration):98:-1 |==> 1
4873:ROR:>(long,long):!=(long,long):org.joda.time.base.AbstractDuration@compareTo(org.joda.time.ReadableDuration):100:thisMillis > otherMillis |==> thisMillis != otherMillis
4874:ROR:>(long,long):>=(long,long):org.joda.time.base.AbstractDuration@compareTo(org.joda.time.ReadableDuration):100:thisMillis > otherMillis |==> thisMillis >= otherMillis
4875:ROR:>(long,long):FALSE(long,long):org.joda.time.base.AbstractDuration@compareTo(org.joda.time.ReadableDuration):100:thisMillis > otherMillis |==> false
4876:LVR:POS:0:org.joda.time.base.AbstractDuration@compareTo(org.joda.time.ReadableDuration):101:1 |==> 0
4877:LVR:POS:NEG:org.joda.time.base.AbstractDuration@compareTo(org.joda.time.ReadableDuration):101:1 |==> -1
4878:LVR:0:POS:org.joda.time.base.AbstractDuration@compareTo(org.joda.time.ReadableDuration):103:0 |==> 1
4879:LVR:0:NEG:org.joda.time.base.AbstractDuration@compareTo(org.joda.time.ReadableDuration):103:0 |==> -1
4880:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.AbstractDuration@isEqual(org.joda.time.ReadableDuration):113:duration == null |==> false
4881:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.AbstractDuration@isEqual(org.joda.time.ReadableDuration):114:duration = Duration.ZERO |==> <NO-OP>
4882:LVR:0:POS:org.joda.time.base.AbstractDuration@isEqual(org.joda.time.ReadableDuration):116:0 |==> 1
4883:LVR:0:NEG:org.joda.time.base.AbstractDuration@isEqual(org.joda.time.ReadableDuration):116:0 |==> -1
4884:ROR:==(int,int):<=(int,int):org.joda.time.base.AbstractDuration@isEqual(org.joda.time.ReadableDuration):116:compareTo(duration) == 0 |==> compareTo(duration) <= 0
4885:ROR:==(int,int):>=(int,int):org.joda.time.base.AbstractDuration@isEqual(org.joda.time.ReadableDuration):116:compareTo(duration) == 0 |==> compareTo(duration) >= 0
4886:ROR:==(int,int):FALSE(int,int):org.joda.time.base.AbstractDuration@isEqual(org.joda.time.ReadableDuration):116:compareTo(duration) == 0 |==> false
4887:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.AbstractDuration@isLongerThan(org.joda.time.ReadableDuration):126:duration == null |==> false
4888:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.AbstractDuration@isLongerThan(org.joda.time.ReadableDuration):127:duration = Duration.ZERO |==> <NO-OP>
4889:LVR:0:POS:org.joda.time.base.AbstractDuration@isLongerThan(org.joda.time.ReadableDuration):129:0 |==> 1
4890:LVR:0:NEG:org.joda.time.base.AbstractDuration@isLongerThan(org.joda.time.ReadableDuration):129:0 |==> -1
4891:ROR:>(int,int):!=(int,int):org.joda.time.base.AbstractDuration@isLongerThan(org.joda.time.ReadableDuration):129:compareTo(duration) > 0 |==> compareTo(duration) != 0
4892:ROR:>(int,int):>=(int,int):org.joda.time.base.AbstractDuration@isLongerThan(org.joda.time.ReadableDuration):129:compareTo(duration) > 0 |==> compareTo(duration) >= 0
4893:ROR:>(int,int):FALSE(int,int):org.joda.time.base.AbstractDuration@isLongerThan(org.joda.time.ReadableDuration):129:compareTo(duration) > 0 |==> false
4894:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.AbstractDuration@isShorterThan(org.joda.time.ReadableDuration):139:duration == null |==> false
4895:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.AbstractDuration@isShorterThan(org.joda.time.ReadableDuration):140:duration = Duration.ZERO |==> <NO-OP>
4896:LVR:0:POS:org.joda.time.base.AbstractDuration@isShorterThan(org.joda.time.ReadableDuration):142:0 |==> 1
4897:LVR:0:NEG:org.joda.time.base.AbstractDuration@isShorterThan(org.joda.time.ReadableDuration):142:0 |==> -1
4898:ROR:<(int,int):!=(int,int):org.joda.time.base.AbstractDuration@isShorterThan(org.joda.time.ReadableDuration):142:compareTo(duration) < 0 |==> compareTo(duration) != 0
4899:ROR:<(int,int):<=(int,int):org.joda.time.base.AbstractDuration@isShorterThan(org.joda.time.ReadableDuration):142:compareTo(duration) < 0 |==> compareTo(duration) <= 0
4900:ROR:<(int,int):FALSE(int,int):org.joda.time.base.AbstractDuration@isShorterThan(org.joda.time.ReadableDuration):142:compareTo(duration) < 0 |==> false
4901:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.AbstractDuration@equals(java.lang.Object):154:this == duration |==> false
4902:LVR:TRUE:FALSE:org.joda.time.base.AbstractDuration@equals(java.lang.Object):155:true |==> false
4903:LVR:FALSE:TRUE:org.joda.time.base.AbstractDuration@equals(java.lang.Object):157:false |==> true
4904:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.base.AbstractDuration@equals(java.lang.Object):157:duration instanceof ReadableDuration == false |==> false
4905:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.base.AbstractDuration@equals(java.lang.Object):157:duration instanceof ReadableDuration == false |==> duration instanceof ReadableDuration
4906:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.base.AbstractDuration@equals(java.lang.Object):157:duration instanceof ReadableDuration == false |==> false
4907:LVR:FALSE:TRUE:org.joda.time.base.AbstractDuration@equals(java.lang.Object):158:false |==> true
4908:ROR:==(long,long):<=(long,long):org.joda.time.base.AbstractDuration@equals(java.lang.Object):161:getMillis() == other.getMillis() |==> getMillis() <= other.getMillis()
4909:ROR:==(long,long):>=(long,long):org.joda.time.base.AbstractDuration@equals(java.lang.Object):161:getMillis() == other.getMillis() |==> getMillis() >= other.getMillis()
4910:ROR:==(long,long):FALSE(long,long):org.joda.time.base.AbstractDuration@equals(java.lang.Object):161:getMillis() == other.getMillis() |==> false
4911:LVR:POS:0:org.joda.time.base.AbstractDuration@hashCode():172:32 |==> 0
4912:LVR:POS:NEG:org.joda.time.base.AbstractDuration@hashCode():172:32 |==> -32
4913:SOR:>>>(long,int):<<(long,int):org.joda.time.base.AbstractDuration@hashCode():172:len >>> 32 |==> len << 32
4914:SOR:>>>(long,int):>>(long,int):org.joda.time.base.AbstractDuration@hashCode():172:len >>> 32 |==> len >> 32
4915:LOR:^(long,long):&(long,long):org.joda.time.base.AbstractDuration@hashCode():172:len ^ (len >>> 32) |==> len & (len >>> 32)
4916:LOR:^(long,long):|(long,long):org.joda.time.base.AbstractDuration@hashCode():172:len ^ (len >>> 32) |==> len | (len >>> 32)
4917:STD:<CALL>:<NO-OP>:org.joda.time.base.AbstractDuration@toString():191:buf.append("PT") |==> <NO-OP>
4918:LVR:0:POS:org.joda.time.base.AbstractDuration@toString():192:0 |==> 1
4919:LVR:0:NEG:org.joda.time.base.AbstractDuration@toString():192:0 |==> -1
4920:ROR:<(long,long):!=(long,long):org.joda.time.base.AbstractDuration@toString():192:millis < 0 |==> millis != 0
4921:ROR:<(long,long):<=(long,long):org.joda.time.base.AbstractDuration@toString():192:millis < 0 |==> millis <= 0
4922:ROR:<(long,long):FALSE(long,long):org.joda.time.base.AbstractDuration@toString():192:millis < 0 |==> false
4923:STD:<CALL>:<NO-OP>:org.joda.time.base.AbstractDuration@toString():193:FormatUtils.appendUnpaddedInteger(buf, millis) |==> <NO-OP>
4924:COR:negative:TRUE:org.joda.time.base.AbstractDuration@toString():194:negative |==> false
4925:COR:negative:FALSE:org.joda.time.base.AbstractDuration@toString():194:negative |==> true
4926:LVR:POS:0:org.joda.time.base.AbstractDuration@toString():194:7 |==> 0
4927:LVR:POS:NEG:org.joda.time.base.AbstractDuration@toString():194:7 |==> -7
4928:LVR:POS:0:org.joda.time.base.AbstractDuration@toString():194:6 |==> 0
4929:LVR:POS:NEG:org.joda.time.base.AbstractDuration@toString():194:6 |==> -6
4930:ROR:<(int,int):!=(int,int):org.joda.time.base.AbstractDuration@toString():194:buf.length() < (negative ? 7 : 6) |==> buf.length() != (negative ? 7 : 6)
4931:ROR:<(int,int):<=(int,int):org.joda.time.base.AbstractDuration@toString():194:buf.length() < (negative ? 7 : 6) |==> buf.length() <= (negative ? 7 : 6)
4932:ROR:<(int,int):FALSE(int,int):org.joda.time.base.AbstractDuration@toString():194:buf.length() < (negative ? 7 : 6) |==> false
4933:COR:negative:TRUE:org.joda.time.base.AbstractDuration@toString():195:negative |==> false
4934:COR:negative:FALSE:org.joda.time.base.AbstractDuration@toString():195:negative |==> true
4935:LVR:POS:0:org.joda.time.base.AbstractDuration@toString():195:3 |==> 0
4936:LVR:POS:NEG:org.joda.time.base.AbstractDuration@toString():195:3 |==> -3
4937:LVR:POS:0:org.joda.time.base.AbstractDuration@toString():195:2 |==> 0
4938:LVR:POS:NEG:org.joda.time.base.AbstractDuration@toString():195:2 |==> -2
4939:STD:<CALL>:<NO-OP>:org.joda.time.base.AbstractDuration@toString():195:buf.insert(negative ? 3 : 2, "0") |==> <NO-OP>
4940:LVR:POS:0:org.joda.time.base.AbstractDuration@toString():197:1000 |==> 0
4941:LVR:POS:NEG:org.joda.time.base.AbstractDuration@toString():197:1000 |==> -1000
4942:AOR:/(long,long):%(long,long):org.joda.time.base.AbstractDuration@toString():197:millis / 1000 |==> millis % 1000
4943:AOR:/(long,long):*(long,long):org.joda.time.base.AbstractDuration@toString():197:millis / 1000 |==> millis * 1000
4944:AOR:/(long,long):+(long,long):org.joda.time.base.AbstractDuration@toString():197:millis / 1000 |==> millis + 1000
4945:AOR:/(long,long):-(long,long):org.joda.time.base.AbstractDuration@toString():197:millis / 1000 |==> millis - 1000
4946:LVR:POS:0:org.joda.time.base.AbstractDuration@toString():197:1000 |==> 0
4947:LVR:POS:NEG:org.joda.time.base.AbstractDuration@toString():197:1000 |==> -1000
4948:AOR:*(long,long):%(long,long):org.joda.time.base.AbstractDuration@toString():197:(millis / 1000) * 1000 |==> (millis / 1000) % 1000
4949:AOR:*(long,long):+(long,long):org.joda.time.base.AbstractDuration@toString():197:(millis / 1000) * 1000 |==> (millis / 1000) + 1000
4950:AOR:*(long,long):-(long,long):org.joda.time.base.AbstractDuration@toString():197:(millis / 1000) * 1000 |==> (millis / 1000) - 1000
4951:AOR:*(long,long):/(long,long):org.joda.time.base.AbstractDuration@toString():197:(millis / 1000) * 1000 |==> (millis / 1000) / 1000
4952:ROR:==(long,long):<=(long,long):org.joda.time.base.AbstractDuration@toString():197:(millis / 1000) * 1000 == millis |==> (millis / 1000) * 1000 <= millis
4953:ROR:==(long,long):>=(long,long):org.joda.time.base.AbstractDuration@toString():197:(millis / 1000) * 1000 == millis |==> (millis / 1000) * 1000 >= millis
4954:ROR:==(long,long):FALSE(long,long):org.joda.time.base.AbstractDuration@toString():197:(millis / 1000) * 1000 == millis |==> false
4955:LVR:POS:0:org.joda.time.base.AbstractDuration@toString():198:3 |==> 0
4956:LVR:POS:NEG:org.joda.time.base.AbstractDuration@toString():198:3 |==> -3
4957:AOR:-(int,int):%(int,int):org.joda.time.base.AbstractDuration@toString():198:buf.length() - 3 |==> buf.length() % 3
4958:AOR:-(int,int):*(int,int):org.joda.time.base.AbstractDuration@toString():198:buf.length() - 3 |==> buf.length() * 3
4959:AOR:-(int,int):+(int,int):org.joda.time.base.AbstractDuration@toString():198:buf.length() - 3 |==> buf.length() + 3
4960:AOR:-(int,int):/(int,int):org.joda.time.base.AbstractDuration@toString():198:buf.length() - 3 |==> buf.length() / 3
4961:STD:<CALL>:<NO-OP>:org.joda.time.base.AbstractDuration@toString():198:buf.setLength(buf.length() - 3) |==> <NO-OP>
4962:LVR:POS:0:org.joda.time.base.AbstractDuration@toString():200:3 |==> 0
4963:LVR:POS:NEG:org.joda.time.base.AbstractDuration@toString():200:3 |==> -3
4964:AOR:-(int,int):%(int,int):org.joda.time.base.AbstractDuration@toString():200:buf.length() - 3 |==> buf.length() % 3
4965:AOR:-(int,int):*(int,int):org.joda.time.base.AbstractDuration@toString():200:buf.length() - 3 |==> buf.length() * 3
4966:AOR:-(int,int):+(int,int):org.joda.time.base.AbstractDuration@toString():200:buf.length() - 3 |==> buf.length() + 3
4967:AOR:-(int,int):/(int,int):org.joda.time.base.AbstractDuration@toString():200:buf.length() - 3 |==> buf.length() / 3
4968:STD:<CALL>:<NO-OP>:org.joda.time.base.AbstractDuration@toString():200:buf.insert(buf.length() - 3, ".") |==> <NO-OP>
4969:STD:<CALL>:<NO-OP>:org.joda.time.base.AbstractDuration@toString():202:buf.append('S') |==> <NO-OP>
4970:LVR:POS:0:org.joda.time.format.DateTimeParserBucket:73:8 |==> 0
4971:LVR:POS:NEG:org.joda.time.format.DateTimeParserBucket:73:8 |==> -8
4972:LVR:POS:0:org.joda.time.format.DateTimeParserBucket@<init>(long,org.joda.time.Chronology,java.util.Locale):89:2000 |==> 0
4973:LVR:POS:NEG:org.joda.time.format.DateTimeParserBucket@<init>(long,org.joda.time.Chronology,java.util.Locale):89:2000 |==> -2000
4974:LVR:POS:0:org.joda.time.format.DateTimeParserBucket@<init>(long,org.joda.time.Chronology,java.util.Locale,java.lang.Integer):105:2000 |==> 0
4975:LVR:POS:NEG:org.joda.time.format.DateTimeParserBucket@<init>(long,org.joda.time.Chronology,java.util.Locale,java.lang.Integer):105:2000 |==> -2000
4976:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeParserBucket@<init>(long,org.joda.time.Chronology,java.util.Locale,java.lang.Integer,int):121:chrono = DateTimeUtils.getChronology(chrono) |==> <NO-OP>
4977:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeParserBucket@<init>(long,org.joda.time.Chronology,java.util.Locale,java.lang.Integer,int):123:iZone = chrono.getZone() |==> <NO-OP>
4978:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeParserBucket@<init>(long,org.joda.time.Chronology,java.util.Locale,java.lang.Integer,int):125:locale == null |==> false
4979:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeParserBucket@<init>(long,org.joda.time.Chronology,java.util.Locale,java.lang.Integer,int):125:iLocale = (locale == null ? Locale.getDefault() : locale) |==> <NO-OP>
4980:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeParserBucket@<init>(long,org.joda.time.Chronology,java.util.Locale,java.lang.Integer,int):126:iPivotYear = pivotYear |==> <NO-OP>
4981:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeParserBucket@<init>(long,org.joda.time.Chronology,java.util.Locale,java.lang.Integer,int):127:iDefaultYear = defaultYear |==> <NO-OP>
4982:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeParserBucket@setZone(org.joda.time.DateTimeZone):160:iSavedState = null |==> <NO-OP>
4983:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeParserBucket@setZone(org.joda.time.DateTimeZone):161:iZone = zone |==> <NO-OP>
4984:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeParserBucket@getOffset():171:iOffset != null |==> true
4985:LVR:0:POS:org.joda.time.format.DateTimeParserBucket@getOffset():171:0 |==> 1
4986:LVR:0:NEG:org.joda.time.format.DateTimeParserBucket@getOffset():171:0 |==> -1
4987:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeParserBucket@setOffset(int):187:iSavedState = null |==> <NO-OP>
4988:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeParserBucket@setOffset(int):188:iOffset = offset |==> <NO-OP>
4989:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeParserBucket@setOffset(java.lang.Integer):195:iSavedState = null |==> <NO-OP>
4990:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeParserBucket@setOffset(java.lang.Integer):196:iOffset = offset |==> <NO-OP>
4991:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeParserBucket@setPivotYear(java.lang.Integer):226:iPivotYear = pivotYear |==> <NO-OP>
4992:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeParserBucket@saveField(org.joda.time.DateTimeField,int):237:saveField(new SavedField(field, value)) |==> <NO-OP>
4993:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeParserBucket@saveField(org.joda.time.DateTimeFieldType,int):247:saveField(new SavedField(fieldType.getField(iChrono), value)) |==> <NO-OP>
4994:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeParserBucket@saveField(org.joda.time.DateTimeFieldType,java.lang.String,java.util.Locale):258:saveField(new SavedField(fieldType.getField(iChrono), text, locale)) |==> <NO-OP>
4995:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeParserBucket@saveField(org.joda.time.format.DateTimeParserBucket.SavedField):265:savedFieldsCount == savedFields.length |==> savedFieldsCount <= savedFields.length
4996:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeParserBucket@saveField(org.joda.time.format.DateTimeParserBucket.SavedField):265:savedFieldsCount == savedFields.length |==> savedFieldsCount >= savedFields.length
4997:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeParserBucket@saveField(org.joda.time.format.DateTimeParserBucket.SavedField):265:savedFieldsCount == savedFields.length |==> false
4998:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeParserBucket@saveField(org.joda.time.format.DateTimeParserBucket.SavedField):265:savedFieldsCount == savedFields.length || iSavedFieldsShared |==> savedFieldsCount == savedFields.length != iSavedFieldsShared
4999:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeParserBucket@saveField(org.joda.time.format.DateTimeParserBucket.SavedField):265:savedFieldsCount == savedFields.length || iSavedFieldsShared |==> savedFieldsCount == savedFields.length
5000:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeParserBucket@saveField(org.joda.time.format.DateTimeParserBucket.SavedField):265:savedFieldsCount == savedFields.length || iSavedFieldsShared |==> iSavedFieldsShared
5001:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeParserBucket@saveField(org.joda.time.format.DateTimeParserBucket.SavedField):265:savedFieldsCount == savedFields.length || iSavedFieldsShared |==> true
5002:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeParserBucket@saveField(org.joda.time.format.DateTimeParserBucket.SavedField):268:savedFieldsCount == savedFields.length |==> savedFieldsCount <= savedFields.length
5003:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeParserBucket@saveField(org.joda.time.format.DateTimeParserBucket.SavedField):268:savedFieldsCount == savedFields.length |==> savedFieldsCount >= savedFields.length
5004:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeParserBucket@saveField(org.joda.time.format.DateTimeParserBucket.SavedField):268:savedFieldsCount == savedFields.length |==> false
5005:LVR:POS:0:org.joda.time.format.DateTimeParserBucket@saveField(org.joda.time.format.DateTimeParserBucket.SavedField):268:2 |==> 0
5006:LVR:POS:NEG:org.joda.time.format.DateTimeParserBucket@saveField(org.joda.time.format.DateTimeParserBucket.SavedField):268:2 |==> -2
5007:AOR:*(int,int):%(int,int):org.joda.time.format.DateTimeParserBucket@saveField(org.joda.time.format.DateTimeParserBucket.SavedField):268:savedFieldsCount * 2 |==> savedFieldsCount % 2
5008:AOR:*(int,int):+(int,int):org.joda.time.format.DateTimeParserBucket@saveField(org.joda.time.format.DateTimeParserBucket.SavedField):268:savedFieldsCount * 2 |==> savedFieldsCount + 2
5009:AOR:*(int,int):-(int,int):org.joda.time.format.DateTimeParserBucket@saveField(org.joda.time.format.DateTimeParserBucket.SavedField):268:savedFieldsCount * 2 |==> savedFieldsCount - 2
5010:AOR:*(int,int):/(int,int):org.joda.time.format.DateTimeParserBucket@saveField(org.joda.time.format.DateTimeParserBucket.SavedField):268:savedFieldsCount * 2 |==> savedFieldsCount / 2
5011:LVR:0:POS:org.joda.time.format.DateTimeParserBucket@saveField(org.joda.time.format.DateTimeParserBucket.SavedField):269:0 |==> 1
5012:LVR:0:NEG:org.joda.time.format.DateTimeParserBucket@saveField(org.joda.time.format.DateTimeParserBucket.SavedField):269:0 |==> -1
5013:LVR:0:POS:org.joda.time.format.DateTimeParserBucket@saveField(org.joda.time.format.DateTimeParserBucket.SavedField):269:0 |==> 1
5014:LVR:0:NEG:org.joda.time.format.DateTimeParserBucket@saveField(org.joda.time.format.DateTimeParserBucket.SavedField):269:0 |==> -1
5015:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeParserBucket@saveField(org.joda.time.format.DateTimeParserBucket.SavedField):269:System.arraycopy(savedFields, 0, newArray, 0, savedFieldsCount) |==> <NO-OP>
5016:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeParserBucket@saveField(org.joda.time.format.DateTimeParserBucket.SavedField):270:iSavedFields = savedFields = newArray |==> <NO-OP>
5017:LVR:FALSE:TRUE:org.joda.time.format.DateTimeParserBucket@saveField(org.joda.time.format.DateTimeParserBucket.SavedField):271:false |==> true
5018:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeParserBucket@saveField(org.joda.time.format.DateTimeParserBucket.SavedField):271:iSavedFieldsShared = false |==> <NO-OP>
5019:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeParserBucket@saveField(org.joda.time.format.DateTimeParserBucket.SavedField):274:iSavedState = null |==> <NO-OP>
5020:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeParserBucket@saveField(org.joda.time.format.DateTimeParserBucket.SavedField):275:savedFields[savedFieldsCount] = field |==> <NO-OP>
5021:LVR:POS:0:org.joda.time.format.DateTimeParserBucket@saveField(org.joda.time.format.DateTimeParserBucket.SavedField):276:1 |==> 0
5022:LVR:POS:NEG:org.joda.time.format.DateTimeParserBucket@saveField(org.joda.time.format.DateTimeParserBucket.SavedField):276:1 |==> -1
5023:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeParserBucket@saveField(org.joda.time.format.DateTimeParserBucket.SavedField):276:savedFieldsCount + 1 |==> savedFieldsCount % 1
5024:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeParserBucket@saveField(org.joda.time.format.DateTimeParserBucket.SavedField):276:savedFieldsCount + 1 |==> savedFieldsCount * 1
5025:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeParserBucket@saveField(org.joda.time.format.DateTimeParserBucket.SavedField):276:savedFieldsCount + 1 |==> savedFieldsCount - 1
5026:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeParserBucket@saveField(org.joda.time.format.DateTimeParserBucket.SavedField):276:savedFieldsCount + 1 |==> savedFieldsCount / 1
5027:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeParserBucket@saveField(org.joda.time.format.DateTimeParserBucket.SavedField):276:iSavedFieldsCount = savedFieldsCount + 1 |==> <NO-OP>
5028:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeParserBucket@saveState():287:iSavedState == null |==> false
5029:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeParserBucket@saveState():288:iSavedState = new SavedState() |==> <NO-OP>
5030:COR:((SavedState)savedState).restoreState(this):TRUE:org.joda.time.format.DateTimeParserBucket@restoreState(java.lang.Object):303:((SavedState)savedState).restoreState(this) |==> false
5031:COR:((SavedState)savedState).restoreState(this):FALSE:org.joda.time.format.DateTimeParserBucket@restoreState(java.lang.Object):303:((SavedState)savedState).restoreState(this) |==> true
5032:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeParserBucket@restoreState(java.lang.Object):304:iSavedState = savedState |==> <NO-OP>
5033:LVR:TRUE:FALSE:org.joda.time.format.DateTimeParserBucket@restoreState(java.lang.Object):305:true |==> false
5034:LVR:FALSE:TRUE:org.joda.time.format.DateTimeParserBucket@restoreState(java.lang.Object):308:false |==> true
5035:LVR:FALSE:TRUE:org.joda.time.format.DateTimeParserBucket@computeMillis():319:false |==> true
5036:COR:iSavedFieldsShared:TRUE:org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):347:iSavedFieldsShared |==> false
5037:COR:iSavedFieldsShared:FALSE:org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):347:iSavedFieldsShared |==> true
5038:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):348:iSavedFields = savedFields = (SavedField[])iSavedFields.clone() |==> <NO-OP>
5039:LVR:FALSE:TRUE:org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):349:false |==> true
5040:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):349:iSavedFieldsShared = false |==> <NO-OP>
5041:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):351:sort(savedFields, count) |==> <NO-OP>
5042:LVR:0:POS:org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):352:0 |==> 1
5043:LVR:0:NEG:org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):352:0 |==> -1
5044:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):352:count > 0 |==> count != 0
5045:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):352:count > 0 |==> count >= 0
5046:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):352:count > 0 |==> false
5047:LVR:0:POS:org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):356:0 |==> 1
5048:LVR:0:NEG:org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):356:0 |==> -1
5049:LVR:0:POS:org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):357:0 |==> 1
5050:LVR:0:NEG:org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):357:0 |==> -1
5051:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):357:compareReverse(first, months) >= 0 |==> compareReverse(first, months) == 0
5052:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):357:compareReverse(first, months) >= 0 |==> compareReverse(first, months) > 0
5053:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):357:compareReverse(first, months) >= 0 |==> true
5054:LVR:0:POS:org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):357:0 |==> 1
5055:LVR:0:NEG:org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):357:0 |==> -1
5056:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):357:compareReverse(first, days) <= 0 |==> compareReverse(first, days) < 0
5057:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):357:compareReverse(first, days) <= 0 |==> compareReverse(first, days) == 0
5058:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):357:compareReverse(first, days) <= 0 |==> true
5059:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):357:compareReverse(first, months) >= 0 && compareReverse(first, days) <= 0 |==> compareReverse(first, months) >= 0 == compareReverse(first, days) <= 0
5060:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):357:compareReverse(first, months) >= 0 && compareReverse(first, days) <= 0 |==> false
5061:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):357:compareReverse(first, months) >= 0 && compareReverse(first, days) <= 0 |==> compareReverse(first, months) >= 0
5062:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):357:compareReverse(first, months) >= 0 && compareReverse(first, days) <= 0 |==> compareReverse(first, days) <= 0
5063:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):358:saveField(DateTimeFieldType.year(), iDefaultYear) |==> <NO-OP>
5064:LVR:0:POS:org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):365:0 |==> 1
5065:LVR:0:NEG:org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):365:0 |==> -1
5066:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):365:i < count |==> i != count
5067:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):365:i < count |==> i <= count
5068:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):365:i < count |==> false
5069:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):366:millis = savedFields[i].set(millis, resetFields) |==> <NO-OP>
5070:COR:resetFields:TRUE:org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):368:resetFields |==> false
5071:COR:resetFields:FALSE:org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):368:resetFields |==> true
5072:LVR:0:POS:org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):369:0 |==> 1
5073:LVR:0:NEG:org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):369:0 |==> -1
5074:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):369:i < count |==> i != count
5075:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):369:i < count |==> i <= count
5076:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):369:i < count |==> false
5077:LVR:POS:0:org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):370:1 |==> 0
5078:LVR:POS:NEG:org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):370:1 |==> -1
5079:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):370:count - 1 |==> count % 1
5080:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):370:count - 1 |==> count * 1
5081:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):370:count - 1 |==> count + 1
5082:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):370:count - 1 |==> count / 1
5083:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):370:i == (count - 1) |==> i <= (count - 1)
5084:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):370:i == (count - 1) |==> i >= (count - 1)
5085:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):370:i == (count - 1) |==> false
5086:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):370:millis = savedFields[i].set(millis, i == (count - 1)) |==> <NO-OP>
5087:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):374:text != null |==> true
5088:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):375:e.prependMessage("Cannot parse \"" + text + '\"') |==> <NO-OP>
5089:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):380:iOffset != null |==> true
5090:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):381:millis -= iOffset |==> <NO-OP>
5091:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):382:iZone != null |==> true
5092:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):384:millis -= offset |==> <NO-OP>
5093:ROR:!=(int,int):<(int,int):org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):385:offset != iZone.getOffset(millis) |==> offset < iZone.getOffset(millis)
5094:ROR:!=(int,int):>(int,int):org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):385:offset != iZone.getOffset(millis) |==> offset > iZone.getOffset(millis)
5095:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):385:offset != iZone.getOffset(millis) |==> true
5096:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):387:text != null |==> true
5097:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeParserBucket@computeMillis(boolean,java.lang.String):388:message = "Cannot parse \"" + text + "\": " + message |==> <NO-OP>
5098:LVR:POS:0:org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):416:10 |==> 0
5099:LVR:POS:NEG:org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):416:10 |==> -10
5100:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):416:high > 10 |==> high != 10
5101:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):416:high > 10 |==> high >= 10
5102:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):416:high > 10 |==> false
5103:LVR:0:POS:org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):417:0 |==> 1
5104:LVR:0:NEG:org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):417:0 |==> -1
5105:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):417:Arrays.sort(array, 0, high) |==> <NO-OP>
5106:LVR:0:POS:org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):419:0 |==> 1
5107:LVR:0:NEG:org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):419:0 |==> -1
5108:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):419:i < high |==> i != high
5109:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):419:i < high |==> i <= high
5110:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):419:i < high |==> false
5111:LVR:0:POS:org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):420:0 |==> 1
5112:LVR:0:NEG:org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):420:0 |==> -1
5113:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):420:j > 0 |==> j != 0
5114:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):420:j > 0 |==> j >= 0
5115:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):420:j > 0 |==> false
5116:LVR:POS:0:org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):420:1 |==> 0
5117:LVR:POS:NEG:org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):420:1 |==> -1
5118:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):420:j - 1 |==> j % 1
5119:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):420:j - 1 |==> j * 1
5120:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):420:j - 1 |==> j + 1
5121:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):420:j - 1 |==> j / 1
5122:LVR:0:POS:org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):420:0 |==> 1
5123:LVR:0:NEG:org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):420:0 |==> -1
5124:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):420:(array[j - 1]).compareTo(array[j]) > 0 |==> (array[j - 1]).compareTo(array[j]) != 0
5125:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):420:(array[j - 1]).compareTo(array[j]) > 0 |==> (array[j - 1]).compareTo(array[j]) >= 0
5126:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):420:(array[j - 1]).compareTo(array[j]) > 0 |==> false
5127:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):420:j > 0 && (array[j - 1]).compareTo(array[j]) > 0 |==> j > 0 == (array[j - 1]).compareTo(array[j]) > 0
5128:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):420:j > 0 && (array[j - 1]).compareTo(array[j]) > 0 |==> false
5129:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):420:j > 0 && (array[j - 1]).compareTo(array[j]) > 0 |==> j > 0
5130:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):420:j > 0 && (array[j - 1]).compareTo(array[j]) > 0 |==> (array[j - 1]).compareTo(array[j]) > 0
5131:LVR:POS:0:org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):422:1 |==> 0
5132:LVR:POS:NEG:org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):422:1 |==> -1
5133:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):422:j - 1 |==> j % 1
5134:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):422:j - 1 |==> j * 1
5135:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):422:j - 1 |==> j + 1
5136:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):422:j - 1 |==> j / 1
5137:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):422:array[j] = array[j - 1] |==> <NO-OP>
5138:LVR:POS:0:org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):423:1 |==> 0
5139:LVR:POS:NEG:org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):423:1 |==> -1
5140:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):423:j - 1 |==> j % 1
5141:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):423:j - 1 |==> j * 1
5142:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):423:j - 1 |==> j + 1
5143:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):423:j - 1 |==> j / 1
5144:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeParserBucket@sort(org.joda.time.format.DateTimeParserBucket.SavedField[],int):423:array[j - 1] = t |==> <NO-OP>
5145:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeParserBucket$SavedState@restoreState(org.joda.time.format.DateTimeParserBucket):443:enclosing != DateTimeParserBucket.this |==> true
5146:LVR:FALSE:TRUE:org.joda.time.format.DateTimeParserBucket$SavedState@restoreState(org.joda.time.format.DateTimeParserBucket):444:false |==> true
5147:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeParserBucket$SavedState@restoreState(org.joda.time.format.DateTimeParserBucket):446:enclosing.iZone = this.iZone |==> <NO-OP>
5148:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeParserBucket$SavedState@restoreState(org.joda.time.format.DateTimeParserBucket):447:enclosing.iOffset = this.iOffset |==> <NO-OP>
5149:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeParserBucket$SavedState@restoreState(org.joda.time.format.DateTimeParserBucket):448:enclosing.iSavedFields = this.iSavedFields |==> <NO-OP>
5150:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeParserBucket$SavedState@restoreState(org.joda.time.format.DateTimeParserBucket):449:this.iSavedFieldsCount < enclosing.iSavedFieldsCount |==> this.iSavedFieldsCount != enclosing.iSavedFieldsCount
5151:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeParserBucket$SavedState@restoreState(org.joda.time.format.DateTimeParserBucket):449:this.iSavedFieldsCount < enclosing.iSavedFieldsCount |==> this.iSavedFieldsCount <= enclosing.iSavedFieldsCount
5152:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeParserBucket$SavedState@restoreState(org.joda.time.format.DateTimeParserBucket):449:this.iSavedFieldsCount < enclosing.iSavedFieldsCount |==> false
5153:LVR:TRUE:FALSE:org.joda.time.format.DateTimeParserBucket$SavedState@restoreState(org.joda.time.format.DateTimeParserBucket):454:true |==> false
5154:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeParserBucket$SavedState@restoreState(org.joda.time.format.DateTimeParserBucket):454:enclosing.iSavedFieldsShared = true |==> <NO-OP>
5155:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeParserBucket$SavedState@restoreState(org.joda.time.format.DateTimeParserBucket):456:enclosing.iSavedFieldsCount = this.iSavedFieldsCount |==> <NO-OP>
5156:LVR:TRUE:FALSE:org.joda.time.format.DateTimeParserBucket$SavedState@restoreState(org.joda.time.format.DateTimeParserBucket):457:true |==> false
5157:LVR:0:POS:org.joda.time.format.DateTimeParserBucket$SavedField@<init>(org.joda.time.DateTimeField,java.lang.String,java.util.Locale):476:0 |==> 1
5158:LVR:0:NEG:org.joda.time.format.DateTimeParserBucket$SavedField@<init>(org.joda.time.DateTimeField,java.lang.String,java.util.Locale):476:0 |==> -1
5159:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeParserBucket$SavedField@set(long,boolean):482:iText == null |==> false
5160:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeParserBucket$SavedField@set(long,boolean):483:millis = iField.set(millis, iValue) |==> <NO-OP>
5161:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeParserBucket$SavedField@set(long,boolean):485:millis = iField.set(millis, iText, iLocale) |==> <NO-OP>
5162:COR:reset:TRUE:org.joda.time.format.DateTimeParserBucket$SavedField@set(long,boolean):487:reset |==> false
5163:COR:reset:FALSE:org.joda.time.format.DateTimeParserBucket$SavedField@set(long,boolean):487:reset |==> true
5164:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeParserBucket$SavedField@set(long,boolean):488:millis = iField.roundFloor(millis) |==> <NO-OP>
5165:LVR:0:POS:org.joda.time.format.DateTimeParserBucket$SavedField@compareTo(org.joda.time.format.DateTimeParserBucket.SavedField):502:0 |==> 1
5166:LVR:0:NEG:org.joda.time.format.DateTimeParserBucket$SavedField@compareTo(org.joda.time.format.DateTimeParserBucket.SavedField):502:0 |==> -1
5167:ROR:!=(int,int):<(int,int):org.joda.time.format.DateTimeParserBucket$SavedField@compareTo(org.joda.time.format.DateTimeParserBucket.SavedField):502:result != 0 |==> result < 0
5168:ROR:!=(int,int):>(int,int):org.joda.time.format.DateTimeParserBucket$SavedField@compareTo(org.joda.time.format.DateTimeParserBucket.SavedField):502:result != 0 |==> result > 0
5169:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.DateTimeParserBucket$SavedField@compareTo(org.joda.time.format.DateTimeParserBucket.SavedField):502:result != 0 |==> true
5170:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeParserBucket@compareReverse(org.joda.time.DurationField,org.joda.time.DurationField):511:a == null |==> false
5171:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeParserBucket@compareReverse(org.joda.time.DurationField,org.joda.time.DurationField):511:a == null || !a.isSupported() |==> a == null != !a.isSupported()
5172:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeParserBucket@compareReverse(org.joda.time.DurationField,org.joda.time.DurationField):511:a == null || !a.isSupported() |==> a == null
5173:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeParserBucket@compareReverse(org.joda.time.DurationField,org.joda.time.DurationField):511:a == null || !a.isSupported() |==> !a.isSupported()
5174:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeParserBucket@compareReverse(org.joda.time.DurationField,org.joda.time.DurationField):511:a == null || !a.isSupported() |==> true
5175:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeParserBucket@compareReverse(org.joda.time.DurationField,org.joda.time.DurationField):512:b == null |==> false
5176:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeParserBucket@compareReverse(org.joda.time.DurationField,org.joda.time.DurationField):512:b == null || !b.isSupported() |==> b == null != !b.isSupported()
5177:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeParserBucket@compareReverse(org.joda.time.DurationField,org.joda.time.DurationField):512:b == null || !b.isSupported() |==> b == null
5178:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeParserBucket@compareReverse(org.joda.time.DurationField,org.joda.time.DurationField):512:b == null || !b.isSupported() |==> !b.isSupported()
5179:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeParserBucket@compareReverse(org.joda.time.DurationField,org.joda.time.DurationField):512:b == null || !b.isSupported() |==> true
5180:LVR:0:POS:org.joda.time.format.DateTimeParserBucket@compareReverse(org.joda.time.DurationField,org.joda.time.DurationField):513:0 |==> 1
5181:LVR:0:NEG:org.joda.time.format.DateTimeParserBucket@compareReverse(org.joda.time.DurationField,org.joda.time.DurationField):513:0 |==> -1
5182:LVR:NEG:0:org.joda.time.format.DateTimeParserBucket@compareReverse(org.joda.time.DurationField,org.joda.time.DurationField):515:-1 |==> 0
5183:LVR:NEG:POS:org.joda.time.format.DateTimeParserBucket@compareReverse(org.joda.time.DurationField,org.joda.time.DurationField):515:-1 |==> 1
5184:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeParserBucket@compareReverse(org.joda.time.DurationField,org.joda.time.DurationField):517:b == null |==> false
5185:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeParserBucket@compareReverse(org.joda.time.DurationField,org.joda.time.DurationField):517:b == null || !b.isSupported() |==> b == null != !b.isSupported()
5186:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeParserBucket@compareReverse(org.joda.time.DurationField,org.joda.time.DurationField):517:b == null || !b.isSupported() |==> b == null
5187:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeParserBucket@compareReverse(org.joda.time.DurationField,org.joda.time.DurationField):517:b == null || !b.isSupported() |==> !b.isSupported()
5188:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeParserBucket@compareReverse(org.joda.time.DurationField,org.joda.time.DurationField):517:b == null || !b.isSupported() |==> true
5189:LVR:POS:0:org.joda.time.format.DateTimeParserBucket@compareReverse(org.joda.time.DurationField,org.joda.time.DurationField):518:1 |==> 0
5190:LVR:POS:NEG:org.joda.time.format.DateTimeParserBucket@compareReverse(org.joda.time.DurationField,org.joda.time.DurationField):518:1 |==> -1
5191:ORU:-(int):+(int):org.joda.time.format.DateTimeParserBucket@compareReverse(org.joda.time.DurationField,org.joda.time.DurationField):520:-a.compareTo(b) |==> +a.compareTo(b)
5192:ORU:-(int):~(int):org.joda.time.format.DateTimeParserBucket@compareReverse(org.joda.time.DurationField,org.joda.time.DurationField):520:-a.compareTo(b) |==> ~a.compareTo(b)
5193:STD:<ASSIGN>:<NO-OP>:org.joda.time.Interval@overlap(org.joda.time.ReadableInterval):251:interval = DateTimeUtils.getReadableInterval(interval) |==> <NO-OP>
5194:LVR:FALSE:TRUE:org.joda.time.Interval@overlap(org.joda.time.ReadableInterval):252:false |==> true
5195:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.Interval@overlap(org.joda.time.ReadableInterval):252:overlaps(interval) == false |==> false
5196:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.Interval@overlap(org.joda.time.ReadableInterval):252:overlaps(interval) == false |==> overlaps(interval)
5197:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.Interval@overlap(org.joda.time.ReadableInterval):252:overlaps(interval) == false |==> false
5198:STD:<ASSIGN>:<NO-OP>:org.joda.time.Interval@gap(org.joda.time.ReadableInterval):286:interval = DateTimeUtils.getReadableInterval(interval) |==> <NO-OP>
5199:ROR:>(long,long):!=(long,long):org.joda.time.Interval@gap(org.joda.time.ReadableInterval):291:thisStart > otherEnd |==> thisStart != otherEnd
5200:ROR:>(long,long):>=(long,long):org.joda.time.Interval@gap(org.joda.time.ReadableInterval):291:thisStart > otherEnd |==> thisStart >= otherEnd
5201:ROR:>(long,long):FALSE(long,long):org.joda.time.Interval@gap(org.joda.time.ReadableInterval):291:thisStart > otherEnd |==> false
5202:ROR:>(long,long):!=(long,long):org.joda.time.Interval@gap(org.joda.time.ReadableInterval):293:otherStart > thisEnd |==> otherStart != thisEnd
5203:ROR:>(long,long):>=(long,long):org.joda.time.Interval@gap(org.joda.time.ReadableInterval):293:otherStart > thisEnd |==> otherStart >= thisEnd
5204:ROR:>(long,long):FALSE(long,long):org.joda.time.Interval@gap(org.joda.time.ReadableInterval):293:otherStart > thisEnd |==> false
5205:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Interval@abuts(org.joda.time.ReadableInterval):338:interval == null |==> false
5206:ROR:==(long,long):<=(long,long):org.joda.time.Interval@abuts(org.joda.time.ReadableInterval):340:getStartMillis() == now |==> getStartMillis() <= now
5207:ROR:==(long,long):>=(long,long):org.joda.time.Interval@abuts(org.joda.time.ReadableInterval):340:getStartMillis() == now |==> getStartMillis() >= now
5208:ROR:==(long,long):FALSE(long,long):org.joda.time.Interval@abuts(org.joda.time.ReadableInterval):340:getStartMillis() == now |==> false
5209:ROR:==(long,long):<=(long,long):org.joda.time.Interval@abuts(org.joda.time.ReadableInterval):340:getEndMillis() == now |==> getEndMillis() <= now
5210:ROR:==(long,long):>=(long,long):org.joda.time.Interval@abuts(org.joda.time.ReadableInterval):340:getEndMillis() == now |==> getEndMillis() >= now
5211:ROR:==(long,long):FALSE(long,long):org.joda.time.Interval@abuts(org.joda.time.ReadableInterval):340:getEndMillis() == now |==> false
5212:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.Interval@abuts(org.joda.time.ReadableInterval):340:getStartMillis() == now || getEndMillis() == now |==> getStartMillis() == now != (getEndMillis() == now)
5213:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.Interval@abuts(org.joda.time.ReadableInterval):340:getStartMillis() == now || getEndMillis() == now |==> getStartMillis() == now
5214:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.Interval@abuts(org.joda.time.ReadableInterval):340:getStartMillis() == now || getEndMillis() == now |==> getEndMillis() == now
5215:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.Interval@abuts(org.joda.time.ReadableInterval):340:getStartMillis() == now || getEndMillis() == now |==> true
5216:ROR:==(long,long):<=(long,long):org.joda.time.Interval@abuts(org.joda.time.ReadableInterval):342:interval.getEndMillis() == getStartMillis() |==> interval.getEndMillis() <= getStartMillis()
5217:ROR:==(long,long):>=(long,long):org.joda.time.Interval@abuts(org.joda.time.ReadableInterval):342:interval.getEndMillis() == getStartMillis() |==> interval.getEndMillis() >= getStartMillis()
5218:ROR:==(long,long):FALSE(long,long):org.joda.time.Interval@abuts(org.joda.time.ReadableInterval):342:interval.getEndMillis() == getStartMillis() |==> false
5219:ROR:==(long,long):<=(long,long):org.joda.time.Interval@abuts(org.joda.time.ReadableInterval):343:getEndMillis() == interval.getStartMillis() |==> getEndMillis() <= interval.getStartMillis()
5220:ROR:==(long,long):>=(long,long):org.joda.time.Interval@abuts(org.joda.time.ReadableInterval):343:getEndMillis() == interval.getStartMillis() |==> getEndMillis() >= interval.getStartMillis()
5221:ROR:==(long,long):FALSE(long,long):org.joda.time.Interval@abuts(org.joda.time.ReadableInterval):343:getEndMillis() == interval.getStartMillis() |==> false
5222:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.Interval@abuts(org.joda.time.ReadableInterval):342:interval.getEndMillis() == getStartMillis() || getEndMillis() == interval.getStartMillis() |==> interval.getEndMillis() == getStartMillis() != (getEndMillis() == interval.getStartMillis())
5223:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.Interval@abuts(org.joda.time.ReadableInterval):342:interval.getEndMillis() == getStartMillis() || getEndMillis() == interval.getStartMillis() |==> interval.getEndMillis() == getStartMillis()
5224:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.Interval@abuts(org.joda.time.ReadableInterval):343:interval.getEndMillis() == getStartMillis() || getEndMillis() == interval.getStartMillis() |==> getEndMillis() == interval.getStartMillis()
5225:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.Interval@abuts(org.joda.time.ReadableInterval):342:interval.getEndMillis() == getStartMillis() || getEndMillis() == interval.getStartMillis() |==> true
5226:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Interval@withChronology(org.joda.time.Chronology):355:getChronology() == chronology |==> false
5227:ROR:==(long,long):<=(long,long):org.joda.time.Interval@withStartMillis(long):369:startInstant == getStartMillis() |==> startInstant <= getStartMillis()
5228:ROR:==(long,long):>=(long,long):org.joda.time.Interval@withStartMillis(long):369:startInstant == getStartMillis() |==> startInstant >= getStartMillis()
5229:ROR:==(long,long):FALSE(long,long):org.joda.time.Interval@withStartMillis(long):369:startInstant == getStartMillis() |==> false
5230:ROR:==(long,long):<=(long,long):org.joda.time.Interval@withEndMillis(long):395:endInstant == getEndMillis() |==> endInstant <= getEndMillis()
5231:ROR:==(long,long):>=(long,long):org.joda.time.Interval@withEndMillis(long):395:endInstant == getEndMillis() |==> endInstant >= getEndMillis()
5232:ROR:==(long,long):FALSE(long,long):org.joda.time.Interval@withEndMillis(long):395:endInstant == getEndMillis() |==> false
5233:ROR:==(long,long):<=(long,long):org.joda.time.Interval@withDurationAfterStart(org.joda.time.ReadableDuration):423:durationMillis == toDurationMillis() |==> durationMillis <= toDurationMillis()
5234:ROR:==(long,long):>=(long,long):org.joda.time.Interval@withDurationAfterStart(org.joda.time.ReadableDuration):423:durationMillis == toDurationMillis() |==> durationMillis >= toDurationMillis()
5235:ROR:==(long,long):FALSE(long,long):org.joda.time.Interval@withDurationAfterStart(org.joda.time.ReadableDuration):423:durationMillis == toDurationMillis() |==> false
5236:LVR:POS:0:org.joda.time.Interval@withDurationAfterStart(org.joda.time.ReadableDuration):428:1 |==> 0
5237:LVR:POS:NEG:org.joda.time.Interval@withDurationAfterStart(org.joda.time.ReadableDuration):428:1 |==> -1
5238:ROR:==(long,long):<=(long,long):org.joda.time.Interval@withDurationBeforeEnd(org.joda.time.ReadableDuration):441:durationMillis == toDurationMillis() |==> durationMillis <= toDurationMillis()
5239:ROR:==(long,long):>=(long,long):org.joda.time.Interval@withDurationBeforeEnd(org.joda.time.ReadableDuration):441:durationMillis == toDurationMillis() |==> durationMillis >= toDurationMillis()
5240:ROR:==(long,long):FALSE(long,long):org.joda.time.Interval@withDurationBeforeEnd(org.joda.time.ReadableDuration):441:durationMillis == toDurationMillis() |==> false
5241:LVR:NEG:0:org.joda.time.Interval@withDurationBeforeEnd(org.joda.time.ReadableDuration):446:-1 |==> 0
5242:LVR:NEG:POS:org.joda.time.Interval@withDurationBeforeEnd(org.joda.time.ReadableDuration):446:-1 |==> 1
5243:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Interval@withPeriodAfterStart(org.joda.time.ReadablePeriod):459:period == null |==> false
5244:LVR:POS:0:org.joda.time.Interval@withPeriodAfterStart(org.joda.time.ReadablePeriod):464:1 |==> 0
5245:LVR:POS:NEG:org.joda.time.Interval@withPeriodAfterStart(org.joda.time.ReadablePeriod):464:1 |==> -1
5246:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Interval@withPeriodBeforeEnd(org.joda.time.ReadablePeriod):476:period == null |==> false
5247:LVR:NEG:0:org.joda.time.Interval@withPeriodBeforeEnd(org.joda.time.ReadablePeriod):481:-1 |==> 0
5248:LVR:NEG:POS:org.joda.time.Interval@withPeriodBeforeEnd(org.joda.time.ReadablePeriod):481:-1 |==> 1
5249:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseInterval@<init>(long,long,org.joda.time.Chronology):72:iChronology = DateTimeUtils.getChronology(chrono) |==> <NO-OP>
5250:STD:<CALL>:<NO-OP>:org.joda.time.base.BaseInterval@<init>(long,long,org.joda.time.Chronology):73:checkInterval(startInstant, endInstant) |==> <NO-OP>
5251:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseInterval@<init>(long,long,org.joda.time.Chronology):74:iStartMillis = startInstant |==> <NO-OP>
5252:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseInterval@<init>(long,long,org.joda.time.Chronology):75:iEndMillis = endInstant |==> <NO-OP>
5253:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):87:start == null |==> false
5254:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):87:end == null |==> false
5255:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):87:start == null && end == null |==> start == null == (end == null)
5256:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):87:start == null && end == null |==> false
5257:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):87:start == null && end == null |==> start == null
5258:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):87:start == null && end == null |==> end == null
5259:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):88:iStartMillis = iEndMillis = DateTimeUtils.currentTimeMillis() |==> <NO-OP>
5260:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):89:iChronology = ISOChronology.getInstance() |==> <NO-OP>
5261:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):91:iChronology = DateTimeUtils.getInstantChronology(start) |==> <NO-OP>
5262:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):92:iStartMillis = DateTimeUtils.getInstantMillis(start) |==> <NO-OP>
5263:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):93:iEndMillis = DateTimeUtils.getInstantMillis(end) |==> <NO-OP>
5264:STD:<CALL>:<NO-OP>:org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):94:checkInterval(iStartMillis, iEndMillis) |==> <NO-OP>
5265:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration):108:iChronology = DateTimeUtils.getInstantChronology(start) |==> <NO-OP>
5266:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration):109:iStartMillis = DateTimeUtils.getInstantMillis(start) |==> <NO-OP>
5267:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration):111:iEndMillis = FieldUtils.safeAdd(iStartMillis, durationMillis) |==> <NO-OP>
5268:STD:<CALL>:<NO-OP>:org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration):112:checkInterval(iStartMillis, iEndMillis) |==> <NO-OP>
5269:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant):125:iChronology = DateTimeUtils.getInstantChronology(end) |==> <NO-OP>
5270:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant):126:iEndMillis = DateTimeUtils.getInstantMillis(end) |==> <NO-OP>
5271:ORU:-(long):+(long):org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant):128:-durationMillis |==> +durationMillis
5272:ORU:-(long):~(long):org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant):128:-durationMillis |==> ~durationMillis
5273:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant):128:iStartMillis = FieldUtils.safeAdd(iEndMillis, -durationMillis) |==> <NO-OP>
5274:STD:<CALL>:<NO-OP>:org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant):129:checkInterval(iStartMillis, iEndMillis) |==> <NO-OP>
5275:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadablePeriod):146:iChronology = chrono |==> <NO-OP>
5276:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadablePeriod):147:iStartMillis = DateTimeUtils.getInstantMillis(start) |==> <NO-OP>
5277:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadablePeriod):148:period == null |==> false
5278:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadablePeriod):149:iEndMillis = iStartMillis |==> <NO-OP>
5279:LVR:POS:0:org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadablePeriod):151:1 |==> 0
5280:LVR:POS:NEG:org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadablePeriod):151:1 |==> -1
5281:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadablePeriod):151:iEndMillis = chrono.add(period, iStartMillis, 1) |==> <NO-OP>
5282:STD:<CALL>:<NO-OP>:org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadablePeriod):153:checkInterval(iStartMillis, iEndMillis) |==> <NO-OP>
5283:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadablePeriod,org.joda.time.ReadableInstant):170:iChronology = chrono |==> <NO-OP>
5284:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadablePeriod,org.joda.time.ReadableInstant):171:iEndMillis = DateTimeUtils.getInstantMillis(end) |==> <NO-OP>
5285:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadablePeriod,org.joda.time.ReadableInstant):172:period == null |==> false
5286:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadablePeriod,org.joda.time.ReadableInstant):173:iStartMillis = iEndMillis |==> <NO-OP>
5287:LVR:NEG:0:org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadablePeriod,org.joda.time.ReadableInstant):175:-1 |==> 0
5288:LVR:NEG:POS:org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadablePeriod,org.joda.time.ReadableInstant):175:-1 |==> 1
5289:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadablePeriod,org.joda.time.ReadableInstant):175:iStartMillis = chrono.add(period, iEndMillis, -1) |==> <NO-OP>
5290:STD:<CALL>:<NO-OP>:org.joda.time.base.BaseInterval@<init>(org.joda.time.ReadablePeriod,org.joda.time.ReadableInstant):177:checkInterval(iStartMillis, iEndMillis) |==> <NO-OP>
5291:COR:converter.isReadableInterval(interval, chrono):TRUE:org.joda.time.base.BaseInterval@<init>(java.lang.Object,org.joda.time.Chronology):191:converter.isReadableInterval(interval, chrono) |==> false
5292:COR:converter.isReadableInterval(interval, chrono):FALSE:org.joda.time.base.BaseInterval@<init>(java.lang.Object,org.joda.time.Chronology):191:converter.isReadableInterval(interval, chrono) |==> true
5293:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.base.BaseInterval@<init>(java.lang.Object,org.joda.time.Chronology):193:chrono != null |==> true
5294:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseInterval@<init>(java.lang.Object,org.joda.time.Chronology):193:iChronology = (chrono != null ? chrono : input.getChronology()) |==> <NO-OP>
5295:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseInterval@<init>(java.lang.Object,org.joda.time.Chronology):194:iStartMillis = input.getStartMillis() |==> <NO-OP>
5296:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseInterval@<init>(java.lang.Object,org.joda.time.Chronology):195:iEndMillis = input.getEndMillis() |==> <NO-OP>
5297:STD:<CALL>:<NO-OP>:org.joda.time.base.BaseInterval@<init>(java.lang.Object,org.joda.time.Chronology):197:converter.setInto((ReadWritableInterval)this, interval, chrono) |==> <NO-OP>
5298:STD:<CALL>:<NO-OP>:org.joda.time.base.BaseInterval@<init>(java.lang.Object,org.joda.time.Chronology):200:converter.setInto(mi, interval, chrono) |==> <NO-OP>
5299:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseInterval@<init>(java.lang.Object,org.joda.time.Chronology):201:iChronology = mi.getChronology() |==> <NO-OP>
5300:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseInterval@<init>(java.lang.Object,org.joda.time.Chronology):202:iStartMillis = mi.getStartMillis() |==> <NO-OP>
5301:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseInterval@<init>(java.lang.Object,org.joda.time.Chronology):203:iEndMillis = mi.getEndMillis() |==> <NO-OP>
5302:STD:<CALL>:<NO-OP>:org.joda.time.base.BaseInterval@<init>(java.lang.Object,org.joda.time.Chronology):205:checkInterval(iStartMillis, iEndMillis) |==> <NO-OP>
5303:STD:<CALL>:<NO-OP>:org.joda.time.base.BaseInterval@setInterval(long,long,org.joda.time.Chronology):248:checkInterval(startInstant, endInstant) |==> <NO-OP>
5304:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseInterval@setInterval(long,long,org.joda.time.Chronology):249:iStartMillis = startInstant |==> <NO-OP>
5305:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseInterval@setInterval(long,long,org.joda.time.Chronology):250:iEndMillis = endInstant |==> <NO-OP>
5306:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BaseInterval@setInterval(long,long,org.joda.time.Chronology):251:iChronology = DateTimeUtils.getChronology(chrono) |==> <NO-OP>
5307:ROR:<(long,long):!=(long,long):org.joda.time.base.AbstractInterval@checkInterval(long,long):62:end < start |==> end != start
5308:ROR:<(long,long):<=(long,long):org.joda.time.base.AbstractInterval@checkInterval(long,long):62:end < start |==> end <= start
5309:ROR:<(long,long):FALSE(long,long):org.joda.time.base.AbstractInterval@checkInterval(long,long):62:end < start |==> false
5310:ROR:>=(long,long):==(long,long):org.joda.time.base.AbstractInterval@contains(long):100:millisInstant >= thisStart |==> millisInstant == thisStart
5311:ROR:>=(long,long):>(long,long):org.joda.time.base.AbstractInterval@contains(long):100:millisInstant >= thisStart |==> millisInstant > thisStart
5312:ROR:>=(long,long):TRUE(long,long):org.joda.time.base.AbstractInterval@contains(long):100:millisInstant >= thisStart |==> true
5313:ROR:<(long,long):!=(long,long):org.joda.time.base.AbstractInterval@contains(long):100:millisInstant < thisEnd |==> millisInstant != thisEnd
5314:ROR:<(long,long):<=(long,long):org.joda.time.base.AbstractInterval@contains(long):100:millisInstant < thisEnd |==> millisInstant <= thisEnd
5315:ROR:<(long,long):FALSE(long,long):org.joda.time.base.AbstractInterval@contains(long):100:millisInstant < thisEnd |==> false
5316:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.base.AbstractInterval@contains(long):100:millisInstant >= thisStart && millisInstant < thisEnd |==> millisInstant >= thisStart == millisInstant < thisEnd
5317:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.base.AbstractInterval@contains(long):100:millisInstant >= thisStart && millisInstant < thisEnd |==> false
5318:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.base.AbstractInterval@contains(long):100:millisInstant >= thisStart && millisInstant < thisEnd |==> millisInstant >= thisStart
5319:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.base.AbstractInterval@contains(long):100:millisInstant >= thisStart && millisInstant < thisEnd |==> millisInstant < thisEnd
5320:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.AbstractInterval@contains(org.joda.time.ReadableInstant):138:instant == null |==> false
5321:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.AbstractInterval@contains(org.joda.time.ReadableInterval):179:interval == null |==> false
5322:ROR:<=(long,long):<(long,long):org.joda.time.base.AbstractInterval@contains(org.joda.time.ReadableInterval):186:thisStart <= otherStart |==> thisStart < otherStart
5323:ROR:<=(long,long):==(long,long):org.joda.time.base.AbstractInterval@contains(org.joda.time.ReadableInterval):186:thisStart <= otherStart |==> thisStart == otherStart
5324:ROR:<=(long,long):TRUE(long,long):org.joda.time.base.AbstractInterval@contains(org.joda.time.ReadableInterval):186:thisStart <= otherStart |==> true
5325:ROR:<(long,long):!=(long,long):org.joda.time.base.AbstractInterval@contains(org.joda.time.ReadableInterval):186:otherStart < thisEnd |==> otherStart != thisEnd
5326:ROR:<(long,long):<=(long,long):org.joda.time.base.AbstractInterval@contains(org.joda.time.ReadableInterval):186:otherStart < thisEnd |==> otherStart <= thisEnd
5327:ROR:<(long,long):FALSE(long,long):org.joda.time.base.AbstractInterval@contains(org.joda.time.ReadableInterval):186:otherStart < thisEnd |==> false
5328:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.base.AbstractInterval@contains(org.joda.time.ReadableInterval):186:thisStart <= otherStart && otherStart < thisEnd |==> thisStart <= otherStart == otherStart < thisEnd
5329:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.base.AbstractInterval@contains(org.joda.time.ReadableInterval):186:thisStart <= otherStart && otherStart < thisEnd |==> false
5330:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.base.AbstractInterval@contains(org.joda.time.ReadableInterval):186:thisStart <= otherStart && otherStart < thisEnd |==> thisStart <= otherStart
5331:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.base.AbstractInterval@contains(org.joda.time.ReadableInterval):186:thisStart <= otherStart && otherStart < thisEnd |==> otherStart < thisEnd
5332:ROR:<=(long,long):<(long,long):org.joda.time.base.AbstractInterval@contains(org.joda.time.ReadableInterval):186:otherEnd <= thisEnd |==> otherEnd < thisEnd
5333:ROR:<=(long,long):==(long,long):org.joda.time.base.AbstractInterval@contains(org.joda.time.ReadableInterval):186:otherEnd <= thisEnd |==> otherEnd == thisEnd
5334:ROR:<=(long,long):TRUE(long,long):org.joda.time.base.AbstractInterval@contains(org.joda.time.ReadableInterval):186:otherEnd <= thisEnd |==> true
5335:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.base.AbstractInterval@contains(org.joda.time.ReadableInterval):186:thisStart <= otherStart && otherStart < thisEnd && otherEnd <= thisEnd |==> (thisStart <= otherStart && otherStart < thisEnd) == otherEnd <= thisEnd
5336:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.base.AbstractInterval@contains(org.joda.time.ReadableInterval):186:thisStart <= otherStart && otherStart < thisEnd && otherEnd <= thisEnd |==> false
5337:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.base.AbstractInterval@contains(org.joda.time.ReadableInterval):186:thisStart <= otherStart && otherStart < thisEnd && otherEnd <= thisEnd |==> thisStart <= otherStart && otherStart < thisEnd
5338:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.base.AbstractInterval@contains(org.joda.time.ReadableInterval):186:thisStart <= otherStart && otherStart < thisEnd && otherEnd <= thisEnd |==> otherEnd <= thisEnd
5339:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.AbstractInterval@overlaps(org.joda.time.ReadableInterval):233:interval == null |==> false
5340:ROR:<(long,long):!=(long,long):org.joda.time.base.AbstractInterval@overlaps(org.joda.time.ReadableInterval):235:thisStart < now |==> thisStart != now
5341:ROR:<(long,long):<=(long,long):org.joda.time.base.AbstractInterval@overlaps(org.joda.time.ReadableInterval):235:thisStart < now |==> thisStart <= now
5342:ROR:<(long,long):FALSE(long,long):org.joda.time.base.AbstractInterval@overlaps(org.joda.time.ReadableInterval):235:thisStart < now |==> false
5343:ROR:<(long,long):!=(long,long):org.joda.time.base.AbstractInterval@overlaps(org.joda.time.ReadableInterval):235:now < thisEnd |==> now != thisEnd
5344:ROR:<(long,long):<=(long,long):org.joda.time.base.AbstractInterval@overlaps(org.joda.time.ReadableInterval):235:now < thisEnd |==> now <= thisEnd
5345:ROR:<(long,long):FALSE(long,long):org.joda.time.base.AbstractInterval@overlaps(org.joda.time.ReadableInterval):235:now < thisEnd |==> false
5346:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.base.AbstractInterval@overlaps(org.joda.time.ReadableInterval):235:thisStart < now && now < thisEnd |==> thisStart < now == now < thisEnd
5347:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.base.AbstractInterval@overlaps(org.joda.time.ReadableInterval):235:thisStart < now && now < thisEnd |==> false
5348:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.base.AbstractInterval@overlaps(org.joda.time.ReadableInterval):235:thisStart < now && now < thisEnd |==> thisStart < now
5349:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.base.AbstractInterval@overlaps(org.joda.time.ReadableInterval):235:thisStart < now && now < thisEnd |==> now < thisEnd
5350:ROR:<(long,long):!=(long,long):org.joda.time.base.AbstractInterval@overlaps(org.joda.time.ReadableInterval):239:thisStart < otherEnd |==> thisStart != otherEnd
5351:ROR:<(long,long):<=(long,long):org.joda.time.base.AbstractInterval@overlaps(org.joda.time.ReadableInterval):239:thisStart < otherEnd |==> thisStart <= otherEnd
5352:ROR:<(long,long):FALSE(long,long):org.joda.time.base.AbstractInterval@overlaps(org.joda.time.ReadableInterval):239:thisStart < otherEnd |==> false
5353:ROR:<(long,long):!=(long,long):org.joda.time.base.AbstractInterval@overlaps(org.joda.time.ReadableInterval):239:otherStart < thisEnd |==> otherStart != thisEnd
5354:ROR:<(long,long):<=(long,long):org.joda.time.base.AbstractInterval@overlaps(org.joda.time.ReadableInterval):239:otherStart < thisEnd |==> otherStart <= thisEnd
5355:ROR:<(long,long):FALSE(long,long):org.joda.time.base.AbstractInterval@overlaps(org.joda.time.ReadableInterval):239:otherStart < thisEnd |==> false
5356:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.base.AbstractInterval@overlaps(org.joda.time.ReadableInterval):239:thisStart < otherEnd && otherStart < thisEnd |==> thisStart < otherEnd == otherStart < thisEnd
5357:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.base.AbstractInterval@overlaps(org.joda.time.ReadableInterval):239:thisStart < otherEnd && otherStart < thisEnd |==> false
5358:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.base.AbstractInterval@overlaps(org.joda.time.ReadableInterval):239:thisStart < otherEnd && otherStart < thisEnd |==> thisStart < otherEnd
5359:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.base.AbstractInterval@overlaps(org.joda.time.ReadableInterval):239:thisStart < otherEnd && otherStart < thisEnd |==> otherStart < thisEnd
5360:ROR:==(long,long):<=(long,long):org.joda.time.base.AbstractInterval@isEqual(org.joda.time.ReadableInterval):254:getStartMillis() == other.getStartMillis() |==> getStartMillis() <= other.getStartMillis()
5361:ROR:==(long,long):>=(long,long):org.joda.time.base.AbstractInterval@isEqual(org.joda.time.ReadableInterval):254:getStartMillis() == other.getStartMillis() |==> getStartMillis() >= other.getStartMillis()
5362:ROR:==(long,long):FALSE(long,long):org.joda.time.base.AbstractInterval@isEqual(org.joda.time.ReadableInterval):254:getStartMillis() == other.getStartMillis() |==> false
5363:ROR:==(long,long):<=(long,long):org.joda.time.base.AbstractInterval@isEqual(org.joda.time.ReadableInterval):255:getEndMillis() == other.getEndMillis() |==> getEndMillis() <= other.getEndMillis()
5364:ROR:==(long,long):>=(long,long):org.joda.time.base.AbstractInterval@isEqual(org.joda.time.ReadableInterval):255:getEndMillis() == other.getEndMillis() |==> getEndMillis() >= other.getEndMillis()
5365:ROR:==(long,long):FALSE(long,long):org.joda.time.base.AbstractInterval@isEqual(org.joda.time.ReadableInterval):255:getEndMillis() == other.getEndMillis() |==> false
5366:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.base.AbstractInterval@isEqual(org.joda.time.ReadableInterval):254:getStartMillis() == other.getStartMillis() && getEndMillis() == other.getEndMillis() |==> getStartMillis() == other.getStartMillis() == (getEndMillis() == other.getEndMillis())
5367:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.base.AbstractInterval@isEqual(org.joda.time.ReadableInterval):254:getStartMillis() == other.getStartMillis() && getEndMillis() == other.getEndMillis() |==> false
5368:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.base.AbstractInterval@isEqual(org.joda.time.ReadableInterval):254:getStartMillis() == other.getStartMillis() && getEndMillis() == other.getEndMillis() |==> getStartMillis() == other.getStartMillis()
5369:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.base.AbstractInterval@isEqual(org.joda.time.ReadableInterval):255:getStartMillis() == other.getStartMillis() && getEndMillis() == other.getEndMillis() |==> getEndMillis() == other.getEndMillis()
5370:ROR:<=(long,long):<(long,long):org.joda.time.base.AbstractInterval@isBefore(long):268:getEndMillis() <= millisInstant |==> getEndMillis() < millisInstant
5371:ROR:<=(long,long):==(long,long):org.joda.time.base.AbstractInterval@isBefore(long):268:getEndMillis() <= millisInstant |==> getEndMillis() == millisInstant
5372:ROR:<=(long,long):TRUE(long,long):org.joda.time.base.AbstractInterval@isBefore(long):268:getEndMillis() <= millisInstant |==> true
5373:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.AbstractInterval@isBefore(org.joda.time.ReadableInstant):291:instant == null |==> false
5374:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.AbstractInterval@isBefore(org.joda.time.ReadableInterval):306:interval == null |==> false
5375:ROR:>(long,long):!=(long,long):org.joda.time.base.AbstractInterval@isAfter(long):323:getStartMillis() > millisInstant |==> getStartMillis() != millisInstant
5376:ROR:>(long,long):>=(long,long):org.joda.time.base.AbstractInterval@isAfter(long):323:getStartMillis() > millisInstant |==> getStartMillis() >= millisInstant
5377:ROR:>(long,long):FALSE(long,long):org.joda.time.base.AbstractInterval@isAfter(long):323:getStartMillis() > millisInstant |==> false
5378:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.AbstractInterval@isAfter(org.joda.time.ReadableInstant):346:instant == null |==> false
5379:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.AbstractInterval@isAfter(org.joda.time.ReadableInterval):363:interval == null |==> false
5380:ROR:>=(long,long):==(long,long):org.joda.time.base.AbstractInterval@isAfter(org.joda.time.ReadableInterval):368:getStartMillis() >= endMillis |==> getStartMillis() == endMillis
5381:ROR:>=(long,long):>(long,long):org.joda.time.base.AbstractInterval@isAfter(org.joda.time.ReadableInterval):368:getStartMillis() >= endMillis |==> getStartMillis() > endMillis
5382:ROR:>=(long,long):TRUE(long,long):org.joda.time.base.AbstractInterval@isAfter(org.joda.time.ReadableInterval):368:getStartMillis() >= endMillis |==> true
5383:ORU:-(long):+(long):org.joda.time.base.AbstractInterval@toDurationMillis():402:-getStartMillis() |==> +getStartMillis()
5384:ORU:-(long):~(long):org.joda.time.base.AbstractInterval@toDurationMillis():402:-getStartMillis() |==> ~getStartMillis()
5385:LVR:0:POS:org.joda.time.base.AbstractInterval@toDuration():415:0 |==> 1
5386:LVR:0:NEG:org.joda.time.base.AbstractInterval@toDuration():415:0 |==> -1
5387:ROR:==(long,long):<=(long,long):org.joda.time.base.AbstractInterval@toDuration():415:durMillis == 0 |==> durMillis <= 0
5388:ROR:==(long,long):>=(long,long):org.joda.time.base.AbstractInterval@toDuration():415:durMillis == 0 |==> durMillis >= 0
5389:ROR:==(long,long):FALSE(long,long):org.joda.time.base.AbstractInterval@toDuration():415:durMillis == 0 |==> false
5390:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.AbstractInterval@equals(java.lang.Object):464:this == readableInterval |==> false
5391:LVR:TRUE:FALSE:org.joda.time.base.AbstractInterval@equals(java.lang.Object):465:true |==> false
5392:LVR:FALSE:TRUE:org.joda.time.base.AbstractInterval@equals(java.lang.Object):467:false |==> true
5393:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.base.AbstractInterval@equals(java.lang.Object):467:readableInterval instanceof ReadableInterval == false |==> false
5394:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.base.AbstractInterval@equals(java.lang.Object):467:readableInterval instanceof ReadableInterval == false |==> readableInterval instanceof ReadableInterval
5395:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.base.AbstractInterval@equals(java.lang.Object):467:readableInterval instanceof ReadableInterval == false |==> false
5396:LVR:FALSE:TRUE:org.joda.time.base.AbstractInterval@equals(java.lang.Object):468:false |==> true
5397:ROR:==(long,long):<=(long,long):org.joda.time.base.AbstractInterval@equals(java.lang.Object):472:getStartMillis() == other.getStartMillis() |==> getStartMillis() <= other.getStartMillis()
5398:ROR:==(long,long):>=(long,long):org.joda.time.base.AbstractInterval@equals(java.lang.Object):472:getStartMillis() == other.getStartMillis() |==> getStartMillis() >= other.getStartMillis()
5399:ROR:==(long,long):FALSE(long,long):org.joda.time.base.AbstractInterval@equals(java.lang.Object):472:getStartMillis() == other.getStartMillis() |==> false
5400:ROR:==(long,long):<=(long,long):org.joda.time.base.AbstractInterval@equals(java.lang.Object):473:getEndMillis() == other.getEndMillis() |==> getEndMillis() <= other.getEndMillis()
5401:ROR:==(long,long):>=(long,long):org.joda.time.base.AbstractInterval@equals(java.lang.Object):473:getEndMillis() == other.getEndMillis() |==> getEndMillis() >= other.getEndMillis()
5402:ROR:==(long,long):FALSE(long,long):org.joda.time.base.AbstractInterval@equals(java.lang.Object):473:getEndMillis() == other.getEndMillis() |==> false
5403:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.base.AbstractInterval@equals(java.lang.Object):472:getStartMillis() == other.getStartMillis() && getEndMillis() == other.getEndMillis() |==> getStartMillis() == other.getStartMillis() == (getEndMillis() == other.getEndMillis())
5404:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.base.AbstractInterval@equals(java.lang.Object):472:getStartMillis() == other.getStartMillis() && getEndMillis() == other.getEndMillis() |==> false
5405:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.base.AbstractInterval@equals(java.lang.Object):472:getStartMillis() == other.getStartMillis() && getEndMillis() == other.getEndMillis() |==> getStartMillis() == other.getStartMillis()
5406:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.base.AbstractInterval@equals(java.lang.Object):473:getStartMillis() == other.getStartMillis() && getEndMillis() == other.getEndMillis() |==> getEndMillis() == other.getEndMillis()
5407:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.base.AbstractInterval@equals(java.lang.Object):472:getStartMillis() == other.getStartMillis() && getEndMillis() == other.getEndMillis() && FieldUtils.equals(getChronology(), other.getChronology()) |==> (getStartMillis() == other.getStartMillis() && getEndMillis() == other.getEndMillis()) == FieldUtils.equals(getChronology(), other.getChronology())
5408:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.base.AbstractInterval@equals(java.lang.Object):473:getStartMillis() == other.getStartMillis() && getEndMillis() == other.getEndMillis() && FieldUtils.equals(getChronology(), other.getChronology()) |==> false
5409:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.base.AbstractInterval@equals(java.lang.Object):472:getStartMillis() == other.getStartMillis() && getEndMillis() == other.getEndMillis() && FieldUtils.equals(getChronology(), other.getChronology()) |==> getStartMillis() == other.getStartMillis() && getEndMillis() == other.getEndMillis()
5410:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.base.AbstractInterval@equals(java.lang.Object):474:getStartMillis() == other.getStartMillis() && getEndMillis() == other.getEndMillis() && FieldUtils.equals(getChronology(), other.getChronology()) |==> FieldUtils.equals(getChronology(), other.getChronology())
5411:LVR:POS:0:org.joda.time.base.AbstractInterval@hashCode():485:97 |==> 0
5412:LVR:POS:NEG:org.joda.time.base.AbstractInterval@hashCode():485:97 |==> -97
5413:LVR:POS:0:org.joda.time.base.AbstractInterval@hashCode():486:31 |==> 0
5414:LVR:POS:NEG:org.joda.time.base.AbstractInterval@hashCode():486:31 |==> -31
5415:AOR:*(int,int):%(int,int):org.joda.time.base.AbstractInterval@hashCode():486:31 * result |==> 31 % result
5416:AOR:*(int,int):+(int,int):org.joda.time.base.AbstractInterval@hashCode():486:31 * result |==> 31 + result
5417:AOR:*(int,int):-(int,int):org.joda.time.base.AbstractInterval@hashCode():486:31 * result |==> 31 - result
5418:AOR:*(int,int):/(int,int):org.joda.time.base.AbstractInterval@hashCode():486:31 * result |==> 31 / result
5419:LVR:POS:0:org.joda.time.base.AbstractInterval@hashCode():486:32 |==> 0
5420:LVR:POS:NEG:org.joda.time.base.AbstractInterval@hashCode():486:32 |==> -32
5421:SOR:>>>(long,int):<<(long,int):org.joda.time.base.AbstractInterval@hashCode():486:start >>> 32 |==> start << 32
5422:SOR:>>>(long,int):>>(long,int):org.joda.time.base.AbstractInterval@hashCode():486:start >>> 32 |==> start >> 32
5423:LOR:^(long,long):&(long,long):org.joda.time.base.AbstractInterval@hashCode():486:start ^ (start >>> 32) |==> start & (start >>> 32)
5424:LOR:^(long,long):|(long,long):org.joda.time.base.AbstractInterval@hashCode():486:start ^ (start >>> 32) |==> start | (start >>> 32)
5425:AOR:+(int,int):%(int,int):org.joda.time.base.AbstractInterval@hashCode():486:31 * result + ((int)(start ^ (start >>> 32))) |==> 31 * result % ((int)(start ^ (start >>> 32)))
5426:AOR:+(int,int):*(int,int):org.joda.time.base.AbstractInterval@hashCode():486:31 * result + ((int)(start ^ (start >>> 32))) |==> 31 * result * ((int)(start ^ (start >>> 32)))
5427:AOR:+(int,int):-(int,int):org.joda.time.base.AbstractInterval@hashCode():486:31 * result + ((int)(start ^ (start >>> 32))) |==> 31 * result - ((int)(start ^ (start >>> 32)))
5428:AOR:+(int,int):/(int,int):org.joda.time.base.AbstractInterval@hashCode():486:31 * result + ((int)(start ^ (start >>> 32))) |==> 31 * result / ((int)(start ^ (start >>> 32)))
5429:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.AbstractInterval@hashCode():486:result = 31 * result + ((int)(start ^ (start >>> 32))) |==> <NO-OP>
5430:LVR:POS:0:org.joda.time.base.AbstractInterval@hashCode():487:31 |==> 0
5431:LVR:POS:NEG:org.joda.time.base.AbstractInterval@hashCode():487:31 |==> -31
5432:AOR:*(int,int):%(int,int):org.joda.time.base.AbstractInterval@hashCode():487:31 * result |==> 31 % result
5433:AOR:*(int,int):+(int,int):org.joda.time.base.AbstractInterval@hashCode():487:31 * result |==> 31 + result
5434:AOR:*(int,int):-(int,int):org.joda.time.base.AbstractInterval@hashCode():487:31 * result |==> 31 - result
5435:AOR:*(int,int):/(int,int):org.joda.time.base.AbstractInterval@hashCode():487:31 * result |==> 31 / result
5436:LVR:POS:0:org.joda.time.base.AbstractInterval@hashCode():487:32 |==> 0
5437:LVR:POS:NEG:org.joda.time.base.AbstractInterval@hashCode():487:32 |==> -32
5438:SOR:>>>(long,int):<<(long,int):org.joda.time.base.AbstractInterval@hashCode():487:end >>> 32 |==> end << 32
5439:SOR:>>>(long,int):>>(long,int):org.joda.time.base.AbstractInterval@hashCode():487:end >>> 32 |==> end >> 32
5440:LOR:^(long,long):&(long,long):org.joda.time.base.AbstractInterval@hashCode():487:end ^ (end >>> 32) |==> end & (end >>> 32)
5441:LOR:^(long,long):|(long,long):org.joda.time.base.AbstractInterval@hashCode():487:end ^ (end >>> 32) |==> end | (end >>> 32)
5442:AOR:+(int,int):%(int,int):org.joda.time.base.AbstractInterval@hashCode():487:31 * result + ((int)(end ^ (end >>> 32))) |==> 31 * result % ((int)(end ^ (end >>> 32)))
5443:AOR:+(int,int):*(int,int):org.joda.time.base.AbstractInterval@hashCode():487:31 * result + ((int)(end ^ (end >>> 32))) |==> 31 * result * ((int)(end ^ (end >>> 32)))
5444:AOR:+(int,int):-(int,int):org.joda.time.base.AbstractInterval@hashCode():487:31 * result + ((int)(end ^ (end >>> 32))) |==> 31 * result - ((int)(end ^ (end >>> 32)))
5445:AOR:+(int,int):/(int,int):org.joda.time.base.AbstractInterval@hashCode():487:31 * result + ((int)(end ^ (end >>> 32))) |==> 31 * result / ((int)(end ^ (end >>> 32)))
5446:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.AbstractInterval@hashCode():487:result = 31 * result + ((int)(end ^ (end >>> 32))) |==> <NO-OP>
5447:LVR:POS:0:org.joda.time.base.AbstractInterval@hashCode():488:31 |==> 0
5448:LVR:POS:NEG:org.joda.time.base.AbstractInterval@hashCode():488:31 |==> -31
5449:AOR:*(int,int):%(int,int):org.joda.time.base.AbstractInterval@hashCode():488:31 * result |==> 31 % result
5450:AOR:*(int,int):+(int,int):org.joda.time.base.AbstractInterval@hashCode():488:31 * result |==> 31 + result
5451:AOR:*(int,int):-(int,int):org.joda.time.base.AbstractInterval@hashCode():488:31 * result |==> 31 - result
5452:AOR:*(int,int):/(int,int):org.joda.time.base.AbstractInterval@hashCode():488:31 * result |==> 31 / result
5453:AOR:+(int,int):%(int,int):org.joda.time.base.AbstractInterval@hashCode():488:31 * result + getChronology().hashCode() |==> 31 * result % getChronology().hashCode()
5454:AOR:+(int,int):*(int,int):org.joda.time.base.AbstractInterval@hashCode():488:31 * result + getChronology().hashCode() |==> 31 * result * getChronology().hashCode()
5455:AOR:+(int,int):-(int,int):org.joda.time.base.AbstractInterval@hashCode():488:31 * result + getChronology().hashCode() |==> 31 * result - getChronology().hashCode()
5456:AOR:+(int,int):/(int,int):org.joda.time.base.AbstractInterval@hashCode():488:31 * result + getChronology().hashCode() |==> 31 * result / getChronology().hashCode()
5457:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.AbstractInterval@hashCode():488:result = 31 * result + getChronology().hashCode() |==> <NO-OP>
5458:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.AbstractInterval@toString():501:printer = printer.withChronology(getChronology()) |==> <NO-OP>
5459:LVR:POS:0:org.joda.time.base.AbstractInterval@toString():502:48 |==> 0
5460:LVR:POS:NEG:org.joda.time.base.AbstractInterval@toString():502:48 |==> -48
5461:STD:<CALL>:<NO-OP>:org.joda.time.base.AbstractInterval@toString():503:printer.printTo(buf, getStartMillis()) |==> <NO-OP>
5462:STD:<CALL>:<NO-OP>:org.joda.time.base.AbstractInterval@toString():504:buf.append('/') |==> <NO-OP>
5463:STD:<CALL>:<NO-OP>:org.joda.time.base.AbstractInterval@toString():505:printer.printTo(buf, getEndMillis()) |==> <NO-OP>
5464:LVR:0:POS:org.joda.time.MutableInterval@<init>():79:0L |==> 1L
5465:LVR:0:NEG:org.joda.time.MutableInterval@<init>():79:0L |==> -1L
5466:LVR:0:POS:org.joda.time.MutableInterval@<init>():79:0L |==> 1L
5467:LVR:0:NEG:org.joda.time.MutableInterval@<init>():79:0L |==> -1L
5468:STD:<CALL>:<NO-OP>:org.joda.time.MutableInterval@setInterval(long,long):217:super.setInterval(startInstant, endInstant, getChronology()) |==> <NO-OP>
5469:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.MutableInterval@setInterval(org.joda.time.ReadableInterval):227:interval == null |==> false
5470:STD:<CALL>:<NO-OP>:org.joda.time.MutableInterval@setInterval(org.joda.time.ReadableInterval):233:super.setInterval(startMillis, endMillis, chrono) |==> <NO-OP>
5471:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.MutableInterval@setInterval(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):245:start == null |==> false
5472:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.MutableInterval@setInterval(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):245:end == null |==> false
5473:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.MutableInterval@setInterval(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):245:start == null && end == null |==> start == null == (end == null)
5474:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.MutableInterval@setInterval(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):245:start == null && end == null |==> false
5475:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.MutableInterval@setInterval(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):245:start == null && end == null |==> start == null
5476:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.MutableInterval@setInterval(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):245:start == null && end == null |==> end == null
5477:STD:<CALL>:<NO-OP>:org.joda.time.MutableInterval@setInterval(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):247:setInterval(now, now) |==> <NO-OP>
5478:STD:<CALL>:<NO-OP>:org.joda.time.MutableInterval@setInterval(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):252:super.setInterval(startMillis, endMillis, chrono) |==> <NO-OP>
5479:STD:<CALL>:<NO-OP>:org.joda.time.MutableInterval@setChronology(org.joda.time.Chronology):263:super.setInterval(getStartMillis(), getEndMillis(), chrono) |==> <NO-OP>
5480:STD:<CALL>:<NO-OP>:org.joda.time.MutableInterval@setStartMillis(long):274:super.setInterval(startInstant, getEndMillis(), getChronology()) |==> <NO-OP>
5481:STD:<CALL>:<NO-OP>:org.joda.time.MutableInterval@setStart(org.joda.time.ReadableInstant):285:super.setInterval(startMillis, getEndMillis(), getChronology()) |==> <NO-OP>
5482:STD:<CALL>:<NO-OP>:org.joda.time.MutableInterval@setEndMillis(long):296:super.setInterval(getStartMillis(), endInstant, getChronology()) |==> <NO-OP>
5483:STD:<CALL>:<NO-OP>:org.joda.time.MutableInterval@setEnd(org.joda.time.ReadableInstant):307:super.setInterval(getStartMillis(), endMillis, getChronology()) |==> <NO-OP>
5484:STD:<CALL>:<NO-OP>:org.joda.time.MutableInterval@setDurationAfterStart(long):319:setEndMillis(FieldUtils.safeAdd(getStartMillis(), duration)) |==> <NO-OP>
5485:ORU:-(long):+(long):org.joda.time.MutableInterval@setDurationBeforeEnd(long):330:-duration |==> +duration
5486:ORU:-(long):~(long):org.joda.time.MutableInterval@setDurationBeforeEnd(long):330:-duration |==> ~duration
5487:STD:<CALL>:<NO-OP>:org.joda.time.MutableInterval@setDurationBeforeEnd(long):330:setStartMillis(FieldUtils.safeAdd(getEndMillis(), -duration)) |==> <NO-OP>
5488:STD:<CALL>:<NO-OP>:org.joda.time.MutableInterval@setDurationAfterStart(org.joda.time.ReadableDuration):343:setEndMillis(FieldUtils.safeAdd(getStartMillis(), durationMillis)) |==> <NO-OP>
5489:ORU:-(long):+(long):org.joda.time.MutableInterval@setDurationBeforeEnd(org.joda.time.ReadableDuration):355:-durationMillis |==> +durationMillis
5490:ORU:-(long):~(long):org.joda.time.MutableInterval@setDurationBeforeEnd(org.joda.time.ReadableDuration):355:-durationMillis |==> ~durationMillis
5491:STD:<CALL>:<NO-OP>:org.joda.time.MutableInterval@setDurationBeforeEnd(org.joda.time.ReadableDuration):355:setStartMillis(FieldUtils.safeAdd(getEndMillis(), -durationMillis)) |==> <NO-OP>
5492:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.MutableInterval@setPeriodAfterStart(org.joda.time.ReadablePeriod):368:period == null |==> false
5493:STD:<CALL>:<NO-OP>:org.joda.time.MutableInterval@setPeriodAfterStart(org.joda.time.ReadablePeriod):369:setEndMillis(getStartMillis()) |==> <NO-OP>
5494:LVR:POS:0:org.joda.time.MutableInterval@setPeriodAfterStart(org.joda.time.ReadablePeriod):371:1 |==> 0
5495:LVR:POS:NEG:org.joda.time.MutableInterval@setPeriodAfterStart(org.joda.time.ReadablePeriod):371:1 |==> -1
5496:STD:<CALL>:<NO-OP>:org.joda.time.MutableInterval@setPeriodAfterStart(org.joda.time.ReadablePeriod):371:setEndMillis(getChronology().add(period, getStartMillis(), 1)) |==> <NO-OP>
5497:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.MutableInterval@setPeriodBeforeEnd(org.joda.time.ReadablePeriod):384:period == null |==> false
5498:STD:<CALL>:<NO-OP>:org.joda.time.MutableInterval@setPeriodBeforeEnd(org.joda.time.ReadablePeriod):385:setStartMillis(getEndMillis()) |==> <NO-OP>
5499:LVR:NEG:0:org.joda.time.MutableInterval@setPeriodBeforeEnd(org.joda.time.ReadablePeriod):387:-1 |==> 0
5500:LVR:NEG:POS:org.joda.time.MutableInterval@setPeriodBeforeEnd(org.joda.time.ReadablePeriod):387:-1 |==> 1
5501:STD:<CALL>:<NO-OP>:org.joda.time.MutableInterval@setPeriodBeforeEnd(org.joda.time.ReadablePeriod):387:setStartMillis(getChronology().add(period, getEndMillis(), -1)) |==> <NO-OP>
5502:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeComparator@getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType):106:lowerLimit == null |==> false
5503:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeComparator@getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType):106:upperLimit == null |==> false
5504:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeComparator@getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType):106:lowerLimit == null && upperLimit == null |==> lowerLimit == null == (upperLimit == null)
5505:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeComparator@getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType):106:lowerLimit == null && upperLimit == null |==> false
5506:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeComparator@getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType):106:lowerLimit == null && upperLimit == null |==> lowerLimit == null
5507:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeComparator@getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType):106:lowerLimit == null && upperLimit == null |==> upperLimit == null
5508:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeComparator@getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType):109:lowerLimit == DateTimeFieldType.dayOfYear() |==> false
5509:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeComparator@getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType):109:upperLimit == null |==> false
5510:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeComparator@getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType):109:lowerLimit == DateTimeFieldType.dayOfYear() && upperLimit == null |==> lowerLimit == DateTimeFieldType.dayOfYear() == (upperLimit == null)
5511:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeComparator@getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType):109:lowerLimit == DateTimeFieldType.dayOfYear() && upperLimit == null |==> false
5512:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeComparator@getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType):109:lowerLimit == DateTimeFieldType.dayOfYear() && upperLimit == null |==> lowerLimit == DateTimeFieldType.dayOfYear()
5513:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeComparator@getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType):109:lowerLimit == DateTimeFieldType.dayOfYear() && upperLimit == null |==> upperLimit == null
5514:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeComparator@getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType):112:lowerLimit == null |==> false
5515:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeComparator@getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType):112:upperLimit == DateTimeFieldType.dayOfYear() |==> false
5516:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeComparator@getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType):112:lowerLimit == null && upperLimit == DateTimeFieldType.dayOfYear() |==> lowerLimit == null == (upperLimit == DateTimeFieldType.dayOfYear())
5517:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeComparator@getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType):112:lowerLimit == null && upperLimit == DateTimeFieldType.dayOfYear() |==> false
5518:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeComparator@getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType):112:lowerLimit == null && upperLimit == DateTimeFieldType.dayOfYear() |==> lowerLimit == null
5519:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeComparator@getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType):112:lowerLimit == null && upperLimit == DateTimeFieldType.dayOfYear() |==> upperLimit == DateTimeFieldType.dayOfYear()
5520:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeComparator@compare(java.lang.Object,java.lang.Object):196:conv = ConverterManager.getInstance().getInstantConverter(rhsObj) |==> <NO-OP>
5521:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeComparator@compare(java.lang.Object,java.lang.Object):200:iLowerLimit != null |==> true
5522:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeComparator@compare(java.lang.Object,java.lang.Object):201:lhsMillis = iLowerLimit.getField(lhsChrono).roundFloor(lhsMillis) |==> <NO-OP>
5523:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeComparator@compare(java.lang.Object,java.lang.Object):202:rhsMillis = iLowerLimit.getField(rhsChrono).roundFloor(rhsMillis) |==> <NO-OP>
5524:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeComparator@compare(java.lang.Object,java.lang.Object):205:iUpperLimit != null |==> true
5525:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeComparator@compare(java.lang.Object,java.lang.Object):206:lhsMillis = iUpperLimit.getField(lhsChrono).remainder(lhsMillis) |==> <NO-OP>
5526:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeComparator@compare(java.lang.Object,java.lang.Object):207:rhsMillis = iUpperLimit.getField(rhsChrono).remainder(rhsMillis) |==> <NO-OP>
5527:ROR:<(long,long):!=(long,long):org.joda.time.DateTimeComparator@compare(java.lang.Object,java.lang.Object):210:lhsMillis < rhsMillis |==> lhsMillis != rhsMillis
5528:ROR:<(long,long):<=(long,long):org.joda.time.DateTimeComparator@compare(java.lang.Object,java.lang.Object):210:lhsMillis < rhsMillis |==> lhsMillis <= rhsMillis
5529:ROR:<(long,long):FALSE(long,long):org.joda.time.DateTimeComparator@compare(java.lang.Object,java.lang.Object):210:lhsMillis < rhsMillis |==> false
5530:LVR:NEG:0:org.joda.time.DateTimeComparator@compare(java.lang.Object,java.lang.Object):211:-1 |==> 0
5531:LVR:NEG:POS:org.joda.time.DateTimeComparator@compare(java.lang.Object,java.lang.Object):211:-1 |==> 1
5532:ROR:>(long,long):!=(long,long):org.joda.time.DateTimeComparator@compare(java.lang.Object,java.lang.Object):212:lhsMillis > rhsMillis |==> lhsMillis != rhsMillis
5533:ROR:>(long,long):>=(long,long):org.joda.time.DateTimeComparator@compare(java.lang.Object,java.lang.Object):212:lhsMillis > rhsMillis |==> lhsMillis >= rhsMillis
5534:ROR:>(long,long):FALSE(long,long):org.joda.time.DateTimeComparator@compare(java.lang.Object,java.lang.Object):212:lhsMillis > rhsMillis |==> false
5535:LVR:POS:0:org.joda.time.DateTimeComparator@compare(java.lang.Object,java.lang.Object):213:1 |==> 0
5536:LVR:POS:NEG:org.joda.time.DateTimeComparator@compare(java.lang.Object,java.lang.Object):213:1 |==> -1
5537:LVR:0:POS:org.joda.time.DateTimeComparator@compare(java.lang.Object,java.lang.Object):215:0 |==> 1
5538:LVR:0:NEG:org.joda.time.DateTimeComparator@compare(java.lang.Object,java.lang.Object):215:0 |==> -1
5539:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeComparator@equals(java.lang.Object):238:iLowerLimit == other.getLowerLimit() |==> false
5540:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeComparator@equals(java.lang.Object):239:iLowerLimit != null |==> true
5541:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeComparator@equals(java.lang.Object):239:iLowerLimit != null && iLowerLimit.equals(other.getLowerLimit()) |==> iLowerLimit != null == iLowerLimit.equals(other.getLowerLimit())
5542:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeComparator@equals(java.lang.Object):239:iLowerLimit != null && iLowerLimit.equals(other.getLowerLimit()) |==> false
5543:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeComparator@equals(java.lang.Object):239:iLowerLimit != null && iLowerLimit.equals(other.getLowerLimit()) |==> iLowerLimit != null
5544:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeComparator@equals(java.lang.Object):239:iLowerLimit != null && iLowerLimit.equals(other.getLowerLimit()) |==> iLowerLimit.equals(other.getLowerLimit())
5545:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeComparator@equals(java.lang.Object):238:iLowerLimit == other.getLowerLimit() || (iLowerLimit != null && iLowerLimit.equals(other.getLowerLimit())) |==> iLowerLimit == other.getLowerLimit() != (iLowerLimit != null && iLowerLimit.equals(other.getLowerLimit()))
5546:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeComparator@equals(java.lang.Object):238:iLowerLimit == other.getLowerLimit() || (iLowerLimit != null && iLowerLimit.equals(other.getLowerLimit())) |==> iLowerLimit == other.getLowerLimit()
5547:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeComparator@equals(java.lang.Object):239:iLowerLimit == other.getLowerLimit() || (iLowerLimit != null && iLowerLimit.equals(other.getLowerLimit())) |==> (iLowerLimit != null && iLowerLimit.equals(other.getLowerLimit()))
5548:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeComparator@equals(java.lang.Object):238:iLowerLimit == other.getLowerLimit() || (iLowerLimit != null && iLowerLimit.equals(other.getLowerLimit())) |==> true
5549:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeComparator@equals(java.lang.Object):240:iUpperLimit == other.getUpperLimit() |==> false
5550:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeComparator@equals(java.lang.Object):241:iUpperLimit != null |==> true
5551:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeComparator@equals(java.lang.Object):241:iUpperLimit != null && iUpperLimit.equals(other.getUpperLimit()) |==> iUpperLimit != null == iUpperLimit.equals(other.getUpperLimit())
5552:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeComparator@equals(java.lang.Object):241:iUpperLimit != null && iUpperLimit.equals(other.getUpperLimit()) |==> false
5553:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeComparator@equals(java.lang.Object):241:iUpperLimit != null && iUpperLimit.equals(other.getUpperLimit()) |==> iUpperLimit != null
5554:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeComparator@equals(java.lang.Object):241:iUpperLimit != null && iUpperLimit.equals(other.getUpperLimit()) |==> iUpperLimit.equals(other.getUpperLimit())
5555:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeComparator@equals(java.lang.Object):240:iUpperLimit == other.getUpperLimit() || (iUpperLimit != null && iUpperLimit.equals(other.getUpperLimit())) |==> iUpperLimit == other.getUpperLimit() != (iUpperLimit != null && iUpperLimit.equals(other.getUpperLimit()))
5556:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeComparator@equals(java.lang.Object):240:iUpperLimit == other.getUpperLimit() || (iUpperLimit != null && iUpperLimit.equals(other.getUpperLimit())) |==> iUpperLimit == other.getUpperLimit()
5557:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeComparator@equals(java.lang.Object):241:iUpperLimit == other.getUpperLimit() || (iUpperLimit != null && iUpperLimit.equals(other.getUpperLimit())) |==> (iUpperLimit != null && iUpperLimit.equals(other.getUpperLimit()))
5558:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeComparator@equals(java.lang.Object):240:iUpperLimit == other.getUpperLimit() || (iUpperLimit != null && iUpperLimit.equals(other.getUpperLimit())) |==> true
5559:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeComparator@equals(java.lang.Object):238:(iLowerLimit == other.getLowerLimit() || (iLowerLimit != null && iLowerLimit.equals(other.getLowerLimit()))) && (iUpperLimit == other.getUpperLimit() || (iUpperLimit != null && iUpperLimit.equals(other.getUpperLimit()))) |==> (iLowerLimit == other.getLowerLimit() || (iLowerLimit != null && iLowerLimit.equals(other.getLowerLimit()))) == (iUpperLimit == other.getUpperLimit() || (iUpperLimit != null && iUpperLimit.equals(other.getUpperLimit())))
5560:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeComparator@equals(java.lang.Object):239:(iLowerLimit == other.getLowerLimit() || (iLowerLimit != null && iLowerLimit.equals(other.getLowerLimit()))) && (iUpperLimit == other.getUpperLimit() || (iUpperLimit != null && iUpperLimit.equals(other.getUpperLimit()))) |==> false
5561:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeComparator@equals(java.lang.Object):238:(iLowerLimit == other.getLowerLimit() || (iLowerLimit != null && iLowerLimit.equals(other.getLowerLimit()))) && (iUpperLimit == other.getUpperLimit() || (iUpperLimit != null && iUpperLimit.equals(other.getUpperLimit()))) |==> (iLowerLimit == other.getLowerLimit() || (iLowerLimit != null && iLowerLimit.equals(other.getLowerLimit())))
5562:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeComparator@equals(java.lang.Object):240:(iLowerLimit == other.getLowerLimit() || (iLowerLimit != null && iLowerLimit.equals(other.getLowerLimit()))) && (iUpperLimit == other.getUpperLimit() || (iUpperLimit != null && iUpperLimit.equals(other.getUpperLimit()))) |==> (iUpperLimit == other.getUpperLimit() || (iUpperLimit != null && iUpperLimit.equals(other.getUpperLimit())))
5563:LVR:FALSE:TRUE:org.joda.time.DateTimeComparator@equals(java.lang.Object):243:false |==> true
5564:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeComparator@hashCode():252:iLowerLimit == null |==> false
5565:LVR:0:POS:org.joda.time.DateTimeComparator@hashCode():252:0 |==> 1
5566:LVR:0:NEG:org.joda.time.DateTimeComparator@hashCode():252:0 |==> -1
5567:LVR:POS:0:org.joda.time.DateTimeComparator@hashCode():253:123 |==> 0
5568:LVR:POS:NEG:org.joda.time.DateTimeComparator@hashCode():253:123 |==> -123
5569:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeComparator@hashCode():253:iUpperLimit == null |==> false
5570:LVR:0:POS:org.joda.time.DateTimeComparator@hashCode():253:0 |==> 1
5571:LVR:0:NEG:org.joda.time.DateTimeComparator@hashCode():253:0 |==> -1
5572:AOR:*(int,int):%(int,int):org.joda.time.DateTimeComparator@hashCode():253:123 * (iUpperLimit == null ? 0 : iUpperLimit.hashCode()) |==> 123 % (iUpperLimit == null ? 0 : iUpperLimit.hashCode())
5573:AOR:*(int,int):+(int,int):org.joda.time.DateTimeComparator@hashCode():253:123 * (iUpperLimit == null ? 0 : iUpperLimit.hashCode()) |==> 123 + (iUpperLimit == null ? 0 : iUpperLimit.hashCode())
5574:AOR:*(int,int):-(int,int):org.joda.time.DateTimeComparator@hashCode():253:123 * (iUpperLimit == null ? 0 : iUpperLimit.hashCode()) |==> 123 - (iUpperLimit == null ? 0 : iUpperLimit.hashCode())
5575:AOR:*(int,int):/(int,int):org.joda.time.DateTimeComparator@hashCode():253:123 * (iUpperLimit == null ? 0 : iUpperLimit.hashCode()) |==> 123 / (iUpperLimit == null ? 0 : iUpperLimit.hashCode())
5576:AOR:+(int,int):%(int,int):org.joda.time.DateTimeComparator@hashCode():252:(iLowerLimit == null ? 0 : iLowerLimit.hashCode()) + (123 * (iUpperLimit == null ? 0 : iUpperLimit.hashCode())) |==> (iLowerLimit == null ? 0 : iLowerLimit.hashCode()) % (123 * (iUpperLimit == null ? 0 : iUpperLimit.hashCode()))
5577:AOR:+(int,int):*(int,int):org.joda.time.DateTimeComparator@hashCode():252:(iLowerLimit == null ? 0 : iLowerLimit.hashCode()) + (123 * (iUpperLimit == null ? 0 : iUpperLimit.hashCode())) |==> (iLowerLimit == null ? 0 : iLowerLimit.hashCode()) * (123 * (iUpperLimit == null ? 0 : iUpperLimit.hashCode()))
5578:AOR:+(int,int):-(int,int):org.joda.time.DateTimeComparator@hashCode():252:(iLowerLimit == null ? 0 : iLowerLimit.hashCode()) + (123 * (iUpperLimit == null ? 0 : iUpperLimit.hashCode())) |==> (iLowerLimit == null ? 0 : iLowerLimit.hashCode()) - (123 * (iUpperLimit == null ? 0 : iUpperLimit.hashCode()))
5579:AOR:+(int,int):/(int,int):org.joda.time.DateTimeComparator@hashCode():252:(iLowerLimit == null ? 0 : iLowerLimit.hashCode()) + (123 * (iUpperLimit == null ? 0 : iUpperLimit.hashCode())) |==> (iLowerLimit == null ? 0 : iLowerLimit.hashCode()) / (123 * (iUpperLimit == null ? 0 : iUpperLimit.hashCode()))
5580:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeComparator@toString():262:iLowerLimit == iUpperLimit |==> false
5581:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeComparator@toString():264:iLowerLimit == null |==> false
5582:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeComparator@toString():268:iLowerLimit == null |==> false
5583:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeComparator@toString():270:iUpperLimit == null |==> false
5584:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeUtils:50:map.put("UT", DateTimeZone.UTC) |==> <NO-OP>
5585:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeUtils:51:map.put("UTC", DateTimeZone.UTC) |==> <NO-OP>
5586:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeUtils:52:map.put("GMT", DateTimeZone.UTC) |==> <NO-OP>
5587:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeUtils:53:put(map, "EST", "America/New_York") |==> <NO-OP>
5588:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeUtils:54:put(map, "EDT", "America/New_York") |==> <NO-OP>
5589:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeUtils:55:put(map, "CST", "America/Chicago") |==> <NO-OP>
5590:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeUtils:56:put(map, "CDT", "America/Chicago") |==> <NO-OP>
5591:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeUtils:57:put(map, "MST", "America/Denver") |==> <NO-OP>
5592:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeUtils:58:put(map, "MDT", "America/Denver") |==> <NO-OP>
5593:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeUtils:59:put(map, "PST", "America/Los_Angeles") |==> <NO-OP>
5594:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeUtils:60:put(map, "PDT", "America/Los_Angeles") |==> <NO-OP>
5595:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeUtils:61:cZoneNames = Collections.unmodifiableMap(map) |==> <NO-OP>
5596:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeUtils@put(java.util.Map<java.lang.String,org.joda.time.DateTimeZone>,java.lang.String,java.lang.String):65:map.put(name, DateTimeZone.forID(id)) |==> <NO-OP>
5597:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeUtils@setCurrentMillisSystem():100:checkPermission() |==> <NO-OP>
5598:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeUtils@setCurrentMillisSystem():101:cMillisProvider = SYSTEM_MILLIS_PROVIDER |==> <NO-OP>
5599:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeUtils@setCurrentMillisFixed(long):114:checkPermission() |==> <NO-OP>
5600:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeUtils@setCurrentMillisFixed(long):115:cMillisProvider = new FixedMillisProvider(fixedMillis) |==> <NO-OP>
5601:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeUtils@setCurrentMillisOffset(long):129:checkPermission() |==> <NO-OP>
5602:LVR:0:POS:org.joda.time.DateTimeUtils@setCurrentMillisOffset(long):130:0 |==> 1
5603:LVR:0:NEG:org.joda.time.DateTimeUtils@setCurrentMillisOffset(long):130:0 |==> -1
5604:ROR:==(long,long):<=(long,long):org.joda.time.DateTimeUtils@setCurrentMillisOffset(long):130:offsetMillis == 0 |==> offsetMillis <= 0
5605:ROR:==(long,long):>=(long,long):org.joda.time.DateTimeUtils@setCurrentMillisOffset(long):130:offsetMillis == 0 |==> offsetMillis >= 0
5606:ROR:==(long,long):FALSE(long,long):org.joda.time.DateTimeUtils@setCurrentMillisOffset(long):130:offsetMillis == 0 |==> false
5607:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeUtils@setCurrentMillisOffset(long):131:cMillisProvider = SYSTEM_MILLIS_PROVIDER |==> <NO-OP>
5608:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeUtils@setCurrentMillisOffset(long):133:cMillisProvider = new OffsetMillisProvider(offsetMillis) |==> <NO-OP>
5609:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeUtils@setCurrentMillisProvider(org.joda.time.DateTimeUtils.MillisProvider):148:millisProvider == null |==> false
5610:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeUtils@setCurrentMillisProvider(org.joda.time.DateTimeUtils.MillisProvider):151:checkPermission() |==> <NO-OP>
5611:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeUtils@setCurrentMillisProvider(org.joda.time.DateTimeUtils.MillisProvider):152:cMillisProvider = millisProvider |==> <NO-OP>
5612:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeUtils@checkPermission():162:sm != null |==> true
5613:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeUtils@checkPermission():163:sm.checkPermission(new JodaTimePermission("CurrentTime.setProvider")) |==> <NO-OP>
5614:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeUtils@getInstantMillis(org.joda.time.ReadableInstant):178:instant == null |==> false
5615:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeUtils@getInstantChronology(org.joda.time.ReadableInstant):196:instant == null |==> false
5616:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeUtils@getInstantChronology(org.joda.time.ReadableInstant):200:chrono == null |==> false
5617:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeUtils@getIntervalChronology(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):220:start != null |==> true
5618:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeUtils@getIntervalChronology(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):221:chrono = start.getChronology() |==> <NO-OP>
5619:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeUtils@getIntervalChronology(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):222:end != null |==> true
5620:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeUtils@getIntervalChronology(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):223:chrono = end.getChronology() |==> <NO-OP>
5621:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeUtils@getIntervalChronology(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):225:chrono == null |==> false
5622:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeUtils@getIntervalChronology(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant):226:chrono = ISOChronology.getInstance() |==> <NO-OP>
5623:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeUtils@getIntervalChronology(org.joda.time.ReadableInterval):243:interval == null |==> false
5624:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeUtils@getIntervalChronology(org.joda.time.ReadableInterval):247:chrono == null |==> false
5625:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeUtils@getReadableInterval(org.joda.time.ReadableInterval):266:interval == null |==> false
5626:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeUtils@getReadableInterval(org.joda.time.ReadableInterval):268:interval = new Interval(now, now) |==> <NO-OP>
5627:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeUtils@getChronology(org.joda.time.Chronology):284:chrono == null |==> false
5628:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeUtils@getZone(org.joda.time.DateTimeZone):301:zone == null |==> false
5629:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeUtils@getPeriodType(org.joda.time.PeriodType):318:type == null |==> false
5630:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeUtils@getDurationMillis(org.joda.time.ReadableDuration):335:duration == null |==> false
5631:LVR:0:POS:org.joda.time.DateTimeUtils@getDurationMillis(org.joda.time.ReadableDuration):336:0L |==> 1L
5632:LVR:0:NEG:org.joda.time.DateTimeUtils@getDurationMillis(org.joda.time.ReadableDuration):336:0L |==> -1L
5633:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeUtils@isContiguous(org.joda.time.ReadablePartial):366:partial == null |==> false
5634:LVR:0:POS:org.joda.time.DateTimeUtils@isContiguous(org.joda.time.ReadablePartial):370:0 |==> 1
5635:LVR:0:NEG:org.joda.time.DateTimeUtils@isContiguous(org.joda.time.ReadablePartial):370:0 |==> -1
5636:ROR:<(int,int):!=(int,int):org.joda.time.DateTimeUtils@isContiguous(org.joda.time.ReadablePartial):370:i < partial.size() |==> i != partial.size()
5637:ROR:<(int,int):<=(int,int):org.joda.time.DateTimeUtils@isContiguous(org.joda.time.ReadablePartial):370:i < partial.size() |==> i <= partial.size()
5638:ROR:<(int,int):FALSE(int,int):org.joda.time.DateTimeUtils@isContiguous(org.joda.time.ReadablePartial):370:i < partial.size() |==> false
5639:LVR:0:POS:org.joda.time.DateTimeUtils@isContiguous(org.joda.time.ReadablePartial):372:0 |==> 1
5640:LVR:0:NEG:org.joda.time.DateTimeUtils@isContiguous(org.joda.time.ReadablePartial):372:0 |==> -1
5641:ROR:>(int,int):!=(int,int):org.joda.time.DateTimeUtils@isContiguous(org.joda.time.ReadablePartial):372:i > 0 |==> i != 0
5642:ROR:>(int,int):>=(int,int):org.joda.time.DateTimeUtils@isContiguous(org.joda.time.ReadablePartial):372:i > 0 |==> i >= 0
5643:ROR:>(int,int):FALSE(int,int):org.joda.time.DateTimeUtils@isContiguous(org.joda.time.ReadablePartial):372:i > 0 |==> false
5644:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeUtils@isContiguous(org.joda.time.ReadablePartial):373:loopField.getRangeDurationField() == null |==> false
5645:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeUtils@isContiguous(org.joda.time.ReadablePartial):373:loopField.getRangeDurationField().getType() != lastType |==> true
5646:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeUtils@isContiguous(org.joda.time.ReadablePartial):373:loopField.getRangeDurationField() == null || loopField.getRangeDurationField().getType() != lastType |==> loopField.getRangeDurationField() == null != (loopField.getRangeDurationField().getType() != lastType)
5647:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeUtils@isContiguous(org.joda.time.ReadablePartial):373:loopField.getRangeDurationField() == null || loopField.getRangeDurationField().getType() != lastType |==> loopField.getRangeDurationField() == null
5648:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeUtils@isContiguous(org.joda.time.ReadablePartial):373:loopField.getRangeDurationField() == null || loopField.getRangeDurationField().getType() != lastType |==> loopField.getRangeDurationField().getType() != lastType
5649:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeUtils@isContiguous(org.joda.time.ReadablePartial):373:loopField.getRangeDurationField() == null || loopField.getRangeDurationField().getType() != lastType |==> true
5650:LVR:FALSE:TRUE:org.joda.time.DateTimeUtils@isContiguous(org.joda.time.ReadablePartial):374:false |==> true
5651:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeUtils@isContiguous(org.joda.time.ReadablePartial):377:lastType = loopField.getDurationField().getType() |==> <NO-OP>
5652:LVR:TRUE:FALSE:org.joda.time.DateTimeUtils@isContiguous(org.joda.time.ReadablePartial):379:true |==> false
5653:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeUtils@setDefaultTimeZoneNames(java.util.Map<java.lang.String,org.joda.time.DateTimeZone>):441:cZoneNames = Collections.unmodifiableMap(new HashMap<String, DateTimeZone>(names)) |==> <NO-OP>
5654:LVR:POS:0:org.joda.time.DateTimeUtils@toJulianDay(long):468:8.64E7 |==> 0.0
5655:LVR:POS:NEG:org.joda.time.DateTimeUtils@toJulianDay(long):468:8.64E7 |==> -8.64E7
5656:AOR:/(double,double):%(double,double):org.joda.time.DateTimeUtils@toJulianDay(long):468:epochMillis / 8.64E7 |==> epochMillis % 8.64E7
5657:AOR:/(double,double):*(double,double):org.joda.time.DateTimeUtils@toJulianDay(long):468:epochMillis / 8.64E7 |==> epochMillis * 8.64E7
5658:AOR:/(double,double):+(double,double):org.joda.time.DateTimeUtils@toJulianDay(long):468:epochMillis / 8.64E7 |==> epochMillis + 8.64E7
5659:AOR:/(double,double):-(double,double):org.joda.time.DateTimeUtils@toJulianDay(long):468:epochMillis / 8.64E7 |==> epochMillis - 8.64E7
5660:LVR:POS:0:org.joda.time.DateTimeUtils@toJulianDay(long):469:2440587.5 |==> 0.0
5661:LVR:POS:NEG:org.joda.time.DateTimeUtils@toJulianDay(long):469:2440587.5 |==> -2440587.5
5662:AOR:+(double,double):%(double,double):org.joda.time.DateTimeUtils@toJulianDay(long):469:epochDay + 2440587.5 |==> epochDay % 2440587.5
5663:AOR:+(double,double):*(double,double):org.joda.time.DateTimeUtils@toJulianDay(long):469:epochDay + 2440587.5 |==> epochDay * 2440587.5
5664:AOR:+(double,double):-(double,double):org.joda.time.DateTimeUtils@toJulianDay(long):469:epochDay + 2440587.5 |==> epochDay - 2440587.5
5665:AOR:+(double,double):/(double,double):org.joda.time.DateTimeUtils@toJulianDay(long):469:epochDay + 2440587.5 |==> epochDay / 2440587.5
5666:LVR:POS:0:org.joda.time.DateTimeUtils@toJulianDayNumber(long):488:0.5 |==> 0.0
5667:LVR:POS:NEG:org.joda.time.DateTimeUtils@toJulianDayNumber(long):488:0.5 |==> -0.5
5668:AOR:+(double,double):%(double,double):org.joda.time.DateTimeUtils@toJulianDayNumber(long):488:toJulianDay(epochMillis) + 0.5 |==> toJulianDay(epochMillis) % 0.5
5669:AOR:+(double,double):*(double,double):org.joda.time.DateTimeUtils@toJulianDayNumber(long):488:toJulianDay(epochMillis) + 0.5 |==> toJulianDay(epochMillis) * 0.5
5670:AOR:+(double,double):-(double,double):org.joda.time.DateTimeUtils@toJulianDayNumber(long):488:toJulianDay(epochMillis) + 0.5 |==> toJulianDay(epochMillis) - 0.5
5671:AOR:+(double,double):/(double,double):org.joda.time.DateTimeUtils@toJulianDayNumber(long):488:toJulianDay(epochMillis) + 0.5 |==> toJulianDay(epochMillis) / 0.5
5672:LVR:POS:0:org.joda.time.DateTimeUtils@fromJulianDay(double):501:2440587.5 |==> 0.0
5673:LVR:POS:NEG:org.joda.time.DateTimeUtils@fromJulianDay(double):501:2440587.5 |==> -2440587.5
5674:AOR:-(double,double):%(double,double):org.joda.time.DateTimeUtils@fromJulianDay(double):501:julianDay - 2440587.5 |==> julianDay % 2440587.5
5675:AOR:-(double,double):*(double,double):org.joda.time.DateTimeUtils@fromJulianDay(double):501:julianDay - 2440587.5 |==> julianDay * 2440587.5
5676:AOR:-(double,double):+(double,double):org.joda.time.DateTimeUtils@fromJulianDay(double):501:julianDay - 2440587.5 |==> julianDay + 2440587.5
5677:AOR:-(double,double):/(double,double):org.joda.time.DateTimeUtils@fromJulianDay(double):501:julianDay - 2440587.5 |==> julianDay / 2440587.5
5678:LVR:POS:0:org.joda.time.DateTimeUtils@fromJulianDay(double):502:8.64E7 |==> 0.0
5679:LVR:POS:NEG:org.joda.time.DateTimeUtils@fromJulianDay(double):502:8.64E7 |==> -8.64E7
5680:AOR:*(double,double):%(double,double):org.joda.time.DateTimeUtils@fromJulianDay(double):502:epochDay * 8.64E7 |==> epochDay % 8.64E7
5681:AOR:*(double,double):+(double,double):org.joda.time.DateTimeUtils@fromJulianDay(double):502:epochDay * 8.64E7 |==> epochDay + 8.64E7
5682:AOR:*(double,double):-(double,double):org.joda.time.DateTimeUtils@fromJulianDay(double):502:epochDay * 8.64E7 |==> epochDay - 8.64E7
5683:AOR:*(double,double):/(double,double):org.joda.time.DateTimeUtils@fromJulianDay(double):502:epochDay * 8.64E7 |==> epochDay / 8.64E7
5684:AOR:+(long,long):%(long,long):org.joda.time.DateTimeUtils$OffsetMillisProvider@getMillis():580:System.currentTimeMillis() + iMillis |==> System.currentTimeMillis() % iMillis
5685:AOR:+(long,long):*(long,long):org.joda.time.DateTimeUtils$OffsetMillisProvider@getMillis():580:System.currentTimeMillis() + iMillis |==> System.currentTimeMillis() * iMillis
5686:AOR:+(long,long):-(long,long):org.joda.time.DateTimeUtils$OffsetMillisProvider@getMillis():580:System.currentTimeMillis() + iMillis |==> System.currentTimeMillis() - iMillis
5687:AOR:+(long,long):/(long,long):org.joda.time.DateTimeUtils$OffsetMillisProvider@getMillis():580:System.currentTimeMillis() + iMillis |==> System.currentTimeMillis() / iMillis
5688:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.IllegalFieldValueException@createMessage(java.lang.String,java.lang.Number,java.lang.Number,java.lang.Number,java.lang.String):44:lowerBound == null |==> false
5689:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.IllegalFieldValueException@createMessage(java.lang.String,java.lang.Number,java.lang.Number,java.lang.Number,java.lang.String):45:upperBound == null |==> false
5690:STD:<CALL>:<NO-OP>:org.joda.time.IllegalFieldValueException@createMessage(java.lang.String,java.lang.Number,java.lang.Number,java.lang.Number,java.lang.String):46:buf.append("is not supported") |==> <NO-OP>
5691:STD:<CALL>:<NO-OP>:org.joda.time.IllegalFieldValueException@createMessage(java.lang.String,java.lang.Number,java.lang.Number,java.lang.Number,java.lang.String):48:buf.append("must not be larger than ").append(upperBound) |==> <NO-OP>
5692:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.IllegalFieldValueException@createMessage(java.lang.String,java.lang.Number,java.lang.Number,java.lang.Number,java.lang.String):50:upperBound == null |==> false
5693:STD:<CALL>:<NO-OP>:org.joda.time.IllegalFieldValueException@createMessage(java.lang.String,java.lang.Number,java.lang.Number,java.lang.Number,java.lang.String):51:buf.append("must not be smaller than ").append(lowerBound) |==> <NO-OP>
5694:STD:<CALL>:<NO-OP>:org.joda.time.IllegalFieldValueException@createMessage(java.lang.String,java.lang.Number,java.lang.Number,java.lang.Number,java.lang.String):53:buf.append("must be in the range [").append(lowerBound).append(',').append(upperBound).append(']') |==> <NO-OP>
5695:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.IllegalFieldValueException@createMessage(java.lang.String,java.lang.Number,java.lang.Number,java.lang.Number,java.lang.String):59:explain != null |==> true
5696:STD:<CALL>:<NO-OP>:org.joda.time.IllegalFieldValueException@createMessage(java.lang.String,java.lang.Number,java.lang.Number,java.lang.Number,java.lang.String):60:buf.append(": ").append(explain) |==> <NO-OP>
5697:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.IllegalFieldValueException@createMessage(java.lang.String,java.lang.String):76:value == null |==> false
5698:STD:<CALL>:<NO-OP>:org.joda.time.IllegalFieldValueException@createMessage(java.lang.String,java.lang.String):77:buf.append("null") |==> <NO-OP>
5699:STD:<CALL>:<NO-OP>:org.joda.time.IllegalFieldValueException@createMessage(java.lang.String,java.lang.String):79:buf.append('\"') |==> <NO-OP>
5700:STD:<CALL>:<NO-OP>:org.joda.time.IllegalFieldValueException@createMessage(java.lang.String,java.lang.String):80:buf.append(value) |==> <NO-OP>
5701:STD:<CALL>:<NO-OP>:org.joda.time.IllegalFieldValueException@createMessage(java.lang.String,java.lang.String):81:buf.append('\"') |==> <NO-OP>
5702:STD:<CALL>:<NO-OP>:org.joda.time.IllegalFieldValueException@createMessage(java.lang.String,java.lang.String):84:buf.append(" for ").append(fieldName).append(' ').append("is not supported") |==> <NO-OP>
5703:STD:<ASSIGN>:<NO-OP>:org.joda.time.IllegalFieldValueException@<init>(org.joda.time.DateTimeFieldType,java.lang.Number,java.lang.Number,java.lang.Number):116:iMessage = super.getMessage() |==> <NO-OP>
5704:STD:<ASSIGN>:<NO-OP>:org.joda.time.IllegalFieldValueException@<init>(org.joda.time.DateTimeFieldType,java.lang.Number,java.lang.String):137:iMessage = super.getMessage() |==> <NO-OP>
5705:STD:<ASSIGN>:<NO-OP>:org.joda.time.IllegalFieldValueException@<init>(org.joda.time.DurationFieldType,java.lang.Number,java.lang.Number,java.lang.Number):158:iMessage = super.getMessage() |==> <NO-OP>
5706:STD:<ASSIGN>:<NO-OP>:org.joda.time.IllegalFieldValueException@<init>(java.lang.String,java.lang.Number,java.lang.Number,java.lang.Number):179:iMessage = super.getMessage() |==> <NO-OP>
5707:STD:<ASSIGN>:<NO-OP>:org.joda.time.IllegalFieldValueException@<init>(org.joda.time.DateTimeFieldType,java.lang.String):197:iMessage = super.getMessage() |==> <NO-OP>
5708:STD:<ASSIGN>:<NO-OP>:org.joda.time.IllegalFieldValueException@<init>(org.joda.time.DurationFieldType,java.lang.String):215:iMessage = super.getMessage() |==> <NO-OP>
5709:STD:<ASSIGN>:<NO-OP>:org.joda.time.IllegalFieldValueException@<init>(java.lang.String,java.lang.String):233:iMessage = super.getMessage() |==> <NO-OP>
5710:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.IllegalFieldValueException@getIllegalValueAsString():289:value == null |==> false
5711:STD:<ASSIGN>:<NO-OP>:org.joda.time.IllegalFieldValueException@getIllegalValueAsString():290:value = String.valueOf(iNumberValue) |==> <NO-OP>
5712:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.IllegalFieldValueException@prependMessage(java.lang.String):323:iMessage == null |==> false
5713:STD:<ASSIGN>:<NO-OP>:org.joda.time.IllegalFieldValueException@prependMessage(java.lang.String):324:iMessage = message |==> <NO-OP>
5714:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.IllegalFieldValueException@prependMessage(java.lang.String):325:message != null |==> true
5715:STD:<ASSIGN>:<NO-OP>:org.joda.time.IllegalFieldValueException@prependMessage(java.lang.String):326:iMessage = message + ": " + iMessage |==> <NO-OP>
5716:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.IllegalInstantException@createMessage(long,java.lang.String):68:zoneId != null |==> true
5717:LVR:TRUE:FALSE:org.joda.time.IllegalInstantException@isIllegalInstant(java.lang.Throwable):81:true |==> false
5718:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.IllegalInstantException@isIllegalInstant(java.lang.Throwable):83:ex.getCause() != null |==> true
5719:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.IllegalInstantException@isIllegalInstant(java.lang.Throwable):83:ex.getCause() != ex |==> true
5720:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.IllegalInstantException@isIllegalInstant(java.lang.Throwable):83:ex.getCause() != null && ex.getCause() != ex |==> ex.getCause() != null == (ex.getCause() != ex)
5721:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.IllegalInstantException@isIllegalInstant(java.lang.Throwable):83:ex.getCause() != null && ex.getCause() != ex |==> false
5722:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.IllegalInstantException@isIllegalInstant(java.lang.Throwable):83:ex.getCause() != null && ex.getCause() != ex |==> ex.getCause() != null
5723:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.IllegalInstantException@isIllegalInstant(java.lang.Throwable):83:ex.getCause() != null && ex.getCause() != ex |==> ex.getCause() != ex
5724:LVR:FALSE:TRUE:org.joda.time.IllegalInstantException@isIllegalInstant(java.lang.Throwable):86:false |==> true
5725:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.MonthDay@now(org.joda.time.DateTimeZone):116:zone == null |==> false
5726:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.MonthDay@now(org.joda.time.Chronology):132:chronology == null |==> false
5727:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.MonthDay@fromCalendarFields(java.util.Calendar):182:calendar == null |==> false
5728:LVR:POS:0:org.joda.time.MonthDay@fromCalendarFields(java.util.Calendar):185:1 |==> 0
5729:LVR:POS:NEG:org.joda.time.MonthDay@fromCalendarFields(java.util.Calendar):185:1 |==> -1
5730:AOR:+(int,int):%(int,int):org.joda.time.MonthDay@fromCalendarFields(java.util.Calendar):185:calendar.get(Calendar.MONTH) + 1 |==> calendar.get(Calendar.MONTH) % 1
5731:AOR:+(int,int):*(int,int):org.joda.time.MonthDay@fromCalendarFields(java.util.Calendar):185:calendar.get(Calendar.MONTH) + 1 |==> calendar.get(Calendar.MONTH) * 1
5732:AOR:+(int,int):-(int,int):org.joda.time.MonthDay@fromCalendarFields(java.util.Calendar):185:calendar.get(Calendar.MONTH) + 1 |==> calendar.get(Calendar.MONTH) - 1
5733:AOR:+(int,int):/(int,int):org.joda.time.MonthDay@fromCalendarFields(java.util.Calendar):185:calendar.get(Calendar.MONTH) + 1 |==> calendar.get(Calendar.MONTH) / 1
5734:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.MonthDay@fromDateFields(java.util.Date):203:date == null |==> false
5735:LVR:POS:0:org.joda.time.MonthDay@fromDateFields(java.util.Date):206:1 |==> 0
5736:LVR:POS:NEG:org.joda.time.MonthDay@fromDateFields(java.util.Date):206:1 |==> -1
5737:AOR:+(int,int):%(int,int):org.joda.time.MonthDay@fromDateFields(java.util.Date):206:date.getMonth() + 1 |==> date.getMonth() % 1
5738:AOR:+(int,int):*(int,int):org.joda.time.MonthDay@fromDateFields(java.util.Date):206:date.getMonth() + 1 |==> date.getMonth() * 1
5739:AOR:+(int,int):-(int,int):org.joda.time.MonthDay@fromDateFields(java.util.Date):206:date.getMonth() + 1 |==> date.getMonth() - 1
5740:AOR:+(int,int):/(int,int):org.joda.time.MonthDay@fromDateFields(java.util.Date):206:date.getMonth() + 1 |==> date.getMonth() / 1
5741:LVR:FALSE:TRUE:org.joda.time.MonthDay@readResolve():380:false |==> true
5742:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.MonthDay@readResolve():380:DateTimeZone.UTC.equals(getChronology().getZone()) == false |==> false
5743:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.MonthDay@readResolve():380:DateTimeZone.UTC.equals(getChronology().getZone()) == false |==> DateTimeZone.UTC.equals(getChronology().getZone())
5744:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.MonthDay@readResolve():380:DateTimeZone.UTC.equals(getChronology().getZone()) == false |==> false
5745:LVR:POS:0:org.joda.time.MonthDay@size():395:2 |==> 0
5746:LVR:POS:NEG:org.joda.time.MonthDay@size():395:2 |==> -2
5747:STD:<ASSIGN>:<NO-OP>:org.joda.time.MonthDay@withChronologyRetainFields(org.joda.time.Chronology):456:newChronology = DateTimeUtils.getChronology(newChronology) |==> <NO-OP>
5748:STD:<ASSIGN>:<NO-OP>:org.joda.time.MonthDay@withChronologyRetainFields(org.joda.time.Chronology):457:newChronology = newChronology.withUTC() |==> <NO-OP>
5749:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.MonthDay@withChronologyRetainFields(org.joda.time.Chronology):458:newChronology == getChronology() |==> false
5750:STD:<CALL>:<NO-OP>:org.joda.time.MonthDay@withChronologyRetainFields(org.joda.time.Chronology):462:newChronology.validate(newMonthDay, getValues()) |==> <NO-OP>
5751:ROR:==(int,int):<=(int,int):org.joda.time.MonthDay@withField(org.joda.time.DateTimeFieldType,int):487:value == getValue(index) |==> value <= getValue(index)
5752:ROR:==(int,int):>=(int,int):org.joda.time.MonthDay@withField(org.joda.time.DateTimeFieldType,int):487:value == getValue(index) |==> value >= getValue(index)
5753:ROR:==(int,int):FALSE(int,int):org.joda.time.MonthDay@withField(org.joda.time.DateTimeFieldType,int):487:value == getValue(index) |==> false
5754:STD:<ASSIGN>:<NO-OP>:org.joda.time.MonthDay@withField(org.joda.time.DateTimeFieldType,int):491:newValues = getField(index).set(this, index, newValues, value) |==> <NO-OP>
5755:LVR:0:POS:org.joda.time.MonthDay@withFieldAdded(org.joda.time.DurationFieldType,int):515:0 |==> 1
5756:LVR:0:NEG:org.joda.time.MonthDay@withFieldAdded(org.joda.time.DurationFieldType,int):515:0 |==> -1
5757:ROR:==(int,int):<=(int,int):org.joda.time.MonthDay@withFieldAdded(org.joda.time.DurationFieldType,int):515:amount == 0 |==> amount <= 0
5758:ROR:==(int,int):>=(int,int):org.joda.time.MonthDay@withFieldAdded(org.joda.time.DurationFieldType,int):515:amount == 0 |==> amount >= 0
5759:ROR:==(int,int):FALSE(int,int):org.joda.time.MonthDay@withFieldAdded(org.joda.time.DurationFieldType,int):515:amount == 0 |==> false
5760:STD:<ASSIGN>:<NO-OP>:org.joda.time.MonthDay@withFieldAdded(org.joda.time.DurationFieldType,int):519:newValues = getField(index).add(this, index, newValues, amount) |==> <NO-OP>
5761:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.MonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):540:period == null |==> false
5762:LVR:0:POS:org.joda.time.MonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):540:0 |==> 1
5763:LVR:0:NEG:org.joda.time.MonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):540:0 |==> -1
5764:ROR:==(int,int):<=(int,int):org.joda.time.MonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):540:scalar == 0 |==> scalar <= 0
5765:ROR:==(int,int):>=(int,int):org.joda.time.MonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):540:scalar == 0 |==> scalar >= 0
5766:ROR:==(int,int):FALSE(int,int):org.joda.time.MonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):540:scalar == 0 |==> false
5767:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.MonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):540:period == null || scalar == 0 |==> period == null != (scalar == 0)
5768:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.MonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):540:period == null || scalar == 0 |==> period == null
5769:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.MonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):540:period == null || scalar == 0 |==> scalar == 0
5770:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.MonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):540:period == null || scalar == 0 |==> true
5771:LVR:0:POS:org.joda.time.MonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):544:0 |==> 1
5772:LVR:0:NEG:org.joda.time.MonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):544:0 |==> -1
5773:ROR:<(int,int):!=(int,int):org.joda.time.MonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):544:i < period.size() |==> i != period.size()
5774:ROR:<(int,int):<=(int,int):org.joda.time.MonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):544:i < period.size() |==> i <= period.size()
5775:ROR:<(int,int):FALSE(int,int):org.joda.time.MonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):544:i < period.size() |==> false
5776:LVR:0:POS:org.joda.time.MonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):547:0 |==> 1
5777:LVR:0:NEG:org.joda.time.MonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):547:0 |==> -1
5778:ROR:>=(int,int):==(int,int):org.joda.time.MonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):547:index >= 0 |==> index == 0
5779:ROR:>=(int,int):>(int,int):org.joda.time.MonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):547:index >= 0 |==> index > 0
5780:ROR:>=(int,int):TRUE(int,int):org.joda.time.MonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):547:index >= 0 |==> true
5781:STD:<ASSIGN>:<NO-OP>:org.joda.time.MonthDay@withPeriodAdded(org.joda.time.ReadablePeriod,int):548:newValues = getField(index).add(this, index, newValues, FieldUtils.safeMultiply(period.getValue(i), scalar)) |==> <NO-OP>
5782:LVR:POS:0:org.joda.time.MonthDay@plus(org.joda.time.ReadablePeriod):570:1 |==> 0
5783:LVR:POS:NEG:org.joda.time.MonthDay@plus(org.joda.time.ReadablePeriod):570:1 |==> -1
5784:LVR:NEG:0:org.joda.time.MonthDay@minus(org.joda.time.ReadablePeriod):630:-1 |==> 0
5785:LVR:NEG:POS:org.joda.time.MonthDay@minus(org.joda.time.ReadablePeriod):630:-1 |==> 1
5786:STD:<ASSIGN>:<NO-OP>:org.joda.time.MonthDay@withMonthOfYear(int):719:newValues = getChronology().monthOfYear().set(this, MONTH_OF_YEAR, newValues, monthOfYear) |==> <NO-OP>
5787:STD:<ASSIGN>:<NO-OP>:org.joda.time.MonthDay@withDayOfMonth(int):736:newValues = getChronology().dayOfMonth().set(this, DAY_OF_MONTH, newValues, dayOfMonth) |==> <NO-OP>
5788:STD:<CALL>:<NO-OP>:org.joda.time.MonthDay@toString():781:fields.add(DateTimeFieldType.monthOfYear()) |==> <NO-OP>
5789:STD:<CALL>:<NO-OP>:org.joda.time.MonthDay@toString():782:fields.add(DateTimeFieldType.dayOfMonth()) |==> <NO-OP>
5790:LVR:TRUE:FALSE:org.joda.time.MonthDay@toString():783:true |==> false
5791:LVR:TRUE:FALSE:org.joda.time.MonthDay@toString():783:true |==> false
5792:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.MonthDay@toString(java.lang.String):793:pattern == null |==> false
5793:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.MonthDay@toString(java.lang.String,java.util.Locale):807:pattern == null |==> false
5794:STD:<ASSIGN>:<NO-OP>:org.joda.time.MonthDay$Property@addToCopy(int):897:newValues = getField().add(iBase, iFieldIndex, newValues, valueToAdd) |==> <NO-OP>
5795:STD:<ASSIGN>:<NO-OP>:org.joda.time.MonthDay$Property@addWrapFieldToCopy(int):921:newValues = getField().addWrapField(iBase, iFieldIndex, newValues, valueToAdd) |==> <NO-OP>
5796:STD:<ASSIGN>:<NO-OP>:org.joda.time.MonthDay$Property@setCopy(int):938:newValues = getField().set(iBase, iFieldIndex, newValues, value) |==> <NO-OP>
5797:STD:<ASSIGN>:<NO-OP>:org.joda.time.MonthDay$Property@setCopy(java.lang.String,java.util.Locale):955:newValues = getField().set(iBase, iFieldIndex, newValues, text, locale) |==> <NO-OP>
5798:LVR:0:POS:org.joda.time.Months:45:0 |==> 1
5799:LVR:0:NEG:org.joda.time.Months:45:0 |==> -1
5800:LVR:POS:0:org.joda.time.Months:47:1 |==> 0
5801:LVR:POS:NEG:org.joda.time.Months:47:1 |==> -1
5802:LVR:POS:0:org.joda.time.Months:49:2 |==> 0
5803:LVR:POS:NEG:org.joda.time.Months:49:2 |==> -2
5804:LVR:POS:0:org.joda.time.Months:51:3 |==> 0
5805:LVR:POS:NEG:org.joda.time.Months:51:3 |==> -3
5806:LVR:POS:0:org.joda.time.Months:53:4 |==> 0
5807:LVR:POS:NEG:org.joda.time.Months:53:4 |==> -4
5808:LVR:POS:0:org.joda.time.Months:55:5 |==> 0
5809:LVR:POS:NEG:org.joda.time.Months:55:5 |==> -5
5810:LVR:POS:0:org.joda.time.Months:57:6 |==> 0
5811:LVR:POS:NEG:org.joda.time.Months:57:6 |==> -6
5812:LVR:POS:0:org.joda.time.Months:59:7 |==> 0
5813:LVR:POS:NEG:org.joda.time.Months:59:7 |==> -7
5814:LVR:POS:0:org.joda.time.Months:61:8 |==> 0
5815:LVR:POS:NEG:org.joda.time.Months:61:8 |==> -8
5816:LVR:POS:0:org.joda.time.Months:63:9 |==> 0
5817:LVR:POS:NEG:org.joda.time.Months:63:9 |==> -9
5818:LVR:POS:0:org.joda.time.Months:65:10 |==> 0
5819:LVR:POS:NEG:org.joda.time.Months:65:10 |==> -10
5820:LVR:POS:0:org.joda.time.Months:67:11 |==> 0
5821:LVR:POS:NEG:org.joda.time.Months:67:11 |==> -11
5822:LVR:POS:0:org.joda.time.Months:69:12 |==> 0
5823:LVR:POS:NEG:org.joda.time.Months:69:12 |==> -12
5824:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.Months@monthsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):155:start instanceof LocalDate && end instanceof LocalDate |==> start instanceof LocalDate == end instanceof LocalDate
5825:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.Months@monthsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):155:start instanceof LocalDate && end instanceof LocalDate |==> false
5826:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.Months@monthsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):155:start instanceof LocalDate && end instanceof LocalDate |==> start instanceof LocalDate
5827:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.Months@monthsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):155:start instanceof LocalDate && end instanceof LocalDate |==> end instanceof LocalDate
5828:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Months@monthsIn(org.joda.time.ReadableInterval):175:interval == null |==> false
5829:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Months@parseMonths(java.lang.String):195:periodStr == null |==> false
5830:LVR:0:POS:org.joda.time.Months@plus(int):263:0 |==> 1
5831:LVR:0:NEG:org.joda.time.Months@plus(int):263:0 |==> -1
5832:ROR:==(int,int):<=(int,int):org.joda.time.Months@plus(int):263:months == 0 |==> months <= 0
5833:ROR:==(int,int):>=(int,int):org.joda.time.Months@plus(int):263:months == 0 |==> months >= 0
5834:ROR:==(int,int):FALSE(int,int):org.joda.time.Months@plus(int):263:months == 0 |==> false
5835:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Months@plus(org.joda.time.Months):279:months == null |==> false
5836:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Months@minus(org.joda.time.Months):309:months == null |==> false
5837:LVR:POS:0:org.joda.time.Months@dividedBy(int):340:1 |==> 0
5838:LVR:POS:NEG:org.joda.time.Months@dividedBy(int):340:1 |==> -1
5839:ROR:==(int,int):<=(int,int):org.joda.time.Months@dividedBy(int):340:divisor == 1 |==> divisor <= 1
5840:ROR:==(int,int):>=(int,int):org.joda.time.Months@dividedBy(int):340:divisor == 1 |==> divisor >= 1
5841:ROR:==(int,int):FALSE(int,int):org.joda.time.Months@dividedBy(int):340:divisor == 1 |==> false
5842:AOR:/(int,int):%(int,int):org.joda.time.Months@dividedBy(int):343:getValue() / divisor |==> getValue() % divisor
5843:AOR:/(int,int):*(int,int):org.joda.time.Months@dividedBy(int):343:getValue() / divisor |==> getValue() * divisor
5844:AOR:/(int,int):+(int,int):org.joda.time.Months@dividedBy(int):343:getValue() / divisor |==> getValue() + divisor
5845:AOR:/(int,int):-(int,int):org.joda.time.Months@dividedBy(int):343:getValue() / divisor |==> getValue() - divisor
5846:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Months@isGreaterThan(org.joda.time.Months):365:other == null |==> false
5847:LVR:0:POS:org.joda.time.Months@isGreaterThan(org.joda.time.Months):366:0 |==> 1
5848:LVR:0:NEG:org.joda.time.Months@isGreaterThan(org.joda.time.Months):366:0 |==> -1
5849:ROR:>(int,int):!=(int,int):org.joda.time.Months@isGreaterThan(org.joda.time.Months):366:getValue() > 0 |==> getValue() != 0
5850:ROR:>(int,int):>=(int,int):org.joda.time.Months@isGreaterThan(org.joda.time.Months):366:getValue() > 0 |==> getValue() >= 0
5851:ROR:>(int,int):FALSE(int,int):org.joda.time.Months@isGreaterThan(org.joda.time.Months):366:getValue() > 0 |==> false
5852:ROR:>(int,int):!=(int,int):org.joda.time.Months@isGreaterThan(org.joda.time.Months):368:getValue() > other.getValue() |==> getValue() != other.getValue()
5853:ROR:>(int,int):>=(int,int):org.joda.time.Months@isGreaterThan(org.joda.time.Months):368:getValue() > other.getValue() |==> getValue() >= other.getValue()
5854:ROR:>(int,int):FALSE(int,int):org.joda.time.Months@isGreaterThan(org.joda.time.Months):368:getValue() > other.getValue() |==> false
5855:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Months@isLessThan(org.joda.time.Months):378:other == null |==> false
5856:LVR:0:POS:org.joda.time.Months@isLessThan(org.joda.time.Months):379:0 |==> 1
5857:LVR:0:NEG:org.joda.time.Months@isLessThan(org.joda.time.Months):379:0 |==> -1
5858:ROR:<(int,int):!=(int,int):org.joda.time.Months@isLessThan(org.joda.time.Months):379:getValue() < 0 |==> getValue() != 0
5859:ROR:<(int,int):<=(int,int):org.joda.time.Months@isLessThan(org.joda.time.Months):379:getValue() < 0 |==> getValue() <= 0
5860:ROR:<(int,int):FALSE(int,int):org.joda.time.Months@isLessThan(org.joda.time.Months):379:getValue() < 0 |==> false
5861:ROR:<(int,int):!=(int,int):org.joda.time.Months@isLessThan(org.joda.time.Months):381:getValue() < other.getValue() |==> getValue() != other.getValue()
5862:ROR:<(int,int):<=(int,int):org.joda.time.Months@isLessThan(org.joda.time.Months):381:getValue() < other.getValue() |==> getValue() <= other.getValue()
5863:ROR:<(int,int):FALSE(int,int):org.joda.time.Months@isLessThan(org.joda.time.Months):381:getValue() < other.getValue() |==> false
5864:LVR:0:POS:org.joda.time.Partial@<init>(org.joda.time.Chronology):125:0 |==> 1
5865:LVR:0:NEG:org.joda.time.Partial@<init>(org.joda.time.Chronology):125:0 |==> -1
5866:LVR:0:POS:org.joda.time.Partial@<init>(org.joda.time.Chronology):126:0 |==> 1
5867:LVR:0:NEG:org.joda.time.Partial@<init>(org.joda.time.Chronology):126:0 |==> -1
5868:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType,int,org.joda.time.Chronology):154:chronology = DateTimeUtils.getChronology(chronology).withUTC() |==> <NO-OP>
5869:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType,int,org.joda.time.Chronology):156:type == null |==> false
5870:STD:<CALL>:<NO-OP>:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType,int,org.joda.time.Chronology):161:chronology.validate(this, iValues) |==> <NO-OP>
5871:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):191:chronology = DateTimeUtils.getChronology(chronology).withUTC() |==> <NO-OP>
5872:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):193:types == null |==> false
5873:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):196:values == null |==> false
5874:ROR:!=(int,int):<(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):199:values.length != types.length |==> values.length < types.length
5875:ROR:!=(int,int):>(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):199:values.length != types.length |==> values.length > types.length
5876:ROR:!=(int,int):TRUE(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):199:values.length != types.length |==> true
5877:LVR:0:POS:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):202:0 |==> 1
5878:LVR:0:NEG:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):202:0 |==> -1
5879:ROR:==(int,int):<=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):202:types.length == 0 |==> types.length <= 0
5880:ROR:==(int,int):>=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):202:types.length == 0 |==> types.length >= 0
5881:ROR:==(int,int):FALSE(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):202:types.length == 0 |==> false
5882:LVR:0:POS:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):207:0 |==> 1
5883:LVR:0:NEG:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):207:0 |==> -1
5884:ROR:<(int,int):!=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):207:i < types.length |==> i != types.length
5885:ROR:<(int,int):<=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):207:i < types.length |==> i <= types.length
5886:ROR:<(int,int):FALSE(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):207:i < types.length |==> false
5887:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):208:types[i] == null |==> false
5888:LVR:0:POS:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):213:0 |==> 1
5889:LVR:0:NEG:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):213:0 |==> -1
5890:ROR:<(int,int):!=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):213:i < types.length |==> i != types.length
5891:ROR:<(int,int):<=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):213:i < types.length |==> i <= types.length
5892:ROR:<(int,int):FALSE(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):213:i < types.length |==> false
5893:LVR:0:POS:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):216:0 |==> 1
5894:LVR:0:NEG:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):216:0 |==> -1
5895:ROR:>(int,int):!=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):216:i > 0 |==> i != 0
5896:ROR:>(int,int):>=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):216:i > 0 |==> i >= 0
5897:ROR:>(int,int):FALSE(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):216:i > 0 |==> false
5898:LVR:FALSE:TRUE:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):217:false |==> true
5899:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):217:loopUnitField.isSupported() == false |==> false
5900:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):217:loopUnitField.isSupported() == false |==> loopUnitField.isSupported()
5901:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):217:loopUnitField.isSupported() == false |==> false
5902:COR:lastUnitField.isSupported():TRUE:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:lastUnitField.isSupported() |==> false
5903:COR:lastUnitField.isSupported():FALSE:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:lastUnitField.isSupported() |==> true
5904:LVR:POS:0:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):220:1 |==> 0
5905:LVR:POS:NEG:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):220:1 |==> -1
5906:AOR:-(int,int):%(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):220:i - 1 |==> i % 1
5907:AOR:-(int,int):*(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):220:i - 1 |==> i * 1
5908:AOR:-(int,int):+(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):220:i - 1 |==> i + 1
5909:AOR:-(int,int):/(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):220:i - 1 |==> i / 1
5910:LVR:POS:0:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):223:1 |==> 0
5911:LVR:POS:NEG:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):223:1 |==> -1
5912:AOR:-(int,int):%(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):223:i - 1 |==> i % 1
5913:AOR:-(int,int):*(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):223:i - 1 |==> i * 1
5914:AOR:-(int,int):+(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):223:i - 1 |==> i + 1
5915:AOR:-(int,int):/(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):223:i - 1 |==> i / 1
5916:LVR:0:POS:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):227:0 |==> 1
5917:LVR:0:NEG:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):227:0 |==> -1
5918:ROR:<(int,int):!=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):227:compare < 0 |==> compare != 0
5919:ROR:<(int,int):<=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):227:compare < 0 |==> compare <= 0
5920:ROR:<(int,int):FALSE(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):227:compare < 0 |==> false
5921:LVR:POS:0:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):229:1 |==> 0
5922:LVR:POS:NEG:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):229:1 |==> -1
5923:AOR:-(int,int):%(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):229:i - 1 |==> i % 1
5924:AOR:-(int,int):*(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):229:i - 1 |==> i * 1
5925:AOR:-(int,int):+(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):229:i - 1 |==> i + 1
5926:AOR:-(int,int):/(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):229:i - 1 |==> i / 1
5927:LVR:0:POS:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):230:0 |==> 1
5928:LVR:0:NEG:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):230:0 |==> -1
5929:ROR:==(int,int):<=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):230:compare == 0 |==> compare <= 0
5930:ROR:==(int,int):>=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):230:compare == 0 |==> compare >= 0
5931:ROR:==(int,int):FALSE(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):230:compare == 0 |==> false
5932:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):230:compare == 0 && lastUnitField.equals(loopUnitField) |==> compare == 0 == lastUnitField.equals(loopUnitField)
5933:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):230:compare == 0 && lastUnitField.equals(loopUnitField) |==> false
5934:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):230:compare == 0 && lastUnitField.equals(loopUnitField) |==> compare == 0
5935:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):230:compare == 0 && lastUnitField.equals(loopUnitField) |==> lastUnitField.equals(loopUnitField)
5936:LVR:POS:0:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):231:1 |==> 0
5937:LVR:POS:NEG:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):231:1 |==> -1
5938:AOR:-(int,int):%(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):231:i - 1 |==> i % 1
5939:AOR:-(int,int):*(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):231:i - 1 |==> i * 1
5940:AOR:-(int,int):+(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):231:i - 1 |==> i + 1
5941:AOR:-(int,int):/(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):231:i - 1 |==> i / 1
5942:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):231:types[i - 1].getRangeDurationType() == null |==> false
5943:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):232:loopType.getRangeDurationType() == null |==> false
5944:LVR:POS:0:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):234:1 |==> 0
5945:LVR:POS:NEG:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):234:1 |==> -1
5946:AOR:-(int,int):%(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):234:i - 1 |==> i % 1
5947:AOR:-(int,int):*(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):234:i - 1 |==> i * 1
5948:AOR:-(int,int):+(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):234:i - 1 |==> i + 1
5949:AOR:-(int,int):/(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):234:i - 1 |==> i / 1
5950:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):237:loopType.getRangeDurationType() == null |==> false
5951:LVR:POS:0:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):239:1 |==> 0
5952:LVR:POS:NEG:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):239:1 |==> -1
5953:AOR:-(int,int):%(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):239:i - 1 |==> i % 1
5954:AOR:-(int,int):*(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):239:i - 1 |==> i * 1
5955:AOR:-(int,int):+(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):239:i - 1 |==> i + 1
5956:AOR:-(int,int):/(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):239:i - 1 |==> i / 1
5957:LVR:POS:0:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):241:1 |==> 0
5958:LVR:POS:NEG:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):241:1 |==> -1
5959:AOR:-(int,int):%(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):241:i - 1 |==> i % 1
5960:AOR:-(int,int):*(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):241:i - 1 |==> i * 1
5961:AOR:-(int,int):+(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):241:i - 1 |==> i + 1
5962:AOR:-(int,int):/(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):241:i - 1 |==> i / 1
5963:LVR:0:POS:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):243:0 |==> 1
5964:LVR:0:NEG:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):243:0 |==> -1
5965:ROR:<(int,int):!=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):243:lastRangeField.compareTo(loopRangeField) < 0 |==> lastRangeField.compareTo(loopRangeField) != 0
5966:ROR:<(int,int):<=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):243:lastRangeField.compareTo(loopRangeField) < 0 |==> lastRangeField.compareTo(loopRangeField) <= 0
5967:ROR:<(int,int):FALSE(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):243:lastRangeField.compareTo(loopRangeField) < 0 |==> false
5968:LVR:POS:0:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):245:1 |==> 0
5969:LVR:POS:NEG:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):245:1 |==> -1
5970:AOR:-(int,int):%(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):245:i - 1 |==> i % 1
5971:AOR:-(int,int):*(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):245:i - 1 |==> i * 1
5972:AOR:-(int,int):+(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):245:i - 1 |==> i + 1
5973:AOR:-(int,int):/(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):245:i - 1 |==> i / 1
5974:LVR:0:POS:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):247:0 |==> 1
5975:LVR:0:NEG:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):247:0 |==> -1
5976:ROR:==(int,int):<=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):247:lastRangeField.compareTo(loopRangeField) == 0 |==> lastRangeField.compareTo(loopRangeField) <= 0
5977:ROR:==(int,int):>=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):247:lastRangeField.compareTo(loopRangeField) == 0 |==> lastRangeField.compareTo(loopRangeField) >= 0
5978:ROR:==(int,int):FALSE(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):247:lastRangeField.compareTo(loopRangeField) == 0 |==> false
5979:LVR:POS:0:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):249:1 |==> 0
5980:LVR:POS:NEG:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):249:1 |==> -1
5981:AOR:-(int,int):%(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):249:i - 1 |==> i % 1
5982:AOR:-(int,int):*(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):249:i - 1 |==> i * 1
5983:AOR:-(int,int):+(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):249:i - 1 |==> i + 1
5984:AOR:-(int,int):/(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):249:i - 1 |==> i / 1
5985:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):254:lastUnitField = loopUnitField |==> <NO-OP>
5986:STD:<CALL>:<NO-OP>:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):258:chronology.validate(this, values) |==> <NO-OP>
5987:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@<init>(org.joda.time.ReadablePartial):270:partial == null |==> false
5988:LVR:0:POS:org.joda.time.Partial@<init>(org.joda.time.ReadablePartial):276:0 |==> 1
5989:LVR:0:NEG:org.joda.time.Partial@<init>(org.joda.time.ReadablePartial):276:0 |==> -1
5990:ROR:<(int,int):!=(int,int):org.joda.time.Partial@<init>(org.joda.time.ReadablePartial):276:i < partial.size() |==> i != partial.size()
5991:ROR:<(int,int):<=(int,int):org.joda.time.Partial@<init>(org.joda.time.ReadablePartial):276:i < partial.size() |==> i <= partial.size()
5992:ROR:<(int,int):FALSE(int,int):org.joda.time.Partial@<init>(org.joda.time.ReadablePartial):276:i < partial.size() |==> false
5993:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@<init>(org.joda.time.ReadablePartial):277:iTypes[i] = partial.getFieldType(i) |==> <NO-OP>
5994:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@<init>(org.joda.time.ReadablePartial):278:iValues[i] = partial.getValue(i) |==> <NO-OP>
5995:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@withChronologyRetainFields(org.joda.time.Chronology):411:newChronology = DateTimeUtils.getChronology(newChronology) |==> <NO-OP>
5996:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@withChronologyRetainFields(org.joda.time.Chronology):412:newChronology = newChronology.withUTC() |==> <NO-OP>
5997:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@withChronologyRetainFields(org.joda.time.Chronology):413:newChronology == getChronology() |==> false
5998:STD:<CALL>:<NO-OP>:org.joda.time.Partial@withChronologyRetainFields(org.joda.time.Chronology):417:newChronology.validate(newPartial, iValues) |==> <NO-OP>
5999:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):438:fieldType == null |==> false
6000:LVR:NEG:0:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):442:-1 |==> 0
6001:LVR:NEG:POS:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):442:-1 |==> 1
6002:ROR:==(int,int):<=(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):442:index == -1 |==> index <= -1
6003:ROR:==(int,int):>=(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):442:index == -1 |==> index >= -1
6004:ROR:==(int,int):FALSE(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):442:index == -1 |==> false
6005:LVR:POS:0:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):443:1 |==> 0
6006:LVR:POS:NEG:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):443:1 |==> -1
6007:AOR:+(int,int):%(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):443:iTypes.length + 1 |==> iTypes.length % 1
6008:AOR:+(int,int):*(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):443:iTypes.length + 1 |==> iTypes.length * 1
6009:AOR:+(int,int):-(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):443:iTypes.length + 1 |==> iTypes.length - 1
6010:AOR:+(int,int):/(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):443:iTypes.length + 1 |==> iTypes.length / 1
6011:LVR:0:POS:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):447:0 |==> 1
6012:LVR:0:NEG:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):447:0 |==> -1
6013:COR:unitField.isSupported():TRUE:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):449:unitField.isSupported() |==> false
6014:COR:unitField.isSupported():FALSE:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):449:unitField.isSupported() |==> true
6015:ROR:<(int,int):!=(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):450:i < iTypes.length |==> i != iTypes.length
6016:ROR:<(int,int):<=(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):450:i < iTypes.length |==> i <= iTypes.length
6017:ROR:<(int,int):FALSE(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):450:i < iTypes.length |==> false
6018:COR:loopUnitField.isSupported():TRUE:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):453:loopUnitField.isSupported() |==> false
6019:COR:loopUnitField.isSupported():FALSE:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):453:loopUnitField.isSupported() |==> true
6020:LVR:0:POS:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):455:0 |==> 1
6021:LVR:0:NEG:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):455:0 |==> -1
6022:ROR:>(int,int):!=(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):455:compare > 0 |==> compare != 0
6023:ROR:>(int,int):>=(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):455:compare > 0 |==> compare >= 0
6024:ROR:>(int,int):FALSE(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):455:compare > 0 |==> false
6025:LVR:0:POS:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):457:0 |==> 1
6026:LVR:0:NEG:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):457:0 |==> -1
6027:ROR:==(int,int):<=(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):457:compare == 0 |==> compare <= 0
6028:ROR:==(int,int):>=(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):457:compare == 0 |==> compare >= 0
6029:ROR:==(int,int):FALSE(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):457:compare == 0 |==> false
6030:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):458:fieldType.getRangeDurationType() == null |==> false
6031:LVR:0:POS:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):463:0 |==> 1
6032:LVR:0:NEG:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):463:0 |==> -1
6033:ROR:>(int,int):!=(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):463:rangeField.compareTo(loopRangeField) > 0 |==> rangeField.compareTo(loopRangeField) != 0
6034:ROR:>(int,int):>=(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):463:rangeField.compareTo(loopRangeField) > 0 |==> rangeField.compareTo(loopRangeField) >= 0
6035:ROR:>(int,int):FALSE(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):463:rangeField.compareTo(loopRangeField) > 0 |==> false
6036:LVR:0:POS:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):470:0 |==> 1
6037:LVR:0:NEG:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):470:0 |==> -1
6038:LVR:0:POS:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):470:0 |==> 1
6039:LVR:0:NEG:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):470:0 |==> -1
6040:STD:<CALL>:<NO-OP>:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):470:System.arraycopy(iTypes, 0, newTypes, 0, i) |==> <NO-OP>
6041:LVR:0:POS:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):471:0 |==> 1
6042:LVR:0:NEG:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):471:0 |==> -1
6043:LVR:0:POS:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):471:0 |==> 1
6044:LVR:0:NEG:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):471:0 |==> -1
6045:STD:<CALL>:<NO-OP>:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):471:System.arraycopy(iValues, 0, newValues, 0, i) |==> <NO-OP>
6046:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):472:newTypes[i] = fieldType |==> <NO-OP>
6047:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):473:newValues[i] = value |==> <NO-OP>
6048:LVR:POS:0:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):474:1 |==> 0
6049:LVR:POS:NEG:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):474:1 |==> -1
6050:AOR:+(int,int):%(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):474:i + 1 |==> i % 1
6051:AOR:+(int,int):*(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):474:i + 1 |==> i * 1
6052:AOR:+(int,int):-(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):474:i + 1 |==> i - 1
6053:AOR:+(int,int):/(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):474:i + 1 |==> i / 1
6054:AOR:-(int,int):%(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):474:newTypes.length - i |==> newTypes.length % i
6055:AOR:-(int,int):*(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):474:newTypes.length - i |==> newTypes.length * i
6056:AOR:-(int,int):+(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):474:newTypes.length - i |==> newTypes.length + i
6057:AOR:-(int,int):/(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):474:newTypes.length - i |==> newTypes.length / i
6058:LVR:POS:0:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):474:1 |==> 0
6059:LVR:POS:NEG:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):474:1 |==> -1
6060:AOR:-(int,int):%(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):474:newTypes.length - i - 1 |==> (newTypes.length - i) % 1
6061:AOR:-(int,int):*(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):474:newTypes.length - i - 1 |==> (newTypes.length - i) * 1
6062:AOR:-(int,int):+(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):474:newTypes.length - i - 1 |==> newTypes.length - i + 1
6063:AOR:-(int,int):/(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):474:newTypes.length - i - 1 |==> (newTypes.length - i) / 1
6064:STD:<CALL>:<NO-OP>:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):474:System.arraycopy(iTypes, i, newTypes, i + 1, newTypes.length - i - 1) |==> <NO-OP>
6065:LVR:POS:0:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):475:1 |==> 0
6066:LVR:POS:NEG:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):475:1 |==> -1
6067:AOR:+(int,int):%(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):475:i + 1 |==> i % 1
6068:AOR:+(int,int):*(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):475:i + 1 |==> i * 1
6069:AOR:+(int,int):-(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):475:i + 1 |==> i - 1
6070:AOR:+(int,int):/(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):475:i + 1 |==> i / 1
6071:AOR:-(int,int):%(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):475:newValues.length - i |==> newValues.length % i
6072:AOR:-(int,int):*(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):475:newValues.length - i |==> newValues.length * i
6073:AOR:-(int,int):+(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):475:newValues.length - i |==> newValues.length + i
6074:AOR:-(int,int):/(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):475:newValues.length - i |==> newValues.length / i
6075:LVR:POS:0:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):475:1 |==> 0
6076:LVR:POS:NEG:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):475:1 |==> -1
6077:AOR:-(int,int):%(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):475:newValues.length - i - 1 |==> (newValues.length - i) % 1
6078:AOR:-(int,int):*(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):475:newValues.length - i - 1 |==> (newValues.length - i) * 1
6079:AOR:-(int,int):+(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):475:newValues.length - i - 1 |==> newValues.length - i + 1
6080:AOR:-(int,int):/(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):475:newValues.length - i - 1 |==> (newValues.length - i) / 1
6081:STD:<CALL>:<NO-OP>:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):475:System.arraycopy(iValues, i, newValues, i + 1, newValues.length - i - 1) |==> <NO-OP>
6082:STD:<CALL>:<NO-OP>:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):479:iChronology.validate(newPartial, newValues) |==> <NO-OP>
6083:ROR:==(int,int):<=(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):482:value == getValue(index) |==> value <= getValue(index)
6084:ROR:==(int,int):>=(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):482:value == getValue(index) |==> value >= getValue(index)
6085:ROR:==(int,int):FALSE(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):482:value == getValue(index) |==> false
6086:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):486:newValues = getField(index).set(this, index, newValues, value) |==> <NO-OP>
6087:LVR:NEG:0:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):500:-1 |==> 0
6088:LVR:NEG:POS:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):500:-1 |==> 1
6089:ROR:!=(int,int):<(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):500:index != -1 |==> index < -1
6090:ROR:!=(int,int):>(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):500:index != -1 |==> index > -1
6091:ROR:!=(int,int):TRUE(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):500:index != -1 |==> true
6092:LVR:POS:0:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):501:1 |==> 0
6093:LVR:POS:NEG:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):501:1 |==> -1
6094:AOR:-(int,int):%(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):501:size() - 1 |==> size() % 1
6095:AOR:-(int,int):*(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):501:size() - 1 |==> size() * 1
6096:AOR:-(int,int):+(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):501:size() - 1 |==> size() + 1
6097:AOR:-(int,int):/(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):501:size() - 1 |==> size() / 1
6098:LVR:POS:0:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):502:1 |==> 0
6099:LVR:POS:NEG:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):502:1 |==> -1
6100:AOR:-(int,int):%(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):502:size() - 1 |==> size() % 1
6101:AOR:-(int,int):*(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):502:size() - 1 |==> size() * 1
6102:AOR:-(int,int):+(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):502:size() - 1 |==> size() + 1
6103:AOR:-(int,int):/(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):502:size() - 1 |==> size() / 1
6104:LVR:0:POS:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):503:0 |==> 1
6105:LVR:0:NEG:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):503:0 |==> -1
6106:LVR:0:POS:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):503:0 |==> 1
6107:LVR:0:NEG:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):503:0 |==> -1
6108:STD:<CALL>:<NO-OP>:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):503:System.arraycopy(iTypes, 0, newTypes, 0, index) |==> <NO-OP>
6109:LVR:POS:0:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):504:1 |==> 0
6110:LVR:POS:NEG:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):504:1 |==> -1
6111:AOR:+(int,int):%(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):504:index + 1 |==> index % 1
6112:AOR:+(int,int):*(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):504:index + 1 |==> index * 1
6113:AOR:+(int,int):-(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):504:index + 1 |==> index - 1
6114:AOR:+(int,int):/(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):504:index + 1 |==> index / 1
6115:AOR:-(int,int):%(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):504:newTypes.length - index |==> newTypes.length % index
6116:AOR:-(int,int):*(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):504:newTypes.length - index |==> newTypes.length * index
6117:AOR:-(int,int):+(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):504:newTypes.length - index |==> newTypes.length + index
6118:AOR:-(int,int):/(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):504:newTypes.length - index |==> newTypes.length / index
6119:STD:<CALL>:<NO-OP>:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):504:System.arraycopy(iTypes, index + 1, newTypes, index, newTypes.length - index) |==> <NO-OP>
6120:LVR:0:POS:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):505:0 |==> 1
6121:LVR:0:NEG:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):505:0 |==> -1
6122:LVR:0:POS:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):505:0 |==> 1
6123:LVR:0:NEG:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):505:0 |==> -1
6124:STD:<CALL>:<NO-OP>:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):505:System.arraycopy(iValues, 0, newValues, 0, index) |==> <NO-OP>
6125:LVR:POS:0:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):506:1 |==> 0
6126:LVR:POS:NEG:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):506:1 |==> -1
6127:AOR:+(int,int):%(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):506:index + 1 |==> index % 1
6128:AOR:+(int,int):*(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):506:index + 1 |==> index * 1
6129:AOR:+(int,int):-(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):506:index + 1 |==> index - 1
6130:AOR:+(int,int):/(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):506:index + 1 |==> index / 1
6131:AOR:-(int,int):%(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):506:newValues.length - index |==> newValues.length % index
6132:AOR:-(int,int):*(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):506:newValues.length - index |==> newValues.length * index
6133:AOR:-(int,int):+(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):506:newValues.length - index |==> newValues.length + index
6134:AOR:-(int,int):/(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):506:newValues.length - index |==> newValues.length / index
6135:STD:<CALL>:<NO-OP>:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):506:System.arraycopy(iValues, index + 1, newValues, index, newValues.length - index) |==> <NO-OP>
6136:STD:<CALL>:<NO-OP>:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):508:iChronology.validate(newPartial, newValues) |==> <NO-OP>
6137:ROR:==(int,int):<=(int,int):org.joda.time.Partial@withField(org.joda.time.DateTimeFieldType,int):531:value == getValue(index) |==> value <= getValue(index)
6138:ROR:==(int,int):>=(int,int):org.joda.time.Partial@withField(org.joda.time.DateTimeFieldType,int):531:value == getValue(index) |==> value >= getValue(index)
6139:ROR:==(int,int):FALSE(int,int):org.joda.time.Partial@withField(org.joda.time.DateTimeFieldType,int):531:value == getValue(index) |==> false
6140:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@withField(org.joda.time.DateTimeFieldType,int):535:newValues = getField(index).set(this, index, newValues, value) |==> <NO-OP>
6141:LVR:0:POS:org.joda.time.Partial@withFieldAdded(org.joda.time.DurationFieldType,int):555:0 |==> 1
6142:LVR:0:NEG:org.joda.time.Partial@withFieldAdded(org.joda.time.DurationFieldType,int):555:0 |==> -1
6143:ROR:==(int,int):<=(int,int):org.joda.time.Partial@withFieldAdded(org.joda.time.DurationFieldType,int):555:amount == 0 |==> amount <= 0
6144:ROR:==(int,int):>=(int,int):org.joda.time.Partial@withFieldAdded(org.joda.time.DurationFieldType,int):555:amount == 0 |==> amount >= 0
6145:ROR:==(int,int):FALSE(int,int):org.joda.time.Partial@withFieldAdded(org.joda.time.DurationFieldType,int):555:amount == 0 |==> false
6146:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@withFieldAdded(org.joda.time.DurationFieldType,int):559:newValues = getField(index).add(this, index, newValues, amount) |==> <NO-OP>
6147:LVR:0:POS:org.joda.time.Partial@withFieldAddWrapped(org.joda.time.DurationFieldType,int):579:0 |==> 1
6148:LVR:0:NEG:org.joda.time.Partial@withFieldAddWrapped(org.joda.time.DurationFieldType,int):579:0 |==> -1
6149:ROR:==(int,int):<=(int,int):org.joda.time.Partial@withFieldAddWrapped(org.joda.time.DurationFieldType,int):579:amount == 0 |==> amount <= 0
6150:ROR:==(int,int):>=(int,int):org.joda.time.Partial@withFieldAddWrapped(org.joda.time.DurationFieldType,int):579:amount == 0 |==> amount >= 0
6151:ROR:==(int,int):FALSE(int,int):org.joda.time.Partial@withFieldAddWrapped(org.joda.time.DurationFieldType,int):579:amount == 0 |==> false
6152:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@withFieldAddWrapped(org.joda.time.DurationFieldType,int):583:newValues = getField(index).addWrapPartial(this, index, newValues, amount) |==> <NO-OP>
6153:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):603:period == null |==> false
6154:LVR:0:POS:org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):603:0 |==> 1
6155:LVR:0:NEG:org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):603:0 |==> -1
6156:ROR:==(int,int):<=(int,int):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):603:scalar == 0 |==> scalar <= 0
6157:ROR:==(int,int):>=(int,int):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):603:scalar == 0 |==> scalar >= 0
6158:ROR:==(int,int):FALSE(int,int):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):603:scalar == 0 |==> false
6159:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):603:period == null || scalar == 0 |==> period == null != (scalar == 0)
6160:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):603:period == null || scalar == 0 |==> period == null
6161:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):603:period == null || scalar == 0 |==> scalar == 0
6162:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):603:period == null || scalar == 0 |==> true
6163:LVR:0:POS:org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):607:0 |==> 1
6164:LVR:0:NEG:org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):607:0 |==> -1
6165:ROR:<(int,int):!=(int,int):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):607:i < period.size() |==> i != period.size()
6166:ROR:<(int,int):<=(int,int):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):607:i < period.size() |==> i <= period.size()
6167:ROR:<(int,int):FALSE(int,int):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):607:i < period.size() |==> false
6168:LVR:0:POS:org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):610:0 |==> 1
6169:LVR:0:NEG:org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):610:0 |==> -1
6170:ROR:>=(int,int):==(int,int):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):610:index >= 0 |==> index == 0
6171:ROR:>=(int,int):>(int,int):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):610:index >= 0 |==> index > 0
6172:ROR:>=(int,int):TRUE(int,int):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):610:index >= 0 |==> true
6173:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):611:newValues = getField(index).add(this, index, newValues, FieldUtils.safeMultiply(period.getValue(i), scalar)) |==> <NO-OP>
6174:LVR:POS:0:org.joda.time.Partial@plus(org.joda.time.ReadablePeriod):628:1 |==> 0
6175:LVR:POS:NEG:org.joda.time.Partial@plus(org.joda.time.ReadablePeriod):628:1 |==> -1
6176:LVR:NEG:0:org.joda.time.Partial@minus(org.joda.time.ReadablePeriod):641:-1 |==> 0
6177:LVR:NEG:POS:org.joda.time.Partial@minus(org.joda.time.ReadablePeriod):641:-1 |==> 1
6178:LVR:0:POS:org.joda.time.Partial@isMatch(org.joda.time.ReadableInstant):672:0 |==> 1
6179:LVR:0:NEG:org.joda.time.Partial@isMatch(org.joda.time.ReadableInstant):672:0 |==> -1
6180:ROR:<(int,int):!=(int,int):org.joda.time.Partial@isMatch(org.joda.time.ReadableInstant):672:i < iTypes.length |==> i != iTypes.length
6181:ROR:<(int,int):<=(int,int):org.joda.time.Partial@isMatch(org.joda.time.ReadableInstant):672:i < iTypes.length |==> i <= iTypes.length
6182:ROR:<(int,int):FALSE(int,int):org.joda.time.Partial@isMatch(org.joda.time.ReadableInstant):672:i < iTypes.length |==> false
6183:ROR:!=(int,int):<(int,int):org.joda.time.Partial@isMatch(org.joda.time.ReadableInstant):674:value != iValues[i] |==> value < iValues[i]
6184:ROR:!=(int,int):>(int,int):org.joda.time.Partial@isMatch(org.joda.time.ReadableInstant):674:value != iValues[i] |==> value > iValues[i]
6185:ROR:!=(int,int):TRUE(int,int):org.joda.time.Partial@isMatch(org.joda.time.ReadableInstant):674:value != iValues[i] |==> true
6186:LVR:FALSE:TRUE:org.joda.time.Partial@isMatch(org.joda.time.ReadableInstant):675:false |==> true
6187:LVR:TRUE:FALSE:org.joda.time.Partial@isMatch(org.joda.time.ReadableInstant):678:true |==> false
6188:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@isMatch(org.joda.time.ReadablePartial):694:partial == null |==> false
6189:LVR:0:POS:org.joda.time.Partial@isMatch(org.joda.time.ReadablePartial):697:0 |==> 1
6190:LVR:0:NEG:org.joda.time.Partial@isMatch(org.joda.time.ReadablePartial):697:0 |==> -1
6191:ROR:<(int,int):!=(int,int):org.joda.time.Partial@isMatch(org.joda.time.ReadablePartial):697:i < iTypes.length |==> i != iTypes.length
6192:ROR:<(int,int):<=(int,int):org.joda.time.Partial@isMatch(org.joda.time.ReadablePartial):697:i < iTypes.length |==> i <= iTypes.length
6193:ROR:<(int,int):FALSE(int,int):org.joda.time.Partial@isMatch(org.joda.time.ReadablePartial):697:i < iTypes.length |==> false
6194:ROR:!=(int,int):<(int,int):org.joda.time.Partial@isMatch(org.joda.time.ReadablePartial):699:value != iValues[i] |==> value < iValues[i]
6195:ROR:!=(int,int):>(int,int):org.joda.time.Partial@isMatch(org.joda.time.ReadablePartial):699:value != iValues[i] |==> value > iValues[i]
6196:ROR:!=(int,int):TRUE(int,int):org.joda.time.Partial@isMatch(org.joda.time.ReadablePartial):699:value != iValues[i] |==> true
6197:LVR:FALSE:TRUE:org.joda.time.Partial@isMatch(org.joda.time.ReadablePartial):700:false |==> true
6198:LVR:TRUE:FALSE:org.joda.time.Partial@isMatch(org.joda.time.ReadablePartial):703:true |==> false
6199:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@getFormatter():720:f == null |==> false
6200:LVR:0:POS:org.joda.time.Partial@getFormatter():721:0 |==> 1
6201:LVR:0:NEG:org.joda.time.Partial@getFormatter():721:0 |==> -1
6202:ROR:==(int,int):<=(int,int):org.joda.time.Partial@getFormatter():721:size() == 0 |==> size() <= 0
6203:ROR:==(int,int):>=(int,int):org.joda.time.Partial@getFormatter():721:size() == 0 |==> size() >= 0
6204:ROR:==(int,int):FALSE(int,int):org.joda.time.Partial@getFormatter():721:size() == 0 |==> false
6205:LVR:POS:0:org.joda.time.Partial@getFormatter():724:2 |==> 0
6206:LVR:POS:NEG:org.joda.time.Partial@getFormatter():724:2 |==> -2
6207:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@getFormatter():724:f = new DateTimeFormatter[2] |==> <NO-OP>
6208:LVR:0:POS:org.joda.time.Partial@getFormatter():727:0 |==> 1
6209:LVR:0:NEG:org.joda.time.Partial@getFormatter():727:0 |==> -1
6210:LVR:TRUE:FALSE:org.joda.time.Partial@getFormatter():727:true |==> false
6211:LVR:FALSE:TRUE:org.joda.time.Partial@getFormatter():727:false |==> true
6212:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@getFormatter():727:f[0] = ISODateTimeFormat.forFields(list, true, false) |==> <NO-OP>
6213:LVR:0:POS:org.joda.time.Partial@getFormatter():728:0 |==> 1
6214:LVR:0:NEG:org.joda.time.Partial@getFormatter():728:0 |==> -1
6215:ROR:==(int,int):<=(int,int):org.joda.time.Partial@getFormatter():728:list.size() == 0 |==> list.size() <= 0
6216:ROR:==(int,int):>=(int,int):org.joda.time.Partial@getFormatter():728:list.size() == 0 |==> list.size() >= 0
6217:ROR:==(int,int):FALSE(int,int):org.joda.time.Partial@getFormatter():728:list.size() == 0 |==> false
6218:LVR:POS:0:org.joda.time.Partial@getFormatter():729:1 |==> 0
6219:LVR:POS:NEG:org.joda.time.Partial@getFormatter():729:1 |==> -1
6220:LVR:0:POS:org.joda.time.Partial@getFormatter():729:0 |==> 1
6221:LVR:0:NEG:org.joda.time.Partial@getFormatter():729:0 |==> -1
6222:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@getFormatter():729:f[1] = f[0] |==> <NO-OP>
6223:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@getFormatter():734:iFormatter = f |==> <NO-OP>
6224:LVR:0:POS:org.joda.time.Partial@getFormatter():736:0 |==> 1
6225:LVR:0:NEG:org.joda.time.Partial@getFormatter():736:0 |==> -1
6226:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@toString():753:f == null |==> false
6227:STD:<CALL>:<NO-OP>:org.joda.time.Partial@toString():754:getFormatter() |==> <NO-OP>
6228:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@toString():755:f = iFormatter |==> <NO-OP>
6229:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@toString():756:f == null |==> false
6230:LVR:POS:0:org.joda.time.Partial@toString():760:1 |==> 0
6231:LVR:POS:NEG:org.joda.time.Partial@toString():760:1 |==> -1
6232:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@toString():761:f1 == null |==> false
6233:LVR:POS:0:org.joda.time.Partial@toStringList():778:20 |==> 0
6234:LVR:POS:NEG:org.joda.time.Partial@toStringList():778:20 |==> -20
6235:AOR:*(int,int):%(int,int):org.joda.time.Partial@toStringList():778:20 * size |==> 20 % size
6236:AOR:*(int,int):+(int,int):org.joda.time.Partial@toStringList():778:20 * size |==> 20 + size
6237:AOR:*(int,int):-(int,int):org.joda.time.Partial@toStringList():778:20 * size |==> 20 - size
6238:AOR:*(int,int):/(int,int):org.joda.time.Partial@toStringList():778:20 * size |==> 20 / size
6239:STD:<CALL>:<NO-OP>:org.joda.time.Partial@toStringList():779:buf.append('[') |==> <NO-OP>
6240:LVR:0:POS:org.joda.time.Partial@toStringList():780:0 |==> 1
6241:LVR:0:NEG:org.joda.time.Partial@toStringList():780:0 |==> -1
6242:ROR:<(int,int):!=(int,int):org.joda.time.Partial@toStringList():780:i < size |==> i != size
6243:ROR:<(int,int):<=(int,int):org.joda.time.Partial@toStringList():780:i < size |==> i <= size
6244:ROR:<(int,int):FALSE(int,int):org.joda.time.Partial@toStringList():780:i < size |==> false
6245:LVR:0:POS:org.joda.time.Partial@toStringList():781:0 |==> 1
6246:LVR:0:NEG:org.joda.time.Partial@toStringList():781:0 |==> -1
6247:ROR:>(int,int):!=(int,int):org.joda.time.Partial@toStringList():781:i > 0 |==> i != 0
6248:ROR:>(int,int):>=(int,int):org.joda.time.Partial@toStringList():781:i > 0 |==> i >= 0
6249:ROR:>(int,int):FALSE(int,int):org.joda.time.Partial@toStringList():781:i > 0 |==> false
6250:STD:<CALL>:<NO-OP>:org.joda.time.Partial@toStringList():782:buf.append(',').append(' ') |==> <NO-OP>
6251:STD:<CALL>:<NO-OP>:org.joda.time.Partial@toStringList():784:buf.append(iTypes[i].getName()) |==> <NO-OP>
6252:STD:<CALL>:<NO-OP>:org.joda.time.Partial@toStringList():785:buf.append('=') |==> <NO-OP>
6253:STD:<CALL>:<NO-OP>:org.joda.time.Partial@toStringList():786:buf.append(iValues[i]) |==> <NO-OP>
6254:STD:<CALL>:<NO-OP>:org.joda.time.Partial@toStringList():788:buf.append(']') |==> <NO-OP>
6255:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@toString(java.lang.String):800:pattern == null |==> false
6256:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@toString(java.lang.String,java.util.Locale):815:pattern == null |==> false
6257:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial$Property@addToCopy(int):908:newValues = getField().add(iPartial, iFieldIndex, newValues, valueToAdd) |==> <NO-OP>
6258:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial$Property@addWrapFieldToCopy(int):932:newValues = getField().addWrapField(iPartial, iFieldIndex, newValues, valueToAdd) |==> <NO-OP>
6259:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial$Property@setCopy(int):949:newValues = getField().set(iPartial, iFieldIndex, newValues, value) |==> <NO-OP>
6260:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial$Property@setCopy(java.lang.String,java.util.Locale):966:newValues = getField().set(iPartial, iFieldIndex, newValues, text, locale) |==> <NO-OP>
6261:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.YearMonth@now(org.joda.time.DateTimeZone):108:zone == null |==> false
6262:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.YearMonth@now(org.joda.time.Chronology):124:chronology == null |==> false
6263:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.YearMonth@fromCalendarFields(java.util.Calendar):174:calendar == null |==> false
6264:LVR:POS:0:org.joda.time.YearMonth@fromCalendarFields(java.util.Calendar):177:1 |==> 0
6265:LVR:POS:NEG:org.joda.time.YearMonth@fromCalendarFields(java.util.Calendar):177:1 |==> -1
6266:AOR:+(int,int):%(int,int):org.joda.time.YearMonth@fromCalendarFields(java.util.Calendar):177:calendar.get(Calendar.MONTH) + 1 |==> calendar.get(Calendar.MONTH) % 1
6267:AOR:+(int,int):*(int,int):org.joda.time.YearMonth@fromCalendarFields(java.util.Calendar):177:calendar.get(Calendar.MONTH) + 1 |==> calendar.get(Calendar.MONTH) * 1
6268:AOR:+(int,int):-(int,int):org.joda.time.YearMonth@fromCalendarFields(java.util.Calendar):177:calendar.get(Calendar.MONTH) + 1 |==> calendar.get(Calendar.MONTH) - 1
6269:AOR:+(int,int):/(int,int):org.joda.time.YearMonth@fromCalendarFields(java.util.Calendar):177:calendar.get(Calendar.MONTH) + 1 |==> calendar.get(Calendar.MONTH) / 1
6270:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.YearMonth@fromDateFields(java.util.Date):195:date == null |==> false
6271:LVR:POS:0:org.joda.time.YearMonth@fromDateFields(java.util.Date):198:1900 |==> 0
6272:LVR:POS:NEG:org.joda.time.YearMonth@fromDateFields(java.util.Date):198:1900 |==> -1900
6273:AOR:+(int,int):%(int,int):org.joda.time.YearMonth@fromDateFields(java.util.Date):198:date.getYear() + 1900 |==> date.getYear() % 1900
6274:AOR:+(int,int):*(int,int):org.joda.time.YearMonth@fromDateFields(java.util.Date):198:date.getYear() + 1900 |==> date.getYear() * 1900
6275:AOR:+(int,int):-(int,int):org.joda.time.YearMonth@fromDateFields(java.util.Date):198:date.getYear() + 1900 |==> date.getYear() - 1900
6276:AOR:+(int,int):/(int,int):org.joda.time.YearMonth@fromDateFields(java.util.Date):198:date.getYear() + 1900 |==> date.getYear() / 1900
6277:LVR:POS:0:org.joda.time.YearMonth@fromDateFields(java.util.Date):198:1 |==> 0
6278:LVR:POS:NEG:org.joda.time.YearMonth@fromDateFields(java.util.Date):198:1 |==> -1
6279:AOR:+(int,int):%(int,int):org.joda.time.YearMonth@fromDateFields(java.util.Date):198:date.getMonth() + 1 |==> date.getMonth() % 1
6280:AOR:+(int,int):*(int,int):org.joda.time.YearMonth@fromDateFields(java.util.Date):198:date.getMonth() + 1 |==> date.getMonth() * 1
6281:AOR:+(int,int):-(int,int):org.joda.time.YearMonth@fromDateFields(java.util.Date):198:date.getMonth() + 1 |==> date.getMonth() - 1
6282:AOR:+(int,int):/(int,int):org.joda.time.YearMonth@fromDateFields(java.util.Date):198:date.getMonth() + 1 |==> date.getMonth() / 1
6283:LVR:FALSE:TRUE:org.joda.time.YearMonth@readResolve():372:false |==> true
6284:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.YearMonth@readResolve():372:DateTimeZone.UTC.equals(getChronology().getZone()) == false |==> false
6285:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.YearMonth@readResolve():372:DateTimeZone.UTC.equals(getChronology().getZone()) == false |==> DateTimeZone.UTC.equals(getChronology().getZone())
6286:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.YearMonth@readResolve():372:DateTimeZone.UTC.equals(getChronology().getZone()) == false |==> false
6287:LVR:POS:0:org.joda.time.YearMonth@size():387:2 |==> 0
6288:LVR:POS:NEG:org.joda.time.YearMonth@size():387:2 |==> -2
6289:STD:<ASSIGN>:<NO-OP>:org.joda.time.YearMonth@withChronologyRetainFields(org.joda.time.Chronology):448:newChronology = DateTimeUtils.getChronology(newChronology) |==> <NO-OP>
6290:STD:<ASSIGN>:<NO-OP>:org.joda.time.YearMonth@withChronologyRetainFields(org.joda.time.Chronology):449:newChronology = newChronology.withUTC() |==> <NO-OP>
6291:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.YearMonth@withChronologyRetainFields(org.joda.time.Chronology):450:newChronology == getChronology() |==> false
6292:STD:<CALL>:<NO-OP>:org.joda.time.YearMonth@withChronologyRetainFields(org.joda.time.Chronology):454:newChronology.validate(newYearMonth, getValues()) |==> <NO-OP>
6293:ROR:==(int,int):<=(int,int):org.joda.time.YearMonth@withField(org.joda.time.DateTimeFieldType,int):479:value == getValue(index) |==> value <= getValue(index)
6294:ROR:==(int,int):>=(int,int):org.joda.time.YearMonth@withField(org.joda.time.DateTimeFieldType,int):479:value == getValue(index) |==> value >= getValue(index)
6295:ROR:==(int,int):FALSE(int,int):org.joda.time.YearMonth@withField(org.joda.time.DateTimeFieldType,int):479:value == getValue(index) |==> false
6296:STD:<ASSIGN>:<NO-OP>:org.joda.time.YearMonth@withField(org.joda.time.DateTimeFieldType,int):483:newValues = getField(index).set(this, index, newValues, value) |==> <NO-OP>
6297:LVR:0:POS:org.joda.time.YearMonth@withFieldAdded(org.joda.time.DurationFieldType,int):507:0 |==> 1
6298:LVR:0:NEG:org.joda.time.YearMonth@withFieldAdded(org.joda.time.DurationFieldType,int):507:0 |==> -1
6299:ROR:==(int,int):<=(int,int):org.joda.time.YearMonth@withFieldAdded(org.joda.time.DurationFieldType,int):507:amount == 0 |==> amount <= 0
6300:ROR:==(int,int):>=(int,int):org.joda.time.YearMonth@withFieldAdded(org.joda.time.DurationFieldType,int):507:amount == 0 |==> amount >= 0
6301:ROR:==(int,int):FALSE(int,int):org.joda.time.YearMonth@withFieldAdded(org.joda.time.DurationFieldType,int):507:amount == 0 |==> false
6302:STD:<ASSIGN>:<NO-OP>:org.joda.time.YearMonth@withFieldAdded(org.joda.time.DurationFieldType,int):511:newValues = getField(index).add(this, index, newValues, amount) |==> <NO-OP>
6303:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.YearMonth@withPeriodAdded(org.joda.time.ReadablePeriod,int):532:period == null |==> false
6304:LVR:0:POS:org.joda.time.YearMonth@withPeriodAdded(org.joda.time.ReadablePeriod,int):532:0 |==> 1
6305:LVR:0:NEG:org.joda.time.YearMonth@withPeriodAdded(org.joda.time.ReadablePeriod,int):532:0 |==> -1
6306:ROR:==(int,int):<=(int,int):org.joda.time.YearMonth@withPeriodAdded(org.joda.time.ReadablePeriod,int):532:scalar == 0 |==> scalar <= 0
6307:ROR:==(int,int):>=(int,int):org.joda.time.YearMonth@withPeriodAdded(org.joda.time.ReadablePeriod,int):532:scalar == 0 |==> scalar >= 0
6308:ROR:==(int,int):FALSE(int,int):org.joda.time.YearMonth@withPeriodAdded(org.joda.time.ReadablePeriod,int):532:scalar == 0 |==> false
6309:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.YearMonth@withPeriodAdded(org.joda.time.ReadablePeriod,int):532:period == null || scalar == 0 |==> period == null != (scalar == 0)
6310:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.YearMonth@withPeriodAdded(org.joda.time.ReadablePeriod,int):532:period == null || scalar == 0 |==> period == null
6311:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.YearMonth@withPeriodAdded(org.joda.time.ReadablePeriod,int):532:period == null || scalar == 0 |==> scalar == 0
6312:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.YearMonth@withPeriodAdded(org.joda.time.ReadablePeriod,int):532:period == null || scalar == 0 |==> true
6313:LVR:0:POS:org.joda.time.YearMonth@withPeriodAdded(org.joda.time.ReadablePeriod,int):536:0 |==> 1
6314:LVR:0:NEG:org.joda.time.YearMonth@withPeriodAdded(org.joda.time.ReadablePeriod,int):536:0 |==> -1
6315:ROR:<(int,int):!=(int,int):org.joda.time.YearMonth@withPeriodAdded(org.joda.time.ReadablePeriod,int):536:i < period.size() |==> i != period.size()
6316:ROR:<(int,int):<=(int,int):org.joda.time.YearMonth@withPeriodAdded(org.joda.time.ReadablePeriod,int):536:i < period.size() |==> i <= period.size()
6317:ROR:<(int,int):FALSE(int,int):org.joda.time.YearMonth@withPeriodAdded(org.joda.time.ReadablePeriod,int):536:i < period.size() |==> false
6318:LVR:0:POS:org.joda.time.YearMonth@withPeriodAdded(org.joda.time.ReadablePeriod,int):539:0 |==> 1
6319:LVR:0:NEG:org.joda.time.YearMonth@withPeriodAdded(org.joda.time.ReadablePeriod,int):539:0 |==> -1
6320:ROR:>=(int,int):==(int,int):org.joda.time.YearMonth@withPeriodAdded(org.joda.time.ReadablePeriod,int):539:index >= 0 |==> index == 0
6321:ROR:>=(int,int):>(int,int):org.joda.time.YearMonth@withPeriodAdded(org.joda.time.ReadablePeriod,int):539:index >= 0 |==> index > 0
6322:ROR:>=(int,int):TRUE(int,int):org.joda.time.YearMonth@withPeriodAdded(org.joda.time.ReadablePeriod,int):539:index >= 0 |==> true
6323:STD:<ASSIGN>:<NO-OP>:org.joda.time.YearMonth@withPeriodAdded(org.joda.time.ReadablePeriod,int):540:newValues = getField(index).add(this, index, newValues, FieldUtils.safeMultiply(period.getValue(i), scalar)) |==> <NO-OP>
6324:LVR:POS:0:org.joda.time.YearMonth@plus(org.joda.time.ReadablePeriod):562:1 |==> 0
6325:LVR:POS:NEG:org.joda.time.YearMonth@plus(org.joda.time.ReadablePeriod):562:1 |==> -1
6326:LVR:NEG:0:org.joda.time.YearMonth@minus(org.joda.time.ReadablePeriod):619:-1 |==> 0
6327:LVR:NEG:POS:org.joda.time.YearMonth@minus(org.joda.time.ReadablePeriod):619:-1 |==> 1
6328:STD:<ASSIGN>:<NO-OP>:org.joda.time.YearMonth@toInterval(org.joda.time.DateTimeZone):697:zone = DateTimeUtils.getZone(zone) |==> <NO-OP>
6329:LVR:POS:0:org.joda.time.YearMonth@toInterval(org.joda.time.DateTimeZone):698:1 |==> 0
6330:LVR:POS:NEG:org.joda.time.YearMonth@toInterval(org.joda.time.DateTimeZone):698:1 |==> -1
6331:LVR:POS:0:org.joda.time.YearMonth@toInterval(org.joda.time.DateTimeZone):699:1 |==> 0
6332:LVR:POS:NEG:org.joda.time.YearMonth@toInterval(org.joda.time.DateTimeZone):699:1 |==> -1
6333:LVR:POS:0:org.joda.time.YearMonth@toInterval(org.joda.time.DateTimeZone):699:1 |==> 0
6334:LVR:POS:NEG:org.joda.time.YearMonth@toInterval(org.joda.time.DateTimeZone):699:1 |==> -1
6335:STD:<ASSIGN>:<NO-OP>:org.joda.time.YearMonth@withYear(int):736:newValues = getChronology().year().set(this, YEAR, newValues, year) |==> <NO-OP>
6336:STD:<ASSIGN>:<NO-OP>:org.joda.time.YearMonth@withMonthOfYear(int):753:newValues = getChronology().monthOfYear().set(this, MONTH_OF_YEAR, newValues, monthOfYear) |==> <NO-OP>
6337:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.YearMonth@toString(java.lang.String):807:pattern == null |==> false
6338:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.YearMonth@toString(java.lang.String,java.util.Locale):821:pattern == null |==> false
6339:STD:<ASSIGN>:<NO-OP>:org.joda.time.YearMonth$Property@addToCopy(int):914:newValues = getField().add(iBase, iFieldIndex, newValues, valueToAdd) |==> <NO-OP>
6340:STD:<ASSIGN>:<NO-OP>:org.joda.time.YearMonth$Property@addWrapFieldToCopy(int):938:newValues = getField().addWrapField(iBase, iFieldIndex, newValues, valueToAdd) |==> <NO-OP>
6341:STD:<ASSIGN>:<NO-OP>:org.joda.time.YearMonth$Property@setCopy(int):955:newValues = getField().set(iBase, iFieldIndex, newValues, value) |==> <NO-OP>
6342:STD:<ASSIGN>:<NO-OP>:org.joda.time.YearMonth$Property@setCopy(java.lang.String,java.util.Locale):972:newValues = getField().set(iBase, iFieldIndex, newValues, text, locale) |==> <NO-OP>
6343:LVR:0:POS:org.joda.time.Years:45:0 |==> 1
6344:LVR:0:NEG:org.joda.time.Years:45:0 |==> -1
6345:LVR:POS:0:org.joda.time.Years:47:1 |==> 0
6346:LVR:POS:NEG:org.joda.time.Years:47:1 |==> -1
6347:LVR:POS:0:org.joda.time.Years:49:2 |==> 0
6348:LVR:POS:NEG:org.joda.time.Years:49:2 |==> -2
6349:LVR:POS:0:org.joda.time.Years:51:3 |==> 0
6350:LVR:POS:NEG:org.joda.time.Years:51:3 |==> -3
6351:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.Years@yearsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):119:start instanceof LocalDate && end instanceof LocalDate |==> start instanceof LocalDate == end instanceof LocalDate
6352:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.Years@yearsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):119:start instanceof LocalDate && end instanceof LocalDate |==> false
6353:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.Years@yearsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):119:start instanceof LocalDate && end instanceof LocalDate |==> start instanceof LocalDate
6354:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.Years@yearsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial):119:start instanceof LocalDate && end instanceof LocalDate |==> end instanceof LocalDate
6355:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Years@yearsIn(org.joda.time.ReadableInterval):139:interval == null |==> false
6356:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Years@parseYears(java.lang.String):159:periodStr == null |==> false
6357:LVR:0:POS:org.joda.time.Years@plus(int):227:0 |==> 1
6358:LVR:0:NEG:org.joda.time.Years@plus(int):227:0 |==> -1
6359:ROR:==(int,int):<=(int,int):org.joda.time.Years@plus(int):227:years == 0 |==> years <= 0
6360:ROR:==(int,int):>=(int,int):org.joda.time.Years@plus(int):227:years == 0 |==> years >= 0
6361:ROR:==(int,int):FALSE(int,int):org.joda.time.Years@plus(int):227:years == 0 |==> false
6362:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Years@plus(org.joda.time.Years):243:years == null |==> false
6363:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Years@minus(org.joda.time.Years):273:years == null |==> false
6364:LVR:POS:0:org.joda.time.Years@dividedBy(int):304:1 |==> 0
6365:LVR:POS:NEG:org.joda.time.Years@dividedBy(int):304:1 |==> -1
6366:ROR:==(int,int):<=(int,int):org.joda.time.Years@dividedBy(int):304:divisor == 1 |==> divisor <= 1
6367:ROR:==(int,int):>=(int,int):org.joda.time.Years@dividedBy(int):304:divisor == 1 |==> divisor >= 1
6368:ROR:==(int,int):FALSE(int,int):org.joda.time.Years@dividedBy(int):304:divisor == 1 |==> false
6369:AOR:/(int,int):%(int,int):org.joda.time.Years@dividedBy(int):307:getValue() / divisor |==> getValue() % divisor
6370:AOR:/(int,int):*(int,int):org.joda.time.Years@dividedBy(int):307:getValue() / divisor |==> getValue() * divisor
6371:AOR:/(int,int):+(int,int):org.joda.time.Years@dividedBy(int):307:getValue() / divisor |==> getValue() + divisor
6372:AOR:/(int,int):-(int,int):org.joda.time.Years@dividedBy(int):307:getValue() / divisor |==> getValue() - divisor
6373:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Years@isGreaterThan(org.joda.time.Years):329:other == null |==> false
6374:LVR:0:POS:org.joda.time.Years@isGreaterThan(org.joda.time.Years):330:0 |==> 1
6375:LVR:0:NEG:org.joda.time.Years@isGreaterThan(org.joda.time.Years):330:0 |==> -1
6376:ROR:>(int,int):!=(int,int):org.joda.time.Years@isGreaterThan(org.joda.time.Years):330:getValue() > 0 |==> getValue() != 0
6377:ROR:>(int,int):>=(int,int):org.joda.time.Years@isGreaterThan(org.joda.time.Years):330:getValue() > 0 |==> getValue() >= 0
6378:ROR:>(int,int):FALSE(int,int):org.joda.time.Years@isGreaterThan(org.joda.time.Years):330:getValue() > 0 |==> false
6379:ROR:>(int,int):!=(int,int):org.joda.time.Years@isGreaterThan(org.joda.time.Years):332:getValue() > other.getValue() |==> getValue() != other.getValue()
6380:ROR:>(int,int):>=(int,int):org.joda.time.Years@isGreaterThan(org.joda.time.Years):332:getValue() > other.getValue() |==> getValue() >= other.getValue()
6381:ROR:>(int,int):FALSE(int,int):org.joda.time.Years@isGreaterThan(org.joda.time.Years):332:getValue() > other.getValue() |==> false
6382:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Years@isLessThan(org.joda.time.Years):342:other == null |==> false
6383:LVR:0:POS:org.joda.time.Years@isLessThan(org.joda.time.Years):343:0 |==> 1
6384:LVR:0:NEG:org.joda.time.Years@isLessThan(org.joda.time.Years):343:0 |==> -1
6385:ROR:<(int,int):!=(int,int):org.joda.time.Years@isLessThan(org.joda.time.Years):343:getValue() < 0 |==> getValue() != 0
6386:ROR:<(int,int):<=(int,int):org.joda.time.Years@isLessThan(org.joda.time.Years):343:getValue() < 0 |==> getValue() <= 0
6387:ROR:<(int,int):FALSE(int,int):org.joda.time.Years@isLessThan(org.joda.time.Years):343:getValue() < 0 |==> false
6388:ROR:<(int,int):!=(int,int):org.joda.time.Years@isLessThan(org.joda.time.Years):345:getValue() < other.getValue() |==> getValue() != other.getValue()
6389:ROR:<(int,int):<=(int,int):org.joda.time.Years@isLessThan(org.joda.time.Years):345:getValue() < other.getValue() |==> getValue() <= other.getValue()
6390:ROR:<(int,int):FALSE(int,int):org.joda.time.Years@isLessThan(org.joda.time.Years):345:getValue() < other.getValue() |==> false
6391:STD:<CALL>:<NO-OP>:org.joda.time.chrono.AssembledChronology@<init>(org.joda.time.Chronology,java.lang.Object):102:setFields() |==> <NO-OP>
6392:LVR:POS:0:org.joda.time.chrono.AssembledChronology@getDateTimeMillis(int,int,int,int):118:6 |==> 0
6393:LVR:POS:NEG:org.joda.time.chrono.AssembledChronology@getDateTimeMillis(int,int,int,int):118:6 |==> -6
6394:LOR:&(int,int):^(int,int):org.joda.time.chrono.AssembledChronology@getDateTimeMillis(int,int,int,int):118:iBaseFlags & 6 |==> iBaseFlags ^ 6
6395:LOR:&(int,int):|(int,int):org.joda.time.chrono.AssembledChronology@getDateTimeMillis(int,int,int,int):118:iBaseFlags & 6 |==> iBaseFlags | 6
6396:LVR:POS:0:org.joda.time.chrono.AssembledChronology@getDateTimeMillis(int,int,int,int):118:6 |==> 0
6397:LVR:POS:NEG:org.joda.time.chrono.AssembledChronology@getDateTimeMillis(int,int,int,int):118:6 |==> -6
6398:ROR:==(int,int):<=(int,int):org.joda.time.chrono.AssembledChronology@getDateTimeMillis(int,int,int,int):118:(iBaseFlags & 6) == 6 |==> (iBaseFlags & 6) <= 6
6399:ROR:==(int,int):>=(int,int):org.joda.time.chrono.AssembledChronology@getDateTimeMillis(int,int,int,int):118:(iBaseFlags & 6) == 6 |==> (iBaseFlags & 6) >= 6
6400:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.AssembledChronology@getDateTimeMillis(int,int,int,int):118:(iBaseFlags & 6) == 6 |==> false
6401:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.AssembledChronology@getDateTimeMillis(int,int,int,int):118:(base = iBase) != null && (iBaseFlags & 6) == 6 |==> (base = iBase) != null == ((iBaseFlags & 6) == 6)
6402:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.AssembledChronology@getDateTimeMillis(int,int,int,int):118:(base = iBase) != null && (iBaseFlags & 6) == 6 |==> (base = iBase) != null
6403:LVR:POS:0:org.joda.time.chrono.AssembledChronology@getDateTimeMillis(int,int,int,int,int,int,int):131:5 |==> 0
6404:LVR:POS:NEG:org.joda.time.chrono.AssembledChronology@getDateTimeMillis(int,int,int,int,int,int,int):131:5 |==> -5
6405:LOR:&(int,int):^(int,int):org.joda.time.chrono.AssembledChronology@getDateTimeMillis(int,int,int,int,int,int,int):131:iBaseFlags & 5 |==> iBaseFlags ^ 5
6406:LOR:&(int,int):|(int,int):org.joda.time.chrono.AssembledChronology@getDateTimeMillis(int,int,int,int,int,int,int):131:iBaseFlags & 5 |==> iBaseFlags | 5
6407:LVR:POS:0:org.joda.time.chrono.AssembledChronology@getDateTimeMillis(int,int,int,int,int,int,int):131:5 |==> 0
6408:LVR:POS:NEG:org.joda.time.chrono.AssembledChronology@getDateTimeMillis(int,int,int,int,int,int,int):131:5 |==> -5
6409:ROR:==(int,int):<=(int,int):org.joda.time.chrono.AssembledChronology@getDateTimeMillis(int,int,int,int,int,int,int):131:(iBaseFlags & 5) == 5 |==> (iBaseFlags & 5) <= 5
6410:ROR:==(int,int):>=(int,int):org.joda.time.chrono.AssembledChronology@getDateTimeMillis(int,int,int,int,int,int,int):131:(iBaseFlags & 5) == 5 |==> (iBaseFlags & 5) >= 5
6411:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.AssembledChronology@getDateTimeMillis(int,int,int,int,int,int,int):131:(iBaseFlags & 5) == 5 |==> false
6412:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.AssembledChronology@getDateTimeMillis(int,int,int,int,int,int,int):131:(base = iBase) != null && (iBaseFlags & 5) == 5 |==> (base = iBase) != null == ((iBaseFlags & 5) == 5)
6413:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.AssembledChronology@getDateTimeMillis(int,int,int,int,int,int,int):131:(base = iBase) != null && (iBaseFlags & 5) == 5 |==> (base = iBase) != null
6414:LVR:POS:0:org.joda.time.chrono.AssembledChronology@getDateTimeMillis(long,int,int,int,int):146:1 |==> 0
6415:LVR:POS:NEG:org.joda.time.chrono.AssembledChronology@getDateTimeMillis(long,int,int,int,int):146:1 |==> -1
6416:LOR:&(int,int):^(int,int):org.joda.time.chrono.AssembledChronology@getDateTimeMillis(long,int,int,int,int):146:iBaseFlags & 1 |==> iBaseFlags ^ 1
6417:LOR:&(int,int):|(int,int):org.joda.time.chrono.AssembledChronology@getDateTimeMillis(long,int,int,int,int):146:iBaseFlags & 1 |==> iBaseFlags | 1
6418:LVR:POS:0:org.joda.time.chrono.AssembledChronology@getDateTimeMillis(long,int,int,int,int):146:1 |==> 0
6419:LVR:POS:NEG:org.joda.time.chrono.AssembledChronology@getDateTimeMillis(long,int,int,int,int):146:1 |==> -1
6420:ROR:==(int,int):<=(int,int):org.joda.time.chrono.AssembledChronology@getDateTimeMillis(long,int,int,int,int):146:(iBaseFlags & 1) == 1 |==> (iBaseFlags & 1) <= 1
6421:ROR:==(int,int):>=(int,int):org.joda.time.chrono.AssembledChronology@getDateTimeMillis(long,int,int,int,int):146:(iBaseFlags & 1) == 1 |==> (iBaseFlags & 1) >= 1
6422:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.AssembledChronology@getDateTimeMillis(long,int,int,int,int):146:(iBaseFlags & 1) == 1 |==> false
6423:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.AssembledChronology@getDateTimeMillis(long,int,int,int,int):146:(base = iBase) != null && (iBaseFlags & 1) == 1 |==> (base = iBase) != null == ((iBaseFlags & 1) == 1)
6424:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.AssembledChronology@getDateTimeMillis(long,int,int,int,int):146:(base = iBase) != null && (iBaseFlags & 1) == 1 |==> (base = iBase) != null
6425:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():320:iBase != null |==> true
6426:STD:<CALL>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():321:fields.copyFieldsFrom(iBase) |==> <NO-OP>
6427:STD:<CALL>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():323:assemble(fields) |==> <NO-OP>
6428:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():327:iMillis = (f = fields.millis) != null ? f : super.millis() |==> <NO-OP>
6429:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():328:(f = fields.seconds) != null |==> true
6430:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():328:iSeconds = (f = fields.seconds) != null ? f : super.seconds() |==> <NO-OP>
6431:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():329:(f = fields.minutes) != null |==> true
6432:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():329:iMinutes = (f = fields.minutes) != null ? f : super.minutes() |==> <NO-OP>
6433:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():330:(f = fields.hours) != null |==> true
6434:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():330:iHours = (f = fields.hours) != null ? f : super.hours() |==> <NO-OP>
6435:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():331:(f = fields.halfdays) != null |==> true
6436:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():331:iHalfdays = (f = fields.halfdays) != null ? f : super.halfdays() |==> <NO-OP>
6437:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():332:(f = fields.days) != null |==> true
6438:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():332:iDays = (f = fields.days) != null ? f : super.days() |==> <NO-OP>
6439:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():333:(f = fields.weeks) != null |==> true
6440:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():333:iWeeks = (f = fields.weeks) != null ? f : super.weeks() |==> <NO-OP>
6441:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():334:(f = fields.weekyears) != null |==> true
6442:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():334:iWeekyears = (f = fields.weekyears) != null ? f : super.weekyears() |==> <NO-OP>
6443:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():335:(f = fields.months) != null |==> true
6444:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():335:iMonths = (f = fields.months) != null ? f : super.months() |==> <NO-OP>
6445:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():336:(f = fields.years) != null |==> true
6446:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():336:iYears = (f = fields.years) != null ? f : super.years() |==> <NO-OP>
6447:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():337:(f = fields.centuries) != null |==> true
6448:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():337:iCenturies = (f = fields.centuries) != null ? f : super.centuries() |==> <NO-OP>
6449:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():338:(f = fields.eras) != null |==> true
6450:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():338:iEras = (f = fields.eras) != null ? f : super.eras() |==> <NO-OP>
6451:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():343:iMillisOfSecond = (f = fields.millisOfSecond) != null ? f : super.millisOfSecond() |==> <NO-OP>
6452:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():344:(f = fields.millisOfDay) != null |==> true
6453:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():344:iMillisOfDay = (f = fields.millisOfDay) != null ? f : super.millisOfDay() |==> <NO-OP>
6454:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():345:(f = fields.secondOfMinute) != null |==> true
6455:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():345:iSecondOfMinute = (f = fields.secondOfMinute) != null ? f : super.secondOfMinute() |==> <NO-OP>
6456:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():346:(f = fields.secondOfDay) != null |==> true
6457:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():346:iSecondOfDay = (f = fields.secondOfDay) != null ? f : super.secondOfDay() |==> <NO-OP>
6458:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():347:(f = fields.minuteOfHour) != null |==> true
6459:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():347:iMinuteOfHour = (f = fields.minuteOfHour) != null ? f : super.minuteOfHour() |==> <NO-OP>
6460:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():348:(f = fields.minuteOfDay) != null |==> true
6461:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():348:iMinuteOfDay = (f = fields.minuteOfDay) != null ? f : super.minuteOfDay() |==> <NO-OP>
6462:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():349:(f = fields.hourOfDay) != null |==> true
6463:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():349:iHourOfDay = (f = fields.hourOfDay) != null ? f : super.hourOfDay() |==> <NO-OP>
6464:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():350:(f = fields.clockhourOfDay) != null |==> true
6465:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():350:iClockhourOfDay = (f = fields.clockhourOfDay) != null ? f : super.clockhourOfDay() |==> <NO-OP>
6466:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():351:(f = fields.hourOfHalfday) != null |==> true
6467:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():351:iHourOfHalfday = (f = fields.hourOfHalfday) != null ? f : super.hourOfHalfday() |==> <NO-OP>
6468:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():352:(f = fields.clockhourOfHalfday) != null |==> true
6469:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():352:iClockhourOfHalfday = (f = fields.clockhourOfHalfday) != null ? f : super.clockhourOfHalfday() |==> <NO-OP>
6470:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():353:(f = fields.halfdayOfDay) != null |==> true
6471:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():353:iHalfdayOfDay = (f = fields.halfdayOfDay) != null ? f : super.halfdayOfDay() |==> <NO-OP>
6472:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():354:(f = fields.dayOfWeek) != null |==> true
6473:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():354:iDayOfWeek = (f = fields.dayOfWeek) != null ? f : super.dayOfWeek() |==> <NO-OP>
6474:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():355:(f = fields.dayOfMonth) != null |==> true
6475:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():355:iDayOfMonth = (f = fields.dayOfMonth) != null ? f : super.dayOfMonth() |==> <NO-OP>
6476:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():356:(f = fields.dayOfYear) != null |==> true
6477:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():356:iDayOfYear = (f = fields.dayOfYear) != null ? f : super.dayOfYear() |==> <NO-OP>
6478:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():357:(f = fields.weekOfWeekyear) != null |==> true
6479:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():357:iWeekOfWeekyear = (f = fields.weekOfWeekyear) != null ? f : super.weekOfWeekyear() |==> <NO-OP>
6480:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():358:(f = fields.weekyear) != null |==> true
6481:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():358:iWeekyear = (f = fields.weekyear) != null ? f : super.weekyear() |==> <NO-OP>
6482:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():359:(f = fields.weekyearOfCentury) != null |==> true
6483:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():359:iWeekyearOfCentury = (f = fields.weekyearOfCentury) != null ? f : super.weekyearOfCentury() |==> <NO-OP>
6484:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():360:(f = fields.monthOfYear) != null |==> true
6485:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():360:iMonthOfYear = (f = fields.monthOfYear) != null ? f : super.monthOfYear() |==> <NO-OP>
6486:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():361:(f = fields.year) != null |==> true
6487:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():361:iYear = (f = fields.year) != null ? f : super.year() |==> <NO-OP>
6488:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():362:(f = fields.yearOfEra) != null |==> true
6489:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():362:iYearOfEra = (f = fields.yearOfEra) != null ? f : super.yearOfEra() |==> <NO-OP>
6490:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():363:(f = fields.yearOfCentury) != null |==> true
6491:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():363:iYearOfCentury = (f = fields.yearOfCentury) != null ? f : super.yearOfCentury() |==> <NO-OP>
6492:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():364:(f = fields.centuryOfEra) != null |==> true
6493:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():364:iCenturyOfEra = (f = fields.centuryOfEra) != null ? f : super.centuryOfEra() |==> <NO-OP>
6494:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():365:(f = fields.era) != null |==> true
6495:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():365:iEra = (f = fields.era) != null ? f : super.era() |==> <NO-OP>
6496:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():369:iBase == null |==> false
6497:LVR:0:POS:org.joda.time.chrono.AssembledChronology@setFields():370:0 |==> 1
6498:LVR:0:NEG:org.joda.time.chrono.AssembledChronology@setFields():370:0 |==> -1
6499:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():373:iHourOfDay == iBase.hourOfDay() |==> false
6500:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():374:iMinuteOfHour == iBase.minuteOfHour() |==> false
6501:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.AssembledChronology@setFields():373:iHourOfDay == iBase.hourOfDay() && iMinuteOfHour == iBase.minuteOfHour() |==> iHourOfDay == iBase.hourOfDay() == (iMinuteOfHour == iBase.minuteOfHour())
6502:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.AssembledChronology@setFields():373:iHourOfDay == iBase.hourOfDay() && iMinuteOfHour == iBase.minuteOfHour() |==> false
6503:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.AssembledChronology@setFields():373:iHourOfDay == iBase.hourOfDay() && iMinuteOfHour == iBase.minuteOfHour() |==> iHourOfDay == iBase.hourOfDay()
6504:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.AssembledChronology@setFields():374:iHourOfDay == iBase.hourOfDay() && iMinuteOfHour == iBase.minuteOfHour() |==> iMinuteOfHour == iBase.minuteOfHour()
6505:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():375:iSecondOfMinute == iBase.secondOfMinute() |==> false
6506:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.AssembledChronology@setFields():373:iHourOfDay == iBase.hourOfDay() && iMinuteOfHour == iBase.minuteOfHour() && iSecondOfMinute == iBase.secondOfMinute() |==> (iHourOfDay == iBase.hourOfDay() && iMinuteOfHour == iBase.minuteOfHour()) == (iSecondOfMinute == iBase.secondOfMinute())
6507:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.AssembledChronology@setFields():374:iHourOfDay == iBase.hourOfDay() && iMinuteOfHour == iBase.minuteOfHour() && iSecondOfMinute == iBase.secondOfMinute() |==> false
6508:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.AssembledChronology@setFields():373:iHourOfDay == iBase.hourOfDay() && iMinuteOfHour == iBase.minuteOfHour() && iSecondOfMinute == iBase.secondOfMinute() |==> iHourOfDay == iBase.hourOfDay() && iMinuteOfHour == iBase.minuteOfHour()
6509:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.AssembledChronology@setFields():375:iHourOfDay == iBase.hourOfDay() && iMinuteOfHour == iBase.minuteOfHour() && iSecondOfMinute == iBase.secondOfMinute() |==> iSecondOfMinute == iBase.secondOfMinute()
6510:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():376:iMillisOfSecond == iBase.millisOfSecond() |==> false
6511:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.AssembledChronology@setFields():373:iHourOfDay == iBase.hourOfDay() && iMinuteOfHour == iBase.minuteOfHour() && iSecondOfMinute == iBase.secondOfMinute() && iMillisOfSecond == iBase.millisOfSecond() |==> (iHourOfDay == iBase.hourOfDay() && iMinuteOfHour == iBase.minuteOfHour() && iSecondOfMinute == iBase.secondOfMinute()) == (iMillisOfSecond == iBase.millisOfSecond())
6512:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.AssembledChronology@setFields():375:iHourOfDay == iBase.hourOfDay() && iMinuteOfHour == iBase.minuteOfHour() && iSecondOfMinute == iBase.secondOfMinute() && iMillisOfSecond == iBase.millisOfSecond() |==> false
6513:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.AssembledChronology@setFields():373:iHourOfDay == iBase.hourOfDay() && iMinuteOfHour == iBase.minuteOfHour() && iSecondOfMinute == iBase.secondOfMinute() && iMillisOfSecond == iBase.millisOfSecond() |==> iHourOfDay == iBase.hourOfDay() && iMinuteOfHour == iBase.minuteOfHour() && iSecondOfMinute == iBase.secondOfMinute()
6514:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.AssembledChronology@setFields():376:iHourOfDay == iBase.hourOfDay() && iMinuteOfHour == iBase.minuteOfHour() && iSecondOfMinute == iBase.secondOfMinute() && iMillisOfSecond == iBase.millisOfSecond() |==> iMillisOfSecond == iBase.millisOfSecond()
6515:LVR:POS:0:org.joda.time.chrono.AssembledChronology@setFields():376:1 |==> 0
6516:LVR:POS:NEG:org.joda.time.chrono.AssembledChronology@setFields():376:1 |==> -1
6517:LVR:0:POS:org.joda.time.chrono.AssembledChronology@setFields():376:0 |==> 1
6518:LVR:0:NEG:org.joda.time.chrono.AssembledChronology@setFields():376:0 |==> -1
6519:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():378:iMillisOfDay == iBase.millisOfDay() |==> false
6520:LVR:POS:0:org.joda.time.chrono.AssembledChronology@setFields():378:2 |==> 0
6521:LVR:POS:NEG:org.joda.time.chrono.AssembledChronology@setFields():378:2 |==> -2
6522:LVR:0:POS:org.joda.time.chrono.AssembledChronology@setFields():378:0 |==> 1
6523:LVR:0:NEG:org.joda.time.chrono.AssembledChronology@setFields():378:0 |==> -1
6524:LOR:|(int,int):&(int,int):org.joda.time.chrono.AssembledChronology@setFields():373:((iHourOfDay == iBase.hourOfDay() && iMinuteOfHour == iBase.minuteOfHour() && iSecondOfMinute == iBase.secondOfMinute() && iMillisOfSecond == iBase.millisOfSecond()) ? 1 : 0) | ((iMillisOfDay == iBase.millisOfDay()) ? 2 : 0) |==> ((iHourOfDay == iBase.hourOfDay() && iMinuteOfHour == iBase.minuteOfHour() && iSecondOfMinute == iBase.secondOfMinute() && iMillisOfSecond == iBase.millisOfSecond()) ? 1 : 0) & ((iMillisOfDay == iBase.millisOfDay()) ? 2 : 0)
6525:LOR:|(int,int):^(int,int):org.joda.time.chrono.AssembledChronology@setFields():373:((iHourOfDay == iBase.hourOfDay() && iMinuteOfHour == iBase.minuteOfHour() && iSecondOfMinute == iBase.secondOfMinute() && iMillisOfSecond == iBase.millisOfSecond()) ? 1 : 0) | ((iMillisOfDay == iBase.millisOfDay()) ? 2 : 0) |==> ((iHourOfDay == iBase.hourOfDay() && iMinuteOfHour == iBase.minuteOfHour() && iSecondOfMinute == iBase.secondOfMinute() && iMillisOfSecond == iBase.millisOfSecond()) ? 1 : 0) ^ ((iMillisOfDay == iBase.millisOfDay()) ? 2 : 0)
6526:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():380:iYear == iBase.year() |==> false
6527:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():381:iMonthOfYear == iBase.monthOfYear() |==> false
6528:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.AssembledChronology@setFields():380:iYear == iBase.year() && iMonthOfYear == iBase.monthOfYear() |==> iYear == iBase.year() == (iMonthOfYear == iBase.monthOfYear())
6529:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.AssembledChronology@setFields():380:iYear == iBase.year() && iMonthOfYear == iBase.monthOfYear() |==> false
6530:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.AssembledChronology@setFields():380:iYear == iBase.year() && iMonthOfYear == iBase.monthOfYear() |==> iYear == iBase.year()
6531:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.AssembledChronology@setFields():381:iYear == iBase.year() && iMonthOfYear == iBase.monthOfYear() |==> iMonthOfYear == iBase.monthOfYear()
6532:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology@setFields():382:iDayOfMonth == iBase.dayOfMonth() |==> false
6533:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.AssembledChronology@setFields():380:iYear == iBase.year() && iMonthOfYear == iBase.monthOfYear() && iDayOfMonth == iBase.dayOfMonth() |==> (iYear == iBase.year() && iMonthOfYear == iBase.monthOfYear()) == (iDayOfMonth == iBase.dayOfMonth())
6534:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.AssembledChronology@setFields():381:iYear == iBase.year() && iMonthOfYear == iBase.monthOfYear() && iDayOfMonth == iBase.dayOfMonth() |==> false
6535:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.AssembledChronology@setFields():380:iYear == iBase.year() && iMonthOfYear == iBase.monthOfYear() && iDayOfMonth == iBase.dayOfMonth() |==> iYear == iBase.year() && iMonthOfYear == iBase.monthOfYear()
6536:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.AssembledChronology@setFields():382:iYear == iBase.year() && iMonthOfYear == iBase.monthOfYear() && iDayOfMonth == iBase.dayOfMonth() |==> iDayOfMonth == iBase.dayOfMonth()
6537:LVR:POS:0:org.joda.time.chrono.AssembledChronology@setFields():382:4 |==> 0
6538:LVR:POS:NEG:org.joda.time.chrono.AssembledChronology@setFields():382:4 |==> -4
6539:LVR:0:POS:org.joda.time.chrono.AssembledChronology@setFields():382:0 |==> 1
6540:LVR:0:NEG:org.joda.time.chrono.AssembledChronology@setFields():382:0 |==> -1
6541:LOR:|(int,int):&(int,int):org.joda.time.chrono.AssembledChronology@setFields():373:((iHourOfDay == iBase.hourOfDay() && iMinuteOfHour == iBase.minuteOfHour() && iSecondOfMinute == iBase.secondOfMinute() && iMillisOfSecond == iBase.millisOfSecond()) ? 1 : 0) | ((iMillisOfDay == iBase.millisOfDay()) ? 2 : 0) | ((iYear == iBase.year() && iMonthOfYear == iBase.monthOfYear() && iDayOfMonth == iBase.dayOfMonth()) ? 4 : 0) |==> (((iHourOfDay == iBase.hourOfDay() && iMinuteOfHour == iBase.minuteOfHour() && iSecondOfMinute == iBase.secondOfMinute() && iMillisOfSecond == iBase.millisOfSecond()) ? 1 : 0) | ((iMillisOfDay == iBase.millisOfDay()) ? 2 : 0)) & ((iYear == iBase.year() && iMonthOfYear == iBase.monthOfYear() && iDayOfMonth == iBase.dayOfMonth()) ? 4 : 0)
6542:LOR:|(int,int):^(int,int):org.joda.time.chrono.AssembledChronology@setFields():373:((iHourOfDay == iBase.hourOfDay() && iMinuteOfHour == iBase.minuteOfHour() && iSecondOfMinute == iBase.secondOfMinute() && iMillisOfSecond == iBase.millisOfSecond()) ? 1 : 0) | ((iMillisOfDay == iBase.millisOfDay()) ? 2 : 0) | ((iYear == iBase.year() && iMonthOfYear == iBase.monthOfYear() && iDayOfMonth == iBase.dayOfMonth()) ? 4 : 0) |==> (((iHourOfDay == iBase.hourOfDay() && iMinuteOfHour == iBase.minuteOfHour() && iSecondOfMinute == iBase.secondOfMinute() && iMillisOfSecond == iBase.millisOfSecond()) ? 1 : 0) | ((iMillisOfDay == iBase.millisOfDay()) ? 2 : 0)) ^ ((iYear == iBase.year() && iMonthOfYear == iBase.monthOfYear() && iDayOfMonth == iBase.dayOfMonth()) ? 4 : 0)
6543:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology@setFields():385:iBaseFlags = flags |==> <NO-OP>
6544:STD:<CALL>:<NO-OP>:org.joda.time.chrono.AssembledChronology@readObject(java.io.ObjectInputStream):389:in.defaultReadObject() |==> <NO-OP>
6545:STD:<CALL>:<NO-OP>:org.joda.time.chrono.AssembledChronology@readObject(java.io.ObjectInputStream):390:setFields() |==> <NO-OP>
6546:COR:isSupported(f = chrono.millis()):TRUE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):445:isSupported(f = chrono.millis()) |==> false
6547:COR:isSupported(f = chrono.millis()):FALSE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):445:isSupported(f = chrono.millis()) |==> true
6548:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):446:millis = f |==> <NO-OP>
6549:COR:isSupported(f = chrono.seconds()):TRUE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):448:isSupported(f = chrono.seconds()) |==> false
6550:COR:isSupported(f = chrono.seconds()):FALSE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):448:isSupported(f = chrono.seconds()) |==> true
6551:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):449:seconds = f |==> <NO-OP>
6552:COR:isSupported(f = chrono.minutes()):TRUE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):451:isSupported(f = chrono.minutes()) |==> false
6553:COR:isSupported(f = chrono.minutes()):FALSE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):451:isSupported(f = chrono.minutes()) |==> true
6554:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):452:minutes = f |==> <NO-OP>
6555:COR:isSupported(f = chrono.hours()):TRUE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):454:isSupported(f = chrono.hours()) |==> false
6556:COR:isSupported(f = chrono.hours()):FALSE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):454:isSupported(f = chrono.hours()) |==> true
6557:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):455:hours = f |==> <NO-OP>
6558:COR:isSupported(f = chrono.halfdays()):TRUE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):457:isSupported(f = chrono.halfdays()) |==> false
6559:COR:isSupported(f = chrono.halfdays()):FALSE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):457:isSupported(f = chrono.halfdays()) |==> true
6560:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):458:halfdays = f |==> <NO-OP>
6561:COR:isSupported(f = chrono.days()):TRUE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):460:isSupported(f = chrono.days()) |==> false
6562:COR:isSupported(f = chrono.days()):FALSE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):460:isSupported(f = chrono.days()) |==> true
6563:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):461:days = f |==> <NO-OP>
6564:COR:isSupported(f = chrono.weeks()):TRUE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):463:isSupported(f = chrono.weeks()) |==> false
6565:COR:isSupported(f = chrono.weeks()):FALSE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):463:isSupported(f = chrono.weeks()) |==> true
6566:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):464:weeks = f |==> <NO-OP>
6567:COR:isSupported(f = chrono.weekyears()):TRUE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):466:isSupported(f = chrono.weekyears()) |==> false
6568:COR:isSupported(f = chrono.weekyears()):FALSE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):466:isSupported(f = chrono.weekyears()) |==> true
6569:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):467:weekyears = f |==> <NO-OP>
6570:COR:isSupported(f = chrono.months()):TRUE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):469:isSupported(f = chrono.months()) |==> false
6571:COR:isSupported(f = chrono.months()):FALSE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):469:isSupported(f = chrono.months()) |==> true
6572:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):470:months = f |==> <NO-OP>
6573:COR:isSupported(f = chrono.years()):TRUE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):472:isSupported(f = chrono.years()) |==> false
6574:COR:isSupported(f = chrono.years()):FALSE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):472:isSupported(f = chrono.years()) |==> true
6575:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):473:years = f |==> <NO-OP>
6576:COR:isSupported(f = chrono.centuries()):TRUE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):475:isSupported(f = chrono.centuries()) |==> false
6577:COR:isSupported(f = chrono.centuries()):FALSE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):475:isSupported(f = chrono.centuries()) |==> true
6578:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):476:centuries = f |==> <NO-OP>
6579:COR:isSupported(f = chrono.eras()):TRUE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):478:isSupported(f = chrono.eras()) |==> false
6580:COR:isSupported(f = chrono.eras()):FALSE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):478:isSupported(f = chrono.eras()) |==> true
6581:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):479:eras = f |==> <NO-OP>
6582:COR:isSupported(f = chrono.millisOfSecond()):TRUE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):485:isSupported(f = chrono.millisOfSecond()) |==> false
6583:COR:isSupported(f = chrono.millisOfSecond()):FALSE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):485:isSupported(f = chrono.millisOfSecond()) |==> true
6584:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):486:millisOfSecond = f |==> <NO-OP>
6585:COR:isSupported(f = chrono.millisOfDay()):TRUE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):488:isSupported(f = chrono.millisOfDay()) |==> false
6586:COR:isSupported(f = chrono.millisOfDay()):FALSE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):488:isSupported(f = chrono.millisOfDay()) |==> true
6587:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):489:millisOfDay = f |==> <NO-OP>
6588:COR:isSupported(f = chrono.secondOfMinute()):TRUE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):491:isSupported(f = chrono.secondOfMinute()) |==> false
6589:COR:isSupported(f = chrono.secondOfMinute()):FALSE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):491:isSupported(f = chrono.secondOfMinute()) |==> true
6590:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):492:secondOfMinute = f |==> <NO-OP>
6591:COR:isSupported(f = chrono.secondOfDay()):TRUE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):494:isSupported(f = chrono.secondOfDay()) |==> false
6592:COR:isSupported(f = chrono.secondOfDay()):FALSE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):494:isSupported(f = chrono.secondOfDay()) |==> true
6593:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):495:secondOfDay = f |==> <NO-OP>
6594:COR:isSupported(f = chrono.minuteOfHour()):TRUE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):497:isSupported(f = chrono.minuteOfHour()) |==> false
6595:COR:isSupported(f = chrono.minuteOfHour()):FALSE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):497:isSupported(f = chrono.minuteOfHour()) |==> true
6596:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):498:minuteOfHour = f |==> <NO-OP>
6597:COR:isSupported(f = chrono.minuteOfDay()):TRUE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):500:isSupported(f = chrono.minuteOfDay()) |==> false
6598:COR:isSupported(f = chrono.minuteOfDay()):FALSE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):500:isSupported(f = chrono.minuteOfDay()) |==> true
6599:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):501:minuteOfDay = f |==> <NO-OP>
6600:COR:isSupported(f = chrono.hourOfDay()):TRUE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):503:isSupported(f = chrono.hourOfDay()) |==> false
6601:COR:isSupported(f = chrono.hourOfDay()):FALSE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):503:isSupported(f = chrono.hourOfDay()) |==> true
6602:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):504:hourOfDay = f |==> <NO-OP>
6603:COR:isSupported(f = chrono.clockhourOfDay()):TRUE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):506:isSupported(f = chrono.clockhourOfDay()) |==> false
6604:COR:isSupported(f = chrono.clockhourOfDay()):FALSE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):506:isSupported(f = chrono.clockhourOfDay()) |==> true
6605:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):507:clockhourOfDay = f |==> <NO-OP>
6606:COR:isSupported(f = chrono.hourOfHalfday()):TRUE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):509:isSupported(f = chrono.hourOfHalfday()) |==> false
6607:COR:isSupported(f = chrono.hourOfHalfday()):FALSE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):509:isSupported(f = chrono.hourOfHalfday()) |==> true
6608:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):510:hourOfHalfday = f |==> <NO-OP>
6609:COR:isSupported(f = chrono.clockhourOfHalfday()):TRUE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):512:isSupported(f = chrono.clockhourOfHalfday()) |==> false
6610:COR:isSupported(f = chrono.clockhourOfHalfday()):FALSE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):512:isSupported(f = chrono.clockhourOfHalfday()) |==> true
6611:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):513:clockhourOfHalfday = f |==> <NO-OP>
6612:COR:isSupported(f = chrono.halfdayOfDay()):TRUE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):515:isSupported(f = chrono.halfdayOfDay()) |==> false
6613:COR:isSupported(f = chrono.halfdayOfDay()):FALSE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):515:isSupported(f = chrono.halfdayOfDay()) |==> true
6614:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):516:halfdayOfDay = f |==> <NO-OP>
6615:COR:isSupported(f = chrono.dayOfWeek()):TRUE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):518:isSupported(f = chrono.dayOfWeek()) |==> false
6616:COR:isSupported(f = chrono.dayOfWeek()):FALSE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):518:isSupported(f = chrono.dayOfWeek()) |==> true
6617:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):519:dayOfWeek = f |==> <NO-OP>
6618:COR:isSupported(f = chrono.dayOfMonth()):TRUE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):521:isSupported(f = chrono.dayOfMonth()) |==> false
6619:COR:isSupported(f = chrono.dayOfMonth()):FALSE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):521:isSupported(f = chrono.dayOfMonth()) |==> true
6620:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):522:dayOfMonth = f |==> <NO-OP>
6621:COR:isSupported(f = chrono.dayOfYear()):TRUE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):524:isSupported(f = chrono.dayOfYear()) |==> false
6622:COR:isSupported(f = chrono.dayOfYear()):FALSE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):524:isSupported(f = chrono.dayOfYear()) |==> true
6623:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):525:dayOfYear = f |==> <NO-OP>
6624:COR:isSupported(f = chrono.weekOfWeekyear()):TRUE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):527:isSupported(f = chrono.weekOfWeekyear()) |==> false
6625:COR:isSupported(f = chrono.weekOfWeekyear()):FALSE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):527:isSupported(f = chrono.weekOfWeekyear()) |==> true
6626:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):528:weekOfWeekyear = f |==> <NO-OP>
6627:COR:isSupported(f = chrono.weekyear()):TRUE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):530:isSupported(f = chrono.weekyear()) |==> false
6628:COR:isSupported(f = chrono.weekyear()):FALSE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):530:isSupported(f = chrono.weekyear()) |==> true
6629:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):531:weekyear = f |==> <NO-OP>
6630:COR:isSupported(f = chrono.weekyearOfCentury()):TRUE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):533:isSupported(f = chrono.weekyearOfCentury()) |==> false
6631:COR:isSupported(f = chrono.weekyearOfCentury()):FALSE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):533:isSupported(f = chrono.weekyearOfCentury()) |==> true
6632:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):534:weekyearOfCentury = f |==> <NO-OP>
6633:COR:isSupported(f = chrono.monthOfYear()):TRUE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):536:isSupported(f = chrono.monthOfYear()) |==> false
6634:COR:isSupported(f = chrono.monthOfYear()):FALSE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):536:isSupported(f = chrono.monthOfYear()) |==> true
6635:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):537:monthOfYear = f |==> <NO-OP>
6636:COR:isSupported(f = chrono.year()):TRUE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):539:isSupported(f = chrono.year()) |==> false
6637:COR:isSupported(f = chrono.year()):FALSE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):539:isSupported(f = chrono.year()) |==> true
6638:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):540:year = f |==> <NO-OP>
6639:COR:isSupported(f = chrono.yearOfEra()):TRUE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):542:isSupported(f = chrono.yearOfEra()) |==> false
6640:COR:isSupported(f = chrono.yearOfEra()):FALSE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):542:isSupported(f = chrono.yearOfEra()) |==> true
6641:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):543:yearOfEra = f |==> <NO-OP>
6642:COR:isSupported(f = chrono.yearOfCentury()):TRUE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):545:isSupported(f = chrono.yearOfCentury()) |==> false
6643:COR:isSupported(f = chrono.yearOfCentury()):FALSE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):545:isSupported(f = chrono.yearOfCentury()) |==> true
6644:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):546:yearOfCentury = f |==> <NO-OP>
6645:COR:isSupported(f = chrono.centuryOfEra()):TRUE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):548:isSupported(f = chrono.centuryOfEra()) |==> false
6646:COR:isSupported(f = chrono.centuryOfEra()):FALSE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):548:isSupported(f = chrono.centuryOfEra()) |==> true
6647:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):549:centuryOfEra = f |==> <NO-OP>
6648:COR:isSupported(f = chrono.era()):TRUE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):551:isSupported(f = chrono.era()) |==> false
6649:COR:isSupported(f = chrono.era()):FALSE:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):551:isSupported(f = chrono.era()) |==> true
6650:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.AssembledChronology$Fields@copyFieldsFrom(org.joda.time.Chronology):552:era = f |==> <NO-OP>
6651:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology$Fields@isSupported(org.joda.time.DurationField):558:field == null |==> false
6652:LVR:FALSE:TRUE:org.joda.time.chrono.AssembledChronology$Fields@isSupported(org.joda.time.DurationField):558:false |==> true
6653:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.AssembledChronology$Fields@isSupported(org.joda.time.DateTimeField):562:field == null |==> false
6654:LVR:FALSE:TRUE:org.joda.time.chrono.AssembledChronology$Fields@isSupported(org.joda.time.DateTimeField):562:false |==> true
6655:LVR:POS:0:org.joda.time.chrono.BasicChronology:84:2 |==> 0
6656:LVR:POS:NEG:org.joda.time.chrono.BasicChronology:84:2 |==> -2
6657:AOR:/(int,int):%(int,int):org.joda.time.chrono.BasicChronology:84:DateTimeConstants.MILLIS_PER_DAY / 2 |==> DateTimeConstants.MILLIS_PER_DAY % 2
6658:AOR:/(int,int):*(int,int):org.joda.time.chrono.BasicChronology:84:DateTimeConstants.MILLIS_PER_DAY / 2 |==> DateTimeConstants.MILLIS_PER_DAY * 2
6659:AOR:/(int,int):+(int,int):org.joda.time.chrono.BasicChronology:84:DateTimeConstants.MILLIS_PER_DAY / 2 |==> DateTimeConstants.MILLIS_PER_DAY + 2
6660:AOR:/(int,int):-(int,int):org.joda.time.chrono.BasicChronology:84:DateTimeConstants.MILLIS_PER_DAY / 2 |==> DateTimeConstants.MILLIS_PER_DAY - 2
6661:LVR:POS:0:org.joda.time.chrono.BasicChronology@<init>(org.joda.time.Chronology,java.lang.Object,int):133:1 |==> 0
6662:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@<init>(org.joda.time.Chronology,java.lang.Object,int):133:1 |==> -1
6663:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BasicChronology@<init>(org.joda.time.Chronology,java.lang.Object,int):133:minDaysInFirstWeek < 1 |==> minDaysInFirstWeek != 1
6664:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BasicChronology@<init>(org.joda.time.Chronology,java.lang.Object,int):133:minDaysInFirstWeek < 1 |==> minDaysInFirstWeek <= 1
6665:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BasicChronology@<init>(org.joda.time.Chronology,java.lang.Object,int):133:minDaysInFirstWeek < 1 |==> false
6666:LVR:POS:0:org.joda.time.chrono.BasicChronology@<init>(org.joda.time.Chronology,java.lang.Object,int):133:7 |==> 0
6667:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@<init>(org.joda.time.Chronology,java.lang.Object,int):133:7 |==> -7
6668:ROR:>(int,int):!=(int,int):org.joda.time.chrono.BasicChronology@<init>(org.joda.time.Chronology,java.lang.Object,int):133:minDaysInFirstWeek > 7 |==> minDaysInFirstWeek != 7
6669:ROR:>(int,int):>=(int,int):org.joda.time.chrono.BasicChronology@<init>(org.joda.time.Chronology,java.lang.Object,int):133:minDaysInFirstWeek > 7 |==> minDaysInFirstWeek >= 7
6670:ROR:>(int,int):FALSE(int,int):org.joda.time.chrono.BasicChronology@<init>(org.joda.time.Chronology,java.lang.Object,int):133:minDaysInFirstWeek > 7 |==> false
6671:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.chrono.BasicChronology@<init>(org.joda.time.Chronology,java.lang.Object,int):133:minDaysInFirstWeek < 1 || minDaysInFirstWeek > 7 |==> minDaysInFirstWeek < 1 != minDaysInFirstWeek > 7
6672:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.BasicChronology@<init>(org.joda.time.Chronology,java.lang.Object,int):133:minDaysInFirstWeek < 1 || minDaysInFirstWeek > 7 |==> minDaysInFirstWeek < 1
6673:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.BasicChronology@<init>(org.joda.time.Chronology,java.lang.Object,int):133:minDaysInFirstWeek < 1 || minDaysInFirstWeek > 7 |==> minDaysInFirstWeek > 7
6674:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.chrono.BasicChronology@<init>(org.joda.time.Chronology,java.lang.Object,int):133:minDaysInFirstWeek < 1 || minDaysInFirstWeek > 7 |==> true
6675:LVR:0:POS:org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int):158:0 |==> 1
6676:LVR:0:NEG:org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int):158:0 |==> -1
6677:LVR:POS:0:org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int):158:1 |==> 0
6678:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int):158:1 |==> -1
6679:AOR:-(int,int):%(int,int):org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int):158:DateTimeConstants.MILLIS_PER_DAY - 1 |==> DateTimeConstants.MILLIS_PER_DAY % 1
6680:AOR:-(int,int):*(int,int):org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int):158:DateTimeConstants.MILLIS_PER_DAY - 1 |==> DateTimeConstants.MILLIS_PER_DAY * 1
6681:AOR:-(int,int):+(int,int):org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int):158:DateTimeConstants.MILLIS_PER_DAY - 1 |==> DateTimeConstants.MILLIS_PER_DAY + 1
6682:AOR:-(int,int):/(int,int):org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int):158:DateTimeConstants.MILLIS_PER_DAY - 1 |==> DateTimeConstants.MILLIS_PER_DAY / 1
6683:STD:<CALL>:<NO-OP>:org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int):157:FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfDay(), millisOfDay, 0, DateTimeConstants.MILLIS_PER_DAY - 1) |==> <NO-OP>
6684:AOR:+(long,long):%(long,long):org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int):159:getDateMidnightMillis(year, monthOfYear, dayOfMonth) + millisOfDay |==> getDateMidnightMillis(year, monthOfYear, dayOfMonth) % millisOfDay
6685:AOR:+(long,long):*(long,long):org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int):159:getDateMidnightMillis(year, monthOfYear, dayOfMonth) + millisOfDay |==> getDateMidnightMillis(year, monthOfYear, dayOfMonth) * millisOfDay
6686:AOR:+(long,long):-(long,long):org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int):159:getDateMidnightMillis(year, monthOfYear, dayOfMonth) + millisOfDay |==> getDateMidnightMillis(year, monthOfYear, dayOfMonth) - millisOfDay
6687:AOR:+(long,long):/(long,long):org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int):159:getDateMidnightMillis(year, monthOfYear, dayOfMonth) + millisOfDay |==> getDateMidnightMillis(year, monthOfYear, dayOfMonth) / millisOfDay
6688:LVR:0:POS:org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):172:0 |==> 1
6689:LVR:0:NEG:org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):172:0 |==> -1
6690:LVR:POS:0:org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):172:23 |==> 0
6691:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):172:23 |==> -23
6692:STD:<CALL>:<NO-OP>:org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):172:FieldUtils.verifyValueBounds(DateTimeFieldType.hourOfDay(), hourOfDay, 0, 23) |==> <NO-OP>
6693:LVR:0:POS:org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):173:0 |==> 1
6694:LVR:0:NEG:org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):173:0 |==> -1
6695:LVR:POS:0:org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):173:59 |==> 0
6696:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):173:59 |==> -59
6697:STD:<CALL>:<NO-OP>:org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):173:FieldUtils.verifyValueBounds(DateTimeFieldType.minuteOfHour(), minuteOfHour, 0, 59) |==> <NO-OP>
6698:LVR:0:POS:org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):174:0 |==> 1
6699:LVR:0:NEG:org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):174:0 |==> -1
6700:LVR:POS:0:org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):174:59 |==> 0
6701:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):174:59 |==> -59
6702:STD:<CALL>:<NO-OP>:org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):174:FieldUtils.verifyValueBounds(DateTimeFieldType.secondOfMinute(), secondOfMinute, 0, 59) |==> <NO-OP>
6703:LVR:0:POS:org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):175:0 |==> 1
6704:LVR:0:NEG:org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):175:0 |==> -1
6705:LVR:POS:0:org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):175:999 |==> 0
6706:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):175:999 |==> -999
6707:STD:<CALL>:<NO-OP>:org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):175:FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfSecond(), millisOfSecond, 0, 999) |==> <NO-OP>
6708:AOR:*(int,int):%(int,int):org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):178:hourOfDay * DateTimeConstants.MILLIS_PER_HOUR |==> hourOfDay % DateTimeConstants.MILLIS_PER_HOUR
6709:AOR:*(int,int):+(int,int):org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):178:hourOfDay * DateTimeConstants.MILLIS_PER_HOUR |==> hourOfDay + DateTimeConstants.MILLIS_PER_HOUR
6710:AOR:*(int,int):-(int,int):org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):178:hourOfDay * DateTimeConstants.MILLIS_PER_HOUR |==> hourOfDay - DateTimeConstants.MILLIS_PER_HOUR
6711:AOR:*(int,int):/(int,int):org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):178:hourOfDay * DateTimeConstants.MILLIS_PER_HOUR |==> hourOfDay / DateTimeConstants.MILLIS_PER_HOUR
6712:AOR:+(long,long):%(long,long):org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):177:getDateMidnightMillis(year, monthOfYear, dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR |==> getDateMidnightMillis(year, monthOfYear, dayOfMonth) % (hourOfDay * DateTimeConstants.MILLIS_PER_HOUR)
6713:AOR:+(long,long):*(long,long):org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):177:getDateMidnightMillis(year, monthOfYear, dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR |==> getDateMidnightMillis(year, monthOfYear, dayOfMonth) * (hourOfDay * DateTimeConstants.MILLIS_PER_HOUR)
6714:AOR:+(long,long):-(long,long):org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):177:getDateMidnightMillis(year, monthOfYear, dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR |==> getDateMidnightMillis(year, monthOfYear, dayOfMonth) - hourOfDay * DateTimeConstants.MILLIS_PER_HOUR
6715:AOR:+(long,long):/(long,long):org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):177:getDateMidnightMillis(year, monthOfYear, dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR |==> getDateMidnightMillis(year, monthOfYear, dayOfMonth) / (hourOfDay * DateTimeConstants.MILLIS_PER_HOUR)
6716:AOR:*(int,int):%(int,int):org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):179:minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE |==> minuteOfHour % DateTimeConstants.MILLIS_PER_MINUTE
6717:AOR:*(int,int):+(int,int):org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):179:minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE |==> minuteOfHour + DateTimeConstants.MILLIS_PER_MINUTE
6718:AOR:*(int,int):-(int,int):org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):179:minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE |==> minuteOfHour - DateTimeConstants.MILLIS_PER_MINUTE
6719:AOR:*(int,int):/(int,int):org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):179:minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE |==> minuteOfHour / DateTimeConstants.MILLIS_PER_MINUTE
6720:AOR:+(long,long):%(long,long):org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):177:getDateMidnightMillis(year, monthOfYear, dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE |==> (getDateMidnightMillis(year, monthOfYear, dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR) % (minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE)
6721:AOR:+(long,long):*(long,long):org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):177:getDateMidnightMillis(year, monthOfYear, dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE |==> (getDateMidnightMillis(year, monthOfYear, dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR) * (minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE)
6722:AOR:+(long,long):-(long,long):org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):177:getDateMidnightMillis(year, monthOfYear, dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE |==> getDateMidnightMillis(year, monthOfYear, dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR - minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE
6723:AOR:+(long,long):/(long,long):org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):177:getDateMidnightMillis(year, monthOfYear, dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE |==> (getDateMidnightMillis(year, monthOfYear, dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR) / (minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE)
6724:AOR:*(int,int):%(int,int):org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):180:secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND |==> secondOfMinute % DateTimeConstants.MILLIS_PER_SECOND
6725:AOR:*(int,int):+(int,int):org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):180:secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND |==> secondOfMinute + DateTimeConstants.MILLIS_PER_SECOND
6726:AOR:*(int,int):-(int,int):org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):180:secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND |==> secondOfMinute - DateTimeConstants.MILLIS_PER_SECOND
6727:AOR:*(int,int):/(int,int):org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):180:secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND |==> secondOfMinute / DateTimeConstants.MILLIS_PER_SECOND
6728:AOR:+(long,long):%(long,long):org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):177:getDateMidnightMillis(year, monthOfYear, dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND |==> (getDateMidnightMillis(year, monthOfYear, dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE) % (secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND)
6729:AOR:+(long,long):*(long,long):org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):177:getDateMidnightMillis(year, monthOfYear, dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND |==> (getDateMidnightMillis(year, monthOfYear, dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE) * (secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND)
6730:AOR:+(long,long):-(long,long):org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):177:getDateMidnightMillis(year, monthOfYear, dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND |==> getDateMidnightMillis(year, monthOfYear, dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE - secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND
6731:AOR:+(long,long):/(long,long):org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):177:getDateMidnightMillis(year, monthOfYear, dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND |==> (getDateMidnightMillis(year, monthOfYear, dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE) / (secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND)
6732:AOR:+(long,long):%(long,long):org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):177:getDateMidnightMillis(year, monthOfYear, dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND + millisOfSecond |==> (getDateMidnightMillis(year, monthOfYear, dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND) % millisOfSecond
6733:AOR:+(long,long):*(long,long):org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):177:getDateMidnightMillis(year, monthOfYear, dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND + millisOfSecond |==> (getDateMidnightMillis(year, monthOfYear, dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND) * millisOfSecond
6734:AOR:+(long,long):-(long,long):org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):177:getDateMidnightMillis(year, monthOfYear, dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND + millisOfSecond |==> getDateMidnightMillis(year, monthOfYear, dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND - millisOfSecond
6735:AOR:+(long,long):/(long,long):org.joda.time.chrono.BasicChronology@getDateTimeMillis(int,int,int,int,int,int,int):177:getDateMidnightMillis(year, monthOfYear, dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND + millisOfSecond |==> (getDateMidnightMillis(year, monthOfYear, dayOfMonth) + hourOfDay * DateTimeConstants.MILLIS_PER_HOUR + minuteOfHour * DateTimeConstants.MILLIS_PER_MINUTE + secondOfMinute * DateTimeConstants.MILLIS_PER_SECOND) / millisOfSecond
6736:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.BasicChronology@equals(java.lang.Object):197:this == obj |==> false
6737:LVR:TRUE:FALSE:org.joda.time.chrono.BasicChronology@equals(java.lang.Object):198:true |==> false
6738:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.BasicChronology@equals(java.lang.Object):200:obj != null |==> true
6739:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.BasicChronology@equals(java.lang.Object):200:getClass() == obj.getClass() |==> false
6740:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.BasicChronology@equals(java.lang.Object):200:obj != null && getClass() == obj.getClass() |==> obj != null == (getClass() == obj.getClass())
6741:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.BasicChronology@equals(java.lang.Object):200:obj != null && getClass() == obj.getClass() |==> false
6742:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.BasicChronology@equals(java.lang.Object):200:obj != null && getClass() == obj.getClass() |==> obj != null
6743:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.BasicChronology@equals(java.lang.Object):200:obj != null && getClass() == obj.getClass() |==> getClass() == obj.getClass()
6744:ROR:==(int,int):<=(int,int):org.joda.time.chrono.BasicChronology@equals(java.lang.Object):202:getMinimumDaysInFirstWeek() == chrono.getMinimumDaysInFirstWeek() |==> getMinimumDaysInFirstWeek() <= chrono.getMinimumDaysInFirstWeek()
6745:ROR:==(int,int):>=(int,int):org.joda.time.chrono.BasicChronology@equals(java.lang.Object):202:getMinimumDaysInFirstWeek() == chrono.getMinimumDaysInFirstWeek() |==> getMinimumDaysInFirstWeek() >= chrono.getMinimumDaysInFirstWeek()
6746:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.BasicChronology@equals(java.lang.Object):202:getMinimumDaysInFirstWeek() == chrono.getMinimumDaysInFirstWeek() |==> false
6747:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.BasicChronology@equals(java.lang.Object):202:getMinimumDaysInFirstWeek() == chrono.getMinimumDaysInFirstWeek() && getZone().equals(chrono.getZone()) |==> getMinimumDaysInFirstWeek() == chrono.getMinimumDaysInFirstWeek() == getZone().equals(chrono.getZone())
6748:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.BasicChronology@equals(java.lang.Object):202:getMinimumDaysInFirstWeek() == chrono.getMinimumDaysInFirstWeek() && getZone().equals(chrono.getZone()) |==> false
6749:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.BasicChronology@equals(java.lang.Object):202:getMinimumDaysInFirstWeek() == chrono.getMinimumDaysInFirstWeek() && getZone().equals(chrono.getZone()) |==> getMinimumDaysInFirstWeek() == chrono.getMinimumDaysInFirstWeek()
6750:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.BasicChronology@equals(java.lang.Object):203:getMinimumDaysInFirstWeek() == chrono.getMinimumDaysInFirstWeek() && getZone().equals(chrono.getZone()) |==> getZone().equals(chrono.getZone())
6751:LVR:FALSE:TRUE:org.joda.time.chrono.BasicChronology@equals(java.lang.Object):205:false |==> true
6752:LVR:POS:0:org.joda.time.chrono.BasicChronology@hashCode():215:11 |==> 0
6753:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@hashCode():215:11 |==> -11
6754:AOR:*(int,int):%(int,int):org.joda.time.chrono.BasicChronology@hashCode():215:getClass().getName().hashCode() * 11 |==> getClass().getName().hashCode() % 11
6755:AOR:*(int,int):+(int,int):org.joda.time.chrono.BasicChronology@hashCode():215:getClass().getName().hashCode() * 11 |==> getClass().getName().hashCode() + 11
6756:AOR:*(int,int):-(int,int):org.joda.time.chrono.BasicChronology@hashCode():215:getClass().getName().hashCode() * 11 |==> getClass().getName().hashCode() - 11
6757:AOR:*(int,int):/(int,int):org.joda.time.chrono.BasicChronology@hashCode():215:getClass().getName().hashCode() * 11 |==> getClass().getName().hashCode() / 11
6758:AOR:+(int,int):%(int,int):org.joda.time.chrono.BasicChronology@hashCode():215:getClass().getName().hashCode() * 11 + getZone().hashCode() |==> getClass().getName().hashCode() * 11 % getZone().hashCode()
6759:AOR:+(int,int):*(int,int):org.joda.time.chrono.BasicChronology@hashCode():215:getClass().getName().hashCode() * 11 + getZone().hashCode() |==> getClass().getName().hashCode() * 11 * getZone().hashCode()
6760:AOR:+(int,int):-(int,int):org.joda.time.chrono.BasicChronology@hashCode():215:getClass().getName().hashCode() * 11 + getZone().hashCode() |==> getClass().getName().hashCode() * 11 - getZone().hashCode()
6761:AOR:+(int,int):/(int,int):org.joda.time.chrono.BasicChronology@hashCode():215:getClass().getName().hashCode() * 11 + getZone().hashCode() |==> getClass().getName().hashCode() * 11 / getZone().hashCode()
6762:AOR:+(int,int):%(int,int):org.joda.time.chrono.BasicChronology@hashCode():215:getClass().getName().hashCode() * 11 + getZone().hashCode() + getMinimumDaysInFirstWeek() |==> (getClass().getName().hashCode() * 11 + getZone().hashCode()) % getMinimumDaysInFirstWeek()
6763:AOR:+(int,int):*(int,int):org.joda.time.chrono.BasicChronology@hashCode():215:getClass().getName().hashCode() * 11 + getZone().hashCode() + getMinimumDaysInFirstWeek() |==> (getClass().getName().hashCode() * 11 + getZone().hashCode()) * getMinimumDaysInFirstWeek()
6764:AOR:+(int,int):-(int,int):org.joda.time.chrono.BasicChronology@hashCode():215:getClass().getName().hashCode() * 11 + getZone().hashCode() + getMinimumDaysInFirstWeek() |==> getClass().getName().hashCode() * 11 + getZone().hashCode() - getMinimumDaysInFirstWeek()
6765:AOR:+(int,int):/(int,int):org.joda.time.chrono.BasicChronology@hashCode():215:getClass().getName().hashCode() * 11 + getZone().hashCode() + getMinimumDaysInFirstWeek() |==> (getClass().getName().hashCode() * 11 + getZone().hashCode()) / getMinimumDaysInFirstWeek()
6766:LVR:POS:0:org.joda.time.chrono.BasicChronology@toString():226:60 |==> 0
6767:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@toString():226:60 |==> -60
6768:LVR:0:POS:org.joda.time.chrono.BasicChronology@toString():229:0 |==> 1
6769:LVR:0:NEG:org.joda.time.chrono.BasicChronology@toString():229:0 |==> -1
6770:ROR:>=(int,int):==(int,int):org.joda.time.chrono.BasicChronology@toString():229:index >= 0 |==> index == 0
6771:ROR:>=(int,int):>(int,int):org.joda.time.chrono.BasicChronology@toString():229:index >= 0 |==> index > 0
6772:ROR:>=(int,int):TRUE(int,int):org.joda.time.chrono.BasicChronology@toString():229:index >= 0 |==> true
6773:LVR:POS:0:org.joda.time.chrono.BasicChronology@toString():230:1 |==> 0
6774:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@toString():230:1 |==> -1
6775:AOR:+(int,int):%(int,int):org.joda.time.chrono.BasicChronology@toString():230:index + 1 |==> index % 1
6776:AOR:+(int,int):*(int,int):org.joda.time.chrono.BasicChronology@toString():230:index + 1 |==> index * 1
6777:AOR:+(int,int):-(int,int):org.joda.time.chrono.BasicChronology@toString():230:index + 1 |==> index - 1
6778:AOR:+(int,int):/(int,int):org.joda.time.chrono.BasicChronology@toString():230:index + 1 |==> index / 1
6779:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@toString():230:name = name.substring(index + 1) |==> <NO-OP>
6780:STD:<CALL>:<NO-OP>:org.joda.time.chrono.BasicChronology@toString():232:sb.append(name) |==> <NO-OP>
6781:STD:<CALL>:<NO-OP>:org.joda.time.chrono.BasicChronology@toString():233:sb.append('[') |==> <NO-OP>
6782:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.BasicChronology@toString():235:zone != null |==> true
6783:STD:<CALL>:<NO-OP>:org.joda.time.chrono.BasicChronology@toString():236:sb.append(zone.getID()) |==> <NO-OP>
6784:LVR:POS:0:org.joda.time.chrono.BasicChronology@toString():238:4 |==> 0
6785:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@toString():238:4 |==> -4
6786:ROR:!=(int,int):<(int,int):org.joda.time.chrono.BasicChronology@toString():238:getMinimumDaysInFirstWeek() != 4 |==> getMinimumDaysInFirstWeek() < 4
6787:ROR:!=(int,int):>(int,int):org.joda.time.chrono.BasicChronology@toString():238:getMinimumDaysInFirstWeek() != 4 |==> getMinimumDaysInFirstWeek() > 4
6788:ROR:!=(int,int):TRUE(int,int):org.joda.time.chrono.BasicChronology@toString():238:getMinimumDaysInFirstWeek() != 4 |==> true
6789:STD:<CALL>:<NO-OP>:org.joda.time.chrono.BasicChronology@toString():239:sb.append(",mdfw=") |==> <NO-OP>
6790:STD:<CALL>:<NO-OP>:org.joda.time.chrono.BasicChronology@toString():240:sb.append(getMinimumDaysInFirstWeek()) |==> <NO-OP>
6791:STD:<CALL>:<NO-OP>:org.joda.time.chrono.BasicChronology@toString():242:sb.append(']') |==> <NO-OP>
6792:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):250:fields.millis = cMillisField |==> <NO-OP>
6793:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):251:fields.seconds = cSecondsField |==> <NO-OP>
6794:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):252:fields.minutes = cMinutesField |==> <NO-OP>
6795:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):253:fields.hours = cHoursField |==> <NO-OP>
6796:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):254:fields.halfdays = cHalfdaysField |==> <NO-OP>
6797:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):255:fields.days = cDaysField |==> <NO-OP>
6798:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):256:fields.weeks = cWeeksField |==> <NO-OP>
6799:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):258:fields.millisOfSecond = cMillisOfSecondField |==> <NO-OP>
6800:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):259:fields.millisOfDay = cMillisOfDayField |==> <NO-OP>
6801:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):260:fields.secondOfMinute = cSecondOfMinuteField |==> <NO-OP>
6802:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):261:fields.secondOfDay = cSecondOfDayField |==> <NO-OP>
6803:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):262:fields.minuteOfHour = cMinuteOfHourField |==> <NO-OP>
6804:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):263:fields.minuteOfDay = cMinuteOfDayField |==> <NO-OP>
6805:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):264:fields.hourOfDay = cHourOfDayField |==> <NO-OP>
6806:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):265:fields.hourOfHalfday = cHourOfHalfdayField |==> <NO-OP>
6807:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):266:fields.clockhourOfDay = cClockhourOfDayField |==> <NO-OP>
6808:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):267:fields.clockhourOfHalfday = cClockhourOfHalfdayField |==> <NO-OP>
6809:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):268:fields.halfdayOfDay = cHalfdayOfDayField |==> <NO-OP>
6810:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):273:fields.year = new BasicYearDateTimeField(this) |==> <NO-OP>
6811:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):274:fields.yearOfEra = new GJYearOfEraDateTimeField(fields.year, this) |==> <NO-OP>
6812:LVR:POS:0:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):278:99 |==> 0
6813:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):278:99 |==> -99
6814:LVR:POS:0:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):280:100 |==> 0
6815:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):280:100 |==> -100
6816:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):279:fields.centuryOfEra = new DividedDateTimeField(field, DateTimeFieldType.centuryOfEra(), 100) |==> <NO-OP>
6817:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):281:fields.centuries = fields.centuryOfEra.getDurationField() |==> <NO-OP>
6818:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):283:field = new RemainderDateTimeField((DividedDateTimeField)fields.centuryOfEra) |==> <NO-OP>
6819:LVR:POS:0:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):286:1 |==> 0
6820:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):286:1 |==> -1
6821:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):285:fields.yearOfCentury = new OffsetDateTimeField(field, DateTimeFieldType.yearOfCentury(), 1) |==> <NO-OP>
6822:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):288:fields.era = new GJEraDateTimeField(this) |==> <NO-OP>
6823:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):289:fields.dayOfWeek = new GJDayOfWeekDateTimeField(this, fields.days) |==> <NO-OP>
6824:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):290:fields.dayOfMonth = new BasicDayOfMonthDateTimeField(this, fields.days) |==> <NO-OP>
6825:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):291:fields.dayOfYear = new BasicDayOfYearDateTimeField(this, fields.days) |==> <NO-OP>
6826:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):292:fields.monthOfYear = new GJMonthOfYearDateTimeField(this) |==> <NO-OP>
6827:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):293:fields.weekyear = new BasicWeekyearDateTimeField(this) |==> <NO-OP>
6828:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):294:fields.weekOfWeekyear = new BasicWeekOfWeekyearDateTimeField(this, fields.weeks) |==> <NO-OP>
6829:LVR:POS:0:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):297:100 |==> 0
6830:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):297:100 |==> -100
6831:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):296:field = new RemainderDateTimeField(fields.weekyear, fields.centuries, DateTimeFieldType.weekyearOfCentury(), 100) |==> <NO-OP>
6832:LVR:POS:0:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):299:1 |==> 0
6833:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):299:1 |==> -1
6834:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):298:fields.weekyearOfCentury = new OffsetDateTimeField(field, DateTimeFieldType.weekyearOfCentury(), 1) |==> <NO-OP>
6835:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):303:fields.years = fields.year.getDurationField() |==> <NO-OP>
6836:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):304:fields.months = fields.monthOfYear.getDurationField() |==> <NO-OP>
6837:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):305:fields.weekyears = fields.weekyear.getDurationField() |==> <NO-OP>
6838:LVR:POS:0:org.joda.time.chrono.BasicChronology@getDaysInYearMax():315:366 |==> 0
6839:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getDaysInYearMax():315:366 |==> -366
6840:COR:isLeapYear(year):TRUE:org.joda.time.chrono.BasicChronology@getDaysInYear(int):325:isLeapYear(year) |==> false
6841:COR:isLeapYear(year):FALSE:org.joda.time.chrono.BasicChronology@getDaysInYear(int):325:isLeapYear(year) |==> true
6842:LVR:POS:0:org.joda.time.chrono.BasicChronology@getDaysInYear(int):325:366 |==> 0
6843:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getDaysInYear(int):325:366 |==> -366
6844:LVR:POS:0:org.joda.time.chrono.BasicChronology@getDaysInYear(int):325:365 |==> 0
6845:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getDaysInYear(int):325:365 |==> -365
6846:LVR:POS:0:org.joda.time.chrono.BasicChronology@getWeeksInYear(int):336:1 |==> 0
6847:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getWeeksInYear(int):336:1 |==> -1
6848:AOR:+(int,int):%(int,int):org.joda.time.chrono.BasicChronology@getWeeksInYear(int):336:year + 1 |==> year % 1
6849:AOR:+(int,int):*(int,int):org.joda.time.chrono.BasicChronology@getWeeksInYear(int):336:year + 1 |==> year * 1
6850:AOR:+(int,int):-(int,int):org.joda.time.chrono.BasicChronology@getWeeksInYear(int):336:year + 1 |==> year - 1
6851:AOR:+(int,int):/(int,int):org.joda.time.chrono.BasicChronology@getWeeksInYear(int):336:year + 1 |==> year / 1
6852:AOR:-(long,long):%(long,long):org.joda.time.chrono.BasicChronology@getWeeksInYear(int):337:firstWeekMillis2 - firstWeekMillis1 |==> firstWeekMillis2 % firstWeekMillis1
6853:AOR:-(long,long):*(long,long):org.joda.time.chrono.BasicChronology@getWeeksInYear(int):337:firstWeekMillis2 - firstWeekMillis1 |==> firstWeekMillis2 * firstWeekMillis1
6854:AOR:-(long,long):+(long,long):org.joda.time.chrono.BasicChronology@getWeeksInYear(int):337:firstWeekMillis2 - firstWeekMillis1 |==> firstWeekMillis2 + firstWeekMillis1
6855:AOR:-(long,long):/(long,long):org.joda.time.chrono.BasicChronology@getWeeksInYear(int):337:firstWeekMillis2 - firstWeekMillis1 |==> firstWeekMillis2 / firstWeekMillis1
6856:AOR:/(long,long):%(long,long):org.joda.time.chrono.BasicChronology@getWeeksInYear(int):337:(firstWeekMillis2 - firstWeekMillis1) / DateTimeConstants.MILLIS_PER_WEEK |==> (firstWeekMillis2 - firstWeekMillis1) % DateTimeConstants.MILLIS_PER_WEEK
6857:AOR:/(long,long):*(long,long):org.joda.time.chrono.BasicChronology@getWeeksInYear(int):337:(firstWeekMillis2 - firstWeekMillis1) / DateTimeConstants.MILLIS_PER_WEEK |==> (firstWeekMillis2 - firstWeekMillis1) * DateTimeConstants.MILLIS_PER_WEEK
6858:AOR:/(long,long):+(long,long):org.joda.time.chrono.BasicChronology@getWeeksInYear(int):337:(firstWeekMillis2 - firstWeekMillis1) / DateTimeConstants.MILLIS_PER_WEEK |==> (firstWeekMillis2 - firstWeekMillis1) + DateTimeConstants.MILLIS_PER_WEEK
6859:AOR:/(long,long):-(long,long):org.joda.time.chrono.BasicChronology@getWeeksInYear(int):337:(firstWeekMillis2 - firstWeekMillis1) / DateTimeConstants.MILLIS_PER_WEEK |==> (firstWeekMillis2 - firstWeekMillis1) - DateTimeConstants.MILLIS_PER_WEEK
6860:LVR:POS:0:org.joda.time.chrono.BasicChronology@getFirstWeekOfYearMillis(int):350:8 |==> 0
6861:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getFirstWeekOfYearMillis(int):350:8 |==> -8
6862:AOR:-(int,int):%(int,int):org.joda.time.chrono.BasicChronology@getFirstWeekOfYearMillis(int):350:8 - iMinDaysInFirstWeek |==> 8 % iMinDaysInFirstWeek
6863:AOR:-(int,int):*(int,int):org.joda.time.chrono.BasicChronology@getFirstWeekOfYearMillis(int):350:8 - iMinDaysInFirstWeek |==> 8 * iMinDaysInFirstWeek
6864:AOR:-(int,int):+(int,int):org.joda.time.chrono.BasicChronology@getFirstWeekOfYearMillis(int):350:8 - iMinDaysInFirstWeek |==> 8 + iMinDaysInFirstWeek
6865:AOR:-(int,int):/(int,int):org.joda.time.chrono.BasicChronology@getFirstWeekOfYearMillis(int):350:8 - iMinDaysInFirstWeek |==> 8 / iMinDaysInFirstWeek
6866:ROR:>(int,int):!=(int,int):org.joda.time.chrono.BasicChronology@getFirstWeekOfYearMillis(int):350:jan1dayOfWeek > (8 - iMinDaysInFirstWeek) |==> jan1dayOfWeek != (8 - iMinDaysInFirstWeek)
6867:ROR:>(int,int):>=(int,int):org.joda.time.chrono.BasicChronology@getFirstWeekOfYearMillis(int):350:jan1dayOfWeek > (8 - iMinDaysInFirstWeek) |==> jan1dayOfWeek >= (8 - iMinDaysInFirstWeek)
6868:ROR:>(int,int):FALSE(int,int):org.joda.time.chrono.BasicChronology@getFirstWeekOfYearMillis(int):350:jan1dayOfWeek > (8 - iMinDaysInFirstWeek) |==> false
6869:LVR:POS:0:org.joda.time.chrono.BasicChronology@getFirstWeekOfYearMillis(int):352:8 |==> 0
6870:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getFirstWeekOfYearMillis(int):352:8 |==> -8
6871:AOR:-(int,int):%(int,int):org.joda.time.chrono.BasicChronology@getFirstWeekOfYearMillis(int):352:8 - jan1dayOfWeek |==> 8 % jan1dayOfWeek
6872:AOR:-(int,int):*(int,int):org.joda.time.chrono.BasicChronology@getFirstWeekOfYearMillis(int):352:8 - jan1dayOfWeek |==> 8 * jan1dayOfWeek
6873:AOR:-(int,int):+(int,int):org.joda.time.chrono.BasicChronology@getFirstWeekOfYearMillis(int):352:8 - jan1dayOfWeek |==> 8 + jan1dayOfWeek
6874:AOR:-(int,int):/(int,int):org.joda.time.chrono.BasicChronology@getFirstWeekOfYearMillis(int):352:8 - jan1dayOfWeek |==> 8 / jan1dayOfWeek
6875:AOR:*(long,long):%(long,long):org.joda.time.chrono.BasicChronology@getFirstWeekOfYearMillis(int):352:(8 - jan1dayOfWeek) * (long)DateTimeConstants.MILLIS_PER_DAY |==> (8 - jan1dayOfWeek) % (long)DateTimeConstants.MILLIS_PER_DAY
6876:AOR:*(long,long):+(long,long):org.joda.time.chrono.BasicChronology@getFirstWeekOfYearMillis(int):352:(8 - jan1dayOfWeek) * (long)DateTimeConstants.MILLIS_PER_DAY |==> (8 - jan1dayOfWeek) + (long)DateTimeConstants.MILLIS_PER_DAY
6877:AOR:*(long,long):-(long,long):org.joda.time.chrono.BasicChronology@getFirstWeekOfYearMillis(int):352:(8 - jan1dayOfWeek) * (long)DateTimeConstants.MILLIS_PER_DAY |==> (8 - jan1dayOfWeek) - (long)DateTimeConstants.MILLIS_PER_DAY
6878:AOR:*(long,long):/(long,long):org.joda.time.chrono.BasicChronology@getFirstWeekOfYearMillis(int):352:(8 - jan1dayOfWeek) * (long)DateTimeConstants.MILLIS_PER_DAY |==> (8 - jan1dayOfWeek) / (long)DateTimeConstants.MILLIS_PER_DAY
6879:AOR:+(long,long):%(long,long):org.joda.time.chrono.BasicChronology@getFirstWeekOfYearMillis(int):352:jan1millis + (8 - jan1dayOfWeek) * (long)DateTimeConstants.MILLIS_PER_DAY |==> jan1millis % ((8 - jan1dayOfWeek) * (long)DateTimeConstants.MILLIS_PER_DAY)
6880:AOR:+(long,long):*(long,long):org.joda.time.chrono.BasicChronology@getFirstWeekOfYearMillis(int):352:jan1millis + (8 - jan1dayOfWeek) * (long)DateTimeConstants.MILLIS_PER_DAY |==> jan1millis * ((8 - jan1dayOfWeek) * (long)DateTimeConstants.MILLIS_PER_DAY)
6881:AOR:+(long,long):-(long,long):org.joda.time.chrono.BasicChronology@getFirstWeekOfYearMillis(int):352:jan1millis + (8 - jan1dayOfWeek) * (long)DateTimeConstants.MILLIS_PER_DAY |==> jan1millis - (8 - jan1dayOfWeek) * (long)DateTimeConstants.MILLIS_PER_DAY
6882:AOR:+(long,long):/(long,long):org.joda.time.chrono.BasicChronology@getFirstWeekOfYearMillis(int):352:jan1millis + (8 - jan1dayOfWeek) * (long)DateTimeConstants.MILLIS_PER_DAY |==> jan1millis / ((8 - jan1dayOfWeek) * (long)DateTimeConstants.MILLIS_PER_DAY)
6883:LVR:POS:0:org.joda.time.chrono.BasicChronology@getFirstWeekOfYearMillis(int):356:1 |==> 0
6884:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getFirstWeekOfYearMillis(int):356:1 |==> -1
6885:AOR:-(int,int):%(int,int):org.joda.time.chrono.BasicChronology@getFirstWeekOfYearMillis(int):356:jan1dayOfWeek - 1 |==> jan1dayOfWeek % 1
6886:AOR:-(int,int):*(int,int):org.joda.time.chrono.BasicChronology@getFirstWeekOfYearMillis(int):356:jan1dayOfWeek - 1 |==> jan1dayOfWeek * 1
6887:AOR:-(int,int):+(int,int):org.joda.time.chrono.BasicChronology@getFirstWeekOfYearMillis(int):356:jan1dayOfWeek - 1 |==> jan1dayOfWeek + 1
6888:AOR:-(int,int):/(int,int):org.joda.time.chrono.BasicChronology@getFirstWeekOfYearMillis(int):356:jan1dayOfWeek - 1 |==> jan1dayOfWeek / 1
6889:AOR:*(long,long):%(long,long):org.joda.time.chrono.BasicChronology@getFirstWeekOfYearMillis(int):356:(jan1dayOfWeek - 1) * (long)DateTimeConstants.MILLIS_PER_DAY |==> (jan1dayOfWeek - 1) % (long)DateTimeConstants.MILLIS_PER_DAY
6890:AOR:*(long,long):+(long,long):org.joda.time.chrono.BasicChronology@getFirstWeekOfYearMillis(int):356:(jan1dayOfWeek - 1) * (long)DateTimeConstants.MILLIS_PER_DAY |==> (jan1dayOfWeek - 1) + (long)DateTimeConstants.MILLIS_PER_DAY
6891:AOR:*(long,long):-(long,long):org.joda.time.chrono.BasicChronology@getFirstWeekOfYearMillis(int):356:(jan1dayOfWeek - 1) * (long)DateTimeConstants.MILLIS_PER_DAY |==> (jan1dayOfWeek - 1) - (long)DateTimeConstants.MILLIS_PER_DAY
6892:AOR:*(long,long):/(long,long):org.joda.time.chrono.BasicChronology@getFirstWeekOfYearMillis(int):356:(jan1dayOfWeek - 1) * (long)DateTimeConstants.MILLIS_PER_DAY |==> (jan1dayOfWeek - 1) / (long)DateTimeConstants.MILLIS_PER_DAY
6893:AOR:-(long,long):%(long,long):org.joda.time.chrono.BasicChronology@getFirstWeekOfYearMillis(int):356:jan1millis - (jan1dayOfWeek - 1) * (long)DateTimeConstants.MILLIS_PER_DAY |==> jan1millis % ((jan1dayOfWeek - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)
6894:AOR:-(long,long):*(long,long):org.joda.time.chrono.BasicChronology@getFirstWeekOfYearMillis(int):356:jan1millis - (jan1dayOfWeek - 1) * (long)DateTimeConstants.MILLIS_PER_DAY |==> jan1millis * ((jan1dayOfWeek - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)
6895:AOR:-(long,long):+(long,long):org.joda.time.chrono.BasicChronology@getFirstWeekOfYearMillis(int):356:jan1millis - (jan1dayOfWeek - 1) * (long)DateTimeConstants.MILLIS_PER_DAY |==> jan1millis + (jan1dayOfWeek - 1) * (long)DateTimeConstants.MILLIS_PER_DAY
6896:AOR:-(long,long):/(long,long):org.joda.time.chrono.BasicChronology@getFirstWeekOfYearMillis(int):356:jan1millis - (jan1dayOfWeek - 1) * (long)DateTimeConstants.MILLIS_PER_DAY |==> jan1millis / ((jan1dayOfWeek - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)
6897:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@getYearMonthMillis(int,int):380:millis += getTotalMillisByYearMonth(year, month) |==> <NO-OP>
6898:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@getYearMonthDayMillis(int,int,int):394:millis += getTotalMillisByYearMonth(year, month) |==> <NO-OP>
6899:LVR:POS:0:org.joda.time.chrono.BasicChronology@getYearMonthDayMillis(int,int,int):395:1 |==> 0
6900:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getYearMonthDayMillis(int,int,int):395:1 |==> -1
6901:AOR:-(int,int):%(int,int):org.joda.time.chrono.BasicChronology@getYearMonthDayMillis(int,int,int):395:dayOfMonth - 1 |==> dayOfMonth % 1
6902:AOR:-(int,int):*(int,int):org.joda.time.chrono.BasicChronology@getYearMonthDayMillis(int,int,int):395:dayOfMonth - 1 |==> dayOfMonth * 1
6903:AOR:-(int,int):+(int,int):org.joda.time.chrono.BasicChronology@getYearMonthDayMillis(int,int,int):395:dayOfMonth - 1 |==> dayOfMonth + 1
6904:AOR:-(int,int):/(int,int):org.joda.time.chrono.BasicChronology@getYearMonthDayMillis(int,int,int):395:dayOfMonth - 1 |==> dayOfMonth / 1
6905:AOR:*(long,long):%(long,long):org.joda.time.chrono.BasicChronology@getYearMonthDayMillis(int,int,int):395:(dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY |==> (dayOfMonth - 1) % (long)DateTimeConstants.MILLIS_PER_DAY
6906:AOR:*(long,long):+(long,long):org.joda.time.chrono.BasicChronology@getYearMonthDayMillis(int,int,int):395:(dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY |==> (dayOfMonth - 1) + (long)DateTimeConstants.MILLIS_PER_DAY
6907:AOR:*(long,long):-(long,long):org.joda.time.chrono.BasicChronology@getYearMonthDayMillis(int,int,int):395:(dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY |==> (dayOfMonth - 1) - (long)DateTimeConstants.MILLIS_PER_DAY
6908:AOR:*(long,long):/(long,long):org.joda.time.chrono.BasicChronology@getYearMonthDayMillis(int,int,int):395:(dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY |==> (dayOfMonth - 1) / (long)DateTimeConstants.MILLIS_PER_DAY
6909:AOR:+(long,long):%(long,long):org.joda.time.chrono.BasicChronology@getYearMonthDayMillis(int,int,int):395:millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY |==> millis % ((dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)
6910:AOR:+(long,long):*(long,long):org.joda.time.chrono.BasicChronology@getYearMonthDayMillis(int,int,int):395:millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY |==> millis * ((dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)
6911:AOR:+(long,long):-(long,long):org.joda.time.chrono.BasicChronology@getYearMonthDayMillis(int,int,int):395:millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY |==> millis - (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY
6912:AOR:+(long,long):/(long,long):org.joda.time.chrono.BasicChronology@getYearMonthDayMillis(int,int,int):395:millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY |==> millis / ((dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY)
6913:LVR:POS:0:org.joda.time.chrono.BasicChronology@getYear(long):408:1 |==> 0
6914:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getYear(long):408:1 |==> -1
6915:SOR:>>(long,int):<<(long,int):org.joda.time.chrono.BasicChronology@getYear(long):408:instant >> 1 |==> instant << 1
6916:SOR:>>(long,int):>>>(long,int):org.joda.time.chrono.BasicChronology@getYear(long):408:instant >> 1 |==> instant >>> 1
6917:AOR:+(long,long):%(long,long):org.joda.time.chrono.BasicChronology@getYear(long):408:(instant >> 1) + getApproxMillisAtEpochDividedByTwo() |==> (instant >> 1) % getApproxMillisAtEpochDividedByTwo()
6918:AOR:+(long,long):*(long,long):org.joda.time.chrono.BasicChronology@getYear(long):408:(instant >> 1) + getApproxMillisAtEpochDividedByTwo() |==> (instant >> 1) * getApproxMillisAtEpochDividedByTwo()
6919:AOR:+(long,long):-(long,long):org.joda.time.chrono.BasicChronology@getYear(long):408:(instant >> 1) + getApproxMillisAtEpochDividedByTwo() |==> (instant >> 1) - getApproxMillisAtEpochDividedByTwo()
6920:AOR:+(long,long):/(long,long):org.joda.time.chrono.BasicChronology@getYear(long):408:(instant >> 1) + getApproxMillisAtEpochDividedByTwo() |==> (instant >> 1) / getApproxMillisAtEpochDividedByTwo()
6921:LVR:0:POS:org.joda.time.chrono.BasicChronology@getYear(long):409:0 |==> 1
6922:LVR:0:NEG:org.joda.time.chrono.BasicChronology@getYear(long):409:0 |==> -1
6923:ROR:<(long,long):!=(long,long):org.joda.time.chrono.BasicChronology@getYear(long):409:i2 < 0 |==> i2 != 0
6924:ROR:<(long,long):<=(long,long):org.joda.time.chrono.BasicChronology@getYear(long):409:i2 < 0 |==> i2 <= 0
6925:ROR:<(long,long):FALSE(long,long):org.joda.time.chrono.BasicChronology@getYear(long):409:i2 < 0 |==> false
6926:AOR:-(long,long):%(long,long):org.joda.time.chrono.BasicChronology@getYear(long):410:i2 - unitMillis |==> i2 % unitMillis
6927:AOR:-(long,long):*(long,long):org.joda.time.chrono.BasicChronology@getYear(long):410:i2 - unitMillis |==> i2 * unitMillis
6928:AOR:-(long,long):+(long,long):org.joda.time.chrono.BasicChronology@getYear(long):410:i2 - unitMillis |==> i2 + unitMillis
6929:AOR:-(long,long):/(long,long):org.joda.time.chrono.BasicChronology@getYear(long):410:i2 - unitMillis |==> i2 / unitMillis
6930:LVR:POS:0:org.joda.time.chrono.BasicChronology@getYear(long):410:1 |==> 0
6931:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getYear(long):410:1 |==> -1
6932:AOR:+(long,long):%(long,long):org.joda.time.chrono.BasicChronology@getYear(long):410:i2 - unitMillis + 1 |==> (i2 - unitMillis) % 1
6933:AOR:+(long,long):*(long,long):org.joda.time.chrono.BasicChronology@getYear(long):410:i2 - unitMillis + 1 |==> (i2 - unitMillis) * 1
6934:AOR:+(long,long):-(long,long):org.joda.time.chrono.BasicChronology@getYear(long):410:i2 - unitMillis + 1 |==> i2 - unitMillis - 1
6935:AOR:+(long,long):/(long,long):org.joda.time.chrono.BasicChronology@getYear(long):410:i2 - unitMillis + 1 |==> (i2 - unitMillis) / 1
6936:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@getYear(long):410:i2 = i2 - unitMillis + 1 |==> <NO-OP>
6937:AOR:/(long,long):%(long,long):org.joda.time.chrono.BasicChronology@getYear(long):412:i2 / unitMillis |==> i2 % unitMillis
6938:AOR:/(long,long):*(long,long):org.joda.time.chrono.BasicChronology@getYear(long):412:i2 / unitMillis |==> i2 * unitMillis
6939:AOR:/(long,long):+(long,long):org.joda.time.chrono.BasicChronology@getYear(long):412:i2 / unitMillis |==> i2 + unitMillis
6940:AOR:/(long,long):-(long,long):org.joda.time.chrono.BasicChronology@getYear(long):412:i2 / unitMillis |==> i2 - unitMillis
6941:AOR:-(long,long):%(long,long):org.joda.time.chrono.BasicChronology@getYear(long):415:instant - yearStart |==> instant % yearStart
6942:AOR:-(long,long):*(long,long):org.joda.time.chrono.BasicChronology@getYear(long):415:instant - yearStart |==> instant * yearStart
6943:AOR:-(long,long):+(long,long):org.joda.time.chrono.BasicChronology@getYear(long):415:instant - yearStart |==> instant + yearStart
6944:AOR:-(long,long):/(long,long):org.joda.time.chrono.BasicChronology@getYear(long):415:instant - yearStart |==> instant / yearStart
6945:LVR:0:POS:org.joda.time.chrono.BasicChronology@getYear(long):417:0 |==> 1
6946:LVR:0:NEG:org.joda.time.chrono.BasicChronology@getYear(long):417:0 |==> -1
6947:ROR:<(long,long):!=(long,long):org.joda.time.chrono.BasicChronology@getYear(long):417:diff < 0 |==> diff != 0
6948:ROR:<(long,long):<=(long,long):org.joda.time.chrono.BasicChronology@getYear(long):417:diff < 0 |==> diff <= 0
6949:ROR:<(long,long):FALSE(long,long):org.joda.time.chrono.BasicChronology@getYear(long):417:diff < 0 |==> false
6950:STD:<DEC>:<NO-OP>:org.joda.time.chrono.BasicChronology@getYear(long):418:year-- |==> <NO-OP>
6951:LVR:POS:0:org.joda.time.chrono.BasicChronology@getYear(long):419:365L |==> 0L
6952:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getYear(long):419:365L |==> -365L
6953:AOR:*(long,long):%(long,long):org.joda.time.chrono.BasicChronology@getYear(long):419:DateTimeConstants.MILLIS_PER_DAY * 365L |==> DateTimeConstants.MILLIS_PER_DAY % 365L
6954:AOR:*(long,long):+(long,long):org.joda.time.chrono.BasicChronology@getYear(long):419:DateTimeConstants.MILLIS_PER_DAY * 365L |==> DateTimeConstants.MILLIS_PER_DAY + 365L
6955:AOR:*(long,long):-(long,long):org.joda.time.chrono.BasicChronology@getYear(long):419:DateTimeConstants.MILLIS_PER_DAY * 365L |==> DateTimeConstants.MILLIS_PER_DAY - 365L
6956:AOR:*(long,long):/(long,long):org.joda.time.chrono.BasicChronology@getYear(long):419:DateTimeConstants.MILLIS_PER_DAY * 365L |==> DateTimeConstants.MILLIS_PER_DAY / 365L
6957:ROR:>=(long,long):==(long,long):org.joda.time.chrono.BasicChronology@getYear(long):419:diff >= DateTimeConstants.MILLIS_PER_DAY * 365L |==> diff == DateTimeConstants.MILLIS_PER_DAY * 365L
6958:ROR:>=(long,long):>(long,long):org.joda.time.chrono.BasicChronology@getYear(long):419:diff >= DateTimeConstants.MILLIS_PER_DAY * 365L |==> diff > DateTimeConstants.MILLIS_PER_DAY * 365L
6959:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.BasicChronology@getYear(long):419:diff >= DateTimeConstants.MILLIS_PER_DAY * 365L |==> true
6960:COR:isLeapYear(year):TRUE:org.joda.time.chrono.BasicChronology@getYear(long):422:isLeapYear(year) |==> false
6961:COR:isLeapYear(year):FALSE:org.joda.time.chrono.BasicChronology@getYear(long):422:isLeapYear(year) |==> true
6962:LVR:POS:0:org.joda.time.chrono.BasicChronology@getYear(long):423:366L |==> 0L
6963:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getYear(long):423:366L |==> -366L
6964:AOR:*(long,long):%(long,long):org.joda.time.chrono.BasicChronology@getYear(long):423:DateTimeConstants.MILLIS_PER_DAY * 366L |==> DateTimeConstants.MILLIS_PER_DAY % 366L
6965:AOR:*(long,long):+(long,long):org.joda.time.chrono.BasicChronology@getYear(long):423:DateTimeConstants.MILLIS_PER_DAY * 366L |==> DateTimeConstants.MILLIS_PER_DAY + 366L
6966:AOR:*(long,long):-(long,long):org.joda.time.chrono.BasicChronology@getYear(long):423:DateTimeConstants.MILLIS_PER_DAY * 366L |==> DateTimeConstants.MILLIS_PER_DAY - 366L
6967:AOR:*(long,long):/(long,long):org.joda.time.chrono.BasicChronology@getYear(long):423:DateTimeConstants.MILLIS_PER_DAY * 366L |==> DateTimeConstants.MILLIS_PER_DAY / 366L
6968:LVR:POS:0:org.joda.time.chrono.BasicChronology@getYear(long):425:365L |==> 0L
6969:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getYear(long):425:365L |==> -365L
6970:AOR:*(long,long):%(long,long):org.joda.time.chrono.BasicChronology@getYear(long):425:DateTimeConstants.MILLIS_PER_DAY * 365L |==> DateTimeConstants.MILLIS_PER_DAY % 365L
6971:AOR:*(long,long):+(long,long):org.joda.time.chrono.BasicChronology@getYear(long):425:DateTimeConstants.MILLIS_PER_DAY * 365L |==> DateTimeConstants.MILLIS_PER_DAY + 365L
6972:AOR:*(long,long):-(long,long):org.joda.time.chrono.BasicChronology@getYear(long):425:DateTimeConstants.MILLIS_PER_DAY * 365L |==> DateTimeConstants.MILLIS_PER_DAY - 365L
6973:AOR:*(long,long):/(long,long):org.joda.time.chrono.BasicChronology@getYear(long):425:DateTimeConstants.MILLIS_PER_DAY * 365L |==> DateTimeConstants.MILLIS_PER_DAY / 365L
6974:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@getYear(long):428:yearStart += oneYear |==> <NO-OP>
6975:ROR:<=(long,long):<(long,long):org.joda.time.chrono.BasicChronology@getYear(long):430:yearStart <= instant |==> yearStart < instant
6976:ROR:<=(long,long):==(long,long):org.joda.time.chrono.BasicChronology@getYear(long):430:yearStart <= instant |==> yearStart == instant
6977:ROR:<=(long,long):TRUE(long,long):org.joda.time.chrono.BasicChronology@getYear(long):430:yearStart <= instant |==> true
6978:STD:<INC>:<NO-OP>:org.joda.time.chrono.BasicChronology@getYear(long):432:year++ |==> <NO-OP>
6979:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@getDayOfMonth(long,int,int):477:dateMillis += getTotalMillisByYearMonth(year, month) |==> <NO-OP>
6980:AOR:-(long,long):%(long,long):org.joda.time.chrono.BasicChronology@getDayOfMonth(long,int,int):478:millis - dateMillis |==> millis % dateMillis
6981:AOR:-(long,long):*(long,long):org.joda.time.chrono.BasicChronology@getDayOfMonth(long,int,int):478:millis - dateMillis |==> millis * dateMillis
6982:AOR:-(long,long):+(long,long):org.joda.time.chrono.BasicChronology@getDayOfMonth(long,int,int):478:millis - dateMillis |==> millis + dateMillis
6983:AOR:-(long,long):/(long,long):org.joda.time.chrono.BasicChronology@getDayOfMonth(long,int,int):478:millis - dateMillis |==> millis / dateMillis
6984:AOR:/(long,long):%(long,long):org.joda.time.chrono.BasicChronology@getDayOfMonth(long,int,int):478:(millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY |==> (millis - dateMillis) % DateTimeConstants.MILLIS_PER_DAY
6985:AOR:/(long,long):*(long,long):org.joda.time.chrono.BasicChronology@getDayOfMonth(long,int,int):478:(millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY |==> (millis - dateMillis) * DateTimeConstants.MILLIS_PER_DAY
6986:AOR:/(long,long):+(long,long):org.joda.time.chrono.BasicChronology@getDayOfMonth(long,int,int):478:(millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY |==> (millis - dateMillis) + DateTimeConstants.MILLIS_PER_DAY
6987:AOR:/(long,long):-(long,long):org.joda.time.chrono.BasicChronology@getDayOfMonth(long,int,int):478:(millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY |==> (millis - dateMillis) - DateTimeConstants.MILLIS_PER_DAY
6988:LVR:POS:0:org.joda.time.chrono.BasicChronology@getDayOfMonth(long,int,int):478:1 |==> 0
6989:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getDayOfMonth(long,int,int):478:1 |==> -1
6990:AOR:+(int,int):%(int,int):org.joda.time.chrono.BasicChronology@getDayOfMonth(long,int,int):478:(int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1 |==> (int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) % 1
6991:AOR:+(int,int):*(int,int):org.joda.time.chrono.BasicChronology@getDayOfMonth(long,int,int):478:(int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1 |==> (int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) * 1
6992:AOR:+(int,int):-(int,int):org.joda.time.chrono.BasicChronology@getDayOfMonth(long,int,int):478:(int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1 |==> (int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) - 1
6993:AOR:+(int,int):/(int,int):org.joda.time.chrono.BasicChronology@getDayOfMonth(long,int,int):478:(int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1 |==> (int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) / 1
6994:AOR:-(long,long):%(long,long):org.joda.time.chrono.BasicChronology@getDayOfYear(long,int):494:instant - yearStart |==> instant % yearStart
6995:AOR:-(long,long):*(long,long):org.joda.time.chrono.BasicChronology@getDayOfYear(long,int):494:instant - yearStart |==> instant * yearStart
6996:AOR:-(long,long):+(long,long):org.joda.time.chrono.BasicChronology@getDayOfYear(long,int):494:instant - yearStart |==> instant + yearStart
6997:AOR:-(long,long):/(long,long):org.joda.time.chrono.BasicChronology@getDayOfYear(long,int):494:instant - yearStart |==> instant / yearStart
6998:AOR:/(long,long):%(long,long):org.joda.time.chrono.BasicChronology@getDayOfYear(long,int):494:(instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY |==> (instant - yearStart) % DateTimeConstants.MILLIS_PER_DAY
6999:AOR:/(long,long):*(long,long):org.joda.time.chrono.BasicChronology@getDayOfYear(long,int):494:(instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY |==> (instant - yearStart) * DateTimeConstants.MILLIS_PER_DAY
7000:AOR:/(long,long):+(long,long):org.joda.time.chrono.BasicChronology@getDayOfYear(long,int):494:(instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY |==> (instant - yearStart) + DateTimeConstants.MILLIS_PER_DAY
7001:AOR:/(long,long):-(long,long):org.joda.time.chrono.BasicChronology@getDayOfYear(long,int):494:(instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY |==> (instant - yearStart) - DateTimeConstants.MILLIS_PER_DAY
7002:LVR:POS:0:org.joda.time.chrono.BasicChronology@getDayOfYear(long,int):494:1 |==> 0
7003:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getDayOfYear(long,int):494:1 |==> -1
7004:AOR:+(int,int):%(int,int):org.joda.time.chrono.BasicChronology@getDayOfYear(long,int):494:(int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1 |==> (int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) % 1
7005:AOR:+(int,int):*(int,int):org.joda.time.chrono.BasicChronology@getDayOfYear(long,int):494:(int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1 |==> (int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) * 1
7006:AOR:+(int,int):-(int,int):org.joda.time.chrono.BasicChronology@getDayOfYear(long,int):494:(int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1 |==> (int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) - 1
7007:AOR:+(int,int):/(int,int):org.joda.time.chrono.BasicChronology@getDayOfYear(long,int):494:(int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1 |==> (int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) / 1
7008:LVR:POS:0:org.joda.time.chrono.BasicChronology@getWeekyear(long):503:1 |==> 0
7009:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getWeekyear(long):503:1 |==> -1
7010:ROR:==(int,int):<=(int,int):org.joda.time.chrono.BasicChronology@getWeekyear(long):503:week == 1 |==> week <= 1
7011:ROR:==(int,int):>=(int,int):org.joda.time.chrono.BasicChronology@getWeekyear(long):503:week == 1 |==> week >= 1
7012:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.BasicChronology@getWeekyear(long):503:week == 1 |==> false
7013:AOR:+(long,long):%(long,long):org.joda.time.chrono.BasicChronology@getWeekyear(long):504:instant + DateTimeConstants.MILLIS_PER_WEEK |==> instant % DateTimeConstants.MILLIS_PER_WEEK
7014:AOR:+(long,long):*(long,long):org.joda.time.chrono.BasicChronology@getWeekyear(long):504:instant + DateTimeConstants.MILLIS_PER_WEEK |==> instant * DateTimeConstants.MILLIS_PER_WEEK
7015:AOR:+(long,long):-(long,long):org.joda.time.chrono.BasicChronology@getWeekyear(long):504:instant + DateTimeConstants.MILLIS_PER_WEEK |==> instant - DateTimeConstants.MILLIS_PER_WEEK
7016:AOR:+(long,long):/(long,long):org.joda.time.chrono.BasicChronology@getWeekyear(long):504:instant + DateTimeConstants.MILLIS_PER_WEEK |==> instant / DateTimeConstants.MILLIS_PER_WEEK
7017:LVR:POS:0:org.joda.time.chrono.BasicChronology@getWeekyear(long):505:51 |==> 0
7018:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getWeekyear(long):505:51 |==> -51
7019:ROR:>(int,int):!=(int,int):org.joda.time.chrono.BasicChronology@getWeekyear(long):505:week > 51 |==> week != 51
7020:ROR:>(int,int):>=(int,int):org.joda.time.chrono.BasicChronology@getWeekyear(long):505:week > 51 |==> week >= 51
7021:ROR:>(int,int):FALSE(int,int):org.joda.time.chrono.BasicChronology@getWeekyear(long):505:week > 51 |==> false
7022:LVR:POS:0:org.joda.time.chrono.BasicChronology@getWeekyear(long):506:2 |==> 0
7023:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getWeekyear(long):506:2 |==> -2
7024:AOR:*(int,int):%(int,int):org.joda.time.chrono.BasicChronology@getWeekyear(long):506:2 * DateTimeConstants.MILLIS_PER_WEEK |==> 2 % DateTimeConstants.MILLIS_PER_WEEK
7025:AOR:*(int,int):+(int,int):org.joda.time.chrono.BasicChronology@getWeekyear(long):506:2 * DateTimeConstants.MILLIS_PER_WEEK |==> 2 + DateTimeConstants.MILLIS_PER_WEEK
7026:AOR:*(int,int):-(int,int):org.joda.time.chrono.BasicChronology@getWeekyear(long):506:2 * DateTimeConstants.MILLIS_PER_WEEK |==> 2 - DateTimeConstants.MILLIS_PER_WEEK
7027:AOR:*(int,int):/(int,int):org.joda.time.chrono.BasicChronology@getWeekyear(long):506:2 * DateTimeConstants.MILLIS_PER_WEEK |==> 2 / DateTimeConstants.MILLIS_PER_WEEK
7028:AOR:-(long,long):%(long,long):org.joda.time.chrono.BasicChronology@getWeekyear(long):506:instant - (2 * DateTimeConstants.MILLIS_PER_WEEK) |==> instant % (2 * DateTimeConstants.MILLIS_PER_WEEK)
7029:AOR:-(long,long):*(long,long):org.joda.time.chrono.BasicChronology@getWeekyear(long):506:instant - (2 * DateTimeConstants.MILLIS_PER_WEEK) |==> instant * (2 * DateTimeConstants.MILLIS_PER_WEEK)
7030:AOR:-(long,long):+(long,long):org.joda.time.chrono.BasicChronology@getWeekyear(long):506:instant - (2 * DateTimeConstants.MILLIS_PER_WEEK) |==> instant + (2 * DateTimeConstants.MILLIS_PER_WEEK)
7031:AOR:-(long,long):/(long,long):org.joda.time.chrono.BasicChronology@getWeekyear(long):506:instant - (2 * DateTimeConstants.MILLIS_PER_WEEK) |==> instant / (2 * DateTimeConstants.MILLIS_PER_WEEK)
7032:ROR:<(long,long):!=(long,long):org.joda.time.chrono.BasicChronology@getWeekOfWeekyear(long,int):525:instant < firstWeekMillis1 |==> instant != firstWeekMillis1
7033:ROR:<(long,long):<=(long,long):org.joda.time.chrono.BasicChronology@getWeekOfWeekyear(long,int):525:instant < firstWeekMillis1 |==> instant <= firstWeekMillis1
7034:ROR:<(long,long):FALSE(long,long):org.joda.time.chrono.BasicChronology@getWeekOfWeekyear(long,int):525:instant < firstWeekMillis1 |==> false
7035:LVR:POS:0:org.joda.time.chrono.BasicChronology@getWeekOfWeekyear(long,int):526:1 |==> 0
7036:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getWeekOfWeekyear(long,int):526:1 |==> -1
7037:AOR:-(int,int):%(int,int):org.joda.time.chrono.BasicChronology@getWeekOfWeekyear(long,int):526:year - 1 |==> year % 1
7038:AOR:-(int,int):*(int,int):org.joda.time.chrono.BasicChronology@getWeekOfWeekyear(long,int):526:year - 1 |==> year * 1
7039:AOR:-(int,int):+(int,int):org.joda.time.chrono.BasicChronology@getWeekOfWeekyear(long,int):526:year - 1 |==> year + 1
7040:AOR:-(int,int):/(int,int):org.joda.time.chrono.BasicChronology@getWeekOfWeekyear(long,int):526:year - 1 |==> year / 1
7041:LVR:POS:0:org.joda.time.chrono.BasicChronology@getWeekOfWeekyear(long,int):528:1 |==> 0
7042:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getWeekOfWeekyear(long,int):528:1 |==> -1
7043:AOR:+(int,int):%(int,int):org.joda.time.chrono.BasicChronology@getWeekOfWeekyear(long,int):528:year + 1 |==> year % 1
7044:AOR:+(int,int):*(int,int):org.joda.time.chrono.BasicChronology@getWeekOfWeekyear(long,int):528:year + 1 |==> year * 1
7045:AOR:+(int,int):-(int,int):org.joda.time.chrono.BasicChronology@getWeekOfWeekyear(long,int):528:year + 1 |==> year - 1
7046:AOR:+(int,int):/(int,int):org.joda.time.chrono.BasicChronology@getWeekOfWeekyear(long,int):528:year + 1 |==> year / 1
7047:ROR:>=(long,long):==(long,long):org.joda.time.chrono.BasicChronology@getWeekOfWeekyear(long,int):529:instant >= firstWeekMillis2 |==> instant == firstWeekMillis2
7048:ROR:>=(long,long):>(long,long):org.joda.time.chrono.BasicChronology@getWeekOfWeekyear(long,int):529:instant >= firstWeekMillis2 |==> instant > firstWeekMillis2
7049:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.BasicChronology@getWeekOfWeekyear(long,int):529:instant >= firstWeekMillis2 |==> true
7050:LVR:POS:0:org.joda.time.chrono.BasicChronology@getWeekOfWeekyear(long,int):530:1 |==> 0
7051:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getWeekOfWeekyear(long,int):530:1 |==> -1
7052:AOR:-(long,long):%(long,long):org.joda.time.chrono.BasicChronology@getWeekOfWeekyear(long,int):532:instant - firstWeekMillis1 |==> instant % firstWeekMillis1
7053:AOR:-(long,long):*(long,long):org.joda.time.chrono.BasicChronology@getWeekOfWeekyear(long,int):532:instant - firstWeekMillis1 |==> instant * firstWeekMillis1
7054:AOR:-(long,long):+(long,long):org.joda.time.chrono.BasicChronology@getWeekOfWeekyear(long,int):532:instant - firstWeekMillis1 |==> instant + firstWeekMillis1
7055:AOR:-(long,long):/(long,long):org.joda.time.chrono.BasicChronology@getWeekOfWeekyear(long,int):532:instant - firstWeekMillis1 |==> instant / firstWeekMillis1
7056:AOR:/(long,long):%(long,long):org.joda.time.chrono.BasicChronology@getWeekOfWeekyear(long,int):532:(instant - firstWeekMillis1) / DateTimeConstants.MILLIS_PER_WEEK |==> (instant - firstWeekMillis1) % DateTimeConstants.MILLIS_PER_WEEK
7057:AOR:/(long,long):*(long,long):org.joda.time.chrono.BasicChronology@getWeekOfWeekyear(long,int):532:(instant - firstWeekMillis1) / DateTimeConstants.MILLIS_PER_WEEK |==> (instant - firstWeekMillis1) * DateTimeConstants.MILLIS_PER_WEEK
7058:AOR:/(long,long):+(long,long):org.joda.time.chrono.BasicChronology@getWeekOfWeekyear(long,int):532:(instant - firstWeekMillis1) / DateTimeConstants.MILLIS_PER_WEEK |==> (instant - firstWeekMillis1) + DateTimeConstants.MILLIS_PER_WEEK
7059:AOR:/(long,long):-(long,long):org.joda.time.chrono.BasicChronology@getWeekOfWeekyear(long,int):532:(instant - firstWeekMillis1) / DateTimeConstants.MILLIS_PER_WEEK |==> (instant - firstWeekMillis1) - DateTimeConstants.MILLIS_PER_WEEK
7060:LVR:POS:0:org.joda.time.chrono.BasicChronology@getWeekOfWeekyear(long,int):532:1 |==> 0
7061:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getWeekOfWeekyear(long,int):532:1 |==> -1
7062:AOR:+(int,int):%(int,int):org.joda.time.chrono.BasicChronology@getWeekOfWeekyear(long,int):532:(int)((instant - firstWeekMillis1) / DateTimeConstants.MILLIS_PER_WEEK) + 1 |==> (int)((instant - firstWeekMillis1) / DateTimeConstants.MILLIS_PER_WEEK) % 1
7063:AOR:+(int,int):*(int,int):org.joda.time.chrono.BasicChronology@getWeekOfWeekyear(long,int):532:(int)((instant - firstWeekMillis1) / DateTimeConstants.MILLIS_PER_WEEK) + 1 |==> (int)((instant - firstWeekMillis1) / DateTimeConstants.MILLIS_PER_WEEK) * 1
7064:AOR:+(int,int):-(int,int):org.joda.time.chrono.BasicChronology@getWeekOfWeekyear(long,int):532:(int)((instant - firstWeekMillis1) / DateTimeConstants.MILLIS_PER_WEEK) + 1 |==> (int)((instant - firstWeekMillis1) / DateTimeConstants.MILLIS_PER_WEEK) - 1
7065:AOR:+(int,int):/(int,int):org.joda.time.chrono.BasicChronology@getWeekOfWeekyear(long,int):532:(int)((instant - firstWeekMillis1) / DateTimeConstants.MILLIS_PER_WEEK) + 1 |==> (int)((instant - firstWeekMillis1) / DateTimeConstants.MILLIS_PER_WEEK) / 1
7066:LVR:0:POS:org.joda.time.chrono.BasicChronology@getDayOfWeek(long):542:0 |==> 1
7067:LVR:0:NEG:org.joda.time.chrono.BasicChronology@getDayOfWeek(long):542:0 |==> -1
7068:ROR:>=(long,long):==(long,long):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):542:instant >= 0 |==> instant == 0
7069:ROR:>=(long,long):>(long,long):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):542:instant >= 0 |==> instant > 0
7070:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):542:instant >= 0 |==> true
7071:AOR:/(long,long):%(long,long):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):543:instant / DateTimeConstants.MILLIS_PER_DAY |==> instant % DateTimeConstants.MILLIS_PER_DAY
7072:AOR:/(long,long):*(long,long):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):543:instant / DateTimeConstants.MILLIS_PER_DAY |==> instant * DateTimeConstants.MILLIS_PER_DAY
7073:AOR:/(long,long):+(long,long):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):543:instant / DateTimeConstants.MILLIS_PER_DAY |==> instant + DateTimeConstants.MILLIS_PER_DAY
7074:AOR:/(long,long):-(long,long):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):543:instant / DateTimeConstants.MILLIS_PER_DAY |==> instant - DateTimeConstants.MILLIS_PER_DAY
7075:LVR:POS:0:org.joda.time.chrono.BasicChronology@getDayOfWeek(long):545:1 |==> 0
7076:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getDayOfWeek(long):545:1 |==> -1
7077:AOR:-(int,int):%(int,int):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):545:DateTimeConstants.MILLIS_PER_DAY - 1 |==> DateTimeConstants.MILLIS_PER_DAY % 1
7078:AOR:-(int,int):*(int,int):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):545:DateTimeConstants.MILLIS_PER_DAY - 1 |==> DateTimeConstants.MILLIS_PER_DAY * 1
7079:AOR:-(int,int):+(int,int):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):545:DateTimeConstants.MILLIS_PER_DAY - 1 |==> DateTimeConstants.MILLIS_PER_DAY + 1
7080:AOR:-(int,int):/(int,int):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):545:DateTimeConstants.MILLIS_PER_DAY - 1 |==> DateTimeConstants.MILLIS_PER_DAY / 1
7081:AOR:-(long,long):%(long,long):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):545:instant - (DateTimeConstants.MILLIS_PER_DAY - 1) |==> instant % (DateTimeConstants.MILLIS_PER_DAY - 1)
7082:AOR:-(long,long):*(long,long):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):545:instant - (DateTimeConstants.MILLIS_PER_DAY - 1) |==> instant * (DateTimeConstants.MILLIS_PER_DAY - 1)
7083:AOR:-(long,long):+(long,long):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):545:instant - (DateTimeConstants.MILLIS_PER_DAY - 1) |==> instant + (DateTimeConstants.MILLIS_PER_DAY - 1)
7084:AOR:-(long,long):/(long,long):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):545:instant - (DateTimeConstants.MILLIS_PER_DAY - 1) |==> instant / (DateTimeConstants.MILLIS_PER_DAY - 1)
7085:AOR:/(long,long):%(long,long):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):545:(instant - (DateTimeConstants.MILLIS_PER_DAY - 1)) / DateTimeConstants.MILLIS_PER_DAY |==> (instant - (DateTimeConstants.MILLIS_PER_DAY - 1)) % DateTimeConstants.MILLIS_PER_DAY
7086:AOR:/(long,long):*(long,long):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):545:(instant - (DateTimeConstants.MILLIS_PER_DAY - 1)) / DateTimeConstants.MILLIS_PER_DAY |==> (instant - (DateTimeConstants.MILLIS_PER_DAY - 1)) * DateTimeConstants.MILLIS_PER_DAY
7087:AOR:/(long,long):+(long,long):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):545:(instant - (DateTimeConstants.MILLIS_PER_DAY - 1)) / DateTimeConstants.MILLIS_PER_DAY |==> (instant - (DateTimeConstants.MILLIS_PER_DAY - 1)) + DateTimeConstants.MILLIS_PER_DAY
7088:AOR:/(long,long):-(long,long):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):545:(instant - (DateTimeConstants.MILLIS_PER_DAY - 1)) / DateTimeConstants.MILLIS_PER_DAY |==> (instant - (DateTimeConstants.MILLIS_PER_DAY - 1)) - DateTimeConstants.MILLIS_PER_DAY
7089:LVR:NEG:0:org.joda.time.chrono.BasicChronology@getDayOfWeek(long):547:-3 |==> 0
7090:LVR:NEG:POS:org.joda.time.chrono.BasicChronology@getDayOfWeek(long):547:-3 |==> 3
7091:ROR:<(long,long):!=(long,long):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):547:daysSince19700101 < -3 |==> daysSince19700101 != -3
7092:ROR:<(long,long):<=(long,long):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):547:daysSince19700101 < -3 |==> daysSince19700101 <= -3
7093:ROR:<(long,long):FALSE(long,long):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):547:daysSince19700101 < -3 |==> false
7094:LVR:POS:0:org.joda.time.chrono.BasicChronology@getDayOfWeek(long):548:7 |==> 0
7095:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getDayOfWeek(long):548:7 |==> -7
7096:LVR:POS:0:org.joda.time.chrono.BasicChronology@getDayOfWeek(long):548:4 |==> 0
7097:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getDayOfWeek(long):548:4 |==> -4
7098:AOR:+(long,long):%(long,long):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):548:daysSince19700101 + 4 |==> daysSince19700101 % 4
7099:AOR:+(long,long):*(long,long):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):548:daysSince19700101 + 4 |==> daysSince19700101 * 4
7100:AOR:+(long,long):-(long,long):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):548:daysSince19700101 + 4 |==> daysSince19700101 - 4
7101:AOR:+(long,long):/(long,long):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):548:daysSince19700101 + 4 |==> daysSince19700101 / 4
7102:LVR:POS:0:org.joda.time.chrono.BasicChronology@getDayOfWeek(long):548:7 |==> 0
7103:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getDayOfWeek(long):548:7 |==> -7
7104:AOR:%(long,long):*(long,long):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):548:(daysSince19700101 + 4) % 7 |==> (daysSince19700101 + 4) * 7
7105:AOR:%(long,long):+(long,long):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):548:(daysSince19700101 + 4) % 7 |==> (daysSince19700101 + 4) + 7
7106:AOR:%(long,long):-(long,long):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):548:(daysSince19700101 + 4) % 7 |==> (daysSince19700101 + 4) - 7
7107:AOR:%(long,long):/(long,long):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):548:(daysSince19700101 + 4) % 7 |==> (daysSince19700101 + 4) / 7
7108:AOR:+(int,int):%(int,int):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):548:7 + (int)((daysSince19700101 + 4) % 7) |==> 7 % (int)((daysSince19700101 + 4) % 7)
7109:AOR:+(int,int):*(int,int):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):548:7 + (int)((daysSince19700101 + 4) % 7) |==> 7 * (int)((daysSince19700101 + 4) % 7)
7110:AOR:+(int,int):-(int,int):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):548:7 + (int)((daysSince19700101 + 4) % 7) |==> 7 - (int)((daysSince19700101 + 4) % 7)
7111:AOR:+(int,int):/(int,int):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):548:7 + (int)((daysSince19700101 + 4) % 7) |==> 7 / (int)((daysSince19700101 + 4) % 7)
7112:LVR:POS:0:org.joda.time.chrono.BasicChronology@getDayOfWeek(long):552:1 |==> 0
7113:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getDayOfWeek(long):552:1 |==> -1
7114:LVR:POS:0:org.joda.time.chrono.BasicChronology@getDayOfWeek(long):552:3 |==> 0
7115:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getDayOfWeek(long):552:3 |==> -3
7116:AOR:+(long,long):%(long,long):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):552:daysSince19700101 + 3 |==> daysSince19700101 % 3
7117:AOR:+(long,long):*(long,long):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):552:daysSince19700101 + 3 |==> daysSince19700101 * 3
7118:AOR:+(long,long):-(long,long):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):552:daysSince19700101 + 3 |==> daysSince19700101 - 3
7119:AOR:+(long,long):/(long,long):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):552:daysSince19700101 + 3 |==> daysSince19700101 / 3
7120:LVR:POS:0:org.joda.time.chrono.BasicChronology@getDayOfWeek(long):552:7 |==> 0
7121:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getDayOfWeek(long):552:7 |==> -7
7122:AOR:%(long,long):*(long,long):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):552:(daysSince19700101 + 3) % 7 |==> (daysSince19700101 + 3) * 7
7123:AOR:%(long,long):+(long,long):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):552:(daysSince19700101 + 3) % 7 |==> (daysSince19700101 + 3) + 7
7124:AOR:%(long,long):-(long,long):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):552:(daysSince19700101 + 3) % 7 |==> (daysSince19700101 + 3) - 7
7125:AOR:%(long,long):/(long,long):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):552:(daysSince19700101 + 3) % 7 |==> (daysSince19700101 + 3) / 7
7126:AOR:+(int,int):%(int,int):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):552:1 + (int)((daysSince19700101 + 3) % 7) |==> 1 % (int)((daysSince19700101 + 3) % 7)
7127:AOR:+(int,int):*(int,int):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):552:1 + (int)((daysSince19700101 + 3) % 7) |==> 1 * (int)((daysSince19700101 + 3) % 7)
7128:AOR:+(int,int):-(int,int):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):552:1 + (int)((daysSince19700101 + 3) % 7) |==> 1 - (int)((daysSince19700101 + 3) % 7)
7129:AOR:+(int,int):/(int,int):org.joda.time.chrono.BasicChronology@getDayOfWeek(long):552:1 + (int)((daysSince19700101 + 3) % 7) |==> 1 / (int)((daysSince19700101 + 3) % 7)
7130:LVR:0:POS:org.joda.time.chrono.BasicChronology@getMillisOfDay(long):559:0 |==> 1
7131:LVR:0:NEG:org.joda.time.chrono.BasicChronology@getMillisOfDay(long):559:0 |==> -1
7132:ROR:>=(long,long):==(long,long):org.joda.time.chrono.BasicChronology@getMillisOfDay(long):559:instant >= 0 |==> instant == 0
7133:ROR:>=(long,long):>(long,long):org.joda.time.chrono.BasicChronology@getMillisOfDay(long):559:instant >= 0 |==> instant > 0
7134:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.BasicChronology@getMillisOfDay(long):559:instant >= 0 |==> true
7135:AOR:%(long,long):*(long,long):org.joda.time.chrono.BasicChronology@getMillisOfDay(long):560:instant % DateTimeConstants.MILLIS_PER_DAY |==> instant * DateTimeConstants.MILLIS_PER_DAY
7136:AOR:%(long,long):+(long,long):org.joda.time.chrono.BasicChronology@getMillisOfDay(long):560:instant % DateTimeConstants.MILLIS_PER_DAY |==> instant + DateTimeConstants.MILLIS_PER_DAY
7137:AOR:%(long,long):-(long,long):org.joda.time.chrono.BasicChronology@getMillisOfDay(long):560:instant % DateTimeConstants.MILLIS_PER_DAY |==> instant - DateTimeConstants.MILLIS_PER_DAY
7138:AOR:%(long,long):/(long,long):org.joda.time.chrono.BasicChronology@getMillisOfDay(long):560:instant % DateTimeConstants.MILLIS_PER_DAY |==> instant / DateTimeConstants.MILLIS_PER_DAY
7139:LVR:POS:0:org.joda.time.chrono.BasicChronology@getMillisOfDay(long):562:1 |==> 0
7140:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getMillisOfDay(long):562:1 |==> -1
7141:AOR:-(int,int):%(int,int):org.joda.time.chrono.BasicChronology@getMillisOfDay(long):562:DateTimeConstants.MILLIS_PER_DAY - 1 |==> DateTimeConstants.MILLIS_PER_DAY % 1
7142:AOR:-(int,int):*(int,int):org.joda.time.chrono.BasicChronology@getMillisOfDay(long):562:DateTimeConstants.MILLIS_PER_DAY - 1 |==> DateTimeConstants.MILLIS_PER_DAY * 1
7143:AOR:-(int,int):+(int,int):org.joda.time.chrono.BasicChronology@getMillisOfDay(long):562:DateTimeConstants.MILLIS_PER_DAY - 1 |==> DateTimeConstants.MILLIS_PER_DAY + 1
7144:AOR:-(int,int):/(int,int):org.joda.time.chrono.BasicChronology@getMillisOfDay(long):562:DateTimeConstants.MILLIS_PER_DAY - 1 |==> DateTimeConstants.MILLIS_PER_DAY / 1
7145:LVR:POS:0:org.joda.time.chrono.BasicChronology@getMillisOfDay(long):563:1 |==> 0
7146:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getMillisOfDay(long):563:1 |==> -1
7147:AOR:+(long,long):%(long,long):org.joda.time.chrono.BasicChronology@getMillisOfDay(long):563:instant + 1 |==> instant % 1
7148:AOR:+(long,long):*(long,long):org.joda.time.chrono.BasicChronology@getMillisOfDay(long):563:instant + 1 |==> instant * 1
7149:AOR:+(long,long):-(long,long):org.joda.time.chrono.BasicChronology@getMillisOfDay(long):563:instant + 1 |==> instant - 1
7150:AOR:+(long,long):/(long,long):org.joda.time.chrono.BasicChronology@getMillisOfDay(long):563:instant + 1 |==> instant / 1
7151:AOR:%(long,long):*(long,long):org.joda.time.chrono.BasicChronology@getMillisOfDay(long):563:(instant + 1) % DateTimeConstants.MILLIS_PER_DAY |==> (instant + 1) * DateTimeConstants.MILLIS_PER_DAY
7152:AOR:%(long,long):+(long,long):org.joda.time.chrono.BasicChronology@getMillisOfDay(long):563:(instant + 1) % DateTimeConstants.MILLIS_PER_DAY |==> (instant + 1) + DateTimeConstants.MILLIS_PER_DAY
7153:AOR:%(long,long):-(long,long):org.joda.time.chrono.BasicChronology@getMillisOfDay(long):563:(instant + 1) % DateTimeConstants.MILLIS_PER_DAY |==> (instant + 1) - DateTimeConstants.MILLIS_PER_DAY
7154:AOR:%(long,long):/(long,long):org.joda.time.chrono.BasicChronology@getMillisOfDay(long):563:(instant + 1) % DateTimeConstants.MILLIS_PER_DAY |==> (instant + 1) / DateTimeConstants.MILLIS_PER_DAY
7155:AOR:+(int,int):%(int,int):org.joda.time.chrono.BasicChronology@getMillisOfDay(long):562:(DateTimeConstants.MILLIS_PER_DAY - 1) + (int)((instant + 1) % DateTimeConstants.MILLIS_PER_DAY) |==> (DateTimeConstants.MILLIS_PER_DAY - 1) % (int)((instant + 1) % DateTimeConstants.MILLIS_PER_DAY)
7156:AOR:+(int,int):*(int,int):org.joda.time.chrono.BasicChronology@getMillisOfDay(long):562:(DateTimeConstants.MILLIS_PER_DAY - 1) + (int)((instant + 1) % DateTimeConstants.MILLIS_PER_DAY) |==> (DateTimeConstants.MILLIS_PER_DAY - 1) * (int)((instant + 1) % DateTimeConstants.MILLIS_PER_DAY)
7157:AOR:+(int,int):-(int,int):org.joda.time.chrono.BasicChronology@getMillisOfDay(long):562:(DateTimeConstants.MILLIS_PER_DAY - 1) + (int)((instant + 1) % DateTimeConstants.MILLIS_PER_DAY) |==> (DateTimeConstants.MILLIS_PER_DAY - 1) - (int)((instant + 1) % DateTimeConstants.MILLIS_PER_DAY)
7158:AOR:+(int,int):/(int,int):org.joda.time.chrono.BasicChronology@getMillisOfDay(long):562:(DateTimeConstants.MILLIS_PER_DAY - 1) + (int)((instant + 1) % DateTimeConstants.MILLIS_PER_DAY) |==> (DateTimeConstants.MILLIS_PER_DAY - 1) / (int)((instant + 1) % DateTimeConstants.MILLIS_PER_DAY)
7159:LVR:POS:0:org.joda.time.chrono.BasicChronology@getDaysInMonthMax():573:31 |==> 0
7160:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getDaysInMonthMax():573:31 |==> -31
7161:STD:<CALL>:<NO-OP>:org.joda.time.chrono.BasicChronology@getDateMidnightMillis(int,int,int):611:FieldUtils.verifyValueBounds(DateTimeFieldType.year(), year, getMinYear(), getMaxYear()) |==> <NO-OP>
7162:LVR:POS:0:org.joda.time.chrono.BasicChronology@getDateMidnightMillis(int,int,int):612:1 |==> 0
7163:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getDateMidnightMillis(int,int,int):612:1 |==> -1
7164:STD:<CALL>:<NO-OP>:org.joda.time.chrono.BasicChronology@getDateMidnightMillis(int,int,int):612:FieldUtils.verifyValueBounds(DateTimeFieldType.monthOfYear(), monthOfYear, 1, getMaxMonth(year)) |==> <NO-OP>
7165:LVR:POS:0:org.joda.time.chrono.BasicChronology@getDateMidnightMillis(int,int,int):613:1 |==> 0
7166:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getDateMidnightMillis(int,int,int):613:1 |==> -1
7167:STD:<CALL>:<NO-OP>:org.joda.time.chrono.BasicChronology@getDateMidnightMillis(int,int,int):613:FieldUtils.verifyValueBounds(DateTimeFieldType.dayOfMonth(), dayOfMonth, 1, getDaysInYearMonth(year, monthOfYear)) |==> <NO-OP>
7168:LVR:POS:0:org.joda.time.chrono.BasicChronology@getMaxMonth():699:12 |==> 0
7169:LVR:POS:NEG:org.joda.time.chrono.BasicChronology@getMaxMonth():699:12 |==> -12
7170:LOR:&(int,int):^(int,int):org.joda.time.chrono.BasicChronology@getYearInfo(int):746:year & CACHE_MASK |==> year ^ CACHE_MASK
7171:LOR:&(int,int):|(int,int):org.joda.time.chrono.BasicChronology@getYearInfo(int):746:year & CACHE_MASK |==> year | CACHE_MASK
7172:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.BasicChronology@getYearInfo(int):747:info == null |==> false
7173:ROR:!=(int,int):<(int,int):org.joda.time.chrono.BasicChronology@getYearInfo(int):747:info.iYear != year |==> info.iYear < year
7174:ROR:!=(int,int):>(int,int):org.joda.time.chrono.BasicChronology@getYearInfo(int):747:info.iYear != year |==> info.iYear > year
7175:ROR:!=(int,int):TRUE(int,int):org.joda.time.chrono.BasicChronology@getYearInfo(int):747:info.iYear != year |==> true
7176:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.chrono.BasicChronology@getYearInfo(int):747:info == null || info.iYear != year |==> info == null != (info.iYear != year)
7177:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.BasicChronology@getYearInfo(int):747:info == null || info.iYear != year |==> info == null
7178:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.BasicChronology@getYearInfo(int):747:info == null || info.iYear != year |==> info.iYear != year
7179:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.chrono.BasicChronology@getYearInfo(int):747:info == null || info.iYear != year |==> true
7180:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@getYearInfo(int):748:info = new YearInfo(year, calculateFirstDayOfYearMillis(year)) |==> <NO-OP>
7181:LOR:&(int,int):^(int,int):org.joda.time.chrono.BasicChronology@getYearInfo(int):749:year & CACHE_MASK |==> year ^ CACHE_MASK
7182:LOR:&(int,int):|(int,int):org.joda.time.chrono.BasicChronology@getYearInfo(int):749:year & CACHE_MASK |==> year | CACHE_MASK
7183:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicChronology@getYearInfo(int):749:iYearInfoCache[year & CACHE_MASK] = info |==> <NO-OP>
7184:COR:range.isPrecise():TRUE:org.joda.time.field.PreciseDateTimeField@<init>(org.joda.time.DateTimeFieldType,org.joda.time.DurationField,org.joda.time.DurationField):60:range.isPrecise() |==> false
7185:COR:range.isPrecise():FALSE:org.joda.time.field.PreciseDateTimeField@<init>(org.joda.time.DateTimeFieldType,org.joda.time.DurationField,org.joda.time.DurationField):60:range.isPrecise() |==> true
7186:AOR:/(long,long):%(long,long):org.joda.time.field.PreciseDateTimeField@<init>(org.joda.time.DateTimeFieldType,org.joda.time.DurationField,org.joda.time.DurationField):65:rangeMillis / getUnitMillis() |==> rangeMillis % getUnitMillis()
7187:AOR:/(long,long):*(long,long):org.joda.time.field.PreciseDateTimeField@<init>(org.joda.time.DateTimeFieldType,org.joda.time.DurationField,org.joda.time.DurationField):65:rangeMillis / getUnitMillis() |==> rangeMillis * getUnitMillis()
7188:AOR:/(long,long):+(long,long):org.joda.time.field.PreciseDateTimeField@<init>(org.joda.time.DateTimeFieldType,org.joda.time.DurationField,org.joda.time.DurationField):65:rangeMillis / getUnitMillis() |==> rangeMillis + getUnitMillis()
7189:AOR:/(long,long):-(long,long):org.joda.time.field.PreciseDateTimeField@<init>(org.joda.time.DateTimeFieldType,org.joda.time.DurationField,org.joda.time.DurationField):65:rangeMillis / getUnitMillis() |==> rangeMillis - getUnitMillis()
7190:LVR:POS:0:org.joda.time.field.PreciseDateTimeField@<init>(org.joda.time.DateTimeFieldType,org.joda.time.DurationField,org.joda.time.DurationField):66:2 |==> 0
7191:LVR:POS:NEG:org.joda.time.field.PreciseDateTimeField@<init>(org.joda.time.DateTimeFieldType,org.joda.time.DurationField,org.joda.time.DurationField):66:2 |==> -2
7192:ROR:<(int,int):!=(int,int):org.joda.time.field.PreciseDateTimeField@<init>(org.joda.time.DateTimeFieldType,org.joda.time.DurationField,org.joda.time.DurationField):66:iRange < 2 |==> iRange != 2
7193:ROR:<(int,int):<=(int,int):org.joda.time.field.PreciseDateTimeField@<init>(org.joda.time.DateTimeFieldType,org.joda.time.DurationField,org.joda.time.DurationField):66:iRange < 2 |==> iRange <= 2
7194:ROR:<(int,int):FALSE(int,int):org.joda.time.field.PreciseDateTimeField@<init>(org.joda.time.DateTimeFieldType,org.joda.time.DurationField,org.joda.time.DurationField):66:iRange < 2 |==> false
7195:LVR:0:POS:org.joda.time.field.PreciseDateTimeField@get(long):80:0 |==> 1
7196:LVR:0:NEG:org.joda.time.field.PreciseDateTimeField@get(long):80:0 |==> -1
7197:ROR:>=(long,long):==(long,long):org.joda.time.field.PreciseDateTimeField@get(long):80:instant >= 0 |==> instant == 0
7198:ROR:>=(long,long):>(long,long):org.joda.time.field.PreciseDateTimeField@get(long):80:instant >= 0 |==> instant > 0
7199:ROR:>=(long,long):TRUE(long,long):org.joda.time.field.PreciseDateTimeField@get(long):80:instant >= 0 |==> true
7200:AOR:/(long,long):%(long,long):org.joda.time.field.PreciseDateTimeField@get(long):81:instant / getUnitMillis() |==> instant % getUnitMillis()
7201:AOR:/(long,long):*(long,long):org.joda.time.field.PreciseDateTimeField@get(long):81:instant / getUnitMillis() |==> instant * getUnitMillis()
7202:AOR:/(long,long):+(long,long):org.joda.time.field.PreciseDateTimeField@get(long):81:instant / getUnitMillis() |==> instant + getUnitMillis()
7203:AOR:/(long,long):-(long,long):org.joda.time.field.PreciseDateTimeField@get(long):81:instant / getUnitMillis() |==> instant - getUnitMillis()
7204:AOR:%(long,long):*(long,long):org.joda.time.field.PreciseDateTimeField@get(long):81:(instant / getUnitMillis()) % iRange |==> (instant / getUnitMillis()) * iRange
7205:AOR:%(long,long):+(long,long):org.joda.time.field.PreciseDateTimeField@get(long):81:(instant / getUnitMillis()) % iRange |==> (instant / getUnitMillis()) + iRange
7206:AOR:%(long,long):-(long,long):org.joda.time.field.PreciseDateTimeField@get(long):81:(instant / getUnitMillis()) % iRange |==> (instant / getUnitMillis()) - iRange
7207:AOR:%(long,long):/(long,long):org.joda.time.field.PreciseDateTimeField@get(long):81:(instant / getUnitMillis()) % iRange |==> (instant / getUnitMillis()) / iRange
7208:LVR:POS:0:org.joda.time.field.PreciseDateTimeField@get(long):83:1 |==> 0
7209:LVR:POS:NEG:org.joda.time.field.PreciseDateTimeField@get(long):83:1 |==> -1
7210:AOR:-(int,int):%(int,int):org.joda.time.field.PreciseDateTimeField@get(long):83:iRange - 1 |==> iRange % 1
7211:AOR:-(int,int):*(int,int):org.joda.time.field.PreciseDateTimeField@get(long):83:iRange - 1 |==> iRange * 1
7212:AOR:-(int,int):+(int,int):org.joda.time.field.PreciseDateTimeField@get(long):83:iRange - 1 |==> iRange + 1
7213:AOR:-(int,int):/(int,int):org.joda.time.field.PreciseDateTimeField@get(long):83:iRange - 1 |==> iRange / 1
7214:LVR:POS:0:org.joda.time.field.PreciseDateTimeField@get(long):83:1 |==> 0
7215:LVR:POS:NEG:org.joda.time.field.PreciseDateTimeField@get(long):83:1 |==> -1
7216:AOR:+(long,long):%(long,long):org.joda.time.field.PreciseDateTimeField@get(long):83:instant + 1 |==> instant % 1
7217:AOR:+(long,long):*(long,long):org.joda.time.field.PreciseDateTimeField@get(long):83:instant + 1 |==> instant * 1
7218:AOR:+(long,long):-(long,long):org.joda.time.field.PreciseDateTimeField@get(long):83:instant + 1 |==> instant - 1
7219:AOR:+(long,long):/(long,long):org.joda.time.field.PreciseDateTimeField@get(long):83:instant + 1 |==> instant / 1
7220:AOR:/(long,long):%(long,long):org.joda.time.field.PreciseDateTimeField@get(long):83:(instant + 1) / getUnitMillis() |==> (instant + 1) % getUnitMillis()
7221:AOR:/(long,long):*(long,long):org.joda.time.field.PreciseDateTimeField@get(long):83:(instant + 1) / getUnitMillis() |==> (instant + 1) * getUnitMillis()
7222:AOR:/(long,long):+(long,long):org.joda.time.field.PreciseDateTimeField@get(long):83:(instant + 1) / getUnitMillis() |==> (instant + 1) + getUnitMillis()
7223:AOR:/(long,long):-(long,long):org.joda.time.field.PreciseDateTimeField@get(long):83:(instant + 1) / getUnitMillis() |==> (instant + 1) - getUnitMillis()
7224:AOR:%(long,long):*(long,long):org.joda.time.field.PreciseDateTimeField@get(long):83:((instant + 1) / getUnitMillis()) % iRange |==> ((instant + 1) / getUnitMillis()) * iRange
7225:AOR:%(long,long):+(long,long):org.joda.time.field.PreciseDateTimeField@get(long):83:((instant + 1) / getUnitMillis()) % iRange |==> ((instant + 1) / getUnitMillis()) + iRange
7226:AOR:%(long,long):-(long,long):org.joda.time.field.PreciseDateTimeField@get(long):83:((instant + 1) / getUnitMillis()) % iRange |==> ((instant + 1) / getUnitMillis()) - iRange
7227:AOR:%(long,long):/(long,long):org.joda.time.field.PreciseDateTimeField@get(long):83:((instant + 1) / getUnitMillis()) % iRange |==> ((instant + 1) / getUnitMillis()) / iRange
7228:AOR:+(int,int):%(int,int):org.joda.time.field.PreciseDateTimeField@get(long):83:iRange - 1 + (int)(((instant + 1) / getUnitMillis()) % iRange) |==> (iRange - 1) % (int)(((instant + 1) / getUnitMillis()) % iRange)
7229:AOR:+(int,int):*(int,int):org.joda.time.field.PreciseDateTimeField@get(long):83:iRange - 1 + (int)(((instant + 1) / getUnitMillis()) % iRange) |==> (iRange - 1) * (int)(((instant + 1) / getUnitMillis()) % iRange)
7230:AOR:+(int,int):-(int,int):org.joda.time.field.PreciseDateTimeField@get(long):83:iRange - 1 + (int)(((instant + 1) / getUnitMillis()) % iRange) |==> iRange - 1 - (int)(((instant + 1) / getUnitMillis()) % iRange)
7231:AOR:+(int,int):/(int,int):org.joda.time.field.PreciseDateTimeField@get(long):83:iRange - 1 + (int)(((instant + 1) / getUnitMillis()) % iRange) |==> (iRange - 1) / (int)(((instant + 1) / getUnitMillis()) % iRange)
7232:AOR:-(int,int):%(int,int):org.joda.time.field.PreciseDateTimeField@addWrapField(long,int):100:wrappedValue - thisValue |==> wrappedValue % thisValue
7233:AOR:-(int,int):*(int,int):org.joda.time.field.PreciseDateTimeField@addWrapField(long,int):100:wrappedValue - thisValue |==> wrappedValue * thisValue
7234:AOR:-(int,int):+(int,int):org.joda.time.field.PreciseDateTimeField@addWrapField(long,int):100:wrappedValue - thisValue |==> wrappedValue + thisValue
7235:AOR:-(int,int):/(int,int):org.joda.time.field.PreciseDateTimeField@addWrapField(long,int):100:wrappedValue - thisValue |==> wrappedValue / thisValue
7236:AOR:*(long,long):%(long,long):org.joda.time.field.PreciseDateTimeField@addWrapField(long,int):100:(wrappedValue - thisValue) * getUnitMillis() |==> (wrappedValue - thisValue) % getUnitMillis()
7237:AOR:*(long,long):+(long,long):org.joda.time.field.PreciseDateTimeField@addWrapField(long,int):100:(wrappedValue - thisValue) * getUnitMillis() |==> (wrappedValue - thisValue) + getUnitMillis()
7238:AOR:*(long,long):-(long,long):org.joda.time.field.PreciseDateTimeField@addWrapField(long,int):100:(wrappedValue - thisValue) * getUnitMillis() |==> (wrappedValue - thisValue) - getUnitMillis()
7239:AOR:*(long,long):/(long,long):org.joda.time.field.PreciseDateTimeField@addWrapField(long,int):100:(wrappedValue - thisValue) * getUnitMillis() |==> (wrappedValue - thisValue) / getUnitMillis()
7240:AOR:+(long,long):%(long,long):org.joda.time.field.PreciseDateTimeField@addWrapField(long,int):100:instant + (wrappedValue - thisValue) * getUnitMillis() |==> instant % ((wrappedValue - thisValue) * getUnitMillis())
7241:AOR:+(long,long):*(long,long):org.joda.time.field.PreciseDateTimeField@addWrapField(long,int):100:instant + (wrappedValue - thisValue) * getUnitMillis() |==> instant * ((wrappedValue - thisValue) * getUnitMillis())
7242:AOR:+(long,long):-(long,long):org.joda.time.field.PreciseDateTimeField@addWrapField(long,int):100:instant + (wrappedValue - thisValue) * getUnitMillis() |==> instant - (wrappedValue - thisValue) * getUnitMillis()
7243:AOR:+(long,long):/(long,long):org.joda.time.field.PreciseDateTimeField@addWrapField(long,int):100:instant + (wrappedValue - thisValue) * getUnitMillis() |==> instant / ((wrappedValue - thisValue) * getUnitMillis())
7244:STD:<CALL>:<NO-OP>:org.joda.time.field.PreciseDateTimeField@set(long,int):112:FieldUtils.verifyValueBounds(this, value, getMinimumValue(), getMaximumValue()) |==> <NO-OP>
7245:AOR:-(int,int):%(int,int):org.joda.time.field.PreciseDateTimeField@set(long,int):113:value - get(instant) |==> value % get(instant)
7246:AOR:-(int,int):*(int,int):org.joda.time.field.PreciseDateTimeField@set(long,int):113:value - get(instant) |==> value * get(instant)
7247:AOR:-(int,int):+(int,int):org.joda.time.field.PreciseDateTimeField@set(long,int):113:value - get(instant) |==> value + get(instant)
7248:AOR:-(int,int):/(int,int):org.joda.time.field.PreciseDateTimeField@set(long,int):113:value - get(instant) |==> value / get(instant)
7249:AOR:*(long,long):%(long,long):org.joda.time.field.PreciseDateTimeField@set(long,int):113:(value - get(instant)) * iUnitMillis |==> (value - get(instant)) % iUnitMillis
7250:AOR:*(long,long):+(long,long):org.joda.time.field.PreciseDateTimeField@set(long,int):113:(value - get(instant)) * iUnitMillis |==> (value - get(instant)) + iUnitMillis
7251:AOR:*(long,long):-(long,long):org.joda.time.field.PreciseDateTimeField@set(long,int):113:(value - get(instant)) * iUnitMillis |==> (value - get(instant)) - iUnitMillis
7252:AOR:*(long,long):/(long,long):org.joda.time.field.PreciseDateTimeField@set(long,int):113:(value - get(instant)) * iUnitMillis |==> (value - get(instant)) / iUnitMillis
7253:AOR:+(long,long):%(long,long):org.joda.time.field.PreciseDateTimeField@set(long,int):113:instant + (value - get(instant)) * iUnitMillis |==> instant % ((value - get(instant)) * iUnitMillis)
7254:AOR:+(long,long):*(long,long):org.joda.time.field.PreciseDateTimeField@set(long,int):113:instant + (value - get(instant)) * iUnitMillis |==> instant * ((value - get(instant)) * iUnitMillis)
7255:AOR:+(long,long):-(long,long):org.joda.time.field.PreciseDateTimeField@set(long,int):113:instant + (value - get(instant)) * iUnitMillis |==> instant - (value - get(instant)) * iUnitMillis
7256:AOR:+(long,long):/(long,long):org.joda.time.field.PreciseDateTimeField@set(long,int):113:instant + (value - get(instant)) * iUnitMillis |==> instant / ((value - get(instant)) * iUnitMillis)
7257:LVR:POS:0:org.joda.time.field.PreciseDateTimeField@getMaximumValue():132:1 |==> 0
7258:LVR:POS:NEG:org.joda.time.field.PreciseDateTimeField@getMaximumValue():132:1 |==> -1
7259:AOR:-(int,int):%(int,int):org.joda.time.field.PreciseDateTimeField@getMaximumValue():132:iRange - 1 |==> iRange % 1
7260:AOR:-(int,int):*(int,int):org.joda.time.field.PreciseDateTimeField@getMaximumValue():132:iRange - 1 |==> iRange * 1
7261:AOR:-(int,int):+(int,int):org.joda.time.field.PreciseDateTimeField@getMaximumValue():132:iRange - 1 |==> iRange + 1
7262:AOR:-(int,int):/(int,int):org.joda.time.field.PreciseDateTimeField@getMaximumValue():132:iRange - 1 |==> iRange / 1
7263:COR:unit.isPrecise():TRUE:org.joda.time.field.PreciseDurationDateTimeField@<init>(org.joda.time.DateTimeFieldType,org.joda.time.DurationField):51:unit.isPrecise() |==> false
7264:COR:unit.isPrecise():FALSE:org.joda.time.field.PreciseDurationDateTimeField@<init>(org.joda.time.DateTimeFieldType,org.joda.time.DurationField):51:unit.isPrecise() |==> true
7265:LVR:POS:0:org.joda.time.field.PreciseDurationDateTimeField@<init>(org.joda.time.DateTimeFieldType,org.joda.time.DurationField):56:1 |==> 0
7266:LVR:POS:NEG:org.joda.time.field.PreciseDurationDateTimeField@<init>(org.joda.time.DateTimeFieldType,org.joda.time.DurationField):56:1 |==> -1
7267:ROR:<(long,long):!=(long,long):org.joda.time.field.PreciseDurationDateTimeField@<init>(org.joda.time.DateTimeFieldType,org.joda.time.DurationField):56:iUnitMillis < 1 |==> iUnitMillis != 1
7268:ROR:<(long,long):<=(long,long):org.joda.time.field.PreciseDurationDateTimeField@<init>(org.joda.time.DateTimeFieldType,org.joda.time.DurationField):56:iUnitMillis < 1 |==> iUnitMillis <= 1
7269:ROR:<(long,long):FALSE(long,long):org.joda.time.field.PreciseDurationDateTimeField@<init>(org.joda.time.DateTimeFieldType,org.joda.time.DurationField):56:iUnitMillis < 1 |==> false
7270:LVR:FALSE:TRUE:org.joda.time.field.PreciseDurationDateTimeField@isLenient():67:false |==> true
7271:STD:<CALL>:<NO-OP>:org.joda.time.field.PreciseDurationDateTimeField@set(long,int):79:FieldUtils.verifyValueBounds(this, value, getMinimumValue(), getMaximumValueForSet(instant, value)) |==> <NO-OP>
7272:AOR:-(int,int):%(int,int):org.joda.time.field.PreciseDurationDateTimeField@set(long,int):81:value - get(instant) |==> value % get(instant)
7273:AOR:-(int,int):*(int,int):org.joda.time.field.PreciseDurationDateTimeField@set(long,int):81:value - get(instant) |==> value * get(instant)
7274:AOR:-(int,int):+(int,int):org.joda.time.field.PreciseDurationDateTimeField@set(long,int):81:value - get(instant) |==> value + get(instant)
7275:AOR:-(int,int):/(int,int):org.joda.time.field.PreciseDurationDateTimeField@set(long,int):81:value - get(instant) |==> value / get(instant)
7276:AOR:*(long,long):%(long,long):org.joda.time.field.PreciseDurationDateTimeField@set(long,int):81:(value - get(instant)) * iUnitMillis |==> (value - get(instant)) % iUnitMillis
7277:AOR:*(long,long):+(long,long):org.joda.time.field.PreciseDurationDateTimeField@set(long,int):81:(value - get(instant)) * iUnitMillis |==> (value - get(instant)) + iUnitMillis
7278:AOR:*(long,long):-(long,long):org.joda.time.field.PreciseDurationDateTimeField@set(long,int):81:(value - get(instant)) * iUnitMillis |==> (value - get(instant)) - iUnitMillis
7279:AOR:*(long,long):/(long,long):org.joda.time.field.PreciseDurationDateTimeField@set(long,int):81:(value - get(instant)) * iUnitMillis |==> (value - get(instant)) / iUnitMillis
7280:AOR:+(long,long):%(long,long):org.joda.time.field.PreciseDurationDateTimeField@set(long,int):81:instant + (value - get(instant)) * iUnitMillis |==> instant % ((value - get(instant)) * iUnitMillis)
7281:AOR:+(long,long):*(long,long):org.joda.time.field.PreciseDurationDateTimeField@set(long,int):81:instant + (value - get(instant)) * iUnitMillis |==> instant * ((value - get(instant)) * iUnitMillis)
7282:AOR:+(long,long):-(long,long):org.joda.time.field.PreciseDurationDateTimeField@set(long,int):81:instant + (value - get(instant)) * iUnitMillis |==> instant - (value - get(instant)) * iUnitMillis
7283:AOR:+(long,long):/(long,long):org.joda.time.field.PreciseDurationDateTimeField@set(long,int):81:instant + (value - get(instant)) * iUnitMillis |==> instant / ((value - get(instant)) * iUnitMillis)
7284:LVR:0:POS:org.joda.time.field.PreciseDurationDateTimeField@roundFloor(long):93:0 |==> 1
7285:LVR:0:NEG:org.joda.time.field.PreciseDurationDateTimeField@roundFloor(long):93:0 |==> -1
7286:ROR:>=(long,long):==(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundFloor(long):93:instant >= 0 |==> instant == 0
7287:ROR:>=(long,long):>(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundFloor(long):93:instant >= 0 |==> instant > 0
7288:ROR:>=(long,long):TRUE(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundFloor(long):93:instant >= 0 |==> true
7289:AOR:%(long,long):*(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundFloor(long):94:instant % iUnitMillis |==> instant * iUnitMillis
7290:AOR:%(long,long):+(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundFloor(long):94:instant % iUnitMillis |==> instant + iUnitMillis
7291:AOR:%(long,long):-(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundFloor(long):94:instant % iUnitMillis |==> instant - iUnitMillis
7292:AOR:%(long,long):/(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundFloor(long):94:instant % iUnitMillis |==> instant / iUnitMillis
7293:AOR:-(long,long):%(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundFloor(long):94:instant - instant % iUnitMillis |==> instant % (instant % iUnitMillis)
7294:AOR:-(long,long):*(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundFloor(long):94:instant - instant % iUnitMillis |==> instant * (instant % iUnitMillis)
7295:AOR:-(long,long):+(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundFloor(long):94:instant - instant % iUnitMillis |==> instant + instant % iUnitMillis
7296:AOR:-(long,long):/(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundFloor(long):94:instant - instant % iUnitMillis |==> instant / (instant % iUnitMillis)
7297:LVR:POS:0:org.joda.time.field.PreciseDurationDateTimeField@roundFloor(long):96:1 |==> 0
7298:LVR:POS:NEG:org.joda.time.field.PreciseDurationDateTimeField@roundFloor(long):96:1 |==> -1
7299:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.PreciseDurationDateTimeField@roundFloor(long):96:instant += 1 |==> <NO-OP>
7300:AOR:%(long,long):*(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundFloor(long):97:instant % iUnitMillis |==> instant * iUnitMillis
7301:AOR:%(long,long):+(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundFloor(long):97:instant % iUnitMillis |==> instant + iUnitMillis
7302:AOR:%(long,long):-(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundFloor(long):97:instant % iUnitMillis |==> instant - iUnitMillis
7303:AOR:%(long,long):/(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundFloor(long):97:instant % iUnitMillis |==> instant / iUnitMillis
7304:AOR:-(long,long):%(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundFloor(long):97:instant - instant % iUnitMillis |==> instant % (instant % iUnitMillis)
7305:AOR:-(long,long):*(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundFloor(long):97:instant - instant % iUnitMillis |==> instant * (instant % iUnitMillis)
7306:AOR:-(long,long):+(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundFloor(long):97:instant - instant % iUnitMillis |==> instant + instant % iUnitMillis
7307:AOR:-(long,long):/(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundFloor(long):97:instant - instant % iUnitMillis |==> instant / (instant % iUnitMillis)
7308:AOR:-(long,long):%(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundFloor(long):97:instant - instant % iUnitMillis - iUnitMillis |==> (instant - instant % iUnitMillis) % iUnitMillis
7309:AOR:-(long,long):*(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundFloor(long):97:instant - instant % iUnitMillis - iUnitMillis |==> (instant - instant % iUnitMillis) * iUnitMillis
7310:AOR:-(long,long):+(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundFloor(long):97:instant - instant % iUnitMillis - iUnitMillis |==> instant - instant % iUnitMillis + iUnitMillis
7311:AOR:-(long,long):/(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundFloor(long):97:instant - instant % iUnitMillis - iUnitMillis |==> (instant - instant % iUnitMillis) / iUnitMillis
7312:LVR:0:POS:org.joda.time.field.PreciseDurationDateTimeField@roundCeiling(long):110:0 |==> 1
7313:LVR:0:NEG:org.joda.time.field.PreciseDurationDateTimeField@roundCeiling(long):110:0 |==> -1
7314:ROR:>(long,long):!=(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundCeiling(long):110:instant > 0 |==> instant != 0
7315:ROR:>(long,long):>=(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundCeiling(long):110:instant > 0 |==> instant >= 0
7316:ROR:>(long,long):FALSE(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundCeiling(long):110:instant > 0 |==> false
7317:LVR:POS:0:org.joda.time.field.PreciseDurationDateTimeField@roundCeiling(long):111:1 |==> 0
7318:LVR:POS:NEG:org.joda.time.field.PreciseDurationDateTimeField@roundCeiling(long):111:1 |==> -1
7319:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.PreciseDurationDateTimeField@roundCeiling(long):111:instant -= 1 |==> <NO-OP>
7320:AOR:%(long,long):*(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundCeiling(long):112:instant % iUnitMillis |==> instant * iUnitMillis
7321:AOR:%(long,long):+(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundCeiling(long):112:instant % iUnitMillis |==> instant + iUnitMillis
7322:AOR:%(long,long):-(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundCeiling(long):112:instant % iUnitMillis |==> instant - iUnitMillis
7323:AOR:%(long,long):/(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundCeiling(long):112:instant % iUnitMillis |==> instant / iUnitMillis
7324:AOR:-(long,long):%(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundCeiling(long):112:instant - instant % iUnitMillis |==> instant % (instant % iUnitMillis)
7325:AOR:-(long,long):*(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundCeiling(long):112:instant - instant % iUnitMillis |==> instant * (instant % iUnitMillis)
7326:AOR:-(long,long):+(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundCeiling(long):112:instant - instant % iUnitMillis |==> instant + instant % iUnitMillis
7327:AOR:-(long,long):/(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundCeiling(long):112:instant - instant % iUnitMillis |==> instant / (instant % iUnitMillis)
7328:AOR:+(long,long):%(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundCeiling(long):112:instant - instant % iUnitMillis + iUnitMillis |==> (instant - instant % iUnitMillis) % iUnitMillis
7329:AOR:+(long,long):*(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundCeiling(long):112:instant - instant % iUnitMillis + iUnitMillis |==> (instant - instant % iUnitMillis) * iUnitMillis
7330:AOR:+(long,long):-(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundCeiling(long):112:instant - instant % iUnitMillis + iUnitMillis |==> instant - instant % iUnitMillis - iUnitMillis
7331:AOR:+(long,long):/(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundCeiling(long):112:instant - instant % iUnitMillis + iUnitMillis |==> (instant - instant % iUnitMillis) / iUnitMillis
7332:AOR:%(long,long):*(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundCeiling(long):114:instant % iUnitMillis |==> instant * iUnitMillis
7333:AOR:%(long,long):+(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundCeiling(long):114:instant % iUnitMillis |==> instant + iUnitMillis
7334:AOR:%(long,long):-(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundCeiling(long):114:instant % iUnitMillis |==> instant - iUnitMillis
7335:AOR:%(long,long):/(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundCeiling(long):114:instant % iUnitMillis |==> instant / iUnitMillis
7336:AOR:-(long,long):%(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundCeiling(long):114:instant - instant % iUnitMillis |==> instant % (instant % iUnitMillis)
7337:AOR:-(long,long):*(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundCeiling(long):114:instant - instant % iUnitMillis |==> instant * (instant % iUnitMillis)
7338:AOR:-(long,long):+(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundCeiling(long):114:instant - instant % iUnitMillis |==> instant + instant % iUnitMillis
7339:AOR:-(long,long):/(long,long):org.joda.time.field.PreciseDurationDateTimeField@roundCeiling(long):114:instant - instant % iUnitMillis |==> instant / (instant % iUnitMillis)
7340:LVR:0:POS:org.joda.time.field.PreciseDurationDateTimeField@remainder(long):127:0 |==> 1
7341:LVR:0:NEG:org.joda.time.field.PreciseDurationDateTimeField@remainder(long):127:0 |==> -1
7342:ROR:>=(long,long):==(long,long):org.joda.time.field.PreciseDurationDateTimeField@remainder(long):127:instant >= 0 |==> instant == 0
7343:ROR:>=(long,long):>(long,long):org.joda.time.field.PreciseDurationDateTimeField@remainder(long):127:instant >= 0 |==> instant > 0
7344:ROR:>=(long,long):TRUE(long,long):org.joda.time.field.PreciseDurationDateTimeField@remainder(long):127:instant >= 0 |==> true
7345:AOR:%(long,long):*(long,long):org.joda.time.field.PreciseDurationDateTimeField@remainder(long):128:instant % iUnitMillis |==> instant * iUnitMillis
7346:AOR:%(long,long):+(long,long):org.joda.time.field.PreciseDurationDateTimeField@remainder(long):128:instant % iUnitMillis |==> instant + iUnitMillis
7347:AOR:%(long,long):-(long,long):org.joda.time.field.PreciseDurationDateTimeField@remainder(long):128:instant % iUnitMillis |==> instant - iUnitMillis
7348:AOR:%(long,long):/(long,long):org.joda.time.field.PreciseDurationDateTimeField@remainder(long):128:instant % iUnitMillis |==> instant / iUnitMillis
7349:LVR:POS:0:org.joda.time.field.PreciseDurationDateTimeField@remainder(long):130:1 |==> 0
7350:LVR:POS:NEG:org.joda.time.field.PreciseDurationDateTimeField@remainder(long):130:1 |==> -1
7351:AOR:+(long,long):%(long,long):org.joda.time.field.PreciseDurationDateTimeField@remainder(long):130:instant + 1 |==> instant % 1
7352:AOR:+(long,long):*(long,long):org.joda.time.field.PreciseDurationDateTimeField@remainder(long):130:instant + 1 |==> instant * 1
7353:AOR:+(long,long):-(long,long):org.joda.time.field.PreciseDurationDateTimeField@remainder(long):130:instant + 1 |==> instant - 1
7354:AOR:+(long,long):/(long,long):org.joda.time.field.PreciseDurationDateTimeField@remainder(long):130:instant + 1 |==> instant / 1
7355:AOR:%(long,long):*(long,long):org.joda.time.field.PreciseDurationDateTimeField@remainder(long):130:(instant + 1) % iUnitMillis |==> (instant + 1) * iUnitMillis
7356:AOR:%(long,long):+(long,long):org.joda.time.field.PreciseDurationDateTimeField@remainder(long):130:(instant + 1) % iUnitMillis |==> (instant + 1) + iUnitMillis
7357:AOR:%(long,long):-(long,long):org.joda.time.field.PreciseDurationDateTimeField@remainder(long):130:(instant + 1) % iUnitMillis |==> (instant + 1) - iUnitMillis
7358:AOR:%(long,long):/(long,long):org.joda.time.field.PreciseDurationDateTimeField@remainder(long):130:(instant + 1) % iUnitMillis |==> (instant + 1) / iUnitMillis
7359:AOR:+(long,long):%(long,long):org.joda.time.field.PreciseDurationDateTimeField@remainder(long):130:(instant + 1) % iUnitMillis + iUnitMillis |==> (instant + 1) % iUnitMillis % iUnitMillis
7360:AOR:+(long,long):*(long,long):org.joda.time.field.PreciseDurationDateTimeField@remainder(long):130:(instant + 1) % iUnitMillis + iUnitMillis |==> (instant + 1) % iUnitMillis * iUnitMillis
7361:AOR:+(long,long):-(long,long):org.joda.time.field.PreciseDurationDateTimeField@remainder(long):130:(instant + 1) % iUnitMillis + iUnitMillis |==> (instant + 1) % iUnitMillis - iUnitMillis
7362:AOR:+(long,long):/(long,long):org.joda.time.field.PreciseDurationDateTimeField@remainder(long):130:(instant + 1) % iUnitMillis + iUnitMillis |==> (instant + 1) % iUnitMillis / iUnitMillis
7363:LVR:POS:0:org.joda.time.field.PreciseDurationDateTimeField@remainder(long):130:1 |==> 0
7364:LVR:POS:NEG:org.joda.time.field.PreciseDurationDateTimeField@remainder(long):130:1 |==> -1
7365:AOR:-(long,long):%(long,long):org.joda.time.field.PreciseDurationDateTimeField@remainder(long):130:(instant + 1) % iUnitMillis + iUnitMillis - 1 |==> ((instant + 1) % iUnitMillis + iUnitMillis) % 1
7366:AOR:-(long,long):*(long,long):org.joda.time.field.PreciseDurationDateTimeField@remainder(long):130:(instant + 1) % iUnitMillis + iUnitMillis - 1 |==> ((instant + 1) % iUnitMillis + iUnitMillis) * 1
7367:AOR:-(long,long):+(long,long):org.joda.time.field.PreciseDurationDateTimeField@remainder(long):130:(instant + 1) % iUnitMillis + iUnitMillis - 1 |==> (instant + 1) % iUnitMillis + iUnitMillis + 1
7368:AOR:-(long,long):/(long,long):org.joda.time.field.PreciseDurationDateTimeField@remainder(long):130:(instant + 1) % iUnitMillis + iUnitMillis - 1 |==> ((instant + 1) % iUnitMillis + iUnitMillis) / 1
7369:LVR:0:POS:org.joda.time.field.PreciseDurationDateTimeField@getMinimumValue():151:0 |==> 1
7370:LVR:0:NEG:org.joda.time.field.PreciseDurationDateTimeField@getMinimumValue():151:0 |==> -1
7371:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.BaseDateTimeField@<init>(org.joda.time.DateTimeFieldType):51:type == null |==> false
7372:LVR:TRUE:FALSE:org.joda.time.field.BaseDateTimeField@isSupported():69:true |==> false
7373:LVR:0:POS:org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):298:0 |==> 1
7374:LVR:0:NEG:org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):298:0 |==> -1
7375:ROR:==(int,int):<=(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):298:valueToAdd == 0 |==> valueToAdd <= 0
7376:ROR:==(int,int):>=(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):298:valueToAdd == 0 |==> valueToAdd >= 0
7377:ROR:==(int,int):FALSE(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):298:valueToAdd == 0 |==> false
7378:LVR:0:POS:org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):306:0 |==> 1
7379:LVR:0:NEG:org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):306:0 |==> -1
7380:ROR:>(int,int):!=(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):306:valueToAdd > 0 |==> valueToAdd != 0
7381:ROR:>(int,int):>=(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):306:valueToAdd > 0 |==> valueToAdd >= 0
7382:ROR:>(int,int):FALSE(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):306:valueToAdd > 0 |==> false
7383:AOR:+(int,int):%(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):308:values[fieldIndex] + valueToAdd |==> values[fieldIndex] % valueToAdd
7384:AOR:+(int,int):*(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):308:values[fieldIndex] + valueToAdd |==> values[fieldIndex] * valueToAdd
7385:AOR:+(int,int):-(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):308:values[fieldIndex] + valueToAdd |==> values[fieldIndex] - valueToAdd
7386:AOR:+(int,int):/(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):308:values[fieldIndex] + valueToAdd |==> values[fieldIndex] / valueToAdd
7387:ROR:<=(long,long):<(long,long):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):309:proposed <= max |==> proposed < max
7388:ROR:<=(long,long):==(long,long):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):309:proposed <= max |==> proposed == max
7389:ROR:<=(long,long):TRUE(long,long):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):309:proposed <= max |==> true
7390:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):310:values[fieldIndex] = (int)proposed |==> <NO-OP>
7391:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):313:nextField == null |==> false
7392:LVR:0:POS:org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):314:0 |==> 1
7393:LVR:0:NEG:org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):314:0 |==> -1
7394:ROR:==(int,int):<=(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):314:fieldIndex == 0 |==> fieldIndex <= 0
7395:ROR:==(int,int):>=(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):314:fieldIndex == 0 |==> fieldIndex >= 0
7396:ROR:==(int,int):FALSE(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):314:fieldIndex == 0 |==> false
7397:LVR:POS:0:org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):317:1 |==> 0
7398:LVR:POS:NEG:org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):317:1 |==> -1
7399:AOR:-(int,int):%(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):317:fieldIndex - 1 |==> fieldIndex % 1
7400:AOR:-(int,int):*(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):317:fieldIndex - 1 |==> fieldIndex * 1
7401:AOR:-(int,int):+(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):317:fieldIndex - 1 |==> fieldIndex + 1
7402:AOR:-(int,int):/(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):317:fieldIndex - 1 |==> fieldIndex / 1
7403:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):317:nextField = instant.getField(fieldIndex - 1) |==> <NO-OP>
7404:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):319:getRangeDurationField().getType() != nextField.getDurationField().getType() |==> true
7405:LVR:POS:0:org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):323:1 |==> 0
7406:LVR:POS:NEG:org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):323:1 |==> -1
7407:AOR:+(int,int):%(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):323:max + 1 |==> max % 1
7408:AOR:+(int,int):*(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):323:max + 1 |==> max * 1
7409:AOR:+(int,int):-(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):323:max + 1 |==> max - 1
7410:AOR:+(int,int):/(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):323:max + 1 |==> max / 1
7411:AOR:-(int,int):%(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):323:(max + 1) - values[fieldIndex] |==> (max + 1) % values[fieldIndex]
7412:AOR:-(int,int):*(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):323:(max + 1) - values[fieldIndex] |==> (max + 1) * values[fieldIndex]
7413:AOR:-(int,int):+(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):323:(max + 1) - values[fieldIndex] |==> (max + 1) + values[fieldIndex]
7414:AOR:-(int,int):/(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):323:(max + 1) - values[fieldIndex] |==> (max + 1) / values[fieldIndex]
7415:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):323:valueToAdd -= (max + 1) - values[fieldIndex] |==> <NO-OP>
7416:LVR:POS:0:org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):324:1 |==> 0
7417:LVR:POS:NEG:org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):324:1 |==> -1
7418:AOR:-(int,int):%(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):324:fieldIndex - 1 |==> fieldIndex % 1
7419:AOR:-(int,int):*(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):324:fieldIndex - 1 |==> fieldIndex * 1
7420:AOR:-(int,int):+(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):324:fieldIndex - 1 |==> fieldIndex + 1
7421:AOR:-(int,int):/(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):324:fieldIndex - 1 |==> fieldIndex / 1
7422:LVR:POS:0:org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):324:1 |==> 0
7423:LVR:POS:NEG:org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):324:1 |==> -1
7424:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):324:values = nextField.add(instant, fieldIndex - 1, values, 1) |==> <NO-OP>
7425:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):325:values[fieldIndex] = getMinimumValue(instant, values) |==> <NO-OP>
7426:LVR:0:POS:org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):327:0 |==> 1
7427:LVR:0:NEG:org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):327:0 |==> -1
7428:ROR:<(int,int):!=(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):327:valueToAdd < 0 |==> valueToAdd != 0
7429:ROR:<(int,int):<=(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):327:valueToAdd < 0 |==> valueToAdd <= 0
7430:ROR:<(int,int):FALSE(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):327:valueToAdd < 0 |==> false
7431:AOR:+(int,int):%(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):329:values[fieldIndex] + valueToAdd |==> values[fieldIndex] % valueToAdd
7432:AOR:+(int,int):*(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):329:values[fieldIndex] + valueToAdd |==> values[fieldIndex] * valueToAdd
7433:AOR:+(int,int):-(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):329:values[fieldIndex] + valueToAdd |==> values[fieldIndex] - valueToAdd
7434:AOR:+(int,int):/(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):329:values[fieldIndex] + valueToAdd |==> values[fieldIndex] / valueToAdd
7435:ROR:>=(long,long):==(long,long):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):330:proposed >= min |==> proposed == min
7436:ROR:>=(long,long):>(long,long):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):330:proposed >= min |==> proposed > min
7437:ROR:>=(long,long):TRUE(long,long):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):330:proposed >= min |==> true
7438:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):331:values[fieldIndex] = (int)proposed |==> <NO-OP>
7439:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):334:nextField == null |==> false
7440:LVR:0:POS:org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):335:0 |==> 1
7441:LVR:0:NEG:org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):335:0 |==> -1
7442:ROR:==(int,int):<=(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):335:fieldIndex == 0 |==> fieldIndex <= 0
7443:ROR:==(int,int):>=(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):335:fieldIndex == 0 |==> fieldIndex >= 0
7444:ROR:==(int,int):FALSE(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):335:fieldIndex == 0 |==> false
7445:LVR:POS:0:org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):338:1 |==> 0
7446:LVR:POS:NEG:org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):338:1 |==> -1
7447:AOR:-(int,int):%(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):338:fieldIndex - 1 |==> fieldIndex % 1
7448:AOR:-(int,int):*(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):338:fieldIndex - 1 |==> fieldIndex * 1
7449:AOR:-(int,int):+(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):338:fieldIndex - 1 |==> fieldIndex + 1
7450:AOR:-(int,int):/(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):338:fieldIndex - 1 |==> fieldIndex / 1
7451:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):338:nextField = instant.getField(fieldIndex - 1) |==> <NO-OP>
7452:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):339:getRangeDurationField().getType() != nextField.getDurationField().getType() |==> true
7453:LVR:POS:0:org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):343:1 |==> 0
7454:LVR:POS:NEG:org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):343:1 |==> -1
7455:AOR:-(int,int):%(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):343:min - 1 |==> min % 1
7456:AOR:-(int,int):*(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):343:min - 1 |==> min * 1
7457:AOR:-(int,int):+(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):343:min - 1 |==> min + 1
7458:AOR:-(int,int):/(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):343:min - 1 |==> min / 1
7459:AOR:-(int,int):%(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):343:(min - 1) - values[fieldIndex] |==> (min - 1) % values[fieldIndex]
7460:AOR:-(int,int):*(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):343:(min - 1) - values[fieldIndex] |==> (min - 1) * values[fieldIndex]
7461:AOR:-(int,int):+(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):343:(min - 1) - values[fieldIndex] |==> (min - 1) + values[fieldIndex]
7462:AOR:-(int,int):/(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):343:(min - 1) - values[fieldIndex] |==> (min - 1) / values[fieldIndex]
7463:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):343:valueToAdd -= (min - 1) - values[fieldIndex] |==> <NO-OP>
7464:LVR:POS:0:org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):344:1 |==> 0
7465:LVR:POS:NEG:org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):344:1 |==> -1
7466:AOR:-(int,int):%(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):344:fieldIndex - 1 |==> fieldIndex % 1
7467:AOR:-(int,int):*(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):344:fieldIndex - 1 |==> fieldIndex * 1
7468:AOR:-(int,int):+(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):344:fieldIndex - 1 |==> fieldIndex + 1
7469:AOR:-(int,int):/(int,int):org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):344:fieldIndex - 1 |==> fieldIndex / 1
7470:LVR:NEG:0:org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):344:-1 |==> 0
7471:LVR:NEG:POS:org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):344:-1 |==> 1
7472:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):344:values = nextField.add(instant, fieldIndex - 1, values, -1) |==> <NO-OP>
7473:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.BaseDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):345:values[fieldIndex] = getMaximumValue(instant, values) |==> <NO-OP>
7474:LVR:0:POS:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):379:0 |==> 1
7475:LVR:0:NEG:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):379:0 |==> -1
7476:ROR:==(int,int):<=(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):379:valueToAdd == 0 |==> valueToAdd <= 0
7477:ROR:==(int,int):>=(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):379:valueToAdd == 0 |==> valueToAdd >= 0
7478:ROR:==(int,int):FALSE(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):379:valueToAdd == 0 |==> false
7479:LVR:0:POS:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):387:0 |==> 1
7480:LVR:0:NEG:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):387:0 |==> -1
7481:ROR:>(int,int):!=(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):387:valueToAdd > 0 |==> valueToAdd != 0
7482:ROR:>(int,int):>=(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):387:valueToAdd > 0 |==> valueToAdd >= 0
7483:ROR:>(int,int):FALSE(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):387:valueToAdd > 0 |==> false
7484:AOR:+(int,int):%(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):389:values[fieldIndex] + valueToAdd |==> values[fieldIndex] % valueToAdd
7485:AOR:+(int,int):*(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):389:values[fieldIndex] + valueToAdd |==> values[fieldIndex] * valueToAdd
7486:AOR:+(int,int):-(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):389:values[fieldIndex] + valueToAdd |==> values[fieldIndex] - valueToAdd
7487:AOR:+(int,int):/(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):389:values[fieldIndex] + valueToAdd |==> values[fieldIndex] / valueToAdd
7488:ROR:<=(long,long):<(long,long):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):390:proposed <= max |==> proposed < max
7489:ROR:<=(long,long):==(long,long):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):390:proposed <= max |==> proposed == max
7490:ROR:<=(long,long):TRUE(long,long):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):390:proposed <= max |==> true
7491:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):391:values[fieldIndex] = (int)proposed |==> <NO-OP>
7492:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):394:nextField == null |==> false
7493:LVR:0:POS:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):395:0 |==> 1
7494:LVR:0:NEG:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):395:0 |==> -1
7495:ROR:==(int,int):<=(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):395:fieldIndex == 0 |==> fieldIndex <= 0
7496:ROR:==(int,int):>=(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):395:fieldIndex == 0 |==> fieldIndex >= 0
7497:ROR:==(int,int):FALSE(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):395:fieldIndex == 0 |==> false
7498:LVR:POS:0:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):396:1 |==> 0
7499:LVR:POS:NEG:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):396:1 |==> -1
7500:AOR:+(int,int):%(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):396:max + 1 |==> max % 1
7501:AOR:+(int,int):*(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):396:max + 1 |==> max * 1
7502:AOR:+(int,int):-(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):396:max + 1 |==> max - 1
7503:AOR:+(int,int):/(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):396:max + 1 |==> max / 1
7504:AOR:-(int,int):%(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):396:(max + 1) - values[fieldIndex] |==> (max + 1) % values[fieldIndex]
7505:AOR:-(int,int):*(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):396:(max + 1) - values[fieldIndex] |==> (max + 1) * values[fieldIndex]
7506:AOR:-(int,int):+(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):396:(max + 1) - values[fieldIndex] |==> (max + 1) + values[fieldIndex]
7507:AOR:-(int,int):/(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):396:(max + 1) - values[fieldIndex] |==> (max + 1) / values[fieldIndex]
7508:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):396:valueToAdd -= (max + 1) - values[fieldIndex] |==> <NO-OP>
7509:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):397:values[fieldIndex] = getMinimumValue(instant, values) |==> <NO-OP>
7510:LVR:POS:0:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):400:1 |==> 0
7511:LVR:POS:NEG:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):400:1 |==> -1
7512:AOR:-(int,int):%(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):400:fieldIndex - 1 |==> fieldIndex % 1
7513:AOR:-(int,int):*(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):400:fieldIndex - 1 |==> fieldIndex * 1
7514:AOR:-(int,int):+(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):400:fieldIndex - 1 |==> fieldIndex + 1
7515:AOR:-(int,int):/(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):400:fieldIndex - 1 |==> fieldIndex / 1
7516:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):400:nextField = instant.getField(fieldIndex - 1) |==> <NO-OP>
7517:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):402:getRangeDurationField().getType() != nextField.getDurationField().getType() |==> true
7518:LVR:POS:0:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):406:1 |==> 0
7519:LVR:POS:NEG:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):406:1 |==> -1
7520:AOR:+(int,int):%(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):406:max + 1 |==> max % 1
7521:AOR:+(int,int):*(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):406:max + 1 |==> max * 1
7522:AOR:+(int,int):-(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):406:max + 1 |==> max - 1
7523:AOR:+(int,int):/(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):406:max + 1 |==> max / 1
7524:AOR:-(int,int):%(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):406:(max + 1) - values[fieldIndex] |==> (max + 1) % values[fieldIndex]
7525:AOR:-(int,int):*(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):406:(max + 1) - values[fieldIndex] |==> (max + 1) * values[fieldIndex]
7526:AOR:-(int,int):+(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):406:(max + 1) - values[fieldIndex] |==> (max + 1) + values[fieldIndex]
7527:AOR:-(int,int):/(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):406:(max + 1) - values[fieldIndex] |==> (max + 1) / values[fieldIndex]
7528:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):406:valueToAdd -= (max + 1) - values[fieldIndex] |==> <NO-OP>
7529:LVR:POS:0:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):407:1 |==> 0
7530:LVR:POS:NEG:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):407:1 |==> -1
7531:AOR:-(int,int):%(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):407:fieldIndex - 1 |==> fieldIndex % 1
7532:AOR:-(int,int):*(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):407:fieldIndex - 1 |==> fieldIndex * 1
7533:AOR:-(int,int):+(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):407:fieldIndex - 1 |==> fieldIndex + 1
7534:AOR:-(int,int):/(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):407:fieldIndex - 1 |==> fieldIndex / 1
7535:LVR:POS:0:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):407:1 |==> 0
7536:LVR:POS:NEG:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):407:1 |==> -1
7537:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):407:values = nextField.addWrapPartial(instant, fieldIndex - 1, values, 1) |==> <NO-OP>
7538:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):408:values[fieldIndex] = getMinimumValue(instant, values) |==> <NO-OP>
7539:LVR:0:POS:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):410:0 |==> 1
7540:LVR:0:NEG:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):410:0 |==> -1
7541:ROR:<(int,int):!=(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):410:valueToAdd < 0 |==> valueToAdd != 0
7542:ROR:<(int,int):<=(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):410:valueToAdd < 0 |==> valueToAdd <= 0
7543:ROR:<(int,int):FALSE(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):410:valueToAdd < 0 |==> false
7544:AOR:+(int,int):%(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):412:values[fieldIndex] + valueToAdd |==> values[fieldIndex] % valueToAdd
7545:AOR:+(int,int):*(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):412:values[fieldIndex] + valueToAdd |==> values[fieldIndex] * valueToAdd
7546:AOR:+(int,int):-(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):412:values[fieldIndex] + valueToAdd |==> values[fieldIndex] - valueToAdd
7547:AOR:+(int,int):/(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):412:values[fieldIndex] + valueToAdd |==> values[fieldIndex] / valueToAdd
7548:ROR:>=(long,long):==(long,long):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):413:proposed >= min |==> proposed == min
7549:ROR:>=(long,long):>(long,long):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):413:proposed >= min |==> proposed > min
7550:ROR:>=(long,long):TRUE(long,long):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):413:proposed >= min |==> true
7551:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):414:values[fieldIndex] = (int)proposed |==> <NO-OP>
7552:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):417:nextField == null |==> false
7553:LVR:0:POS:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):418:0 |==> 1
7554:LVR:0:NEG:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):418:0 |==> -1
7555:ROR:==(int,int):<=(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):418:fieldIndex == 0 |==> fieldIndex <= 0
7556:ROR:==(int,int):>=(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):418:fieldIndex == 0 |==> fieldIndex >= 0
7557:ROR:==(int,int):FALSE(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):418:fieldIndex == 0 |==> false
7558:LVR:POS:0:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):419:1 |==> 0
7559:LVR:POS:NEG:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):419:1 |==> -1
7560:AOR:-(int,int):%(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):419:min - 1 |==> min % 1
7561:AOR:-(int,int):*(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):419:min - 1 |==> min * 1
7562:AOR:-(int,int):+(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):419:min - 1 |==> min + 1
7563:AOR:-(int,int):/(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):419:min - 1 |==> min / 1
7564:AOR:-(int,int):%(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):419:(min - 1) - values[fieldIndex] |==> (min - 1) % values[fieldIndex]
7565:AOR:-(int,int):*(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):419:(min - 1) - values[fieldIndex] |==> (min - 1) * values[fieldIndex]
7566:AOR:-(int,int):+(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):419:(min - 1) - values[fieldIndex] |==> (min - 1) + values[fieldIndex]
7567:AOR:-(int,int):/(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):419:(min - 1) - values[fieldIndex] |==> (min - 1) / values[fieldIndex]
7568:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):419:valueToAdd -= (min - 1) - values[fieldIndex] |==> <NO-OP>
7569:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):420:values[fieldIndex] = getMaximumValue(instant, values) |==> <NO-OP>
7570:LVR:POS:0:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):423:1 |==> 0
7571:LVR:POS:NEG:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):423:1 |==> -1
7572:AOR:-(int,int):%(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):423:fieldIndex - 1 |==> fieldIndex % 1
7573:AOR:-(int,int):*(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):423:fieldIndex - 1 |==> fieldIndex * 1
7574:AOR:-(int,int):+(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):423:fieldIndex - 1 |==> fieldIndex + 1
7575:AOR:-(int,int):/(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):423:fieldIndex - 1 |==> fieldIndex / 1
7576:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):423:nextField = instant.getField(fieldIndex - 1) |==> <NO-OP>
7577:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):424:getRangeDurationField().getType() != nextField.getDurationField().getType() |==> true
7578:LVR:POS:0:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):428:1 |==> 0
7579:LVR:POS:NEG:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):428:1 |==> -1
7580:AOR:-(int,int):%(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):428:min - 1 |==> min % 1
7581:AOR:-(int,int):*(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):428:min - 1 |==> min * 1
7582:AOR:-(int,int):+(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):428:min - 1 |==> min + 1
7583:AOR:-(int,int):/(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):428:min - 1 |==> min / 1
7584:AOR:-(int,int):%(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):428:(min - 1) - values[fieldIndex] |==> (min - 1) % values[fieldIndex]
7585:AOR:-(int,int):*(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):428:(min - 1) - values[fieldIndex] |==> (min - 1) * values[fieldIndex]
7586:AOR:-(int,int):+(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):428:(min - 1) - values[fieldIndex] |==> (min - 1) + values[fieldIndex]
7587:AOR:-(int,int):/(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):428:(min - 1) - values[fieldIndex] |==> (min - 1) / values[fieldIndex]
7588:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):428:valueToAdd -= (min - 1) - values[fieldIndex] |==> <NO-OP>
7589:LVR:POS:0:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):429:1 |==> 0
7590:LVR:POS:NEG:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):429:1 |==> -1
7591:AOR:-(int,int):%(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):429:fieldIndex - 1 |==> fieldIndex % 1
7592:AOR:-(int,int):*(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):429:fieldIndex - 1 |==> fieldIndex * 1
7593:AOR:-(int,int):+(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):429:fieldIndex - 1 |==> fieldIndex + 1
7594:AOR:-(int,int):/(int,int):org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):429:fieldIndex - 1 |==> fieldIndex / 1
7595:LVR:NEG:0:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):429:-1 |==> 0
7596:LVR:NEG:POS:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):429:-1 |==> 1
7597:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):429:values = nextField.addWrapPartial(instant, fieldIndex - 1, values, -1) |==> <NO-OP>
7598:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.BaseDateTimeField@addWrapPartial(org.joda.time.ReadablePartial,int,int[],int):430:values[fieldIndex] = getMaximumValue(instant, values) |==> <NO-OP>
7599:STD:<CALL>:<NO-OP>:org.joda.time.field.BaseDateTimeField@set(org.joda.time.ReadablePartial,int,int[],int):585:FieldUtils.verifyValueBounds(this, newValue, getMinimumValue(partial, values), getMaximumValue(partial, values)) |==> <NO-OP>
7600:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.BaseDateTimeField@set(org.joda.time.ReadablePartial,int,int[],int):586:values[fieldIndex] = newValue |==> <NO-OP>
7601:LVR:POS:0:org.joda.time.field.BaseDateTimeField@set(org.joda.time.ReadablePartial,int,int[],int):589:1 |==> 0
7602:LVR:POS:NEG:org.joda.time.field.BaseDateTimeField@set(org.joda.time.ReadablePartial,int,int[],int):589:1 |==> -1
7603:AOR:+(int,int):%(int,int):org.joda.time.field.BaseDateTimeField@set(org.joda.time.ReadablePartial,int,int[],int):589:fieldIndex + 1 |==> fieldIndex % 1
7604:AOR:+(int,int):*(int,int):org.joda.time.field.BaseDateTimeField@set(org.joda.time.ReadablePartial,int,int[],int):589:fieldIndex + 1 |==> fieldIndex * 1
7605:AOR:+(int,int):-(int,int):org.joda.time.field.BaseDateTimeField@set(org.joda.time.ReadablePartial,int,int[],int):589:fieldIndex + 1 |==> fieldIndex - 1
7606:AOR:+(int,int):/(int,int):org.joda.time.field.BaseDateTimeField@set(org.joda.time.ReadablePartial,int,int[],int):589:fieldIndex + 1 |==> fieldIndex / 1
7607:ROR:<(int,int):!=(int,int):org.joda.time.field.BaseDateTimeField@set(org.joda.time.ReadablePartial,int,int[],int):589:i < partial.size() |==> i != partial.size()
7608:ROR:<(int,int):<=(int,int):org.joda.time.field.BaseDateTimeField@set(org.joda.time.ReadablePartial,int,int[],int):589:i < partial.size() |==> i <= partial.size()
7609:ROR:<(int,int):FALSE(int,int):org.joda.time.field.BaseDateTimeField@set(org.joda.time.ReadablePartial,int,int[],int):589:i < partial.size() |==> false
7610:ROR:>(int,int):!=(int,int):org.joda.time.field.BaseDateTimeField@set(org.joda.time.ReadablePartial,int,int[],int):591:values[i] > field.getMaximumValue(partial, values) |==> values[i] != field.getMaximumValue(partial, values)
7611:ROR:>(int,int):>=(int,int):org.joda.time.field.BaseDateTimeField@set(org.joda.time.ReadablePartial,int,int[],int):591:values[i] > field.getMaximumValue(partial, values) |==> values[i] >= field.getMaximumValue(partial, values)
7612:ROR:>(int,int):FALSE(int,int):org.joda.time.field.BaseDateTimeField@set(org.joda.time.ReadablePartial,int,int[],int):591:values[i] > field.getMaximumValue(partial, values) |==> false
7613:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.BaseDateTimeField@set(org.joda.time.ReadablePartial,int,int[],int):592:values[i] = field.getMaximumValue(partial, values) |==> <NO-OP>
7614:ROR:<(int,int):!=(int,int):org.joda.time.field.BaseDateTimeField@set(org.joda.time.ReadablePartial,int,int[],int):594:values[i] < field.getMinimumValue(partial, values) |==> values[i] != field.getMinimumValue(partial, values)
7615:ROR:<(int,int):<=(int,int):org.joda.time.field.BaseDateTimeField@set(org.joda.time.ReadablePartial,int,int[],int):594:values[i] < field.getMinimumValue(partial, values) |==> values[i] <= field.getMinimumValue(partial, values)
7616:ROR:<(int,int):FALSE(int,int):org.joda.time.field.BaseDateTimeField@set(org.joda.time.ReadablePartial,int,int[],int):594:values[i] < field.getMinimumValue(partial, values) |==> false
7617:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.BaseDateTimeField@set(org.joda.time.ReadablePartial,int,int[],int):595:values[i] = field.getMinimumValue(partial, values) |==> <NO-OP>
7618:LVR:FALSE:TRUE:org.joda.time.field.BaseDateTimeField@isLeap(long):704:false |==> true
7619:LVR:0:POS:org.joda.time.field.BaseDateTimeField@getLeapAmount(long):716:0 |==> 1
7620:LVR:0:NEG:org.joda.time.field.BaseDateTimeField@getLeapAmount(long):716:0 |==> -1
7621:LVR:0:POS:org.joda.time.field.BaseDateTimeField@getMaximumTextLength(java.util.Locale):830:0 |==> 1
7622:LVR:0:NEG:org.joda.time.field.BaseDateTimeField@getMaximumTextLength(java.util.Locale):830:0 |==> -1
7623:ROR:>=(int,int):==(int,int):org.joda.time.field.BaseDateTimeField@getMaximumTextLength(java.util.Locale):830:max >= 0 |==> max == 0
7624:ROR:>=(int,int):>(int,int):org.joda.time.field.BaseDateTimeField@getMaximumTextLength(java.util.Locale):830:max >= 0 |==> max > 0
7625:ROR:>=(int,int):TRUE(int,int):org.joda.time.field.BaseDateTimeField@getMaximumTextLength(java.util.Locale):830:max >= 0 |==> true
7626:LVR:POS:0:org.joda.time.field.BaseDateTimeField@getMaximumTextLength(java.util.Locale):831:10 |==> 0
7627:LVR:POS:NEG:org.joda.time.field.BaseDateTimeField@getMaximumTextLength(java.util.Locale):831:10 |==> -10
7628:ROR:<(int,int):!=(int,int):org.joda.time.field.BaseDateTimeField@getMaximumTextLength(java.util.Locale):831:max < 10 |==> max != 10
7629:ROR:<(int,int):<=(int,int):org.joda.time.field.BaseDateTimeField@getMaximumTextLength(java.util.Locale):831:max < 10 |==> max <= 10
7630:ROR:<(int,int):FALSE(int,int):org.joda.time.field.BaseDateTimeField@getMaximumTextLength(java.util.Locale):831:max < 10 |==> false
7631:LVR:POS:0:org.joda.time.field.BaseDateTimeField@getMaximumTextLength(java.util.Locale):832:1 |==> 0
7632:LVR:POS:NEG:org.joda.time.field.BaseDateTimeField@getMaximumTextLength(java.util.Locale):832:1 |==> -1
7633:LVR:POS:0:org.joda.time.field.BaseDateTimeField@getMaximumTextLength(java.util.Locale):833:100 |==> 0
7634:LVR:POS:NEG:org.joda.time.field.BaseDateTimeField@getMaximumTextLength(java.util.Locale):833:100 |==> -100
7635:ROR:<(int,int):!=(int,int):org.joda.time.field.BaseDateTimeField@getMaximumTextLength(java.util.Locale):833:max < 100 |==> max != 100
7636:ROR:<(int,int):<=(int,int):org.joda.time.field.BaseDateTimeField@getMaximumTextLength(java.util.Locale):833:max < 100 |==> max <= 100
7637:ROR:<(int,int):FALSE(int,int):org.joda.time.field.BaseDateTimeField@getMaximumTextLength(java.util.Locale):833:max < 100 |==> false
7638:LVR:POS:0:org.joda.time.field.BaseDateTimeField@getMaximumTextLength(java.util.Locale):834:2 |==> 0
7639:LVR:POS:NEG:org.joda.time.field.BaseDateTimeField@getMaximumTextLength(java.util.Locale):834:2 |==> -2
7640:LVR:POS:0:org.joda.time.field.BaseDateTimeField@getMaximumTextLength(java.util.Locale):835:1000 |==> 0
7641:LVR:POS:NEG:org.joda.time.field.BaseDateTimeField@getMaximumTextLength(java.util.Locale):835:1000 |==> -1000
7642:ROR:<(int,int):!=(int,int):org.joda.time.field.BaseDateTimeField@getMaximumTextLength(java.util.Locale):835:max < 1000 |==> max != 1000
7643:ROR:<(int,int):<=(int,int):org.joda.time.field.BaseDateTimeField@getMaximumTextLength(java.util.Locale):835:max < 1000 |==> max <= 1000
7644:ROR:<(int,int):FALSE(int,int):org.joda.time.field.BaseDateTimeField@getMaximumTextLength(java.util.Locale):835:max < 1000 |==> false
7645:LVR:POS:0:org.joda.time.field.BaseDateTimeField@getMaximumTextLength(java.util.Locale):836:3 |==> 0
7646:LVR:POS:NEG:org.joda.time.field.BaseDateTimeField@getMaximumTextLength(java.util.Locale):836:3 |==> -3
7647:ROR:!=(long,long):<(long,long):org.joda.time.field.BaseDateTimeField@roundCeiling(long):887:newInstant != instant |==> newInstant < instant
7648:ROR:!=(long,long):>(long,long):org.joda.time.field.BaseDateTimeField@roundCeiling(long):887:newInstant != instant |==> newInstant > instant
7649:ROR:!=(long,long):TRUE(long,long):org.joda.time.field.BaseDateTimeField@roundCeiling(long):887:newInstant != instant |==> true
7650:LVR:POS:0:org.joda.time.field.BaseDateTimeField@roundCeiling(long):888:1 |==> 0
7651:LVR:POS:NEG:org.joda.time.field.BaseDateTimeField@roundCeiling(long):888:1 |==> -1
7652:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.BaseDateTimeField@roundCeiling(long):888:instant = add(newInstant, 1) |==> <NO-OP>
7653:AOR:-(long,long):%(long,long):org.joda.time.field.BaseDateTimeField@roundHalfFloor(long):906:instant - floor |==> instant % floor
7654:AOR:-(long,long):*(long,long):org.joda.time.field.BaseDateTimeField@roundHalfFloor(long):906:instant - floor |==> instant * floor
7655:AOR:-(long,long):+(long,long):org.joda.time.field.BaseDateTimeField@roundHalfFloor(long):906:instant - floor |==> instant + floor
7656:AOR:-(long,long):/(long,long):org.joda.time.field.BaseDateTimeField@roundHalfFloor(long):906:instant - floor |==> instant / floor
7657:AOR:-(long,long):%(long,long):org.joda.time.field.BaseDateTimeField@roundHalfFloor(long):907:ceiling - instant |==> ceiling % instant
7658:AOR:-(long,long):*(long,long):org.joda.time.field.BaseDateTimeField@roundHalfFloor(long):907:ceiling - instant |==> ceiling * instant
7659:AOR:-(long,long):+(long,long):org.joda.time.field.BaseDateTimeField@roundHalfFloor(long):907:ceiling - instant |==> ceiling + instant
7660:AOR:-(long,long):/(long,long):org.joda.time.field.BaseDateTimeField@roundHalfFloor(long):907:ceiling - instant |==> ceiling / instant
7661:ROR:<=(long,long):<(long,long):org.joda.time.field.BaseDateTimeField@roundHalfFloor(long):909:diffFromFloor <= diffToCeiling |==> diffFromFloor < diffToCeiling
7662:ROR:<=(long,long):==(long,long):org.joda.time.field.BaseDateTimeField@roundHalfFloor(long):909:diffFromFloor <= diffToCeiling |==> diffFromFloor == diffToCeiling
7663:ROR:<=(long,long):TRUE(long,long):org.joda.time.field.BaseDateTimeField@roundHalfFloor(long):909:diffFromFloor <= diffToCeiling |==> true
7664:AOR:-(long,long):%(long,long):org.joda.time.field.BaseDateTimeField@roundHalfCeiling(long):930:instant - floor |==> instant % floor
7665:AOR:-(long,long):*(long,long):org.joda.time.field.BaseDateTimeField@roundHalfCeiling(long):930:instant - floor |==> instant * floor
7666:AOR:-(long,long):+(long,long):org.joda.time.field.BaseDateTimeField@roundHalfCeiling(long):930:instant - floor |==> instant + floor
7667:AOR:-(long,long):/(long,long):org.joda.time.field.BaseDateTimeField@roundHalfCeiling(long):930:instant - floor |==> instant / floor
7668:AOR:-(long,long):%(long,long):org.joda.time.field.BaseDateTimeField@roundHalfCeiling(long):931:ceiling - instant |==> ceiling % instant
7669:AOR:-(long,long):*(long,long):org.joda.time.field.BaseDateTimeField@roundHalfCeiling(long):931:ceiling - instant |==> ceiling * instant
7670:AOR:-(long,long):+(long,long):org.joda.time.field.BaseDateTimeField@roundHalfCeiling(long):931:ceiling - instant |==> ceiling + instant
7671:AOR:-(long,long):/(long,long):org.joda.time.field.BaseDateTimeField@roundHalfCeiling(long):931:ceiling - instant |==> ceiling / instant
7672:ROR:<=(long,long):<(long,long):org.joda.time.field.BaseDateTimeField@roundHalfCeiling(long):933:diffToCeiling <= diffFromFloor |==> diffToCeiling < diffFromFloor
7673:ROR:<=(long,long):==(long,long):org.joda.time.field.BaseDateTimeField@roundHalfCeiling(long):933:diffToCeiling <= diffFromFloor |==> diffToCeiling == diffFromFloor
7674:ROR:<=(long,long):TRUE(long,long):org.joda.time.field.BaseDateTimeField@roundHalfCeiling(long):933:diffToCeiling <= diffFromFloor |==> true
7675:AOR:-(long,long):%(long,long):org.joda.time.field.BaseDateTimeField@roundHalfEven(long):958:instant - floor |==> instant % floor
7676:AOR:-(long,long):*(long,long):org.joda.time.field.BaseDateTimeField@roundHalfEven(long):958:instant - floor |==> instant * floor
7677:AOR:-(long,long):+(long,long):org.joda.time.field.BaseDateTimeField@roundHalfEven(long):958:instant - floor |==> instant + floor
7678:AOR:-(long,long):/(long,long):org.joda.time.field.BaseDateTimeField@roundHalfEven(long):958:instant - floor |==> instant / floor
7679:AOR:-(long,long):%(long,long):org.joda.time.field.BaseDateTimeField@roundHalfEven(long):959:ceiling - instant |==> ceiling % instant
7680:AOR:-(long,long):*(long,long):org.joda.time.field.BaseDateTimeField@roundHalfEven(long):959:ceiling - instant |==> ceiling * instant
7681:AOR:-(long,long):+(long,long):org.joda.time.field.BaseDateTimeField@roundHalfEven(long):959:ceiling - instant |==> ceiling + instant
7682:AOR:-(long,long):/(long,long):org.joda.time.field.BaseDateTimeField@roundHalfEven(long):959:ceiling - instant |==> ceiling / instant
7683:ROR:<(long,long):!=(long,long):org.joda.time.field.BaseDateTimeField@roundHalfEven(long):961:diffFromFloor < diffToCeiling |==> diffFromFloor != diffToCeiling
7684:ROR:<(long,long):<=(long,long):org.joda.time.field.BaseDateTimeField@roundHalfEven(long):961:diffFromFloor < diffToCeiling |==> diffFromFloor <= diffToCeiling
7685:ROR:<(long,long):FALSE(long,long):org.joda.time.field.BaseDateTimeField@roundHalfEven(long):961:diffFromFloor < diffToCeiling |==> false
7686:ROR:<(long,long):!=(long,long):org.joda.time.field.BaseDateTimeField@roundHalfEven(long):964:diffToCeiling < diffFromFloor |==> diffToCeiling != diffFromFloor
7687:ROR:<(long,long):<=(long,long):org.joda.time.field.BaseDateTimeField@roundHalfEven(long):964:diffToCeiling < diffFromFloor |==> diffToCeiling <= diffFromFloor
7688:ROR:<(long,long):FALSE(long,long):org.joda.time.field.BaseDateTimeField@roundHalfEven(long):964:diffToCeiling < diffFromFloor |==> false
7689:LVR:POS:0:org.joda.time.field.BaseDateTimeField@roundHalfEven(long):970:1 |==> 0
7690:LVR:POS:NEG:org.joda.time.field.BaseDateTimeField@roundHalfEven(long):970:1 |==> -1
7691:LOR:&(int,int):^(int,int):org.joda.time.field.BaseDateTimeField@roundHalfEven(long):970:get(ceiling) & 1 |==> get(ceiling) ^ 1
7692:LOR:&(int,int):|(int,int):org.joda.time.field.BaseDateTimeField@roundHalfEven(long):970:get(ceiling) & 1 |==> get(ceiling) | 1
7693:LVR:0:POS:org.joda.time.field.BaseDateTimeField@roundHalfEven(long):970:0 |==> 1
7694:LVR:0:NEG:org.joda.time.field.BaseDateTimeField@roundHalfEven(long):970:0 |==> -1
7695:ROR:==(int,int):<=(int,int):org.joda.time.field.BaseDateTimeField@roundHalfEven(long):970:(get(ceiling) & 1) == 0 |==> (get(ceiling) & 1) <= 0
7696:ROR:==(int,int):>=(int,int):org.joda.time.field.BaseDateTimeField@roundHalfEven(long):970:(get(ceiling) & 1) == 0 |==> (get(ceiling) & 1) >= 0
7697:ROR:==(int,int):FALSE(int,int):org.joda.time.field.BaseDateTimeField@roundHalfEven(long):970:(get(ceiling) & 1) == 0 |==> false
7698:AOR:-(long,long):%(long,long):org.joda.time.field.BaseDateTimeField@remainder(long):994:instant - roundFloor(instant) |==> instant % roundFloor(instant)
7699:AOR:-(long,long):*(long,long):org.joda.time.field.BaseDateTimeField@remainder(long):994:instant - roundFloor(instant) |==> instant * roundFloor(instant)
7700:AOR:-(long,long):+(long,long):org.joda.time.field.BaseDateTimeField@remainder(long):994:instant - roundFloor(instant) |==> instant + roundFloor(instant)
7701:AOR:-(long,long):/(long,long):org.joda.time.field.BaseDateTimeField@remainder(long):994:instant - roundFloor(instant) |==> instant / roundFloor(instant)
7702:LVR:POS:0:org.joda.time.chrono.BasicDayOfMonthDateTimeField@getMinimumValue():56:1 |==> 0
7703:LVR:POS:NEG:org.joda.time.chrono.BasicDayOfMonthDateTimeField@getMinimumValue():56:1 |==> -1
7704:COR:partial.isSupported(DateTimeFieldType.monthOfYear()):TRUE:org.joda.time.chrono.BasicDayOfMonthDateTimeField@getMaximumValue(org.joda.time.ReadablePartial):68:partial.isSupported(DateTimeFieldType.monthOfYear()) |==> false
7705:COR:partial.isSupported(DateTimeFieldType.monthOfYear()):FALSE:org.joda.time.chrono.BasicDayOfMonthDateTimeField@getMaximumValue(org.joda.time.ReadablePartial):68:partial.isSupported(DateTimeFieldType.monthOfYear()) |==> true
7706:COR:partial.isSupported(DateTimeFieldType.year()):TRUE:org.joda.time.chrono.BasicDayOfMonthDateTimeField@getMaximumValue(org.joda.time.ReadablePartial):70:partial.isSupported(DateTimeFieldType.year()) |==> false
7707:COR:partial.isSupported(DateTimeFieldType.year()):FALSE:org.joda.time.chrono.BasicDayOfMonthDateTimeField@getMaximumValue(org.joda.time.ReadablePartial):70:partial.isSupported(DateTimeFieldType.year()) |==> true
7708:LVR:0:POS:org.joda.time.chrono.BasicDayOfMonthDateTimeField@getMaximumValue(org.joda.time.ReadablePartial,int[]):81:0 |==> 1
7709:LVR:0:NEG:org.joda.time.chrono.BasicDayOfMonthDateTimeField@getMaximumValue(org.joda.time.ReadablePartial,int[]):81:0 |==> -1
7710:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BasicDayOfMonthDateTimeField@getMaximumValue(org.joda.time.ReadablePartial,int[]):81:i < size |==> i != size
7711:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BasicDayOfMonthDateTimeField@getMaximumValue(org.joda.time.ReadablePartial,int[]):81:i < size |==> i <= size
7712:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BasicDayOfMonthDateTimeField@getMaximumValue(org.joda.time.ReadablePartial,int[]):81:i < size |==> false
7713:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.BasicDayOfMonthDateTimeField@getMaximumValue(org.joda.time.ReadablePartial,int[]):82:partial.getFieldType(i) == DateTimeFieldType.monthOfYear() |==> false
7714:LVR:0:POS:org.joda.time.chrono.BasicDayOfMonthDateTimeField@getMaximumValue(org.joda.time.ReadablePartial,int[]):84:0 |==> 1
7715:LVR:0:NEG:org.joda.time.chrono.BasicDayOfMonthDateTimeField@getMaximumValue(org.joda.time.ReadablePartial,int[]):84:0 |==> -1
7716:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BasicDayOfMonthDateTimeField@getMaximumValue(org.joda.time.ReadablePartial,int[]):84:j < size |==> j != size
7717:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BasicDayOfMonthDateTimeField@getMaximumValue(org.joda.time.ReadablePartial,int[]):84:j < size |==> j <= size
7718:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BasicDayOfMonthDateTimeField@getMaximumValue(org.joda.time.ReadablePartial,int[]):84:j < size |==> false
7719:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.BasicDayOfMonthDateTimeField@getMaximumValue(org.joda.time.ReadablePartial,int[]):85:partial.getFieldType(j) == DateTimeFieldType.year() |==> false
7720:LVR:POS:0:org.joda.time.chrono.BasicDayOfYearDateTimeField@getMinimumValue():61:1 |==> 0
7721:LVR:POS:NEG:org.joda.time.chrono.BasicDayOfYearDateTimeField@getMinimumValue():61:1 |==> -1
7722:COR:partial.isSupported(DateTimeFieldType.year()):TRUE:org.joda.time.chrono.BasicDayOfYearDateTimeField@getMaximumValue(org.joda.time.ReadablePartial):74:partial.isSupported(DateTimeFieldType.year()) |==> false
7723:COR:partial.isSupported(DateTimeFieldType.year()):FALSE:org.joda.time.chrono.BasicDayOfYearDateTimeField@getMaximumValue(org.joda.time.ReadablePartial):74:partial.isSupported(DateTimeFieldType.year()) |==> true
7724:LVR:0:POS:org.joda.time.chrono.BasicDayOfYearDateTimeField@getMaximumValue(org.joda.time.ReadablePartial,int[]):83:0 |==> 1
7725:LVR:0:NEG:org.joda.time.chrono.BasicDayOfYearDateTimeField@getMaximumValue(org.joda.time.ReadablePartial,int[]):83:0 |==> -1
7726:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BasicDayOfYearDateTimeField@getMaximumValue(org.joda.time.ReadablePartial,int[]):83:i < size |==> i != size
7727:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BasicDayOfYearDateTimeField@getMaximumValue(org.joda.time.ReadablePartial,int[]):83:i < size |==> i <= size
7728:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BasicDayOfYearDateTimeField@getMaximumValue(org.joda.time.ReadablePartial,int[]):83:i < size |==> false
7729:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.BasicDayOfYearDateTimeField@getMaximumValue(org.joda.time.ReadablePartial,int[]):84:partial.getFieldType(i) == DateTimeFieldType.year() |==> false
7730:LVR:POS:0:org.joda.time.chrono.BasicDayOfYearDateTimeField@getMaximumValueForSet(long,int):93:1 |==> 0
7731:LVR:POS:NEG:org.joda.time.chrono.BasicDayOfYearDateTimeField@getMaximumValueForSet(long,int):93:1 |==> -1
7732:AOR:-(int,int):%(int,int):org.joda.time.chrono.BasicDayOfYearDateTimeField@getMaximumValueForSet(long,int):93:iChronology.getDaysInYearMax() - 1 |==> iChronology.getDaysInYearMax() % 1
7733:AOR:-(int,int):*(int,int):org.joda.time.chrono.BasicDayOfYearDateTimeField@getMaximumValueForSet(long,int):93:iChronology.getDaysInYearMax() - 1 |==> iChronology.getDaysInYearMax() * 1
7734:AOR:-(int,int):+(int,int):org.joda.time.chrono.BasicDayOfYearDateTimeField@getMaximumValueForSet(long,int):93:iChronology.getDaysInYearMax() - 1 |==> iChronology.getDaysInYearMax() + 1
7735:AOR:-(int,int):/(int,int):org.joda.time.chrono.BasicDayOfYearDateTimeField@getMaximumValueForSet(long,int):93:iChronology.getDaysInYearMax() - 1 |==> iChronology.getDaysInYearMax() / 1
7736:ROR:>(int,int):!=(int,int):org.joda.time.chrono.BasicDayOfYearDateTimeField@getMaximumValueForSet(long,int):94:value > maxLessOne |==> value != maxLessOne
7737:ROR:>(int,int):>=(int,int):org.joda.time.chrono.BasicDayOfYearDateTimeField@getMaximumValueForSet(long,int):94:value > maxLessOne |==> value >= maxLessOne
7738:ROR:>(int,int):FALSE(int,int):org.joda.time.chrono.BasicDayOfYearDateTimeField@getMaximumValueForSet(long,int):94:value > maxLessOne |==> false
7739:LVR:POS:0:org.joda.time.chrono.BasicDayOfYearDateTimeField@getMaximumValueForSet(long,int):94:1 |==> 0
7740:LVR:POS:NEG:org.joda.time.chrono.BasicDayOfYearDateTimeField@getMaximumValueForSet(long,int):94:1 |==> -1
7741:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BasicDayOfYearDateTimeField@getMaximumValueForSet(long,int):94:value < 1 |==> value != 1
7742:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BasicDayOfYearDateTimeField@getMaximumValueForSet(long,int):94:value < 1 |==> value <= 1
7743:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BasicDayOfYearDateTimeField@getMaximumValueForSet(long,int):94:value < 1 |==> false
7744:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.chrono.BasicDayOfYearDateTimeField@getMaximumValueForSet(long,int):94:value > maxLessOne || value < 1 |==> value > maxLessOne != value < 1
7745:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.BasicDayOfYearDateTimeField@getMaximumValueForSet(long,int):94:value > maxLessOne || value < 1 |==> value > maxLessOne
7746:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.BasicDayOfYearDateTimeField@getMaximumValueForSet(long,int):94:value > maxLessOne || value < 1 |==> value < 1
7747:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.chrono.BasicDayOfYearDateTimeField@getMaximumValueForSet(long,int):94:value > maxLessOne || value < 1 |==> true
7748:LVR:POS:0:org.joda.time.chrono.BasicFixedMonthChronology@setYear(long,int):69:365 |==> 0
7749:LVR:POS:NEG:org.joda.time.chrono.BasicFixedMonthChronology@setYear(long,int):69:365 |==> -365
7750:ROR:>(int,int):!=(int,int):org.joda.time.chrono.BasicFixedMonthChronology@setYear(long,int):69:dayOfYear > 365 |==> dayOfYear != 365
7751:ROR:>(int,int):>=(int,int):org.joda.time.chrono.BasicFixedMonthChronology@setYear(long,int):69:dayOfYear > 365 |==> dayOfYear >= 365
7752:ROR:>(int,int):FALSE(int,int):org.joda.time.chrono.BasicFixedMonthChronology@setYear(long,int):69:dayOfYear > 365 |==> false
7753:COR:isLeapYear(year):TRUE:org.joda.time.chrono.BasicFixedMonthChronology@setYear(long,int):71:isLeapYear(year) |==> false
7754:COR:isLeapYear(year):FALSE:org.joda.time.chrono.BasicFixedMonthChronology@setYear(long,int):71:isLeapYear(year) |==> true
7755:STD:<DEC>:<NO-OP>:org.joda.time.chrono.BasicFixedMonthChronology@setYear(long,int):73:dayOfYear-- |==> <NO-OP>
7756:LVR:POS:0:org.joda.time.chrono.BasicFixedMonthChronology@setYear(long,int):77:1 |==> 0
7757:LVR:POS:NEG:org.joda.time.chrono.BasicFixedMonthChronology@setYear(long,int):77:1 |==> -1
7758:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicFixedMonthChronology@setYear(long,int):77:instant = getYearMonthDayMillis(year, 1, dayOfYear) |==> <NO-OP>
7759:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicFixedMonthChronology@setYear(long,int):78:instant += millisOfDay |==> <NO-OP>
7760:AOR:-(long,long):%(long,long):org.joda.time.chrono.BasicFixedMonthChronology@getYearDifference(long,long):89:minuendInstant - getYearMillis(minuendYear) |==> minuendInstant % getYearMillis(minuendYear)
7761:AOR:-(long,long):*(long,long):org.joda.time.chrono.BasicFixedMonthChronology@getYearDifference(long,long):89:minuendInstant - getYearMillis(minuendYear) |==> minuendInstant * getYearMillis(minuendYear)
7762:AOR:-(long,long):+(long,long):org.joda.time.chrono.BasicFixedMonthChronology@getYearDifference(long,long):89:minuendInstant - getYearMillis(minuendYear) |==> minuendInstant + getYearMillis(minuendYear)
7763:AOR:-(long,long):/(long,long):org.joda.time.chrono.BasicFixedMonthChronology@getYearDifference(long,long):89:minuendInstant - getYearMillis(minuendYear) |==> minuendInstant / getYearMillis(minuendYear)
7764:AOR:-(long,long):%(long,long):org.joda.time.chrono.BasicFixedMonthChronology@getYearDifference(long,long):90:subtrahendInstant - getYearMillis(subtrahendYear) |==> subtrahendInstant % getYearMillis(subtrahendYear)
7765:AOR:-(long,long):*(long,long):org.joda.time.chrono.BasicFixedMonthChronology@getYearDifference(long,long):90:subtrahendInstant - getYearMillis(subtrahendYear) |==> subtrahendInstant * getYearMillis(subtrahendYear)
7766:AOR:-(long,long):+(long,long):org.joda.time.chrono.BasicFixedMonthChronology@getYearDifference(long,long):90:subtrahendInstant - getYearMillis(subtrahendYear) |==> subtrahendInstant + getYearMillis(subtrahendYear)
7767:AOR:-(long,long):/(long,long):org.joda.time.chrono.BasicFixedMonthChronology@getYearDifference(long,long):90:subtrahendInstant - getYearMillis(subtrahendYear) |==> subtrahendInstant / getYearMillis(subtrahendYear)
7768:AOR:-(int,int):%(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getYearDifference(long,long):92:minuendYear - subtrahendYear |==> minuendYear % subtrahendYear
7769:AOR:-(int,int):*(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getYearDifference(long,long):92:minuendYear - subtrahendYear |==> minuendYear * subtrahendYear
7770:AOR:-(int,int):+(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getYearDifference(long,long):92:minuendYear - subtrahendYear |==> minuendYear + subtrahendYear
7771:AOR:-(int,int):/(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getYearDifference(long,long):92:minuendYear - subtrahendYear |==> minuendYear / subtrahendYear
7772:ROR:<(long,long):!=(long,long):org.joda.time.chrono.BasicFixedMonthChronology@getYearDifference(long,long):93:minuendRem < subtrahendRem |==> minuendRem != subtrahendRem
7773:ROR:<(long,long):<=(long,long):org.joda.time.chrono.BasicFixedMonthChronology@getYearDifference(long,long):93:minuendRem < subtrahendRem |==> minuendRem <= subtrahendRem
7774:ROR:<(long,long):FALSE(long,long):org.joda.time.chrono.BasicFixedMonthChronology@getYearDifference(long,long):93:minuendRem < subtrahendRem |==> false
7775:STD:<DEC>:<NO-OP>:org.joda.time.chrono.BasicFixedMonthChronology@getYearDifference(long,long):94:difference-- |==> <NO-OP>
7776:LVR:POS:0:org.joda.time.chrono.BasicFixedMonthChronology@getTotalMillisByYearMonth(int,int):101:1 |==> 0
7777:LVR:POS:NEG:org.joda.time.chrono.BasicFixedMonthChronology@getTotalMillisByYearMonth(int,int):101:1 |==> -1
7778:AOR:-(int,int):%(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getTotalMillisByYearMonth(int,int):101:month - 1 |==> month % 1
7779:AOR:-(int,int):*(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getTotalMillisByYearMonth(int,int):101:month - 1 |==> month * 1
7780:AOR:-(int,int):+(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getTotalMillisByYearMonth(int,int):101:month - 1 |==> month + 1
7781:AOR:-(int,int):/(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getTotalMillisByYearMonth(int,int):101:month - 1 |==> month / 1
7782:AOR:*(long,long):%(long,long):org.joda.time.chrono.BasicFixedMonthChronology@getTotalMillisByYearMonth(int,int):101:(month - 1) * MILLIS_PER_MONTH |==> (month - 1) % MILLIS_PER_MONTH
7783:AOR:*(long,long):+(long,long):org.joda.time.chrono.BasicFixedMonthChronology@getTotalMillisByYearMonth(int,int):101:(month - 1) * MILLIS_PER_MONTH |==> (month - 1) + MILLIS_PER_MONTH
7784:AOR:*(long,long):-(long,long):org.joda.time.chrono.BasicFixedMonthChronology@getTotalMillisByYearMonth(int,int):101:(month - 1) * MILLIS_PER_MONTH |==> (month - 1) - MILLIS_PER_MONTH
7785:AOR:*(long,long):/(long,long):org.joda.time.chrono.BasicFixedMonthChronology@getTotalMillisByYearMonth(int,int):101:(month - 1) * MILLIS_PER_MONTH |==> (month - 1) / MILLIS_PER_MONTH
7786:LVR:POS:0:org.joda.time.chrono.BasicFixedMonthChronology@getDayOfMonth(long):107:1 |==> 0
7787:LVR:POS:NEG:org.joda.time.chrono.BasicFixedMonthChronology@getDayOfMonth(long):107:1 |==> -1
7788:AOR:-(int,int):%(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getDayOfMonth(long):107:getDayOfYear(millis) - 1 |==> getDayOfYear(millis) % 1
7789:AOR:-(int,int):*(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getDayOfMonth(long):107:getDayOfYear(millis) - 1 |==> getDayOfYear(millis) * 1
7790:AOR:-(int,int):+(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getDayOfMonth(long):107:getDayOfYear(millis) - 1 |==> getDayOfYear(millis) + 1
7791:AOR:-(int,int):/(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getDayOfMonth(long):107:getDayOfYear(millis) - 1 |==> getDayOfYear(millis) / 1
7792:AOR:%(int,int):*(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getDayOfMonth(long):107:(getDayOfYear(millis) - 1) % MONTH_LENGTH |==> (getDayOfYear(millis) - 1) * MONTH_LENGTH
7793:AOR:%(int,int):+(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getDayOfMonth(long):107:(getDayOfYear(millis) - 1) % MONTH_LENGTH |==> (getDayOfYear(millis) - 1) + MONTH_LENGTH
7794:AOR:%(int,int):-(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getDayOfMonth(long):107:(getDayOfYear(millis) - 1) % MONTH_LENGTH |==> (getDayOfYear(millis) - 1) - MONTH_LENGTH
7795:AOR:%(int,int):/(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getDayOfMonth(long):107:(getDayOfYear(millis) - 1) % MONTH_LENGTH |==> (getDayOfYear(millis) - 1) / MONTH_LENGTH
7796:LVR:POS:0:org.joda.time.chrono.BasicFixedMonthChronology@getDayOfMonth(long):107:1 |==> 0
7797:LVR:POS:NEG:org.joda.time.chrono.BasicFixedMonthChronology@getDayOfMonth(long):107:1 |==> -1
7798:AOR:+(int,int):%(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getDayOfMonth(long):107:(getDayOfYear(millis) - 1) % MONTH_LENGTH + 1 |==> (getDayOfYear(millis) - 1) % MONTH_LENGTH % 1
7799:AOR:+(int,int):*(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getDayOfMonth(long):107:(getDayOfYear(millis) - 1) % MONTH_LENGTH + 1 |==> (getDayOfYear(millis) - 1) % MONTH_LENGTH * 1
7800:AOR:+(int,int):-(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getDayOfMonth(long):107:(getDayOfYear(millis) - 1) % MONTH_LENGTH + 1 |==> (getDayOfYear(millis) - 1) % MONTH_LENGTH - 1
7801:AOR:+(int,int):/(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getDayOfMonth(long):107:(getDayOfYear(millis) - 1) % MONTH_LENGTH + 1 |==> (getDayOfYear(millis) - 1) % MONTH_LENGTH / 1
7802:LVR:POS:0:org.joda.time.chrono.BasicFixedMonthChronology@isLeapYear(int):112:3 |==> 0
7803:LVR:POS:NEG:org.joda.time.chrono.BasicFixedMonthChronology@isLeapYear(int):112:3 |==> -3
7804:LOR:&(int,int):^(int,int):org.joda.time.chrono.BasicFixedMonthChronology@isLeapYear(int):112:year & 3 |==> year ^ 3
7805:LOR:&(int,int):|(int,int):org.joda.time.chrono.BasicFixedMonthChronology@isLeapYear(int):112:year & 3 |==> year | 3
7806:LVR:POS:0:org.joda.time.chrono.BasicFixedMonthChronology@isLeapYear(int):112:3 |==> 0
7807:LVR:POS:NEG:org.joda.time.chrono.BasicFixedMonthChronology@isLeapYear(int):112:3 |==> -3
7808:ROR:==(int,int):<=(int,int):org.joda.time.chrono.BasicFixedMonthChronology@isLeapYear(int):112:(year & 3) == 3 |==> (year & 3) <= 3
7809:ROR:==(int,int):>=(int,int):org.joda.time.chrono.BasicFixedMonthChronology@isLeapYear(int):112:(year & 3) == 3 |==> (year & 3) >= 3
7810:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.BasicFixedMonthChronology@isLeapYear(int):112:(year & 3) == 3 |==> false
7811:LVR:POS:0:org.joda.time.chrono.BasicFixedMonthChronology@getDaysInYearMonth(int,int):117:13 |==> 0
7812:LVR:POS:NEG:org.joda.time.chrono.BasicFixedMonthChronology@getDaysInYearMonth(int,int):117:13 |==> -13
7813:ROR:!=(int,int):<(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getDaysInYearMonth(int,int):117:month != 13 |==> month < 13
7814:ROR:!=(int,int):>(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getDaysInYearMonth(int,int):117:month != 13 |==> month > 13
7815:ROR:!=(int,int):TRUE(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getDaysInYearMonth(int,int):117:month != 13 |==> true
7816:COR:isLeapYear(year):TRUE:org.joda.time.chrono.BasicFixedMonthChronology@getDaysInYearMonth(int,int):117:isLeapYear(year) |==> false
7817:COR:isLeapYear(year):FALSE:org.joda.time.chrono.BasicFixedMonthChronology@getDaysInYearMonth(int,int):117:isLeapYear(year) |==> true
7818:LVR:POS:0:org.joda.time.chrono.BasicFixedMonthChronology@getDaysInYearMonth(int,int):117:6 |==> 0
7819:LVR:POS:NEG:org.joda.time.chrono.BasicFixedMonthChronology@getDaysInYearMonth(int,int):117:6 |==> -6
7820:LVR:POS:0:org.joda.time.chrono.BasicFixedMonthChronology@getDaysInYearMonth(int,int):117:5 |==> 0
7821:LVR:POS:NEG:org.joda.time.chrono.BasicFixedMonthChronology@getDaysInYearMonth(int,int):117:5 |==> -5
7822:LVR:POS:0:org.joda.time.chrono.BasicFixedMonthChronology@getDaysInMonthMax(int):127:13 |==> 0
7823:LVR:POS:NEG:org.joda.time.chrono.BasicFixedMonthChronology@getDaysInMonthMax(int):127:13 |==> -13
7824:ROR:!=(int,int):<(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getDaysInMonthMax(int):127:month != 13 |==> month < 13
7825:ROR:!=(int,int):>(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getDaysInMonthMax(int):127:month != 13 |==> month > 13
7826:ROR:!=(int,int):TRUE(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getDaysInMonthMax(int):127:month != 13 |==> true
7827:LVR:POS:0:org.joda.time.chrono.BasicFixedMonthChronology@getDaysInMonthMax(int):127:6 |==> 0
7828:LVR:POS:NEG:org.joda.time.chrono.BasicFixedMonthChronology@getDaysInMonthMax(int):127:6 |==> -6
7829:LVR:POS:0:org.joda.time.chrono.BasicFixedMonthChronology@getMonthOfYear(long):132:1 |==> 0
7830:LVR:POS:NEG:org.joda.time.chrono.BasicFixedMonthChronology@getMonthOfYear(long):132:1 |==> -1
7831:AOR:-(int,int):%(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getMonthOfYear(long):132:getDayOfYear(millis) - 1 |==> getDayOfYear(millis) % 1
7832:AOR:-(int,int):*(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getMonthOfYear(long):132:getDayOfYear(millis) - 1 |==> getDayOfYear(millis) * 1
7833:AOR:-(int,int):+(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getMonthOfYear(long):132:getDayOfYear(millis) - 1 |==> getDayOfYear(millis) + 1
7834:AOR:-(int,int):/(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getMonthOfYear(long):132:getDayOfYear(millis) - 1 |==> getDayOfYear(millis) / 1
7835:AOR:/(int,int):%(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getMonthOfYear(long):132:(getDayOfYear(millis) - 1) / MONTH_LENGTH |==> (getDayOfYear(millis) - 1) % MONTH_LENGTH
7836:AOR:/(int,int):*(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getMonthOfYear(long):132:(getDayOfYear(millis) - 1) / MONTH_LENGTH |==> (getDayOfYear(millis) - 1) * MONTH_LENGTH
7837:AOR:/(int,int):+(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getMonthOfYear(long):132:(getDayOfYear(millis) - 1) / MONTH_LENGTH |==> (getDayOfYear(millis) - 1) + MONTH_LENGTH
7838:AOR:/(int,int):-(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getMonthOfYear(long):132:(getDayOfYear(millis) - 1) / MONTH_LENGTH |==> (getDayOfYear(millis) - 1) - MONTH_LENGTH
7839:LVR:POS:0:org.joda.time.chrono.BasicFixedMonthChronology@getMonthOfYear(long):132:1 |==> 0
7840:LVR:POS:NEG:org.joda.time.chrono.BasicFixedMonthChronology@getMonthOfYear(long):132:1 |==> -1
7841:AOR:+(int,int):%(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getMonthOfYear(long):132:(getDayOfYear(millis) - 1) / MONTH_LENGTH + 1 |==> (getDayOfYear(millis) - 1) / MONTH_LENGTH % 1
7842:AOR:+(int,int):*(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getMonthOfYear(long):132:(getDayOfYear(millis) - 1) / MONTH_LENGTH + 1 |==> (getDayOfYear(millis) - 1) / MONTH_LENGTH * 1
7843:AOR:+(int,int):-(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getMonthOfYear(long):132:(getDayOfYear(millis) - 1) / MONTH_LENGTH + 1 |==> (getDayOfYear(millis) - 1) / MONTH_LENGTH - 1
7844:AOR:+(int,int):/(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getMonthOfYear(long):132:(getDayOfYear(millis) - 1) / MONTH_LENGTH + 1 |==> (getDayOfYear(millis) - 1) / MONTH_LENGTH / 1
7845:AOR:-(long,long):%(long,long):org.joda.time.chrono.BasicFixedMonthChronology@getMonthOfYear(long,int):137:millis - getYearMillis(year) |==> millis % getYearMillis(year)
7846:AOR:-(long,long):*(long,long):org.joda.time.chrono.BasicFixedMonthChronology@getMonthOfYear(long,int):137:millis - getYearMillis(year) |==> millis * getYearMillis(year)
7847:AOR:-(long,long):+(long,long):org.joda.time.chrono.BasicFixedMonthChronology@getMonthOfYear(long,int):137:millis - getYearMillis(year) |==> millis + getYearMillis(year)
7848:AOR:-(long,long):/(long,long):org.joda.time.chrono.BasicFixedMonthChronology@getMonthOfYear(long,int):137:millis - getYearMillis(year) |==> millis / getYearMillis(year)
7849:AOR:/(long,long):%(long,long):org.joda.time.chrono.BasicFixedMonthChronology@getMonthOfYear(long,int):137:(millis - getYearMillis(year)) / MILLIS_PER_MONTH |==> (millis - getYearMillis(year)) % MILLIS_PER_MONTH
7850:AOR:/(long,long):*(long,long):org.joda.time.chrono.BasicFixedMonthChronology@getMonthOfYear(long,int):137:(millis - getYearMillis(year)) / MILLIS_PER_MONTH |==> (millis - getYearMillis(year)) * MILLIS_PER_MONTH
7851:AOR:/(long,long):+(long,long):org.joda.time.chrono.BasicFixedMonthChronology@getMonthOfYear(long,int):137:(millis - getYearMillis(year)) / MILLIS_PER_MONTH |==> (millis - getYearMillis(year)) + MILLIS_PER_MONTH
7852:AOR:/(long,long):-(long,long):org.joda.time.chrono.BasicFixedMonthChronology@getMonthOfYear(long,int):137:(millis - getYearMillis(year)) / MILLIS_PER_MONTH |==> (millis - getYearMillis(year)) - MILLIS_PER_MONTH
7853:LVR:POS:0:org.joda.time.chrono.BasicFixedMonthChronology@getMonthOfYear(long,int):138:1 |==> 0
7854:LVR:POS:NEG:org.joda.time.chrono.BasicFixedMonthChronology@getMonthOfYear(long,int):138:1 |==> -1
7855:AOR:+(int,int):%(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getMonthOfYear(long,int):138:((int)monthZeroBased) + 1 |==> ((int)monthZeroBased) % 1
7856:AOR:+(int,int):*(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getMonthOfYear(long,int):138:((int)monthZeroBased) + 1 |==> ((int)monthZeroBased) * 1
7857:AOR:+(int,int):-(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getMonthOfYear(long,int):138:((int)monthZeroBased) + 1 |==> ((int)monthZeroBased) - 1
7858:AOR:+(int,int):/(int,int):org.joda.time.chrono.BasicFixedMonthChronology@getMonthOfYear(long,int):138:((int)monthZeroBased) + 1 |==> ((int)monthZeroBased) / 1
7859:LVR:POS:0:org.joda.time.chrono.BasicFixedMonthChronology@getMaxMonth():143:13 |==> 0
7860:LVR:POS:NEG:org.joda.time.chrono.BasicFixedMonthChronology@getMaxMonth():143:13 |==> -13
7861:LVR:POS:0:org.joda.time.chrono.BasicFixedMonthChronology@getAverageMillisPerYearDividedByTwo():153:2 |==> 0
7862:LVR:POS:NEG:org.joda.time.chrono.BasicFixedMonthChronology@getAverageMillisPerYearDividedByTwo():153:2 |==> -2
7863:AOR:/(long,long):%(long,long):org.joda.time.chrono.BasicFixedMonthChronology@getAverageMillisPerYearDividedByTwo():153:MILLIS_PER_YEAR / 2 |==> MILLIS_PER_YEAR % 2
7864:AOR:/(long,long):*(long,long):org.joda.time.chrono.BasicFixedMonthChronology@getAverageMillisPerYearDividedByTwo():153:MILLIS_PER_YEAR / 2 |==> MILLIS_PER_YEAR * 2
7865:AOR:/(long,long):+(long,long):org.joda.time.chrono.BasicFixedMonthChronology@getAverageMillisPerYearDividedByTwo():153:MILLIS_PER_YEAR / 2 |==> MILLIS_PER_YEAR + 2
7866:AOR:/(long,long):-(long,long):org.joda.time.chrono.BasicFixedMonthChronology@getAverageMillisPerYearDividedByTwo():153:MILLIS_PER_YEAR / 2 |==> MILLIS_PER_YEAR - 2
7867:LVR:POS:0:org.joda.time.chrono.BasicGJChronology:43:31 |==> 0
7868:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology:43:31 |==> -31
7869:LVR:POS:0:org.joda.time.chrono.BasicGJChronology:43:28 |==> 0
7870:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology:43:28 |==> -28
7871:LVR:POS:0:org.joda.time.chrono.BasicGJChronology:43:31 |==> 0
7872:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology:43:31 |==> -31
7873:LVR:POS:0:org.joda.time.chrono.BasicGJChronology:43:30 |==> 0
7874:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology:43:30 |==> -30
7875:LVR:POS:0:org.joda.time.chrono.BasicGJChronology:43:31 |==> 0
7876:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology:43:31 |==> -31
7877:LVR:POS:0:org.joda.time.chrono.BasicGJChronology:43:30 |==> 0
7878:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology:43:30 |==> -30
7879:LVR:POS:0:org.joda.time.chrono.BasicGJChronology:43:31 |==> 0
7880:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology:43:31 |==> -31
7881:LVR:POS:0:org.joda.time.chrono.BasicGJChronology:43:31 |==> 0
7882:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology:43:31 |==> -31
7883:LVR:POS:0:org.joda.time.chrono.BasicGJChronology:43:30 |==> 0
7884:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology:43:30 |==> -30
7885:LVR:POS:0:org.joda.time.chrono.BasicGJChronology:43:31 |==> 0
7886:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology:43:31 |==> -31
7887:LVR:POS:0:org.joda.time.chrono.BasicGJChronology:43:30 |==> 0
7888:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology:43:30 |==> -30
7889:LVR:POS:0:org.joda.time.chrono.BasicGJChronology:43:31 |==> 0
7890:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology:43:31 |==> -31
7891:LVR:POS:0:org.joda.time.chrono.BasicGJChronology:46:31 |==> 0
7892:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology:46:31 |==> -31
7893:LVR:POS:0:org.joda.time.chrono.BasicGJChronology:46:29 |==> 0
7894:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology:46:29 |==> -29
7895:LVR:POS:0:org.joda.time.chrono.BasicGJChronology:46:31 |==> 0
7896:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology:46:31 |==> -31
7897:LVR:POS:0:org.joda.time.chrono.BasicGJChronology:46:30 |==> 0
7898:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology:46:30 |==> -30
7899:LVR:POS:0:org.joda.time.chrono.BasicGJChronology:46:31 |==> 0
7900:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology:46:31 |==> -31
7901:LVR:POS:0:org.joda.time.chrono.BasicGJChronology:46:30 |==> 0
7902:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology:46:30 |==> -30
7903:LVR:POS:0:org.joda.time.chrono.BasicGJChronology:46:31 |==> 0
7904:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology:46:31 |==> -31
7905:LVR:POS:0:org.joda.time.chrono.BasicGJChronology:46:31 |==> 0
7906:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology:46:31 |==> -31
7907:LVR:POS:0:org.joda.time.chrono.BasicGJChronology:46:30 |==> 0
7908:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology:46:30 |==> -30
7909:LVR:POS:0:org.joda.time.chrono.BasicGJChronology:46:31 |==> 0
7910:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology:46:31 |==> -31
7911:LVR:POS:0:org.joda.time.chrono.BasicGJChronology:46:30 |==> 0
7912:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology:46:30 |==> -30
7913:LVR:POS:0:org.joda.time.chrono.BasicGJChronology:46:31 |==> 0
7914:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology:46:31 |==> -31
7915:LVR:POS:0:org.joda.time.chrono.BasicGJChronology:53:12 |==> 0
7916:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology:53:12 |==> -12
7917:LVR:POS:0:org.joda.time.chrono.BasicGJChronology:54:12 |==> 0
7918:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology:54:12 |==> -12
7919:LVR:0:POS:org.joda.time.chrono.BasicGJChronology:56:0 |==> 1
7920:LVR:0:NEG:org.joda.time.chrono.BasicGJChronology:56:0 |==> -1
7921:LVR:0:POS:org.joda.time.chrono.BasicGJChronology:57:0 |==> 1
7922:LVR:0:NEG:org.joda.time.chrono.BasicGJChronology:57:0 |==> -1
7923:LVR:0:POS:org.joda.time.chrono.BasicGJChronology:58:0 |==> 1
7924:LVR:0:NEG:org.joda.time.chrono.BasicGJChronology:58:0 |==> -1
7925:LVR:POS:0:org.joda.time.chrono.BasicGJChronology:58:11 |==> 0
7926:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology:58:11 |==> -11
7927:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BasicGJChronology:58:i < 11 |==> i != 11
7928:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BasicGJChronology:58:i < 11 |==> i <= 11
7929:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BasicGJChronology:58:i < 11 |==> false
7930:AOR:*(long,long):%(long,long):org.joda.time.chrono.BasicGJChronology:59:MIN_DAYS_PER_MONTH_ARRAY[i] * (long)DateTimeConstants.MILLIS_PER_DAY |==> MIN_DAYS_PER_MONTH_ARRAY[i] % (long)DateTimeConstants.MILLIS_PER_DAY
7931:AOR:*(long,long):+(long,long):org.joda.time.chrono.BasicGJChronology:59:MIN_DAYS_PER_MONTH_ARRAY[i] * (long)DateTimeConstants.MILLIS_PER_DAY |==> MIN_DAYS_PER_MONTH_ARRAY[i] + (long)DateTimeConstants.MILLIS_PER_DAY
7932:AOR:*(long,long):-(long,long):org.joda.time.chrono.BasicGJChronology:59:MIN_DAYS_PER_MONTH_ARRAY[i] * (long)DateTimeConstants.MILLIS_PER_DAY |==> MIN_DAYS_PER_MONTH_ARRAY[i] - (long)DateTimeConstants.MILLIS_PER_DAY
7933:AOR:*(long,long):/(long,long):org.joda.time.chrono.BasicGJChronology:59:MIN_DAYS_PER_MONTH_ARRAY[i] * (long)DateTimeConstants.MILLIS_PER_DAY |==> MIN_DAYS_PER_MONTH_ARRAY[i] / (long)DateTimeConstants.MILLIS_PER_DAY
7934:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicGJChronology:61:minSum += millis |==> <NO-OP>
7935:LVR:POS:0:org.joda.time.chrono.BasicGJChronology:62:1 |==> 0
7936:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology:62:1 |==> -1
7937:AOR:+(int,int):%(int,int):org.joda.time.chrono.BasicGJChronology:62:i + 1 |==> i % 1
7938:AOR:+(int,int):*(int,int):org.joda.time.chrono.BasicGJChronology:62:i + 1 |==> i * 1
7939:AOR:+(int,int):-(int,int):org.joda.time.chrono.BasicGJChronology:62:i + 1 |==> i - 1
7940:AOR:+(int,int):/(int,int):org.joda.time.chrono.BasicGJChronology:62:i + 1 |==> i / 1
7941:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicGJChronology:62:MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[i + 1] = minSum |==> <NO-OP>
7942:AOR:*(long,long):%(long,long):org.joda.time.chrono.BasicGJChronology:64:MAX_DAYS_PER_MONTH_ARRAY[i] * (long)DateTimeConstants.MILLIS_PER_DAY |==> MAX_DAYS_PER_MONTH_ARRAY[i] % (long)DateTimeConstants.MILLIS_PER_DAY
7943:AOR:*(long,long):+(long,long):org.joda.time.chrono.BasicGJChronology:64:MAX_DAYS_PER_MONTH_ARRAY[i] * (long)DateTimeConstants.MILLIS_PER_DAY |==> MAX_DAYS_PER_MONTH_ARRAY[i] + (long)DateTimeConstants.MILLIS_PER_DAY
7944:AOR:*(long,long):-(long,long):org.joda.time.chrono.BasicGJChronology:64:MAX_DAYS_PER_MONTH_ARRAY[i] * (long)DateTimeConstants.MILLIS_PER_DAY |==> MAX_DAYS_PER_MONTH_ARRAY[i] - (long)DateTimeConstants.MILLIS_PER_DAY
7945:AOR:*(long,long):/(long,long):org.joda.time.chrono.BasicGJChronology:64:MAX_DAYS_PER_MONTH_ARRAY[i] * (long)DateTimeConstants.MILLIS_PER_DAY |==> MAX_DAYS_PER_MONTH_ARRAY[i] / (long)DateTimeConstants.MILLIS_PER_DAY
7946:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicGJChronology:64:millis = MAX_DAYS_PER_MONTH_ARRAY[i] * (long)DateTimeConstants.MILLIS_PER_DAY |==> <NO-OP>
7947:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicGJChronology:66:maxSum += millis |==> <NO-OP>
7948:LVR:POS:0:org.joda.time.chrono.BasicGJChronology:67:1 |==> 0
7949:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology:67:1 |==> -1
7950:AOR:+(int,int):%(int,int):org.joda.time.chrono.BasicGJChronology:67:i + 1 |==> i % 1
7951:AOR:+(int,int):*(int,int):org.joda.time.chrono.BasicGJChronology:67:i + 1 |==> i * 1
7952:AOR:+(int,int):-(int,int):org.joda.time.chrono.BasicGJChronology:67:i + 1 |==> i - 1
7953:AOR:+(int,int):/(int,int):org.joda.time.chrono.BasicGJChronology:67:i + 1 |==> i / 1
7954:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicGJChronology:67:MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[i + 1] = maxSum |==> <NO-OP>
7955:AOR:-(long,long):%(long,long):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):88:millis - getYearMillis(year) |==> millis % getYearMillis(year)
7956:AOR:-(long,long):*(long,long):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):88:millis - getYearMillis(year) |==> millis * getYearMillis(year)
7957:AOR:-(long,long):+(long,long):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):88:millis - getYearMillis(year) |==> millis + getYearMillis(year)
7958:AOR:-(long,long):/(long,long):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):88:millis - getYearMillis(year) |==> millis / getYearMillis(year)
7959:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):88:10 |==> 0
7960:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):88:10 |==> -10
7961:SOR:>>(long,int):<<(long,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):88:(millis - getYearMillis(year)) >> 10 |==> (millis - getYearMillis(year)) << 10
7962:SOR:>>(long,int):>>>(long,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):88:(millis - getYearMillis(year)) >> 10 |==> (millis - getYearMillis(year)) >>> 10
7963:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):95:182 |==> 0
7964:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):95:182 |==> -182
7965:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):95:84375 |==> 0
7966:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):95:84375 |==> -84375
7967:AOR:*(int,int):%(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):95:182 * 84375 |==> 182 % 84375
7968:AOR:*(int,int):+(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):95:182 * 84375 |==> 182 + 84375
7969:AOR:*(int,int):-(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):95:182 * 84375 |==> 182 - 84375
7970:AOR:*(int,int):/(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):95:182 * 84375 |==> 182 / 84375
7971:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):95:i < 182 * 84375 |==> i != 182 * 84375
7972:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):95:i < 182 * 84375 |==> i <= 182 * 84375
7973:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):95:i < 182 * 84375 |==> false
7974:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):96:91 |==> 0
7975:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):96:91 |==> -91
7976:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):96:84375 |==> 0
7977:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):96:84375 |==> -84375
7978:AOR:*(int,int):%(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):96:91 * 84375 |==> 91 % 84375
7979:AOR:*(int,int):+(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):96:91 * 84375 |==> 91 + 84375
7980:AOR:*(int,int):-(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):96:91 * 84375 |==> 91 - 84375
7981:AOR:*(int,int):/(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):96:91 * 84375 |==> 91 / 84375
7982:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):96:i < 91 * 84375 |==> i != 91 * 84375
7983:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):96:i < 91 * 84375 |==> i <= 91 * 84375
7984:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):96:i < 91 * 84375 |==> false
7985:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):97:31 |==> 0
7986:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):97:31 |==> -31
7987:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):97:84375 |==> 0
7988:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):97:84375 |==> -84375
7989:AOR:*(int,int):%(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):97:31 * 84375 |==> 31 % 84375
7990:AOR:*(int,int):+(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):97:31 * 84375 |==> 31 + 84375
7991:AOR:*(int,int):-(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):97:31 * 84375 |==> 31 - 84375
7992:AOR:*(int,int):/(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):97:31 * 84375 |==> 31 / 84375
7993:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):97:i < 31 * 84375 |==> i != 31 * 84375
7994:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):97:i < 31 * 84375 |==> i <= 31 * 84375
7995:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):97:i < 31 * 84375 |==> false
7996:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):97:1 |==> 0
7997:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):97:1 |==> -1
7998:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):97:60 |==> 0
7999:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):97:60 |==> -60
8000:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):97:84375 |==> 0
8001:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):97:84375 |==> -84375
8002:AOR:*(int,int):%(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):97:60 * 84375 |==> 60 % 84375
8003:AOR:*(int,int):+(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):97:60 * 84375 |==> 60 + 84375
8004:AOR:*(int,int):-(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):97:60 * 84375 |==> 60 - 84375
8005:AOR:*(int,int):/(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):97:60 * 84375 |==> 60 / 84375
8006:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):97:i < 60 * 84375 |==> i != 60 * 84375
8007:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):97:i < 60 * 84375 |==> i <= 60 * 84375
8008:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):97:i < 60 * 84375 |==> false
8009:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):97:2 |==> 0
8010:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):97:2 |==> -2
8011:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):97:3 |==> 0
8012:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):97:3 |==> -3
8013:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):98:121 |==> 0
8014:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):98:121 |==> -121
8015:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):98:84375 |==> 0
8016:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):98:84375 |==> -84375
8017:AOR:*(int,int):%(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):98:121 * 84375 |==> 121 % 84375
8018:AOR:*(int,int):+(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):98:121 * 84375 |==> 121 + 84375
8019:AOR:*(int,int):-(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):98:121 * 84375 |==> 121 - 84375
8020:AOR:*(int,int):/(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):98:121 * 84375 |==> 121 / 84375
8021:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):98:i < 121 * 84375 |==> i != 121 * 84375
8022:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):98:i < 121 * 84375 |==> i <= 121 * 84375
8023:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):98:i < 121 * 84375 |==> false
8024:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):98:4 |==> 0
8025:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):98:4 |==> -4
8026:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):98:152 |==> 0
8027:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):98:152 |==> -152
8028:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):98:84375 |==> 0
8029:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):98:84375 |==> -84375
8030:AOR:*(int,int):%(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):98:152 * 84375 |==> 152 % 84375
8031:AOR:*(int,int):+(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):98:152 * 84375 |==> 152 + 84375
8032:AOR:*(int,int):-(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):98:152 * 84375 |==> 152 - 84375
8033:AOR:*(int,int):/(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):98:152 * 84375 |==> 152 / 84375
8034:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):98:i < 152 * 84375 |==> i != 152 * 84375
8035:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):98:i < 152 * 84375 |==> i <= 152 * 84375
8036:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):98:i < 152 * 84375 |==> false
8037:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):98:5 |==> 0
8038:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):98:5 |==> -5
8039:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):98:6 |==> 0
8040:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):98:6 |==> -6
8041:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):99:274 |==> 0
8042:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):99:274 |==> -274
8043:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):99:84375 |==> 0
8044:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):99:84375 |==> -84375
8045:AOR:*(int,int):%(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):99:274 * 84375 |==> 274 % 84375
8046:AOR:*(int,int):+(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):99:274 * 84375 |==> 274 + 84375
8047:AOR:*(int,int):-(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):99:274 * 84375 |==> 274 - 84375
8048:AOR:*(int,int):/(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):99:274 * 84375 |==> 274 / 84375
8049:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):99:i < 274 * 84375 |==> i != 274 * 84375
8050:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):99:i < 274 * 84375 |==> i <= 274 * 84375
8051:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):99:i < 274 * 84375 |==> false
8052:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):100:213 |==> 0
8053:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):100:213 |==> -213
8054:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):100:84375 |==> 0
8055:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):100:84375 |==> -84375
8056:AOR:*(int,int):%(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):100:213 * 84375 |==> 213 % 84375
8057:AOR:*(int,int):+(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):100:213 * 84375 |==> 213 + 84375
8058:AOR:*(int,int):-(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):100:213 * 84375 |==> 213 - 84375
8059:AOR:*(int,int):/(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):100:213 * 84375 |==> 213 / 84375
8060:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):100:i < 213 * 84375 |==> i != 213 * 84375
8061:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):100:i < 213 * 84375 |==> i <= 213 * 84375
8062:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):100:i < 213 * 84375 |==> false
8063:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):100:7 |==> 0
8064:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):100:7 |==> -7
8065:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):100:244 |==> 0
8066:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):100:244 |==> -244
8067:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):100:84375 |==> 0
8068:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):100:84375 |==> -84375
8069:AOR:*(int,int):%(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):100:244 * 84375 |==> 244 % 84375
8070:AOR:*(int,int):+(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):100:244 * 84375 |==> 244 + 84375
8071:AOR:*(int,int):-(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):100:244 * 84375 |==> 244 - 84375
8072:AOR:*(int,int):/(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):100:244 * 84375 |==> 244 / 84375
8073:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):100:i < 244 * 84375 |==> i != 244 * 84375
8074:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):100:i < 244 * 84375 |==> i <= 244 * 84375
8075:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):100:i < 244 * 84375 |==> false
8076:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):100:8 |==> 0
8077:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):100:8 |==> -8
8078:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):100:9 |==> 0
8079:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):100:9 |==> -9
8080:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):101:305 |==> 0
8081:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):101:305 |==> -305
8082:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):101:84375 |==> 0
8083:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):101:84375 |==> -84375
8084:AOR:*(int,int):%(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):101:305 * 84375 |==> 305 % 84375
8085:AOR:*(int,int):+(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):101:305 * 84375 |==> 305 + 84375
8086:AOR:*(int,int):-(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):101:305 * 84375 |==> 305 - 84375
8087:AOR:*(int,int):/(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):101:305 * 84375 |==> 305 / 84375
8088:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):101:i < 305 * 84375 |==> i != 305 * 84375
8089:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):101:i < 305 * 84375 |==> i <= 305 * 84375
8090:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):101:i < 305 * 84375 |==> false
8091:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):101:10 |==> 0
8092:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):101:10 |==> -10
8093:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):101:335 |==> 0
8094:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):101:335 |==> -335
8095:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):101:84375 |==> 0
8096:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):101:84375 |==> -84375
8097:AOR:*(int,int):%(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):101:335 * 84375 |==> 335 % 84375
8098:AOR:*(int,int):+(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):101:335 * 84375 |==> 335 + 84375
8099:AOR:*(int,int):-(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):101:335 * 84375 |==> 335 - 84375
8100:AOR:*(int,int):/(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):101:335 * 84375 |==> 335 / 84375
8101:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):101:i < 335 * 84375 |==> i != 335 * 84375
8102:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):101:i < 335 * 84375 |==> i <= 335 * 84375
8103:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):101:i < 335 * 84375 |==> false
8104:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):101:11 |==> 0
8105:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):101:11 |==> -11
8106:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):101:12 |==> 0
8107:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):101:12 |==> -12
8108:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):102:181 |==> 0
8109:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):102:181 |==> -181
8110:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):102:84375 |==> 0
8111:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):102:84375 |==> -84375
8112:AOR:*(int,int):%(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):102:181 * 84375 |==> 181 % 84375
8113:AOR:*(int,int):+(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):102:181 * 84375 |==> 181 + 84375
8114:AOR:*(int,int):-(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):102:181 * 84375 |==> 181 - 84375
8115:AOR:*(int,int):/(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):102:181 * 84375 |==> 181 / 84375
8116:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):102:i < 181 * 84375 |==> i != 181 * 84375
8117:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):102:i < 181 * 84375 |==> i <= 181 * 84375
8118:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):102:i < 181 * 84375 |==> false
8119:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):103:90 |==> 0
8120:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):103:90 |==> -90
8121:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):103:84375 |==> 0
8122:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):103:84375 |==> -84375
8123:AOR:*(int,int):%(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):103:90 * 84375 |==> 90 % 84375
8124:AOR:*(int,int):+(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):103:90 * 84375 |==> 90 + 84375
8125:AOR:*(int,int):-(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):103:90 * 84375 |==> 90 - 84375
8126:AOR:*(int,int):/(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):103:90 * 84375 |==> 90 / 84375
8127:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):103:i < 90 * 84375 |==> i != 90 * 84375
8128:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):103:i < 90 * 84375 |==> i <= 90 * 84375
8129:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):103:i < 90 * 84375 |==> false
8130:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):104:31 |==> 0
8131:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):104:31 |==> -31
8132:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):104:84375 |==> 0
8133:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):104:84375 |==> -84375
8134:AOR:*(int,int):%(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):104:31 * 84375 |==> 31 % 84375
8135:AOR:*(int,int):+(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):104:31 * 84375 |==> 31 + 84375
8136:AOR:*(int,int):-(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):104:31 * 84375 |==> 31 - 84375
8137:AOR:*(int,int):/(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):104:31 * 84375 |==> 31 / 84375
8138:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):104:i < 31 * 84375 |==> i != 31 * 84375
8139:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):104:i < 31 * 84375 |==> i <= 31 * 84375
8140:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):104:i < 31 * 84375 |==> false
8141:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):104:1 |==> 0
8142:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):104:1 |==> -1
8143:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):104:59 |==> 0
8144:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):104:59 |==> -59
8145:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):104:84375 |==> 0
8146:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):104:84375 |==> -84375
8147:AOR:*(int,int):%(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):104:59 * 84375 |==> 59 % 84375
8148:AOR:*(int,int):+(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):104:59 * 84375 |==> 59 + 84375
8149:AOR:*(int,int):-(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):104:59 * 84375 |==> 59 - 84375
8150:AOR:*(int,int):/(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):104:59 * 84375 |==> 59 / 84375
8151:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):104:i < 59 * 84375 |==> i != 59 * 84375
8152:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):104:i < 59 * 84375 |==> i <= 59 * 84375
8153:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):104:i < 59 * 84375 |==> false
8154:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):104:2 |==> 0
8155:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):104:2 |==> -2
8156:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):104:3 |==> 0
8157:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):104:3 |==> -3
8158:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):105:120 |==> 0
8159:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):105:120 |==> -120
8160:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):105:84375 |==> 0
8161:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):105:84375 |==> -84375
8162:AOR:*(int,int):%(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):105:120 * 84375 |==> 120 % 84375
8163:AOR:*(int,int):+(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):105:120 * 84375 |==> 120 + 84375
8164:AOR:*(int,int):-(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):105:120 * 84375 |==> 120 - 84375
8165:AOR:*(int,int):/(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):105:120 * 84375 |==> 120 / 84375
8166:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):105:i < 120 * 84375 |==> i != 120 * 84375
8167:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):105:i < 120 * 84375 |==> i <= 120 * 84375
8168:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):105:i < 120 * 84375 |==> false
8169:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):105:4 |==> 0
8170:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):105:4 |==> -4
8171:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):105:151 |==> 0
8172:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):105:151 |==> -151
8173:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):105:84375 |==> 0
8174:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):105:84375 |==> -84375
8175:AOR:*(int,int):%(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):105:151 * 84375 |==> 151 % 84375
8176:AOR:*(int,int):+(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):105:151 * 84375 |==> 151 + 84375
8177:AOR:*(int,int):-(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):105:151 * 84375 |==> 151 - 84375
8178:AOR:*(int,int):/(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):105:151 * 84375 |==> 151 / 84375
8179:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):105:i < 151 * 84375 |==> i != 151 * 84375
8180:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):105:i < 151 * 84375 |==> i <= 151 * 84375
8181:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):105:i < 151 * 84375 |==> false
8182:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):105:5 |==> 0
8183:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):105:5 |==> -5
8184:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):105:6 |==> 0
8185:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):105:6 |==> -6
8186:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):106:273 |==> 0
8187:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):106:273 |==> -273
8188:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):106:84375 |==> 0
8189:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):106:84375 |==> -84375
8190:AOR:*(int,int):%(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):106:273 * 84375 |==> 273 % 84375
8191:AOR:*(int,int):+(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):106:273 * 84375 |==> 273 + 84375
8192:AOR:*(int,int):-(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):106:273 * 84375 |==> 273 - 84375
8193:AOR:*(int,int):/(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):106:273 * 84375 |==> 273 / 84375
8194:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):106:i < 273 * 84375 |==> i != 273 * 84375
8195:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):106:i < 273 * 84375 |==> i <= 273 * 84375
8196:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):106:i < 273 * 84375 |==> false
8197:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):107:212 |==> 0
8198:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):107:212 |==> -212
8199:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):107:84375 |==> 0
8200:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):107:84375 |==> -84375
8201:AOR:*(int,int):%(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):107:212 * 84375 |==> 212 % 84375
8202:AOR:*(int,int):+(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):107:212 * 84375 |==> 212 + 84375
8203:AOR:*(int,int):-(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):107:212 * 84375 |==> 212 - 84375
8204:AOR:*(int,int):/(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):107:212 * 84375 |==> 212 / 84375
8205:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):107:i < 212 * 84375 |==> i != 212 * 84375
8206:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):107:i < 212 * 84375 |==> i <= 212 * 84375
8207:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):107:i < 212 * 84375 |==> false
8208:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):107:7 |==> 0
8209:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):107:7 |==> -7
8210:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):107:243 |==> 0
8211:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):107:243 |==> -243
8212:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):107:84375 |==> 0
8213:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):107:84375 |==> -84375
8214:AOR:*(int,int):%(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):107:243 * 84375 |==> 243 % 84375
8215:AOR:*(int,int):+(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):107:243 * 84375 |==> 243 + 84375
8216:AOR:*(int,int):-(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):107:243 * 84375 |==> 243 - 84375
8217:AOR:*(int,int):/(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):107:243 * 84375 |==> 243 / 84375
8218:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):107:i < 243 * 84375 |==> i != 243 * 84375
8219:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):107:i < 243 * 84375 |==> i <= 243 * 84375
8220:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):107:i < 243 * 84375 |==> false
8221:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):107:8 |==> 0
8222:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):107:8 |==> -8
8223:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):107:9 |==> 0
8224:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):107:9 |==> -9
8225:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):108:304 |==> 0
8226:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):108:304 |==> -304
8227:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):108:84375 |==> 0
8228:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):108:84375 |==> -84375
8229:AOR:*(int,int):%(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):108:304 * 84375 |==> 304 % 84375
8230:AOR:*(int,int):+(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):108:304 * 84375 |==> 304 + 84375
8231:AOR:*(int,int):-(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):108:304 * 84375 |==> 304 - 84375
8232:AOR:*(int,int):/(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):108:304 * 84375 |==> 304 / 84375
8233:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):108:i < 304 * 84375 |==> i != 304 * 84375
8234:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):108:i < 304 * 84375 |==> i <= 304 * 84375
8235:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):108:i < 304 * 84375 |==> false
8236:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):108:10 |==> 0
8237:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):108:10 |==> -10
8238:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):108:334 |==> 0
8239:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):108:334 |==> -334
8240:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):108:84375 |==> 0
8241:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):108:84375 |==> -84375
8242:AOR:*(int,int):%(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):108:334 * 84375 |==> 334 % 84375
8243:AOR:*(int,int):+(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):108:334 * 84375 |==> 334 + 84375
8244:AOR:*(int,int):-(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):108:334 * 84375 |==> 334 - 84375
8245:AOR:*(int,int):/(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):108:334 * 84375 |==> 334 / 84375
8246:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):108:i < 334 * 84375 |==> i != 334 * 84375
8247:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):108:i < 334 * 84375 |==> i <= 334 * 84375
8248:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):108:i < 334 * 84375 |==> false
8249:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):108:11 |==> 0
8250:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):108:11 |==> -11
8251:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):108:12 |==> 0
8252:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getMonthOfYear(long,int):108:12 |==> -12
8253:COR:isLeapYear(year):TRUE:org.joda.time.chrono.BasicGJChronology@getDaysInYearMonth(int,int):120:isLeapYear(year) |==> false
8254:COR:isLeapYear(year):FALSE:org.joda.time.chrono.BasicGJChronology@getDaysInYearMonth(int,int):120:isLeapYear(year) |==> true
8255:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getDaysInYearMonth(int,int):121:1 |==> 0
8256:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getDaysInYearMonth(int,int):121:1 |==> -1
8257:AOR:-(int,int):%(int,int):org.joda.time.chrono.BasicGJChronology@getDaysInYearMonth(int,int):121:month - 1 |==> month % 1
8258:AOR:-(int,int):*(int,int):org.joda.time.chrono.BasicGJChronology@getDaysInYearMonth(int,int):121:month - 1 |==> month * 1
8259:AOR:-(int,int):+(int,int):org.joda.time.chrono.BasicGJChronology@getDaysInYearMonth(int,int):121:month - 1 |==> month + 1
8260:AOR:-(int,int):/(int,int):org.joda.time.chrono.BasicGJChronology@getDaysInYearMonth(int,int):121:month - 1 |==> month / 1
8261:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getDaysInYearMonth(int,int):123:1 |==> 0
8262:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getDaysInYearMonth(int,int):123:1 |==> -1
8263:AOR:-(int,int):%(int,int):org.joda.time.chrono.BasicGJChronology@getDaysInYearMonth(int,int):123:month - 1 |==> month % 1
8264:AOR:-(int,int):*(int,int):org.joda.time.chrono.BasicGJChronology@getDaysInYearMonth(int,int):123:month - 1 |==> month * 1
8265:AOR:-(int,int):+(int,int):org.joda.time.chrono.BasicGJChronology@getDaysInYearMonth(int,int):123:month - 1 |==> month + 1
8266:AOR:-(int,int):/(int,int):org.joda.time.chrono.BasicGJChronology@getDaysInYearMonth(int,int):123:month - 1 |==> month / 1
8267:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getDaysInMonthMax(int):129:1 |==> 0
8268:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getDaysInMonthMax(int):129:1 |==> -1
8269:AOR:-(int,int):%(int,int):org.joda.time.chrono.BasicGJChronology@getDaysInMonthMax(int):129:month - 1 |==> month % 1
8270:AOR:-(int,int):*(int,int):org.joda.time.chrono.BasicGJChronology@getDaysInMonthMax(int):129:month - 1 |==> month * 1
8271:AOR:-(int,int):+(int,int):org.joda.time.chrono.BasicGJChronology@getDaysInMonthMax(int):129:month - 1 |==> month + 1
8272:AOR:-(int,int):/(int,int):org.joda.time.chrono.BasicGJChronology@getDaysInMonthMax(int):129:month - 1 |==> month / 1
8273:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getDaysInMonthMaxForSet(long,int):134:28 |==> 0
8274:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getDaysInMonthMaxForSet(long,int):134:28 |==> -28
8275:ROR:>(int,int):!=(int,int):org.joda.time.chrono.BasicGJChronology@getDaysInMonthMaxForSet(long,int):134:value > 28 |==> value != 28
8276:ROR:>(int,int):>=(int,int):org.joda.time.chrono.BasicGJChronology@getDaysInMonthMaxForSet(long,int):134:value > 28 |==> value >= 28
8277:ROR:>(int,int):FALSE(int,int):org.joda.time.chrono.BasicGJChronology@getDaysInMonthMaxForSet(long,int):134:value > 28 |==> false
8278:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getDaysInMonthMaxForSet(long,int):134:1 |==> 0
8279:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getDaysInMonthMaxForSet(long,int):134:1 |==> -1
8280:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BasicGJChronology@getDaysInMonthMaxForSet(long,int):134:value < 1 |==> value != 1
8281:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BasicGJChronology@getDaysInMonthMaxForSet(long,int):134:value < 1 |==> value <= 1
8282:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BasicGJChronology@getDaysInMonthMaxForSet(long,int):134:value < 1 |==> false
8283:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.chrono.BasicGJChronology@getDaysInMonthMaxForSet(long,int):134:value > 28 || value < 1 |==> value > 28 != value < 1
8284:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.BasicGJChronology@getDaysInMonthMaxForSet(long,int):134:value > 28 || value < 1 |==> value > 28
8285:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.BasicGJChronology@getDaysInMonthMaxForSet(long,int):134:value > 28 || value < 1 |==> value < 1
8286:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.chrono.BasicGJChronology@getDaysInMonthMaxForSet(long,int):134:value > 28 || value < 1 |==> true
8287:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getDaysInMonthMaxForSet(long,int):134:28 |==> 0
8288:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getDaysInMonthMaxForSet(long,int):134:28 |==> -28
8289:COR:isLeapYear(year):TRUE:org.joda.time.chrono.BasicGJChronology@getTotalMillisByYearMonth(int,int):139:isLeapYear(year) |==> false
8290:COR:isLeapYear(year):FALSE:org.joda.time.chrono.BasicGJChronology@getTotalMillisByYearMonth(int,int):139:isLeapYear(year) |==> true
8291:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getTotalMillisByYearMonth(int,int):140:1 |==> 0
8292:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getTotalMillisByYearMonth(int,int):140:1 |==> -1
8293:AOR:-(int,int):%(int,int):org.joda.time.chrono.BasicGJChronology@getTotalMillisByYearMonth(int,int):140:month - 1 |==> month % 1
8294:AOR:-(int,int):*(int,int):org.joda.time.chrono.BasicGJChronology@getTotalMillisByYearMonth(int,int):140:month - 1 |==> month * 1
8295:AOR:-(int,int):+(int,int):org.joda.time.chrono.BasicGJChronology@getTotalMillisByYearMonth(int,int):140:month - 1 |==> month + 1
8296:AOR:-(int,int):/(int,int):org.joda.time.chrono.BasicGJChronology@getTotalMillisByYearMonth(int,int):140:month - 1 |==> month / 1
8297:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@getTotalMillisByYearMonth(int,int):142:1 |==> 0
8298:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@getTotalMillisByYearMonth(int,int):142:1 |==> -1
8299:AOR:-(int,int):%(int,int):org.joda.time.chrono.BasicGJChronology@getTotalMillisByYearMonth(int,int):142:month - 1 |==> month % 1
8300:AOR:-(int,int):*(int,int):org.joda.time.chrono.BasicGJChronology@getTotalMillisByYearMonth(int,int):142:month - 1 |==> month * 1
8301:AOR:-(int,int):+(int,int):org.joda.time.chrono.BasicGJChronology@getTotalMillisByYearMonth(int,int):142:month - 1 |==> month + 1
8302:AOR:-(int,int):/(int,int):org.joda.time.chrono.BasicGJChronology@getTotalMillisByYearMonth(int,int):142:month - 1 |==> month / 1
8303:AOR:-(long,long):%(long,long):org.joda.time.chrono.BasicGJChronology@getYearDifference(long,long):152:minuendInstant - getYearMillis(minuendYear) |==> minuendInstant % getYearMillis(minuendYear)
8304:AOR:-(long,long):*(long,long):org.joda.time.chrono.BasicGJChronology@getYearDifference(long,long):152:minuendInstant - getYearMillis(minuendYear) |==> minuendInstant * getYearMillis(minuendYear)
8305:AOR:-(long,long):+(long,long):org.joda.time.chrono.BasicGJChronology@getYearDifference(long,long):152:minuendInstant - getYearMillis(minuendYear) |==> minuendInstant + getYearMillis(minuendYear)
8306:AOR:-(long,long):/(long,long):org.joda.time.chrono.BasicGJChronology@getYearDifference(long,long):152:minuendInstant - getYearMillis(minuendYear) |==> minuendInstant / getYearMillis(minuendYear)
8307:AOR:-(long,long):%(long,long):org.joda.time.chrono.BasicGJChronology@getYearDifference(long,long):153:subtrahendInstant - getYearMillis(subtrahendYear) |==> subtrahendInstant % getYearMillis(subtrahendYear)
8308:AOR:-(long,long):*(long,long):org.joda.time.chrono.BasicGJChronology@getYearDifference(long,long):153:subtrahendInstant - getYearMillis(subtrahendYear) |==> subtrahendInstant * getYearMillis(subtrahendYear)
8309:AOR:-(long,long):+(long,long):org.joda.time.chrono.BasicGJChronology@getYearDifference(long,long):153:subtrahendInstant - getYearMillis(subtrahendYear) |==> subtrahendInstant + getYearMillis(subtrahendYear)
8310:AOR:-(long,long):/(long,long):org.joda.time.chrono.BasicGJChronology@getYearDifference(long,long):153:subtrahendInstant - getYearMillis(subtrahendYear) |==> subtrahendInstant / getYearMillis(subtrahendYear)
8311:ROR:>=(long,long):==(long,long):org.joda.time.chrono.BasicGJChronology@getYearDifference(long,long):156:subtrahendRem >= FEB_29 |==> subtrahendRem == FEB_29
8312:ROR:>=(long,long):>(long,long):org.joda.time.chrono.BasicGJChronology@getYearDifference(long,long):156:subtrahendRem >= FEB_29 |==> subtrahendRem > FEB_29
8313:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.BasicGJChronology@getYearDifference(long,long):156:subtrahendRem >= FEB_29 |==> true
8314:COR:isLeapYear(subtrahendYear):TRUE:org.joda.time.chrono.BasicGJChronology@getYearDifference(long,long):157:isLeapYear(subtrahendYear) |==> false
8315:COR:isLeapYear(subtrahendYear):FALSE:org.joda.time.chrono.BasicGJChronology@getYearDifference(long,long):157:isLeapYear(subtrahendYear) |==> true
8316:COR:isLeapYear(minuendYear):TRUE:org.joda.time.chrono.BasicGJChronology@getYearDifference(long,long):158:isLeapYear(minuendYear) |==> false
8317:COR:isLeapYear(minuendYear):FALSE:org.joda.time.chrono.BasicGJChronology@getYearDifference(long,long):158:isLeapYear(minuendYear) |==> true
8318:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicGJChronology@getYearDifference(long,long):159:subtrahendRem -= DateTimeConstants.MILLIS_PER_DAY |==> <NO-OP>
8319:ROR:>=(long,long):==(long,long):org.joda.time.chrono.BasicGJChronology@getYearDifference(long,long):161:minuendRem >= FEB_29 |==> minuendRem == FEB_29
8320:ROR:>=(long,long):>(long,long):org.joda.time.chrono.BasicGJChronology@getYearDifference(long,long):161:minuendRem >= FEB_29 |==> minuendRem > FEB_29
8321:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.BasicGJChronology@getYearDifference(long,long):161:minuendRem >= FEB_29 |==> true
8322:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.BasicGJChronology@getYearDifference(long,long):161:minuendRem >= FEB_29 && isLeapYear(minuendYear) |==> minuendRem >= FEB_29 == isLeapYear(minuendYear)
8323:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.BasicGJChronology@getYearDifference(long,long):161:minuendRem >= FEB_29 && isLeapYear(minuendYear) |==> false
8324:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.BasicGJChronology@getYearDifference(long,long):161:minuendRem >= FEB_29 && isLeapYear(minuendYear) |==> minuendRem >= FEB_29
8325:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.BasicGJChronology@getYearDifference(long,long):161:minuendRem >= FEB_29 && isLeapYear(minuendYear) |==> isLeapYear(minuendYear)
8326:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicGJChronology@getYearDifference(long,long):162:minuendRem -= DateTimeConstants.MILLIS_PER_DAY |==> <NO-OP>
8327:AOR:-(int,int):%(int,int):org.joda.time.chrono.BasicGJChronology@getYearDifference(long,long):166:minuendYear - subtrahendYear |==> minuendYear % subtrahendYear
8328:AOR:-(int,int):*(int,int):org.joda.time.chrono.BasicGJChronology@getYearDifference(long,long):166:minuendYear - subtrahendYear |==> minuendYear * subtrahendYear
8329:AOR:-(int,int):+(int,int):org.joda.time.chrono.BasicGJChronology@getYearDifference(long,long):166:minuendYear - subtrahendYear |==> minuendYear + subtrahendYear
8330:AOR:-(int,int):/(int,int):org.joda.time.chrono.BasicGJChronology@getYearDifference(long,long):166:minuendYear - subtrahendYear |==> minuendYear / subtrahendYear
8331:ROR:<(long,long):!=(long,long):org.joda.time.chrono.BasicGJChronology@getYearDifference(long,long):167:minuendRem < subtrahendRem |==> minuendRem != subtrahendRem
8332:ROR:<(long,long):<=(long,long):org.joda.time.chrono.BasicGJChronology@getYearDifference(long,long):167:minuendRem < subtrahendRem |==> minuendRem <= subtrahendRem
8333:ROR:<(long,long):FALSE(long,long):org.joda.time.chrono.BasicGJChronology@getYearDifference(long,long):167:minuendRem < subtrahendRem |==> false
8334:STD:<DEC>:<NO-OP>:org.joda.time.chrono.BasicGJChronology@getYearDifference(long,long):168:difference-- |==> <NO-OP>
8335:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@setYear(long,int):179:31 |==> 0
8336:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@setYear(long,int):179:31 |==> -31
8337:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@setYear(long,int):179:28 |==> 0
8338:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@setYear(long,int):179:28 |==> -28
8339:AOR:+(int,int):%(int,int):org.joda.time.chrono.BasicGJChronology@setYear(long,int):179:31 + 28 |==> 31 % 28
8340:AOR:+(int,int):*(int,int):org.joda.time.chrono.BasicGJChronology@setYear(long,int):179:31 + 28 |==> 31 * 28
8341:AOR:+(int,int):-(int,int):org.joda.time.chrono.BasicGJChronology@setYear(long,int):179:31 + 28 |==> 31 - 28
8342:AOR:+(int,int):/(int,int):org.joda.time.chrono.BasicGJChronology@setYear(long,int):179:31 + 28 |==> 31 / 28
8343:ROR:>(int,int):!=(int,int):org.joda.time.chrono.BasicGJChronology@setYear(long,int):179:dayOfYear > (31 + 28) |==> dayOfYear != (31 + 28)
8344:ROR:>(int,int):>=(int,int):org.joda.time.chrono.BasicGJChronology@setYear(long,int):179:dayOfYear > (31 + 28) |==> dayOfYear >= (31 + 28)
8345:ROR:>(int,int):FALSE(int,int):org.joda.time.chrono.BasicGJChronology@setYear(long,int):179:dayOfYear > (31 + 28) |==> false
8346:COR:isLeapYear(thisYear):TRUE:org.joda.time.chrono.BasicGJChronology@setYear(long,int):180:isLeapYear(thisYear) |==> false
8347:COR:isLeapYear(thisYear):FALSE:org.joda.time.chrono.BasicGJChronology@setYear(long,int):180:isLeapYear(thisYear) |==> true
8348:COR:isLeapYear(year):TRUE:org.joda.time.chrono.BasicGJChronology@setYear(long,int):182:isLeapYear(year) |==> false
8349:COR:isLeapYear(year):FALSE:org.joda.time.chrono.BasicGJChronology@setYear(long,int):182:isLeapYear(year) |==> true
8350:STD:<DEC>:<NO-OP>:org.joda.time.chrono.BasicGJChronology@setYear(long,int):184:dayOfYear-- |==> <NO-OP>
8351:COR:isLeapYear(year):TRUE:org.joda.time.chrono.BasicGJChronology@setYear(long,int):188:isLeapYear(year) |==> false
8352:COR:isLeapYear(year):FALSE:org.joda.time.chrono.BasicGJChronology@setYear(long,int):188:isLeapYear(year) |==> true
8353:STD:<INC>:<NO-OP>:org.joda.time.chrono.BasicGJChronology@setYear(long,int):190:dayOfYear++ |==> <NO-OP>
8354:LVR:POS:0:org.joda.time.chrono.BasicGJChronology@setYear(long,int):195:1 |==> 0
8355:LVR:POS:NEG:org.joda.time.chrono.BasicGJChronology@setYear(long,int):195:1 |==> -1
8356:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicGJChronology@setYear(long,int):195:instant = getYearMonthDayMillis(year, 1, dayOfYear) |==> <NO-OP>
8357:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicGJChronology@setYear(long,int):196:instant += millisOfDay |==> <NO-OP>
8358:LVR:FALSE:TRUE:org.joda.time.chrono.BasicMonthOfYearDateTimeField@isLenient():60:false |==> true
8359:LVR:0:POS:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):93:0 |==> 1
8360:LVR:0:NEG:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):93:0 |==> -1
8361:ROR:==(int,int):<=(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):93:months == 0 |==> months <= 0
8362:ROR:==(int,int):>=(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):93:months == 0 |==> months >= 0
8363:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):93:months == 0 |==> false
8364:LVR:POS:0:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):113:1 |==> 0
8365:LVR:POS:NEG:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):113:1 |==> -1
8366:AOR:-(int,int):%(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):113:thisMonth - 1 |==> thisMonth % 1
8367:AOR:-(int,int):*(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):113:thisMonth - 1 |==> thisMonth * 1
8368:AOR:-(int,int):+(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):113:thisMonth - 1 |==> thisMonth + 1
8369:AOR:-(int,int):/(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):113:thisMonth - 1 |==> thisMonth / 1
8370:AOR:+(int,int):%(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):113:thisMonth - 1 + months |==> (thisMonth - 1) % months
8371:AOR:+(int,int):*(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):113:thisMonth - 1 + months |==> (thisMonth - 1) * months
8372:AOR:+(int,int):-(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):113:thisMonth - 1 + months |==> thisMonth - 1 - months
8373:AOR:+(int,int):/(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):113:thisMonth - 1 + months |==> (thisMonth - 1) / months
8374:LVR:0:POS:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):114:0 |==> 1
8375:LVR:0:NEG:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):114:0 |==> -1
8376:ROR:>=(int,int):==(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):114:monthToUse >= 0 |==> monthToUse == 0
8377:ROR:>=(int,int):>(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):114:monthToUse >= 0 |==> monthToUse > 0
8378:ROR:>=(int,int):TRUE(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):114:monthToUse >= 0 |==> true
8379:AOR:/(int,int):%(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):115:monthToUse / iMax |==> monthToUse % iMax
8380:AOR:/(int,int):*(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):115:monthToUse / iMax |==> monthToUse * iMax
8381:AOR:/(int,int):+(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):115:monthToUse / iMax |==> monthToUse + iMax
8382:AOR:/(int,int):-(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):115:monthToUse / iMax |==> monthToUse - iMax
8383:AOR:+(int,int):%(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):115:thisYear + (monthToUse / iMax) |==> thisYear % (monthToUse / iMax)
8384:AOR:+(int,int):*(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):115:thisYear + (monthToUse / iMax) |==> thisYear * (monthToUse / iMax)
8385:AOR:+(int,int):-(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):115:thisYear + (monthToUse / iMax) |==> thisYear - (monthToUse / iMax)
8386:AOR:+(int,int):/(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):115:thisYear + (monthToUse / iMax) |==> thisYear / (monthToUse / iMax)
8387:AOR:%(int,int):*(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):116:monthToUse % iMax |==> monthToUse * iMax
8388:AOR:%(int,int):+(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):116:monthToUse % iMax |==> monthToUse + iMax
8389:AOR:%(int,int):-(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):116:monthToUse % iMax |==> monthToUse - iMax
8390:AOR:%(int,int):/(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):116:monthToUse % iMax |==> monthToUse / iMax
8391:LVR:POS:0:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):116:1 |==> 0
8392:LVR:POS:NEG:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):116:1 |==> -1
8393:AOR:+(int,int):%(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):116:(monthToUse % iMax) + 1 |==> (monthToUse % iMax) % 1
8394:AOR:+(int,int):*(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):116:(monthToUse % iMax) + 1 |==> (monthToUse % iMax) * 1
8395:AOR:+(int,int):-(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):116:(monthToUse % iMax) + 1 |==> (monthToUse % iMax) - 1
8396:AOR:+(int,int):/(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):116:(monthToUse % iMax) + 1 |==> (monthToUse % iMax) / 1
8397:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):116:monthToUse = (monthToUse % iMax) + 1 |==> <NO-OP>
8398:AOR:/(int,int):%(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):118:monthToUse / iMax |==> monthToUse % iMax
8399:AOR:/(int,int):*(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):118:monthToUse / iMax |==> monthToUse * iMax
8400:AOR:/(int,int):+(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):118:monthToUse / iMax |==> monthToUse + iMax
8401:AOR:/(int,int):-(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):118:monthToUse / iMax |==> monthToUse - iMax
8402:AOR:+(int,int):%(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):118:thisYear + (monthToUse / iMax) |==> thisYear % (monthToUse / iMax)
8403:AOR:+(int,int):*(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):118:thisYear + (monthToUse / iMax) |==> thisYear * (monthToUse / iMax)
8404:AOR:+(int,int):-(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):118:thisYear + (monthToUse / iMax) |==> thisYear - (monthToUse / iMax)
8405:AOR:+(int,int):/(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):118:thisYear + (monthToUse / iMax) |==> thisYear / (monthToUse / iMax)
8406:LVR:POS:0:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):118:1 |==> 0
8407:LVR:POS:NEG:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):118:1 |==> -1
8408:AOR:-(int,int):%(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):118:thisYear + (monthToUse / iMax) - 1 |==> (thisYear + (monthToUse / iMax)) % 1
8409:AOR:-(int,int):*(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):118:thisYear + (monthToUse / iMax) - 1 |==> (thisYear + (monthToUse / iMax)) * 1
8410:AOR:-(int,int):+(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):118:thisYear + (monthToUse / iMax) - 1 |==> thisYear + (monthToUse / iMax) + 1
8411:AOR:-(int,int):/(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):118:thisYear + (monthToUse / iMax) - 1 |==> (thisYear + (monthToUse / iMax)) / 1
8412:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):119:monthToUse = Math.abs(monthToUse) |==> <NO-OP>
8413:AOR:%(int,int):*(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):120:monthToUse % iMax |==> monthToUse * iMax
8414:AOR:%(int,int):+(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):120:monthToUse % iMax |==> monthToUse + iMax
8415:AOR:%(int,int):-(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):120:monthToUse % iMax |==> monthToUse - iMax
8416:AOR:%(int,int):/(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):120:monthToUse % iMax |==> monthToUse / iMax
8417:LVR:0:POS:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):122:0 |==> 1
8418:LVR:0:NEG:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):122:0 |==> -1
8419:ROR:==(int,int):<=(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):122:remMonthToUse == 0 |==> remMonthToUse <= 0
8420:ROR:==(int,int):>=(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):122:remMonthToUse == 0 |==> remMonthToUse >= 0
8421:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):122:remMonthToUse == 0 |==> false
8422:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):123:remMonthToUse = iMax |==> <NO-OP>
8423:AOR:-(int,int):%(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):125:iMax - remMonthToUse |==> iMax % remMonthToUse
8424:AOR:-(int,int):*(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):125:iMax - remMonthToUse |==> iMax * remMonthToUse
8425:AOR:-(int,int):+(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):125:iMax - remMonthToUse |==> iMax + remMonthToUse
8426:AOR:-(int,int):/(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):125:iMax - remMonthToUse |==> iMax / remMonthToUse
8427:LVR:POS:0:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):125:1 |==> 0
8428:LVR:POS:NEG:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):125:1 |==> -1
8429:AOR:+(int,int):%(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):125:iMax - remMonthToUse + 1 |==> (iMax - remMonthToUse) % 1
8430:AOR:+(int,int):*(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):125:iMax - remMonthToUse + 1 |==> (iMax - remMonthToUse) * 1
8431:AOR:+(int,int):-(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):125:iMax - remMonthToUse + 1 |==> iMax - remMonthToUse - 1
8432:AOR:+(int,int):/(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):125:iMax - remMonthToUse + 1 |==> (iMax - remMonthToUse) / 1
8433:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):125:monthToUse = iMax - remMonthToUse + 1 |==> <NO-OP>
8434:LVR:POS:0:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):127:1 |==> 0
8435:LVR:POS:NEG:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):127:1 |==> -1
8436:ROR:==(int,int):<=(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):127:monthToUse == 1 |==> monthToUse <= 1
8437:ROR:==(int,int):>=(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):127:monthToUse == 1 |==> monthToUse >= 1
8438:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):127:monthToUse == 1 |==> false
8439:LVR:POS:0:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):128:1 |==> 0
8440:LVR:POS:NEG:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):128:1 |==> -1
8441:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):128:yearToUse += 1 |==> <NO-OP>
8442:ROR:>(int,int):!=(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):139:dayToUse > maxDay |==> dayToUse != maxDay
8443:ROR:>(int,int):>=(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):139:dayToUse > maxDay |==> dayToUse >= maxDay
8444:ROR:>(int,int):FALSE(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):139:dayToUse > maxDay |==> false
8445:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):140:dayToUse = maxDay |==> <NO-OP>
8446:AOR:+(long,long):%(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):147:datePart + timePart |==> datePart % timePart
8447:AOR:+(long,long):*(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):147:datePart + timePart |==> datePart * timePart
8448:AOR:+(long,long):-(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):147:datePart + timePart |==> datePart - timePart
8449:AOR:+(long,long):/(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,int):147:datePart + timePart |==> datePart / timePart
8450:ROR:==(long,long):<=(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):153:i_months == months |==> i_months <= months
8451:ROR:==(long,long):>=(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):153:i_months == months |==> i_months >= months
8452:ROR:==(long,long):FALSE(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):153:i_months == months |==> false
8453:LVR:POS:0:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):165:1 |==> 0
8454:LVR:POS:NEG:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):165:1 |==> -1
8455:AOR:-(int,int):%(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):165:thisMonth - 1 |==> thisMonth % 1
8456:AOR:-(int,int):*(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):165:thisMonth - 1 |==> thisMonth * 1
8457:AOR:-(int,int):+(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):165:thisMonth - 1 |==> thisMonth + 1
8458:AOR:-(int,int):/(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):165:thisMonth - 1 |==> thisMonth / 1
8459:AOR:+(long,long):%(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):165:thisMonth - 1 + months |==> (thisMonth - 1) % months
8460:AOR:+(long,long):*(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):165:thisMonth - 1 + months |==> (thisMonth - 1) * months
8461:AOR:+(long,long):-(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):165:thisMonth - 1 + months |==> thisMonth - 1 - months
8462:AOR:+(long,long):/(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):165:thisMonth - 1 + months |==> (thisMonth - 1) / months
8463:LVR:0:POS:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):166:0 |==> 1
8464:LVR:0:NEG:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):166:0 |==> -1
8465:ROR:>=(long,long):==(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):166:monthToUse >= 0 |==> monthToUse == 0
8466:ROR:>=(long,long):>(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):166:monthToUse >= 0 |==> monthToUse > 0
8467:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):166:monthToUse >= 0 |==> true
8468:AOR:/(long,long):%(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):167:monthToUse / iMax |==> monthToUse % iMax
8469:AOR:/(long,long):*(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):167:monthToUse / iMax |==> monthToUse * iMax
8470:AOR:/(long,long):+(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):167:monthToUse / iMax |==> monthToUse + iMax
8471:AOR:/(long,long):-(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):167:monthToUse / iMax |==> monthToUse - iMax
8472:AOR:+(long,long):%(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):167:thisYear + (monthToUse / iMax) |==> thisYear % (monthToUse / iMax)
8473:AOR:+(long,long):*(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):167:thisYear + (monthToUse / iMax) |==> thisYear * (monthToUse / iMax)
8474:AOR:+(long,long):-(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):167:thisYear + (monthToUse / iMax) |==> thisYear - (monthToUse / iMax)
8475:AOR:+(long,long):/(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):167:thisYear + (monthToUse / iMax) |==> thisYear / (monthToUse / iMax)
8476:AOR:%(long,long):*(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):168:monthToUse % iMax |==> monthToUse * iMax
8477:AOR:%(long,long):+(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):168:monthToUse % iMax |==> monthToUse + iMax
8478:AOR:%(long,long):-(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):168:monthToUse % iMax |==> monthToUse - iMax
8479:AOR:%(long,long):/(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):168:monthToUse % iMax |==> monthToUse / iMax
8480:LVR:POS:0:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):168:1 |==> 0
8481:LVR:POS:NEG:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):168:1 |==> -1
8482:AOR:+(long,long):%(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):168:(monthToUse % iMax) + 1 |==> (monthToUse % iMax) % 1
8483:AOR:+(long,long):*(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):168:(monthToUse % iMax) + 1 |==> (monthToUse % iMax) * 1
8484:AOR:+(long,long):-(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):168:(monthToUse % iMax) + 1 |==> (monthToUse % iMax) - 1
8485:AOR:+(long,long):/(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):168:(monthToUse % iMax) + 1 |==> (monthToUse % iMax) / 1
8486:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):168:monthToUse = (monthToUse % iMax) + 1 |==> <NO-OP>
8487:AOR:/(long,long):%(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):170:monthToUse / iMax |==> monthToUse % iMax
8488:AOR:/(long,long):*(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):170:monthToUse / iMax |==> monthToUse * iMax
8489:AOR:/(long,long):+(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):170:monthToUse / iMax |==> monthToUse + iMax
8490:AOR:/(long,long):-(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):170:monthToUse / iMax |==> monthToUse - iMax
8491:AOR:+(long,long):%(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):170:thisYear + (monthToUse / iMax) |==> thisYear % (monthToUse / iMax)
8492:AOR:+(long,long):*(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):170:thisYear + (monthToUse / iMax) |==> thisYear * (monthToUse / iMax)
8493:AOR:+(long,long):-(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):170:thisYear + (monthToUse / iMax) |==> thisYear - (monthToUse / iMax)
8494:AOR:+(long,long):/(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):170:thisYear + (monthToUse / iMax) |==> thisYear / (monthToUse / iMax)
8495:LVR:POS:0:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):170:1 |==> 0
8496:LVR:POS:NEG:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):170:1 |==> -1
8497:AOR:-(long,long):%(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):170:thisYear + (monthToUse / iMax) - 1 |==> (thisYear + (monthToUse / iMax)) % 1
8498:AOR:-(long,long):*(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):170:thisYear + (monthToUse / iMax) - 1 |==> (thisYear + (monthToUse / iMax)) * 1
8499:AOR:-(long,long):+(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):170:thisYear + (monthToUse / iMax) - 1 |==> thisYear + (monthToUse / iMax) + 1
8500:AOR:-(long,long):/(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):170:thisYear + (monthToUse / iMax) - 1 |==> (thisYear + (monthToUse / iMax)) / 1
8501:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):171:monthToUse = Math.abs(monthToUse) |==> <NO-OP>
8502:AOR:%(long,long):*(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):172:monthToUse % iMax |==> monthToUse * iMax
8503:AOR:%(long,long):+(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):172:monthToUse % iMax |==> monthToUse + iMax
8504:AOR:%(long,long):-(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):172:monthToUse % iMax |==> monthToUse - iMax
8505:AOR:%(long,long):/(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):172:monthToUse % iMax |==> monthToUse / iMax
8506:LVR:0:POS:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):173:0 |==> 1
8507:LVR:0:NEG:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):173:0 |==> -1
8508:ROR:==(int,int):<=(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):173:remMonthToUse == 0 |==> remMonthToUse <= 0
8509:ROR:==(int,int):>=(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):173:remMonthToUse == 0 |==> remMonthToUse >= 0
8510:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):173:remMonthToUse == 0 |==> false
8511:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):174:remMonthToUse = iMax |==> <NO-OP>
8512:AOR:-(int,int):%(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):176:iMax - remMonthToUse |==> iMax % remMonthToUse
8513:AOR:-(int,int):*(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):176:iMax - remMonthToUse |==> iMax * remMonthToUse
8514:AOR:-(int,int):+(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):176:iMax - remMonthToUse |==> iMax + remMonthToUse
8515:AOR:-(int,int):/(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):176:iMax - remMonthToUse |==> iMax / remMonthToUse
8516:LVR:POS:0:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):176:1 |==> 0
8517:LVR:POS:NEG:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):176:1 |==> -1
8518:AOR:+(int,int):%(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):176:iMax - remMonthToUse + 1 |==> (iMax - remMonthToUse) % 1
8519:AOR:+(int,int):*(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):176:iMax - remMonthToUse + 1 |==> (iMax - remMonthToUse) * 1
8520:AOR:+(int,int):-(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):176:iMax - remMonthToUse + 1 |==> iMax - remMonthToUse - 1
8521:AOR:+(int,int):/(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):176:iMax - remMonthToUse + 1 |==> (iMax - remMonthToUse) / 1
8522:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):176:monthToUse = iMax - remMonthToUse + 1 |==> <NO-OP>
8523:LVR:POS:0:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):177:1 |==> 0
8524:LVR:POS:NEG:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):177:1 |==> -1
8525:ROR:==(long,long):<=(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):177:monthToUse == 1 |==> monthToUse <= 1
8526:ROR:==(long,long):>=(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):177:monthToUse == 1 |==> monthToUse >= 1
8527:ROR:==(long,long):FALSE(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):177:monthToUse == 1 |==> false
8528:LVR:POS:0:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):178:1 |==> 0
8529:LVR:POS:NEG:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):178:1 |==> -1
8530:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):178:yearToUse += 1 |==> <NO-OP>
8531:ROR:<(long,long):!=(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):182:yearToUse < iChronology.getMinYear() |==> yearToUse != iChronology.getMinYear()
8532:ROR:<(long,long):<=(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):182:yearToUse < iChronology.getMinYear() |==> yearToUse <= iChronology.getMinYear()
8533:ROR:<(long,long):FALSE(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):182:yearToUse < iChronology.getMinYear() |==> false
8534:ROR:>(long,long):!=(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):183:yearToUse > iChronology.getMaxYear() |==> yearToUse != iChronology.getMaxYear()
8535:ROR:>(long,long):>=(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):183:yearToUse > iChronology.getMaxYear() |==> yearToUse >= iChronology.getMaxYear()
8536:ROR:>(long,long):FALSE(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):183:yearToUse > iChronology.getMaxYear() |==> false
8537:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):182:yearToUse < iChronology.getMinYear() || yearToUse > iChronology.getMaxYear() |==> yearToUse < iChronology.getMinYear() != yearToUse > iChronology.getMaxYear()
8538:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):182:yearToUse < iChronology.getMinYear() || yearToUse > iChronology.getMaxYear() |==> yearToUse < iChronology.getMinYear()
8539:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):183:yearToUse < iChronology.getMinYear() || yearToUse > iChronology.getMaxYear() |==> yearToUse > iChronology.getMaxYear()
8540:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):182:yearToUse < iChronology.getMinYear() || yearToUse > iChronology.getMaxYear() |==> true
8541:ROR:>(int,int):!=(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):194:dayToUse > maxDay |==> dayToUse != maxDay
8542:ROR:>(int,int):>=(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):194:dayToUse > maxDay |==> dayToUse >= maxDay
8543:ROR:>(int,int):FALSE(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):194:dayToUse > maxDay |==> false
8544:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):195:dayToUse = maxDay |==> <NO-OP>
8545:AOR:+(long,long):%(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):200:datePart + timePart |==> datePart % timePart
8546:AOR:+(long,long):*(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):200:datePart + timePart |==> datePart * timePart
8547:AOR:+(long,long):-(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):200:datePart + timePart |==> datePart - timePart
8548:AOR:+(long,long):/(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(long,long):200:datePart + timePart |==> datePart / timePart
8549:LVR:0:POS:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):207:0 |==> 1
8550:LVR:0:NEG:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):207:0 |==> -1
8551:ROR:==(int,int):<=(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):207:valueToAdd == 0 |==> valueToAdd <= 0
8552:ROR:==(int,int):>=(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):207:valueToAdd == 0 |==> valueToAdd >= 0
8553:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):207:valueToAdd == 0 |==> false
8554:LVR:0:POS:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):210:0 |==> 1
8555:LVR:0:NEG:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):210:0 |==> -1
8556:ROR:>(int,int):!=(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):210:partial.size() > 0 |==> partial.size() != 0
8557:ROR:>(int,int):>=(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):210:partial.size() > 0 |==> partial.size() >= 0
8558:ROR:>(int,int):FALSE(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):210:partial.size() > 0 |==> false
8559:LVR:0:POS:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):210:0 |==> 1
8560:LVR:0:NEG:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):210:0 |==> -1
8561:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):210:partial.size() > 0 && partial.getFieldType(0).equals(DateTimeFieldType.monthOfYear()) |==> partial.size() > 0 == partial.getFieldType(0).equals(DateTimeFieldType.monthOfYear())
8562:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):210:partial.size() > 0 && partial.getFieldType(0).equals(DateTimeFieldType.monthOfYear()) |==> false
8563:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):210:partial.size() > 0 && partial.getFieldType(0).equals(DateTimeFieldType.monthOfYear()) |==> partial.size() > 0
8564:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):210:partial.size() > 0 && partial.getFieldType(0).equals(DateTimeFieldType.monthOfYear()) |==> partial.getFieldType(0).equals(DateTimeFieldType.monthOfYear())
8565:LVR:0:POS:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):210:0 |==> 1
8566:LVR:0:NEG:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):210:0 |==> -1
8567:ROR:==(int,int):<=(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):210:fieldIndex == 0 |==> fieldIndex <= 0
8568:ROR:==(int,int):>=(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):210:fieldIndex == 0 |==> fieldIndex >= 0
8569:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):210:fieldIndex == 0 |==> false
8570:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):210:partial.size() > 0 && partial.getFieldType(0).equals(DateTimeFieldType.monthOfYear()) && fieldIndex == 0 |==> (partial.size() > 0 && partial.getFieldType(0).equals(DateTimeFieldType.monthOfYear())) == (fieldIndex == 0)
8571:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):210:partial.size() > 0 && partial.getFieldType(0).equals(DateTimeFieldType.monthOfYear()) && fieldIndex == 0 |==> false
8572:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):210:partial.size() > 0 && partial.getFieldType(0).equals(DateTimeFieldType.monthOfYear()) && fieldIndex == 0 |==> partial.size() > 0 && partial.getFieldType(0).equals(DateTimeFieldType.monthOfYear())
8573:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):210:partial.size() > 0 && partial.getFieldType(0).equals(DateTimeFieldType.monthOfYear()) && fieldIndex == 0 |==> fieldIndex == 0
8574:LVR:0:POS:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):212:0 |==> 1
8575:LVR:0:NEG:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):212:0 |==> -1
8576:LVR:POS:0:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):212:1 |==> 0
8577:LVR:POS:NEG:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):212:1 |==> -1
8578:AOR:-(int,int):%(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):212:partial.getValue(0) - 1 |==> partial.getValue(0) % 1
8579:AOR:-(int,int):*(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):212:partial.getValue(0) - 1 |==> partial.getValue(0) * 1
8580:AOR:-(int,int):+(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):212:partial.getValue(0) - 1 |==> partial.getValue(0) + 1
8581:AOR:-(int,int):/(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):212:partial.getValue(0) - 1 |==> partial.getValue(0) / 1
8582:LVR:POS:0:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):213:12 |==> 0
8583:LVR:POS:NEG:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):213:12 |==> -12
8584:AOR:%(int,int):*(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):213:valueToAdd % 12 |==> valueToAdd * 12
8585:AOR:%(int,int):+(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):213:valueToAdd % 12 |==> valueToAdd + 12
8586:AOR:%(int,int):-(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):213:valueToAdd % 12 |==> valueToAdd - 12
8587:AOR:%(int,int):/(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):213:valueToAdd % 12 |==> valueToAdd / 12
8588:AOR:+(int,int):%(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):213:curMonth0 + (valueToAdd % 12) |==> curMonth0 % (valueToAdd % 12)
8589:AOR:+(int,int):*(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):213:curMonth0 + (valueToAdd % 12) |==> curMonth0 * (valueToAdd % 12)
8590:AOR:+(int,int):-(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):213:curMonth0 + (valueToAdd % 12) |==> curMonth0 - (valueToAdd % 12)
8591:AOR:+(int,int):/(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):213:curMonth0 + (valueToAdd % 12) |==> curMonth0 / (valueToAdd % 12)
8592:LVR:POS:0:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):213:12 |==> 0
8593:LVR:POS:NEG:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):213:12 |==> -12
8594:AOR:+(int,int):%(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):213:curMonth0 + (valueToAdd % 12) + 12 |==> (curMonth0 + (valueToAdd % 12)) % 12
8595:AOR:+(int,int):*(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):213:curMonth0 + (valueToAdd % 12) + 12 |==> (curMonth0 + (valueToAdd % 12)) * 12
8596:AOR:+(int,int):-(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):213:curMonth0 + (valueToAdd % 12) + 12 |==> curMonth0 + (valueToAdd % 12) - 12
8597:AOR:+(int,int):/(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):213:curMonth0 + (valueToAdd % 12) + 12 |==> (curMonth0 + (valueToAdd % 12)) / 12
8598:LVR:POS:0:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):213:12 |==> 0
8599:LVR:POS:NEG:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):213:12 |==> -12
8600:AOR:%(int,int):*(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):213:(curMonth0 + (valueToAdd % 12) + 12) % 12 |==> (curMonth0 + (valueToAdd % 12) + 12) * 12
8601:AOR:%(int,int):+(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):213:(curMonth0 + (valueToAdd % 12) + 12) % 12 |==> (curMonth0 + (valueToAdd % 12) + 12) + 12
8602:AOR:%(int,int):-(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):213:(curMonth0 + (valueToAdd % 12) + 12) % 12 |==> (curMonth0 + (valueToAdd % 12) + 12) - 12
8603:AOR:%(int,int):/(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):213:(curMonth0 + (valueToAdd % 12) + 12) % 12 |==> (curMonth0 + (valueToAdd % 12) + 12) / 12
8604:LVR:POS:0:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):213:1 |==> 0
8605:LVR:POS:NEG:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):213:1 |==> -1
8606:AOR:+(int,int):%(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):213:((curMonth0 + (valueToAdd % 12) + 12) % 12) + 1 |==> ((curMonth0 + (valueToAdd % 12) + 12) % 12) % 1
8607:AOR:+(int,int):*(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):213:((curMonth0 + (valueToAdd % 12) + 12) % 12) + 1 |==> ((curMonth0 + (valueToAdd % 12) + 12) % 12) * 1
8608:AOR:+(int,int):-(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):213:((curMonth0 + (valueToAdd % 12) + 12) % 12) + 1 |==> ((curMonth0 + (valueToAdd % 12) + 12) % 12) - 1
8609:AOR:+(int,int):/(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):213:((curMonth0 + (valueToAdd % 12) + 12) % 12) + 1 |==> ((curMonth0 + (valueToAdd % 12) + 12) % 12) / 1
8610:LVR:0:POS:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):214:0 |==> 1
8611:LVR:0:NEG:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):214:0 |==> -1
8612:COR:DateTimeUtils.isContiguous(partial):TRUE:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):216:DateTimeUtils.isContiguous(partial) |==> false
8613:COR:DateTimeUtils.isContiguous(partial):FALSE:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):216:DateTimeUtils.isContiguous(partial) |==> true
8614:LVR:0:POS:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):217:0L |==> 1L
8615:LVR:0:NEG:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):217:0L |==> -1L
8616:LVR:0:POS:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):218:0 |==> 1
8617:LVR:0:NEG:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):218:0 |==> -1
8618:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):218:i < isize |==> i != isize
8619:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):218:i < isize |==> i <= isize
8620:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):218:i < isize |==> false
8621:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):219:instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]) |==> <NO-OP>
8622:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicMonthOfYearDateTimeField@add(org.joda.time.ReadablePartial,int,int[],int):221:instant = add(instant, valueToAdd) |==> <NO-OP>
8623:ROR:<(long,long):!=(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):244:minuendInstant < subtrahendInstant |==> minuendInstant != subtrahendInstant
8624:ROR:<(long,long):<=(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):244:minuendInstant < subtrahendInstant |==> minuendInstant <= subtrahendInstant
8625:ROR:<(long,long):FALSE(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):244:minuendInstant < subtrahendInstant |==> false
8626:ORU:-(int):+(int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):245:-getDifference(subtrahendInstant, minuendInstant) |==> +getDifference(subtrahendInstant, minuendInstant)
8627:ORU:-(int):~(int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):245:-getDifference(subtrahendInstant, minuendInstant) |==> ~getDifference(subtrahendInstant, minuendInstant)
8628:AOR:-(int,int):%(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):253:minuendYear - subtrahendYear |==> minuendYear % subtrahendYear
8629:AOR:-(int,int):*(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):253:minuendYear - subtrahendYear |==> minuendYear * subtrahendYear
8630:AOR:-(int,int):+(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):253:minuendYear - subtrahendYear |==> minuendYear + subtrahendYear
8631:AOR:-(int,int):/(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):253:minuendYear - subtrahendYear |==> minuendYear / subtrahendYear
8632:AOR:*(long,long):%(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):253:(minuendYear - subtrahendYear) * ((long)iMax) |==> (minuendYear - subtrahendYear) % ((long)iMax)
8633:AOR:*(long,long):+(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):253:(minuendYear - subtrahendYear) * ((long)iMax) |==> (minuendYear - subtrahendYear) + ((long)iMax)
8634:AOR:*(long,long):-(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):253:(minuendYear - subtrahendYear) * ((long)iMax) |==> (minuendYear - subtrahendYear) - ((long)iMax)
8635:AOR:*(long,long):/(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):253:(minuendYear - subtrahendYear) * ((long)iMax) |==> (minuendYear - subtrahendYear) / ((long)iMax)
8636:AOR:+(long,long):%(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):253:(minuendYear - subtrahendYear) * ((long)iMax) + minuendMonth |==> (minuendYear - subtrahendYear) * ((long)iMax) % minuendMonth
8637:AOR:+(long,long):*(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):253:(minuendYear - subtrahendYear) * ((long)iMax) + minuendMonth |==> (minuendYear - subtrahendYear) * ((long)iMax) * minuendMonth
8638:AOR:+(long,long):-(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):253:(minuendYear - subtrahendYear) * ((long)iMax) + minuendMonth |==> (minuendYear - subtrahendYear) * ((long)iMax) - minuendMonth
8639:AOR:+(long,long):/(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):253:(minuendYear - subtrahendYear) * ((long)iMax) + minuendMonth |==> (minuendYear - subtrahendYear) * ((long)iMax) / minuendMonth
8640:AOR:-(long,long):%(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):253:(minuendYear - subtrahendYear) * ((long)iMax) + minuendMonth - subtrahendMonth |==> ((minuendYear - subtrahendYear) * ((long)iMax) + minuendMonth) % subtrahendMonth
8641:AOR:-(long,long):*(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):253:(minuendYear - subtrahendYear) * ((long)iMax) + minuendMonth - subtrahendMonth |==> ((minuendYear - subtrahendYear) * ((long)iMax) + minuendMonth) * subtrahendMonth
8642:AOR:-(long,long):+(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):253:(minuendYear - subtrahendYear) * ((long)iMax) + minuendMonth - subtrahendMonth |==> (minuendYear - subtrahendYear) * ((long)iMax) + minuendMonth + subtrahendMonth
8643:AOR:-(long,long):/(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):253:(minuendYear - subtrahendYear) * ((long)iMax) + minuendMonth - subtrahendMonth |==> ((minuendYear - subtrahendYear) * ((long)iMax) + minuendMonth) / subtrahendMonth
8644:ROR:==(int,int):<=(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):259:minuendDom == iChronology.getDaysInYearMonth(minuendYear, minuendMonth) |==> minuendDom <= iChronology.getDaysInYearMonth(minuendYear, minuendMonth)
8645:ROR:==(int,int):>=(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):259:minuendDom == iChronology.getDaysInYearMonth(minuendYear, minuendMonth) |==> minuendDom >= iChronology.getDaysInYearMonth(minuendYear, minuendMonth)
8646:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):259:minuendDom == iChronology.getDaysInYearMonth(minuendYear, minuendMonth) |==> false
8647:ROR:>(int,int):!=(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):263:subtrahendDom > minuendDom |==> subtrahendDom != minuendDom
8648:ROR:>(int,int):>=(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):263:subtrahendDom > minuendDom |==> subtrahendDom >= minuendDom
8649:ROR:>(int,int):FALSE(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):263:subtrahendDom > minuendDom |==> false
8650:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):267:subtrahendInstant = iChronology.dayOfMonth().set(subtrahendInstant, minuendDom) |==> <NO-OP>
8651:AOR:-(long,long):%(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):272:minuendInstant - iChronology.getYearMonthMillis(minuendYear, minuendMonth) |==> minuendInstant % iChronology.getYearMonthMillis(minuendYear, minuendMonth)
8652:AOR:-(long,long):*(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):272:minuendInstant - iChronology.getYearMonthMillis(minuendYear, minuendMonth) |==> minuendInstant * iChronology.getYearMonthMillis(minuendYear, minuendMonth)
8653:AOR:-(long,long):+(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):272:minuendInstant - iChronology.getYearMonthMillis(minuendYear, minuendMonth) |==> minuendInstant + iChronology.getYearMonthMillis(minuendYear, minuendMonth)
8654:AOR:-(long,long):/(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):272:minuendInstant - iChronology.getYearMonthMillis(minuendYear, minuendMonth) |==> minuendInstant / iChronology.getYearMonthMillis(minuendYear, minuendMonth)
8655:AOR:-(long,long):%(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):274:subtrahendInstant - iChronology.getYearMonthMillis(subtrahendYear, subtrahendMonth) |==> subtrahendInstant % iChronology.getYearMonthMillis(subtrahendYear, subtrahendMonth)
8656:AOR:-(long,long):*(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):274:subtrahendInstant - iChronology.getYearMonthMillis(subtrahendYear, subtrahendMonth) |==> subtrahendInstant * iChronology.getYearMonthMillis(subtrahendYear, subtrahendMonth)
8657:AOR:-(long,long):+(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):274:subtrahendInstant - iChronology.getYearMonthMillis(subtrahendYear, subtrahendMonth) |==> subtrahendInstant + iChronology.getYearMonthMillis(subtrahendYear, subtrahendMonth)
8658:AOR:-(long,long):/(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):274:subtrahendInstant - iChronology.getYearMonthMillis(subtrahendYear, subtrahendMonth) |==> subtrahendInstant / iChronology.getYearMonthMillis(subtrahendYear, subtrahendMonth)
8659:ROR:<(long,long):!=(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):277:minuendRem < subtrahendRem |==> minuendRem != subtrahendRem
8660:ROR:<(long,long):<=(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):277:minuendRem < subtrahendRem |==> minuendRem <= subtrahendRem
8661:ROR:<(long,long):FALSE(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):277:minuendRem < subtrahendRem |==> false
8662:STD:<DEC>:<NO-OP>:org.joda.time.chrono.BasicMonthOfYearDateTimeField@getDifferenceAsLong(long,long):278:difference-- |==> <NO-OP>
8663:STD:<CALL>:<NO-OP>:org.joda.time.chrono.BasicMonthOfYearDateTimeField@set(long,int):299:FieldUtils.verifyValueBounds(this, month, MIN, iMax) |==> <NO-OP>
8664:ROR:>(int,int):!=(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@set(long,int):305:thisDom > maxDom |==> thisDom != maxDom
8665:ROR:>(int,int):>=(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@set(long,int):305:thisDom > maxDom |==> thisDom >= maxDom
8666:ROR:>(int,int):FALSE(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@set(long,int):305:thisDom > maxDom |==> false
8667:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicMonthOfYearDateTimeField@set(long,int):307:thisDom = maxDom |==> <NO-OP>
8668:AOR:+(long,long):%(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@set(long,int):310:iChronology.getYearMonthDayMillis(thisYear, month, thisDom) + iChronology.getMillisOfDay(instant) |==> iChronology.getYearMonthDayMillis(thisYear, month, thisDom) % iChronology.getMillisOfDay(instant)
8669:AOR:+(long,long):*(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@set(long,int):310:iChronology.getYearMonthDayMillis(thisYear, month, thisDom) + iChronology.getMillisOfDay(instant) |==> iChronology.getYearMonthDayMillis(thisYear, month, thisDom) * iChronology.getMillisOfDay(instant)
8670:AOR:+(long,long):-(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@set(long,int):310:iChronology.getYearMonthDayMillis(thisYear, month, thisDom) + iChronology.getMillisOfDay(instant) |==> iChronology.getYearMonthDayMillis(thisYear, month, thisDom) - iChronology.getMillisOfDay(instant)
8671:AOR:+(long,long):/(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@set(long,int):310:iChronology.getYearMonthDayMillis(thisYear, month, thisDom) + iChronology.getMillisOfDay(instant) |==> iChronology.getYearMonthDayMillis(thisYear, month, thisDom) / iChronology.getMillisOfDay(instant)
8672:COR:iChronology.isLeapYear(thisYear):TRUE:org.joda.time.chrono.BasicMonthOfYearDateTimeField@isLeap(long):322:iChronology.isLeapYear(thisYear) |==> false
8673:COR:iChronology.isLeapYear(thisYear):FALSE:org.joda.time.chrono.BasicMonthOfYearDateTimeField@isLeap(long):322:iChronology.isLeapYear(thisYear) |==> true
8674:ROR:==(int,int):<=(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@isLeap(long):323:iChronology.getMonthOfYear(instant, thisYear) == iLeapMonth |==> iChronology.getMonthOfYear(instant, thisYear) <= iLeapMonth
8675:ROR:==(int,int):>=(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@isLeap(long):323:iChronology.getMonthOfYear(instant, thisYear) == iLeapMonth |==> iChronology.getMonthOfYear(instant, thisYear) >= iLeapMonth
8676:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.BasicMonthOfYearDateTimeField@isLeap(long):323:iChronology.getMonthOfYear(instant, thisYear) == iLeapMonth |==> false
8677:LVR:FALSE:TRUE:org.joda.time.chrono.BasicMonthOfYearDateTimeField@isLeap(long):325:false |==> true
8678:COR:isLeap(instant):TRUE:org.joda.time.chrono.BasicMonthOfYearDateTimeField@getLeapAmount(long):330:isLeap(instant) |==> false
8679:COR:isLeap(instant):FALSE:org.joda.time.chrono.BasicMonthOfYearDateTimeField@getLeapAmount(long):330:isLeap(instant) |==> true
8680:LVR:POS:0:org.joda.time.chrono.BasicMonthOfYearDateTimeField@getLeapAmount(long):330:1 |==> 0
8681:LVR:POS:NEG:org.joda.time.chrono.BasicMonthOfYearDateTimeField@getLeapAmount(long):330:1 |==> -1
8682:LVR:0:POS:org.joda.time.chrono.BasicMonthOfYearDateTimeField@getLeapAmount(long):330:0 |==> 1
8683:LVR:0:NEG:org.joda.time.chrono.BasicMonthOfYearDateTimeField@getLeapAmount(long):330:0 |==> -1
8684:AOR:-(long,long):%(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@remainder(long):357:instant - roundFloor(instant) |==> instant % roundFloor(instant)
8685:AOR:-(long,long):*(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@remainder(long):357:instant - roundFloor(instant) |==> instant * roundFloor(instant)
8686:AOR:-(long,long):+(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@remainder(long):357:instant - roundFloor(instant) |==> instant + roundFloor(instant)
8687:AOR:-(long,long):/(long,long):org.joda.time.chrono.BasicMonthOfYearDateTimeField@remainder(long):357:instant - roundFloor(instant) |==> instant / roundFloor(instant)
8688:ROR:<(long,long):!=(long,long):org.joda.time.field.ImpreciseDateTimeField@getDifferenceAsLong(long,long):119:minuendInstant < subtrahendInstant |==> minuendInstant != subtrahendInstant
8689:ROR:<(long,long):<=(long,long):org.joda.time.field.ImpreciseDateTimeField@getDifferenceAsLong(long,long):119:minuendInstant < subtrahendInstant |==> minuendInstant <= subtrahendInstant
8690:ROR:<(long,long):FALSE(long,long):org.joda.time.field.ImpreciseDateTimeField@getDifferenceAsLong(long,long):119:minuendInstant < subtrahendInstant |==> false
8691:ORU:-(long):+(long):org.joda.time.field.ImpreciseDateTimeField@getDifferenceAsLong(long,long):120:-getDifferenceAsLong(subtrahendInstant, minuendInstant) |==> +getDifferenceAsLong(subtrahendInstant, minuendInstant)
8692:ORU:-(long):~(long):org.joda.time.field.ImpreciseDateTimeField@getDifferenceAsLong(long,long):120:-getDifferenceAsLong(subtrahendInstant, minuendInstant) |==> ~getDifferenceAsLong(subtrahendInstant, minuendInstant)
8693:AOR:-(long,long):%(long,long):org.joda.time.field.ImpreciseDateTimeField@getDifferenceAsLong(long,long):123:minuendInstant - subtrahendInstant |==> minuendInstant % subtrahendInstant
8694:AOR:-(long,long):*(long,long):org.joda.time.field.ImpreciseDateTimeField@getDifferenceAsLong(long,long):123:minuendInstant - subtrahendInstant |==> minuendInstant * subtrahendInstant
8695:AOR:-(long,long):+(long,long):org.joda.time.field.ImpreciseDateTimeField@getDifferenceAsLong(long,long):123:minuendInstant - subtrahendInstant |==> minuendInstant + subtrahendInstant
8696:AOR:-(long,long):/(long,long):org.joda.time.field.ImpreciseDateTimeField@getDifferenceAsLong(long,long):123:minuendInstant - subtrahendInstant |==> minuendInstant / subtrahendInstant
8697:AOR:/(long,long):%(long,long):org.joda.time.field.ImpreciseDateTimeField@getDifferenceAsLong(long,long):123:(minuendInstant - subtrahendInstant) / iUnitMillis |==> (minuendInstant - subtrahendInstant) % iUnitMillis
8698:AOR:/(long,long):*(long,long):org.joda.time.field.ImpreciseDateTimeField@getDifferenceAsLong(long,long):123:(minuendInstant - subtrahendInstant) / iUnitMillis |==> (minuendInstant - subtrahendInstant) * iUnitMillis
8699:AOR:/(long,long):+(long,long):org.joda.time.field.ImpreciseDateTimeField@getDifferenceAsLong(long,long):123:(minuendInstant - subtrahendInstant) / iUnitMillis |==> (minuendInstant - subtrahendInstant) + iUnitMillis
8700:AOR:/(long,long):-(long,long):org.joda.time.field.ImpreciseDateTimeField@getDifferenceAsLong(long,long):123:(minuendInstant - subtrahendInstant) / iUnitMillis |==> (minuendInstant - subtrahendInstant) - iUnitMillis
8701:ROR:<(long,long):!=(long,long):org.joda.time.field.ImpreciseDateTimeField@getDifferenceAsLong(long,long):124:add(subtrahendInstant, difference) < minuendInstant |==> add(subtrahendInstant, difference) != minuendInstant
8702:ROR:<(long,long):<=(long,long):org.joda.time.field.ImpreciseDateTimeField@getDifferenceAsLong(long,long):124:add(subtrahendInstant, difference) < minuendInstant |==> add(subtrahendInstant, difference) <= minuendInstant
8703:ROR:<(long,long):FALSE(long,long):org.joda.time.field.ImpreciseDateTimeField@getDifferenceAsLong(long,long):124:add(subtrahendInstant, difference) < minuendInstant |==> false
8704:STD:<INC>:<NO-OP>:org.joda.time.field.ImpreciseDateTimeField@getDifferenceAsLong(long,long):126:difference++ |==> <NO-OP>
8705:ROR:<=(long,long):<(long,long):org.joda.time.field.ImpreciseDateTimeField@getDifferenceAsLong(long,long):127:add(subtrahendInstant, difference) <= minuendInstant |==> add(subtrahendInstant, difference) < minuendInstant
8706:ROR:<=(long,long):==(long,long):org.joda.time.field.ImpreciseDateTimeField@getDifferenceAsLong(long,long):127:add(subtrahendInstant, difference) <= minuendInstant |==> add(subtrahendInstant, difference) == minuendInstant
8707:ROR:<=(long,long):TRUE(long,long):org.joda.time.field.ImpreciseDateTimeField@getDifferenceAsLong(long,long):127:add(subtrahendInstant, difference) <= minuendInstant |==> true
8708:STD:<DEC>:<NO-OP>:org.joda.time.field.ImpreciseDateTimeField@getDifferenceAsLong(long,long):128:difference-- |==> <NO-OP>
8709:ROR:>(long,long):!=(long,long):org.joda.time.field.ImpreciseDateTimeField@getDifferenceAsLong(long,long):129:add(subtrahendInstant, difference) > minuendInstant |==> add(subtrahendInstant, difference) != minuendInstant
8710:ROR:>(long,long):>=(long,long):org.joda.time.field.ImpreciseDateTimeField@getDifferenceAsLong(long,long):129:add(subtrahendInstant, difference) > minuendInstant |==> add(subtrahendInstant, difference) >= minuendInstant
8711:ROR:>(long,long):FALSE(long,long):org.joda.time.field.ImpreciseDateTimeField@getDifferenceAsLong(long,long):129:add(subtrahendInstant, difference) > minuendInstant |==> false
8712:STD:<DEC>:<NO-OP>:org.joda.time.field.ImpreciseDateTimeField@getDifferenceAsLong(long,long):131:difference-- |==> <NO-OP>
8713:ROR:>(long,long):!=(long,long):org.joda.time.field.ImpreciseDateTimeField@getDifferenceAsLong(long,long):132:add(subtrahendInstant, difference) > minuendInstant |==> add(subtrahendInstant, difference) != minuendInstant
8714:ROR:>(long,long):>=(long,long):org.joda.time.field.ImpreciseDateTimeField@getDifferenceAsLong(long,long):132:add(subtrahendInstant, difference) > minuendInstant |==> add(subtrahendInstant, difference) >= minuendInstant
8715:ROR:>(long,long):FALSE(long,long):org.joda.time.field.ImpreciseDateTimeField@getDifferenceAsLong(long,long):132:add(subtrahendInstant, difference) > minuendInstant |==> false
8716:LVR:FALSE:TRUE:org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField@isPrecise():157:false |==> true
8717:AOR:+(long,long):%(long,long):org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField@getValue(long,long):166:instant + duration |==> instant % duration
8718:AOR:+(long,long):*(long,long):org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField@getValue(long,long):166:instant + duration |==> instant * duration
8719:AOR:+(long,long):-(long,long):org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField@getValue(long,long):166:instant + duration |==> instant - duration
8720:AOR:+(long,long):/(long,long):org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField@getValue(long,long):166:instant + duration |==> instant / duration
8721:AOR:+(long,long):%(long,long):org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField@getValueAsLong(long,long):171:instant + duration |==> instant % duration
8722:AOR:+(long,long):*(long,long):org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField@getValueAsLong(long,long):171:instant + duration |==> instant * duration
8723:AOR:+(long,long):-(long,long):org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField@getValueAsLong(long,long):171:instant + duration |==> instant - duration
8724:AOR:+(long,long):/(long,long):org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField@getValueAsLong(long,long):171:instant + duration |==> instant / duration
8725:AOR:-(long,long):%(long,long):org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField@getMillis(int,long):175:ImpreciseDateTimeField.this.add(instant, value) - instant |==> ImpreciseDateTimeField.this.add(instant, value) % instant
8726:AOR:-(long,long):*(long,long):org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField@getMillis(int,long):175:ImpreciseDateTimeField.this.add(instant, value) - instant |==> ImpreciseDateTimeField.this.add(instant, value) * instant
8727:AOR:-(long,long):+(long,long):org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField@getMillis(int,long):175:ImpreciseDateTimeField.this.add(instant, value) - instant |==> ImpreciseDateTimeField.this.add(instant, value) + instant
8728:AOR:-(long,long):/(long,long):org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField@getMillis(int,long):175:ImpreciseDateTimeField.this.add(instant, value) - instant |==> ImpreciseDateTimeField.this.add(instant, value) / instant
8729:AOR:-(long,long):%(long,long):org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField@getMillis(long,long):179:ImpreciseDateTimeField.this.add(instant, value) - instant |==> ImpreciseDateTimeField.this.add(instant, value) % instant
8730:AOR:-(long,long):*(long,long):org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField@getMillis(long,long):179:ImpreciseDateTimeField.this.add(instant, value) - instant |==> ImpreciseDateTimeField.this.add(instant, value) * instant
8731:AOR:-(long,long):+(long,long):org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField@getMillis(long,long):179:ImpreciseDateTimeField.this.add(instant, value) - instant |==> ImpreciseDateTimeField.this.add(instant, value) + instant
8732:AOR:-(long,long):/(long,long):org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField@getMillis(long,long):179:ImpreciseDateTimeField.this.add(instant, value) - instant |==> ImpreciseDateTimeField.this.add(instant, value) / instant
8733:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.BaseDurationField@<init>(org.joda.time.DurationFieldType):48:type == null |==> false
8734:LVR:TRUE:FALSE:org.joda.time.field.BaseDurationField@isSupported():66:true |==> false
8735:AOR:/(long,long):%(long,long):org.joda.time.field.BaseDurationField@getValueAsLong(long):91:duration / getUnitMillis() |==> duration % getUnitMillis()
8736:AOR:/(long,long):*(long,long):org.joda.time.field.BaseDurationField@getValueAsLong(long):91:duration / getUnitMillis() |==> duration * getUnitMillis()
8737:AOR:/(long,long):+(long,long):org.joda.time.field.BaseDurationField@getValueAsLong(long):91:duration / getUnitMillis() |==> duration + getUnitMillis()
8738:AOR:/(long,long):-(long,long):org.joda.time.field.BaseDurationField@getValueAsLong(long):91:duration / getUnitMillis() |==> duration - getUnitMillis()
8739:AOR:*(long,long):%(long,long):org.joda.time.field.BaseDurationField@getMillis(int):123:value * getUnitMillis() |==> value % getUnitMillis()
8740:AOR:*(long,long):+(long,long):org.joda.time.field.BaseDurationField@getMillis(int):123:value * getUnitMillis() |==> value + getUnitMillis()
8741:AOR:*(long,long):-(long,long):org.joda.time.field.BaseDurationField@getMillis(int):123:value * getUnitMillis() |==> value - getUnitMillis()
8742:AOR:*(long,long):/(long,long):org.joda.time.field.BaseDurationField@getMillis(int):123:value * getUnitMillis() |==> value / getUnitMillis()
8743:ROR:==(long,long):<=(long,long):org.joda.time.field.BaseDurationField@compareTo(org.joda.time.DurationField):149:thisMillis == otherMillis |==> thisMillis <= otherMillis
8744:ROR:==(long,long):>=(long,long):org.joda.time.field.BaseDurationField@compareTo(org.joda.time.DurationField):149:thisMillis == otherMillis |==> thisMillis >= otherMillis
8745:ROR:==(long,long):FALSE(long,long):org.joda.time.field.BaseDurationField@compareTo(org.joda.time.DurationField):149:thisMillis == otherMillis |==> false
8746:LVR:0:POS:org.joda.time.field.BaseDurationField@compareTo(org.joda.time.DurationField):150:0 |==> 1
8747:LVR:0:NEG:org.joda.time.field.BaseDurationField@compareTo(org.joda.time.DurationField):150:0 |==> -1
8748:ROR:<(long,long):!=(long,long):org.joda.time.field.BaseDurationField@compareTo(org.joda.time.DurationField):152:thisMillis < otherMillis |==> thisMillis != otherMillis
8749:ROR:<(long,long):<=(long,long):org.joda.time.field.BaseDurationField@compareTo(org.joda.time.DurationField):152:thisMillis < otherMillis |==> thisMillis <= otherMillis
8750:ROR:<(long,long):FALSE(long,long):org.joda.time.field.BaseDurationField@compareTo(org.joda.time.DurationField):152:thisMillis < otherMillis |==> false
8751:LVR:NEG:0:org.joda.time.field.BaseDurationField@compareTo(org.joda.time.DurationField):153:-1 |==> 0
8752:LVR:NEG:POS:org.joda.time.field.BaseDurationField@compareTo(org.joda.time.DurationField):153:-1 |==> 1
8753:LVR:POS:0:org.joda.time.field.BaseDurationField@compareTo(org.joda.time.DurationField):155:1 |==> 0
8754:LVR:POS:NEG:org.joda.time.field.BaseDurationField@compareTo(org.joda.time.DurationField):155:1 |==> -1
8755:LVR:FALSE:TRUE:org.joda.time.chrono.BasicSingleEraDateTimeField@isLenient():57:false |==> true
8756:STD:<CALL>:<NO-OP>:org.joda.time.chrono.BasicSingleEraDateTimeField@set(long,int):67:FieldUtils.verifyValueBounds(this, era, ERA_VALUE, ERA_VALUE) |==> <NO-OP>
8757:LVR:FALSE:TRUE:org.joda.time.chrono.BasicSingleEraDateTimeField@set(long,java.lang.String,java.util.Locale):73:false |==> true
8758:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.BasicSingleEraDateTimeField@set(long,java.lang.String,java.util.Locale):73:iEraText.equals(text) == false |==> false
8759:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.BasicSingleEraDateTimeField@set(long,java.lang.String,java.util.Locale):73:iEraText.equals(text) == false |==> iEraText.equals(text)
8760:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.BasicSingleEraDateTimeField@set(long,java.lang.String,java.util.Locale):73:iEraText.equals(text) == false |==> false
8761:LVR:FALSE:TRUE:org.joda.time.chrono.BasicSingleEraDateTimeField@set(long,java.lang.String,java.util.Locale):73:false |==> true
8762:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.BasicSingleEraDateTimeField@set(long,java.lang.String,java.util.Locale):73:"1".equals(text) == false |==> false
8763:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.BasicSingleEraDateTimeField@set(long,java.lang.String,java.util.Locale):73:"1".equals(text) == false |==> "1".equals(text)
8764:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.BasicSingleEraDateTimeField@set(long,java.lang.String,java.util.Locale):73:"1".equals(text) == false |==> false
8765:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.BasicSingleEraDateTimeField@set(long,java.lang.String,java.util.Locale):73:iEraText.equals(text) == false && "1".equals(text) == false |==> iEraText.equals(text) == false == ("1".equals(text) == false)
8766:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.BasicSingleEraDateTimeField@set(long,java.lang.String,java.util.Locale):73:iEraText.equals(text) == false && "1".equals(text) == false |==> false
8767:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.BasicSingleEraDateTimeField@set(long,java.lang.String,java.util.Locale):73:iEraText.equals(text) == false && "1".equals(text) == false |==> iEraText.equals(text) == false
8768:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.BasicSingleEraDateTimeField@set(long,java.lang.String,java.util.Locale):73:iEraText.equals(text) == false && "1".equals(text) == false |==> "1".equals(text) == false
8769:LVR:POS:0:org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundFloor(long):66:3 |==> 0
8770:LVR:POS:NEG:org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundFloor(long):66:3 |==> -3
8771:AOR:*(int,int):%(int,int):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundFloor(long):66:3 * DateTimeConstants.MILLIS_PER_DAY |==> 3 % DateTimeConstants.MILLIS_PER_DAY
8772:AOR:*(int,int):+(int,int):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundFloor(long):66:3 * DateTimeConstants.MILLIS_PER_DAY |==> 3 + DateTimeConstants.MILLIS_PER_DAY
8773:AOR:*(int,int):-(int,int):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundFloor(long):66:3 * DateTimeConstants.MILLIS_PER_DAY |==> 3 - DateTimeConstants.MILLIS_PER_DAY
8774:AOR:*(int,int):/(int,int):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundFloor(long):66:3 * DateTimeConstants.MILLIS_PER_DAY |==> 3 / DateTimeConstants.MILLIS_PER_DAY
8775:AOR:+(long,long):%(long,long):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundFloor(long):66:instant + 3 * DateTimeConstants.MILLIS_PER_DAY |==> instant % (3 * DateTimeConstants.MILLIS_PER_DAY)
8776:AOR:+(long,long):*(long,long):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundFloor(long):66:instant + 3 * DateTimeConstants.MILLIS_PER_DAY |==> instant * (3 * DateTimeConstants.MILLIS_PER_DAY)
8777:AOR:+(long,long):-(long,long):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundFloor(long):66:instant + 3 * DateTimeConstants.MILLIS_PER_DAY |==> instant - 3 * DateTimeConstants.MILLIS_PER_DAY
8778:AOR:+(long,long):/(long,long):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundFloor(long):66:instant + 3 * DateTimeConstants.MILLIS_PER_DAY |==> instant / (3 * DateTimeConstants.MILLIS_PER_DAY)
8779:LVR:POS:0:org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundFloor(long):67:3 |==> 0
8780:LVR:POS:NEG:org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundFloor(long):67:3 |==> -3
8781:AOR:*(int,int):%(int,int):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundFloor(long):67:3 * DateTimeConstants.MILLIS_PER_DAY |==> 3 % DateTimeConstants.MILLIS_PER_DAY
8782:AOR:*(int,int):+(int,int):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundFloor(long):67:3 * DateTimeConstants.MILLIS_PER_DAY |==> 3 + DateTimeConstants.MILLIS_PER_DAY
8783:AOR:*(int,int):-(int,int):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundFloor(long):67:3 * DateTimeConstants.MILLIS_PER_DAY |==> 3 - DateTimeConstants.MILLIS_PER_DAY
8784:AOR:*(int,int):/(int,int):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundFloor(long):67:3 * DateTimeConstants.MILLIS_PER_DAY |==> 3 / DateTimeConstants.MILLIS_PER_DAY
8785:AOR:-(long,long):%(long,long):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundFloor(long):66:super.roundFloor(instant + 3 * DateTimeConstants.MILLIS_PER_DAY) - 3 * DateTimeConstants.MILLIS_PER_DAY |==> super.roundFloor(instant + 3 * DateTimeConstants.MILLIS_PER_DAY) % (3 * DateTimeConstants.MILLIS_PER_DAY)
8786:AOR:-(long,long):*(long,long):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundFloor(long):66:super.roundFloor(instant + 3 * DateTimeConstants.MILLIS_PER_DAY) - 3 * DateTimeConstants.MILLIS_PER_DAY |==> super.roundFloor(instant + 3 * DateTimeConstants.MILLIS_PER_DAY) * (3 * DateTimeConstants.MILLIS_PER_DAY)
8787:AOR:-(long,long):+(long,long):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundFloor(long):66:super.roundFloor(instant + 3 * DateTimeConstants.MILLIS_PER_DAY) - 3 * DateTimeConstants.MILLIS_PER_DAY |==> super.roundFloor(instant + 3 * DateTimeConstants.MILLIS_PER_DAY) + 3 * DateTimeConstants.MILLIS_PER_DAY
8788:AOR:-(long,long):/(long,long):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundFloor(long):66:super.roundFloor(instant + 3 * DateTimeConstants.MILLIS_PER_DAY) - 3 * DateTimeConstants.MILLIS_PER_DAY |==> super.roundFloor(instant + 3 * DateTimeConstants.MILLIS_PER_DAY) / (3 * DateTimeConstants.MILLIS_PER_DAY)
8789:LVR:POS:0:org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundCeiling(long):71:3 |==> 0
8790:LVR:POS:NEG:org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundCeiling(long):71:3 |==> -3
8791:AOR:*(int,int):%(int,int):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundCeiling(long):71:3 * DateTimeConstants.MILLIS_PER_DAY |==> 3 % DateTimeConstants.MILLIS_PER_DAY
8792:AOR:*(int,int):+(int,int):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundCeiling(long):71:3 * DateTimeConstants.MILLIS_PER_DAY |==> 3 + DateTimeConstants.MILLIS_PER_DAY
8793:AOR:*(int,int):-(int,int):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundCeiling(long):71:3 * DateTimeConstants.MILLIS_PER_DAY |==> 3 - DateTimeConstants.MILLIS_PER_DAY
8794:AOR:*(int,int):/(int,int):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundCeiling(long):71:3 * DateTimeConstants.MILLIS_PER_DAY |==> 3 / DateTimeConstants.MILLIS_PER_DAY
8795:AOR:+(long,long):%(long,long):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundCeiling(long):71:instant + 3 * DateTimeConstants.MILLIS_PER_DAY |==> instant % (3 * DateTimeConstants.MILLIS_PER_DAY)
8796:AOR:+(long,long):*(long,long):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundCeiling(long):71:instant + 3 * DateTimeConstants.MILLIS_PER_DAY |==> instant * (3 * DateTimeConstants.MILLIS_PER_DAY)
8797:AOR:+(long,long):-(long,long):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundCeiling(long):71:instant + 3 * DateTimeConstants.MILLIS_PER_DAY |==> instant - 3 * DateTimeConstants.MILLIS_PER_DAY
8798:AOR:+(long,long):/(long,long):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundCeiling(long):71:instant + 3 * DateTimeConstants.MILLIS_PER_DAY |==> instant / (3 * DateTimeConstants.MILLIS_PER_DAY)
8799:LVR:POS:0:org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundCeiling(long):72:3 |==> 0
8800:LVR:POS:NEG:org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundCeiling(long):72:3 |==> -3
8801:AOR:*(int,int):%(int,int):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundCeiling(long):72:3 * DateTimeConstants.MILLIS_PER_DAY |==> 3 % DateTimeConstants.MILLIS_PER_DAY
8802:AOR:*(int,int):+(int,int):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundCeiling(long):72:3 * DateTimeConstants.MILLIS_PER_DAY |==> 3 + DateTimeConstants.MILLIS_PER_DAY
8803:AOR:*(int,int):-(int,int):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundCeiling(long):72:3 * DateTimeConstants.MILLIS_PER_DAY |==> 3 - DateTimeConstants.MILLIS_PER_DAY
8804:AOR:*(int,int):/(int,int):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundCeiling(long):72:3 * DateTimeConstants.MILLIS_PER_DAY |==> 3 / DateTimeConstants.MILLIS_PER_DAY
8805:AOR:-(long,long):%(long,long):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundCeiling(long):71:super.roundCeiling(instant + 3 * DateTimeConstants.MILLIS_PER_DAY) - 3 * DateTimeConstants.MILLIS_PER_DAY |==> super.roundCeiling(instant + 3 * DateTimeConstants.MILLIS_PER_DAY) % (3 * DateTimeConstants.MILLIS_PER_DAY)
8806:AOR:-(long,long):*(long,long):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundCeiling(long):71:super.roundCeiling(instant + 3 * DateTimeConstants.MILLIS_PER_DAY) - 3 * DateTimeConstants.MILLIS_PER_DAY |==> super.roundCeiling(instant + 3 * DateTimeConstants.MILLIS_PER_DAY) * (3 * DateTimeConstants.MILLIS_PER_DAY)
8807:AOR:-(long,long):+(long,long):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundCeiling(long):71:super.roundCeiling(instant + 3 * DateTimeConstants.MILLIS_PER_DAY) - 3 * DateTimeConstants.MILLIS_PER_DAY |==> super.roundCeiling(instant + 3 * DateTimeConstants.MILLIS_PER_DAY) + 3 * DateTimeConstants.MILLIS_PER_DAY
8808:AOR:-(long,long):/(long,long):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@roundCeiling(long):71:super.roundCeiling(instant + 3 * DateTimeConstants.MILLIS_PER_DAY) - 3 * DateTimeConstants.MILLIS_PER_DAY |==> super.roundCeiling(instant + 3 * DateTimeConstants.MILLIS_PER_DAY) / (3 * DateTimeConstants.MILLIS_PER_DAY)
8809:LVR:POS:0:org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@remainder(long):76:3 |==> 0
8810:LVR:POS:NEG:org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@remainder(long):76:3 |==> -3
8811:AOR:*(int,int):%(int,int):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@remainder(long):76:3 * DateTimeConstants.MILLIS_PER_DAY |==> 3 % DateTimeConstants.MILLIS_PER_DAY
8812:AOR:*(int,int):+(int,int):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@remainder(long):76:3 * DateTimeConstants.MILLIS_PER_DAY |==> 3 + DateTimeConstants.MILLIS_PER_DAY
8813:AOR:*(int,int):-(int,int):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@remainder(long):76:3 * DateTimeConstants.MILLIS_PER_DAY |==> 3 - DateTimeConstants.MILLIS_PER_DAY
8814:AOR:*(int,int):/(int,int):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@remainder(long):76:3 * DateTimeConstants.MILLIS_PER_DAY |==> 3 / DateTimeConstants.MILLIS_PER_DAY
8815:AOR:+(long,long):%(long,long):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@remainder(long):76:instant + 3 * DateTimeConstants.MILLIS_PER_DAY |==> instant % (3 * DateTimeConstants.MILLIS_PER_DAY)
8816:AOR:+(long,long):*(long,long):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@remainder(long):76:instant + 3 * DateTimeConstants.MILLIS_PER_DAY |==> instant * (3 * DateTimeConstants.MILLIS_PER_DAY)
8817:AOR:+(long,long):-(long,long):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@remainder(long):76:instant + 3 * DateTimeConstants.MILLIS_PER_DAY |==> instant - 3 * DateTimeConstants.MILLIS_PER_DAY
8818:AOR:+(long,long):/(long,long):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@remainder(long):76:instant + 3 * DateTimeConstants.MILLIS_PER_DAY |==> instant / (3 * DateTimeConstants.MILLIS_PER_DAY)
8819:LVR:POS:0:org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@getMinimumValue():80:1 |==> 0
8820:LVR:POS:NEG:org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@getMinimumValue():80:1 |==> -1
8821:LVR:POS:0:org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@getMaximumValue():84:53 |==> 0
8822:LVR:POS:NEG:org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@getMaximumValue():84:53 |==> -53
8823:COR:partial.isSupported(DateTimeFieldType.weekyear()):TRUE:org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@getMaximumValue(org.joda.time.ReadablePartial):93:partial.isSupported(DateTimeFieldType.weekyear()) |==> false
8824:COR:partial.isSupported(DateTimeFieldType.weekyear()):FALSE:org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@getMaximumValue(org.joda.time.ReadablePartial):93:partial.isSupported(DateTimeFieldType.weekyear()) |==> true
8825:LVR:POS:0:org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@getMaximumValue(org.joda.time.ReadablePartial):97:53 |==> 0
8826:LVR:POS:NEG:org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@getMaximumValue(org.joda.time.ReadablePartial):97:53 |==> -53
8827:LVR:0:POS:org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@getMaximumValue(org.joda.time.ReadablePartial,int[]):102:0 |==> 1
8828:LVR:0:NEG:org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@getMaximumValue(org.joda.time.ReadablePartial,int[]):102:0 |==> -1
8829:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@getMaximumValue(org.joda.time.ReadablePartial,int[]):102:i < size |==> i != size
8830:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@getMaximumValue(org.joda.time.ReadablePartial,int[]):102:i < size |==> i <= size
8831:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@getMaximumValue(org.joda.time.ReadablePartial,int[]):102:i < size |==> false
8832:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@getMaximumValue(org.joda.time.ReadablePartial,int[]):103:partial.getFieldType(i) == DateTimeFieldType.weekyear() |==> false
8833:LVR:POS:0:org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@getMaximumValue(org.joda.time.ReadablePartial,int[]):108:53 |==> 0
8834:LVR:POS:NEG:org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@getMaximumValue(org.joda.time.ReadablePartial,int[]):108:53 |==> -53
8835:LVR:POS:0:org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@getMaximumValueForSet(long,int):112:52 |==> 0
8836:LVR:POS:NEG:org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@getMaximumValueForSet(long,int):112:52 |==> -52
8837:ROR:>(int,int):!=(int,int):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@getMaximumValueForSet(long,int):112:value > 52 |==> value != 52
8838:ROR:>(int,int):>=(int,int):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@getMaximumValueForSet(long,int):112:value > 52 |==> value >= 52
8839:ROR:>(int,int):FALSE(int,int):org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@getMaximumValueForSet(long,int):112:value > 52 |==> false
8840:LVR:POS:0:org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@getMaximumValueForSet(long,int):112:52 |==> 0
8841:LVR:POS:NEG:org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField@getMaximumValueForSet(long,int):112:52 |==> -52
8842:LVR:FALSE:TRUE:org.joda.time.chrono.BasicWeekyearDateTimeField@isLenient():50:false |==> true
8843:LVR:0:POS:org.joda.time.chrono.BasicWeekyearDateTimeField@add(long,int):73:0 |==> 1
8844:LVR:0:NEG:org.joda.time.chrono.BasicWeekyearDateTimeField@add(long,int):73:0 |==> -1
8845:ROR:==(int,int):<=(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@add(long,int):73:years == 0 |==> years <= 0
8846:ROR:==(int,int):>=(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@add(long,int):73:years == 0 |==> years >= 0
8847:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@add(long,int):73:years == 0 |==> false
8848:AOR:+(int,int):%(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@add(long,int):76:get(instant) + years |==> get(instant) % years
8849:AOR:+(int,int):*(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@add(long,int):76:get(instant) + years |==> get(instant) * years
8850:AOR:+(int,int):-(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@add(long,int):76:get(instant) + years |==> get(instant) - years
8851:AOR:+(int,int):/(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@add(long,int):76:get(instant) + years |==> get(instant) / years
8852:ROR:<(long,long):!=(long,long):org.joda.time.chrono.BasicWeekyearDateTimeField@getDifferenceAsLong(long,long):97:minuendInstant < subtrahendInstant |==> minuendInstant != subtrahendInstant
8853:ROR:<(long,long):<=(long,long):org.joda.time.chrono.BasicWeekyearDateTimeField@getDifferenceAsLong(long,long):97:minuendInstant < subtrahendInstant |==> minuendInstant <= subtrahendInstant
8854:ROR:<(long,long):FALSE(long,long):org.joda.time.chrono.BasicWeekyearDateTimeField@getDifferenceAsLong(long,long):97:minuendInstant < subtrahendInstant |==> false
8855:ORU:-(int):+(int):org.joda.time.chrono.BasicWeekyearDateTimeField@getDifferenceAsLong(long,long):98:-getDifference(subtrahendInstant, minuendInstant) |==> +getDifference(subtrahendInstant, minuendInstant)
8856:ORU:-(int):~(int):org.joda.time.chrono.BasicWeekyearDateTimeField@getDifferenceAsLong(long,long):98:-getDifference(subtrahendInstant, minuendInstant) |==> ~getDifference(subtrahendInstant, minuendInstant)
8857:ROR:>=(long,long):==(long,long):org.joda.time.chrono.BasicWeekyearDateTimeField@getDifferenceAsLong(long,long):108:subtrahendRem >= WEEK_53 |==> subtrahendRem == WEEK_53
8858:ROR:>=(long,long):>(long,long):org.joda.time.chrono.BasicWeekyearDateTimeField@getDifferenceAsLong(long,long):108:subtrahendRem >= WEEK_53 |==> subtrahendRem > WEEK_53
8859:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.BasicWeekyearDateTimeField@getDifferenceAsLong(long,long):108:subtrahendRem >= WEEK_53 |==> true
8860:LVR:POS:0:org.joda.time.chrono.BasicWeekyearDateTimeField@getDifferenceAsLong(long,long):108:52 |==> 0
8861:LVR:POS:NEG:org.joda.time.chrono.BasicWeekyearDateTimeField@getDifferenceAsLong(long,long):108:52 |==> -52
8862:ROR:<=(int,int):<(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@getDifferenceAsLong(long,long):108:iChronology.getWeeksInYear(minuendWeekyear) <= 52 |==> iChronology.getWeeksInYear(minuendWeekyear) < 52
8863:ROR:<=(int,int):==(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@getDifferenceAsLong(long,long):108:iChronology.getWeeksInYear(minuendWeekyear) <= 52 |==> iChronology.getWeeksInYear(minuendWeekyear) == 52
8864:ROR:<=(int,int):TRUE(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@getDifferenceAsLong(long,long):108:iChronology.getWeeksInYear(minuendWeekyear) <= 52 |==> true
8865:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.BasicWeekyearDateTimeField@getDifferenceAsLong(long,long):108:subtrahendRem >= WEEK_53 && iChronology.getWeeksInYear(minuendWeekyear) <= 52 |==> subtrahendRem >= WEEK_53 == iChronology.getWeeksInYear(minuendWeekyear) <= 52
8866:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.BasicWeekyearDateTimeField@getDifferenceAsLong(long,long):108:subtrahendRem >= WEEK_53 && iChronology.getWeeksInYear(minuendWeekyear) <= 52 |==> false
8867:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.BasicWeekyearDateTimeField@getDifferenceAsLong(long,long):108:subtrahendRem >= WEEK_53 && iChronology.getWeeksInYear(minuendWeekyear) <= 52 |==> subtrahendRem >= WEEK_53
8868:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.BasicWeekyearDateTimeField@getDifferenceAsLong(long,long):108:subtrahendRem >= WEEK_53 && iChronology.getWeeksInYear(minuendWeekyear) <= 52 |==> iChronology.getWeeksInYear(minuendWeekyear) <= 52
8869:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicWeekyearDateTimeField@getDifferenceAsLong(long,long):109:subtrahendRem -= DateTimeConstants.MILLIS_PER_WEEK |==> <NO-OP>
8870:AOR:-(int,int):%(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@getDifferenceAsLong(long,long):112:minuendWeekyear - subtrahendWeekyear |==> minuendWeekyear % subtrahendWeekyear
8871:AOR:-(int,int):*(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@getDifferenceAsLong(long,long):112:minuendWeekyear - subtrahendWeekyear |==> minuendWeekyear * subtrahendWeekyear
8872:AOR:-(int,int):+(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@getDifferenceAsLong(long,long):112:minuendWeekyear - subtrahendWeekyear |==> minuendWeekyear + subtrahendWeekyear
8873:AOR:-(int,int):/(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@getDifferenceAsLong(long,long):112:minuendWeekyear - subtrahendWeekyear |==> minuendWeekyear / subtrahendWeekyear
8874:ROR:<(long,long):!=(long,long):org.joda.time.chrono.BasicWeekyearDateTimeField@getDifferenceAsLong(long,long):113:minuendRem < subtrahendRem |==> minuendRem != subtrahendRem
8875:ROR:<(long,long):<=(long,long):org.joda.time.chrono.BasicWeekyearDateTimeField@getDifferenceAsLong(long,long):113:minuendRem < subtrahendRem |==> minuendRem <= subtrahendRem
8876:ROR:<(long,long):FALSE(long,long):org.joda.time.chrono.BasicWeekyearDateTimeField@getDifferenceAsLong(long,long):113:minuendRem < subtrahendRem |==> false
8877:STD:<DEC>:<NO-OP>:org.joda.time.chrono.BasicWeekyearDateTimeField@getDifferenceAsLong(long,long):114:difference-- |==> <NO-OP>
8878:STD:<CALL>:<NO-OP>:org.joda.time.chrono.BasicWeekyearDateTimeField@set(long,int):129:FieldUtils.verifyValueBounds(this, Math.abs(year), iChronology.getMinYear(), iChronology.getMaxYear()) |==> <NO-OP>
8879:ROR:==(int,int):<=(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@set(long,int):135:thisWeekyear == year |==> thisWeekyear <= year
8880:ROR:==(int,int):>=(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@set(long,int):135:thisWeekyear == year |==> thisWeekyear >= year
8881:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@set(long,int):135:thisWeekyear == year |==> false
8882:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@set(long,int):147:weeksInToYear < weeksInFromYear |==> weeksInToYear != weeksInFromYear
8883:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@set(long,int):147:weeksInToYear < weeksInFromYear |==> weeksInToYear <= weeksInFromYear
8884:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@set(long,int):147:weeksInToYear < weeksInFromYear |==> false
8885:ROR:>(int,int):!=(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@set(long,int):156:setToWeek > maxOutWeeks |==> setToWeek != maxOutWeeks
8886:ROR:>(int,int):>=(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@set(long,int):156:setToWeek > maxOutWeeks |==> setToWeek >= maxOutWeeks
8887:ROR:>(int,int):FALSE(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@set(long,int):156:setToWeek > maxOutWeeks |==> false
8888:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicWeekyearDateTimeField@set(long,int):157:setToWeek = maxOutWeeks |==> <NO-OP>
8889:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicWeekyearDateTimeField@set(long,int):169:workInstant = iChronology.setYear(workInstant, year) |==> <NO-OP>
8890:ROR:<(int,int):!=(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@set(long,int):180:workWoyYear < year |==> workWoyYear != year
8891:ROR:<(int,int):<=(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@set(long,int):180:workWoyYear < year |==> workWoyYear <= year
8892:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@set(long,int):180:workWoyYear < year |==> false
8893:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicWeekyearDateTimeField@set(long,int):181:workInstant += DateTimeConstants.MILLIS_PER_WEEK |==> <NO-OP>
8894:ROR:>(int,int):!=(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@set(long,int):182:workWoyYear > year |==> workWoyYear != year
8895:ROR:>(int,int):>=(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@set(long,int):182:workWoyYear > year |==> workWoyYear >= year
8896:ROR:>(int,int):FALSE(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@set(long,int):182:workWoyYear > year |==> false
8897:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicWeekyearDateTimeField@set(long,int):183:workInstant -= DateTimeConstants.MILLIS_PER_WEEK |==> <NO-OP>
8898:AOR:-(int,int):%(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@set(long,int):192:setToWeek - currentWoyWeek |==> setToWeek % currentWoyWeek
8899:AOR:-(int,int):*(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@set(long,int):192:setToWeek - currentWoyWeek |==> setToWeek * currentWoyWeek
8900:AOR:-(int,int):+(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@set(long,int):192:setToWeek - currentWoyWeek |==> setToWeek + currentWoyWeek
8901:AOR:-(int,int):/(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@set(long,int):192:setToWeek - currentWoyWeek |==> setToWeek / currentWoyWeek
8902:AOR:*(long,long):%(long,long):org.joda.time.chrono.BasicWeekyearDateTimeField@set(long,int):192:(setToWeek - currentWoyWeek) * (long)DateTimeConstants.MILLIS_PER_WEEK |==> (setToWeek - currentWoyWeek) % (long)DateTimeConstants.MILLIS_PER_WEEK
8903:AOR:*(long,long):+(long,long):org.joda.time.chrono.BasicWeekyearDateTimeField@set(long,int):192:(setToWeek - currentWoyWeek) * (long)DateTimeConstants.MILLIS_PER_WEEK |==> (setToWeek - currentWoyWeek) + (long)DateTimeConstants.MILLIS_PER_WEEK
8904:AOR:*(long,long):-(long,long):org.joda.time.chrono.BasicWeekyearDateTimeField@set(long,int):192:(setToWeek - currentWoyWeek) * (long)DateTimeConstants.MILLIS_PER_WEEK |==> (setToWeek - currentWoyWeek) - (long)DateTimeConstants.MILLIS_PER_WEEK
8905:AOR:*(long,long):/(long,long):org.joda.time.chrono.BasicWeekyearDateTimeField@set(long,int):192:(setToWeek - currentWoyWeek) * (long)DateTimeConstants.MILLIS_PER_WEEK |==> (setToWeek - currentWoyWeek) / (long)DateTimeConstants.MILLIS_PER_WEEK
8906:AOR:+(long,long):%(long,long):org.joda.time.chrono.BasicWeekyearDateTimeField@set(long,int):192:workInstant + (setToWeek - currentWoyWeek) * (long)DateTimeConstants.MILLIS_PER_WEEK |==> workInstant % ((setToWeek - currentWoyWeek) * (long)DateTimeConstants.MILLIS_PER_WEEK)
8907:AOR:+(long,long):*(long,long):org.joda.time.chrono.BasicWeekyearDateTimeField@set(long,int):192:workInstant + (setToWeek - currentWoyWeek) * (long)DateTimeConstants.MILLIS_PER_WEEK |==> workInstant * ((setToWeek - currentWoyWeek) * (long)DateTimeConstants.MILLIS_PER_WEEK)
8908:AOR:+(long,long):-(long,long):org.joda.time.chrono.BasicWeekyearDateTimeField@set(long,int):192:workInstant + (setToWeek - currentWoyWeek) * (long)DateTimeConstants.MILLIS_PER_WEEK |==> workInstant - (setToWeek - currentWoyWeek) * (long)DateTimeConstants.MILLIS_PER_WEEK
8909:AOR:+(long,long):/(long,long):org.joda.time.chrono.BasicWeekyearDateTimeField@set(long,int):192:workInstant + (setToWeek - currentWoyWeek) * (long)DateTimeConstants.MILLIS_PER_WEEK |==> workInstant / ((setToWeek - currentWoyWeek) * (long)DateTimeConstants.MILLIS_PER_WEEK)
8910:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicWeekyearDateTimeField@set(long,int):192:workInstant = workInstant + (setToWeek - currentWoyWeek) * (long)DateTimeConstants.MILLIS_PER_WEEK |==> <NO-OP>
8911:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicWeekyearDateTimeField@set(long,int):201:workInstant = iChronology.dayOfWeek().set(workInstant, thisDow) |==> <NO-OP>
8912:LVR:POS:0:org.joda.time.chrono.BasicWeekyearDateTimeField@isLeap(long):213:52 |==> 0
8913:LVR:POS:NEG:org.joda.time.chrono.BasicWeekyearDateTimeField@isLeap(long):213:52 |==> -52
8914:ROR:>(int,int):!=(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@isLeap(long):213:iChronology.getWeeksInYear(iChronology.getWeekyear(instant)) > 52 |==> iChronology.getWeeksInYear(iChronology.getWeekyear(instant)) != 52
8915:ROR:>(int,int):>=(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@isLeap(long):213:iChronology.getWeeksInYear(iChronology.getWeekyear(instant)) > 52 |==> iChronology.getWeeksInYear(iChronology.getWeekyear(instant)) >= 52
8916:ROR:>(int,int):FALSE(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@isLeap(long):213:iChronology.getWeeksInYear(iChronology.getWeekyear(instant)) > 52 |==> false
8917:LVR:POS:0:org.joda.time.chrono.BasicWeekyearDateTimeField@getLeapAmount(long):217:52 |==> 0
8918:LVR:POS:NEG:org.joda.time.chrono.BasicWeekyearDateTimeField@getLeapAmount(long):217:52 |==> -52
8919:AOR:-(int,int):%(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@getLeapAmount(long):217:iChronology.getWeeksInYear(iChronology.getWeekyear(instant)) - 52 |==> iChronology.getWeeksInYear(iChronology.getWeekyear(instant)) % 52
8920:AOR:-(int,int):*(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@getLeapAmount(long):217:iChronology.getWeeksInYear(iChronology.getWeekyear(instant)) - 52 |==> iChronology.getWeeksInYear(iChronology.getWeekyear(instant)) * 52
8921:AOR:-(int,int):+(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@getLeapAmount(long):217:iChronology.getWeeksInYear(iChronology.getWeekyear(instant)) - 52 |==> iChronology.getWeeksInYear(iChronology.getWeekyear(instant)) + 52
8922:AOR:-(int,int):/(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@getLeapAmount(long):217:iChronology.getWeeksInYear(iChronology.getWeekyear(instant)) - 52 |==> iChronology.getWeeksInYear(iChronology.getWeekyear(instant)) / 52
8923:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicWeekyearDateTimeField@roundFloor(long):235:instant = iChronology.weekOfWeekyear().roundFloor(instant) |==> <NO-OP>
8924:LVR:POS:0:org.joda.time.chrono.BasicWeekyearDateTimeField@roundFloor(long):237:1 |==> 0
8925:LVR:POS:NEG:org.joda.time.chrono.BasicWeekyearDateTimeField@roundFloor(long):237:1 |==> -1
8926:ROR:>(int,int):!=(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@roundFloor(long):237:wow > 1 |==> wow != 1
8927:ROR:>(int,int):>=(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@roundFloor(long):237:wow > 1 |==> wow >= 1
8928:ROR:>(int,int):FALSE(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@roundFloor(long):237:wow > 1 |==> false
8929:LVR:POS:0:org.joda.time.chrono.BasicWeekyearDateTimeField@roundFloor(long):238:1 |==> 0
8930:LVR:POS:NEG:org.joda.time.chrono.BasicWeekyearDateTimeField@roundFloor(long):238:1 |==> -1
8931:AOR:-(int,int):%(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@roundFloor(long):238:wow - 1 |==> wow % 1
8932:AOR:-(int,int):*(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@roundFloor(long):238:wow - 1 |==> wow * 1
8933:AOR:-(int,int):+(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@roundFloor(long):238:wow - 1 |==> wow + 1
8934:AOR:-(int,int):/(int,int):org.joda.time.chrono.BasicWeekyearDateTimeField@roundFloor(long):238:wow - 1 |==> wow / 1
8935:AOR:*(long,long):%(long,long):org.joda.time.chrono.BasicWeekyearDateTimeField@roundFloor(long):238:((long)DateTimeConstants.MILLIS_PER_WEEK) * (wow - 1) |==> ((long)DateTimeConstants.MILLIS_PER_WEEK) % (wow - 1)
8936:AOR:*(long,long):+(long,long):org.joda.time.chrono.BasicWeekyearDateTimeField@roundFloor(long):238:((long)DateTimeConstants.MILLIS_PER_WEEK) * (wow - 1) |==> ((long)DateTimeConstants.MILLIS_PER_WEEK) + (wow - 1)
8937:AOR:*(long,long):-(long,long):org.joda.time.chrono.BasicWeekyearDateTimeField@roundFloor(long):238:((long)DateTimeConstants.MILLIS_PER_WEEK) * (wow - 1) |==> ((long)DateTimeConstants.MILLIS_PER_WEEK) - (wow - 1)
8938:AOR:*(long,long):/(long,long):org.joda.time.chrono.BasicWeekyearDateTimeField@roundFloor(long):238:((long)DateTimeConstants.MILLIS_PER_WEEK) * (wow - 1) |==> ((long)DateTimeConstants.MILLIS_PER_WEEK) / (wow - 1)
8939:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicWeekyearDateTimeField@roundFloor(long):238:instant -= ((long)DateTimeConstants.MILLIS_PER_WEEK) * (wow - 1) |==> <NO-OP>
8940:AOR:-(long,long):%(long,long):org.joda.time.chrono.BasicWeekyearDateTimeField@remainder(long):244:instant - roundFloor(instant) |==> instant % roundFloor(instant)
8941:AOR:-(long,long):*(long,long):org.joda.time.chrono.BasicWeekyearDateTimeField@remainder(long):244:instant - roundFloor(instant) |==> instant * roundFloor(instant)
8942:AOR:-(long,long):+(long,long):org.joda.time.chrono.BasicWeekyearDateTimeField@remainder(long):244:instant - roundFloor(instant) |==> instant + roundFloor(instant)
8943:AOR:-(long,long):/(long,long):org.joda.time.chrono.BasicWeekyearDateTimeField@remainder(long):244:instant - roundFloor(instant) |==> instant / roundFloor(instant)
8944:LVR:FALSE:TRUE:org.joda.time.chrono.BasicYearDateTimeField@isLenient():51:false |==> true
8945:LVR:0:POS:org.joda.time.chrono.BasicYearDateTimeField@add(long,int):59:0 |==> 1
8946:LVR:0:NEG:org.joda.time.chrono.BasicYearDateTimeField@add(long,int):59:0 |==> -1
8947:ROR:==(int,int):<=(int,int):org.joda.time.chrono.BasicYearDateTimeField@add(long,int):59:years == 0 |==> years <= 0
8948:ROR:==(int,int):>=(int,int):org.joda.time.chrono.BasicYearDateTimeField@add(long,int):59:years == 0 |==> years >= 0
8949:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.BasicYearDateTimeField@add(long,int):59:years == 0 |==> false
8950:LVR:0:POS:org.joda.time.chrono.BasicYearDateTimeField@addWrapField(long,int):72:0 |==> 1
8951:LVR:0:NEG:org.joda.time.chrono.BasicYearDateTimeField@addWrapField(long,int):72:0 |==> -1
8952:ROR:==(int,int):<=(int,int):org.joda.time.chrono.BasicYearDateTimeField@addWrapField(long,int):72:years == 0 |==> years <= 0
8953:ROR:==(int,int):>=(int,int):org.joda.time.chrono.BasicYearDateTimeField@addWrapField(long,int):72:years == 0 |==> years >= 0
8954:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.BasicYearDateTimeField@addWrapField(long,int):72:years == 0 |==> false
8955:STD:<CALL>:<NO-OP>:org.joda.time.chrono.BasicYearDateTimeField@set(long,int):83:FieldUtils.verifyValueBounds(this, year, iChronology.getMinYear(), iChronology.getMaxYear()) |==> <NO-OP>
8956:ROR:<(long,long):!=(long,long):org.joda.time.chrono.BasicYearDateTimeField@getDifferenceAsLong(long,long):89:minuendInstant < subtrahendInstant |==> minuendInstant != subtrahendInstant
8957:ROR:<(long,long):<=(long,long):org.joda.time.chrono.BasicYearDateTimeField@getDifferenceAsLong(long,long):89:minuendInstant < subtrahendInstant |==> minuendInstant <= subtrahendInstant
8958:ROR:<(long,long):FALSE(long,long):org.joda.time.chrono.BasicYearDateTimeField@getDifferenceAsLong(long,long):89:minuendInstant < subtrahendInstant |==> false
8959:ORU:-(long):+(long):org.joda.time.chrono.BasicYearDateTimeField@getDifferenceAsLong(long,long):90:-iChronology.getYearDifference(subtrahendInstant, minuendInstant) |==> +iChronology.getYearDifference(subtrahendInstant, minuendInstant)
8960:ORU:-(long):~(long):org.joda.time.chrono.BasicYearDateTimeField@getDifferenceAsLong(long,long):90:-iChronology.getYearDifference(subtrahendInstant, minuendInstant) |==> ~iChronology.getYearDifference(subtrahendInstant, minuendInstant)
8961:COR:iChronology.isLeapYear(get(instant)):TRUE:org.joda.time.chrono.BasicYearDateTimeField@getLeapAmount(long):104:iChronology.isLeapYear(get(instant)) |==> false
8962:COR:iChronology.isLeapYear(get(instant)):FALSE:org.joda.time.chrono.BasicYearDateTimeField@getLeapAmount(long):104:iChronology.isLeapYear(get(instant)) |==> true
8963:LVR:POS:0:org.joda.time.chrono.BasicYearDateTimeField@getLeapAmount(long):105:1 |==> 0
8964:LVR:POS:NEG:org.joda.time.chrono.BasicYearDateTimeField@getLeapAmount(long):105:1 |==> -1
8965:LVR:0:POS:org.joda.time.chrono.BasicYearDateTimeField@getLeapAmount(long):107:0 |==> 1
8966:LVR:0:NEG:org.joda.time.chrono.BasicYearDateTimeField@getLeapAmount(long):107:0 |==> -1
8967:ROR:!=(long,long):<(long,long):org.joda.time.chrono.BasicYearDateTimeField@roundCeiling(long):130:instant != yearStartMillis |==> instant < yearStartMillis
8968:ROR:!=(long,long):>(long,long):org.joda.time.chrono.BasicYearDateTimeField@roundCeiling(long):130:instant != yearStartMillis |==> instant > yearStartMillis
8969:ROR:!=(long,long):TRUE(long,long):org.joda.time.chrono.BasicYearDateTimeField@roundCeiling(long):130:instant != yearStartMillis |==> true
8970:LVR:POS:0:org.joda.time.chrono.BasicYearDateTimeField@roundCeiling(long):132:1 |==> 0
8971:LVR:POS:NEG:org.joda.time.chrono.BasicYearDateTimeField@roundCeiling(long):132:1 |==> -1
8972:AOR:+(int,int):%(int,int):org.joda.time.chrono.BasicYearDateTimeField@roundCeiling(long):132:year + 1 |==> year % 1
8973:AOR:+(int,int):*(int,int):org.joda.time.chrono.BasicYearDateTimeField@roundCeiling(long):132:year + 1 |==> year * 1
8974:AOR:+(int,int):-(int,int):org.joda.time.chrono.BasicYearDateTimeField@roundCeiling(long):132:year + 1 |==> year - 1
8975:AOR:+(int,int):/(int,int):org.joda.time.chrono.BasicYearDateTimeField@roundCeiling(long):132:year + 1 |==> year / 1
8976:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BasicYearDateTimeField@roundCeiling(long):132:instant = iChronology.getYearMillis(year + 1) |==> <NO-OP>
8977:AOR:-(long,long):%(long,long):org.joda.time.chrono.BasicYearDateTimeField@remainder(long):138:instant - roundFloor(instant) |==> instant % roundFloor(instant)
8978:AOR:-(long,long):*(long,long):org.joda.time.chrono.BasicYearDateTimeField@remainder(long):138:instant - roundFloor(instant) |==> instant * roundFloor(instant)
8979:AOR:-(long,long):+(long,long):org.joda.time.chrono.BasicYearDateTimeField@remainder(long):138:instant - roundFloor(instant) |==> instant + roundFloor(instant)
8980:AOR:-(long,long):/(long,long):org.joda.time.chrono.BasicYearDateTimeField@remainder(long):138:instant - roundFloor(instant) |==> instant / roundFloor(instant)
8981:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.BuddhistChronology@getInstance(org.joda.time.DateTimeZone):106:zone == null |==> false
8982:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BuddhistChronology@getInstance(org.joda.time.DateTimeZone):107:zone = DateTimeZone.getDefault() |==> <NO-OP>
8983:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.BuddhistChronology@getInstance(org.joda.time.DateTimeZone):112:chrono == null |==> false
8984:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BuddhistChronology@getInstance(org.joda.time.DateTimeZone):114:chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null) |==> <NO-OP>
8985:LVR:POS:0:org.joda.time.chrono.BuddhistChronology@getInstance(org.joda.time.DateTimeZone):116:1 |==> 0
8986:LVR:POS:NEG:org.joda.time.chrono.BuddhistChronology@getInstance(org.joda.time.DateTimeZone):116:1 |==> -1
8987:LVR:POS:0:org.joda.time.chrono.BuddhistChronology@getInstance(org.joda.time.DateTimeZone):116:1 |==> 0
8988:LVR:POS:NEG:org.joda.time.chrono.BuddhistChronology@getInstance(org.joda.time.DateTimeZone):116:1 |==> -1
8989:LVR:POS:0:org.joda.time.chrono.BuddhistChronology@getInstance(org.joda.time.DateTimeZone):116:1 |==> 0
8990:LVR:POS:NEG:org.joda.time.chrono.BuddhistChronology@getInstance(org.joda.time.DateTimeZone):116:1 |==> -1
8991:LVR:0:POS:org.joda.time.chrono.BuddhistChronology@getInstance(org.joda.time.DateTimeZone):116:0 |==> 1
8992:LVR:0:NEG:org.joda.time.chrono.BuddhistChronology@getInstance(org.joda.time.DateTimeZone):116:0 |==> -1
8993:LVR:0:POS:org.joda.time.chrono.BuddhistChronology@getInstance(org.joda.time.DateTimeZone):116:0 |==> 1
8994:LVR:0:NEG:org.joda.time.chrono.BuddhistChronology@getInstance(org.joda.time.DateTimeZone):116:0 |==> -1
8995:LVR:0:POS:org.joda.time.chrono.BuddhistChronology@getInstance(org.joda.time.DateTimeZone):116:0 |==> 1
8996:LVR:0:NEG:org.joda.time.chrono.BuddhistChronology@getInstance(org.joda.time.DateTimeZone):116:0 |==> -1
8997:LVR:0:POS:org.joda.time.chrono.BuddhistChronology@getInstance(org.joda.time.DateTimeZone):116:0 |==> 1
8998:LVR:0:NEG:org.joda.time.chrono.BuddhistChronology@getInstance(org.joda.time.DateTimeZone):116:0 |==> -1
8999:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BuddhistChronology@getInstance(org.joda.time.DateTimeZone):117:chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), "") |==> <NO-OP>
9000:STD:<CALL>:<NO-OP>:org.joda.time.chrono.BuddhistChronology@getInstance(org.joda.time.DateTimeZone):118:cCache.put(zone, chrono) |==> <NO-OP>
9001:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.BuddhistChronology@readResolve():141:base == null |==> false
9002:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.BuddhistChronology@withZone(org.joda.time.DateTimeZone):162:zone == null |==> false
9003:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BuddhistChronology@withZone(org.joda.time.DateTimeZone):163:zone = DateTimeZone.getDefault() |==> <NO-OP>
9004:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.BuddhistChronology@withZone(org.joda.time.DateTimeZone):165:zone == getZone() |==> false
9005:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.BuddhistChronology@equals(java.lang.Object):180:this == obj |==> false
9006:LVR:TRUE:FALSE:org.joda.time.chrono.BuddhistChronology@equals(java.lang.Object):181:true |==> false
9007:LVR:FALSE:TRUE:org.joda.time.chrono.BuddhistChronology@equals(java.lang.Object):187:false |==> true
9008:LVR:POS:0:org.joda.time.chrono.BuddhistChronology@hashCode():197:11 |==> 0
9009:LVR:POS:NEG:org.joda.time.chrono.BuddhistChronology@hashCode():197:11 |==> -11
9010:AOR:*(int,int):%(int,int):org.joda.time.chrono.BuddhistChronology@hashCode():197:"Buddhist".hashCode() * 11 |==> "Buddhist".hashCode() % 11
9011:AOR:*(int,int):+(int,int):org.joda.time.chrono.BuddhistChronology@hashCode():197:"Buddhist".hashCode() * 11 |==> "Buddhist".hashCode() + 11
9012:AOR:*(int,int):-(int,int):org.joda.time.chrono.BuddhistChronology@hashCode():197:"Buddhist".hashCode() * 11 |==> "Buddhist".hashCode() - 11
9013:AOR:*(int,int):/(int,int):org.joda.time.chrono.BuddhistChronology@hashCode():197:"Buddhist".hashCode() * 11 |==> "Buddhist".hashCode() / 11
9014:AOR:+(int,int):%(int,int):org.joda.time.chrono.BuddhistChronology@hashCode():197:"Buddhist".hashCode() * 11 + getZone().hashCode() |==> "Buddhist".hashCode() * 11 % getZone().hashCode()
9015:AOR:+(int,int):*(int,int):org.joda.time.chrono.BuddhistChronology@hashCode():197:"Buddhist".hashCode() * 11 + getZone().hashCode() |==> "Buddhist".hashCode() * 11 * getZone().hashCode()
9016:AOR:+(int,int):-(int,int):org.joda.time.chrono.BuddhistChronology@hashCode():197:"Buddhist".hashCode() * 11 + getZone().hashCode() |==> "Buddhist".hashCode() * 11 - getZone().hashCode()
9017:AOR:+(int,int):/(int,int):org.joda.time.chrono.BuddhistChronology@hashCode():197:"Buddhist".hashCode() * 11 + getZone().hashCode() |==> "Buddhist".hashCode() * 11 / getZone().hashCode()
9018:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.BuddhistChronology@toString():210:zone != null |==> true
9019:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BuddhistChronology@toString():211:str = str + '[' + zone.getID() + ']' |==> <NO-OP>
9020:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.BuddhistChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):217:getParam() == null |==> false
9021:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BuddhistChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):219:fields.eras = UnsupportedDurationField.getInstance(DurationFieldType.eras()) |==> <NO-OP>
9022:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BuddhistChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):223:fields.year = new OffsetDateTimeField(new SkipUndoDateTimeField(this, field), BUDDHIST_OFFSET) |==> <NO-OP>
9023:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BuddhistChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):227:field = fields.yearOfEra |==> <NO-OP>
9024:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BuddhistChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):228:fields.yearOfEra = new DelegatedDateTimeField(fields.year, fields.eras, DateTimeFieldType.yearOfEra()) |==> <NO-OP>
9025:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BuddhistChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):232:field = fields.weekyear |==> <NO-OP>
9026:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BuddhistChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):233:fields.weekyear = new OffsetDateTimeField(new SkipUndoDateTimeField(this, field), BUDDHIST_OFFSET) |==> <NO-OP>
9027:LVR:POS:0:org.joda.time.chrono.BuddhistChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):236:99 |==> 0
9028:LVR:POS:NEG:org.joda.time.chrono.BuddhistChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):236:99 |==> -99
9029:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BuddhistChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):236:field = new OffsetDateTimeField(fields.yearOfEra, 99) |==> <NO-OP>
9030:LVR:POS:0:org.joda.time.chrono.BuddhistChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):238:100 |==> 0
9031:LVR:POS:NEG:org.joda.time.chrono.BuddhistChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):238:100 |==> -100
9032:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BuddhistChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):237:fields.centuryOfEra = new DividedDateTimeField(field, fields.eras, DateTimeFieldType.centuryOfEra(), 100) |==> <NO-OP>
9033:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BuddhistChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):239:fields.centuries = fields.centuryOfEra.getDurationField() |==> <NO-OP>
9034:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BuddhistChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):241:field = new RemainderDateTimeField((DividedDateTimeField)fields.centuryOfEra) |==> <NO-OP>
9035:LVR:POS:0:org.joda.time.chrono.BuddhistChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):244:1 |==> 0
9036:LVR:POS:NEG:org.joda.time.chrono.BuddhistChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):244:1 |==> -1
9037:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BuddhistChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):243:fields.yearOfCentury = new OffsetDateTimeField(field, DateTimeFieldType.yearOfCentury(), 1) |==> <NO-OP>
9038:LVR:POS:0:org.joda.time.chrono.BuddhistChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):247:100 |==> 0
9039:LVR:POS:NEG:org.joda.time.chrono.BuddhistChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):247:100 |==> -100
9040:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BuddhistChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):246:field = new RemainderDateTimeField(fields.weekyear, fields.centuries, DateTimeFieldType.weekyearOfCentury(), 100) |==> <NO-OP>
9041:LVR:POS:0:org.joda.time.chrono.BuddhistChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):249:1 |==> 0
9042:LVR:POS:NEG:org.joda.time.chrono.BuddhistChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):249:1 |==> -1
9043:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BuddhistChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):248:fields.weekyearOfCentury = new OffsetDateTimeField(field, DateTimeFieldType.weekyearOfCentury(), 1) |==> <NO-OP>
9044:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.BuddhistChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):251:fields.era = ERA_FIELD |==> <NO-OP>
9045:LVR:POS:0:org.joda.time.chrono.CopticChronology@getInstance():98:4 |==> 0
9046:LVR:POS:NEG:org.joda.time.chrono.CopticChronology@getInstance():98:4 |==> -4
9047:LVR:POS:0:org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone):108:4 |==> 0
9048:LVR:POS:NEG:org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone):108:4 |==> -4
9049:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):119:zone == null |==> false
9050:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):120:zone = DateTimeZone.getDefault() |==> <NO-OP>
9051:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):125:chronos == null |==> false
9052:LVR:POS:0:org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):126:7 |==> 0
9053:LVR:POS:NEG:org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):126:7 |==> -7
9054:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):126:chronos = new CopticChronology[7] |==> <NO-OP>
9055:STD:<CALL>:<NO-OP>:org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):127:cCache.put(zone, chronos) |==> <NO-OP>
9056:LVR:POS:0:org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):130:1 |==> 0
9057:LVR:POS:NEG:org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):130:1 |==> -1
9058:AOR:-(int,int):%(int,int):org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):130:minDaysInFirstWeek - 1 |==> minDaysInFirstWeek % 1
9059:AOR:-(int,int):*(int,int):org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):130:minDaysInFirstWeek - 1 |==> minDaysInFirstWeek * 1
9060:AOR:-(int,int):+(int,int):org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):130:minDaysInFirstWeek - 1 |==> minDaysInFirstWeek + 1
9061:AOR:-(int,int):/(int,int):org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):130:minDaysInFirstWeek - 1 |==> minDaysInFirstWeek / 1
9062:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):135:chrono == null |==> false
9063:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):136:zone == DateTimeZone.UTC |==> false
9064:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):138:chrono = new CopticChronology(null, null, minDaysInFirstWeek) |==> <NO-OP>
9065:LVR:POS:0:org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):140:1 |==> 0
9066:LVR:POS:NEG:org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):140:1 |==> -1
9067:LVR:POS:0:org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):140:1 |==> 0
9068:LVR:POS:NEG:org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):140:1 |==> -1
9069:LVR:POS:0:org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):140:1 |==> 0
9070:LVR:POS:NEG:org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):140:1 |==> -1
9071:LVR:0:POS:org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):140:0 |==> 1
9072:LVR:0:NEG:org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):140:0 |==> -1
9073:LVR:0:POS:org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):140:0 |==> 1
9074:LVR:0:NEG:org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):140:0 |==> -1
9075:LVR:0:POS:org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):140:0 |==> 1
9076:LVR:0:NEG:org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):140:0 |==> -1
9077:LVR:0:POS:org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):140:0 |==> 1
9078:LVR:0:NEG:org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):140:0 |==> -1
9079:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):141:chrono = new CopticChronology(LimitChronology.getInstance(chrono, lowerLimit, null), null, minDaysInFirstWeek) |==> <NO-OP>
9080:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):145:chrono = getInstance(DateTimeZone.UTC, minDaysInFirstWeek) |==> <NO-OP>
9081:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):146:chrono = new CopticChronology(ZonedChronology.getInstance(chrono, zone), null, minDaysInFirstWeek) |==> <NO-OP>
9082:LVR:POS:0:org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):149:1 |==> 0
9083:LVR:POS:NEG:org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):149:1 |==> -1
9084:AOR:-(int,int):%(int,int):org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):149:minDaysInFirstWeek - 1 |==> minDaysInFirstWeek % 1
9085:AOR:-(int,int):*(int,int):org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):149:minDaysInFirstWeek - 1 |==> minDaysInFirstWeek * 1
9086:AOR:-(int,int):+(int,int):org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):149:minDaysInFirstWeek - 1 |==> minDaysInFirstWeek + 1
9087:AOR:-(int,int):/(int,int):org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):149:minDaysInFirstWeek - 1 |==> minDaysInFirstWeek / 1
9088:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.CopticChronology@getInstance(org.joda.time.DateTimeZone,int):149:chronos[minDaysInFirstWeek - 1] = chrono |==> <NO-OP>
9089:LVR:0:POS:org.joda.time.chrono.CopticChronology@readResolve():170:0 |==> 1
9090:LVR:0:NEG:org.joda.time.chrono.CopticChronology@readResolve():170:0 |==> -1
9091:ROR:==(int,int):<=(int,int):org.joda.time.chrono.CopticChronology@readResolve():170:minDays == 0 |==> minDays <= 0
9092:ROR:==(int,int):>=(int,int):org.joda.time.chrono.CopticChronology@readResolve():170:minDays == 0 |==> minDays >= 0
9093:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.CopticChronology@readResolve():170:minDays == 0 |==> false
9094:LVR:POS:0:org.joda.time.chrono.CopticChronology@readResolve():170:4 |==> 0
9095:LVR:POS:NEG:org.joda.time.chrono.CopticChronology@readResolve():170:4 |==> -4
9096:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.CopticChronology@readResolve():170:minDays = (minDays == 0 ? 4 : minDays) |==> <NO-OP>
9097:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.CopticChronology@readResolve():171:base == null |==> false
9098:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.CopticChronology@withZone(org.joda.time.DateTimeZone):194:zone == null |==> false
9099:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.CopticChronology@withZone(org.joda.time.DateTimeZone):195:zone = DateTimeZone.getDefault() |==> <NO-OP>
9100:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.CopticChronology@withZone(org.joda.time.DateTimeZone):197:zone == getZone() |==> false
9101:LVR:POS:0:org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):209:1687 |==> 0
9102:LVR:POS:NEG:org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):209:1687 |==> -1687
9103:AOR:-(int,int):%(int,int):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):209:year - 1687 |==> year % 1687
9104:AOR:-(int,int):*(int,int):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):209:year - 1687 |==> year * 1687
9105:AOR:-(int,int):+(int,int):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):209:year - 1687 |==> year + 1687
9106:AOR:-(int,int):/(int,int):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):209:year - 1687 |==> year / 1687
9107:LVR:0:POS:org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):211:0 |==> 1
9108:LVR:0:NEG:org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):211:0 |==> -1
9109:ROR:<=(int,int):<(int,int):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):211:relativeYear <= 0 |==> relativeYear < 0
9110:ROR:<=(int,int):==(int,int):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):211:relativeYear <= 0 |==> relativeYear == 0
9111:ROR:<=(int,int):TRUE(int,int):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):211:relativeYear <= 0 |==> true
9112:LVR:POS:0:org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):214:3 |==> 0
9113:LVR:POS:NEG:org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):214:3 |==> -3
9114:AOR:+(int,int):%(int,int):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):214:relativeYear + 3 |==> relativeYear % 3
9115:AOR:+(int,int):*(int,int):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):214:relativeYear + 3 |==> relativeYear * 3
9116:AOR:+(int,int):-(int,int):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):214:relativeYear + 3 |==> relativeYear - 3
9117:AOR:+(int,int):/(int,int):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):214:relativeYear + 3 |==> relativeYear / 3
9118:LVR:POS:0:org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):214:2 |==> 0
9119:LVR:POS:NEG:org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):214:2 |==> -2
9120:SOR:>>(int,int):<<(int,int):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):214:(relativeYear + 3) >> 2 |==> (relativeYear + 3) << 2
9121:SOR:>>(int,int):>>>(int,int):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):214:(relativeYear + 3) >> 2 |==> (relativeYear + 3) >>> 2
9122:LVR:POS:0:org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):216:2 |==> 0
9123:LVR:POS:NEG:org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):216:2 |==> -2
9124:SOR:>>(int,int):<<(int,int):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):216:relativeYear >> 2 |==> relativeYear << 2
9125:SOR:>>(int,int):>>>(int,int):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):216:relativeYear >> 2 |==> relativeYear >>> 2
9126:COR:isLeapYear(year):TRUE:org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):218:isLeapYear(year) |==> false
9127:COR:isLeapYear(year):FALSE:org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):218:isLeapYear(year) |==> true
9128:STD:<INC>:<NO-OP>:org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):219:leapYears++ |==> <NO-OP>
9129:LVR:POS:0:org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):223:365L |==> 0L
9130:LVR:POS:NEG:org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):223:365L |==> -365L
9131:AOR:*(long,long):%(long,long):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):223:relativeYear * 365L |==> relativeYear % 365L
9132:AOR:*(long,long):+(long,long):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):223:relativeYear * 365L |==> relativeYear + 365L
9133:AOR:*(long,long):-(long,long):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):223:relativeYear * 365L |==> relativeYear - 365L
9134:AOR:*(long,long):/(long,long):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):223:relativeYear * 365L |==> relativeYear / 365L
9135:AOR:+(long,long):%(long,long):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):223:relativeYear * 365L + leapYears |==> relativeYear * 365L % leapYears
9136:AOR:+(long,long):*(long,long):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):223:relativeYear * 365L + leapYears |==> relativeYear * 365L * leapYears
9137:AOR:+(long,long):-(long,long):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):223:relativeYear * 365L + leapYears |==> relativeYear * 365L - leapYears
9138:AOR:+(long,long):/(long,long):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):223:relativeYear * 365L + leapYears |==> relativeYear * 365L / leapYears
9139:AOR:*(long,long):%(long,long):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):223:(relativeYear * 365L + leapYears) * (long)DateTimeConstants.MILLIS_PER_DAY |==> (relativeYear * 365L + leapYears) % (long)DateTimeConstants.MILLIS_PER_DAY
9140:AOR:*(long,long):+(long,long):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):223:(relativeYear * 365L + leapYears) * (long)DateTimeConstants.MILLIS_PER_DAY |==> (relativeYear * 365L + leapYears) + (long)DateTimeConstants.MILLIS_PER_DAY
9141:AOR:*(long,long):-(long,long):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):223:(relativeYear * 365L + leapYears) * (long)DateTimeConstants.MILLIS_PER_DAY |==> (relativeYear * 365L + leapYears) - (long)DateTimeConstants.MILLIS_PER_DAY
9142:AOR:*(long,long):/(long,long):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):223:(relativeYear * 365L + leapYears) * (long)DateTimeConstants.MILLIS_PER_DAY |==> (relativeYear * 365L + leapYears) / (long)DateTimeConstants.MILLIS_PER_DAY
9143:LVR:POS:0:org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):228:365L |==> 0L
9144:LVR:POS:NEG:org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):228:365L |==> -365L
9145:LVR:POS:0:org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):228:112 |==> 0
9146:LVR:POS:NEG:org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):228:112 |==> -112
9147:AOR:-(long,long):%(long,long):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):228:365L - 112 |==> 365L % 112
9148:AOR:-(long,long):*(long,long):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):228:365L - 112 |==> 365L * 112
9149:AOR:-(long,long):+(long,long):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):228:365L - 112 |==> 365L + 112
9150:AOR:-(long,long):/(long,long):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):228:365L - 112 |==> 365L / 112
9151:AOR:*(long,long):%(long,long):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):228:(365L - 112) * DateTimeConstants.MILLIS_PER_DAY |==> (365L - 112) % DateTimeConstants.MILLIS_PER_DAY
9152:AOR:*(long,long):+(long,long):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):228:(365L - 112) * DateTimeConstants.MILLIS_PER_DAY |==> (365L - 112) + DateTimeConstants.MILLIS_PER_DAY
9153:AOR:*(long,long):-(long,long):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):228:(365L - 112) * DateTimeConstants.MILLIS_PER_DAY |==> (365L - 112) - DateTimeConstants.MILLIS_PER_DAY
9154:AOR:*(long,long):/(long,long):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):228:(365L - 112) * DateTimeConstants.MILLIS_PER_DAY |==> (365L - 112) / DateTimeConstants.MILLIS_PER_DAY
9155:AOR:+(long,long):%(long,long):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):228:millis + (365L - 112) * DateTimeConstants.MILLIS_PER_DAY |==> millis % ((365L - 112) * DateTimeConstants.MILLIS_PER_DAY)
9156:AOR:+(long,long):*(long,long):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):228:millis + (365L - 112) * DateTimeConstants.MILLIS_PER_DAY |==> millis * ((365L - 112) * DateTimeConstants.MILLIS_PER_DAY)
9157:AOR:+(long,long):-(long,long):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):228:millis + (365L - 112) * DateTimeConstants.MILLIS_PER_DAY |==> millis - (365L - 112) * DateTimeConstants.MILLIS_PER_DAY
9158:AOR:+(long,long):/(long,long):org.joda.time.chrono.CopticChronology@calculateFirstDayOfYearMillis(int):228:millis + (365L - 112) * DateTimeConstants.MILLIS_PER_DAY |==> millis / ((365L - 112) * DateTimeConstants.MILLIS_PER_DAY)
9159:LVR:POS:0:org.joda.time.chrono.CopticChronology@getApproxMillisAtEpochDividedByTwo():243:1686L |==> 0L
9160:LVR:POS:NEG:org.joda.time.chrono.CopticChronology@getApproxMillisAtEpochDividedByTwo():243:1686L |==> -1686L
9161:AOR:*(long,long):%(long,long):org.joda.time.chrono.CopticChronology@getApproxMillisAtEpochDividedByTwo():243:1686L * MILLIS_PER_YEAR |==> 1686L % MILLIS_PER_YEAR
9162:AOR:*(long,long):+(long,long):org.joda.time.chrono.CopticChronology@getApproxMillisAtEpochDividedByTwo():243:1686L * MILLIS_PER_YEAR |==> 1686L + MILLIS_PER_YEAR
9163:AOR:*(long,long):-(long,long):org.joda.time.chrono.CopticChronology@getApproxMillisAtEpochDividedByTwo():243:1686L * MILLIS_PER_YEAR |==> 1686L - MILLIS_PER_YEAR
9164:AOR:*(long,long):/(long,long):org.joda.time.chrono.CopticChronology@getApproxMillisAtEpochDividedByTwo():243:1686L * MILLIS_PER_YEAR |==> 1686L / MILLIS_PER_YEAR
9165:LVR:POS:0:org.joda.time.chrono.CopticChronology@getApproxMillisAtEpochDividedByTwo():243:112L |==> 0L
9166:LVR:POS:NEG:org.joda.time.chrono.CopticChronology@getApproxMillisAtEpochDividedByTwo():243:112L |==> -112L
9167:AOR:*(long,long):%(long,long):org.joda.time.chrono.CopticChronology@getApproxMillisAtEpochDividedByTwo():243:112L * DateTimeConstants.MILLIS_PER_DAY |==> 112L % DateTimeConstants.MILLIS_PER_DAY
9168:AOR:*(long,long):+(long,long):org.joda.time.chrono.CopticChronology@getApproxMillisAtEpochDividedByTwo():243:112L * DateTimeConstants.MILLIS_PER_DAY |==> 112L + DateTimeConstants.MILLIS_PER_DAY
9169:AOR:*(long,long):-(long,long):org.joda.time.chrono.CopticChronology@getApproxMillisAtEpochDividedByTwo():243:112L * DateTimeConstants.MILLIS_PER_DAY |==> 112L - DateTimeConstants.MILLIS_PER_DAY
9170:AOR:*(long,long):/(long,long):org.joda.time.chrono.CopticChronology@getApproxMillisAtEpochDividedByTwo():243:112L * DateTimeConstants.MILLIS_PER_DAY |==> 112L / DateTimeConstants.MILLIS_PER_DAY
9171:AOR:+(long,long):%(long,long):org.joda.time.chrono.CopticChronology@getApproxMillisAtEpochDividedByTwo():243:1686L * MILLIS_PER_YEAR + 112L * DateTimeConstants.MILLIS_PER_DAY |==> 1686L * MILLIS_PER_YEAR % (112L * DateTimeConstants.MILLIS_PER_DAY)
9172:AOR:+(long,long):*(long,long):org.joda.time.chrono.CopticChronology@getApproxMillisAtEpochDividedByTwo():243:1686L * MILLIS_PER_YEAR + 112L * DateTimeConstants.MILLIS_PER_DAY |==> 1686L * MILLIS_PER_YEAR * (112L * DateTimeConstants.MILLIS_PER_DAY)
9173:AOR:+(long,long):-(long,long):org.joda.time.chrono.CopticChronology@getApproxMillisAtEpochDividedByTwo():243:1686L * MILLIS_PER_YEAR + 112L * DateTimeConstants.MILLIS_PER_DAY |==> 1686L * MILLIS_PER_YEAR - 112L * DateTimeConstants.MILLIS_PER_DAY
9174:AOR:+(long,long):/(long,long):org.joda.time.chrono.CopticChronology@getApproxMillisAtEpochDividedByTwo():243:1686L * MILLIS_PER_YEAR + 112L * DateTimeConstants.MILLIS_PER_DAY |==> 1686L * MILLIS_PER_YEAR / (112L * DateTimeConstants.MILLIS_PER_DAY)
9175:LVR:POS:0:org.joda.time.chrono.CopticChronology@getApproxMillisAtEpochDividedByTwo():243:2 |==> 0
9176:LVR:POS:NEG:org.joda.time.chrono.CopticChronology@getApproxMillisAtEpochDividedByTwo():243:2 |==> -2
9177:AOR:/(long,long):%(long,long):org.joda.time.chrono.CopticChronology@getApproxMillisAtEpochDividedByTwo():243:(1686L * MILLIS_PER_YEAR + 112L * DateTimeConstants.MILLIS_PER_DAY) / 2 |==> (1686L * MILLIS_PER_YEAR + 112L * DateTimeConstants.MILLIS_PER_DAY) % 2
9178:AOR:/(long,long):*(long,long):org.joda.time.chrono.CopticChronology@getApproxMillisAtEpochDividedByTwo():243:(1686L * MILLIS_PER_YEAR + 112L * DateTimeConstants.MILLIS_PER_DAY) / 2 |==> (1686L * MILLIS_PER_YEAR + 112L * DateTimeConstants.MILLIS_PER_DAY) * 2
9179:AOR:/(long,long):+(long,long):org.joda.time.chrono.CopticChronology@getApproxMillisAtEpochDividedByTwo():243:(1686L * MILLIS_PER_YEAR + 112L * DateTimeConstants.MILLIS_PER_DAY) / 2 |==> (1686L * MILLIS_PER_YEAR + 112L * DateTimeConstants.MILLIS_PER_DAY) + 2
9180:AOR:/(long,long):-(long,long):org.joda.time.chrono.CopticChronology@getApproxMillisAtEpochDividedByTwo():243:(1686L * MILLIS_PER_YEAR + 112L * DateTimeConstants.MILLIS_PER_DAY) / 2 |==> (1686L * MILLIS_PER_YEAR + 112L * DateTimeConstants.MILLIS_PER_DAY) - 2
9181:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.CopticChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):248:getBase() == null |==> false
9182:STD:<CALL>:<NO-OP>:org.joda.time.chrono.CopticChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):249:super.assemble(fields) |==> <NO-OP>
9183:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.CopticChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):252:fields.year = new SkipDateTimeField(this, fields.year) |==> <NO-OP>
9184:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.CopticChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):253:fields.weekyear = new SkipDateTimeField(this, fields.weekyear) |==> <NO-OP>
9185:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.CopticChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):255:fields.era = ERA_FIELD |==> <NO-OP>
9186:LVR:POS:0:org.joda.time.chrono.CopticChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):256:13 |==> 0
9187:LVR:POS:NEG:org.joda.time.chrono.CopticChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):256:13 |==> -13
9188:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.CopticChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):256:fields.monthOfYear = new BasicMonthOfYearDateTimeField(this, 13) |==> <NO-OP>
9189:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.CopticChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):257:fields.months = fields.monthOfYear.getDurationField() |==> <NO-OP>
9190:LVR:POS:0:org.joda.time.chrono.EthiopicChronology@getInstance():98:4 |==> 0
9191:LVR:POS:NEG:org.joda.time.chrono.EthiopicChronology@getInstance():98:4 |==> -4
9192:LVR:POS:0:org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone):108:4 |==> 0
9193:LVR:POS:NEG:org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone):108:4 |==> -4
9194:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):119:zone == null |==> false
9195:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):120:zone = DateTimeZone.getDefault() |==> <NO-OP>
9196:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):125:chronos == null |==> false
9197:LVR:POS:0:org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):126:7 |==> 0
9198:LVR:POS:NEG:org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):126:7 |==> -7
9199:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):126:chronos = new EthiopicChronology[7] |==> <NO-OP>
9200:STD:<CALL>:<NO-OP>:org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):127:cCache.put(zone, chronos) |==> <NO-OP>
9201:LVR:POS:0:org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):130:1 |==> 0
9202:LVR:POS:NEG:org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):130:1 |==> -1
9203:AOR:-(int,int):%(int,int):org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):130:minDaysInFirstWeek - 1 |==> minDaysInFirstWeek % 1
9204:AOR:-(int,int):*(int,int):org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):130:minDaysInFirstWeek - 1 |==> minDaysInFirstWeek * 1
9205:AOR:-(int,int):+(int,int):org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):130:minDaysInFirstWeek - 1 |==> minDaysInFirstWeek + 1
9206:AOR:-(int,int):/(int,int):org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):130:minDaysInFirstWeek - 1 |==> minDaysInFirstWeek / 1
9207:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):135:chrono == null |==> false
9208:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):136:zone == DateTimeZone.UTC |==> false
9209:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):138:chrono = new EthiopicChronology(null, null, minDaysInFirstWeek) |==> <NO-OP>
9210:LVR:POS:0:org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):140:1 |==> 0
9211:LVR:POS:NEG:org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):140:1 |==> -1
9212:LVR:POS:0:org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):140:1 |==> 0
9213:LVR:POS:NEG:org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):140:1 |==> -1
9214:LVR:POS:0:org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):140:1 |==> 0
9215:LVR:POS:NEG:org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):140:1 |==> -1
9216:LVR:0:POS:org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):140:0 |==> 1
9217:LVR:0:NEG:org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):140:0 |==> -1
9218:LVR:0:POS:org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):140:0 |==> 1
9219:LVR:0:NEG:org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):140:0 |==> -1
9220:LVR:0:POS:org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):140:0 |==> 1
9221:LVR:0:NEG:org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):140:0 |==> -1
9222:LVR:0:POS:org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):140:0 |==> 1
9223:LVR:0:NEG:org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):140:0 |==> -1
9224:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):141:chrono = new EthiopicChronology(LimitChronology.getInstance(chrono, lowerLimit, null), null, minDaysInFirstWeek) |==> <NO-OP>
9225:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):145:chrono = getInstance(DateTimeZone.UTC, minDaysInFirstWeek) |==> <NO-OP>
9226:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):146:chrono = new EthiopicChronology(ZonedChronology.getInstance(chrono, zone), null, minDaysInFirstWeek) |==> <NO-OP>
9227:LVR:POS:0:org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):149:1 |==> 0
9228:LVR:POS:NEG:org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):149:1 |==> -1
9229:AOR:-(int,int):%(int,int):org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):149:minDaysInFirstWeek - 1 |==> minDaysInFirstWeek % 1
9230:AOR:-(int,int):*(int,int):org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):149:minDaysInFirstWeek - 1 |==> minDaysInFirstWeek * 1
9231:AOR:-(int,int):+(int,int):org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):149:minDaysInFirstWeek - 1 |==> minDaysInFirstWeek + 1
9232:AOR:-(int,int):/(int,int):org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):149:minDaysInFirstWeek - 1 |==> minDaysInFirstWeek / 1
9233:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.EthiopicChronology@getInstance(org.joda.time.DateTimeZone,int):149:chronos[minDaysInFirstWeek - 1] = chrono |==> <NO-OP>
9234:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.EthiopicChronology@readResolve():169:base == null |==> false
9235:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.EthiopicChronology@withZone(org.joda.time.DateTimeZone):192:zone == null |==> false
9236:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.EthiopicChronology@withZone(org.joda.time.DateTimeZone):193:zone = DateTimeZone.getDefault() |==> <NO-OP>
9237:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.EthiopicChronology@withZone(org.joda.time.DateTimeZone):195:zone == getZone() |==> false
9238:LVR:POS:0:org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):207:1963 |==> 0
9239:LVR:POS:NEG:org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):207:1963 |==> -1963
9240:AOR:-(int,int):%(int,int):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):207:year - 1963 |==> year % 1963
9241:AOR:-(int,int):*(int,int):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):207:year - 1963 |==> year * 1963
9242:AOR:-(int,int):+(int,int):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):207:year - 1963 |==> year + 1963
9243:AOR:-(int,int):/(int,int):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):207:year - 1963 |==> year / 1963
9244:LVR:0:POS:org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):209:0 |==> 1
9245:LVR:0:NEG:org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):209:0 |==> -1
9246:ROR:<=(int,int):<(int,int):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):209:relativeYear <= 0 |==> relativeYear < 0
9247:ROR:<=(int,int):==(int,int):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):209:relativeYear <= 0 |==> relativeYear == 0
9248:ROR:<=(int,int):TRUE(int,int):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):209:relativeYear <= 0 |==> true
9249:LVR:POS:0:org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):212:3 |==> 0
9250:LVR:POS:NEG:org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):212:3 |==> -3
9251:AOR:+(int,int):%(int,int):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):212:relativeYear + 3 |==> relativeYear % 3
9252:AOR:+(int,int):*(int,int):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):212:relativeYear + 3 |==> relativeYear * 3
9253:AOR:+(int,int):-(int,int):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):212:relativeYear + 3 |==> relativeYear - 3
9254:AOR:+(int,int):/(int,int):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):212:relativeYear + 3 |==> relativeYear / 3
9255:LVR:POS:0:org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):212:2 |==> 0
9256:LVR:POS:NEG:org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):212:2 |==> -2
9257:SOR:>>(int,int):<<(int,int):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):212:(relativeYear + 3) >> 2 |==> (relativeYear + 3) << 2
9258:SOR:>>(int,int):>>>(int,int):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):212:(relativeYear + 3) >> 2 |==> (relativeYear + 3) >>> 2
9259:LVR:POS:0:org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):214:2 |==> 0
9260:LVR:POS:NEG:org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):214:2 |==> -2
9261:SOR:>>(int,int):<<(int,int):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):214:relativeYear >> 2 |==> relativeYear << 2
9262:SOR:>>(int,int):>>>(int,int):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):214:relativeYear >> 2 |==> relativeYear >>> 2
9263:COR:isLeapYear(year):TRUE:org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):216:isLeapYear(year) |==> false
9264:COR:isLeapYear(year):FALSE:org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):216:isLeapYear(year) |==> true
9265:STD:<INC>:<NO-OP>:org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):217:leapYears++ |==> <NO-OP>
9266:LVR:POS:0:org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):221:365L |==> 0L
9267:LVR:POS:NEG:org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):221:365L |==> -365L
9268:AOR:*(long,long):%(long,long):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):221:relativeYear * 365L |==> relativeYear % 365L
9269:AOR:*(long,long):+(long,long):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):221:relativeYear * 365L |==> relativeYear + 365L
9270:AOR:*(long,long):-(long,long):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):221:relativeYear * 365L |==> relativeYear - 365L
9271:AOR:*(long,long):/(long,long):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):221:relativeYear * 365L |==> relativeYear / 365L
9272:AOR:+(long,long):%(long,long):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):221:relativeYear * 365L + leapYears |==> relativeYear * 365L % leapYears
9273:AOR:+(long,long):*(long,long):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):221:relativeYear * 365L + leapYears |==> relativeYear * 365L * leapYears
9274:AOR:+(long,long):-(long,long):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):221:relativeYear * 365L + leapYears |==> relativeYear * 365L - leapYears
9275:AOR:+(long,long):/(long,long):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):221:relativeYear * 365L + leapYears |==> relativeYear * 365L / leapYears
9276:AOR:*(long,long):%(long,long):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):221:(relativeYear * 365L + leapYears) * (long)DateTimeConstants.MILLIS_PER_DAY |==> (relativeYear * 365L + leapYears) % (long)DateTimeConstants.MILLIS_PER_DAY
9277:AOR:*(long,long):+(long,long):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):221:(relativeYear * 365L + leapYears) * (long)DateTimeConstants.MILLIS_PER_DAY |==> (relativeYear * 365L + leapYears) + (long)DateTimeConstants.MILLIS_PER_DAY
9278:AOR:*(long,long):-(long,long):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):221:(relativeYear * 365L + leapYears) * (long)DateTimeConstants.MILLIS_PER_DAY |==> (relativeYear * 365L + leapYears) - (long)DateTimeConstants.MILLIS_PER_DAY
9279:AOR:*(long,long):/(long,long):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):221:(relativeYear * 365L + leapYears) * (long)DateTimeConstants.MILLIS_PER_DAY |==> (relativeYear * 365L + leapYears) / (long)DateTimeConstants.MILLIS_PER_DAY
9280:LVR:POS:0:org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):226:365L |==> 0L
9281:LVR:POS:NEG:org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):226:365L |==> -365L
9282:LVR:POS:0:org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):226:112 |==> 0
9283:LVR:POS:NEG:org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):226:112 |==> -112
9284:AOR:-(long,long):%(long,long):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):226:365L - 112 |==> 365L % 112
9285:AOR:-(long,long):*(long,long):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):226:365L - 112 |==> 365L * 112
9286:AOR:-(long,long):+(long,long):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):226:365L - 112 |==> 365L + 112
9287:AOR:-(long,long):/(long,long):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):226:365L - 112 |==> 365L / 112
9288:AOR:*(long,long):%(long,long):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):226:(365L - 112) * DateTimeConstants.MILLIS_PER_DAY |==> (365L - 112) % DateTimeConstants.MILLIS_PER_DAY
9289:AOR:*(long,long):+(long,long):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):226:(365L - 112) * DateTimeConstants.MILLIS_PER_DAY |==> (365L - 112) + DateTimeConstants.MILLIS_PER_DAY
9290:AOR:*(long,long):-(long,long):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):226:(365L - 112) * DateTimeConstants.MILLIS_PER_DAY |==> (365L - 112) - DateTimeConstants.MILLIS_PER_DAY
9291:AOR:*(long,long):/(long,long):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):226:(365L - 112) * DateTimeConstants.MILLIS_PER_DAY |==> (365L - 112) / DateTimeConstants.MILLIS_PER_DAY
9292:AOR:+(long,long):%(long,long):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):226:millis + (365L - 112) * DateTimeConstants.MILLIS_PER_DAY |==> millis % ((365L - 112) * DateTimeConstants.MILLIS_PER_DAY)
9293:AOR:+(long,long):*(long,long):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):226:millis + (365L - 112) * DateTimeConstants.MILLIS_PER_DAY |==> millis * ((365L - 112) * DateTimeConstants.MILLIS_PER_DAY)
9294:AOR:+(long,long):-(long,long):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):226:millis + (365L - 112) * DateTimeConstants.MILLIS_PER_DAY |==> millis - (365L - 112) * DateTimeConstants.MILLIS_PER_DAY
9295:AOR:+(long,long):/(long,long):org.joda.time.chrono.EthiopicChronology@calculateFirstDayOfYearMillis(int):226:millis + (365L - 112) * DateTimeConstants.MILLIS_PER_DAY |==> millis / ((365L - 112) * DateTimeConstants.MILLIS_PER_DAY)
9296:LVR:POS:0:org.joda.time.chrono.EthiopicChronology@getApproxMillisAtEpochDividedByTwo():241:1962L |==> 0L
9297:LVR:POS:NEG:org.joda.time.chrono.EthiopicChronology@getApproxMillisAtEpochDividedByTwo():241:1962L |==> -1962L
9298:AOR:*(long,long):%(long,long):org.joda.time.chrono.EthiopicChronology@getApproxMillisAtEpochDividedByTwo():241:1962L * MILLIS_PER_YEAR |==> 1962L % MILLIS_PER_YEAR
9299:AOR:*(long,long):+(long,long):org.joda.time.chrono.EthiopicChronology@getApproxMillisAtEpochDividedByTwo():241:1962L * MILLIS_PER_YEAR |==> 1962L + MILLIS_PER_YEAR
9300:AOR:*(long,long):-(long,long):org.joda.time.chrono.EthiopicChronology@getApproxMillisAtEpochDividedByTwo():241:1962L * MILLIS_PER_YEAR |==> 1962L - MILLIS_PER_YEAR
9301:AOR:*(long,long):/(long,long):org.joda.time.chrono.EthiopicChronology@getApproxMillisAtEpochDividedByTwo():241:1962L * MILLIS_PER_YEAR |==> 1962L / MILLIS_PER_YEAR
9302:LVR:POS:0:org.joda.time.chrono.EthiopicChronology@getApproxMillisAtEpochDividedByTwo():241:112L |==> 0L
9303:LVR:POS:NEG:org.joda.time.chrono.EthiopicChronology@getApproxMillisAtEpochDividedByTwo():241:112L |==> -112L
9304:AOR:*(long,long):%(long,long):org.joda.time.chrono.EthiopicChronology@getApproxMillisAtEpochDividedByTwo():241:112L * DateTimeConstants.MILLIS_PER_DAY |==> 112L % DateTimeConstants.MILLIS_PER_DAY
9305:AOR:*(long,long):+(long,long):org.joda.time.chrono.EthiopicChronology@getApproxMillisAtEpochDividedByTwo():241:112L * DateTimeConstants.MILLIS_PER_DAY |==> 112L + DateTimeConstants.MILLIS_PER_DAY
9306:AOR:*(long,long):-(long,long):org.joda.time.chrono.EthiopicChronology@getApproxMillisAtEpochDividedByTwo():241:112L * DateTimeConstants.MILLIS_PER_DAY |==> 112L - DateTimeConstants.MILLIS_PER_DAY
9307:AOR:*(long,long):/(long,long):org.joda.time.chrono.EthiopicChronology@getApproxMillisAtEpochDividedByTwo():241:112L * DateTimeConstants.MILLIS_PER_DAY |==> 112L / DateTimeConstants.MILLIS_PER_DAY
9308:AOR:+(long,long):%(long,long):org.joda.time.chrono.EthiopicChronology@getApproxMillisAtEpochDividedByTwo():241:1962L * MILLIS_PER_YEAR + 112L * DateTimeConstants.MILLIS_PER_DAY |==> 1962L * MILLIS_PER_YEAR % (112L * DateTimeConstants.MILLIS_PER_DAY)
9309:AOR:+(long,long):*(long,long):org.joda.time.chrono.EthiopicChronology@getApproxMillisAtEpochDividedByTwo():241:1962L * MILLIS_PER_YEAR + 112L * DateTimeConstants.MILLIS_PER_DAY |==> 1962L * MILLIS_PER_YEAR * (112L * DateTimeConstants.MILLIS_PER_DAY)
9310:AOR:+(long,long):-(long,long):org.joda.time.chrono.EthiopicChronology@getApproxMillisAtEpochDividedByTwo():241:1962L * MILLIS_PER_YEAR + 112L * DateTimeConstants.MILLIS_PER_DAY |==> 1962L * MILLIS_PER_YEAR - 112L * DateTimeConstants.MILLIS_PER_DAY
9311:AOR:+(long,long):/(long,long):org.joda.time.chrono.EthiopicChronology@getApproxMillisAtEpochDividedByTwo():241:1962L * MILLIS_PER_YEAR + 112L * DateTimeConstants.MILLIS_PER_DAY |==> 1962L * MILLIS_PER_YEAR / (112L * DateTimeConstants.MILLIS_PER_DAY)
9312:LVR:POS:0:org.joda.time.chrono.EthiopicChronology@getApproxMillisAtEpochDividedByTwo():241:2 |==> 0
9313:LVR:POS:NEG:org.joda.time.chrono.EthiopicChronology@getApproxMillisAtEpochDividedByTwo():241:2 |==> -2
9314:AOR:/(long,long):%(long,long):org.joda.time.chrono.EthiopicChronology@getApproxMillisAtEpochDividedByTwo():241:(1962L * MILLIS_PER_YEAR + 112L * DateTimeConstants.MILLIS_PER_DAY) / 2 |==> (1962L * MILLIS_PER_YEAR + 112L * DateTimeConstants.MILLIS_PER_DAY) % 2
9315:AOR:/(long,long):*(long,long):org.joda.time.chrono.EthiopicChronology@getApproxMillisAtEpochDividedByTwo():241:(1962L * MILLIS_PER_YEAR + 112L * DateTimeConstants.MILLIS_PER_DAY) / 2 |==> (1962L * MILLIS_PER_YEAR + 112L * DateTimeConstants.MILLIS_PER_DAY) * 2
9316:AOR:/(long,long):+(long,long):org.joda.time.chrono.EthiopicChronology@getApproxMillisAtEpochDividedByTwo():241:(1962L * MILLIS_PER_YEAR + 112L * DateTimeConstants.MILLIS_PER_DAY) / 2 |==> (1962L * MILLIS_PER_YEAR + 112L * DateTimeConstants.MILLIS_PER_DAY) + 2
9317:AOR:/(long,long):-(long,long):org.joda.time.chrono.EthiopicChronology@getApproxMillisAtEpochDividedByTwo():241:(1962L * MILLIS_PER_YEAR + 112L * DateTimeConstants.MILLIS_PER_DAY) / 2 |==> (1962L * MILLIS_PER_YEAR + 112L * DateTimeConstants.MILLIS_PER_DAY) - 2
9318:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.EthiopicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):246:getBase() == null |==> false
9319:STD:<CALL>:<NO-OP>:org.joda.time.chrono.EthiopicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):247:super.assemble(fields) |==> <NO-OP>
9320:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.EthiopicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):250:fields.year = new SkipDateTimeField(this, fields.year) |==> <NO-OP>
9321:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.EthiopicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):251:fields.weekyear = new SkipDateTimeField(this, fields.weekyear) |==> <NO-OP>
9322:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.EthiopicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):253:fields.era = ERA_FIELD |==> <NO-OP>
9323:LVR:POS:0:org.joda.time.chrono.EthiopicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):254:13 |==> 0
9324:LVR:POS:NEG:org.joda.time.chrono.EthiopicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):254:13 |==> -13
9325:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.EthiopicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):254:fields.monthOfYear = new BasicMonthOfYearDateTimeField(this, 13) |==> <NO-OP>
9326:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.EthiopicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):255:fields.months = fields.monthOfYear.getDurationField() |==> <NO-OP>
9327:LVR:0:POS:org.joda.time.chrono.GJChronology@convertByWeekyear(long,org.joda.time.Chronology,org.joda.time.Chronology):96:0 |==> 1
9328:LVR:0:NEG:org.joda.time.chrono.GJChronology@convertByWeekyear(long,org.joda.time.Chronology,org.joda.time.Chronology):96:0 |==> -1
9329:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@convertByWeekyear(long,org.joda.time.Chronology,org.joda.time.Chronology):97:newInstant = to.weekOfWeekyear().set(newInstant, from.weekOfWeekyear().get(instant)) |==> <NO-OP>
9330:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@convertByWeekyear(long,org.joda.time.Chronology,org.joda.time.Chronology):98:newInstant = to.dayOfWeek().set(newInstant, from.dayOfWeek().get(instant)) |==> <NO-OP>
9331:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@convertByWeekyear(long,org.joda.time.Chronology,org.joda.time.Chronology):99:newInstant = to.millisOfDay().set(newInstant, from.millisOfDay().get(instant)) |==> <NO-OP>
9332:LVR:NEG:0:org.joda.time.chrono.GJChronology:106:-12219292800000L |==> 0L
9333:LVR:NEG:POS:org.joda.time.chrono.GJChronology:106:-12219292800000L |==> 12219292800000L
9334:LVR:POS:0:org.joda.time.chrono.GJChronology@getInstanceUTC():124:4 |==> 0
9335:LVR:POS:NEG:org.joda.time.chrono.GJChronology@getInstanceUTC():124:4 |==> -4
9336:LVR:POS:0:org.joda.time.chrono.GJChronology@getInstance():140:4 |==> 0
9337:LVR:POS:NEG:org.joda.time.chrono.GJChronology@getInstance():140:4 |==> -4
9338:LVR:POS:0:org.joda.time.chrono.GJChronology@getInstance(org.joda.time.DateTimeZone):156:4 |==> 0
9339:LVR:POS:NEG:org.joda.time.chrono.GJChronology@getInstance(org.joda.time.DateTimeZone):156:4 |==> -4
9340:LVR:POS:0:org.joda.time.chrono.GJChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant):174:4 |==> 0
9341:LVR:POS:NEG:org.joda.time.chrono.GJChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant):174:4 |==> -4
9342:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant,int):190:zone = DateTimeUtils.getZone(zone) |==> <NO-OP>
9343:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.GJChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant,int):192:gregorianCutover == null |==> false
9344:LVR:0:POS:org.joda.time.chrono.GJChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant,int):197:0 |==> 1
9345:LVR:0:NEG:org.joda.time.chrono.GJChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant,int):197:0 |==> -1
9346:ROR:<=(int,int):<(int,int):org.joda.time.chrono.GJChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant,int):197:cutoverDate.getYear() <= 0 |==> cutoverDate.getYear() < 0
9347:ROR:<=(int,int):==(int,int):org.joda.time.chrono.GJChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant,int):197:cutoverDate.getYear() <= 0 |==> cutoverDate.getYear() == 0
9348:ROR:<=(int,int):TRUE(int,int):org.joda.time.chrono.GJChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant,int):197:cutoverDate.getYear() <= 0 |==> true
9349:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.GJChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant,int):205:chronos == null |==> false
9350:LVR:POS:0:org.joda.time.chrono.GJChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant,int):206:2 |==> 0
9351:LVR:POS:NEG:org.joda.time.chrono.GJChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant,int):206:2 |==> -2
9352:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant,int):206:chronos = new ArrayList<GJChronology>(2) |==> <NO-OP>
9353:STD:<CALL>:<NO-OP>:org.joda.time.chrono.GJChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant,int):207:cCache.put(zone, chronos) |==> <NO-OP>
9354:LVR:0:POS:org.joda.time.chrono.GJChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant,int):209:0 |==> 1
9355:LVR:0:NEG:org.joda.time.chrono.GJChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant,int):209:0 |==> -1
9356:ROR:>=(int,int):==(int,int):org.joda.time.chrono.GJChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant,int):209:--i >= 0 |==> --i == 0
9357:ROR:>=(int,int):>(int,int):org.joda.time.chrono.GJChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant,int):209:--i >= 0 |==> --i > 0
9358:ROR:>=(int,int):TRUE(int,int):org.joda.time.chrono.GJChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant,int):209:--i >= 0 |==> true
9359:ROR:==(int,int):<=(int,int):org.joda.time.chrono.GJChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant,int):211:minDaysInFirstWeek == chrono.getMinimumDaysInFirstWeek() |==> minDaysInFirstWeek <= chrono.getMinimumDaysInFirstWeek()
9360:ROR:==(int,int):>=(int,int):org.joda.time.chrono.GJChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant,int):211:minDaysInFirstWeek == chrono.getMinimumDaysInFirstWeek() |==> minDaysInFirstWeek >= chrono.getMinimumDaysInFirstWeek()
9361:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.GJChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant,int):211:minDaysInFirstWeek == chrono.getMinimumDaysInFirstWeek() |==> false
9362:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.GJChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant,int):211:minDaysInFirstWeek == chrono.getMinimumDaysInFirstWeek() && cutoverInstant.equals(chrono.getGregorianCutover()) |==> minDaysInFirstWeek == chrono.getMinimumDaysInFirstWeek() == cutoverInstant.equals(chrono.getGregorianCutover())
9363:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.GJChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant,int):211:minDaysInFirstWeek == chrono.getMinimumDaysInFirstWeek() && cutoverInstant.equals(chrono.getGregorianCutover()) |==> false
9364:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.GJChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant,int):211:minDaysInFirstWeek == chrono.getMinimumDaysInFirstWeek() && cutoverInstant.equals(chrono.getGregorianCutover()) |==> minDaysInFirstWeek == chrono.getMinimumDaysInFirstWeek()
9365:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.GJChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant,int):212:minDaysInFirstWeek == chrono.getMinimumDaysInFirstWeek() && cutoverInstant.equals(chrono.getGregorianCutover()) |==> cutoverInstant.equals(chrono.getGregorianCutover())
9366:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.GJChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant,int):218:zone == DateTimeZone.UTC |==> false
9367:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant,int):225:chrono = new GJChronology(ZonedChronology.getInstance(chrono, zone), chrono.iJulianChronology, chrono.iGregorianChronology, chrono.iCutoverInstant) |==> <NO-OP>
9368:STD:<CALL>:<NO-OP>:org.joda.time.chrono.GJChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant,int):231:chronos.add(chrono) |==> <NO-OP>
9369:ROR:==(long,long):<=(long,long):org.joda.time.chrono.GJChronology@getInstance(org.joda.time.DateTimeZone,long,int):250:gregorianCutover == DEFAULT_CUTOVER.getMillis() |==> gregorianCutover <= DEFAULT_CUTOVER.getMillis()
9370:ROR:==(long,long):>=(long,long):org.joda.time.chrono.GJChronology@getInstance(org.joda.time.DateTimeZone,long,int):250:gregorianCutover == DEFAULT_CUTOVER.getMillis() |==> gregorianCutover >= DEFAULT_CUTOVER.getMillis()
9371:ROR:==(long,long):FALSE(long,long):org.joda.time.chrono.GJChronology@getInstance(org.joda.time.DateTimeZone,long,int):250:gregorianCutover == DEFAULT_CUTOVER.getMillis() |==> false
9372:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.GJChronology@withZone(org.joda.time.DateTimeZone):320:zone == null |==> false
9373:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@withZone(org.joda.time.DateTimeZone):321:zone = DateTimeZone.getDefault() |==> <NO-OP>
9374:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.GJChronology@withZone(org.joda.time.DateTimeZone):323:zone == getZone() |==> false
9375:ROR:<(long,long):!=(long,long):org.joda.time.chrono.GJChronology@getDateTimeMillis(int,int,int,int):341:instant < iCutoverMillis |==> instant != iCutoverMillis
9376:ROR:<(long,long):<=(long,long):org.joda.time.chrono.GJChronology@getDateTimeMillis(int,int,int,int):341:instant < iCutoverMillis |==> instant <= iCutoverMillis
9377:ROR:<(long,long):FALSE(long,long):org.joda.time.chrono.GJChronology@getDateTimeMillis(int,int,int,int):341:instant < iCutoverMillis |==> false
9378:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@getDateTimeMillis(int,int,int,int):343:instant = iJulianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth, millisOfDay) |==> <NO-OP>
9379:ROR:>=(long,long):==(long,long):org.joda.time.chrono.GJChronology@getDateTimeMillis(int,int,int,int):345:instant >= iCutoverMillis |==> instant == iCutoverMillis
9380:ROR:>=(long,long):>(long,long):org.joda.time.chrono.GJChronology@getDateTimeMillis(int,int,int,int):345:instant >= iCutoverMillis |==> instant > iCutoverMillis
9381:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.GJChronology@getDateTimeMillis(int,int,int,int):345:instant >= iCutoverMillis |==> true
9382:LVR:POS:0:org.joda.time.chrono.GJChronology@getDateTimeMillis(int,int,int,int,int,int,int):372:2 |==> 0
9383:LVR:POS:NEG:org.joda.time.chrono.GJChronology@getDateTimeMillis(int,int,int,int,int,int,int):372:2 |==> -2
9384:ROR:!=(int,int):<(int,int):org.joda.time.chrono.GJChronology@getDateTimeMillis(int,int,int,int,int,int,int):372:monthOfYear != 2 |==> monthOfYear < 2
9385:ROR:!=(int,int):>(int,int):org.joda.time.chrono.GJChronology@getDateTimeMillis(int,int,int,int,int,int,int):372:monthOfYear != 2 |==> monthOfYear > 2
9386:ROR:!=(int,int):TRUE(int,int):org.joda.time.chrono.GJChronology@getDateTimeMillis(int,int,int,int,int,int,int):372:monthOfYear != 2 |==> true
9387:LVR:POS:0:org.joda.time.chrono.GJChronology@getDateTimeMillis(int,int,int,int,int,int,int):372:29 |==> 0
9388:LVR:POS:NEG:org.joda.time.chrono.GJChronology@getDateTimeMillis(int,int,int,int,int,int,int):372:29 |==> -29
9389:ROR:!=(int,int):<(int,int):org.joda.time.chrono.GJChronology@getDateTimeMillis(int,int,int,int,int,int,int):372:dayOfMonth != 29 |==> dayOfMonth < 29
9390:ROR:!=(int,int):>(int,int):org.joda.time.chrono.GJChronology@getDateTimeMillis(int,int,int,int,int,int,int):372:dayOfMonth != 29 |==> dayOfMonth > 29
9391:ROR:!=(int,int):TRUE(int,int):org.joda.time.chrono.GJChronology@getDateTimeMillis(int,int,int,int,int,int,int):372:dayOfMonth != 29 |==> true
9392:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.chrono.GJChronology@getDateTimeMillis(int,int,int,int,int,int,int):372:monthOfYear != 2 || dayOfMonth != 29 |==> monthOfYear != 2 != (dayOfMonth != 29)
9393:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.GJChronology@getDateTimeMillis(int,int,int,int,int,int,int):372:monthOfYear != 2 || dayOfMonth != 29 |==> monthOfYear != 2
9394:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.GJChronology@getDateTimeMillis(int,int,int,int,int,int,int):372:monthOfYear != 2 || dayOfMonth != 29 |==> dayOfMonth != 29
9395:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.chrono.GJChronology@getDateTimeMillis(int,int,int,int,int,int,int):372:monthOfYear != 2 || dayOfMonth != 29 |==> true
9396:LVR:POS:0:org.joda.time.chrono.GJChronology@getDateTimeMillis(int,int,int,int,int,int,int):376:28 |==> 0
9397:LVR:POS:NEG:org.joda.time.chrono.GJChronology@getDateTimeMillis(int,int,int,int,int,int,int):376:28 |==> -28
9398:ROR:>=(long,long):==(long,long):org.joda.time.chrono.GJChronology@getDateTimeMillis(int,int,int,int,int,int,int):378:instant >= iCutoverMillis |==> instant == iCutoverMillis
9399:ROR:>=(long,long):>(long,long):org.joda.time.chrono.GJChronology@getDateTimeMillis(int,int,int,int,int,int,int):378:instant >= iCutoverMillis |==> instant > iCutoverMillis
9400:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.GJChronology@getDateTimeMillis(int,int,int,int,int,int,int):378:instant >= iCutoverMillis |==> true
9401:ROR:<(long,long):!=(long,long):org.joda.time.chrono.GJChronology@getDateTimeMillis(int,int,int,int,int,int,int):382:instant < iCutoverMillis |==> instant != iCutoverMillis
9402:ROR:<(long,long):<=(long,long):org.joda.time.chrono.GJChronology@getDateTimeMillis(int,int,int,int,int,int,int):382:instant < iCutoverMillis |==> instant <= iCutoverMillis
9403:ROR:<(long,long):FALSE(long,long):org.joda.time.chrono.GJChronology@getDateTimeMillis(int,int,int,int,int,int,int):382:instant < iCutoverMillis |==> false
9404:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@getDateTimeMillis(int,int,int,int,int,int,int):384:instant = iJulianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond) |==> <NO-OP>
9405:ROR:>=(long,long):==(long,long):org.joda.time.chrono.GJChronology@getDateTimeMillis(int,int,int,int,int,int,int):387:instant >= iCutoverMillis |==> instant == iCutoverMillis
9406:ROR:>=(long,long):>(long,long):org.joda.time.chrono.GJChronology@getDateTimeMillis(int,int,int,int,int,int,int):387:instant >= iCutoverMillis |==> instant > iCutoverMillis
9407:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.GJChronology@getDateTimeMillis(int,int,int,int,int,int,int):387:instant >= iCutoverMillis |==> true
9408:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.GJChronology@equals(java.lang.Object):421:this == obj |==> false
9409:LVR:TRUE:FALSE:org.joda.time.chrono.GJChronology@equals(java.lang.Object):422:true |==> false
9410:ROR:==(long,long):<=(long,long):org.joda.time.chrono.GJChronology@equals(java.lang.Object):426:iCutoverMillis == chrono.iCutoverMillis |==> iCutoverMillis <= chrono.iCutoverMillis
9411:ROR:==(long,long):>=(long,long):org.joda.time.chrono.GJChronology@equals(java.lang.Object):426:iCutoverMillis == chrono.iCutoverMillis |==> iCutoverMillis >= chrono.iCutoverMillis
9412:ROR:==(long,long):FALSE(long,long):org.joda.time.chrono.GJChronology@equals(java.lang.Object):426:iCutoverMillis == chrono.iCutoverMillis |==> false
9413:ROR:==(int,int):<=(int,int):org.joda.time.chrono.GJChronology@equals(java.lang.Object):427:getMinimumDaysInFirstWeek() == chrono.getMinimumDaysInFirstWeek() |==> getMinimumDaysInFirstWeek() <= chrono.getMinimumDaysInFirstWeek()
9414:ROR:==(int,int):>=(int,int):org.joda.time.chrono.GJChronology@equals(java.lang.Object):427:getMinimumDaysInFirstWeek() == chrono.getMinimumDaysInFirstWeek() |==> getMinimumDaysInFirstWeek() >= chrono.getMinimumDaysInFirstWeek()
9415:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.GJChronology@equals(java.lang.Object):427:getMinimumDaysInFirstWeek() == chrono.getMinimumDaysInFirstWeek() |==> false
9416:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.GJChronology@equals(java.lang.Object):426:iCutoverMillis == chrono.iCutoverMillis && getMinimumDaysInFirstWeek() == chrono.getMinimumDaysInFirstWeek() |==> iCutoverMillis == chrono.iCutoverMillis == (getMinimumDaysInFirstWeek() == chrono.getMinimumDaysInFirstWeek())
9417:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.GJChronology@equals(java.lang.Object):426:iCutoverMillis == chrono.iCutoverMillis && getMinimumDaysInFirstWeek() == chrono.getMinimumDaysInFirstWeek() |==> false
9418:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.GJChronology@equals(java.lang.Object):426:iCutoverMillis == chrono.iCutoverMillis && getMinimumDaysInFirstWeek() == chrono.getMinimumDaysInFirstWeek() |==> iCutoverMillis == chrono.iCutoverMillis
9419:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.GJChronology@equals(java.lang.Object):427:iCutoverMillis == chrono.iCutoverMillis && getMinimumDaysInFirstWeek() == chrono.getMinimumDaysInFirstWeek() |==> getMinimumDaysInFirstWeek() == chrono.getMinimumDaysInFirstWeek()
9420:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.GJChronology@equals(java.lang.Object):426:iCutoverMillis == chrono.iCutoverMillis && getMinimumDaysInFirstWeek() == chrono.getMinimumDaysInFirstWeek() && getZone().equals(chrono.getZone()) |==> (iCutoverMillis == chrono.iCutoverMillis && getMinimumDaysInFirstWeek() == chrono.getMinimumDaysInFirstWeek()) == getZone().equals(chrono.getZone())
9421:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.GJChronology@equals(java.lang.Object):427:iCutoverMillis == chrono.iCutoverMillis && getMinimumDaysInFirstWeek() == chrono.getMinimumDaysInFirstWeek() && getZone().equals(chrono.getZone()) |==> false
9422:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.GJChronology@equals(java.lang.Object):426:iCutoverMillis == chrono.iCutoverMillis && getMinimumDaysInFirstWeek() == chrono.getMinimumDaysInFirstWeek() && getZone().equals(chrono.getZone()) |==> iCutoverMillis == chrono.iCutoverMillis && getMinimumDaysInFirstWeek() == chrono.getMinimumDaysInFirstWeek()
9423:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.GJChronology@equals(java.lang.Object):428:iCutoverMillis == chrono.iCutoverMillis && getMinimumDaysInFirstWeek() == chrono.getMinimumDaysInFirstWeek() && getZone().equals(chrono.getZone()) |==> getZone().equals(chrono.getZone())
9424:LVR:FALSE:TRUE:org.joda.time.chrono.GJChronology@equals(java.lang.Object):430:false |==> true
9425:LVR:POS:0:org.joda.time.chrono.GJChronology@hashCode():440:11 |==> 0
9426:LVR:POS:NEG:org.joda.time.chrono.GJChronology@hashCode():440:11 |==> -11
9427:AOR:*(int,int):%(int,int):org.joda.time.chrono.GJChronology@hashCode():440:"GJ".hashCode() * 11 |==> "GJ".hashCode() % 11
9428:AOR:*(int,int):+(int,int):org.joda.time.chrono.GJChronology@hashCode():440:"GJ".hashCode() * 11 |==> "GJ".hashCode() + 11
9429:AOR:*(int,int):-(int,int):org.joda.time.chrono.GJChronology@hashCode():440:"GJ".hashCode() * 11 |==> "GJ".hashCode() - 11
9430:AOR:*(int,int):/(int,int):org.joda.time.chrono.GJChronology@hashCode():440:"GJ".hashCode() * 11 |==> "GJ".hashCode() / 11
9431:AOR:+(int,int):%(int,int):org.joda.time.chrono.GJChronology@hashCode():440:"GJ".hashCode() * 11 + getZone().hashCode() |==> "GJ".hashCode() * 11 % getZone().hashCode()
9432:AOR:+(int,int):*(int,int):org.joda.time.chrono.GJChronology@hashCode():440:"GJ".hashCode() * 11 + getZone().hashCode() |==> "GJ".hashCode() * 11 * getZone().hashCode()
9433:AOR:+(int,int):-(int,int):org.joda.time.chrono.GJChronology@hashCode():440:"GJ".hashCode() * 11 + getZone().hashCode() |==> "GJ".hashCode() * 11 - getZone().hashCode()
9434:AOR:+(int,int):/(int,int):org.joda.time.chrono.GJChronology@hashCode():440:"GJ".hashCode() * 11 + getZone().hashCode() |==> "GJ".hashCode() * 11 / getZone().hashCode()
9435:AOR:+(int,int):%(int,int):org.joda.time.chrono.GJChronology@hashCode():440:"GJ".hashCode() * 11 + getZone().hashCode() + getMinimumDaysInFirstWeek() |==> ("GJ".hashCode() * 11 + getZone().hashCode()) % getMinimumDaysInFirstWeek()
9436:AOR:+(int,int):*(int,int):org.joda.time.chrono.GJChronology@hashCode():440:"GJ".hashCode() * 11 + getZone().hashCode() + getMinimumDaysInFirstWeek() |==> ("GJ".hashCode() * 11 + getZone().hashCode()) * getMinimumDaysInFirstWeek()
9437:AOR:+(int,int):-(int,int):org.joda.time.chrono.GJChronology@hashCode():440:"GJ".hashCode() * 11 + getZone().hashCode() + getMinimumDaysInFirstWeek() |==> "GJ".hashCode() * 11 + getZone().hashCode() - getMinimumDaysInFirstWeek()
9438:AOR:+(int,int):/(int,int):org.joda.time.chrono.GJChronology@hashCode():440:"GJ".hashCode() * 11 + getZone().hashCode() + getMinimumDaysInFirstWeek() |==> ("GJ".hashCode() * 11 + getZone().hashCode()) / getMinimumDaysInFirstWeek()
9439:AOR:+(int,int):%(int,int):org.joda.time.chrono.GJChronology@hashCode():440:"GJ".hashCode() * 11 + getZone().hashCode() + getMinimumDaysInFirstWeek() + iCutoverInstant.hashCode() |==> ("GJ".hashCode() * 11 + getZone().hashCode() + getMinimumDaysInFirstWeek()) % iCutoverInstant.hashCode()
9440:AOR:+(int,int):*(int,int):org.joda.time.chrono.GJChronology@hashCode():440:"GJ".hashCode() * 11 + getZone().hashCode() + getMinimumDaysInFirstWeek() + iCutoverInstant.hashCode() |==> ("GJ".hashCode() * 11 + getZone().hashCode() + getMinimumDaysInFirstWeek()) * iCutoverInstant.hashCode()
9441:AOR:+(int,int):-(int,int):org.joda.time.chrono.GJChronology@hashCode():440:"GJ".hashCode() * 11 + getZone().hashCode() + getMinimumDaysInFirstWeek() + iCutoverInstant.hashCode() |==> "GJ".hashCode() * 11 + getZone().hashCode() + getMinimumDaysInFirstWeek() - iCutoverInstant.hashCode()
9442:AOR:+(int,int):/(int,int):org.joda.time.chrono.GJChronology@hashCode():440:"GJ".hashCode() * 11 + getZone().hashCode() + getMinimumDaysInFirstWeek() + iCutoverInstant.hashCode() |==> ("GJ".hashCode() * 11 + getZone().hashCode() + getMinimumDaysInFirstWeek()) / iCutoverInstant.hashCode()
9443:LVR:POS:0:org.joda.time.chrono.GJChronology@toString():452:60 |==> 0
9444:LVR:POS:NEG:org.joda.time.chrono.GJChronology@toString():452:60 |==> -60
9445:STD:<CALL>:<NO-OP>:org.joda.time.chrono.GJChronology@toString():453:sb.append("GJChronology") |==> <NO-OP>
9446:STD:<CALL>:<NO-OP>:org.joda.time.chrono.GJChronology@toString():454:sb.append('[') |==> <NO-OP>
9447:STD:<CALL>:<NO-OP>:org.joda.time.chrono.GJChronology@toString():455:sb.append(getZone().getID()) |==> <NO-OP>
9448:ROR:!=(long,long):<(long,long):org.joda.time.chrono.GJChronology@toString():457:iCutoverMillis != DEFAULT_CUTOVER.getMillis() |==> iCutoverMillis < DEFAULT_CUTOVER.getMillis()
9449:ROR:!=(long,long):>(long,long):org.joda.time.chrono.GJChronology@toString():457:iCutoverMillis != DEFAULT_CUTOVER.getMillis() |==> iCutoverMillis > DEFAULT_CUTOVER.getMillis()
9450:ROR:!=(long,long):TRUE(long,long):org.joda.time.chrono.GJChronology@toString():457:iCutoverMillis != DEFAULT_CUTOVER.getMillis() |==> true
9451:STD:<CALL>:<NO-OP>:org.joda.time.chrono.GJChronology@toString():458:sb.append(",cutover=") |==> <NO-OP>
9452:LVR:0:POS:org.joda.time.chrono.GJChronology@toString():460:0 |==> 1
9453:LVR:0:NEG:org.joda.time.chrono.GJChronology@toString():460:0 |==> -1
9454:ROR:==(long,long):<=(long,long):org.joda.time.chrono.GJChronology@toString():460:withUTC().dayOfYear().remainder(iCutoverMillis) == 0 |==> withUTC().dayOfYear().remainder(iCutoverMillis) <= 0
9455:ROR:==(long,long):>=(long,long):org.joda.time.chrono.GJChronology@toString():460:withUTC().dayOfYear().remainder(iCutoverMillis) == 0 |==> withUTC().dayOfYear().remainder(iCutoverMillis) >= 0
9456:ROR:==(long,long):FALSE(long,long):org.joda.time.chrono.GJChronology@toString():460:withUTC().dayOfYear().remainder(iCutoverMillis) == 0 |==> false
9457:STD:<CALL>:<NO-OP>:org.joda.time.chrono.GJChronology@toString():465:printer.withChronology(withUTC()).printTo(sb, iCutoverMillis) |==> <NO-OP>
9458:LVR:POS:0:org.joda.time.chrono.GJChronology@toString():468:4 |==> 0
9459:LVR:POS:NEG:org.joda.time.chrono.GJChronology@toString():468:4 |==> -4
9460:ROR:!=(int,int):<(int,int):org.joda.time.chrono.GJChronology@toString():468:getMinimumDaysInFirstWeek() != 4 |==> getMinimumDaysInFirstWeek() < 4
9461:ROR:!=(int,int):>(int,int):org.joda.time.chrono.GJChronology@toString():468:getMinimumDaysInFirstWeek() != 4 |==> getMinimumDaysInFirstWeek() > 4
9462:ROR:!=(int,int):TRUE(int,int):org.joda.time.chrono.GJChronology@toString():468:getMinimumDaysInFirstWeek() != 4 |==> true
9463:STD:<CALL>:<NO-OP>:org.joda.time.chrono.GJChronology@toString():469:sb.append(",mdfw=") |==> <NO-OP>
9464:STD:<CALL>:<NO-OP>:org.joda.time.chrono.GJChronology@toString():470:sb.append(getMinimumDaysInFirstWeek()) |==> <NO-OP>
9465:STD:<CALL>:<NO-OP>:org.joda.time.chrono.GJChronology@toString():472:sb.append(']') |==> <NO-OP>
9466:LVR:0:POS:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):480:0 |==> 1
9467:LVR:0:NEG:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):480:0 |==> -1
9468:LVR:POS:0:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):481:1 |==> 0
9469:LVR:POS:NEG:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):481:1 |==> -1
9470:LVR:POS:0:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):482:2 |==> 0
9471:LVR:POS:NEG:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):482:2 |==> -2
9472:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):483:iCutoverMillis = cutoverInstant.getMillis() |==> <NO-OP>
9473:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):485:iJulianChronology = julian |==> <NO-OP>
9474:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):486:iGregorianChronology = gregorian |==> <NO-OP>
9475:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):487:iCutoverInstant = cutoverInstant |==> <NO-OP>
9476:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):489:getBase() != null |==> true
9477:ROR:!=(int,int):<(int,int):org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):493:julian.getMinimumDaysInFirstWeek() != gregorian.getMinimumDaysInFirstWeek() |==> julian.getMinimumDaysInFirstWeek() < gregorian.getMinimumDaysInFirstWeek()
9478:ROR:!=(int,int):>(int,int):org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):493:julian.getMinimumDaysInFirstWeek() != gregorian.getMinimumDaysInFirstWeek() |==> julian.getMinimumDaysInFirstWeek() > gregorian.getMinimumDaysInFirstWeek()
9479:ROR:!=(int,int):TRUE(int,int):org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):493:julian.getMinimumDaysInFirstWeek() != gregorian.getMinimumDaysInFirstWeek() |==> true
9480:AOR:-(long,long):%(long,long):org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):498:iCutoverMillis - julianToGregorianByYear(iCutoverMillis) |==> iCutoverMillis % julianToGregorianByYear(iCutoverMillis)
9481:AOR:-(long,long):*(long,long):org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):498:iCutoverMillis - julianToGregorianByYear(iCutoverMillis) |==> iCutoverMillis * julianToGregorianByYear(iCutoverMillis)
9482:AOR:-(long,long):+(long,long):org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):498:iCutoverMillis - julianToGregorianByYear(iCutoverMillis) |==> iCutoverMillis + julianToGregorianByYear(iCutoverMillis)
9483:AOR:-(long,long):/(long,long):org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):498:iCutoverMillis - julianToGregorianByYear(iCutoverMillis) |==> iCutoverMillis / julianToGregorianByYear(iCutoverMillis)
9484:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):498:iGapDuration = iCutoverMillis - julianToGregorianByYear(iCutoverMillis) |==> <NO-OP>
9485:STD:<CALL>:<NO-OP>:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):504:fields.copyFieldsFrom(gregorian) |==> <NO-OP>
9486:LVR:0:POS:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):510:0 |==> 1
9487:LVR:0:NEG:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):510:0 |==> -1
9488:ROR:==(int,int):<=(int,int):org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):510:gregorian.millisOfDay().get(iCutoverMillis) == 0 |==> gregorian.millisOfDay().get(iCutoverMillis) <= 0
9489:ROR:==(int,int):>=(int,int):org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):510:gregorian.millisOfDay().get(iCutoverMillis) == 0 |==> gregorian.millisOfDay().get(iCutoverMillis) >= 0
9490:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):510:gregorian.millisOfDay().get(iCutoverMillis) == 0 |==> false
9491:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):514:fields.millisOfSecond = new CutoverField(julian.millisOfSecond(), fields.millisOfSecond, iCutoverMillis) |==> <NO-OP>
9492:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):515:fields.millisOfDay = new CutoverField(julian.millisOfDay(), fields.millisOfDay, iCutoverMillis) |==> <NO-OP>
9493:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):516:fields.secondOfMinute = new CutoverField(julian.secondOfMinute(), fields.secondOfMinute, iCutoverMillis) |==> <NO-OP>
9494:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):517:fields.secondOfDay = new CutoverField(julian.secondOfDay(), fields.secondOfDay, iCutoverMillis) |==> <NO-OP>
9495:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):518:fields.minuteOfHour = new CutoverField(julian.minuteOfHour(), fields.minuteOfHour, iCutoverMillis) |==> <NO-OP>
9496:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):519:fields.minuteOfDay = new CutoverField(julian.minuteOfDay(), fields.minuteOfDay, iCutoverMillis) |==> <NO-OP>
9497:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):520:fields.hourOfDay = new CutoverField(julian.hourOfDay(), fields.hourOfDay, iCutoverMillis) |==> <NO-OP>
9498:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):521:fields.hourOfHalfday = new CutoverField(julian.hourOfHalfday(), fields.hourOfHalfday, iCutoverMillis) |==> <NO-OP>
9499:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):522:fields.clockhourOfDay = new CutoverField(julian.clockhourOfDay(), fields.clockhourOfDay, iCutoverMillis) |==> <NO-OP>
9500:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):523:fields.clockhourOfHalfday = new CutoverField(julian.clockhourOfHalfday(), fields.clockhourOfHalfday, iCutoverMillis) |==> <NO-OP>
9501:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):525:fields.halfdayOfDay = new CutoverField(julian.halfdayOfDay(), fields.halfdayOfDay, iCutoverMillis) |==> <NO-OP>
9502:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):530:fields.era = new CutoverField(julian.era(), fields.era, iCutoverMillis) |==> <NO-OP>
9503:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):537:fields.year = new ImpreciseCutoverField(julian.year(), fields.year, iCutoverMillis) |==> <NO-OP>
9504:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):539:fields.years = fields.year.getDurationField() |==> <NO-OP>
9505:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):540:fields.yearOfEra = new ImpreciseCutoverField(julian.yearOfEra(), fields.yearOfEra, fields.years, iCutoverMillis) |==> <NO-OP>
9506:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):543:fields.centuryOfEra = new ImpreciseCutoverField(julian.centuryOfEra(), fields.centuryOfEra, iCutoverMillis) |==> <NO-OP>
9507:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):545:fields.centuries = fields.centuryOfEra.getDurationField() |==> <NO-OP>
9508:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):547:fields.yearOfCentury = new ImpreciseCutoverField(julian.yearOfCentury(), fields.yearOfCentury, fields.years, fields.centuries, iCutoverMillis) |==> <NO-OP>
9509:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):550:fields.monthOfYear = new ImpreciseCutoverField(julian.monthOfYear(), fields.monthOfYear, null, fields.years, iCutoverMillis) |==> <NO-OP>
9510:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):552:fields.months = fields.monthOfYear.getDurationField() |==> <NO-OP>
9511:LVR:TRUE:FALSE:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):555:true |==> false
9512:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):554:fields.weekyear = new ImpreciseCutoverField(julian.weekyear(), fields.weekyear, null, iCutoverMillis, true) |==> <NO-OP>
9513:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):556:fields.weekyears = fields.weekyear.getDurationField() |==> <NO-OP>
9514:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):557:fields.weekyearOfCentury = new ImpreciseCutoverField(julian.weekyearOfCentury(), fields.weekyearOfCentury, fields.weekyears, fields.centuries, iCutoverMillis) |==> <NO-OP>
9515:LVR:FALSE:TRUE:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):569:false |==> true
9516:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):568:fields.dayOfYear = new CutoverField(julian.dayOfYear(), fields.dayOfYear, fields.years, cutover, false) |==> <NO-OP>
9517:LVR:TRUE:FALSE:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):575:true |==> false
9518:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):574:fields.weekOfWeekyear = new CutoverField(julian.weekOfWeekyear(), fields.weekOfWeekyear, fields.weekyears, cutover, true) |==> <NO-OP>
9519:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):583:cf.iRangeDurationField = fields.months |==> <NO-OP>
9520:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):584:fields.dayOfMonth = cf |==> <NO-OP>
9521:LVR:FALSE:TRUE:org.joda.time.chrono.GJChronology$CutoverField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeField,long):627:false |==> true
9522:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$CutoverField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeField,org.joda.time.DurationField,long,boolean):657:iDurationField = gregorianField.getDurationField() |==> <NO-OP>
9523:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.GJChronology$CutoverField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeField,org.joda.time.DurationField,long,boolean):658:rangeField == null |==> false
9524:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$CutoverField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeField,org.joda.time.DurationField,long,boolean):659:rangeField = gregorianField.getRangeDurationField() |==> <NO-OP>
9525:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.GJChronology$CutoverField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeField,org.joda.time.DurationField,long,boolean):660:rangeField == null |==> false
9526:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$CutoverField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeField,org.joda.time.DurationField,long,boolean):661:rangeField = julianField.getRangeDurationField() |==> <NO-OP>
9527:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$CutoverField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeField,org.joda.time.DurationField,long,boolean):664:iRangeDurationField = rangeField |==> <NO-OP>
9528:LVR:FALSE:TRUE:org.joda.time.chrono.GJChronology$CutoverField@isLenient():668:false |==> true
9529:ROR:>=(long,long):==(long,long):org.joda.time.chrono.GJChronology$CutoverField@get(long):672:instant >= iCutover |==> instant == iCutover
9530:ROR:>=(long,long):>(long,long):org.joda.time.chrono.GJChronology$CutoverField@get(long):672:instant >= iCutover |==> instant > iCutover
9531:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.GJChronology$CutoverField@get(long):672:instant >= iCutover |==> true
9532:ROR:>=(long,long):==(long,long):org.joda.time.chrono.GJChronology$CutoverField@getAsText(long,java.util.Locale):680:instant >= iCutover |==> instant == iCutover
9533:ROR:>=(long,long):>(long,long):org.joda.time.chrono.GJChronology$CutoverField@getAsText(long,java.util.Locale):680:instant >= iCutover |==> instant > iCutover
9534:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.GJChronology$CutoverField@getAsText(long,java.util.Locale):680:instant >= iCutover |==> true
9535:ROR:>=(long,long):==(long,long):org.joda.time.chrono.GJChronology$CutoverField@getAsShortText(long,java.util.Locale):692:instant >= iCutover |==> instant == iCutover
9536:ROR:>=(long,long):>(long,long):org.joda.time.chrono.GJChronology$CutoverField@getAsShortText(long,java.util.Locale):692:instant >= iCutover |==> instant > iCutover
9537:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.GJChronology$CutoverField@getAsShortText(long,java.util.Locale):692:instant >= iCutover |==> true
9538:LVR:0:POS:org.joda.time.chrono.GJChronology$CutoverField@add(org.joda.time.ReadablePartial,int,int[],int):714:0 |==> 1
9539:LVR:0:NEG:org.joda.time.chrono.GJChronology$CutoverField@add(org.joda.time.ReadablePartial,int,int[],int):714:0 |==> -1
9540:ROR:==(int,int):<=(int,int):org.joda.time.chrono.GJChronology$CutoverField@add(org.joda.time.ReadablePartial,int,int[],int):714:valueToAdd == 0 |==> valueToAdd <= 0
9541:ROR:==(int,int):>=(int,int):org.joda.time.chrono.GJChronology$CutoverField@add(org.joda.time.ReadablePartial,int,int[],int):714:valueToAdd == 0 |==> valueToAdd >= 0
9542:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.GJChronology$CutoverField@add(org.joda.time.ReadablePartial,int,int[],int):714:valueToAdd == 0 |==> false
9543:COR:DateTimeUtils.isContiguous(partial):TRUE:org.joda.time.chrono.GJChronology$CutoverField@add(org.joda.time.ReadablePartial,int,int[],int):717:DateTimeUtils.isContiguous(partial) |==> false
9544:COR:DateTimeUtils.isContiguous(partial):FALSE:org.joda.time.chrono.GJChronology$CutoverField@add(org.joda.time.ReadablePartial,int,int[],int):717:DateTimeUtils.isContiguous(partial) |==> true
9545:LVR:0:POS:org.joda.time.chrono.GJChronology$CutoverField@add(org.joda.time.ReadablePartial,int,int[],int):718:0L |==> 1L
9546:LVR:0:NEG:org.joda.time.chrono.GJChronology$CutoverField@add(org.joda.time.ReadablePartial,int,int[],int):718:0L |==> -1L
9547:LVR:0:POS:org.joda.time.chrono.GJChronology$CutoverField@add(org.joda.time.ReadablePartial,int,int[],int):719:0 |==> 1
9548:LVR:0:NEG:org.joda.time.chrono.GJChronology$CutoverField@add(org.joda.time.ReadablePartial,int,int[],int):719:0 |==> -1
9549:ROR:<(int,int):!=(int,int):org.joda.time.chrono.GJChronology$CutoverField@add(org.joda.time.ReadablePartial,int,int[],int):719:i < isize |==> i != isize
9550:ROR:<(int,int):<=(int,int):org.joda.time.chrono.GJChronology$CutoverField@add(org.joda.time.ReadablePartial,int,int[],int):719:i < isize |==> i <= isize
9551:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.GJChronology$CutoverField@add(org.joda.time.ReadablePartial,int,int[],int):719:i < isize |==> false
9552:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$CutoverField@add(org.joda.time.ReadablePartial,int,int[],int):720:instant = partial.getFieldType(i).getField(GJChronology.this).set(instant, values[i]) |==> <NO-OP>
9553:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$CutoverField@add(org.joda.time.ReadablePartial,int,int[],int):722:instant = add(instant, valueToAdd) |==> <NO-OP>
9554:ROR:>=(long,long):==(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,int):738:instant >= iCutover |==> instant == iCutover
9555:ROR:>=(long,long):>(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,int):738:instant >= iCutover |==> instant > iCutover
9556:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,int):738:instant >= iCutover |==> true
9557:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$CutoverField@set(long,int):739:instant = iGregorianField.set(instant, value) |==> <NO-OP>
9558:ROR:<(long,long):!=(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,int):740:instant < iCutover |==> instant != iCutover
9559:ROR:<(long,long):<=(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,int):740:instant < iCutover |==> instant <= iCutover
9560:ROR:<(long,long):FALSE(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,int):740:instant < iCutover |==> false
9561:AOR:+(long,long):%(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,int):742:instant + iGapDuration |==> instant % iGapDuration
9562:AOR:+(long,long):*(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,int):742:instant + iGapDuration |==> instant * iGapDuration
9563:AOR:+(long,long):-(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,int):742:instant + iGapDuration |==> instant - iGapDuration
9564:AOR:+(long,long):/(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,int):742:instant + iGapDuration |==> instant / iGapDuration
9565:ROR:<(long,long):!=(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,int):742:instant + iGapDuration < iCutover |==> instant + iGapDuration != iCutover
9566:ROR:<(long,long):<=(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,int):742:instant + iGapDuration < iCutover |==> instant + iGapDuration <= iCutover
9567:ROR:<(long,long):FALSE(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,int):742:instant + iGapDuration < iCutover |==> false
9568:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$CutoverField@set(long,int):743:instant = gregorianToJulian(instant) |==> <NO-OP>
9569:ROR:!=(int,int):<(int,int):org.joda.time.chrono.GJChronology$CutoverField@set(long,int):746:get(instant) != value |==> get(instant) < value
9570:ROR:!=(int,int):>(int,int):org.joda.time.chrono.GJChronology$CutoverField@set(long,int):746:get(instant) != value |==> get(instant) > value
9571:ROR:!=(int,int):TRUE(int,int):org.joda.time.chrono.GJChronology$CutoverField@set(long,int):746:get(instant) != value |==> true
9572:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$CutoverField@set(long,int):752:instant = iJulianField.set(instant, value) |==> <NO-OP>
9573:ROR:>=(long,long):==(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,int):753:instant >= iCutover |==> instant == iCutover
9574:ROR:>=(long,long):>(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,int):753:instant >= iCutover |==> instant > iCutover
9575:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,int):753:instant >= iCutover |==> true
9576:AOR:-(long,long):%(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,int):755:instant - iGapDuration |==> instant % iGapDuration
9577:AOR:-(long,long):*(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,int):755:instant - iGapDuration |==> instant * iGapDuration
9578:AOR:-(long,long):+(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,int):755:instant - iGapDuration |==> instant + iGapDuration
9579:AOR:-(long,long):/(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,int):755:instant - iGapDuration |==> instant / iGapDuration
9580:ROR:>=(long,long):==(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,int):755:instant - iGapDuration >= iCutover |==> instant - iGapDuration == iCutover
9581:ROR:>=(long,long):>(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,int):755:instant - iGapDuration >= iCutover |==> instant - iGapDuration > iCutover
9582:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,int):755:instant - iGapDuration >= iCutover |==> true
9583:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$CutoverField@set(long,int):756:instant = julianToGregorian(instant) |==> <NO-OP>
9584:ROR:!=(int,int):<(int,int):org.joda.time.chrono.GJChronology$CutoverField@set(long,int):759:get(instant) != value |==> get(instant) < value
9585:ROR:!=(int,int):>(int,int):org.joda.time.chrono.GJChronology$CutoverField@set(long,int):759:get(instant) != value |==> get(instant) > value
9586:ROR:!=(int,int):TRUE(int,int):org.joda.time.chrono.GJChronology$CutoverField@set(long,int):759:get(instant) != value |==> true
9587:ROR:>=(long,long):==(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,java.lang.String,java.util.Locale):769:instant >= iCutover |==> instant == iCutover
9588:ROR:>=(long,long):>(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,java.lang.String,java.util.Locale):769:instant >= iCutover |==> instant > iCutover
9589:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,java.lang.String,java.util.Locale):769:instant >= iCutover |==> true
9590:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$CutoverField@set(long,java.lang.String,java.util.Locale):770:instant = iGregorianField.set(instant, text, locale) |==> <NO-OP>
9591:ROR:<(long,long):!=(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,java.lang.String,java.util.Locale):771:instant < iCutover |==> instant != iCutover
9592:ROR:<(long,long):<=(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,java.lang.String,java.util.Locale):771:instant < iCutover |==> instant <= iCutover
9593:ROR:<(long,long):FALSE(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,java.lang.String,java.util.Locale):771:instant < iCutover |==> false
9594:AOR:+(long,long):%(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,java.lang.String,java.util.Locale):773:instant + iGapDuration |==> instant % iGapDuration
9595:AOR:+(long,long):*(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,java.lang.String,java.util.Locale):773:instant + iGapDuration |==> instant * iGapDuration
9596:AOR:+(long,long):-(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,java.lang.String,java.util.Locale):773:instant + iGapDuration |==> instant - iGapDuration
9597:AOR:+(long,long):/(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,java.lang.String,java.util.Locale):773:instant + iGapDuration |==> instant / iGapDuration
9598:ROR:<(long,long):!=(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,java.lang.String,java.util.Locale):773:instant + iGapDuration < iCutover |==> instant + iGapDuration != iCutover
9599:ROR:<(long,long):<=(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,java.lang.String,java.util.Locale):773:instant + iGapDuration < iCutover |==> instant + iGapDuration <= iCutover
9600:ROR:<(long,long):FALSE(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,java.lang.String,java.util.Locale):773:instant + iGapDuration < iCutover |==> false
9601:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$CutoverField@set(long,java.lang.String,java.util.Locale):774:instant = gregorianToJulian(instant) |==> <NO-OP>
9602:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$CutoverField@set(long,java.lang.String,java.util.Locale):779:instant = iJulianField.set(instant, text, locale) |==> <NO-OP>
9603:ROR:>=(long,long):==(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,java.lang.String,java.util.Locale):780:instant >= iCutover |==> instant == iCutover
9604:ROR:>=(long,long):>(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,java.lang.String,java.util.Locale):780:instant >= iCutover |==> instant > iCutover
9605:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,java.lang.String,java.util.Locale):780:instant >= iCutover |==> true
9606:AOR:-(long,long):%(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,java.lang.String,java.util.Locale):782:instant - iGapDuration |==> instant % iGapDuration
9607:AOR:-(long,long):*(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,java.lang.String,java.util.Locale):782:instant - iGapDuration |==> instant * iGapDuration
9608:AOR:-(long,long):+(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,java.lang.String,java.util.Locale):782:instant - iGapDuration |==> instant + iGapDuration
9609:AOR:-(long,long):/(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,java.lang.String,java.util.Locale):782:instant - iGapDuration |==> instant / iGapDuration
9610:ROR:>=(long,long):==(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,java.lang.String,java.util.Locale):782:instant - iGapDuration >= iCutover |==> instant - iGapDuration == iCutover
9611:ROR:>=(long,long):>(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,java.lang.String,java.util.Locale):782:instant - iGapDuration >= iCutover |==> instant - iGapDuration > iCutover
9612:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.GJChronology$CutoverField@set(long,java.lang.String,java.util.Locale):782:instant - iGapDuration >= iCutover |==> true
9613:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$CutoverField@set(long,java.lang.String,java.util.Locale):783:instant = julianToGregorian(instant) |==> <NO-OP>
9614:ROR:>=(long,long):==(long,long):org.joda.time.chrono.GJChronology$CutoverField@isLeap(long):800:instant >= iCutover |==> instant == iCutover
9615:ROR:>=(long,long):>(long,long):org.joda.time.chrono.GJChronology$CutoverField@isLeap(long):800:instant >= iCutover |==> instant > iCutover
9616:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.GJChronology$CutoverField@isLeap(long):800:instant >= iCutover |==> true
9617:ROR:>=(long,long):==(long,long):org.joda.time.chrono.GJChronology$CutoverField@getLeapAmount(long):808:instant >= iCutover |==> instant == iCutover
9618:ROR:>=(long,long):>(long,long):org.joda.time.chrono.GJChronology$CutoverField@getLeapAmount(long):808:instant >= iCutover |==> instant > iCutover
9619:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.GJChronology$CutoverField@getLeapAmount(long):808:instant >= iCutover |==> true
9620:ROR:<(long,long):!=(long,long):org.joda.time.chrono.GJChronology$CutoverField@getMinimumValue(long):835:instant < iCutover |==> instant != iCutover
9621:ROR:<(long,long):<=(long,long):org.joda.time.chrono.GJChronology$CutoverField@getMinimumValue(long):835:instant < iCutover |==> instant <= iCutover
9622:ROR:<(long,long):FALSE(long,long):org.joda.time.chrono.GJChronology$CutoverField@getMinimumValue(long):835:instant < iCutover |==> false
9623:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$CutoverField@getMinimumValue(long):843:instant = iGregorianField.set(instant, min) |==> <NO-OP>
9624:ROR:<(long,long):!=(long,long):org.joda.time.chrono.GJChronology$CutoverField@getMinimumValue(long):844:instant < iCutover |==> instant != iCutover
9625:ROR:<(long,long):<=(long,long):org.joda.time.chrono.GJChronology$CutoverField@getMinimumValue(long):844:instant < iCutover |==> instant <= iCutover
9626:ROR:<(long,long):FALSE(long,long):org.joda.time.chrono.GJChronology$CutoverField@getMinimumValue(long):844:instant < iCutover |==> false
9627:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$CutoverField@getMinimumValue(long):845:min = iGregorianField.get(iCutover) |==> <NO-OP>
9628:ROR:>=(long,long):==(long,long):org.joda.time.chrono.GJChronology$CutoverField@getMaximumValue(long):858:instant >= iCutover |==> instant == iCutover
9629:ROR:>=(long,long):>(long,long):org.joda.time.chrono.GJChronology$CutoverField@getMaximumValue(long):858:instant >= iCutover |==> instant > iCutover
9630:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.GJChronology$CutoverField@getMaximumValue(long):858:instant >= iCutover |==> true
9631:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$CutoverField@getMaximumValue(long):866:instant = iJulianField.set(instant, max) |==> <NO-OP>
9632:ROR:>=(long,long):==(long,long):org.joda.time.chrono.GJChronology$CutoverField@getMaximumValue(long):867:instant >= iCutover |==> instant == iCutover
9633:ROR:>=(long,long):>(long,long):org.joda.time.chrono.GJChronology$CutoverField@getMaximumValue(long):867:instant >= iCutover |==> instant > iCutover
9634:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.GJChronology$CutoverField@getMaximumValue(long):867:instant >= iCutover |==> true
9635:LVR:NEG:0:org.joda.time.chrono.GJChronology$CutoverField@getMaximumValue(long):868:-1 |==> 0
9636:LVR:NEG:POS:org.joda.time.chrono.GJChronology$CutoverField@getMaximumValue(long):868:-1 |==> 1
9637:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$CutoverField@getMaximumValue(long):868:max = iJulianField.get(iJulianField.add(iCutover, -1)) |==> <NO-OP>
9638:LVR:0:POS:org.joda.time.chrono.GJChronology$CutoverField@getMaximumValue(org.joda.time.ReadablePartial):875:0L |==> 1L
9639:LVR:0:NEG:org.joda.time.chrono.GJChronology$CutoverField@getMaximumValue(org.joda.time.ReadablePartial):875:0L |==> -1L
9640:LVR:0:POS:org.joda.time.chrono.GJChronology$CutoverField@getMaximumValue(org.joda.time.ReadablePartial,int[]):881:0L |==> 1L
9641:LVR:0:NEG:org.joda.time.chrono.GJChronology$CutoverField@getMaximumValue(org.joda.time.ReadablePartial,int[]):881:0L |==> -1L
9642:LVR:0:POS:org.joda.time.chrono.GJChronology$CutoverField@getMaximumValue(org.joda.time.ReadablePartial,int[]):882:0 |==> 1
9643:LVR:0:NEG:org.joda.time.chrono.GJChronology$CutoverField@getMaximumValue(org.joda.time.ReadablePartial,int[]):882:0 |==> -1
9644:ROR:<(int,int):!=(int,int):org.joda.time.chrono.GJChronology$CutoverField@getMaximumValue(org.joda.time.ReadablePartial,int[]):882:i < isize |==> i != isize
9645:ROR:<(int,int):<=(int,int):org.joda.time.chrono.GJChronology$CutoverField@getMaximumValue(org.joda.time.ReadablePartial,int[]):882:i < isize |==> i <= isize
9646:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.GJChronology$CutoverField@getMaximumValue(org.joda.time.ReadablePartial,int[]):882:i < isize |==> false
9647:ROR:<=(int,int):<(int,int):org.joda.time.chrono.GJChronology$CutoverField@getMaximumValue(org.joda.time.ReadablePartial,int[]):884:values[i] <= field.getMaximumValue(instant) |==> values[i] < field.getMaximumValue(instant)
9648:ROR:<=(int,int):==(int,int):org.joda.time.chrono.GJChronology$CutoverField@getMaximumValue(org.joda.time.ReadablePartial,int[]):884:values[i] <= field.getMaximumValue(instant) |==> values[i] == field.getMaximumValue(instant)
9649:ROR:<=(int,int):TRUE(int,int):org.joda.time.chrono.GJChronology$CutoverField@getMaximumValue(org.joda.time.ReadablePartial,int[]):884:values[i] <= field.getMaximumValue(instant) |==> true
9650:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$CutoverField@getMaximumValue(org.joda.time.ReadablePartial,int[]):885:instant = field.set(instant, values[i]) |==> <NO-OP>
9651:ROR:>=(long,long):==(long,long):org.joda.time.chrono.GJChronology$CutoverField@roundFloor(long):892:instant >= iCutover |==> instant == iCutover
9652:ROR:>=(long,long):>(long,long):org.joda.time.chrono.GJChronology$CutoverField@roundFloor(long):892:instant >= iCutover |==> instant > iCutover
9653:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.GJChronology$CutoverField@roundFloor(long):892:instant >= iCutover |==> true
9654:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$CutoverField@roundFloor(long):893:instant = iGregorianField.roundFloor(instant) |==> <NO-OP>
9655:ROR:<(long,long):!=(long,long):org.joda.time.chrono.GJChronology$CutoverField@roundFloor(long):894:instant < iCutover |==> instant != iCutover
9656:ROR:<(long,long):<=(long,long):org.joda.time.chrono.GJChronology$CutoverField@roundFloor(long):894:instant < iCutover |==> instant <= iCutover
9657:ROR:<(long,long):FALSE(long,long):org.joda.time.chrono.GJChronology$CutoverField@roundFloor(long):894:instant < iCutover |==> false
9658:AOR:+(long,long):%(long,long):org.joda.time.chrono.GJChronology$CutoverField@roundFloor(long):896:instant + iGapDuration |==> instant % iGapDuration
9659:AOR:+(long,long):*(long,long):org.joda.time.chrono.GJChronology$CutoverField@roundFloor(long):896:instant + iGapDuration |==> instant * iGapDuration
9660:AOR:+(long,long):-(long,long):org.joda.time.chrono.GJChronology$CutoverField@roundFloor(long):896:instant + iGapDuration |==> instant - iGapDuration
9661:AOR:+(long,long):/(long,long):org.joda.time.chrono.GJChronology$CutoverField@roundFloor(long):896:instant + iGapDuration |==> instant / iGapDuration
9662:ROR:<(long,long):!=(long,long):org.joda.time.chrono.GJChronology$CutoverField@roundFloor(long):896:instant + iGapDuration < iCutover |==> instant + iGapDuration != iCutover
9663:ROR:<(long,long):<=(long,long):org.joda.time.chrono.GJChronology$CutoverField@roundFloor(long):896:instant + iGapDuration < iCutover |==> instant + iGapDuration <= iCutover
9664:ROR:<(long,long):FALSE(long,long):org.joda.time.chrono.GJChronology$CutoverField@roundFloor(long):896:instant + iGapDuration < iCutover |==> false
9665:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$CutoverField@roundFloor(long):897:instant = gregorianToJulian(instant) |==> <NO-OP>
9666:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$CutoverField@roundFloor(long):901:instant = iJulianField.roundFloor(instant) |==> <NO-OP>
9667:ROR:>=(long,long):==(long,long):org.joda.time.chrono.GJChronology$CutoverField@roundCeiling(long):907:instant >= iCutover |==> instant == iCutover
9668:ROR:>=(long,long):>(long,long):org.joda.time.chrono.GJChronology$CutoverField@roundCeiling(long):907:instant >= iCutover |==> instant > iCutover
9669:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.GJChronology$CutoverField@roundCeiling(long):907:instant >= iCutover |==> true
9670:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$CutoverField@roundCeiling(long):908:instant = iGregorianField.roundCeiling(instant) |==> <NO-OP>
9671:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$CutoverField@roundCeiling(long):910:instant = iJulianField.roundCeiling(instant) |==> <NO-OP>
9672:ROR:>=(long,long):==(long,long):org.joda.time.chrono.GJChronology$CutoverField@roundCeiling(long):911:instant >= iCutover |==> instant == iCutover
9673:ROR:>=(long,long):>(long,long):org.joda.time.chrono.GJChronology$CutoverField@roundCeiling(long):911:instant >= iCutover |==> instant > iCutover
9674:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.GJChronology$CutoverField@roundCeiling(long):911:instant >= iCutover |==> true
9675:AOR:-(long,long):%(long,long):org.joda.time.chrono.GJChronology$CutoverField@roundCeiling(long):913:instant - iGapDuration |==> instant % iGapDuration
9676:AOR:-(long,long):*(long,long):org.joda.time.chrono.GJChronology$CutoverField@roundCeiling(long):913:instant - iGapDuration |==> instant * iGapDuration
9677:AOR:-(long,long):+(long,long):org.joda.time.chrono.GJChronology$CutoverField@roundCeiling(long):913:instant - iGapDuration |==> instant + iGapDuration
9678:AOR:-(long,long):/(long,long):org.joda.time.chrono.GJChronology$CutoverField@roundCeiling(long):913:instant - iGapDuration |==> instant / iGapDuration
9679:ROR:>=(long,long):==(long,long):org.joda.time.chrono.GJChronology$CutoverField@roundCeiling(long):913:instant - iGapDuration >= iCutover |==> instant - iGapDuration == iCutover
9680:ROR:>=(long,long):>(long,long):org.joda.time.chrono.GJChronology$CutoverField@roundCeiling(long):913:instant - iGapDuration >= iCutover |==> instant - iGapDuration > iCutover
9681:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.GJChronology$CutoverField@roundCeiling(long):913:instant - iGapDuration >= iCutover |==> true
9682:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$CutoverField@roundCeiling(long):914:instant = julianToGregorian(instant) |==> <NO-OP>
9683:COR:iConvertByWeekyear:TRUE:org.joda.time.chrono.GJChronology$CutoverField@julianToGregorian(long):932:iConvertByWeekyear |==> false
9684:COR:iConvertByWeekyear:FALSE:org.joda.time.chrono.GJChronology$CutoverField@julianToGregorian(long):932:iConvertByWeekyear |==> true
9685:COR:iConvertByWeekyear:TRUE:org.joda.time.chrono.GJChronology$CutoverField@gregorianToJulian(long):940:iConvertByWeekyear |==> false
9686:COR:iConvertByWeekyear:FALSE:org.joda.time.chrono.GJChronology$CutoverField@gregorianToJulian(long):940:iConvertByWeekyear |==> true
9687:LVR:FALSE:TRUE:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeField,long):963:false |==> true
9688:LVR:FALSE:TRUE:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeField,org.joda.time.DurationField,long):974:false |==> true
9689:LVR:FALSE:TRUE:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DurationField,long):985:false |==> true
9690:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DurationField,long):986:iRangeDurationField = rangeDurationField |==> <NO-OP>
9691:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeField,org.joda.time.DurationField,long,boolean):999:durationField == null |==> false
9692:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeField,org.joda.time.DurationField,long,boolean):1000:durationField = new LinkedDurationField(iDurationField, this) |==> <NO-OP>
9693:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeField,org.joda.time.DurationField,long,boolean):1002:iDurationField = durationField |==> <NO-OP>
9694:ROR:>=(long,long):==(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1006:instant >= iCutover |==> instant == iCutover
9695:ROR:>=(long,long):>(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1006:instant >= iCutover |==> instant > iCutover
9696:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1006:instant >= iCutover |==> true
9697:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1007:instant = iGregorianField.add(instant, value) |==> <NO-OP>
9698:ROR:<(long,long):!=(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1008:instant < iCutover |==> instant != iCutover
9699:ROR:<(long,long):<=(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1008:instant < iCutover |==> instant <= iCutover
9700:ROR:<(long,long):FALSE(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1008:instant < iCutover |==> false
9701:AOR:+(long,long):%(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1010:instant + iGapDuration |==> instant % iGapDuration
9702:AOR:+(long,long):*(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1010:instant + iGapDuration |==> instant * iGapDuration
9703:AOR:+(long,long):-(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1010:instant + iGapDuration |==> instant - iGapDuration
9704:AOR:+(long,long):/(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1010:instant + iGapDuration |==> instant / iGapDuration
9705:ROR:<(long,long):!=(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1010:instant + iGapDuration < iCutover |==> instant + iGapDuration != iCutover
9706:ROR:<(long,long):<=(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1010:instant + iGapDuration < iCutover |==> instant + iGapDuration <= iCutover
9707:ROR:<(long,long):FALSE(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1010:instant + iGapDuration < iCutover |==> false
9708:COR:iConvertByWeekyear:TRUE:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1011:iConvertByWeekyear |==> false
9709:COR:iConvertByWeekyear:FALSE:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1011:iConvertByWeekyear |==> true
9710:LVR:0:POS:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1013:0 |==> 1
9711:LVR:0:NEG:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1013:0 |==> -1
9712:ROR:<=(int,int):<(int,int):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1013:wyear <= 0 |==> wyear < 0
9713:ROR:<=(int,int):==(int,int):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1013:wyear <= 0 |==> wyear == 0
9714:ROR:<=(int,int):TRUE(int,int):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1013:wyear <= 0 |==> true
9715:LVR:NEG:0:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1014:-1 |==> 0
9716:LVR:NEG:POS:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1014:-1 |==> 1
9717:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1014:instant = iGregorianChronology.weekyear().add(instant, -1) |==> <NO-OP>
9718:LVR:0:POS:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1018:0 |==> 1
9719:LVR:0:NEG:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1018:0 |==> -1
9720:ROR:<=(int,int):<(int,int):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1018:year <= 0 |==> year < 0
9721:ROR:<=(int,int):==(int,int):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1018:year <= 0 |==> year == 0
9722:ROR:<=(int,int):TRUE(int,int):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1018:year <= 0 |==> true
9723:LVR:NEG:0:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1019:-1 |==> 0
9724:LVR:NEG:POS:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1019:-1 |==> 1
9725:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1019:instant = iGregorianChronology.year().add(instant, -1) |==> <NO-OP>
9726:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1022:instant = gregorianToJulian(instant) |==> <NO-OP>
9727:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1026:instant = iJulianField.add(instant, value) |==> <NO-OP>
9728:ROR:>=(long,long):==(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1027:instant >= iCutover |==> instant == iCutover
9729:ROR:>=(long,long):>(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1027:instant >= iCutover |==> instant > iCutover
9730:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1027:instant >= iCutover |==> true
9731:AOR:-(long,long):%(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1029:instant - iGapDuration |==> instant % iGapDuration
9732:AOR:-(long,long):*(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1029:instant - iGapDuration |==> instant * iGapDuration
9733:AOR:-(long,long):+(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1029:instant - iGapDuration |==> instant + iGapDuration
9734:AOR:-(long,long):/(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1029:instant - iGapDuration |==> instant / iGapDuration
9735:ROR:>=(long,long):==(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1029:instant - iGapDuration >= iCutover |==> instant - iGapDuration == iCutover
9736:ROR:>=(long,long):>(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1029:instant - iGapDuration >= iCutover |==> instant - iGapDuration > iCutover
9737:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1029:instant - iGapDuration >= iCutover |==> true
9738:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,int):1031:instant = julianToGregorian(instant) |==> <NO-OP>
9739:ROR:>=(long,long):==(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1039:instant >= iCutover |==> instant == iCutover
9740:ROR:>=(long,long):>(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1039:instant >= iCutover |==> instant > iCutover
9741:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1039:instant >= iCutover |==> true
9742:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1040:instant = iGregorianField.add(instant, value) |==> <NO-OP>
9743:ROR:<(long,long):!=(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1041:instant < iCutover |==> instant != iCutover
9744:ROR:<(long,long):<=(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1041:instant < iCutover |==> instant <= iCutover
9745:ROR:<(long,long):FALSE(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1041:instant < iCutover |==> false
9746:AOR:+(long,long):%(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1043:instant + iGapDuration |==> instant % iGapDuration
9747:AOR:+(long,long):*(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1043:instant + iGapDuration |==> instant * iGapDuration
9748:AOR:+(long,long):-(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1043:instant + iGapDuration |==> instant - iGapDuration
9749:AOR:+(long,long):/(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1043:instant + iGapDuration |==> instant / iGapDuration
9750:ROR:<(long,long):!=(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1043:instant + iGapDuration < iCutover |==> instant + iGapDuration != iCutover
9751:ROR:<(long,long):<=(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1043:instant + iGapDuration < iCutover |==> instant + iGapDuration <= iCutover
9752:ROR:<(long,long):FALSE(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1043:instant + iGapDuration < iCutover |==> false
9753:COR:iConvertByWeekyear:TRUE:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1044:iConvertByWeekyear |==> false
9754:COR:iConvertByWeekyear:FALSE:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1044:iConvertByWeekyear |==> true
9755:LVR:0:POS:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1046:0 |==> 1
9756:LVR:0:NEG:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1046:0 |==> -1
9757:ROR:<=(int,int):<(int,int):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1046:wyear <= 0 |==> wyear < 0
9758:ROR:<=(int,int):==(int,int):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1046:wyear <= 0 |==> wyear == 0
9759:ROR:<=(int,int):TRUE(int,int):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1046:wyear <= 0 |==> true
9760:LVR:NEG:0:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1047:-1 |==> 0
9761:LVR:NEG:POS:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1047:-1 |==> 1
9762:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1047:instant = iGregorianChronology.weekyear().add(instant, -1) |==> <NO-OP>
9763:LVR:0:POS:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1051:0 |==> 1
9764:LVR:0:NEG:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1051:0 |==> -1
9765:ROR:<=(int,int):<(int,int):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1051:year <= 0 |==> year < 0
9766:ROR:<=(int,int):==(int,int):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1051:year <= 0 |==> year == 0
9767:ROR:<=(int,int):TRUE(int,int):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1051:year <= 0 |==> true
9768:LVR:NEG:0:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1052:-1 |==> 0
9769:LVR:NEG:POS:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1052:-1 |==> 1
9770:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1052:instant = iGregorianChronology.year().add(instant, -1) |==> <NO-OP>
9771:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1055:instant = gregorianToJulian(instant) |==> <NO-OP>
9772:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1059:instant = iJulianField.add(instant, value) |==> <NO-OP>
9773:ROR:>=(long,long):==(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1060:instant >= iCutover |==> instant == iCutover
9774:ROR:>=(long,long):>(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1060:instant >= iCutover |==> instant > iCutover
9775:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1060:instant >= iCutover |==> true
9776:AOR:-(long,long):%(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1062:instant - iGapDuration |==> instant % iGapDuration
9777:AOR:-(long,long):*(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1062:instant - iGapDuration |==> instant * iGapDuration
9778:AOR:-(long,long):+(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1062:instant - iGapDuration |==> instant + iGapDuration
9779:AOR:-(long,long):/(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1062:instant - iGapDuration |==> instant / iGapDuration
9780:ROR:>=(long,long):==(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1062:instant - iGapDuration >= iCutover |==> instant - iGapDuration == iCutover
9781:ROR:>=(long,long):>(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1062:instant - iGapDuration >= iCutover |==> instant - iGapDuration > iCutover
9782:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1062:instant - iGapDuration >= iCutover |==> true
9783:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@add(long,long):1064:instant = julianToGregorian(instant) |==> <NO-OP>
9784:ROR:>=(long,long):==(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@getDifference(long,long):1072:minuendInstant >= iCutover |==> minuendInstant == iCutover
9785:ROR:>=(long,long):>(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@getDifference(long,long):1072:minuendInstant >= iCutover |==> minuendInstant > iCutover
9786:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@getDifference(long,long):1072:minuendInstant >= iCutover |==> true
9787:ROR:>=(long,long):==(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@getDifference(long,long):1073:subtrahendInstant >= iCutover |==> subtrahendInstant == iCutover
9788:ROR:>=(long,long):>(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@getDifference(long,long):1073:subtrahendInstant >= iCutover |==> subtrahendInstant > iCutover
9789:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@getDifference(long,long):1073:subtrahendInstant >= iCutover |==> true
9790:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@getDifference(long,long):1078:minuendInstant = gregorianToJulian(minuendInstant) |==> <NO-OP>
9791:ROR:<(long,long):!=(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@getDifference(long,long):1081:subtrahendInstant < iCutover |==> subtrahendInstant != iCutover
9792:ROR:<(long,long):<=(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@getDifference(long,long):1081:subtrahendInstant < iCutover |==> subtrahendInstant <= iCutover
9793:ROR:<(long,long):FALSE(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@getDifference(long,long):1081:subtrahendInstant < iCutover |==> false
9794:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@getDifference(long,long):1086:minuendInstant = julianToGregorian(minuendInstant) |==> <NO-OP>
9795:ROR:>=(long,long):==(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@getDifferenceAsLong(long,long):1092:minuendInstant >= iCutover |==> minuendInstant == iCutover
9796:ROR:>=(long,long):>(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@getDifferenceAsLong(long,long):1092:minuendInstant >= iCutover |==> minuendInstant > iCutover
9797:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@getDifferenceAsLong(long,long):1092:minuendInstant >= iCutover |==> true
9798:ROR:>=(long,long):==(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@getDifferenceAsLong(long,long):1093:subtrahendInstant >= iCutover |==> subtrahendInstant == iCutover
9799:ROR:>=(long,long):>(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@getDifferenceAsLong(long,long):1093:subtrahendInstant >= iCutover |==> subtrahendInstant > iCutover
9800:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@getDifferenceAsLong(long,long):1093:subtrahendInstant >= iCutover |==> true
9801:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@getDifferenceAsLong(long,long):1098:minuendInstant = gregorianToJulian(minuendInstant) |==> <NO-OP>
9802:ROR:<(long,long):!=(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@getDifferenceAsLong(long,long):1101:subtrahendInstant < iCutover |==> subtrahendInstant != iCutover
9803:ROR:<(long,long):<=(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@getDifferenceAsLong(long,long):1101:subtrahendInstant < iCutover |==> subtrahendInstant <= iCutover
9804:ROR:<(long,long):FALSE(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@getDifferenceAsLong(long,long):1101:subtrahendInstant < iCutover |==> false
9805:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJChronology$ImpreciseCutoverField@getDifferenceAsLong(long,long):1106:minuendInstant = julianToGregorian(minuendInstant) |==> <NO-OP>
9806:ROR:>=(long,long):==(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@getMinimumValue(long):1122:instant >= iCutover |==> instant == iCutover
9807:ROR:>=(long,long):>(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@getMinimumValue(long):1122:instant >= iCutover |==> instant > iCutover
9808:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@getMinimumValue(long):1122:instant >= iCutover |==> true
9809:ROR:>=(long,long):==(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@getMaximumValue(long):1130:instant >= iCutover |==> instant == iCutover
9810:ROR:>=(long,long):>(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@getMaximumValue(long):1130:instant >= iCutover |==> instant > iCutover
9811:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.GJChronology$ImpreciseCutoverField@getMaximumValue(long):1130:instant >= iCutover |==> true
9812:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.DecoratedDurationField@<init>(org.joda.time.DurationField,org.joda.time.DurationFieldType):53:field == null |==> false
9813:COR:field.isSupported():TRUE:org.joda.time.field.DecoratedDurationField@<init>(org.joda.time.DurationField,org.joda.time.DurationFieldType):56:field.isSupported() |==> false
9814:COR:field.isSupported():FALSE:org.joda.time.field.DecoratedDurationField@<init>(org.joda.time.DurationField,org.joda.time.DurationFieldType):56:field.isSupported() |==> true
9815:LVR:0:POS:org.joda.time.chrono.JulianChronology@adjustYearForSet(int):78:0 |==> 1
9816:LVR:0:NEG:org.joda.time.chrono.JulianChronology@adjustYearForSet(int):78:0 |==> -1
9817:ROR:<=(int,int):<(int,int):org.joda.time.chrono.JulianChronology@adjustYearForSet(int):78:year <= 0 |==> year < 0
9818:ROR:<=(int,int):==(int,int):org.joda.time.chrono.JulianChronology@adjustYearForSet(int):78:year <= 0 |==> year == 0
9819:ROR:<=(int,int):TRUE(int,int):org.joda.time.chrono.JulianChronology@adjustYearForSet(int):78:year <= 0 |==> true
9820:LVR:0:POS:org.joda.time.chrono.JulianChronology@adjustYearForSet(int):79:0 |==> 1
9821:LVR:0:NEG:org.joda.time.chrono.JulianChronology@adjustYearForSet(int):79:0 |==> -1
9822:ROR:==(int,int):<=(int,int):org.joda.time.chrono.JulianChronology@adjustYearForSet(int):79:year == 0 |==> year <= 0
9823:ROR:==(int,int):>=(int,int):org.joda.time.chrono.JulianChronology@adjustYearForSet(int):79:year == 0 |==> year >= 0
9824:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.JulianChronology@adjustYearForSet(int):79:year == 0 |==> false
9825:STD:<INC>:<NO-OP>:org.joda.time.chrono.JulianChronology@adjustYearForSet(int):83:year++ |==> <NO-OP>
9826:LVR:POS:0:org.joda.time.chrono.JulianChronology@getInstance():104:4 |==> 0
9827:LVR:POS:NEG:org.joda.time.chrono.JulianChronology@getInstance():104:4 |==> -4
9828:LVR:POS:0:org.joda.time.chrono.JulianChronology@getInstance(org.joda.time.DateTimeZone):114:4 |==> 0
9829:LVR:POS:NEG:org.joda.time.chrono.JulianChronology@getInstance(org.joda.time.DateTimeZone):114:4 |==> -4
9830:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.JulianChronology@getInstance(org.joda.time.DateTimeZone,int):125:zone == null |==> false
9831:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.JulianChronology@getInstance(org.joda.time.DateTimeZone,int):126:zone = DateTimeZone.getDefault() |==> <NO-OP>
9832:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.JulianChronology@getInstance(org.joda.time.DateTimeZone,int):131:chronos == null |==> false
9833:LVR:POS:0:org.joda.time.chrono.JulianChronology@getInstance(org.joda.time.DateTimeZone,int):132:7 |==> 0
9834:LVR:POS:NEG:org.joda.time.chrono.JulianChronology@getInstance(org.joda.time.DateTimeZone,int):132:7 |==> -7
9835:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.JulianChronology@getInstance(org.joda.time.DateTimeZone,int):132:chronos = new JulianChronology[7] |==> <NO-OP>
9836:STD:<CALL>:<NO-OP>:org.joda.time.chrono.JulianChronology@getInstance(org.joda.time.DateTimeZone,int):133:cCache.put(zone, chronos) |==> <NO-OP>
9837:LVR:POS:0:org.joda.time.chrono.JulianChronology@getInstance(org.joda.time.DateTimeZone,int):136:1 |==> 0
9838:LVR:POS:NEG:org.joda.time.chrono.JulianChronology@getInstance(org.joda.time.DateTimeZone,int):136:1 |==> -1
9839:AOR:-(int,int):%(int,int):org.joda.time.chrono.JulianChronology@getInstance(org.joda.time.DateTimeZone,int):136:minDaysInFirstWeek - 1 |==> minDaysInFirstWeek % 1
9840:AOR:-(int,int):*(int,int):org.joda.time.chrono.JulianChronology@getInstance(org.joda.time.DateTimeZone,int):136:minDaysInFirstWeek - 1 |==> minDaysInFirstWeek * 1
9841:AOR:-(int,int):+(int,int):org.joda.time.chrono.JulianChronology@getInstance(org.joda.time.DateTimeZone,int):136:minDaysInFirstWeek - 1 |==> minDaysInFirstWeek + 1
9842:AOR:-(int,int):/(int,int):org.joda.time.chrono.JulianChronology@getInstance(org.joda.time.DateTimeZone,int):136:minDaysInFirstWeek - 1 |==> minDaysInFirstWeek / 1
9843:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.JulianChronology@getInstance(org.joda.time.DateTimeZone,int):141:chrono == null |==> false
9844:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.JulianChronology@getInstance(org.joda.time.DateTimeZone,int):142:zone == DateTimeZone.UTC |==> false
9845:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.JulianChronology@getInstance(org.joda.time.DateTimeZone,int):143:chrono = new JulianChronology(null, null, minDaysInFirstWeek) |==> <NO-OP>
9846:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.JulianChronology@getInstance(org.joda.time.DateTimeZone,int):145:chrono = getInstance(DateTimeZone.UTC, minDaysInFirstWeek) |==> <NO-OP>
9847:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.JulianChronology@getInstance(org.joda.time.DateTimeZone,int):146:chrono = new JulianChronology(ZonedChronology.getInstance(chrono, zone), null, minDaysInFirstWeek) |==> <NO-OP>
9848:LVR:POS:0:org.joda.time.chrono.JulianChronology@getInstance(org.joda.time.DateTimeZone,int):149:1 |==> 0
9849:LVR:POS:NEG:org.joda.time.chrono.JulianChronology@getInstance(org.joda.time.DateTimeZone,int):149:1 |==> -1
9850:AOR:-(int,int):%(int,int):org.joda.time.chrono.JulianChronology@getInstance(org.joda.time.DateTimeZone,int):149:minDaysInFirstWeek - 1 |==> minDaysInFirstWeek % 1
9851:AOR:-(int,int):*(int,int):org.joda.time.chrono.JulianChronology@getInstance(org.joda.time.DateTimeZone,int):149:minDaysInFirstWeek - 1 |==> minDaysInFirstWeek * 1
9852:AOR:-(int,int):+(int,int):org.joda.time.chrono.JulianChronology@getInstance(org.joda.time.DateTimeZone,int):149:minDaysInFirstWeek - 1 |==> minDaysInFirstWeek + 1
9853:AOR:-(int,int):/(int,int):org.joda.time.chrono.JulianChronology@getInstance(org.joda.time.DateTimeZone,int):149:minDaysInFirstWeek - 1 |==> minDaysInFirstWeek / 1
9854:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.JulianChronology@getInstance(org.joda.time.DateTimeZone,int):149:chronos[minDaysInFirstWeek - 1] = chrono |==> <NO-OP>
9855:LVR:0:POS:org.joda.time.chrono.JulianChronology@readResolve():171:0 |==> 1
9856:LVR:0:NEG:org.joda.time.chrono.JulianChronology@readResolve():171:0 |==> -1
9857:ROR:==(int,int):<=(int,int):org.joda.time.chrono.JulianChronology@readResolve():171:minDays == 0 |==> minDays <= 0
9858:ROR:==(int,int):>=(int,int):org.joda.time.chrono.JulianChronology@readResolve():171:minDays == 0 |==> minDays >= 0
9859:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.JulianChronology@readResolve():171:minDays == 0 |==> false
9860:LVR:POS:0:org.joda.time.chrono.JulianChronology@readResolve():171:4 |==> 0
9861:LVR:POS:NEG:org.joda.time.chrono.JulianChronology@readResolve():171:4 |==> -4
9862:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.JulianChronology@readResolve():171:minDays = (minDays == 0 ? 4 : minDays) |==> <NO-OP>
9863:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.JulianChronology@readResolve():172:base == null |==> false
9864:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.JulianChronology@withZone(org.joda.time.DateTimeZone):195:zone == null |==> false
9865:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.JulianChronology@withZone(org.joda.time.DateTimeZone):196:zone = DateTimeZone.getDefault() |==> <NO-OP>
9866:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.JulianChronology@withZone(org.joda.time.DateTimeZone):198:zone == getZone() |==> false
9867:LVR:POS:0:org.joda.time.chrono.JulianChronology@isLeapYear(int):211:3 |==> 0
9868:LVR:POS:NEG:org.joda.time.chrono.JulianChronology@isLeapYear(int):211:3 |==> -3
9869:LOR:&(int,int):^(int,int):org.joda.time.chrono.JulianChronology@isLeapYear(int):211:year & 3 |==> year ^ 3
9870:LOR:&(int,int):|(int,int):org.joda.time.chrono.JulianChronology@isLeapYear(int):211:year & 3 |==> year | 3
9871:LVR:0:POS:org.joda.time.chrono.JulianChronology@isLeapYear(int):211:0 |==> 1
9872:LVR:0:NEG:org.joda.time.chrono.JulianChronology@isLeapYear(int):211:0 |==> -1
9873:ROR:==(int,int):<=(int,int):org.joda.time.chrono.JulianChronology@isLeapYear(int):211:(year & 3) == 0 |==> (year & 3) <= 0
9874:ROR:==(int,int):>=(int,int):org.joda.time.chrono.JulianChronology@isLeapYear(int):211:(year & 3) == 0 |==> (year & 3) >= 0
9875:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.JulianChronology@isLeapYear(int):211:(year & 3) == 0 |==> false
9876:LVR:POS:0:org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):219:1968 |==> 0
9877:LVR:POS:NEG:org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):219:1968 |==> -1968
9878:AOR:-(int,int):%(int,int):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):219:year - 1968 |==> year % 1968
9879:AOR:-(int,int):*(int,int):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):219:year - 1968 |==> year * 1968
9880:AOR:-(int,int):+(int,int):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):219:year - 1968 |==> year + 1968
9881:AOR:-(int,int):/(int,int):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):219:year - 1968 |==> year / 1968
9882:LVR:0:POS:org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):221:0 |==> 1
9883:LVR:0:NEG:org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):221:0 |==> -1
9884:ROR:<=(int,int):<(int,int):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):221:relativeYear <= 0 |==> relativeYear < 0
9885:ROR:<=(int,int):==(int,int):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):221:relativeYear <= 0 |==> relativeYear == 0
9886:ROR:<=(int,int):TRUE(int,int):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):221:relativeYear <= 0 |==> true
9887:LVR:POS:0:org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):224:3 |==> 0
9888:LVR:POS:NEG:org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):224:3 |==> -3
9889:AOR:+(int,int):%(int,int):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):224:relativeYear + 3 |==> relativeYear % 3
9890:AOR:+(int,int):*(int,int):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):224:relativeYear + 3 |==> relativeYear * 3
9891:AOR:+(int,int):-(int,int):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):224:relativeYear + 3 |==> relativeYear - 3
9892:AOR:+(int,int):/(int,int):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):224:relativeYear + 3 |==> relativeYear / 3
9893:LVR:POS:0:org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):224:2 |==> 0
9894:LVR:POS:NEG:org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):224:2 |==> -2
9895:SOR:>>(int,int):<<(int,int):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):224:(relativeYear + 3) >> 2 |==> (relativeYear + 3) << 2
9896:SOR:>>(int,int):>>>(int,int):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):224:(relativeYear + 3) >> 2 |==> (relativeYear + 3) >>> 2
9897:LVR:POS:0:org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):226:2 |==> 0
9898:LVR:POS:NEG:org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):226:2 |==> -2
9899:SOR:>>(int,int):<<(int,int):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):226:relativeYear >> 2 |==> relativeYear << 2
9900:SOR:>>(int,int):>>>(int,int):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):226:relativeYear >> 2 |==> relativeYear >>> 2
9901:COR:isLeapYear(year):TRUE:org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):228:isLeapYear(year) |==> false
9902:COR:isLeapYear(year):FALSE:org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):228:isLeapYear(year) |==> true
9903:STD:<INC>:<NO-OP>:org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):229:leapYears++ |==> <NO-OP>
9904:LVR:POS:0:org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):233:365L |==> 0L
9905:LVR:POS:NEG:org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):233:365L |==> -365L
9906:AOR:*(long,long):%(long,long):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):233:relativeYear * 365L |==> relativeYear % 365L
9907:AOR:*(long,long):+(long,long):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):233:relativeYear * 365L |==> relativeYear + 365L
9908:AOR:*(long,long):-(long,long):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):233:relativeYear * 365L |==> relativeYear - 365L
9909:AOR:*(long,long):/(long,long):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):233:relativeYear * 365L |==> relativeYear / 365L
9910:AOR:+(long,long):%(long,long):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):233:relativeYear * 365L + leapYears |==> relativeYear * 365L % leapYears
9911:AOR:+(long,long):*(long,long):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):233:relativeYear * 365L + leapYears |==> relativeYear * 365L * leapYears
9912:AOR:+(long,long):-(long,long):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):233:relativeYear * 365L + leapYears |==> relativeYear * 365L - leapYears
9913:AOR:+(long,long):/(long,long):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):233:relativeYear * 365L + leapYears |==> relativeYear * 365L / leapYears
9914:AOR:*(long,long):%(long,long):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):233:(relativeYear * 365L + leapYears) * (long)DateTimeConstants.MILLIS_PER_DAY |==> (relativeYear * 365L + leapYears) % (long)DateTimeConstants.MILLIS_PER_DAY
9915:AOR:*(long,long):+(long,long):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):233:(relativeYear * 365L + leapYears) * (long)DateTimeConstants.MILLIS_PER_DAY |==> (relativeYear * 365L + leapYears) + (long)DateTimeConstants.MILLIS_PER_DAY
9916:AOR:*(long,long):-(long,long):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):233:(relativeYear * 365L + leapYears) * (long)DateTimeConstants.MILLIS_PER_DAY |==> (relativeYear * 365L + leapYears) - (long)DateTimeConstants.MILLIS_PER_DAY
9917:AOR:*(long,long):/(long,long):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):233:(relativeYear * 365L + leapYears) * (long)DateTimeConstants.MILLIS_PER_DAY |==> (relativeYear * 365L + leapYears) / (long)DateTimeConstants.MILLIS_PER_DAY
9918:LVR:POS:0:org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):237:366L |==> 0L
9919:LVR:POS:NEG:org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):237:366L |==> -366L
9920:LVR:POS:0:org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):237:352 |==> 0
9921:LVR:POS:NEG:org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):237:352 |==> -352
9922:AOR:+(long,long):%(long,long):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):237:366L + 352 |==> 366L % 352
9923:AOR:+(long,long):*(long,long):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):237:366L + 352 |==> 366L * 352
9924:AOR:+(long,long):-(long,long):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):237:366L + 352 |==> 366L - 352
9925:AOR:+(long,long):/(long,long):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):237:366L + 352 |==> 366L / 352
9926:AOR:*(long,long):%(long,long):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):237:(366L + 352) * DateTimeConstants.MILLIS_PER_DAY |==> (366L + 352) % DateTimeConstants.MILLIS_PER_DAY
9927:AOR:*(long,long):+(long,long):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):237:(366L + 352) * DateTimeConstants.MILLIS_PER_DAY |==> (366L + 352) + DateTimeConstants.MILLIS_PER_DAY
9928:AOR:*(long,long):-(long,long):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):237:(366L + 352) * DateTimeConstants.MILLIS_PER_DAY |==> (366L + 352) - DateTimeConstants.MILLIS_PER_DAY
9929:AOR:*(long,long):/(long,long):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):237:(366L + 352) * DateTimeConstants.MILLIS_PER_DAY |==> (366L + 352) / DateTimeConstants.MILLIS_PER_DAY
9930:AOR:-(long,long):%(long,long):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):237:millis - (366L + 352) * DateTimeConstants.MILLIS_PER_DAY |==> millis % ((366L + 352) * DateTimeConstants.MILLIS_PER_DAY)
9931:AOR:-(long,long):*(long,long):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):237:millis - (366L + 352) * DateTimeConstants.MILLIS_PER_DAY |==> millis * ((366L + 352) * DateTimeConstants.MILLIS_PER_DAY)
9932:AOR:-(long,long):+(long,long):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):237:millis - (366L + 352) * DateTimeConstants.MILLIS_PER_DAY |==> millis + (366L + 352) * DateTimeConstants.MILLIS_PER_DAY
9933:AOR:-(long,long):/(long,long):org.joda.time.chrono.JulianChronology@calculateFirstDayOfYearMillis(int):237:millis - (366L + 352) * DateTimeConstants.MILLIS_PER_DAY |==> millis / ((366L + 352) * DateTimeConstants.MILLIS_PER_DAY)
9934:LVR:POS:0:org.joda.time.chrono.JulianChronology@getAverageMillisPerYearDividedByTwo():253:2 |==> 0
9935:LVR:POS:NEG:org.joda.time.chrono.JulianChronology@getAverageMillisPerYearDividedByTwo():253:2 |==> -2
9936:AOR:/(long,long):%(long,long):org.joda.time.chrono.JulianChronology@getAverageMillisPerYearDividedByTwo():253:MILLIS_PER_YEAR / 2 |==> MILLIS_PER_YEAR % 2
9937:AOR:/(long,long):*(long,long):org.joda.time.chrono.JulianChronology@getAverageMillisPerYearDividedByTwo():253:MILLIS_PER_YEAR / 2 |==> MILLIS_PER_YEAR * 2
9938:AOR:/(long,long):+(long,long):org.joda.time.chrono.JulianChronology@getAverageMillisPerYearDividedByTwo():253:MILLIS_PER_YEAR / 2 |==> MILLIS_PER_YEAR + 2
9939:AOR:/(long,long):-(long,long):org.joda.time.chrono.JulianChronology@getAverageMillisPerYearDividedByTwo():253:MILLIS_PER_YEAR / 2 |==> MILLIS_PER_YEAR - 2
9940:LVR:POS:0:org.joda.time.chrono.JulianChronology@getApproxMillisAtEpochDividedByTwo():261:1969L |==> 0L
9941:LVR:POS:NEG:org.joda.time.chrono.JulianChronology@getApproxMillisAtEpochDividedByTwo():261:1969L |==> -1969L
9942:AOR:*(long,long):%(long,long):org.joda.time.chrono.JulianChronology@getApproxMillisAtEpochDividedByTwo():261:1969L * MILLIS_PER_YEAR |==> 1969L % MILLIS_PER_YEAR
9943:AOR:*(long,long):+(long,long):org.joda.time.chrono.JulianChronology@getApproxMillisAtEpochDividedByTwo():261:1969L * MILLIS_PER_YEAR |==> 1969L + MILLIS_PER_YEAR
9944:AOR:*(long,long):-(long,long):org.joda.time.chrono.JulianChronology@getApproxMillisAtEpochDividedByTwo():261:1969L * MILLIS_PER_YEAR |==> 1969L - MILLIS_PER_YEAR
9945:AOR:*(long,long):/(long,long):org.joda.time.chrono.JulianChronology@getApproxMillisAtEpochDividedByTwo():261:1969L * MILLIS_PER_YEAR |==> 1969L / MILLIS_PER_YEAR
9946:LVR:POS:0:org.joda.time.chrono.JulianChronology@getApproxMillisAtEpochDividedByTwo():261:352L |==> 0L
9947:LVR:POS:NEG:org.joda.time.chrono.JulianChronology@getApproxMillisAtEpochDividedByTwo():261:352L |==> -352L
9948:AOR:*(long,long):%(long,long):org.joda.time.chrono.JulianChronology@getApproxMillisAtEpochDividedByTwo():261:352L * DateTimeConstants.MILLIS_PER_DAY |==> 352L % DateTimeConstants.MILLIS_PER_DAY
9949:AOR:*(long,long):+(long,long):org.joda.time.chrono.JulianChronology@getApproxMillisAtEpochDividedByTwo():261:352L * DateTimeConstants.MILLIS_PER_DAY |==> 352L + DateTimeConstants.MILLIS_PER_DAY
9950:AOR:*(long,long):-(long,long):org.joda.time.chrono.JulianChronology@getApproxMillisAtEpochDividedByTwo():261:352L * DateTimeConstants.MILLIS_PER_DAY |==> 352L - DateTimeConstants.MILLIS_PER_DAY
9951:AOR:*(long,long):/(long,long):org.joda.time.chrono.JulianChronology@getApproxMillisAtEpochDividedByTwo():261:352L * DateTimeConstants.MILLIS_PER_DAY |==> 352L / DateTimeConstants.MILLIS_PER_DAY
9952:AOR:+(long,long):%(long,long):org.joda.time.chrono.JulianChronology@getApproxMillisAtEpochDividedByTwo():261:1969L * MILLIS_PER_YEAR + 352L * DateTimeConstants.MILLIS_PER_DAY |==> 1969L * MILLIS_PER_YEAR % (352L * DateTimeConstants.MILLIS_PER_DAY)
9953:AOR:+(long,long):*(long,long):org.joda.time.chrono.JulianChronology@getApproxMillisAtEpochDividedByTwo():261:1969L * MILLIS_PER_YEAR + 352L * DateTimeConstants.MILLIS_PER_DAY |==> 1969L * MILLIS_PER_YEAR * (352L * DateTimeConstants.MILLIS_PER_DAY)
9954:AOR:+(long,long):-(long,long):org.joda.time.chrono.JulianChronology@getApproxMillisAtEpochDividedByTwo():261:1969L * MILLIS_PER_YEAR + 352L * DateTimeConstants.MILLIS_PER_DAY |==> 1969L * MILLIS_PER_YEAR - 352L * DateTimeConstants.MILLIS_PER_DAY
9955:AOR:+(long,long):/(long,long):org.joda.time.chrono.JulianChronology@getApproxMillisAtEpochDividedByTwo():261:1969L * MILLIS_PER_YEAR + 352L * DateTimeConstants.MILLIS_PER_DAY |==> 1969L * MILLIS_PER_YEAR / (352L * DateTimeConstants.MILLIS_PER_DAY)
9956:LVR:POS:0:org.joda.time.chrono.JulianChronology@getApproxMillisAtEpochDividedByTwo():261:2 |==> 0
9957:LVR:POS:NEG:org.joda.time.chrono.JulianChronology@getApproxMillisAtEpochDividedByTwo():261:2 |==> -2
9958:AOR:/(long,long):%(long,long):org.joda.time.chrono.JulianChronology@getApproxMillisAtEpochDividedByTwo():261:(1969L * MILLIS_PER_YEAR + 352L * DateTimeConstants.MILLIS_PER_DAY) / 2 |==> (1969L * MILLIS_PER_YEAR + 352L * DateTimeConstants.MILLIS_PER_DAY) % 2
9959:AOR:/(long,long):*(long,long):org.joda.time.chrono.JulianChronology@getApproxMillisAtEpochDividedByTwo():261:(1969L * MILLIS_PER_YEAR + 352L * DateTimeConstants.MILLIS_PER_DAY) / 2 |==> (1969L * MILLIS_PER_YEAR + 352L * DateTimeConstants.MILLIS_PER_DAY) * 2
9960:AOR:/(long,long):+(long,long):org.joda.time.chrono.JulianChronology@getApproxMillisAtEpochDividedByTwo():261:(1969L * MILLIS_PER_YEAR + 352L * DateTimeConstants.MILLIS_PER_DAY) / 2 |==> (1969L * MILLIS_PER_YEAR + 352L * DateTimeConstants.MILLIS_PER_DAY) + 2
9961:AOR:/(long,long):-(long,long):org.joda.time.chrono.JulianChronology@getApproxMillisAtEpochDividedByTwo():261:(1969L * MILLIS_PER_YEAR + 352L * DateTimeConstants.MILLIS_PER_DAY) / 2 |==> (1969L * MILLIS_PER_YEAR + 352L * DateTimeConstants.MILLIS_PER_DAY) - 2
9962:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.JulianChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):265:getBase() == null |==> false
9963:STD:<CALL>:<NO-OP>:org.joda.time.chrono.JulianChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):266:super.assemble(fields) |==> <NO-OP>
9964:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.JulianChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):268:fields.year = new SkipDateTimeField(this, fields.year) |==> <NO-OP>
9965:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.JulianChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):269:fields.weekyear = new SkipDateTimeField(this, fields.weekyear) |==> <NO-OP>
9966:LVR:POS:0:org.joda.time.chrono.GregorianChronology@getInstance():90:4 |==> 0
9967:LVR:POS:NEG:org.joda.time.chrono.GregorianChronology@getInstance():90:4 |==> -4
9968:LVR:POS:0:org.joda.time.chrono.GregorianChronology@getInstance(org.joda.time.DateTimeZone):100:4 |==> 0
9969:LVR:POS:NEG:org.joda.time.chrono.GregorianChronology@getInstance(org.joda.time.DateTimeZone):100:4 |==> -4
9970:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.GregorianChronology@getInstance(org.joda.time.DateTimeZone,int):111:zone == null |==> false
9971:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GregorianChronology@getInstance(org.joda.time.DateTimeZone,int):112:zone = DateTimeZone.getDefault() |==> <NO-OP>
9972:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.GregorianChronology@getInstance(org.joda.time.DateTimeZone,int):117:chronos == null |==> false
9973:LVR:POS:0:org.joda.time.chrono.GregorianChronology@getInstance(org.joda.time.DateTimeZone,int):118:7 |==> 0
9974:LVR:POS:NEG:org.joda.time.chrono.GregorianChronology@getInstance(org.joda.time.DateTimeZone,int):118:7 |==> -7
9975:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GregorianChronology@getInstance(org.joda.time.DateTimeZone,int):118:chronos = new GregorianChronology[7] |==> <NO-OP>
9976:STD:<CALL>:<NO-OP>:org.joda.time.chrono.GregorianChronology@getInstance(org.joda.time.DateTimeZone,int):119:cCache.put(zone, chronos) |==> <NO-OP>
9977:LVR:POS:0:org.joda.time.chrono.GregorianChronology@getInstance(org.joda.time.DateTimeZone,int):122:1 |==> 0
9978:LVR:POS:NEG:org.joda.time.chrono.GregorianChronology@getInstance(org.joda.time.DateTimeZone,int):122:1 |==> -1
9979:AOR:-(int,int):%(int,int):org.joda.time.chrono.GregorianChronology@getInstance(org.joda.time.DateTimeZone,int):122:minDaysInFirstWeek - 1 |==> minDaysInFirstWeek % 1
9980:AOR:-(int,int):*(int,int):org.joda.time.chrono.GregorianChronology@getInstance(org.joda.time.DateTimeZone,int):122:minDaysInFirstWeek - 1 |==> minDaysInFirstWeek * 1
9981:AOR:-(int,int):+(int,int):org.joda.time.chrono.GregorianChronology@getInstance(org.joda.time.DateTimeZone,int):122:minDaysInFirstWeek - 1 |==> minDaysInFirstWeek + 1
9982:AOR:-(int,int):/(int,int):org.joda.time.chrono.GregorianChronology@getInstance(org.joda.time.DateTimeZone,int):122:minDaysInFirstWeek - 1 |==> minDaysInFirstWeek / 1
9983:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.GregorianChronology@getInstance(org.joda.time.DateTimeZone,int):127:chrono == null |==> false
9984:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.GregorianChronology@getInstance(org.joda.time.DateTimeZone,int):128:zone == DateTimeZone.UTC |==> false
9985:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GregorianChronology@getInstance(org.joda.time.DateTimeZone,int):129:chrono = new GregorianChronology(null, null, minDaysInFirstWeek) |==> <NO-OP>
9986:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GregorianChronology@getInstance(org.joda.time.DateTimeZone,int):131:chrono = getInstance(DateTimeZone.UTC, minDaysInFirstWeek) |==> <NO-OP>
9987:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GregorianChronology@getInstance(org.joda.time.DateTimeZone,int):132:chrono = new GregorianChronology(ZonedChronology.getInstance(chrono, zone), null, minDaysInFirstWeek) |==> <NO-OP>
9988:LVR:POS:0:org.joda.time.chrono.GregorianChronology@getInstance(org.joda.time.DateTimeZone,int):135:1 |==> 0
9989:LVR:POS:NEG:org.joda.time.chrono.GregorianChronology@getInstance(org.joda.time.DateTimeZone,int):135:1 |==> -1
9990:AOR:-(int,int):%(int,int):org.joda.time.chrono.GregorianChronology@getInstance(org.joda.time.DateTimeZone,int):135:minDaysInFirstWeek - 1 |==> minDaysInFirstWeek % 1
9991:AOR:-(int,int):*(int,int):org.joda.time.chrono.GregorianChronology@getInstance(org.joda.time.DateTimeZone,int):135:minDaysInFirstWeek - 1 |==> minDaysInFirstWeek * 1
9992:AOR:-(int,int):+(int,int):org.joda.time.chrono.GregorianChronology@getInstance(org.joda.time.DateTimeZone,int):135:minDaysInFirstWeek - 1 |==> minDaysInFirstWeek + 1
9993:AOR:-(int,int):/(int,int):org.joda.time.chrono.GregorianChronology@getInstance(org.joda.time.DateTimeZone,int):135:minDaysInFirstWeek - 1 |==> minDaysInFirstWeek / 1
9994:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GregorianChronology@getInstance(org.joda.time.DateTimeZone,int):135:chronos[minDaysInFirstWeek - 1] = chrono |==> <NO-OP>
9995:LVR:0:POS:org.joda.time.chrono.GregorianChronology@readResolve():157:0 |==> 1
9996:LVR:0:NEG:org.joda.time.chrono.GregorianChronology@readResolve():157:0 |==> -1
9997:ROR:==(int,int):<=(int,int):org.joda.time.chrono.GregorianChronology@readResolve():157:minDays == 0 |==> minDays <= 0
9998:ROR:==(int,int):>=(int,int):org.joda.time.chrono.GregorianChronology@readResolve():157:minDays == 0 |==> minDays >= 0
9999:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.GregorianChronology@readResolve():157:minDays == 0 |==> false
10000:LVR:POS:0:org.joda.time.chrono.GregorianChronology@readResolve():157:4 |==> 0
10001:LVR:POS:NEG:org.joda.time.chrono.GregorianChronology@readResolve():157:4 |==> -4
10002:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GregorianChronology@readResolve():157:minDays = (minDays == 0 ? 4 : minDays) |==> <NO-OP>
10003:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.GregorianChronology@readResolve():158:base == null |==> false
10004:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.GregorianChronology@withZone(org.joda.time.DateTimeZone):181:zone == null |==> false
10005:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GregorianChronology@withZone(org.joda.time.DateTimeZone):182:zone = DateTimeZone.getDefault() |==> <NO-OP>
10006:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.GregorianChronology@withZone(org.joda.time.DateTimeZone):184:zone == getZone() |==> false
10007:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.GregorianChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):191:getBase() == null |==> false
10008:STD:<CALL>:<NO-OP>:org.joda.time.chrono.GregorianChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):192:super.assemble(fields) |==> <NO-OP>
10009:LVR:POS:0:org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:3 |==> 0
10010:LVR:POS:NEG:org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:3 |==> -3
10011:LOR:&(int,int):^(int,int):org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:year & 3 |==> year ^ 3
10012:LOR:&(int,int):|(int,int):org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:year & 3 |==> year | 3
10013:LVR:0:POS:org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:0 |==> 1
10014:LVR:0:NEG:org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:0 |==> -1
10015:ROR:==(int,int):<=(int,int):org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:(year & 3) == 0 |==> (year & 3) <= 0
10016:ROR:==(int,int):>=(int,int):org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:(year & 3) == 0 |==> (year & 3) >= 0
10017:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:(year & 3) == 0 |==> false
10018:LVR:POS:0:org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:100 |==> 0
10019:LVR:POS:NEG:org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:100 |==> -100
10020:AOR:%(int,int):*(int,int):org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:year % 100 |==> year * 100
10021:AOR:%(int,int):+(int,int):org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:year % 100 |==> year + 100
10022:AOR:%(int,int):-(int,int):org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:year % 100 |==> year - 100
10023:AOR:%(int,int):/(int,int):org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:year % 100 |==> year / 100
10024:LVR:0:POS:org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:0 |==> 1
10025:LVR:0:NEG:org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:0 |==> -1
10026:ROR:!=(int,int):<(int,int):org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:(year % 100) != 0 |==> (year % 100) < 0
10027:ROR:!=(int,int):>(int,int):org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:(year % 100) != 0 |==> (year % 100) > 0
10028:ROR:!=(int,int):TRUE(int,int):org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:(year % 100) != 0 |==> true
10029:LVR:POS:0:org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:400 |==> 0
10030:LVR:POS:NEG:org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:400 |==> -400
10031:AOR:%(int,int):*(int,int):org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:year % 400 |==> year * 400
10032:AOR:%(int,int):+(int,int):org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:year % 400 |==> year + 400
10033:AOR:%(int,int):-(int,int):org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:year % 400 |==> year - 400
10034:AOR:%(int,int):/(int,int):org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:year % 400 |==> year / 400
10035:LVR:0:POS:org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:0 |==> 1
10036:LVR:0:NEG:org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:0 |==> -1
10037:ROR:==(int,int):<=(int,int):org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:(year % 400) == 0 |==> (year % 400) <= 0
10038:ROR:==(int,int):>=(int,int):org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:(year % 400) == 0 |==> (year % 400) >= 0
10039:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:(year % 400) == 0 |==> false
10040:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:(year % 100) != 0 || (year % 400) == 0 |==> (year % 100) != 0 != ((year % 400) == 0)
10041:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:(year % 100) != 0 || (year % 400) == 0 |==> (year % 100) != 0
10042:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:(year % 100) != 0 || (year % 400) == 0 |==> (year % 400) == 0
10043:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:(year % 100) != 0 || (year % 400) == 0 |==> true
10044:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:((year & 3) == 0) && ((year % 100) != 0 || (year % 400) == 0) |==> ((year & 3) == 0) == ((year % 100) != 0 || (year % 400) == 0)
10045:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:((year & 3) == 0) && ((year % 100) != 0 || (year % 400) == 0) |==> false
10046:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:((year & 3) == 0) && ((year % 100) != 0 || (year % 400) == 0) |==> ((year & 3) == 0)
10047:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.GregorianChronology@isLeapYear(int):197:((year & 3) == 0) && ((year % 100) != 0 || (year % 400) == 0) |==> ((year % 100) != 0 || (year % 400) == 0)
10048:LVR:POS:0:org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):202:100 |==> 0
10049:LVR:POS:NEG:org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):202:100 |==> -100
10050:AOR:/(int,int):%(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):202:year / 100 |==> year % 100
10051:AOR:/(int,int):*(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):202:year / 100 |==> year * 100
10052:AOR:/(int,int):+(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):202:year / 100 |==> year + 100
10053:AOR:/(int,int):-(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):202:year / 100 |==> year - 100
10054:LVR:0:POS:org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):203:0 |==> 1
10055:LVR:0:NEG:org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):203:0 |==> -1
10056:ROR:<(int,int):!=(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):203:year < 0 |==> year != 0
10057:ROR:<(int,int):<=(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):203:year < 0 |==> year <= 0
10058:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):203:year < 0 |==> false
10059:LVR:POS:0:org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):209:3 |==> 0
10060:LVR:POS:NEG:org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):209:3 |==> -3
10061:AOR:+(int,int):%(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):209:year + 3 |==> year % 3
10062:AOR:+(int,int):*(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):209:year + 3 |==> year * 3
10063:AOR:+(int,int):-(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):209:year + 3 |==> year - 3
10064:AOR:+(int,int):/(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):209:year + 3 |==> year / 3
10065:LVR:POS:0:org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):209:2 |==> 0
10066:LVR:POS:NEG:org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):209:2 |==> -2
10067:SOR:>>(int,int):<<(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):209:(year + 3) >> 2 |==> (year + 3) << 2
10068:SOR:>>(int,int):>>>(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):209:(year + 3) >> 2 |==> (year + 3) >>> 2
10069:AOR:-(int,int):%(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):209:((year + 3) >> 2) - leapYears |==> ((year + 3) >> 2) % leapYears
10070:AOR:-(int,int):*(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):209:((year + 3) >> 2) - leapYears |==> ((year + 3) >> 2) * leapYears
10071:AOR:-(int,int):+(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):209:((year + 3) >> 2) - leapYears |==> ((year + 3) >> 2) + leapYears
10072:AOR:-(int,int):/(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):209:((year + 3) >> 2) - leapYears |==> ((year + 3) >> 2) / leapYears
10073:LVR:POS:0:org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):209:3 |==> 0
10074:LVR:POS:NEG:org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):209:3 |==> -3
10075:AOR:+(int,int):%(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):209:leapYears + 3 |==> leapYears % 3
10076:AOR:+(int,int):*(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):209:leapYears + 3 |==> leapYears * 3
10077:AOR:+(int,int):-(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):209:leapYears + 3 |==> leapYears - 3
10078:AOR:+(int,int):/(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):209:leapYears + 3 |==> leapYears / 3
10079:LVR:POS:0:org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):209:2 |==> 0
10080:LVR:POS:NEG:org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):209:2 |==> -2
10081:SOR:>>(int,int):<<(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):209:(leapYears + 3) >> 2 |==> (leapYears + 3) << 2
10082:SOR:>>(int,int):>>>(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):209:(leapYears + 3) >> 2 |==> (leapYears + 3) >>> 2
10083:AOR:+(int,int):%(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):209:((year + 3) >> 2) - leapYears + ((leapYears + 3) >> 2) |==> (((year + 3) >> 2) - leapYears) % ((leapYears + 3) >> 2)
10084:AOR:+(int,int):*(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):209:((year + 3) >> 2) - leapYears + ((leapYears + 3) >> 2) |==> (((year + 3) >> 2) - leapYears) * ((leapYears + 3) >> 2)
10085:AOR:+(int,int):-(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):209:((year + 3) >> 2) - leapYears + ((leapYears + 3) >> 2) |==> ((year + 3) >> 2) - leapYears - ((leapYears + 3) >> 2)
10086:AOR:+(int,int):/(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):209:((year + 3) >> 2) - leapYears + ((leapYears + 3) >> 2) |==> (((year + 3) >> 2) - leapYears) / ((leapYears + 3) >> 2)
10087:LVR:POS:0:org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):209:1 |==> 0
10088:LVR:POS:NEG:org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):209:1 |==> -1
10089:AOR:-(int,int):%(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):209:((year + 3) >> 2) - leapYears + ((leapYears + 3) >> 2) - 1 |==> (((year + 3) >> 2) - leapYears + ((leapYears + 3) >> 2)) % 1
10090:AOR:-(int,int):*(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):209:((year + 3) >> 2) - leapYears + ((leapYears + 3) >> 2) - 1 |==> (((year + 3) >> 2) - leapYears + ((leapYears + 3) >> 2)) * 1
10091:AOR:-(int,int):+(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):209:((year + 3) >> 2) - leapYears + ((leapYears + 3) >> 2) - 1 |==> ((year + 3) >> 2) - leapYears + ((leapYears + 3) >> 2) + 1
10092:AOR:-(int,int):/(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):209:((year + 3) >> 2) - leapYears + ((leapYears + 3) >> 2) - 1 |==> (((year + 3) >> 2) - leapYears + ((leapYears + 3) >> 2)) / 1
10093:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):209:leapYears = ((year + 3) >> 2) - leapYears + ((leapYears + 3) >> 2) - 1 |==> <NO-OP>
10094:LVR:POS:0:org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):211:2 |==> 0
10095:LVR:POS:NEG:org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):211:2 |==> -2
10096:SOR:>>(int,int):<<(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):211:year >> 2 |==> year << 2
10097:SOR:>>(int,int):>>>(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):211:year >> 2 |==> year >>> 2
10098:AOR:-(int,int):%(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):211:(year >> 2) - leapYears |==> (year >> 2) % leapYears
10099:AOR:-(int,int):*(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):211:(year >> 2) - leapYears |==> (year >> 2) * leapYears
10100:AOR:-(int,int):+(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):211:(year >> 2) - leapYears |==> (year >> 2) + leapYears
10101:AOR:-(int,int):/(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):211:(year >> 2) - leapYears |==> (year >> 2) / leapYears
10102:LVR:POS:0:org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):211:2 |==> 0
10103:LVR:POS:NEG:org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):211:2 |==> -2
10104:SOR:>>(int,int):<<(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):211:leapYears >> 2 |==> leapYears << 2
10105:SOR:>>(int,int):>>>(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):211:leapYears >> 2 |==> leapYears >>> 2
10106:AOR:+(int,int):%(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):211:(year >> 2) - leapYears + (leapYears >> 2) |==> ((year >> 2) - leapYears) % (leapYears >> 2)
10107:AOR:+(int,int):*(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):211:(year >> 2) - leapYears + (leapYears >> 2) |==> ((year >> 2) - leapYears) * (leapYears >> 2)
10108:AOR:+(int,int):-(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):211:(year >> 2) - leapYears + (leapYears >> 2) |==> (year >> 2) - leapYears - (leapYears >> 2)
10109:AOR:+(int,int):/(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):211:(year >> 2) - leapYears + (leapYears >> 2) |==> ((year >> 2) - leapYears) / (leapYears >> 2)
10110:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):211:leapYears = (year >> 2) - leapYears + (leapYears >> 2) |==> <NO-OP>
10111:COR:isLeapYear(year):TRUE:org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):212:isLeapYear(year) |==> false
10112:COR:isLeapYear(year):FALSE:org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):212:isLeapYear(year) |==> true
10113:STD:<DEC>:<NO-OP>:org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):213:leapYears-- |==> <NO-OP>
10114:LVR:POS:0:org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):217:365L |==> 0L
10115:LVR:POS:NEG:org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):217:365L |==> -365L
10116:AOR:*(long,long):%(long,long):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):217:year * 365L |==> year % 365L
10117:AOR:*(long,long):+(long,long):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):217:year * 365L |==> year + 365L
10118:AOR:*(long,long):-(long,long):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):217:year * 365L |==> year - 365L
10119:AOR:*(long,long):/(long,long):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):217:year * 365L |==> year / 365L
10120:AOR:-(int,int):%(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):217:leapYears - DAYS_0000_TO_1970 |==> leapYears % DAYS_0000_TO_1970
10121:AOR:-(int,int):*(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):217:leapYears - DAYS_0000_TO_1970 |==> leapYears * DAYS_0000_TO_1970
10122:AOR:-(int,int):+(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):217:leapYears - DAYS_0000_TO_1970 |==> leapYears + DAYS_0000_TO_1970
10123:AOR:-(int,int):/(int,int):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):217:leapYears - DAYS_0000_TO_1970 |==> leapYears / DAYS_0000_TO_1970
10124:AOR:+(long,long):%(long,long):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):217:year * 365L + (leapYears - DAYS_0000_TO_1970) |==> year * 365L % (leapYears - DAYS_0000_TO_1970)
10125:AOR:+(long,long):*(long,long):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):217:year * 365L + (leapYears - DAYS_0000_TO_1970) |==> year * 365L * (leapYears - DAYS_0000_TO_1970)
10126:AOR:+(long,long):-(long,long):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):217:year * 365L + (leapYears - DAYS_0000_TO_1970) |==> year * 365L - (leapYears - DAYS_0000_TO_1970)
10127:AOR:+(long,long):/(long,long):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):217:year * 365L + (leapYears - DAYS_0000_TO_1970) |==> year * 365L / (leapYears - DAYS_0000_TO_1970)
10128:AOR:*(long,long):%(long,long):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):217:(year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY |==> (year * 365L + (leapYears - DAYS_0000_TO_1970)) % DateTimeConstants.MILLIS_PER_DAY
10129:AOR:*(long,long):+(long,long):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):217:(year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY |==> (year * 365L + (leapYears - DAYS_0000_TO_1970)) + DateTimeConstants.MILLIS_PER_DAY
10130:AOR:*(long,long):-(long,long):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):217:(year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY |==> (year * 365L + (leapYears - DAYS_0000_TO_1970)) - DateTimeConstants.MILLIS_PER_DAY
10131:AOR:*(long,long):/(long,long):org.joda.time.chrono.GregorianChronology@calculateFirstDayOfYearMillis(int):217:(year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY |==> (year * 365L + (leapYears - DAYS_0000_TO_1970)) / DateTimeConstants.MILLIS_PER_DAY
10132:LVR:POS:0:org.joda.time.chrono.GregorianChronology@getAverageMillisPerYearDividedByTwo():233:2 |==> 0
10133:LVR:POS:NEG:org.joda.time.chrono.GregorianChronology@getAverageMillisPerYearDividedByTwo():233:2 |==> -2
10134:AOR:/(long,long):%(long,long):org.joda.time.chrono.GregorianChronology@getAverageMillisPerYearDividedByTwo():233:MILLIS_PER_YEAR / 2 |==> MILLIS_PER_YEAR % 2
10135:AOR:/(long,long):*(long,long):org.joda.time.chrono.GregorianChronology@getAverageMillisPerYearDividedByTwo():233:MILLIS_PER_YEAR / 2 |==> MILLIS_PER_YEAR * 2
10136:AOR:/(long,long):+(long,long):org.joda.time.chrono.GregorianChronology@getAverageMillisPerYearDividedByTwo():233:MILLIS_PER_YEAR / 2 |==> MILLIS_PER_YEAR + 2
10137:AOR:/(long,long):-(long,long):org.joda.time.chrono.GregorianChronology@getAverageMillisPerYearDividedByTwo():233:MILLIS_PER_YEAR / 2 |==> MILLIS_PER_YEAR - 2
10138:LVR:POS:0:org.joda.time.chrono.GregorianChronology@getApproxMillisAtEpochDividedByTwo():241:1970L |==> 0L
10139:LVR:POS:NEG:org.joda.time.chrono.GregorianChronology@getApproxMillisAtEpochDividedByTwo():241:1970L |==> -1970L
10140:AOR:*(long,long):%(long,long):org.joda.time.chrono.GregorianChronology@getApproxMillisAtEpochDividedByTwo():241:1970L * MILLIS_PER_YEAR |==> 1970L % MILLIS_PER_YEAR
10141:AOR:*(long,long):+(long,long):org.joda.time.chrono.GregorianChronology@getApproxMillisAtEpochDividedByTwo():241:1970L * MILLIS_PER_YEAR |==> 1970L + MILLIS_PER_YEAR
10142:AOR:*(long,long):-(long,long):org.joda.time.chrono.GregorianChronology@getApproxMillisAtEpochDividedByTwo():241:1970L * MILLIS_PER_YEAR |==> 1970L - MILLIS_PER_YEAR
10143:AOR:*(long,long):/(long,long):org.joda.time.chrono.GregorianChronology@getApproxMillisAtEpochDividedByTwo():241:1970L * MILLIS_PER_YEAR |==> 1970L / MILLIS_PER_YEAR
10144:LVR:POS:0:org.joda.time.chrono.GregorianChronology@getApproxMillisAtEpochDividedByTwo():241:2 |==> 0
10145:LVR:POS:NEG:org.joda.time.chrono.GregorianChronology@getApproxMillisAtEpochDividedByTwo():241:2 |==> -2
10146:AOR:/(long,long):%(long,long):org.joda.time.chrono.GregorianChronology@getApproxMillisAtEpochDividedByTwo():241:(1970L * MILLIS_PER_YEAR) / 2 |==> (1970L * MILLIS_PER_YEAR) % 2
10147:AOR:/(long,long):*(long,long):org.joda.time.chrono.GregorianChronology@getApproxMillisAtEpochDividedByTwo():241:(1970L * MILLIS_PER_YEAR) / 2 |==> (1970L * MILLIS_PER_YEAR) * 2
10148:AOR:/(long,long):+(long,long):org.joda.time.chrono.GregorianChronology@getApproxMillisAtEpochDividedByTwo():241:(1970L * MILLIS_PER_YEAR) / 2 |==> (1970L * MILLIS_PER_YEAR) + 2
10149:AOR:/(long,long):-(long,long):org.joda.time.chrono.GregorianChronology@getApproxMillisAtEpochDividedByTwo():241:(1970L * MILLIS_PER_YEAR) / 2 |==> (1970L * MILLIS_PER_YEAR) - 2
10150:LVR:FALSE:TRUE:org.joda.time.chrono.GJEraDateTimeField@isLenient():52:false |==> true
10151:LVR:0:POS:org.joda.time.chrono.GJEraDateTimeField@get(long):61:0 |==> 1
10152:LVR:0:NEG:org.joda.time.chrono.GJEraDateTimeField@get(long):61:0 |==> -1
10153:ROR:<=(int,int):<(int,int):org.joda.time.chrono.GJEraDateTimeField@get(long):61:iChronology.getYear(instant) <= 0 |==> iChronology.getYear(instant) < 0
10154:ROR:<=(int,int):==(int,int):org.joda.time.chrono.GJEraDateTimeField@get(long):61:iChronology.getYear(instant) <= 0 |==> iChronology.getYear(instant) == 0
10155:ROR:<=(int,int):TRUE(int,int):org.joda.time.chrono.GJEraDateTimeField@get(long):61:iChronology.getYear(instant) <= 0 |==> true
10156:STD:<CALL>:<NO-OP>:org.joda.time.chrono.GJEraDateTimeField@set(long,int):81:FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE) |==> <NO-OP>
10157:ROR:!=(int,int):<(int,int):org.joda.time.chrono.GJEraDateTimeField@set(long,int):84:oldEra != era |==> oldEra < era
10158:ROR:!=(int,int):>(int,int):org.joda.time.chrono.GJEraDateTimeField@set(long,int):84:oldEra != era |==> oldEra > era
10159:ROR:!=(int,int):TRUE(int,int):org.joda.time.chrono.GJEraDateTimeField@set(long,int):84:oldEra != era |==> true
10160:ORU:-(int):+(int):org.joda.time.chrono.GJEraDateTimeField@set(long,int):86:-year |==> +year
10161:ORU:-(int):~(int):org.joda.time.chrono.GJEraDateTimeField@set(long,int):86:-year |==> ~year
10162:ROR:==(int,int):<=(int,int):org.joda.time.chrono.GJEraDateTimeField@roundFloor(long):97:get(instant) == DateTimeConstants.CE |==> get(instant) <= DateTimeConstants.CE
10163:ROR:==(int,int):>=(int,int):org.joda.time.chrono.GJEraDateTimeField@roundFloor(long):97:get(instant) == DateTimeConstants.CE |==> get(instant) >= DateTimeConstants.CE
10164:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.GJEraDateTimeField@roundFloor(long):97:get(instant) == DateTimeConstants.CE |==> false
10165:LVR:0:POS:org.joda.time.chrono.GJEraDateTimeField@roundFloor(long):98:0 |==> 1
10166:LVR:0:NEG:org.joda.time.chrono.GJEraDateTimeField@roundFloor(long):98:0 |==> -1
10167:LVR:POS:0:org.joda.time.chrono.GJEraDateTimeField@roundFloor(long):98:1 |==> 0
10168:LVR:POS:NEG:org.joda.time.chrono.GJEraDateTimeField@roundFloor(long):98:1 |==> -1
10169:ROR:==(int,int):<=(int,int):org.joda.time.chrono.GJEraDateTimeField@roundCeiling(long):105:get(instant) == DateTimeConstants.BCE |==> get(instant) <= DateTimeConstants.BCE
10170:ROR:==(int,int):>=(int,int):org.joda.time.chrono.GJEraDateTimeField@roundCeiling(long):105:get(instant) == DateTimeConstants.BCE |==> get(instant) >= DateTimeConstants.BCE
10171:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.GJEraDateTimeField@roundCeiling(long):105:get(instant) == DateTimeConstants.BCE |==> false
10172:LVR:0:POS:org.joda.time.chrono.GJEraDateTimeField@roundCeiling(long):106:0 |==> 1
10173:LVR:0:NEG:org.joda.time.chrono.GJEraDateTimeField@roundCeiling(long):106:0 |==> -1
10174:LVR:POS:0:org.joda.time.chrono.GJEraDateTimeField@roundCeiling(long):106:1 |==> 0
10175:LVR:POS:NEG:org.joda.time.chrono.GJEraDateTimeField@roundCeiling(long):106:1 |==> -1
10176:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.GJLocaleSymbols@forLocale(java.util.Locale):42:locale == null |==> false
10177:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJLocaleSymbols@forLocale(java.util.Locale):43:locale = Locale.getDefault() |==> <NO-OP>
10178:LVR:POS:0:org.joda.time.chrono.GJLocaleSymbols@forLocale(java.util.Locale):45:1 |==> 0
10179:LVR:POS:NEG:org.joda.time.chrono.GJLocaleSymbols@forLocale(java.util.Locale):45:1 |==> -1
10180:AOR:-(int,int):%(int,int):org.joda.time.chrono.GJLocaleSymbols@forLocale(java.util.Locale):45:FAST_CACHE_SIZE - 1 |==> FAST_CACHE_SIZE % 1
10181:AOR:-(int,int):*(int,int):org.joda.time.chrono.GJLocaleSymbols@forLocale(java.util.Locale):45:FAST_CACHE_SIZE - 1 |==> FAST_CACHE_SIZE * 1
10182:AOR:-(int,int):+(int,int):org.joda.time.chrono.GJLocaleSymbols@forLocale(java.util.Locale):45:FAST_CACHE_SIZE - 1 |==> FAST_CACHE_SIZE + 1
10183:AOR:-(int,int):/(int,int):org.joda.time.chrono.GJLocaleSymbols@forLocale(java.util.Locale):45:FAST_CACHE_SIZE - 1 |==> FAST_CACHE_SIZE / 1
10184:LOR:&(int,int):^(int,int):org.joda.time.chrono.GJLocaleSymbols@forLocale(java.util.Locale):45:System.identityHashCode(locale) & (FAST_CACHE_SIZE - 1) |==> System.identityHashCode(locale) ^ (FAST_CACHE_SIZE - 1)
10185:LOR:&(int,int):|(int,int):org.joda.time.chrono.GJLocaleSymbols@forLocale(java.util.Locale):45:System.identityHashCode(locale) & (FAST_CACHE_SIZE - 1) |==> System.identityHashCode(locale) | (FAST_CACHE_SIZE - 1)
10186:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.GJLocaleSymbols@forLocale(java.util.Locale):47:symbols != null |==> true
10187:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.GJLocaleSymbols@forLocale(java.util.Locale):47:symbols.iLocale.get() == locale |==> false
10188:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.GJLocaleSymbols@forLocale(java.util.Locale):47:symbols != null && symbols.iLocale.get() == locale |==> symbols != null == (symbols.iLocale.get() == locale)
10189:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.GJLocaleSymbols@forLocale(java.util.Locale):47:symbols != null && symbols.iLocale.get() == locale |==> false
10190:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.GJLocaleSymbols@forLocale(java.util.Locale):47:symbols != null && symbols.iLocale.get() == locale |==> symbols != null
10191:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.GJLocaleSymbols@forLocale(java.util.Locale):47:symbols != null && symbols.iLocale.get() == locale |==> symbols.iLocale.get() == locale
10192:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJLocaleSymbols@forLocale(java.util.Locale):51:symbols = cCache.get(locale) |==> <NO-OP>
10193:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.GJLocaleSymbols@forLocale(java.util.Locale):52:symbols == null |==> false
10194:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJLocaleSymbols@forLocale(java.util.Locale):53:symbols = new GJLocaleSymbols(locale) |==> <NO-OP>
10195:STD:<CALL>:<NO-OP>:org.joda.time.chrono.GJLocaleSymbols@forLocale(java.util.Locale):54:cCache.put(locale, symbols) |==> <NO-OP>
10196:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJLocaleSymbols@forLocale(java.util.Locale):57:cFastCache[index] = symbols |==> <NO-OP>
10197:LVR:POS:0:org.joda.time.chrono.GJLocaleSymbols@realignMonths(java.lang.String[]):62:13 |==> 0
10198:LVR:POS:NEG:org.joda.time.chrono.GJLocaleSymbols@realignMonths(java.lang.String[]):62:13 |==> -13
10199:LVR:POS:0:org.joda.time.chrono.GJLocaleSymbols@realignMonths(java.lang.String[]):63:1 |==> 0
10200:LVR:POS:NEG:org.joda.time.chrono.GJLocaleSymbols@realignMonths(java.lang.String[]):63:1 |==> -1
10201:LVR:POS:0:org.joda.time.chrono.GJLocaleSymbols@realignMonths(java.lang.String[]):63:13 |==> 0
10202:LVR:POS:NEG:org.joda.time.chrono.GJLocaleSymbols@realignMonths(java.lang.String[]):63:13 |==> -13
10203:ROR:<(int,int):!=(int,int):org.joda.time.chrono.GJLocaleSymbols@realignMonths(java.lang.String[]):63:i < 13 |==> i != 13
10204:ROR:<(int,int):<=(int,int):org.joda.time.chrono.GJLocaleSymbols@realignMonths(java.lang.String[]):63:i < 13 |==> i <= 13
10205:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.GJLocaleSymbols@realignMonths(java.lang.String[]):63:i < 13 |==> false
10206:LVR:POS:0:org.joda.time.chrono.GJLocaleSymbols@realignMonths(java.lang.String[]):64:1 |==> 0
10207:LVR:POS:NEG:org.joda.time.chrono.GJLocaleSymbols@realignMonths(java.lang.String[]):64:1 |==> -1
10208:AOR:-(int,int):%(int,int):org.joda.time.chrono.GJLocaleSymbols@realignMonths(java.lang.String[]):64:i - 1 |==> i % 1
10209:AOR:-(int,int):*(int,int):org.joda.time.chrono.GJLocaleSymbols@realignMonths(java.lang.String[]):64:i - 1 |==> i * 1
10210:AOR:-(int,int):+(int,int):org.joda.time.chrono.GJLocaleSymbols@realignMonths(java.lang.String[]):64:i - 1 |==> i + 1
10211:AOR:-(int,int):/(int,int):org.joda.time.chrono.GJLocaleSymbols@realignMonths(java.lang.String[]):64:i - 1 |==> i / 1
10212:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJLocaleSymbols@realignMonths(java.lang.String[]):64:a[i] = months[i - 1] |==> <NO-OP>
10213:LVR:POS:0:org.joda.time.chrono.GJLocaleSymbols@realignDaysOfWeek(java.lang.String[]):70:8 |==> 0
10214:LVR:POS:NEG:org.joda.time.chrono.GJLocaleSymbols@realignDaysOfWeek(java.lang.String[]):70:8 |==> -8
10215:LVR:POS:0:org.joda.time.chrono.GJLocaleSymbols@realignDaysOfWeek(java.lang.String[]):71:1 |==> 0
10216:LVR:POS:NEG:org.joda.time.chrono.GJLocaleSymbols@realignDaysOfWeek(java.lang.String[]):71:1 |==> -1
10217:LVR:POS:0:org.joda.time.chrono.GJLocaleSymbols@realignDaysOfWeek(java.lang.String[]):71:8 |==> 0
10218:LVR:POS:NEG:org.joda.time.chrono.GJLocaleSymbols@realignDaysOfWeek(java.lang.String[]):71:8 |==> -8
10219:ROR:<(int,int):!=(int,int):org.joda.time.chrono.GJLocaleSymbols@realignDaysOfWeek(java.lang.String[]):71:i < 8 |==> i != 8
10220:ROR:<(int,int):<=(int,int):org.joda.time.chrono.GJLocaleSymbols@realignDaysOfWeek(java.lang.String[]):71:i < 8 |==> i <= 8
10221:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.GJLocaleSymbols@realignDaysOfWeek(java.lang.String[]):71:i < 8 |==> false
10222:LVR:POS:0:org.joda.time.chrono.GJLocaleSymbols@realignDaysOfWeek(java.lang.String[]):72:7 |==> 0
10223:LVR:POS:NEG:org.joda.time.chrono.GJLocaleSymbols@realignDaysOfWeek(java.lang.String[]):72:7 |==> -7
10224:ROR:<(int,int):!=(int,int):org.joda.time.chrono.GJLocaleSymbols@realignDaysOfWeek(java.lang.String[]):72:i < 7 |==> i != 7
10225:ROR:<(int,int):<=(int,int):org.joda.time.chrono.GJLocaleSymbols@realignDaysOfWeek(java.lang.String[]):72:i < 7 |==> i <= 7
10226:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.GJLocaleSymbols@realignDaysOfWeek(java.lang.String[]):72:i < 7 |==> false
10227:LVR:POS:0:org.joda.time.chrono.GJLocaleSymbols@realignDaysOfWeek(java.lang.String[]):72:1 |==> 0
10228:LVR:POS:NEG:org.joda.time.chrono.GJLocaleSymbols@realignDaysOfWeek(java.lang.String[]):72:1 |==> -1
10229:AOR:+(int,int):%(int,int):org.joda.time.chrono.GJLocaleSymbols@realignDaysOfWeek(java.lang.String[]):72:i + 1 |==> i % 1
10230:AOR:+(int,int):*(int,int):org.joda.time.chrono.GJLocaleSymbols@realignDaysOfWeek(java.lang.String[]):72:i + 1 |==> i * 1
10231:AOR:+(int,int):-(int,int):org.joda.time.chrono.GJLocaleSymbols@realignDaysOfWeek(java.lang.String[]):72:i + 1 |==> i - 1
10232:AOR:+(int,int):/(int,int):org.joda.time.chrono.GJLocaleSymbols@realignDaysOfWeek(java.lang.String[]):72:i + 1 |==> i / 1
10233:LVR:POS:0:org.joda.time.chrono.GJLocaleSymbols@realignDaysOfWeek(java.lang.String[]):72:1 |==> 0
10234:LVR:POS:NEG:org.joda.time.chrono.GJLocaleSymbols@realignDaysOfWeek(java.lang.String[]):72:1 |==> -1
10235:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJLocaleSymbols@realignDaysOfWeek(java.lang.String[]):72:a[i] = daysOfWeek[(i < 7) ? i + 1 : 1] |==> <NO-OP>
10236:LVR:0:POS:org.joda.time.chrono.GJLocaleSymbols@addSymbols(java.util.TreeMap<java.lang.String,java.lang.Integer>,java.lang.String[],java.lang.Integer[]):78:0 |==> 1
10237:LVR:0:NEG:org.joda.time.chrono.GJLocaleSymbols@addSymbols(java.util.TreeMap<java.lang.String,java.lang.Integer>,java.lang.String[],java.lang.Integer[]):78:0 |==> -1
10238:ROR:>=(int,int):==(int,int):org.joda.time.chrono.GJLocaleSymbols@addSymbols(java.util.TreeMap<java.lang.String,java.lang.Integer>,java.lang.String[],java.lang.Integer[]):78:--i >= 0 |==> --i == 0
10239:ROR:>=(int,int):>(int,int):org.joda.time.chrono.GJLocaleSymbols@addSymbols(java.util.TreeMap<java.lang.String,java.lang.Integer>,java.lang.String[],java.lang.Integer[]):78:--i >= 0 |==> --i > 0
10240:ROR:>=(int,int):TRUE(int,int):org.joda.time.chrono.GJLocaleSymbols@addSymbols(java.util.TreeMap<java.lang.String,java.lang.Integer>,java.lang.String[],java.lang.Integer[]):78:--i >= 0 |==> true
10241:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.GJLocaleSymbols@addSymbols(java.util.TreeMap<java.lang.String,java.lang.Integer>,java.lang.String[],java.lang.Integer[]):80:symbol != null |==> true
10242:STD:<CALL>:<NO-OP>:org.joda.time.chrono.GJLocaleSymbols@addSymbols(java.util.TreeMap<java.lang.String,java.lang.Integer>,java.lang.String[],java.lang.Integer[]):81:map.put(symbol, integers[i]) |==> <NO-OP>
10243:ROR:<=(int,int):<(int,int):org.joda.time.chrono.GJLocaleSymbols@addNumerals(java.util.TreeMap<java.lang.String,java.lang.Integer>,int,int,java.lang.Integer[]):87:i <= end |==> i < end
10244:ROR:<=(int,int):==(int,int):org.joda.time.chrono.GJLocaleSymbols@addNumerals(java.util.TreeMap<java.lang.String,java.lang.Integer>,int,int,java.lang.Integer[]):87:i <= end |==> i == end
10245:ROR:<=(int,int):TRUE(int,int):org.joda.time.chrono.GJLocaleSymbols@addNumerals(java.util.TreeMap<java.lang.String,java.lang.Integer>,int,int,java.lang.Integer[]):87:i <= end |==> true
10246:STD:<CALL>:<NO-OP>:org.joda.time.chrono.GJLocaleSymbols@addNumerals(java.util.TreeMap<java.lang.String,java.lang.Integer>,int,int,java.lang.Integer[]):88:map.put(String.valueOf(i).intern(), integers[i]) |==> <NO-OP>
10247:LVR:0:POS:org.joda.time.chrono.GJLocaleSymbols@maxLength(java.lang.String[]):93:0 |==> 1
10248:LVR:0:NEG:org.joda.time.chrono.GJLocaleSymbols@maxLength(java.lang.String[]):93:0 |==> -1
10249:LVR:0:POS:org.joda.time.chrono.GJLocaleSymbols@maxLength(java.lang.String[]):94:0 |==> 1
10250:LVR:0:NEG:org.joda.time.chrono.GJLocaleSymbols@maxLength(java.lang.String[]):94:0 |==> -1
10251:ROR:>=(int,int):==(int,int):org.joda.time.chrono.GJLocaleSymbols@maxLength(java.lang.String[]):94:--i >= 0 |==> --i == 0
10252:ROR:>=(int,int):>(int,int):org.joda.time.chrono.GJLocaleSymbols@maxLength(java.lang.String[]):94:--i >= 0 |==> --i > 0
10253:ROR:>=(int,int):TRUE(int,int):org.joda.time.chrono.GJLocaleSymbols@maxLength(java.lang.String[]):94:--i >= 0 |==> true
10254:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.GJLocaleSymbols@maxLength(java.lang.String[]):96:s != null |==> true
10255:ROR:>(int,int):!=(int,int):org.joda.time.chrono.GJLocaleSymbols@maxLength(java.lang.String[]):98:len > max |==> len != max
10256:ROR:>(int,int):>=(int,int):org.joda.time.chrono.GJLocaleSymbols@maxLength(java.lang.String[]):98:len > max |==> len >= max
10257:ROR:>(int,int):FALSE(int,int):org.joda.time.chrono.GJLocaleSymbols@maxLength(java.lang.String[]):98:len > max |==> false
10258:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJLocaleSymbols@maxLength(java.lang.String[]):99:max = len |==> <NO-OP>
10259:LVR:POS:0:org.joda.time.chrono.GJLocaleSymbols@<init>(java.util.Locale):141:13 |==> 0
10260:LVR:POS:NEG:org.joda.time.chrono.GJLocaleSymbols@<init>(java.util.Locale):141:13 |==> -13
10261:LVR:0:POS:org.joda.time.chrono.GJLocaleSymbols@<init>(java.util.Locale):142:0 |==> 1
10262:LVR:0:NEG:org.joda.time.chrono.GJLocaleSymbols@<init>(java.util.Locale):142:0 |==> -1
10263:LVR:POS:0:org.joda.time.chrono.GJLocaleSymbols@<init>(java.util.Locale):142:13 |==> 0
10264:LVR:POS:NEG:org.joda.time.chrono.GJLocaleSymbols@<init>(java.util.Locale):142:13 |==> -13
10265:ROR:<(int,int):!=(int,int):org.joda.time.chrono.GJLocaleSymbols@<init>(java.util.Locale):142:i < 13 |==> i != 13
10266:ROR:<(int,int):<=(int,int):org.joda.time.chrono.GJLocaleSymbols@<init>(java.util.Locale):142:i < 13 |==> i <= 13
10267:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.GJLocaleSymbols@<init>(java.util.Locale):142:i < 13 |==> false
10268:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJLocaleSymbols@<init>(java.util.Locale):143:integers[i] = Integer.valueOf(i) |==> <NO-OP>
10269:STD:<CALL>:<NO-OP>:org.joda.time.chrono.GJLocaleSymbols@<init>(java.util.Locale):147:addSymbols(iParseEras, iEras, integers) |==> <NO-OP>
10270:COR:"en".equals(locale.getLanguage()):TRUE:org.joda.time.chrono.GJLocaleSymbols@<init>(java.util.Locale):148:"en".equals(locale.getLanguage()) |==> false
10271:COR:"en".equals(locale.getLanguage()):FALSE:org.joda.time.chrono.GJLocaleSymbols@<init>(java.util.Locale):148:"en".equals(locale.getLanguage()) |==> true
10272:LVR:0:POS:org.joda.time.chrono.GJLocaleSymbols@<init>(java.util.Locale):152:0 |==> 1
10273:LVR:0:NEG:org.joda.time.chrono.GJLocaleSymbols@<init>(java.util.Locale):152:0 |==> -1
10274:STD:<CALL>:<NO-OP>:org.joda.time.chrono.GJLocaleSymbols@<init>(java.util.Locale):152:iParseEras.put("BCE", integers[0]) |==> <NO-OP>
10275:LVR:POS:0:org.joda.time.chrono.GJLocaleSymbols@<init>(java.util.Locale):153:1 |==> 0
10276:LVR:POS:NEG:org.joda.time.chrono.GJLocaleSymbols@<init>(java.util.Locale):153:1 |==> -1
10277:STD:<CALL>:<NO-OP>:org.joda.time.chrono.GJLocaleSymbols@<init>(java.util.Locale):153:iParseEras.put("CE", integers[1]) |==> <NO-OP>
10278:STD:<CALL>:<NO-OP>:org.joda.time.chrono.GJLocaleSymbols@<init>(java.util.Locale):157:addSymbols(iParseDaysOfWeek, iDaysOfWeek, integers) |==> <NO-OP>
10279:STD:<CALL>:<NO-OP>:org.joda.time.chrono.GJLocaleSymbols@<init>(java.util.Locale):158:addSymbols(iParseDaysOfWeek, iShortDaysOfWeek, integers) |==> <NO-OP>
10280:LVR:POS:0:org.joda.time.chrono.GJLocaleSymbols@<init>(java.util.Locale):159:1 |==> 0
10281:LVR:POS:NEG:org.joda.time.chrono.GJLocaleSymbols@<init>(java.util.Locale):159:1 |==> -1
10282:LVR:POS:0:org.joda.time.chrono.GJLocaleSymbols@<init>(java.util.Locale):159:7 |==> 0
10283:LVR:POS:NEG:org.joda.time.chrono.GJLocaleSymbols@<init>(java.util.Locale):159:7 |==> -7
10284:STD:<CALL>:<NO-OP>:org.joda.time.chrono.GJLocaleSymbols@<init>(java.util.Locale):159:addNumerals(iParseDaysOfWeek, 1, 7, integers) |==> <NO-OP>
10285:STD:<CALL>:<NO-OP>:org.joda.time.chrono.GJLocaleSymbols@<init>(java.util.Locale):162:addSymbols(iParseMonths, iMonths, integers) |==> <NO-OP>
10286:STD:<CALL>:<NO-OP>:org.joda.time.chrono.GJLocaleSymbols@<init>(java.util.Locale):163:addSymbols(iParseMonths, iShortMonths, integers) |==> <NO-OP>
10287:LVR:POS:0:org.joda.time.chrono.GJLocaleSymbols@<init>(java.util.Locale):164:1 |==> 0
10288:LVR:POS:NEG:org.joda.time.chrono.GJLocaleSymbols@<init>(java.util.Locale):164:1 |==> -1
10289:LVR:POS:0:org.joda.time.chrono.GJLocaleSymbols@<init>(java.util.Locale):164:12 |==> 0
10290:LVR:POS:NEG:org.joda.time.chrono.GJLocaleSymbols@<init>(java.util.Locale):164:12 |==> -12
10291:STD:<CALL>:<NO-OP>:org.joda.time.chrono.GJLocaleSymbols@<init>(java.util.Locale):164:addNumerals(iParseMonths, 1, 12, integers) |==> <NO-OP>
10292:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.GJLocaleSymbols@eraTextToValue(java.lang.String):180:era != null |==> true
10293:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.GJLocaleSymbols@monthOfYearTextToValue(java.lang.String):200:month != null |==> true
10294:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.GJLocaleSymbols@dayOfWeekTextToValue(java.lang.String):224:day != null |==> true
10295:LVR:0:POS:org.joda.time.chrono.GJLocaleSymbols@halfdayTextToValue(java.lang.String):244:0 |==> 1
10296:LVR:0:NEG:org.joda.time.chrono.GJLocaleSymbols@halfdayTextToValue(java.lang.String):244:0 |==> -1
10297:ROR:>=(int,int):==(int,int):org.joda.time.chrono.GJLocaleSymbols@halfdayTextToValue(java.lang.String):244:--i >= 0 |==> --i == 0
10298:ROR:>=(int,int):>(int,int):org.joda.time.chrono.GJLocaleSymbols@halfdayTextToValue(java.lang.String):244:--i >= 0 |==> --i > 0
10299:ROR:>=(int,int):TRUE(int,int):org.joda.time.chrono.GJLocaleSymbols@halfdayTextToValue(java.lang.String):244:--i >= 0 |==> true
10300:COR:halfday[i].equalsIgnoreCase(text):TRUE:org.joda.time.chrono.GJLocaleSymbols@halfdayTextToValue(java.lang.String):245:halfday[i].equalsIgnoreCase(text) |==> false
10301:COR:halfday[i].equalsIgnoreCase(text):FALSE:org.joda.time.chrono.GJLocaleSymbols@halfdayTextToValue(java.lang.String):245:halfday[i].equalsIgnoreCase(text) |==> true
10302:LVR:POS:0:org.joda.time.chrono.GJMonthOfYearDateTimeField@<init>(org.joda.time.chrono.BasicChronology):38:2 |==> 0
10303:LVR:POS:NEG:org.joda.time.chrono.GJMonthOfYearDateTimeField@<init>(org.joda.time.chrono.BasicChronology):38:2 |==> -2
10304:LVR:0:POS:org.joda.time.chrono.GJYearOfEraDateTimeField@get(long):53:0 |==> 1
10305:LVR:0:NEG:org.joda.time.chrono.GJYearOfEraDateTimeField@get(long):53:0 |==> -1
10306:ROR:<=(int,int):<(int,int):org.joda.time.chrono.GJYearOfEraDateTimeField@get(long):53:year <= 0 |==> year < 0
10307:ROR:<=(int,int):==(int,int):org.joda.time.chrono.GJYearOfEraDateTimeField@get(long):53:year <= 0 |==> year == 0
10308:ROR:<=(int,int):TRUE(int,int):org.joda.time.chrono.GJYearOfEraDateTimeField@get(long):53:year <= 0 |==> true
10309:LVR:POS:0:org.joda.time.chrono.GJYearOfEraDateTimeField@get(long):54:1 |==> 0
10310:LVR:POS:NEG:org.joda.time.chrono.GJYearOfEraDateTimeField@get(long):54:1 |==> -1
10311:AOR:-(int,int):%(int,int):org.joda.time.chrono.GJYearOfEraDateTimeField@get(long):54:1 - year |==> 1 % year
10312:AOR:-(int,int):*(int,int):org.joda.time.chrono.GJYearOfEraDateTimeField@get(long):54:1 - year |==> 1 * year
10313:AOR:-(int,int):+(int,int):org.joda.time.chrono.GJYearOfEraDateTimeField@get(long):54:1 - year |==> 1 + year
10314:AOR:-(int,int):/(int,int):org.joda.time.chrono.GJYearOfEraDateTimeField@get(long):54:1 - year |==> 1 / year
10315:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJYearOfEraDateTimeField@get(long):54:year = 1 - year |==> <NO-OP>
10316:LVR:POS:0:org.joda.time.chrono.GJYearOfEraDateTimeField@set(long,int):92:1 |==> 0
10317:LVR:POS:NEG:org.joda.time.chrono.GJYearOfEraDateTimeField@set(long,int):92:1 |==> -1
10318:STD:<CALL>:<NO-OP>:org.joda.time.chrono.GJYearOfEraDateTimeField@set(long,int):92:FieldUtils.verifyValueBounds(this, year, 1, getMaximumValue()) |==> <NO-OP>
10319:LVR:0:POS:org.joda.time.chrono.GJYearOfEraDateTimeField@set(long,int):93:0 |==> 1
10320:LVR:0:NEG:org.joda.time.chrono.GJYearOfEraDateTimeField@set(long,int):93:0 |==> -1
10321:ROR:<=(int,int):<(int,int):org.joda.time.chrono.GJYearOfEraDateTimeField@set(long,int):93:iChronology.getYear(instant) <= 0 |==> iChronology.getYear(instant) < 0
10322:ROR:<=(int,int):==(int,int):org.joda.time.chrono.GJYearOfEraDateTimeField@set(long,int):93:iChronology.getYear(instant) <= 0 |==> iChronology.getYear(instant) == 0
10323:ROR:<=(int,int):TRUE(int,int):org.joda.time.chrono.GJYearOfEraDateTimeField@set(long,int):93:iChronology.getYear(instant) <= 0 |==> true
10324:LVR:POS:0:org.joda.time.chrono.GJYearOfEraDateTimeField@set(long,int):94:1 |==> 0
10325:LVR:POS:NEG:org.joda.time.chrono.GJYearOfEraDateTimeField@set(long,int):94:1 |==> -1
10326:AOR:-(int,int):%(int,int):org.joda.time.chrono.GJYearOfEraDateTimeField@set(long,int):94:1 - year |==> 1 % year
10327:AOR:-(int,int):*(int,int):org.joda.time.chrono.GJYearOfEraDateTimeField@set(long,int):94:1 - year |==> 1 * year
10328:AOR:-(int,int):+(int,int):org.joda.time.chrono.GJYearOfEraDateTimeField@set(long,int):94:1 - year |==> 1 + year
10329:AOR:-(int,int):/(int,int):org.joda.time.chrono.GJYearOfEraDateTimeField@set(long,int):94:1 - year |==> 1 / year
10330:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.GJYearOfEraDateTimeField@set(long,int):94:year = 1 - year |==> <NO-OP>
10331:LVR:POS:0:org.joda.time.chrono.GJYearOfEraDateTimeField@getMinimumValue():100:1 |==> 0
10332:LVR:POS:NEG:org.joda.time.chrono.GJYearOfEraDateTimeField@getMinimumValue():100:1 |==> -1
10333:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.DecoratedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType):56:field == null |==> false
10334:COR:field.isSupported():TRUE:org.joda.time.field.DecoratedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType):59:field.isSupported() |==> false
10335:COR:field.isSupported():FALSE:org.joda.time.field.DecoratedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType):59:field.isSupported() |==> true
10336:STD:<CALL>:<NO-OP>:org.joda.time.chrono.ISOChronology:67:cCache.put(DateTimeZone.UTC, INSTANCE_UTC) |==> <NO-OP>
10337:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.ISOChronology@getInstance(org.joda.time.DateTimeZone):96:zone == null |==> false
10338:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ISOChronology@getInstance(org.joda.time.DateTimeZone):97:zone = DateTimeZone.getDefault() |==> <NO-OP>
10339:LVR:POS:0:org.joda.time.chrono.ISOChronology@getInstance(org.joda.time.DateTimeZone):99:1 |==> 0
10340:LVR:POS:NEG:org.joda.time.chrono.ISOChronology@getInstance(org.joda.time.DateTimeZone):99:1 |==> -1
10341:AOR:-(int,int):%(int,int):org.joda.time.chrono.ISOChronology@getInstance(org.joda.time.DateTimeZone):99:FAST_CACHE_SIZE - 1 |==> FAST_CACHE_SIZE % 1
10342:AOR:-(int,int):*(int,int):org.joda.time.chrono.ISOChronology@getInstance(org.joda.time.DateTimeZone):99:FAST_CACHE_SIZE - 1 |==> FAST_CACHE_SIZE * 1
10343:AOR:-(int,int):+(int,int):org.joda.time.chrono.ISOChronology@getInstance(org.joda.time.DateTimeZone):99:FAST_CACHE_SIZE - 1 |==> FAST_CACHE_SIZE + 1
10344:AOR:-(int,int):/(int,int):org.joda.time.chrono.ISOChronology@getInstance(org.joda.time.DateTimeZone):99:FAST_CACHE_SIZE - 1 |==> FAST_CACHE_SIZE / 1
10345:LOR:&(int,int):^(int,int):org.joda.time.chrono.ISOChronology@getInstance(org.joda.time.DateTimeZone):99:System.identityHashCode(zone) & (FAST_CACHE_SIZE - 1) |==> System.identityHashCode(zone) ^ (FAST_CACHE_SIZE - 1)
10346:LOR:&(int,int):|(int,int):org.joda.time.chrono.ISOChronology@getInstance(org.joda.time.DateTimeZone):99:System.identityHashCode(zone) & (FAST_CACHE_SIZE - 1) |==> System.identityHashCode(zone) | (FAST_CACHE_SIZE - 1)
10347:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.ISOChronology@getInstance(org.joda.time.DateTimeZone):101:chrono != null |==> true
10348:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.ISOChronology@getInstance(org.joda.time.DateTimeZone):101:chrono.getZone() == zone |==> false
10349:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.ISOChronology@getInstance(org.joda.time.DateTimeZone):101:chrono != null && chrono.getZone() == zone |==> chrono != null == (chrono.getZone() == zone)
10350:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.ISOChronology@getInstance(org.joda.time.DateTimeZone):101:chrono != null && chrono.getZone() == zone |==> false
10351:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.ISOChronology@getInstance(org.joda.time.DateTimeZone):101:chrono != null && chrono.getZone() == zone |==> chrono != null
10352:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.ISOChronology@getInstance(org.joda.time.DateTimeZone):101:chrono != null && chrono.getZone() == zone |==> chrono.getZone() == zone
10353:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ISOChronology@getInstance(org.joda.time.DateTimeZone):105:chrono = cCache.get(zone) |==> <NO-OP>
10354:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.ISOChronology@getInstance(org.joda.time.DateTimeZone):106:chrono == null |==> false
10355:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ISOChronology@getInstance(org.joda.time.DateTimeZone):107:chrono = new ISOChronology(ZonedChronology.getInstance(INSTANCE_UTC, zone)) |==> <NO-OP>
10356:STD:<CALL>:<NO-OP>:org.joda.time.chrono.ISOChronology@getInstance(org.joda.time.DateTimeZone):108:cCache.put(zone, chrono) |==> <NO-OP>
10357:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ISOChronology@getInstance(org.joda.time.DateTimeZone):111:cFastCache[index] = chrono |==> <NO-OP>
10358:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.ISOChronology@withZone(org.joda.time.DateTimeZone):143:zone == null |==> false
10359:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ISOChronology@withZone(org.joda.time.DateTimeZone):144:zone = DateTimeZone.getDefault() |==> <NO-OP>
10360:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.ISOChronology@withZone(org.joda.time.DateTimeZone):146:zone == getZone() |==> false
10361:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.ISOChronology@toString():162:zone != null |==> true
10362:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ISOChronology@toString():163:str = str + '[' + zone.getID() + ']' |==> <NO-OP>
10363:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.ISOChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):169:getBase().getZone() == DateTimeZone.UTC |==> false
10364:LVR:POS:0:org.joda.time.chrono.ISOChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):172:100 |==> 0
10365:LVR:POS:NEG:org.joda.time.chrono.ISOChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):172:100 |==> -100
10366:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ISOChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):171:fields.centuryOfEra = new DividedDateTimeField(ISOYearOfEraDateTimeField.INSTANCE, DateTimeFieldType.centuryOfEra(), 100) |==> <NO-OP>
10367:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ISOChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):173:fields.centuries = fields.centuryOfEra.getDurationField() |==> <NO-OP>
10368:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ISOChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):175:fields.yearOfCentury = new RemainderDateTimeField((DividedDateTimeField)fields.centuryOfEra, DateTimeFieldType.yearOfCentury()) |==> <NO-OP>
10369:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ISOChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):177:fields.weekyearOfCentury = new RemainderDateTimeField((DividedDateTimeField)fields.centuryOfEra, fields.weekyears, DateTimeFieldType.weekyearOfCentury()) |==> <NO-OP>
10370:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.ISOChronology@equals(java.lang.Object):191:this == obj |==> false
10371:LVR:TRUE:FALSE:org.joda.time.chrono.ISOChronology@equals(java.lang.Object):192:true |==> false
10372:LVR:FALSE:TRUE:org.joda.time.chrono.ISOChronology@equals(java.lang.Object):198:false |==> true
10373:LVR:POS:0:org.joda.time.chrono.ISOChronology@hashCode():208:11 |==> 0
10374:LVR:POS:NEG:org.joda.time.chrono.ISOChronology@hashCode():208:11 |==> -11
10375:AOR:*(int,int):%(int,int):org.joda.time.chrono.ISOChronology@hashCode():208:"ISO".hashCode() * 11 |==> "ISO".hashCode() % 11
10376:AOR:*(int,int):+(int,int):org.joda.time.chrono.ISOChronology@hashCode():208:"ISO".hashCode() * 11 |==> "ISO".hashCode() + 11
10377:AOR:*(int,int):-(int,int):org.joda.time.chrono.ISOChronology@hashCode():208:"ISO".hashCode() * 11 |==> "ISO".hashCode() - 11
10378:AOR:*(int,int):/(int,int):org.joda.time.chrono.ISOChronology@hashCode():208:"ISO".hashCode() * 11 |==> "ISO".hashCode() / 11
10379:AOR:+(int,int):%(int,int):org.joda.time.chrono.ISOChronology@hashCode():208:"ISO".hashCode() * 11 + getZone().hashCode() |==> "ISO".hashCode() * 11 % getZone().hashCode()
10380:AOR:+(int,int):*(int,int):org.joda.time.chrono.ISOChronology@hashCode():208:"ISO".hashCode() * 11 + getZone().hashCode() |==> "ISO".hashCode() * 11 * getZone().hashCode()
10381:AOR:+(int,int):-(int,int):org.joda.time.chrono.ISOChronology@hashCode():208:"ISO".hashCode() * 11 + getZone().hashCode() |==> "ISO".hashCode() * 11 - getZone().hashCode()
10382:AOR:+(int,int):/(int,int):org.joda.time.chrono.ISOChronology@hashCode():208:"ISO".hashCode() * 11 + getZone().hashCode() |==> "ISO".hashCode() * 11 / getZone().hashCode()
10383:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ISOChronology$Stub@<init>(org.joda.time.DateTimeZone):226:iZone = zone |==> <NO-OP>
10384:STD:<CALL>:<NO-OP>:org.joda.time.chrono.ISOChronology$Stub@writeObject(java.io.ObjectOutputStream):234:out.writeObject(iZone) |==> <NO-OP>
10385:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ISOChronology$Stub@readObject(java.io.ObjectInputStream):240:iZone = (DateTimeZone)in.readObject() |==> <NO-OP>
10386:LVR:0:POS:org.joda.time.chrono.ISOYearOfEraDateTimeField@get(long):58:0 |==> 1
10387:LVR:0:NEG:org.joda.time.chrono.ISOYearOfEraDateTimeField@get(long):58:0 |==> -1
10388:ROR:<(int,int):!=(int,int):org.joda.time.chrono.ISOYearOfEraDateTimeField@get(long):58:year < 0 |==> year != 0
10389:ROR:<(int,int):<=(int,int):org.joda.time.chrono.ISOYearOfEraDateTimeField@get(long):58:year < 0 |==> year <= 0
10390:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.ISOYearOfEraDateTimeField@get(long):58:year < 0 |==> false
10391:ORU:-(int):+(int):org.joda.time.chrono.ISOYearOfEraDateTimeField@get(long):58:-year |==> +year
10392:ORU:-(int):~(int):org.joda.time.chrono.ISOYearOfEraDateTimeField@get(long):58:-year |==> ~year
10393:LVR:0:POS:org.joda.time.chrono.ISOYearOfEraDateTimeField@set(long,int):86:0 |==> 1
10394:LVR:0:NEG:org.joda.time.chrono.ISOYearOfEraDateTimeField@set(long,int):86:0 |==> -1
10395:STD:<CALL>:<NO-OP>:org.joda.time.chrono.ISOYearOfEraDateTimeField@set(long,int):86:FieldUtils.verifyValueBounds(this, year, 0, getMaximumValue()) |==> <NO-OP>
10396:LVR:0:POS:org.joda.time.chrono.ISOYearOfEraDateTimeField@set(long,int):87:0 |==> 1
10397:LVR:0:NEG:org.joda.time.chrono.ISOYearOfEraDateTimeField@set(long,int):87:0 |==> -1
10398:ROR:<(int,int):!=(int,int):org.joda.time.chrono.ISOYearOfEraDateTimeField@set(long,int):87:getWrappedField().get(instant) < 0 |==> getWrappedField().get(instant) != 0
10399:ROR:<(int,int):<=(int,int):org.joda.time.chrono.ISOYearOfEraDateTimeField@set(long,int):87:getWrappedField().get(instant) < 0 |==> getWrappedField().get(instant) <= 0
10400:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.ISOYearOfEraDateTimeField@set(long,int):87:getWrappedField().get(instant) < 0 |==> false
10401:ORU:-(int):+(int):org.joda.time.chrono.ISOYearOfEraDateTimeField@set(long,int):88:-year |==> +year
10402:ORU:-(int):~(int):org.joda.time.chrono.ISOYearOfEraDateTimeField@set(long,int):88:-year |==> ~year
10403:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ISOYearOfEraDateTimeField@set(long,int):88:year = -year |==> <NO-OP>
10404:LVR:0:POS:org.joda.time.chrono.ISOYearOfEraDateTimeField@getMinimumValue():94:0 |==> 1
10405:LVR:0:NEG:org.joda.time.chrono.ISOYearOfEraDateTimeField@getMinimumValue():94:0 |==> -1
10406:LVR:0:POS:org.joda.time.chrono.IslamicChronology:81:0 |==> 1
10407:LVR:0:NEG:org.joda.time.chrono.IslamicChronology:81:0 |==> -1
10408:LVR:POS:0:org.joda.time.chrono.IslamicChronology:81:623158436 |==> 0
10409:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology:81:623158436 |==> -623158436
10410:LVR:POS:0:org.joda.time.chrono.IslamicChronology:83:1 |==> 0
10411:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology:83:1 |==> -1
10412:LVR:POS:0:org.joda.time.chrono.IslamicChronology:83:623191204 |==> 0
10413:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology:83:623191204 |==> -623191204
10414:LVR:POS:0:org.joda.time.chrono.IslamicChronology:85:2 |==> 0
10415:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology:85:2 |==> -2
10416:LVR:POS:0:org.joda.time.chrono.IslamicChronology:85:690562340 |==> 0
10417:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology:85:690562340 |==> -690562340
10418:LVR:POS:0:org.joda.time.chrono.IslamicChronology:87:3 |==> 0
10419:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology:87:3 |==> -3
10420:LVR:POS:0:org.joda.time.chrono.IslamicChronology:87:153692453 |==> 0
10421:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology:87:153692453 |==> -153692453
10422:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.IslamicChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.chrono.IslamicChronology.LeapYearPatternType):192:zone == null |==> false
10423:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.IslamicChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.chrono.IslamicChronology.LeapYearPatternType):193:zone = DateTimeZone.getDefault() |==> <NO-OP>
10424:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.IslamicChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.chrono.IslamicChronology.LeapYearPatternType):198:chronos == null |==> false
10425:LVR:POS:0:org.joda.time.chrono.IslamicChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.chrono.IslamicChronology.LeapYearPatternType):199:4 |==> 0
10426:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.chrono.IslamicChronology.LeapYearPatternType):199:4 |==> -4
10427:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.IslamicChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.chrono.IslamicChronology.LeapYearPatternType):199:chronos = new IslamicChronology[4] |==> <NO-OP>
10428:STD:<CALL>:<NO-OP>:org.joda.time.chrono.IslamicChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.chrono.IslamicChronology.LeapYearPatternType):200:cCache.put(zone, chronos) |==> <NO-OP>
10429:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.IslamicChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.chrono.IslamicChronology.LeapYearPatternType):203:chrono == null |==> false
10430:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.IslamicChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.chrono.IslamicChronology.LeapYearPatternType):204:zone == DateTimeZone.UTC |==> false
10431:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.IslamicChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.chrono.IslamicChronology.LeapYearPatternType):206:chrono = new IslamicChronology(null, null, leapYears) |==> <NO-OP>
10432:LVR:POS:0:org.joda.time.chrono.IslamicChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.chrono.IslamicChronology.LeapYearPatternType):208:1 |==> 0
10433:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.chrono.IslamicChronology.LeapYearPatternType):208:1 |==> -1
10434:LVR:POS:0:org.joda.time.chrono.IslamicChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.chrono.IslamicChronology.LeapYearPatternType):208:1 |==> 0
10435:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.chrono.IslamicChronology.LeapYearPatternType):208:1 |==> -1
10436:LVR:POS:0:org.joda.time.chrono.IslamicChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.chrono.IslamicChronology.LeapYearPatternType):208:1 |==> 0
10437:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.chrono.IslamicChronology.LeapYearPatternType):208:1 |==> -1
10438:LVR:0:POS:org.joda.time.chrono.IslamicChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.chrono.IslamicChronology.LeapYearPatternType):208:0 |==> 1
10439:LVR:0:NEG:org.joda.time.chrono.IslamicChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.chrono.IslamicChronology.LeapYearPatternType):208:0 |==> -1
10440:LVR:0:POS:org.joda.time.chrono.IslamicChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.chrono.IslamicChronology.LeapYearPatternType):208:0 |==> 1
10441:LVR:0:NEG:org.joda.time.chrono.IslamicChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.chrono.IslamicChronology.LeapYearPatternType):208:0 |==> -1
10442:LVR:0:POS:org.joda.time.chrono.IslamicChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.chrono.IslamicChronology.LeapYearPatternType):208:0 |==> 1
10443:LVR:0:NEG:org.joda.time.chrono.IslamicChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.chrono.IslamicChronology.LeapYearPatternType):208:0 |==> -1
10444:LVR:0:POS:org.joda.time.chrono.IslamicChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.chrono.IslamicChronology.LeapYearPatternType):208:0 |==> 1
10445:LVR:0:NEG:org.joda.time.chrono.IslamicChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.chrono.IslamicChronology.LeapYearPatternType):208:0 |==> -1
10446:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.IslamicChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.chrono.IslamicChronology.LeapYearPatternType):209:chrono = new IslamicChronology(LimitChronology.getInstance(chrono, lowerLimit, null), null, leapYears) |==> <NO-OP>
10447:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.IslamicChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.chrono.IslamicChronology.LeapYearPatternType):213:chrono = getInstance(DateTimeZone.UTC, leapYears) |==> <NO-OP>
10448:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.IslamicChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.chrono.IslamicChronology.LeapYearPatternType):214:chrono = new IslamicChronology(ZonedChronology.getInstance(chrono, zone), null, leapYears) |==> <NO-OP>
10449:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.IslamicChronology@getInstance(org.joda.time.DateTimeZone,org.joda.time.chrono.IslamicChronology.LeapYearPatternType):217:chronos[leapYears.index] = chrono |==> <NO-OP>
10450:LVR:POS:0:org.joda.time.chrono.IslamicChronology@<init>(org.joda.time.Chronology,java.lang.Object,org.joda.time.chrono.IslamicChronology.LeapYearPatternType):229:4 |==> 0
10451:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology@<init>(org.joda.time.Chronology,java.lang.Object,org.joda.time.chrono.IslamicChronology.LeapYearPatternType):229:4 |==> -4
10452:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.IslamicChronology@readResolve():238:base == null |==> false
10453:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.IslamicChronology@withZone(org.joda.time.DateTimeZone):269:zone == null |==> false
10454:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.IslamicChronology@withZone(org.joda.time.DateTimeZone):270:zone = DateTimeZone.getDefault() |==> <NO-OP>
10455:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.IslamicChronology@withZone(org.joda.time.DateTimeZone):272:zone == getZone() |==> false
10456:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.IslamicChronology@equals(java.lang.Object):287:this == obj |==> false
10457:LVR:TRUE:FALSE:org.joda.time.chrono.IslamicChronology@equals(java.lang.Object):288:true |==> false
10458:ROR:==(int,int):<=(int,int):org.joda.time.chrono.IslamicChronology@equals(java.lang.Object):292:getLeapYearPatternType().index == chrono.getLeapYearPatternType().index |==> getLeapYearPatternType().index <= chrono.getLeapYearPatternType().index
10459:ROR:==(int,int):>=(int,int):org.joda.time.chrono.IslamicChronology@equals(java.lang.Object):292:getLeapYearPatternType().index == chrono.getLeapYearPatternType().index |==> getLeapYearPatternType().index >= chrono.getLeapYearPatternType().index
10460:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.IslamicChronology@equals(java.lang.Object):292:getLeapYearPatternType().index == chrono.getLeapYearPatternType().index |==> false
10461:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.IslamicChronology@equals(java.lang.Object):292:getLeapYearPatternType().index == chrono.getLeapYearPatternType().index && super.equals(obj) |==> getLeapYearPatternType().index == chrono.getLeapYearPatternType().index == super.equals(obj)
10462:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.IslamicChronology@equals(java.lang.Object):292:getLeapYearPatternType().index == chrono.getLeapYearPatternType().index && super.equals(obj) |==> false
10463:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.IslamicChronology@equals(java.lang.Object):292:getLeapYearPatternType().index == chrono.getLeapYearPatternType().index && super.equals(obj) |==> getLeapYearPatternType().index == chrono.getLeapYearPatternType().index
10464:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.IslamicChronology@equals(java.lang.Object):293:getLeapYearPatternType().index == chrono.getLeapYearPatternType().index && super.equals(obj) |==> super.equals(obj)
10465:LVR:FALSE:TRUE:org.joda.time.chrono.IslamicChronology@equals(java.lang.Object):295:false |==> true
10466:LVR:POS:0:org.joda.time.chrono.IslamicChronology@hashCode():305:13 |==> 0
10467:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology@hashCode():305:13 |==> -13
10468:AOR:*(int,int):%(int,int):org.joda.time.chrono.IslamicChronology@hashCode():305:super.hashCode() * 13 |==> super.hashCode() % 13
10469:AOR:*(int,int):+(int,int):org.joda.time.chrono.IslamicChronology@hashCode():305:super.hashCode() * 13 |==> super.hashCode() + 13
10470:AOR:*(int,int):-(int,int):org.joda.time.chrono.IslamicChronology@hashCode():305:super.hashCode() * 13 |==> super.hashCode() - 13
10471:AOR:*(int,int):/(int,int):org.joda.time.chrono.IslamicChronology@hashCode():305:super.hashCode() * 13 |==> super.hashCode() / 13
10472:AOR:+(int,int):%(int,int):org.joda.time.chrono.IslamicChronology@hashCode():305:super.hashCode() * 13 + getLeapYearPatternType().hashCode() |==> super.hashCode() * 13 % getLeapYearPatternType().hashCode()
10473:AOR:+(int,int):*(int,int):org.joda.time.chrono.IslamicChronology@hashCode():305:super.hashCode() * 13 + getLeapYearPatternType().hashCode() |==> super.hashCode() * 13 * getLeapYearPatternType().hashCode()
10474:AOR:+(int,int):-(int,int):org.joda.time.chrono.IslamicChronology@hashCode():305:super.hashCode() * 13 + getLeapYearPatternType().hashCode() |==> super.hashCode() * 13 - getLeapYearPatternType().hashCode()
10475:AOR:+(int,int):/(int,int):org.joda.time.chrono.IslamicChronology@hashCode():305:super.hashCode() * 13 + getLeapYearPatternType().hashCode() |==> super.hashCode() * 13 / getLeapYearPatternType().hashCode()
10476:AOR:-(long,long):%(long,long):org.joda.time.chrono.IslamicChronology@getYear(long):310:instant - MILLIS_YEAR_1 |==> instant % MILLIS_YEAR_1
10477:AOR:-(long,long):*(long,long):org.joda.time.chrono.IslamicChronology@getYear(long):310:instant - MILLIS_YEAR_1 |==> instant * MILLIS_YEAR_1
10478:AOR:-(long,long):+(long,long):org.joda.time.chrono.IslamicChronology@getYear(long):310:instant - MILLIS_YEAR_1 |==> instant + MILLIS_YEAR_1
10479:AOR:-(long,long):/(long,long):org.joda.time.chrono.IslamicChronology@getYear(long):310:instant - MILLIS_YEAR_1 |==> instant / MILLIS_YEAR_1
10480:AOR:/(long,long):%(long,long):org.joda.time.chrono.IslamicChronology@getYear(long):311:millisIslamic / MILLIS_PER_CYCLE |==> millisIslamic % MILLIS_PER_CYCLE
10481:AOR:/(long,long):*(long,long):org.joda.time.chrono.IslamicChronology@getYear(long):311:millisIslamic / MILLIS_PER_CYCLE |==> millisIslamic * MILLIS_PER_CYCLE
10482:AOR:/(long,long):+(long,long):org.joda.time.chrono.IslamicChronology@getYear(long):311:millisIslamic / MILLIS_PER_CYCLE |==> millisIslamic + MILLIS_PER_CYCLE
10483:AOR:/(long,long):-(long,long):org.joda.time.chrono.IslamicChronology@getYear(long):311:millisIslamic / MILLIS_PER_CYCLE |==> millisIslamic - MILLIS_PER_CYCLE
10484:AOR:%(long,long):*(long,long):org.joda.time.chrono.IslamicChronology@getYear(long):312:millisIslamic % MILLIS_PER_CYCLE |==> millisIslamic * MILLIS_PER_CYCLE
10485:AOR:%(long,long):+(long,long):org.joda.time.chrono.IslamicChronology@getYear(long):312:millisIslamic % MILLIS_PER_CYCLE |==> millisIslamic + MILLIS_PER_CYCLE
10486:AOR:%(long,long):-(long,long):org.joda.time.chrono.IslamicChronology@getYear(long):312:millisIslamic % MILLIS_PER_CYCLE |==> millisIslamic - MILLIS_PER_CYCLE
10487:AOR:%(long,long):/(long,long):org.joda.time.chrono.IslamicChronology@getYear(long):312:millisIslamic % MILLIS_PER_CYCLE |==> millisIslamic / MILLIS_PER_CYCLE
10488:AOR:*(long,long):%(long,long):org.joda.time.chrono.IslamicChronology@getYear(long):314:cycles * CYCLE |==> cycles % CYCLE
10489:AOR:*(long,long):+(long,long):org.joda.time.chrono.IslamicChronology@getYear(long):314:cycles * CYCLE |==> cycles + CYCLE
10490:AOR:*(long,long):-(long,long):org.joda.time.chrono.IslamicChronology@getYear(long):314:cycles * CYCLE |==> cycles - CYCLE
10491:AOR:*(long,long):/(long,long):org.joda.time.chrono.IslamicChronology@getYear(long):314:cycles * CYCLE |==> cycles / CYCLE
10492:LVR:POS:0:org.joda.time.chrono.IslamicChronology@getYear(long):314:1L |==> 0L
10493:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology@getYear(long):314:1L |==> -1L
10494:AOR:+(long,long):%(long,long):org.joda.time.chrono.IslamicChronology@getYear(long):314:(cycles * CYCLE) + 1L |==> (cycles * CYCLE) % 1L
10495:AOR:+(long,long):*(long,long):org.joda.time.chrono.IslamicChronology@getYear(long):314:(cycles * CYCLE) + 1L |==> (cycles * CYCLE) * 1L
10496:AOR:+(long,long):-(long,long):org.joda.time.chrono.IslamicChronology@getYear(long):314:(cycles * CYCLE) + 1L |==> (cycles * CYCLE) - 1L
10497:AOR:+(long,long):/(long,long):org.joda.time.chrono.IslamicChronology@getYear(long):314:(cycles * CYCLE) + 1L |==> (cycles * CYCLE) / 1L
10498:COR:isLeapYear(year):TRUE:org.joda.time.chrono.IslamicChronology@getYear(long):315:isLeapYear(year) |==> false
10499:COR:isLeapYear(year):FALSE:org.joda.time.chrono.IslamicChronology@getYear(long):315:isLeapYear(year) |==> true
10500:ROR:>=(long,long):==(long,long):org.joda.time.chrono.IslamicChronology@getYear(long):316:cycleRemainder >= yearMillis |==> cycleRemainder == yearMillis
10501:ROR:>=(long,long):>(long,long):org.joda.time.chrono.IslamicChronology@getYear(long):316:cycleRemainder >= yearMillis |==> cycleRemainder > yearMillis
10502:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.IslamicChronology@getYear(long):316:cycleRemainder >= yearMillis |==> true
10503:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.IslamicChronology@getYear(long):317:cycleRemainder -= yearMillis |==> <NO-OP>
10504:COR:isLeapYear(++year):TRUE:org.joda.time.chrono.IslamicChronology@getYear(long):318:isLeapYear(++year) |==> false
10505:COR:isLeapYear(++year):FALSE:org.joda.time.chrono.IslamicChronology@getYear(long):318:isLeapYear(++year) |==> true
10506:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.IslamicChronology@getYear(long):318:yearMillis = (isLeapYear(++year) ? MILLIS_PER_LONG_YEAR : MILLIS_PER_SHORT_YEAR) |==> <NO-OP>
10507:LVR:POS:0:org.joda.time.chrono.IslamicChronology@setYear(long,int):329:354 |==> 0
10508:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology@setYear(long,int):329:354 |==> -354
10509:ROR:>(int,int):!=(int,int):org.joda.time.chrono.IslamicChronology@setYear(long,int):329:dayOfYear > 354 |==> dayOfYear != 354
10510:ROR:>(int,int):>=(int,int):org.joda.time.chrono.IslamicChronology@setYear(long,int):329:dayOfYear > 354 |==> dayOfYear >= 354
10511:ROR:>(int,int):FALSE(int,int):org.joda.time.chrono.IslamicChronology@setYear(long,int):329:dayOfYear > 354 |==> false
10512:COR:isLeapYear(year):TRUE:org.joda.time.chrono.IslamicChronology@setYear(long,int):331:isLeapYear(year) |==> false
10513:COR:isLeapYear(year):FALSE:org.joda.time.chrono.IslamicChronology@setYear(long,int):331:isLeapYear(year) |==> true
10514:STD:<DEC>:<NO-OP>:org.joda.time.chrono.IslamicChronology@setYear(long,int):333:dayOfYear-- |==> <NO-OP>
10515:LVR:POS:0:org.joda.time.chrono.IslamicChronology@setYear(long,int):337:1 |==> 0
10516:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology@setYear(long,int):337:1 |==> -1
10517:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.IslamicChronology@setYear(long,int):337:instant = getYearMonthDayMillis(year, 1, dayOfYear) |==> <NO-OP>
10518:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.IslamicChronology@setYear(long,int):338:instant += millisOfDay |==> <NO-OP>
10519:AOR:-(long,long):%(long,long):org.joda.time.chrono.IslamicChronology@getYearDifference(long,long):349:minuendInstant - getYearMillis(minuendYear) |==> minuendInstant % getYearMillis(minuendYear)
10520:AOR:-(long,long):*(long,long):org.joda.time.chrono.IslamicChronology@getYearDifference(long,long):349:minuendInstant - getYearMillis(minuendYear) |==> minuendInstant * getYearMillis(minuendYear)
10521:AOR:-(long,long):+(long,long):org.joda.time.chrono.IslamicChronology@getYearDifference(long,long):349:minuendInstant - getYearMillis(minuendYear) |==> minuendInstant + getYearMillis(minuendYear)
10522:AOR:-(long,long):/(long,long):org.joda.time.chrono.IslamicChronology@getYearDifference(long,long):349:minuendInstant - getYearMillis(minuendYear) |==> minuendInstant / getYearMillis(minuendYear)
10523:AOR:-(long,long):%(long,long):org.joda.time.chrono.IslamicChronology@getYearDifference(long,long):350:subtrahendInstant - getYearMillis(subtrahendYear) |==> subtrahendInstant % getYearMillis(subtrahendYear)
10524:AOR:-(long,long):*(long,long):org.joda.time.chrono.IslamicChronology@getYearDifference(long,long):350:subtrahendInstant - getYearMillis(subtrahendYear) |==> subtrahendInstant * getYearMillis(subtrahendYear)
10525:AOR:-(long,long):+(long,long):org.joda.time.chrono.IslamicChronology@getYearDifference(long,long):350:subtrahendInstant - getYearMillis(subtrahendYear) |==> subtrahendInstant + getYearMillis(subtrahendYear)
10526:AOR:-(long,long):/(long,long):org.joda.time.chrono.IslamicChronology@getYearDifference(long,long):350:subtrahendInstant - getYearMillis(subtrahendYear) |==> subtrahendInstant / getYearMillis(subtrahendYear)
10527:AOR:-(int,int):%(int,int):org.joda.time.chrono.IslamicChronology@getYearDifference(long,long):352:minuendYear - subtrahendYear |==> minuendYear % subtrahendYear
10528:AOR:-(int,int):*(int,int):org.joda.time.chrono.IslamicChronology@getYearDifference(long,long):352:minuendYear - subtrahendYear |==> minuendYear * subtrahendYear
10529:AOR:-(int,int):+(int,int):org.joda.time.chrono.IslamicChronology@getYearDifference(long,long):352:minuendYear - subtrahendYear |==> minuendYear + subtrahendYear
10530:AOR:-(int,int):/(int,int):org.joda.time.chrono.IslamicChronology@getYearDifference(long,long):352:minuendYear - subtrahendYear |==> minuendYear / subtrahendYear
10531:ROR:<(long,long):!=(long,long):org.joda.time.chrono.IslamicChronology@getYearDifference(long,long):353:minuendRem < subtrahendRem |==> minuendRem != subtrahendRem
10532:ROR:<(long,long):<=(long,long):org.joda.time.chrono.IslamicChronology@getYearDifference(long,long):353:minuendRem < subtrahendRem |==> minuendRem <= subtrahendRem
10533:ROR:<(long,long):FALSE(long,long):org.joda.time.chrono.IslamicChronology@getYearDifference(long,long):353:minuendRem < subtrahendRem |==> false
10534:STD:<DEC>:<NO-OP>:org.joda.time.chrono.IslamicChronology@getYearDifference(long,long):354:difference-- |==> <NO-OP>
10535:LVR:POS:0:org.joda.time.chrono.IslamicChronology@getTotalMillisByYearMonth(int,int):361:2 |==> 0
10536:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology@getTotalMillisByYearMonth(int,int):361:2 |==> -2
10537:AOR:%(int,int):*(int,int):org.joda.time.chrono.IslamicChronology@getTotalMillisByYearMonth(int,int):361:--month % 2 |==> --month * 2
10538:AOR:%(int,int):+(int,int):org.joda.time.chrono.IslamicChronology@getTotalMillisByYearMonth(int,int):361:--month % 2 |==> --month + 2
10539:AOR:%(int,int):-(int,int):org.joda.time.chrono.IslamicChronology@getTotalMillisByYearMonth(int,int):361:--month % 2 |==> --month - 2
10540:AOR:%(int,int):/(int,int):org.joda.time.chrono.IslamicChronology@getTotalMillisByYearMonth(int,int):361:--month % 2 |==> --month / 2
10541:LVR:POS:0:org.joda.time.chrono.IslamicChronology@getTotalMillisByYearMonth(int,int):361:1 |==> 0
10542:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology@getTotalMillisByYearMonth(int,int):361:1 |==> -1
10543:ROR:==(int,int):<=(int,int):org.joda.time.chrono.IslamicChronology@getTotalMillisByYearMonth(int,int):361:--month % 2 == 1 |==> --month % 2 <= 1
10544:ROR:==(int,int):>=(int,int):org.joda.time.chrono.IslamicChronology@getTotalMillisByYearMonth(int,int):361:--month % 2 == 1 |==> --month % 2 >= 1
10545:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.IslamicChronology@getTotalMillisByYearMonth(int,int):361:--month % 2 == 1 |==> false
10546:LVR:POS:0:org.joda.time.chrono.IslamicChronology@getTotalMillisByYearMonth(int,int):362:2 |==> 0
10547:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology@getTotalMillisByYearMonth(int,int):362:2 |==> -2
10548:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.IslamicChronology@getTotalMillisByYearMonth(int,int):362:month /= 2 |==> <NO-OP>
10549:AOR:*(long,long):%(long,long):org.joda.time.chrono.IslamicChronology@getTotalMillisByYearMonth(int,int):363:month * MILLIS_PER_MONTH_PAIR |==> month % MILLIS_PER_MONTH_PAIR
10550:AOR:*(long,long):+(long,long):org.joda.time.chrono.IslamicChronology@getTotalMillisByYearMonth(int,int):363:month * MILLIS_PER_MONTH_PAIR |==> month + MILLIS_PER_MONTH_PAIR
10551:AOR:*(long,long):-(long,long):org.joda.time.chrono.IslamicChronology@getTotalMillisByYearMonth(int,int):363:month * MILLIS_PER_MONTH_PAIR |==> month - MILLIS_PER_MONTH_PAIR
10552:AOR:*(long,long):/(long,long):org.joda.time.chrono.IslamicChronology@getTotalMillisByYearMonth(int,int):363:month * MILLIS_PER_MONTH_PAIR |==> month / MILLIS_PER_MONTH_PAIR
10553:AOR:+(long,long):%(long,long):org.joda.time.chrono.IslamicChronology@getTotalMillisByYearMonth(int,int):363:month * MILLIS_PER_MONTH_PAIR + MILLIS_PER_LONG_MONTH |==> month * MILLIS_PER_MONTH_PAIR % MILLIS_PER_LONG_MONTH
10554:AOR:+(long,long):*(long,long):org.joda.time.chrono.IslamicChronology@getTotalMillisByYearMonth(int,int):363:month * MILLIS_PER_MONTH_PAIR + MILLIS_PER_LONG_MONTH |==> month * MILLIS_PER_MONTH_PAIR * MILLIS_PER_LONG_MONTH
10555:AOR:+(long,long):-(long,long):org.joda.time.chrono.IslamicChronology@getTotalMillisByYearMonth(int,int):363:month * MILLIS_PER_MONTH_PAIR + MILLIS_PER_LONG_MONTH |==> month * MILLIS_PER_MONTH_PAIR - MILLIS_PER_LONG_MONTH
10556:AOR:+(long,long):/(long,long):org.joda.time.chrono.IslamicChronology@getTotalMillisByYearMonth(int,int):363:month * MILLIS_PER_MONTH_PAIR + MILLIS_PER_LONG_MONTH |==> month * MILLIS_PER_MONTH_PAIR / MILLIS_PER_LONG_MONTH
10557:LVR:POS:0:org.joda.time.chrono.IslamicChronology@getTotalMillisByYearMonth(int,int):365:2 |==> 0
10558:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology@getTotalMillisByYearMonth(int,int):365:2 |==> -2
10559:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.IslamicChronology@getTotalMillisByYearMonth(int,int):365:month /= 2 |==> <NO-OP>
10560:AOR:*(long,long):%(long,long):org.joda.time.chrono.IslamicChronology@getTotalMillisByYearMonth(int,int):366:month * MILLIS_PER_MONTH_PAIR |==> month % MILLIS_PER_MONTH_PAIR
10561:AOR:*(long,long):+(long,long):org.joda.time.chrono.IslamicChronology@getTotalMillisByYearMonth(int,int):366:month * MILLIS_PER_MONTH_PAIR |==> month + MILLIS_PER_MONTH_PAIR
10562:AOR:*(long,long):-(long,long):org.joda.time.chrono.IslamicChronology@getTotalMillisByYearMonth(int,int):366:month * MILLIS_PER_MONTH_PAIR |==> month - MILLIS_PER_MONTH_PAIR
10563:AOR:*(long,long):/(long,long):org.joda.time.chrono.IslamicChronology@getTotalMillisByYearMonth(int,int):366:month * MILLIS_PER_MONTH_PAIR |==> month / MILLIS_PER_MONTH_PAIR
10564:LVR:POS:0:org.joda.time.chrono.IslamicChronology@getDayOfMonth(long):373:1 |==> 0
10565:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology@getDayOfMonth(long):373:1 |==> -1
10566:AOR:-(int,int):%(int,int):org.joda.time.chrono.IslamicChronology@getDayOfMonth(long):373:getDayOfYear(millis) - 1 |==> getDayOfYear(millis) % 1
10567:AOR:-(int,int):*(int,int):org.joda.time.chrono.IslamicChronology@getDayOfMonth(long):373:getDayOfYear(millis) - 1 |==> getDayOfYear(millis) * 1
10568:AOR:-(int,int):+(int,int):org.joda.time.chrono.IslamicChronology@getDayOfMonth(long):373:getDayOfYear(millis) - 1 |==> getDayOfYear(millis) + 1
10569:AOR:-(int,int):/(int,int):org.joda.time.chrono.IslamicChronology@getDayOfMonth(long):373:getDayOfYear(millis) - 1 |==> getDayOfYear(millis) / 1
10570:LVR:POS:0:org.joda.time.chrono.IslamicChronology@getDayOfMonth(long):374:354 |==> 0
10571:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology@getDayOfMonth(long):374:354 |==> -354
10572:ROR:==(int,int):<=(int,int):org.joda.time.chrono.IslamicChronology@getDayOfMonth(long):374:doy == 354 |==> doy <= 354
10573:ROR:==(int,int):>=(int,int):org.joda.time.chrono.IslamicChronology@getDayOfMonth(long):374:doy == 354 |==> doy >= 354
10574:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.IslamicChronology@getDayOfMonth(long):374:doy == 354 |==> false
10575:LVR:POS:0:org.joda.time.chrono.IslamicChronology@getDayOfMonth(long):375:30 |==> 0
10576:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology@getDayOfMonth(long):375:30 |==> -30
10577:AOR:%(int,int):*(int,int):org.joda.time.chrono.IslamicChronology@getDayOfMonth(long):377:doy % MONTH_PAIR_LENGTH |==> doy * MONTH_PAIR_LENGTH
10578:AOR:%(int,int):+(int,int):org.joda.time.chrono.IslamicChronology@getDayOfMonth(long):377:doy % MONTH_PAIR_LENGTH |==> doy + MONTH_PAIR_LENGTH
10579:AOR:%(int,int):-(int,int):org.joda.time.chrono.IslamicChronology@getDayOfMonth(long):377:doy % MONTH_PAIR_LENGTH |==> doy - MONTH_PAIR_LENGTH
10580:AOR:%(int,int):/(int,int):org.joda.time.chrono.IslamicChronology@getDayOfMonth(long):377:doy % MONTH_PAIR_LENGTH |==> doy / MONTH_PAIR_LENGTH
10581:AOR:%(int,int):*(int,int):org.joda.time.chrono.IslamicChronology@getDayOfMonth(long):377:(doy % MONTH_PAIR_LENGTH) % LONG_MONTH_LENGTH |==> (doy % MONTH_PAIR_LENGTH) * LONG_MONTH_LENGTH
10582:AOR:%(int,int):+(int,int):org.joda.time.chrono.IslamicChronology@getDayOfMonth(long):377:(doy % MONTH_PAIR_LENGTH) % LONG_MONTH_LENGTH |==> (doy % MONTH_PAIR_LENGTH) + LONG_MONTH_LENGTH
10583:AOR:%(int,int):-(int,int):org.joda.time.chrono.IslamicChronology@getDayOfMonth(long):377:(doy % MONTH_PAIR_LENGTH) % LONG_MONTH_LENGTH |==> (doy % MONTH_PAIR_LENGTH) - LONG_MONTH_LENGTH
10584:AOR:%(int,int):/(int,int):org.joda.time.chrono.IslamicChronology@getDayOfMonth(long):377:(doy % MONTH_PAIR_LENGTH) % LONG_MONTH_LENGTH |==> (doy % MONTH_PAIR_LENGTH) / LONG_MONTH_LENGTH
10585:LVR:POS:0:org.joda.time.chrono.IslamicChronology@getDayOfMonth(long):377:1 |==> 0
10586:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology@getDayOfMonth(long):377:1 |==> -1
10587:AOR:+(int,int):%(int,int):org.joda.time.chrono.IslamicChronology@getDayOfMonth(long):377:(doy % MONTH_PAIR_LENGTH) % LONG_MONTH_LENGTH + 1 |==> (doy % MONTH_PAIR_LENGTH) % LONG_MONTH_LENGTH % 1
10588:AOR:+(int,int):*(int,int):org.joda.time.chrono.IslamicChronology@getDayOfMonth(long):377:(doy % MONTH_PAIR_LENGTH) % LONG_MONTH_LENGTH + 1 |==> (doy % MONTH_PAIR_LENGTH) % LONG_MONTH_LENGTH * 1
10589:AOR:+(int,int):-(int,int):org.joda.time.chrono.IslamicChronology@getDayOfMonth(long):377:(doy % MONTH_PAIR_LENGTH) % LONG_MONTH_LENGTH + 1 |==> (doy % MONTH_PAIR_LENGTH) % LONG_MONTH_LENGTH - 1
10590:AOR:+(int,int):/(int,int):org.joda.time.chrono.IslamicChronology@getDayOfMonth(long):377:(doy % MONTH_PAIR_LENGTH) % LONG_MONTH_LENGTH + 1 |==> (doy % MONTH_PAIR_LENGTH) % LONG_MONTH_LENGTH / 1
10591:LVR:POS:0:org.joda.time.chrono.IslamicChronology@getDaysInYearMax():387:355 |==> 0
10592:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology@getDaysInYearMax():387:355 |==> -355
10593:COR:isLeapYear(year):TRUE:org.joda.time.chrono.IslamicChronology@getDaysInYear(int):392:isLeapYear(year) |==> false
10594:COR:isLeapYear(year):FALSE:org.joda.time.chrono.IslamicChronology@getDaysInYear(int):392:isLeapYear(year) |==> true
10595:LVR:POS:0:org.joda.time.chrono.IslamicChronology@getDaysInYear(int):392:355 |==> 0
10596:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology@getDaysInYear(int):392:355 |==> -355
10597:LVR:POS:0:org.joda.time.chrono.IslamicChronology@getDaysInYear(int):392:354 |==> 0
10598:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology@getDaysInYear(int):392:354 |==> -354
10599:LVR:POS:0:org.joda.time.chrono.IslamicChronology@getDaysInYearMonth(int,int):397:12 |==> 0
10600:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology@getDaysInYearMonth(int,int):397:12 |==> -12
10601:ROR:==(int,int):<=(int,int):org.joda.time.chrono.IslamicChronology@getDaysInYearMonth(int,int):397:month == 12 |==> month <= 12
10602:ROR:==(int,int):>=(int,int):org.joda.time.chrono.IslamicChronology@getDaysInYearMonth(int,int):397:month == 12 |==> month >= 12
10603:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.IslamicChronology@getDaysInYearMonth(int,int):397:month == 12 |==> false
10604:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.IslamicChronology@getDaysInYearMonth(int,int):397:month == 12 && isLeapYear(year) |==> month == 12 == isLeapYear(year)
10605:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.IslamicChronology@getDaysInYearMonth(int,int):397:month == 12 && isLeapYear(year) |==> false
10606:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.IslamicChronology@getDaysInYearMonth(int,int):397:month == 12 && isLeapYear(year) |==> month == 12
10607:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.IslamicChronology@getDaysInYearMonth(int,int):397:month == 12 && isLeapYear(year) |==> isLeapYear(year)
10608:LVR:POS:0:org.joda.time.chrono.IslamicChronology@getDaysInYearMonth(int,int):400:2 |==> 0
10609:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology@getDaysInYearMonth(int,int):400:2 |==> -2
10610:AOR:%(int,int):*(int,int):org.joda.time.chrono.IslamicChronology@getDaysInYearMonth(int,int):400:--month % 2 |==> --month * 2
10611:AOR:%(int,int):+(int,int):org.joda.time.chrono.IslamicChronology@getDaysInYearMonth(int,int):400:--month % 2 |==> --month + 2
10612:AOR:%(int,int):-(int,int):org.joda.time.chrono.IslamicChronology@getDaysInYearMonth(int,int):400:--month % 2 |==> --month - 2
10613:AOR:%(int,int):/(int,int):org.joda.time.chrono.IslamicChronology@getDaysInYearMonth(int,int):400:--month % 2 |==> --month / 2
10614:LVR:0:POS:org.joda.time.chrono.IslamicChronology@getDaysInYearMonth(int,int):400:0 |==> 1
10615:LVR:0:NEG:org.joda.time.chrono.IslamicChronology@getDaysInYearMonth(int,int):400:0 |==> -1
10616:ROR:==(int,int):<=(int,int):org.joda.time.chrono.IslamicChronology@getDaysInYearMonth(int,int):400:--month % 2 == 0 |==> --month % 2 <= 0
10617:ROR:==(int,int):>=(int,int):org.joda.time.chrono.IslamicChronology@getDaysInYearMonth(int,int):400:--month % 2 == 0 |==> --month % 2 >= 0
10618:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.IslamicChronology@getDaysInYearMonth(int,int):400:--month % 2 == 0 |==> false
10619:LVR:POS:0:org.joda.time.chrono.IslamicChronology@getDaysInMonthMax(int):410:12 |==> 0
10620:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology@getDaysInMonthMax(int):410:12 |==> -12
10621:ROR:==(int,int):<=(int,int):org.joda.time.chrono.IslamicChronology@getDaysInMonthMax(int):410:month == 12 |==> month <= 12
10622:ROR:==(int,int):>=(int,int):org.joda.time.chrono.IslamicChronology@getDaysInMonthMax(int):410:month == 12 |==> month >= 12
10623:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.IslamicChronology@getDaysInMonthMax(int):410:month == 12 |==> false
10624:LVR:POS:0:org.joda.time.chrono.IslamicChronology@getDaysInMonthMax(int):413:2 |==> 0
10625:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology@getDaysInMonthMax(int):413:2 |==> -2
10626:AOR:%(int,int):*(int,int):org.joda.time.chrono.IslamicChronology@getDaysInMonthMax(int):413:--month % 2 |==> --month * 2
10627:AOR:%(int,int):+(int,int):org.joda.time.chrono.IslamicChronology@getDaysInMonthMax(int):413:--month % 2 |==> --month + 2
10628:AOR:%(int,int):-(int,int):org.joda.time.chrono.IslamicChronology@getDaysInMonthMax(int):413:--month % 2 |==> --month - 2
10629:AOR:%(int,int):/(int,int):org.joda.time.chrono.IslamicChronology@getDaysInMonthMax(int):413:--month % 2 |==> --month / 2
10630:LVR:0:POS:org.joda.time.chrono.IslamicChronology@getDaysInMonthMax(int):413:0 |==> 1
10631:LVR:0:NEG:org.joda.time.chrono.IslamicChronology@getDaysInMonthMax(int):413:0 |==> -1
10632:ROR:==(int,int):<=(int,int):org.joda.time.chrono.IslamicChronology@getDaysInMonthMax(int):413:--month % 2 == 0 |==> --month % 2 <= 0
10633:ROR:==(int,int):>=(int,int):org.joda.time.chrono.IslamicChronology@getDaysInMonthMax(int):413:--month % 2 == 0 |==> --month % 2 >= 0
10634:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.IslamicChronology@getDaysInMonthMax(int):413:--month % 2 == 0 |==> false
10635:AOR:-(long,long):%(long,long):org.joda.time.chrono.IslamicChronology@getMonthOfYear(long,int):418:millis - getYearMillis(year) |==> millis % getYearMillis(year)
10636:AOR:-(long,long):*(long,long):org.joda.time.chrono.IslamicChronology@getMonthOfYear(long,int):418:millis - getYearMillis(year) |==> millis * getYearMillis(year)
10637:AOR:-(long,long):+(long,long):org.joda.time.chrono.IslamicChronology@getMonthOfYear(long,int):418:millis - getYearMillis(year) |==> millis + getYearMillis(year)
10638:AOR:-(long,long):/(long,long):org.joda.time.chrono.IslamicChronology@getMonthOfYear(long,int):418:millis - getYearMillis(year) |==> millis / getYearMillis(year)
10639:AOR:/(long,long):%(long,long):org.joda.time.chrono.IslamicChronology@getMonthOfYear(long,int):418:(millis - getYearMillis(year)) / DateTimeConstants.MILLIS_PER_DAY |==> (millis - getYearMillis(year)) % DateTimeConstants.MILLIS_PER_DAY
10640:AOR:/(long,long):*(long,long):org.joda.time.chrono.IslamicChronology@getMonthOfYear(long,int):418:(millis - getYearMillis(year)) / DateTimeConstants.MILLIS_PER_DAY |==> (millis - getYearMillis(year)) * DateTimeConstants.MILLIS_PER_DAY
10641:AOR:/(long,long):+(long,long):org.joda.time.chrono.IslamicChronology@getMonthOfYear(long,int):418:(millis - getYearMillis(year)) / DateTimeConstants.MILLIS_PER_DAY |==> (millis - getYearMillis(year)) + DateTimeConstants.MILLIS_PER_DAY
10642:AOR:/(long,long):-(long,long):org.joda.time.chrono.IslamicChronology@getMonthOfYear(long,int):418:(millis - getYearMillis(year)) / DateTimeConstants.MILLIS_PER_DAY |==> (millis - getYearMillis(year)) - DateTimeConstants.MILLIS_PER_DAY
10643:LVR:POS:0:org.joda.time.chrono.IslamicChronology@getMonthOfYear(long,int):419:354 |==> 0
10644:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology@getMonthOfYear(long,int):419:354 |==> -354
10645:ROR:==(int,int):<=(int,int):org.joda.time.chrono.IslamicChronology@getMonthOfYear(long,int):419:doyZeroBased == 354 |==> doyZeroBased <= 354
10646:ROR:==(int,int):>=(int,int):org.joda.time.chrono.IslamicChronology@getMonthOfYear(long,int):419:doyZeroBased == 354 |==> doyZeroBased >= 354
10647:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.IslamicChronology@getMonthOfYear(long,int):419:doyZeroBased == 354 |==> false
10648:LVR:POS:0:org.joda.time.chrono.IslamicChronology@getMonthOfYear(long,int):420:12 |==> 0
10649:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology@getMonthOfYear(long,int):420:12 |==> -12
10650:LVR:POS:0:org.joda.time.chrono.IslamicChronology@getMonthOfYear(long,int):422:2 |==> 0
10651:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology@getMonthOfYear(long,int):422:2 |==> -2
10652:AOR:*(int,int):%(int,int):org.joda.time.chrono.IslamicChronology@getMonthOfYear(long,int):422:doyZeroBased * 2 |==> doyZeroBased % 2
10653:AOR:*(int,int):+(int,int):org.joda.time.chrono.IslamicChronology@getMonthOfYear(long,int):422:doyZeroBased * 2 |==> doyZeroBased + 2
10654:AOR:*(int,int):-(int,int):org.joda.time.chrono.IslamicChronology@getMonthOfYear(long,int):422:doyZeroBased * 2 |==> doyZeroBased - 2
10655:AOR:*(int,int):/(int,int):org.joda.time.chrono.IslamicChronology@getMonthOfYear(long,int):422:doyZeroBased * 2 |==> doyZeroBased / 2
10656:AOR:/(int,int):%(int,int):org.joda.time.chrono.IslamicChronology@getMonthOfYear(long,int):422:(doyZeroBased * 2) / MONTH_PAIR_LENGTH |==> (doyZeroBased * 2) % MONTH_PAIR_LENGTH
10657:AOR:/(int,int):*(int,int):org.joda.time.chrono.IslamicChronology@getMonthOfYear(long,int):422:(doyZeroBased * 2) / MONTH_PAIR_LENGTH |==> (doyZeroBased * 2) * MONTH_PAIR_LENGTH
10658:AOR:/(int,int):+(int,int):org.joda.time.chrono.IslamicChronology@getMonthOfYear(long,int):422:(doyZeroBased * 2) / MONTH_PAIR_LENGTH |==> (doyZeroBased * 2) + MONTH_PAIR_LENGTH
10659:AOR:/(int,int):-(int,int):org.joda.time.chrono.IslamicChronology@getMonthOfYear(long,int):422:(doyZeroBased * 2) / MONTH_PAIR_LENGTH |==> (doyZeroBased * 2) - MONTH_PAIR_LENGTH
10660:LVR:POS:0:org.joda.time.chrono.IslamicChronology@getMonthOfYear(long,int):422:1 |==> 0
10661:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology@getMonthOfYear(long,int):422:1 |==> -1
10662:AOR:+(int,int):%(int,int):org.joda.time.chrono.IslamicChronology@getMonthOfYear(long,int):422:((doyZeroBased * 2) / MONTH_PAIR_LENGTH) + 1 |==> ((doyZeroBased * 2) / MONTH_PAIR_LENGTH) % 1
10663:AOR:+(int,int):*(int,int):org.joda.time.chrono.IslamicChronology@getMonthOfYear(long,int):422:((doyZeroBased * 2) / MONTH_PAIR_LENGTH) + 1 |==> ((doyZeroBased * 2) / MONTH_PAIR_LENGTH) * 1
10664:AOR:+(int,int):-(int,int):org.joda.time.chrono.IslamicChronology@getMonthOfYear(long,int):422:((doyZeroBased * 2) / MONTH_PAIR_LENGTH) + 1 |==> ((doyZeroBased * 2) / MONTH_PAIR_LENGTH) - 1
10665:AOR:+(int,int):/(int,int):org.joda.time.chrono.IslamicChronology@getMonthOfYear(long,int):422:((doyZeroBased * 2) / MONTH_PAIR_LENGTH) + 1 |==> ((doyZeroBased * 2) / MONTH_PAIR_LENGTH) / 1
10666:LVR:POS:0:org.joda.time.chrono.IslamicChronology@getAverageMillisPerYearDividedByTwo():437:2 |==> 0
10667:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology@getAverageMillisPerYearDividedByTwo():437:2 |==> -2
10668:AOR:/(long,long):%(long,long):org.joda.time.chrono.IslamicChronology@getAverageMillisPerYearDividedByTwo():437:MILLIS_PER_YEAR / 2 |==> MILLIS_PER_YEAR % 2
10669:AOR:/(long,long):*(long,long):org.joda.time.chrono.IslamicChronology@getAverageMillisPerYearDividedByTwo():437:MILLIS_PER_YEAR / 2 |==> MILLIS_PER_YEAR * 2
10670:AOR:/(long,long):+(long,long):org.joda.time.chrono.IslamicChronology@getAverageMillisPerYearDividedByTwo():437:MILLIS_PER_YEAR / 2 |==> MILLIS_PER_YEAR + 2
10671:AOR:/(long,long):-(long,long):org.joda.time.chrono.IslamicChronology@getAverageMillisPerYearDividedByTwo():437:MILLIS_PER_YEAR / 2 |==> MILLIS_PER_YEAR - 2
10672:ROR:>(int,int):!=(int,int):org.joda.time.chrono.IslamicChronology@calculateFirstDayOfYearMillis(int):447:year > MAX_YEAR |==> year != MAX_YEAR
10673:ROR:>(int,int):>=(int,int):org.joda.time.chrono.IslamicChronology@calculateFirstDayOfYearMillis(int):447:year > MAX_YEAR |==> year >= MAX_YEAR
10674:ROR:>(int,int):FALSE(int,int):org.joda.time.chrono.IslamicChronology@calculateFirstDayOfYearMillis(int):447:year > MAX_YEAR |==> false
10675:ROR:<(int,int):!=(int,int):org.joda.time.chrono.IslamicChronology@calculateFirstDayOfYearMillis(int):450:year < MIN_YEAR |==> year != MIN_YEAR
10676:ROR:<(int,int):<=(int,int):org.joda.time.chrono.IslamicChronology@calculateFirstDayOfYearMillis(int):450:year < MIN_YEAR |==> year <= MIN_YEAR
10677:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.IslamicChronology@calculateFirstDayOfYearMillis(int):450:year < MIN_YEAR |==> false
10678:STD:<DEC>:<NO-OP>:org.joda.time.chrono.IslamicChronology@calculateFirstDayOfYearMillis(int):458:year-- |==> <NO-OP>
10679:AOR:/(int,int):%(int,int):org.joda.time.chrono.IslamicChronology@calculateFirstDayOfYearMillis(int):459:year / CYCLE |==> year % CYCLE
10680:AOR:/(int,int):*(int,int):org.joda.time.chrono.IslamicChronology@calculateFirstDayOfYearMillis(int):459:year / CYCLE |==> year * CYCLE
10681:AOR:/(int,int):+(int,int):org.joda.time.chrono.IslamicChronology@calculateFirstDayOfYearMillis(int):459:year / CYCLE |==> year + CYCLE
10682:AOR:/(int,int):-(int,int):org.joda.time.chrono.IslamicChronology@calculateFirstDayOfYearMillis(int):459:year / CYCLE |==> year - CYCLE
10683:AOR:*(long,long):%(long,long):org.joda.time.chrono.IslamicChronology@calculateFirstDayOfYearMillis(int):460:cycle * MILLIS_PER_CYCLE |==> cycle % MILLIS_PER_CYCLE
10684:AOR:*(long,long):+(long,long):org.joda.time.chrono.IslamicChronology@calculateFirstDayOfYearMillis(int):460:cycle * MILLIS_PER_CYCLE |==> cycle + MILLIS_PER_CYCLE
10685:AOR:*(long,long):-(long,long):org.joda.time.chrono.IslamicChronology@calculateFirstDayOfYearMillis(int):460:cycle * MILLIS_PER_CYCLE |==> cycle - MILLIS_PER_CYCLE
10686:AOR:*(long,long):/(long,long):org.joda.time.chrono.IslamicChronology@calculateFirstDayOfYearMillis(int):460:cycle * MILLIS_PER_CYCLE |==> cycle / MILLIS_PER_CYCLE
10687:AOR:+(long,long):%(long,long):org.joda.time.chrono.IslamicChronology@calculateFirstDayOfYearMillis(int):460:MILLIS_YEAR_1 + cycle * MILLIS_PER_CYCLE |==> MILLIS_YEAR_1 % (cycle * MILLIS_PER_CYCLE)
10688:AOR:+(long,long):*(long,long):org.joda.time.chrono.IslamicChronology@calculateFirstDayOfYearMillis(int):460:MILLIS_YEAR_1 + cycle * MILLIS_PER_CYCLE |==> MILLIS_YEAR_1 * (cycle * MILLIS_PER_CYCLE)
10689:AOR:+(long,long):-(long,long):org.joda.time.chrono.IslamicChronology@calculateFirstDayOfYearMillis(int):460:MILLIS_YEAR_1 + cycle * MILLIS_PER_CYCLE |==> MILLIS_YEAR_1 - cycle * MILLIS_PER_CYCLE
10690:AOR:+(long,long):/(long,long):org.joda.time.chrono.IslamicChronology@calculateFirstDayOfYearMillis(int):460:MILLIS_YEAR_1 + cycle * MILLIS_PER_CYCLE |==> MILLIS_YEAR_1 / (cycle * MILLIS_PER_CYCLE)
10691:AOR:%(int,int):*(int,int):org.joda.time.chrono.IslamicChronology@calculateFirstDayOfYearMillis(int):461:year % CYCLE |==> year * CYCLE
10692:AOR:%(int,int):+(int,int):org.joda.time.chrono.IslamicChronology@calculateFirstDayOfYearMillis(int):461:year % CYCLE |==> year + CYCLE
10693:AOR:%(int,int):-(int,int):org.joda.time.chrono.IslamicChronology@calculateFirstDayOfYearMillis(int):461:year % CYCLE |==> year - CYCLE
10694:AOR:%(int,int):/(int,int):org.joda.time.chrono.IslamicChronology@calculateFirstDayOfYearMillis(int):461:year % CYCLE |==> year / CYCLE
10695:LVR:POS:0:org.joda.time.chrono.IslamicChronology@calculateFirstDayOfYearMillis(int):461:1 |==> 0
10696:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology@calculateFirstDayOfYearMillis(int):461:1 |==> -1
10697:AOR:+(int,int):%(int,int):org.joda.time.chrono.IslamicChronology@calculateFirstDayOfYearMillis(int):461:(year % CYCLE) + 1 |==> (year % CYCLE) % 1
10698:AOR:+(int,int):*(int,int):org.joda.time.chrono.IslamicChronology@calculateFirstDayOfYearMillis(int):461:(year % CYCLE) + 1 |==> (year % CYCLE) * 1
10699:AOR:+(int,int):-(int,int):org.joda.time.chrono.IslamicChronology@calculateFirstDayOfYearMillis(int):461:(year % CYCLE) + 1 |==> (year % CYCLE) - 1
10700:AOR:+(int,int):/(int,int):org.joda.time.chrono.IslamicChronology@calculateFirstDayOfYearMillis(int):461:(year % CYCLE) + 1 |==> (year % CYCLE) / 1
10701:LVR:POS:0:org.joda.time.chrono.IslamicChronology@calculateFirstDayOfYearMillis(int):463:1 |==> 0
10702:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology@calculateFirstDayOfYearMillis(int):463:1 |==> -1
10703:ROR:<(int,int):!=(int,int):org.joda.time.chrono.IslamicChronology@calculateFirstDayOfYearMillis(int):463:i < cycleRemainder |==> i != cycleRemainder
10704:ROR:<(int,int):<=(int,int):org.joda.time.chrono.IslamicChronology@calculateFirstDayOfYearMillis(int):463:i < cycleRemainder |==> i <= cycleRemainder
10705:ROR:<(int,int):FALSE(int,int):org.joda.time.chrono.IslamicChronology@calculateFirstDayOfYearMillis(int):463:i < cycleRemainder |==> false
10706:COR:isLeapYear(i):TRUE:org.joda.time.chrono.IslamicChronology@calculateFirstDayOfYearMillis(int):464:isLeapYear(i) |==> false
10707:COR:isLeapYear(i):FALSE:org.joda.time.chrono.IslamicChronology@calculateFirstDayOfYearMillis(int):464:isLeapYear(i) |==> true
10708:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.IslamicChronology@calculateFirstDayOfYearMillis(int):464:millis += (isLeapYear(i) ? MILLIS_PER_LONG_YEAR : MILLIS_PER_SHORT_YEAR) |==> <NO-OP>
10709:LVR:POS:0:org.joda.time.chrono.IslamicChronology@getMinYear():472:1 |==> 0
10710:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology@getMinYear():472:1 |==> -1
10711:ORU:-(long):+(long):org.joda.time.chrono.IslamicChronology@getApproxMillisAtEpochDividedByTwo():483:-MILLIS_YEAR_1 |==> +MILLIS_YEAR_1
10712:ORU:-(long):~(long):org.joda.time.chrono.IslamicChronology@getApproxMillisAtEpochDividedByTwo():483:-MILLIS_YEAR_1 |==> ~MILLIS_YEAR_1
10713:LVR:POS:0:org.joda.time.chrono.IslamicChronology@getApproxMillisAtEpochDividedByTwo():483:2 |==> 0
10714:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology@getApproxMillisAtEpochDividedByTwo():483:2 |==> -2
10715:AOR:/(long,long):%(long,long):org.joda.time.chrono.IslamicChronology@getApproxMillisAtEpochDividedByTwo():483:(-MILLIS_YEAR_1) / 2 |==> (-MILLIS_YEAR_1) % 2
10716:AOR:/(long,long):*(long,long):org.joda.time.chrono.IslamicChronology@getApproxMillisAtEpochDividedByTwo():483:(-MILLIS_YEAR_1) / 2 |==> (-MILLIS_YEAR_1) * 2
10717:AOR:/(long,long):+(long,long):org.joda.time.chrono.IslamicChronology@getApproxMillisAtEpochDividedByTwo():483:(-MILLIS_YEAR_1) / 2 |==> (-MILLIS_YEAR_1) + 2
10718:AOR:/(long,long):-(long,long):org.joda.time.chrono.IslamicChronology@getApproxMillisAtEpochDividedByTwo():483:(-MILLIS_YEAR_1) / 2 |==> (-MILLIS_YEAR_1) - 2
10719:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.IslamicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):488:getBase() == null |==> false
10720:STD:<CALL>:<NO-OP>:org.joda.time.chrono.IslamicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):489:super.assemble(fields) |==> <NO-OP>
10721:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.IslamicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):491:fields.era = ERA_FIELD |==> <NO-OP>
10722:LVR:POS:0:org.joda.time.chrono.IslamicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):492:12 |==> 0
10723:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):492:12 |==> -12
10724:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.IslamicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):492:fields.monthOfYear = new BasicMonthOfYearDateTimeField(this, 12) |==> <NO-OP>
10725:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.IslamicChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):493:fields.months = fields.monthOfYear.getDurationField() |==> <NO-OP>
10726:LVR:POS:0:org.joda.time.chrono.IslamicChronology$LeapYearPatternType@isLeapYear(int):540:1 |==> 0
10727:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology$LeapYearPatternType@isLeapYear(int):540:1 |==> -1
10728:LVR:POS:0:org.joda.time.chrono.IslamicChronology$LeapYearPatternType@isLeapYear(int):540:30 |==> 0
10729:LVR:POS:NEG:org.joda.time.chrono.IslamicChronology$LeapYearPatternType@isLeapYear(int):540:30 |==> -30
10730:AOR:%(int,int):*(int,int):org.joda.time.chrono.IslamicChronology$LeapYearPatternType@isLeapYear(int):540:year % 30 |==> year * 30
10731:AOR:%(int,int):+(int,int):org.joda.time.chrono.IslamicChronology$LeapYearPatternType@isLeapYear(int):540:year % 30 |==> year + 30
10732:AOR:%(int,int):-(int,int):org.joda.time.chrono.IslamicChronology$LeapYearPatternType@isLeapYear(int):540:year % 30 |==> year - 30
10733:AOR:%(int,int):/(int,int):org.joda.time.chrono.IslamicChronology$LeapYearPatternType@isLeapYear(int):540:year % 30 |==> year / 30
10734:SOR:<<(int,int):>>(int,int):org.joda.time.chrono.IslamicChronology$LeapYearPatternType@isLeapYear(int):540:1 << (year % 30) |==> 1 >> (year % 30)
10735:SOR:<<(int,int):>>>(int,int):org.joda.time.chrono.IslamicChronology$LeapYearPatternType@isLeapYear(int):540:1 << (year % 30) |==> 1 >>> (year % 30)
10736:LOR:&(int,int):^(int,int):org.joda.time.chrono.IslamicChronology$LeapYearPatternType@isLeapYear(int):541:pattern & key |==> pattern ^ key
10737:LOR:&(int,int):|(int,int):org.joda.time.chrono.IslamicChronology$LeapYearPatternType@isLeapYear(int):541:pattern & key |==> pattern | key
10738:LVR:0:POS:org.joda.time.chrono.IslamicChronology$LeapYearPatternType@isLeapYear(int):541:0 |==> 1
10739:LVR:0:NEG:org.joda.time.chrono.IslamicChronology$LeapYearPatternType@isLeapYear(int):541:0 |==> -1
10740:ROR:>(int,int):!=(int,int):org.joda.time.chrono.IslamicChronology$LeapYearPatternType@isLeapYear(int):541:(pattern & key) > 0 |==> (pattern & key) != 0
10741:ROR:>(int,int):>=(int,int):org.joda.time.chrono.IslamicChronology$LeapYearPatternType@isLeapYear(int):541:(pattern & key) > 0 |==> (pattern & key) >= 0
10742:ROR:>(int,int):FALSE(int,int):org.joda.time.chrono.IslamicChronology$LeapYearPatternType@isLeapYear(int):541:(pattern & key) > 0 |==> false
10743:ROR:==(int,int):<=(int,int):org.joda.time.chrono.IslamicChronology$LeapYearPatternType@equals(java.lang.Object):566:index == ((LeapYearPatternType)obj).index |==> index <= ((LeapYearPatternType)obj).index
10744:ROR:==(int,int):>=(int,int):org.joda.time.chrono.IslamicChronology$LeapYearPatternType@equals(java.lang.Object):566:index == ((LeapYearPatternType)obj).index |==> index >= ((LeapYearPatternType)obj).index
10745:ROR:==(int,int):FALSE(int,int):org.joda.time.chrono.IslamicChronology$LeapYearPatternType@equals(java.lang.Object):566:index == ((LeapYearPatternType)obj).index |==> false
10746:LVR:FALSE:TRUE:org.joda.time.chrono.IslamicChronology$LeapYearPatternType@equals(java.lang.Object):568:false |==> true
10747:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.LenientChronology@getInstance(org.joda.time.Chronology):45:base == null |==> false
10748:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.LenientChronology@withUTC():63:iWithUTC == null |==> false
10749:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.LenientChronology@withUTC():64:getZone() == DateTimeZone.UTC |==> false
10750:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LenientChronology@withUTC():65:iWithUTC = this |==> <NO-OP>
10751:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LenientChronology@withUTC():67:iWithUTC = LenientChronology.getInstance(getBase().withUTC()) |==> <NO-OP>
10752:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.LenientChronology@withZone(org.joda.time.DateTimeZone):74:zone == null |==> false
10753:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LenientChronology@withZone(org.joda.time.DateTimeZone):75:zone = DateTimeZone.getDefault() |==> <NO-OP>
10754:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.LenientChronology@withZone(org.joda.time.DateTimeZone):77:zone == DateTimeZone.UTC |==> false
10755:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.LenientChronology@withZone(org.joda.time.DateTimeZone):80:zone == getZone() |==> false
10756:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LenientChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):87:fields.year = convertField(fields.year) |==> <NO-OP>
10757:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LenientChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):88:fields.yearOfEra = convertField(fields.yearOfEra) |==> <NO-OP>
10758:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LenientChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):89:fields.yearOfCentury = convertField(fields.yearOfCentury) |==> <NO-OP>
10759:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LenientChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):90:fields.centuryOfEra = convertField(fields.centuryOfEra) |==> <NO-OP>
10760:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LenientChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):91:fields.era = convertField(fields.era) |==> <NO-OP>
10761:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LenientChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):92:fields.dayOfWeek = convertField(fields.dayOfWeek) |==> <NO-OP>
10762:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LenientChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):93:fields.dayOfMonth = convertField(fields.dayOfMonth) |==> <NO-OP>
10763:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LenientChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):94:fields.dayOfYear = convertField(fields.dayOfYear) |==> <NO-OP>
10764:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LenientChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):95:fields.monthOfYear = convertField(fields.monthOfYear) |==> <NO-OP>
10765:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LenientChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):96:fields.weekOfWeekyear = convertField(fields.weekOfWeekyear) |==> <NO-OP>
10766:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LenientChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):97:fields.weekyear = convertField(fields.weekyear) |==> <NO-OP>
10767:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LenientChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):98:fields.weekyearOfCentury = convertField(fields.weekyearOfCentury) |==> <NO-OP>
10768:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LenientChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):100:fields.millisOfSecond = convertField(fields.millisOfSecond) |==> <NO-OP>
10769:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LenientChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):101:fields.millisOfDay = convertField(fields.millisOfDay) |==> <NO-OP>
10770:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LenientChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):102:fields.secondOfMinute = convertField(fields.secondOfMinute) |==> <NO-OP>
10771:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LenientChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):103:fields.secondOfDay = convertField(fields.secondOfDay) |==> <NO-OP>
10772:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LenientChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):104:fields.minuteOfHour = convertField(fields.minuteOfHour) |==> <NO-OP>
10773:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LenientChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):105:fields.minuteOfDay = convertField(fields.minuteOfDay) |==> <NO-OP>
10774:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LenientChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):106:fields.hourOfDay = convertField(fields.hourOfDay) |==> <NO-OP>
10775:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LenientChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):107:fields.hourOfHalfday = convertField(fields.hourOfHalfday) |==> <NO-OP>
10776:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LenientChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):108:fields.clockhourOfDay = convertField(fields.clockhourOfDay) |==> <NO-OP>
10777:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LenientChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):109:fields.clockhourOfHalfday = convertField(fields.clockhourOfHalfday) |==> <NO-OP>
10778:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LenientChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):110:fields.halfdayOfDay = convertField(fields.halfdayOfDay) |==> <NO-OP>
10779:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.LenientChronology@equals(java.lang.Object):127:this == obj |==> false
10780:LVR:TRUE:FALSE:org.joda.time.chrono.LenientChronology@equals(java.lang.Object):128:true |==> false
10781:LVR:FALSE:TRUE:org.joda.time.chrono.LenientChronology@equals(java.lang.Object):130:false |==> true
10782:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.LenientChronology@equals(java.lang.Object):130:obj instanceof LenientChronology == false |==> false
10783:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.LenientChronology@equals(java.lang.Object):130:obj instanceof LenientChronology == false |==> obj instanceof LenientChronology
10784:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.LenientChronology@equals(java.lang.Object):130:obj instanceof LenientChronology == false |==> false
10785:LVR:FALSE:TRUE:org.joda.time.chrono.LenientChronology@equals(java.lang.Object):131:false |==> true
10786:LVR:POS:0:org.joda.time.chrono.LenientChronology@hashCode():144:236548278 |==> 0
10787:LVR:POS:NEG:org.joda.time.chrono.LenientChronology@hashCode():144:236548278 |==> -236548278
10788:LVR:POS:0:org.joda.time.chrono.LenientChronology@hashCode():144:7 |==> 0
10789:LVR:POS:NEG:org.joda.time.chrono.LenientChronology@hashCode():144:7 |==> -7
10790:AOR:*(int,int):%(int,int):org.joda.time.chrono.LenientChronology@hashCode():144:getBase().hashCode() * 7 |==> getBase().hashCode() % 7
10791:AOR:*(int,int):+(int,int):org.joda.time.chrono.LenientChronology@hashCode():144:getBase().hashCode() * 7 |==> getBase().hashCode() + 7
10792:AOR:*(int,int):-(int,int):org.joda.time.chrono.LenientChronology@hashCode():144:getBase().hashCode() * 7 |==> getBase().hashCode() - 7
10793:AOR:*(int,int):/(int,int):org.joda.time.chrono.LenientChronology@hashCode():144:getBase().hashCode() * 7 |==> getBase().hashCode() / 7
10794:AOR:+(int,int):%(int,int):org.joda.time.chrono.LenientChronology@hashCode():144:236548278 + getBase().hashCode() * 7 |==> 236548278 % (getBase().hashCode() * 7)
10795:AOR:+(int,int):*(int,int):org.joda.time.chrono.LenientChronology@hashCode():144:236548278 + getBase().hashCode() * 7 |==> 236548278 * (getBase().hashCode() * 7)
10796:AOR:+(int,int):-(int,int):org.joda.time.chrono.LenientChronology@hashCode():144:236548278 + getBase().hashCode() * 7 |==> 236548278 - getBase().hashCode() * 7
10797:AOR:+(int,int):/(int,int):org.joda.time.chrono.LenientChronology@hashCode():144:236548278 + getBase().hashCode() * 7 |==> 236548278 / (getBase().hashCode() * 7)
10798:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.LimitChronology@getInstance(org.joda.time.Chronology,org.joda.time.ReadableDateTime,org.joda.time.ReadableDateTime):67:base == null |==> false
10799:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.LimitChronology@getInstance(org.joda.time.Chronology,org.joda.time.ReadableDateTime,org.joda.time.ReadableDateTime):71:lowerLimit == null |==> false
10800:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@getInstance(org.joda.time.Chronology,org.joda.time.ReadableDateTime,org.joda.time.ReadableDateTime):71:lowerLimit = lowerLimit == null ? null : lowerLimit.toDateTime() |==> <NO-OP>
10801:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.LimitChronology@getInstance(org.joda.time.Chronology,org.joda.time.ReadableDateTime,org.joda.time.ReadableDateTime):72:upperLimit == null |==> false
10802:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@getInstance(org.joda.time.Chronology,org.joda.time.ReadableDateTime,org.joda.time.ReadableDateTime):72:upperLimit = upperLimit == null ? null : upperLimit.toDateTime() |==> <NO-OP>
10803:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.LimitChronology@getInstance(org.joda.time.Chronology,org.joda.time.ReadableDateTime,org.joda.time.ReadableDateTime):74:lowerLimit != null |==> true
10804:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.LimitChronology@getInstance(org.joda.time.Chronology,org.joda.time.ReadableDateTime,org.joda.time.ReadableDateTime):74:upperLimit != null |==> true
10805:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.LimitChronology@getInstance(org.joda.time.Chronology,org.joda.time.ReadableDateTime,org.joda.time.ReadableDateTime):74:lowerLimit != null && upperLimit != null |==> lowerLimit != null == (upperLimit != null)
10806:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.LimitChronology@getInstance(org.joda.time.Chronology,org.joda.time.ReadableDateTime,org.joda.time.ReadableDateTime):74:lowerLimit != null && upperLimit != null |==> false
10807:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.LimitChronology@getInstance(org.joda.time.Chronology,org.joda.time.ReadableDateTime,org.joda.time.ReadableDateTime):74:lowerLimit != null && upperLimit != null |==> lowerLimit != null
10808:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.LimitChronology@getInstance(org.joda.time.Chronology,org.joda.time.ReadableDateTime,org.joda.time.ReadableDateTime):74:lowerLimit != null && upperLimit != null |==> upperLimit != null
10809:COR:lowerLimit.isBefore(upperLimit):TRUE:org.joda.time.chrono.LimitChronology@getInstance(org.joda.time.Chronology,org.joda.time.ReadableDateTime,org.joda.time.ReadableDateTime):75:lowerLimit.isBefore(upperLimit) |==> false
10810:COR:lowerLimit.isBefore(upperLimit):FALSE:org.joda.time.chrono.LimitChronology@getInstance(org.joda.time.Chronology,org.joda.time.ReadableDateTime,org.joda.time.ReadableDateTime):75:lowerLimit.isBefore(upperLimit) |==> true
10811:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.LimitChronology@withZone(org.joda.time.DateTimeZone):138:zone == null |==> false
10812:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@withZone(org.joda.time.DateTimeZone):139:zone = DateTimeZone.getDefault() |==> <NO-OP>
10813:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.LimitChronology@withZone(org.joda.time.DateTimeZone):141:zone == getZone() |==> false
10814:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.LimitChronology@withZone(org.joda.time.DateTimeZone):145:zone == DateTimeZone.UTC |==> false
10815:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.LimitChronology@withZone(org.joda.time.DateTimeZone):145:iWithUTC != null |==> true
10816:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.LimitChronology@withZone(org.joda.time.DateTimeZone):145:zone == DateTimeZone.UTC && iWithUTC != null |==> zone == DateTimeZone.UTC == (iWithUTC != null)
10817:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.LimitChronology@withZone(org.joda.time.DateTimeZone):145:zone == DateTimeZone.UTC && iWithUTC != null |==> false
10818:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.LimitChronology@withZone(org.joda.time.DateTimeZone):145:zone == DateTimeZone.UTC && iWithUTC != null |==> zone == DateTimeZone.UTC
10819:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.LimitChronology@withZone(org.joda.time.DateTimeZone):145:zone == DateTimeZone.UTC && iWithUTC != null |==> iWithUTC != null
10820:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.LimitChronology@withZone(org.joda.time.DateTimeZone):150:lowerLimit != null |==> true
10821:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology@withZone(org.joda.time.DateTimeZone):152:mdt.setZoneRetainFields(zone) |==> <NO-OP>
10822:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@withZone(org.joda.time.DateTimeZone):153:lowerLimit = mdt.toDateTime() |==> <NO-OP>
10823:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.LimitChronology@withZone(org.joda.time.DateTimeZone):157:upperLimit != null |==> true
10824:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology@withZone(org.joda.time.DateTimeZone):159:mdt.setZoneRetainFields(zone) |==> <NO-OP>
10825:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@withZone(org.joda.time.DateTimeZone):160:upperLimit = mdt.toDateTime() |==> <NO-OP>
10826:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.LimitChronology@withZone(org.joda.time.DateTimeZone):166:zone == DateTimeZone.UTC |==> false
10827:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@withZone(org.joda.time.DateTimeZone):167:iWithUTC = chrono |==> <NO-OP>
10828:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology@getDateTimeMillis(int,int,int,int):178:checkLimits(instant, "resulting") |==> <NO-OP>
10829:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology@getDateTimeMillis(int,int,int,int,int,int,int):190:checkLimits(instant, "resulting") |==> <NO-OP>
10830:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology@getDateTimeMillis(long,int,int,int,int):199:checkLimits(instant, null) |==> <NO-OP>
10831:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@getDateTimeMillis(long,int,int,int,int):200:instant = getBase().getDateTimeMillis(instant, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond) |==> <NO-OP>
10832:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology@getDateTimeMillis(long,int,int,int,int):202:checkLimits(instant, "resulting") |==> <NO-OP>
10833:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):213:fields.eras = convertField(fields.eras, converted) |==> <NO-OP>
10834:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):214:fields.centuries = convertField(fields.centuries, converted) |==> <NO-OP>
10835:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):215:fields.years = convertField(fields.years, converted) |==> <NO-OP>
10836:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):216:fields.months = convertField(fields.months, converted) |==> <NO-OP>
10837:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):217:fields.weekyears = convertField(fields.weekyears, converted) |==> <NO-OP>
10838:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):218:fields.weeks = convertField(fields.weeks, converted) |==> <NO-OP>
10839:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):219:fields.days = convertField(fields.days, converted) |==> <NO-OP>
10840:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):221:fields.halfdays = convertField(fields.halfdays, converted) |==> <NO-OP>
10841:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):222:fields.hours = convertField(fields.hours, converted) |==> <NO-OP>
10842:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):223:fields.minutes = convertField(fields.minutes, converted) |==> <NO-OP>
10843:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):224:fields.seconds = convertField(fields.seconds, converted) |==> <NO-OP>
10844:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):225:fields.millis = convertField(fields.millis, converted) |==> <NO-OP>
10845:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):229:fields.year = convertField(fields.year, converted) |==> <NO-OP>
10846:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):230:fields.yearOfEra = convertField(fields.yearOfEra, converted) |==> <NO-OP>
10847:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):231:fields.yearOfCentury = convertField(fields.yearOfCentury, converted) |==> <NO-OP>
10848:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):232:fields.centuryOfEra = convertField(fields.centuryOfEra, converted) |==> <NO-OP>
10849:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):233:fields.era = convertField(fields.era, converted) |==> <NO-OP>
10850:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):234:fields.dayOfWeek = convertField(fields.dayOfWeek, converted) |==> <NO-OP>
10851:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):235:fields.dayOfMonth = convertField(fields.dayOfMonth, converted) |==> <NO-OP>
10852:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):236:fields.dayOfYear = convertField(fields.dayOfYear, converted) |==> <NO-OP>
10853:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):237:fields.monthOfYear = convertField(fields.monthOfYear, converted) |==> <NO-OP>
10854:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):238:fields.weekOfWeekyear = convertField(fields.weekOfWeekyear, converted) |==> <NO-OP>
10855:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):239:fields.weekyear = convertField(fields.weekyear, converted) |==> <NO-OP>
10856:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):240:fields.weekyearOfCentury = convertField(fields.weekyearOfCentury, converted) |==> <NO-OP>
10857:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):242:fields.millisOfSecond = convertField(fields.millisOfSecond, converted) |==> <NO-OP>
10858:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):243:fields.millisOfDay = convertField(fields.millisOfDay, converted) |==> <NO-OP>
10859:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):244:fields.secondOfMinute = convertField(fields.secondOfMinute, converted) |==> <NO-OP>
10860:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):245:fields.secondOfDay = convertField(fields.secondOfDay, converted) |==> <NO-OP>
10861:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):246:fields.minuteOfHour = convertField(fields.minuteOfHour, converted) |==> <NO-OP>
10862:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):247:fields.minuteOfDay = convertField(fields.minuteOfDay, converted) |==> <NO-OP>
10863:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):248:fields.hourOfDay = convertField(fields.hourOfDay, converted) |==> <NO-OP>
10864:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):249:fields.hourOfHalfday = convertField(fields.hourOfHalfday, converted) |==> <NO-OP>
10865:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):250:fields.clockhourOfDay = convertField(fields.clockhourOfDay, converted) |==> <NO-OP>
10866:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):251:fields.clockhourOfHalfday = convertField(fields.clockhourOfHalfday, converted) |==> <NO-OP>
10867:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):252:fields.halfdayOfDay = convertField(fields.halfdayOfDay, converted) |==> <NO-OP>
10868:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.LimitChronology@convertField(org.joda.time.DurationField,java.util.HashMap<java.lang.Object,java.lang.Object>):256:field == null |==> false
10869:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.chrono.LimitChronology@convertField(org.joda.time.DurationField,java.util.HashMap<java.lang.Object,java.lang.Object>):256:field == null || !field.isSupported() |==> field == null != !field.isSupported()
10870:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.LimitChronology@convertField(org.joda.time.DurationField,java.util.HashMap<java.lang.Object,java.lang.Object>):256:field == null || !field.isSupported() |==> field == null
10871:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.LimitChronology@convertField(org.joda.time.DurationField,java.util.HashMap<java.lang.Object,java.lang.Object>):256:field == null || !field.isSupported() |==> !field.isSupported()
10872:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.chrono.LimitChronology@convertField(org.joda.time.DurationField,java.util.HashMap<java.lang.Object,java.lang.Object>):256:field == null || !field.isSupported() |==> true
10873:COR:converted.containsKey(field):TRUE:org.joda.time.chrono.LimitChronology@convertField(org.joda.time.DurationField,java.util.HashMap<java.lang.Object,java.lang.Object>):259:converted.containsKey(field) |==> false
10874:COR:converted.containsKey(field):FALSE:org.joda.time.chrono.LimitChronology@convertField(org.joda.time.DurationField,java.util.HashMap<java.lang.Object,java.lang.Object>):259:converted.containsKey(field) |==> true
10875:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology@convertField(org.joda.time.DurationField,java.util.HashMap<java.lang.Object,java.lang.Object>):263:converted.put(field, limitField) |==> <NO-OP>
10876:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.LimitChronology@convertField(org.joda.time.DateTimeField,java.util.HashMap<java.lang.Object,java.lang.Object>):268:field == null |==> false
10877:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.chrono.LimitChronology@convertField(org.joda.time.DateTimeField,java.util.HashMap<java.lang.Object,java.lang.Object>):268:field == null || !field.isSupported() |==> field == null != !field.isSupported()
10878:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.LimitChronology@convertField(org.joda.time.DateTimeField,java.util.HashMap<java.lang.Object,java.lang.Object>):268:field == null || !field.isSupported() |==> field == null
10879:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.LimitChronology@convertField(org.joda.time.DateTimeField,java.util.HashMap<java.lang.Object,java.lang.Object>):268:field == null || !field.isSupported() |==> !field.isSupported()
10880:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.chrono.LimitChronology@convertField(org.joda.time.DateTimeField,java.util.HashMap<java.lang.Object,java.lang.Object>):268:field == null || !field.isSupported() |==> true
10881:COR:converted.containsKey(field):TRUE:org.joda.time.chrono.LimitChronology@convertField(org.joda.time.DateTimeField,java.util.HashMap<java.lang.Object,java.lang.Object>):271:converted.containsKey(field) |==> false
10882:COR:converted.containsKey(field):FALSE:org.joda.time.chrono.LimitChronology@convertField(org.joda.time.DateTimeField,java.util.HashMap<java.lang.Object,java.lang.Object>):271:converted.containsKey(field) |==> true
10883:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology@convertField(org.joda.time.DateTimeField,java.util.HashMap<java.lang.Object,java.lang.Object>):279:converted.put(field, limitField) |==> <NO-OP>
10884:ROR:<(long,long):!=(long,long):org.joda.time.chrono.LimitChronology@checkLimits(long,java.lang.String):285:instant < limit.getMillis() |==> instant != limit.getMillis()
10885:ROR:<(long,long):<=(long,long):org.joda.time.chrono.LimitChronology@checkLimits(long,java.lang.String):285:instant < limit.getMillis() |==> instant <= limit.getMillis()
10886:ROR:<(long,long):FALSE(long,long):org.joda.time.chrono.LimitChronology@checkLimits(long,java.lang.String):285:instant < limit.getMillis() |==> false
10887:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.LimitChronology@checkLimits(long,java.lang.String):285:(limit = iLowerLimit) != null && instant < limit.getMillis() |==> (limit = iLowerLimit) != null == instant < limit.getMillis()
10888:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.LimitChronology@checkLimits(long,java.lang.String):285:(limit = iLowerLimit) != null && instant < limit.getMillis() |==> false
10889:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.LimitChronology@checkLimits(long,java.lang.String):285:(limit = iLowerLimit) != null && instant < limit.getMillis() |==> (limit = iLowerLimit) != null
10890:LVR:TRUE:FALSE:org.joda.time.chrono.LimitChronology@checkLimits(long,java.lang.String):286:true |==> false
10891:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.LimitChronology@checkLimits(long,java.lang.String):288:(limit = iUpperLimit) != null |==> true
10892:ROR:>=(long,long):==(long,long):org.joda.time.chrono.LimitChronology@checkLimits(long,java.lang.String):288:instant >= limit.getMillis() |==> instant == limit.getMillis()
10893:ROR:>=(long,long):>(long,long):org.joda.time.chrono.LimitChronology@checkLimits(long,java.lang.String):288:instant >= limit.getMillis() |==> instant > limit.getMillis()
10894:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.LimitChronology@checkLimits(long,java.lang.String):288:instant >= limit.getMillis() |==> true
10895:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.LimitChronology@checkLimits(long,java.lang.String):288:(limit = iUpperLimit) != null && instant >= limit.getMillis() |==> (limit = iUpperLimit) != null == instant >= limit.getMillis()
10896:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.LimitChronology@checkLimits(long,java.lang.String):288:(limit = iUpperLimit) != null && instant >= limit.getMillis() |==> false
10897:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.LimitChronology@checkLimits(long,java.lang.String):288:(limit = iUpperLimit) != null && instant >= limit.getMillis() |==> (limit = iUpperLimit) != null
10898:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.LimitChronology@checkLimits(long,java.lang.String):288:(limit = iUpperLimit) != null && instant >= limit.getMillis() |==> instant >= limit.getMillis()
10899:LVR:FALSE:TRUE:org.joda.time.chrono.LimitChronology@checkLimits(long,java.lang.String):289:false |==> true
10900:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.LimitChronology@equals(java.lang.Object):303:this == obj |==> false
10901:LVR:TRUE:FALSE:org.joda.time.chrono.LimitChronology@equals(java.lang.Object):304:true |==> false
10902:LVR:FALSE:TRUE:org.joda.time.chrono.LimitChronology@equals(java.lang.Object):306:false |==> true
10903:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.LimitChronology@equals(java.lang.Object):306:obj instanceof LimitChronology == false |==> false
10904:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.LimitChronology@equals(java.lang.Object):306:obj instanceof LimitChronology == false |==> obj instanceof LimitChronology
10905:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.LimitChronology@equals(java.lang.Object):306:obj instanceof LimitChronology == false |==> false
10906:LVR:FALSE:TRUE:org.joda.time.chrono.LimitChronology@equals(java.lang.Object):307:false |==> true
10907:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.LimitChronology@equals(java.lang.Object):311:getBase().equals(chrono.getBase()) && FieldUtils.equals(getLowerLimit(), chrono.getLowerLimit()) |==> getBase().equals(chrono.getBase()) == FieldUtils.equals(getLowerLimit(), chrono.getLowerLimit())
10908:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.LimitChronology@equals(java.lang.Object):311:getBase().equals(chrono.getBase()) && FieldUtils.equals(getLowerLimit(), chrono.getLowerLimit()) |==> false
10909:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.LimitChronology@equals(java.lang.Object):311:getBase().equals(chrono.getBase()) && FieldUtils.equals(getLowerLimit(), chrono.getLowerLimit()) |==> getBase().equals(chrono.getBase())
10910:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.LimitChronology@equals(java.lang.Object):312:getBase().equals(chrono.getBase()) && FieldUtils.equals(getLowerLimit(), chrono.getLowerLimit()) |==> FieldUtils.equals(getLowerLimit(), chrono.getLowerLimit())
10911:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.LimitChronology@equals(java.lang.Object):311:getBase().equals(chrono.getBase()) && FieldUtils.equals(getLowerLimit(), chrono.getLowerLimit()) && FieldUtils.equals(getUpperLimit(), chrono.getUpperLimit()) |==> (getBase().equals(chrono.getBase()) && FieldUtils.equals(getLowerLimit(), chrono.getLowerLimit())) == FieldUtils.equals(getUpperLimit(), chrono.getUpperLimit())
10912:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.LimitChronology@equals(java.lang.Object):312:getBase().equals(chrono.getBase()) && FieldUtils.equals(getLowerLimit(), chrono.getLowerLimit()) && FieldUtils.equals(getUpperLimit(), chrono.getUpperLimit()) |==> false
10913:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.LimitChronology@equals(java.lang.Object):311:getBase().equals(chrono.getBase()) && FieldUtils.equals(getLowerLimit(), chrono.getLowerLimit()) && FieldUtils.equals(getUpperLimit(), chrono.getUpperLimit()) |==> getBase().equals(chrono.getBase()) && FieldUtils.equals(getLowerLimit(), chrono.getLowerLimit())
10914:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.LimitChronology@equals(java.lang.Object):313:getBase().equals(chrono.getBase()) && FieldUtils.equals(getLowerLimit(), chrono.getLowerLimit()) && FieldUtils.equals(getUpperLimit(), chrono.getUpperLimit()) |==> FieldUtils.equals(getUpperLimit(), chrono.getUpperLimit())
10915:LVR:POS:0:org.joda.time.chrono.LimitChronology@hashCode():323:317351877 |==> 0
10916:LVR:POS:NEG:org.joda.time.chrono.LimitChronology@hashCode():323:317351877 |==> -317351877
10917:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.LimitChronology@hashCode():324:getLowerLimit() != null |==> true
10918:LVR:0:POS:org.joda.time.chrono.LimitChronology@hashCode():324:0 |==> 1
10919:LVR:0:NEG:org.joda.time.chrono.LimitChronology@hashCode():324:0 |==> -1
10920:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@hashCode():324:hash += (getLowerLimit() != null ? getLowerLimit().hashCode() : 0) |==> <NO-OP>
10921:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.LimitChronology@hashCode():325:getUpperLimit() != null |==> true
10922:LVR:0:POS:org.joda.time.chrono.LimitChronology@hashCode():325:0 |==> 1
10923:LVR:0:NEG:org.joda.time.chrono.LimitChronology@hashCode():325:0 |==> -1
10924:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@hashCode():325:hash += (getUpperLimit() != null ? getUpperLimit().hashCode() : 0) |==> <NO-OP>
10925:LVR:POS:0:org.joda.time.chrono.LimitChronology@hashCode():326:7 |==> 0
10926:LVR:POS:NEG:org.joda.time.chrono.LimitChronology@hashCode():326:7 |==> -7
10927:AOR:*(int,int):%(int,int):org.joda.time.chrono.LimitChronology@hashCode():326:getBase().hashCode() * 7 |==> getBase().hashCode() % 7
10928:AOR:*(int,int):+(int,int):org.joda.time.chrono.LimitChronology@hashCode():326:getBase().hashCode() * 7 |==> getBase().hashCode() + 7
10929:AOR:*(int,int):-(int,int):org.joda.time.chrono.LimitChronology@hashCode():326:getBase().hashCode() * 7 |==> getBase().hashCode() - 7
10930:AOR:*(int,int):/(int,int):org.joda.time.chrono.LimitChronology@hashCode():326:getBase().hashCode() * 7 |==> getBase().hashCode() / 7
10931:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology@hashCode():326:hash += getBase().hashCode() * 7 |==> <NO-OP>
10932:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.LimitChronology@toString():337:getLowerLimit() == null |==> false
10933:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.LimitChronology@toString():338:getUpperLimit() == null |==> false
10934:LVR:POS:0:org.joda.time.chrono.LimitChronology$LimitException@getMessage():357:85 |==> 0
10935:LVR:POS:NEG:org.joda.time.chrono.LimitChronology$LimitException@getMessage():357:85 |==> -85
10936:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitException@getMessage():358:buf.append("The") |==> <NO-OP>
10937:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.LimitChronology$LimitException@getMessage():360:desc != null |==> true
10938:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitException@getMessage():361:buf.append(' ') |==> <NO-OP>
10939:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitException@getMessage():362:buf.append(desc) |==> <NO-OP>
10940:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitException@getMessage():364:buf.append(" instant is ") |==> <NO-OP>
10941:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitException@getMessage():367:p = p.withChronology(getBase()) |==> <NO-OP>
10942:COR:iIsLow:TRUE:org.joda.time.chrono.LimitChronology$LimitException@getMessage():368:iIsLow |==> false
10943:COR:iIsLow:FALSE:org.joda.time.chrono.LimitChronology$LimitException@getMessage():368:iIsLow |==> true
10944:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitException@getMessage():369:buf.append("below the supported minimum of ") |==> <NO-OP>
10945:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitException@getMessage():370:p.printTo(buf, getLowerLimit().getMillis()) |==> <NO-OP>
10946:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitException@getMessage():372:buf.append("above the supported maximum of ") |==> <NO-OP>
10947:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitException@getMessage():373:p.printTo(buf, getUpperLimit().getMillis()) |==> <NO-OP>
10948:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitException@getMessage():376:buf.append(" (") |==> <NO-OP>
10949:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitException@getMessage():377:buf.append(getBase()) |==> <NO-OP>
10950:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitException@getMessage():378:buf.append(')') |==> <NO-OP>
10951:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDurationField@getValue(long,long):396:checkLimits(instant, null) |==> <NO-OP>
10952:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDurationField@getValueAsLong(long,long):401:checkLimits(instant, null) |==> <NO-OP>
10953:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDurationField@getMillis(int,long):406:checkLimits(instant, null) |==> <NO-OP>
10954:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDurationField@getMillis(long,long):411:checkLimits(instant, null) |==> <NO-OP>
10955:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDurationField@add(long,int):416:checkLimits(instant, null) |==> <NO-OP>
10956:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDurationField@add(long,int):418:checkLimits(result, "resulting") |==> <NO-OP>
10957:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDurationField@add(long,long):423:checkLimits(instant, null) |==> <NO-OP>
10958:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDurationField@add(long,long):425:checkLimits(result, "resulting") |==> <NO-OP>
10959:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDurationField@getDifference(long,long):430:checkLimits(minuendInstant, "minuend") |==> <NO-OP>
10960:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDurationField@getDifference(long,long):431:checkLimits(subtrahendInstant, "subtrahend") |==> <NO-OP>
10961:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDurationField@getDifferenceAsLong(long,long):436:checkLimits(minuendInstant, "minuend") |==> <NO-OP>
10962:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDurationField@getDifferenceAsLong(long,long):437:checkLimits(subtrahendInstant, "subtrahend") |==> <NO-OP>
10963:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDateTimeField@get(long):462:checkLimits(instant, null) |==> <NO-OP>
10964:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDateTimeField@getAsText(long,java.util.Locale):467:checkLimits(instant, null) |==> <NO-OP>
10965:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDateTimeField@getAsShortText(long,java.util.Locale):472:checkLimits(instant, null) |==> <NO-OP>
10966:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDateTimeField@add(long,int):477:checkLimits(instant, null) |==> <NO-OP>
10967:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDateTimeField@add(long,int):479:checkLimits(result, "resulting") |==> <NO-OP>
10968:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDateTimeField@add(long,long):484:checkLimits(instant, null) |==> <NO-OP>
10969:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDateTimeField@add(long,long):486:checkLimits(result, "resulting") |==> <NO-OP>
10970:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDateTimeField@addWrapField(long,int):491:checkLimits(instant, null) |==> <NO-OP>
10971:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDateTimeField@addWrapField(long,int):493:checkLimits(result, "resulting") |==> <NO-OP>
10972:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDateTimeField@getDifference(long,long):498:checkLimits(minuendInstant, "minuend") |==> <NO-OP>
10973:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDateTimeField@getDifference(long,long):499:checkLimits(subtrahendInstant, "subtrahend") |==> <NO-OP>
10974:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDateTimeField@getDifferenceAsLong(long,long):504:checkLimits(minuendInstant, "minuend") |==> <NO-OP>
10975:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDateTimeField@getDifferenceAsLong(long,long):505:checkLimits(subtrahendInstant, "subtrahend") |==> <NO-OP>
10976:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDateTimeField@set(long,int):510:checkLimits(instant, null) |==> <NO-OP>
10977:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDateTimeField@set(long,int):512:checkLimits(result, "resulting") |==> <NO-OP>
10978:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDateTimeField@set(long,java.lang.String,java.util.Locale):517:checkLimits(instant, null) |==> <NO-OP>
10979:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDateTimeField@set(long,java.lang.String,java.util.Locale):519:checkLimits(result, "resulting") |==> <NO-OP>
10980:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDateTimeField@isLeap(long):532:checkLimits(instant, null) |==> <NO-OP>
10981:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDateTimeField@getLeapAmount(long):537:checkLimits(instant, null) |==> <NO-OP>
10982:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDateTimeField@roundFloor(long):546:checkLimits(instant, null) |==> <NO-OP>
10983:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDateTimeField@roundFloor(long):548:checkLimits(result, "resulting") |==> <NO-OP>
10984:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDateTimeField@roundCeiling(long):553:checkLimits(instant, null) |==> <NO-OP>
10985:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDateTimeField@roundCeiling(long):555:checkLimits(result, "resulting") |==> <NO-OP>
10986:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDateTimeField@roundHalfFloor(long):560:checkLimits(instant, null) |==> <NO-OP>
10987:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDateTimeField@roundHalfFloor(long):562:checkLimits(result, "resulting") |==> <NO-OP>
10988:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDateTimeField@roundHalfCeiling(long):567:checkLimits(instant, null) |==> <NO-OP>
10989:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDateTimeField@roundHalfCeiling(long):569:checkLimits(result, "resulting") |==> <NO-OP>
10990:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDateTimeField@roundHalfEven(long):574:checkLimits(instant, null) |==> <NO-OP>
10991:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDateTimeField@roundHalfEven(long):576:checkLimits(result, "resulting") |==> <NO-OP>
10992:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDateTimeField@remainder(long):581:checkLimits(instant, null) |==> <NO-OP>
10993:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDateTimeField@remainder(long):583:checkLimits(result, "resulting") |==> <NO-OP>
10994:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDateTimeField@getMinimumValue(long):588:checkLimits(instant, null) |==> <NO-OP>
10995:STD:<CALL>:<NO-OP>:org.joda.time.chrono.LimitChronology$LimitDateTimeField@getMaximumValue(long):593:checkLimits(instant, null) |==> <NO-OP>
10996:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.StrictChronology@getInstance(org.joda.time.Chronology):45:base == null |==> false
10997:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.StrictChronology@withUTC():63:iWithUTC == null |==> false
10998:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.StrictChronology@withUTC():64:getZone() == DateTimeZone.UTC |==> false
10999:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.StrictChronology@withUTC():65:iWithUTC = this |==> <NO-OP>
11000:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.StrictChronology@withUTC():67:iWithUTC = StrictChronology.getInstance(getBase().withUTC()) |==> <NO-OP>
11001:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.StrictChronology@withZone(org.joda.time.DateTimeZone):74:zone == null |==> false
11002:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.StrictChronology@withZone(org.joda.time.DateTimeZone):75:zone = DateTimeZone.getDefault() |==> <NO-OP>
11003:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.StrictChronology@withZone(org.joda.time.DateTimeZone):77:zone == DateTimeZone.UTC |==> false
11004:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.StrictChronology@withZone(org.joda.time.DateTimeZone):80:zone == getZone() |==> false
11005:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.StrictChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):87:fields.year = convertField(fields.year) |==> <NO-OP>
11006:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.StrictChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):88:fields.yearOfEra = convertField(fields.yearOfEra) |==> <NO-OP>
11007:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.StrictChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):89:fields.yearOfCentury = convertField(fields.yearOfCentury) |==> <NO-OP>
11008:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.StrictChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):90:fields.centuryOfEra = convertField(fields.centuryOfEra) |==> <NO-OP>
11009:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.StrictChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):91:fields.era = convertField(fields.era) |==> <NO-OP>
11010:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.StrictChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):92:fields.dayOfWeek = convertField(fields.dayOfWeek) |==> <NO-OP>
11011:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.StrictChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):93:fields.dayOfMonth = convertField(fields.dayOfMonth) |==> <NO-OP>
11012:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.StrictChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):94:fields.dayOfYear = convertField(fields.dayOfYear) |==> <NO-OP>
11013:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.StrictChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):95:fields.monthOfYear = convertField(fields.monthOfYear) |==> <NO-OP>
11014:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.StrictChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):96:fields.weekOfWeekyear = convertField(fields.weekOfWeekyear) |==> <NO-OP>
11015:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.StrictChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):97:fields.weekyear = convertField(fields.weekyear) |==> <NO-OP>
11016:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.StrictChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):98:fields.weekyearOfCentury = convertField(fields.weekyearOfCentury) |==> <NO-OP>
11017:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.StrictChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):100:fields.millisOfSecond = convertField(fields.millisOfSecond) |==> <NO-OP>
11018:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.StrictChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):101:fields.millisOfDay = convertField(fields.millisOfDay) |==> <NO-OP>
11019:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.StrictChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):102:fields.secondOfMinute = convertField(fields.secondOfMinute) |==> <NO-OP>
11020:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.StrictChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):103:fields.secondOfDay = convertField(fields.secondOfDay) |==> <NO-OP>
11021:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.StrictChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):104:fields.minuteOfHour = convertField(fields.minuteOfHour) |==> <NO-OP>
11022:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.StrictChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):105:fields.minuteOfDay = convertField(fields.minuteOfDay) |==> <NO-OP>
11023:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.StrictChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):106:fields.hourOfDay = convertField(fields.hourOfDay) |==> <NO-OP>
11024:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.StrictChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):107:fields.hourOfHalfday = convertField(fields.hourOfHalfday) |==> <NO-OP>
11025:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.StrictChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):108:fields.clockhourOfDay = convertField(fields.clockhourOfDay) |==> <NO-OP>
11026:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.StrictChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):109:fields.clockhourOfHalfday = convertField(fields.clockhourOfHalfday) |==> <NO-OP>
11027:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.StrictChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):110:fields.halfdayOfDay = convertField(fields.halfdayOfDay) |==> <NO-OP>
11028:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.StrictChronology@equals(java.lang.Object):127:this == obj |==> false
11029:LVR:TRUE:FALSE:org.joda.time.chrono.StrictChronology@equals(java.lang.Object):128:true |==> false
11030:LVR:FALSE:TRUE:org.joda.time.chrono.StrictChronology@equals(java.lang.Object):130:false |==> true
11031:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.StrictChronology@equals(java.lang.Object):130:obj instanceof StrictChronology == false |==> false
11032:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.StrictChronology@equals(java.lang.Object):130:obj instanceof StrictChronology == false |==> obj instanceof StrictChronology
11033:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.StrictChronology@equals(java.lang.Object):130:obj instanceof StrictChronology == false |==> false
11034:LVR:FALSE:TRUE:org.joda.time.chrono.StrictChronology@equals(java.lang.Object):131:false |==> true
11035:LVR:POS:0:org.joda.time.chrono.StrictChronology@hashCode():144:352831696 |==> 0
11036:LVR:POS:NEG:org.joda.time.chrono.StrictChronology@hashCode():144:352831696 |==> -352831696
11037:LVR:POS:0:org.joda.time.chrono.StrictChronology@hashCode():144:7 |==> 0
11038:LVR:POS:NEG:org.joda.time.chrono.StrictChronology@hashCode():144:7 |==> -7
11039:AOR:*(int,int):%(int,int):org.joda.time.chrono.StrictChronology@hashCode():144:getBase().hashCode() * 7 |==> getBase().hashCode() % 7
11040:AOR:*(int,int):+(int,int):org.joda.time.chrono.StrictChronology@hashCode():144:getBase().hashCode() * 7 |==> getBase().hashCode() + 7
11041:AOR:*(int,int):-(int,int):org.joda.time.chrono.StrictChronology@hashCode():144:getBase().hashCode() * 7 |==> getBase().hashCode() - 7
11042:AOR:*(int,int):/(int,int):org.joda.time.chrono.StrictChronology@hashCode():144:getBase().hashCode() * 7 |==> getBase().hashCode() / 7
11043:AOR:+(int,int):%(int,int):org.joda.time.chrono.StrictChronology@hashCode():144:352831696 + getBase().hashCode() * 7 |==> 352831696 % (getBase().hashCode() * 7)
11044:AOR:+(int,int):*(int,int):org.joda.time.chrono.StrictChronology@hashCode():144:352831696 + getBase().hashCode() * 7 |==> 352831696 * (getBase().hashCode() * 7)
11045:AOR:+(int,int):-(int,int):org.joda.time.chrono.StrictChronology@hashCode():144:352831696 + getBase().hashCode() * 7 |==> 352831696 - getBase().hashCode() * 7
11046:AOR:+(int,int):/(int,int):org.joda.time.chrono.StrictChronology@hashCode():144:352831696 + getBase().hashCode() * 7 |==> 352831696 / (getBase().hashCode() * 7)
11047:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.ZonedChronology@getInstance(org.joda.time.Chronology,org.joda.time.DateTimeZone):55:base == null |==> false
11048:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@getInstance(org.joda.time.Chronology,org.joda.time.DateTimeZone):58:base = base.withUTC() |==> <NO-OP>
11049:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.ZonedChronology@getInstance(org.joda.time.Chronology,org.joda.time.DateTimeZone):59:base == null |==> false
11050:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.ZonedChronology@getInstance(org.joda.time.Chronology,org.joda.time.DateTimeZone):62:zone == null |==> false
11051:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.chrono.ZonedChronology@useTimeArithmetic(org.joda.time.DurationField):71:field != null |==> true
11052:LVR:POS:0:org.joda.time.chrono.ZonedChronology@useTimeArithmetic(org.joda.time.DurationField):71:12 |==> 0
11053:LVR:POS:NEG:org.joda.time.chrono.ZonedChronology@useTimeArithmetic(org.joda.time.DurationField):71:12 |==> -12
11054:AOR:*(int,int):%(int,int):org.joda.time.chrono.ZonedChronology@useTimeArithmetic(org.joda.time.DurationField):71:DateTimeConstants.MILLIS_PER_HOUR * 12 |==> DateTimeConstants.MILLIS_PER_HOUR % 12
11055:AOR:*(int,int):+(int,int):org.joda.time.chrono.ZonedChronology@useTimeArithmetic(org.joda.time.DurationField):71:DateTimeConstants.MILLIS_PER_HOUR * 12 |==> DateTimeConstants.MILLIS_PER_HOUR + 12
11056:AOR:*(int,int):-(int,int):org.joda.time.chrono.ZonedChronology@useTimeArithmetic(org.joda.time.DurationField):71:DateTimeConstants.MILLIS_PER_HOUR * 12 |==> DateTimeConstants.MILLIS_PER_HOUR - 12
11057:AOR:*(int,int):/(int,int):org.joda.time.chrono.ZonedChronology@useTimeArithmetic(org.joda.time.DurationField):71:DateTimeConstants.MILLIS_PER_HOUR * 12 |==> DateTimeConstants.MILLIS_PER_HOUR / 12
11058:ROR:<(long,long):!=(long,long):org.joda.time.chrono.ZonedChronology@useTimeArithmetic(org.joda.time.DurationField):71:field.getUnitMillis() < DateTimeConstants.MILLIS_PER_HOUR * 12 |==> field.getUnitMillis() != DateTimeConstants.MILLIS_PER_HOUR * 12
11059:ROR:<(long,long):<=(long,long):org.joda.time.chrono.ZonedChronology@useTimeArithmetic(org.joda.time.DurationField):71:field.getUnitMillis() < DateTimeConstants.MILLIS_PER_HOUR * 12 |==> field.getUnitMillis() <= DateTimeConstants.MILLIS_PER_HOUR * 12
11060:ROR:<(long,long):FALSE(long,long):org.joda.time.chrono.ZonedChronology@useTimeArithmetic(org.joda.time.DurationField):71:field.getUnitMillis() < DateTimeConstants.MILLIS_PER_HOUR * 12 |==> false
11061:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.ZonedChronology@useTimeArithmetic(org.joda.time.DurationField):71:field != null && field.getUnitMillis() < DateTimeConstants.MILLIS_PER_HOUR * 12 |==> field != null == field.getUnitMillis() < DateTimeConstants.MILLIS_PER_HOUR * 12
11062:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.ZonedChronology@useTimeArithmetic(org.joda.time.DurationField):71:field != null && field.getUnitMillis() < DateTimeConstants.MILLIS_PER_HOUR * 12 |==> false
11063:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.ZonedChronology@useTimeArithmetic(org.joda.time.DurationField):71:field != null && field.getUnitMillis() < DateTimeConstants.MILLIS_PER_HOUR * 12 |==> field != null
11064:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.ZonedChronology@useTimeArithmetic(org.joda.time.DurationField):71:field != null && field.getUnitMillis() < DateTimeConstants.MILLIS_PER_HOUR * 12 |==> field.getUnitMillis() < DateTimeConstants.MILLIS_PER_HOUR * 12
11065:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.ZonedChronology@withZone(org.joda.time.DateTimeZone):93:zone == null |==> false
11066:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@withZone(org.joda.time.DateTimeZone):94:zone = DateTimeZone.getDefault() |==> <NO-OP>
11067:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.ZonedChronology@withZone(org.joda.time.DateTimeZone):96:zone == getParam() |==> false
11068:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.ZonedChronology@withZone(org.joda.time.DateTimeZone):99:zone == DateTimeZone.UTC |==> false
11069:AOR:+(long,long):%(long,long):org.joda.time.chrono.ZonedChronology@getDateTimeMillis(long,int,int,int,int):129:instant + getZone().getOffset(instant) |==> instant % getZone().getOffset(instant)
11070:AOR:+(long,long):*(long,long):org.joda.time.chrono.ZonedChronology@getDateTimeMillis(long,int,int,int,int):129:instant + getZone().getOffset(instant) |==> instant * getZone().getOffset(instant)
11071:AOR:+(long,long):-(long,long):org.joda.time.chrono.ZonedChronology@getDateTimeMillis(long,int,int,int,int):129:instant + getZone().getOffset(instant) |==> instant - getZone().getOffset(instant)
11072:AOR:+(long,long):/(long,long):org.joda.time.chrono.ZonedChronology@getDateTimeMillis(long,int,int,int,int):129:instant + getZone().getOffset(instant) |==> instant / getZone().getOffset(instant)
11073:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@localToUTC(long):140:localInstant -= offset |==> <NO-OP>
11074:ROR:!=(int,int):<(int,int):org.joda.time.chrono.ZonedChronology@localToUTC(long):141:offset != zone.getOffset(localInstant) |==> offset < zone.getOffset(localInstant)
11075:ROR:!=(int,int):>(int,int):org.joda.time.chrono.ZonedChronology@localToUTC(long):141:offset != zone.getOffset(localInstant) |==> offset > zone.getOffset(localInstant)
11076:ROR:!=(int,int):TRUE(int,int):org.joda.time.chrono.ZonedChronology@localToUTC(long):141:offset != zone.getOffset(localInstant) |==> true
11077:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):154:fields.eras = convertField(fields.eras, converted) |==> <NO-OP>
11078:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):155:fields.centuries = convertField(fields.centuries, converted) |==> <NO-OP>
11079:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):156:fields.years = convertField(fields.years, converted) |==> <NO-OP>
11080:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):157:fields.months = convertField(fields.months, converted) |==> <NO-OP>
11081:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):158:fields.weekyears = convertField(fields.weekyears, converted) |==> <NO-OP>
11082:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):159:fields.weeks = convertField(fields.weeks, converted) |==> <NO-OP>
11083:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):160:fields.days = convertField(fields.days, converted) |==> <NO-OP>
11084:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):162:fields.halfdays = convertField(fields.halfdays, converted) |==> <NO-OP>
11085:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):163:fields.hours = convertField(fields.hours, converted) |==> <NO-OP>
11086:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):164:fields.minutes = convertField(fields.minutes, converted) |==> <NO-OP>
11087:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):165:fields.seconds = convertField(fields.seconds, converted) |==> <NO-OP>
11088:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):166:fields.millis = convertField(fields.millis, converted) |==> <NO-OP>
11089:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):170:fields.year = convertField(fields.year, converted) |==> <NO-OP>
11090:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):171:fields.yearOfEra = convertField(fields.yearOfEra, converted) |==> <NO-OP>
11091:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):172:fields.yearOfCentury = convertField(fields.yearOfCentury, converted) |==> <NO-OP>
11092:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):173:fields.centuryOfEra = convertField(fields.centuryOfEra, converted) |==> <NO-OP>
11093:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):174:fields.era = convertField(fields.era, converted) |==> <NO-OP>
11094:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):175:fields.dayOfWeek = convertField(fields.dayOfWeek, converted) |==> <NO-OP>
11095:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):176:fields.dayOfMonth = convertField(fields.dayOfMonth, converted) |==> <NO-OP>
11096:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):177:fields.dayOfYear = convertField(fields.dayOfYear, converted) |==> <NO-OP>
11097:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):178:fields.monthOfYear = convertField(fields.monthOfYear, converted) |==> <NO-OP>
11098:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):179:fields.weekOfWeekyear = convertField(fields.weekOfWeekyear, converted) |==> <NO-OP>
11099:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):180:fields.weekyear = convertField(fields.weekyear, converted) |==> <NO-OP>
11100:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):181:fields.weekyearOfCentury = convertField(fields.weekyearOfCentury, converted) |==> <NO-OP>
11101:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):183:fields.millisOfSecond = convertField(fields.millisOfSecond, converted) |==> <NO-OP>
11102:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):184:fields.millisOfDay = convertField(fields.millisOfDay, converted) |==> <NO-OP>
11103:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):185:fields.secondOfMinute = convertField(fields.secondOfMinute, converted) |==> <NO-OP>
11104:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):186:fields.secondOfDay = convertField(fields.secondOfDay, converted) |==> <NO-OP>
11105:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):187:fields.minuteOfHour = convertField(fields.minuteOfHour, converted) |==> <NO-OP>
11106:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):188:fields.minuteOfDay = convertField(fields.minuteOfDay, converted) |==> <NO-OP>
11107:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):189:fields.hourOfDay = convertField(fields.hourOfDay, converted) |==> <NO-OP>
11108:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):190:fields.hourOfHalfday = convertField(fields.hourOfHalfday, converted) |==> <NO-OP>
11109:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):191:fields.clockhourOfDay = convertField(fields.clockhourOfDay, converted) |==> <NO-OP>
11110:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):192:fields.clockhourOfHalfday = convertField(fields.clockhourOfHalfday, converted) |==> <NO-OP>
11111:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology@assemble(org.joda.time.chrono.AssembledChronology.Fields):193:fields.halfdayOfDay = convertField(fields.halfdayOfDay, converted) |==> <NO-OP>
11112:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.ZonedChronology@convertField(org.joda.time.DurationField,java.util.HashMap<java.lang.Object,java.lang.Object>):197:field == null |==> false
11113:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.chrono.ZonedChronology@convertField(org.joda.time.DurationField,java.util.HashMap<java.lang.Object,java.lang.Object>):197:field == null || !field.isSupported() |==> field == null != !field.isSupported()
11114:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.ZonedChronology@convertField(org.joda.time.DurationField,java.util.HashMap<java.lang.Object,java.lang.Object>):197:field == null || !field.isSupported() |==> field == null
11115:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.ZonedChronology@convertField(org.joda.time.DurationField,java.util.HashMap<java.lang.Object,java.lang.Object>):197:field == null || !field.isSupported() |==> !field.isSupported()
11116:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.chrono.ZonedChronology@convertField(org.joda.time.DurationField,java.util.HashMap<java.lang.Object,java.lang.Object>):197:field == null || !field.isSupported() |==> true
11117:COR:converted.containsKey(field):TRUE:org.joda.time.chrono.ZonedChronology@convertField(org.joda.time.DurationField,java.util.HashMap<java.lang.Object,java.lang.Object>):200:converted.containsKey(field) |==> false
11118:COR:converted.containsKey(field):FALSE:org.joda.time.chrono.ZonedChronology@convertField(org.joda.time.DurationField,java.util.HashMap<java.lang.Object,java.lang.Object>):200:converted.containsKey(field) |==> true
11119:STD:<CALL>:<NO-OP>:org.joda.time.chrono.ZonedChronology@convertField(org.joda.time.DurationField,java.util.HashMap<java.lang.Object,java.lang.Object>):204:converted.put(field, zonedField) |==> <NO-OP>
11120:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.ZonedChronology@convertField(org.joda.time.DateTimeField,java.util.HashMap<java.lang.Object,java.lang.Object>):209:field == null |==> false
11121:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.chrono.ZonedChronology@convertField(org.joda.time.DateTimeField,java.util.HashMap<java.lang.Object,java.lang.Object>):209:field == null || !field.isSupported() |==> field == null != !field.isSupported()
11122:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.ZonedChronology@convertField(org.joda.time.DateTimeField,java.util.HashMap<java.lang.Object,java.lang.Object>):209:field == null || !field.isSupported() |==> field == null
11123:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.ZonedChronology@convertField(org.joda.time.DateTimeField,java.util.HashMap<java.lang.Object,java.lang.Object>):209:field == null || !field.isSupported() |==> !field.isSupported()
11124:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.chrono.ZonedChronology@convertField(org.joda.time.DateTimeField,java.util.HashMap<java.lang.Object,java.lang.Object>):209:field == null || !field.isSupported() |==> true
11125:COR:converted.containsKey(field):TRUE:org.joda.time.chrono.ZonedChronology@convertField(org.joda.time.DateTimeField,java.util.HashMap<java.lang.Object,java.lang.Object>):212:converted.containsKey(field) |==> false
11126:COR:converted.containsKey(field):FALSE:org.joda.time.chrono.ZonedChronology@convertField(org.joda.time.DateTimeField,java.util.HashMap<java.lang.Object,java.lang.Object>):212:converted.containsKey(field) |==> true
11127:STD:<CALL>:<NO-OP>:org.joda.time.chrono.ZonedChronology@convertField(org.joda.time.DateTimeField,java.util.HashMap<java.lang.Object,java.lang.Object>):220:converted.put(field, zonedField) |==> <NO-OP>
11128:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.ZonedChronology@equals(java.lang.Object):234:this == obj |==> false
11129:LVR:TRUE:FALSE:org.joda.time.chrono.ZonedChronology@equals(java.lang.Object):235:true |==> false
11130:LVR:FALSE:TRUE:org.joda.time.chrono.ZonedChronology@equals(java.lang.Object):237:false |==> true
11131:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.ZonedChronology@equals(java.lang.Object):237:obj instanceof ZonedChronology == false |==> false
11132:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.ZonedChronology@equals(java.lang.Object):237:obj instanceof ZonedChronology == false |==> obj instanceof ZonedChronology
11133:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.ZonedChronology@equals(java.lang.Object):237:obj instanceof ZonedChronology == false |==> false
11134:LVR:FALSE:TRUE:org.joda.time.chrono.ZonedChronology@equals(java.lang.Object):238:false |==> true
11135:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.ZonedChronology@equals(java.lang.Object):242:getBase().equals(chrono.getBase()) && getZone().equals(chrono.getZone()) |==> getBase().equals(chrono.getBase()) == getZone().equals(chrono.getZone())
11136:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.ZonedChronology@equals(java.lang.Object):242:getBase().equals(chrono.getBase()) && getZone().equals(chrono.getZone()) |==> false
11137:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.ZonedChronology@equals(java.lang.Object):242:getBase().equals(chrono.getBase()) && getZone().equals(chrono.getZone()) |==> getBase().equals(chrono.getBase())
11138:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.ZonedChronology@equals(java.lang.Object):243:getBase().equals(chrono.getBase()) && getZone().equals(chrono.getZone()) |==> getZone().equals(chrono.getZone())
11139:LVR:POS:0:org.joda.time.chrono.ZonedChronology@hashCode():253:326565 |==> 0
11140:LVR:POS:NEG:org.joda.time.chrono.ZonedChronology@hashCode():253:326565 |==> -326565
11141:LVR:POS:0:org.joda.time.chrono.ZonedChronology@hashCode():253:11 |==> 0
11142:LVR:POS:NEG:org.joda.time.chrono.ZonedChronology@hashCode():253:11 |==> -11
11143:AOR:*(int,int):%(int,int):org.joda.time.chrono.ZonedChronology@hashCode():253:getZone().hashCode() * 11 |==> getZone().hashCode() % 11
11144:AOR:*(int,int):+(int,int):org.joda.time.chrono.ZonedChronology@hashCode():253:getZone().hashCode() * 11 |==> getZone().hashCode() + 11
11145:AOR:*(int,int):-(int,int):org.joda.time.chrono.ZonedChronology@hashCode():253:getZone().hashCode() * 11 |==> getZone().hashCode() - 11
11146:AOR:*(int,int):/(int,int):org.joda.time.chrono.ZonedChronology@hashCode():253:getZone().hashCode() * 11 |==> getZone().hashCode() / 11
11147:AOR:+(int,int):%(int,int):org.joda.time.chrono.ZonedChronology@hashCode():253:326565 + getZone().hashCode() * 11 |==> 326565 % (getZone().hashCode() * 11)
11148:AOR:+(int,int):*(int,int):org.joda.time.chrono.ZonedChronology@hashCode():253:326565 + getZone().hashCode() * 11 |==> 326565 * (getZone().hashCode() * 11)
11149:AOR:+(int,int):-(int,int):org.joda.time.chrono.ZonedChronology@hashCode():253:326565 + getZone().hashCode() * 11 |==> 326565 - getZone().hashCode() * 11
11150:AOR:+(int,int):/(int,int):org.joda.time.chrono.ZonedChronology@hashCode():253:326565 + getZone().hashCode() * 11 |==> 326565 / (getZone().hashCode() * 11)
11151:LVR:POS:0:org.joda.time.chrono.ZonedChronology@hashCode():253:7 |==> 0
11152:LVR:POS:NEG:org.joda.time.chrono.ZonedChronology@hashCode():253:7 |==> -7
11153:AOR:*(int,int):%(int,int):org.joda.time.chrono.ZonedChronology@hashCode():253:getBase().hashCode() * 7 |==> getBase().hashCode() % 7
11154:AOR:*(int,int):+(int,int):org.joda.time.chrono.ZonedChronology@hashCode():253:getBase().hashCode() * 7 |==> getBase().hashCode() + 7
11155:AOR:*(int,int):-(int,int):org.joda.time.chrono.ZonedChronology@hashCode():253:getBase().hashCode() * 7 |==> getBase().hashCode() - 7
11156:AOR:*(int,int):/(int,int):org.joda.time.chrono.ZonedChronology@hashCode():253:getBase().hashCode() * 7 |==> getBase().hashCode() / 7
11157:AOR:+(int,int):%(int,int):org.joda.time.chrono.ZonedChronology@hashCode():253:326565 + getZone().hashCode() * 11 + getBase().hashCode() * 7 |==> (326565 + getZone().hashCode() * 11) % (getBase().hashCode() * 7)
11158:AOR:+(int,int):*(int,int):org.joda.time.chrono.ZonedChronology@hashCode():253:326565 + getZone().hashCode() * 11 + getBase().hashCode() * 7 |==> (326565 + getZone().hashCode() * 11) * (getBase().hashCode() * 7)
11159:AOR:+(int,int):-(int,int):org.joda.time.chrono.ZonedChronology@hashCode():253:326565 + getZone().hashCode() * 11 + getBase().hashCode() * 7 |==> 326565 + getZone().hashCode() * 11 - getBase().hashCode() * 7
11160:AOR:+(int,int):/(int,int):org.joda.time.chrono.ZonedChronology@hashCode():253:326565 + getZone().hashCode() * 11 + getBase().hashCode() * 7 |==> (326565 + getZone().hashCode() * 11) / (getBase().hashCode() * 7)
11161:COR:field.isSupported():TRUE:org.joda.time.chrono.ZonedChronology$ZonedDurationField@<init>(org.joda.time.DurationField,org.joda.time.DateTimeZone):282:field.isSupported() |==> false
11162:COR:field.isSupported():FALSE:org.joda.time.chrono.ZonedChronology$ZonedDurationField@<init>(org.joda.time.DurationField,org.joda.time.DateTimeZone):282:field.isSupported() |==> true
11163:COR:iTimeField:TRUE:org.joda.time.chrono.ZonedChronology$ZonedDurationField@isPrecise():291:iTimeField |==> false
11164:COR:iTimeField:FALSE:org.joda.time.chrono.ZonedChronology$ZonedDurationField@isPrecise():291:iTimeField |==> true
11165:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.ZonedChronology$ZonedDurationField@isPrecise():291:iField.isPrecise() && this.iZone.isFixed() |==> iField.isPrecise() == this.iZone.isFixed()
11166:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.ZonedChronology$ZonedDurationField@isPrecise():291:iField.isPrecise() && this.iZone.isFixed() |==> false
11167:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.ZonedChronology$ZonedDurationField@isPrecise():291:iField.isPrecise() && this.iZone.isFixed() |==> iField.isPrecise()
11168:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.ZonedChronology$ZonedDurationField@isPrecise():291:iField.isPrecise() && this.iZone.isFixed() |==> this.iZone.isFixed()
11169:AOR:+(long,long):%(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@add(long,int):316:instant + offset |==> instant % offset
11170:AOR:+(long,long):*(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@add(long,int):316:instant + offset |==> instant * offset
11171:AOR:+(long,long):-(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@add(long,int):316:instant + offset |==> instant - offset
11172:AOR:+(long,long):/(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@add(long,int):316:instant + offset |==> instant / offset
11173:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology$ZonedDurationField@add(long,int):316:instant = iField.add(instant + offset, value) |==> <NO-OP>
11174:COR:iTimeField:TRUE:org.joda.time.chrono.ZonedChronology$ZonedDurationField@add(long,int):317:iTimeField |==> false
11175:COR:iTimeField:FALSE:org.joda.time.chrono.ZonedChronology$ZonedDurationField@add(long,int):317:iTimeField |==> true
11176:AOR:-(long,long):%(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@add(long,int):317:instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant)) |==> instant % (iTimeField ? offset : getOffsetFromLocalToSubtract(instant))
11177:AOR:-(long,long):*(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@add(long,int):317:instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant)) |==> instant * (iTimeField ? offset : getOffsetFromLocalToSubtract(instant))
11178:AOR:-(long,long):+(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@add(long,int):317:instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant)) |==> instant + (iTimeField ? offset : getOffsetFromLocalToSubtract(instant))
11179:AOR:-(long,long):/(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@add(long,int):317:instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant)) |==> instant / (iTimeField ? offset : getOffsetFromLocalToSubtract(instant))
11180:AOR:+(long,long):%(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@add(long,long):322:instant + offset |==> instant % offset
11181:AOR:+(long,long):*(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@add(long,long):322:instant + offset |==> instant * offset
11182:AOR:+(long,long):-(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@add(long,long):322:instant + offset |==> instant - offset
11183:AOR:+(long,long):/(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@add(long,long):322:instant + offset |==> instant / offset
11184:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology$ZonedDurationField@add(long,long):322:instant = iField.add(instant + offset, value) |==> <NO-OP>
11185:COR:iTimeField:TRUE:org.joda.time.chrono.ZonedChronology$ZonedDurationField@add(long,long):323:iTimeField |==> false
11186:COR:iTimeField:FALSE:org.joda.time.chrono.ZonedChronology$ZonedDurationField@add(long,long):323:iTimeField |==> true
11187:AOR:-(long,long):%(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@add(long,long):323:instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant)) |==> instant % (iTimeField ? offset : getOffsetFromLocalToSubtract(instant))
11188:AOR:-(long,long):*(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@add(long,long):323:instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant)) |==> instant * (iTimeField ? offset : getOffsetFromLocalToSubtract(instant))
11189:AOR:-(long,long):+(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@add(long,long):323:instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant)) |==> instant + (iTimeField ? offset : getOffsetFromLocalToSubtract(instant))
11190:AOR:-(long,long):/(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@add(long,long):323:instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant)) |==> instant / (iTimeField ? offset : getOffsetFromLocalToSubtract(instant))
11191:COR:iTimeField:TRUE:org.joda.time.chrono.ZonedChronology$ZonedDurationField@getDifference(long,long):329:iTimeField |==> false
11192:COR:iTimeField:FALSE:org.joda.time.chrono.ZonedChronology$ZonedDurationField@getDifference(long,long):329:iTimeField |==> true
11193:AOR:+(long,long):%(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getDifference(long,long):329:minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)) |==> minuendInstant % (iTimeField ? offset : getOffsetToAdd(minuendInstant))
11194:AOR:+(long,long):*(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getDifference(long,long):329:minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)) |==> minuendInstant * (iTimeField ? offset : getOffsetToAdd(minuendInstant))
11195:AOR:+(long,long):-(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getDifference(long,long):329:minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)) |==> minuendInstant - (iTimeField ? offset : getOffsetToAdd(minuendInstant))
11196:AOR:+(long,long):/(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getDifference(long,long):329:minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)) |==> minuendInstant / (iTimeField ? offset : getOffsetToAdd(minuendInstant))
11197:AOR:+(long,long):%(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getDifference(long,long):330:subtrahendInstant + offset |==> subtrahendInstant % offset
11198:AOR:+(long,long):*(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getDifference(long,long):330:subtrahendInstant + offset |==> subtrahendInstant * offset
11199:AOR:+(long,long):-(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getDifference(long,long):330:subtrahendInstant + offset |==> subtrahendInstant - offset
11200:AOR:+(long,long):/(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getDifference(long,long):330:subtrahendInstant + offset |==> subtrahendInstant / offset
11201:COR:iTimeField:TRUE:org.joda.time.chrono.ZonedChronology$ZonedDurationField@getDifferenceAsLong(long,long):336:iTimeField |==> false
11202:COR:iTimeField:FALSE:org.joda.time.chrono.ZonedChronology$ZonedDurationField@getDifferenceAsLong(long,long):336:iTimeField |==> true
11203:AOR:+(long,long):%(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getDifferenceAsLong(long,long):336:minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)) |==> minuendInstant % (iTimeField ? offset : getOffsetToAdd(minuendInstant))
11204:AOR:+(long,long):*(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getDifferenceAsLong(long,long):336:minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)) |==> minuendInstant * (iTimeField ? offset : getOffsetToAdd(minuendInstant))
11205:AOR:+(long,long):-(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getDifferenceAsLong(long,long):336:minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)) |==> minuendInstant - (iTimeField ? offset : getOffsetToAdd(minuendInstant))
11206:AOR:+(long,long):/(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getDifferenceAsLong(long,long):336:minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)) |==> minuendInstant / (iTimeField ? offset : getOffsetToAdd(minuendInstant))
11207:AOR:+(long,long):%(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getDifferenceAsLong(long,long):337:subtrahendInstant + offset |==> subtrahendInstant % offset
11208:AOR:+(long,long):*(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getDifferenceAsLong(long,long):337:subtrahendInstant + offset |==> subtrahendInstant * offset
11209:AOR:+(long,long):-(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getDifferenceAsLong(long,long):337:subtrahendInstant + offset |==> subtrahendInstant - offset
11210:AOR:+(long,long):/(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getDifferenceAsLong(long,long):337:subtrahendInstant + offset |==> subtrahendInstant / offset
11211:AOR:+(long,long):%(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetToAdd(long):342:instant + offset |==> instant % offset
11212:AOR:+(long,long):*(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetToAdd(long):342:instant + offset |==> instant * offset
11213:AOR:+(long,long):-(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetToAdd(long):342:instant + offset |==> instant - offset
11214:AOR:+(long,long):/(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetToAdd(long):342:instant + offset |==> instant / offset
11215:LOR:^(long,long):&(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetToAdd(long):344:instant ^ sum |==> instant & sum
11216:LOR:^(long,long):|(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetToAdd(long):344:instant ^ sum |==> instant | sum
11217:LVR:0:POS:org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetToAdd(long):344:0 |==> 1
11218:LVR:0:NEG:org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetToAdd(long):344:0 |==> -1
11219:ROR:<(long,long):!=(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetToAdd(long):344:(instant ^ sum) < 0 |==> (instant ^ sum) != 0
11220:ROR:<(long,long):<=(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetToAdd(long):344:(instant ^ sum) < 0 |==> (instant ^ sum) <= 0
11221:ROR:<(long,long):FALSE(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetToAdd(long):344:(instant ^ sum) < 0 |==> false
11222:LOR:^(long,long):&(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetToAdd(long):344:instant ^ offset |==> instant & offset
11223:LOR:^(long,long):|(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetToAdd(long):344:instant ^ offset |==> instant | offset
11224:LVR:0:POS:org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetToAdd(long):344:0 |==> 1
11225:LVR:0:NEG:org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetToAdd(long):344:0 |==> -1
11226:ROR:>=(long,long):==(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetToAdd(long):344:(instant ^ offset) >= 0 |==> (instant ^ offset) == 0
11227:ROR:>=(long,long):>(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetToAdd(long):344:(instant ^ offset) >= 0 |==> (instant ^ offset) > 0
11228:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetToAdd(long):344:(instant ^ offset) >= 0 |==> true
11229:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetToAdd(long):344:(instant ^ sum) < 0 && (instant ^ offset) >= 0 |==> (instant ^ sum) < 0 == (instant ^ offset) >= 0
11230:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetToAdd(long):344:(instant ^ sum) < 0 && (instant ^ offset) >= 0 |==> false
11231:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetToAdd(long):344:(instant ^ sum) < 0 && (instant ^ offset) >= 0 |==> (instant ^ sum) < 0
11232:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetToAdd(long):344:(instant ^ sum) < 0 && (instant ^ offset) >= 0 |==> (instant ^ offset) >= 0
11233:AOR:-(long,long):%(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetFromLocalToSubtract(long):352:instant - offset |==> instant % offset
11234:AOR:-(long,long):*(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetFromLocalToSubtract(long):352:instant - offset |==> instant * offset
11235:AOR:-(long,long):+(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetFromLocalToSubtract(long):352:instant - offset |==> instant + offset
11236:AOR:-(long,long):/(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetFromLocalToSubtract(long):352:instant - offset |==> instant / offset
11237:LOR:^(long,long):&(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetFromLocalToSubtract(long):354:instant ^ diff |==> instant & diff
11238:LOR:^(long,long):|(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetFromLocalToSubtract(long):354:instant ^ diff |==> instant | diff
11239:LVR:0:POS:org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetFromLocalToSubtract(long):354:0 |==> 1
11240:LVR:0:NEG:org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetFromLocalToSubtract(long):354:0 |==> -1
11241:ROR:<(long,long):!=(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetFromLocalToSubtract(long):354:(instant ^ diff) < 0 |==> (instant ^ diff) != 0
11242:ROR:<(long,long):<=(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetFromLocalToSubtract(long):354:(instant ^ diff) < 0 |==> (instant ^ diff) <= 0
11243:ROR:<(long,long):FALSE(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetFromLocalToSubtract(long):354:(instant ^ diff) < 0 |==> false
11244:LOR:^(long,long):&(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetFromLocalToSubtract(long):354:instant ^ offset |==> instant & offset
11245:LOR:^(long,long):|(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetFromLocalToSubtract(long):354:instant ^ offset |==> instant | offset
11246:LVR:0:POS:org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetFromLocalToSubtract(long):354:0 |==> 1
11247:LVR:0:NEG:org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetFromLocalToSubtract(long):354:0 |==> -1
11248:ROR:<(long,long):!=(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetFromLocalToSubtract(long):354:(instant ^ offset) < 0 |==> (instant ^ offset) != 0
11249:ROR:<(long,long):<=(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetFromLocalToSubtract(long):354:(instant ^ offset) < 0 |==> (instant ^ offset) <= 0
11250:ROR:<(long,long):FALSE(long,long):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetFromLocalToSubtract(long):354:(instant ^ offset) < 0 |==> false
11251:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetFromLocalToSubtract(long):354:(instant ^ diff) < 0 && (instant ^ offset) < 0 |==> (instant ^ diff) < 0 == (instant ^ offset) < 0
11252:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetFromLocalToSubtract(long):354:(instant ^ diff) < 0 && (instant ^ offset) < 0 |==> false
11253:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetFromLocalToSubtract(long):354:(instant ^ diff) < 0 && (instant ^ offset) < 0 |==> (instant ^ diff) < 0
11254:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.ZonedChronology$ZonedDurationField@getOffsetFromLocalToSubtract(long):354:(instant ^ diff) < 0 && (instant ^ offset) < 0 |==> (instant ^ offset) < 0
11255:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.ZonedChronology$ZonedDurationField@equals(java.lang.Object):366:this == obj |==> false
11256:LVR:TRUE:FALSE:org.joda.time.chrono.ZonedChronology$ZonedDurationField@equals(java.lang.Object):367:true |==> false
11257:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.ZonedChronology$ZonedDurationField@equals(java.lang.Object):370:iField.equals(other.iField) && iZone.equals(other.iZone) |==> iField.equals(other.iField) == iZone.equals(other.iZone)
11258:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.ZonedChronology$ZonedDurationField@equals(java.lang.Object):370:iField.equals(other.iField) && iZone.equals(other.iZone) |==> false
11259:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.ZonedChronology$ZonedDurationField@equals(java.lang.Object):370:iField.equals(other.iField) && iZone.equals(other.iZone) |==> iField.equals(other.iField)
11260:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.ZonedChronology$ZonedDurationField@equals(java.lang.Object):371:iField.equals(other.iField) && iZone.equals(other.iZone) |==> iZone.equals(other.iZone)
11261:LVR:FALSE:TRUE:org.joda.time.chrono.ZonedChronology$ZonedDurationField@equals(java.lang.Object):373:false |==> true
11262:LOR:^(int,int):&(int,int):org.joda.time.chrono.ZonedChronology$ZonedDurationField@hashCode():378:iField.hashCode() ^ iZone.hashCode() |==> iField.hashCode() & iZone.hashCode()
11263:LOR:^(int,int):|(int,int):org.joda.time.chrono.ZonedChronology$ZonedDurationField@hashCode():378:iField.hashCode() ^ iZone.hashCode() |==> iField.hashCode() | iZone.hashCode()
11264:COR:field.isSupported():TRUE:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeZone,org.joda.time.DurationField,org.joda.time.DurationField,org.joda.time.DurationField):405:field.isSupported() |==> false
11265:COR:field.isSupported():FALSE:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeZone,org.joda.time.DurationField,org.joda.time.DurationField,org.joda.time.DurationField):405:field.isSupported() |==> true
11266:COR:iTimeField:TRUE:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@add(long,int):444:iTimeField |==> false
11267:COR:iTimeField:FALSE:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@add(long,int):444:iTimeField |==> true
11268:AOR:+(long,long):%(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@add(long,int):446:instant + offset |==> instant % offset
11269:AOR:+(long,long):*(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@add(long,int):446:instant + offset |==> instant * offset
11270:AOR:+(long,long):-(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@add(long,int):446:instant + offset |==> instant - offset
11271:AOR:+(long,long):/(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@add(long,int):446:instant + offset |==> instant / offset
11272:AOR:-(long,long):%(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@add(long,int):447:localInstant - offset |==> localInstant % offset
11273:AOR:-(long,long):*(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@add(long,int):447:localInstant - offset |==> localInstant * offset
11274:AOR:-(long,long):+(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@add(long,int):447:localInstant - offset |==> localInstant + offset
11275:AOR:-(long,long):/(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@add(long,int):447:localInstant - offset |==> localInstant / offset
11276:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@add(long,int):450:localInstant = iField.add(localInstant, value) |==> <NO-OP>
11277:LVR:FALSE:TRUE:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@add(long,int):451:false |==> true
11278:COR:iTimeField:TRUE:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@add(long,long):456:iTimeField |==> false
11279:COR:iTimeField:FALSE:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@add(long,long):456:iTimeField |==> true
11280:AOR:+(long,long):%(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@add(long,long):458:instant + offset |==> instant % offset
11281:AOR:+(long,long):*(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@add(long,long):458:instant + offset |==> instant * offset
11282:AOR:+(long,long):-(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@add(long,long):458:instant + offset |==> instant - offset
11283:AOR:+(long,long):/(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@add(long,long):458:instant + offset |==> instant / offset
11284:AOR:-(long,long):%(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@add(long,long):459:localInstant - offset |==> localInstant % offset
11285:AOR:-(long,long):*(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@add(long,long):459:localInstant - offset |==> localInstant * offset
11286:AOR:-(long,long):+(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@add(long,long):459:localInstant - offset |==> localInstant + offset
11287:AOR:-(long,long):/(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@add(long,long):459:localInstant - offset |==> localInstant / offset
11288:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@add(long,long):462:localInstant = iField.add(localInstant, value) |==> <NO-OP>
11289:LVR:FALSE:TRUE:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@add(long,long):463:false |==> true
11290:COR:iTimeField:TRUE:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@addWrapField(long,int):468:iTimeField |==> false
11291:COR:iTimeField:FALSE:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@addWrapField(long,int):468:iTimeField |==> true
11292:AOR:+(long,long):%(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@addWrapField(long,int):470:instant + offset |==> instant % offset
11293:AOR:+(long,long):*(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@addWrapField(long,int):470:instant + offset |==> instant * offset
11294:AOR:+(long,long):-(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@addWrapField(long,int):470:instant + offset |==> instant - offset
11295:AOR:+(long,long):/(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@addWrapField(long,int):470:instant + offset |==> instant / offset
11296:AOR:-(long,long):%(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@addWrapField(long,int):471:localInstant - offset |==> localInstant % offset
11297:AOR:-(long,long):*(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@addWrapField(long,int):471:localInstant - offset |==> localInstant * offset
11298:AOR:-(long,long):+(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@addWrapField(long,int):471:localInstant - offset |==> localInstant + offset
11299:AOR:-(long,long):/(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@addWrapField(long,int):471:localInstant - offset |==> localInstant / offset
11300:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@addWrapField(long,int):474:localInstant = iField.addWrapField(localInstant, value) |==> <NO-OP>
11301:LVR:FALSE:TRUE:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@addWrapField(long,int):475:false |==> true
11302:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@set(long,int):481:localInstant = iField.set(localInstant, value) |==> <NO-OP>
11303:LVR:FALSE:TRUE:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@set(long,int):482:false |==> true
11304:ROR:!=(int,int):<(int,int):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@set(long,int):483:get(result) != value |==> get(result) < value
11305:ROR:!=(int,int):>(int,int):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@set(long,int):483:get(result) != value |==> get(result) > value
11306:ROR:!=(int,int):TRUE(int,int):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@set(long,int):483:get(result) != value |==> true
11307:STD:<CALL>:<NO-OP>:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@set(long,int):486:ex.initCause(cause) |==> <NO-OP>
11308:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@set(long,java.lang.String,java.util.Locale):495:localInstant = iField.set(localInstant, text, locale) |==> <NO-OP>
11309:LVR:FALSE:TRUE:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@set(long,java.lang.String,java.util.Locale):496:false |==> true
11310:COR:iTimeField:TRUE:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getDifference(long,long):502:iTimeField |==> false
11311:COR:iTimeField:FALSE:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getDifference(long,long):502:iTimeField |==> true
11312:AOR:+(long,long):%(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getDifference(long,long):502:minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)) |==> minuendInstant % (iTimeField ? offset : getOffsetToAdd(minuendInstant))
11313:AOR:+(long,long):*(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getDifference(long,long):502:minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)) |==> minuendInstant * (iTimeField ? offset : getOffsetToAdd(minuendInstant))
11314:AOR:+(long,long):-(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getDifference(long,long):502:minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)) |==> minuendInstant - (iTimeField ? offset : getOffsetToAdd(minuendInstant))
11315:AOR:+(long,long):/(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getDifference(long,long):502:minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)) |==> minuendInstant / (iTimeField ? offset : getOffsetToAdd(minuendInstant))
11316:AOR:+(long,long):%(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getDifference(long,long):503:subtrahendInstant + offset |==> subtrahendInstant % offset
11317:AOR:+(long,long):*(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getDifference(long,long):503:subtrahendInstant + offset |==> subtrahendInstant * offset
11318:AOR:+(long,long):-(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getDifference(long,long):503:subtrahendInstant + offset |==> subtrahendInstant - offset
11319:AOR:+(long,long):/(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getDifference(long,long):503:subtrahendInstant + offset |==> subtrahendInstant / offset
11320:COR:iTimeField:TRUE:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getDifferenceAsLong(long,long):509:iTimeField |==> false
11321:COR:iTimeField:FALSE:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getDifferenceAsLong(long,long):509:iTimeField |==> true
11322:AOR:+(long,long):%(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getDifferenceAsLong(long,long):509:minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)) |==> minuendInstant % (iTimeField ? offset : getOffsetToAdd(minuendInstant))
11323:AOR:+(long,long):*(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getDifferenceAsLong(long,long):509:minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)) |==> minuendInstant * (iTimeField ? offset : getOffsetToAdd(minuendInstant))
11324:AOR:+(long,long):-(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getDifferenceAsLong(long,long):509:minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)) |==> minuendInstant - (iTimeField ? offset : getOffsetToAdd(minuendInstant))
11325:AOR:+(long,long):/(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getDifferenceAsLong(long,long):509:minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)) |==> minuendInstant / (iTimeField ? offset : getOffsetToAdd(minuendInstant))
11326:AOR:+(long,long):%(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getDifferenceAsLong(long,long):510:subtrahendInstant + offset |==> subtrahendInstant % offset
11327:AOR:+(long,long):*(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getDifferenceAsLong(long,long):510:subtrahendInstant + offset |==> subtrahendInstant * offset
11328:AOR:+(long,long):-(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getDifferenceAsLong(long,long):510:subtrahendInstant + offset |==> subtrahendInstant - offset
11329:AOR:+(long,long):/(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getDifferenceAsLong(long,long):510:subtrahendInstant + offset |==> subtrahendInstant / offset
11330:COR:iTimeField:TRUE:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@roundFloor(long):536:iTimeField |==> false
11331:COR:iTimeField:FALSE:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@roundFloor(long):536:iTimeField |==> true
11332:AOR:+(long,long):%(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@roundFloor(long):538:instant + offset |==> instant % offset
11333:AOR:+(long,long):*(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@roundFloor(long):538:instant + offset |==> instant * offset
11334:AOR:+(long,long):-(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@roundFloor(long):538:instant + offset |==> instant - offset
11335:AOR:+(long,long):/(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@roundFloor(long):538:instant + offset |==> instant / offset
11336:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@roundFloor(long):538:instant = iField.roundFloor(instant + offset) |==> <NO-OP>
11337:AOR:-(long,long):%(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@roundFloor(long):539:instant - offset |==> instant % offset
11338:AOR:-(long,long):*(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@roundFloor(long):539:instant - offset |==> instant * offset
11339:AOR:-(long,long):+(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@roundFloor(long):539:instant - offset |==> instant + offset
11340:AOR:-(long,long):/(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@roundFloor(long):539:instant - offset |==> instant / offset
11341:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@roundFloor(long):542:localInstant = iField.roundFloor(localInstant) |==> <NO-OP>
11342:LVR:FALSE:TRUE:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@roundFloor(long):543:false |==> true
11343:COR:iTimeField:TRUE:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@roundCeiling(long):548:iTimeField |==> false
11344:COR:iTimeField:FALSE:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@roundCeiling(long):548:iTimeField |==> true
11345:AOR:+(long,long):%(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@roundCeiling(long):550:instant + offset |==> instant % offset
11346:AOR:+(long,long):*(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@roundCeiling(long):550:instant + offset |==> instant * offset
11347:AOR:+(long,long):-(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@roundCeiling(long):550:instant + offset |==> instant - offset
11348:AOR:+(long,long):/(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@roundCeiling(long):550:instant + offset |==> instant / offset
11349:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@roundCeiling(long):550:instant = iField.roundCeiling(instant + offset) |==> <NO-OP>
11350:AOR:-(long,long):%(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@roundCeiling(long):551:instant - offset |==> instant % offset
11351:AOR:-(long,long):*(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@roundCeiling(long):551:instant - offset |==> instant * offset
11352:AOR:-(long,long):+(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@roundCeiling(long):551:instant - offset |==> instant + offset
11353:AOR:-(long,long):/(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@roundCeiling(long):551:instant - offset |==> instant / offset
11354:STD:<ASSIGN>:<NO-OP>:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@roundCeiling(long):554:localInstant = iField.roundCeiling(localInstant) |==> <NO-OP>
11355:LVR:FALSE:TRUE:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@roundCeiling(long):555:false |==> true
11356:AOR:+(long,long):%(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getOffsetToAdd(long):608:instant + offset |==> instant % offset
11357:AOR:+(long,long):*(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getOffsetToAdd(long):608:instant + offset |==> instant * offset
11358:AOR:+(long,long):-(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getOffsetToAdd(long):608:instant + offset |==> instant - offset
11359:AOR:+(long,long):/(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getOffsetToAdd(long):608:instant + offset |==> instant / offset
11360:LOR:^(long,long):&(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getOffsetToAdd(long):610:instant ^ sum |==> instant & sum
11361:LOR:^(long,long):|(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getOffsetToAdd(long):610:instant ^ sum |==> instant | sum
11362:LVR:0:POS:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getOffsetToAdd(long):610:0 |==> 1
11363:LVR:0:NEG:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getOffsetToAdd(long):610:0 |==> -1
11364:ROR:<(long,long):!=(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getOffsetToAdd(long):610:(instant ^ sum) < 0 |==> (instant ^ sum) != 0
11365:ROR:<(long,long):<=(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getOffsetToAdd(long):610:(instant ^ sum) < 0 |==> (instant ^ sum) <= 0
11366:ROR:<(long,long):FALSE(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getOffsetToAdd(long):610:(instant ^ sum) < 0 |==> false
11367:LOR:^(long,long):&(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getOffsetToAdd(long):610:instant ^ offset |==> instant & offset
11368:LOR:^(long,long):|(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getOffsetToAdd(long):610:instant ^ offset |==> instant | offset
11369:LVR:0:POS:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getOffsetToAdd(long):610:0 |==> 1
11370:LVR:0:NEG:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getOffsetToAdd(long):610:0 |==> -1
11371:ROR:>=(long,long):==(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getOffsetToAdd(long):610:(instant ^ offset) >= 0 |==> (instant ^ offset) == 0
11372:ROR:>=(long,long):>(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getOffsetToAdd(long):610:(instant ^ offset) >= 0 |==> (instant ^ offset) > 0
11373:ROR:>=(long,long):TRUE(long,long):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getOffsetToAdd(long):610:(instant ^ offset) >= 0 |==> true
11374:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getOffsetToAdd(long):610:(instant ^ sum) < 0 && (instant ^ offset) >= 0 |==> (instant ^ sum) < 0 == (instant ^ offset) >= 0
11375:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getOffsetToAdd(long):610:(instant ^ sum) < 0 && (instant ^ offset) >= 0 |==> false
11376:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getOffsetToAdd(long):610:(instant ^ sum) < 0 && (instant ^ offset) >= 0 |==> (instant ^ sum) < 0
11377:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@getOffsetToAdd(long):610:(instant ^ sum) < 0 && (instant ^ offset) >= 0 |==> (instant ^ offset) >= 0
11378:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@equals(java.lang.Object):618:this == obj |==> false
11379:LVR:TRUE:FALSE:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@equals(java.lang.Object):619:true |==> false
11380:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@equals(java.lang.Object):622:iField.equals(other.iField) && iZone.equals(other.iZone) |==> iField.equals(other.iField) == iZone.equals(other.iZone)
11381:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@equals(java.lang.Object):622:iField.equals(other.iField) && iZone.equals(other.iZone) |==> false
11382:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@equals(java.lang.Object):622:iField.equals(other.iField) && iZone.equals(other.iZone) |==> iField.equals(other.iField)
11383:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@equals(java.lang.Object):623:iField.equals(other.iField) && iZone.equals(other.iZone) |==> iZone.equals(other.iZone)
11384:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@equals(java.lang.Object):622:iField.equals(other.iField) && iZone.equals(other.iZone) && iDurationField.equals(other.iDurationField) |==> (iField.equals(other.iField) && iZone.equals(other.iZone)) == iDurationField.equals(other.iDurationField)
11385:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@equals(java.lang.Object):623:iField.equals(other.iField) && iZone.equals(other.iZone) && iDurationField.equals(other.iDurationField) |==> false
11386:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@equals(java.lang.Object):622:iField.equals(other.iField) && iZone.equals(other.iZone) && iDurationField.equals(other.iDurationField) |==> iField.equals(other.iField) && iZone.equals(other.iZone)
11387:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@equals(java.lang.Object):624:iField.equals(other.iField) && iZone.equals(other.iZone) && iDurationField.equals(other.iDurationField) |==> iDurationField.equals(other.iDurationField)
11388:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@equals(java.lang.Object):622:iField.equals(other.iField) && iZone.equals(other.iZone) && iDurationField.equals(other.iDurationField) && iRangeDurationField.equals(other.iRangeDurationField) |==> (iField.equals(other.iField) && iZone.equals(other.iZone) && iDurationField.equals(other.iDurationField)) == iRangeDurationField.equals(other.iRangeDurationField)
11389:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@equals(java.lang.Object):624:iField.equals(other.iField) && iZone.equals(other.iZone) && iDurationField.equals(other.iDurationField) && iRangeDurationField.equals(other.iRangeDurationField) |==> false
11390:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@equals(java.lang.Object):622:iField.equals(other.iField) && iZone.equals(other.iZone) && iDurationField.equals(other.iDurationField) && iRangeDurationField.equals(other.iRangeDurationField) |==> iField.equals(other.iField) && iZone.equals(other.iZone) && iDurationField.equals(other.iDurationField)
11391:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@equals(java.lang.Object):625:iField.equals(other.iField) && iZone.equals(other.iZone) && iDurationField.equals(other.iDurationField) && iRangeDurationField.equals(other.iRangeDurationField) |==> iRangeDurationField.equals(other.iRangeDurationField)
11392:LVR:FALSE:TRUE:org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@equals(java.lang.Object):627:false |==> true
11393:LOR:^(int,int):&(int,int):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@hashCode():632:iField.hashCode() ^ iZone.hashCode() |==> iField.hashCode() & iZone.hashCode()
11394:LOR:^(int,int):|(int,int):org.joda.time.chrono.ZonedChronology$ZonedDateTimeField@hashCode():632:iField.hashCode() ^ iZone.hashCode() |==> iField.hashCode() | iZone.hashCode()
11395:LVR:FALSE:TRUE:org.joda.time.convert.AbstractConverter@isReadableInterval(java.lang.Object,org.joda.time.Chronology):148:false |==> true
11396:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.convert.AbstractConverter@toString():158:getSupportedType() == null |==> false
11397:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.convert.CalendarConverter@getChronology(java.lang.Object,org.joda.time.Chronology):68:chrono != null |==> true
11398:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.CalendarConverter@getChronology(java.lang.Object,org.joda.time.Chronology):74:zone = DateTimeZone.forTimeZone(cal.getTimeZone()) |==> <NO-OP>
11399:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.CalendarConverter@getChronology(java.lang.Object,org.joda.time.Chronology):77:zone = DateTimeZone.getDefault() |==> <NO-OP>
11400:COR:object.getClass().getName().endsWith(".BuddhistCalendar"):TRUE:org.joda.time.convert.CalendarConverter@getChronology(java.lang.Object,org.joda.time.DateTimeZone):94:object.getClass().getName().endsWith(".BuddhistCalendar") |==> false
11401:COR:object.getClass().getName().endsWith(".BuddhistCalendar"):FALSE:org.joda.time.convert.CalendarConverter@getChronology(java.lang.Object,org.joda.time.DateTimeZone):94:object.getClass().getName().endsWith(".BuddhistCalendar") |==> true
11402:ROR:==(long,long):<=(long,long):org.joda.time.convert.CalendarConverter@getChronology(java.lang.Object,org.joda.time.DateTimeZone):99:cutover == Long.MIN_VALUE |==> cutover <= Long.MIN_VALUE
11403:ROR:==(long,long):>=(long,long):org.joda.time.convert.CalendarConverter@getChronology(java.lang.Object,org.joda.time.DateTimeZone):99:cutover == Long.MIN_VALUE |==> cutover >= Long.MIN_VALUE
11404:ROR:==(long,long):FALSE(long,long):org.joda.time.convert.CalendarConverter@getChronology(java.lang.Object,org.joda.time.DateTimeZone):99:cutover == Long.MIN_VALUE |==> false
11405:ROR:==(long,long):<=(long,long):org.joda.time.convert.CalendarConverter@getChronology(java.lang.Object,org.joda.time.DateTimeZone):101:cutover == Long.MAX_VALUE |==> cutover <= Long.MAX_VALUE
11406:ROR:==(long,long):>=(long,long):org.joda.time.convert.CalendarConverter@getChronology(java.lang.Object,org.joda.time.DateTimeZone):101:cutover == Long.MAX_VALUE |==> cutover >= Long.MAX_VALUE
11407:ROR:==(long,long):FALSE(long,long):org.joda.time.convert.CalendarConverter@getChronology(java.lang.Object,org.joda.time.DateTimeZone):101:cutover == Long.MAX_VALUE |==> false
11408:LVR:POS:0:org.joda.time.convert.CalendarConverter@getChronology(java.lang.Object,org.joda.time.DateTimeZone):104:4 |==> 0
11409:LVR:POS:NEG:org.joda.time.convert.CalendarConverter@getChronology(java.lang.Object,org.joda.time.DateTimeZone):104:4 |==> -4
11410:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterManager@getInstance():89:INSTANCE == null |==> false
11411:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterManager@getInstance():90:INSTANCE = new ConverterManager() |==> <NO-OP>
11412:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterManager@<init>():107:iInstantConverters = new ConverterSet(new Converter[]{ReadableInstantConverter.INSTANCE, StringConverter.INSTANCE, CalendarConverter.INSTANCE, DateConverter.INSTANCE, LongConverter.INSTANCE, NullConverter.INSTANCE}) |==> <NO-OP>
11413:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterManager@<init>():116:iPartialConverters = new ConverterSet(new Converter[]{ReadablePartialConverter.INSTANCE, ReadableInstantConverter.INSTANCE, StringConverter.INSTANCE, CalendarConverter.INSTANCE, DateConverter.INSTANCE, LongConverter.INSTANCE, NullConverter.INSTANCE}) |==> <NO-OP>
11414:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterManager@<init>():126:iDurationConverters = new ConverterSet(new Converter[]{ReadableDurationConverter.INSTANCE, ReadableIntervalConverter.INSTANCE, StringConverter.INSTANCE, LongConverter.INSTANCE, NullConverter.INSTANCE}) |==> <NO-OP>
11415:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterManager@<init>():134:iPeriodConverters = new ConverterSet(new Converter[]{ReadableDurationConverter.INSTANCE, ReadablePeriodConverter.INSTANCE, ReadableIntervalConverter.INSTANCE, StringConverter.INSTANCE, NullConverter.INSTANCE}) |==> <NO-OP>
11416:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterManager@<init>():142:iIntervalConverters = new ConverterSet(new Converter[]{ReadableIntervalConverter.INSTANCE, StringConverter.INSTANCE, NullConverter.INSTANCE}) |==> <NO-OP>
11417:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterManager@getInstantConverter(java.lang.Object):161:object == null |==> false
11418:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterManager@getInstantConverter(java.lang.Object):162:converter != null |==> true
11419:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterManager@getInstantConverter(java.lang.Object):166:object == null |==> false
11420:STD:<CALL>:<NO-OP>:org.joda.time.convert.ConverterManager@getInstantConverters():178:set.copyInto(converters) |==> <NO-OP>
11421:STD:<CALL>:<NO-OP>:org.joda.time.convert.ConverterManager@addInstantConverter(org.joda.time.convert.InstantConverter):196:checkAlterInstantConverters() |==> <NO-OP>
11422:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterManager@addInstantConverter(org.joda.time.convert.InstantConverter):197:converter == null |==> false
11423:LVR:POS:0:org.joda.time.convert.ConverterManager@addInstantConverter(org.joda.time.convert.InstantConverter):200:1 |==> 0
11424:LVR:POS:NEG:org.joda.time.convert.ConverterManager@addInstantConverter(org.joda.time.convert.InstantConverter):200:1 |==> -1
11425:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterManager@addInstantConverter(org.joda.time.convert.InstantConverter):201:iInstantConverters = iInstantConverters.add(converter, removed) |==> <NO-OP>
11426:LVR:0:POS:org.joda.time.convert.ConverterManager@addInstantConverter(org.joda.time.convert.InstantConverter):202:0 |==> 1
11427:LVR:0:NEG:org.joda.time.convert.ConverterManager@addInstantConverter(org.joda.time.convert.InstantConverter):202:0 |==> -1
11428:STD:<CALL>:<NO-OP>:org.joda.time.convert.ConverterManager@removeInstantConverter(org.joda.time.convert.InstantConverter):215:checkAlterInstantConverters() |==> <NO-OP>
11429:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterManager@removeInstantConverter(org.joda.time.convert.InstantConverter):216:converter == null |==> false
11430:LVR:POS:0:org.joda.time.convert.ConverterManager@removeInstantConverter(org.joda.time.convert.InstantConverter):219:1 |==> 0
11431:LVR:POS:NEG:org.joda.time.convert.ConverterManager@removeInstantConverter(org.joda.time.convert.InstantConverter):219:1 |==> -1
11432:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterManager@removeInstantConverter(org.joda.time.convert.InstantConverter):220:iInstantConverters = iInstantConverters.remove(converter, removed) |==> <NO-OP>
11433:LVR:0:POS:org.joda.time.convert.ConverterManager@removeInstantConverter(org.joda.time.convert.InstantConverter):221:0 |==> 1
11434:LVR:0:NEG:org.joda.time.convert.ConverterManager@removeInstantConverter(org.joda.time.convert.InstantConverter):221:0 |==> -1
11435:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterManager@checkAlterInstantConverters():231:sm != null |==> true
11436:STD:<CALL>:<NO-OP>:org.joda.time.convert.ConverterManager@checkAlterInstantConverters():232:sm.checkPermission(new JodaTimePermission("ConverterManager.alterInstantConverters")) |==> <NO-OP>
11437:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterManager@getPartialConverter(java.lang.Object):248:object == null |==> false
11438:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterManager@getPartialConverter(java.lang.Object):249:converter != null |==> true
11439:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterManager@getPartialConverter(java.lang.Object):253:object == null |==> false
11440:STD:<CALL>:<NO-OP>:org.joda.time.convert.ConverterManager@getPartialConverters():265:set.copyInto(converters) |==> <NO-OP>
11441:STD:<CALL>:<NO-OP>:org.joda.time.convert.ConverterManager@addPartialConverter(org.joda.time.convert.PartialConverter):283:checkAlterPartialConverters() |==> <NO-OP>
11442:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterManager@addPartialConverter(org.joda.time.convert.PartialConverter):284:converter == null |==> false
11443:LVR:POS:0:org.joda.time.convert.ConverterManager@addPartialConverter(org.joda.time.convert.PartialConverter):287:1 |==> 0
11444:LVR:POS:NEG:org.joda.time.convert.ConverterManager@addPartialConverter(org.joda.time.convert.PartialConverter):287:1 |==> -1
11445:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterManager@addPartialConverter(org.joda.time.convert.PartialConverter):288:iPartialConverters = iPartialConverters.add(converter, removed) |==> <NO-OP>
11446:LVR:0:POS:org.joda.time.convert.ConverterManager@addPartialConverter(org.joda.time.convert.PartialConverter):289:0 |==> 1
11447:LVR:0:NEG:org.joda.time.convert.ConverterManager@addPartialConverter(org.joda.time.convert.PartialConverter):289:0 |==> -1
11448:STD:<CALL>:<NO-OP>:org.joda.time.convert.ConverterManager@removePartialConverter(org.joda.time.convert.PartialConverter):302:checkAlterPartialConverters() |==> <NO-OP>
11449:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterManager@removePartialConverter(org.joda.time.convert.PartialConverter):303:converter == null |==> false
11450:LVR:POS:0:org.joda.time.convert.ConverterManager@removePartialConverter(org.joda.time.convert.PartialConverter):306:1 |==> 0
11451:LVR:POS:NEG:org.joda.time.convert.ConverterManager@removePartialConverter(org.joda.time.convert.PartialConverter):306:1 |==> -1
11452:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterManager@removePartialConverter(org.joda.time.convert.PartialConverter):307:iPartialConverters = iPartialConverters.remove(converter, removed) |==> <NO-OP>
11453:LVR:0:POS:org.joda.time.convert.ConverterManager@removePartialConverter(org.joda.time.convert.PartialConverter):308:0 |==> 1
11454:LVR:0:NEG:org.joda.time.convert.ConverterManager@removePartialConverter(org.joda.time.convert.PartialConverter):308:0 |==> -1
11455:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterManager@checkAlterPartialConverters():318:sm != null |==> true
11456:STD:<CALL>:<NO-OP>:org.joda.time.convert.ConverterManager@checkAlterPartialConverters():319:sm.checkPermission(new JodaTimePermission("ConverterManager.alterPartialConverters")) |==> <NO-OP>
11457:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterManager@getDurationConverter(java.lang.Object):335:object == null |==> false
11458:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterManager@getDurationConverter(java.lang.Object):336:converter != null |==> true
11459:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterManager@getDurationConverter(java.lang.Object):340:object == null |==> false
11460:STD:<CALL>:<NO-OP>:org.joda.time.convert.ConverterManager@getDurationConverters():352:set.copyInto(converters) |==> <NO-OP>
11461:STD:<CALL>:<NO-OP>:org.joda.time.convert.ConverterManager@addDurationConverter(org.joda.time.convert.DurationConverter):370:checkAlterDurationConverters() |==> <NO-OP>
11462:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterManager@addDurationConverter(org.joda.time.convert.DurationConverter):371:converter == null |==> false
11463:LVR:POS:0:org.joda.time.convert.ConverterManager@addDurationConverter(org.joda.time.convert.DurationConverter):374:1 |==> 0
11464:LVR:POS:NEG:org.joda.time.convert.ConverterManager@addDurationConverter(org.joda.time.convert.DurationConverter):374:1 |==> -1
11465:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterManager@addDurationConverter(org.joda.time.convert.DurationConverter):375:iDurationConverters = iDurationConverters.add(converter, removed) |==> <NO-OP>
11466:LVR:0:POS:org.joda.time.convert.ConverterManager@addDurationConverter(org.joda.time.convert.DurationConverter):376:0 |==> 1
11467:LVR:0:NEG:org.joda.time.convert.ConverterManager@addDurationConverter(org.joda.time.convert.DurationConverter):376:0 |==> -1
11468:STD:<CALL>:<NO-OP>:org.joda.time.convert.ConverterManager@removeDurationConverter(org.joda.time.convert.DurationConverter):389:checkAlterDurationConverters() |==> <NO-OP>
11469:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterManager@removeDurationConverter(org.joda.time.convert.DurationConverter):390:converter == null |==> false
11470:LVR:POS:0:org.joda.time.convert.ConverterManager@removeDurationConverter(org.joda.time.convert.DurationConverter):393:1 |==> 0
11471:LVR:POS:NEG:org.joda.time.convert.ConverterManager@removeDurationConverter(org.joda.time.convert.DurationConverter):393:1 |==> -1
11472:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterManager@removeDurationConverter(org.joda.time.convert.DurationConverter):394:iDurationConverters = iDurationConverters.remove(converter, removed) |==> <NO-OP>
11473:LVR:0:POS:org.joda.time.convert.ConverterManager@removeDurationConverter(org.joda.time.convert.DurationConverter):395:0 |==> 1
11474:LVR:0:NEG:org.joda.time.convert.ConverterManager@removeDurationConverter(org.joda.time.convert.DurationConverter):395:0 |==> -1
11475:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterManager@checkAlterDurationConverters():405:sm != null |==> true
11476:STD:<CALL>:<NO-OP>:org.joda.time.convert.ConverterManager@checkAlterDurationConverters():406:sm.checkPermission(new JodaTimePermission("ConverterManager.alterDurationConverters")) |==> <NO-OP>
11477:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterManager@getPeriodConverter(java.lang.Object):422:object == null |==> false
11478:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterManager@getPeriodConverter(java.lang.Object):423:converter != null |==> true
11479:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterManager@getPeriodConverter(java.lang.Object):427:object == null |==> false
11480:STD:<CALL>:<NO-OP>:org.joda.time.convert.ConverterManager@getPeriodConverters():439:set.copyInto(converters) |==> <NO-OP>
11481:STD:<CALL>:<NO-OP>:org.joda.time.convert.ConverterManager@addPeriodConverter(org.joda.time.convert.PeriodConverter):457:checkAlterPeriodConverters() |==> <NO-OP>
11482:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterManager@addPeriodConverter(org.joda.time.convert.PeriodConverter):458:converter == null |==> false
11483:LVR:POS:0:org.joda.time.convert.ConverterManager@addPeriodConverter(org.joda.time.convert.PeriodConverter):461:1 |==> 0
11484:LVR:POS:NEG:org.joda.time.convert.ConverterManager@addPeriodConverter(org.joda.time.convert.PeriodConverter):461:1 |==> -1
11485:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterManager@addPeriodConverter(org.joda.time.convert.PeriodConverter):462:iPeriodConverters = iPeriodConverters.add(converter, removed) |==> <NO-OP>
11486:LVR:0:POS:org.joda.time.convert.ConverterManager@addPeriodConverter(org.joda.time.convert.PeriodConverter):463:0 |==> 1
11487:LVR:0:NEG:org.joda.time.convert.ConverterManager@addPeriodConverter(org.joda.time.convert.PeriodConverter):463:0 |==> -1
11488:STD:<CALL>:<NO-OP>:org.joda.time.convert.ConverterManager@removePeriodConverter(org.joda.time.convert.PeriodConverter):476:checkAlterPeriodConverters() |==> <NO-OP>
11489:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterManager@removePeriodConverter(org.joda.time.convert.PeriodConverter):477:converter == null |==> false
11490:LVR:POS:0:org.joda.time.convert.ConverterManager@removePeriodConverter(org.joda.time.convert.PeriodConverter):480:1 |==> 0
11491:LVR:POS:NEG:org.joda.time.convert.ConverterManager@removePeriodConverter(org.joda.time.convert.PeriodConverter):480:1 |==> -1
11492:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterManager@removePeriodConverter(org.joda.time.convert.PeriodConverter):481:iPeriodConverters = iPeriodConverters.remove(converter, removed) |==> <NO-OP>
11493:LVR:0:POS:org.joda.time.convert.ConverterManager@removePeriodConverter(org.joda.time.convert.PeriodConverter):482:0 |==> 1
11494:LVR:0:NEG:org.joda.time.convert.ConverterManager@removePeriodConverter(org.joda.time.convert.PeriodConverter):482:0 |==> -1
11495:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterManager@checkAlterPeriodConverters():492:sm != null |==> true
11496:STD:<CALL>:<NO-OP>:org.joda.time.convert.ConverterManager@checkAlterPeriodConverters():493:sm.checkPermission(new JodaTimePermission("ConverterManager.alterPeriodConverters")) |==> <NO-OP>
11497:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterManager@getIntervalConverter(java.lang.Object):509:object == null |==> false
11498:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterManager@getIntervalConverter(java.lang.Object):510:converter != null |==> true
11499:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterManager@getIntervalConverter(java.lang.Object):514:object == null |==> false
11500:STD:<CALL>:<NO-OP>:org.joda.time.convert.ConverterManager@getIntervalConverters():526:set.copyInto(converters) |==> <NO-OP>
11501:STD:<CALL>:<NO-OP>:org.joda.time.convert.ConverterManager@addIntervalConverter(org.joda.time.convert.IntervalConverter):544:checkAlterIntervalConverters() |==> <NO-OP>
11502:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterManager@addIntervalConverter(org.joda.time.convert.IntervalConverter):545:converter == null |==> false
11503:LVR:POS:0:org.joda.time.convert.ConverterManager@addIntervalConverter(org.joda.time.convert.IntervalConverter):548:1 |==> 0
11504:LVR:POS:NEG:org.joda.time.convert.ConverterManager@addIntervalConverter(org.joda.time.convert.IntervalConverter):548:1 |==> -1
11505:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterManager@addIntervalConverter(org.joda.time.convert.IntervalConverter):549:iIntervalConverters = iIntervalConverters.add(converter, removed) |==> <NO-OP>
11506:LVR:0:POS:org.joda.time.convert.ConverterManager@addIntervalConverter(org.joda.time.convert.IntervalConverter):550:0 |==> 1
11507:LVR:0:NEG:org.joda.time.convert.ConverterManager@addIntervalConverter(org.joda.time.convert.IntervalConverter):550:0 |==> -1
11508:STD:<CALL>:<NO-OP>:org.joda.time.convert.ConverterManager@removeIntervalConverter(org.joda.time.convert.IntervalConverter):563:checkAlterIntervalConverters() |==> <NO-OP>
11509:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterManager@removeIntervalConverter(org.joda.time.convert.IntervalConverter):564:converter == null |==> false
11510:LVR:POS:0:org.joda.time.convert.ConverterManager@removeIntervalConverter(org.joda.time.convert.IntervalConverter):567:1 |==> 0
11511:LVR:POS:NEG:org.joda.time.convert.ConverterManager@removeIntervalConverter(org.joda.time.convert.IntervalConverter):567:1 |==> -1
11512:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterManager@removeIntervalConverter(org.joda.time.convert.IntervalConverter):568:iIntervalConverters = iIntervalConverters.remove(converter, removed) |==> <NO-OP>
11513:LVR:0:POS:org.joda.time.convert.ConverterManager@removeIntervalConverter(org.joda.time.convert.IntervalConverter):569:0 |==> 1
11514:LVR:0:NEG:org.joda.time.convert.ConverterManager@removeIntervalConverter(org.joda.time.convert.IntervalConverter):569:0 |==> -1
11515:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterManager@checkAlterIntervalConverters():579:sm != null |==> true
11516:STD:<CALL>:<NO-OP>:org.joda.time.convert.ConverterManager@checkAlterIntervalConverters():580:sm.checkPermission(new JodaTimePermission("ConverterManager.alterIntervalConverters")) |==> <NO-OP>
11517:LVR:POS:0:org.joda.time.convert.ConverterSet@<init>(org.joda.time.convert.Converter[]):36:1 |==> 0
11518:LVR:POS:NEG:org.joda.time.convert.ConverterSet@<init>(org.joda.time.convert.Converter[]):36:1 |==> -1
11519:LVR:POS:0:org.joda.time.convert.ConverterSet@<init>(org.joda.time.convert.Converter[]):36:4 |==> 0
11520:LVR:POS:NEG:org.joda.time.convert.ConverterSet@<init>(org.joda.time.convert.Converter[]):36:4 |==> -4
11521:SOR:<<(int,int):>>(int,int):org.joda.time.convert.ConverterSet@<init>(org.joda.time.convert.Converter[]):36:1 << 4 |==> 1 >> 4
11522:SOR:<<(int,int):>>>(int,int):org.joda.time.convert.ConverterSet@<init>(org.joda.time.convert.Converter[]):36:1 << 4 |==> 1 >>> 4
11523:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterSet@<init>(org.joda.time.convert.Converter[]):36:iSelectEntries = new Entry[1 << 4] |==> <NO-OP>
11524:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):51:type == null |==> false
11525:LVR:0:POS:org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):51:0 |==> 1
11526:LVR:0:NEG:org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):51:0 |==> -1
11527:LVR:POS:0:org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):51:1 |==> 0
11528:LVR:POS:NEG:org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):51:1 |==> -1
11529:AOR:-(int,int):%(int,int):org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):51:length - 1 |==> length % 1
11530:AOR:-(int,int):*(int,int):org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):51:length - 1 |==> length * 1
11531:AOR:-(int,int):+(int,int):org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):51:length - 1 |==> length + 1
11532:AOR:-(int,int):/(int,int):org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):51:length - 1 |==> length / 1
11533:LOR:&(int,int):^(int,int):org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):51:type.hashCode() & (length - 1) |==> type.hashCode() ^ (length - 1)
11534:LOR:&(int,int):|(int,int):org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):51:type.hashCode() & (length - 1) |==> type.hashCode() | (length - 1)
11535:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):56:e.iType == type |==> false
11536:ROR:>=(int,int):==(int,int):org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):59:++index >= length |==> ++index == length
11537:ROR:>=(int,int):>(int,int):org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):59:++index >= length |==> ++index > length
11538:ROR:>=(int,int):TRUE(int,int):org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):59:++index >= length |==> true
11539:LVR:0:POS:org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):60:0 |==> 1
11540:LVR:0:NEG:org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):60:0 |==> -1
11541:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):60:index = 0 |==> <NO-OP>
11542:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):67:e = new Entry(type, converter) |==> <NO-OP>
11543:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):79:entries = (Entry[])entries.clone() |==> <NO-OP>
11544:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):82:entries[index] = e |==> <NO-OP>
11545:LVR:0:POS:org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):85:0 |==> 1
11546:LVR:0:NEG:org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):85:0 |==> -1
11547:ROR:<(int,int):!=(int,int):org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):85:i < length |==> i != length
11548:ROR:<(int,int):<=(int,int):org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):85:i < length |==> i <= length
11549:ROR:<(int,int):FALSE(int,int):org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):85:i < length |==> false
11550:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):86:entries[i] == null |==> false
11551:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):88:iSelectEntries = entries |==> <NO-OP>
11552:LVR:POS:0:org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):95:1 |==> 0
11553:LVR:POS:NEG:org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):95:1 |==> -1
11554:SOR:<<(int,int):>>(int,int):org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):95:length << 1 |==> length >> 1
11555:SOR:<<(int,int):>>>(int,int):org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):95:length << 1 |==> length >>> 1
11556:LVR:0:POS:org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):97:0 |==> 1
11557:LVR:0:NEG:org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):97:0 |==> -1
11558:ROR:<(int,int):!=(int,int):org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):97:i < length |==> i != length
11559:ROR:<(int,int):<=(int,int):org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):97:i < length |==> i <= length
11560:ROR:<(int,int):FALSE(int,int):org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):97:i < length |==> false
11561:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):98:e = entries[i] |==> <NO-OP>
11562:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):99:type = e.iType |==> <NO-OP>
11563:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):100:type == null |==> false
11564:LVR:0:POS:org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):100:0 |==> 1
11565:LVR:0:NEG:org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):100:0 |==> -1
11566:LVR:POS:0:org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):100:1 |==> 0
11567:LVR:POS:NEG:org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):100:1 |==> -1
11568:AOR:-(int,int):%(int,int):org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):100:newLength - 1 |==> newLength % 1
11569:AOR:-(int,int):*(int,int):org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):100:newLength - 1 |==> newLength * 1
11570:AOR:-(int,int):+(int,int):org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):100:newLength - 1 |==> newLength + 1
11571:AOR:-(int,int):/(int,int):org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):100:newLength - 1 |==> newLength / 1
11572:LOR:&(int,int):^(int,int):org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):100:type.hashCode() & (newLength - 1) |==> type.hashCode() ^ (newLength - 1)
11573:LOR:&(int,int):|(int,int):org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):100:type.hashCode() & (newLength - 1) |==> type.hashCode() | (newLength - 1)
11574:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):100:index = type == null ? 0 : type.hashCode() & (newLength - 1) |==> <NO-OP>
11575:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):101:newEntries[index] != null |==> true
11576:ROR:>=(int,int):==(int,int):org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):102:++index >= newLength |==> ++index == newLength
11577:ROR:>=(int,int):>(int,int):org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):102:++index >= newLength |==> ++index > newLength
11578:ROR:>=(int,int):TRUE(int,int):org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):102:++index >= newLength |==> true
11579:LVR:0:POS:org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):103:0 |==> 1
11580:LVR:0:NEG:org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):103:0 |==> -1
11581:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):103:index = 0 |==> <NO-OP>
11582:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):106:newEntries[index] = e |==> <NO-OP>
11583:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterSet@select(java.lang.Class<?>):110:iSelectEntries = newEntries |==> <NO-OP>
11584:LVR:0:POS:org.joda.time.convert.ConverterSet@copyInto(org.joda.time.convert.Converter[]):125:0 |==> 1
11585:LVR:0:NEG:org.joda.time.convert.ConverterSet@copyInto(org.joda.time.convert.Converter[]):125:0 |==> -1
11586:LVR:0:POS:org.joda.time.convert.ConverterSet@copyInto(org.joda.time.convert.Converter[]):125:0 |==> 1
11587:LVR:0:NEG:org.joda.time.convert.ConverterSet@copyInto(org.joda.time.convert.Converter[]):125:0 |==> -1
11588:STD:<CALL>:<NO-OP>:org.joda.time.convert.ConverterSet@copyInto(org.joda.time.convert.Converter[]):125:System.arraycopy(iConverters, 0, converters, 0, iConverters.length) |==> <NO-OP>
11589:LVR:0:POS:org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):142:0 |==> 1
11590:LVR:0:NEG:org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):142:0 |==> -1
11591:ROR:<(int,int):!=(int,int):org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):142:i < length |==> i != length
11592:ROR:<(int,int):<=(int,int):org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):142:i < length |==> i <= length
11593:ROR:<(int,int):FALSE(int,int):org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):142:i < length |==> false
11594:COR:converter.equals(existing):TRUE:org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):144:converter.equals(existing) |==> false
11595:COR:converter.equals(existing):FALSE:org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):144:converter.equals(existing) |==> true
11596:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):146:removed != null |==> true
11597:LVR:0:POS:org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):147:0 |==> 1
11598:LVR:0:NEG:org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):147:0 |==> -1
11599:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):147:removed[0] = null |==> <NO-OP>
11600:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):152:converter.getSupportedType() == existing.getSupportedType() |==> false
11601:LVR:0:POS:org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):156:0 |==> 1
11602:LVR:0:NEG:org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):156:0 |==> -1
11603:ROR:<(int,int):!=(int,int):org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):156:j < length |==> j != length
11604:ROR:<(int,int):<=(int,int):org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):156:j < length |==> j <= length
11605:ROR:<(int,int):FALSE(int,int):org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):156:j < length |==> false
11606:ROR:!=(int,int):<(int,int):org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):157:j != i |==> j < i
11607:ROR:!=(int,int):>(int,int):org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):157:j != i |==> j > i
11608:ROR:!=(int,int):TRUE(int,int):org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):157:j != i |==> true
11609:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):158:copy[j] = converters[j] |==> <NO-OP>
11610:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):160:copy[j] = converter |==> <NO-OP>
11611:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):164:removed != null |==> true
11612:LVR:0:POS:org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):165:0 |==> 1
11613:LVR:0:NEG:org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):165:0 |==> -1
11614:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):165:removed[0] = existing |==> <NO-OP>
11615:LVR:POS:0:org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):172:1 |==> 0
11616:LVR:POS:NEG:org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):172:1 |==> -1
11617:AOR:+(int,int):%(int,int):org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):172:length + 1 |==> length % 1
11618:AOR:+(int,int):*(int,int):org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):172:length + 1 |==> length * 1
11619:AOR:+(int,int):-(int,int):org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):172:length + 1 |==> length - 1
11620:AOR:+(int,int):/(int,int):org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):172:length + 1 |==> length / 1
11621:LVR:0:POS:org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):173:0 |==> 1
11622:LVR:0:NEG:org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):173:0 |==> -1
11623:LVR:0:POS:org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):173:0 |==> 1
11624:LVR:0:NEG:org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):173:0 |==> -1
11625:STD:<CALL>:<NO-OP>:org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):173:System.arraycopy(converters, 0, copy, 0, length) |==> <NO-OP>
11626:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):174:copy[length] = converter |==> <NO-OP>
11627:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):176:removed != null |==> true
11628:LVR:0:POS:org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):177:0 |==> 1
11629:LVR:0:NEG:org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):177:0 |==> -1
11630:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterSet@add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):177:removed[0] = null |==> <NO-OP>
11631:LVR:0:POS:org.joda.time.convert.ConverterSet@remove(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):194:0 |==> 1
11632:LVR:0:NEG:org.joda.time.convert.ConverterSet@remove(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):194:0 |==> -1
11633:ROR:<(int,int):!=(int,int):org.joda.time.convert.ConverterSet@remove(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):194:i < length |==> i != length
11634:ROR:<(int,int):<=(int,int):org.joda.time.convert.ConverterSet@remove(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):194:i < length |==> i <= length
11635:ROR:<(int,int):FALSE(int,int):org.joda.time.convert.ConverterSet@remove(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):194:i < length |==> false
11636:COR:converter.equals(converters[i]):TRUE:org.joda.time.convert.ConverterSet@remove(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):195:converter.equals(converters[i]) |==> false
11637:COR:converter.equals(converters[i]):FALSE:org.joda.time.convert.ConverterSet@remove(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):195:converter.equals(converters[i]) |==> true
11638:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterSet@remove(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):201:removed != null |==> true
11639:LVR:0:POS:org.joda.time.convert.ConverterSet@remove(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):202:0 |==> 1
11640:LVR:0:NEG:org.joda.time.convert.ConverterSet@remove(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):202:0 |==> -1
11641:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterSet@remove(org.joda.time.convert.Converter,org.joda.time.convert.Converter[]):202:removed[0] = null |==> <NO-OP>
11642:ROR:>=(int,int):==(int,int):org.joda.time.convert.ConverterSet@remove(int,org.joda.time.convert.Converter[]):218:index >= length |==> index == length
11643:ROR:>=(int,int):>(int,int):org.joda.time.convert.ConverterSet@remove(int,org.joda.time.convert.Converter[]):218:index >= length |==> index > length
11644:ROR:>=(int,int):TRUE(int,int):org.joda.time.convert.ConverterSet@remove(int,org.joda.time.convert.Converter[]):218:index >= length |==> true
11645:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterSet@remove(int,org.joda.time.convert.Converter[]):222:removed != null |==> true
11646:LVR:0:POS:org.joda.time.convert.ConverterSet@remove(int,org.joda.time.convert.Converter[]):223:0 |==> 1
11647:LVR:0:NEG:org.joda.time.convert.ConverterSet@remove(int,org.joda.time.convert.Converter[]):223:0 |==> -1
11648:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterSet@remove(int,org.joda.time.convert.Converter[]):223:removed[0] = converters[index] |==> <NO-OP>
11649:LVR:POS:0:org.joda.time.convert.ConverterSet@remove(int,org.joda.time.convert.Converter[]):226:1 |==> 0
11650:LVR:POS:NEG:org.joda.time.convert.ConverterSet@remove(int,org.joda.time.convert.Converter[]):226:1 |==> -1
11651:AOR:-(int,int):%(int,int):org.joda.time.convert.ConverterSet@remove(int,org.joda.time.convert.Converter[]):226:length - 1 |==> length % 1
11652:AOR:-(int,int):*(int,int):org.joda.time.convert.ConverterSet@remove(int,org.joda.time.convert.Converter[]):226:length - 1 |==> length * 1
11653:AOR:-(int,int):+(int,int):org.joda.time.convert.ConverterSet@remove(int,org.joda.time.convert.Converter[]):226:length - 1 |==> length + 1
11654:AOR:-(int,int):/(int,int):org.joda.time.convert.ConverterSet@remove(int,org.joda.time.convert.Converter[]):226:length - 1 |==> length / 1
11655:LVR:0:POS:org.joda.time.convert.ConverterSet@remove(int,org.joda.time.convert.Converter[]):228:0 |==> 1
11656:LVR:0:NEG:org.joda.time.convert.ConverterSet@remove(int,org.joda.time.convert.Converter[]):228:0 |==> -1
11657:LVR:0:POS:org.joda.time.convert.ConverterSet@remove(int,org.joda.time.convert.Converter[]):229:0 |==> 1
11658:LVR:0:NEG:org.joda.time.convert.ConverterSet@remove(int,org.joda.time.convert.Converter[]):229:0 |==> -1
11659:ROR:<(int,int):!=(int,int):org.joda.time.convert.ConverterSet@remove(int,org.joda.time.convert.Converter[]):229:i < length |==> i != length
11660:ROR:<(int,int):<=(int,int):org.joda.time.convert.ConverterSet@remove(int,org.joda.time.convert.Converter[]):229:i < length |==> i <= length
11661:ROR:<(int,int):FALSE(int,int):org.joda.time.convert.ConverterSet@remove(int,org.joda.time.convert.Converter[]):229:i < length |==> false
11662:ROR:!=(int,int):<(int,int):org.joda.time.convert.ConverterSet@remove(int,org.joda.time.convert.Converter[]):230:i != index |==> i < index
11663:ROR:!=(int,int):>(int,int):org.joda.time.convert.ConverterSet@remove(int,org.joda.time.convert.Converter[]):230:i != index |==> i > index
11664:ROR:!=(int,int):TRUE(int,int):org.joda.time.convert.ConverterSet@remove(int,org.joda.time.convert.Converter[]):230:i != index |==> true
11665:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterSet@remove(int,org.joda.time.convert.Converter[]):231:copy[j++] = converters[i] |==> <NO-OP>
11666:LVR:0:POS:org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):247:0 |==> 1
11667:LVR:0:NEG:org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):247:0 |==> -1
11668:ROR:>=(int,int):==(int,int):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):247:--i >= 0 |==> --i == 0
11669:ROR:>=(int,int):>(int,int):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):247:--i >= 0 |==> --i > 0
11670:ROR:>=(int,int):TRUE(int,int):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):247:--i >= 0 |==> true
11671:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):251:supportedType == type |==> false
11672:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):256:supportedType == null |==> false
11673:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):256:type != null |==> true
11674:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):256:type != null && !supportedType.isAssignableFrom(type) |==> type != null == !supportedType.isAssignableFrom(type)
11675:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):256:type != null && !supportedType.isAssignableFrom(type) |==> false
11676:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):256:type != null && !supportedType.isAssignableFrom(type) |==> type != null
11677:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):256:type != null && !supportedType.isAssignableFrom(type) |==> !supportedType.isAssignableFrom(type)
11678:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):256:supportedType == null || (type != null && !supportedType.isAssignableFrom(type)) |==> supportedType == null != (type != null && !supportedType.isAssignableFrom(type))
11679:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):256:supportedType == null || (type != null && !supportedType.isAssignableFrom(type)) |==> supportedType == null
11680:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):256:supportedType == null || (type != null && !supportedType.isAssignableFrom(type)) |==> (type != null && !supportedType.isAssignableFrom(type))
11681:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):256:supportedType == null || (type != null && !supportedType.isAssignableFrom(type)) |==> true
11682:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):258:set = set.remove(i, null) |==> <NO-OP>
11683:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):259:converters = set.iConverters |==> <NO-OP>
11684:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):260:length = converters.length |==> <NO-OP>
11685:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):266:type == null |==> false
11686:LVR:0:POS:org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):266:0 |==> 1
11687:LVR:0:NEG:org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):266:0 |==> -1
11688:ROR:==(int,int):<=(int,int):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):266:length == 0 |==> length <= 0
11689:ROR:==(int,int):>=(int,int):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):266:length == 0 |==> length >= 0
11690:ROR:==(int,int):FALSE(int,int):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):266:length == 0 |==> false
11691:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):266:type == null || length == 0 |==> type == null != (length == 0)
11692:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):266:type == null || length == 0 |==> type == null
11693:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):266:type == null || length == 0 |==> length == 0
11694:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):266:type == null || length == 0 |==> true
11695:LVR:POS:0:org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):269:1 |==> 0
11696:LVR:POS:NEG:org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):269:1 |==> -1
11697:ROR:==(int,int):<=(int,int):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):269:length == 1 |==> length <= 1
11698:ROR:==(int,int):>=(int,int):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):269:length == 1 |==> length >= 1
11699:ROR:==(int,int):FALSE(int,int):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):269:length == 1 |==> false
11700:LVR:0:POS:org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):271:0 |==> 1
11701:LVR:0:NEG:org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):271:0 |==> -1
11702:LVR:0:POS:org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):277:0 |==> 1
11703:LVR:0:NEG:org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):277:0 |==> -1
11704:ROR:>=(int,int):==(int,int):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):277:--i >= 0 |==> --i == 0
11705:ROR:>=(int,int):>(int,int):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):277:--i >= 0 |==> --i > 0
11706:ROR:>=(int,int):TRUE(int,int):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):277:--i >= 0 |==> true
11707:LVR:0:POS:org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):280:0 |==> 1
11708:LVR:0:NEG:org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):280:0 |==> -1
11709:ROR:>=(int,int):==(int,int):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):280:--j >= 0 |==> --j == 0
11710:ROR:>=(int,int):>(int,int):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):280:--j >= 0 |==> --j > 0
11711:ROR:>=(int,int):TRUE(int,int):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):280:--j >= 0 |==> true
11712:ROR:!=(int,int):<(int,int):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):281:j != i |==> j < i
11713:ROR:!=(int,int):>(int,int):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):281:j != i |==> j > i
11714:ROR:!=(int,int):TRUE(int,int):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):281:j != i |==> true
11715:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):281:j != i && converters[j].getSupportedType().isAssignableFrom(supportedType) |==> j != i == converters[j].getSupportedType().isAssignableFrom(supportedType)
11716:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):281:j != i && converters[j].getSupportedType().isAssignableFrom(supportedType) |==> false
11717:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):281:j != i && converters[j].getSupportedType().isAssignableFrom(supportedType) |==> j != i
11718:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):281:j != i && converters[j].getSupportedType().isAssignableFrom(supportedType) |==> converters[j].getSupportedType().isAssignableFrom(supportedType)
11719:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):283:set = set.remove(j, null) |==> <NO-OP>
11720:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):284:converters = set.iConverters |==> <NO-OP>
11721:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):285:length = converters.length |==> <NO-OP>
11722:LVR:POS:0:org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):286:1 |==> 0
11723:LVR:POS:NEG:org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):286:1 |==> -1
11724:AOR:-(int,int):%(int,int):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):286:length - 1 |==> length % 1
11725:AOR:-(int,int):*(int,int):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):286:length - 1 |==> length * 1
11726:AOR:-(int,int):+(int,int):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):286:length - 1 |==> length + 1
11727:AOR:-(int,int):/(int,int):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):286:length - 1 |==> length / 1
11728:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):286:i = length - 1 |==> <NO-OP>
11729:LVR:POS:0:org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):293:1 |==> 0
11730:LVR:POS:NEG:org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):293:1 |==> -1
11731:ROR:==(int,int):<=(int,int):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):293:length == 1 |==> length <= 1
11732:ROR:==(int,int):>=(int,int):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):293:length == 1 |==> length >= 1
11733:ROR:==(int,int):FALSE(int,int):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):293:length == 1 |==> false
11734:LVR:0:POS:org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):295:0 |==> 1
11735:LVR:0:NEG:org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):295:0 |==> -1
11736:STD:<CALL>:<NO-OP>:org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):302:msg.append("Unable to find best converter for type \"") |==> <NO-OP>
11737:STD:<CALL>:<NO-OP>:org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):303:msg.append(type.getName()) |==> <NO-OP>
11738:STD:<CALL>:<NO-OP>:org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):304:msg.append("\" from remaining set: ") |==> <NO-OP>
11739:LVR:0:POS:org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):305:0 |==> 1
11740:LVR:0:NEG:org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):305:0 |==> -1
11741:ROR:<(int,int):!=(int,int):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):305:i < length |==> i != length
11742:ROR:<(int,int):<=(int,int):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):305:i < length |==> i <= length
11743:ROR:<(int,int):FALSE(int,int):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):305:i < length |==> false
11744:STD:<CALL>:<NO-OP>:org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):309:msg.append(converter.getClass().getName()) |==> <NO-OP>
11745:STD:<CALL>:<NO-OP>:org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):310:msg.append('[') |==> <NO-OP>
11746:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):311:supportedType == null |==> false
11747:STD:<CALL>:<NO-OP>:org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):311:msg.append(supportedType == null ? null : supportedType.getName()) |==> <NO-OP>
11748:STD:<CALL>:<NO-OP>:org.joda.time.convert.ConverterSet@selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class<?>):312:msg.append("], ") |==> <NO-OP>
11749:LVR:0:POS:org.joda.time.convert.NullConverter@getDurationMillis(java.lang.Object):56:0L |==> 1L
11750:LVR:0:NEG:org.joda.time.convert.NullConverter@getDurationMillis(java.lang.Object):56:0L |==> -1L
11751:STD:<CALL>:<NO-OP>:org.joda.time.convert.NullConverter@setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology):69:duration.setPeriod((Period)null) |==> <NO-OP>
11752:STD:<CALL>:<NO-OP>:org.joda.time.convert.NullConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):83:writableInterval.setChronology(chrono) |==> <NO-OP>
11753:STD:<CALL>:<NO-OP>:org.joda.time.convert.NullConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):85:writableInterval.setInterval(now, now) |==> <NO-OP>
11754:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ReadableDurationConverter@setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology):73:chrono = DateTimeUtils.getChronology(chrono) |==> <NO-OP>
11755:LVR:0:POS:org.joda.time.convert.ReadableDurationConverter@setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology):76:0 |==> 1
11756:LVR:0:NEG:org.joda.time.convert.ReadableDurationConverter@setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology):76:0 |==> -1
11757:ROR:<(int,int):!=(int,int):org.joda.time.convert.ReadableDurationConverter@setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology):76:i < values.length |==> i != values.length
11758:ROR:<(int,int):<=(int,int):org.joda.time.convert.ReadableDurationConverter@setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology):76:i < values.length |==> i <= values.length
11759:ROR:<(int,int):FALSE(int,int):org.joda.time.convert.ReadableDurationConverter@setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology):76:i < values.length |==> false
11760:STD:<CALL>:<NO-OP>:org.joda.time.convert.ReadableDurationConverter@setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology):77:writablePeriod.setValue(i, values[i]) |==> <NO-OP>
11761:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.convert.ReadableInstantConverter@getChronology(java.lang.Object,org.joda.time.DateTimeZone):59:chrono == null |==> false
11762:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.convert.ReadableInstantConverter@getChronology(java.lang.Object,org.joda.time.DateTimeZone):63:chronoZone != zone |==> true
11763:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ReadableInstantConverter@getChronology(java.lang.Object,org.joda.time.DateTimeZone):64:chrono = chrono.withZone(zone) |==> <NO-OP>
11764:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.convert.ReadableInstantConverter@getChronology(java.lang.Object,org.joda.time.DateTimeZone):65:chrono == null |==> false
11765:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.convert.ReadableInstantConverter@getChronology(java.lang.Object,org.joda.time.Chronology):83:chrono == null |==> false
11766:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ReadableInstantConverter@getChronology(java.lang.Object,org.joda.time.Chronology):84:chrono = ((ReadableInstant)object).getChronology() |==> <NO-OP>
11767:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ReadableInstantConverter@getChronology(java.lang.Object,org.joda.time.Chronology):85:chrono = DateTimeUtils.getChronology(chrono) |==> <NO-OP>
11768:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.convert.ReadableIntervalConverter@setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology):65:chrono != null |==> true
11769:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ReadableIntervalConverter@setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology):65:chrono = (chrono != null ? chrono : DateTimeUtils.getIntervalChronology(interval)) |==> <NO-OP>
11770:LVR:0:POS:org.joda.time.convert.ReadableIntervalConverter@setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology):69:0 |==> 1
11771:LVR:0:NEG:org.joda.time.convert.ReadableIntervalConverter@setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology):69:0 |==> -1
11772:ROR:<(int,int):!=(int,int):org.joda.time.convert.ReadableIntervalConverter@setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology):69:i < values.length |==> i != values.length
11773:ROR:<(int,int):<=(int,int):org.joda.time.convert.ReadableIntervalConverter@setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology):69:i < values.length |==> i <= values.length
11774:ROR:<(int,int):FALSE(int,int):org.joda.time.convert.ReadableIntervalConverter@setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology):69:i < values.length |==> false
11775:STD:<CALL>:<NO-OP>:org.joda.time.convert.ReadableIntervalConverter@setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology):70:writablePeriod.setValue(i, values[i]) |==> <NO-OP>
11776:LVR:TRUE:FALSE:org.joda.time.convert.ReadableIntervalConverter@isReadableInterval(java.lang.Object,org.joda.time.Chronology):86:true |==> false
11777:STD:<CALL>:<NO-OP>:org.joda.time.convert.ReadableIntervalConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):100:writableInterval.setInterval(input) |==> <NO-OP>
11778:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.convert.ReadableIntervalConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):101:chrono != null |==> true
11779:STD:<CALL>:<NO-OP>:org.joda.time.convert.ReadableIntervalConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):102:writableInterval.setChronology(chrono) |==> <NO-OP>
11780:STD:<CALL>:<NO-OP>:org.joda.time.convert.ReadableIntervalConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):104:writableInterval.setChronology(input.getChronology()) |==> <NO-OP>
11781:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.convert.ReadablePartialConverter@getChronology(java.lang.Object,org.joda.time.Chronology):67:chrono == null |==> false
11782:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ReadablePartialConverter@getChronology(java.lang.Object,org.joda.time.Chronology):68:chrono = ((ReadablePartial)object).getChronology() |==> <NO-OP>
11783:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ReadablePartialConverter@getChronology(java.lang.Object,org.joda.time.Chronology):69:chrono = DateTimeUtils.getChronology(chrono) |==> <NO-OP>
11784:LVR:0:POS:org.joda.time.convert.ReadablePartialConverter@getPartialValues(org.joda.time.ReadablePartial,java.lang.Object,org.joda.time.Chronology):90:0 |==> 1
11785:LVR:0:NEG:org.joda.time.convert.ReadablePartialConverter@getPartialValues(org.joda.time.ReadablePartial,java.lang.Object,org.joda.time.Chronology):90:0 |==> -1
11786:ROR:<(int,int):!=(int,int):org.joda.time.convert.ReadablePartialConverter@getPartialValues(org.joda.time.ReadablePartial,java.lang.Object,org.joda.time.Chronology):90:i < size |==> i != size
11787:ROR:<(int,int):<=(int,int):org.joda.time.convert.ReadablePartialConverter@getPartialValues(org.joda.time.ReadablePartial,java.lang.Object,org.joda.time.Chronology):90:i < size |==> i <= size
11788:ROR:<(int,int):FALSE(int,int):org.joda.time.convert.ReadablePartialConverter@getPartialValues(org.joda.time.ReadablePartial,java.lang.Object,org.joda.time.Chronology):90:i < size |==> false
11789:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.ReadablePartialConverter@getPartialValues(org.joda.time.ReadablePartial,java.lang.Object,org.joda.time.Chronology):91:values[i] = input.get(fieldSource.getFieldType(i)) |==> <NO-OP>
11790:STD:<CALL>:<NO-OP>:org.joda.time.convert.ReadablePartialConverter@getPartialValues(org.joda.time.ReadablePartial,java.lang.Object,org.joda.time.Chronology):93:chrono.validate(fieldSource, values) |==> <NO-OP>
11791:STD:<CALL>:<NO-OP>:org.joda.time.convert.ReadablePeriodConverter@setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology):58:duration.setPeriod((ReadablePeriod)object) |==> <NO-OP>
11792:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.convert.StringConverter@getPartialValues(org.joda.time.ReadablePartial,java.lang.Object,org.joda.time.Chronology,org.joda.time.format.DateTimeFormatter):84:parser.getZone() != null |==> true
11793:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.StringConverter@getPartialValues(org.joda.time.ReadablePartial,java.lang.Object,org.joda.time.Chronology,org.joda.time.format.DateTimeFormatter):85:chrono = chrono.withZone(parser.getZone()) |==> <NO-OP>
11794:LVR:POS:0:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):105:4 |==> 0
11795:LVR:POS:NEG:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):105:4 |==> -4
11796:ROR:>=(int,int):==(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):105:len >= 4 |==> len == 4
11797:ROR:>=(int,int):>(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):105:len >= 4 |==> len > 4
11798:ROR:>=(int,int):TRUE(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):105:len >= 4 |==> true
11799:LVR:0:POS:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):106:0 |==> 1
11800:LVR:0:NEG:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):106:0 |==> -1
11801:ROR:==(int,int):<=(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):106:str.charAt(0) == 'P' |==> str.charAt(0) <= 'P'
11802:ROR:==(int,int):>=(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):106:str.charAt(0) == 'P' |==> str.charAt(0) >= 'P'
11803:ROR:==(int,int):FALSE(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):106:str.charAt(0) == 'P' |==> false
11804:LVR:0:POS:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):106:0 |==> 1
11805:LVR:0:NEG:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):106:0 |==> -1
11806:ROR:==(int,int):<=(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):106:str.charAt(0) == 'p' |==> str.charAt(0) <= 'p'
11807:ROR:==(int,int):>=(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):106:str.charAt(0) == 'p' |==> str.charAt(0) >= 'p'
11808:ROR:==(int,int):FALSE(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):106:str.charAt(0) == 'p' |==> false
11809:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):106:str.charAt(0) == 'P' || str.charAt(0) == 'p' |==> str.charAt(0) == 'P' != (str.charAt(0) == 'p')
11810:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):106:str.charAt(0) == 'P' || str.charAt(0) == 'p' |==> str.charAt(0) == 'P'
11811:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):106:str.charAt(0) == 'P' || str.charAt(0) == 'p' |==> str.charAt(0) == 'p'
11812:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):106:str.charAt(0) == 'P' || str.charAt(0) == 'p' |==> true
11813:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):105:len >= 4 && (str.charAt(0) == 'P' || str.charAt(0) == 'p') |==> len >= 4 == (str.charAt(0) == 'P' || str.charAt(0) == 'p')
11814:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):105:len >= 4 && (str.charAt(0) == 'P' || str.charAt(0) == 'p') |==> false
11815:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):105:len >= 4 && (str.charAt(0) == 'P' || str.charAt(0) == 'p') |==> len >= 4
11816:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):106:len >= 4 && (str.charAt(0) == 'P' || str.charAt(0) == 'p') |==> (str.charAt(0) == 'P' || str.charAt(0) == 'p')
11817:LVR:POS:0:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):107:1 |==> 0
11818:LVR:POS:NEG:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):107:1 |==> -1
11819:ROR:==(int,int):<=(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):107:str.charAt(1) == 'T' |==> str.charAt(1) <= 'T'
11820:ROR:==(int,int):>=(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):107:str.charAt(1) == 'T' |==> str.charAt(1) >= 'T'
11821:ROR:==(int,int):FALSE(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):107:str.charAt(1) == 'T' |==> false
11822:LVR:POS:0:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):107:1 |==> 0
11823:LVR:POS:NEG:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):107:1 |==> -1
11824:ROR:==(int,int):<=(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):107:str.charAt(1) == 't' |==> str.charAt(1) <= 't'
11825:ROR:==(int,int):>=(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):107:str.charAt(1) == 't' |==> str.charAt(1) >= 't'
11826:ROR:==(int,int):FALSE(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):107:str.charAt(1) == 't' |==> false
11827:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):107:str.charAt(1) == 'T' || str.charAt(1) == 't' |==> str.charAt(1) == 'T' != (str.charAt(1) == 't')
11828:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):107:str.charAt(1) == 'T' || str.charAt(1) == 't' |==> str.charAt(1) == 'T'
11829:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):107:str.charAt(1) == 'T' || str.charAt(1) == 't' |==> str.charAt(1) == 't'
11830:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):107:str.charAt(1) == 'T' || str.charAt(1) == 't' |==> true
11831:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):105:len >= 4 && (str.charAt(0) == 'P' || str.charAt(0) == 'p') && (str.charAt(1) == 'T' || str.charAt(1) == 't') |==> (len >= 4 && (str.charAt(0) == 'P' || str.charAt(0) == 'p')) == (str.charAt(1) == 'T' || str.charAt(1) == 't')
11832:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):106:len >= 4 && (str.charAt(0) == 'P' || str.charAt(0) == 'p') && (str.charAt(1) == 'T' || str.charAt(1) == 't') |==> false
11833:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):105:len >= 4 && (str.charAt(0) == 'P' || str.charAt(0) == 'p') && (str.charAt(1) == 'T' || str.charAt(1) == 't') |==> len >= 4 && (str.charAt(0) == 'P' || str.charAt(0) == 'p')
11834:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):107:len >= 4 && (str.charAt(0) == 'P' || str.charAt(0) == 'p') && (str.charAt(1) == 'T' || str.charAt(1) == 't') |==> (str.charAt(1) == 'T' || str.charAt(1) == 't')
11835:LVR:POS:0:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):108:1 |==> 0
11836:LVR:POS:NEG:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):108:1 |==> -1
11837:AOR:-(int,int):%(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):108:len - 1 |==> len % 1
11838:AOR:-(int,int):*(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):108:len - 1 |==> len * 1
11839:AOR:-(int,int):+(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):108:len - 1 |==> len + 1
11840:AOR:-(int,int):/(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):108:len - 1 |==> len / 1
11841:ROR:==(int,int):<=(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):108:str.charAt(len - 1) == 'S' |==> str.charAt(len - 1) <= 'S'
11842:ROR:==(int,int):>=(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):108:str.charAt(len - 1) == 'S' |==> str.charAt(len - 1) >= 'S'
11843:ROR:==(int,int):FALSE(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):108:str.charAt(len - 1) == 'S' |==> false
11844:LVR:POS:0:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):108:1 |==> 0
11845:LVR:POS:NEG:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):108:1 |==> -1
11846:AOR:-(int,int):%(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):108:len - 1 |==> len % 1
11847:AOR:-(int,int):*(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):108:len - 1 |==> len * 1
11848:AOR:-(int,int):+(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):108:len - 1 |==> len + 1
11849:AOR:-(int,int):/(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):108:len - 1 |==> len / 1
11850:ROR:==(int,int):<=(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):108:str.charAt(len - 1) == 's' |==> str.charAt(len - 1) <= 's'
11851:ROR:==(int,int):>=(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):108:str.charAt(len - 1) == 's' |==> str.charAt(len - 1) >= 's'
11852:ROR:==(int,int):FALSE(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):108:str.charAt(len - 1) == 's' |==> false
11853:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):108:str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's' |==> str.charAt(len - 1) == 'S' != (str.charAt(len - 1) == 's')
11854:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):108:str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's' |==> str.charAt(len - 1) == 'S'
11855:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):108:str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's' |==> str.charAt(len - 1) == 's'
11856:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):108:str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's' |==> true
11857:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):105:len >= 4 && (str.charAt(0) == 'P' || str.charAt(0) == 'p') && (str.charAt(1) == 'T' || str.charAt(1) == 't') && (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's') |==> (len >= 4 && (str.charAt(0) == 'P' || str.charAt(0) == 'p') && (str.charAt(1) == 'T' || str.charAt(1) == 't')) == (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')
11858:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):107:len >= 4 && (str.charAt(0) == 'P' || str.charAt(0) == 'p') && (str.charAt(1) == 'T' || str.charAt(1) == 't') && (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's') |==> false
11859:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):105:len >= 4 && (str.charAt(0) == 'P' || str.charAt(0) == 'p') && (str.charAt(1) == 'T' || str.charAt(1) == 't') && (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's') |==> len >= 4 && (str.charAt(0) == 'P' || str.charAt(0) == 'p') && (str.charAt(1) == 'T' || str.charAt(1) == 't')
11860:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):108:len >= 4 && (str.charAt(0) == 'P' || str.charAt(0) == 'p') && (str.charAt(1) == 'T' || str.charAt(1) == 't') && (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's') |==> (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')
11861:LVR:POS:0:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):113:2 |==> 0
11862:LVR:POS:NEG:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):113:2 |==> -2
11863:LVR:POS:0:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):113:1 |==> 0
11864:LVR:POS:NEG:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):113:1 |==> -1
11865:AOR:-(int,int):%(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):113:len - 1 |==> len % 1
11866:AOR:-(int,int):*(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):113:len - 1 |==> len * 1
11867:AOR:-(int,int):+(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):113:len - 1 |==> len + 1
11868:AOR:-(int,int):/(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):113:len - 1 |==> len / 1
11869:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):113:str = str.substring(2, len - 1) |==> <NO-OP>
11870:LVR:NEG:0:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):114:-1 |==> 0
11871:LVR:NEG:POS:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):114:-1 |==> 1
11872:LVR:FALSE:TRUE:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):115:false |==> true
11873:LVR:0:POS:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):116:0 |==> 1
11874:LVR:0:NEG:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):116:0 |==> -1
11875:ROR:<(int,int):!=(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):116:i < str.length() |==> i != str.length()
11876:ROR:<(int,int):<=(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):116:i < str.length() |==> i <= str.length()
11877:ROR:<(int,int):FALSE(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):116:i < str.length() |==> false
11878:ROR:>=(int,int):==(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):117:str.charAt(i) >= '0' |==> str.charAt(i) == '0'
11879:ROR:>=(int,int):>(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):117:str.charAt(i) >= '0' |==> str.charAt(i) > '0'
11880:ROR:>=(int,int):TRUE(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):117:str.charAt(i) >= '0' |==> true
11881:ROR:<=(int,int):<(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):117:str.charAt(i) <= '9' |==> str.charAt(i) < '9'
11882:ROR:<=(int,int):==(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):117:str.charAt(i) <= '9' |==> str.charAt(i) == '9'
11883:ROR:<=(int,int):TRUE(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):117:str.charAt(i) <= '9' |==> true
11884:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):117:str.charAt(i) >= '0' && str.charAt(i) <= '9' |==> str.charAt(i) >= '0' == str.charAt(i) <= '9'
11885:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):117:str.charAt(i) >= '0' && str.charAt(i) <= '9' |==> false
11886:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):117:str.charAt(i) >= '0' && str.charAt(i) <= '9' |==> str.charAt(i) >= '0'
11887:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):117:str.charAt(i) >= '0' && str.charAt(i) <= '9' |==> str.charAt(i) <= '9'
11888:LVR:0:POS:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):119:0 |==> 1
11889:LVR:0:NEG:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):119:0 |==> -1
11890:ROR:==(int,int):<=(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):119:i == 0 |==> i <= 0
11891:ROR:==(int,int):>=(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):119:i == 0 |==> i >= 0
11892:ROR:==(int,int):FALSE(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):119:i == 0 |==> false
11893:LVR:0:POS:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):119:0 |==> 1
11894:LVR:0:NEG:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):119:0 |==> -1
11895:ROR:==(int,int):<=(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):119:str.charAt(0) == '-' |==> str.charAt(0) <= '-'
11896:ROR:==(int,int):>=(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):119:str.charAt(0) == '-' |==> str.charAt(0) >= '-'
11897:ROR:==(int,int):FALSE(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):119:str.charAt(0) == '-' |==> false
11898:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):119:i == 0 && str.charAt(0) == '-' |==> i == 0 == (str.charAt(0) == '-')
11899:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):119:i == 0 && str.charAt(0) == '-' |==> false
11900:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):119:i == 0 && str.charAt(0) == '-' |==> i == 0
11901:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):119:i == 0 && str.charAt(0) == '-' |==> str.charAt(0) == '-'
11902:LVR:TRUE:FALSE:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):121:true |==> false
11903:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):121:negative = true |==> <NO-OP>
11904:COR:negative:TRUE:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):122:negative |==> false
11905:COR:negative:FALSE:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):122:negative |==> true
11906:LVR:POS:0:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):122:1 |==> 0
11907:LVR:POS:NEG:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):122:1 |==> -1
11908:LVR:0:POS:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):122:0 |==> 1
11909:LVR:0:NEG:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):122:0 |==> -1
11910:ROR:>(int,int):!=(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):122:i > (negative ? 1 : 0) |==> i != (negative ? 1 : 0)
11911:ROR:>(int,int):>=(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):122:i > (negative ? 1 : 0) |==> i >= (negative ? 1 : 0)
11912:ROR:>(int,int):FALSE(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):122:i > (negative ? 1 : 0) |==> false
11913:ROR:==(int,int):<=(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):122:str.charAt(i) == '.' |==> str.charAt(i) <= '.'
11914:ROR:==(int,int):>=(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):122:str.charAt(i) == '.' |==> str.charAt(i) >= '.'
11915:ROR:==(int,int):FALSE(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):122:str.charAt(i) == '.' |==> false
11916:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):122:i > (negative ? 1 : 0) && str.charAt(i) == '.' |==> i > (negative ? 1 : 0) == (str.charAt(i) == '.')
11917:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):122:i > (negative ? 1 : 0) && str.charAt(i) == '.' |==> false
11918:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):122:i > (negative ? 1 : 0) && str.charAt(i) == '.' |==> i > (negative ? 1 : 0)
11919:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):122:i > (negative ? 1 : 0) && str.charAt(i) == '.' |==> str.charAt(i) == '.'
11920:LVR:NEG:0:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):122:-1 |==> 0
11921:LVR:NEG:POS:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):122:-1 |==> 1
11922:ROR:==(int,int):<=(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):122:dot == -1 |==> dot <= -1
11923:ROR:==(int,int):>=(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):122:dot == -1 |==> dot >= -1
11924:ROR:==(int,int):FALSE(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):122:dot == -1 |==> false
11925:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):122:i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1 |==> (i > (negative ? 1 : 0) && str.charAt(i) == '.') == (dot == -1)
11926:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):122:i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1 |==> false
11927:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):122:i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1 |==> i > (negative ? 1 : 0) && str.charAt(i) == '.'
11928:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):122:i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1 |==> dot == -1
11929:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):124:dot = i |==> <NO-OP>
11930:LVR:0:POS:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):129:0 |==> 1
11931:LVR:0:NEG:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):129:0 |==> -1
11932:LVR:0:POS:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):129:0 |==> 1
11933:LVR:0:NEG:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):129:0 |==> -1
11934:COR:negative:TRUE:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):130:negative |==> false
11935:COR:negative:FALSE:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):130:negative |==> true
11936:LVR:POS:0:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):130:1 |==> 0
11937:LVR:POS:NEG:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):130:1 |==> -1
11938:LVR:0:POS:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):130:0 |==> 1
11939:LVR:0:NEG:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):130:0 |==> -1
11940:LVR:0:POS:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):131:0 |==> 1
11941:LVR:0:NEG:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):131:0 |==> -1
11942:ROR:>(int,int):!=(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):131:dot > 0 |==> dot != 0
11943:ROR:>(int,int):>=(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):131:dot > 0 |==> dot >= 0
11944:ROR:>(int,int):FALSE(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):131:dot > 0 |==> false
11945:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):132:seconds = Long.parseLong(str.substring(firstDigit, dot)) |==> <NO-OP>
11946:LVR:POS:0:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):133:1 |==> 0
11947:LVR:POS:NEG:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):133:1 |==> -1
11948:AOR:+(int,int):%(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):133:dot + 1 |==> dot % 1
11949:AOR:+(int,int):*(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):133:dot + 1 |==> dot * 1
11950:AOR:+(int,int):-(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):133:dot + 1 |==> dot - 1
11951:AOR:+(int,int):/(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):133:dot + 1 |==> dot / 1
11952:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):133:str = str.substring(dot + 1) |==> <NO-OP>
11953:LVR:POS:0:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):134:3 |==> 0
11954:LVR:POS:NEG:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):134:3 |==> -3
11955:ROR:!=(int,int):<(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):134:str.length() != 3 |==> str.length() < 3
11956:ROR:!=(int,int):>(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):134:str.length() != 3 |==> str.length() > 3
11957:ROR:!=(int,int):TRUE(int,int):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):134:str.length() != 3 |==> true
11958:LVR:0:POS:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):135:0 |==> 1
11959:LVR:0:NEG:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):135:0 |==> -1
11960:LVR:POS:0:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):135:3 |==> 0
11961:LVR:POS:NEG:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):135:3 |==> -3
11962:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):135:str = (str + "000").substring(0, 3) |==> <NO-OP>
11963:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):137:millis = Integer.parseInt(str) |==> <NO-OP>
11964:COR:negative:TRUE:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):138:negative |==> false
11965:COR:negative:FALSE:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):138:negative |==> true
11966:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):139:seconds = Long.parseLong(str.substring(firstDigit, str.length())) |==> <NO-OP>
11967:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):141:seconds = Long.parseLong(str) |==> <NO-OP>
11968:COR:negative:TRUE:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):143:negative |==> false
11969:COR:negative:FALSE:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):143:negative |==> true
11970:ORU:-(long):+(long):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):144:-seconds |==> +seconds
11971:ORU:-(long):~(long):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):144:-seconds |==> ~seconds
11972:LVR:POS:0:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):144:1000 |==> 0
11973:LVR:POS:NEG:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):144:1000 |==> -1000
11974:ORU:-(long):+(long):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):144:-millis |==> +millis
11975:ORU:-(long):~(long):org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):144:-millis |==> ~millis
11976:LVR:POS:0:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):146:1000 |==> 0
11977:LVR:POS:NEG:org.joda.time.convert.StringConverter@getDurationMillis(java.lang.Object):146:1000 |==> -1000
11978:STD:<CALL>:<NO-OP>:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology):164:period.clear() |==> <NO-OP>
11979:LVR:0:POS:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology):165:0 |==> 1
11980:LVR:0:NEG:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology):165:0 |==> -1
11981:ROR:<(int,int):!=(int,int):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology):166:pos < str.length() |==> pos != str.length()
11982:ROR:<(int,int):<=(int,int):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology):166:pos < str.length() |==> pos <= str.length()
11983:ROR:<(int,int):FALSE(int,int):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology):166:pos < str.length() |==> false
11984:LVR:0:POS:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology):167:0 |==> 1
11985:LVR:0:NEG:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology):167:0 |==> -1
11986:ROR:<(int,int):!=(int,int):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology):167:pos < 0 |==> pos != 0
11987:ROR:<(int,int):<=(int,int):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology):167:pos < 0 |==> pos <= 0
11988:ROR:<(int,int):FALSE(int,int):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology):167:pos < 0 |==> false
11989:STD:<CALL>:<NO-OP>:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology):169:parser.withParseType(period.getPeriodType()).parseMutablePeriod(str) |==> <NO-OP>
11990:LVR:0:POS:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):187:0 |==> 1
11991:LVR:0:NEG:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):187:0 |==> -1
11992:ROR:<(int,int):!=(int,int):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):187:separator < 0 |==> separator != 0
11993:ROR:<(int,int):<=(int,int):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):187:separator < 0 |==> separator <= 0
11994:ROR:<(int,int):FALSE(int,int):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):187:separator < 0 |==> false
11995:LVR:0:POS:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):191:0 |==> 1
11996:LVR:0:NEG:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):191:0 |==> -1
11997:LVR:0:POS:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):192:0 |==> 1
11998:LVR:0:NEG:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):192:0 |==> -1
11999:ROR:<=(int,int):<(int,int):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):192:leftStr.length() <= 0 |==> leftStr.length() < 0
12000:ROR:<=(int,int):==(int,int):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):192:leftStr.length() <= 0 |==> leftStr.length() == 0
12001:ROR:<=(int,int):TRUE(int,int):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):192:leftStr.length() <= 0 |==> true
12002:LVR:POS:0:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):195:1 |==> 0
12003:LVR:POS:NEG:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):195:1 |==> -1
12004:AOR:+(int,int):%(int,int):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):195:separator + 1 |==> separator % 1
12005:AOR:+(int,int):*(int,int):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):195:separator + 1 |==> separator * 1
12006:AOR:+(int,int):-(int,int):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):195:separator + 1 |==> separator - 1
12007:AOR:+(int,int):/(int,int):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):195:separator + 1 |==> separator / 1
12008:LVR:0:POS:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):196:0 |==> 1
12009:LVR:0:NEG:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):196:0 |==> -1
12010:ROR:<=(int,int):<(int,int):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):196:rightStr.length() <= 0 |==> rightStr.length() < 0
12011:ROR:<=(int,int):==(int,int):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):196:rightStr.length() <= 0 |==> rightStr.length() == 0
12012:ROR:<=(int,int):TRUE(int,int):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):196:rightStr.length() <= 0 |==> true
12013:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):201:dateTimeParser = dateTimeParser.withChronology(chrono) |==> <NO-OP>
12014:LVR:0:POS:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):203:0 |==> 1
12015:LVR:0:NEG:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):203:0 |==> -1
12016:LVR:0:POS:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):203:0 |==> 1
12017:LVR:0:NEG:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):203:0 |==> -1
12018:LVR:0:POS:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):208:0 |==> 1
12019:LVR:0:NEG:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):208:0 |==> -1
12020:ROR:==(int,int):<=(int,int):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):209:c == 'P' |==> c <= 'P'
12021:ROR:==(int,int):>=(int,int):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):209:c == 'P' |==> c >= 'P'
12022:ROR:==(int,int):FALSE(int,int):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):209:c == 'P' |==> false
12023:ROR:==(int,int):<=(int,int):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):209:c == 'p' |==> c <= 'p'
12024:ROR:==(int,int):>=(int,int):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):209:c == 'p' |==> c >= 'p'
12025:ROR:==(int,int):FALSE(int,int):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):209:c == 'p' |==> false
12026:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):209:c == 'P' || c == 'p' |==> c == 'P' != (c == 'p')
12027:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):209:c == 'P' || c == 'p' |==> c == 'P'
12028:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):209:c == 'P' || c == 'p' |==> c == 'p'
12029:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):209:c == 'P' || c == 'p' |==> true
12030:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):210:period = periodParser.withParseType(getPeriodType(leftStr)).parsePeriod(leftStr) |==> <NO-OP>
12031:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):213:startInstant = start.getMillis() |==> <NO-OP>
12032:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):214:parsedChrono = start.getChronology() |==> <NO-OP>
12033:LVR:0:POS:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):218:0 |==> 1
12034:LVR:0:NEG:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):218:0 |==> -1
12035:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):218:c = rightStr.charAt(0) |==> <NO-OP>
12036:ROR:==(int,int):<=(int,int):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):219:c == 'P' |==> c <= 'P'
12037:ROR:==(int,int):>=(int,int):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):219:c == 'P' |==> c >= 'P'
12038:ROR:==(int,int):FALSE(int,int):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):219:c == 'P' |==> false
12039:ROR:==(int,int):<=(int,int):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):219:c == 'p' |==> c <= 'p'
12040:ROR:==(int,int):>=(int,int):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):219:c == 'p' |==> c >= 'p'
12041:ROR:==(int,int):FALSE(int,int):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):219:c == 'p' |==> false
12042:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):219:c == 'P' || c == 'p' |==> c == 'P' != (c == 'p')
12043:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):219:c == 'P' || c == 'p' |==> c == 'P'
12044:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):219:c == 'P' || c == 'p' |==> c == 'p'
12045:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):219:c == 'P' || c == 'p' |==> true
12046:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):220:period != null |==> true
12047:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):223:period = periodParser.withParseType(getPeriodType(rightStr)).parsePeriod(rightStr) |==> <NO-OP>
12048:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):224:chrono != null |==> true
12049:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):224:chrono = (chrono != null ? chrono : parsedChrono) |==> <NO-OP>
12050:LVR:POS:0:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):225:1 |==> 0
12051:LVR:POS:NEG:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):225:1 |==> -1
12052:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):225:endInstant = chrono.add(period, startInstant, 1) |==> <NO-OP>
12053:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):228:endInstant = end.getMillis() |==> <NO-OP>
12054:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):229:parsedChrono != null |==> true
12055:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):229:parsedChrono = (parsedChrono != null ? parsedChrono : end.getChronology()) |==> <NO-OP>
12056:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):230:chrono != null |==> true
12057:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):230:chrono = (chrono != null ? chrono : parsedChrono) |==> <NO-OP>
12058:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):231:period != null |==> true
12059:LVR:NEG:0:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):232:-1 |==> 0
12060:LVR:NEG:POS:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):232:-1 |==> 1
12061:STD:<ASSIGN>:<NO-OP>:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):232:startInstant = chrono.add(period, endInstant, -1) |==> <NO-OP>
12062:STD:<CALL>:<NO-OP>:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):236:writableInterval.setInterval(startInstant, endInstant) |==> <NO-OP>
12063:STD:<CALL>:<NO-OP>:org.joda.time.convert.StringConverter@setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology):237:writableInterval.setChronology(chrono) |==> <NO-OP>
12064:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.DelegatedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):76:field == null |==> false
12065:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.DelegatedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):81:type == null |==> false
12066:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.field.DelegatedDateTimeField@getRangeDurationField():210:iRangeDurationField != null |==> true
12067:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.DelegatedDurationField@<init>(org.joda.time.DurationField,org.joda.time.DurationFieldType):61:field == null |==> false
12068:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.DelegatedDurationField@<init>(org.joda.time.DurationField,org.joda.time.DurationFieldType):65:type == null |==> false
12069:LVR:FALSE:TRUE:org.joda.time.field.DelegatedDurationField@equals(java.lang.Object):157:false |==> true
12070:LOR:^(int,int):&(int,int):org.joda.time.field.DelegatedDurationField@hashCode():161:iField.hashCode() ^ iType.hashCode() |==> iField.hashCode() & iType.hashCode()
12071:LOR:^(int,int):|(int,int):org.joda.time.field.DelegatedDurationField@hashCode():161:iField.hashCode() ^ iType.hashCode() |==> iField.hashCode() | iType.hashCode()
12072:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.DelegatedDurationField@toString():165:iType == null |==> false
12073:LVR:POS:0:org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):73:2 |==> 0
12074:LVR:POS:NEG:org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):73:2 |==> -2
12075:ROR:<(int,int):!=(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):73:divisor < 2 |==> divisor != 2
12076:ROR:<(int,int):<=(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):73:divisor < 2 |==> divisor <= 2
12077:ROR:<(int,int):FALSE(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):73:divisor < 2 |==> false
12078:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):77:unitField == null |==> false
12079:LVR:0:POS:org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):86:0 |==> 1
12080:LVR:0:NEG:org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):86:0 |==> -1
12081:ROR:>=(int,int):==(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):86:i >= 0 |==> i == 0
12082:ROR:>=(int,int):>(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):86:i >= 0 |==> i > 0
12083:ROR:>=(int,int):TRUE(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):86:i >= 0 |==> true
12084:AOR:/(int,int):%(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):86:i / divisor |==> i % divisor
12085:AOR:/(int,int):*(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):86:i / divisor |==> i * divisor
12086:AOR:/(int,int):+(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):86:i / divisor |==> i + divisor
12087:AOR:/(int,int):-(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):86:i / divisor |==> i - divisor
12088:LVR:POS:0:org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):86:1 |==> 0
12089:LVR:POS:NEG:org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):86:1 |==> -1
12090:AOR:+(int,int):%(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):86:i + 1 |==> i % 1
12091:AOR:+(int,int):*(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):86:i + 1 |==> i * 1
12092:AOR:+(int,int):-(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):86:i + 1 |==> i - 1
12093:AOR:+(int,int):/(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):86:i + 1 |==> i / 1
12094:AOR:/(int,int):%(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):86:(i + 1) / divisor |==> (i + 1) % divisor
12095:AOR:/(int,int):*(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):86:(i + 1) / divisor |==> (i + 1) * divisor
12096:AOR:/(int,int):+(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):86:(i + 1) / divisor |==> (i + 1) + divisor
12097:AOR:/(int,int):-(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):86:(i + 1) / divisor |==> (i + 1) - divisor
12098:LVR:POS:0:org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):86:1 |==> 0
12099:LVR:POS:NEG:org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):86:1 |==> -1
12100:AOR:-(int,int):%(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):86:(i + 1) / divisor - 1 |==> (i + 1) / divisor % 1
12101:AOR:-(int,int):*(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):86:(i + 1) / divisor - 1 |==> (i + 1) / divisor * 1
12102:AOR:-(int,int):+(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):86:(i + 1) / divisor - 1 |==> (i + 1) / divisor + 1
12103:AOR:-(int,int):/(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):86:(i + 1) / divisor - 1 |==> (i + 1) / divisor / 1
12104:LVR:0:POS:org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):88:0 |==> 1
12105:LVR:0:NEG:org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):88:0 |==> -1
12106:ROR:>=(int,int):==(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):88:j >= 0 |==> j == 0
12107:ROR:>=(int,int):>(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):88:j >= 0 |==> j > 0
12108:ROR:>=(int,int):TRUE(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):88:j >= 0 |==> true
12109:AOR:/(int,int):%(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):88:j / divisor |==> j % divisor
12110:AOR:/(int,int):*(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):88:j / divisor |==> j * divisor
12111:AOR:/(int,int):+(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):88:j / divisor |==> j + divisor
12112:AOR:/(int,int):-(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):88:j / divisor |==> j - divisor
12113:LVR:POS:0:org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):88:1 |==> 0
12114:LVR:POS:NEG:org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):88:1 |==> -1
12115:AOR:+(int,int):%(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):88:j + 1 |==> j % 1
12116:AOR:+(int,int):*(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):88:j + 1 |==> j * 1
12117:AOR:+(int,int):-(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):88:j + 1 |==> j - 1
12118:AOR:+(int,int):/(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):88:j + 1 |==> j / 1
12119:AOR:/(int,int):%(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):88:(j + 1) / divisor |==> (j + 1) % divisor
12120:AOR:/(int,int):*(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):88:(j + 1) / divisor |==> (j + 1) * divisor
12121:AOR:/(int,int):+(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):88:(j + 1) / divisor |==> (j + 1) + divisor
12122:AOR:/(int,int):-(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):88:(j + 1) / divisor |==> (j + 1) - divisor
12123:LVR:POS:0:org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):88:1 |==> 0
12124:LVR:POS:NEG:org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):88:1 |==> -1
12125:AOR:-(int,int):%(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):88:(j + 1) / divisor - 1 |==> (j + 1) / divisor % 1
12126:AOR:-(int,int):*(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):88:(j + 1) / divisor - 1 |==> (j + 1) / divisor * 1
12127:AOR:-(int,int):+(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):88:(j + 1) / divisor - 1 |==> (j + 1) / divisor + 1
12128:AOR:-(int,int):/(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):88:(j + 1) / divisor - 1 |==> (j + 1) / divisor / 1
12129:LVR:0:POS:org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):119:0 |==> 1
12130:LVR:0:NEG:org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):119:0 |==> -1
12131:ROR:>=(int,int):==(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):119:i >= 0 |==> i == 0
12132:ROR:>=(int,int):>(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):119:i >= 0 |==> i > 0
12133:ROR:>=(int,int):TRUE(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):119:i >= 0 |==> true
12134:AOR:/(int,int):%(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):119:i / divisor |==> i % divisor
12135:AOR:/(int,int):*(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):119:i / divisor |==> i * divisor
12136:AOR:/(int,int):+(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):119:i / divisor |==> i + divisor
12137:AOR:/(int,int):-(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):119:i / divisor |==> i - divisor
12138:LVR:POS:0:org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):119:1 |==> 0
12139:LVR:POS:NEG:org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):119:1 |==> -1
12140:AOR:+(int,int):%(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):119:i + 1 |==> i % 1
12141:AOR:+(int,int):*(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):119:i + 1 |==> i * 1
12142:AOR:+(int,int):-(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):119:i + 1 |==> i - 1
12143:AOR:+(int,int):/(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):119:i + 1 |==> i / 1
12144:AOR:/(int,int):%(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):119:(i + 1) / divisor |==> (i + 1) % divisor
12145:AOR:/(int,int):*(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):119:(i + 1) / divisor |==> (i + 1) * divisor
12146:AOR:/(int,int):+(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):119:(i + 1) / divisor |==> (i + 1) + divisor
12147:AOR:/(int,int):-(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):119:(i + 1) / divisor |==> (i + 1) - divisor
12148:LVR:POS:0:org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):119:1 |==> 0
12149:LVR:POS:NEG:org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):119:1 |==> -1
12150:AOR:-(int,int):%(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):119:(i + 1) / divisor - 1 |==> (i + 1) / divisor % 1
12151:AOR:-(int,int):*(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):119:(i + 1) / divisor - 1 |==> (i + 1) / divisor * 1
12152:AOR:-(int,int):+(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):119:(i + 1) / divisor - 1 |==> (i + 1) / divisor + 1
12153:AOR:-(int,int):/(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):119:(i + 1) / divisor - 1 |==> (i + 1) / divisor / 1
12154:LVR:0:POS:org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):121:0 |==> 1
12155:LVR:0:NEG:org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):121:0 |==> -1
12156:ROR:>=(int,int):==(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):121:j >= 0 |==> j == 0
12157:ROR:>=(int,int):>(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):121:j >= 0 |==> j > 0
12158:ROR:>=(int,int):TRUE(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):121:j >= 0 |==> true
12159:AOR:/(int,int):%(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):121:j / divisor |==> j % divisor
12160:AOR:/(int,int):*(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):121:j / divisor |==> j * divisor
12161:AOR:/(int,int):+(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):121:j / divisor |==> j + divisor
12162:AOR:/(int,int):-(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):121:j / divisor |==> j - divisor
12163:LVR:POS:0:org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):121:1 |==> 0
12164:LVR:POS:NEG:org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):121:1 |==> -1
12165:AOR:+(int,int):%(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):121:j + 1 |==> j % 1
12166:AOR:+(int,int):*(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):121:j + 1 |==> j * 1
12167:AOR:+(int,int):-(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):121:j + 1 |==> j - 1
12168:AOR:+(int,int):/(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):121:j + 1 |==> j / 1
12169:AOR:/(int,int):%(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):121:(j + 1) / divisor |==> (j + 1) % divisor
12170:AOR:/(int,int):*(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):121:(j + 1) / divisor |==> (j + 1) * divisor
12171:AOR:/(int,int):+(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):121:(j + 1) / divisor |==> (j + 1) + divisor
12172:AOR:/(int,int):-(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):121:(j + 1) / divisor |==> (j + 1) - divisor
12173:LVR:POS:0:org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):121:1 |==> 0
12174:LVR:POS:NEG:org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):121:1 |==> -1
12175:AOR:-(int,int):%(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):121:(j + 1) / divisor - 1 |==> (j + 1) / divisor % 1
12176:AOR:-(int,int):*(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):121:(j + 1) / divisor - 1 |==> (j + 1) / divisor * 1
12177:AOR:-(int,int):+(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):121:(j + 1) / divisor - 1 |==> (j + 1) / divisor + 1
12178:AOR:-(int,int):/(int,int):org.joda.time.field.DividedDateTimeField@<init>(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType):121:(j + 1) / divisor - 1 |==> (j + 1) / divisor / 1
12179:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.field.DividedDateTimeField@getRangeDurationField():128:iRangeDurationField != null |==> true
12180:LVR:0:POS:org.joda.time.field.DividedDateTimeField@get(long):142:0 |==> 1
12181:LVR:0:NEG:org.joda.time.field.DividedDateTimeField@get(long):142:0 |==> -1
12182:ROR:>=(int,int):==(int,int):org.joda.time.field.DividedDateTimeField@get(long):142:value >= 0 |==> value == 0
12183:ROR:>=(int,int):>(int,int):org.joda.time.field.DividedDateTimeField@get(long):142:value >= 0 |==> value > 0
12184:ROR:>=(int,int):TRUE(int,int):org.joda.time.field.DividedDateTimeField@get(long):142:value >= 0 |==> true
12185:AOR:/(int,int):%(int,int):org.joda.time.field.DividedDateTimeField@get(long):143:value / iDivisor |==> value % iDivisor
12186:AOR:/(int,int):*(int,int):org.joda.time.field.DividedDateTimeField@get(long):143:value / iDivisor |==> value * iDivisor
12187:AOR:/(int,int):+(int,int):org.joda.time.field.DividedDateTimeField@get(long):143:value / iDivisor |==> value + iDivisor
12188:AOR:/(int,int):-(int,int):org.joda.time.field.DividedDateTimeField@get(long):143:value / iDivisor |==> value - iDivisor
12189:LVR:POS:0:org.joda.time.field.DividedDateTimeField@get(long):145:1 |==> 0
12190:LVR:POS:NEG:org.joda.time.field.DividedDateTimeField@get(long):145:1 |==> -1
12191:AOR:+(int,int):%(int,int):org.joda.time.field.DividedDateTimeField@get(long):145:value + 1 |==> value % 1
12192:AOR:+(int,int):*(int,int):org.joda.time.field.DividedDateTimeField@get(long):145:value + 1 |==> value * 1
12193:AOR:+(int,int):-(int,int):org.joda.time.field.DividedDateTimeField@get(long):145:value + 1 |==> value - 1
12194:AOR:+(int,int):/(int,int):org.joda.time.field.DividedDateTimeField@get(long):145:value + 1 |==> value / 1
12195:AOR:/(int,int):%(int,int):org.joda.time.field.DividedDateTimeField@get(long):145:(value + 1) / iDivisor |==> (value + 1) % iDivisor
12196:AOR:/(int,int):*(int,int):org.joda.time.field.DividedDateTimeField@get(long):145:(value + 1) / iDivisor |==> (value + 1) * iDivisor
12197:AOR:/(int,int):+(int,int):org.joda.time.field.DividedDateTimeField@get(long):145:(value + 1) / iDivisor |==> (value + 1) + iDivisor
12198:AOR:/(int,int):-(int,int):org.joda.time.field.DividedDateTimeField@get(long):145:(value + 1) / iDivisor |==> (value + 1) - iDivisor
12199:LVR:POS:0:org.joda.time.field.DividedDateTimeField@get(long):145:1 |==> 0
12200:LVR:POS:NEG:org.joda.time.field.DividedDateTimeField@get(long):145:1 |==> -1
12201:AOR:-(int,int):%(int,int):org.joda.time.field.DividedDateTimeField@get(long):145:((value + 1) / iDivisor) - 1 |==> ((value + 1) / iDivisor) % 1
12202:AOR:-(int,int):*(int,int):org.joda.time.field.DividedDateTimeField@get(long):145:((value + 1) / iDivisor) - 1 |==> ((value + 1) / iDivisor) * 1
12203:AOR:-(int,int):+(int,int):org.joda.time.field.DividedDateTimeField@get(long):145:((value + 1) / iDivisor) - 1 |==> ((value + 1) / iDivisor) + 1
12204:AOR:-(int,int):/(int,int):org.joda.time.field.DividedDateTimeField@get(long):145:((value + 1) / iDivisor) - 1 |==> ((value + 1) / iDivisor) / 1
12205:AOR:*(int,int):%(int,int):org.joda.time.field.DividedDateTimeField@add(long,int):158:amount * iDivisor |==> amount % iDivisor
12206:AOR:*(int,int):+(int,int):org.joda.time.field.DividedDateTimeField@add(long,int):158:amount * iDivisor |==> amount + iDivisor
12207:AOR:*(int,int):-(int,int):org.joda.time.field.DividedDateTimeField@add(long,int):158:amount * iDivisor |==> amount - iDivisor
12208:AOR:*(int,int):/(int,int):org.joda.time.field.DividedDateTimeField@add(long,int):158:amount * iDivisor |==> amount / iDivisor
12209:AOR:*(long,long):%(long,long):org.joda.time.field.DividedDateTimeField@add(long,long):170:amount * iDivisor |==> amount % iDivisor
12210:AOR:*(long,long):+(long,long):org.joda.time.field.DividedDateTimeField@add(long,long):170:amount * iDivisor |==> amount + iDivisor
12211:AOR:*(long,long):-(long,long):org.joda.time.field.DividedDateTimeField@add(long,long):170:amount * iDivisor |==> amount - iDivisor
12212:AOR:*(long,long):/(long,long):org.joda.time.field.DividedDateTimeField@add(long,long):170:amount * iDivisor |==> amount / iDivisor
12213:AOR:/(int,int):%(int,int):org.joda.time.field.DividedDateTimeField@getDifference(long,long):186:getWrappedField().getDifference(minuendInstant, subtrahendInstant) / iDivisor |==> getWrappedField().getDifference(minuendInstant, subtrahendInstant) % iDivisor
12214:AOR:/(int,int):*(int,int):org.joda.time.field.DividedDateTimeField@getDifference(long,long):186:getWrappedField().getDifference(minuendInstant, subtrahendInstant) / iDivisor |==> getWrappedField().getDifference(minuendInstant, subtrahendInstant) * iDivisor
12215:AOR:/(int,int):+(int,int):org.joda.time.field.DividedDateTimeField@getDifference(long,long):186:getWrappedField().getDifference(minuendInstant, subtrahendInstant) / iDivisor |==> getWrappedField().getDifference(minuendInstant, subtrahendInstant) + iDivisor
12216:AOR:/(int,int):-(int,int):org.joda.time.field.DividedDateTimeField@getDifference(long,long):186:getWrappedField().getDifference(minuendInstant, subtrahendInstant) / iDivisor |==> getWrappedField().getDifference(minuendInstant, subtrahendInstant) - iDivisor
12217:AOR:/(long,long):%(long,long):org.joda.time.field.DividedDateTimeField@getDifferenceAsLong(long,long):190:getWrappedField().getDifferenceAsLong(minuendInstant, subtrahendInstant) / iDivisor |==> getWrappedField().getDifferenceAsLong(minuendInstant, subtrahendInstant) % iDivisor
12218:AOR:/(long,long):*(long,long):org.joda.time.field.DividedDateTimeField@getDifferenceAsLong(long,long):190:getWrappedField().getDifferenceAsLong(minuendInstant, subtrahendInstant) / iDivisor |==> getWrappedField().getDifferenceAsLong(minuendInstant, subtrahendInstant) * iDivisor
12219:AOR:/(long,long):+(long,long):org.joda.time.field.DividedDateTimeField@getDifferenceAsLong(long,long):190:getWrappedField().getDifferenceAsLong(minuendInstant, subtrahendInstant) / iDivisor |==> getWrappedField().getDifferenceAsLong(minuendInstant, subtrahendInstant) + iDivisor
12220:AOR:/(long,long):-(long,long):org.joda.time.field.DividedDateTimeField@getDifferenceAsLong(long,long):190:getWrappedField().getDifferenceAsLong(minuendInstant, subtrahendInstant) / iDivisor |==> getWrappedField().getDifferenceAsLong(minuendInstant, subtrahendInstant) - iDivisor
12221:STD:<CALL>:<NO-OP>:org.joda.time.field.DividedDateTimeField@set(long,int):202:FieldUtils.verifyValueBounds(this, value, iMin, iMax) |==> <NO-OP>
12222:AOR:*(int,int):%(int,int):org.joda.time.field.DividedDateTimeField@set(long,int):204:value * iDivisor |==> value % iDivisor
12223:AOR:*(int,int):+(int,int):org.joda.time.field.DividedDateTimeField@set(long,int):204:value * iDivisor |==> value + iDivisor
12224:AOR:*(int,int):-(int,int):org.joda.time.field.DividedDateTimeField@set(long,int):204:value * iDivisor |==> value - iDivisor
12225:AOR:*(int,int):/(int,int):org.joda.time.field.DividedDateTimeField@set(long,int):204:value * iDivisor |==> value / iDivisor
12226:AOR:+(int,int):%(int,int):org.joda.time.field.DividedDateTimeField@set(long,int):204:value * iDivisor + remainder |==> value * iDivisor % remainder
12227:AOR:+(int,int):*(int,int):org.joda.time.field.DividedDateTimeField@set(long,int):204:value * iDivisor + remainder |==> value * iDivisor * remainder
12228:AOR:+(int,int):-(int,int):org.joda.time.field.DividedDateTimeField@set(long,int):204:value * iDivisor + remainder |==> value * iDivisor - remainder
12229:AOR:+(int,int):/(int,int):org.joda.time.field.DividedDateTimeField@set(long,int):204:value * iDivisor + remainder |==> value * iDivisor / remainder
12230:AOR:*(int,int):%(int,int):org.joda.time.field.DividedDateTimeField@roundFloor(long):234:get(instant) * iDivisor |==> get(instant) % iDivisor
12231:AOR:*(int,int):+(int,int):org.joda.time.field.DividedDateTimeField@roundFloor(long):234:get(instant) * iDivisor |==> get(instant) + iDivisor
12232:AOR:*(int,int):-(int,int):org.joda.time.field.DividedDateTimeField@roundFloor(long):234:get(instant) * iDivisor |==> get(instant) - iDivisor
12233:AOR:*(int,int):/(int,int):org.joda.time.field.DividedDateTimeField@roundFloor(long):234:get(instant) * iDivisor |==> get(instant) / iDivisor
12234:LVR:0:POS:org.joda.time.field.DividedDateTimeField@getRemainder(int):251:0 |==> 1
12235:LVR:0:NEG:org.joda.time.field.DividedDateTimeField@getRemainder(int):251:0 |==> -1
12236:ROR:>=(int,int):==(int,int):org.joda.time.field.DividedDateTimeField@getRemainder(int):251:value >= 0 |==> value == 0
12237:ROR:>=(int,int):>(int,int):org.joda.time.field.DividedDateTimeField@getRemainder(int):251:value >= 0 |==> value > 0
12238:ROR:>=(int,int):TRUE(int,int):org.joda.time.field.DividedDateTimeField@getRemainder(int):251:value >= 0 |==> true
12239:AOR:%(int,int):*(int,int):org.joda.time.field.DividedDateTimeField@getRemainder(int):252:value % iDivisor |==> value * iDivisor
12240:AOR:%(int,int):+(int,int):org.joda.time.field.DividedDateTimeField@getRemainder(int):252:value % iDivisor |==> value + iDivisor
12241:AOR:%(int,int):-(int,int):org.joda.time.field.DividedDateTimeField@getRemainder(int):252:value % iDivisor |==> value - iDivisor
12242:AOR:%(int,int):/(int,int):org.joda.time.field.DividedDateTimeField@getRemainder(int):252:value % iDivisor |==> value / iDivisor
12243:LVR:POS:0:org.joda.time.field.DividedDateTimeField@getRemainder(int):254:1 |==> 0
12244:LVR:POS:NEG:org.joda.time.field.DividedDateTimeField@getRemainder(int):254:1 |==> -1
12245:AOR:-(int,int):%(int,int):org.joda.time.field.DividedDateTimeField@getRemainder(int):254:iDivisor - 1 |==> iDivisor % 1
12246:AOR:-(int,int):*(int,int):org.joda.time.field.DividedDateTimeField@getRemainder(int):254:iDivisor - 1 |==> iDivisor * 1
12247:AOR:-(int,int):+(int,int):org.joda.time.field.DividedDateTimeField@getRemainder(int):254:iDivisor - 1 |==> iDivisor + 1
12248:AOR:-(int,int):/(int,int):org.joda.time.field.DividedDateTimeField@getRemainder(int):254:iDivisor - 1 |==> iDivisor / 1
12249:LVR:POS:0:org.joda.time.field.DividedDateTimeField@getRemainder(int):254:1 |==> 0
12250:LVR:POS:NEG:org.joda.time.field.DividedDateTimeField@getRemainder(int):254:1 |==> -1
12251:AOR:+(int,int):%(int,int):org.joda.time.field.DividedDateTimeField@getRemainder(int):254:value + 1 |==> value % 1
12252:AOR:+(int,int):*(int,int):org.joda.time.field.DividedDateTimeField@getRemainder(int):254:value + 1 |==> value * 1
12253:AOR:+(int,int):-(int,int):org.joda.time.field.DividedDateTimeField@getRemainder(int):254:value + 1 |==> value - 1
12254:AOR:+(int,int):/(int,int):org.joda.time.field.DividedDateTimeField@getRemainder(int):254:value + 1 |==> value / 1
12255:AOR:%(int,int):*(int,int):org.joda.time.field.DividedDateTimeField@getRemainder(int):254:(value + 1) % iDivisor |==> (value + 1) * iDivisor
12256:AOR:%(int,int):+(int,int):org.joda.time.field.DividedDateTimeField@getRemainder(int):254:(value + 1) % iDivisor |==> (value + 1) + iDivisor
12257:AOR:%(int,int):-(int,int):org.joda.time.field.DividedDateTimeField@getRemainder(int):254:(value + 1) % iDivisor |==> (value + 1) - iDivisor
12258:AOR:%(int,int):/(int,int):org.joda.time.field.DividedDateTimeField@getRemainder(int):254:(value + 1) % iDivisor |==> (value + 1) / iDivisor
12259:AOR:+(int,int):%(int,int):org.joda.time.field.DividedDateTimeField@getRemainder(int):254:(iDivisor - 1) + ((value + 1) % iDivisor) |==> (iDivisor - 1) % ((value + 1) % iDivisor)
12260:AOR:+(int,int):*(int,int):org.joda.time.field.DividedDateTimeField@getRemainder(int):254:(iDivisor - 1) + ((value + 1) % iDivisor) |==> (iDivisor - 1) * ((value + 1) % iDivisor)
12261:AOR:+(int,int):-(int,int):org.joda.time.field.DividedDateTimeField@getRemainder(int):254:(iDivisor - 1) + ((value + 1) % iDivisor) |==> (iDivisor - 1) - ((value + 1) % iDivisor)
12262:AOR:+(int,int):/(int,int):org.joda.time.field.DividedDateTimeField@getRemainder(int):254:(iDivisor - 1) + ((value + 1) % iDivisor) |==> (iDivisor - 1) / ((value + 1) % iDivisor)
12263:LVR:POS:0:org.joda.time.field.RemainderDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int):56:2 |==> 0
12264:LVR:POS:NEG:org.joda.time.field.RemainderDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int):56:2 |==> -2
12265:ROR:<(int,int):!=(int,int):org.joda.time.field.RemainderDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int):56:divisor < 2 |==> divisor != 2
12266:ROR:<(int,int):<=(int,int):org.joda.time.field.RemainderDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int):56:divisor < 2 |==> divisor <= 2
12267:ROR:<(int,int):FALSE(int,int):org.joda.time.field.RemainderDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int):56:divisor < 2 |==> false
12268:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.RemainderDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int):61:rangeField == null |==> false
12269:LVR:POS:0:org.joda.time.field.RemainderDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):83:2 |==> 0
12270:LVR:POS:NEG:org.joda.time.field.RemainderDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):83:2 |==> -2
12271:ROR:<(int,int):!=(int,int):org.joda.time.field.RemainderDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):83:divisor < 2 |==> divisor != 2
12272:ROR:<(int,int):<=(int,int):org.joda.time.field.RemainderDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):83:divisor < 2 |==> divisor <= 2
12273:ROR:<(int,int):FALSE(int,int):org.joda.time.field.RemainderDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int):83:divisor < 2 |==> false
12274:LVR:0:POS:org.joda.time.field.RemainderDateTimeField@get(long):137:0 |==> 1
12275:LVR:0:NEG:org.joda.time.field.RemainderDateTimeField@get(long):137:0 |==> -1
12276:ROR:>=(int,int):==(int,int):org.joda.time.field.RemainderDateTimeField@get(long):137:value >= 0 |==> value == 0
12277:ROR:>=(int,int):>(int,int):org.joda.time.field.RemainderDateTimeField@get(long):137:value >= 0 |==> value > 0
12278:ROR:>=(int,int):TRUE(int,int):org.joda.time.field.RemainderDateTimeField@get(long):137:value >= 0 |==> true
12279:AOR:%(int,int):*(int,int):org.joda.time.field.RemainderDateTimeField@get(long):138:value % iDivisor |==> value * iDivisor
12280:AOR:%(int,int):+(int,int):org.joda.time.field.RemainderDateTimeField@get(long):138:value % iDivisor |==> value + iDivisor
12281:AOR:%(int,int):-(int,int):org.joda.time.field.RemainderDateTimeField@get(long):138:value % iDivisor |==> value - iDivisor
12282:AOR:%(int,int):/(int,int):org.joda.time.field.RemainderDateTimeField@get(long):138:value % iDivisor |==> value / iDivisor
12283:LVR:POS:0:org.joda.time.field.RemainderDateTimeField@get(long):140:1 |==> 0
12284:LVR:POS:NEG:org.joda.time.field.RemainderDateTimeField@get(long):140:1 |==> -1
12285:AOR:-(int,int):%(int,int):org.joda.time.field.RemainderDateTimeField@get(long):140:iDivisor - 1 |==> iDivisor % 1
12286:AOR:-(int,int):*(int,int):org.joda.time.field.RemainderDateTimeField@get(long):140:iDivisor - 1 |==> iDivisor * 1
12287:AOR:-(int,int):+(int,int):org.joda.time.field.RemainderDateTimeField@get(long):140:iDivisor - 1 |==> iDivisor + 1
12288:AOR:-(int,int):/(int,int):org.joda.time.field.RemainderDateTimeField@get(long):140:iDivisor - 1 |==> iDivisor / 1
12289:LVR:POS:0:org.joda.time.field.RemainderDateTimeField@get(long):140:1 |==> 0
12290:LVR:POS:NEG:org.joda.time.field.RemainderDateTimeField@get(long):140:1 |==> -1
12291:AOR:+(int,int):%(int,int):org.joda.time.field.RemainderDateTimeField@get(long):140:value + 1 |==> value % 1
12292:AOR:+(int,int):*(int,int):org.joda.time.field.RemainderDateTimeField@get(long):140:value + 1 |==> value * 1
12293:AOR:+(int,int):-(int,int):org.joda.time.field.RemainderDateTimeField@get(long):140:value + 1 |==> value - 1
12294:AOR:+(int,int):/(int,int):org.joda.time.field.RemainderDateTimeField@get(long):140:value + 1 |==> value / 1
12295:AOR:%(int,int):*(int,int):org.joda.time.field.RemainderDateTimeField@get(long):140:(value + 1) % iDivisor |==> (value + 1) * iDivisor
12296:AOR:%(int,int):+(int,int):org.joda.time.field.RemainderDateTimeField@get(long):140:(value + 1) % iDivisor |==> (value + 1) + iDivisor
12297:AOR:%(int,int):-(int,int):org.joda.time.field.RemainderDateTimeField@get(long):140:(value + 1) % iDivisor |==> (value + 1) - iDivisor
12298:AOR:%(int,int):/(int,int):org.joda.time.field.RemainderDateTimeField@get(long):140:(value + 1) % iDivisor |==> (value + 1) / iDivisor
12299:AOR:+(int,int):%(int,int):org.joda.time.field.RemainderDateTimeField@get(long):140:(iDivisor - 1) + ((value + 1) % iDivisor) |==> (iDivisor - 1) % ((value + 1) % iDivisor)
12300:AOR:+(int,int):*(int,int):org.joda.time.field.RemainderDateTimeField@get(long):140:(iDivisor - 1) + ((value + 1) % iDivisor) |==> (iDivisor - 1) * ((value + 1) % iDivisor)
12301:AOR:+(int,int):-(int,int):org.joda.time.field.RemainderDateTimeField@get(long):140:(iDivisor - 1) + ((value + 1) % iDivisor) |==> (iDivisor - 1) - ((value + 1) % iDivisor)
12302:AOR:+(int,int):/(int,int):org.joda.time.field.RemainderDateTimeField@get(long):140:(iDivisor - 1) + ((value + 1) % iDivisor) |==> (iDivisor - 1) / ((value + 1) % iDivisor)
12303:LVR:0:POS:org.joda.time.field.RemainderDateTimeField@addWrapField(long,int):154:0 |==> 1
12304:LVR:0:NEG:org.joda.time.field.RemainderDateTimeField@addWrapField(long,int):154:0 |==> -1
12305:LVR:POS:0:org.joda.time.field.RemainderDateTimeField@addWrapField(long,int):154:1 |==> 0
12306:LVR:POS:NEG:org.joda.time.field.RemainderDateTimeField@addWrapField(long,int):154:1 |==> -1
12307:AOR:-(int,int):%(int,int):org.joda.time.field.RemainderDateTimeField@addWrapField(long,int):154:iDivisor - 1 |==> iDivisor % 1
12308:AOR:-(int,int):*(int,int):org.joda.time.field.RemainderDateTimeField@addWrapField(long,int):154:iDivisor - 1 |==> iDivisor * 1
12309:AOR:-(int,int):+(int,int):org.joda.time.field.RemainderDateTimeField@addWrapField(long,int):154:iDivisor - 1 |==> iDivisor + 1
12310:AOR:-(int,int):/(int,int):org.joda.time.field.RemainderDateTimeField@addWrapField(long,int):154:iDivisor - 1 |==> iDivisor / 1
12311:LVR:0:POS:org.joda.time.field.RemainderDateTimeField@set(long,int):166:0 |==> 1
12312:LVR:0:NEG:org.joda.time.field.RemainderDateTimeField@set(long,int):166:0 |==> -1
12313:LVR:POS:0:org.joda.time.field.RemainderDateTimeField@set(long,int):166:1 |==> 0
12314:LVR:POS:NEG:org.joda.time.field.RemainderDateTimeField@set(long,int):166:1 |==> -1
12315:AOR:-(int,int):%(int,int):org.joda.time.field.RemainderDateTimeField@set(long,int):166:iDivisor - 1 |==> iDivisor % 1
12316:AOR:-(int,int):*(int,int):org.joda.time.field.RemainderDateTimeField@set(long,int):166:iDivisor - 1 |==> iDivisor * 1
12317:AOR:-(int,int):+(int,int):org.joda.time.field.RemainderDateTimeField@set(long,int):166:iDivisor - 1 |==> iDivisor + 1
12318:AOR:-(int,int):/(int,int):org.joda.time.field.RemainderDateTimeField@set(long,int):166:iDivisor - 1 |==> iDivisor / 1
12319:STD:<CALL>:<NO-OP>:org.joda.time.field.RemainderDateTimeField@set(long,int):166:FieldUtils.verifyValueBounds(this, value, 0, iDivisor - 1) |==> <NO-OP>
12320:AOR:*(int,int):%(int,int):org.joda.time.field.RemainderDateTimeField@set(long,int):168:divided * iDivisor |==> divided % iDivisor
12321:AOR:*(int,int):+(int,int):org.joda.time.field.RemainderDateTimeField@set(long,int):168:divided * iDivisor |==> divided + iDivisor
12322:AOR:*(int,int):-(int,int):org.joda.time.field.RemainderDateTimeField@set(long,int):168:divided * iDivisor |==> divided - iDivisor
12323:AOR:*(int,int):/(int,int):org.joda.time.field.RemainderDateTimeField@set(long,int):168:divided * iDivisor |==> divided / iDivisor
12324:AOR:+(int,int):%(int,int):org.joda.time.field.RemainderDateTimeField@set(long,int):168:divided * iDivisor + value |==> divided * iDivisor % value
12325:AOR:+(int,int):*(int,int):org.joda.time.field.RemainderDateTimeField@set(long,int):168:divided * iDivisor + value |==> divided * iDivisor * value
12326:AOR:+(int,int):-(int,int):org.joda.time.field.RemainderDateTimeField@set(long,int):168:divided * iDivisor + value |==> divided * iDivisor - value
12327:AOR:+(int,int):/(int,int):org.joda.time.field.RemainderDateTimeField@set(long,int):168:divided * iDivisor + value |==> divided * iDivisor / value
12328:LVR:0:POS:org.joda.time.field.RemainderDateTimeField@getMinimumValue():189:0 |==> 1
12329:LVR:0:NEG:org.joda.time.field.RemainderDateTimeField@getMinimumValue():189:0 |==> -1
12330:LVR:POS:0:org.joda.time.field.RemainderDateTimeField@getMaximumValue():199:1 |==> 0
12331:LVR:POS:NEG:org.joda.time.field.RemainderDateTimeField@getMaximumValue():199:1 |==> -1
12332:AOR:-(int,int):%(int,int):org.joda.time.field.RemainderDateTimeField@getMaximumValue():199:iDivisor - 1 |==> iDivisor % 1
12333:AOR:-(int,int):*(int,int):org.joda.time.field.RemainderDateTimeField@getMaximumValue():199:iDivisor - 1 |==> iDivisor * 1
12334:AOR:-(int,int):+(int,int):org.joda.time.field.RemainderDateTimeField@getMaximumValue():199:iDivisor - 1 |==> iDivisor + 1
12335:AOR:-(int,int):/(int,int):org.joda.time.field.RemainderDateTimeField@getMaximumValue():199:iDivisor - 1 |==> iDivisor / 1
12336:LVR:0:POS:org.joda.time.field.RemainderDateTimeField@getDivided(int):236:0 |==> 1
12337:LVR:0:NEG:org.joda.time.field.RemainderDateTimeField@getDivided(int):236:0 |==> -1
12338:ROR:>=(int,int):==(int,int):org.joda.time.field.RemainderDateTimeField@getDivided(int):236:value >= 0 |==> value == 0
12339:ROR:>=(int,int):>(int,int):org.joda.time.field.RemainderDateTimeField@getDivided(int):236:value >= 0 |==> value > 0
12340:ROR:>=(int,int):TRUE(int,int):org.joda.time.field.RemainderDateTimeField@getDivided(int):236:value >= 0 |==> true
12341:AOR:/(int,int):%(int,int):org.joda.time.field.RemainderDateTimeField@getDivided(int):237:value / iDivisor |==> value % iDivisor
12342:AOR:/(int,int):*(int,int):org.joda.time.field.RemainderDateTimeField@getDivided(int):237:value / iDivisor |==> value * iDivisor
12343:AOR:/(int,int):+(int,int):org.joda.time.field.RemainderDateTimeField@getDivided(int):237:value / iDivisor |==> value + iDivisor
12344:AOR:/(int,int):-(int,int):org.joda.time.field.RemainderDateTimeField@getDivided(int):237:value / iDivisor |==> value - iDivisor
12345:LVR:POS:0:org.joda.time.field.RemainderDateTimeField@getDivided(int):239:1 |==> 0
12346:LVR:POS:NEG:org.joda.time.field.RemainderDateTimeField@getDivided(int):239:1 |==> -1
12347:AOR:+(int,int):%(int,int):org.joda.time.field.RemainderDateTimeField@getDivided(int):239:value + 1 |==> value % 1
12348:AOR:+(int,int):*(int,int):org.joda.time.field.RemainderDateTimeField@getDivided(int):239:value + 1 |==> value * 1
12349:AOR:+(int,int):-(int,int):org.joda.time.field.RemainderDateTimeField@getDivided(int):239:value + 1 |==> value - 1
12350:AOR:+(int,int):/(int,int):org.joda.time.field.RemainderDateTimeField@getDivided(int):239:value + 1 |==> value / 1
12351:AOR:/(int,int):%(int,int):org.joda.time.field.RemainderDateTimeField@getDivided(int):239:(value + 1) / iDivisor |==> (value + 1) % iDivisor
12352:AOR:/(int,int):*(int,int):org.joda.time.field.RemainderDateTimeField@getDivided(int):239:(value + 1) / iDivisor |==> (value + 1) * iDivisor
12353:AOR:/(int,int):+(int,int):org.joda.time.field.RemainderDateTimeField@getDivided(int):239:(value + 1) / iDivisor |==> (value + 1) + iDivisor
12354:AOR:/(int,int):-(int,int):org.joda.time.field.RemainderDateTimeField@getDivided(int):239:(value + 1) / iDivisor |==> (value + 1) - iDivisor
12355:LVR:POS:0:org.joda.time.field.RemainderDateTimeField@getDivided(int):239:1 |==> 0
12356:LVR:POS:NEG:org.joda.time.field.RemainderDateTimeField@getDivided(int):239:1 |==> -1
12357:AOR:-(int,int):%(int,int):org.joda.time.field.RemainderDateTimeField@getDivided(int):239:((value + 1) / iDivisor) - 1 |==> ((value + 1) / iDivisor) % 1
12358:AOR:-(int,int):*(int,int):org.joda.time.field.RemainderDateTimeField@getDivided(int):239:((value + 1) / iDivisor) - 1 |==> ((value + 1) / iDivisor) * 1
12359:AOR:-(int,int):+(int,int):org.joda.time.field.RemainderDateTimeField@getDivided(int):239:((value + 1) / iDivisor) - 1 |==> ((value + 1) / iDivisor) + 1
12360:AOR:-(int,int):/(int,int):org.joda.time.field.RemainderDateTimeField@getDivided(int):239:((value + 1) / iDivisor) - 1 |==> ((value + 1) / iDivisor) / 1
12361:ROR:==(int,int):<=(int,int):org.joda.time.field.FieldUtils@safeNegate(int):49:value == Integer.MIN_VALUE |==> value <= Integer.MIN_VALUE
12362:ROR:==(int,int):>=(int,int):org.joda.time.field.FieldUtils@safeNegate(int):49:value == Integer.MIN_VALUE |==> value >= Integer.MIN_VALUE
12363:ROR:==(int,int):FALSE(int,int):org.joda.time.field.FieldUtils@safeNegate(int):49:value == Integer.MIN_VALUE |==> false
12364:ORU:-(int):+(int):org.joda.time.field.FieldUtils@safeNegate(int):52:-value |==> +value
12365:ORU:-(int):~(int):org.joda.time.field.FieldUtils@safeNegate(int):52:-value |==> ~value
12366:AOR:+(int,int):%(int,int):org.joda.time.field.FieldUtils@safeAdd(int,int):64:val1 + val2 |==> val1 % val2
12367:AOR:+(int,int):*(int,int):org.joda.time.field.FieldUtils@safeAdd(int,int):64:val1 + val2 |==> val1 * val2
12368:AOR:+(int,int):-(int,int):org.joda.time.field.FieldUtils@safeAdd(int,int):64:val1 + val2 |==> val1 - val2
12369:AOR:+(int,int):/(int,int):org.joda.time.field.FieldUtils@safeAdd(int,int):64:val1 + val2 |==> val1 / val2
12370:LOR:^(int,int):&(int,int):org.joda.time.field.FieldUtils@safeAdd(int,int):66:val1 ^ sum |==> val1 & sum
12371:LOR:^(int,int):|(int,int):org.joda.time.field.FieldUtils@safeAdd(int,int):66:val1 ^ sum |==> val1 | sum
12372:LVR:0:POS:org.joda.time.field.FieldUtils@safeAdd(int,int):66:0 |==> 1
12373:LVR:0:NEG:org.joda.time.field.FieldUtils@safeAdd(int,int):66:0 |==> -1
12374:ROR:<(int,int):!=(int,int):org.joda.time.field.FieldUtils@safeAdd(int,int):66:(val1 ^ sum) < 0 |==> (val1 ^ sum) != 0
12375:ROR:<(int,int):<=(int,int):org.joda.time.field.FieldUtils@safeAdd(int,int):66:(val1 ^ sum) < 0 |==> (val1 ^ sum) <= 0
12376:ROR:<(int,int):FALSE(int,int):org.joda.time.field.FieldUtils@safeAdd(int,int):66:(val1 ^ sum) < 0 |==> false
12377:LOR:^(int,int):&(int,int):org.joda.time.field.FieldUtils@safeAdd(int,int):66:val1 ^ val2 |==> val1 & val2
12378:LOR:^(int,int):|(int,int):org.joda.time.field.FieldUtils@safeAdd(int,int):66:val1 ^ val2 |==> val1 | val2
12379:LVR:0:POS:org.joda.time.field.FieldUtils@safeAdd(int,int):66:0 |==> 1
12380:LVR:0:NEG:org.joda.time.field.FieldUtils@safeAdd(int,int):66:0 |==> -1
12381:ROR:>=(int,int):==(int,int):org.joda.time.field.FieldUtils@safeAdd(int,int):66:(val1 ^ val2) >= 0 |==> (val1 ^ val2) == 0
12382:ROR:>=(int,int):>(int,int):org.joda.time.field.FieldUtils@safeAdd(int,int):66:(val1 ^ val2) >= 0 |==> (val1 ^ val2) > 0
12383:ROR:>=(int,int):TRUE(int,int):org.joda.time.field.FieldUtils@safeAdd(int,int):66:(val1 ^ val2) >= 0 |==> true
12384:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.field.FieldUtils@safeAdd(int,int):66:(val1 ^ sum) < 0 && (val1 ^ val2) >= 0 |==> (val1 ^ sum) < 0 == (val1 ^ val2) >= 0
12385:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.field.FieldUtils@safeAdd(int,int):66:(val1 ^ sum) < 0 && (val1 ^ val2) >= 0 |==> false
12386:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.field.FieldUtils@safeAdd(int,int):66:(val1 ^ sum) < 0 && (val1 ^ val2) >= 0 |==> (val1 ^ sum) < 0
12387:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.field.FieldUtils@safeAdd(int,int):66:(val1 ^ sum) < 0 && (val1 ^ val2) >= 0 |==> (val1 ^ val2) >= 0
12388:AOR:+(long,long):%(long,long):org.joda.time.field.FieldUtils@safeAdd(long,long):82:val1 + val2 |==> val1 % val2
12389:AOR:+(long,long):*(long,long):org.joda.time.field.FieldUtils@safeAdd(long,long):82:val1 + val2 |==> val1 * val2
12390:AOR:+(long,long):-(long,long):org.joda.time.field.FieldUtils@safeAdd(long,long):82:val1 + val2 |==> val1 - val2
12391:AOR:+(long,long):/(long,long):org.joda.time.field.FieldUtils@safeAdd(long,long):82:val1 + val2 |==> val1 / val2
12392:LOR:^(long,long):&(long,long):org.joda.time.field.FieldUtils@safeAdd(long,long):84:val1 ^ sum |==> val1 & sum
12393:LOR:^(long,long):|(long,long):org.joda.time.field.FieldUtils@safeAdd(long,long):84:val1 ^ sum |==> val1 | sum
12394:LVR:0:POS:org.joda.time.field.FieldUtils@safeAdd(long,long):84:0 |==> 1
12395:LVR:0:NEG:org.joda.time.field.FieldUtils@safeAdd(long,long):84:0 |==> -1
12396:ROR:<(long,long):!=(long,long):org.joda.time.field.FieldUtils@safeAdd(long,long):84:(val1 ^ sum) < 0 |==> (val1 ^ sum) != 0
12397:ROR:<(long,long):<=(long,long):org.joda.time.field.FieldUtils@safeAdd(long,long):84:(val1 ^ sum) < 0 |==> (val1 ^ sum) <= 0
12398:ROR:<(long,long):FALSE(long,long):org.joda.time.field.FieldUtils@safeAdd(long,long):84:(val1 ^ sum) < 0 |==> false
12399:LOR:^(long,long):&(long,long):org.joda.time.field.FieldUtils@safeAdd(long,long):84:val1 ^ val2 |==> val1 & val2
12400:LOR:^(long,long):|(long,long):org.joda.time.field.FieldUtils@safeAdd(long,long):84:val1 ^ val2 |==> val1 | val2
12401:LVR:0:POS:org.joda.time.field.FieldUtils@safeAdd(long,long):84:0 |==> 1
12402:LVR:0:NEG:org.joda.time.field.FieldUtils@safeAdd(long,long):84:0 |==> -1
12403:ROR:>=(long,long):==(long,long):org.joda.time.field.FieldUtils@safeAdd(long,long):84:(val1 ^ val2) >= 0 |==> (val1 ^ val2) == 0
12404:ROR:>=(long,long):>(long,long):org.joda.time.field.FieldUtils@safeAdd(long,long):84:(val1 ^ val2) >= 0 |==> (val1 ^ val2) > 0
12405:ROR:>=(long,long):TRUE(long,long):org.joda.time.field.FieldUtils@safeAdd(long,long):84:(val1 ^ val2) >= 0 |==> true
12406:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.field.FieldUtils@safeAdd(long,long):84:(val1 ^ sum) < 0 && (val1 ^ val2) >= 0 |==> (val1 ^ sum) < 0 == (val1 ^ val2) >= 0
12407:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.field.FieldUtils@safeAdd(long,long):84:(val1 ^ sum) < 0 && (val1 ^ val2) >= 0 |==> false
12408:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.field.FieldUtils@safeAdd(long,long):84:(val1 ^ sum) < 0 && (val1 ^ val2) >= 0 |==> (val1 ^ sum) < 0
12409:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.field.FieldUtils@safeAdd(long,long):84:(val1 ^ sum) < 0 && (val1 ^ val2) >= 0 |==> (val1 ^ val2) >= 0
12410:AOR:-(long,long):%(long,long):org.joda.time.field.FieldUtils@safeSubtract(long,long):100:val1 - val2 |==> val1 % val2
12411:AOR:-(long,long):*(long,long):org.joda.time.field.FieldUtils@safeSubtract(long,long):100:val1 - val2 |==> val1 * val2
12412:AOR:-(long,long):+(long,long):org.joda.time.field.FieldUtils@safeSubtract(long,long):100:val1 - val2 |==> val1 + val2
12413:AOR:-(long,long):/(long,long):org.joda.time.field.FieldUtils@safeSubtract(long,long):100:val1 - val2 |==> val1 / val2
12414:LOR:^(long,long):&(long,long):org.joda.time.field.FieldUtils@safeSubtract(long,long):102:val1 ^ diff |==> val1 & diff
12415:LOR:^(long,long):|(long,long):org.joda.time.field.FieldUtils@safeSubtract(long,long):102:val1 ^ diff |==> val1 | diff
12416:LVR:0:POS:org.joda.time.field.FieldUtils@safeSubtract(long,long):102:0 |==> 1
12417:LVR:0:NEG:org.joda.time.field.FieldUtils@safeSubtract(long,long):102:0 |==> -1
12418:ROR:<(long,long):!=(long,long):org.joda.time.field.FieldUtils@safeSubtract(long,long):102:(val1 ^ diff) < 0 |==> (val1 ^ diff) != 0
12419:ROR:<(long,long):<=(long,long):org.joda.time.field.FieldUtils@safeSubtract(long,long):102:(val1 ^ diff) < 0 |==> (val1 ^ diff) <= 0
12420:ROR:<(long,long):FALSE(long,long):org.joda.time.field.FieldUtils@safeSubtract(long,long):102:(val1 ^ diff) < 0 |==> false
12421:LOR:^(long,long):&(long,long):org.joda.time.field.FieldUtils@safeSubtract(long,long):102:val1 ^ val2 |==> val1 & val2
12422:LOR:^(long,long):|(long,long):org.joda.time.field.FieldUtils@safeSubtract(long,long):102:val1 ^ val2 |==> val1 | val2
12423:LVR:0:POS:org.joda.time.field.FieldUtils@safeSubtract(long,long):102:0 |==> 1
12424:LVR:0:NEG:org.joda.time.field.FieldUtils@safeSubtract(long,long):102:0 |==> -1
12425:ROR:<(long,long):!=(long,long):org.joda.time.field.FieldUtils@safeSubtract(long,long):102:(val1 ^ val2) < 0 |==> (val1 ^ val2) != 0
12426:ROR:<(long,long):<=(long,long):org.joda.time.field.FieldUtils@safeSubtract(long,long):102:(val1 ^ val2) < 0 |==> (val1 ^ val2) <= 0
12427:ROR:<(long,long):FALSE(long,long):org.joda.time.field.FieldUtils@safeSubtract(long,long):102:(val1 ^ val2) < 0 |==> false
12428:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.field.FieldUtils@safeSubtract(long,long):102:(val1 ^ diff) < 0 && (val1 ^ val2) < 0 |==> (val1 ^ diff) < 0 == (val1 ^ val2) < 0
12429:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.field.FieldUtils@safeSubtract(long,long):102:(val1 ^ diff) < 0 && (val1 ^ val2) < 0 |==> false
12430:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.field.FieldUtils@safeSubtract(long,long):102:(val1 ^ diff) < 0 && (val1 ^ val2) < 0 |==> (val1 ^ diff) < 0
12431:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.field.FieldUtils@safeSubtract(long,long):102:(val1 ^ diff) < 0 && (val1 ^ val2) < 0 |==> (val1 ^ val2) < 0
12432:AOR:*(long,long):%(long,long):org.joda.time.field.FieldUtils@safeMultiply(int,int):119:(long)val1 * (long)val2 |==> (long)val1 % (long)val2
12433:AOR:*(long,long):+(long,long):org.joda.time.field.FieldUtils@safeMultiply(int,int):119:(long)val1 * (long)val2 |==> (long)val1 + (long)val2
12434:AOR:*(long,long):-(long,long):org.joda.time.field.FieldUtils@safeMultiply(int,int):119:(long)val1 * (long)val2 |==> (long)val1 - (long)val2
12435:AOR:*(long,long):/(long,long):org.joda.time.field.FieldUtils@safeMultiply(int,int):119:(long)val1 * (long)val2 |==> (long)val1 / (long)val2
12436:ROR:<(long,long):!=(long,long):org.joda.time.field.FieldUtils@safeMultiply(int,int):120:total < Integer.MIN_VALUE |==> total != Integer.MIN_VALUE
12437:ROR:<(long,long):<=(long,long):org.joda.time.field.FieldUtils@safeMultiply(int,int):120:total < Integer.MIN_VALUE |==> total <= Integer.MIN_VALUE
12438:ROR:<(long,long):FALSE(long,long):org.joda.time.field.FieldUtils@safeMultiply(int,int):120:total < Integer.MIN_VALUE |==> false
12439:ROR:>(long,long):!=(long,long):org.joda.time.field.FieldUtils@safeMultiply(int,int):120:total > Integer.MAX_VALUE |==> total != Integer.MAX_VALUE
12440:ROR:>(long,long):>=(long,long):org.joda.time.field.FieldUtils@safeMultiply(int,int):120:total > Integer.MAX_VALUE |==> total >= Integer.MAX_VALUE
12441:ROR:>(long,long):FALSE(long,long):org.joda.time.field.FieldUtils@safeMultiply(int,int):120:total > Integer.MAX_VALUE |==> false
12442:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.field.FieldUtils@safeMultiply(int,int):120:total < Integer.MIN_VALUE || total > Integer.MAX_VALUE |==> total < Integer.MIN_VALUE != total > Integer.MAX_VALUE
12443:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.field.FieldUtils@safeMultiply(int,int):120:total < Integer.MIN_VALUE || total > Integer.MAX_VALUE |==> total < Integer.MIN_VALUE
12444:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.field.FieldUtils@safeMultiply(int,int):120:total < Integer.MIN_VALUE || total > Integer.MAX_VALUE |==> total > Integer.MAX_VALUE
12445:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.field.FieldUtils@safeMultiply(int,int):120:total < Integer.MIN_VALUE || total > Integer.MAX_VALUE |==> true
12446:ROR:==(long,long):<=(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,int):138:val1 == Long.MIN_VALUE |==> val1 <= Long.MIN_VALUE
12447:ROR:==(long,long):>=(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,int):138:val1 == Long.MIN_VALUE |==> val1 >= Long.MIN_VALUE
12448:ROR:==(long,long):FALSE(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,int):138:val1 == Long.MIN_VALUE |==> false
12449:ORU:-(long):+(long):org.joda.time.field.FieldUtils@safeMultiply(long,int):141:-val1 |==> +val1
12450:ORU:-(long):~(long):org.joda.time.field.FieldUtils@safeMultiply(long,int):141:-val1 |==> ~val1
12451:LVR:0:POS:org.joda.time.field.FieldUtils@safeMultiply(long,int):143:0L |==> 1L
12452:LVR:0:NEG:org.joda.time.field.FieldUtils@safeMultiply(long,int):143:0L |==> -1L
12453:AOR:*(long,long):%(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,int):147:val1 * val2 |==> val1 % val2
12454:AOR:*(long,long):+(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,int):147:val1 * val2 |==> val1 + val2
12455:AOR:*(long,long):-(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,int):147:val1 * val2 |==> val1 - val2
12456:AOR:*(long,long):/(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,int):147:val1 * val2 |==> val1 / val2
12457:AOR:/(long,long):%(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,int):148:total / val2 |==> total % val2
12458:AOR:/(long,long):*(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,int):148:total / val2 |==> total * val2
12459:AOR:/(long,long):+(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,int):148:total / val2 |==> total + val2
12460:AOR:/(long,long):-(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,int):148:total / val2 |==> total - val2
12461:ROR:!=(long,long):<(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,int):148:total / val2 != val1 |==> total / val2 < val1
12462:ROR:!=(long,long):>(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,int):148:total / val2 != val1 |==> total / val2 > val1
12463:ROR:!=(long,long):TRUE(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,int):148:total / val2 != val1 |==> true
12464:LVR:POS:0:org.joda.time.field.FieldUtils@safeMultiply(long,long):163:1 |==> 0
12465:LVR:POS:NEG:org.joda.time.field.FieldUtils@safeMultiply(long,long):163:1 |==> -1
12466:ROR:==(long,long):<=(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,long):163:val2 == 1 |==> val2 <= 1
12467:ROR:==(long,long):>=(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,long):163:val2 == 1 |==> val2 >= 1
12468:ROR:==(long,long):FALSE(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,long):163:val2 == 1 |==> false
12469:LVR:POS:0:org.joda.time.field.FieldUtils@safeMultiply(long,long):166:1 |==> 0
12470:LVR:POS:NEG:org.joda.time.field.FieldUtils@safeMultiply(long,long):166:1 |==> -1
12471:ROR:==(long,long):<=(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,long):166:val1 == 1 |==> val1 <= 1
12472:ROR:==(long,long):>=(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,long):166:val1 == 1 |==> val1 >= 1
12473:ROR:==(long,long):FALSE(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,long):166:val1 == 1 |==> false
12474:LVR:0:POS:org.joda.time.field.FieldUtils@safeMultiply(long,long):169:0 |==> 1
12475:LVR:0:NEG:org.joda.time.field.FieldUtils@safeMultiply(long,long):169:0 |==> -1
12476:ROR:==(long,long):<=(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,long):169:val1 == 0 |==> val1 <= 0
12477:ROR:==(long,long):>=(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,long):169:val1 == 0 |==> val1 >= 0
12478:ROR:==(long,long):FALSE(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,long):169:val1 == 0 |==> false
12479:LVR:0:POS:org.joda.time.field.FieldUtils@safeMultiply(long,long):169:0 |==> 1
12480:LVR:0:NEG:org.joda.time.field.FieldUtils@safeMultiply(long,long):169:0 |==> -1
12481:ROR:==(long,long):<=(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,long):169:val2 == 0 |==> val2 <= 0
12482:ROR:==(long,long):>=(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,long):169:val2 == 0 |==> val2 >= 0
12483:ROR:==(long,long):FALSE(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,long):169:val2 == 0 |==> false
12484:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.field.FieldUtils@safeMultiply(long,long):169:val1 == 0 || val2 == 0 |==> val1 == 0 != (val2 == 0)
12485:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.field.FieldUtils@safeMultiply(long,long):169:val1 == 0 || val2 == 0 |==> val1 == 0
12486:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.field.FieldUtils@safeMultiply(long,long):169:val1 == 0 || val2 == 0 |==> val2 == 0
12487:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.field.FieldUtils@safeMultiply(long,long):169:val1 == 0 || val2 == 0 |==> true
12488:LVR:0:POS:org.joda.time.field.FieldUtils@safeMultiply(long,long):170:0 |==> 1
12489:LVR:0:NEG:org.joda.time.field.FieldUtils@safeMultiply(long,long):170:0 |==> -1
12490:AOR:*(long,long):%(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,long):172:val1 * val2 |==> val1 % val2
12491:AOR:*(long,long):+(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,long):172:val1 * val2 |==> val1 + val2
12492:AOR:*(long,long):-(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,long):172:val1 * val2 |==> val1 - val2
12493:AOR:*(long,long):/(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,long):172:val1 * val2 |==> val1 / val2
12494:AOR:/(long,long):%(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,long):173:total / val2 |==> total % val2
12495:AOR:/(long,long):*(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,long):173:total / val2 |==> total * val2
12496:AOR:/(long,long):+(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,long):173:total / val2 |==> total + val2
12497:AOR:/(long,long):-(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,long):173:total / val2 |==> total - val2
12498:ROR:!=(long,long):<(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,long):173:total / val2 != val1 |==> total / val2 < val1
12499:ROR:!=(long,long):>(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,long):173:total / val2 != val1 |==> total / val2 > val1
12500:ROR:!=(long,long):TRUE(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,long):173:total / val2 != val1 |==> true
12501:ROR:==(long,long):<=(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,long):173:val1 == Long.MIN_VALUE |==> val1 <= Long.MIN_VALUE
12502:ROR:==(long,long):>=(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,long):173:val1 == Long.MIN_VALUE |==> val1 >= Long.MIN_VALUE
12503:ROR:==(long,long):FALSE(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,long):173:val1 == Long.MIN_VALUE |==> false
12504:LVR:NEG:0:org.joda.time.field.FieldUtils@safeMultiply(long,long):173:-1 |==> 0
12505:LVR:NEG:POS:org.joda.time.field.FieldUtils@safeMultiply(long,long):173:-1 |==> 1
12506:ROR:==(long,long):<=(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,long):173:val2 == -1 |==> val2 <= -1
12507:ROR:==(long,long):>=(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,long):173:val2 == -1 |==> val2 >= -1
12508:ROR:==(long,long):FALSE(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,long):173:val2 == -1 |==> false
12509:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.field.FieldUtils@safeMultiply(long,long):173:val1 == Long.MIN_VALUE && val2 == -1 |==> val1 == Long.MIN_VALUE == (val2 == -1)
12510:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.field.FieldUtils@safeMultiply(long,long):173:val1 == Long.MIN_VALUE && val2 == -1 |==> false
12511:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.field.FieldUtils@safeMultiply(long,long):173:val1 == Long.MIN_VALUE && val2 == -1 |==> val1 == Long.MIN_VALUE
12512:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.field.FieldUtils@safeMultiply(long,long):173:val1 == Long.MIN_VALUE && val2 == -1 |==> val2 == -1
12513:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.field.FieldUtils@safeMultiply(long,long):173:total / val2 != val1 || val1 == Long.MIN_VALUE && val2 == -1 |==> total / val2 != val1 != (val1 == Long.MIN_VALUE && val2 == -1)
12514:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.field.FieldUtils@safeMultiply(long,long):173:total / val2 != val1 || val1 == Long.MIN_VALUE && val2 == -1 |==> total / val2 != val1
12515:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.field.FieldUtils@safeMultiply(long,long):173:total / val2 != val1 || val1 == Long.MIN_VALUE && val2 == -1 |==> val1 == Long.MIN_VALUE && val2 == -1
12516:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.field.FieldUtils@safeMultiply(long,long):173:total / val2 != val1 || val1 == Long.MIN_VALUE && val2 == -1 |==> true
12517:ROR:==(long,long):<=(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,long):173:val2 == Long.MIN_VALUE |==> val2 <= Long.MIN_VALUE
12518:ROR:==(long,long):>=(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,long):173:val2 == Long.MIN_VALUE |==> val2 >= Long.MIN_VALUE
12519:ROR:==(long,long):FALSE(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,long):173:val2 == Long.MIN_VALUE |==> false
12520:LVR:NEG:0:org.joda.time.field.FieldUtils@safeMultiply(long,long):173:-1 |==> 0
12521:LVR:NEG:POS:org.joda.time.field.FieldUtils@safeMultiply(long,long):173:-1 |==> 1
12522:ROR:==(long,long):<=(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,long):173:val1 == -1 |==> val1 <= -1
12523:ROR:==(long,long):>=(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,long):173:val1 == -1 |==> val1 >= -1
12524:ROR:==(long,long):FALSE(long,long):org.joda.time.field.FieldUtils@safeMultiply(long,long):173:val1 == -1 |==> false
12525:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.field.FieldUtils@safeMultiply(long,long):173:val2 == Long.MIN_VALUE && val1 == -1 |==> val2 == Long.MIN_VALUE == (val1 == -1)
12526:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.field.FieldUtils@safeMultiply(long,long):173:val2 == Long.MIN_VALUE && val1 == -1 |==> false
12527:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.field.FieldUtils@safeMultiply(long,long):173:val2 == Long.MIN_VALUE && val1 == -1 |==> val2 == Long.MIN_VALUE
12528:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.field.FieldUtils@safeMultiply(long,long):173:val2 == Long.MIN_VALUE && val1 == -1 |==> val1 == -1
12529:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.field.FieldUtils@safeMultiply(long,long):173:total / val2 != val1 || val1 == Long.MIN_VALUE && val2 == -1 || val2 == Long.MIN_VALUE && val1 == -1 |==> (total / val2 != val1 || val1 == Long.MIN_VALUE && val2 == -1) != (val2 == Long.MIN_VALUE && val1 == -1)
12530:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.field.FieldUtils@safeMultiply(long,long):173:total / val2 != val1 || val1 == Long.MIN_VALUE && val2 == -1 || val2 == Long.MIN_VALUE && val1 == -1 |==> total / val2 != val1 || val1 == Long.MIN_VALUE && val2 == -1
12531:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.field.FieldUtils@safeMultiply(long,long):173:total / val2 != val1 || val1 == Long.MIN_VALUE && val2 == -1 || val2 == Long.MIN_VALUE && val1 == -1 |==> val2 == Long.MIN_VALUE && val1 == -1
12532:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.field.FieldUtils@safeMultiply(long,long):173:total / val2 != val1 || val1 == Long.MIN_VALUE && val2 == -1 || val2 == Long.MIN_VALUE && val1 == -1 |==> true
12533:ROR:==(long,long):<=(long,long):org.joda.time.field.FieldUtils@safeDivide(long,long):189:dividend == Long.MIN_VALUE |==> dividend <= Long.MIN_VALUE
12534:ROR:==(long,long):>=(long,long):org.joda.time.field.FieldUtils@safeDivide(long,long):189:dividend == Long.MIN_VALUE |==> dividend >= Long.MIN_VALUE
12535:ROR:==(long,long):FALSE(long,long):org.joda.time.field.FieldUtils@safeDivide(long,long):189:dividend == Long.MIN_VALUE |==> false
12536:LVR:NEG:0:org.joda.time.field.FieldUtils@safeDivide(long,long):189:-1L |==> 0L
12537:LVR:NEG:POS:org.joda.time.field.FieldUtils@safeDivide(long,long):189:-1L |==> 1L
12538:ROR:==(long,long):<=(long,long):org.joda.time.field.FieldUtils@safeDivide(long,long):189:divisor == -1L |==> divisor <= -1L
12539:ROR:==(long,long):>=(long,long):org.joda.time.field.FieldUtils@safeDivide(long,long):189:divisor == -1L |==> divisor >= -1L
12540:ROR:==(long,long):FALSE(long,long):org.joda.time.field.FieldUtils@safeDivide(long,long):189:divisor == -1L |==> false
12541:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.field.FieldUtils@safeDivide(long,long):189:dividend == Long.MIN_VALUE && divisor == -1L |==> dividend == Long.MIN_VALUE == (divisor == -1L)
12542:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.field.FieldUtils@safeDivide(long,long):189:dividend == Long.MIN_VALUE && divisor == -1L |==> false
12543:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.field.FieldUtils@safeDivide(long,long):189:dividend == Long.MIN_VALUE && divisor == -1L |==> dividend == Long.MIN_VALUE
12544:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.field.FieldUtils@safeDivide(long,long):189:dividend == Long.MIN_VALUE && divisor == -1L |==> divisor == -1L
12545:AOR:/(long,long):%(long,long):org.joda.time.field.FieldUtils@safeDivide(long,long):192:dividend / divisor |==> dividend % divisor
12546:AOR:/(long,long):*(long,long):org.joda.time.field.FieldUtils@safeDivide(long,long):192:dividend / divisor |==> dividend * divisor
12547:AOR:/(long,long):+(long,long):org.joda.time.field.FieldUtils@safeDivide(long,long):192:dividend / divisor |==> dividend + divisor
12548:AOR:/(long,long):-(long,long):org.joda.time.field.FieldUtils@safeDivide(long,long):192:dividend / divisor |==> dividend - divisor
12549:ROR:<=(long,long):<(long,long):org.joda.time.field.FieldUtils@safeToInt(long):203:Integer.MIN_VALUE <= value |==> Integer.MIN_VALUE < value
12550:ROR:<=(long,long):==(long,long):org.joda.time.field.FieldUtils@safeToInt(long):203:Integer.MIN_VALUE <= value |==> Integer.MIN_VALUE == value
12551:ROR:<=(long,long):TRUE(long,long):org.joda.time.field.FieldUtils@safeToInt(long):203:Integer.MIN_VALUE <= value |==> true
12552:ROR:<=(long,long):<(long,long):org.joda.time.field.FieldUtils@safeToInt(long):203:value <= Integer.MAX_VALUE |==> value < Integer.MAX_VALUE
12553:ROR:<=(long,long):==(long,long):org.joda.time.field.FieldUtils@safeToInt(long):203:value <= Integer.MAX_VALUE |==> value == Integer.MAX_VALUE
12554:ROR:<=(long,long):TRUE(long,long):org.joda.time.field.FieldUtils@safeToInt(long):203:value <= Integer.MAX_VALUE |==> true
12555:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.field.FieldUtils@safeToInt(long):203:Integer.MIN_VALUE <= value && value <= Integer.MAX_VALUE |==> Integer.MIN_VALUE <= value == value <= Integer.MAX_VALUE
12556:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.field.FieldUtils@safeToInt(long):203:Integer.MIN_VALUE <= value && value <= Integer.MAX_VALUE |==> false
12557:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.field.FieldUtils@safeToInt(long):203:Integer.MIN_VALUE <= value && value <= Integer.MAX_VALUE |==> Integer.MIN_VALUE <= value
12558:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.field.FieldUtils@safeToInt(long):203:Integer.MIN_VALUE <= value && value <= Integer.MAX_VALUE |==> value <= Integer.MAX_VALUE
12559:ROR:<(int,int):!=(int,int):org.joda.time.field.FieldUtils@verifyValueBounds(org.joda.time.DateTimeField,int,int,int):233:value < lowerBound |==> value != lowerBound
12560:ROR:<(int,int):<=(int,int):org.joda.time.field.FieldUtils@verifyValueBounds(org.joda.time.DateTimeField,int,int,int):233:value < lowerBound |==> value <= lowerBound
12561:ROR:<(int,int):FALSE(int,int):org.joda.time.field.FieldUtils@verifyValueBounds(org.joda.time.DateTimeField,int,int,int):233:value < lowerBound |==> false
12562:ROR:>(int,int):!=(int,int):org.joda.time.field.FieldUtils@verifyValueBounds(org.joda.time.DateTimeField,int,int,int):233:value > upperBound |==> value != upperBound
12563:ROR:>(int,int):>=(int,int):org.joda.time.field.FieldUtils@verifyValueBounds(org.joda.time.DateTimeField,int,int,int):233:value > upperBound |==> value >= upperBound
12564:ROR:>(int,int):FALSE(int,int):org.joda.time.field.FieldUtils@verifyValueBounds(org.joda.time.DateTimeField,int,int,int):233:value > upperBound |==> false
12565:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.field.FieldUtils@verifyValueBounds(org.joda.time.DateTimeField,int,int,int):233:(value < lowerBound) || (value > upperBound) |==> (value < lowerBound) != (value > upperBound)
12566:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.field.FieldUtils@verifyValueBounds(org.joda.time.DateTimeField,int,int,int):233:(value < lowerBound) || (value > upperBound) |==> (value < lowerBound)
12567:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.field.FieldUtils@verifyValueBounds(org.joda.time.DateTimeField,int,int,int):233:(value < lowerBound) || (value > upperBound) |==> (value > upperBound)
12568:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.field.FieldUtils@verifyValueBounds(org.joda.time.DateTimeField,int,int,int):233:(value < lowerBound) || (value > upperBound) |==> true
12569:ROR:<(int,int):!=(int,int):org.joda.time.field.FieldUtils@verifyValueBounds(org.joda.time.DateTimeFieldType,int,int,int):251:value < lowerBound |==> value != lowerBound
12570:ROR:<(int,int):<=(int,int):org.joda.time.field.FieldUtils@verifyValueBounds(org.joda.time.DateTimeFieldType,int,int,int):251:value < lowerBound |==> value <= lowerBound
12571:ROR:<(int,int):FALSE(int,int):org.joda.time.field.FieldUtils@verifyValueBounds(org.joda.time.DateTimeFieldType,int,int,int):251:value < lowerBound |==> false
12572:ROR:>(int,int):!=(int,int):org.joda.time.field.FieldUtils@verifyValueBounds(org.joda.time.DateTimeFieldType,int,int,int):251:value > upperBound |==> value != upperBound
12573:ROR:>(int,int):>=(int,int):org.joda.time.field.FieldUtils@verifyValueBounds(org.joda.time.DateTimeFieldType,int,int,int):251:value > upperBound |==> value >= upperBound
12574:ROR:>(int,int):FALSE(int,int):org.joda.time.field.FieldUtils@verifyValueBounds(org.joda.time.DateTimeFieldType,int,int,int):251:value > upperBound |==> false
12575:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.field.FieldUtils@verifyValueBounds(org.joda.time.DateTimeFieldType,int,int,int):251:(value < lowerBound) || (value > upperBound) |==> (value < lowerBound) != (value > upperBound)
12576:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.field.FieldUtils@verifyValueBounds(org.joda.time.DateTimeFieldType,int,int,int):251:(value < lowerBound) || (value > upperBound) |==> (value < lowerBound)
12577:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.field.FieldUtils@verifyValueBounds(org.joda.time.DateTimeFieldType,int,int,int):251:(value < lowerBound) || (value > upperBound) |==> (value > upperBound)
12578:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.field.FieldUtils@verifyValueBounds(org.joda.time.DateTimeFieldType,int,int,int):251:(value < lowerBound) || (value > upperBound) |==> true
12579:ROR:<(int,int):!=(int,int):org.joda.time.field.FieldUtils@verifyValueBounds(java.lang.String,int,int,int):268:value < lowerBound |==> value != lowerBound
12580:ROR:<(int,int):<=(int,int):org.joda.time.field.FieldUtils@verifyValueBounds(java.lang.String,int,int,int):268:value < lowerBound |==> value <= lowerBound
12581:ROR:<(int,int):FALSE(int,int):org.joda.time.field.FieldUtils@verifyValueBounds(java.lang.String,int,int,int):268:value < lowerBound |==> false
12582:ROR:>(int,int):!=(int,int):org.joda.time.field.FieldUtils@verifyValueBounds(java.lang.String,int,int,int):268:value > upperBound |==> value != upperBound
12583:ROR:>(int,int):>=(int,int):org.joda.time.field.FieldUtils@verifyValueBounds(java.lang.String,int,int,int):268:value > upperBound |==> value >= upperBound
12584:ROR:>(int,int):FALSE(int,int):org.joda.time.field.FieldUtils@verifyValueBounds(java.lang.String,int,int,int):268:value > upperBound |==> false
12585:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.field.FieldUtils@verifyValueBounds(java.lang.String,int,int,int):268:(value < lowerBound) || (value > upperBound) |==> (value < lowerBound) != (value > upperBound)
12586:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.field.FieldUtils@verifyValueBounds(java.lang.String,int,int,int):268:(value < lowerBound) || (value > upperBound) |==> (value < lowerBound)
12587:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.field.FieldUtils@verifyValueBounds(java.lang.String,int,int,int):268:(value < lowerBound) || (value > upperBound) |==> (value > upperBound)
12588:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.field.FieldUtils@verifyValueBounds(java.lang.String,int,int,int):268:(value < lowerBound) || (value > upperBound) |==> true
12589:AOR:+(int,int):%(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int,int):292:currentValue + wrapValue |==> currentValue % wrapValue
12590:AOR:+(int,int):*(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int,int):292:currentValue + wrapValue |==> currentValue * wrapValue
12591:AOR:+(int,int):-(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int,int):292:currentValue + wrapValue |==> currentValue - wrapValue
12592:AOR:+(int,int):/(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int,int):292:currentValue + wrapValue |==> currentValue / wrapValue
12593:ROR:>=(int,int):==(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):308:minValue >= maxValue |==> minValue == maxValue
12594:ROR:>=(int,int):>(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):308:minValue >= maxValue |==> minValue > maxValue
12595:ROR:>=(int,int):TRUE(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):308:minValue >= maxValue |==> true
12596:AOR:-(int,int):%(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):312:maxValue - minValue |==> maxValue % minValue
12597:AOR:-(int,int):*(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):312:maxValue - minValue |==> maxValue * minValue
12598:AOR:-(int,int):+(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):312:maxValue - minValue |==> maxValue + minValue
12599:AOR:-(int,int):/(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):312:maxValue - minValue |==> maxValue / minValue
12600:LVR:POS:0:org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):312:1 |==> 0
12601:LVR:POS:NEG:org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):312:1 |==> -1
12602:AOR:+(int,int):%(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):312:maxValue - minValue + 1 |==> (maxValue - minValue) % 1
12603:AOR:+(int,int):*(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):312:maxValue - minValue + 1 |==> (maxValue - minValue) * 1
12604:AOR:+(int,int):-(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):312:maxValue - minValue + 1 |==> maxValue - minValue - 1
12605:AOR:+(int,int):/(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):312:maxValue - minValue + 1 |==> (maxValue - minValue) / 1
12606:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):313:value -= minValue |==> <NO-OP>
12607:LVR:0:POS:org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):315:0 |==> 1
12608:LVR:0:NEG:org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):315:0 |==> -1
12609:ROR:>=(int,int):==(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):315:value >= 0 |==> value == 0
12610:ROR:>=(int,int):>(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):315:value >= 0 |==> value > 0
12611:ROR:>=(int,int):TRUE(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):315:value >= 0 |==> true
12612:AOR:%(int,int):*(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):316:value % wrapRange |==> value * wrapRange
12613:AOR:%(int,int):+(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):316:value % wrapRange |==> value + wrapRange
12614:AOR:%(int,int):-(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):316:value % wrapRange |==> value - wrapRange
12615:AOR:%(int,int):/(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):316:value % wrapRange |==> value / wrapRange
12616:AOR:+(int,int):%(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):316:(value % wrapRange) + minValue |==> (value % wrapRange) % minValue
12617:AOR:+(int,int):*(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):316:(value % wrapRange) + minValue |==> (value % wrapRange) * minValue
12618:AOR:+(int,int):-(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):316:(value % wrapRange) + minValue |==> (value % wrapRange) - minValue
12619:AOR:+(int,int):/(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):316:(value % wrapRange) + minValue |==> (value % wrapRange) / minValue
12620:ORU:-(int):+(int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):319:-value |==> +value
12621:ORU:-(int):~(int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):319:-value |==> ~value
12622:AOR:%(int,int):*(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):319:(-value) % wrapRange |==> (-value) * wrapRange
12623:AOR:%(int,int):+(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):319:(-value) % wrapRange |==> (-value) + wrapRange
12624:AOR:%(int,int):-(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):319:(-value) % wrapRange |==> (-value) - wrapRange
12625:AOR:%(int,int):/(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):319:(-value) % wrapRange |==> (-value) / wrapRange
12626:LVR:0:POS:org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):321:0 |==> 1
12627:LVR:0:NEG:org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):321:0 |==> -1
12628:ROR:==(int,int):<=(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):321:remByRange == 0 |==> remByRange <= 0
12629:ROR:==(int,int):>=(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):321:remByRange == 0 |==> remByRange >= 0
12630:ROR:==(int,int):FALSE(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):321:remByRange == 0 |==> false
12631:LVR:0:POS:org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):322:0 |==> 1
12632:LVR:0:NEG:org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):322:0 |==> -1
12633:AOR:+(int,int):%(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):322:0 + minValue |==> 0 % minValue
12634:AOR:+(int,int):*(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):322:0 + minValue |==> 0 * minValue
12635:AOR:+(int,int):-(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):322:0 + minValue |==> 0 - minValue
12636:AOR:+(int,int):/(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):322:0 + minValue |==> 0 / minValue
12637:AOR:-(int,int):%(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):324:wrapRange - remByRange |==> wrapRange % remByRange
12638:AOR:-(int,int):*(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):324:wrapRange - remByRange |==> wrapRange * remByRange
12639:AOR:-(int,int):+(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):324:wrapRange - remByRange |==> wrapRange + remByRange
12640:AOR:-(int,int):/(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):324:wrapRange - remByRange |==> wrapRange / remByRange
12641:AOR:+(int,int):%(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):324:(wrapRange - remByRange) + minValue |==> (wrapRange - remByRange) % minValue
12642:AOR:+(int,int):*(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):324:(wrapRange - remByRange) + minValue |==> (wrapRange - remByRange) * minValue
12643:AOR:+(int,int):-(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):324:(wrapRange - remByRange) + minValue |==> (wrapRange - remByRange) - minValue
12644:AOR:+(int,int):/(int,int):org.joda.time.field.FieldUtils@getWrappedValue(int,int,int):324:(wrapRange - remByRange) + minValue |==> (wrapRange - remByRange) / minValue
12645:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.FieldUtils@equals(java.lang.Object,java.lang.Object):337:object1 == object2 |==> false
12646:LVR:TRUE:FALSE:org.joda.time.field.FieldUtils@equals(java.lang.Object,java.lang.Object):338:true |==> false
12647:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.FieldUtils@equals(java.lang.Object,java.lang.Object):340:object1 == null |==> false
12648:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.FieldUtils@equals(java.lang.Object,java.lang.Object):340:object2 == null |==> false
12649:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.field.FieldUtils@equals(java.lang.Object,java.lang.Object):340:object1 == null || object2 == null |==> object1 == null != (object2 == null)
12650:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.field.FieldUtils@equals(java.lang.Object,java.lang.Object):340:object1 == null || object2 == null |==> object1 == null
12651:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.field.FieldUtils@equals(java.lang.Object,java.lang.Object):340:object1 == null || object2 == null |==> object2 == null
12652:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.field.FieldUtils@equals(java.lang.Object,java.lang.Object):340:object1 == null || object2 == null |==> true
12653:LVR:FALSE:TRUE:org.joda.time.field.FieldUtils@equals(java.lang.Object,java.lang.Object):341:false |==> true
12654:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.LenientDateTimeField@getInstance(org.joda.time.DateTimeField,org.joda.time.Chronology):44:field == null |==> false
12655:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.LenientDateTimeField@getInstance(org.joda.time.DateTimeField,org.joda.time.Chronology):48:field = ((StrictDateTimeField)field).getWrappedField() |==> <NO-OP>
12656:COR:field.isLenient():TRUE:org.joda.time.field.LenientDateTimeField@getInstance(org.joda.time.DateTimeField,org.joda.time.Chronology):50:field.isLenient() |==> false
12657:COR:field.isLenient():FALSE:org.joda.time.field.LenientDateTimeField@getInstance(org.joda.time.DateTimeField,org.joda.time.Chronology):50:field.isLenient() |==> true
12658:LVR:TRUE:FALSE:org.joda.time.field.LenientDateTimeField@isLenient():62:true |==> false
12659:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.LenientDateTimeField@set(long,int):74:localInstant = getType().getField(iBase.withUTC()).add(localInstant, difference) |==> <NO-OP>
12660:LVR:FALSE:TRUE:org.joda.time.field.LenientDateTimeField@set(long,int):75:false |==> true
12661:LVR:TRUE:FALSE:org.joda.time.field.MillisDurationField@isSupported():62:true |==> false
12662:LVR:TRUE:FALSE:org.joda.time.field.MillisDurationField@isPrecise():71:true |==> false
12663:LVR:POS:0:org.joda.time.field.MillisDurationField@getUnitMillis():80:1 |==> 0
12664:LVR:POS:NEG:org.joda.time.field.MillisDurationField@getUnitMillis():80:1 |==> -1
12665:ROR:==(long,long):<=(long,long):org.joda.time.field.MillisDurationField@compareTo(org.joda.time.DurationField):137:thisMillis == otherMillis |==> thisMillis <= otherMillis
12666:ROR:==(long,long):>=(long,long):org.joda.time.field.MillisDurationField@compareTo(org.joda.time.DurationField):137:thisMillis == otherMillis |==> thisMillis >= otherMillis
12667:ROR:==(long,long):FALSE(long,long):org.joda.time.field.MillisDurationField@compareTo(org.joda.time.DurationField):137:thisMillis == otherMillis |==> false
12668:LVR:0:POS:org.joda.time.field.MillisDurationField@compareTo(org.joda.time.DurationField):138:0 |==> 1
12669:LVR:0:NEG:org.joda.time.field.MillisDurationField@compareTo(org.joda.time.DurationField):138:0 |==> -1
12670:ROR:<(long,long):!=(long,long):org.joda.time.field.MillisDurationField@compareTo(org.joda.time.DurationField):140:thisMillis < otherMillis |==> thisMillis != otherMillis
12671:ROR:<(long,long):<=(long,long):org.joda.time.field.MillisDurationField@compareTo(org.joda.time.DurationField):140:thisMillis < otherMillis |==> thisMillis <= otherMillis
12672:ROR:<(long,long):FALSE(long,long):org.joda.time.field.MillisDurationField@compareTo(org.joda.time.DurationField):140:thisMillis < otherMillis |==> false
12673:LVR:NEG:0:org.joda.time.field.MillisDurationField@compareTo(org.joda.time.DurationField):141:-1 |==> 0
12674:LVR:NEG:POS:org.joda.time.field.MillisDurationField@compareTo(org.joda.time.DurationField):141:-1 |==> 1
12675:LVR:POS:0:org.joda.time.field.MillisDurationField@compareTo(org.joda.time.DurationField):143:1 |==> 0
12676:LVR:POS:NEG:org.joda.time.field.MillisDurationField@compareTo(org.joda.time.DurationField):143:1 |==> -1
12677:ROR:==(long,long):<=(long,long):org.joda.time.field.MillisDurationField@equals(java.lang.Object):149:getUnitMillis() == ((MillisDurationField)obj).getUnitMillis() |==> getUnitMillis() <= ((MillisDurationField)obj).getUnitMillis()
12678:ROR:==(long,long):>=(long,long):org.joda.time.field.MillisDurationField@equals(java.lang.Object):149:getUnitMillis() == ((MillisDurationField)obj).getUnitMillis() |==> getUnitMillis() >= ((MillisDurationField)obj).getUnitMillis()
12679:ROR:==(long,long):FALSE(long,long):org.joda.time.field.MillisDurationField@equals(java.lang.Object):149:getUnitMillis() == ((MillisDurationField)obj).getUnitMillis() |==> false
12680:LVR:FALSE:TRUE:org.joda.time.field.MillisDurationField@equals(java.lang.Object):151:false |==> true
12681:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.OffsetDateTimeField@<init>(org.joda.time.DateTimeField,int):47:field == null |==> false
12682:LVR:0:POS:org.joda.time.field.OffsetDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int):76:0 |==> 1
12683:LVR:0:NEG:org.joda.time.field.OffsetDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int):76:0 |==> -1
12684:ROR:==(int,int):<=(int,int):org.joda.time.field.OffsetDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int):76:offset == 0 |==> offset <= 0
12685:ROR:==(int,int):>=(int,int):org.joda.time.field.OffsetDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int):76:offset == 0 |==> offset >= 0
12686:ROR:==(int,int):FALSE(int,int):org.joda.time.field.OffsetDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int):76:offset == 0 |==> false
12687:AOR:+(int,int):%(int,int):org.joda.time.field.OffsetDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int):82:field.getMinimumValue() + offset |==> field.getMinimumValue() % offset
12688:AOR:+(int,int):*(int,int):org.joda.time.field.OffsetDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int):82:field.getMinimumValue() + offset |==> field.getMinimumValue() * offset
12689:AOR:+(int,int):-(int,int):org.joda.time.field.OffsetDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int):82:field.getMinimumValue() + offset |==> field.getMinimumValue() - offset
12690:AOR:+(int,int):/(int,int):org.joda.time.field.OffsetDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int):82:field.getMinimumValue() + offset |==> field.getMinimumValue() / offset
12691:ROR:<(int,int):!=(int,int):org.joda.time.field.OffsetDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int):82:minValue < (field.getMinimumValue() + offset) |==> minValue != (field.getMinimumValue() + offset)
12692:ROR:<(int,int):<=(int,int):org.joda.time.field.OffsetDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int):82:minValue < (field.getMinimumValue() + offset) |==> minValue <= (field.getMinimumValue() + offset)
12693:ROR:<(int,int):FALSE(int,int):org.joda.time.field.OffsetDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int):82:minValue < (field.getMinimumValue() + offset) |==> false
12694:AOR:+(int,int):%(int,int):org.joda.time.field.OffsetDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int):83:field.getMinimumValue() + offset |==> field.getMinimumValue() % offset
12695:AOR:+(int,int):*(int,int):org.joda.time.field.OffsetDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int):83:field.getMinimumValue() + offset |==> field.getMinimumValue() * offset
12696:AOR:+(int,int):-(int,int):org.joda.time.field.OffsetDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int):83:field.getMinimumValue() + offset |==> field.getMinimumValue() - offset
12697:AOR:+(int,int):/(int,int):org.joda.time.field.OffsetDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int):83:field.getMinimumValue() + offset |==> field.getMinimumValue() / offset
12698:AOR:+(int,int):%(int,int):org.joda.time.field.OffsetDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int):87:field.getMaximumValue() + offset |==> field.getMaximumValue() % offset
12699:AOR:+(int,int):*(int,int):org.joda.time.field.OffsetDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int):87:field.getMaximumValue() + offset |==> field.getMaximumValue() * offset
12700:AOR:+(int,int):-(int,int):org.joda.time.field.OffsetDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int):87:field.getMaximumValue() + offset |==> field.getMaximumValue() - offset
12701:AOR:+(int,int):/(int,int):org.joda.time.field.OffsetDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int):87:field.getMaximumValue() + offset |==> field.getMaximumValue() / offset
12702:ROR:>(int,int):!=(int,int):org.joda.time.field.OffsetDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int):87:maxValue > (field.getMaximumValue() + offset) |==> maxValue != (field.getMaximumValue() + offset)
12703:ROR:>(int,int):>=(int,int):org.joda.time.field.OffsetDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int):87:maxValue > (field.getMaximumValue() + offset) |==> maxValue >= (field.getMaximumValue() + offset)
12704:ROR:>(int,int):FALSE(int,int):org.joda.time.field.OffsetDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int):87:maxValue > (field.getMaximumValue() + offset) |==> false
12705:AOR:+(int,int):%(int,int):org.joda.time.field.OffsetDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int):88:field.getMaximumValue() + offset |==> field.getMaximumValue() % offset
12706:AOR:+(int,int):*(int,int):org.joda.time.field.OffsetDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int):88:field.getMaximumValue() + offset |==> field.getMaximumValue() * offset
12707:AOR:+(int,int):-(int,int):org.joda.time.field.OffsetDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int):88:field.getMaximumValue() + offset |==> field.getMaximumValue() - offset
12708:AOR:+(int,int):/(int,int):org.joda.time.field.OffsetDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int):88:field.getMaximumValue() + offset |==> field.getMaximumValue() / offset
12709:AOR:+(int,int):%(int,int):org.joda.time.field.OffsetDateTimeField@get(long):101:super.get(instant) + iOffset |==> super.get(instant) % iOffset
12710:AOR:+(int,int):*(int,int):org.joda.time.field.OffsetDateTimeField@get(long):101:super.get(instant) + iOffset |==> super.get(instant) * iOffset
12711:AOR:+(int,int):-(int,int):org.joda.time.field.OffsetDateTimeField@get(long):101:super.get(instant) + iOffset |==> super.get(instant) - iOffset
12712:AOR:+(int,int):/(int,int):org.joda.time.field.OffsetDateTimeField@get(long):101:super.get(instant) + iOffset |==> super.get(instant) / iOffset
12713:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.OffsetDateTimeField@add(long,int):113:instant = super.add(instant, amount) |==> <NO-OP>
12714:STD:<CALL>:<NO-OP>:org.joda.time.field.OffsetDateTimeField@add(long,int):114:FieldUtils.verifyValueBounds(this, get(instant), iMin, iMax) |==> <NO-OP>
12715:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.OffsetDateTimeField@add(long,long):127:instant = super.add(instant, amount) |==> <NO-OP>
12716:STD:<CALL>:<NO-OP>:org.joda.time.field.OffsetDateTimeField@add(long,long):128:FieldUtils.verifyValueBounds(this, get(instant), iMin, iMax) |==> <NO-OP>
12717:STD:<CALL>:<NO-OP>:org.joda.time.field.OffsetDateTimeField@set(long,int):153:FieldUtils.verifyValueBounds(this, value, iMin, iMax) |==> <NO-OP>
12718:AOR:-(int,int):%(int,int):org.joda.time.field.OffsetDateTimeField@set(long,int):154:value - iOffset |==> value % iOffset
12719:AOR:-(int,int):*(int,int):org.joda.time.field.OffsetDateTimeField@set(long,int):154:value - iOffset |==> value * iOffset
12720:AOR:-(int,int):+(int,int):org.joda.time.field.OffsetDateTimeField@set(long,int):154:value - iOffset |==> value + iOffset
12721:AOR:-(int,int):/(int,int):org.joda.time.field.OffsetDateTimeField@set(long,int):154:value - iOffset |==> value / iOffset
12722:LVR:TRUE:FALSE:org.joda.time.field.PreciseDurationField@isPrecise():54:true |==> false
12723:AOR:/(long,long):%(long,long):org.joda.time.field.PreciseDurationField@getValueAsLong(long,long):76:duration / iUnitMillis |==> duration % iUnitMillis
12724:AOR:/(long,long):*(long,long):org.joda.time.field.PreciseDurationField@getValueAsLong(long,long):76:duration / iUnitMillis |==> duration * iUnitMillis
12725:AOR:/(long,long):+(long,long):org.joda.time.field.PreciseDurationField@getValueAsLong(long,long):76:duration / iUnitMillis |==> duration + iUnitMillis
12726:AOR:/(long,long):-(long,long):org.joda.time.field.PreciseDurationField@getValueAsLong(long,long):76:duration / iUnitMillis |==> duration - iUnitMillis
12727:AOR:*(long,long):%(long,long):org.joda.time.field.PreciseDurationField@getMillis(int,long):88:value * iUnitMillis |==> value % iUnitMillis
12728:AOR:*(long,long):+(long,long):org.joda.time.field.PreciseDurationField@getMillis(int,long):88:value * iUnitMillis |==> value + iUnitMillis
12729:AOR:*(long,long):-(long,long):org.joda.time.field.PreciseDurationField@getMillis(int,long):88:value * iUnitMillis |==> value - iUnitMillis
12730:AOR:*(long,long):/(long,long):org.joda.time.field.PreciseDurationField@getMillis(int,long):88:value * iUnitMillis |==> value / iUnitMillis
12731:AOR:*(long,long):%(long,long):org.joda.time.field.PreciseDurationField@add(long,int):104:value * iUnitMillis |==> value % iUnitMillis
12732:AOR:*(long,long):+(long,long):org.joda.time.field.PreciseDurationField@add(long,int):104:value * iUnitMillis |==> value + iUnitMillis
12733:AOR:*(long,long):-(long,long):org.joda.time.field.PreciseDurationField@add(long,int):104:value * iUnitMillis |==> value - iUnitMillis
12734:AOR:*(long,long):/(long,long):org.joda.time.field.PreciseDurationField@add(long,int):104:value * iUnitMillis |==> value / iUnitMillis
12735:AOR:/(long,long):%(long,long):org.joda.time.field.PreciseDurationField@getDifferenceAsLong(long,long):115:difference / iUnitMillis |==> difference % iUnitMillis
12736:AOR:/(long,long):*(long,long):org.joda.time.field.PreciseDurationField@getDifferenceAsLong(long,long):115:difference / iUnitMillis |==> difference * iUnitMillis
12737:AOR:/(long,long):+(long,long):org.joda.time.field.PreciseDurationField@getDifferenceAsLong(long,long):115:difference / iUnitMillis |==> difference + iUnitMillis
12738:AOR:/(long,long):-(long,long):org.joda.time.field.PreciseDurationField@getDifferenceAsLong(long,long):115:difference / iUnitMillis |==> difference - iUnitMillis
12739:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.PreciseDurationField@equals(java.lang.Object):127:this == obj |==> false
12740:LVR:TRUE:FALSE:org.joda.time.field.PreciseDurationField@equals(java.lang.Object):128:true |==> false
12741:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.PreciseDurationField@equals(java.lang.Object):131:getType() == other.getType() |==> false
12742:ROR:==(long,long):<=(long,long):org.joda.time.field.PreciseDurationField@equals(java.lang.Object):131:iUnitMillis == other.iUnitMillis |==> iUnitMillis <= other.iUnitMillis
12743:ROR:==(long,long):>=(long,long):org.joda.time.field.PreciseDurationField@equals(java.lang.Object):131:iUnitMillis == other.iUnitMillis |==> iUnitMillis >= other.iUnitMillis
12744:ROR:==(long,long):FALSE(long,long):org.joda.time.field.PreciseDurationField@equals(java.lang.Object):131:iUnitMillis == other.iUnitMillis |==> false
12745:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.field.PreciseDurationField@equals(java.lang.Object):131:(getType() == other.getType()) && (iUnitMillis == other.iUnitMillis) |==> (getType() == other.getType()) == (iUnitMillis == other.iUnitMillis)
12746:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.field.PreciseDurationField@equals(java.lang.Object):131:(getType() == other.getType()) && (iUnitMillis == other.iUnitMillis) |==> false
12747:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.field.PreciseDurationField@equals(java.lang.Object):131:(getType() == other.getType()) && (iUnitMillis == other.iUnitMillis) |==> (getType() == other.getType())
12748:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.field.PreciseDurationField@equals(java.lang.Object):131:(getType() == other.getType()) && (iUnitMillis == other.iUnitMillis) |==> (iUnitMillis == other.iUnitMillis)
12749:LVR:FALSE:TRUE:org.joda.time.field.PreciseDurationField@equals(java.lang.Object):133:false |==> true
12750:LVR:POS:0:org.joda.time.field.PreciseDurationField@hashCode():143:32 |==> 0
12751:LVR:POS:NEG:org.joda.time.field.PreciseDurationField@hashCode():143:32 |==> -32
12752:SOR:>>>(long,int):<<(long,int):org.joda.time.field.PreciseDurationField@hashCode():143:millis >>> 32 |==> millis << 32
12753:SOR:>>>(long,int):>>(long,int):org.joda.time.field.PreciseDurationField@hashCode():143:millis >>> 32 |==> millis >> 32
12754:LOR:^(long,long):&(long,long):org.joda.time.field.PreciseDurationField@hashCode():143:millis ^ (millis >>> 32) |==> millis & (millis >>> 32)
12755:LOR:^(long,long):|(long,long):org.joda.time.field.PreciseDurationField@hashCode():143:millis ^ (millis >>> 32) |==> millis | (millis >>> 32)
12756:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.PreciseDurationField@hashCode():144:hash += getType().hashCode() |==> <NO-OP>
12757:LVR:0:POS:org.joda.time.field.ScaledDurationField@<init>(org.joda.time.DurationField,org.joda.time.DurationFieldType,int):48:0 |==> 1
12758:LVR:0:NEG:org.joda.time.field.ScaledDurationField@<init>(org.joda.time.DurationField,org.joda.time.DurationFieldType,int):48:0 |==> -1
12759:ROR:==(int,int):<=(int,int):org.joda.time.field.ScaledDurationField@<init>(org.joda.time.DurationField,org.joda.time.DurationFieldType,int):48:scalar == 0 |==> scalar <= 0
12760:ROR:==(int,int):>=(int,int):org.joda.time.field.ScaledDurationField@<init>(org.joda.time.DurationField,org.joda.time.DurationFieldType,int):48:scalar == 0 |==> scalar >= 0
12761:ROR:==(int,int):FALSE(int,int):org.joda.time.field.ScaledDurationField@<init>(org.joda.time.DurationField,org.joda.time.DurationFieldType,int):48:scalar == 0 |==> false
12762:LVR:POS:0:org.joda.time.field.ScaledDurationField@<init>(org.joda.time.DurationField,org.joda.time.DurationFieldType,int):48:1 |==> 0
12763:LVR:POS:NEG:org.joda.time.field.ScaledDurationField@<init>(org.joda.time.DurationField,org.joda.time.DurationFieldType,int):48:1 |==> -1
12764:ROR:==(int,int):<=(int,int):org.joda.time.field.ScaledDurationField@<init>(org.joda.time.DurationField,org.joda.time.DurationFieldType,int):48:scalar == 1 |==> scalar <= 1
12765:ROR:==(int,int):>=(int,int):org.joda.time.field.ScaledDurationField@<init>(org.joda.time.DurationField,org.joda.time.DurationFieldType,int):48:scalar == 1 |==> scalar >= 1
12766:ROR:==(int,int):FALSE(int,int):org.joda.time.field.ScaledDurationField@<init>(org.joda.time.DurationField,org.joda.time.DurationFieldType,int):48:scalar == 1 |==> false
12767:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.field.ScaledDurationField@<init>(org.joda.time.DurationField,org.joda.time.DurationFieldType,int):48:scalar == 0 || scalar == 1 |==> scalar == 0 != (scalar == 1)
12768:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.field.ScaledDurationField@<init>(org.joda.time.DurationField,org.joda.time.DurationFieldType,int):48:scalar == 0 || scalar == 1 |==> scalar == 0
12769:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.field.ScaledDurationField@<init>(org.joda.time.DurationField,org.joda.time.DurationFieldType,int):48:scalar == 0 || scalar == 1 |==> scalar == 1
12770:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.field.ScaledDurationField@<init>(org.joda.time.DurationField,org.joda.time.DurationFieldType,int):48:scalar == 0 || scalar == 1 |==> true
12771:AOR:/(int,int):%(int,int):org.joda.time.field.ScaledDurationField@getValue(long):55:getWrappedField().getValue(duration) / iScalar |==> getWrappedField().getValue(duration) % iScalar
12772:AOR:/(int,int):*(int,int):org.joda.time.field.ScaledDurationField@getValue(long):55:getWrappedField().getValue(duration) / iScalar |==> getWrappedField().getValue(duration) * iScalar
12773:AOR:/(int,int):+(int,int):org.joda.time.field.ScaledDurationField@getValue(long):55:getWrappedField().getValue(duration) / iScalar |==> getWrappedField().getValue(duration) + iScalar
12774:AOR:/(int,int):-(int,int):org.joda.time.field.ScaledDurationField@getValue(long):55:getWrappedField().getValue(duration) / iScalar |==> getWrappedField().getValue(duration) - iScalar
12775:AOR:/(long,long):%(long,long):org.joda.time.field.ScaledDurationField@getValueAsLong(long):59:getWrappedField().getValueAsLong(duration) / iScalar |==> getWrappedField().getValueAsLong(duration) % iScalar
12776:AOR:/(long,long):*(long,long):org.joda.time.field.ScaledDurationField@getValueAsLong(long):59:getWrappedField().getValueAsLong(duration) / iScalar |==> getWrappedField().getValueAsLong(duration) * iScalar
12777:AOR:/(long,long):+(long,long):org.joda.time.field.ScaledDurationField@getValueAsLong(long):59:getWrappedField().getValueAsLong(duration) / iScalar |==> getWrappedField().getValueAsLong(duration) + iScalar
12778:AOR:/(long,long):-(long,long):org.joda.time.field.ScaledDurationField@getValueAsLong(long):59:getWrappedField().getValueAsLong(duration) / iScalar |==> getWrappedField().getValueAsLong(duration) - iScalar
12779:AOR:/(int,int):%(int,int):org.joda.time.field.ScaledDurationField@getValue(long,long):63:getWrappedField().getValue(duration, instant) / iScalar |==> getWrappedField().getValue(duration, instant) % iScalar
12780:AOR:/(int,int):*(int,int):org.joda.time.field.ScaledDurationField@getValue(long,long):63:getWrappedField().getValue(duration, instant) / iScalar |==> getWrappedField().getValue(duration, instant) * iScalar
12781:AOR:/(int,int):+(int,int):org.joda.time.field.ScaledDurationField@getValue(long,long):63:getWrappedField().getValue(duration, instant) / iScalar |==> getWrappedField().getValue(duration, instant) + iScalar
12782:AOR:/(int,int):-(int,int):org.joda.time.field.ScaledDurationField@getValue(long,long):63:getWrappedField().getValue(duration, instant) / iScalar |==> getWrappedField().getValue(duration, instant) - iScalar
12783:AOR:/(long,long):%(long,long):org.joda.time.field.ScaledDurationField@getValueAsLong(long,long):67:getWrappedField().getValueAsLong(duration, instant) / iScalar |==> getWrappedField().getValueAsLong(duration, instant) % iScalar
12784:AOR:/(long,long):*(long,long):org.joda.time.field.ScaledDurationField@getValueAsLong(long,long):67:getWrappedField().getValueAsLong(duration, instant) / iScalar |==> getWrappedField().getValueAsLong(duration, instant) * iScalar
12785:AOR:/(long,long):+(long,long):org.joda.time.field.ScaledDurationField@getValueAsLong(long,long):67:getWrappedField().getValueAsLong(duration, instant) / iScalar |==> getWrappedField().getValueAsLong(duration, instant) + iScalar
12786:AOR:/(long,long):-(long,long):org.joda.time.field.ScaledDurationField@getValueAsLong(long,long):67:getWrappedField().getValueAsLong(duration, instant) / iScalar |==> getWrappedField().getValueAsLong(duration, instant) - iScalar
12787:AOR:*(long,long):%(long,long):org.joda.time.field.ScaledDurationField@getMillis(int):71:((long)value) * ((long)iScalar) |==> ((long)value) % ((long)iScalar)
12788:AOR:*(long,long):+(long,long):org.joda.time.field.ScaledDurationField@getMillis(int):71:((long)value) * ((long)iScalar) |==> ((long)value) + ((long)iScalar)
12789:AOR:*(long,long):-(long,long):org.joda.time.field.ScaledDurationField@getMillis(int):71:((long)value) * ((long)iScalar) |==> ((long)value) - ((long)iScalar)
12790:AOR:*(long,long):/(long,long):org.joda.time.field.ScaledDurationField@getMillis(int):71:((long)value) * ((long)iScalar) |==> ((long)value) / ((long)iScalar)
12791:AOR:*(long,long):%(long,long):org.joda.time.field.ScaledDurationField@getMillis(int,long):81:((long)value) * ((long)iScalar) |==> ((long)value) % ((long)iScalar)
12792:AOR:*(long,long):+(long,long):org.joda.time.field.ScaledDurationField@getMillis(int,long):81:((long)value) * ((long)iScalar) |==> ((long)value) + ((long)iScalar)
12793:AOR:*(long,long):-(long,long):org.joda.time.field.ScaledDurationField@getMillis(int,long):81:((long)value) * ((long)iScalar) |==> ((long)value) - ((long)iScalar)
12794:AOR:*(long,long):/(long,long):org.joda.time.field.ScaledDurationField@getMillis(int,long):81:((long)value) * ((long)iScalar) |==> ((long)value) / ((long)iScalar)
12795:AOR:*(long,long):%(long,long):org.joda.time.field.ScaledDurationField@add(long,int):91:((long)value) * ((long)iScalar) |==> ((long)value) % ((long)iScalar)
12796:AOR:*(long,long):+(long,long):org.joda.time.field.ScaledDurationField@add(long,int):91:((long)value) * ((long)iScalar) |==> ((long)value) + ((long)iScalar)
12797:AOR:*(long,long):-(long,long):org.joda.time.field.ScaledDurationField@add(long,int):91:((long)value) * ((long)iScalar) |==> ((long)value) - ((long)iScalar)
12798:AOR:*(long,long):/(long,long):org.joda.time.field.ScaledDurationField@add(long,int):91:((long)value) * ((long)iScalar) |==> ((long)value) / ((long)iScalar)
12799:AOR:/(int,int):%(int,int):org.joda.time.field.ScaledDurationField@getDifference(long,long):101:getWrappedField().getDifference(minuendInstant, subtrahendInstant) / iScalar |==> getWrappedField().getDifference(minuendInstant, subtrahendInstant) % iScalar
12800:AOR:/(int,int):*(int,int):org.joda.time.field.ScaledDurationField@getDifference(long,long):101:getWrappedField().getDifference(minuendInstant, subtrahendInstant) / iScalar |==> getWrappedField().getDifference(minuendInstant, subtrahendInstant) * iScalar
12801:AOR:/(int,int):+(int,int):org.joda.time.field.ScaledDurationField@getDifference(long,long):101:getWrappedField().getDifference(minuendInstant, subtrahendInstant) / iScalar |==> getWrappedField().getDifference(minuendInstant, subtrahendInstant) + iScalar
12802:AOR:/(int,int):-(int,int):org.joda.time.field.ScaledDurationField@getDifference(long,long):101:getWrappedField().getDifference(minuendInstant, subtrahendInstant) / iScalar |==> getWrappedField().getDifference(minuendInstant, subtrahendInstant) - iScalar
12803:AOR:/(long,long):%(long,long):org.joda.time.field.ScaledDurationField@getDifferenceAsLong(long,long):105:getWrappedField().getDifferenceAsLong(minuendInstant, subtrahendInstant) / iScalar |==> getWrappedField().getDifferenceAsLong(minuendInstant, subtrahendInstant) % iScalar
12804:AOR:/(long,long):*(long,long):org.joda.time.field.ScaledDurationField@getDifferenceAsLong(long,long):105:getWrappedField().getDifferenceAsLong(minuendInstant, subtrahendInstant) / iScalar |==> getWrappedField().getDifferenceAsLong(minuendInstant, subtrahendInstant) * iScalar
12805:AOR:/(long,long):+(long,long):org.joda.time.field.ScaledDurationField@getDifferenceAsLong(long,long):105:getWrappedField().getDifferenceAsLong(minuendInstant, subtrahendInstant) / iScalar |==> getWrappedField().getDifferenceAsLong(minuendInstant, subtrahendInstant) + iScalar
12806:AOR:/(long,long):-(long,long):org.joda.time.field.ScaledDurationField@getDifferenceAsLong(long,long):105:getWrappedField().getDifferenceAsLong(minuendInstant, subtrahendInstant) / iScalar |==> getWrappedField().getDifferenceAsLong(minuendInstant, subtrahendInstant) - iScalar
12807:AOR:*(long,long):%(long,long):org.joda.time.field.ScaledDurationField@getUnitMillis():109:getWrappedField().getUnitMillis() * iScalar |==> getWrappedField().getUnitMillis() % iScalar
12808:AOR:*(long,long):+(long,long):org.joda.time.field.ScaledDurationField@getUnitMillis():109:getWrappedField().getUnitMillis() * iScalar |==> getWrappedField().getUnitMillis() + iScalar
12809:AOR:*(long,long):-(long,long):org.joda.time.field.ScaledDurationField@getUnitMillis():109:getWrappedField().getUnitMillis() * iScalar |==> getWrappedField().getUnitMillis() - iScalar
12810:AOR:*(long,long):/(long,long):org.joda.time.field.ScaledDurationField@getUnitMillis():109:getWrappedField().getUnitMillis() * iScalar |==> getWrappedField().getUnitMillis() / iScalar
12811:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.ScaledDurationField@equals(java.lang.Object):130:this == obj |==> false
12812:LVR:TRUE:FALSE:org.joda.time.field.ScaledDurationField@equals(java.lang.Object):131:true |==> false
12813:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.ScaledDurationField@equals(java.lang.Object):135:getType() == other.getType() |==> false
12814:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.field.ScaledDurationField@equals(java.lang.Object):134:(getWrappedField().equals(other.getWrappedField())) && (getType() == other.getType()) |==> (getWrappedField().equals(other.getWrappedField())) == (getType() == other.getType())
12815:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.field.ScaledDurationField@equals(java.lang.Object):134:(getWrappedField().equals(other.getWrappedField())) && (getType() == other.getType()) |==> false
12816:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.field.ScaledDurationField@equals(java.lang.Object):134:(getWrappedField().equals(other.getWrappedField())) && (getType() == other.getType()) |==> (getWrappedField().equals(other.getWrappedField()))
12817:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.field.ScaledDurationField@equals(java.lang.Object):135:(getWrappedField().equals(other.getWrappedField())) && (getType() == other.getType()) |==> (getType() == other.getType())
12818:ROR:==(int,int):<=(int,int):org.joda.time.field.ScaledDurationField@equals(java.lang.Object):136:iScalar == other.iScalar |==> iScalar <= other.iScalar
12819:ROR:==(int,int):>=(int,int):org.joda.time.field.ScaledDurationField@equals(java.lang.Object):136:iScalar == other.iScalar |==> iScalar >= other.iScalar
12820:ROR:==(int,int):FALSE(int,int):org.joda.time.field.ScaledDurationField@equals(java.lang.Object):136:iScalar == other.iScalar |==> false
12821:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.field.ScaledDurationField@equals(java.lang.Object):134:(getWrappedField().equals(other.getWrappedField())) && (getType() == other.getType()) && (iScalar == other.iScalar) |==> ((getWrappedField().equals(other.getWrappedField())) && (getType() == other.getType())) == (iScalar == other.iScalar)
12822:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.field.ScaledDurationField@equals(java.lang.Object):135:(getWrappedField().equals(other.getWrappedField())) && (getType() == other.getType()) && (iScalar == other.iScalar) |==> false
12823:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.field.ScaledDurationField@equals(java.lang.Object):134:(getWrappedField().equals(other.getWrappedField())) && (getType() == other.getType()) && (iScalar == other.iScalar) |==> (getWrappedField().equals(other.getWrappedField())) && (getType() == other.getType())
12824:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.field.ScaledDurationField@equals(java.lang.Object):136:(getWrappedField().equals(other.getWrappedField())) && (getType() == other.getType()) && (iScalar == other.iScalar) |==> (iScalar == other.iScalar)
12825:LVR:FALSE:TRUE:org.joda.time.field.ScaledDurationField@equals(java.lang.Object):138:false |==> true
12826:LVR:POS:0:org.joda.time.field.ScaledDurationField@hashCode():148:32 |==> 0
12827:LVR:POS:NEG:org.joda.time.field.ScaledDurationField@hashCode():148:32 |==> -32
12828:SOR:>>>(long,int):<<(long,int):org.joda.time.field.ScaledDurationField@hashCode():148:scalar >>> 32 |==> scalar << 32
12829:SOR:>>>(long,int):>>(long,int):org.joda.time.field.ScaledDurationField@hashCode():148:scalar >>> 32 |==> scalar >> 32
12830:LOR:^(long,long):&(long,long):org.joda.time.field.ScaledDurationField@hashCode():148:scalar ^ (scalar >>> 32) |==> scalar & (scalar >>> 32)
12831:LOR:^(long,long):|(long,long):org.joda.time.field.ScaledDurationField@hashCode():148:scalar ^ (scalar >>> 32) |==> scalar | (scalar >>> 32)
12832:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.ScaledDurationField@hashCode():149:hash += getType().hashCode() |==> <NO-OP>
12833:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.ScaledDurationField@hashCode():150:hash += getWrappedField().hashCode() |==> <NO-OP>
12834:LVR:0:POS:org.joda.time.field.SkipDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField):54:0 |==> 1
12835:LVR:0:NEG:org.joda.time.field.SkipDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField):54:0 |==> -1
12836:ROR:<(int,int):!=(int,int):org.joda.time.field.SkipDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):68:min < skip |==> min != skip
12837:ROR:<(int,int):<=(int,int):org.joda.time.field.SkipDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):68:min < skip |==> min <= skip
12838:ROR:<(int,int):FALSE(int,int):org.joda.time.field.SkipDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):68:min < skip |==> false
12839:LVR:POS:0:org.joda.time.field.SkipDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):69:1 |==> 0
12840:LVR:POS:NEG:org.joda.time.field.SkipDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):69:1 |==> -1
12841:AOR:-(int,int):%(int,int):org.joda.time.field.SkipDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):69:min - 1 |==> min % 1
12842:AOR:-(int,int):*(int,int):org.joda.time.field.SkipDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):69:min - 1 |==> min * 1
12843:AOR:-(int,int):+(int,int):org.joda.time.field.SkipDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):69:min - 1 |==> min + 1
12844:AOR:-(int,int):/(int,int):org.joda.time.field.SkipDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):69:min - 1 |==> min / 1
12845:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.SkipDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):69:iMinValue = min - 1 |==> <NO-OP>
12846:ROR:==(int,int):<=(int,int):org.joda.time.field.SkipDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):70:min == skip |==> min <= skip
12847:ROR:==(int,int):>=(int,int):org.joda.time.field.SkipDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):70:min == skip |==> min >= skip
12848:ROR:==(int,int):FALSE(int,int):org.joda.time.field.SkipDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):70:min == skip |==> false
12849:LVR:POS:0:org.joda.time.field.SkipDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):71:1 |==> 0
12850:LVR:POS:NEG:org.joda.time.field.SkipDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):71:1 |==> -1
12851:AOR:+(int,int):%(int,int):org.joda.time.field.SkipDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):71:skip + 1 |==> skip % 1
12852:AOR:+(int,int):*(int,int):org.joda.time.field.SkipDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):71:skip + 1 |==> skip * 1
12853:AOR:+(int,int):-(int,int):org.joda.time.field.SkipDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):71:skip + 1 |==> skip - 1
12854:AOR:+(int,int):/(int,int):org.joda.time.field.SkipDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):71:skip + 1 |==> skip / 1
12855:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.SkipDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):71:iMinValue = skip + 1 |==> <NO-OP>
12856:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.SkipDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):73:iMinValue = min |==> <NO-OP>
12857:ROR:<=(int,int):<(int,int):org.joda.time.field.SkipDateTimeField@get(long):81:value <= iSkip |==> value < iSkip
12858:ROR:<=(int,int):==(int,int):org.joda.time.field.SkipDateTimeField@get(long):81:value <= iSkip |==> value == iSkip
12859:ROR:<=(int,int):TRUE(int,int):org.joda.time.field.SkipDateTimeField@get(long):81:value <= iSkip |==> true
12860:STD:<DEC>:<NO-OP>:org.joda.time.field.SkipDateTimeField@get(long):82:value-- |==> <NO-OP>
12861:STD:<CALL>:<NO-OP>:org.joda.time.field.SkipDateTimeField@set(long,int):88:FieldUtils.verifyValueBounds(this, value, iMinValue, getMaximumValue()) |==> <NO-OP>
12862:ROR:<=(int,int):<(int,int):org.joda.time.field.SkipDateTimeField@set(long,int):89:value <= iSkip |==> value < iSkip
12863:ROR:<=(int,int):==(int,int):org.joda.time.field.SkipDateTimeField@set(long,int):89:value <= iSkip |==> value == iSkip
12864:ROR:<=(int,int):TRUE(int,int):org.joda.time.field.SkipDateTimeField@set(long,int):89:value <= iSkip |==> true
12865:ROR:==(int,int):<=(int,int):org.joda.time.field.SkipDateTimeField@set(long,int):90:value == iSkip |==> value <= iSkip
12866:ROR:==(int,int):>=(int,int):org.joda.time.field.SkipDateTimeField@set(long,int):90:value == iSkip |==> value >= iSkip
12867:ROR:==(int,int):FALSE(int,int):org.joda.time.field.SkipDateTimeField@set(long,int):90:value == iSkip |==> false
12868:STD:<INC>:<NO-OP>:org.joda.time.field.SkipDateTimeField@set(long,int):94:value++ |==> <NO-OP>
12869:LVR:0:POS:org.joda.time.field.SkipUndoDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField):53:0 |==> 1
12870:LVR:0:NEG:org.joda.time.field.SkipUndoDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField):53:0 |==> -1
12871:ROR:<(int,int):!=(int,int):org.joda.time.field.SkipUndoDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):67:min < skip |==> min != skip
12872:ROR:<(int,int):<=(int,int):org.joda.time.field.SkipUndoDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):67:min < skip |==> min <= skip
12873:ROR:<(int,int):FALSE(int,int):org.joda.time.field.SkipUndoDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):67:min < skip |==> false
12874:LVR:POS:0:org.joda.time.field.SkipUndoDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):68:1 |==> 0
12875:LVR:POS:NEG:org.joda.time.field.SkipUndoDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):68:1 |==> -1
12876:AOR:+(int,int):%(int,int):org.joda.time.field.SkipUndoDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):68:min + 1 |==> min % 1
12877:AOR:+(int,int):*(int,int):org.joda.time.field.SkipUndoDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):68:min + 1 |==> min * 1
12878:AOR:+(int,int):-(int,int):org.joda.time.field.SkipUndoDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):68:min + 1 |==> min - 1
12879:AOR:+(int,int):/(int,int):org.joda.time.field.SkipUndoDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):68:min + 1 |==> min / 1
12880:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.SkipUndoDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):68:iMinValue = min + 1 |==> <NO-OP>
12881:LVR:POS:0:org.joda.time.field.SkipUndoDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):69:1 |==> 0
12882:LVR:POS:NEG:org.joda.time.field.SkipUndoDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):69:1 |==> -1
12883:AOR:+(int,int):%(int,int):org.joda.time.field.SkipUndoDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):69:skip + 1 |==> skip % 1
12884:AOR:+(int,int):*(int,int):org.joda.time.field.SkipUndoDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):69:skip + 1 |==> skip * 1
12885:AOR:+(int,int):-(int,int):org.joda.time.field.SkipUndoDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):69:skip + 1 |==> skip - 1
12886:AOR:+(int,int):/(int,int):org.joda.time.field.SkipUndoDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):69:skip + 1 |==> skip / 1
12887:ROR:==(int,int):<=(int,int):org.joda.time.field.SkipUndoDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):69:min == skip + 1 |==> min <= skip + 1
12888:ROR:==(int,int):>=(int,int):org.joda.time.field.SkipUndoDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):69:min == skip + 1 |==> min >= skip + 1
12889:ROR:==(int,int):FALSE(int,int):org.joda.time.field.SkipUndoDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):69:min == skip + 1 |==> false
12890:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.SkipUndoDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):70:iMinValue = skip |==> <NO-OP>
12891:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.SkipUndoDateTimeField@<init>(org.joda.time.Chronology,org.joda.time.DateTimeField,int):72:iMinValue = min |==> <NO-OP>
12892:ROR:<(int,int):!=(int,int):org.joda.time.field.SkipUndoDateTimeField@get(long):80:value < iSkip |==> value != iSkip
12893:ROR:<(int,int):<=(int,int):org.joda.time.field.SkipUndoDateTimeField@get(long):80:value < iSkip |==> value <= iSkip
12894:ROR:<(int,int):FALSE(int,int):org.joda.time.field.SkipUndoDateTimeField@get(long):80:value < iSkip |==> false
12895:STD:<INC>:<NO-OP>:org.joda.time.field.SkipUndoDateTimeField@get(long):81:value++ |==> <NO-OP>
12896:STD:<CALL>:<NO-OP>:org.joda.time.field.SkipUndoDateTimeField@set(long,int):87:FieldUtils.verifyValueBounds(this, value, iMinValue, getMaximumValue()) |==> <NO-OP>
12897:ROR:<=(int,int):<(int,int):org.joda.time.field.SkipUndoDateTimeField@set(long,int):88:value <= iSkip |==> value < iSkip
12898:ROR:<=(int,int):==(int,int):org.joda.time.field.SkipUndoDateTimeField@set(long,int):88:value <= iSkip |==> value == iSkip
12899:ROR:<=(int,int):TRUE(int,int):org.joda.time.field.SkipUndoDateTimeField@set(long,int):88:value <= iSkip |==> true
12900:STD:<DEC>:<NO-OP>:org.joda.time.field.SkipUndoDateTimeField@set(long,int):89:value-- |==> <NO-OP>
12901:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.StrictDateTimeField@getInstance(org.joda.time.DateTimeField):41:field == null |==> false
12902:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.StrictDateTimeField@getInstance(org.joda.time.DateTimeField):45:field = ((LenientDateTimeField)field).getWrappedField() |==> <NO-OP>
12903:COR:field.isLenient():TRUE:org.joda.time.field.StrictDateTimeField@getInstance(org.joda.time.DateTimeField):47:field.isLenient() |==> false
12904:COR:field.isLenient():FALSE:org.joda.time.field.StrictDateTimeField@getInstance(org.joda.time.DateTimeField):47:field.isLenient() |==> true
12905:LVR:FALSE:TRUE:org.joda.time.field.StrictDateTimeField@isLenient():58:false |==> true
12906:STD:<CALL>:<NO-OP>:org.joda.time.field.StrictDateTimeField@set(long,int):67:FieldUtils.verifyValueBounds(this, value, getMinimumValue(instant), getMaximumValue(instant)) |==> <NO-OP>
12907:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.UnsupportedDateTimeField@getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DurationField):55:cCache == null |==> false
12908:LVR:POS:0:org.joda.time.field.UnsupportedDateTimeField@getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DurationField):56:7 |==> 0
12909:LVR:POS:NEG:org.joda.time.field.UnsupportedDateTimeField@getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DurationField):56:7 |==> -7
12910:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.UnsupportedDateTimeField@getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DurationField):56:cCache = new HashMap<DateTimeFieldType, UnsupportedDateTimeField>(7) |==> <NO-OP>
12911:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.field.UnsupportedDateTimeField@getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DurationField):60:field != null |==> true
12912:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.field.UnsupportedDateTimeField@getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DurationField):60:field.getDurationField() != durationField |==> true
12913:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.field.UnsupportedDateTimeField@getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DurationField):60:field != null && field.getDurationField() != durationField |==> field != null == (field.getDurationField() != durationField)
12914:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.field.UnsupportedDateTimeField@getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DurationField):60:field != null && field.getDurationField() != durationField |==> false
12915:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.field.UnsupportedDateTimeField@getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DurationField):60:field != null && field.getDurationField() != durationField |==> field != null
12916:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.field.UnsupportedDateTimeField@getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DurationField):60:field != null && field.getDurationField() != durationField |==> field.getDurationField() != durationField
12917:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.UnsupportedDateTimeField@getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DurationField):61:field = null |==> <NO-OP>
12918:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.UnsupportedDateTimeField@getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DurationField):64:field == null |==> false
12919:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.UnsupportedDateTimeField@getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DurationField):65:field = new UnsupportedDateTimeField(type, durationField) |==> <NO-OP>
12920:STD:<CALL>:<NO-OP>:org.joda.time.field.UnsupportedDateTimeField@getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DurationField):66:cCache.put(type, field) |==> <NO-OP>
12921:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.UnsupportedDateTimeField@<init>(org.joda.time.DateTimeFieldType,org.joda.time.DurationField):83:type == null |==> false
12922:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.UnsupportedDateTimeField@<init>(org.joda.time.DateTimeFieldType,org.joda.time.DurationField):83:durationField == null |==> false
12923:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.field.UnsupportedDateTimeField@<init>(org.joda.time.DateTimeFieldType,org.joda.time.DurationField):83:type == null || durationField == null |==> type == null != (durationField == null)
12924:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.field.UnsupportedDateTimeField@<init>(org.joda.time.DateTimeFieldType,org.joda.time.DurationField):83:type == null || durationField == null |==> type == null
12925:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.field.UnsupportedDateTimeField@<init>(org.joda.time.DateTimeFieldType,org.joda.time.DurationField):83:type == null || durationField == null |==> durationField == null
12926:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.field.UnsupportedDateTimeField@<init>(org.joda.time.DateTimeFieldType,org.joda.time.DurationField):83:type == null || durationField == null |==> true
12927:LVR:FALSE:TRUE:org.joda.time.field.UnsupportedDateTimeField@isSupported():108:false |==> true
12928:LVR:FALSE:TRUE:org.joda.time.field.UnsupportedDateTimeField@isLenient():117:false |==> true
12929:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.UnsupportedDurationField@getInstance(org.joda.time.DurationFieldType):49:cCache == null |==> false
12930:LVR:POS:0:org.joda.time.field.UnsupportedDurationField@getInstance(org.joda.time.DurationFieldType):50:7 |==> 0
12931:LVR:POS:NEG:org.joda.time.field.UnsupportedDurationField@getInstance(org.joda.time.DurationFieldType):50:7 |==> -7
12932:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.UnsupportedDurationField@getInstance(org.joda.time.DurationFieldType):50:cCache = new HashMap<DurationFieldType, UnsupportedDurationField>(7) |==> <NO-OP>
12933:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.UnsupportedDurationField@getInstance(org.joda.time.DurationFieldType):55:field == null |==> false
12934:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.UnsupportedDurationField@getInstance(org.joda.time.DurationFieldType):56:field = new UnsupportedDurationField(type) |==> <NO-OP>
12935:STD:<CALL>:<NO-OP>:org.joda.time.field.UnsupportedDurationField@getInstance(org.joda.time.DurationFieldType):57:cCache.put(type, field) |==> <NO-OP>
12936:LVR:FALSE:TRUE:org.joda.time.field.UnsupportedDurationField@isSupported():92:false |==> true
12937:LVR:TRUE:FALSE:org.joda.time.field.UnsupportedDurationField@isPrecise():101:true |==> false
12938:LVR:0:POS:org.joda.time.field.UnsupportedDurationField@getUnitMillis():218:0 |==> 1
12939:LVR:0:NEG:org.joda.time.field.UnsupportedDurationField@getUnitMillis():218:0 |==> -1
12940:LVR:0:POS:org.joda.time.field.UnsupportedDurationField@compareTo(org.joda.time.DurationField):227:0 |==> 1
12941:LVR:0:NEG:org.joda.time.field.UnsupportedDurationField@compareTo(org.joda.time.DurationField):227:0 |==> -1
12942:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.UnsupportedDurationField@equals(java.lang.Object):238:this == obj |==> false
12943:LVR:TRUE:FALSE:org.joda.time.field.UnsupportedDurationField@equals(java.lang.Object):239:true |==> false
12944:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.UnsupportedDurationField@equals(java.lang.Object):242:other.getName() == null |==> false
12945:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.UnsupportedDurationField@equals(java.lang.Object):243:getName() == null |==> false
12946:LVR:FALSE:TRUE:org.joda.time.field.UnsupportedDurationField@equals(java.lang.Object):247:false |==> true
12947:LVR:0:POS:org.joda.time.field.ZeroIsMaxDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType):47:0 |==> 1
12948:LVR:0:NEG:org.joda.time.field.ZeroIsMaxDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType):47:0 |==> -1
12949:ROR:!=(int,int):<(int,int):org.joda.time.field.ZeroIsMaxDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType):47:field.getMinimumValue() != 0 |==> field.getMinimumValue() < 0
12950:ROR:!=(int,int):>(int,int):org.joda.time.field.ZeroIsMaxDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType):47:field.getMinimumValue() != 0 |==> field.getMinimumValue() > 0
12951:ROR:!=(int,int):TRUE(int,int):org.joda.time.field.ZeroIsMaxDateTimeField@<init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType):47:field.getMinimumValue() != 0 |==> true
12952:LVR:0:POS:org.joda.time.field.ZeroIsMaxDateTimeField@get(long):54:0 |==> 1
12953:LVR:0:NEG:org.joda.time.field.ZeroIsMaxDateTimeField@get(long):54:0 |==> -1
12954:ROR:==(int,int):<=(int,int):org.joda.time.field.ZeroIsMaxDateTimeField@get(long):54:value == 0 |==> value <= 0
12955:ROR:==(int,int):>=(int,int):org.joda.time.field.ZeroIsMaxDateTimeField@get(long):54:value == 0 |==> value >= 0
12956:ROR:==(int,int):FALSE(int,int):org.joda.time.field.ZeroIsMaxDateTimeField@get(long):54:value == 0 |==> false
12957:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.ZeroIsMaxDateTimeField@get(long):55:value = getMaximumValue() |==> <NO-OP>
12958:LVR:POS:0:org.joda.time.field.ZeroIsMaxDateTimeField@set(long,int):86:1 |==> 0
12959:LVR:POS:NEG:org.joda.time.field.ZeroIsMaxDateTimeField@set(long,int):86:1 |==> -1
12960:STD:<CALL>:<NO-OP>:org.joda.time.field.ZeroIsMaxDateTimeField@set(long,int):86:FieldUtils.verifyValueBounds(this, value, 1, max) |==> <NO-OP>
12961:ROR:==(int,int):<=(int,int):org.joda.time.field.ZeroIsMaxDateTimeField@set(long,int):87:value == max |==> value <= max
12962:ROR:==(int,int):>=(int,int):org.joda.time.field.ZeroIsMaxDateTimeField@set(long,int):87:value == max |==> value >= max
12963:ROR:==(int,int):FALSE(int,int):org.joda.time.field.ZeroIsMaxDateTimeField@set(long,int):87:value == max |==> false
12964:LVR:0:POS:org.joda.time.field.ZeroIsMaxDateTimeField@set(long,int):88:0 |==> 1
12965:LVR:0:NEG:org.joda.time.field.ZeroIsMaxDateTimeField@set(long,int):88:0 |==> -1
12966:STD:<ASSIGN>:<NO-OP>:org.joda.time.field.ZeroIsMaxDateTimeField@set(long,int):88:value = 0 |==> <NO-OP>
12967:LVR:POS:0:org.joda.time.field.ZeroIsMaxDateTimeField@getMinimumValue():111:1 |==> 0
12968:LVR:POS:NEG:org.joda.time.field.ZeroIsMaxDateTimeField@getMinimumValue():111:1 |==> -1
12969:LVR:POS:0:org.joda.time.field.ZeroIsMaxDateTimeField@getMinimumValue(long):120:1 |==> 0
12970:LVR:POS:NEG:org.joda.time.field.ZeroIsMaxDateTimeField@getMinimumValue(long):120:1 |==> -1
12971:LVR:POS:0:org.joda.time.field.ZeroIsMaxDateTimeField@getMinimumValue(org.joda.time.ReadablePartial):129:1 |==> 0
12972:LVR:POS:NEG:org.joda.time.field.ZeroIsMaxDateTimeField@getMinimumValue(org.joda.time.ReadablePartial):129:1 |==> -1
12973:LVR:POS:0:org.joda.time.field.ZeroIsMaxDateTimeField@getMinimumValue(org.joda.time.ReadablePartial,int[]):138:1 |==> 0
12974:LVR:POS:NEG:org.joda.time.field.ZeroIsMaxDateTimeField@getMinimumValue(org.joda.time.ReadablePartial,int[]):138:1 |==> -1
12975:LVR:POS:0:org.joda.time.field.ZeroIsMaxDateTimeField@getMaximumValue():148:1 |==> 0
12976:LVR:POS:NEG:org.joda.time.field.ZeroIsMaxDateTimeField@getMaximumValue():148:1 |==> -1
12977:AOR:+(int,int):%(int,int):org.joda.time.field.ZeroIsMaxDateTimeField@getMaximumValue():148:getWrappedField().getMaximumValue() + 1 |==> getWrappedField().getMaximumValue() % 1
12978:AOR:+(int,int):*(int,int):org.joda.time.field.ZeroIsMaxDateTimeField@getMaximumValue():148:getWrappedField().getMaximumValue() + 1 |==> getWrappedField().getMaximumValue() * 1
12979:AOR:+(int,int):-(int,int):org.joda.time.field.ZeroIsMaxDateTimeField@getMaximumValue():148:getWrappedField().getMaximumValue() + 1 |==> getWrappedField().getMaximumValue() - 1
12980:AOR:+(int,int):/(int,int):org.joda.time.field.ZeroIsMaxDateTimeField@getMaximumValue():148:getWrappedField().getMaximumValue() + 1 |==> getWrappedField().getMaximumValue() / 1
12981:LVR:POS:0:org.joda.time.field.ZeroIsMaxDateTimeField@getMaximumValue(long):158:1 |==> 0
12982:LVR:POS:NEG:org.joda.time.field.ZeroIsMaxDateTimeField@getMaximumValue(long):158:1 |==> -1
12983:AOR:+(int,int):%(int,int):org.joda.time.field.ZeroIsMaxDateTimeField@getMaximumValue(long):158:getWrappedField().getMaximumValue(instant) + 1 |==> getWrappedField().getMaximumValue(instant) % 1
12984:AOR:+(int,int):*(int,int):org.joda.time.field.ZeroIsMaxDateTimeField@getMaximumValue(long):158:getWrappedField().getMaximumValue(instant) + 1 |==> getWrappedField().getMaximumValue(instant) * 1
12985:AOR:+(int,int):-(int,int):org.joda.time.field.ZeroIsMaxDateTimeField@getMaximumValue(long):158:getWrappedField().getMaximumValue(instant) + 1 |==> getWrappedField().getMaximumValue(instant) - 1
12986:AOR:+(int,int):/(int,int):org.joda.time.field.ZeroIsMaxDateTimeField@getMaximumValue(long):158:getWrappedField().getMaximumValue(instant) + 1 |==> getWrappedField().getMaximumValue(instant) / 1
12987:LVR:POS:0:org.joda.time.field.ZeroIsMaxDateTimeField@getMaximumValue(org.joda.time.ReadablePartial):168:1 |==> 0
12988:LVR:POS:NEG:org.joda.time.field.ZeroIsMaxDateTimeField@getMaximumValue(org.joda.time.ReadablePartial):168:1 |==> -1
12989:AOR:+(int,int):%(int,int):org.joda.time.field.ZeroIsMaxDateTimeField@getMaximumValue(org.joda.time.ReadablePartial):168:getWrappedField().getMaximumValue(instant) + 1 |==> getWrappedField().getMaximumValue(instant) % 1
12990:AOR:+(int,int):*(int,int):org.joda.time.field.ZeroIsMaxDateTimeField@getMaximumValue(org.joda.time.ReadablePartial):168:getWrappedField().getMaximumValue(instant) + 1 |==> getWrappedField().getMaximumValue(instant) * 1
12991:AOR:+(int,int):-(int,int):org.joda.time.field.ZeroIsMaxDateTimeField@getMaximumValue(org.joda.time.ReadablePartial):168:getWrappedField().getMaximumValue(instant) + 1 |==> getWrappedField().getMaximumValue(instant) - 1
12992:AOR:+(int,int):/(int,int):org.joda.time.field.ZeroIsMaxDateTimeField@getMaximumValue(org.joda.time.ReadablePartial):168:getWrappedField().getMaximumValue(instant) + 1 |==> getWrappedField().getMaximumValue(instant) / 1
12993:LVR:POS:0:org.joda.time.field.ZeroIsMaxDateTimeField@getMaximumValue(org.joda.time.ReadablePartial,int[]):178:1 |==> 0
12994:LVR:POS:NEG:org.joda.time.field.ZeroIsMaxDateTimeField@getMaximumValue(org.joda.time.ReadablePartial,int[]):178:1 |==> -1
12995:AOR:+(int,int):%(int,int):org.joda.time.field.ZeroIsMaxDateTimeField@getMaximumValue(org.joda.time.ReadablePartial,int[]):178:getWrappedField().getMaximumValue(instant, values) + 1 |==> getWrappedField().getMaximumValue(instant, values) % 1
12996:AOR:+(int,int):*(int,int):org.joda.time.field.ZeroIsMaxDateTimeField@getMaximumValue(org.joda.time.ReadablePartial,int[]):178:getWrappedField().getMaximumValue(instant, values) + 1 |==> getWrappedField().getMaximumValue(instant, values) * 1
12997:AOR:+(int,int):-(int,int):org.joda.time.field.ZeroIsMaxDateTimeField@getMaximumValue(org.joda.time.ReadablePartial,int[]):178:getWrappedField().getMaximumValue(instant, values) + 1 |==> getWrappedField().getMaximumValue(instant, values) - 1
12998:AOR:+(int,int):/(int,int):org.joda.time.field.ZeroIsMaxDateTimeField@getMaximumValue(org.joda.time.ReadablePartial,int[]):178:getWrappedField().getMaximumValue(instant, values) + 1 |==> getWrappedField().getMaximumValue(instant, values) / 1
12999:LVR:POS:0:org.joda.time.format.DateTimeFormat:157:7 |==> 0
13000:LVR:POS:NEG:org.joda.time.format.DateTimeFormat:157:7 |==> -7
13001:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormat$1@removeEldestEntry(java.util.Map.Entry<java.lang.String,org.joda.time.format.DateTimeFormatter>):161:size() > PATTERN_CACHE_SIZE |==> size() != PATTERN_CACHE_SIZE
13002:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormat$1@removeEldestEntry(java.util.Map.Entry<java.lang.String,org.joda.time.format.DateTimeFormatter>):161:size() > PATTERN_CACHE_SIZE |==> size() >= PATTERN_CACHE_SIZE
13003:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormat$1@removeEldestEntry(java.util.Map.Entry<java.lang.String,org.joda.time.format.DateTimeFormatter>):161:size() > PATTERN_CACHE_SIZE |==> false
13004:LVR:POS:0:org.joda.time.format.DateTimeFormat:166:25 |==> 0
13005:LVR:POS:NEG:org.joda.time.format.DateTimeFormat:166:25 |==> -25
13006:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormat@patternForStyle(java.lang.String,java.util.Locale):230:locale == null |==> false
13007:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormat@patternForStyle(java.lang.String,java.util.Locale):231:locale = Locale.getDefault() |==> <NO-OP>
13008:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@appendPatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):394:parsePatternTo(builder, pattern) |==> <NO-OP>
13009:LVR:POS:0:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):418:1 |==> 0
13010:LVR:POS:NEG:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):418:1 |==> -1
13011:LVR:0:POS:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):420:0 |==> 1
13012:LVR:0:NEG:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):420:0 |==> -1
13013:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):420:i < length |==> i != length
13014:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):420:i < length |==> i <= length
13015:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):420:i < length |==> false
13016:LVR:0:POS:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):421:0 |==> 1
13017:LVR:0:NEG:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):421:0 |==> -1
13018:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):421:indexRef[0] = i |==> <NO-OP>
13019:LVR:0:POS:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):423:0 |==> 1
13020:LVR:0:NEG:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):423:0 |==> -1
13021:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):423:i = indexRef[0] |==> <NO-OP>
13022:LVR:0:POS:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):426:0 |==> 1
13023:LVR:0:NEG:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):426:0 |==> -1
13024:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):426:tokenLen == 0 |==> tokenLen <= 0
13025:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):426:tokenLen == 0 |==> tokenLen >= 0
13026:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):426:tokenLen == 0 |==> false
13027:LVR:0:POS:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):429:0 |==> 1
13028:LVR:0:NEG:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):429:0 |==> -1
13029:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):433:builder.appendEraText() |==> <NO-OP>
13030:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):436:builder.appendCenturyOfEra(tokenLen, tokenLen) |==> <NO-OP>
13031:LVR:POS:0:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):441:2 |==> 0
13032:LVR:POS:NEG:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):441:2 |==> -2
13033:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):441:tokenLen == 2 |==> tokenLen <= 2
13034:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):441:tokenLen == 2 |==> tokenLen >= 2
13035:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):441:tokenLen == 2 |==> false
13036:LVR:TRUE:FALSE:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):442:true |==> false
13037:LVR:POS:0:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):445:1 |==> 0
13038:LVR:POS:NEG:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):445:1 |==> -1
13039:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):445:i + 1 |==> i % 1
13040:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):445:i + 1 |==> i * 1
13041:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):445:i + 1 |==> i - 1
13042:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):445:i + 1 |==> i / 1
13043:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):445:i + 1 < length |==> i + 1 != length
13044:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):445:i + 1 < length |==> i + 1 <= length
13045:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):445:i + 1 < length |==> false
13046:LVR:0:POS:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):446:0 |==> 1
13047:LVR:0:NEG:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):446:0 |==> -1
13048:STD:<INC>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):446:indexRef[0]++ |==> <NO-OP>
13049:COR:isNumericToken(parseToken(pattern, indexRef)):TRUE:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):447:isNumericToken(parseToken(pattern, indexRef)) |==> false
13050:COR:isNumericToken(parseToken(pattern, indexRef)):FALSE:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):447:isNumericToken(parseToken(pattern, indexRef)) |==> true
13051:LVR:FALSE:TRUE:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):451:false |==> true
13052:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):451:lenientParse = false |==> <NO-OP>
13053:LVR:0:POS:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):453:0 |==> 1
13054:LVR:0:NEG:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):453:0 |==> -1
13055:STD:<DEC>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):453:indexRef[0]-- |==> <NO-OP>
13056:LVR:POS:0:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):460:30 |==> 0
13057:LVR:POS:NEG:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):460:30 |==> -30
13058:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):460:new DateTime().getWeekyear() - 30 |==> new DateTime().getWeekyear() % 30
13059:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):460:new DateTime().getWeekyear() - 30 |==> new DateTime().getWeekyear() * 30
13060:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):460:new DateTime().getWeekyear() - 30 |==> new DateTime().getWeekyear() + 30
13061:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):460:new DateTime().getWeekyear() - 30 |==> new DateTime().getWeekyear() / 30
13062:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):459:builder.appendTwoDigitWeekyear(new DateTime().getWeekyear() - 30, lenientParse) |==> <NO-OP>
13063:LVR:POS:0:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):465:30 |==> 0
13064:LVR:POS:NEG:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):465:30 |==> -30
13065:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):465:new DateTime().getYear() - 30 |==> new DateTime().getYear() % 30
13066:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):465:new DateTime().getYear() - 30 |==> new DateTime().getYear() * 30
13067:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):465:new DateTime().getYear() - 30 |==> new DateTime().getYear() + 30
13068:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):465:new DateTime().getYear() - 30 |==> new DateTime().getYear() / 30
13069:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):465:builder.appendTwoDigitYear(new DateTime().getYear() - 30, lenientParse) |==> <NO-OP>
13070:LVR:POS:0:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):470:9 |==> 0
13071:LVR:POS:NEG:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):470:9 |==> -9
13072:LVR:POS:0:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):473:1 |==> 0
13073:LVR:POS:NEG:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):473:1 |==> -1
13074:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):473:i + 1 |==> i % 1
13075:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):473:i + 1 |==> i * 1
13076:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):473:i + 1 |==> i - 1
13077:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):473:i + 1 |==> i / 1
13078:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):473:i + 1 < length |==> i + 1 != length
13079:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):473:i + 1 < length |==> i + 1 <= length
13080:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):473:i + 1 < length |==> false
13081:LVR:0:POS:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):474:0 |==> 1
13082:LVR:0:NEG:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):474:0 |==> -1
13083:STD:<INC>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):474:indexRef[0]++ |==> <NO-OP>
13084:COR:isNumericToken(parseToken(pattern, indexRef)):TRUE:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):475:isNumericToken(parseToken(pattern, indexRef)) |==> false
13085:COR:isNumericToken(parseToken(pattern, indexRef)):FALSE:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):475:isNumericToken(parseToken(pattern, indexRef)) |==> true
13086:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):477:maxDigits = tokenLen |==> <NO-OP>
13087:LVR:0:POS:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):479:0 |==> 1
13088:LVR:0:NEG:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):479:0 |==> -1
13089:STD:<DEC>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):479:indexRef[0]-- |==> <NO-OP>
13090:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):484:builder.appendWeekyear(tokenLen, maxDigits) |==> <NO-OP>
13091:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):487:builder.appendYear(tokenLen, maxDigits) |==> <NO-OP>
13092:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):490:builder.appendYearOfEra(tokenLen, maxDigits) |==> <NO-OP>
13093:LVR:POS:0:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):496:3 |==> 0
13094:LVR:POS:NEG:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):496:3 |==> -3
13095:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):496:tokenLen >= 3 |==> tokenLen == 3
13096:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):496:tokenLen >= 3 |==> tokenLen > 3
13097:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):496:tokenLen >= 3 |==> true
13098:LVR:POS:0:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):497:4 |==> 0
13099:LVR:POS:NEG:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):497:4 |==> -4
13100:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):497:tokenLen >= 4 |==> tokenLen == 4
13101:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):497:tokenLen >= 4 |==> tokenLen > 4
13102:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):497:tokenLen >= 4 |==> true
13103:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):498:builder.appendMonthOfYearText() |==> <NO-OP>
13104:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):500:builder.appendMonthOfYearShortText() |==> <NO-OP>
13105:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):503:builder.appendMonthOfYear(tokenLen) |==> <NO-OP>
13106:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):507:builder.appendDayOfMonth(tokenLen) |==> <NO-OP>
13107:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):510:builder.appendHalfdayOfDayText() |==> <NO-OP>
13108:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):513:builder.appendClockhourOfHalfday(tokenLen) |==> <NO-OP>
13109:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):516:builder.appendHourOfDay(tokenLen) |==> <NO-OP>
13110:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):519:builder.appendClockhourOfDay(tokenLen) |==> <NO-OP>
13111:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):522:builder.appendHourOfHalfday(tokenLen) |==> <NO-OP>
13112:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):525:builder.appendMinuteOfHour(tokenLen) |==> <NO-OP>
13113:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):528:builder.appendSecondOfMinute(tokenLen) |==> <NO-OP>
13114:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):531:builder.appendFractionOfSecond(tokenLen, tokenLen) |==> <NO-OP>
13115:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):534:builder.appendDayOfWeek(tokenLen) |==> <NO-OP>
13116:LVR:POS:0:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):537:4 |==> 0
13117:LVR:POS:NEG:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):537:4 |==> -4
13118:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):537:tokenLen >= 4 |==> tokenLen == 4
13119:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):537:tokenLen >= 4 |==> tokenLen > 4
13120:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):537:tokenLen >= 4 |==> true
13121:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):538:builder.appendDayOfWeekText() |==> <NO-OP>
13122:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):540:builder.appendDayOfWeekShortText() |==> <NO-OP>
13123:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):544:builder.appendDayOfYear(tokenLen) |==> <NO-OP>
13124:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):547:builder.appendWeekOfWeekyear(tokenLen) |==> <NO-OP>
13125:LVR:POS:0:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):550:4 |==> 0
13126:LVR:POS:NEG:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):550:4 |==> -4
13127:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):550:tokenLen >= 4 |==> tokenLen == 4
13128:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):550:tokenLen >= 4 |==> tokenLen > 4
13129:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):550:tokenLen >= 4 |==> true
13130:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):551:builder.appendTimeZoneName() |==> <NO-OP>
13131:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):553:builder.appendTimeZoneShortName(null) |==> <NO-OP>
13132:LVR:POS:0:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):557:1 |==> 0
13133:LVR:POS:NEG:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):557:1 |==> -1
13134:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):557:tokenLen == 1 |==> tokenLen <= 1
13135:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):557:tokenLen == 1 |==> tokenLen >= 1
13136:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):557:tokenLen == 1 |==> false
13137:LVR:FALSE:TRUE:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):558:false |==> true
13138:LVR:POS:0:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):558:2 |==> 0
13139:LVR:POS:NEG:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):558:2 |==> -2
13140:LVR:POS:0:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):558:2 |==> 0
13141:LVR:POS:NEG:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):558:2 |==> -2
13142:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):558:builder.appendTimeZoneOffset(null, "Z", false, 2, 2) |==> <NO-OP>
13143:LVR:POS:0:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):559:2 |==> 0
13144:LVR:POS:NEG:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):559:2 |==> -2
13145:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):559:tokenLen == 2 |==> tokenLen <= 2
13146:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):559:tokenLen == 2 |==> tokenLen >= 2
13147:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):559:tokenLen == 2 |==> false
13148:LVR:TRUE:FALSE:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):560:true |==> false
13149:LVR:POS:0:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):560:2 |==> 0
13150:LVR:POS:NEG:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):560:2 |==> -2
13151:LVR:POS:0:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):560:2 |==> 0
13152:LVR:POS:NEG:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):560:2 |==> -2
13153:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):560:builder.appendTimeZoneOffset(null, "Z", true, 2, 2) |==> <NO-OP>
13154:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):562:builder.appendTimeZoneId() |==> <NO-OP>
13155:LVR:POS:0:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):566:1 |==> 0
13156:LVR:POS:NEG:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):566:1 |==> -1
13157:LVR:POS:0:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):567:1 |==> 0
13158:LVR:POS:NEG:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):567:1 |==> -1
13159:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):567:sub.length() == 1 |==> sub.length() <= 1
13160:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):567:sub.length() == 1 |==> sub.length() >= 1
13161:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):567:sub.length() == 1 |==> false
13162:LVR:0:POS:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):568:0 |==> 1
13163:LVR:0:NEG:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):568:0 |==> -1
13164:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):568:builder.appendLiteral(sub.charAt(0)) |==> <NO-OP>
13165:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String):572:builder.appendLiteral(new String(sub)) |==> <NO-OP>
13166:LVR:0:POS:org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):593:0 |==> 1
13167:LVR:0:NEG:org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):593:0 |==> -1
13168:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):597:c >= 'A' |==> c == 'A'
13169:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):597:c >= 'A' |==> c > 'A'
13170:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):597:c >= 'A' |==> true
13171:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):597:c <= 'Z' |==> c < 'Z'
13172:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):597:c <= 'Z' |==> c == 'Z'
13173:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):597:c <= 'Z' |==> true
13174:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):597:c >= 'A' && c <= 'Z' |==> c >= 'A' == c <= 'Z'
13175:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):597:c >= 'A' && c <= 'Z' |==> false
13176:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):597:c >= 'A' && c <= 'Z' |==> c >= 'A'
13177:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):597:c >= 'A' && c <= 'Z' |==> c <= 'Z'
13178:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):597:c >= 'a' |==> c == 'a'
13179:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):597:c >= 'a' |==> c > 'a'
13180:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):597:c >= 'a' |==> true
13181:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):597:c <= 'z' |==> c < 'z'
13182:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):597:c <= 'z' |==> c == 'z'
13183:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):597:c <= 'z' |==> true
13184:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):597:c >= 'a' && c <= 'z' |==> c >= 'a' == c <= 'z'
13185:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):597:c >= 'a' && c <= 'z' |==> false
13186:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):597:c >= 'a' && c <= 'z' |==> c >= 'a'
13187:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):597:c >= 'a' && c <= 'z' |==> c <= 'z'
13188:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):597:c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z' |==> (c >= 'A' && c <= 'Z') != (c >= 'a' && c <= 'z')
13189:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):597:c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z' |==> c >= 'A' && c <= 'Z'
13190:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):597:c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z' |==> c >= 'a' && c <= 'z'
13191:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):597:c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z' |==> true
13192:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):600:buf.append(c) |==> <NO-OP>
13193:LVR:POS:0:org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):602:1 |==> 0
13194:LVR:POS:NEG:org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):602:1 |==> -1
13195:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):602:i + 1 |==> i % 1
13196:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):602:i + 1 |==> i * 1
13197:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):602:i + 1 |==> i - 1
13198:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):602:i + 1 |==> i / 1
13199:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):602:i + 1 < length |==> i + 1 != length
13200:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):602:i + 1 < length |==> i + 1 <= length
13201:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):602:i + 1 < length |==> false
13202:LVR:POS:0:org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):603:1 |==> 0
13203:LVR:POS:NEG:org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):603:1 |==> -1
13204:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):603:i + 1 |==> i % 1
13205:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):603:i + 1 |==> i * 1
13206:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):603:i + 1 |==> i - 1
13207:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):603:i + 1 |==> i / 1
13208:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):604:peek == c |==> peek <= c
13209:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):604:peek == c |==> peek >= c
13210:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):604:peek == c |==> false
13211:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):605:buf.append(c) |==> <NO-OP>
13212:STD:<INC>:<NO-OP>:org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):606:i++ |==> <NO-OP>
13213:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):613:buf.append('\'') |==> <NO-OP>
13214:LVR:FALSE:TRUE:org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):615:false |==> true
13215:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):617:i < length |==> i != length
13216:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):617:i < length |==> i <= length
13217:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):617:i < length |==> false
13218:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):618:c = pattern.charAt(i) |==> <NO-OP>
13219:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):620:c == '\'' |==> c <= '\''
13220:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):620:c == '\'' |==> c >= '\''
13221:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):620:c == '\'' |==> false
13222:LVR:POS:0:org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):621:1 |==> 0
13223:LVR:POS:NEG:org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):621:1 |==> -1
13224:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):621:i + 1 |==> i % 1
13225:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):621:i + 1 |==> i * 1
13226:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):621:i + 1 |==> i - 1
13227:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):621:i + 1 |==> i / 1
13228:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):621:i + 1 < length |==> i + 1 != length
13229:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):621:i + 1 < length |==> i + 1 <= length
13230:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):621:i + 1 < length |==> false
13231:LVR:POS:0:org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):621:1 |==> 0
13232:LVR:POS:NEG:org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):621:1 |==> -1
13233:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):621:i + 1 |==> i % 1
13234:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):621:i + 1 |==> i * 1
13235:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):621:i + 1 |==> i - 1
13236:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):621:i + 1 |==> i / 1
13237:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):621:pattern.charAt(i + 1) == '\'' |==> pattern.charAt(i + 1) <= '\''
13238:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):621:pattern.charAt(i + 1) == '\'' |==> pattern.charAt(i + 1) >= '\''
13239:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):621:pattern.charAt(i + 1) == '\'' |==> false
13240:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):621:i + 1 < length && pattern.charAt(i + 1) == '\'' |==> i + 1 < length == (pattern.charAt(i + 1) == '\'')
13241:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):621:i + 1 < length && pattern.charAt(i + 1) == '\'' |==> false
13242:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):621:i + 1 < length && pattern.charAt(i + 1) == '\'' |==> i + 1 < length
13243:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):621:i + 1 < length && pattern.charAt(i + 1) == '\'' |==> pattern.charAt(i + 1) == '\''
13244:STD:<INC>:<NO-OP>:org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):623:i++ |==> <NO-OP>
13245:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):624:buf.append(c) |==> <NO-OP>
13246:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):626:inLiteral = !inLiteral |==> <NO-OP>
13247:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):629:c >= 'A' |==> c == 'A'
13248:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):629:c >= 'A' |==> c > 'A'
13249:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):629:c >= 'A' |==> true
13250:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):629:c <= 'Z' |==> c < 'Z'
13251:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):629:c <= 'Z' |==> c == 'Z'
13252:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):629:c <= 'Z' |==> true
13253:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):629:c >= 'A' && c <= 'Z' |==> c >= 'A' == c <= 'Z'
13254:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):629:c >= 'A' && c <= 'Z' |==> false
13255:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):629:c >= 'A' && c <= 'Z' |==> c >= 'A'
13256:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):629:c >= 'A' && c <= 'Z' |==> c <= 'Z'
13257:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):629:c >= 'a' |==> c == 'a'
13258:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):629:c >= 'a' |==> c > 'a'
13259:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):629:c >= 'a' |==> true
13260:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):629:c <= 'z' |==> c < 'z'
13261:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):629:c <= 'z' |==> c == 'z'
13262:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):629:c <= 'z' |==> true
13263:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):629:c >= 'a' && c <= 'z' |==> c >= 'a' == c <= 'z'
13264:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):629:c >= 'a' && c <= 'z' |==> false
13265:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):629:c >= 'a' && c <= 'z' |==> c >= 'a'
13266:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):629:c >= 'a' && c <= 'z' |==> c <= 'z'
13267:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):629:c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z' |==> (c >= 'A' && c <= 'Z') != (c >= 'a' && c <= 'z')
13268:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):629:c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z' |==> c >= 'A' && c <= 'Z'
13269:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):629:c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z' |==> c >= 'a' && c <= 'z'
13270:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):629:c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z' |==> true
13271:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):628:!inLiteral && (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z') |==> !inLiteral == (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z')
13272:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):628:!inLiteral && (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z') |==> false
13273:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):628:!inLiteral && (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z') |==> !inLiteral
13274:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):629:!inLiteral && (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z') |==> (c >= 'A' && c <= 'Z' || c >= 'a' && c <= 'z')
13275:STD:<DEC>:<NO-OP>:org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):630:i-- |==> <NO-OP>
13276:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):633:buf.append(c) |==> <NO-OP>
13277:LVR:0:POS:org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):638:0 |==> 1
13278:LVR:0:NEG:org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):638:0 |==> -1
13279:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormat@parseToken(java.lang.String,int[]):638:indexRef[0] = i |==> <NO-OP>
13280:LVR:0:POS:org.joda.time.format.DateTimeFormat@isNumericToken(java.lang.String):650:0 |==> 1
13281:LVR:0:NEG:org.joda.time.format.DateTimeFormat@isNumericToken(java.lang.String):650:0 |==> -1
13282:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormat@isNumericToken(java.lang.String):650:tokenLen > 0 |==> tokenLen != 0
13283:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormat@isNumericToken(java.lang.String):650:tokenLen > 0 |==> tokenLen >= 0
13284:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormat@isNumericToken(java.lang.String):650:tokenLen > 0 |==> false
13285:LVR:0:POS:org.joda.time.format.DateTimeFormat@isNumericToken(java.lang.String):651:0 |==> 1
13286:LVR:0:NEG:org.joda.time.format.DateTimeFormat@isNumericToken(java.lang.String):651:0 |==> -1
13287:LVR:TRUE:FALSE:org.joda.time.format.DateTimeFormat@isNumericToken(java.lang.String):671:true |==> false
13288:LVR:POS:0:org.joda.time.format.DateTimeFormat@isNumericToken(java.lang.String):673:2 |==> 0
13289:LVR:POS:NEG:org.joda.time.format.DateTimeFormat@isNumericToken(java.lang.String):673:2 |==> -2
13290:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormat@isNumericToken(java.lang.String):673:tokenLen <= 2 |==> tokenLen < 2
13291:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormat@isNumericToken(java.lang.String):673:tokenLen <= 2 |==> tokenLen == 2
13292:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormat@isNumericToken(java.lang.String):673:tokenLen <= 2 |==> true
13293:LVR:TRUE:FALSE:org.joda.time.format.DateTimeFormat@isNumericToken(java.lang.String):674:true |==> false
13294:LVR:FALSE:TRUE:org.joda.time.format.DateTimeFormat@isNumericToken(java.lang.String):679:false |==> true
13295:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormat@createFormatterForPattern(java.lang.String):691:pattern == null |==> false
13296:LVR:0:POS:org.joda.time.format.DateTimeFormat@createFormatterForPattern(java.lang.String):691:0 |==> 1
13297:LVR:0:NEG:org.joda.time.format.DateTimeFormat@createFormatterForPattern(java.lang.String):691:0 |==> -1
13298:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormat@createFormatterForPattern(java.lang.String):691:pattern.length() == 0 |==> pattern.length() <= 0
13299:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormat@createFormatterForPattern(java.lang.String):691:pattern.length() == 0 |==> pattern.length() >= 0
13300:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormat@createFormatterForPattern(java.lang.String):691:pattern.length() == 0 |==> false
13301:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormat@createFormatterForPattern(java.lang.String):691:pattern == null || pattern.length() == 0 |==> pattern == null != (pattern.length() == 0)
13302:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormat@createFormatterForPattern(java.lang.String):691:pattern == null || pattern.length() == 0 |==> pattern == null
13303:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormat@createFormatterForPattern(java.lang.String):691:pattern == null || pattern.length() == 0 |==> pattern.length() == 0
13304:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormat@createFormatterForPattern(java.lang.String):691:pattern == null || pattern.length() == 0 |==> true
13305:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormat@createFormatterForPattern(java.lang.String):696:formatter = PATTERN_CACHE.get(pattern) |==> <NO-OP>
13306:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormat@createFormatterForPattern(java.lang.String):697:formatter == null |==> false
13307:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@createFormatterForPattern(java.lang.String):699:parsePatternTo(builder, pattern) |==> <NO-OP>
13308:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormat@createFormatterForPattern(java.lang.String):700:formatter = builder.toFormatter() |==> <NO-OP>
13309:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat@createFormatterForPattern(java.lang.String):702:PATTERN_CACHE.put(pattern, formatter) |==> <NO-OP>
13310:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormat@createFormatterForStyle(java.lang.String):718:style == null |==> false
13311:LVR:POS:0:org.joda.time.format.DateTimeFormat@createFormatterForStyle(java.lang.String):718:2 |==> 0
13312:LVR:POS:NEG:org.joda.time.format.DateTimeFormat@createFormatterForStyle(java.lang.String):718:2 |==> -2
13313:ROR:!=(int,int):<(int,int):org.joda.time.format.DateTimeFormat@createFormatterForStyle(java.lang.String):718:style.length() != 2 |==> style.length() < 2
13314:ROR:!=(int,int):>(int,int):org.joda.time.format.DateTimeFormat@createFormatterForStyle(java.lang.String):718:style.length() != 2 |==> style.length() > 2
13315:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormat@createFormatterForStyle(java.lang.String):718:style.length() != 2 |==> true
13316:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormat@createFormatterForStyle(java.lang.String):718:style == null || style.length() != 2 |==> style == null != (style.length() != 2)
13317:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormat@createFormatterForStyle(java.lang.String):718:style == null || style.length() != 2 |==> style == null
13318:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormat@createFormatterForStyle(java.lang.String):718:style == null || style.length() != 2 |==> style.length() != 2
13319:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormat@createFormatterForStyle(java.lang.String):718:style == null || style.length() != 2 |==> true
13320:LVR:0:POS:org.joda.time.format.DateTimeFormat@createFormatterForStyle(java.lang.String):721:0 |==> 1
13321:LVR:0:NEG:org.joda.time.format.DateTimeFormat@createFormatterForStyle(java.lang.String):721:0 |==> -1
13322:LVR:POS:0:org.joda.time.format.DateTimeFormat@createFormatterForStyle(java.lang.String):722:1 |==> 0
13323:LVR:POS:NEG:org.joda.time.format.DateTimeFormat@createFormatterForStyle(java.lang.String):722:1 |==> -1
13324:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormat@createFormatterForStyle(java.lang.String):723:dateStyle == NONE |==> dateStyle <= NONE
13325:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormat@createFormatterForStyle(java.lang.String):723:dateStyle == NONE |==> dateStyle >= NONE
13326:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormat@createFormatterForStyle(java.lang.String):723:dateStyle == NONE |==> false
13327:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormat@createFormatterForStyle(java.lang.String):723:timeStyle == NONE |==> timeStyle <= NONE
13328:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormat@createFormatterForStyle(java.lang.String):723:timeStyle == NONE |==> timeStyle >= NONE
13329:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormat@createFormatterForStyle(java.lang.String):723:timeStyle == NONE |==> false
13330:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormat@createFormatterForStyle(java.lang.String):723:dateStyle == NONE && timeStyle == NONE |==> dateStyle == NONE == (timeStyle == NONE)
13331:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormat@createFormatterForStyle(java.lang.String):723:dateStyle == NONE && timeStyle == NONE |==> false
13332:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormat@createFormatterForStyle(java.lang.String):723:dateStyle == NONE && timeStyle == NONE |==> dateStyle == NONE
13333:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormat@createFormatterForStyle(java.lang.String):723:dateStyle == NONE && timeStyle == NONE |==> timeStyle == NONE
13334:LVR:POS:0:org.joda.time.format.DateTimeFormat@createFormatterForStyleIndex(int,int):737:2 |==> 0
13335:LVR:POS:NEG:org.joda.time.format.DateTimeFormat@createFormatterForStyleIndex(int,int):737:2 |==> -2
13336:SOR:<<(int,int):>>(int,int):org.joda.time.format.DateTimeFormat@createFormatterForStyleIndex(int,int):737:dateStyle << 2 |==> dateStyle >> 2
13337:SOR:<<(int,int):>>>(int,int):org.joda.time.format.DateTimeFormat@createFormatterForStyleIndex(int,int):737:dateStyle << 2 |==> dateStyle >>> 2
13338:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormat@createFormatterForStyleIndex(int,int):737:(dateStyle << 2) + dateStyle |==> (dateStyle << 2) % dateStyle
13339:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormat@createFormatterForStyleIndex(int,int):737:(dateStyle << 2) + dateStyle |==> (dateStyle << 2) * dateStyle
13340:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormat@createFormatterForStyleIndex(int,int):737:(dateStyle << 2) + dateStyle |==> (dateStyle << 2) - dateStyle
13341:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormat@createFormatterForStyleIndex(int,int):737:(dateStyle << 2) + dateStyle |==> (dateStyle << 2) / dateStyle
13342:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormat@createFormatterForStyleIndex(int,int):737:((dateStyle << 2) + dateStyle) + timeStyle |==> ((dateStyle << 2) + dateStyle) % timeStyle
13343:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormat@createFormatterForStyleIndex(int,int):737:((dateStyle << 2) + dateStyle) + timeStyle |==> ((dateStyle << 2) + dateStyle) * timeStyle
13344:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormat@createFormatterForStyleIndex(int,int):737:((dateStyle << 2) + dateStyle) + timeStyle |==> ((dateStyle << 2) + dateStyle) - timeStyle
13345:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormat@createFormatterForStyleIndex(int,int):737:((dateStyle << 2) + dateStyle) + timeStyle |==> ((dateStyle << 2) + dateStyle) / timeStyle
13346:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormat@createFormatterForStyleIndex(int,int):739:index >= STYLE_CACHE.length |==> index == STYLE_CACHE.length
13347:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormat@createFormatterForStyleIndex(int,int):739:index >= STYLE_CACHE.length |==> index > STYLE_CACHE.length
13348:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormat@createFormatterForStyleIndex(int,int):739:index >= STYLE_CACHE.length |==> true
13349:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormat@createFormatterForStyleIndex(int,int):744:f = STYLE_CACHE[index] |==> <NO-OP>
13350:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormat@createFormatterForStyleIndex(int,int):745:f == null |==> false
13351:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormat@createFormatterForStyleIndex(int,int):746:f = createDateTimeFormatter(dateStyle, timeStyle) |==> <NO-OP>
13352:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormat@createFormatterForStyleIndex(int,int):747:STYLE_CACHE[index] = f |==> <NO-OP>
13353:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormat@createDateTimeFormatter(int,int):761:dateStyle == NONE |==> dateStyle <= NONE
13354:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormat@createDateTimeFormatter(int,int):761:dateStyle == NONE |==> dateStyle >= NONE
13355:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormat@createDateTimeFormatter(int,int):761:dateStyle == NONE |==> false
13356:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormat@createDateTimeFormatter(int,int):762:type = TIME |==> <NO-OP>
13357:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormat@createDateTimeFormatter(int,int):763:timeStyle == NONE |==> timeStyle <= NONE
13358:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormat@createDateTimeFormatter(int,int):763:timeStyle == NONE |==> timeStyle >= NONE
13359:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormat@createDateTimeFormatter(int,int):763:timeStyle == NONE |==> false
13360:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormat@createDateTimeFormatter(int,int):764:type = DATE |==> <NO-OP>
13361:LVR:POS:0:org.joda.time.format.DateTimeFormat$StyleFormatter@estimatePrintedLength():811:40 |==> 0
13362:LVR:POS:NEG:org.joda.time.format.DateTimeFormat$StyleFormatter@estimatePrintedLength():811:40 |==> -40
13363:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat$StyleFormatter@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):818:p.printTo(buf, instant, chrono, displayOffset, displayZone, locale) |==> <NO-OP>
13364:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat$StyleFormatter@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):825:p.printTo(out, instant, chrono, displayOffset, displayZone, locale) |==> <NO-OP>
13365:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat$StyleFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):830:p.printTo(buf, partial, locale) |==> <NO-OP>
13366:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat$StyleFormatter@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):835:p.printTo(out, partial, locale) |==> <NO-OP>
13367:LVR:POS:0:org.joda.time.format.DateTimeFormat$StyleFormatter@estimateParsedLength():839:40 |==> 0
13368:LVR:POS:NEG:org.joda.time.format.DateTimeFormat$StyleFormatter@estimateParsedLength():839:40 |==> -40
13369:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormat$StyleFormatter@getFormatter(java.util.Locale):848:locale == null |==> false
13370:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormat$StyleFormatter@getFormatter(java.util.Locale):848:locale = (locale == null ? Locale.getDefault() : locale) |==> <NO-OP>
13371:LVR:POS:0:org.joda.time.format.DateTimeFormat$StyleFormatter@getFormatter(java.util.Locale):849:4 |==> 0
13372:LVR:POS:NEG:org.joda.time.format.DateTimeFormat$StyleFormatter@getFormatter(java.util.Locale):849:4 |==> -4
13373:SOR:<<(int,int):>>(int,int):org.joda.time.format.DateTimeFormat$StyleFormatter@getFormatter(java.util.Locale):849:iDateStyle << 4 |==> iDateStyle >> 4
13374:SOR:<<(int,int):>>>(int,int):org.joda.time.format.DateTimeFormat$StyleFormatter@getFormatter(java.util.Locale):849:iDateStyle << 4 |==> iDateStyle >>> 4
13375:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormat$StyleFormatter@getFormatter(java.util.Locale):849:iType + (iDateStyle << 4) |==> iType % (iDateStyle << 4)
13376:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormat$StyleFormatter@getFormatter(java.util.Locale):849:iType + (iDateStyle << 4) |==> iType * (iDateStyle << 4)
13377:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormat$StyleFormatter@getFormatter(java.util.Locale):849:iType + (iDateStyle << 4) |==> iType - (iDateStyle << 4)
13378:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormat$StyleFormatter@getFormatter(java.util.Locale):849:iType + (iDateStyle << 4) |==> iType / (iDateStyle << 4)
13379:LVR:POS:0:org.joda.time.format.DateTimeFormat$StyleFormatter@getFormatter(java.util.Locale):849:8 |==> 0
13380:LVR:POS:NEG:org.joda.time.format.DateTimeFormat$StyleFormatter@getFormatter(java.util.Locale):849:8 |==> -8
13381:SOR:<<(int,int):>>(int,int):org.joda.time.format.DateTimeFormat$StyleFormatter@getFormatter(java.util.Locale):849:iTimeStyle << 8 |==> iTimeStyle >> 8
13382:SOR:<<(int,int):>>>(int,int):org.joda.time.format.DateTimeFormat$StyleFormatter@getFormatter(java.util.Locale):849:iTimeStyle << 8 |==> iTimeStyle >>> 8
13383:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormat$StyleFormatter@getFormatter(java.util.Locale):849:iType + (iDateStyle << 4) + (iTimeStyle << 8) |==> (iType + (iDateStyle << 4)) % (iTimeStyle << 8)
13384:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormat$StyleFormatter@getFormatter(java.util.Locale):849:iType + (iDateStyle << 4) + (iTimeStyle << 8) |==> (iType + (iDateStyle << 4)) * (iTimeStyle << 8)
13385:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormat$StyleFormatter@getFormatter(java.util.Locale):849:iType + (iDateStyle << 4) + (iTimeStyle << 8) |==> iType + (iDateStyle << 4) - (iTimeStyle << 8)
13386:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormat$StyleFormatter@getFormatter(java.util.Locale):849:iType + (iDateStyle << 4) + (iTimeStyle << 8) |==> (iType + (iDateStyle << 4)) / (iTimeStyle << 8)
13387:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormat$StyleFormatter@getFormatter(java.util.Locale):852:f = cCache.get(key) |==> <NO-OP>
13388:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormat$StyleFormatter@getFormatter(java.util.Locale):853:f == null |==> false
13389:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormat$StyleFormatter@getFormatter(java.util.Locale):855:f = DateTimeFormat.forPattern(pattern) |==> <NO-OP>
13390:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormat$StyleFormatter@getFormatter(java.util.Locale):856:cCache.put(key, f) |==> <NO-OP>
13391:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormat$StyleFormatter@getPattern(java.util.Locale):866:f = DateFormat.getDateInstance(iDateStyle, locale) |==> <NO-OP>
13392:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormat$StyleFormatter@getPattern(java.util.Locale):869:f = DateFormat.getTimeInstance(iTimeStyle, locale) |==> <NO-OP>
13393:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormat$StyleFormatter@getPattern(java.util.Locale):872:f = DateFormat.getDateTimeInstance(iDateStyle, iTimeStyle, locale) |==> <NO-OP>
13394:LVR:FALSE:TRUE:org.joda.time.format.DateTimeFormat$StyleFormatter@getPattern(java.util.Locale):875:false |==> true
13395:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormat$StyleFormatter@getPattern(java.util.Locale):875:f instanceof SimpleDateFormat == false |==> false
13396:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormat$StyleFormatter@getPattern(java.util.Locale):875:f instanceof SimpleDateFormat == false |==> f instanceof SimpleDateFormat
13397:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormat$StyleFormatter@getPattern(java.util.Locale):875:f instanceof SimpleDateFormat == false |==> false
13398:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@<init>():85:iElementPairs = new ArrayList<Object>() |==> <NO-OP>
13399:COR:isPrinter(f):TRUE:org.joda.time.format.DateTimeFormatterBuilder@toFormatter():107:isPrinter(f) |==> false
13400:COR:isPrinter(f):FALSE:org.joda.time.format.DateTimeFormatterBuilder@toFormatter():107:isPrinter(f) |==> true
13401:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@toFormatter():108:printer = (DateTimePrinter)f |==> <NO-OP>
13402:COR:isParser(f):TRUE:org.joda.time.format.DateTimeFormatterBuilder@toFormatter():111:isParser(f) |==> false
13403:COR:isParser(f):FALSE:org.joda.time.format.DateTimeFormatterBuilder@toFormatter():111:isParser(f) |==> true
13404:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@toFormatter():112:parser = (DateTimeParser)f |==> <NO-OP>
13405:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@toFormatter():114:printer != null |==> true
13406:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@toFormatter():114:parser != null |==> true
13407:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@toFormatter():114:printer != null || parser != null |==> printer != null != (parser != null)
13408:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@toFormatter():114:printer != null || parser != null |==> printer != null
13409:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@toFormatter():114:printer != null || parser != null |==> parser != null
13410:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@toFormatter():114:printer != null || parser != null |==> true
13411:COR:isPrinter(f):TRUE:org.joda.time.format.DateTimeFormatterBuilder@toPrinter():134:isPrinter(f) |==> false
13412:COR:isPrinter(f):FALSE:org.joda.time.format.DateTimeFormatterBuilder@toPrinter():134:isPrinter(f) |==> true
13413:COR:isParser(f):TRUE:org.joda.time.format.DateTimeFormatterBuilder@toParser():154:isParser(f) |==> false
13414:COR:isParser(f):FALSE:org.joda.time.format.DateTimeFormatterBuilder@toParser():154:isParser(f) |==> true
13415:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@clear():197:iFormatter = null |==> <NO-OP>
13416:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@clear():198:iElementPairs.clear() |==> <NO-OP>
13417:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimeFormatter):217:formatter == null |==> false
13418:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter):238:checkPrinter(printer) |==> <NO-OP>
13419:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimeParser):257:checkParser(parser) |==> <NO-OP>
13420:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser):276:checkPrinter(printer) |==> <NO-OP>
13421:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser):277:checkParser(parser) |==> <NO-OP>
13422:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):305:printer != null |==> true
13423:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):306:checkPrinter(printer) |==> <NO-OP>
13424:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):308:parsers == null |==> false
13425:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):312:1 |==> 0
13426:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):312:1 |==> -1
13427:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):312:length == 1 |==> length <= 1
13428:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):312:length == 1 |==> length >= 1
13429:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):312:length == 1 |==> false
13430:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):313:0 |==> 1
13431:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):313:0 |==> -1
13432:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):313:parsers[0] == null |==> false
13433:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):316:0 |==> 1
13434:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):316:0 |==> -1
13435:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):321:0 |==> 1
13436:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):321:0 |==> -1
13437:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):321:1 |==> 0
13438:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):321:1 |==> -1
13439:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):321:length - 1 |==> length % 1
13440:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):321:length - 1 |==> length * 1
13441:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):321:length - 1 |==> length + 1
13442:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):321:length - 1 |==> length / 1
13443:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):321:i < length - 1 |==> i != length - 1
13444:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):321:i < length - 1 |==> i <= length - 1
13445:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):321:i < length - 1 |==> false
13446:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):322:(copyOfParsers[i] = parsers[i]) == null |==> false
13447:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):326:copyOfParsers[i] = parsers[i] |==> <NO-OP>
13448:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@appendOptional(org.joda.time.format.DateTimeParser):345:checkParser(parser) |==> <NO-OP>
13449:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@checkParser(org.joda.time.format.DateTimeParser):357:parser == null |==> false
13450:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@checkPrinter(org.joda.time.format.DateTimePrinter):368:printer == null |==> false
13451:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@append0(java.lang.Object):374:iFormatter = null |==> <NO-OP>
13452:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@append0(java.lang.Object):376:iElementPairs.add(element) |==> <NO-OP>
13453:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@append0(java.lang.Object):377:iElementPairs.add(element) |==> <NO-OP>
13454:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@append0(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser):383:iFormatter = null |==> <NO-OP>
13455:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@append0(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser):384:iElementPairs.add(printer) |==> <NO-OP>
13456:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@append0(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser):385:iElementPairs.add(parser) |==> <NO-OP>
13457:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@appendLiteral(java.lang.String):408:text == null |==> false
13458:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder@appendLiteral(java.lang.String):415:0 |==> 1
13459:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendLiteral(java.lang.String):415:0 |==> -1
13460:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):434:fieldType == null |==> false
13461:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):437:maxDigits < minDigits |==> maxDigits != minDigits
13462:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):437:maxDigits < minDigits |==> maxDigits <= minDigits
13463:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):437:maxDigits < minDigits |==> false
13464:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):438:maxDigits = minDigits |==> <NO-OP>
13465:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):440:0 |==> 1
13466:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):440:0 |==> -1
13467:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):440:minDigits < 0 |==> minDigits != 0
13468:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):440:minDigits < 0 |==> minDigits <= 0
13469:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):440:minDigits < 0 |==> false
13470:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):440:0 |==> 1
13471:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):440:0 |==> -1
13472:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):440:maxDigits <= 0 |==> maxDigits < 0
13473:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):440:maxDigits <= 0 |==> maxDigits == 0
13474:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):440:maxDigits <= 0 |==> true
13475:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):440:minDigits < 0 || maxDigits <= 0 |==> minDigits < 0 != maxDigits <= 0
13476:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):440:minDigits < 0 || maxDigits <= 0 |==> minDigits < 0
13477:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):440:minDigits < 0 || maxDigits <= 0 |==> maxDigits <= 0
13478:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):440:minDigits < 0 || maxDigits <= 0 |==> true
13479:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):443:1 |==> 0
13480:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):443:1 |==> -1
13481:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):443:minDigits <= 1 |==> minDigits < 1
13482:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):443:minDigits <= 1 |==> minDigits == 1
13483:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):443:minDigits <= 1 |==> true
13484:LVR:FALSE:TRUE:org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):444:false |==> true
13485:LVR:FALSE:TRUE:org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):446:false |==> true
13486:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@appendFixedDecimal(org.joda.time.DateTimeFieldType,int):464:fieldType == null |==> false
13487:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder@appendFixedDecimal(org.joda.time.DateTimeFieldType,int):467:0 |==> 1
13488:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendFixedDecimal(org.joda.time.DateTimeFieldType,int):467:0 |==> -1
13489:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFixedDecimal(org.joda.time.DateTimeFieldType,int):467:numDigits <= 0 |==> numDigits < 0
13490:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFixedDecimal(org.joda.time.DateTimeFieldType,int):467:numDigits <= 0 |==> numDigits == 0
13491:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFixedDecimal(org.joda.time.DateTimeFieldType,int):467:numDigits <= 0 |==> true
13492:LVR:FALSE:TRUE:org.joda.time.format.DateTimeFormatterBuilder@appendFixedDecimal(org.joda.time.DateTimeFieldType,int):470:false |==> true
13493:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):486:fieldType == null |==> false
13494:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):489:maxDigits < minDigits |==> maxDigits != minDigits
13495:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):489:maxDigits < minDigits |==> maxDigits <= minDigits
13496:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):489:maxDigits < minDigits |==> false
13497:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):490:maxDigits = minDigits |==> <NO-OP>
13498:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):492:0 |==> 1
13499:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):492:0 |==> -1
13500:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):492:minDigits < 0 |==> minDigits != 0
13501:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):492:minDigits < 0 |==> minDigits <= 0
13502:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):492:minDigits < 0 |==> false
13503:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):492:0 |==> 1
13504:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):492:0 |==> -1
13505:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):492:maxDigits <= 0 |==> maxDigits < 0
13506:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):492:maxDigits <= 0 |==> maxDigits == 0
13507:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):492:maxDigits <= 0 |==> true
13508:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):492:minDigits < 0 || maxDigits <= 0 |==> minDigits < 0 != maxDigits <= 0
13509:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):492:minDigits < 0 || maxDigits <= 0 |==> minDigits < 0
13510:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):492:minDigits < 0 || maxDigits <= 0 |==> maxDigits <= 0
13511:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):492:minDigits < 0 || maxDigits <= 0 |==> true
13512:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):495:1 |==> 0
13513:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):495:1 |==> -1
13514:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):495:minDigits <= 1 |==> minDigits < 1
13515:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):495:minDigits <= 1 |==> minDigits == 1
13516:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):495:minDigits <= 1 |==> true
13517:LVR:TRUE:FALSE:org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):496:true |==> false
13518:LVR:TRUE:FALSE:org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):498:true |==> false
13519:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@appendFixedSignedDecimal(org.joda.time.DateTimeFieldType,int):516:fieldType == null |==> false
13520:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder@appendFixedSignedDecimal(org.joda.time.DateTimeFieldType,int):519:0 |==> 1
13521:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendFixedSignedDecimal(org.joda.time.DateTimeFieldType,int):519:0 |==> -1
13522:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFixedSignedDecimal(org.joda.time.DateTimeFieldType,int):519:numDigits <= 0 |==> numDigits < 0
13523:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFixedSignedDecimal(org.joda.time.DateTimeFieldType,int):519:numDigits <= 0 |==> numDigits == 0
13524:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFixedSignedDecimal(org.joda.time.DateTimeFieldType,int):519:numDigits <= 0 |==> true
13525:LVR:TRUE:FALSE:org.joda.time.format.DateTimeFormatterBuilder@appendFixedSignedDecimal(org.joda.time.DateTimeFieldType,int):522:true |==> false
13526:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@appendText(org.joda.time.DateTimeFieldType):534:fieldType == null |==> false
13527:LVR:FALSE:TRUE:org.joda.time.format.DateTimeFormatterBuilder@appendText(org.joda.time.DateTimeFieldType):537:false |==> true
13528:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@appendShortText(org.joda.time.DateTimeFieldType):549:fieldType == null |==> false
13529:LVR:TRUE:FALSE:org.joda.time.format.DateTimeFormatterBuilder@appendShortText(org.joda.time.DateTimeFieldType):552:true |==> false
13530:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):570:fieldType == null |==> false
13531:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):573:maxDigits < minDigits |==> maxDigits != minDigits
13532:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):573:maxDigits < minDigits |==> maxDigits <= minDigits
13533:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):573:maxDigits < minDigits |==> false
13534:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):574:maxDigits = minDigits |==> <NO-OP>
13535:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):576:0 |==> 1
13536:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):576:0 |==> -1
13537:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):576:minDigits < 0 |==> minDigits != 0
13538:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):576:minDigits < 0 |==> minDigits <= 0
13539:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):576:minDigits < 0 |==> false
13540:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):576:0 |==> 1
13541:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):576:0 |==> -1
13542:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):576:maxDigits <= 0 |==> maxDigits < 0
13543:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):576:maxDigits <= 0 |==> maxDigits == 0
13544:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):576:maxDigits <= 0 |==> true
13545:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):576:minDigits < 0 || maxDigits <= 0 |==> minDigits < 0 != maxDigits <= 0
13546:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):576:minDigits < 0 || maxDigits <= 0 |==> minDigits < 0
13547:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):576:minDigits < 0 || maxDigits <= 0 |==> maxDigits <= 0
13548:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):576:minDigits < 0 || maxDigits <= 0 |==> true
13549:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@appendMillisOfSecond(int):665:3 |==> 0
13550:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendMillisOfSecond(int):665:3 |==> -3
13551:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@appendMillisOfDay(int):675:8 |==> 0
13552:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendMillisOfDay(int):675:8 |==> -8
13553:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@appendSecondOfMinute(int):685:2 |==> 0
13554:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendSecondOfMinute(int):685:2 |==> -2
13555:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@appendSecondOfDay(int):695:5 |==> 0
13556:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendSecondOfDay(int):695:5 |==> -5
13557:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@appendMinuteOfHour(int):705:2 |==> 0
13558:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendMinuteOfHour(int):705:2 |==> -2
13559:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@appendMinuteOfDay(int):715:4 |==> 0
13560:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendMinuteOfDay(int):715:4 |==> -4
13561:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@appendHourOfDay(int):725:2 |==> 0
13562:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendHourOfDay(int):725:2 |==> -2
13563:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@appendClockhourOfDay(int):735:2 |==> 0
13564:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendClockhourOfDay(int):735:2 |==> -2
13565:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@appendHourOfHalfday(int):745:2 |==> 0
13566:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendHourOfHalfday(int):745:2 |==> -2
13567:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@appendClockhourOfHalfday(int):755:2 |==> 0
13568:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendClockhourOfHalfday(int):755:2 |==> -2
13569:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@appendDayOfWeek(int):765:1 |==> 0
13570:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendDayOfWeek(int):765:1 |==> -1
13571:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@appendDayOfMonth(int):775:2 |==> 0
13572:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendDayOfMonth(int):775:2 |==> -2
13573:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@appendDayOfYear(int):785:3 |==> 0
13574:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendDayOfYear(int):785:3 |==> -3
13575:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@appendWeekOfWeekyear(int):795:2 |==> 0
13576:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendWeekOfWeekyear(int):795:2 |==> -2
13577:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@appendMonthOfYear(int):817:2 |==> 0
13578:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendMonthOfYear(int):817:2 |==> -2
13579:LVR:FALSE:TRUE:org.joda.time.format.DateTimeFormatterBuilder@appendTwoDigitYear(int):851:false |==> true
13580:LVR:FALSE:TRUE:org.joda.time.format.DateTimeFormatterBuilder@appendTwoDigitWeekyear(int):891:false |==> true
13581:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@appendPattern(java.lang.String):1132:DateTimeFormat.appendPatternTo(this, pattern) |==> <NO-OP>
13582:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1140:f == null |==> false
13583:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1141:2 |==> 0
13584:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1141:2 |==> -2
13585:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1141:iElementPairs.size() == 2 |==> iElementPairs.size() <= 2
13586:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1141:iElementPairs.size() == 2 |==> iElementPairs.size() >= 2
13587:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1141:iElementPairs.size() == 2 |==> false
13588:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1142:0 |==> 1
13589:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1142:0 |==> -1
13590:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1143:1 |==> 0
13591:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1143:1 |==> -1
13592:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1145:printer != null |==> true
13593:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1146:printer == parser |==> false
13594:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1146:parser == null |==> false
13595:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1146:printer == parser || parser == null |==> printer == parser != (parser == null)
13596:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1146:printer == parser || parser == null |==> printer == parser
13597:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1146:printer == parser || parser == null |==> parser == null
13598:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1146:printer == parser || parser == null |==> true
13599:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1147:f = printer |==> <NO-OP>
13600:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1150:f = parser |==> <NO-OP>
13601:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1154:f == null |==> false
13602:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1155:f = new Composite(iElementPairs) |==> <NO-OP>
13603:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1158:iFormatter = f |==> <NO-OP>
13604:LVR:TRUE:FALSE:org.joda.time.format.DateTimeFormatterBuilder@isPrinter(java.lang.Object):1169:true |==> false
13605:LVR:FALSE:TRUE:org.joda.time.format.DateTimeFormatterBuilder@isPrinter(java.lang.Object):1171:false |==> true
13606:LVR:TRUE:FALSE:org.joda.time.format.DateTimeFormatterBuilder@isParser(java.lang.Object):1179:true |==> false
13607:LVR:FALSE:TRUE:org.joda.time.format.DateTimeFormatterBuilder@isParser(java.lang.Object):1181:false |==> true
13608:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@isFormatter(java.lang.Object):1185:isPrinter(f) || isParser(f) |==> isPrinter(f) != isParser(f)
13609:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@isFormatter(java.lang.Object):1185:isPrinter(f) || isParser(f) |==> isPrinter(f)
13610:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@isFormatter(java.lang.Object):1185:isPrinter(f) || isParser(f) |==> isParser(f)
13611:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@isFormatter(java.lang.Object):1185:isPrinter(f) || isParser(f) |==> true
13612:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder@appendUnknownString(java.lang.StringBuffer,int):1189:0 |==> 1
13613:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendUnknownString(java.lang.StringBuffer,int):1189:0 |==> -1
13614:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendUnknownString(java.lang.StringBuffer,int):1189:--i >= 0 |==> --i == 0
13615:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendUnknownString(java.lang.StringBuffer,int):1189:--i >= 0 |==> --i > 0
13616:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendUnknownString(java.lang.StringBuffer,int):1189:--i >= 0 |==> true
13617:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@appendUnknownString(java.lang.StringBuffer,int):1190:buf.append('\ufffd') |==> <NO-OP>
13618:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder@printUnknownString(java.io.Writer,int):1195:0 |==> 1
13619:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder@printUnknownString(java.io.Writer,int):1195:0 |==> -1
13620:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder@printUnknownString(java.io.Writer,int):1195:--i >= 0 |==> --i == 0
13621:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder@printUnknownString(java.io.Writer,int):1195:--i >= 0 |==> --i > 0
13622:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder@printUnknownString(java.io.Writer,int):1195:--i >= 0 |==> true
13623:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@printUnknownString(java.io.Writer,int):1196:out.write('\ufffd') |==> <NO-OP>
13624:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@estimatePrintedLength():1212:1 |==> 0
13625:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@estimatePrintedLength():1212:1 |==> -1
13626:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1218:buf.append(iValue) |==> <NO-OP>
13627:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1224:out.write(iValue) |==> <NO-OP>
13628:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1228:buf.append(iValue) |==> <NO-OP>
13629:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1232:out.write(iValue) |==> <NO-OP>
13630:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@estimateParsedLength():1236:1 |==> 0
13631:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@estimateParsedLength():1236:1 |==> -1
13632:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1240:position >= text.length() |==> position == text.length()
13633:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1240:position >= text.length() |==> position > text.length()
13634:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1240:position >= text.length() |==> true
13635:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1241:~position |==> +position
13636:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1241:~position |==> -position
13637:ROR:!=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1247:a != b |==> a < b
13638:ROR:!=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1247:a != b |==> a > b
13639:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1247:a != b |==> true
13640:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1248:a = Character.toUpperCase(a) |==> <NO-OP>
13641:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1249:b = Character.toUpperCase(b) |==> <NO-OP>
13642:ROR:!=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1250:a != b |==> a < b
13643:ROR:!=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1250:a != b |==> a > b
13644:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1250:a != b |==> true
13645:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1251:a = Character.toLowerCase(a) |==> <NO-OP>
13646:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1252:b = Character.toLowerCase(b) |==> <NO-OP>
13647:ROR:!=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1253:a != b |==> a < b
13648:ROR:!=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1253:a != b |==> a > b
13649:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1253:a != b |==> true
13650:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1254:~position |==> +position
13651:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1254:~position |==> -position
13652:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1259:1 |==> 0
13653:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1259:1 |==> -1
13654:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1259:position + 1 |==> position % 1
13655:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1259:position + 1 |==> position * 1
13656:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1259:position + 1 |==> position - 1
13657:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1259:position + 1 |==> position / 1
13658:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$StringLiteral@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1281:buf.append(iValue) |==> <NO-OP>
13659:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$StringLiteral@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1287:out.write(iValue) |==> <NO-OP>
13660:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$StringLiteral@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1291:buf.append(iValue) |==> <NO-OP>
13661:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$StringLiteral@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1295:out.write(iValue) |==> <NO-OP>
13662:LVR:TRUE:FALSE:org.joda.time.format.DateTimeFormatterBuilder$StringLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1303:true |==> false
13663:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$StringLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1303:0 |==> 1
13664:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$StringLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1303:0 |==> -1
13665:COR:text.regionMatches(true, position, iValue, 0, iValue.length()):TRUE:org.joda.time.format.DateTimeFormatterBuilder$StringLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1303:text.regionMatches(true, position, iValue, 0, iValue.length()) |==> false
13666:COR:text.regionMatches(true, position, iValue, 0, iValue.length()):FALSE:org.joda.time.format.DateTimeFormatterBuilder$StringLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1303:text.regionMatches(true, position, iValue, 0, iValue.length()) |==> true
13667:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$StringLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1304:position + iValue.length() |==> position % iValue.length()
13668:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$StringLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1304:position + iValue.length() |==> position * iValue.length()
13669:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$StringLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1304:position + iValue.length() |==> position - iValue.length()
13670:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$StringLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1304:position + iValue.length() |==> position / iValue.length()
13671:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$StringLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1306:~position |==> +position
13672:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$StringLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1306:~position |==> -position
13673:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1330:text.length() - position |==> text.length() % position
13674:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1330:text.length() - position |==> text.length() * position
13675:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1330:text.length() - position |==> text.length() + position
13676:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1330:text.length() - position |==> text.length() / position
13677:LVR:FALSE:TRUE:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1332:false |==> true
13678:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1333:0 |==> 1
13679:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1333:0 |==> -1
13680:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1334:length < limit |==> length != limit
13681:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1334:length < limit |==> length <= limit
13682:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1334:length < limit |==> false
13683:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1335:position + length |==> position % length
13684:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1335:position + length |==> position * length
13685:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1335:position + length |==> position - length
13686:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1335:position + length |==> position / length
13687:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1336:0 |==> 1
13688:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1336:0 |==> -1
13689:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1336:length == 0 |==> length <= 0
13690:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1336:length == 0 |==> length >= 0
13691:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1336:length == 0 |==> false
13692:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1336:c == '-' |==> c <= '-'
13693:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1336:c == '-' |==> c >= '-'
13694:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1336:c == '-' |==> false
13695:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1336:c == '+' |==> c <= '+'
13696:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1336:c == '+' |==> c >= '+'
13697:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1336:c == '+' |==> false
13698:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1336:c == '-' || c == '+' |==> c == '-' != (c == '+')
13699:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1336:c == '-' || c == '+' |==> c == '-'
13700:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1336:c == '-' || c == '+' |==> c == '+'
13701:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1336:c == '-' || c == '+' |==> true
13702:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1336:length == 0 && (c == '-' || c == '+') |==> length == 0 == (c == '-' || c == '+')
13703:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1336:length == 0 && (c == '-' || c == '+') |==> false
13704:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1336:length == 0 && (c == '-' || c == '+') |==> length == 0
13705:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1336:length == 0 && (c == '-' || c == '+') |==> (c == '-' || c == '+')
13706:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1336:length == 0 && (c == '-' || c == '+') && iSigned |==> (length == 0 && (c == '-' || c == '+')) == iSigned
13707:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1336:length == 0 && (c == '-' || c == '+') && iSigned |==> false
13708:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1336:length == 0 && (c == '-' || c == '+') && iSigned |==> length == 0 && (c == '-' || c == '+')
13709:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1336:length == 0 && (c == '-' || c == '+') && iSigned |==> iSigned
13710:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1337:c == '-' |==> c <= '-'
13711:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1337:c == '-' |==> c >= '-'
13712:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1337:c == '-' |==> false
13713:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1337:negative = c == '-' |==> <NO-OP>
13714:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1340:1 |==> 0
13715:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1340:1 |==> -1
13716:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1340:length + 1 |==> length % 1
13717:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1340:length + 1 |==> length * 1
13718:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1340:length + 1 |==> length - 1
13719:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1340:length + 1 |==> length / 1
13720:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1340:length + 1 >= limit |==> length + 1 == limit
13721:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1340:length + 1 >= limit |==> length + 1 > limit
13722:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1340:length + 1 >= limit |==> true
13723:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1341:position + length |==> position % length
13724:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1341:position + length |==> position * length
13725:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1341:position + length |==> position - length
13726:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1341:position + length |==> position / length
13727:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1341:1 |==> 0
13728:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1341:1 |==> -1
13729:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1341:position + length + 1 |==> (position + length) % 1
13730:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1341:position + length + 1 |==> (position + length) * 1
13731:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1341:position + length + 1 |==> position + length - 1
13732:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1341:position + length + 1 |==> (position + length) / 1
13733:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1341:(c = text.charAt(position + length + 1)) < '0' |==> (c = text.charAt(position + length + 1)) != '0'
13734:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1341:(c = text.charAt(position + length + 1)) < '0' |==> (c = text.charAt(position + length + 1)) <= '0'
13735:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1341:(c = text.charAt(position + length + 1)) < '0' |==> false
13736:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1340:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' |==> length + 1 >= limit != (c = text.charAt(position + length + 1)) < '0'
13737:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1340:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' |==> length + 1 >= limit
13738:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1341:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' |==> (c = text.charAt(position + length + 1)) < '0'
13739:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1340:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' |==> true
13740:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1341:c > '9' |==> c != '9'
13741:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1341:c > '9' |==> c >= '9'
13742:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1341:c > '9' |==> false
13743:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1340:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' || c > '9' |==> (length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0') != c > '9'
13744:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1340:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' || c > '9' |==> length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0'
13745:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1341:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' || c > '9' |==> c > '9'
13746:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1341:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' || c > '9' |==> true
13747:COR:negative:TRUE:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1346:negative |==> false
13748:COR:negative:FALSE:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1346:negative |==> true
13749:STD:<INC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1347:length++ |==> <NO-OP>
13750:STD:<INC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1350:position++ |==> <NO-OP>
13751:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1353:1 |==> 0
13752:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1353:1 |==> -1
13753:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1353:limit + 1 |==> limit % 1
13754:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1353:limit + 1 |==> limit * 1
13755:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1353:limit + 1 |==> limit - 1
13756:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1353:limit + 1 |==> limit / 1
13757:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1353:text.length() - position |==> text.length() % position
13758:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1353:text.length() - position |==> text.length() * position
13759:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1353:text.length() - position |==> text.length() + position
13760:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1353:text.length() - position |==> text.length() / position
13761:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1353:limit = Math.min(limit + 1, text.length() - position) |==> <NO-OP>
13762:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1356:c < '0' |==> c != '0'
13763:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1356:c < '0' |==> c <= '0'
13764:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1356:c < '0' |==> false
13765:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1356:c > '9' |==> c != '9'
13766:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1356:c > '9' |==> c >= '9'
13767:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1356:c > '9' |==> false
13768:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1356:c < '0' || c > '9' |==> c < '0' != c > '9'
13769:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1356:c < '0' || c > '9' |==> c < '0'
13770:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1356:c < '0' || c > '9' |==> c > '9'
13771:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1356:c < '0' || c > '9' |==> true
13772:STD:<INC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1359:length++ |==> <NO-OP>
13773:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1362:0 |==> 1
13774:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1362:0 |==> -1
13775:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1362:length == 0 |==> length <= 0
13776:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1362:length == 0 |==> length >= 0
13777:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1362:length == 0 |==> false
13778:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1363:~position |==> +position
13779:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1363:~position |==> -position
13780:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1367:9 |==> 0
13781:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1367:9 |==> -9
13782:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1367:length >= 9 |==> length == 9
13783:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1367:length >= 9 |==> length > 9
13784:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1367:length >= 9 |==> true
13785:COR:negative:TRUE:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1373:negative |==> false
13786:COR:negative:FALSE:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1373:negative |==> true
13787:STD:<INC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1374:i++ |==> <NO-OP>
13788:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1377:text.charAt(i++) - '0' |==> text.charAt(i++) % '0'
13789:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1377:text.charAt(i++) - '0' |==> text.charAt(i++) * '0'
13790:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1377:text.charAt(i++) - '0' |==> text.charAt(i++) + '0'
13791:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1377:text.charAt(i++) - '0' |==> text.charAt(i++) / '0'
13792:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1379:~position |==> +position
13793:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1379:~position |==> -position
13794:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1381:position += length |==> <NO-OP>
13795:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1382:i < position |==> i != position
13796:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1382:i < position |==> i <= position
13797:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1382:i < position |==> false
13798:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1383:3 |==> 0
13799:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1383:3 |==> -3
13800:SOR:<<(int,int):>>(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1383:value << 3 |==> value >> 3
13801:SOR:<<(int,int):>>>(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1383:value << 3 |==> value >>> 3
13802:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1383:1 |==> 0
13803:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1383:1 |==> -1
13804:SOR:<<(int,int):>>(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1383:value << 1 |==> value >> 1
13805:SOR:<<(int,int):>>>(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1383:value << 1 |==> value >>> 1
13806:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1383:(value << 3) + (value << 1) |==> (value << 3) % (value << 1)
13807:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1383:(value << 3) + (value << 1) |==> (value << 3) * (value << 1)
13808:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1383:(value << 3) + (value << 1) |==> (value << 3) - (value << 1)
13809:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1383:(value << 3) + (value << 1) |==> (value << 3) / (value << 1)
13810:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1383:((value << 3) + (value << 1)) + text.charAt(i++) |==> ((value << 3) + (value << 1)) % text.charAt(i++)
13811:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1383:((value << 3) + (value << 1)) + text.charAt(i++) |==> ((value << 3) + (value << 1)) * text.charAt(i++)
13812:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1383:((value << 3) + (value << 1)) + text.charAt(i++) |==> ((value << 3) + (value << 1)) - text.charAt(i++)
13813:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1383:((value << 3) + (value << 1)) + text.charAt(i++) |==> ((value << 3) + (value << 1)) / text.charAt(i++)
13814:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1383:((value << 3) + (value << 1)) + text.charAt(i++) - '0' |==> (((value << 3) + (value << 1)) + text.charAt(i++)) % '0'
13815:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1383:((value << 3) + (value << 1)) + text.charAt(i++) - '0' |==> (((value << 3) + (value << 1)) + text.charAt(i++)) * '0'
13816:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1383:((value << 3) + (value << 1)) + text.charAt(i++) - '0' |==> ((value << 3) + (value << 1)) + text.charAt(i++) + '0'
13817:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1383:((value << 3) + (value << 1)) + text.charAt(i++) - '0' |==> (((value << 3) + (value << 1)) + text.charAt(i++)) / '0'
13818:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1383:value = ((value << 3) + (value << 1)) + text.charAt(i++) - '0' |==> <NO-OP>
13819:COR:negative:TRUE:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1385:negative |==> false
13820:COR:negative:FALSE:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1385:negative |==> true
13821:ORU:-(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1386:-value |==> +value
13822:ORU:-(int):~(int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1386:-value |==> ~value
13823:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1386:value = -value |==> <NO-OP>
13824:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1390:bucket.saveField(iFieldType, value) |==> <NO-OP>
13825:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1413:FormatUtils.appendUnpaddedInteger(buf, field.get(instant)) |==> <NO-OP>
13826:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1415:buf.append('\ufffd') |==> <NO-OP>
13827:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1424:FormatUtils.writeUnpaddedInteger(out, field.get(instant)) |==> <NO-OP>
13828:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1426:out.write('\ufffd') |==> <NO-OP>
13829:COR:partial.isSupported(iFieldType):TRUE:org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1431:partial.isSupported(iFieldType) |==> false
13830:COR:partial.isSupported(iFieldType):FALSE:org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1431:partial.isSupported(iFieldType) |==> true
13831:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1433:FormatUtils.appendUnpaddedInteger(buf, partial.get(iFieldType)) |==> <NO-OP>
13832:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1435:buf.append('\ufffd') |==> <NO-OP>
13833:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1438:buf.append('\ufffd') |==> <NO-OP>
13834:COR:partial.isSupported(iFieldType):TRUE:org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1443:partial.isSupported(iFieldType) |==> false
13835:COR:partial.isSupported(iFieldType):FALSE:org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1443:partial.isSupported(iFieldType) |==> true
13836:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1445:FormatUtils.writeUnpaddedInteger(out, partial.get(iFieldType)) |==> <NO-OP>
13837:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1447:out.write('\ufffd') |==> <NO-OP>
13838:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1450:out.write('\ufffd') |==> <NO-OP>
13839:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1476:FormatUtils.appendPaddedInteger(buf, field.get(instant), iMinPrintedDigits) |==> <NO-OP>
13840:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1478:appendUnknownString(buf, iMinPrintedDigits) |==> <NO-OP>
13841:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1487:FormatUtils.writePaddedInteger(out, field.get(instant), iMinPrintedDigits) |==> <NO-OP>
13842:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1489:printUnknownString(out, iMinPrintedDigits) |==> <NO-OP>
13843:COR:partial.isSupported(iFieldType):TRUE:org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1494:partial.isSupported(iFieldType) |==> false
13844:COR:partial.isSupported(iFieldType):FALSE:org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1494:partial.isSupported(iFieldType) |==> true
13845:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1496:FormatUtils.appendPaddedInteger(buf, partial.get(iFieldType), iMinPrintedDigits) |==> <NO-OP>
13846:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1498:appendUnknownString(buf, iMinPrintedDigits) |==> <NO-OP>
13847:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1501:appendUnknownString(buf, iMinPrintedDigits) |==> <NO-OP>
13848:COR:partial.isSupported(iFieldType):TRUE:org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1506:partial.isSupported(iFieldType) |==> false
13849:COR:partial.isSupported(iFieldType):FALSE:org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1506:partial.isSupported(iFieldType) |==> true
13850:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1508:FormatUtils.writePaddedInteger(out, partial.get(iFieldType), iMinPrintedDigits) |==> <NO-OP>
13851:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1510:printUnknownString(out, iMinPrintedDigits) |==> <NO-OP>
13852:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1513:printUnknownString(out, iMinPrintedDigits) |==> <NO-OP>
13853:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1527:0 |==> 1
13854:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1527:0 |==> -1
13855:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1527:newPos < 0 |==> newPos != 0
13856:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1527:newPos < 0 |==> newPos <= 0
13857:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1527:newPos < 0 |==> false
13858:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1530:position + iMaxParsedDigits |==> position % iMaxParsedDigits
13859:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1530:position + iMaxParsedDigits |==> position * iMaxParsedDigits
13860:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1530:position + iMaxParsedDigits |==> position - iMaxParsedDigits
13861:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1530:position + iMaxParsedDigits |==> position / iMaxParsedDigits
13862:ROR:!=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1531:newPos != expectedPos |==> newPos < expectedPos
13863:ROR:!=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1531:newPos != expectedPos |==> newPos > expectedPos
13864:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1531:newPos != expectedPos |==> true
13865:COR:iSigned:TRUE:org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1532:iSigned |==> false
13866:COR:iSigned:FALSE:org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1532:iSigned |==> true
13867:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1534:c == '-' |==> c <= '-'
13868:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1534:c == '-' |==> c >= '-'
13869:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1534:c == '-' |==> false
13870:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1534:c == '+' |==> c <= '+'
13871:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1534:c == '+' |==> c >= '+'
13872:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1534:c == '+' |==> false
13873:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1534:c == '-' || c == '+' |==> c == '-' != (c == '+')
13874:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1534:c == '-' || c == '+' |==> c == '-'
13875:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1534:c == '-' || c == '+' |==> c == '+'
13876:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1534:c == '-' || c == '+' |==> true
13877:STD:<INC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1535:expectedPos++ |==> <NO-OP>
13878:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1538:newPos > expectedPos |==> newPos != expectedPos
13879:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1538:newPos > expectedPos |==> newPos >= expectedPos
13880:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1538:newPos > expectedPos |==> false
13881:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1540:~(expectedPos + 1) |==> +(expectedPos + 1)
13882:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1540:~(expectedPos + 1) |==> -(expectedPos + 1)
13883:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1540:1 |==> 0
13884:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1540:1 |==> -1
13885:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1540:expectedPos + 1 |==> expectedPos % 1
13886:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1540:expectedPos + 1 |==> expectedPos * 1
13887:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1540:expectedPos + 1 |==> expectedPos - 1
13888:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1540:expectedPos + 1 |==> expectedPos / 1
13889:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1541:newPos < expectedPos |==> newPos != expectedPos
13890:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1541:newPos < expectedPos |==> newPos <= expectedPos
13891:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1541:newPos < expectedPos |==> false
13892:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1543:~newPos |==> +newPos
13893:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1543:~newPos |==> -newPos
13894:COR:iLenientParse:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@estimateParsedLength():1568:iLenientParse |==> false
13895:COR:iLenientParse:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@estimateParsedLength():1568:iLenientParse |==> true
13896:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@estimateParsedLength():1568:4 |==> 0
13897:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@estimateParsedLength():1568:4 |==> -4
13898:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@estimateParsedLength():1568:2 |==> 0
13899:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@estimateParsedLength():1568:2 |==> -2
13900:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1572:text.length() - position |==> text.length() % position
13901:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1572:text.length() - position |==> text.length() * position
13902:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1572:text.length() - position |==> text.length() + position
13903:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1572:text.length() - position |==> text.length() / position
13904:COR:iLenientParse:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1574:iLenientParse |==> false
13905:COR:iLenientParse:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1574:iLenientParse |==> true
13906:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1575:2 |==> 0
13907:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1575:2 |==> -2
13908:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1575:limit = Math.min(2, limit) |==> <NO-OP>
13909:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1576:2 |==> 0
13910:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1576:2 |==> -2
13911:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1576:limit < 2 |==> limit != 2
13912:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1576:limit < 2 |==> limit <= 2
13913:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1576:limit < 2 |==> false
13914:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1577:~position |==> +position
13915:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1577:~position |==> -position
13916:LVR:FALSE:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1580:false |==> true
13917:LVR:FALSE:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1581:false |==> true
13918:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1582:0 |==> 1
13919:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1582:0 |==> -1
13920:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1583:length < limit |==> length != limit
13921:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1583:length < limit |==> length <= limit
13922:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1583:length < limit |==> false
13923:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1584:position + length |==> position % length
13924:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1584:position + length |==> position * length
13925:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1584:position + length |==> position - length
13926:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1584:position + length |==> position / length
13927:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1585:0 |==> 1
13928:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1585:0 |==> -1
13929:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1585:length == 0 |==> length <= 0
13930:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1585:length == 0 |==> length >= 0
13931:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1585:length == 0 |==> false
13932:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1585:c == '-' |==> c <= '-'
13933:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1585:c == '-' |==> c >= '-'
13934:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1585:c == '-' |==> false
13935:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1585:c == '+' |==> c <= '+'
13936:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1585:c == '+' |==> c >= '+'
13937:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1585:c == '+' |==> false
13938:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1585:c == '-' || c == '+' |==> c == '-' != (c == '+')
13939:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1585:c == '-' || c == '+' |==> c == '-'
13940:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1585:c == '-' || c == '+' |==> c == '+'
13941:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1585:c == '-' || c == '+' |==> true
13942:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1585:length == 0 && (c == '-' || c == '+') |==> length == 0 == (c == '-' || c == '+')
13943:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1585:length == 0 && (c == '-' || c == '+') |==> false
13944:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1585:length == 0 && (c == '-' || c == '+') |==> length == 0
13945:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1585:length == 0 && (c == '-' || c == '+') |==> (c == '-' || c == '+')
13946:LVR:TRUE:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1586:true |==> false
13947:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1586:hasSignChar = true |==> <NO-OP>
13948:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1587:c == '-' |==> c <= '-'
13949:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1587:c == '-' |==> c >= '-'
13950:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1587:c == '-' |==> false
13951:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1587:negative = c == '-' |==> <NO-OP>
13952:COR:negative:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1588:negative |==> false
13953:COR:negative:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1588:negative |==> true
13954:STD:<INC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1589:length++ |==> <NO-OP>
13955:STD:<INC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1592:position++ |==> <NO-OP>
13956:STD:<DEC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1593:limit-- |==> <NO-OP>
13957:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1597:c < '0' |==> c != '0'
13958:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1597:c < '0' |==> c <= '0'
13959:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1597:c < '0' |==> false
13960:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1597:c > '9' |==> c != '9'
13961:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1597:c > '9' |==> c >= '9'
13962:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1597:c > '9' |==> false
13963:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1597:c < '0' || c > '9' |==> c < '0' != c > '9'
13964:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1597:c < '0' || c > '9' |==> c < '0'
13965:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1597:c < '0' || c > '9' |==> c > '9'
13966:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1597:c < '0' || c > '9' |==> true
13967:STD:<INC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1600:length++ |==> <NO-OP>
13968:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1603:0 |==> 1
13969:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1603:0 |==> -1
13970:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1603:length == 0 |==> length <= 0
13971:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1603:length == 0 |==> length >= 0
13972:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1603:length == 0 |==> false
13973:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1604:~position |==> +position
13974:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1604:~position |==> -position
13975:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1607:2 |==> 0
13976:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1607:2 |==> -2
13977:ROR:!=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1607:length != 2 |==> length < 2
13978:ROR:!=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1607:length != 2 |==> length > 2
13979:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1607:length != 2 |==> true
13980:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1607:hasSignChar || length != 2 |==> hasSignChar != (length != 2)
13981:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1607:hasSignChar || length != 2 |==> hasSignChar
13982:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1607:hasSignChar || length != 2 |==> length != 2
13983:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1607:hasSignChar || length != 2 |==> true
13984:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1609:9 |==> 0
13985:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1609:9 |==> -9
13986:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1609:length >= 9 |==> length == 9
13987:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1609:length >= 9 |==> length > 9
13988:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1609:length >= 9 |==> true
13989:COR:negative:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1615:negative |==> false
13990:COR:negative:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1615:negative |==> true
13991:STD:<INC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1616:i++ |==> <NO-OP>
13992:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1619:text.charAt(i++) - '0' |==> text.charAt(i++) % '0'
13993:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1619:text.charAt(i++) - '0' |==> text.charAt(i++) * '0'
13994:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1619:text.charAt(i++) - '0' |==> text.charAt(i++) + '0'
13995:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1619:text.charAt(i++) - '0' |==> text.charAt(i++) / '0'
13996:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1621:~position |==> +position
13997:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1621:~position |==> -position
13998:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1623:position += length |==> <NO-OP>
13999:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1624:i < position |==> i != position
14000:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1624:i < position |==> i <= position
14001:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1624:i < position |==> false
14002:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1625:3 |==> 0
14003:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1625:3 |==> -3
14004:SOR:<<(int,int):>>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1625:value << 3 |==> value >> 3
14005:SOR:<<(int,int):>>>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1625:value << 3 |==> value >>> 3
14006:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1625:1 |==> 0
14007:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1625:1 |==> -1
14008:SOR:<<(int,int):>>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1625:value << 1 |==> value >> 1
14009:SOR:<<(int,int):>>>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1625:value << 1 |==> value >>> 1
14010:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1625:(value << 3) + (value << 1) |==> (value << 3) % (value << 1)
14011:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1625:(value << 3) + (value << 1) |==> (value << 3) * (value << 1)
14012:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1625:(value << 3) + (value << 1) |==> (value << 3) - (value << 1)
14013:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1625:(value << 3) + (value << 1) |==> (value << 3) / (value << 1)
14014:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1625:((value << 3) + (value << 1)) + text.charAt(i++) |==> ((value << 3) + (value << 1)) % text.charAt(i++)
14015:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1625:((value << 3) + (value << 1)) + text.charAt(i++) |==> ((value << 3) + (value << 1)) * text.charAt(i++)
14016:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1625:((value << 3) + (value << 1)) + text.charAt(i++) |==> ((value << 3) + (value << 1)) - text.charAt(i++)
14017:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1625:((value << 3) + (value << 1)) + text.charAt(i++) |==> ((value << 3) + (value << 1)) / text.charAt(i++)
14018:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1625:((value << 3) + (value << 1)) + text.charAt(i++) - '0' |==> (((value << 3) + (value << 1)) + text.charAt(i++)) % '0'
14019:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1625:((value << 3) + (value << 1)) + text.charAt(i++) - '0' |==> (((value << 3) + (value << 1)) + text.charAt(i++)) * '0'
14020:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1625:((value << 3) + (value << 1)) + text.charAt(i++) - '0' |==> ((value << 3) + (value << 1)) + text.charAt(i++) + '0'
14021:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1625:((value << 3) + (value << 1)) + text.charAt(i++) - '0' |==> (((value << 3) + (value << 1)) + text.charAt(i++)) / '0'
14022:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1625:value = ((value << 3) + (value << 1)) + text.charAt(i++) - '0' |==> <NO-OP>
14023:COR:negative:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1627:negative |==> false
14024:COR:negative:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1627:negative |==> true
14025:ORU:-(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1628:-value |==> +value
14026:ORU:-(int):~(int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1628:-value |==> ~value
14027:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1628:value = -value |==> <NO-OP>
14028:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1632:bucket.saveField(iType, value) |==> <NO-OP>
14029:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1639:c < '0' |==> c != '0'
14030:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1639:c < '0' |==> c <= '0'
14031:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1639:c < '0' |==> false
14032:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1639:c > '9' |==> c != '9'
14033:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1639:c > '9' |==> c >= '9'
14034:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1639:c > '9' |==> false
14035:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1639:c < '0' || c > '9' |==> c < '0' != c > '9'
14036:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1639:c < '0' || c > '9' |==> c < '0'
14037:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1639:c < '0' || c > '9' |==> c > '9'
14038:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1639:c < '0' || c > '9' |==> true
14039:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1640:~position |==> +position
14040:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1640:~position |==> -position
14041:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1642:c - '0' |==> c % '0'
14042:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1642:c - '0' |==> c * '0'
14043:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1642:c - '0' |==> c + '0'
14044:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1642:c - '0' |==> c / '0'
14045:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1643:1 |==> 0
14046:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1643:1 |==> -1
14047:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1643:position + 1 |==> position % 1
14048:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1643:position + 1 |==> position * 1
14049:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1643:position + 1 |==> position - 1
14050:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1643:position + 1 |==> position / 1
14051:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1643:c = text.charAt(position + 1) |==> <NO-OP>
14052:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1644:c < '0' |==> c != '0'
14053:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1644:c < '0' |==> c <= '0'
14054:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1644:c < '0' |==> false
14055:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1644:c > '9' |==> c != '9'
14056:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1644:c > '9' |==> c >= '9'
14057:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1644:c > '9' |==> false
14058:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1644:c < '0' || c > '9' |==> c < '0' != c > '9'
14059:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1644:c < '0' || c > '9' |==> c < '0'
14060:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1644:c < '0' || c > '9' |==> c > '9'
14061:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1644:c < '0' || c > '9' |==> true
14062:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1645:~position |==> +position
14063:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1645:~position |==> -position
14064:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1647:3 |==> 0
14065:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1647:3 |==> -3
14066:SOR:<<(int,int):>>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1647:year << 3 |==> year >> 3
14067:SOR:<<(int,int):>>>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1647:year << 3 |==> year >>> 3
14068:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1647:1 |==> 0
14069:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1647:1 |==> -1
14070:SOR:<<(int,int):>>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1647:year << 1 |==> year >> 1
14071:SOR:<<(int,int):>>>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1647:year << 1 |==> year >>> 1
14072:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1647:(year << 3) + (year << 1) |==> (year << 3) % (year << 1)
14073:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1647:(year << 3) + (year << 1) |==> (year << 3) * (year << 1)
14074:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1647:(year << 3) + (year << 1) |==> (year << 3) - (year << 1)
14075:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1647:(year << 3) + (year << 1) |==> (year << 3) / (year << 1)
14076:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1647:((year << 3) + (year << 1)) + c |==> ((year << 3) + (year << 1)) % c
14077:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1647:((year << 3) + (year << 1)) + c |==> ((year << 3) + (year << 1)) * c
14078:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1647:((year << 3) + (year << 1)) + c |==> ((year << 3) + (year << 1)) - c
14079:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1647:((year << 3) + (year << 1)) + c |==> ((year << 3) + (year << 1)) / c
14080:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1647:((year << 3) + (year << 1)) + c - '0' |==> (((year << 3) + (year << 1)) + c) % '0'
14081:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1647:((year << 3) + (year << 1)) + c - '0' |==> (((year << 3) + (year << 1)) + c) * '0'
14082:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1647:((year << 3) + (year << 1)) + c - '0' |==> ((year << 3) + (year << 1)) + c + '0'
14083:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1647:((year << 3) + (year << 1)) + c - '0' |==> (((year << 3) + (year << 1)) + c) / '0'
14084:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1647:year = ((year << 3) + (year << 1)) + c - '0' |==> <NO-OP>
14085:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1651:bucket.getPivotYear() != null |==> true
14086:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1652:pivot = bucket.getPivotYear().intValue() |==> <NO-OP>
14087:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1655:50 |==> 0
14088:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1655:50 |==> -50
14089:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1655:pivot - 50 |==> pivot % 50
14090:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1655:pivot - 50 |==> pivot * 50
14091:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1655:pivot - 50 |==> pivot + 50
14092:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1655:pivot - 50 |==> pivot / 50
14093:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1658:0 |==> 1
14094:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1658:0 |==> -1
14095:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1658:low >= 0 |==> low == 0
14096:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1658:low >= 0 |==> low > 0
14097:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1658:low >= 0 |==> true
14098:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1659:100 |==> 0
14099:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1659:100 |==> -100
14100:AOR:%(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1659:low % 100 |==> low * 100
14101:AOR:%(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1659:low % 100 |==> low + 100
14102:AOR:%(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1659:low % 100 |==> low - 100
14103:AOR:%(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1659:low % 100 |==> low / 100
14104:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1661:99 |==> 0
14105:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1661:99 |==> -99
14106:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1661:1 |==> 0
14107:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1661:1 |==> -1
14108:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1661:low + 1 |==> low % 1
14109:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1661:low + 1 |==> low * 1
14110:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1661:low + 1 |==> low - 1
14111:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1661:low + 1 |==> low / 1
14112:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1661:100 |==> 0
14113:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1661:100 |==> -100
14114:AOR:%(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1661:(low + 1) % 100 |==> (low + 1) * 100
14115:AOR:%(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1661:(low + 1) % 100 |==> (low + 1) + 100
14116:AOR:%(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1661:(low + 1) % 100 |==> (low + 1) - 100
14117:AOR:%(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1661:(low + 1) % 100 |==> (low + 1) / 100
14118:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1661:99 + ((low + 1) % 100) |==> 99 % ((low + 1) % 100)
14119:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1661:99 + ((low + 1) % 100) |==> 99 * ((low + 1) % 100)
14120:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1661:99 + ((low + 1) % 100) |==> 99 - ((low + 1) % 100)
14121:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1661:99 + ((low + 1) % 100) |==> 99 / ((low + 1) % 100)
14122:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1664:year < t |==> year != t
14123:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1664:year < t |==> year <= t
14124:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1664:year < t |==> false
14125:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1664:100 |==> 0
14126:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1664:100 |==> -100
14127:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1664:0 |==> 1
14128:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1664:0 |==> -1
14129:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1664:low + ((year < t) ? 100 : 0) |==> low % ((year < t) ? 100 : 0)
14130:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1664:low + ((year < t) ? 100 : 0) |==> low * ((year < t) ? 100 : 0)
14131:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1664:low + ((year < t) ? 100 : 0) |==> low - ((year < t) ? 100 : 0)
14132:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1664:low + ((year < t) ? 100 : 0) |==> low / ((year < t) ? 100 : 0)
14133:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1664:low + ((year < t) ? 100 : 0) - t |==> (low + ((year < t) ? 100 : 0)) % t
14134:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1664:low + ((year < t) ? 100 : 0) - t |==> (low + ((year < t) ? 100 : 0)) * t
14135:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1664:low + ((year < t) ? 100 : 0) - t |==> low + ((year < t) ? 100 : 0) + t
14136:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1664:low + ((year < t) ? 100 : 0) - t |==> (low + ((year < t) ? 100 : 0)) / t
14137:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1664:year += low + ((year < t) ? 100 : 0) - t |==> <NO-OP>
14138:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1666:bucket.saveField(iType, year) |==> <NO-OP>
14139:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1667:2 |==> 0
14140:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1667:2 |==> -2
14141:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1667:position + 2 |==> position % 2
14142:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1667:position + 2 |==> position * 2
14143:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1667:position + 2 |==> position - 2
14144:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1667:position + 2 |==> position / 2
14145:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@estimatePrintedLength():1671:2 |==> 0
14146:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@estimatePrintedLength():1671:2 |==> -2
14147:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1678:0 |==> 1
14148:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1678:0 |==> -1
14149:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1678:year < 0 |==> year != 0
14150:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1678:year < 0 |==> year <= 0
14151:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1678:year < 0 |==> false
14152:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1679:buf.append('\ufffd') |==> <NO-OP>
14153:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1680:buf.append('\ufffd') |==> <NO-OP>
14154:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1682:2 |==> 0
14155:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1682:2 |==> -2
14156:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1682:FormatUtils.appendPaddedInteger(buf, year, 2) |==> <NO-OP>
14157:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1690:0 |==> 1
14158:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1690:0 |==> -1
14159:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1690:year < 0 |==> year != 0
14160:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1690:year < 0 |==> year <= 0
14161:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1690:year < 0 |==> false
14162:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1691:out.write('\ufffd') |==> <NO-OP>
14163:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1692:out.write('\ufffd') |==> <NO-OP>
14164:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1694:2 |==> 0
14165:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1694:2 |==> -2
14166:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1694:FormatUtils.writePaddedInteger(out, year, 2) |==> <NO-OP>
14167:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(long,org.joda.time.Chronology):1701:0 |==> 1
14168:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(long,org.joda.time.Chronology):1701:0 |==> -1
14169:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(long,org.joda.time.Chronology):1701:year < 0 |==> year != 0
14170:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(long,org.joda.time.Chronology):1701:year < 0 |==> year <= 0
14171:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(long,org.joda.time.Chronology):1701:year < 0 |==> false
14172:ORU:-(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(long,org.joda.time.Chronology):1702:-year |==> +year
14173:ORU:-(int):~(int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(long,org.joda.time.Chronology):1702:-year |==> ~year
14174:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(long,org.joda.time.Chronology):1702:year = -year |==> <NO-OP>
14175:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(long,org.joda.time.Chronology):1704:100 |==> 0
14176:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(long,org.joda.time.Chronology):1704:100 |==> -100
14177:AOR:%(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(long,org.joda.time.Chronology):1704:year % 100 |==> year * 100
14178:AOR:%(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(long,org.joda.time.Chronology):1704:year % 100 |==> year + 100
14179:AOR:%(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(long,org.joda.time.Chronology):1704:year % 100 |==> year - 100
14180:AOR:%(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(long,org.joda.time.Chronology):1704:year % 100 |==> year / 100
14181:LVR:NEG:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(long,org.joda.time.Chronology):1706:-1 |==> 0
14182:LVR:NEG:POS:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(long,org.joda.time.Chronology):1706:-1 |==> 1
14183:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1712:0 |==> 1
14184:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1712:0 |==> -1
14185:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1712:year < 0 |==> year != 0
14186:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1712:year < 0 |==> year <= 0
14187:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1712:year < 0 |==> false
14188:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1713:buf.append('\ufffd') |==> <NO-OP>
14189:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1714:buf.append('\ufffd') |==> <NO-OP>
14190:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1716:2 |==> 0
14191:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1716:2 |==> -2
14192:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1716:FormatUtils.appendPaddedInteger(buf, year, 2) |==> <NO-OP>
14193:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1722:0 |==> 1
14194:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1722:0 |==> -1
14195:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1722:year < 0 |==> year != 0
14196:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1722:year < 0 |==> year <= 0
14197:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1722:year < 0 |==> false
14198:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1723:out.write('\ufffd') |==> <NO-OP>
14199:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1724:out.write('\ufffd') |==> <NO-OP>
14200:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1726:2 |==> 0
14201:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1726:2 |==> -2
14202:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1726:FormatUtils.writePaddedInteger(out, year, 2) |==> <NO-OP>
14203:COR:partial.isSupported(iType):TRUE:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1731:partial.isSupported(iType) |==> false
14204:COR:partial.isSupported(iType):FALSE:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1731:partial.isSupported(iType) |==> true
14205:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1734:0 |==> 1
14206:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1734:0 |==> -1
14207:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1734:year < 0 |==> year != 0
14208:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1734:year < 0 |==> year <= 0
14209:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1734:year < 0 |==> false
14210:ORU:-(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1735:-year |==> +year
14211:ORU:-(int):~(int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1735:-year |==> ~year
14212:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1735:year = -year |==> <NO-OP>
14213:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1737:100 |==> 0
14214:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1737:100 |==> -100
14215:AOR:%(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1737:year % 100 |==> year * 100
14216:AOR:%(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1737:year % 100 |==> year + 100
14217:AOR:%(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1737:year % 100 |==> year - 100
14218:AOR:%(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1737:year % 100 |==> year / 100
14219:LVR:NEG:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1740:-1 |==> 0
14220:LVR:NEG:POS:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1740:-1 |==> 1
14221:COR:iShort:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TextField@estimatePrintedLength():1760:iShort |==> false
14222:COR:iShort:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TextField@estimatePrintedLength():1760:iShort |==> true
14223:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TextField@estimatePrintedLength():1760:6 |==> 0
14224:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TextField@estimatePrintedLength():1760:6 |==> -6
14225:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TextField@estimatePrintedLength():1760:20 |==> 0
14226:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TextField@estimatePrintedLength():1760:20 |==> -20
14227:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1767:buf.append(print(instant, chrono, locale)) |==> <NO-OP>
14228:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1769:buf.append('\ufffd') |==> <NO-OP>
14229:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1777:out.write(print(instant, chrono, locale)) |==> <NO-OP>
14230:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1779:out.write('\ufffd') |==> <NO-OP>
14231:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1785:buf.append(print(partial, locale)) |==> <NO-OP>
14232:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1787:buf.append('\ufffd') |==> <NO-OP>
14233:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1793:out.write(print(partial, locale)) |==> <NO-OP>
14234:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1795:out.write('\ufffd') |==> <NO-OP>
14235:COR:iShort:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TextField@print(long,org.joda.time.Chronology,java.util.Locale):1801:iShort |==> false
14236:COR:iShort:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TextField@print(long,org.joda.time.Chronology,java.util.Locale):1801:iShort |==> true
14237:COR:partial.isSupported(iFieldType):TRUE:org.joda.time.format.DateTimeFormatterBuilder$TextField@print(org.joda.time.ReadablePartial,java.util.Locale):1809:partial.isSupported(iFieldType) |==> false
14238:COR:partial.isSupported(iFieldType):FALSE:org.joda.time.format.DateTimeFormatterBuilder$TextField@print(org.joda.time.ReadablePartial,java.util.Locale):1809:partial.isSupported(iFieldType) |==> true
14239:COR:iShort:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TextField@print(org.joda.time.ReadablePartial,java.util.Locale):1811:iShort |==> false
14240:COR:iShort:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TextField@print(org.joda.time.ReadablePartial,java.util.Locale):1811:iShort |==> true
14241:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1831:0 |==> 1
14242:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1831:0 |==> -1
14243:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1834:innerMap == null |==> false
14244:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1835:innerMap = new HashMap<DateTimeFieldType, Object[]>() |==> <NO-OP>
14245:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1836:cParseCache.put(locale, innerMap) |==> <NO-OP>
14246:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1839:array == null |==> false
14247:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1840:32 |==> 0
14248:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1840:32 |==> -32
14249:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1840:validValues = new HashSet<String>(32) |==> <NO-OP>
14250:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1841:0L |==> 1L
14251:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1841:0L |==> -1L
14252:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1845:max - min |==> max % min
14253:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1845:max - min |==> max * min
14254:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1845:max - min |==> max + min
14255:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1845:max - min |==> max / min
14256:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1845:32 |==> 0
14257:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1845:32 |==> -32
14258:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1845:max - min > 32 |==> max - min != 32
14259:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1845:max - min > 32 |==> max - min >= 32
14260:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1845:max - min > 32 |==> false
14261:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1846:~position |==> +position
14262:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1846:~position |==> -position
14263:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1848:maxLength = property.getMaximumTextLength(locale) |==> <NO-OP>
14264:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1849:i <= max |==> i < max
14265:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1849:i <= max |==> i == max
14266:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1849:i <= max |==> true
14267:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1850:property.set(i) |==> <NO-OP>
14268:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1851:validValues.add(property.getAsShortText(locale)) |==> <NO-OP>
14269:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1852:validValues.add(property.getAsShortText(locale).toLowerCase(locale)) |==> <NO-OP>
14270:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1853:validValues.add(property.getAsShortText(locale).toUpperCase(locale)) |==> <NO-OP>
14271:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1854:validValues.add(property.getAsText(locale)) |==> <NO-OP>
14272:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1855:validValues.add(property.getAsText(locale).toLowerCase(locale)) |==> <NO-OP>
14273:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1856:validValues.add(property.getAsText(locale).toUpperCase(locale)) |==> <NO-OP>
14274:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1858:iFieldType == DateTimeFieldType.era() |==> false
14275:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1858:"en".equals(locale.getLanguage()) && iFieldType == DateTimeFieldType.era() |==> "en".equals(locale.getLanguage()) == (iFieldType == DateTimeFieldType.era())
14276:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1858:"en".equals(locale.getLanguage()) && iFieldType == DateTimeFieldType.era() |==> false
14277:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1858:"en".equals(locale.getLanguage()) && iFieldType == DateTimeFieldType.era() |==> "en".equals(locale.getLanguage())
14278:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1858:"en".equals(locale.getLanguage()) && iFieldType == DateTimeFieldType.era() |==> iFieldType == DateTimeFieldType.era()
14279:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1860:validValues.add("BCE") |==> <NO-OP>
14280:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1861:validValues.add("bce") |==> <NO-OP>
14281:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1862:validValues.add("CE") |==> <NO-OP>
14282:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1863:validValues.add("ce") |==> <NO-OP>
14283:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1864:3 |==> 0
14284:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1864:3 |==> -3
14285:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1864:maxLength = 3 |==> <NO-OP>
14286:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1866:array = new Object[]{validValues, Integer.valueOf(maxLength)} |==> <NO-OP>
14287:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1867:innerMap.put(iFieldType, array) |==> <NO-OP>
14288:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1869:0 |==> 1
14289:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1869:0 |==> -1
14290:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1869:validValues = (Set<String>)array[0] |==> <NO-OP>
14291:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1870:1 |==> 0
14292:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1870:1 |==> -1
14293:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1870:maxLength = ((Integer)array[1]).intValue() |==> <NO-OP>
14294:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1874:position + maxLength |==> position % maxLength
14295:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1874:position + maxLength |==> position * maxLength
14296:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1874:position + maxLength |==> position - maxLength
14297:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1874:position + maxLength |==> position / maxLength
14298:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1875:i > position |==> i != position
14299:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1875:i > position |==> i >= position
14300:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1875:i > position |==> false
14301:COR:validValues.contains(match):TRUE:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1877:validValues.contains(match) |==> false
14302:COR:validValues.contains(match):FALSE:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1877:validValues.contains(match) |==> true
14303:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1878:bucket.saveField(iFieldType, match, locale) |==> <NO-OP>
14304:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1882:~position |==> +position
14305:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1882:~position |==> -position
14306:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@<init>(org.joda.time.DateTimeFieldType,int,int):1898:18 |==> 0
14307:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@<init>(org.joda.time.DateTimeFieldType,int,int):1898:18 |==> -18
14308:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@<init>(org.joda.time.DateTimeFieldType,int,int):1898:maxDigits > 18 |==> maxDigits != 18
14309:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@<init>(org.joda.time.DateTimeFieldType,int,int):1898:maxDigits > 18 |==> maxDigits >= 18
14310:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@<init>(org.joda.time.DateTimeFieldType,int,int):1898:maxDigits > 18 |==> false
14311:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@<init>(org.joda.time.DateTimeFieldType,int,int):1899:18 |==> 0
14312:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@<init>(org.joda.time.DateTimeFieldType,int,int):1899:18 |==> -18
14313:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@<init>(org.joda.time.DateTimeFieldType,int,int):1899:maxDigits = 18 |==> <NO-OP>
14314:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@<init>(org.joda.time.DateTimeFieldType,int,int):1901:iMinDigits = minDigits |==> <NO-OP>
14315:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@<init>(org.joda.time.DateTimeFieldType,int,int):1902:iMaxDigits = maxDigits |==> <NO-OP>
14316:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1913:printTo(buf, null, instant, chrono) |==> <NO-OP>
14317:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1922:printTo(null, out, instant, chrono) |==> <NO-OP>
14318:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1928:0L |==> 1L
14319:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1928:0L |==> -1L
14320:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1930:printTo(buf, null, millis, partial.getChronology()) |==> <NO-OP>
14321:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1939:0L |==> 1L
14322:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1939:0L |==> -1L
14323:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1940:printTo(null, out, millis, partial.getChronology()) |==> <NO-OP>
14324:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1953:buf != null |==> true
14325:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1954:appendUnknownString(buf, minDigits) |==> <NO-OP>
14326:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1956:printUnknownString(out, minDigits) |==> <NO-OP>
14327:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1961:0 |==> 1
14328:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1961:0 |==> -1
14329:ROR:==(long,long):<=(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1961:fraction == 0 |==> fraction <= 0
14330:ROR:==(long,long):>=(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1961:fraction == 0 |==> fraction >= 0
14331:ROR:==(long,long):FALSE(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1961:fraction == 0 |==> false
14332:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1962:buf != null |==> true
14333:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1963:0 |==> 1
14334:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1963:0 |==> -1
14335:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1963:--minDigits >= 0 |==> --minDigits == 0
14336:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1963:--minDigits >= 0 |==> --minDigits > 0
14337:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1963:--minDigits >= 0 |==> true
14338:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1964:buf.append('0') |==> <NO-OP>
14339:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1967:0 |==> 1
14340:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1967:0 |==> -1
14341:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1967:--minDigits >= 0 |==> --minDigits == 0
14342:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1967:--minDigits >= 0 |==> --minDigits > 0
14343:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1967:--minDigits >= 0 |==> true
14344:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1968:out.write('0') |==> <NO-OP>
14345:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1976:0 |==> 1
14346:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1976:0 |==> -1
14347:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1977:1 |==> 0
14348:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1977:1 |==> -1
14349:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1979:2147483647 |==> 0
14350:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1979:2147483647 |==> -2147483647
14351:LOR:&(long,long):^(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1979:scaled & 2147483647 |==> scaled ^ 2147483647
14352:LOR:&(long,long):|(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1979:scaled & 2147483647 |==> scaled | 2147483647
14353:ROR:==(long,long):<=(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1979:(scaled & 2147483647) == scaled |==> (scaled & 2147483647) <= scaled
14354:ROR:==(long,long):>=(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1979:(scaled & 2147483647) == scaled |==> (scaled & 2147483647) >= scaled
14355:ROR:==(long,long):FALSE(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1979:(scaled & 2147483647) == scaled |==> false
14356:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1987:length < digits |==> length != digits
14357:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1987:length < digits |==> length <= digits
14358:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1987:length < digits |==> false
14359:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1988:buf != null |==> true
14360:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1989:buf.append('0') |==> <NO-OP>
14361:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1991:out.write('0') |==> <NO-OP>
14362:STD:<DEC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1993:minDigits-- |==> <NO-OP>
14363:STD:<DEC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1994:digits-- |==> <NO-OP>
14364:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1997:minDigits < digits |==> minDigits != digits
14365:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1997:minDigits < digits |==> minDigits <= digits
14366:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1997:minDigits < digits |==> false
14367:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1999:minDigits < digits |==> minDigits != digits
14368:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1999:minDigits < digits |==> minDigits <= digits
14369:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1999:minDigits < digits |==> false
14370:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2000:1 |==> 0
14371:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2000:1 |==> -1
14372:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2000:length <= 1 |==> length < 1
14373:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2000:length <= 1 |==> length == 1
14374:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2000:length <= 1 |==> true
14375:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2000:1 |==> 0
14376:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2000:1 |==> -1
14377:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2000:length - 1 |==> length % 1
14378:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2000:length - 1 |==> length * 1
14379:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2000:length - 1 |==> length + 1
14380:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2000:length - 1 |==> length / 1
14381:ROR:!=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2000:str.charAt(length - 1) != '0' |==> str.charAt(length - 1) < '0'
14382:ROR:!=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2000:str.charAt(length - 1) != '0' |==> str.charAt(length - 1) > '0'
14383:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2000:str.charAt(length - 1) != '0' |==> true
14384:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2000:length <= 1 || str.charAt(length - 1) != '0' |==> length <= 1 != (str.charAt(length - 1) != '0')
14385:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2000:length <= 1 || str.charAt(length - 1) != '0' |==> length <= 1
14386:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2000:length <= 1 || str.charAt(length - 1) != '0' |==> str.charAt(length - 1) != '0'
14387:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2000:length <= 1 || str.charAt(length - 1) != '0' |==> true
14388:STD:<DEC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2003:digits-- |==> <NO-OP>
14389:STD:<DEC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2004:length-- |==> <NO-OP>
14390:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2006:length < str.length() |==> length != str.length()
14391:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2006:length < str.length() |==> length <= str.length()
14392:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2006:length < str.length() |==> false
14393:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2007:buf != null |==> true
14394:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2008:0 |==> 1
14395:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2008:0 |==> -1
14396:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2008:i < length |==> i != length
14397:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2008:i < length |==> i <= length
14398:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2008:i < length |==> false
14399:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2009:buf.append(str.charAt(i)) |==> <NO-OP>
14400:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2012:0 |==> 1
14401:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2012:0 |==> -1
14402:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2012:i < length |==> i != length
14403:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2012:i < length |==> i <= length
14404:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2012:i < length |==> false
14405:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2013:out.write(str.charAt(i)) |==> <NO-OP>
14406:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2020:buf != null |==> true
14407:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2021:buf.append(str) |==> <NO-OP>
14408:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):2023:out.write(str) |==> <NO-OP>
14409:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2033:1L |==> 0L
14410:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2033:1L |==> -1L
14411:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2034:10L |==> 0L
14412:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2034:10L |==> -10L
14413:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2035:100L |==> 0L
14414:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2035:100L |==> -100L
14415:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2036:1000L |==> 0L
14416:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2036:1000L |==> -1000L
14417:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2037:10000L |==> 0L
14418:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2037:10000L |==> -10000L
14419:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2038:100000L |==> 0L
14420:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2038:100000L |==> -100000L
14421:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2039:1000000L |==> 0L
14422:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2039:1000000L |==> -1000000L
14423:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2040:10000000L |==> 0L
14424:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2040:10000000L |==> -10000000L
14425:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2041:100000000L |==> 0L
14426:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2041:100000000L |==> -100000000L
14427:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2042:1000000000L |==> 0L
14428:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2042:1000000000L |==> -1000000000L
14429:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2043:10000000000L |==> 0L
14430:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2043:10000000000L |==> -10000000000L
14431:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2044:100000000000L |==> 0L
14432:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2044:100000000000L |==> -100000000000L
14433:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2045:1000000000000L |==> 0L
14434:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2045:1000000000000L |==> -1000000000000L
14435:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2046:10000000000000L |==> 0L
14436:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2046:10000000000000L |==> -10000000000000L
14437:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2047:100000000000000L |==> 0L
14438:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2047:100000000000000L |==> -100000000000000L
14439:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2048:1000000000000000L |==> 0L
14440:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2048:1000000000000000L |==> -1000000000000000L
14441:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2049:10000000000000000L |==> 0L
14442:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2049:10000000000000000L |==> -10000000000000000L
14443:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2050:100000000000000000L |==> 0L
14444:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2050:100000000000000000L |==> -100000000000000000L
14445:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2051:1000000000000000000L |==> 0L
14446:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2051:1000000000000000000L |==> -1000000000000000000L
14447:AOR:*(long,long):%(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2053:rangeMillis * scalar |==> rangeMillis % scalar
14448:AOR:*(long,long):+(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2053:rangeMillis * scalar |==> rangeMillis + scalar
14449:AOR:*(long,long):-(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2053:rangeMillis * scalar |==> rangeMillis - scalar
14450:AOR:*(long,long):/(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2053:rangeMillis * scalar |==> rangeMillis / scalar
14451:AOR:/(long,long):%(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2053:(rangeMillis * scalar) / scalar |==> (rangeMillis * scalar) % scalar
14452:AOR:/(long,long):*(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2053:(rangeMillis * scalar) / scalar |==> (rangeMillis * scalar) * scalar
14453:AOR:/(long,long):+(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2053:(rangeMillis * scalar) / scalar |==> (rangeMillis * scalar) + scalar
14454:AOR:/(long,long):-(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2053:(rangeMillis * scalar) / scalar |==> (rangeMillis * scalar) - scalar
14455:ROR:==(long,long):<=(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2053:((rangeMillis * scalar) / scalar) == rangeMillis |==> ((rangeMillis * scalar) / scalar) <= rangeMillis
14456:ROR:==(long,long):>=(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2053:((rangeMillis * scalar) / scalar) == rangeMillis |==> ((rangeMillis * scalar) / scalar) >= rangeMillis
14457:ROR:==(long,long):FALSE(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2053:((rangeMillis * scalar) / scalar) == rangeMillis |==> false
14458:STD:<DEC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2057:maxDigits-- |==> <NO-OP>
14459:AOR:*(long,long):%(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2060:fraction * scalar |==> fraction % scalar
14460:AOR:*(long,long):+(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2060:fraction * scalar |==> fraction + scalar
14461:AOR:*(long,long):-(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2060:fraction * scalar |==> fraction - scalar
14462:AOR:*(long,long):/(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2060:fraction * scalar |==> fraction / scalar
14463:AOR:/(long,long):%(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2060:fraction * scalar / rangeMillis |==> fraction * scalar % rangeMillis
14464:AOR:/(long,long):*(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2060:fraction * scalar / rangeMillis |==> fraction * scalar * rangeMillis
14465:AOR:/(long,long):+(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2060:fraction * scalar / rangeMillis |==> fraction * scalar + rangeMillis
14466:AOR:/(long,long):-(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2060:fraction * scalar / rangeMillis |==> fraction * scalar - rangeMillis
14467:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2070:text.length() - position |==> text.length() % position
14468:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2070:text.length() - position |==> text.length() * position
14469:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2070:text.length() - position |==> text.length() + position
14470:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2070:text.length() - position |==> text.length() / position
14471:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2072:0 |==> 1
14472:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2072:0 |==> -1
14473:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2073:10 |==> 0
14474:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2073:10 |==> -10
14475:AOR:*(long,long):%(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2073:field.getDurationField().getUnitMillis() * 10 |==> field.getDurationField().getUnitMillis() % 10
14476:AOR:*(long,long):+(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2073:field.getDurationField().getUnitMillis() * 10 |==> field.getDurationField().getUnitMillis() + 10
14477:AOR:*(long,long):-(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2073:field.getDurationField().getUnitMillis() * 10 |==> field.getDurationField().getUnitMillis() - 10
14478:AOR:*(long,long):/(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2073:field.getDurationField().getUnitMillis() * 10 |==> field.getDurationField().getUnitMillis() / 10
14479:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2074:0 |==> 1
14480:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2074:0 |==> -1
14481:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2075:length < limit |==> length != limit
14482:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2075:length < limit |==> length <= limit
14483:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2075:length < limit |==> false
14484:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2076:position + length |==> position % length
14485:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2076:position + length |==> position * length
14486:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2076:position + length |==> position - length
14487:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2076:position + length |==> position / length
14488:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2077:c < '0' |==> c != '0'
14489:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2077:c < '0' |==> c <= '0'
14490:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2077:c < '0' |==> false
14491:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2077:c > '9' |==> c != '9'
14492:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2077:c > '9' |==> c >= '9'
14493:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2077:c > '9' |==> false
14494:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2077:c < '0' || c > '9' |==> c < '0' != c > '9'
14495:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2077:c < '0' || c > '9' |==> c < '0'
14496:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2077:c < '0' || c > '9' |==> c > '9'
14497:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2077:c < '0' || c > '9' |==> true
14498:STD:<INC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2080:length++ |==> <NO-OP>
14499:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2081:10 |==> 0
14500:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2081:10 |==> -10
14501:AOR:/(long,long):%(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2081:n / 10 |==> n % 10
14502:AOR:/(long,long):*(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2081:n / 10 |==> n * 10
14503:AOR:/(long,long):+(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2081:n / 10 |==> n + 10
14504:AOR:/(long,long):-(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2081:n / 10 |==> n - 10
14505:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2082:c - '0' |==> c % '0'
14506:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2082:c - '0' |==> c * '0'
14507:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2082:c - '0' |==> c + '0'
14508:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2082:c - '0' |==> c / '0'
14509:AOR:*(long,long):%(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2082:(c - '0') * nn |==> (c - '0') % nn
14510:AOR:*(long,long):+(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2082:(c - '0') * nn |==> (c - '0') + nn
14511:AOR:*(long,long):-(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2082:(c - '0') * nn |==> (c - '0') - nn
14512:AOR:*(long,long):/(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2082:(c - '0') * nn |==> (c - '0') / nn
14513:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2082:value += (c - '0') * nn |==> <NO-OP>
14514:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2083:n = nn |==> <NO-OP>
14515:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2086:10 |==> 0
14516:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2086:10 |==> -10
14517:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2086:value /= 10 |==> <NO-OP>
14518:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2088:0 |==> 1
14519:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2088:0 |==> -1
14520:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2088:length == 0 |==> length <= 0
14521:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2088:length == 0 |==> length >= 0
14522:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2088:length == 0 |==> false
14523:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2089:~position |==> +position
14524:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2089:~position |==> -position
14525:ROR:>(long,long):!=(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2092:value > Integer.MAX_VALUE |==> value != Integer.MAX_VALUE
14526:ROR:>(long,long):>=(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2092:value > Integer.MAX_VALUE |==> value >= Integer.MAX_VALUE
14527:ROR:>(long,long):FALSE(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2092:value > Integer.MAX_VALUE |==> false
14528:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2093:~position |==> +position
14529:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2093:~position |==> -position
14530:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2101:bucket.saveField(parseField, (int)value) |==> <NO-OP>
14531:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2103:position + length |==> position % length
14532:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2103:position + length |==> position * length
14533:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2103:position + length |==> position - length
14534:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2103:position + length |==> position / length
14535:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2125:0 |==> 1
14536:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2125:0 |==> -1
14537:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2125:minFields <= 0 |==> minFields < 0
14538:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2125:minFields <= 0 |==> minFields == 0
14539:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2125:minFields <= 0 |==> true
14540:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2125:maxFields < minFields |==> maxFields != minFields
14541:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2125:maxFields < minFields |==> maxFields <= minFields
14542:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2125:maxFields < minFields |==> false
14543:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2125:minFields <= 0 || maxFields < minFields |==> minFields <= 0 != maxFields < minFields
14544:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2125:minFields <= 0 || maxFields < minFields |==> minFields <= 0
14545:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2125:minFields <= 0 || maxFields < minFields |==> maxFields < minFields
14546:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2125:minFields <= 0 || maxFields < minFields |==> true
14547:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2128:4 |==> 0
14548:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2128:4 |==> -4
14549:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2128:minFields > 4 |==> minFields != 4
14550:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2128:minFields > 4 |==> minFields >= 4
14551:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2128:minFields > 4 |==> false
14552:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2129:4 |==> 0
14553:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2129:4 |==> -4
14554:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2129:minFields = 4 |==> <NO-OP>
14555:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2130:4 |==> 0
14556:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2130:4 |==> -4
14557:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2130:maxFields = 4 |==> <NO-OP>
14558:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2137:1 |==> 0
14559:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2137:1 |==> -1
14560:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2137:1 + iMinFields |==> 1 % iMinFields
14561:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2137:1 + iMinFields |==> 1 * iMinFields
14562:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2137:1 + iMinFields |==> 1 - iMinFields
14563:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2137:1 + iMinFields |==> 1 / iMinFields
14564:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2137:1 |==> 0
14565:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2137:1 |==> -1
14566:SOR:<<(int,int):>>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2137:1 + iMinFields << 1 |==> 1 + iMinFields >> 1
14567:SOR:<<(int,int):>>>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2137:1 + iMinFields << 1 |==> 1 + iMinFields >>> 1
14568:COR:iShowSeparators:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2138:iShowSeparators |==> false
14569:COR:iShowSeparators:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2138:iShowSeparators |==> true
14570:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2139:1 |==> 0
14571:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2139:1 |==> -1
14572:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2139:iMinFields - 1 |==> iMinFields % 1
14573:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2139:iMinFields - 1 |==> iMinFields * 1
14574:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2139:iMinFields - 1 |==> iMinFields + 1
14575:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2139:iMinFields - 1 |==> iMinFields / 1
14576:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2139:est += iMinFields - 1 |==> <NO-OP>
14577:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2141:iZeroOffsetPrintText != null |==> true
14578:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2141:iZeroOffsetPrintText.length() > est |==> iZeroOffsetPrintText.length() != est
14579:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2141:iZeroOffsetPrintText.length() > est |==> iZeroOffsetPrintText.length() >= est
14580:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2141:iZeroOffsetPrintText.length() > est |==> false
14581:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2141:iZeroOffsetPrintText != null && iZeroOffsetPrintText.length() > est |==> iZeroOffsetPrintText != null == iZeroOffsetPrintText.length() > est
14582:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2141:iZeroOffsetPrintText != null && iZeroOffsetPrintText.length() > est |==> false
14583:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2141:iZeroOffsetPrintText != null && iZeroOffsetPrintText.length() > est |==> iZeroOffsetPrintText != null
14584:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2141:iZeroOffsetPrintText != null && iZeroOffsetPrintText.length() > est |==> iZeroOffsetPrintText.length() > est
14585:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2142:est = iZeroOffsetPrintText.length() |==> <NO-OP>
14586:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2150:displayZone == null |==> false
14587:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2153:0 |==> 1
14588:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2153:0 |==> -1
14589:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2153:displayOffset == 0 |==> displayOffset <= 0
14590:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2153:displayOffset == 0 |==> displayOffset >= 0
14591:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2153:displayOffset == 0 |==> false
14592:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2153:iZeroOffsetPrintText != null |==> true
14593:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2153:displayOffset == 0 && iZeroOffsetPrintText != null |==> displayOffset == 0 == (iZeroOffsetPrintText != null)
14594:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2153:displayOffset == 0 && iZeroOffsetPrintText != null |==> false
14595:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2153:displayOffset == 0 && iZeroOffsetPrintText != null |==> displayOffset == 0
14596:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2153:displayOffset == 0 && iZeroOffsetPrintText != null |==> iZeroOffsetPrintText != null
14597:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2154:buf.append(iZeroOffsetPrintText) |==> <NO-OP>
14598:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2157:0 |==> 1
14599:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2157:0 |==> -1
14600:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2157:displayOffset >= 0 |==> displayOffset == 0
14601:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2157:displayOffset >= 0 |==> displayOffset > 0
14602:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2157:displayOffset >= 0 |==> true
14603:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2158:buf.append('+') |==> <NO-OP>
14604:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2160:buf.append('-') |==> <NO-OP>
14605:ORU:-(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2161:-displayOffset |==> +displayOffset
14606:ORU:-(int):~(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2161:-displayOffset |==> ~displayOffset
14607:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2161:displayOffset = -displayOffset |==> <NO-OP>
14608:AOR:/(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2164:displayOffset / DateTimeConstants.MILLIS_PER_HOUR |==> displayOffset % DateTimeConstants.MILLIS_PER_HOUR
14609:AOR:/(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2164:displayOffset / DateTimeConstants.MILLIS_PER_HOUR |==> displayOffset * DateTimeConstants.MILLIS_PER_HOUR
14610:AOR:/(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2164:displayOffset / DateTimeConstants.MILLIS_PER_HOUR |==> displayOffset + DateTimeConstants.MILLIS_PER_HOUR
14611:AOR:/(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2164:displayOffset / DateTimeConstants.MILLIS_PER_HOUR |==> displayOffset - DateTimeConstants.MILLIS_PER_HOUR
14612:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2165:2 |==> 0
14613:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2165:2 |==> -2
14614:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2165:FormatUtils.appendPaddedInteger(buf, hours, 2) |==> <NO-OP>
14615:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2166:1 |==> 0
14616:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2166:1 |==> -1
14617:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2166:iMaxFields == 1 |==> iMaxFields <= 1
14618:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2166:iMaxFields == 1 |==> iMaxFields >= 1
14619:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2166:iMaxFields == 1 |==> false
14620:AOR:*(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2169:hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> hours % (int)DateTimeConstants.MILLIS_PER_HOUR
14621:AOR:*(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2169:hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> hours + (int)DateTimeConstants.MILLIS_PER_HOUR
14622:AOR:*(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2169:hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> hours - (int)DateTimeConstants.MILLIS_PER_HOUR
14623:AOR:*(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2169:hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> hours / (int)DateTimeConstants.MILLIS_PER_HOUR
14624:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2169:displayOffset -= hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> <NO-OP>
14625:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2170:0 |==> 1
14626:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2170:0 |==> -1
14627:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2170:displayOffset == 0 |==> displayOffset <= 0
14628:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2170:displayOffset == 0 |==> displayOffset >= 0
14629:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2170:displayOffset == 0 |==> false
14630:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2170:1 |==> 0
14631:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2170:1 |==> -1
14632:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2170:iMinFields <= 1 |==> iMinFields < 1
14633:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2170:iMinFields <= 1 |==> iMinFields == 1
14634:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2170:iMinFields <= 1 |==> true
14635:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2170:displayOffset == 0 && iMinFields <= 1 |==> displayOffset == 0 == iMinFields <= 1
14636:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2170:displayOffset == 0 && iMinFields <= 1 |==> false
14637:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2170:displayOffset == 0 && iMinFields <= 1 |==> displayOffset == 0
14638:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2170:displayOffset == 0 && iMinFields <= 1 |==> iMinFields <= 1
14639:AOR:/(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2174:displayOffset / DateTimeConstants.MILLIS_PER_MINUTE |==> displayOffset % DateTimeConstants.MILLIS_PER_MINUTE
14640:AOR:/(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2174:displayOffset / DateTimeConstants.MILLIS_PER_MINUTE |==> displayOffset * DateTimeConstants.MILLIS_PER_MINUTE
14641:AOR:/(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2174:displayOffset / DateTimeConstants.MILLIS_PER_MINUTE |==> displayOffset + DateTimeConstants.MILLIS_PER_MINUTE
14642:AOR:/(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2174:displayOffset / DateTimeConstants.MILLIS_PER_MINUTE |==> displayOffset - DateTimeConstants.MILLIS_PER_MINUTE
14643:COR:iShowSeparators:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2175:iShowSeparators |==> false
14644:COR:iShowSeparators:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2175:iShowSeparators |==> true
14645:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2176:buf.append(':') |==> <NO-OP>
14646:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2178:2 |==> 0
14647:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2178:2 |==> -2
14648:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2178:FormatUtils.appendPaddedInteger(buf, minutes, 2) |==> <NO-OP>
14649:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2179:2 |==> 0
14650:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2179:2 |==> -2
14651:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2179:iMaxFields == 2 |==> iMaxFields <= 2
14652:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2179:iMaxFields == 2 |==> iMaxFields >= 2
14653:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2179:iMaxFields == 2 |==> false
14654:AOR:*(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2182:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes % DateTimeConstants.MILLIS_PER_MINUTE
14655:AOR:*(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2182:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes + DateTimeConstants.MILLIS_PER_MINUTE
14656:AOR:*(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2182:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes - DateTimeConstants.MILLIS_PER_MINUTE
14657:AOR:*(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2182:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes / DateTimeConstants.MILLIS_PER_MINUTE
14658:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2182:displayOffset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> <NO-OP>
14659:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2183:0 |==> 1
14660:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2183:0 |==> -1
14661:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2183:displayOffset == 0 |==> displayOffset <= 0
14662:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2183:displayOffset == 0 |==> displayOffset >= 0
14663:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2183:displayOffset == 0 |==> false
14664:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2183:2 |==> 0
14665:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2183:2 |==> -2
14666:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2183:iMinFields <= 2 |==> iMinFields < 2
14667:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2183:iMinFields <= 2 |==> iMinFields == 2
14668:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2183:iMinFields <= 2 |==> true
14669:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2183:displayOffset == 0 && iMinFields <= 2 |==> displayOffset == 0 == iMinFields <= 2
14670:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2183:displayOffset == 0 && iMinFields <= 2 |==> false
14671:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2183:displayOffset == 0 && iMinFields <= 2 |==> displayOffset == 0
14672:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2183:displayOffset == 0 && iMinFields <= 2 |==> iMinFields <= 2
14673:AOR:/(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2187:displayOffset / DateTimeConstants.MILLIS_PER_SECOND |==> displayOffset % DateTimeConstants.MILLIS_PER_SECOND
14674:AOR:/(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2187:displayOffset / DateTimeConstants.MILLIS_PER_SECOND |==> displayOffset * DateTimeConstants.MILLIS_PER_SECOND
14675:AOR:/(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2187:displayOffset / DateTimeConstants.MILLIS_PER_SECOND |==> displayOffset + DateTimeConstants.MILLIS_PER_SECOND
14676:AOR:/(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2187:displayOffset / DateTimeConstants.MILLIS_PER_SECOND |==> displayOffset - DateTimeConstants.MILLIS_PER_SECOND
14677:COR:iShowSeparators:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2188:iShowSeparators |==> false
14678:COR:iShowSeparators:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2188:iShowSeparators |==> true
14679:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2189:buf.append(':') |==> <NO-OP>
14680:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2191:2 |==> 0
14681:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2191:2 |==> -2
14682:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2191:FormatUtils.appendPaddedInteger(buf, seconds, 2) |==> <NO-OP>
14683:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2192:3 |==> 0
14684:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2192:3 |==> -3
14685:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2192:iMaxFields == 3 |==> iMaxFields <= 3
14686:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2192:iMaxFields == 3 |==> iMaxFields >= 3
14687:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2192:iMaxFields == 3 |==> false
14688:AOR:*(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2195:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds % DateTimeConstants.MILLIS_PER_SECOND
14689:AOR:*(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2195:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds + DateTimeConstants.MILLIS_PER_SECOND
14690:AOR:*(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2195:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds - DateTimeConstants.MILLIS_PER_SECOND
14691:AOR:*(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2195:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds / DateTimeConstants.MILLIS_PER_SECOND
14692:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2195:displayOffset -= seconds * DateTimeConstants.MILLIS_PER_SECOND |==> <NO-OP>
14693:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2196:0 |==> 1
14694:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2196:0 |==> -1
14695:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2196:displayOffset == 0 |==> displayOffset <= 0
14696:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2196:displayOffset == 0 |==> displayOffset >= 0
14697:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2196:displayOffset == 0 |==> false
14698:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2196:3 |==> 0
14699:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2196:3 |==> -3
14700:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2196:iMinFields <= 3 |==> iMinFields < 3
14701:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2196:iMinFields <= 3 |==> iMinFields == 3
14702:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2196:iMinFields <= 3 |==> true
14703:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2196:displayOffset == 0 && iMinFields <= 3 |==> displayOffset == 0 == iMinFields <= 3
14704:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2196:displayOffset == 0 && iMinFields <= 3 |==> false
14705:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2196:displayOffset == 0 && iMinFields <= 3 |==> displayOffset == 0
14706:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2196:displayOffset == 0 && iMinFields <= 3 |==> iMinFields <= 3
14707:COR:iShowSeparators:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2200:iShowSeparators |==> false
14708:COR:iShowSeparators:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2200:iShowSeparators |==> true
14709:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2201:buf.append('.') |==> <NO-OP>
14710:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2203:3 |==> 0
14711:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2203:3 |==> -3
14712:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2203:FormatUtils.appendPaddedInteger(buf, displayOffset, 3) |==> <NO-OP>
14713:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2209:displayZone == null |==> false
14714:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2212:0 |==> 1
14715:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2212:0 |==> -1
14716:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2212:displayOffset == 0 |==> displayOffset <= 0
14717:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2212:displayOffset == 0 |==> displayOffset >= 0
14718:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2212:displayOffset == 0 |==> false
14719:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2212:iZeroOffsetPrintText != null |==> true
14720:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2212:displayOffset == 0 && iZeroOffsetPrintText != null |==> displayOffset == 0 == (iZeroOffsetPrintText != null)
14721:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2212:displayOffset == 0 && iZeroOffsetPrintText != null |==> false
14722:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2212:displayOffset == 0 && iZeroOffsetPrintText != null |==> displayOffset == 0
14723:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2212:displayOffset == 0 && iZeroOffsetPrintText != null |==> iZeroOffsetPrintText != null
14724:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2213:out.write(iZeroOffsetPrintText) |==> <NO-OP>
14725:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2216:0 |==> 1
14726:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2216:0 |==> -1
14727:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2216:displayOffset >= 0 |==> displayOffset == 0
14728:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2216:displayOffset >= 0 |==> displayOffset > 0
14729:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2216:displayOffset >= 0 |==> true
14730:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2217:out.write('+') |==> <NO-OP>
14731:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2219:out.write('-') |==> <NO-OP>
14732:ORU:-(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2220:-displayOffset |==> +displayOffset
14733:ORU:-(int):~(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2220:-displayOffset |==> ~displayOffset
14734:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2220:displayOffset = -displayOffset |==> <NO-OP>
14735:AOR:/(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2223:displayOffset / DateTimeConstants.MILLIS_PER_HOUR |==> displayOffset % DateTimeConstants.MILLIS_PER_HOUR
14736:AOR:/(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2223:displayOffset / DateTimeConstants.MILLIS_PER_HOUR |==> displayOffset * DateTimeConstants.MILLIS_PER_HOUR
14737:AOR:/(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2223:displayOffset / DateTimeConstants.MILLIS_PER_HOUR |==> displayOffset + DateTimeConstants.MILLIS_PER_HOUR
14738:AOR:/(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2223:displayOffset / DateTimeConstants.MILLIS_PER_HOUR |==> displayOffset - DateTimeConstants.MILLIS_PER_HOUR
14739:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2224:2 |==> 0
14740:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2224:2 |==> -2
14741:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2224:FormatUtils.writePaddedInteger(out, hours, 2) |==> <NO-OP>
14742:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2225:1 |==> 0
14743:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2225:1 |==> -1
14744:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2225:iMaxFields == 1 |==> iMaxFields <= 1
14745:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2225:iMaxFields == 1 |==> iMaxFields >= 1
14746:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2225:iMaxFields == 1 |==> false
14747:AOR:*(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2228:hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> hours % (int)DateTimeConstants.MILLIS_PER_HOUR
14748:AOR:*(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2228:hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> hours + (int)DateTimeConstants.MILLIS_PER_HOUR
14749:AOR:*(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2228:hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> hours - (int)DateTimeConstants.MILLIS_PER_HOUR
14750:AOR:*(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2228:hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> hours / (int)DateTimeConstants.MILLIS_PER_HOUR
14751:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2228:displayOffset -= hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> <NO-OP>
14752:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2229:0 |==> 1
14753:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2229:0 |==> -1
14754:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2229:displayOffset == 0 |==> displayOffset <= 0
14755:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2229:displayOffset == 0 |==> displayOffset >= 0
14756:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2229:displayOffset == 0 |==> false
14757:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2229:1 |==> 0
14758:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2229:1 |==> -1
14759:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2229:iMinFields == 1 |==> iMinFields <= 1
14760:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2229:iMinFields == 1 |==> iMinFields >= 1
14761:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2229:iMinFields == 1 |==> false
14762:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2229:displayOffset == 0 && iMinFields == 1 |==> displayOffset == 0 == (iMinFields == 1)
14763:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2229:displayOffset == 0 && iMinFields == 1 |==> false
14764:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2229:displayOffset == 0 && iMinFields == 1 |==> displayOffset == 0
14765:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2229:displayOffset == 0 && iMinFields == 1 |==> iMinFields == 1
14766:AOR:/(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2233:displayOffset / DateTimeConstants.MILLIS_PER_MINUTE |==> displayOffset % DateTimeConstants.MILLIS_PER_MINUTE
14767:AOR:/(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2233:displayOffset / DateTimeConstants.MILLIS_PER_MINUTE |==> displayOffset * DateTimeConstants.MILLIS_PER_MINUTE
14768:AOR:/(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2233:displayOffset / DateTimeConstants.MILLIS_PER_MINUTE |==> displayOffset + DateTimeConstants.MILLIS_PER_MINUTE
14769:AOR:/(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2233:displayOffset / DateTimeConstants.MILLIS_PER_MINUTE |==> displayOffset - DateTimeConstants.MILLIS_PER_MINUTE
14770:COR:iShowSeparators:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2234:iShowSeparators |==> false
14771:COR:iShowSeparators:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2234:iShowSeparators |==> true
14772:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2235:out.write(':') |==> <NO-OP>
14773:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2237:2 |==> 0
14774:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2237:2 |==> -2
14775:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2237:FormatUtils.writePaddedInteger(out, minutes, 2) |==> <NO-OP>
14776:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2238:2 |==> 0
14777:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2238:2 |==> -2
14778:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2238:iMaxFields == 2 |==> iMaxFields <= 2
14779:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2238:iMaxFields == 2 |==> iMaxFields >= 2
14780:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2238:iMaxFields == 2 |==> false
14781:AOR:*(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2241:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes % DateTimeConstants.MILLIS_PER_MINUTE
14782:AOR:*(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2241:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes + DateTimeConstants.MILLIS_PER_MINUTE
14783:AOR:*(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2241:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes - DateTimeConstants.MILLIS_PER_MINUTE
14784:AOR:*(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2241:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes / DateTimeConstants.MILLIS_PER_MINUTE
14785:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2241:displayOffset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> <NO-OP>
14786:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2242:0 |==> 1
14787:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2242:0 |==> -1
14788:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2242:displayOffset == 0 |==> displayOffset <= 0
14789:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2242:displayOffset == 0 |==> displayOffset >= 0
14790:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2242:displayOffset == 0 |==> false
14791:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2242:2 |==> 0
14792:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2242:2 |==> -2
14793:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2242:iMinFields == 2 |==> iMinFields <= 2
14794:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2242:iMinFields == 2 |==> iMinFields >= 2
14795:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2242:iMinFields == 2 |==> false
14796:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2242:displayOffset == 0 && iMinFields == 2 |==> displayOffset == 0 == (iMinFields == 2)
14797:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2242:displayOffset == 0 && iMinFields == 2 |==> false
14798:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2242:displayOffset == 0 && iMinFields == 2 |==> displayOffset == 0
14799:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2242:displayOffset == 0 && iMinFields == 2 |==> iMinFields == 2
14800:AOR:/(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2246:displayOffset / DateTimeConstants.MILLIS_PER_SECOND |==> displayOffset % DateTimeConstants.MILLIS_PER_SECOND
14801:AOR:/(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2246:displayOffset / DateTimeConstants.MILLIS_PER_SECOND |==> displayOffset * DateTimeConstants.MILLIS_PER_SECOND
14802:AOR:/(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2246:displayOffset / DateTimeConstants.MILLIS_PER_SECOND |==> displayOffset + DateTimeConstants.MILLIS_PER_SECOND
14803:AOR:/(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2246:displayOffset / DateTimeConstants.MILLIS_PER_SECOND |==> displayOffset - DateTimeConstants.MILLIS_PER_SECOND
14804:COR:iShowSeparators:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2247:iShowSeparators |==> false
14805:COR:iShowSeparators:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2247:iShowSeparators |==> true
14806:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2248:out.write(':') |==> <NO-OP>
14807:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2250:2 |==> 0
14808:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2250:2 |==> -2
14809:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2250:FormatUtils.writePaddedInteger(out, seconds, 2) |==> <NO-OP>
14810:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2251:3 |==> 0
14811:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2251:3 |==> -3
14812:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2251:iMaxFields == 3 |==> iMaxFields <= 3
14813:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2251:iMaxFields == 3 |==> iMaxFields >= 3
14814:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2251:iMaxFields == 3 |==> false
14815:AOR:*(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2254:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds % DateTimeConstants.MILLIS_PER_SECOND
14816:AOR:*(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2254:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds + DateTimeConstants.MILLIS_PER_SECOND
14817:AOR:*(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2254:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds - DateTimeConstants.MILLIS_PER_SECOND
14818:AOR:*(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2254:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds / DateTimeConstants.MILLIS_PER_SECOND
14819:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2254:displayOffset -= seconds * DateTimeConstants.MILLIS_PER_SECOND |==> <NO-OP>
14820:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2255:0 |==> 1
14821:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2255:0 |==> -1
14822:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2255:displayOffset == 0 |==> displayOffset <= 0
14823:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2255:displayOffset == 0 |==> displayOffset >= 0
14824:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2255:displayOffset == 0 |==> false
14825:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2255:3 |==> 0
14826:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2255:3 |==> -3
14827:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2255:iMinFields == 3 |==> iMinFields <= 3
14828:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2255:iMinFields == 3 |==> iMinFields >= 3
14829:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2255:iMinFields == 3 |==> false
14830:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2255:displayOffset == 0 && iMinFields == 3 |==> displayOffset == 0 == (iMinFields == 3)
14831:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2255:displayOffset == 0 && iMinFields == 3 |==> false
14832:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2255:displayOffset == 0 && iMinFields == 3 |==> displayOffset == 0
14833:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2255:displayOffset == 0 && iMinFields == 3 |==> iMinFields == 3
14834:COR:iShowSeparators:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2259:iShowSeparators |==> false
14835:COR:iShowSeparators:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2259:iShowSeparators |==> true
14836:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2260:out.write('.') |==> <NO-OP>
14837:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2262:3 |==> 0
14838:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2262:3 |==> -3
14839:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2262:FormatUtils.writePaddedInteger(out, displayOffset, 3) |==> <NO-OP>
14840:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2278:text.length() - position |==> text.length() % position
14841:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2278:text.length() - position |==> text.length() * position
14842:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2278:text.length() - position |==> text.length() + position
14843:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2278:text.length() - position |==> text.length() / position
14844:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2281:iZeroOffsetParseText != null |==> true
14845:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2282:0 |==> 1
14846:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2282:0 |==> -1
14847:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2282:iZeroOffsetParseText.length() == 0 |==> iZeroOffsetParseText.length() <= 0
14848:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2282:iZeroOffsetParseText.length() == 0 |==> iZeroOffsetParseText.length() >= 0
14849:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2282:iZeroOffsetParseText.length() == 0 |==> false
14850:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2284:0 |==> 1
14851:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2284:0 |==> -1
14852:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2284:limit > 0 |==> limit != 0
14853:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2284:limit > 0 |==> limit >= 0
14854:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2284:limit > 0 |==> false
14855:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2286:c == '-' |==> c <= '-'
14856:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2286:c == '-' |==> c >= '-'
14857:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2286:c == '-' |==> false
14858:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2286:c == '+' |==> c <= '+'
14859:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2286:c == '+' |==> c >= '+'
14860:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2286:c == '+' |==> false
14861:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2286:c == '-' || c == '+' |==> c == '-' != (c == '+')
14862:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2286:c == '-' || c == '+' |==> c == '-'
14863:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2286:c == '-' || c == '+' |==> c == '+'
14864:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2286:c == '-' || c == '+' |==> true
14865:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2290:0 |==> 1
14866:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2290:0 |==> -1
14867:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2290:bucket.setOffset(Integer.valueOf(0)) |==> <NO-OP>
14868:LVR:TRUE:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2293:true |==> false
14869:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2293:0 |==> 1
14870:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2293:0 |==> -1
14871:COR:text.regionMatches(true, position, iZeroOffsetParseText, 0, iZeroOffsetParseText.length()):TRUE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2293:text.regionMatches(true, position, iZeroOffsetParseText, 0, iZeroOffsetParseText.length()) |==> false
14872:COR:text.regionMatches(true, position, iZeroOffsetParseText, 0, iZeroOffsetParseText.length()):FALSE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2293:text.regionMatches(true, position, iZeroOffsetParseText, 0, iZeroOffsetParseText.length()) |==> true
14873:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2294:0 |==> 1
14874:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2294:0 |==> -1
14875:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2294:bucket.setOffset(Integer.valueOf(0)) |==> <NO-OP>
14876:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2295:position + iZeroOffsetParseText.length() |==> position % iZeroOffsetParseText.length()
14877:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2295:position + iZeroOffsetParseText.length() |==> position * iZeroOffsetParseText.length()
14878:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2295:position + iZeroOffsetParseText.length() |==> position - iZeroOffsetParseText.length()
14879:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2295:position + iZeroOffsetParseText.length() |==> position / iZeroOffsetParseText.length()
14880:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2301:1 |==> 0
14881:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2301:1 |==> -1
14882:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2301:limit <= 1 |==> limit < 1
14883:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2301:limit <= 1 |==> limit == 1
14884:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2301:limit <= 1 |==> true
14885:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2302:~position |==> +position
14886:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2302:~position |==> -position
14887:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2307:c == '-' |==> c <= '-'
14888:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2307:c == '-' |==> c >= '-'
14889:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2307:c == '-' |==> false
14890:LVR:TRUE:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2308:true |==> false
14891:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2309:c == '+' |==> c <= '+'
14892:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2309:c == '+' |==> c >= '+'
14893:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2309:c == '+' |==> false
14894:LVR:FALSE:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2310:false |==> true
14895:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2312:~position |==> +position
14896:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2312:~position |==> -position
14897:STD:<DEC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2315:limit-- |==> <NO-OP>
14898:STD:<INC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2316:position++ |==> <NO-OP>
14899:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2330:2 |==> 0
14900:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2330:2 |==> -2
14901:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2330:2 |==> 0
14902:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2330:2 |==> -2
14903:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2330:digitCount(text, position, 2) < 2 |==> digitCount(text, position, 2) != 2
14904:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2330:digitCount(text, position, 2) < 2 |==> digitCount(text, position, 2) <= 2
14905:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2330:digitCount(text, position, 2) < 2 |==> false
14906:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2332:~position |==> +position
14907:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2332:~position |==> -position
14908:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2338:23 |==> 0
14909:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2338:23 |==> -23
14910:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2338:hours > 23 |==> hours != 23
14911:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2338:hours > 23 |==> hours >= 23
14912:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2338:hours > 23 |==> false
14913:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2339:~position |==> +position
14914:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2339:~position |==> -position
14915:AOR:*(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2341:hours * DateTimeConstants.MILLIS_PER_HOUR |==> hours % DateTimeConstants.MILLIS_PER_HOUR
14916:AOR:*(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2341:hours * DateTimeConstants.MILLIS_PER_HOUR |==> hours + DateTimeConstants.MILLIS_PER_HOUR
14917:AOR:*(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2341:hours * DateTimeConstants.MILLIS_PER_HOUR |==> hours - DateTimeConstants.MILLIS_PER_HOUR
14918:AOR:*(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2341:hours * DateTimeConstants.MILLIS_PER_HOUR |==> hours / DateTimeConstants.MILLIS_PER_HOUR
14919:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2342:2 |==> 0
14920:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2342:2 |==> -2
14921:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2342:limit -= 2 |==> <NO-OP>
14922:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2343:2 |==> 0
14923:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2343:2 |==> -2
14924:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2343:position += 2 |==> <NO-OP>
14925:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2349:0 |==> 1
14926:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2349:0 |==> -1
14927:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2349:limit <= 0 |==> limit < 0
14928:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2349:limit <= 0 |==> limit == 0
14929:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2349:limit <= 0 |==> true
14930:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2354:c = text.charAt(position) |==> <NO-OP>
14931:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2355:c == ':' |==> c <= ':'
14932:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2355:c == ':' |==> c >= ':'
14933:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2355:c == ':' |==> false
14934:LVR:TRUE:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2356:true |==> false
14935:STD:<DEC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2357:limit-- |==> <NO-OP>
14936:STD:<INC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2358:position++ |==> <NO-OP>
14937:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2359:c >= '0' |==> c == '0'
14938:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2359:c >= '0' |==> c > '0'
14939:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2359:c >= '0' |==> true
14940:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2359:c <= '9' |==> c < '9'
14941:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2359:c <= '9' |==> c == '9'
14942:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2359:c <= '9' |==> true
14943:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2359:c >= '0' && c <= '9' |==> c >= '0' == c <= '9'
14944:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2359:c >= '0' && c <= '9' |==> false
14945:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2359:c >= '0' && c <= '9' |==> c >= '0'
14946:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2359:c >= '0' && c <= '9' |==> c <= '9'
14947:LVR:FALSE:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2360:false |==> true
14948:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2367:2 |==> 0
14949:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2367:2 |==> -2
14950:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2368:0 |==> 1
14951:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2368:0 |==> -1
14952:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2368:count == 0 |==> count <= 0
14953:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2368:count == 0 |==> count >= 0
14954:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2368:count == 0 |==> false
14955:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2368:count == 0 && !expectSeparators |==> count == 0 == !expectSeparators
14956:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2368:count == 0 && !expectSeparators |==> false
14957:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2368:count == 0 && !expectSeparators |==> count == 0
14958:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2368:count == 0 && !expectSeparators |==> !expectSeparators
14959:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2370:2 |==> 0
14960:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2370:2 |==> -2
14961:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2370:count < 2 |==> count != 2
14962:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2370:count < 2 |==> count <= 2
14963:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2370:count < 2 |==> false
14964:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2372:~position |==> +position
14965:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2372:~position |==> -position
14966:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2376:59 |==> 0
14967:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2376:59 |==> -59
14968:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2376:minutes > 59 |==> minutes != 59
14969:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2376:minutes > 59 |==> minutes >= 59
14970:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2376:minutes > 59 |==> false
14971:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2377:~position |==> +position
14972:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2377:~position |==> -position
14973:AOR:*(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2379:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes % DateTimeConstants.MILLIS_PER_MINUTE
14974:AOR:*(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2379:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes + DateTimeConstants.MILLIS_PER_MINUTE
14975:AOR:*(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2379:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes - DateTimeConstants.MILLIS_PER_MINUTE
14976:AOR:*(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2379:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes / DateTimeConstants.MILLIS_PER_MINUTE
14977:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2379:offset += minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> <NO-OP>
14978:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2380:2 |==> 0
14979:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2380:2 |==> -2
14980:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2380:limit -= 2 |==> <NO-OP>
14981:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2381:2 |==> 0
14982:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2381:2 |==> -2
14983:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2381:position += 2 |==> <NO-OP>
14984:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2385:0 |==> 1
14985:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2385:0 |==> -1
14986:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2385:limit <= 0 |==> limit < 0
14987:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2385:limit <= 0 |==> limit == 0
14988:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2385:limit <= 0 |==> true
14989:COR:expectSeparators:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2389:expectSeparators |==> false
14990:COR:expectSeparators:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2389:expectSeparators |==> true
14991:ROR:!=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2390:text.charAt(position) != ':' |==> text.charAt(position) < ':'
14992:ROR:!=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2390:text.charAt(position) != ':' |==> text.charAt(position) > ':'
14993:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2390:text.charAt(position) != ':' |==> true
14994:STD:<DEC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2393:limit-- |==> <NO-OP>
14995:STD:<INC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2394:position++ |==> <NO-OP>
14996:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2397:2 |==> 0
14997:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2397:2 |==> -2
14998:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2397:count = digitCount(text, position, 2) |==> <NO-OP>
14999:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2398:0 |==> 1
15000:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2398:0 |==> -1
15001:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2398:count == 0 |==> count <= 0
15002:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2398:count == 0 |==> count >= 0
15003:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2398:count == 0 |==> false
15004:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2398:count == 0 && !expectSeparators |==> count == 0 == !expectSeparators
15005:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2398:count == 0 && !expectSeparators |==> false
15006:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2398:count == 0 && !expectSeparators |==> count == 0
15007:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2398:count == 0 && !expectSeparators |==> !expectSeparators
15008:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2400:2 |==> 0
15009:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2400:2 |==> -2
15010:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2400:count < 2 |==> count != 2
15011:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2400:count < 2 |==> count <= 2
15012:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2400:count < 2 |==> false
15013:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2402:~position |==> +position
15014:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2402:~position |==> -position
15015:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2406:59 |==> 0
15016:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2406:59 |==> -59
15017:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2406:seconds > 59 |==> seconds != 59
15018:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2406:seconds > 59 |==> seconds >= 59
15019:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2406:seconds > 59 |==> false
15020:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2407:~position |==> +position
15021:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2407:~position |==> -position
15022:AOR:*(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2409:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds % DateTimeConstants.MILLIS_PER_SECOND
15023:AOR:*(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2409:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds + DateTimeConstants.MILLIS_PER_SECOND
15024:AOR:*(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2409:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds - DateTimeConstants.MILLIS_PER_SECOND
15025:AOR:*(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2409:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds / DateTimeConstants.MILLIS_PER_SECOND
15026:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2409:offset += seconds * DateTimeConstants.MILLIS_PER_SECOND |==> <NO-OP>
15027:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2410:2 |==> 0
15028:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2410:2 |==> -2
15029:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2410:limit -= 2 |==> <NO-OP>
15030:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2411:2 |==> 0
15031:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2411:2 |==> -2
15032:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2411:position += 2 |==> <NO-OP>
15033:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2415:0 |==> 1
15034:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2415:0 |==> -1
15035:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2415:limit <= 0 |==> limit < 0
15036:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2415:limit <= 0 |==> limit == 0
15037:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2415:limit <= 0 |==> true
15038:COR:expectSeparators:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2419:expectSeparators |==> false
15039:COR:expectSeparators:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2419:expectSeparators |==> true
15040:ROR:!=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2420:text.charAt(position) != '.' |==> text.charAt(position) < '.'
15041:ROR:!=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2420:text.charAt(position) != '.' |==> text.charAt(position) > '.'
15042:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2420:text.charAt(position) != '.' |==> true
15043:ROR:!=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2420:text.charAt(position) != ',' |==> text.charAt(position) < ','
15044:ROR:!=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2420:text.charAt(position) != ',' |==> text.charAt(position) > ','
15045:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2420:text.charAt(position) != ',' |==> true
15046:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2420:text.charAt(position) != '.' && text.charAt(position) != ',' |==> text.charAt(position) != '.' == (text.charAt(position) != ',')
15047:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2420:text.charAt(position) != '.' && text.charAt(position) != ',' |==> false
15048:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2420:text.charAt(position) != '.' && text.charAt(position) != ',' |==> text.charAt(position) != '.'
15049:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2420:text.charAt(position) != '.' && text.charAt(position) != ',' |==> text.charAt(position) != ','
15050:STD:<DEC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2423:limit-- |==> <NO-OP>
15051:STD:<INC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2424:position++ |==> <NO-OP>
15052:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2427:3 |==> 0
15053:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2427:3 |==> -3
15054:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2427:count = digitCount(text, position, 3) |==> <NO-OP>
15055:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2428:0 |==> 1
15056:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2428:0 |==> -1
15057:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2428:count == 0 |==> count <= 0
15058:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2428:count == 0 |==> count >= 0
15059:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2428:count == 0 |==> false
15060:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2428:count == 0 && !expectSeparators |==> count == 0 == !expectSeparators
15061:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2428:count == 0 && !expectSeparators |==> false
15062:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2428:count == 0 && !expectSeparators |==> count == 0
15063:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2428:count == 0 && !expectSeparators |==> !expectSeparators
15064:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2430:1 |==> 0
15065:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2430:1 |==> -1
15066:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2430:count < 1 |==> count != 1
15067:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2430:count < 1 |==> count <= 1
15068:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2430:count < 1 |==> false
15069:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2432:~position |==> +position
15070:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2432:~position |==> -position
15071:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2435:text.charAt(position++) - '0' |==> text.charAt(position++) % '0'
15072:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2435:text.charAt(position++) - '0' |==> text.charAt(position++) * '0'
15073:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2435:text.charAt(position++) - '0' |==> text.charAt(position++) + '0'
15074:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2435:text.charAt(position++) - '0' |==> text.charAt(position++) / '0'
15075:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2435:100 |==> 0
15076:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2435:100 |==> -100
15077:AOR:*(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2435:(text.charAt(position++) - '0') * 100 |==> (text.charAt(position++) - '0') % 100
15078:AOR:*(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2435:(text.charAt(position++) - '0') * 100 |==> (text.charAt(position++) - '0') + 100
15079:AOR:*(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2435:(text.charAt(position++) - '0') * 100 |==> (text.charAt(position++) - '0') - 100
15080:AOR:*(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2435:(text.charAt(position++) - '0') * 100 |==> (text.charAt(position++) - '0') / 100
15081:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2435:offset += (text.charAt(position++) - '0') * 100 |==> <NO-OP>
15082:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2436:1 |==> 0
15083:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2436:1 |==> -1
15084:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2436:count > 1 |==> count != 1
15085:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2436:count > 1 |==> count >= 1
15086:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2436:count > 1 |==> false
15087:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2437:text.charAt(position++) - '0' |==> text.charAt(position++) % '0'
15088:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2437:text.charAt(position++) - '0' |==> text.charAt(position++) * '0'
15089:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2437:text.charAt(position++) - '0' |==> text.charAt(position++) + '0'
15090:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2437:text.charAt(position++) - '0' |==> text.charAt(position++) / '0'
15091:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2437:10 |==> 0
15092:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2437:10 |==> -10
15093:AOR:*(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2437:(text.charAt(position++) - '0') * 10 |==> (text.charAt(position++) - '0') % 10
15094:AOR:*(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2437:(text.charAt(position++) - '0') * 10 |==> (text.charAt(position++) - '0') + 10
15095:AOR:*(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2437:(text.charAt(position++) - '0') * 10 |==> (text.charAt(position++) - '0') - 10
15096:AOR:*(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2437:(text.charAt(position++) - '0') * 10 |==> (text.charAt(position++) - '0') / 10
15097:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2437:offset += (text.charAt(position++) - '0') * 10 |==> <NO-OP>
15098:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2438:2 |==> 0
15099:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2438:2 |==> -2
15100:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2438:count > 2 |==> count != 2
15101:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2438:count > 2 |==> count >= 2
15102:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2438:count > 2 |==> false
15103:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2439:text.charAt(position++) - '0' |==> text.charAt(position++) % '0'
15104:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2439:text.charAt(position++) - '0' |==> text.charAt(position++) * '0'
15105:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2439:text.charAt(position++) - '0' |==> text.charAt(position++) + '0'
15106:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2439:text.charAt(position++) - '0' |==> text.charAt(position++) / '0'
15107:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2439:offset += text.charAt(position++) - '0' |==> <NO-OP>
15108:COR:negative:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2444:negative |==> false
15109:COR:negative:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2444:negative |==> true
15110:ORU:-(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2444:-offset |==> +offset
15111:ORU:-(int):~(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2444:-offset |==> ~offset
15112:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2444:bucket.setOffset(Integer.valueOf(negative ? -offset : offset)) |==> <NO-OP>
15113:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2453:text.length() - position |==> text.length() % position
15114:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2453:text.length() - position |==> text.length() * position
15115:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2453:text.length() - position |==> text.length() + position
15116:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2453:text.length() - position |==> text.length() / position
15117:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2454:0 |==> 1
15118:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2454:0 |==> -1
15119:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2454:amount = 0 |==> <NO-OP>
15120:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2455:0 |==> 1
15121:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2455:0 |==> -1
15122:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2455:limit > 0 |==> limit != 0
15123:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2455:limit > 0 |==> limit >= 0
15124:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2455:limit > 0 |==> false
15125:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2456:position + amount |==> position % amount
15126:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2456:position + amount |==> position * amount
15127:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2456:position + amount |==> position - amount
15128:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2456:position + amount |==> position / amount
15129:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2457:c < '0' |==> c != '0'
15130:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2457:c < '0' |==> c <= '0'
15131:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2457:c < '0' |==> false
15132:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2457:c > '9' |==> c != '9'
15133:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2457:c > '9' |==> c >= '9'
15134:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2457:c > '9' |==> false
15135:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2457:c < '0' || c > '9' |==> c < '0' != c > '9'
15136:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2457:c < '0' || c > '9' |==> c < '0'
15137:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2457:c < '0' || c > '9' |==> c > '9'
15138:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2457:c < '0' || c > '9' |==> true
15139:STD:<INC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2460:amount++ |==> <NO-OP>
15140:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@estimatePrintedLength():2483:iType == SHORT_NAME |==> iType <= SHORT_NAME
15141:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@estimatePrintedLength():2483:iType == SHORT_NAME |==> iType >= SHORT_NAME
15142:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@estimatePrintedLength():2483:iType == SHORT_NAME |==> false
15143:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@estimatePrintedLength():2483:4 |==> 0
15144:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@estimatePrintedLength():2483:4 |==> -4
15145:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@estimatePrintedLength():2483:20 |==> 0
15146:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@estimatePrintedLength():2483:20 |==> -20
15147:AOR:-(long,long):%(long,long):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2489:instant - displayOffset |==> instant % displayOffset
15148:AOR:-(long,long):*(long,long):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2489:instant - displayOffset |==> instant * displayOffset
15149:AOR:-(long,long):+(long,long):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2489:instant - displayOffset |==> instant + displayOffset
15150:AOR:-(long,long):/(long,long):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2489:instant - displayOffset |==> instant / displayOffset
15151:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2489:buf.append(print(instant - displayOffset, displayZone, locale)) |==> <NO-OP>
15152:AOR:-(long,long):%(long,long):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2495:instant - displayOffset |==> instant % displayOffset
15153:AOR:-(long,long):*(long,long):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2495:instant - displayOffset |==> instant * displayOffset
15154:AOR:-(long,long):+(long,long):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2495:instant - displayOffset |==> instant + displayOffset
15155:AOR:-(long,long):/(long,long):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2495:instant - displayOffset |==> instant / displayOffset
15156:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2495:out.write(print(instant - displayOffset, displayZone, locale)) |==> <NO-OP>
15157:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@print(long,org.joda.time.DateTimeZone,java.util.Locale):2499:displayZone == null |==> false
15158:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@estimateParsedLength():2520:iType == SHORT_NAME |==> iType <= SHORT_NAME
15159:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@estimateParsedLength():2520:iType == SHORT_NAME |==> iType >= SHORT_NAME
15160:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@estimateParsedLength():2520:iType == SHORT_NAME |==> false
15161:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@estimateParsedLength():2520:4 |==> 0
15162:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@estimateParsedLength():2520:4 |==> -4
15163:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@estimateParsedLength():2520:20 |==> 0
15164:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@estimateParsedLength():2520:20 |==> -20
15165:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2525:parseLookup != null |==> true
15166:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2525:parseLookup = (parseLookup != null ? parseLookup : DateTimeUtils.getDefaultTimeZoneNames()) |==> <NO-OP>
15167:COR:str.startsWith(name):TRUE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2529:str.startsWith(name) |==> false
15168:COR:str.startsWith(name):FALSE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2529:str.startsWith(name) |==> true
15169:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2530:matched == null |==> false
15170:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2530:name.length() > matched.length() |==> name.length() != matched.length()
15171:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2530:name.length() > matched.length() |==> name.length() >= matched.length()
15172:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2530:name.length() > matched.length() |==> false
15173:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2530:matched == null || name.length() > matched.length() |==> matched == null != name.length() > matched.length()
15174:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2530:matched == null || name.length() > matched.length() |==> matched == null
15175:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2530:matched == null || name.length() > matched.length() |==> name.length() > matched.length()
15176:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2530:matched == null || name.length() > matched.length() |==> true
15177:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2531:matched = name |==> <NO-OP>
15178:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2535:matched != null |==> true
15179:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2536:bucket.setZone(parseLookup.get(matched)) |==> <NO-OP>
15180:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2537:position + matched.length() |==> position % matched.length()
15181:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2537:position + matched.length() |==> position * matched.length()
15182:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2537:position + matched.length() |==> position - matched.length()
15183:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2537:position + matched.length() |==> position / matched.length()
15184:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2539:~position |==> +position
15185:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2539:~position |==> -position
15186:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId:2551:0 |==> 1
15187:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId:2551:0 |==> -1
15188:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId:2553:max = Math.max(max, id.length()) |==> <NO-OP>
15189:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2565:displayZone != null |==> true
15190:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2565:buf.append(displayZone != null ? displayZone.getID() : "") |==> <NO-OP>
15191:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2571:displayZone != null |==> true
15192:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2571:out.write(displayZone != null ? displayZone.getID() : "") |==> <NO-OP>
15193:COR:str.startsWith(id):TRUE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2590:str.startsWith(id) |==> false
15194:COR:str.startsWith(id):FALSE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2590:str.startsWith(id) |==> true
15195:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2591:best == null |==> false
15196:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2591:id.length() > best.length() |==> id.length() != best.length()
15197:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2591:id.length() > best.length() |==> id.length() >= best.length()
15198:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2591:id.length() > best.length() |==> false
15199:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2591:best == null || id.length() > best.length() |==> best == null != id.length() > best.length()
15200:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2591:best == null || id.length() > best.length() |==> best == null
15201:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2591:best == null || id.length() > best.length() |==> id.length() > best.length()
15202:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2591:best == null || id.length() > best.length() |==> true
15203:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2592:best = id |==> <NO-OP>
15204:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2596:best != null |==> true
15205:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2597:bucket.setZone(DateTimeZone.forID(best)) |==> <NO-OP>
15206:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2598:position + best.length() |==> position % best.length()
15207:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2598:position + best.length() |==> position * best.length()
15208:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2598:position + best.length() |==> position - best.length()
15209:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2598:position + best.length() |==> position / best.length()
15210:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2600:~position |==> +position
15211:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2600:~position |==> -position
15212:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2620:decompose(elementPairs, printerList, parserList) |==> <NO-OP>
15213:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2622:printerList.contains(null) || printerList.isEmpty() |==> printerList.contains(null) != printerList.isEmpty()
15214:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2622:printerList.contains(null) || printerList.isEmpty() |==> printerList.contains(null)
15215:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2622:printerList.contains(null) || printerList.isEmpty() |==> printerList.isEmpty()
15216:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2622:printerList.contains(null) || printerList.isEmpty() |==> true
15217:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2624:0 |==> 1
15218:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2624:0 |==> -1
15219:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2628:0 |==> 1
15220:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2628:0 |==> -1
15221:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2629:0 |==> 1
15222:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2629:0 |==> -1
15223:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2629:i < size |==> i != size
15224:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2629:i < size |==> i <= size
15225:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2629:i < size |==> false
15226:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2631:printEst += printer.estimatePrintedLength() |==> <NO-OP>
15227:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2632:iPrinters[i] = printer |==> <NO-OP>
15228:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2637:parserList.contains(null) || parserList.isEmpty() |==> parserList.contains(null) != parserList.isEmpty()
15229:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2637:parserList.contains(null) || parserList.isEmpty() |==> parserList.contains(null)
15230:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2637:parserList.contains(null) || parserList.isEmpty() |==> parserList.isEmpty()
15231:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2637:parserList.contains(null) || parserList.isEmpty() |==> true
15232:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2639:0 |==> 1
15233:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2639:0 |==> -1
15234:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2643:0 |==> 1
15235:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2643:0 |==> -1
15236:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2644:0 |==> 1
15237:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2644:0 |==> -1
15238:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2644:i < size |==> i != size
15239:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2644:i < size |==> i <= size
15240:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2644:i < size |==> false
15241:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2646:parseEst += parser.estimateParsedLength() |==> <NO-OP>
15242:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2647:iParsers[i] = parser |==> <NO-OP>
15243:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2661:elements == null |==> false
15244:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2665:locale == null |==> false
15245:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2667:locale = Locale.getDefault() |==> <NO-OP>
15246:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2671:0 |==> 1
15247:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2671:0 |==> -1
15248:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2671:i < len |==> i != len
15249:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2671:i < len |==> i <= len
15250:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2671:i < len |==> false
15251:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2672:elements[i].printTo(buf, instant, chrono, displayOffset, displayZone, locale) |==> <NO-OP>
15252:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2680:elements == null |==> false
15253:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2684:locale == null |==> false
15254:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2686:locale = Locale.getDefault() |==> <NO-OP>
15255:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2690:0 |==> 1
15256:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2690:0 |==> -1
15257:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2690:i < len |==> i != len
15258:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2690:i < len |==> i <= len
15259:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2690:i < len |==> false
15260:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2691:elements[i].printTo(out, instant, chrono, displayOffset, displayZone, locale) |==> <NO-OP>
15261:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):2697:elements == null |==> false
15262:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):2701:locale == null |==> false
15263:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):2703:locale = Locale.getDefault() |==> <NO-OP>
15264:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):2707:0 |==> 1
15265:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):2707:0 |==> -1
15266:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):2707:i < len |==> i != len
15267:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):2707:i < len |==> i <= len
15268:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):2707:i < len |==> false
15269:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):2708:elements[i].printTo(buf, partial, locale) |==> <NO-OP>
15270:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):2714:elements == null |==> false
15271:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):2718:locale == null |==> false
15272:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):2720:locale = Locale.getDefault() |==> <NO-OP>
15273:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):2724:0 |==> 1
15274:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):2724:0 |==> -1
15275:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):2724:i < len |==> i != len
15276:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):2724:i < len |==> i <= len
15277:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):2724:i < len |==> false
15278:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):2725:elements[i].printTo(out, partial, locale) |==> <NO-OP>
15279:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2735:elements == null |==> false
15280:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2740:0 |==> 1
15281:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2740:0 |==> -1
15282:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2740:i < len |==> i != len
15283:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2740:i < len |==> i <= len
15284:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2740:i < len |==> false
15285:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2740:0 |==> 1
15286:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2740:0 |==> -1
15287:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2740:position >= 0 |==> position == 0
15288:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2740:position >= 0 |==> position > 0
15289:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2740:position >= 0 |==> true
15290:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2740:i < len && position >= 0 |==> i < len == position >= 0
15291:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2740:i < len && position >= 0 |==> false
15292:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2740:i < len && position >= 0 |==> i < len
15293:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2740:i < len && position >= 0 |==> position >= 0
15294:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2741:position = elements[i].parseInto(bucket, text, position) |==> <NO-OP>
15295:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@isPrinter():2747:iPrinters != null |==> true
15296:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@isParser():2751:iParsers != null |==> true
15297:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2760:0 |==> 1
15298:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2760:0 |==> -1
15299:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2760:i < size |==> i != size
15300:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2760:i < size |==> i <= size
15301:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2760:i < size |==> false
15302:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2760:2 |==> 0
15303:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2760:2 |==> -2
15304:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2763:addArrayToList(printerList, ((Composite)element).iPrinters) |==> <NO-OP>
15305:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2765:printerList.add(element) |==> <NO-OP>
15306:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2768:1 |==> 0
15307:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2768:1 |==> -1
15308:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2768:i + 1 |==> i % 1
15309:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2768:i + 1 |==> i * 1
15310:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2768:i + 1 |==> i - 1
15311:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2768:i + 1 |==> i / 1
15312:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2768:element = elementPairs.get(i + 1) |==> <NO-OP>
15313:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2770:addArrayToList(parserList, ((Composite)element).iParsers) |==> <NO-OP>
15314:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2772:parserList.add(element) |==> <NO-OP>
15315:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):2778:array != null |==> true
15316:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):2779:0 |==> 1
15317:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):2779:0 |==> -1
15318:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):2779:i < array.length |==> i != array.length
15319:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):2779:i < array.length |==> i <= array.length
15320:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):2779:i < array.length |==> false
15321:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):2780:list.add(array[i]) |==> <NO-OP>
15322:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@<init>(org.joda.time.format.DateTimeParser[]):2796:0 |==> 1
15323:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@<init>(org.joda.time.format.DateTimeParser[]):2796:0 |==> -1
15324:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@<init>(org.joda.time.format.DateTimeParser[]):2797:0 |==> 1
15325:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@<init>(org.joda.time.format.DateTimeParser[]):2797:0 |==> -1
15326:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@<init>(org.joda.time.format.DateTimeParser[]):2797:--i >= 0 |==> --i == 0
15327:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@<init>(org.joda.time.format.DateTimeParser[]):2797:--i >= 0 |==> --i > 0
15328:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@<init>(org.joda.time.format.DateTimeParser[]):2797:--i >= 0 |==> true
15329:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@<init>(org.joda.time.format.DateTimeParser[]):2799:parser != null |==> true
15330:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@<init>(org.joda.time.format.DateTimeParser[]):2801:len > est |==> len != est
15331:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@<init>(org.joda.time.format.DateTimeParser[]):2801:len > est |==> len >= est
15332:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@<init>(org.joda.time.format.DateTimeParser[]):2801:len > est |==> false
15333:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@<init>(org.joda.time.format.DateTimeParser[]):2802:est = len |==> <NO-OP>
15334:LVR:FALSE:TRUE:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2818:false |==> true
15335:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2825:0 |==> 1
15336:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2825:0 |==> -1
15337:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2825:i < length |==> i != length
15338:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2825:i < length |==> i <= length
15339:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2825:i < length |==> false
15340:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2827:parser == null |==> false
15341:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2829:bestValidPos <= position |==> bestValidPos < position
15342:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2829:bestValidPos <= position |==> bestValidPos == position
15343:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2829:bestValidPos <= position |==> true
15344:LVR:TRUE:FALSE:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2832:true |==> false
15345:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2832:isOptional = true |==> <NO-OP>
15346:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2836:parsePos >= position |==> parsePos == position
15347:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2836:parsePos >= position |==> parsePos > position
15348:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2836:parsePos >= position |==> true
15349:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2837:parsePos > bestValidPos |==> parsePos != bestValidPos
15350:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2837:parsePos > bestValidPos |==> parsePos >= bestValidPos
15351:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2837:parsePos > bestValidPos |==> false
15352:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2838:parsePos >= text.length() |==> parsePos == text.length()
15353:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2838:parsePos >= text.length() |==> parsePos > text.length()
15354:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2838:parsePos >= text.length() |==> true
15355:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2839:1 |==> 0
15356:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2839:1 |==> -1
15357:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2839:i + 1 |==> i % 1
15358:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2839:i + 1 |==> i * 1
15359:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2839:i + 1 |==> i - 1
15360:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2839:i + 1 |==> i / 1
15361:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2839:(i + 1) >= length |==> (i + 1) == length
15362:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2839:(i + 1) >= length |==> (i + 1) > length
15363:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2839:(i + 1) >= length |==> true
15364:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2838:parsePos >= text.length() || (i + 1) >= length |==> parsePos >= text.length() != (i + 1) >= length
15365:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2838:parsePos >= text.length() || (i + 1) >= length |==> parsePos >= text.length()
15366:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2839:parsePos >= text.length() || (i + 1) >= length |==> (i + 1) >= length
15367:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2838:parsePos >= text.length() || (i + 1) >= length |==> true
15368:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2839:1 |==> 0
15369:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2839:1 |==> -1
15370:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2839:i + 1 |==> i % 1
15371:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2839:i + 1 |==> i * 1
15372:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2839:i + 1 |==> i - 1
15373:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2839:i + 1 |==> i / 1
15374:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2839:parsers[i + 1] == null |==> false
15375:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2838:parsePos >= text.length() || (i + 1) >= length || parsers[i + 1] == null |==> (parsePos >= text.length() || (i + 1) >= length) != (parsers[i + 1] == null)
15376:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2838:parsePos >= text.length() || (i + 1) >= length || parsers[i + 1] == null |==> parsePos >= text.length() || (i + 1) >= length
15377:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2839:parsePos >= text.length() || (i + 1) >= length || parsers[i + 1] == null |==> parsers[i + 1] == null
15378:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2839:parsePos >= text.length() || (i + 1) >= length || parsers[i + 1] == null |==> true
15379:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2845:bestValidPos = parsePos |==> <NO-OP>
15380:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2846:bestValidState = bucket.saveState() |==> <NO-OP>
15381:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2849:0 |==> 1
15382:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2849:0 |==> -1
15383:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2849:parsePos < 0 |==> parsePos != 0
15384:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2849:parsePos < 0 |==> parsePos <= 0
15385:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2849:parsePos < 0 |==> false
15386:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2850:~parsePos |==> +parsePos
15387:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2850:~parsePos |==> -parsePos
15388:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2850:parsePos = ~parsePos |==> <NO-OP>
15389:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2851:parsePos > bestInvalidPos |==> parsePos != bestInvalidPos
15390:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2851:parsePos > bestInvalidPos |==> parsePos >= bestInvalidPos
15391:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2851:parsePos > bestInvalidPos |==> false
15392:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2852:bestInvalidPos = parsePos |==> <NO-OP>
15393:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2856:bucket.restoreState(originalState) |==> <NO-OP>
15394:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2859:bestValidPos > position |==> bestValidPos != position
15395:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2859:bestValidPos > position |==> bestValidPos >= position
15396:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2859:bestValidPos > position |==> false
15397:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2859:bestValidPos == position |==> bestValidPos <= position
15398:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2859:bestValidPos == position |==> bestValidPos >= position
15399:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2859:bestValidPos == position |==> false
15400:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2859:bestValidPos == position && isOptional |==> bestValidPos == position == isOptional
15401:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2859:bestValidPos == position && isOptional |==> false
15402:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2859:bestValidPos == position && isOptional |==> bestValidPos == position
15403:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2859:bestValidPos == position && isOptional |==> isOptional
15404:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2859:bestValidPos > position || (bestValidPos == position && isOptional) |==> bestValidPos > position != (bestValidPos == position && isOptional)
15405:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2859:bestValidPos > position || (bestValidPos == position && isOptional) |==> bestValidPos > position
15406:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2859:bestValidPos > position || (bestValidPos == position && isOptional) |==> (bestValidPos == position && isOptional)
15407:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2859:bestValidPos > position || (bestValidPos == position && isOptional) |==> true
15408:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2861:bestValidState != null |==> true
15409:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2862:bucket.restoreState(bestValidState) |==> <NO-OP>
15410:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2867:~bestInvalidPos |==> +bestInvalidPos
15411:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2867:~bestInvalidPos |==> -bestInvalidPos
15412:LVR:POS:0:org.joda.time.format.FormatUtils:31:10 |==> 0
15413:LVR:POS:NEG:org.joda.time.format.FormatUtils:31:10 |==> -10
15414:LVR:0:POS:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):50:0 |==> 1
15415:LVR:0:NEG:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):50:0 |==> -1
15416:ROR:<(int,int):!=(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):50:value < 0 |==> value != 0
15417:ROR:<(int,int):<=(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):50:value < 0 |==> value <= 0
15418:ROR:<(int,int):FALSE(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):50:value < 0 |==> false
15419:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):51:buf.append('-') |==> <NO-OP>
15420:ROR:!=(int,int):<(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):52:value != Integer.MIN_VALUE |==> value < Integer.MIN_VALUE
15421:ROR:!=(int,int):>(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):52:value != Integer.MIN_VALUE |==> value > Integer.MIN_VALUE
15422:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):52:value != Integer.MIN_VALUE |==> true
15423:ORU:-(int):+(int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):53:-value |==> +value
15424:ORU:-(int):~(int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):53:-value |==> ~value
15425:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):53:value = -value |==> <NO-OP>
15426:LVR:POS:0:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):55:10 |==> 0
15427:LVR:POS:NEG:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):55:10 |==> -10
15428:ROR:>(int,int):!=(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):55:size > 10 |==> size != 10
15429:ROR:>(int,int):>=(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):55:size > 10 |==> size >= 10
15430:ROR:>(int,int):FALSE(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):55:size > 10 |==> false
15431:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):56:buf.append('0') |==> <NO-OP>
15432:ORU:-(long):+(long):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):58:-(long)Integer.MIN_VALUE |==> +(long)Integer.MIN_VALUE
15433:ORU:-(long):~(long):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):58:-(long)Integer.MIN_VALUE |==> ~(long)Integer.MIN_VALUE
15434:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):58:buf.append("" + -(long)Integer.MIN_VALUE) |==> <NO-OP>
15435:LVR:POS:0:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):62:10 |==> 0
15436:LVR:POS:NEG:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):62:10 |==> -10
15437:ROR:<(int,int):!=(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):62:value < 10 |==> value != 10
15438:ROR:<(int,int):<=(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):62:value < 10 |==> value <= 10
15439:ROR:<(int,int):FALSE(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):62:value < 10 |==> false
15440:LVR:POS:0:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):63:1 |==> 0
15441:LVR:POS:NEG:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):63:1 |==> -1
15442:ROR:>(int,int):!=(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):63:size > 1 |==> size != 1
15443:ROR:>(int,int):>=(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):63:size > 1 |==> size >= 1
15444:ROR:>(int,int):FALSE(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):63:size > 1 |==> false
15445:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):64:buf.append('0') |==> <NO-OP>
15446:AOR:+(int,int):%(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):66:value + '0' |==> value % '0'
15447:AOR:+(int,int):*(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):66:value + '0' |==> value * '0'
15448:AOR:+(int,int):-(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):66:value + '0' |==> value - '0'
15449:AOR:+(int,int):/(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):66:value + '0' |==> value / '0'
15450:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):66:buf.append((char)(value + '0')) |==> <NO-OP>
15451:LVR:POS:0:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):67:100 |==> 0
15452:LVR:POS:NEG:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):67:100 |==> -100
15453:ROR:<(int,int):!=(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):67:value < 100 |==> value != 100
15454:ROR:<(int,int):<=(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):67:value < 100 |==> value <= 100
15455:ROR:<(int,int):FALSE(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):67:value < 100 |==> false
15456:LVR:POS:0:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):68:2 |==> 0
15457:LVR:POS:NEG:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):68:2 |==> -2
15458:ROR:>(int,int):!=(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):68:size > 2 |==> size != 2
15459:ROR:>(int,int):>=(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):68:size > 2 |==> size >= 2
15460:ROR:>(int,int):FALSE(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):68:size > 2 |==> false
15461:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):69:buf.append('0') |==> <NO-OP>
15462:LVR:POS:0:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):74:1 |==> 0
15463:LVR:POS:NEG:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):74:1 |==> -1
15464:AOR:+(int,int):%(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):74:value + 1 |==> value % 1
15465:AOR:+(int,int):*(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):74:value + 1 |==> value * 1
15466:AOR:+(int,int):-(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):74:value + 1 |==> value - 1
15467:AOR:+(int,int):/(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):74:value + 1 |==> value / 1
15468:LVR:POS:0:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):74:13421772 |==> 0
15469:LVR:POS:NEG:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):74:13421772 |==> -13421772
15470:AOR:*(int,int):%(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):74:(value + 1) * 13421772 |==> (value + 1) % 13421772
15471:AOR:*(int,int):+(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):74:(value + 1) * 13421772 |==> (value + 1) + 13421772
15472:AOR:*(int,int):-(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):74:(value + 1) * 13421772 |==> (value + 1) - 13421772
15473:AOR:*(int,int):/(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):74:(value + 1) * 13421772 |==> (value + 1) / 13421772
15474:LVR:POS:0:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):74:27 |==> 0
15475:LVR:POS:NEG:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):74:27 |==> -27
15476:SOR:>>(int,int):<<(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):74:((value + 1) * 13421772) >> 27 |==> ((value + 1) * 13421772) << 27
15477:SOR:>>(int,int):>>>(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):74:((value + 1) * 13421772) >> 27 |==> ((value + 1) * 13421772) >>> 27
15478:AOR:+(int,int):%(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):75:d + '0' |==> d % '0'
15479:AOR:+(int,int):*(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):75:d + '0' |==> d * '0'
15480:AOR:+(int,int):-(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):75:d + '0' |==> d - '0'
15481:AOR:+(int,int):/(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):75:d + '0' |==> d / '0'
15482:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):75:buf.append((char)(d + '0')) |==> <NO-OP>
15483:LVR:POS:0:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):77:3 |==> 0
15484:LVR:POS:NEG:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):77:3 |==> -3
15485:SOR:<<(int,int):>>(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):77:d << 3 |==> d >> 3
15486:SOR:<<(int,int):>>>(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):77:d << 3 |==> d >>> 3
15487:AOR:-(int,int):%(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):77:value - (d << 3) |==> value % (d << 3)
15488:AOR:-(int,int):*(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):77:value - (d << 3) |==> value * (d << 3)
15489:AOR:-(int,int):+(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):77:value - (d << 3) |==> value + (d << 3)
15490:AOR:-(int,int):/(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):77:value - (d << 3) |==> value / (d << 3)
15491:LVR:POS:0:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):77:1 |==> 0
15492:LVR:POS:NEG:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):77:1 |==> -1
15493:SOR:<<(int,int):>>(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):77:d << 1 |==> d >> 1
15494:SOR:<<(int,int):>>>(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):77:d << 1 |==> d >>> 1
15495:AOR:-(int,int):%(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):77:value - (d << 3) - (d << 1) |==> (value - (d << 3)) % (d << 1)
15496:AOR:-(int,int):*(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):77:value - (d << 3) - (d << 1) |==> (value - (d << 3)) * (d << 1)
15497:AOR:-(int,int):+(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):77:value - (d << 3) - (d << 1) |==> value - (d << 3) + (d << 1)
15498:AOR:-(int,int):/(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):77:value - (d << 3) - (d << 1) |==> (value - (d << 3)) / (d << 1)
15499:AOR:+(int,int):%(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):77:value - (d << 3) - (d << 1) + '0' |==> (value - (d << 3) - (d << 1)) % '0'
15500:AOR:+(int,int):*(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):77:value - (d << 3) - (d << 1) + '0' |==> (value - (d << 3) - (d << 1)) * '0'
15501:AOR:+(int,int):-(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):77:value - (d << 3) - (d << 1) + '0' |==> value - (d << 3) - (d << 1) - '0'
15502:AOR:+(int,int):/(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):77:value - (d << 3) - (d << 1) + '0' |==> (value - (d << 3) - (d << 1)) / '0'
15503:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):77:buf.append((char)(value - (d << 3) - (d << 1) + '0')) |==> <NO-OP>
15504:LVR:POS:0:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):80:1000 |==> 0
15505:LVR:POS:NEG:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):80:1000 |==> -1000
15506:ROR:<(int,int):!=(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):80:value < 1000 |==> value != 1000
15507:ROR:<(int,int):<=(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):80:value < 1000 |==> value <= 1000
15508:ROR:<(int,int):FALSE(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):80:value < 1000 |==> false
15509:LVR:POS:0:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):81:3 |==> 0
15510:LVR:POS:NEG:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):81:3 |==> -3
15511:LVR:POS:0:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):82:10000 |==> 0
15512:LVR:POS:NEG:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):82:10000 |==> -10000
15513:ROR:<(int,int):!=(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):82:value < 10000 |==> value != 10000
15514:ROR:<(int,int):<=(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):82:value < 10000 |==> value <= 10000
15515:ROR:<(int,int):FALSE(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):82:value < 10000 |==> false
15516:LVR:POS:0:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):83:4 |==> 0
15517:LVR:POS:NEG:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):83:4 |==> -4
15518:AOR:/(double,double):%(double,double):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):85:Math.log(value) / LOG_10 |==> Math.log(value) % LOG_10
15519:AOR:/(double,double):*(double,double):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):85:Math.log(value) / LOG_10 |==> Math.log(value) * LOG_10
15520:AOR:/(double,double):+(double,double):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):85:Math.log(value) / LOG_10 |==> Math.log(value) + LOG_10
15521:AOR:/(double,double):-(double,double):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):85:Math.log(value) / LOG_10 |==> Math.log(value) - LOG_10
15522:LVR:POS:0:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):85:1 |==> 0
15523:LVR:POS:NEG:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):85:1 |==> -1
15524:AOR:+(int,int):%(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):85:(int)(Math.log(value) / LOG_10) + 1 |==> (int)(Math.log(value) / LOG_10) % 1
15525:AOR:+(int,int):*(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):85:(int)(Math.log(value) / LOG_10) + 1 |==> (int)(Math.log(value) / LOG_10) * 1
15526:AOR:+(int,int):-(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):85:(int)(Math.log(value) / LOG_10) + 1 |==> (int)(Math.log(value) / LOG_10) - 1
15527:AOR:+(int,int):/(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):85:(int)(Math.log(value) / LOG_10) + 1 |==> (int)(Math.log(value) / LOG_10) / 1
15528:ROR:>(int,int):!=(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):87:size > digits |==> size != digits
15529:ROR:>(int,int):>=(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):87:size > digits |==> size >= digits
15530:ROR:>(int,int):FALSE(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):87:size > digits |==> false
15531:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):88:buf.append('0') |==> <NO-OP>
15532:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,int,int):90:buf.append(Integer.toString(value)) |==> <NO-OP>
15533:ROR:==(long,long):<=(long,long):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):106:intValue == value |==> intValue <= value
15534:ROR:==(long,long):>=(long,long):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):106:intValue == value |==> intValue >= value
15535:ROR:==(long,long):FALSE(long,long):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):106:intValue == value |==> false
15536:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):107:appendPaddedInteger(buf, intValue, size) |==> <NO-OP>
15537:LVR:POS:0:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):108:19 |==> 0
15538:LVR:POS:NEG:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):108:19 |==> -19
15539:ROR:<=(int,int):<(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):108:size <= 19 |==> size < 19
15540:ROR:<=(int,int):==(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):108:size <= 19 |==> size == 19
15541:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):108:size <= 19 |==> true
15542:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):109:buf.append(Long.toString(value)) |==> <NO-OP>
15543:LVR:0:POS:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):111:0 |==> 1
15544:LVR:0:NEG:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):111:0 |==> -1
15545:ROR:<(long,long):!=(long,long):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):111:value < 0 |==> value != 0
15546:ROR:<(long,long):<=(long,long):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):111:value < 0 |==> value <= 0
15547:ROR:<(long,long):FALSE(long,long):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):111:value < 0 |==> false
15548:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):112:buf.append('-') |==> <NO-OP>
15549:ROR:!=(long,long):<(long,long):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):113:value != Long.MIN_VALUE |==> value < Long.MIN_VALUE
15550:ROR:!=(long,long):>(long,long):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):113:value != Long.MIN_VALUE |==> value > Long.MIN_VALUE
15551:ROR:!=(long,long):TRUE(long,long):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):113:value != Long.MIN_VALUE |==> true
15552:ORU:-(long):+(long):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):114:-value |==> +value
15553:ORU:-(long):~(long):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):114:-value |==> ~value
15554:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):114:value = -value |==> <NO-OP>
15555:LVR:POS:0:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):116:19 |==> 0
15556:LVR:POS:NEG:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):116:19 |==> -19
15557:ROR:>(int,int):!=(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):116:size > 19 |==> size != 19
15558:ROR:>(int,int):>=(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):116:size > 19 |==> size >= 19
15559:ROR:>(int,int):FALSE(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):116:size > 19 |==> false
15560:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):117:buf.append('0') |==> <NO-OP>
15561:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):119:buf.append("9223372036854775808") |==> <NO-OP>
15562:AOR:/(double,double):%(double,double):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):123:Math.log(value) / LOG_10 |==> Math.log(value) % LOG_10
15563:AOR:/(double,double):*(double,double):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):123:Math.log(value) / LOG_10 |==> Math.log(value) * LOG_10
15564:AOR:/(double,double):+(double,double):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):123:Math.log(value) / LOG_10 |==> Math.log(value) + LOG_10
15565:AOR:/(double,double):-(double,double):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):123:Math.log(value) / LOG_10 |==> Math.log(value) - LOG_10
15566:LVR:POS:0:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):123:1 |==> 0
15567:LVR:POS:NEG:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):123:1 |==> -1
15568:AOR:+(int,int):%(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):123:(int)(Math.log(value) / LOG_10) + 1 |==> (int)(Math.log(value) / LOG_10) % 1
15569:AOR:+(int,int):*(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):123:(int)(Math.log(value) / LOG_10) + 1 |==> (int)(Math.log(value) / LOG_10) * 1
15570:AOR:+(int,int):-(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):123:(int)(Math.log(value) / LOG_10) + 1 |==> (int)(Math.log(value) / LOG_10) - 1
15571:AOR:+(int,int):/(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):123:(int)(Math.log(value) / LOG_10) + 1 |==> (int)(Math.log(value) / LOG_10) / 1
15572:ROR:>(int,int):!=(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):124:size > digits |==> size != digits
15573:ROR:>(int,int):>=(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):124:size > digits |==> size >= digits
15574:ROR:>(int,int):FALSE(int,int):org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):124:size > digits |==> false
15575:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):125:buf.append('0') |==> <NO-OP>
15576:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@appendPaddedInteger(java.lang.StringBuffer,long,int):127:buf.append(Long.toString(value)) |==> <NO-OP>
15577:LVR:0:POS:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):144:0 |==> 1
15578:LVR:0:NEG:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):144:0 |==> -1
15579:ROR:<(int,int):!=(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):144:value < 0 |==> value != 0
15580:ROR:<(int,int):<=(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):144:value < 0 |==> value <= 0
15581:ROR:<(int,int):FALSE(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):144:value < 0 |==> false
15582:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):145:out.write('-') |==> <NO-OP>
15583:ROR:!=(int,int):<(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):146:value != Integer.MIN_VALUE |==> value < Integer.MIN_VALUE
15584:ROR:!=(int,int):>(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):146:value != Integer.MIN_VALUE |==> value > Integer.MIN_VALUE
15585:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):146:value != Integer.MIN_VALUE |==> true
15586:ORU:-(int):+(int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):147:-value |==> +value
15587:ORU:-(int):~(int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):147:-value |==> ~value
15588:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):147:value = -value |==> <NO-OP>
15589:LVR:POS:0:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):149:10 |==> 0
15590:LVR:POS:NEG:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):149:10 |==> -10
15591:ROR:>(int,int):!=(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):149:size > 10 |==> size != 10
15592:ROR:>(int,int):>=(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):149:size > 10 |==> size >= 10
15593:ROR:>(int,int):FALSE(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):149:size > 10 |==> false
15594:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):150:out.write('0') |==> <NO-OP>
15595:ORU:-(long):+(long):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):152:-(long)Integer.MIN_VALUE |==> +(long)Integer.MIN_VALUE
15596:ORU:-(long):~(long):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):152:-(long)Integer.MIN_VALUE |==> ~(long)Integer.MIN_VALUE
15597:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):152:out.write("" + -(long)Integer.MIN_VALUE) |==> <NO-OP>
15598:LVR:POS:0:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):156:10 |==> 0
15599:LVR:POS:NEG:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):156:10 |==> -10
15600:ROR:<(int,int):!=(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):156:value < 10 |==> value != 10
15601:ROR:<(int,int):<=(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):156:value < 10 |==> value <= 10
15602:ROR:<(int,int):FALSE(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):156:value < 10 |==> false
15603:LVR:POS:0:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):157:1 |==> 0
15604:LVR:POS:NEG:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):157:1 |==> -1
15605:ROR:>(int,int):!=(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):157:size > 1 |==> size != 1
15606:ROR:>(int,int):>=(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):157:size > 1 |==> size >= 1
15607:ROR:>(int,int):FALSE(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):157:size > 1 |==> false
15608:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):158:out.write('0') |==> <NO-OP>
15609:AOR:+(int,int):%(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):160:value + '0' |==> value % '0'
15610:AOR:+(int,int):*(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):160:value + '0' |==> value * '0'
15611:AOR:+(int,int):-(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):160:value + '0' |==> value - '0'
15612:AOR:+(int,int):/(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):160:value + '0' |==> value / '0'
15613:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):160:out.write(value + '0') |==> <NO-OP>
15614:LVR:POS:0:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):161:100 |==> 0
15615:LVR:POS:NEG:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):161:100 |==> -100
15616:ROR:<(int,int):!=(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):161:value < 100 |==> value != 100
15617:ROR:<(int,int):<=(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):161:value < 100 |==> value <= 100
15618:ROR:<(int,int):FALSE(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):161:value < 100 |==> false
15619:LVR:POS:0:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):162:2 |==> 0
15620:LVR:POS:NEG:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):162:2 |==> -2
15621:ROR:>(int,int):!=(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):162:size > 2 |==> size != 2
15622:ROR:>(int,int):>=(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):162:size > 2 |==> size >= 2
15623:ROR:>(int,int):FALSE(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):162:size > 2 |==> false
15624:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):163:out.write('0') |==> <NO-OP>
15625:LVR:POS:0:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):168:1 |==> 0
15626:LVR:POS:NEG:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):168:1 |==> -1
15627:AOR:+(int,int):%(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):168:value + 1 |==> value % 1
15628:AOR:+(int,int):*(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):168:value + 1 |==> value * 1
15629:AOR:+(int,int):-(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):168:value + 1 |==> value - 1
15630:AOR:+(int,int):/(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):168:value + 1 |==> value / 1
15631:LVR:POS:0:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):168:13421772 |==> 0
15632:LVR:POS:NEG:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):168:13421772 |==> -13421772
15633:AOR:*(int,int):%(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):168:(value + 1) * 13421772 |==> (value + 1) % 13421772
15634:AOR:*(int,int):+(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):168:(value + 1) * 13421772 |==> (value + 1) + 13421772
15635:AOR:*(int,int):-(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):168:(value + 1) * 13421772 |==> (value + 1) - 13421772
15636:AOR:*(int,int):/(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):168:(value + 1) * 13421772 |==> (value + 1) / 13421772
15637:LVR:POS:0:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):168:27 |==> 0
15638:LVR:POS:NEG:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):168:27 |==> -27
15639:SOR:>>(int,int):<<(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):168:((value + 1) * 13421772) >> 27 |==> ((value + 1) * 13421772) << 27
15640:SOR:>>(int,int):>>>(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):168:((value + 1) * 13421772) >> 27 |==> ((value + 1) * 13421772) >>> 27
15641:AOR:+(int,int):%(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):169:d + '0' |==> d % '0'
15642:AOR:+(int,int):*(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):169:d + '0' |==> d * '0'
15643:AOR:+(int,int):-(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):169:d + '0' |==> d - '0'
15644:AOR:+(int,int):/(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):169:d + '0' |==> d / '0'
15645:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):169:out.write(d + '0') |==> <NO-OP>
15646:LVR:POS:0:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):171:3 |==> 0
15647:LVR:POS:NEG:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):171:3 |==> -3
15648:SOR:<<(int,int):>>(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):171:d << 3 |==> d >> 3
15649:SOR:<<(int,int):>>>(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):171:d << 3 |==> d >>> 3
15650:AOR:-(int,int):%(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):171:value - (d << 3) |==> value % (d << 3)
15651:AOR:-(int,int):*(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):171:value - (d << 3) |==> value * (d << 3)
15652:AOR:-(int,int):+(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):171:value - (d << 3) |==> value + (d << 3)
15653:AOR:-(int,int):/(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):171:value - (d << 3) |==> value / (d << 3)
15654:LVR:POS:0:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):171:1 |==> 0
15655:LVR:POS:NEG:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):171:1 |==> -1
15656:SOR:<<(int,int):>>(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):171:d << 1 |==> d >> 1
15657:SOR:<<(int,int):>>>(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):171:d << 1 |==> d >>> 1
15658:AOR:-(int,int):%(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):171:value - (d << 3) - (d << 1) |==> (value - (d << 3)) % (d << 1)
15659:AOR:-(int,int):*(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):171:value - (d << 3) - (d << 1) |==> (value - (d << 3)) * (d << 1)
15660:AOR:-(int,int):+(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):171:value - (d << 3) - (d << 1) |==> value - (d << 3) + (d << 1)
15661:AOR:-(int,int):/(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):171:value - (d << 3) - (d << 1) |==> (value - (d << 3)) / (d << 1)
15662:AOR:+(int,int):%(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):171:value - (d << 3) - (d << 1) + '0' |==> (value - (d << 3) - (d << 1)) % '0'
15663:AOR:+(int,int):*(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):171:value - (d << 3) - (d << 1) + '0' |==> (value - (d << 3) - (d << 1)) * '0'
15664:AOR:+(int,int):-(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):171:value - (d << 3) - (d << 1) + '0' |==> value - (d << 3) - (d << 1) - '0'
15665:AOR:+(int,int):/(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):171:value - (d << 3) - (d << 1) + '0' |==> (value - (d << 3) - (d << 1)) / '0'
15666:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):171:out.write(value - (d << 3) - (d << 1) + '0') |==> <NO-OP>
15667:LVR:POS:0:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):174:1000 |==> 0
15668:LVR:POS:NEG:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):174:1000 |==> -1000
15669:ROR:<(int,int):!=(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):174:value < 1000 |==> value != 1000
15670:ROR:<(int,int):<=(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):174:value < 1000 |==> value <= 1000
15671:ROR:<(int,int):FALSE(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):174:value < 1000 |==> false
15672:LVR:POS:0:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):175:3 |==> 0
15673:LVR:POS:NEG:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):175:3 |==> -3
15674:LVR:POS:0:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):176:10000 |==> 0
15675:LVR:POS:NEG:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):176:10000 |==> -10000
15676:ROR:<(int,int):!=(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):176:value < 10000 |==> value != 10000
15677:ROR:<(int,int):<=(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):176:value < 10000 |==> value <= 10000
15678:ROR:<(int,int):FALSE(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):176:value < 10000 |==> false
15679:LVR:POS:0:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):177:4 |==> 0
15680:LVR:POS:NEG:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):177:4 |==> -4
15681:AOR:/(double,double):%(double,double):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):179:Math.log(value) / LOG_10 |==> Math.log(value) % LOG_10
15682:AOR:/(double,double):*(double,double):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):179:Math.log(value) / LOG_10 |==> Math.log(value) * LOG_10
15683:AOR:/(double,double):+(double,double):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):179:Math.log(value) / LOG_10 |==> Math.log(value) + LOG_10
15684:AOR:/(double,double):-(double,double):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):179:Math.log(value) / LOG_10 |==> Math.log(value) - LOG_10
15685:LVR:POS:0:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):179:1 |==> 0
15686:LVR:POS:NEG:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):179:1 |==> -1
15687:AOR:+(int,int):%(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):179:(int)(Math.log(value) / LOG_10) + 1 |==> (int)(Math.log(value) / LOG_10) % 1
15688:AOR:+(int,int):*(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):179:(int)(Math.log(value) / LOG_10) + 1 |==> (int)(Math.log(value) / LOG_10) * 1
15689:AOR:+(int,int):-(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):179:(int)(Math.log(value) / LOG_10) + 1 |==> (int)(Math.log(value) / LOG_10) - 1
15690:AOR:+(int,int):/(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):179:(int)(Math.log(value) / LOG_10) + 1 |==> (int)(Math.log(value) / LOG_10) / 1
15691:ROR:>(int,int):!=(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):181:size > digits |==> size != digits
15692:ROR:>(int,int):>=(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):181:size > digits |==> size >= digits
15693:ROR:>(int,int):FALSE(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):181:size > digits |==> false
15694:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):182:out.write('0') |==> <NO-OP>
15695:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,int,int):184:out.write(Integer.toString(value)) |==> <NO-OP>
15696:ROR:==(long,long):<=(long,long):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):202:intValue == value |==> intValue <= value
15697:ROR:==(long,long):>=(long,long):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):202:intValue == value |==> intValue >= value
15698:ROR:==(long,long):FALSE(long,long):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):202:intValue == value |==> false
15699:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):203:writePaddedInteger(out, intValue, size) |==> <NO-OP>
15700:LVR:POS:0:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):204:19 |==> 0
15701:LVR:POS:NEG:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):204:19 |==> -19
15702:ROR:<=(int,int):<(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):204:size <= 19 |==> size < 19
15703:ROR:<=(int,int):==(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):204:size <= 19 |==> size == 19
15704:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):204:size <= 19 |==> true
15705:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):205:out.write(Long.toString(value)) |==> <NO-OP>
15706:LVR:0:POS:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):207:0 |==> 1
15707:LVR:0:NEG:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):207:0 |==> -1
15708:ROR:<(long,long):!=(long,long):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):207:value < 0 |==> value != 0
15709:ROR:<(long,long):<=(long,long):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):207:value < 0 |==> value <= 0
15710:ROR:<(long,long):FALSE(long,long):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):207:value < 0 |==> false
15711:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):208:out.write('-') |==> <NO-OP>
15712:ROR:!=(long,long):<(long,long):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):209:value != Long.MIN_VALUE |==> value < Long.MIN_VALUE
15713:ROR:!=(long,long):>(long,long):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):209:value != Long.MIN_VALUE |==> value > Long.MIN_VALUE
15714:ROR:!=(long,long):TRUE(long,long):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):209:value != Long.MIN_VALUE |==> true
15715:ORU:-(long):+(long):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):210:-value |==> +value
15716:ORU:-(long):~(long):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):210:-value |==> ~value
15717:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):210:value = -value |==> <NO-OP>
15718:LVR:POS:0:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):212:19 |==> 0
15719:LVR:POS:NEG:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):212:19 |==> -19
15720:ROR:>(int,int):!=(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):212:size > 19 |==> size != 19
15721:ROR:>(int,int):>=(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):212:size > 19 |==> size >= 19
15722:ROR:>(int,int):FALSE(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):212:size > 19 |==> false
15723:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):213:out.write('0') |==> <NO-OP>
15724:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):215:out.write("9223372036854775808") |==> <NO-OP>
15725:AOR:/(double,double):%(double,double):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):219:Math.log(value) / LOG_10 |==> Math.log(value) % LOG_10
15726:AOR:/(double,double):*(double,double):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):219:Math.log(value) / LOG_10 |==> Math.log(value) * LOG_10
15727:AOR:/(double,double):+(double,double):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):219:Math.log(value) / LOG_10 |==> Math.log(value) + LOG_10
15728:AOR:/(double,double):-(double,double):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):219:Math.log(value) / LOG_10 |==> Math.log(value) - LOG_10
15729:LVR:POS:0:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):219:1 |==> 0
15730:LVR:POS:NEG:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):219:1 |==> -1
15731:AOR:+(int,int):%(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):219:(int)(Math.log(value) / LOG_10) + 1 |==> (int)(Math.log(value) / LOG_10) % 1
15732:AOR:+(int,int):*(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):219:(int)(Math.log(value) / LOG_10) + 1 |==> (int)(Math.log(value) / LOG_10) * 1
15733:AOR:+(int,int):-(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):219:(int)(Math.log(value) / LOG_10) + 1 |==> (int)(Math.log(value) / LOG_10) - 1
15734:AOR:+(int,int):/(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):219:(int)(Math.log(value) / LOG_10) + 1 |==> (int)(Math.log(value) / LOG_10) / 1
15735:ROR:>(int,int):!=(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):220:size > digits |==> size != digits
15736:ROR:>(int,int):>=(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):220:size > digits |==> size >= digits
15737:ROR:>(int,int):FALSE(int,int):org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):220:size > digits |==> false
15738:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):221:out.write('0') |==> <NO-OP>
15739:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@writePaddedInteger(java.io.Writer,long,int):223:out.write(Long.toString(value)) |==> <NO-OP>
15740:LVR:0:POS:org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):236:0 |==> 1
15741:LVR:0:NEG:org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):236:0 |==> -1
15742:ROR:<(int,int):!=(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):236:value < 0 |==> value != 0
15743:ROR:<(int,int):<=(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):236:value < 0 |==> value <= 0
15744:ROR:<(int,int):FALSE(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):236:value < 0 |==> false
15745:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):237:buf.append('-') |==> <NO-OP>
15746:ROR:!=(int,int):<(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):238:value != Integer.MIN_VALUE |==> value < Integer.MIN_VALUE
15747:ROR:!=(int,int):>(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):238:value != Integer.MIN_VALUE |==> value > Integer.MIN_VALUE
15748:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):238:value != Integer.MIN_VALUE |==> true
15749:ORU:-(int):+(int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):239:-value |==> +value
15750:ORU:-(int):~(int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):239:-value |==> ~value
15751:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):239:value = -value |==> <NO-OP>
15752:ORU:-(long):+(long):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):241:-(long)Integer.MIN_VALUE |==> +(long)Integer.MIN_VALUE
15753:ORU:-(long):~(long):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):241:-(long)Integer.MIN_VALUE |==> ~(long)Integer.MIN_VALUE
15754:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):241:buf.append("" + -(long)Integer.MIN_VALUE) |==> <NO-OP>
15755:LVR:POS:0:org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):245:10 |==> 0
15756:LVR:POS:NEG:org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):245:10 |==> -10
15757:ROR:<(int,int):!=(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):245:value < 10 |==> value != 10
15758:ROR:<(int,int):<=(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):245:value < 10 |==> value <= 10
15759:ROR:<(int,int):FALSE(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):245:value < 10 |==> false
15760:AOR:+(int,int):%(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):246:value + '0' |==> value % '0'
15761:AOR:+(int,int):*(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):246:value + '0' |==> value * '0'
15762:AOR:+(int,int):-(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):246:value + '0' |==> value - '0'
15763:AOR:+(int,int):/(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):246:value + '0' |==> value / '0'
15764:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):246:buf.append((char)(value + '0')) |==> <NO-OP>
15765:LVR:POS:0:org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):247:100 |==> 0
15766:LVR:POS:NEG:org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):247:100 |==> -100
15767:ROR:<(int,int):!=(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):247:value < 100 |==> value != 100
15768:ROR:<(int,int):<=(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):247:value < 100 |==> value <= 100
15769:ROR:<(int,int):FALSE(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):247:value < 100 |==> false
15770:LVR:POS:0:org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):251:1 |==> 0
15771:LVR:POS:NEG:org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):251:1 |==> -1
15772:AOR:+(int,int):%(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):251:value + 1 |==> value % 1
15773:AOR:+(int,int):*(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):251:value + 1 |==> value * 1
15774:AOR:+(int,int):-(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):251:value + 1 |==> value - 1
15775:AOR:+(int,int):/(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):251:value + 1 |==> value / 1
15776:LVR:POS:0:org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):251:13421772 |==> 0
15777:LVR:POS:NEG:org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):251:13421772 |==> -13421772
15778:AOR:*(int,int):%(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):251:(value + 1) * 13421772 |==> (value + 1) % 13421772
15779:AOR:*(int,int):+(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):251:(value + 1) * 13421772 |==> (value + 1) + 13421772
15780:AOR:*(int,int):-(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):251:(value + 1) * 13421772 |==> (value + 1) - 13421772
15781:AOR:*(int,int):/(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):251:(value + 1) * 13421772 |==> (value + 1) / 13421772
15782:LVR:POS:0:org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):251:27 |==> 0
15783:LVR:POS:NEG:org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):251:27 |==> -27
15784:SOR:>>(int,int):<<(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):251:((value + 1) * 13421772) >> 27 |==> ((value + 1) * 13421772) << 27
15785:SOR:>>(int,int):>>>(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):251:((value + 1) * 13421772) >> 27 |==> ((value + 1) * 13421772) >>> 27
15786:AOR:+(int,int):%(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):252:d + '0' |==> d % '0'
15787:AOR:+(int,int):*(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):252:d + '0' |==> d * '0'
15788:AOR:+(int,int):-(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):252:d + '0' |==> d - '0'
15789:AOR:+(int,int):/(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):252:d + '0' |==> d / '0'
15790:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):252:buf.append((char)(d + '0')) |==> <NO-OP>
15791:LVR:POS:0:org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):254:3 |==> 0
15792:LVR:POS:NEG:org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):254:3 |==> -3
15793:SOR:<<(int,int):>>(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):254:d << 3 |==> d >> 3
15794:SOR:<<(int,int):>>>(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):254:d << 3 |==> d >>> 3
15795:AOR:-(int,int):%(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):254:value - (d << 3) |==> value % (d << 3)
15796:AOR:-(int,int):*(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):254:value - (d << 3) |==> value * (d << 3)
15797:AOR:-(int,int):+(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):254:value - (d << 3) |==> value + (d << 3)
15798:AOR:-(int,int):/(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):254:value - (d << 3) |==> value / (d << 3)
15799:LVR:POS:0:org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):254:1 |==> 0
15800:LVR:POS:NEG:org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):254:1 |==> -1
15801:SOR:<<(int,int):>>(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):254:d << 1 |==> d >> 1
15802:SOR:<<(int,int):>>>(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):254:d << 1 |==> d >>> 1
15803:AOR:-(int,int):%(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):254:value - (d << 3) - (d << 1) |==> (value - (d << 3)) % (d << 1)
15804:AOR:-(int,int):*(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):254:value - (d << 3) - (d << 1) |==> (value - (d << 3)) * (d << 1)
15805:AOR:-(int,int):+(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):254:value - (d << 3) - (d << 1) |==> value - (d << 3) + (d << 1)
15806:AOR:-(int,int):/(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):254:value - (d << 3) - (d << 1) |==> (value - (d << 3)) / (d << 1)
15807:AOR:+(int,int):%(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):254:value - (d << 3) - (d << 1) + '0' |==> (value - (d << 3) - (d << 1)) % '0'
15808:AOR:+(int,int):*(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):254:value - (d << 3) - (d << 1) + '0' |==> (value - (d << 3) - (d << 1)) * '0'
15809:AOR:+(int,int):-(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):254:value - (d << 3) - (d << 1) + '0' |==> value - (d << 3) - (d << 1) - '0'
15810:AOR:+(int,int):/(int,int):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):254:value - (d << 3) - (d << 1) + '0' |==> (value - (d << 3) - (d << 1)) / '0'
15811:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):254:buf.append((char)(value - (d << 3) - (d << 1) + '0')) |==> <NO-OP>
15812:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,int):256:buf.append(Integer.toString(value)) |==> <NO-OP>
15813:ROR:==(long,long):<=(long,long):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,long):270:intValue == value |==> intValue <= value
15814:ROR:==(long,long):>=(long,long):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,long):270:intValue == value |==> intValue >= value
15815:ROR:==(long,long):FALSE(long,long):org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,long):270:intValue == value |==> false
15816:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,long):271:appendUnpaddedInteger(buf, intValue) |==> <NO-OP>
15817:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@appendUnpaddedInteger(java.lang.StringBuffer,long):273:buf.append(Long.toString(value)) |==> <NO-OP>
15818:LVR:0:POS:org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):288:0 |==> 1
15819:LVR:0:NEG:org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):288:0 |==> -1
15820:ROR:<(int,int):!=(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):288:value < 0 |==> value != 0
15821:ROR:<(int,int):<=(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):288:value < 0 |==> value <= 0
15822:ROR:<(int,int):FALSE(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):288:value < 0 |==> false
15823:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):289:out.write('-') |==> <NO-OP>
15824:ROR:!=(int,int):<(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):290:value != Integer.MIN_VALUE |==> value < Integer.MIN_VALUE
15825:ROR:!=(int,int):>(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):290:value != Integer.MIN_VALUE |==> value > Integer.MIN_VALUE
15826:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):290:value != Integer.MIN_VALUE |==> true
15827:ORU:-(int):+(int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):291:-value |==> +value
15828:ORU:-(int):~(int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):291:-value |==> ~value
15829:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):291:value = -value |==> <NO-OP>
15830:ORU:-(long):+(long):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):293:-(long)Integer.MIN_VALUE |==> +(long)Integer.MIN_VALUE
15831:ORU:-(long):~(long):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):293:-(long)Integer.MIN_VALUE |==> ~(long)Integer.MIN_VALUE
15832:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):293:out.write("" + -(long)Integer.MIN_VALUE) |==> <NO-OP>
15833:LVR:POS:0:org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):297:10 |==> 0
15834:LVR:POS:NEG:org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):297:10 |==> -10
15835:ROR:<(int,int):!=(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):297:value < 10 |==> value != 10
15836:ROR:<(int,int):<=(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):297:value < 10 |==> value <= 10
15837:ROR:<(int,int):FALSE(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):297:value < 10 |==> false
15838:AOR:+(int,int):%(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):298:value + '0' |==> value % '0'
15839:AOR:+(int,int):*(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):298:value + '0' |==> value * '0'
15840:AOR:+(int,int):-(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):298:value + '0' |==> value - '0'
15841:AOR:+(int,int):/(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):298:value + '0' |==> value / '0'
15842:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):298:out.write(value + '0') |==> <NO-OP>
15843:LVR:POS:0:org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):299:100 |==> 0
15844:LVR:POS:NEG:org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):299:100 |==> -100
15845:ROR:<(int,int):!=(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):299:value < 100 |==> value != 100
15846:ROR:<(int,int):<=(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):299:value < 100 |==> value <= 100
15847:ROR:<(int,int):FALSE(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):299:value < 100 |==> false
15848:LVR:POS:0:org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):303:1 |==> 0
15849:LVR:POS:NEG:org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):303:1 |==> -1
15850:AOR:+(int,int):%(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):303:value + 1 |==> value % 1
15851:AOR:+(int,int):*(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):303:value + 1 |==> value * 1
15852:AOR:+(int,int):-(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):303:value + 1 |==> value - 1
15853:AOR:+(int,int):/(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):303:value + 1 |==> value / 1
15854:LVR:POS:0:org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):303:13421772 |==> 0
15855:LVR:POS:NEG:org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):303:13421772 |==> -13421772
15856:AOR:*(int,int):%(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):303:(value + 1) * 13421772 |==> (value + 1) % 13421772
15857:AOR:*(int,int):+(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):303:(value + 1) * 13421772 |==> (value + 1) + 13421772
15858:AOR:*(int,int):-(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):303:(value + 1) * 13421772 |==> (value + 1) - 13421772
15859:AOR:*(int,int):/(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):303:(value + 1) * 13421772 |==> (value + 1) / 13421772
15860:LVR:POS:0:org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):303:27 |==> 0
15861:LVR:POS:NEG:org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):303:27 |==> -27
15862:SOR:>>(int,int):<<(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):303:((value + 1) * 13421772) >> 27 |==> ((value + 1) * 13421772) << 27
15863:SOR:>>(int,int):>>>(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):303:((value + 1) * 13421772) >> 27 |==> ((value + 1) * 13421772) >>> 27
15864:AOR:+(int,int):%(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):304:d + '0' |==> d % '0'
15865:AOR:+(int,int):*(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):304:d + '0' |==> d * '0'
15866:AOR:+(int,int):-(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):304:d + '0' |==> d - '0'
15867:AOR:+(int,int):/(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):304:d + '0' |==> d / '0'
15868:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):304:out.write(d + '0') |==> <NO-OP>
15869:LVR:POS:0:org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):306:3 |==> 0
15870:LVR:POS:NEG:org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):306:3 |==> -3
15871:SOR:<<(int,int):>>(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):306:d << 3 |==> d >> 3
15872:SOR:<<(int,int):>>>(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):306:d << 3 |==> d >>> 3
15873:AOR:-(int,int):%(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):306:value - (d << 3) |==> value % (d << 3)
15874:AOR:-(int,int):*(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):306:value - (d << 3) |==> value * (d << 3)
15875:AOR:-(int,int):+(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):306:value - (d << 3) |==> value + (d << 3)
15876:AOR:-(int,int):/(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):306:value - (d << 3) |==> value / (d << 3)
15877:LVR:POS:0:org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):306:1 |==> 0
15878:LVR:POS:NEG:org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):306:1 |==> -1
15879:SOR:<<(int,int):>>(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):306:d << 1 |==> d >> 1
15880:SOR:<<(int,int):>>>(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):306:d << 1 |==> d >>> 1
15881:AOR:-(int,int):%(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):306:value - (d << 3) - (d << 1) |==> (value - (d << 3)) % (d << 1)
15882:AOR:-(int,int):*(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):306:value - (d << 3) - (d << 1) |==> (value - (d << 3)) * (d << 1)
15883:AOR:-(int,int):+(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):306:value - (d << 3) - (d << 1) |==> value - (d << 3) + (d << 1)
15884:AOR:-(int,int):/(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):306:value - (d << 3) - (d << 1) |==> (value - (d << 3)) / (d << 1)
15885:AOR:+(int,int):%(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):306:value - (d << 3) - (d << 1) + '0' |==> (value - (d << 3) - (d << 1)) % '0'
15886:AOR:+(int,int):*(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):306:value - (d << 3) - (d << 1) + '0' |==> (value - (d << 3) - (d << 1)) * '0'
15887:AOR:+(int,int):-(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):306:value - (d << 3) - (d << 1) + '0' |==> value - (d << 3) - (d << 1) - '0'
15888:AOR:+(int,int):/(int,int):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):306:value - (d << 3) - (d << 1) + '0' |==> (value - (d << 3) - (d << 1)) / '0'
15889:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):306:out.write(value - (d << 3) - (d << 1) + '0') |==> <NO-OP>
15890:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,int):308:out.write(Integer.toString(value)) |==> <NO-OP>
15891:ROR:==(long,long):<=(long,long):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,long):324:intValue == value |==> intValue <= value
15892:ROR:==(long,long):>=(long,long):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,long):324:intValue == value |==> intValue >= value
15893:ROR:==(long,long):FALSE(long,long):org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,long):324:intValue == value |==> false
15894:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,long):325:writeUnpaddedInteger(out, intValue) |==> <NO-OP>
15895:STD:<CALL>:<NO-OP>:org.joda.time.format.FormatUtils@writeUnpaddedInteger(java.io.Writer,long):327:out.write(Long.toString(value)) |==> <NO-OP>
15896:LVR:0:POS:org.joda.time.format.FormatUtils@calculateDigitCount(long):336:0 |==> 1
15897:LVR:0:NEG:org.joda.time.format.FormatUtils@calculateDigitCount(long):336:0 |==> -1
15898:ROR:<(long,long):!=(long,long):org.joda.time.format.FormatUtils@calculateDigitCount(long):336:value < 0 |==> value != 0
15899:ROR:<(long,long):<=(long,long):org.joda.time.format.FormatUtils@calculateDigitCount(long):336:value < 0 |==> value <= 0
15900:ROR:<(long,long):FALSE(long,long):org.joda.time.format.FormatUtils@calculateDigitCount(long):336:value < 0 |==> false
15901:ROR:!=(long,long):<(long,long):org.joda.time.format.FormatUtils@calculateDigitCount(long):337:value != Long.MIN_VALUE |==> value < Long.MIN_VALUE
15902:ROR:!=(long,long):>(long,long):org.joda.time.format.FormatUtils@calculateDigitCount(long):337:value != Long.MIN_VALUE |==> value > Long.MIN_VALUE
15903:ROR:!=(long,long):TRUE(long,long):org.joda.time.format.FormatUtils@calculateDigitCount(long):337:value != Long.MIN_VALUE |==> true
15904:ORU:-(long):+(long):org.joda.time.format.FormatUtils@calculateDigitCount(long):338:-value |==> +value
15905:ORU:-(long):~(long):org.joda.time.format.FormatUtils@calculateDigitCount(long):338:-value |==> ~value
15906:LVR:POS:0:org.joda.time.format.FormatUtils@calculateDigitCount(long):338:1 |==> 0
15907:LVR:POS:NEG:org.joda.time.format.FormatUtils@calculateDigitCount(long):338:1 |==> -1
15908:AOR:+(int,int):%(int,int):org.joda.time.format.FormatUtils@calculateDigitCount(long):338:calculateDigitCount(-value) + 1 |==> calculateDigitCount(-value) % 1
15909:AOR:+(int,int):*(int,int):org.joda.time.format.FormatUtils@calculateDigitCount(long):338:calculateDigitCount(-value) + 1 |==> calculateDigitCount(-value) * 1
15910:AOR:+(int,int):-(int,int):org.joda.time.format.FormatUtils@calculateDigitCount(long):338:calculateDigitCount(-value) + 1 |==> calculateDigitCount(-value) - 1
15911:AOR:+(int,int):/(int,int):org.joda.time.format.FormatUtils@calculateDigitCount(long):338:calculateDigitCount(-value) + 1 |==> calculateDigitCount(-value) / 1
15912:LVR:POS:0:org.joda.time.format.FormatUtils@calculateDigitCount(long):340:20 |==> 0
15913:LVR:POS:NEG:org.joda.time.format.FormatUtils@calculateDigitCount(long):340:20 |==> -20
15914:LVR:POS:0:org.joda.time.format.FormatUtils@calculateDigitCount(long):344:10 |==> 0
15915:LVR:POS:NEG:org.joda.time.format.FormatUtils@calculateDigitCount(long):344:10 |==> -10
15916:ROR:<(long,long):!=(long,long):org.joda.time.format.FormatUtils@calculateDigitCount(long):344:value < 10 |==> value != 10
15917:ROR:<(long,long):<=(long,long):org.joda.time.format.FormatUtils@calculateDigitCount(long):344:value < 10 |==> value <= 10
15918:ROR:<(long,long):FALSE(long,long):org.joda.time.format.FormatUtils@calculateDigitCount(long):344:value < 10 |==> false
15919:LVR:POS:0:org.joda.time.format.FormatUtils@calculateDigitCount(long):344:1 |==> 0
15920:LVR:POS:NEG:org.joda.time.format.FormatUtils@calculateDigitCount(long):344:1 |==> -1
15921:LVR:POS:0:org.joda.time.format.FormatUtils@calculateDigitCount(long):345:100 |==> 0
15922:LVR:POS:NEG:org.joda.time.format.FormatUtils@calculateDigitCount(long):345:100 |==> -100
15923:ROR:<(long,long):!=(long,long):org.joda.time.format.FormatUtils@calculateDigitCount(long):345:value < 100 |==> value != 100
15924:ROR:<(long,long):<=(long,long):org.joda.time.format.FormatUtils@calculateDigitCount(long):345:value < 100 |==> value <= 100
15925:ROR:<(long,long):FALSE(long,long):org.joda.time.format.FormatUtils@calculateDigitCount(long):345:value < 100 |==> false
15926:LVR:POS:0:org.joda.time.format.FormatUtils@calculateDigitCount(long):345:2 |==> 0
15927:LVR:POS:NEG:org.joda.time.format.FormatUtils@calculateDigitCount(long):345:2 |==> -2
15928:LVR:POS:0:org.joda.time.format.FormatUtils@calculateDigitCount(long):346:1000 |==> 0
15929:LVR:POS:NEG:org.joda.time.format.FormatUtils@calculateDigitCount(long):346:1000 |==> -1000
15930:ROR:<(long,long):!=(long,long):org.joda.time.format.FormatUtils@calculateDigitCount(long):346:value < 1000 |==> value != 1000
15931:ROR:<(long,long):<=(long,long):org.joda.time.format.FormatUtils@calculateDigitCount(long):346:value < 1000 |==> value <= 1000
15932:ROR:<(long,long):FALSE(long,long):org.joda.time.format.FormatUtils@calculateDigitCount(long):346:value < 1000 |==> false
15933:LVR:POS:0:org.joda.time.format.FormatUtils@calculateDigitCount(long):346:3 |==> 0
15934:LVR:POS:NEG:org.joda.time.format.FormatUtils@calculateDigitCount(long):346:3 |==> -3
15935:LVR:POS:0:org.joda.time.format.FormatUtils@calculateDigitCount(long):347:10000 |==> 0
15936:LVR:POS:NEG:org.joda.time.format.FormatUtils@calculateDigitCount(long):347:10000 |==> -10000
15937:ROR:<(long,long):!=(long,long):org.joda.time.format.FormatUtils@calculateDigitCount(long):347:value < 10000 |==> value != 10000
15938:ROR:<(long,long):<=(long,long):org.joda.time.format.FormatUtils@calculateDigitCount(long):347:value < 10000 |==> value <= 10000
15939:ROR:<(long,long):FALSE(long,long):org.joda.time.format.FormatUtils@calculateDigitCount(long):347:value < 10000 |==> false
15940:LVR:POS:0:org.joda.time.format.FormatUtils@calculateDigitCount(long):347:4 |==> 0
15941:LVR:POS:NEG:org.joda.time.format.FormatUtils@calculateDigitCount(long):347:4 |==> -4
15942:AOR:/(double,double):%(double,double):org.joda.time.format.FormatUtils@calculateDigitCount(long):348:Math.log(value) / LOG_10 |==> Math.log(value) % LOG_10
15943:AOR:/(double,double):*(double,double):org.joda.time.format.FormatUtils@calculateDigitCount(long):348:Math.log(value) / LOG_10 |==> Math.log(value) * LOG_10
15944:AOR:/(double,double):+(double,double):org.joda.time.format.FormatUtils@calculateDigitCount(long):348:Math.log(value) / LOG_10 |==> Math.log(value) + LOG_10
15945:AOR:/(double,double):-(double,double):org.joda.time.format.FormatUtils@calculateDigitCount(long):348:Math.log(value) / LOG_10 |==> Math.log(value) - LOG_10
15946:LVR:POS:0:org.joda.time.format.FormatUtils@calculateDigitCount(long):348:1 |==> 0
15947:LVR:POS:NEG:org.joda.time.format.FormatUtils@calculateDigitCount(long):348:1 |==> -1
15948:AOR:+(int,int):%(int,int):org.joda.time.format.FormatUtils@calculateDigitCount(long):348:(int)(Math.log(value) / LOG_10) + 1 |==> (int)(Math.log(value) / LOG_10) % 1
15949:AOR:+(int,int):*(int,int):org.joda.time.format.FormatUtils@calculateDigitCount(long):348:(int)(Math.log(value) / LOG_10) + 1 |==> (int)(Math.log(value) / LOG_10) * 1
15950:AOR:+(int,int):-(int,int):org.joda.time.format.FormatUtils@calculateDigitCount(long):348:(int)(Math.log(value) / LOG_10) + 1 |==> (int)(Math.log(value) / LOG_10) - 1
15951:AOR:+(int,int):/(int,int):org.joda.time.format.FormatUtils@calculateDigitCount(long):348:(int)(Math.log(value) / LOG_10) + 1 |==> (int)(Math.log(value) / LOG_10) / 1
15952:AOR:-(int,int):%(int,int):org.joda.time.format.FormatUtils@parseTwoDigits(java.lang.String,int):352:text.charAt(position) - '0' |==> text.charAt(position) % '0'
15953:AOR:-(int,int):*(int,int):org.joda.time.format.FormatUtils@parseTwoDigits(java.lang.String,int):352:text.charAt(position) - '0' |==> text.charAt(position) * '0'
15954:AOR:-(int,int):+(int,int):org.joda.time.format.FormatUtils@parseTwoDigits(java.lang.String,int):352:text.charAt(position) - '0' |==> text.charAt(position) + '0'
15955:AOR:-(int,int):/(int,int):org.joda.time.format.FormatUtils@parseTwoDigits(java.lang.String,int):352:text.charAt(position) - '0' |==> text.charAt(position) / '0'
15956:LVR:POS:0:org.joda.time.format.FormatUtils@parseTwoDigits(java.lang.String,int):353:3 |==> 0
15957:LVR:POS:NEG:org.joda.time.format.FormatUtils@parseTwoDigits(java.lang.String,int):353:3 |==> -3
15958:SOR:<<(int,int):>>(int,int):org.joda.time.format.FormatUtils@parseTwoDigits(java.lang.String,int):353:value << 3 |==> value >> 3
15959:SOR:<<(int,int):>>>(int,int):org.joda.time.format.FormatUtils@parseTwoDigits(java.lang.String,int):353:value << 3 |==> value >>> 3
15960:LVR:POS:0:org.joda.time.format.FormatUtils@parseTwoDigits(java.lang.String,int):353:1 |==> 0
15961:LVR:POS:NEG:org.joda.time.format.FormatUtils@parseTwoDigits(java.lang.String,int):353:1 |==> -1
15962:SOR:<<(int,int):>>(int,int):org.joda.time.format.FormatUtils@parseTwoDigits(java.lang.String,int):353:value << 1 |==> value >> 1
15963:SOR:<<(int,int):>>>(int,int):org.joda.time.format.FormatUtils@parseTwoDigits(java.lang.String,int):353:value << 1 |==> value >>> 1
15964:AOR:+(int,int):%(int,int):org.joda.time.format.FormatUtils@parseTwoDigits(java.lang.String,int):353:(value << 3) + (value << 1) |==> (value << 3) % (value << 1)
15965:AOR:+(int,int):*(int,int):org.joda.time.format.FormatUtils@parseTwoDigits(java.lang.String,int):353:(value << 3) + (value << 1) |==> (value << 3) * (value << 1)
15966:AOR:+(int,int):-(int,int):org.joda.time.format.FormatUtils@parseTwoDigits(java.lang.String,int):353:(value << 3) + (value << 1) |==> (value << 3) - (value << 1)
15967:AOR:+(int,int):/(int,int):org.joda.time.format.FormatUtils@parseTwoDigits(java.lang.String,int):353:(value << 3) + (value << 1) |==> (value << 3) / (value << 1)
15968:LVR:POS:0:org.joda.time.format.FormatUtils@parseTwoDigits(java.lang.String,int):353:1 |==> 0
15969:LVR:POS:NEG:org.joda.time.format.FormatUtils@parseTwoDigits(java.lang.String,int):353:1 |==> -1
15970:AOR:+(int,int):%(int,int):org.joda.time.format.FormatUtils@parseTwoDigits(java.lang.String,int):353:position + 1 |==> position % 1
15971:AOR:+(int,int):*(int,int):org.joda.time.format.FormatUtils@parseTwoDigits(java.lang.String,int):353:position + 1 |==> position * 1
15972:AOR:+(int,int):-(int,int):org.joda.time.format.FormatUtils@parseTwoDigits(java.lang.String,int):353:position + 1 |==> position - 1
15973:AOR:+(int,int):/(int,int):org.joda.time.format.FormatUtils@parseTwoDigits(java.lang.String,int):353:position + 1 |==> position / 1
15974:AOR:+(int,int):%(int,int):org.joda.time.format.FormatUtils@parseTwoDigits(java.lang.String,int):353:((value << 3) + (value << 1)) + text.charAt(position + 1) |==> ((value << 3) + (value << 1)) % text.charAt(position + 1)
15975:AOR:+(int,int):*(int,int):org.joda.time.format.FormatUtils@parseTwoDigits(java.lang.String,int):353:((value << 3) + (value << 1)) + text.charAt(position + 1) |==> ((value << 3) + (value << 1)) * text.charAt(position + 1)
15976:AOR:+(int,int):-(int,int):org.joda.time.format.FormatUtils@parseTwoDigits(java.lang.String,int):353:((value << 3) + (value << 1)) + text.charAt(position + 1) |==> ((value << 3) + (value << 1)) - text.charAt(position + 1)
15977:AOR:+(int,int):/(int,int):org.joda.time.format.FormatUtils@parseTwoDigits(java.lang.String,int):353:((value << 3) + (value << 1)) + text.charAt(position + 1) |==> ((value << 3) + (value << 1)) / text.charAt(position + 1)
15978:AOR:-(int,int):%(int,int):org.joda.time.format.FormatUtils@parseTwoDigits(java.lang.String,int):353:((value << 3) + (value << 1)) + text.charAt(position + 1) - '0' |==> (((value << 3) + (value << 1)) + text.charAt(position + 1)) % '0'
15979:AOR:-(int,int):*(int,int):org.joda.time.format.FormatUtils@parseTwoDigits(java.lang.String,int):353:((value << 3) + (value << 1)) + text.charAt(position + 1) - '0' |==> (((value << 3) + (value << 1)) + text.charAt(position + 1)) * '0'
15980:AOR:-(int,int):+(int,int):org.joda.time.format.FormatUtils@parseTwoDigits(java.lang.String,int):353:((value << 3) + (value << 1)) + text.charAt(position + 1) - '0' |==> ((value << 3) + (value << 1)) + text.charAt(position + 1) + '0'
15981:AOR:-(int,int):/(int,int):org.joda.time.format.FormatUtils@parseTwoDigits(java.lang.String,int):353:((value << 3) + (value << 1)) + text.charAt(position + 1) - '0' |==> (((value << 3) + (value << 1)) + text.charAt(position + 1)) / '0'
15982:LVR:POS:0:org.joda.time.format.FormatUtils@createErrorMessage(java.lang.String,int):357:32 |==> 0
15983:LVR:POS:NEG:org.joda.time.format.FormatUtils@createErrorMessage(java.lang.String,int):357:32 |==> -32
15984:AOR:+(int,int):%(int,int):org.joda.time.format.FormatUtils@createErrorMessage(java.lang.String,int):357:errorPos + 32 |==> errorPos % 32
15985:AOR:+(int,int):*(int,int):org.joda.time.format.FormatUtils@createErrorMessage(java.lang.String,int):357:errorPos + 32 |==> errorPos * 32
15986:AOR:+(int,int):-(int,int):org.joda.time.format.FormatUtils@createErrorMessage(java.lang.String,int):357:errorPos + 32 |==> errorPos - 32
15987:AOR:+(int,int):/(int,int):org.joda.time.format.FormatUtils@createErrorMessage(java.lang.String,int):357:errorPos + 32 |==> errorPos / 32
15988:LVR:POS:0:org.joda.time.format.FormatUtils@createErrorMessage(java.lang.String,int):359:3 |==> 0
15989:LVR:POS:NEG:org.joda.time.format.FormatUtils@createErrorMessage(java.lang.String,int):359:3 |==> -3
15990:AOR:+(int,int):%(int,int):org.joda.time.format.FormatUtils@createErrorMessage(java.lang.String,int):359:sampleLen + 3 |==> sampleLen % 3
15991:AOR:+(int,int):*(int,int):org.joda.time.format.FormatUtils@createErrorMessage(java.lang.String,int):359:sampleLen + 3 |==> sampleLen * 3
15992:AOR:+(int,int):-(int,int):org.joda.time.format.FormatUtils@createErrorMessage(java.lang.String,int):359:sampleLen + 3 |==> sampleLen - 3
15993:AOR:+(int,int):/(int,int):org.joda.time.format.FormatUtils@createErrorMessage(java.lang.String,int):359:sampleLen + 3 |==> sampleLen / 3
15994:ROR:<=(int,int):<(int,int):org.joda.time.format.FormatUtils@createErrorMessage(java.lang.String,int):359:text.length() <= sampleLen + 3 |==> text.length() < sampleLen + 3
15995:ROR:<=(int,int):==(int,int):org.joda.time.format.FormatUtils@createErrorMessage(java.lang.String,int):359:text.length() <= sampleLen + 3 |==> text.length() == sampleLen + 3
15996:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.FormatUtils@createErrorMessage(java.lang.String,int):359:text.length() <= sampleLen + 3 |==> true
15997:LVR:0:POS:org.joda.time.format.FormatUtils@createErrorMessage(java.lang.String,int):362:0 |==> 1
15998:LVR:0:NEG:org.joda.time.format.FormatUtils@createErrorMessage(java.lang.String,int):362:0 |==> -1
15999:LVR:0:POS:org.joda.time.format.FormatUtils@createErrorMessage(java.lang.String,int):365:0 |==> 1
16000:LVR:0:NEG:org.joda.time.format.FormatUtils@createErrorMessage(java.lang.String,int):365:0 |==> -1
16001:ROR:<=(int,int):<(int,int):org.joda.time.format.FormatUtils@createErrorMessage(java.lang.String,int):365:errorPos <= 0 |==> errorPos < 0
16002:ROR:<=(int,int):==(int,int):org.joda.time.format.FormatUtils@createErrorMessage(java.lang.String,int):365:errorPos <= 0 |==> errorPos == 0
16003:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.FormatUtils@createErrorMessage(java.lang.String,int):365:errorPos <= 0 |==> true
16004:ROR:>=(int,int):==(int,int):org.joda.time.format.FormatUtils@createErrorMessage(java.lang.String,int):369:errorPos >= text.length() |==> errorPos == text.length()
16005:ROR:>=(int,int):>(int,int):org.joda.time.format.FormatUtils@createErrorMessage(java.lang.String,int):369:errorPos >= text.length() |==> errorPos > text.length()
16006:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.FormatUtils@createErrorMessage(java.lang.String,int):369:errorPos >= text.length() |==> true
16007:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):156:fields == null |==> false
16008:LVR:0:POS:org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):156:0 |==> 1
16009:LVR:0:NEG:org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):156:0 |==> -1
16010:ROR:==(int,int):<=(int,int):org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):156:fields.size() == 0 |==> fields.size() <= 0
16011:ROR:==(int,int):>=(int,int):org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):156:fields.size() == 0 |==> fields.size() >= 0
16012:ROR:==(int,int):FALSE(int,int):org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):156:fields.size() == 0 |==> false
16013:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):156:fields == null || fields.size() == 0 |==> fields == null != (fields.size() == 0)
16014:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):156:fields == null || fields.size() == 0 |==> fields == null
16015:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):156:fields == null || fields.size() == 0 |==> fields.size() == 0
16016:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):156:fields == null || fields.size() == 0 |==> true
16017:LVR:FALSE:TRUE:org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):161:false |==> true
16018:COR:workingFields.contains(DateTimeFieldType.monthOfYear()):TRUE:org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):164:workingFields.contains(DateTimeFieldType.monthOfYear()) |==> false
16019:COR:workingFields.contains(DateTimeFieldType.monthOfYear()):FALSE:org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):164:workingFields.contains(DateTimeFieldType.monthOfYear()) |==> true
16020:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):165:reducedPrec = dateByMonth(bld, workingFields, extended, strictISO) |==> <NO-OP>
16021:COR:workingFields.contains(DateTimeFieldType.dayOfYear()):TRUE:org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):166:workingFields.contains(DateTimeFieldType.dayOfYear()) |==> false
16022:COR:workingFields.contains(DateTimeFieldType.dayOfYear()):FALSE:org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):166:workingFields.contains(DateTimeFieldType.dayOfYear()) |==> true
16023:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):167:reducedPrec = dateByOrdinal(bld, workingFields, extended, strictISO) |==> <NO-OP>
16024:COR:workingFields.contains(DateTimeFieldType.weekOfWeekyear()):TRUE:org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):168:workingFields.contains(DateTimeFieldType.weekOfWeekyear()) |==> false
16025:COR:workingFields.contains(DateTimeFieldType.weekOfWeekyear()):FALSE:org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):168:workingFields.contains(DateTimeFieldType.weekOfWeekyear()) |==> true
16026:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):169:reducedPrec = dateByWeek(bld, workingFields, extended, strictISO) |==> <NO-OP>
16027:COR:workingFields.contains(DateTimeFieldType.dayOfMonth()):TRUE:org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):170:workingFields.contains(DateTimeFieldType.dayOfMonth()) |==> false
16028:COR:workingFields.contains(DateTimeFieldType.dayOfMonth()):FALSE:org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):170:workingFields.contains(DateTimeFieldType.dayOfMonth()) |==> true
16029:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):171:reducedPrec = dateByMonth(bld, workingFields, extended, strictISO) |==> <NO-OP>
16030:COR:workingFields.contains(DateTimeFieldType.dayOfWeek()):TRUE:org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):172:workingFields.contains(DateTimeFieldType.dayOfWeek()) |==> false
16031:COR:workingFields.contains(DateTimeFieldType.dayOfWeek()):FALSE:org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):172:workingFields.contains(DateTimeFieldType.dayOfWeek()) |==> true
16032:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):173:reducedPrec = dateByWeek(bld, workingFields, extended, strictISO) |==> <NO-OP>
16033:COR:workingFields.remove(DateTimeFieldType.year()):TRUE:org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):174:workingFields.remove(DateTimeFieldType.year()) |==> false
16034:COR:workingFields.remove(DateTimeFieldType.year()):FALSE:org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):174:workingFields.remove(DateTimeFieldType.year()) |==> true
16035:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):175:bld.append(Constants.ye) |==> <NO-OP>
16036:LVR:TRUE:FALSE:org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):176:true |==> false
16037:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):176:reducedPrec = true |==> <NO-OP>
16038:COR:workingFields.remove(DateTimeFieldType.weekyear()):TRUE:org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):177:workingFields.remove(DateTimeFieldType.weekyear()) |==> false
16039:COR:workingFields.remove(DateTimeFieldType.weekyear()):FALSE:org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):177:workingFields.remove(DateTimeFieldType.weekyear()) |==> true
16040:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):178:bld.append(Constants.we) |==> <NO-OP>
16041:LVR:TRUE:FALSE:org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):179:true |==> false
16042:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):179:reducedPrec = true |==> <NO-OP>
16043:ROR:<(int,int):!=(int,int):org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):181:workingFields.size() < inputSize |==> workingFields.size() != inputSize
16044:ROR:<(int,int):<=(int,int):org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):181:workingFields.size() < inputSize |==> workingFields.size() <= inputSize
16045:ROR:<(int,int):FALSE(int,int):org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):181:workingFields.size() < inputSize |==> false
16046:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):184:time(bld, workingFields, extended, strictISO, reducedPrec, datePresent) |==> <NO-OP>
16047:LVR:FALSE:TRUE:org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):187:false |==> true
16048:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):187:bld.canBuildFormatter() == false |==> false
16049:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):187:bld.canBuildFormatter() == false |==> bld.canBuildFormatter()
16050:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):187:bld.canBuildFormatter() == false |==> false
16051:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@forFields(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):194:fields.retainAll(workingFields) |==> <NO-OP>
16052:LVR:FALSE:TRUE:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):219:false |==> true
16053:COR:fields.remove(DateTimeFieldType.year()):TRUE:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):220:fields.remove(DateTimeFieldType.year()) |==> false
16054:COR:fields.remove(DateTimeFieldType.year()):FALSE:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):220:fields.remove(DateTimeFieldType.year()) |==> true
16055:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):221:bld.append(Constants.ye) |==> <NO-OP>
16056:COR:fields.remove(DateTimeFieldType.monthOfYear()):TRUE:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):222:fields.remove(DateTimeFieldType.monthOfYear()) |==> false
16057:COR:fields.remove(DateTimeFieldType.monthOfYear()):FALSE:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):222:fields.remove(DateTimeFieldType.monthOfYear()) |==> true
16058:COR:fields.remove(DateTimeFieldType.dayOfMonth()):TRUE:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):223:fields.remove(DateTimeFieldType.dayOfMonth()) |==> false
16059:COR:fields.remove(DateTimeFieldType.dayOfMonth()):FALSE:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):223:fields.remove(DateTimeFieldType.dayOfMonth()) |==> true
16060:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):225:appendSeparator(bld, extended) |==> <NO-OP>
16061:LVR:POS:0:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):226:2 |==> 0
16062:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):226:2 |==> -2
16063:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):226:bld.appendMonthOfYear(2) |==> <NO-OP>
16064:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):227:appendSeparator(bld, extended) |==> <NO-OP>
16065:LVR:POS:0:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):228:2 |==> 0
16066:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):228:2 |==> -2
16067:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):228:bld.appendDayOfMonth(2) |==> <NO-OP>
16068:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):231:bld.appendLiteral('-') |==> <NO-OP>
16069:LVR:POS:0:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):232:2 |==> 0
16070:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):232:2 |==> -2
16071:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):232:bld.appendMonthOfYear(2) |==> <NO-OP>
16072:LVR:TRUE:FALSE:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):233:true |==> false
16073:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):233:reducedPrec = true |==> <NO-OP>
16074:COR:fields.remove(DateTimeFieldType.dayOfMonth()):TRUE:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):236:fields.remove(DateTimeFieldType.dayOfMonth()) |==> false
16075:COR:fields.remove(DateTimeFieldType.dayOfMonth()):FALSE:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):236:fields.remove(DateTimeFieldType.dayOfMonth()) |==> true
16076:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):238:checkNotStrictISO(fields, strictISO) |==> <NO-OP>
16077:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):239:bld.appendLiteral('-') |==> <NO-OP>
16078:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):240:bld.appendLiteral('-') |==> <NO-OP>
16079:LVR:POS:0:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):241:2 |==> 0
16080:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):241:2 |==> -2
16081:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):241:bld.appendDayOfMonth(2) |==> <NO-OP>
16082:LVR:TRUE:FALSE:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):244:true |==> false
16083:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):244:reducedPrec = true |==> <NO-OP>
16084:COR:fields.remove(DateTimeFieldType.monthOfYear()):TRUE:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):248:fields.remove(DateTimeFieldType.monthOfYear()) |==> false
16085:COR:fields.remove(DateTimeFieldType.monthOfYear()):FALSE:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):248:fields.remove(DateTimeFieldType.monthOfYear()) |==> true
16086:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):249:bld.appendLiteral('-') |==> <NO-OP>
16087:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):250:bld.appendLiteral('-') |==> <NO-OP>
16088:LVR:POS:0:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):251:2 |==> 0
16089:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):251:2 |==> -2
16090:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):251:bld.appendMonthOfYear(2) |==> <NO-OP>
16091:COR:fields.remove(DateTimeFieldType.dayOfMonth()):TRUE:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):252:fields.remove(DateTimeFieldType.dayOfMonth()) |==> false
16092:COR:fields.remove(DateTimeFieldType.dayOfMonth()):FALSE:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):252:fields.remove(DateTimeFieldType.dayOfMonth()) |==> true
16093:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):254:appendSeparator(bld, extended) |==> <NO-OP>
16094:LVR:POS:0:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):255:2 |==> 0
16095:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):255:2 |==> -2
16096:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):255:bld.appendDayOfMonth(2) |==> <NO-OP>
16097:LVR:TRUE:FALSE:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):258:true |==> false
16098:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):258:reducedPrec = true |==> <NO-OP>
16099:COR:fields.remove(DateTimeFieldType.dayOfMonth()):TRUE:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):260:fields.remove(DateTimeFieldType.dayOfMonth()) |==> false
16100:COR:fields.remove(DateTimeFieldType.dayOfMonth()):FALSE:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):260:fields.remove(DateTimeFieldType.dayOfMonth()) |==> true
16101:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):262:bld.appendLiteral('-') |==> <NO-OP>
16102:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):263:bld.appendLiteral('-') |==> <NO-OP>
16103:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):264:bld.appendLiteral('-') |==> <NO-OP>
16104:LVR:POS:0:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):265:2 |==> 0
16105:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):265:2 |==> -2
16106:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):265:bld.appendDayOfMonth(2) |==> <NO-OP>
16107:LVR:FALSE:TRUE:org.joda.time.format.ISODateTimeFormat@dateByOrdinal(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):287:false |==> true
16108:COR:fields.remove(DateTimeFieldType.year()):TRUE:org.joda.time.format.ISODateTimeFormat@dateByOrdinal(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):288:fields.remove(DateTimeFieldType.year()) |==> false
16109:COR:fields.remove(DateTimeFieldType.year()):FALSE:org.joda.time.format.ISODateTimeFormat@dateByOrdinal(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):288:fields.remove(DateTimeFieldType.year()) |==> true
16110:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByOrdinal(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):289:bld.append(Constants.ye) |==> <NO-OP>
16111:COR:fields.remove(DateTimeFieldType.dayOfYear()):TRUE:org.joda.time.format.ISODateTimeFormat@dateByOrdinal(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):290:fields.remove(DateTimeFieldType.dayOfYear()) |==> false
16112:COR:fields.remove(DateTimeFieldType.dayOfYear()):FALSE:org.joda.time.format.ISODateTimeFormat@dateByOrdinal(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):290:fields.remove(DateTimeFieldType.dayOfYear()) |==> true
16113:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByOrdinal(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):292:appendSeparator(bld, extended) |==> <NO-OP>
16114:LVR:POS:0:org.joda.time.format.ISODateTimeFormat@dateByOrdinal(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):293:3 |==> 0
16115:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat@dateByOrdinal(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):293:3 |==> -3
16116:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByOrdinal(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):293:bld.appendDayOfYear(3) |==> <NO-OP>
16117:LVR:TRUE:FALSE:org.joda.time.format.ISODateTimeFormat@dateByOrdinal(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):296:true |==> false
16118:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByOrdinal(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):296:reducedPrec = true |==> <NO-OP>
16119:COR:fields.remove(DateTimeFieldType.dayOfYear()):TRUE:org.joda.time.format.ISODateTimeFormat@dateByOrdinal(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):299:fields.remove(DateTimeFieldType.dayOfYear()) |==> false
16120:COR:fields.remove(DateTimeFieldType.dayOfYear()):FALSE:org.joda.time.format.ISODateTimeFormat@dateByOrdinal(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):299:fields.remove(DateTimeFieldType.dayOfYear()) |==> true
16121:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByOrdinal(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):301:bld.appendLiteral('-') |==> <NO-OP>
16122:LVR:POS:0:org.joda.time.format.ISODateTimeFormat@dateByOrdinal(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):302:3 |==> 0
16123:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat@dateByOrdinal(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):302:3 |==> -3
16124:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByOrdinal(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):302:bld.appendDayOfYear(3) |==> <NO-OP>
16125:LVR:FALSE:TRUE:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):324:false |==> true
16126:COR:fields.remove(DateTimeFieldType.weekyear()):TRUE:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):325:fields.remove(DateTimeFieldType.weekyear()) |==> false
16127:COR:fields.remove(DateTimeFieldType.weekyear()):FALSE:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):325:fields.remove(DateTimeFieldType.weekyear()) |==> true
16128:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):326:bld.append(Constants.we) |==> <NO-OP>
16129:COR:fields.remove(DateTimeFieldType.weekOfWeekyear()):TRUE:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):327:fields.remove(DateTimeFieldType.weekOfWeekyear()) |==> false
16130:COR:fields.remove(DateTimeFieldType.weekOfWeekyear()):FALSE:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):327:fields.remove(DateTimeFieldType.weekOfWeekyear()) |==> true
16131:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):328:appendSeparator(bld, extended) |==> <NO-OP>
16132:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):329:bld.appendLiteral('W') |==> <NO-OP>
16133:LVR:POS:0:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):330:2 |==> 0
16134:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):330:2 |==> -2
16135:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):330:bld.appendWeekOfWeekyear(2) |==> <NO-OP>
16136:COR:fields.remove(DateTimeFieldType.dayOfWeek()):TRUE:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):331:fields.remove(DateTimeFieldType.dayOfWeek()) |==> false
16137:COR:fields.remove(DateTimeFieldType.dayOfWeek()):FALSE:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):331:fields.remove(DateTimeFieldType.dayOfWeek()) |==> true
16138:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):333:appendSeparator(bld, extended) |==> <NO-OP>
16139:LVR:POS:0:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):334:1 |==> 0
16140:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):334:1 |==> -1
16141:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):334:bld.appendDayOfWeek(1) |==> <NO-OP>
16142:LVR:TRUE:FALSE:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):337:true |==> false
16143:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):337:reducedPrec = true |==> <NO-OP>
16144:COR:fields.remove(DateTimeFieldType.dayOfWeek()):TRUE:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):340:fields.remove(DateTimeFieldType.dayOfWeek()) |==> false
16145:COR:fields.remove(DateTimeFieldType.dayOfWeek()):FALSE:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):340:fields.remove(DateTimeFieldType.dayOfWeek()) |==> true
16146:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):342:checkNotStrictISO(fields, strictISO) |==> <NO-OP>
16147:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):343:appendSeparator(bld, extended) |==> <NO-OP>
16148:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):344:bld.appendLiteral('W') |==> <NO-OP>
16149:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):345:bld.appendLiteral('-') |==> <NO-OP>
16150:LVR:POS:0:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):346:1 |==> 0
16151:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):346:1 |==> -1
16152:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):346:bld.appendDayOfWeek(1) |==> <NO-OP>
16153:LVR:TRUE:FALSE:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):349:true |==> false
16154:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):349:reducedPrec = true |==> <NO-OP>
16155:COR:fields.remove(DateTimeFieldType.weekOfWeekyear()):TRUE:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):353:fields.remove(DateTimeFieldType.weekOfWeekyear()) |==> false
16156:COR:fields.remove(DateTimeFieldType.weekOfWeekyear()):FALSE:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):353:fields.remove(DateTimeFieldType.weekOfWeekyear()) |==> true
16157:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):354:bld.appendLiteral('-') |==> <NO-OP>
16158:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):355:bld.appendLiteral('W') |==> <NO-OP>
16159:LVR:POS:0:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):356:2 |==> 0
16160:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):356:2 |==> -2
16161:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):356:bld.appendWeekOfWeekyear(2) |==> <NO-OP>
16162:COR:fields.remove(DateTimeFieldType.dayOfWeek()):TRUE:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):357:fields.remove(DateTimeFieldType.dayOfWeek()) |==> false
16163:COR:fields.remove(DateTimeFieldType.dayOfWeek()):FALSE:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):357:fields.remove(DateTimeFieldType.dayOfWeek()) |==> true
16164:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):359:appendSeparator(bld, extended) |==> <NO-OP>
16165:LVR:POS:0:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):360:1 |==> 0
16166:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):360:1 |==> -1
16167:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):360:bld.appendDayOfWeek(1) |==> <NO-OP>
16168:LVR:TRUE:FALSE:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):363:true |==> false
16169:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):363:reducedPrec = true |==> <NO-OP>
16170:COR:fields.remove(DateTimeFieldType.dayOfWeek()):TRUE:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):365:fields.remove(DateTimeFieldType.dayOfWeek()) |==> false
16171:COR:fields.remove(DateTimeFieldType.dayOfWeek()):FALSE:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):365:fields.remove(DateTimeFieldType.dayOfWeek()) |==> true
16172:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):367:bld.appendLiteral('-') |==> <NO-OP>
16173:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):368:bld.appendLiteral('W') |==> <NO-OP>
16174:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):369:bld.appendLiteral('-') |==> <NO-OP>
16175:LVR:POS:0:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):370:1 |==> 0
16176:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):370:1 |==> -1
16177:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean):370:bld.appendDayOfWeek(1) |==> <NO-OP>
16178:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):400:!hour && !minute |==> !hour == !minute
16179:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):400:!hour && !minute |==> false
16180:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):400:!hour && !minute |==> !hour
16181:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):400:!hour && !minute |==> !minute
16182:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):400:!hour && !minute && !second |==> (!hour && !minute) == !second
16183:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):400:!hour && !minute && !second |==> false
16184:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):400:!hour && !minute && !second |==> !hour && !minute
16185:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):400:!hour && !minute && !second |==> !second
16186:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):400:!hour && !minute && !second && !milli |==> (!hour && !minute && !second) == !milli
16187:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):400:!hour && !minute && !second && !milli |==> false
16188:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):400:!hour && !minute && !second && !milli |==> !hour && !minute && !second
16189:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):400:!hour && !minute && !second && !milli |==> !milli
16190:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):403:hour || minute |==> hour != minute
16191:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):403:hour || minute |==> hour
16192:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):403:hour || minute |==> minute
16193:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):403:hour || minute |==> true
16194:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):403:hour || minute || second |==> (hour || minute) != second
16195:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):403:hour || minute || second |==> hour || minute
16196:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):403:hour || minute || second |==> second
16197:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):403:hour || minute || second |==> true
16198:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):403:hour || minute || second || milli |==> (hour || minute || second) != milli
16199:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):403:hour || minute || second || milli |==> hour || minute || second
16200:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):403:hour || minute || second || milli |==> milli
16201:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):403:hour || minute || second || milli |==> true
16202:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):404:strictISO && reducedPrec |==> strictISO == reducedPrec
16203:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):404:strictISO && reducedPrec |==> false
16204:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):404:strictISO && reducedPrec |==> strictISO
16205:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):404:strictISO && reducedPrec |==> reducedPrec
16206:COR:datePresent:TRUE:org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):407:datePresent |==> false
16207:COR:datePresent:FALSE:org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):407:datePresent |==> true
16208:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):408:bld.appendLiteral('T') |==> <NO-OP>
16209:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):411:hour && minute |==> hour == minute
16210:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):411:hour && minute |==> false
16211:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):411:hour && minute |==> hour
16212:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):411:hour && minute |==> minute
16213:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):411:hour && minute && second |==> (hour && minute) == second
16214:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):411:hour && minute && second |==> false
16215:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):411:hour && minute && second |==> hour && minute
16216:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):411:hour && minute && second |==> second
16217:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):411:hour && !second |==> hour == !second
16218:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):411:hour && !second |==> false
16219:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):411:hour && !second |==> hour
16220:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):411:hour && !second |==> !second
16221:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):411:hour && !second && !milli |==> (hour && !second) == !milli
16222:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):411:hour && !second && !milli |==> false
16223:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):411:hour && !second && !milli |==> hour && !second
16224:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):411:hour && !second && !milli |==> !milli
16225:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):411:hour && minute && second || (hour && !second && !milli) |==> (hour && minute && second) != (hour && !second && !milli)
16226:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):411:hour && minute && second || (hour && !second && !milli) |==> hour && minute && second
16227:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):411:hour && minute && second || (hour && !second && !milli) |==> (hour && !second && !milli)
16228:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):411:hour && minute && second || (hour && !second && !milli) |==> true
16229:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):414:strictISO && datePresent |==> strictISO == datePresent
16230:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):414:strictISO && datePresent |==> false
16231:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):414:strictISO && datePresent |==> strictISO
16232:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):414:strictISO && datePresent |==> datePresent
16233:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):417:minute && second |==> minute == second
16234:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):417:minute && second |==> false
16235:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):417:minute && second |==> minute
16236:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):417:minute && second |==> second
16237:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):417:minute && !milli |==> minute == !milli
16238:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):417:minute && !milli |==> false
16239:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):417:minute && !milli |==> minute
16240:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):417:minute && !milli |==> !milli
16241:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):417:minute && second || (minute && !milli) |==> (minute && second) != (minute && !milli)
16242:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):417:minute && second || (minute && !milli) |==> minute && second
16243:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):417:minute && second || (minute && !milli) |==> (minute && !milli)
16244:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):417:minute && second || (minute && !milli) |==> true
16245:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):417:minute && second || (minute && !milli) || second |==> (minute && second || (minute && !milli)) != second
16246:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):417:minute && second || (minute && !milli) || second |==> minute && second || (minute && !milli)
16247:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):417:minute && second || (minute && !milli) || second |==> second
16248:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):417:minute && second || (minute && !milli) || second |==> true
16249:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):417:!hour && (minute && second || (minute && !milli) || second) |==> !hour == (minute && second || (minute && !milli) || second)
16250:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):417:!hour && (minute && second || (minute && !milli) || second) |==> false
16251:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):417:!hour && (minute && second || (minute && !milli) || second) |==> !hour
16252:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):417:!hour && (minute && second || (minute && !milli) || second) |==> (minute && second || (minute && !milli) || second)
16253:COR:strictISO:TRUE:org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):420:strictISO |==> false
16254:COR:strictISO:FALSE:org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):420:strictISO |==> true
16255:COR:hour:TRUE:org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):425:hour |==> false
16256:COR:hour:FALSE:org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):425:hour |==> true
16257:LVR:POS:0:org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):426:2 |==> 0
16258:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):426:2 |==> -2
16259:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):426:bld.appendHourOfDay(2) |==> <NO-OP>
16260:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):427:minute || second |==> minute != second
16261:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):427:minute || second |==> minute
16262:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):427:minute || second |==> second
16263:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):427:minute || second |==> true
16264:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):427:minute || second || milli |==> (minute || second) != milli
16265:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):427:minute || second || milli |==> minute || second
16266:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):427:minute || second || milli |==> milli
16267:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):427:minute || second || milli |==> true
16268:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):428:bld.appendLiteral('-') |==> <NO-OP>
16269:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):430:extended && hour |==> extended == hour
16270:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):430:extended && hour |==> false
16271:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):430:extended && hour |==> extended
16272:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):430:extended && hour |==> hour
16273:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):430:extended && hour && minute |==> (extended && hour) == minute
16274:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):430:extended && hour && minute |==> false
16275:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):430:extended && hour && minute |==> extended && hour
16276:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):430:extended && hour && minute |==> minute
16277:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):431:bld.appendLiteral(':') |==> <NO-OP>
16278:COR:minute:TRUE:org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):433:minute |==> false
16279:COR:minute:FALSE:org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):433:minute |==> true
16280:LVR:POS:0:org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):434:2 |==> 0
16281:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):434:2 |==> -2
16282:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):434:bld.appendMinuteOfHour(2) |==> <NO-OP>
16283:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):435:second || milli |==> second != milli
16284:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):435:second || milli |==> second
16285:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):435:second || milli |==> milli
16286:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):435:second || milli |==> true
16287:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):436:bld.appendLiteral('-') |==> <NO-OP>
16288:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):438:extended && minute |==> extended == minute
16289:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):438:extended && minute |==> false
16290:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):438:extended && minute |==> extended
16291:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):438:extended && minute |==> minute
16292:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):438:extended && minute && second |==> (extended && minute) == second
16293:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):438:extended && minute && second |==> false
16294:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):438:extended && minute && second |==> extended && minute
16295:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):438:extended && minute && second |==> second
16296:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):439:bld.appendLiteral(':') |==> <NO-OP>
16297:COR:second:TRUE:org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):441:second |==> false
16298:COR:second:FALSE:org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):441:second |==> true
16299:LVR:POS:0:org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):442:2 |==> 0
16300:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):442:2 |==> -2
16301:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):442:bld.appendSecondOfMinute(2) |==> <NO-OP>
16302:COR:milli:TRUE:org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):443:milli |==> false
16303:COR:milli:FALSE:org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):443:milli |==> true
16304:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):444:bld.appendLiteral('-') |==> <NO-OP>
16305:COR:milli:TRUE:org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):446:milli |==> false
16306:COR:milli:FALSE:org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):446:milli |==> true
16307:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):447:bld.appendLiteral('.') |==> <NO-OP>
16308:LVR:POS:0:org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):448:3 |==> 0
16309:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):448:3 |==> -3
16310:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection<org.joda.time.DateTimeFieldType>,boolean,boolean,boolean,boolean):448:bld.appendMillisOfSecond(3) |==> <NO-OP>
16311:COR:strictISO:TRUE:org.joda.time.format.ISODateTimeFormat@checkNotStrictISO(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean):461:strictISO |==> false
16312:COR:strictISO:FALSE:org.joda.time.format.ISODateTimeFormat@checkNotStrictISO(java.util.Collection<org.joda.time.DateTimeFieldType>,boolean):461:strictISO |==> true
16313:COR:extended:TRUE:org.joda.time.format.ISODateTimeFormat@appendSeparator(org.joda.time.format.DateTimeFormatterBuilder,boolean):475:extended |==> false
16314:COR:extended:FALSE:org.joda.time.format.ISODateTimeFormat@appendSeparator(org.joda.time.format.DateTimeFormatterBuilder,boolean):475:extended |==> true
16315:STD:<CALL>:<NO-OP>:org.joda.time.format.ISODateTimeFormat@appendSeparator(org.joda.time.format.DateTimeFormatterBuilder,boolean):476:bld.appendLiteral('-') |==> <NO-OP>
16316:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@dateParser():1216:dp == null |==> false
16317:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@localDateParser():1229:ldp == null |==> false
16318:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@dateElementParser():1236:dpe == null |==> false
16319:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@timeParser():1263:tp == null |==> false
16320:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@localTimeParser():1274:ltp == null |==> false
16321:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@timeElementParser():1284:tpe == null |==> false
16322:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@timeElementParser():1313:1 |==> 0
16323:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@timeElementParser():1313:1 |==> -1
16324:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@timeElementParser():1313:9 |==> 0
16325:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@timeElementParser():1313:9 |==> -9
16326:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@timeElementParser():1319:1 |==> 0
16327:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@timeElementParser():1319:1 |==> -1
16328:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@timeElementParser():1319:9 |==> 0
16329:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@timeElementParser():1319:9 |==> -9
16330:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@timeElementParser():1327:1 |==> 0
16331:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@timeElementParser():1327:1 |==> -1
16332:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@timeElementParser():1327:9 |==> 0
16333:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@timeElementParser():1327:9 |==> -9
16334:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@dateTimeParser():1337:dtp == null |==> false
16335:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@dateOptionalTimeParser():1353:dotp == null |==> false
16336:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@localDateOptionalTimeParser():1368:ldotp == null |==> false
16337:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@time():1383:t == null |==> false
16338:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@timeNoMillis():1393:tx == null |==> false
16339:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@tTime():1403:tt == null |==> false
16340:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@tTimeNoMillis():1413:ttx == null |==> false
16341:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@dateTime():1423:dt == null |==> false
16342:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@dateTimeNoMillis():1433:dtx == null |==> false
16343:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@ordinalDate():1443:od == null |==> false
16344:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@ordinalDateTime():1453:odt == null |==> false
16345:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@ordinalDateTimeNoMillis():1463:odtx == null |==> false
16346:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@weekDateTime():1473:wdt == null |==> false
16347:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@weekDateTimeNoMillis():1483:wdtx == null |==> false
16348:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@basicDate():1494:bd == null |==> false
16349:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@basicDate():1496:4 |==> 0
16350:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@basicDate():1496:4 |==> -4
16351:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@basicDate():1496:4 |==> 0
16352:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@basicDate():1496:4 |==> -4
16353:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@basicDate():1497:2 |==> 0
16354:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@basicDate():1497:2 |==> -2
16355:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@basicDate():1498:2 |==> 0
16356:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@basicDate():1498:2 |==> -2
16357:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@basicTime():1505:bt == null |==> false
16358:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@basicTime():1507:2 |==> 0
16359:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@basicTime():1507:2 |==> -2
16360:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@basicTime():1508:2 |==> 0
16361:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@basicTime():1508:2 |==> -2
16362:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@basicTime():1509:2 |==> 0
16363:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@basicTime():1509:2 |==> -2
16364:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@basicTime():1511:3 |==> 0
16365:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@basicTime():1511:3 |==> -3
16366:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@basicTime():1511:9 |==> 0
16367:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@basicTime():1511:9 |==> -9
16368:LVR:FALSE:TRUE:org.joda.time.format.ISODateTimeFormat$Constants@basicTime():1512:false |==> true
16369:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@basicTime():1512:2 |==> 0
16370:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@basicTime():1512:2 |==> -2
16371:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@basicTime():1512:2 |==> 0
16372:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@basicTime():1512:2 |==> -2
16373:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@basicTimeNoMillis():1519:btx == null |==> false
16374:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@basicTimeNoMillis():1521:2 |==> 0
16375:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@basicTimeNoMillis():1521:2 |==> -2
16376:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@basicTimeNoMillis():1522:2 |==> 0
16377:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@basicTimeNoMillis():1522:2 |==> -2
16378:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@basicTimeNoMillis():1523:2 |==> 0
16379:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@basicTimeNoMillis():1523:2 |==> -2
16380:LVR:FALSE:TRUE:org.joda.time.format.ISODateTimeFormat$Constants@basicTimeNoMillis():1524:false |==> true
16381:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@basicTimeNoMillis():1524:2 |==> 0
16382:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@basicTimeNoMillis():1524:2 |==> -2
16383:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@basicTimeNoMillis():1524:2 |==> 0
16384:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@basicTimeNoMillis():1524:2 |==> -2
16385:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@basicTTime():1531:btt == null |==> false
16386:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@basicTTimeNoMillis():1541:bttx == null |==> false
16387:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@basicDateTime():1551:bdt == null |==> false
16388:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@basicDateTimeNoMillis():1561:bdtx == null |==> false
16389:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@basicOrdinalDate():1571:bod == null |==> false
16390:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@basicOrdinalDate():1573:4 |==> 0
16391:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@basicOrdinalDate():1573:4 |==> -4
16392:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@basicOrdinalDate():1573:4 |==> 0
16393:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@basicOrdinalDate():1573:4 |==> -4
16394:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@basicOrdinalDate():1574:3 |==> 0
16395:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@basicOrdinalDate():1574:3 |==> -3
16396:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@basicOrdinalDateTime():1581:bodt == null |==> false
16397:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@basicOrdinalDateTimeNoMillis():1591:bodtx == null |==> false
16398:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@basicWeekDate():1601:bwd == null |==> false
16399:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@basicWeekDate():1603:4 |==> 0
16400:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@basicWeekDate():1603:4 |==> -4
16401:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@basicWeekDate():1603:4 |==> 0
16402:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@basicWeekDate():1603:4 |==> -4
16403:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@basicWeekDate():1605:2 |==> 0
16404:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@basicWeekDate():1605:2 |==> -2
16405:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@basicWeekDate():1606:1 |==> 0
16406:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@basicWeekDate():1606:1 |==> -1
16407:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@basicWeekDateTime():1613:bwdt == null |==> false
16408:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@basicWeekDateTimeNoMillis():1623:bwdtx == null |==> false
16409:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@yearMonth():1634:ym == null |==> false
16410:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@yearMonthDay():1644:ymd == null |==> false
16411:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@weekyearWeek():1655:ww == null |==> false
16412:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@weekyearWeekDay():1665:wwd == null |==> false
16413:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@hourMinute():1676:hm == null |==> false
16414:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@hourMinuteSecond():1686:hms == null |==> false
16415:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@hourMinuteSecondMillis():1697:hmsl == null |==> false
16416:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@hourMinuteSecondMillis():1703:3 |==> 0
16417:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@hourMinuteSecondMillis():1703:3 |==> -3
16418:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@hourMinuteSecondMillis():1703:3 |==> 0
16419:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@hourMinuteSecondMillis():1703:3 |==> -3
16420:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@hourMinuteSecondFraction():1710:hmsf == null |==> false
16421:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@dateHour():1722:dh == null |==> false
16422:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@dateHourMinute():1733:dhm == null |==> false
16423:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@dateHourMinuteSecond():1744:dhms == null |==> false
16424:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@dateHourMinuteSecondMillis():1755:dhmsl == null |==> false
16425:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@dateHourMinuteSecondFraction():1766:dhmsf == null |==> false
16426:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@yearElement():1778:ye == null |==> false
16427:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@yearElement():1780:4 |==> 0
16428:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@yearElement():1780:4 |==> -4
16429:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@yearElement():1780:9 |==> 0
16430:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@yearElement():1780:9 |==> -9
16431:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@monthElement():1787:mye == null |==> false
16432:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@monthElement():1790:2 |==> 0
16433:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@monthElement():1790:2 |==> -2
16434:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@dayOfMonthElement():1797:dme == null |==> false
16435:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@dayOfMonthElement():1800:2 |==> 0
16436:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@dayOfMonthElement():1800:2 |==> -2
16437:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@weekyearElement():1807:we == null |==> false
16438:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@weekyearElement():1809:4 |==> 0
16439:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@weekyearElement():1809:4 |==> -4
16440:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@weekyearElement():1809:9 |==> 0
16441:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@weekyearElement():1809:9 |==> -9
16442:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@weekElement():1816:wwe == null |==> false
16443:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@weekElement():1819:2 |==> 0
16444:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@weekElement():1819:2 |==> -2
16445:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@dayOfWeekElement():1826:dwe == null |==> false
16446:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@dayOfWeekElement():1829:1 |==> 0
16447:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@dayOfWeekElement():1829:1 |==> -1
16448:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@dayOfYearElement():1836:dye == null |==> false
16449:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@dayOfYearElement():1839:3 |==> 0
16450:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@dayOfYearElement():1839:3 |==> -3
16451:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@literalTElement():1846:lte == null |==> false
16452:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@hourElement():1855:hde == null |==> false
16453:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@hourElement():1857:2 |==> 0
16454:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@hourElement():1857:2 |==> -2
16455:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@minuteElement():1864:mhe == null |==> false
16456:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@minuteElement():1867:2 |==> 0
16457:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@minuteElement():1867:2 |==> -2
16458:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@secondElement():1874:sme == null |==> false
16459:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@secondElement():1877:2 |==> 0
16460:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@secondElement():1877:2 |==> -2
16461:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@fractionElement():1884:fse == null |==> false
16462:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@fractionElement():1889:3 |==> 0
16463:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@fractionElement():1889:3 |==> -3
16464:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@fractionElement():1889:9 |==> 0
16465:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@fractionElement():1889:9 |==> -9
16466:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISODateTimeFormat$Constants@offsetElement():1896:ze == null |==> false
16467:LVR:TRUE:FALSE:org.joda.time.format.ISODateTimeFormat$Constants@offsetElement():1898:true |==> false
16468:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@offsetElement():1898:2 |==> 0
16469:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@offsetElement():1898:2 |==> -2
16470:LVR:POS:0:org.joda.time.format.ISODateTimeFormat$Constants@offsetElement():1898:4 |==> 0
16471:LVR:POS:NEG:org.joda.time.format.ISODateTimeFormat$Constants@offsetElement():1898:4 |==> -4
16472:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISOPeriodFormat@standard():65:cStandard == null |==> false
16473:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.ISOPeriodFormat@standard():66:cStandard = new PeriodFormatterBuilder().appendLiteral("P").appendYears().appendSuffix("Y").appendMonths().appendSuffix("M").appendWeeks().appendSuffix("W").appendDays().appendSuffix("D").appendSeparatorIfFieldsAfter("T").appendHours().appendSuffix("H").appendMinutes().appendSuffix("M").appendSecondsWithOptionalMillis().appendSuffix("S").toFormatter() |==> <NO-OP>
16474:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISOPeriodFormat@alternate():97:cAlternate == null |==> false
16475:LVR:POS:0:org.joda.time.format.ISOPeriodFormat@alternate():101:4 |==> 0
16476:LVR:POS:NEG:org.joda.time.format.ISOPeriodFormat@alternate():101:4 |==> -4
16477:LVR:POS:0:org.joda.time.format.ISOPeriodFormat@alternate():103:2 |==> 0
16478:LVR:POS:NEG:org.joda.time.format.ISOPeriodFormat@alternate():103:2 |==> -2
16479:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.ISOPeriodFormat@alternate():98:cAlternate = new PeriodFormatterBuilder().appendLiteral("P").printZeroAlways().minimumPrintedDigits(4).appendYears().minimumPrintedDigits(2).appendMonths().appendDays().appendSeparatorIfFieldsAfter("T").appendHours().appendMinutes().appendSecondsWithOptionalMillis().toFormatter() |==> <NO-OP>
16480:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISOPeriodFormat@alternateExtended():124:cAlternateExtended == null |==> false
16481:LVR:POS:0:org.joda.time.format.ISOPeriodFormat@alternateExtended():128:4 |==> 0
16482:LVR:POS:NEG:org.joda.time.format.ISOPeriodFormat@alternateExtended():128:4 |==> -4
16483:LVR:POS:0:org.joda.time.format.ISOPeriodFormat@alternateExtended():131:2 |==> 0
16484:LVR:POS:NEG:org.joda.time.format.ISOPeriodFormat@alternateExtended():131:2 |==> -2
16485:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.ISOPeriodFormat@alternateExtended():125:cAlternateExtended = new PeriodFormatterBuilder().appendLiteral("P").printZeroAlways().minimumPrintedDigits(4).appendYears().appendSeparator("-").minimumPrintedDigits(2).appendMonths().appendSeparator("-").appendDays().appendSeparatorIfFieldsAfter("T").appendHours().appendSeparator(":").appendMinutes().appendSeparator(":").appendSecondsWithOptionalMillis().toFormatter() |==> <NO-OP>
16486:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISOPeriodFormat@alternateWithWeeks():155:cAlternateWithWeeks == null |==> false
16487:LVR:POS:0:org.joda.time.format.ISOPeriodFormat@alternateWithWeeks():159:4 |==> 0
16488:LVR:POS:NEG:org.joda.time.format.ISOPeriodFormat@alternateWithWeeks():159:4 |==> -4
16489:LVR:POS:0:org.joda.time.format.ISOPeriodFormat@alternateWithWeeks():161:2 |==> 0
16490:LVR:POS:NEG:org.joda.time.format.ISOPeriodFormat@alternateWithWeeks():161:2 |==> -2
16491:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.ISOPeriodFormat@alternateWithWeeks():156:cAlternateWithWeeks = new PeriodFormatterBuilder().appendLiteral("P").printZeroAlways().minimumPrintedDigits(4).appendYears().minimumPrintedDigits(2).appendPrefix("W").appendWeeks().appendDays().appendSeparatorIfFieldsAfter("T").appendHours().appendMinutes().appendSecondsWithOptionalMillis().toFormatter() |==> <NO-OP>
16492:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.ISOPeriodFormat@alternateExtendedWithWeeks():183:cAlternateExtendedWihWeeks == null |==> false
16493:LVR:POS:0:org.joda.time.format.ISOPeriodFormat@alternateExtendedWithWeeks():187:4 |==> 0
16494:LVR:POS:NEG:org.joda.time.format.ISOPeriodFormat@alternateExtendedWithWeeks():187:4 |==> -4
16495:LVR:POS:0:org.joda.time.format.ISOPeriodFormat@alternateExtendedWithWeeks():190:2 |==> 0
16496:LVR:POS:NEG:org.joda.time.format.ISOPeriodFormat@alternateExtendedWithWeeks():190:2 |==> -2
16497:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.ISOPeriodFormat@alternateExtendedWithWeeks():184:cAlternateExtendedWihWeeks = new PeriodFormatterBuilder().appendLiteral("P").printZeroAlways().minimumPrintedDigits(4).appendYears().appendSeparator("-").minimumPrintedDigits(2).appendPrefix("W").appendWeeks().appendSeparator("-").appendDays().appendSeparatorIfFieldsAfter("T").appendHours().appendSeparator(":").appendMinutes().appendSeparator(":").appendSecondsWithOptionalMillis().toFormatter() |==> <NO-OP>
16498:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormat@wordBased(java.util.Locale):96:pf == null |==> false
16499:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormat@wordBased(java.util.Locale):101:pf = new PeriodFormatterBuilder().appendYears().appendSuffix(b.getString("PeriodFormat.year"), b.getString("PeriodFormat.years")).appendSeparator(b.getString("PeriodFormat.commaspace"), b.getString("PeriodFormat.spaceandspace"), variants).appendMonths().appendSuffix(b.getString("PeriodFormat.month"), b.getString("PeriodFormat.months")).appendSeparator(b.getString("PeriodFormat.commaspace"), b.getString("PeriodFormat.spaceandspace"), variants).appendWeeks().appendSuffix(b.getString("PeriodFormat.week"), b.getString("PeriodFormat.weeks")).appendSeparator(b.getString("PeriodFormat.commaspace"), b.getString("PeriodFormat.spaceandspace"), variants).appendDays().appendSuffix(b.getString("PeriodFormat.day"), b.getString("PeriodFormat.days")).appendSeparator(b.getString("PeriodFormat.commaspace"), b.getString("PeriodFormat.spaceandspace"), variants).appendHours().appendSuffix(b.getString("PeriodFormat.hour"), b.getString("PeriodFormat.hours")).appendSeparator(b.getString("PeriodFormat.commaspace"), b.getString("PeriodFormat.spaceandspace"), variants).appendMinutes().appendSuffix(b.getString("PeriodFormat.minute"), b.getString("PeriodFormat.minutes")).appendSeparator(b.getString("PeriodFormat.commaspace"), b.getString("PeriodFormat.spaceandspace"), variants).appendSeconds().appendSuffix(b.getString("PeriodFormat.second"), b.getString("PeriodFormat.seconds")).appendSeparator(b.getString("PeriodFormat.commaspace"), b.getString("PeriodFormat.spaceandspace"), variants).appendMillis().appendSuffix(b.getString("PeriodFormat.millisecond"), b.getString("PeriodFormat.milliseconds")).toFormatter() |==> <NO-OP>
16500:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormat@wordBased(java.util.Locale):126:FORMATTERS.putIfAbsent(locale, pf) |==> <NO-OP>
16501:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@<init>():102:clear() |==> <NO-OP>
16502:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@toFormatter():124:iFieldFormatters = (FieldFormatter[])iFieldFormatters.clone() |==> <NO-OP>
16503:COR:iNotPrinter:TRUE:org.joda.time.format.PeriodFormatterBuilder@toPrinter():141:iNotPrinter |==> false
16504:COR:iNotPrinter:FALSE:org.joda.time.format.PeriodFormatterBuilder@toPrinter():141:iNotPrinter |==> true
16505:COR:iNotParser:TRUE:org.joda.time.format.PeriodFormatterBuilder@toParser():160:iNotParser |==> false
16506:COR:iNotParser:FALSE:org.joda.time.format.PeriodFormatterBuilder@toParser():160:iNotParser |==> true
16507:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@clear():171:1 |==> 0
16508:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@clear():171:1 |==> -1
16509:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@clear():171:iMinPrintedDigits = 1 |==> <NO-OP>
16510:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@clear():172:iPrintZeroSetting = PRINT_ZERO_RARELY_LAST |==> <NO-OP>
16511:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@clear():173:10 |==> 0
16512:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@clear():173:10 |==> -10
16513:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@clear():173:iMaxParsedDigits = 10 |==> <NO-OP>
16514:LVR:FALSE:TRUE:org.joda.time.format.PeriodFormatterBuilder@clear():174:false |==> true
16515:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@clear():174:iRejectSignedValues = false |==> <NO-OP>
16516:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@clear():175:iPrefix = null |==> <NO-OP>
16517:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@clear():176:iElementPairs == null |==> false
16518:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@clear():177:iElementPairs = new ArrayList<Object>() |==> <NO-OP>
16519:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@clear():179:iElementPairs.clear() |==> <NO-OP>
16520:LVR:FALSE:TRUE:org.joda.time.format.PeriodFormatterBuilder@clear():181:false |==> true
16521:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@clear():181:iNotPrinter = false |==> <NO-OP>
16522:LVR:FALSE:TRUE:org.joda.time.format.PeriodFormatterBuilder@clear():182:false |==> true
16523:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@clear():182:iNotParser = false |==> <NO-OP>
16524:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@clear():183:10 |==> 0
16525:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@clear():183:10 |==> -10
16526:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@clear():183:iFieldFormatters = new FieldFormatter[10] |==> <NO-OP>
16527:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodFormatter):192:formatter == null |==> false
16528:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodFormatter):195:clearPrefix() |==> <NO-OP>
16529:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodFormatter):196:append0(formatter.getPrinter(), formatter.getParser()) |==> <NO-OP>
16530:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:printer == null |==> false
16531:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:parser == null |==> false
16532:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:printer == null && parser == null |==> printer == null == (parser == null)
16533:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:printer == null && parser == null |==> false
16534:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:printer == null && parser == null |==> printer == null
16535:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:printer == null && parser == null |==> parser == null
16536:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):215:clearPrefix() |==> <NO-OP>
16537:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):216:append0(printer, parser) |==> <NO-OP>
16538:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendLiteral(java.lang.String):228:text == null |==> false
16539:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendLiteral(java.lang.String):231:clearPrefix() |==> <NO-OP>
16540:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendLiteral(java.lang.String):233:append0(literal, literal) |==> <NO-OP>
16541:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@minimumPrintedDigits(int):245:iMinPrintedDigits = minDigits |==> <NO-OP>
16542:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@maximumParsedDigits(int):256:iMaxParsedDigits = maxDigits |==> <NO-OP>
16543:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@rejectSignedValues(boolean):266:iRejectSignedValues = v |==> <NO-OP>
16544:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@printZeroRarelyLast():280:iPrintZeroSetting = PRINT_ZERO_RARELY_LAST |==> <NO-OP>
16545:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@printZeroRarelyFirst():292:iPrintZeroSetting = PRINT_ZERO_RARELY_FIRST |==> <NO-OP>
16546:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@printZeroIfSupported():303:iPrintZeroSetting = PRINT_ZERO_IF_SUPPORTED |==> <NO-OP>
16547:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@printZeroAlways():315:iPrintZeroSetting = PRINT_ZERO_ALWAYS |==> <NO-OP>
16548:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@printZeroNever():329:iPrintZeroSetting = PRINT_ZERO_NEVER |==> <NO-OP>
16549:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String):343:text == null |==> false
16550:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:singularText == null |==> false
16551:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:pluralText == null |==> false
16552:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:singularText == null || pluralText == null |==> singularText == null != (pluralText == null)
16553:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:singularText == null || pluralText == null |==> singularText == null
16554:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:singularText == null || pluralText == null |==> pluralText == null
16555:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:singularText == null || pluralText == null |==> true
16556:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):378:prefix == null |==> false
16557:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):381:iPrefix != null |==> true
16558:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendPrefix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):382:prefix = new CompositeAffix(iPrefix, prefix) |==> <NO-OP>
16559:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendPrefix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):384:iPrefix = prefix |==> <NO-OP>
16560:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendYears():398:appendField(YEARS) |==> <NO-OP>
16561:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendMonths():411:appendField(MONTHS) |==> <NO-OP>
16562:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendWeeks():424:appendField(WEEKS) |==> <NO-OP>
16563:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendDays():437:appendField(DAYS) |==> <NO-OP>
16564:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendHours():450:appendField(HOURS) |==> <NO-OP>
16565:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendMinutes():463:appendField(MINUTES) |==> <NO-OP>
16566:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSeconds():476:appendField(SECONDS) |==> <NO-OP>
16567:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSecondsWithMillis():488:appendField(SECONDS_MILLIS) |==> <NO-OP>
16568:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSecondsWithOptionalMillis():500:appendField(SECONDS_OPTIONAL_MILLIS) |==> <NO-OP>
16569:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendMillis():513:appendField(MILLIS) |==> <NO-OP>
16570:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@appendMillis3Digit():525:7 |==> 0
16571:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@appendMillis3Digit():525:7 |==> -7
16572:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@appendMillis3Digit():525:3 |==> 0
16573:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@appendMillis3Digit():525:3 |==> -3
16574:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendMillis3Digit():525:appendField(7, 3) |==> <NO-OP>
16575:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendField(int):530:appendField(type, iMinPrintedDigits) |==> <NO-OP>
16576:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendField(int,int):536:append0(field, field) |==> <NO-OP>
16577:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendField(int,int):537:iFieldFormatters[type] = field |==> <NO-OP>
16578:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendField(int,int):538:iPrefix = null |==> <NO-OP>
16579:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String):552:text == null |==> false
16580:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:singularText == null |==> false
16581:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:pluralText == null |==> false
16582:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:singularText == null || pluralText == null |==> singularText == null != (pluralText == null)
16583:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:singularText == null || pluralText == null |==> singularText == null
16584:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:singularText == null || pluralText == null |==> pluralText == null
16585:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:singularText == null || pluralText == null |==> true
16586:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):591:0 |==> 1
16587:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):591:0 |==> -1
16588:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):591:iElementPairs.size() > 0 |==> iElementPairs.size() != 0
16589:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):591:iElementPairs.size() > 0 |==> iElementPairs.size() >= 0
16590:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):591:iElementPairs.size() > 0 |==> false
16591:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):592:2 |==> 0
16592:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):592:2 |==> -2
16593:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):592:iElementPairs.size() - 2 |==> iElementPairs.size() % 2
16594:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):592:iElementPairs.size() - 2 |==> iElementPairs.size() * 2
16595:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):592:iElementPairs.size() - 2 |==> iElementPairs.size() + 2
16596:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):592:iElementPairs.size() - 2 |==> iElementPairs.size() / 2
16597:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):593:1 |==> 0
16598:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):593:1 |==> -1
16599:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):593:iElementPairs.size() - 1 |==> iElementPairs.size() % 1
16600:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):593:iElementPairs.size() - 1 |==> iElementPairs.size() * 1
16601:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):593:iElementPairs.size() - 1 |==> iElementPairs.size() + 1
16602:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):593:iElementPairs.size() - 1 |==> iElementPairs.size() / 1
16603:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null |==> false
16604:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalParser == null |==> false
16605:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null |==> originalPrinter == null != (originalParser == null)
16606:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null |==> originalPrinter == null
16607:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null |==> originalParser == null
16608:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null |==> true
16609:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):600:originalPrinter != originalParser |==> true
16610:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null || originalPrinter != originalParser |==> (originalPrinter == null || originalParser == null) != (originalPrinter != originalParser)
16611:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null || originalPrinter != originalParser |==> originalPrinter == null || originalParser == null
16612:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):600:originalPrinter == null || originalParser == null || originalPrinter != originalParser |==> originalPrinter != originalParser
16613:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null || originalPrinter != originalParser |==> true
16614:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null || originalPrinter != originalParser || !(originalPrinter instanceof FieldFormatter) |==> (originalPrinter == null || originalParser == null || originalPrinter != originalParser) != !(originalPrinter instanceof FieldFormatter)
16615:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null || originalPrinter != originalParser || !(originalPrinter instanceof FieldFormatter) |==> originalPrinter == null || originalParser == null || originalPrinter != originalParser
16616:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):601:originalPrinter == null || originalParser == null || originalPrinter != originalParser || !(originalPrinter instanceof FieldFormatter) |==> !(originalPrinter instanceof FieldFormatter)
16617:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):600:originalPrinter == null || originalParser == null || originalPrinter != originalParser || !(originalPrinter instanceof FieldFormatter) |==> true
16618:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):605:clearPrefix() |==> <NO-OP>
16619:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):607:2 |==> 0
16620:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):607:2 |==> -2
16621:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):607:iElementPairs.size() - 2 |==> iElementPairs.size() % 2
16622:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):607:iElementPairs.size() - 2 |==> iElementPairs.size() * 2
16623:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):607:iElementPairs.size() - 2 |==> iElementPairs.size() + 2
16624:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):607:iElementPairs.size() - 2 |==> iElementPairs.size() / 2
16625:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):607:iElementPairs.set(iElementPairs.size() - 2, newField) |==> <NO-OP>
16626:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):608:1 |==> 0
16627:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):608:1 |==> -1
16628:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):608:iElementPairs.size() - 1 |==> iElementPairs.size() % 1
16629:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):608:iElementPairs.size() - 1 |==> iElementPairs.size() * 1
16630:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):608:iElementPairs.size() - 1 |==> iElementPairs.size() + 1
16631:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):608:iElementPairs.size() - 1 |==> iElementPairs.size() / 1
16632:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):608:iElementPairs.set(iElementPairs.size() - 1, newField) |==> <NO-OP>
16633:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):609:iFieldFormatters[newField.getFieldType()] = newField |==> <NO-OP>
16634:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String):632:true |==> false
16635:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String):632:true |==> false
16636:LVR:FALSE:TRUE:org.joda.time.format.PeriodFormatterBuilder@appendSeparatorIfFieldsAfter(java.lang.String):652:false |==> true
16637:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder@appendSeparatorIfFieldsAfter(java.lang.String):652:true |==> false
16638:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder@appendSeparatorIfFieldsBefore(java.lang.String):672:true |==> false
16639:LVR:FALSE:TRUE:org.joda.time.format.PeriodFormatterBuilder@appendSeparatorIfFieldsBefore(java.lang.String):672:false |==> true
16640:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String):697:true |==> false
16641:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String):697:true |==> false
16642:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[]):724:true |==> false
16643:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[]):724:true |==> false
16644:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:text == null |==> false
16645:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:finalText == null |==> false
16646:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:text == null || finalText == null |==> text == null != (finalText == null)
16647:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:text == null || finalText == null |==> text == null
16648:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:text == null || finalText == null |==> finalText == null
16649:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:text == null || finalText == null |==> true
16650:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):734:clearPrefix() |==> <NO-OP>
16651:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):738:0 |==> 1
16652:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):738:0 |==> -1
16653:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):738:pairs.size() == 0 |==> pairs.size() <= 0
16654:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):738:pairs.size() == 0 |==> pairs.size() >= 0
16655:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):738:pairs.size() == 0 |==> false
16656:LVR:FALSE:TRUE:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:false |==> true
16657:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useBefore == false |==> false
16658:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useBefore == false |==> useBefore
16659:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useBefore == false |==> false
16660:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useAfter && useBefore == false |==> useAfter == (useBefore == false)
16661:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useAfter && useBefore == false |==> false
16662:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useAfter && useBefore == false |==> useAfter
16663:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useAfter && useBefore == false |==> useBefore == false
16664:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):743:append0(separator, separator) |==> <NO-OP>
16665:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):751:0 |==> 1
16666:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):751:0 |==> -1
16667:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):751:--i >= 0 |==> --i == 0
16668:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):751:--i >= 0 |==> --i > 0
16669:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):751:--i >= 0 |==> true
16670:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):753:lastSeparator = (Separator)pairs.get(i) |==> <NO-OP>
16671:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):754:1 |==> 0
16672:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):754:1 |==> -1
16673:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):754:i + 1 |==> i % 1
16674:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):754:i + 1 |==> i * 1
16675:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):754:i + 1 |==> i - 1
16676:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):754:i + 1 |==> i / 1
16677:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):754:pairs = pairs.subList(i + 1, pairs.size()) |==> <NO-OP>
16678:STD:<DEC>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):757:i-- |==> <NO-OP>
16679:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:lastSeparator != null |==> true
16680:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:0 |==> 1
16681:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:0 |==> -1
16682:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:pairs.size() == 0 |==> pairs.size() <= 0
16683:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:pairs.size() == 0 |==> pairs.size() >= 0
16684:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:pairs.size() == 0 |==> false
16685:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:lastSeparator != null && pairs.size() == 0 |==> lastSeparator != null == (pairs.size() == 0)
16686:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:lastSeparator != null && pairs.size() == 0 |==> false
16687:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:lastSeparator != null && pairs.size() == 0 |==> lastSeparator != null
16688:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:lastSeparator != null && pairs.size() == 0 |==> pairs.size() == 0
16689:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):765:pairs.clear() |==> <NO-OP>
16690:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):768:0 |==> 1
16691:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):768:0 |==> -1
16692:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):768:1 |==> 0
16693:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):768:1 |==> -1
16694:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):770:pairs.add(separator) |==> <NO-OP>
16695:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):771:pairs.add(separator) |==> <NO-OP>
16696:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@clearPrefix():779:iPrefix != null |==> true
16697:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@clearPrefix():782:iPrefix = null |==> <NO-OP>
16698:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):786:iElementPairs.add(printer) |==> <NO-OP>
16699:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):787:iElementPairs.add(parser) |==> <NO-OP>
16700:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):788:printer == null |==> false
16701:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):788:iNotPrinter |= (printer == null) |==> <NO-OP>
16702:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):789:parser == null |==> false
16703:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):789:iNotParser |= (parser == null) |==> <NO-OP>
16704:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):795:notPrinter && notParser |==> notPrinter == notParser
16705:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):795:notPrinter && notParser |==> false
16706:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):795:notPrinter && notParser |==> notPrinter
16707:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):795:notPrinter && notParser |==> notParser
16708:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:2 |==> 0
16709:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:2 |==> -2
16710:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 |==> size == 2
16711:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 |==> size > 2
16712:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 |==> true
16713:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:0 |==> 1
16714:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:0 |==> -1
16715:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 && elementPairs.get(0) instanceof Separator |==> size >= 2 == elementPairs.get(0) instanceof Separator
16716:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 && elementPairs.get(0) instanceof Separator |==> false
16717:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 && elementPairs.get(0) instanceof Separator |==> size >= 2
16718:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 && elementPairs.get(0) instanceof Separator |==> elementPairs.get(0) instanceof Separator
16719:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):800:0 |==> 1
16720:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):800:0 |==> -1
16721:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):801:sep.iAfterParser == null |==> false
16722:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):801:sep.iAfterPrinter == null |==> false
16723:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):801:sep.iAfterParser == null && sep.iAfterPrinter == null |==> sep.iAfterParser == null == (sep.iAfterPrinter == null)
16724:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):801:sep.iAfterParser == null && sep.iAfterPrinter == null |==> false
16725:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):801:sep.iAfterParser == null && sep.iAfterPrinter == null |==> sep.iAfterParser == null
16726:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):801:sep.iAfterParser == null && sep.iAfterPrinter == null |==> sep.iAfterPrinter == null
16727:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):802:2 |==> 0
16728:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):802:2 |==> -2
16729:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):803:sep = sep.finish(f.getPrinter(), f.getParser()) |==> <NO-OP>
16730:COR:notPrinter:TRUE:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):808:notPrinter |==> false
16731:COR:notPrinter:FALSE:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):808:notPrinter |==> true
16732:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):809:1 |==> 0
16733:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):809:1 |==> -1
16734:COR:notParser:TRUE:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):810:notParser |==> false
16735:COR:notParser:FALSE:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):810:notParser |==> true
16736:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):811:0 |==> 1
16737:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):811:0 |==> -1
16738:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):813:0 |==> 1
16739:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):813:0 |==> -1
16740:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):813:1 |==> 0
16741:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):813:1 |==> -1
16742:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder@createComposite(java.util.List<java.lang.Object>):822:0 |==> 1
16743:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder@createComposite(java.util.List<java.lang.Object>):822:0 |==> -1
16744:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@createComposite(java.util.List<java.lang.Object>):822:1 |==> 0
16745:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@createComposite(java.util.List<java.lang.Object>):822:1 |==> -1
16746:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@printTo(java.lang.StringBuffer,int):868:buf.append(iText) |==> <NO-OP>
16747:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@printTo(java.io.Writer,int):872:out.write(iText) |==> <NO-OP>
16748:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):878:true |==> false
16749:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):878:0 |==> 1
16750:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):878:0 |==> -1
16751:COR:periodStr.regionMatches(true, position, text, 0, textLength):TRUE:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):878:periodStr.regionMatches(true, position, text, 0, textLength) |==> false
16752:COR:periodStr.regionMatches(true, position, text, 0, textLength):FALSE:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):878:periodStr.regionMatches(true, position, text, 0, textLength) |==> true
16753:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):879:position + textLength |==> position % textLength
16754:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):879:position + textLength |==> position * textLength
16755:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):879:position + textLength |==> position - textLength
16756:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):879:position + textLength |==> position / textLength
16757:ORU:~(int):+(int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):881:~position |==> +position
16758:ORU:~(int):-(int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):881:~position |==> -position
16759:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):889:pos < sourceLength |==> pos != sourceLength
16760:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):889:pos < sourceLength |==> pos <= sourceLength
16761:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):889:pos < sourceLength |==> false
16762:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):890:true |==> false
16763:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):890:0 |==> 1
16764:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):890:0 |==> -1
16765:COR:periodStr.regionMatches(true, pos, text, 0, textLength):TRUE:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):890:periodStr.regionMatches(true, pos, text, 0, textLength) |==> false
16766:COR:periodStr.regionMatches(true, pos, text, 0, textLength):FALSE:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):890:periodStr.regionMatches(true, pos, text, 0, textLength) |==> true
16767:ORU:~(int):+(int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):903:~position |==> +position
16768:ORU:~(int):-(int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):903:~position |==> -position
16769:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@calculatePrintedLength(int):922:1 |==> 0
16770:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@calculatePrintedLength(int):922:1 |==> -1
16771:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@calculatePrintedLength(int):922:value == 1 |==> value <= 1
16772:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@calculatePrintedLength(int):922:value == 1 |==> value >= 1
16773:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@calculatePrintedLength(int):922:value == 1 |==> false
16774:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.lang.StringBuffer,int):926:1 |==> 0
16775:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.lang.StringBuffer,int):926:1 |==> -1
16776:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.lang.StringBuffer,int):926:value == 1 |==> value <= 1
16777:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.lang.StringBuffer,int):926:value == 1 |==> value >= 1
16778:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.lang.StringBuffer,int):926:value == 1 |==> false
16779:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.lang.StringBuffer,int):926:buf.append(value == 1 ? iSingularText : iPluralText) |==> <NO-OP>
16780:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.io.Writer,int):930:1 |==> 0
16781:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.io.Writer,int):930:1 |==> -1
16782:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.io.Writer,int):930:value == 1 |==> value <= 1
16783:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.io.Writer,int):930:value == 1 |==> value >= 1
16784:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.io.Writer,int):930:value == 1 |==> false
16785:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.io.Writer,int):930:out.write(value == 1 ? iSingularText : iPluralText) |==> <NO-OP>
16786:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):937:text1.length() < text2.length() |==> text1.length() != text2.length()
16787:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):937:text1.length() < text2.length() |==> text1.length() <= text2.length()
16788:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):937:text1.length() < text2.length() |==> false
16789:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):940:text1 = text2 |==> <NO-OP>
16790:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):941:text2 = temp |==> <NO-OP>
16791:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):945:true |==> false
16792:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):945:0 |==> 1
16793:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):945:0 |==> -1
16794:COR:periodStr.regionMatches(true, position, text1, 0, text1.length()):TRUE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):945:periodStr.regionMatches(true, position, text1, 0, text1.length()) |==> false
16795:COR:periodStr.regionMatches(true, position, text1, 0, text1.length()):FALSE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):945:periodStr.regionMatches(true, position, text1, 0, text1.length()) |==> true
16796:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):946:position + text1.length() |==> position % text1.length()
16797:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):946:position + text1.length() |==> position * text1.length()
16798:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):946:position + text1.length() |==> position - text1.length()
16799:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):946:position + text1.length() |==> position / text1.length()
16800:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):949:true |==> false
16801:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):949:0 |==> 1
16802:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):949:0 |==> -1
16803:COR:periodStr.regionMatches(true, position, text2, 0, text2.length()):TRUE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):949:periodStr.regionMatches(true, position, text2, 0, text2.length()) |==> false
16804:COR:periodStr.regionMatches(true, position, text2, 0, text2.length()):FALSE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):949:periodStr.regionMatches(true, position, text2, 0, text2.length()) |==> true
16805:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):950:position + text2.length() |==> position % text2.length()
16806:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):950:position + text2.length() |==> position * text2.length()
16807:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):950:position + text2.length() |==> position - text2.length()
16808:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):950:position + text2.length() |==> position / text2.length()
16809:ORU:~(int):+(int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):953:~position |==> +position
16810:ORU:~(int):-(int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):953:~position |==> -position
16811:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):960:text1.length() < text2.length() |==> text1.length() != text2.length()
16812:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):960:text1.length() < text2.length() |==> text1.length() <= text2.length()
16813:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):960:text1.length() < text2.length() |==> false
16814:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):963:text1 = text2 |==> <NO-OP>
16815:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):964:text2 = temp |==> <NO-OP>
16816:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):971:pos < sourceLength |==> pos != sourceLength
16817:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):971:pos < sourceLength |==> pos <= sourceLength
16818:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):971:pos < sourceLength |==> false
16819:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):972:true |==> false
16820:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):972:0 |==> 1
16821:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):972:0 |==> -1
16822:COR:periodStr.regionMatches(true, pos, text1, 0, textLength1):TRUE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):972:periodStr.regionMatches(true, pos, text1, 0, textLength1) |==> false
16823:COR:periodStr.regionMatches(true, pos, text1, 0, textLength1):FALSE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):972:periodStr.regionMatches(true, pos, text1, 0, textLength1) |==> true
16824:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):975:true |==> false
16825:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):975:0 |==> 1
16826:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):975:0 |==> -1
16827:COR:periodStr.regionMatches(true, pos, text2, 0, textLength2):TRUE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):975:periodStr.regionMatches(true, pos, text2, 0, textLength2) |==> false
16828:COR:periodStr.regionMatches(true, pos, text2, 0, textLength2):FALSE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):975:periodStr.regionMatches(true, pos, text2, 0, textLength2) |==> true
16829:ORU:~(int):+(int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):979:~position |==> +position
16830:ORU:~(int):-(int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):979:~position |==> -position
16831:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@calculatePrintedLength(int):997:iLeft.calculatePrintedLength(value) + iRight.calculatePrintedLength(value) |==> iLeft.calculatePrintedLength(value) % iRight.calculatePrintedLength(value)
16832:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@calculatePrintedLength(int):997:iLeft.calculatePrintedLength(value) + iRight.calculatePrintedLength(value) |==> iLeft.calculatePrintedLength(value) * iRight.calculatePrintedLength(value)
16833:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@calculatePrintedLength(int):997:iLeft.calculatePrintedLength(value) + iRight.calculatePrintedLength(value) |==> iLeft.calculatePrintedLength(value) - iRight.calculatePrintedLength(value)
16834:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@calculatePrintedLength(int):997:iLeft.calculatePrintedLength(value) + iRight.calculatePrintedLength(value) |==> iLeft.calculatePrintedLength(value) / iRight.calculatePrintedLength(value)
16835:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@printTo(java.lang.StringBuffer,int):1002:iLeft.printTo(buf, value) |==> <NO-OP>
16836:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@printTo(java.lang.StringBuffer,int):1003:iRight.printTo(buf, value) |==> <NO-OP>
16837:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@printTo(java.io.Writer,int):1007:iLeft.printTo(out, value) |==> <NO-OP>
16838:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@printTo(java.io.Writer,int):1008:iRight.printTo(out, value) |==> <NO-OP>
16839:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@parse(java.lang.String,int):1012:position = iLeft.parse(periodStr, position) |==> <NO-OP>
16840:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@parse(java.lang.String,int):1013:0 |==> 1
16841:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@parse(java.lang.String,int):1013:0 |==> -1
16842:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@parse(java.lang.String,int):1013:position >= 0 |==> position == 0
16843:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@parse(java.lang.String,int):1013:position >= 0 |==> position > 0
16844:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@parse(java.lang.String,int):1013:position >= 0 |==> true
16845:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@parse(java.lang.String,int):1014:position = iRight.parse(periodStr, position) |==> <NO-OP>
16846:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@scan(java.lang.String,int):1021:0 |==> 1
16847:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@scan(java.lang.String,int):1021:0 |==> -1
16848:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@scan(java.lang.String,int):1021:pos >= 0 |==> pos == 0
16849:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@scan(java.lang.String,int):1021:pos >= 0 |==> pos > 0
16850:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@scan(java.lang.String,int):1021:pos >= 0 |==> true
16851:ORU:~(int):+(int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@scan(java.lang.String,int):1024:~position |==> +position
16852:ORU:~(int):-(int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@scan(java.lang.String,int):1024:~position |==> -position
16853:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@<init>(org.joda.time.format.PeriodFormatterBuilder.FieldFormatter,org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):1072:field.iSuffix != null |==> true
16854:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@<init>(org.joda.time.format.PeriodFormatterBuilder.FieldFormatter,org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):1073:suffix = new CompositeAffix(field.iSuffix, suffix) |==> <NO-OP>
16855:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1079:0 |==> 1
16856:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1079:0 |==> -1
16857:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1079:stopAt <= 0 |==> stopAt < 0
16858:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1079:stopAt <= 0 |==> stopAt == 0
16859:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1079:stopAt <= 0 |==> true
16860:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1080:0 |==> 1
16861:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1080:0 |==> -1
16862:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting <= PRINT_ZERO_ALWAYS
16863:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting >= PRINT_ZERO_ALWAYS
16864:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> false
16865:ROR:!=(long,long):<(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:getFieldValue(period) != Long.MAX_VALUE |==> getFieldValue(period) < Long.MAX_VALUE
16866:ROR:!=(long,long):>(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:getFieldValue(period) != Long.MAX_VALUE |==> getFieldValue(period) > Long.MAX_VALUE
16867:ROR:!=(long,long):TRUE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:getFieldValue(period) != Long.MAX_VALUE |==> true
16868:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:iPrintZeroSetting == PRINT_ZERO_ALWAYS || getFieldValue(period) != Long.MAX_VALUE |==> iPrintZeroSetting == PRINT_ZERO_ALWAYS != (getFieldValue(period) != Long.MAX_VALUE)
16869:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:iPrintZeroSetting == PRINT_ZERO_ALWAYS || getFieldValue(period) != Long.MAX_VALUE |==> iPrintZeroSetting == PRINT_ZERO_ALWAYS
16870:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:iPrintZeroSetting == PRINT_ZERO_ALWAYS || getFieldValue(period) != Long.MAX_VALUE |==> getFieldValue(period) != Long.MAX_VALUE
16871:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:iPrintZeroSetting == PRINT_ZERO_ALWAYS || getFieldValue(period) != Long.MAX_VALUE |==> true
16872:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1083:1 |==> 0
16873:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1083:1 |==> -1
16874:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1085:0 |==> 1
16875:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1085:0 |==> -1
16876:ROR:==(long,long):<=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1090:valueLong == Long.MAX_VALUE |==> valueLong <= Long.MAX_VALUE
16877:ROR:==(long,long):>=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1090:valueLong == Long.MAX_VALUE |==> valueLong >= Long.MAX_VALUE
16878:ROR:==(long,long):FALSE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1090:valueLong == Long.MAX_VALUE |==> false
16879:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1091:0 |==> 1
16880:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1091:0 |==> -1
16881:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1095:iFieldType >= SECONDS_MILLIS |==> iFieldType == SECONDS_MILLIS
16882:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1095:iFieldType >= SECONDS_MILLIS |==> iFieldType > SECONDS_MILLIS
16883:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1095:iFieldType >= SECONDS_MILLIS |==> true
16884:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1098:0 |==> 1
16885:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1098:0 |==> -1
16886:ROR:<(long,long):!=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1098:valueLong < 0 |==> valueLong != 0
16887:ROR:<(long,long):<=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1098:valueLong < 0 |==> valueLong <= 0
16888:ROR:<(long,long):FALSE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1098:valueLong < 0 |==> false
16889:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1098:5 |==> 0
16890:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1098:5 |==> -5
16891:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1098:4 |==> 0
16892:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1098:4 |==> -4
16893:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1098:sum = (valueLong < 0 ? Math.max(sum, 5) : Math.max(sum, 4)) |==> <NO-OP>
16894:STD:<INC>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1100:sum++ |==> <NO-OP>
16895:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1101:iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType <= SECONDS_OPTIONAL_MILLIS
16896:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1101:iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType >= SECONDS_OPTIONAL_MILLIS
16897:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1101:iFieldType == SECONDS_OPTIONAL_MILLIS |==> false
16898:AOR:%(long,long):*(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) * DateTimeConstants.MILLIS_PER_SECOND
16899:AOR:%(long,long):+(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) + DateTimeConstants.MILLIS_PER_SECOND
16900:AOR:%(long,long):-(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) - DateTimeConstants.MILLIS_PER_SECOND
16901:AOR:%(long,long):/(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) / DateTimeConstants.MILLIS_PER_SECOND
16902:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:0 |==> 1
16903:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:0 |==> -1
16904:ROR:==(long,long):<=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:(Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) <= 0
16905:ROR:==(long,long):>=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:(Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) >= 0
16906:ROR:==(long,long):FALSE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:(Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> false
16907:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1101:iFieldType == SECONDS_OPTIONAL_MILLIS && (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> iFieldType == SECONDS_OPTIONAL_MILLIS == ((Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0)
16908:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1101:iFieldType == SECONDS_OPTIONAL_MILLIS && (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> false
16909:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1101:iFieldType == SECONDS_OPTIONAL_MILLIS && (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> iFieldType == SECONDS_OPTIONAL_MILLIS
16910:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:iFieldType == SECONDS_OPTIONAL_MILLIS && (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0
16911:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1103:4 |==> 0
16912:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1103:4 |==> -4
16913:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1103:sum -= 4 |==> <NO-OP>
16914:AOR:/(long,long):%(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1106:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong % DateTimeConstants.MILLIS_PER_SECOND
16915:AOR:/(long,long):*(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1106:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong * DateTimeConstants.MILLIS_PER_SECOND
16916:AOR:/(long,long):+(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1106:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong + DateTimeConstants.MILLIS_PER_SECOND
16917:AOR:/(long,long):-(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1106:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong - DateTimeConstants.MILLIS_PER_SECOND
16918:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1106:valueLong = valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> <NO-OP>
16919:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1110:iPrefix != null |==> true
16920:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1111:sum += iPrefix.calculatePrintedLength(value) |==> <NO-OP>
16921:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1113:iSuffix != null |==> true
16922:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1114:sum += iSuffix.calculatePrintedLength(value) |==> <NO-OP>
16923:ROR:==(long,long):<=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1122:valueLong == Long.MAX_VALUE |==> valueLong <= Long.MAX_VALUE
16924:ROR:==(long,long):>=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1122:valueLong == Long.MAX_VALUE |==> valueLong >= Long.MAX_VALUE
16925:ROR:==(long,long):FALSE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1122:valueLong == Long.MAX_VALUE |==> false
16926:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1126:iFieldType >= SECONDS_MILLIS |==> iFieldType == SECONDS_MILLIS
16927:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1126:iFieldType >= SECONDS_MILLIS |==> iFieldType > SECONDS_MILLIS
16928:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1126:iFieldType >= SECONDS_MILLIS |==> true
16929:AOR:/(long,long):%(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1127:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong % DateTimeConstants.MILLIS_PER_SECOND
16930:AOR:/(long,long):*(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1127:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong * DateTimeConstants.MILLIS_PER_SECOND
16931:AOR:/(long,long):+(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1127:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong + DateTimeConstants.MILLIS_PER_SECOND
16932:AOR:/(long,long):-(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1127:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong - DateTimeConstants.MILLIS_PER_SECOND
16933:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1127:value = (int)(valueLong / DateTimeConstants.MILLIS_PER_SECOND) |==> <NO-OP>
16934:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1130:iPrefix != null |==> true
16935:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1131:iPrefix.printTo(buf, value) |==> <NO-OP>
16936:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1135:1 |==> 0
16937:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1135:1 |==> -1
16938:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1135:minDigits <= 1 |==> minDigits < 1
16939:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1135:minDigits <= 1 |==> minDigits == 1
16940:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1135:minDigits <= 1 |==> true
16941:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1136:FormatUtils.appendUnpaddedInteger(buf, value) |==> <NO-OP>
16942:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1138:FormatUtils.appendPaddedInteger(buf, value, minDigits) |==> <NO-OP>
16943:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1140:iFieldType >= SECONDS_MILLIS |==> iFieldType == SECONDS_MILLIS
16944:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1140:iFieldType >= SECONDS_MILLIS |==> iFieldType > SECONDS_MILLIS
16945:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1140:iFieldType >= SECONDS_MILLIS |==> true
16946:AOR:%(long,long):*(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1141:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) * DateTimeConstants.MILLIS_PER_SECOND
16947:AOR:%(long,long):+(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1141:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) + DateTimeConstants.MILLIS_PER_SECOND
16948:AOR:%(long,long):-(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1141:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) - DateTimeConstants.MILLIS_PER_SECOND
16949:AOR:%(long,long):/(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1141:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) / DateTimeConstants.MILLIS_PER_SECOND
16950:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1142:iFieldType == SECONDS_MILLIS |==> iFieldType <= SECONDS_MILLIS
16951:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1142:iFieldType == SECONDS_MILLIS |==> iFieldType >= SECONDS_MILLIS
16952:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1142:iFieldType == SECONDS_MILLIS |==> false
16953:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1142:0 |==> 1
16954:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1142:0 |==> -1
16955:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1142:dp > 0 |==> dp != 0
16956:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1142:dp > 0 |==> dp >= 0
16957:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1142:dp > 0 |==> false
16958:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1142:iFieldType == SECONDS_MILLIS || dp > 0 |==> iFieldType == SECONDS_MILLIS != dp > 0
16959:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1142:iFieldType == SECONDS_MILLIS || dp > 0 |==> iFieldType == SECONDS_MILLIS
16960:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1142:iFieldType == SECONDS_MILLIS || dp > 0 |==> dp > 0
16961:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1142:iFieldType == SECONDS_MILLIS || dp > 0 |==> true
16962:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:0 |==> 1
16963:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:0 |==> -1
16964:ROR:<(long,long):!=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:valueLong < 0 |==> valueLong != 0
16965:ROR:<(long,long):<=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:valueLong < 0 |==> valueLong <= 0
16966:ROR:<(long,long):FALSE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:valueLong < 0 |==> false
16967:ORU:-(int):+(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:-DateTimeConstants.MILLIS_PER_SECOND |==> +DateTimeConstants.MILLIS_PER_SECOND
16968:ORU:-(int):~(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:-DateTimeConstants.MILLIS_PER_SECOND |==> ~DateTimeConstants.MILLIS_PER_SECOND
16969:ROR:>(long,long):!=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:valueLong > -DateTimeConstants.MILLIS_PER_SECOND |==> valueLong != -DateTimeConstants.MILLIS_PER_SECOND
16970:ROR:>(long,long):>=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:valueLong > -DateTimeConstants.MILLIS_PER_SECOND |==> valueLong >= -DateTimeConstants.MILLIS_PER_SECOND
16971:ROR:>(long,long):FALSE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:valueLong > -DateTimeConstants.MILLIS_PER_SECOND |==> false
16972:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:valueLong < 0 && valueLong > -DateTimeConstants.MILLIS_PER_SECOND |==> valueLong < 0 == valueLong > -DateTimeConstants.MILLIS_PER_SECOND
16973:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:valueLong < 0 && valueLong > -DateTimeConstants.MILLIS_PER_SECOND |==> false
16974:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:valueLong < 0 && valueLong > -DateTimeConstants.MILLIS_PER_SECOND |==> valueLong < 0
16975:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:valueLong < 0 && valueLong > -DateTimeConstants.MILLIS_PER_SECOND |==> valueLong > -DateTimeConstants.MILLIS_PER_SECOND
16976:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1144:buf.insert(bufLen, '-') |==> <NO-OP>
16977:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1146:buf.append('.') |==> <NO-OP>
16978:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1147:3 |==> 0
16979:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1147:3 |==> -3
16980:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1147:FormatUtils.appendPaddedInteger(buf, dp, 3) |==> <NO-OP>
16981:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1150:iSuffix != null |==> true
16982:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1151:iSuffix.printTo(buf, value) |==> <NO-OP>
16983:ROR:==(long,long):<=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1157:valueLong == Long.MAX_VALUE |==> valueLong <= Long.MAX_VALUE
16984:ROR:==(long,long):>=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1157:valueLong == Long.MAX_VALUE |==> valueLong >= Long.MAX_VALUE
16985:ROR:==(long,long):FALSE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1157:valueLong == Long.MAX_VALUE |==> false
16986:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1161:iFieldType >= SECONDS_MILLIS |==> iFieldType == SECONDS_MILLIS
16987:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1161:iFieldType >= SECONDS_MILLIS |==> iFieldType > SECONDS_MILLIS
16988:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1161:iFieldType >= SECONDS_MILLIS |==> true
16989:AOR:/(long,long):%(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1162:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong % DateTimeConstants.MILLIS_PER_SECOND
16990:AOR:/(long,long):*(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1162:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong * DateTimeConstants.MILLIS_PER_SECOND
16991:AOR:/(long,long):+(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1162:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong + DateTimeConstants.MILLIS_PER_SECOND
16992:AOR:/(long,long):-(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1162:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong - DateTimeConstants.MILLIS_PER_SECOND
16993:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1162:value = (int)(valueLong / DateTimeConstants.MILLIS_PER_SECOND) |==> <NO-OP>
16994:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1165:iPrefix != null |==> true
16995:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1166:iPrefix.printTo(out, value) |==> <NO-OP>
16996:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1169:1 |==> 0
16997:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1169:1 |==> -1
16998:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1169:minDigits <= 1 |==> minDigits < 1
16999:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1169:minDigits <= 1 |==> minDigits == 1
17000:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1169:minDigits <= 1 |==> true
17001:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1170:FormatUtils.writeUnpaddedInteger(out, value) |==> <NO-OP>
17002:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1172:FormatUtils.writePaddedInteger(out, value, minDigits) |==> <NO-OP>
17003:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1174:iFieldType >= SECONDS_MILLIS |==> iFieldType == SECONDS_MILLIS
17004:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1174:iFieldType >= SECONDS_MILLIS |==> iFieldType > SECONDS_MILLIS
17005:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1174:iFieldType >= SECONDS_MILLIS |==> true
17006:AOR:%(long,long):*(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1175:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) * DateTimeConstants.MILLIS_PER_SECOND
17007:AOR:%(long,long):+(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1175:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) + DateTimeConstants.MILLIS_PER_SECOND
17008:AOR:%(long,long):-(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1175:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) - DateTimeConstants.MILLIS_PER_SECOND
17009:AOR:%(long,long):/(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1175:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) / DateTimeConstants.MILLIS_PER_SECOND
17010:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1176:iFieldType == SECONDS_MILLIS |==> iFieldType <= SECONDS_MILLIS
17011:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1176:iFieldType == SECONDS_MILLIS |==> iFieldType >= SECONDS_MILLIS
17012:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1176:iFieldType == SECONDS_MILLIS |==> false
17013:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1176:0 |==> 1
17014:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1176:0 |==> -1
17015:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1176:dp > 0 |==> dp != 0
17016:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1176:dp > 0 |==> dp >= 0
17017:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1176:dp > 0 |==> false
17018:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1176:iFieldType == SECONDS_MILLIS || dp > 0 |==> iFieldType == SECONDS_MILLIS != dp > 0
17019:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1176:iFieldType == SECONDS_MILLIS || dp > 0 |==> iFieldType == SECONDS_MILLIS
17020:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1176:iFieldType == SECONDS_MILLIS || dp > 0 |==> dp > 0
17021:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1176:iFieldType == SECONDS_MILLIS || dp > 0 |==> true
17022:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1177:out.write('.') |==> <NO-OP>
17023:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1178:3 |==> 0
17024:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1178:3 |==> -3
17025:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1178:FormatUtils.writePaddedInteger(out, dp, 3) |==> <NO-OP>
17026:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1181:iSuffix != null |==> true
17027:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1182:iSuffix.printTo(out, value) |==> <NO-OP>
17028:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1190:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting <= PRINT_ZERO_ALWAYS
17029:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1190:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting >= PRINT_ZERO_ALWAYS
17030:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1190:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> false
17031:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1193:position >= text.length() |==> position == text.length()
17032:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1193:position >= text.length() |==> position > text.length()
17033:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1193:position >= text.length() |==> true
17034:COR:mustParse:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1194:mustParse |==> false
17035:COR:mustParse:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1194:mustParse |==> true
17036:ORU:~(int):+(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1194:~position |==> +position
17037:ORU:~(int):-(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1194:~position |==> -position
17038:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1197:iPrefix != null |==> true
17039:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1198:position = iPrefix.parse(text, position) |==> <NO-OP>
17040:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1199:0 |==> 1
17041:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1199:0 |==> -1
17042:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1199:position >= 0 |==> position == 0
17043:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1199:position >= 0 |==> position > 0
17044:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1199:position >= 0 |==> true
17045:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1201:true |==> false
17046:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1201:mustParse = true |==> <NO-OP>
17047:COR:mustParse:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1204:mustParse |==> false
17048:COR:mustParse:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1204:mustParse |==> true
17049:ORU:~(int):+(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1208:~position |==> +position
17050:ORU:~(int):-(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1208:~position |==> -position
17051:LVR:NEG:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1214:-1 |==> 0
17052:LVR:NEG:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1214:-1 |==> 1
17053:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1215:iSuffix != null |==> true
17054:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1215:iSuffix != null && !mustParse |==> iSuffix != null == !mustParse
17055:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1215:iSuffix != null && !mustParse |==> false
17056:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1215:iSuffix != null && !mustParse |==> iSuffix != null
17057:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1215:iSuffix != null && !mustParse |==> !mustParse
17058:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1218:suffixPos = iSuffix.scan(text, position) |==> <NO-OP>
17059:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1219:0 |==> 1
17060:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1219:0 |==> -1
17061:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1219:suffixPos >= 0 |==> suffixPos == 0
17062:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1219:suffixPos >= 0 |==> suffixPos > 0
17063:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1219:suffixPos >= 0 |==> true
17064:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1221:true |==> false
17065:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1221:mustParse = true |==> <NO-OP>
17066:COR:mustParse:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1224:mustParse |==> false
17067:COR:mustParse:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1224:mustParse |==> true
17068:ORU:~(int):+(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1228:~suffixPos |==> +suffixPos
17069:ORU:~(int):-(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1228:~suffixPos |==> -suffixPos
17070:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1234:!mustParse && !isSupported(period.getPeriodType(), iFieldType) |==> !mustParse == !isSupported(period.getPeriodType(), iFieldType)
17071:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1234:!mustParse && !isSupported(period.getPeriodType(), iFieldType) |==> false
17072:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1234:!mustParse && !isSupported(period.getPeriodType(), iFieldType) |==> !mustParse
17073:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1234:!mustParse && !isSupported(period.getPeriodType(), iFieldType) |==> !isSupported(period.getPeriodType(), iFieldType)
17074:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1241:0 |==> 1
17075:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1241:0 |==> -1
17076:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1241:suffixPos > 0 |==> suffixPos != 0
17077:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1241:suffixPos > 0 |==> suffixPos >= 0
17078:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1241:suffixPos > 0 |==> false
17079:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1242:suffixPos - position |==> suffixPos % position
17080:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1242:suffixPos - position |==> suffixPos * position
17081:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1242:suffixPos - position |==> suffixPos + position
17082:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1242:suffixPos - position |==> suffixPos / position
17083:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1244:text.length() - position |==> text.length() % position
17084:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1244:text.length() - position |==> text.length() * position
17085:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1244:text.length() - position |==> text.length() + position
17086:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1244:text.length() - position |==> text.length() / position
17087:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1248:0 |==> 1
17088:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1248:0 |==> -1
17089:LVR:NEG:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1249:-1 |==> 0
17090:LVR:NEG:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1249:-1 |==> 1
17091:LVR:FALSE:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:false |==> true
17092:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1251:length < limit |==> length != limit
17093:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1251:length < limit |==> length <= limit
17094:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1251:length < limit |==> false
17095:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1252:position + length |==> position % length
17096:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1252:position + length |==> position * length
17097:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1252:position + length |==> position - length
17098:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1252:position + length |==> position / length
17099:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:0 |==> 1
17100:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:0 |==> -1
17101:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length == 0 |==> length <= 0
17102:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length == 0 |==> length >= 0
17103:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length == 0 |==> false
17104:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:c == '-' |==> c <= '-'
17105:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:c == '-' |==> c >= '-'
17106:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:c == '-' |==> false
17107:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:c == '+' |==> c <= '+'
17108:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:c == '+' |==> c >= '+'
17109:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:c == '+' |==> false
17110:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:c == '-' || c == '+' |==> c == '-' != (c == '+')
17111:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:c == '-' || c == '+' |==> c == '-'
17112:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:c == '-' || c == '+' |==> c == '+'
17113:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:c == '-' || c == '+' |==> true
17114:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length == 0 && (c == '-' || c == '+') |==> length == 0 == (c == '-' || c == '+')
17115:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length == 0 && (c == '-' || c == '+') |==> false
17116:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length == 0 && (c == '-' || c == '+') |==> length == 0
17117:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length == 0 && (c == '-' || c == '+') |==> (c == '-' || c == '+')
17118:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length == 0 && (c == '-' || c == '+') && !iRejectSignedValues |==> (length == 0 && (c == '-' || c == '+')) == !iRejectSignedValues
17119:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length == 0 && (c == '-' || c == '+') && !iRejectSignedValues |==> false
17120:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length == 0 && (c == '-' || c == '+') && !iRejectSignedValues |==> length == 0 && (c == '-' || c == '+')
17121:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length == 0 && (c == '-' || c == '+') && !iRejectSignedValues |==> !iRejectSignedValues
17122:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:c == '-' |==> c <= '-'
17123:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:c == '-' |==> c >= '-'
17124:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:c == '-' |==> false
17125:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:1 |==> 0
17126:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:1 |==> -1
17127:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:length + 1 |==> length % 1
17128:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:length + 1 |==> length * 1
17129:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:length + 1 |==> length - 1
17130:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:length + 1 |==> length / 1
17131:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:length + 1 >= limit |==> length + 1 == limit
17132:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:length + 1 >= limit |==> length + 1 > limit
17133:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:length + 1 >= limit |==> true
17134:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:position + length |==> position % length
17135:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:position + length |==> position * length
17136:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:position + length |==> position - length
17137:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:position + length |==> position / length
17138:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:1 |==> 0
17139:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:1 |==> -1
17140:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:position + length + 1 |==> (position + length) % 1
17141:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:position + length + 1 |==> (position + length) * 1
17142:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:position + length + 1 |==> position + length - 1
17143:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:position + length + 1 |==> (position + length) / 1
17144:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:(c = text.charAt(position + length + 1)) < '0' |==> (c = text.charAt(position + length + 1)) != '0'
17145:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:(c = text.charAt(position + length + 1)) < '0' |==> (c = text.charAt(position + length + 1)) <= '0'
17146:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:(c = text.charAt(position + length + 1)) < '0' |==> false
17147:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' |==> length + 1 >= limit != (c = text.charAt(position + length + 1)) < '0'
17148:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' |==> length + 1 >= limit
17149:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' |==> (c = text.charAt(position + length + 1)) < '0'
17150:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' |==> true
17151:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:c > '9' |==> c != '9'
17152:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:c > '9' |==> c >= '9'
17153:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:c > '9' |==> false
17154:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' || c > '9' |==> (length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0') != c > '9'
17155:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' || c > '9' |==> length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0'
17156:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' || c > '9' |==> c > '9'
17157:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' || c > '9' |==> true
17158:COR:negative:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1264:negative |==> false
17159:COR:negative:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1264:negative |==> true
17160:STD:<INC>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1265:length++ |==> <NO-OP>
17161:STD:<INC>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1268:position++ |==> <NO-OP>
17162:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:1 |==> 0
17163:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:1 |==> -1
17164:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:limit + 1 |==> limit % 1
17165:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:limit + 1 |==> limit * 1
17166:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:limit + 1 |==> limit - 1
17167:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:limit + 1 |==> limit / 1
17168:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:text.length() - position |==> text.length() % position
17169:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:text.length() - position |==> text.length() * position
17170:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:text.length() - position |==> text.length() + position
17171:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:text.length() - position |==> text.length() / position
17172:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:limit = Math.min(limit + 1, text.length() - position) |==> <NO-OP>
17173:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:c >= '0' |==> c == '0'
17174:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:c >= '0' |==> c > '0'
17175:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:c >= '0' |==> true
17176:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:c <= '9' |==> c < '9'
17177:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:c <= '9' |==> c == '9'
17178:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:c <= '9' |==> true
17179:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:c >= '0' && c <= '9' |==> c >= '0' == c <= '9'
17180:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:c >= '0' && c <= '9' |==> false
17181:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:c >= '0' && c <= '9' |==> c >= '0'
17182:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:c >= '0' && c <= '9' |==> c <= '9'
17183:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1276:true |==> false
17184:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1276:hasDigits = true |==> <NO-OP>
17185:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:c == '.' |==> c <= '.'
17186:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:c == '.' |==> c >= '.'
17187:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:c == '.' |==> false
17188:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:c == ',' |==> c <= ','
17189:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:c == ',' |==> c >= ','
17190:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:c == ',' |==> false
17191:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:c == '.' || c == ',' |==> c == '.' != (c == ',')
17192:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:c == '.' || c == ',' |==> c == '.'
17193:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:c == '.' || c == ',' |==> c == ','
17194:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:c == '.' || c == ',' |==> true
17195:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1279:iFieldType == SECONDS_MILLIS |==> iFieldType <= SECONDS_MILLIS
17196:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1279:iFieldType == SECONDS_MILLIS |==> iFieldType >= SECONDS_MILLIS
17197:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1279:iFieldType == SECONDS_MILLIS |==> false
17198:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1279:iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType <= SECONDS_OPTIONAL_MILLIS
17199:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1279:iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType >= SECONDS_OPTIONAL_MILLIS
17200:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1279:iFieldType == SECONDS_OPTIONAL_MILLIS |==> false
17201:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1279:iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType == SECONDS_MILLIS != (iFieldType == SECONDS_OPTIONAL_MILLIS)
17202:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1279:iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType == SECONDS_MILLIS
17203:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1279:iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType == SECONDS_OPTIONAL_MILLIS
17204:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1279:iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS |==> true
17205:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:(c == '.' || c == ',') && (iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS) |==> (c == '.' || c == ',') == (iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS)
17206:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1279:(c == '.' || c == ',') && (iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS) |==> false
17207:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:(c == '.' || c == ',') && (iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS) |==> (c == '.' || c == ',')
17208:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1279:(c == '.' || c == ',') && (iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS) |==> (iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS)
17209:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1280:0 |==> 1
17210:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1280:0 |==> -1
17211:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1280:fractPos >= 0 |==> fractPos == 0
17212:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1280:fractPos >= 0 |==> fractPos > 0
17213:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1280:fractPos >= 0 |==> true
17214:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1284:position + length |==> position % length
17215:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1284:position + length |==> position * length
17216:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1284:position + length |==> position - length
17217:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1284:position + length |==> position / length
17218:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1284:1 |==> 0
17219:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1284:1 |==> -1
17220:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1284:position + length + 1 |==> (position + length) % 1
17221:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1284:position + length + 1 |==> (position + length) * 1
17222:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1284:position + length + 1 |==> position + length - 1
17223:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1284:position + length + 1 |==> (position + length) / 1
17224:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1284:fractPos = position + length + 1 |==> <NO-OP>
17225:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1286:1 |==> 0
17226:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1286:1 |==> -1
17227:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1286:limit + 1 |==> limit % 1
17228:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1286:limit + 1 |==> limit * 1
17229:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1286:limit + 1 |==> limit - 1
17230:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1286:limit + 1 |==> limit / 1
17231:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1286:text.length() - position |==> text.length() % position
17232:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1286:text.length() - position |==> text.length() * position
17233:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1286:text.length() - position |==> text.length() + position
17234:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1286:text.length() - position |==> text.length() / position
17235:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1286:limit = Math.min(limit + 1, text.length() - position) |==> <NO-OP>
17236:STD:<INC>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1291:length++ |==> <NO-OP>
17237:COR:hasDigits:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1294:hasDigits |==> false
17238:COR:hasDigits:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1294:hasDigits |==> true
17239:ORU:~(int):+(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1295:~position |==> +position
17240:ORU:~(int):-(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1295:~position |==> -position
17241:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:0 |==> 1
17242:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:0 |==> -1
17243:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:suffixPos >= 0 |==> suffixPos == 0
17244:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:suffixPos >= 0 |==> suffixPos > 0
17245:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:suffixPos >= 0 |==> true
17246:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:position + length |==> position % length
17247:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:position + length |==> position * length
17248:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:position + length |==> position - length
17249:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:position + length |==> position / length
17250:ROR:!=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:position + length != suffixPos |==> position + length < suffixPos
17251:ROR:!=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:position + length != suffixPos |==> position + length > suffixPos
17252:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:position + length != suffixPos |==> true
17253:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:suffixPos >= 0 && position + length != suffixPos |==> suffixPos >= 0 == (position + length != suffixPos)
17254:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:suffixPos >= 0 && position + length != suffixPos |==> false
17255:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:suffixPos >= 0 && position + length != suffixPos |==> suffixPos >= 0
17256:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:suffixPos >= 0 && position + length != suffixPos |==> position + length != suffixPos
17257:ROR:!=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1306:iFieldType != SECONDS_MILLIS |==> iFieldType < SECONDS_MILLIS
17258:ROR:!=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1306:iFieldType != SECONDS_MILLIS |==> iFieldType > SECONDS_MILLIS
17259:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1306:iFieldType != SECONDS_MILLIS |==> true
17260:ROR:!=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1306:iFieldType != SECONDS_OPTIONAL_MILLIS |==> iFieldType < SECONDS_OPTIONAL_MILLIS
17261:ROR:!=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1306:iFieldType != SECONDS_OPTIONAL_MILLIS |==> iFieldType > SECONDS_OPTIONAL_MILLIS
17262:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1306:iFieldType != SECONDS_OPTIONAL_MILLIS |==> true
17263:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1306:iFieldType != SECONDS_MILLIS && iFieldType != SECONDS_OPTIONAL_MILLIS |==> iFieldType != SECONDS_MILLIS == (iFieldType != SECONDS_OPTIONAL_MILLIS)
17264:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1306:iFieldType != SECONDS_MILLIS && iFieldType != SECONDS_OPTIONAL_MILLIS |==> false
17265:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1306:iFieldType != SECONDS_MILLIS && iFieldType != SECONDS_OPTIONAL_MILLIS |==> iFieldType != SECONDS_MILLIS
17266:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1306:iFieldType != SECONDS_MILLIS && iFieldType != SECONDS_OPTIONAL_MILLIS |==> iFieldType != SECONDS_OPTIONAL_MILLIS
17267:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1308:setFieldValue(period, iFieldType, parseInt(text, position, length)) |==> <NO-OP>
17268:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1309:0 |==> 1
17269:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1309:0 |==> -1
17270:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1309:fractPos < 0 |==> fractPos != 0
17271:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1309:fractPos < 0 |==> fractPos <= 0
17272:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1309:fractPos < 0 |==> false
17273:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1310:setFieldValue(period, SECONDS, parseInt(text, position, length)) |==> <NO-OP>
17274:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1311:0 |==> 1
17275:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1311:0 |==> -1
17276:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1311:setFieldValue(period, MILLIS, 0) |==> <NO-OP>
17277:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1313:fractPos - position |==> fractPos % position
17278:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1313:fractPos - position |==> fractPos * position
17279:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1313:fractPos - position |==> fractPos + position
17280:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1313:fractPos - position |==> fractPos / position
17281:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1313:1 |==> 0
17282:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1313:1 |==> -1
17283:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1313:fractPos - position - 1 |==> (fractPos - position) % 1
17284:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1313:fractPos - position - 1 |==> (fractPos - position) * 1
17285:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1313:fractPos - position - 1 |==> fractPos - position + 1
17286:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1313:fractPos - position - 1 |==> (fractPos - position) / 1
17287:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1314:setFieldValue(period, SECONDS, wholeValue) |==> <NO-OP>
17288:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1316:position + length |==> position % length
17289:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1316:position + length |==> position * length
17290:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1316:position + length |==> position - length
17291:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1316:position + length |==> position / length
17292:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1316:position + length - fractPos |==> (position + length) % fractPos
17293:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1316:position + length - fractPos |==> (position + length) * fractPos
17294:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1316:position + length - fractPos |==> position + length + fractPos
17295:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1316:position + length - fractPos |==> (position + length) / fractPos
17296:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1318:0 |==> 1
17297:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1318:0 |==> -1
17298:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1318:fractLen <= 0 |==> fractLen < 0
17299:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1318:fractLen <= 0 |==> fractLen == 0
17300:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1318:fractLen <= 0 |==> true
17301:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1319:0 |==> 1
17302:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1319:0 |==> -1
17303:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1321:3 |==> 0
17304:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1321:3 |==> -3
17305:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1321:fractLen >= 3 |==> fractLen == 3
17306:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1321:fractLen >= 3 |==> fractLen > 3
17307:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1321:fractLen >= 3 |==> true
17308:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1322:3 |==> 0
17309:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1322:3 |==> -3
17310:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1325:1 |==> 0
17311:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1325:1 |==> -1
17312:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1325:fractLen == 1 |==> fractLen <= 1
17313:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1325:fractLen == 1 |==> fractLen >= 1
17314:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1325:fractLen == 1 |==> false
17315:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1326:100 |==> 0
17316:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1326:100 |==> -100
17317:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1326:fractValue *= 100 |==> <NO-OP>
17318:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1328:10 |==> 0
17319:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1328:10 |==> -10
17320:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1328:fractValue *= 10 |==> <NO-OP>
17321:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1331:0 |==> 1
17322:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1331:0 |==> -1
17323:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1331:wholeValue < 0 |==> wholeValue != 0
17324:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1331:wholeValue < 0 |==> wholeValue <= 0
17325:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1331:wholeValue < 0 |==> false
17326:ORU:-(int):+(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1332:-fractValue |==> +fractValue
17327:ORU:-(int):~(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1332:-fractValue |==> ~fractValue
17328:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1332:fractValue = -fractValue |==> <NO-OP>
17329:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1336:setFieldValue(period, MILLIS, fractValue) |==> <NO-OP>
17330:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1339:position += length |==> <NO-OP>
17331:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1341:0 |==> 1
17332:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1341:0 |==> -1
17333:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1341:position >= 0 |==> position == 0
17334:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1341:position >= 0 |==> position > 0
17335:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1341:position >= 0 |==> true
17336:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1341:iSuffix != null |==> true
17337:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1341:position >= 0 && iSuffix != null |==> position >= 0 == (iSuffix != null)
17338:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1341:position >= 0 && iSuffix != null |==> false
17339:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1341:position >= 0 && iSuffix != null |==> position >= 0
17340:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1341:position >= 0 && iSuffix != null |==> iSuffix != null
17341:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1342:position = iSuffix.parse(text, position) |==> <NO-OP>
17342:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1355:10 |==> 0
17343:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1355:10 |==> -10
17344:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1355:length >= 10 |==> length == 10
17345:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1355:length >= 10 |==> length > 10
17346:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1355:length >= 10 |==> true
17347:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1357:position + length |==> position % length
17348:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1357:position + length |==> position * length
17349:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1357:position + length |==> position - length
17350:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1357:position + length |==> position / length
17351:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1359:0 |==> 1
17352:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1359:0 |==> -1
17353:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1359:length <= 0 |==> length < 0
17354:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1359:length <= 0 |==> length == 0
17355:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1359:length <= 0 |==> true
17356:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1360:0 |==> 1
17357:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1360:0 |==> -1
17358:STD:<DEC>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1363:length-- |==> <NO-OP>
17359:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1365:value == '-' |==> value <= '-'
17360:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1365:value == '-' |==> value >= '-'
17361:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1365:value == '-' |==> false
17362:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1366:0 |==> 1
17363:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1366:0 |==> -1
17364:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1366:--length < 0 |==> --length != 0
17365:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1366:--length < 0 |==> --length <= 0
17366:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1366:--length < 0 |==> false
17367:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1367:0 |==> 1
17368:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1367:0 |==> -1
17369:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1369:true |==> false
17370:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1370:value = text.charAt(position++) |==> <NO-OP>
17371:LVR:FALSE:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1372:false |==> true
17372:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1374:value -= '0' |==> <NO-OP>
17373:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1375:0 |==> 1
17374:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1375:0 |==> -1
17375:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1375:length-- > 0 |==> length-- != 0
17376:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1375:length-- > 0 |==> length-- >= 0
17377:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1375:length-- > 0 |==> false
17378:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:3 |==> 0
17379:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:3 |==> -3
17380:SOR:<<(int,int):>>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:value << 3 |==> value >> 3
17381:SOR:<<(int,int):>>>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:value << 3 |==> value >>> 3
17382:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:1 |==> 0
17383:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:1 |==> -1
17384:SOR:<<(int,int):>>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:value << 1 |==> value >> 1
17385:SOR:<<(int,int):>>>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:value << 1 |==> value >>> 1
17386:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:(value << 3) + (value << 1) |==> (value << 3) % (value << 1)
17387:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:(value << 3) + (value << 1) |==> (value << 3) * (value << 1)
17388:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:(value << 3) + (value << 1) |==> (value << 3) - (value << 1)
17389:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:(value << 3) + (value << 1) |==> (value << 3) / (value << 1)
17390:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:((value << 3) + (value << 1)) + text.charAt(position++) |==> ((value << 3) + (value << 1)) % text.charAt(position++)
17391:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:((value << 3) + (value << 1)) + text.charAt(position++) |==> ((value << 3) + (value << 1)) * text.charAt(position++)
17392:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:((value << 3) + (value << 1)) + text.charAt(position++) |==> ((value << 3) + (value << 1)) - text.charAt(position++)
17393:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:((value << 3) + (value << 1)) + text.charAt(position++) |==> ((value << 3) + (value << 1)) / text.charAt(position++)
17394:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:((value << 3) + (value << 1)) + text.charAt(position++) - '0' |==> (((value << 3) + (value << 1)) + text.charAt(position++)) % '0'
17395:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:((value << 3) + (value << 1)) + text.charAt(position++) - '0' |==> (((value << 3) + (value << 1)) + text.charAt(position++)) * '0'
17396:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:((value << 3) + (value << 1)) + text.charAt(position++) - '0' |==> ((value << 3) + (value << 1)) + text.charAt(position++) + '0'
17397:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:((value << 3) + (value << 1)) + text.charAt(position++) - '0' |==> (((value << 3) + (value << 1)) + text.charAt(position++)) / '0'
17398:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:value = ((value << 3) + (value << 1)) + text.charAt(position++) - '0' |==> <NO-OP>
17399:COR:negative:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1378:negative |==> false
17400:COR:negative:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1378:negative |==> true
17401:ORU:-(int):+(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1378:-value |==> +value
17402:ORU:-(int):~(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1378:-value |==> ~value
17403:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1386:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting <= PRINT_ZERO_ALWAYS
17404:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1386:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting >= PRINT_ZERO_ALWAYS
17405:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1386:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> false
17406:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1391:type != null |==> true
17407:LVR:FALSE:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1391:false |==> true
17408:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1391:isSupported(type, iFieldType) == false |==> false
17409:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1391:isSupported(type, iFieldType) == false |==> isSupported(type, iFieldType)
17410:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1391:isSupported(type, iFieldType) == false |==> false
17411:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1391:type != null && isSupported(type, iFieldType) == false |==> type != null == (isSupported(type, iFieldType) == false)
17412:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1391:type != null && isSupported(type, iFieldType) == false |==> false
17413:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1391:type != null && isSupported(type, iFieldType) == false |==> type != null
17414:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1391:type != null && isSupported(type, iFieldType) == false |==> isSupported(type, iFieldType) == false
17415:AOR:*(long,long):%(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1428:seconds * (long)DateTimeConstants.MILLIS_PER_SECOND |==> seconds % (long)DateTimeConstants.MILLIS_PER_SECOND
17416:AOR:*(long,long):+(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1428:seconds * (long)DateTimeConstants.MILLIS_PER_SECOND |==> seconds + (long)DateTimeConstants.MILLIS_PER_SECOND
17417:AOR:*(long,long):-(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1428:seconds * (long)DateTimeConstants.MILLIS_PER_SECOND |==> seconds - (long)DateTimeConstants.MILLIS_PER_SECOND
17418:AOR:*(long,long):/(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1428:seconds * (long)DateTimeConstants.MILLIS_PER_SECOND |==> seconds / (long)DateTimeConstants.MILLIS_PER_SECOND
17419:AOR:+(long,long):%(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1428:(seconds * (long)DateTimeConstants.MILLIS_PER_SECOND) + millis |==> (seconds * (long)DateTimeConstants.MILLIS_PER_SECOND) % millis
17420:AOR:+(long,long):*(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1428:(seconds * (long)DateTimeConstants.MILLIS_PER_SECOND) + millis |==> (seconds * (long)DateTimeConstants.MILLIS_PER_SECOND) * millis
17421:AOR:+(long,long):-(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1428:(seconds * (long)DateTimeConstants.MILLIS_PER_SECOND) + millis |==> (seconds * (long)DateTimeConstants.MILLIS_PER_SECOND) - millis
17422:AOR:+(long,long):/(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1428:(seconds * (long)DateTimeConstants.MILLIS_PER_SECOND) + millis |==> (seconds * (long)DateTimeConstants.MILLIS_PER_SECOND) / millis
17423:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1433:0 |==> 1
17424:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1433:0 |==> -1
17425:ROR:==(long,long):<=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1433:value == 0 |==> value <= 0
17426:ROR:==(long,long):>=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1433:value == 0 |==> value >= 0
17427:ROR:==(long,long):FALSE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1433:value == 0 |==> false
17428:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1438:iFieldFormatters[iFieldType] == this |==> false
17429:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1438:isZero(period) && iFieldFormatters[iFieldType] == this |==> isZero(period) == (iFieldFormatters[iFieldType] == this)
17430:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1438:isZero(period) && iFieldFormatters[iFieldType] == this |==> false
17431:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1438:isZero(period) && iFieldFormatters[iFieldType] == this |==> isZero(period)
17432:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1438:isZero(period) && iFieldFormatters[iFieldType] == this |==> iFieldFormatters[iFieldType] == this
17433:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1439:1 |==> 0
17434:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1439:1 |==> -1
17435:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1439:iFieldType + 1 |==> iFieldType % 1
17436:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1439:iFieldType + 1 |==> iFieldType * 1
17437:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1439:iFieldType + 1 |==> iFieldType - 1
17438:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1439:iFieldType + 1 |==> iFieldType / 1
17439:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1439:i <= MAX_FIELD |==> i < MAX_FIELD
17440:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1439:i <= MAX_FIELD |==> i == MAX_FIELD
17441:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1439:i <= MAX_FIELD |==> true
17442:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1440:iFieldFormatters[i] != null |==> true
17443:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1440:isSupported(type, i) && iFieldFormatters[i] != null |==> isSupported(type, i) == (iFieldFormatters[i] != null)
17444:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1440:isSupported(type, i) && iFieldFormatters[i] != null |==> false
17445:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1440:isSupported(type, i) && iFieldFormatters[i] != null |==> isSupported(type, i)
17446:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1440:isSupported(type, i) && iFieldFormatters[i] != null |==> iFieldFormatters[i] != null
17447:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1449:iFieldFormatters[iFieldType] == this |==> false
17448:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1449:isZero(period) && iFieldFormatters[iFieldType] == this |==> isZero(period) == (iFieldFormatters[iFieldType] == this)
17449:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1449:isZero(period) && iFieldFormatters[iFieldType] == this |==> false
17450:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1449:isZero(period) && iFieldFormatters[iFieldType] == this |==> isZero(period)
17451:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1449:isZero(period) && iFieldFormatters[iFieldType] == this |==> iFieldFormatters[iFieldType] == this
17452:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1450:8 |==> 0
17453:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1450:8 |==> -8
17454:STD:<DEC>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1451:i-- |==> <NO-OP>
17455:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1452:0 |==> 1
17456:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1452:0 |==> -1
17457:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1452:i >= 0 |==> i == 0
17458:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1452:i >= 0 |==> i > 0
17459:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1452:i >= 0 |==> true
17460:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1452:i <= MAX_FIELD |==> i < MAX_FIELD
17461:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1452:i <= MAX_FIELD |==> i == MAX_FIELD
17462:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1452:i <= MAX_FIELD |==> true
17463:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1452:i >= 0 && i <= MAX_FIELD |==> i >= 0 == i <= MAX_FIELD
17464:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1452:i >= 0 && i <= MAX_FIELD |==> false
17465:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1452:i >= 0 && i <= MAX_FIELD |==> i >= 0
17466:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1452:i >= 0 && i <= MAX_FIELD |==> i <= MAX_FIELD
17467:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1453:iFieldFormatters[i] != null |==> true
17468:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1453:isSupported(type, i) && iFieldFormatters[i] != null |==> isSupported(type, i) == (iFieldFormatters[i] != null)
17469:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1453:isSupported(type, i) && iFieldFormatters[i] != null |==> false
17470:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1453:isSupported(type, i) && iFieldFormatters[i] != null |==> isSupported(type, i)
17471:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1453:isSupported(type, i) && iFieldFormatters[i] != null |==> iFieldFormatters[i] != null
17472:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1468:0 |==> 1
17473:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1468:0 |==> -1
17474:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1468:i < isize |==> i != isize
17475:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1468:i < isize |==> i <= isize
17476:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1468:i < isize |==> false
17477:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1469:0 |==> 1
17478:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1469:0 |==> -1
17479:ROR:!=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1469:period.getValue(i) != 0 |==> period.getValue(i) < 0
17480:ROR:!=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1469:period.getValue(i) != 0 |==> period.getValue(i) > 0
17481:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1469:period.getValue(i) != 0 |==> true
17482:LVR:FALSE:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1470:false |==> true
17483:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1473:true |==> false
17484:LVR:FALSE:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isSupported(org.joda.time.PeriodType,int):1479:false |==> true
17485:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isSupported(org.joda.time.PeriodType,int):1498:type.isSupported(DurationFieldType.seconds()) || type.isSupported(DurationFieldType.millis()) |==> type.isSupported(DurationFieldType.seconds()) != type.isSupported(DurationFieldType.millis())
17486:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isSupported(org.joda.time.PeriodType,int):1498:type.isSupported(DurationFieldType.seconds()) || type.isSupported(DurationFieldType.millis()) |==> type.isSupported(DurationFieldType.seconds())
17487:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isSupported(org.joda.time.PeriodType,int):1499:type.isSupported(DurationFieldType.seconds()) || type.isSupported(DurationFieldType.millis()) |==> type.isSupported(DurationFieldType.millis())
17488:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isSupported(org.joda.time.PeriodType,int):1498:type.isSupported(DurationFieldType.seconds()) || type.isSupported(DurationFieldType.millis()) |==> true
17489:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@setFieldValue(org.joda.time.ReadWritablePeriod,int,int):1508:period.setYears(value) |==> <NO-OP>
17490:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@setFieldValue(org.joda.time.ReadWritablePeriod,int,int):1511:period.setMonths(value) |==> <NO-OP>
17491:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@setFieldValue(org.joda.time.ReadWritablePeriod,int,int):1514:period.setWeeks(value) |==> <NO-OP>
17492:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@setFieldValue(org.joda.time.ReadWritablePeriod,int,int):1517:period.setDays(value) |==> <NO-OP>
17493:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@setFieldValue(org.joda.time.ReadWritablePeriod,int,int):1520:period.setHours(value) |==> <NO-OP>
17494:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@setFieldValue(org.joda.time.ReadWritablePeriod,int,int):1523:period.setMinutes(value) |==> <NO-OP>
17495:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@setFieldValue(org.joda.time.ReadWritablePeriod,int,int):1526:period.setSeconds(value) |==> <NO-OP>
17496:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@setFieldValue(org.joda.time.ReadWritablePeriod,int,int):1529:period.setMillis(value) |==> <NO-OP>
17497:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Literal@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1553:0 |==> 1
17498:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Literal@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1553:0 |==> -1
17499:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Literal@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1561:buf.append(iText) |==> <NO-OP>
17500:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Literal@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1565:out.write(iText) |==> <NO-OP>
17501:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1571:true |==> false
17502:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1571:0 |==> 1
17503:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1571:0 |==> -1
17504:COR:periodStr.regionMatches(true, position, iText, 0, iText.length()):TRUE:org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1571:periodStr.regionMatches(true, position, iText, 0, iText.length()) |==> false
17505:COR:periodStr.regionMatches(true, position, iText, 0, iText.length()):FALSE:org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1571:periodStr.regionMatches(true, position, iText, 0, iText.length()) |==> true
17506:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1572:position + iText.length() |==> position % iText.length()
17507:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1572:position + iText.length() |==> position * iText.length()
17508:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1572:position + iText.length() |==> position - iText.length()
17509:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1572:position + iText.length() |==> position / iText.length()
17510:ORU:~(int):+(int):org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1574:~position |==> +position
17511:ORU:~(int):-(int):org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1574:~position |==> -position
17512:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1603:finalText == null |==> false
17513:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1603:finalText == null || text.equals(finalText) |==> finalText == null != text.equals(finalText)
17514:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1603:finalText == null || text.equals(finalText) |==> finalText == null
17515:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1603:finalText == null || text.equals(finalText) |==> text.equals(finalText)
17516:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1603:finalText == null || text.equals(finalText) |==> true
17517:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1604:variants == null |==> false
17518:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1604:0 |==> 1
17519:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1604:0 |==> -1
17520:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1604:variants.length == 0 |==> variants.length <= 0
17521:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1604:variants.length == 0 |==> variants.length >= 0
17522:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1604:variants.length == 0 |==> false
17523:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1604:variants == null || variants.length == 0 |==> variants == null != (variants.length == 0)
17524:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1604:variants == null || variants.length == 0 |==> variants == null
17525:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1604:variants == null || variants.length == 0 |==> variants.length == 0
17526:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1604:variants == null || variants.length == 0 |==> true
17527:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1603:(finalText == null || text.equals(finalText)) && (variants == null || variants.length == 0) |==> (finalText == null || text.equals(finalText)) == (variants == null || variants.length == 0)
17528:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1603:(finalText == null || text.equals(finalText)) && (variants == null || variants.length == 0) |==> false
17529:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1603:(finalText == null || text.equals(finalText)) && (variants == null || variants.length == 0) |==> (finalText == null || text.equals(finalText))
17530:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1604:(finalText == null || text.equals(finalText)) && (variants == null || variants.length == 0) |==> (variants == null || variants.length == 0)
17531:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1610:parsedSet.add(text) |==> <NO-OP>
17532:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1611:parsedSet.add(finalText) |==> <NO-OP>
17533:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1612:variants != null |==> true
17534:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1613:0 |==> 1
17535:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1613:0 |==> -1
17536:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1613:--i >= 0 |==> --i == 0
17537:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1613:--i >= 0 |==> --i > 0
17538:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1613:--i >= 0 |==> true
17539:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1614:parsedSet.add(variants[i]) |==> <NO-OP>
17540:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1618:Collections.reverse(parsedList) |==> <NO-OP>
17541:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1630:sum < stopAt |==> sum != stopAt
17542:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1630:sum < stopAt |==> sum <= stopAt
17543:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1630:sum < stopAt |==> false
17544:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1631:sum += iAfterPrinter.countFieldsToPrint(period, stopAt, locale) |==> <NO-OP>
17545:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1640:before.calculatePrintedLength(period, locale) + after.calculatePrintedLength(period, locale) |==> before.calculatePrintedLength(period, locale) % after.calculatePrintedLength(period, locale)
17546:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1640:before.calculatePrintedLength(period, locale) + after.calculatePrintedLength(period, locale) |==> before.calculatePrintedLength(period, locale) * after.calculatePrintedLength(period, locale)
17547:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1640:before.calculatePrintedLength(period, locale) + after.calculatePrintedLength(period, locale) |==> before.calculatePrintedLength(period, locale) - after.calculatePrintedLength(period, locale)
17548:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1640:before.calculatePrintedLength(period, locale) + after.calculatePrintedLength(period, locale) |==> before.calculatePrintedLength(period, locale) / after.calculatePrintedLength(period, locale)
17549:COR:iUseBefore:TRUE:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1643:iUseBefore |==> false
17550:COR:iUseBefore:FALSE:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1643:iUseBefore |==> true
17551:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1644:1 |==> 0
17552:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1644:1 |==> -1
17553:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1644:0 |==> 1
17554:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1644:0 |==> -1
17555:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1644:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) != 0
17556:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1644:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) >= 0
17557:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1644:before.countFieldsToPrint(period, 1, locale) > 0 |==> false
17558:COR:iUseAfter:TRUE:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1645:iUseAfter |==> false
17559:COR:iUseAfter:FALSE:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1645:iUseAfter |==> true
17560:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1646:2 |==> 0
17561:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1646:2 |==> -2
17562:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1647:0 |==> 1
17563:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1647:0 |==> -1
17564:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1647:afterCount > 0 |==> afterCount != 0
17565:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1647:afterCount > 0 |==> afterCount >= 0
17566:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1647:afterCount > 0 |==> false
17567:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1648:1 |==> 0
17568:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1648:1 |==> -1
17569:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1648:afterCount > 1 |==> afterCount != 1
17570:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1648:afterCount > 1 |==> afterCount >= 1
17571:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1648:afterCount > 1 |==> false
17572:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1648:sum += (afterCount > 1 ? iText : iFinalText).length() |==> <NO-OP>
17573:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1651:sum += iText.length() |==> <NO-OP>
17574:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1654:1 |==> 0
17575:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1654:1 |==> -1
17576:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1654:0 |==> 1
17577:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1654:0 |==> -1
17578:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1654:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) != 0
17579:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1654:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) >= 0
17580:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1654:after.countFieldsToPrint(period, 1, locale) > 0 |==> false
17581:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1654:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> iUseAfter == after.countFieldsToPrint(period, 1, locale) > 0
17582:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1654:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> false
17583:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1654:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> iUseAfter
17584:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1654:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) > 0
17585:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1655:sum += iText.length() |==> <NO-OP>
17586:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1665:before.printTo(buf, period, locale) |==> <NO-OP>
17587:COR:iUseBefore:TRUE:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1666:iUseBefore |==> false
17588:COR:iUseBefore:FALSE:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1666:iUseBefore |==> true
17589:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1667:1 |==> 0
17590:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1667:1 |==> -1
17591:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1667:0 |==> 1
17592:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1667:0 |==> -1
17593:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1667:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) != 0
17594:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1667:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) >= 0
17595:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1667:before.countFieldsToPrint(period, 1, locale) > 0 |==> false
17596:COR:iUseAfter:TRUE:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1668:iUseAfter |==> false
17597:COR:iUseAfter:FALSE:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1668:iUseAfter |==> true
17598:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1669:2 |==> 0
17599:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1669:2 |==> -2
17600:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1670:0 |==> 1
17601:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1670:0 |==> -1
17602:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1670:afterCount > 0 |==> afterCount != 0
17603:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1670:afterCount > 0 |==> afterCount >= 0
17604:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1670:afterCount > 0 |==> false
17605:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1671:1 |==> 0
17606:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1671:1 |==> -1
17607:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1671:afterCount > 1 |==> afterCount != 1
17608:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1671:afterCount > 1 |==> afterCount >= 1
17609:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1671:afterCount > 1 |==> false
17610:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1671:buf.append(afterCount > 1 ? iText : iFinalText) |==> <NO-OP>
17611:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1674:buf.append(iText) |==> <NO-OP>
17612:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1677:1 |==> 0
17613:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1677:1 |==> -1
17614:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1677:0 |==> 1
17615:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1677:0 |==> -1
17616:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1677:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) != 0
17617:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1677:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) >= 0
17618:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1677:after.countFieldsToPrint(period, 1, locale) > 0 |==> false
17619:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1677:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> iUseAfter == after.countFieldsToPrint(period, 1, locale) > 0
17620:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1677:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> false
17621:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1677:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> iUseAfter
17622:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1677:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) > 0
17623:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1678:buf.append(iText) |==> <NO-OP>
17624:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1680:after.printTo(buf, period, locale) |==> <NO-OP>
17625:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1687:before.printTo(out, period, locale) |==> <NO-OP>
17626:COR:iUseBefore:TRUE:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1688:iUseBefore |==> false
17627:COR:iUseBefore:FALSE:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1688:iUseBefore |==> true
17628:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1689:1 |==> 0
17629:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1689:1 |==> -1
17630:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1689:0 |==> 1
17631:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1689:0 |==> -1
17632:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1689:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) != 0
17633:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1689:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) >= 0
17634:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1689:before.countFieldsToPrint(period, 1, locale) > 0 |==> false
17635:COR:iUseAfter:TRUE:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1690:iUseAfter |==> false
17636:COR:iUseAfter:FALSE:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1690:iUseAfter |==> true
17637:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1691:2 |==> 0
17638:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1691:2 |==> -2
17639:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1692:0 |==> 1
17640:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1692:0 |==> -1
17641:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1692:afterCount > 0 |==> afterCount != 0
17642:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1692:afterCount > 0 |==> afterCount >= 0
17643:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1692:afterCount > 0 |==> false
17644:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1693:1 |==> 0
17645:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1693:1 |==> -1
17646:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1693:afterCount > 1 |==> afterCount != 1
17647:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1693:afterCount > 1 |==> afterCount >= 1
17648:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1693:afterCount > 1 |==> false
17649:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1693:out.write(afterCount > 1 ? iText : iFinalText) |==> <NO-OP>
17650:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1696:out.write(iText) |==> <NO-OP>
17651:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1699:1 |==> 0
17652:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1699:1 |==> -1
17653:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1699:0 |==> 1
17654:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1699:0 |==> -1
17655:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1699:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) != 0
17656:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1699:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) >= 0
17657:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1699:after.countFieldsToPrint(period, 1, locale) > 0 |==> false
17658:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1699:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> iUseAfter == after.countFieldsToPrint(period, 1, locale) > 0
17659:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1699:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> false
17660:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1699:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> iUseAfter
17661:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1699:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) > 0
17662:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1700:out.write(iText) |==> <NO-OP>
17663:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1702:after.printTo(out, period, locale) |==> <NO-OP>
17664:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1709:position = iBeforeParser.parseInto(period, periodStr, position, locale) |==> <NO-OP>
17665:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1711:0 |==> 1
17666:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1711:0 |==> -1
17667:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1711:position < 0 |==> position != 0
17668:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1711:position < 0 |==> position <= 0
17669:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1711:position < 0 |==> false
17670:LVR:FALSE:TRUE:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1715:false |==> true
17671:LVR:NEG:0:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1716:-1 |==> 0
17672:LVR:NEG:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1716:-1 |==> 1
17673:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1717:position > oldPos |==> position != oldPos
17674:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1717:position > oldPos |==> position >= oldPos
17675:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1717:position > oldPos |==> false
17676:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1721:0 |==> 1
17677:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1721:0 |==> -1
17678:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1721:i < length |==> i != length
17679:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1721:i < length |==> i <= length
17680:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1721:i < length |==> false
17681:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1723:parsedForm == null |==> false
17682:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1723:0 |==> 1
17683:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1723:0 |==> -1
17684:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1723:parsedForm.length() == 0 |==> parsedForm.length() <= 0
17685:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1723:parsedForm.length() == 0 |==> parsedForm.length() >= 0
17686:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1723:parsedForm.length() == 0 |==> false
17687:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1723:parsedForm == null || parsedForm.length() == 0 |==> parsedForm == null != (parsedForm.length() == 0)
17688:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1723:parsedForm == null || parsedForm.length() == 0 |==> parsedForm == null
17689:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1723:parsedForm == null || parsedForm.length() == 0 |==> parsedForm.length() == 0
17690:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1723:parsedForm == null || parsedForm.length() == 0 |==> true
17691:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1725:true |==> false
17692:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1725:0 |==> 1
17693:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1725:0 |==> -1
17694:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1723:(parsedForm == null || parsedForm.length() == 0) || periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length()) |==> (parsedForm == null || parsedForm.length() == 0) != periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length())
17695:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1723:(parsedForm == null || parsedForm.length() == 0) || periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length()) |==> (parsedForm == null || parsedForm.length() == 0)
17696:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1724:(parsedForm == null || parsedForm.length() == 0) || periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length()) |==> periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length())
17697:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1723:(parsedForm == null || parsedForm.length() == 0) || periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length()) |==> true
17698:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1727:parsedForm == null |==> false
17699:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1727:0 |==> 1
17700:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1727:0 |==> -1
17701:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1727:parsedFormLength = (parsedForm == null ? 0 : parsedForm.length()) |==> <NO-OP>
17702:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1728:position += parsedFormLength |==> <NO-OP>
17703:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1729:true |==> false
17704:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1729:found = true |==> <NO-OP>
17705:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1735:oldPos = position |==> <NO-OP>
17706:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1736:position = iAfterParser.parseInto(period, periodStr, position, locale) |==> <NO-OP>
17707:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1738:0 |==> 1
17708:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1738:0 |==> -1
17709:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1738:position < 0 |==> position != 0
17710:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1738:position < 0 |==> position <= 0
17711:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1738:position < 0 |==> false
17712:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1742:position == oldPos |==> position <= oldPos
17713:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1742:position == oldPos |==> position >= oldPos
17714:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1742:position == oldPos |==> false
17715:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1742:found && position == oldPos |==> found == (position == oldPos)
17716:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1742:found && position == oldPos |==> false
17717:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1742:found && position == oldPos |==> found
17718:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1742:found && position == oldPos |==> position == oldPos
17719:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1742:0 |==> 1
17720:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1742:0 |==> -1
17721:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1742:parsedFormLength > 0 |==> parsedFormLength != 0
17722:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1742:parsedFormLength > 0 |==> parsedFormLength >= 0
17723:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1742:parsedFormLength > 0 |==> false
17724:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1742:found && position == oldPos && parsedFormLength > 0 |==> (found && position == oldPos) == parsedFormLength > 0
17725:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1742:found && position == oldPos && parsedFormLength > 0 |==> false
17726:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1742:found && position == oldPos && parsedFormLength > 0 |==> found && position == oldPos
17727:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1742:found && position == oldPos && parsedFormLength > 0 |==> parsedFormLength > 0
17728:ORU:~(int):+(int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1744:~oldPos |==> +oldPos
17729:ORU:~(int):-(int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1744:~oldPos |==> -oldPos
17730:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1747:position > oldPos |==> position != oldPos
17731:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1747:position > oldPos |==> position >= oldPos
17732:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1747:position > oldPos |==> false
17733:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1747:position > oldPos && !found |==> position > oldPos == !found
17734:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1747:position > oldPos && !found |==> false
17735:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1747:position > oldPos && !found |==> position > oldPos
17736:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1747:position > oldPos && !found |==> !found
17737:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1747:position > oldPos && !found && !iUseBefore |==> (position > oldPos && !found) == !iUseBefore
17738:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1747:position > oldPos && !found && !iUseBefore |==> false
17739:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1747:position > oldPos && !found && !iUseBefore |==> position > oldPos && !found
17740:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1747:position > oldPos && !found && !iUseBefore |==> !iUseBefore
17741:ORU:~(int):+(int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1749:~oldPos |==> +oldPos
17742:ORU:~(int):-(int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1749:~oldPos |==> -oldPos
17743:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@finish(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):1756:iAfterPrinter = afterPrinter |==> <NO-OP>
17744:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@finish(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):1757:iAfterParser = afterParser |==> <NO-OP>
17745:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1776:decompose(elementPairs, printerList, parserList) |==> <NO-OP>
17746:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1778:0 |==> 1
17747:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1778:0 |==> -1
17748:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1778:printerList.size() <= 0 |==> printerList.size() < 0
17749:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1778:printerList.size() <= 0 |==> printerList.size() == 0
17750:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1778:printerList.size() <= 0 |==> true
17751:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1785:0 |==> 1
17752:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1785:0 |==> -1
17753:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1785:parserList.size() <= 0 |==> parserList.size() < 0
17754:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1785:parserList.size() <= 0 |==> parserList.size() == 0
17755:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1785:parserList.size() <= 0 |==> true
17756:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1794:0 |==> 1
17757:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1794:0 |==> -1
17758:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1796:sum < stopAt |==> sum != stopAt
17759:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1796:sum < stopAt |==> sum <= stopAt
17760:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1796:sum < stopAt |==> false
17761:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1796:0 |==> 1
17762:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1796:0 |==> -1
17763:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1796:--i >= 0 |==> --i == 0
17764:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1796:--i >= 0 |==> --i > 0
17765:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1796:--i >= 0 |==> true
17766:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1796:sum < stopAt && --i >= 0 |==> sum < stopAt == --i >= 0
17767:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1796:sum < stopAt && --i >= 0 |==> false
17768:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1796:sum < stopAt && --i >= 0 |==> sum < stopAt
17769:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1796:sum < stopAt && --i >= 0 |==> --i >= 0
17770:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1797:sum += printers[i].countFieldsToPrint(period, Integer.MAX_VALUE, locale) |==> <NO-OP>
17771:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Composite@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1803:0 |==> 1
17772:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1803:0 |==> -1
17773:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Composite@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1805:0 |==> 1
17774:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1805:0 |==> -1
17775:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1805:--i >= 0 |==> --i == 0
17776:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1805:--i >= 0 |==> --i > 0
17777:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1805:--i >= 0 |==> true
17778:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Composite@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1806:sum += printers[i].calculatePrintedLength(period, locale) |==> <NO-OP>
17779:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1814:0 |==> 1
17780:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1814:0 |==> -1
17781:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1814:i < len |==> i != len
17782:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1814:i < len |==> i <= len
17783:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1814:i < len |==> false
17784:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1815:printers[i].printTo(buf, period, locale) |==> <NO-OP>
17785:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1822:0 |==> 1
17786:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1822:0 |==> -1
17787:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1822:i < len |==> i != len
17788:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1822:i < len |==> i <= len
17789:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1822:i < len |==> false
17790:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1823:printers[i].printTo(out, period, locale) |==> <NO-OP>
17791:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1831:parsers == null |==> false
17792:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1836:0 |==> 1
17793:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1836:0 |==> -1
17794:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1836:i < len |==> i != len
17795:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1836:i < len |==> i <= len
17796:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1836:i < len |==> false
17797:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1836:0 |==> 1
17798:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1836:0 |==> -1
17799:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1836:position >= 0 |==> position == 0
17800:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1836:position >= 0 |==> position > 0
17801:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1836:position >= 0 |==> true
17802:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1836:i < len && position >= 0 |==> i < len == position >= 0
17803:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1836:i < len && position >= 0 |==> false
17804:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1836:i < len && position >= 0 |==> i < len
17805:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1836:i < len && position >= 0 |==> position >= 0
17806:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1837:position = parsers[i].parseInto(period, periodStr, position, locale) |==> <NO-OP>
17807:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1844:0 |==> 1
17808:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1844:0 |==> -1
17809:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1844:i < size |==> i != size
17810:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1844:i < size |==> i <= size
17811:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1844:i < size |==> false
17812:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1844:2 |==> 0
17813:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1844:2 |==> -2
17814:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1848:addArrayToList(printerList, ((Composite)element).iPrinters) |==> <NO-OP>
17815:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1850:printerList.add(element) |==> <NO-OP>
17816:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1854:1 |==> 0
17817:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1854:1 |==> -1
17818:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1854:i + 1 |==> i % 1
17819:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1854:i + 1 |==> i * 1
17820:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1854:i + 1 |==> i - 1
17821:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1854:i + 1 |==> i / 1
17822:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1854:element = elementPairs.get(i + 1) |==> <NO-OP>
17823:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1857:addArrayToList(parserList, ((Composite)element).iParsers) |==> <NO-OP>
17824:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1859:parserList.add(element) |==> <NO-OP>
17825:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):1866:array != null |==> true
17826:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):1867:0 |==> 1
17827:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):1867:0 |==> -1
17828:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):1867:i < array.length |==> i != array.length
17829:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):1867:i < array.length |==> i <= array.length
17830:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):1867:i < array.length |==> false
17831:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):1868:list.add(array[i]) |==> <NO-OP>
17832:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.CachedDateTimeZone:45:i == null |==> false
17833:LVR:POS:0:org.joda.time.tz.CachedDateTimeZone:48:512 |==> 0
17834:LVR:POS:NEG:org.joda.time.tz.CachedDateTimeZone:48:512 |==> -512
17835:STD:<DEC>:<NO-OP>:org.joda.time.tz.CachedDateTimeZone:52:cacheSize-- |==> <NO-OP>
17836:LVR:0:POS:org.joda.time.tz.CachedDateTimeZone:53:0 |==> 1
17837:LVR:0:NEG:org.joda.time.tz.CachedDateTimeZone:53:0 |==> -1
17838:LVR:0:POS:org.joda.time.tz.CachedDateTimeZone:54:0 |==> 1
17839:LVR:0:NEG:org.joda.time.tz.CachedDateTimeZone:54:0 |==> -1
17840:ROR:>(int,int):!=(int,int):org.joda.time.tz.CachedDateTimeZone:54:cacheSize > 0 |==> cacheSize != 0
17841:ROR:>(int,int):>=(int,int):org.joda.time.tz.CachedDateTimeZone:54:cacheSize > 0 |==> cacheSize >= 0
17842:ROR:>(int,int):FALSE(int,int):org.joda.time.tz.CachedDateTimeZone:54:cacheSize > 0 |==> false
17843:STD:<INC>:<NO-OP>:org.joda.time.tz.CachedDateTimeZone:55:shift++ |==> <NO-OP>
17844:LVR:POS:0:org.joda.time.tz.CachedDateTimeZone:56:1 |==> 0
17845:LVR:POS:NEG:org.joda.time.tz.CachedDateTimeZone:56:1 |==> -1
17846:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.CachedDateTimeZone:56:cacheSize >>= 1 |==> <NO-OP>
17847:LVR:POS:0:org.joda.time.tz.CachedDateTimeZone:58:1 |==> 0
17848:LVR:POS:NEG:org.joda.time.tz.CachedDateTimeZone:58:1 |==> -1
17849:SOR:<<(int,int):>>(int,int):org.joda.time.tz.CachedDateTimeZone:58:1 << shift |==> 1 >> shift
17850:SOR:<<(int,int):>>>(int,int):org.joda.time.tz.CachedDateTimeZone:58:1 << shift |==> 1 >>> shift
17851:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.CachedDateTimeZone:58:cacheSize = 1 << shift |==> <NO-OP>
17852:LVR:POS:0:org.joda.time.tz.CachedDateTimeZone:61:1 |==> 0
17853:LVR:POS:NEG:org.joda.time.tz.CachedDateTimeZone:61:1 |==> -1
17854:AOR:-(int,int):%(int,int):org.joda.time.tz.CachedDateTimeZone:61:cacheSize - 1 |==> cacheSize % 1
17855:AOR:-(int,int):*(int,int):org.joda.time.tz.CachedDateTimeZone:61:cacheSize - 1 |==> cacheSize * 1
17856:AOR:-(int,int):+(int,int):org.joda.time.tz.CachedDateTimeZone:61:cacheSize - 1 |==> cacheSize + 1
17857:AOR:-(int,int):/(int,int):org.joda.time.tz.CachedDateTimeZone:61:cacheSize - 1 |==> cacheSize / 1
17858:LVR:POS:0:org.joda.time.tz.CachedDateTimeZone:84:1 |==> 0
17859:LVR:POS:NEG:org.joda.time.tz.CachedDateTimeZone:84:1 |==> -1
17860:AOR:+(int,int):%(int,int):org.joda.time.tz.CachedDateTimeZone:84:cInfoCacheMask + 1 |==> cInfoCacheMask % 1
17861:AOR:+(int,int):*(int,int):org.joda.time.tz.CachedDateTimeZone:84:cInfoCacheMask + 1 |==> cInfoCacheMask * 1
17862:AOR:+(int,int):-(int,int):org.joda.time.tz.CachedDateTimeZone:84:cInfoCacheMask + 1 |==> cInfoCacheMask - 1
17863:AOR:+(int,int):/(int,int):org.joda.time.tz.CachedDateTimeZone:84:cInfoCacheMask + 1 |==> cInfoCacheMask / 1
17864:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.CachedDateTimeZone@equals(java.lang.Object):127:this == obj |==> false
17865:LVR:TRUE:FALSE:org.joda.time.tz.CachedDateTimeZone@equals(java.lang.Object):128:true |==> false
17866:LVR:FALSE:TRUE:org.joda.time.tz.CachedDateTimeZone@equals(java.lang.Object):133:false |==> true
17867:LVR:POS:0:org.joda.time.tz.CachedDateTimeZone@getInfo(long):140:32 |==> 0
17868:LVR:POS:NEG:org.joda.time.tz.CachedDateTimeZone@getInfo(long):140:32 |==> -32
17869:SOR:>>(long,int):<<(long,int):org.joda.time.tz.CachedDateTimeZone@getInfo(long):140:millis >> 32 |==> millis << 32
17870:SOR:>>(long,int):>>>(long,int):org.joda.time.tz.CachedDateTimeZone@getInfo(long):140:millis >> 32 |==> millis >>> 32
17871:LOR:&(int,int):^(int,int):org.joda.time.tz.CachedDateTimeZone@getInfo(long):142:period & cInfoCacheMask |==> period ^ cInfoCacheMask
17872:LOR:&(int,int):|(int,int):org.joda.time.tz.CachedDateTimeZone@getInfo(long):142:period & cInfoCacheMask |==> period | cInfoCacheMask
17873:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.CachedDateTimeZone@getInfo(long):144:info == null |==> false
17874:LVR:POS:0:org.joda.time.tz.CachedDateTimeZone@getInfo(long):144:32 |==> 0
17875:LVR:POS:NEG:org.joda.time.tz.CachedDateTimeZone@getInfo(long):144:32 |==> -32
17876:SOR:>>(long,int):<<(long,int):org.joda.time.tz.CachedDateTimeZone@getInfo(long):144:info.iPeriodStart >> 32 |==> info.iPeriodStart << 32
17877:SOR:>>(long,int):>>>(long,int):org.joda.time.tz.CachedDateTimeZone@getInfo(long):144:info.iPeriodStart >> 32 |==> info.iPeriodStart >>> 32
17878:ROR:!=(int,int):<(int,int):org.joda.time.tz.CachedDateTimeZone@getInfo(long):144:(int)((info.iPeriodStart >> 32)) != period |==> (int)((info.iPeriodStart >> 32)) < period
17879:ROR:!=(int,int):>(int,int):org.joda.time.tz.CachedDateTimeZone@getInfo(long):144:(int)((info.iPeriodStart >> 32)) != period |==> (int)((info.iPeriodStart >> 32)) > period
17880:ROR:!=(int,int):TRUE(int,int):org.joda.time.tz.CachedDateTimeZone@getInfo(long):144:(int)((info.iPeriodStart >> 32)) != period |==> true
17881:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.tz.CachedDateTimeZone@getInfo(long):144:info == null || (int)((info.iPeriodStart >> 32)) != period |==> info == null != ((int)((info.iPeriodStart >> 32)) != period)
17882:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.CachedDateTimeZone@getInfo(long):144:info == null || (int)((info.iPeriodStart >> 32)) != period |==> info == null
17883:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.CachedDateTimeZone@getInfo(long):144:info == null || (int)((info.iPeriodStart >> 32)) != period |==> (int)((info.iPeriodStart >> 32)) != period
17884:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.tz.CachedDateTimeZone@getInfo(long):144:info == null || (int)((info.iPeriodStart >> 32)) != period |==> true
17885:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.CachedDateTimeZone@getInfo(long):145:info = createInfo(millis) |==> <NO-OP>
17886:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.CachedDateTimeZone@getInfo(long):146:cache[index] = info |==> <NO-OP>
17887:LVR:POS:0:org.joda.time.tz.CachedDateTimeZone@createInfo(long):152:4294967295L |==> 0L
17888:LVR:POS:NEG:org.joda.time.tz.CachedDateTimeZone@createInfo(long):152:4294967295L |==> -4294967295L
17889:LVR:POS:0:org.joda.time.tz.CachedDateTimeZone@createInfo(long):152:32 |==> 0
17890:LVR:POS:NEG:org.joda.time.tz.CachedDateTimeZone@createInfo(long):152:32 |==> -32
17891:SOR:<<(long,int):>>(long,int):org.joda.time.tz.CachedDateTimeZone@createInfo(long):152:4294967295L << 32 |==> 4294967295L >> 32
17892:SOR:<<(long,int):>>>(long,int):org.joda.time.tz.CachedDateTimeZone@createInfo(long):152:4294967295L << 32 |==> 4294967295L >>> 32
17893:LOR:&(long,long):^(long,long):org.joda.time.tz.CachedDateTimeZone@createInfo(long):152:millis & (4294967295L << 32) |==> millis ^ (4294967295L << 32)
17894:LOR:&(long,long):|(long,long):org.joda.time.tz.CachedDateTimeZone@createInfo(long):152:millis & (4294967295L << 32) |==> millis | (4294967295L << 32)
17895:LVR:POS:0:org.joda.time.tz.CachedDateTimeZone@createInfo(long):155:4294967295L |==> 0L
17896:LVR:POS:NEG:org.joda.time.tz.CachedDateTimeZone@createInfo(long):155:4294967295L |==> -4294967295L
17897:LOR:|(long,long):&(long,long):org.joda.time.tz.CachedDateTimeZone@createInfo(long):155:periodStart | 4294967295L |==> periodStart & 4294967295L
17898:LOR:|(long,long):^(long,long):org.joda.time.tz.CachedDateTimeZone@createInfo(long):155:periodStart | 4294967295L |==> periodStart ^ 4294967295L
17899:ROR:==(long,long):<=(long,long):org.joda.time.tz.CachedDateTimeZone@createInfo(long):159:next == periodStart |==> next <= periodStart
17900:ROR:==(long,long):>=(long,long):org.joda.time.tz.CachedDateTimeZone@createInfo(long):159:next == periodStart |==> next >= periodStart
17901:ROR:==(long,long):FALSE(long,long):org.joda.time.tz.CachedDateTimeZone@createInfo(long):159:next == periodStart |==> false
17902:ROR:>(long,long):!=(long,long):org.joda.time.tz.CachedDateTimeZone@createInfo(long):159:next > end |==> next != end
17903:ROR:>(long,long):>=(long,long):org.joda.time.tz.CachedDateTimeZone@createInfo(long):159:next > end |==> next >= end
17904:ROR:>(long,long):FALSE(long,long):org.joda.time.tz.CachedDateTimeZone@createInfo(long):159:next > end |==> false
17905:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.tz.CachedDateTimeZone@createInfo(long):159:next == periodStart || next > end |==> next == periodStart != next > end
17906:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.CachedDateTimeZone@createInfo(long):159:next == periodStart || next > end |==> next == periodStart
17907:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.CachedDateTimeZone@createInfo(long):159:next == periodStart || next > end |==> next > end
17908:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.tz.CachedDateTimeZone@createInfo(long):159:next == periodStart || next > end |==> true
17909:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.CachedDateTimeZone@createInfo(long):162:periodStart = next |==> <NO-OP>
17910:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.CachedDateTimeZone@createInfo(long):163:chain = (chain.iNextInfo = new Info(iZone, periodStart)) |==> <NO-OP>
17911:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.CachedDateTimeZone$Info@getNameKey(long):186:iNextInfo == null |==> false
17912:ROR:<(long,long):!=(long,long):org.joda.time.tz.CachedDateTimeZone$Info@getNameKey(long):186:millis < iNextInfo.iPeriodStart |==> millis != iNextInfo.iPeriodStart
17913:ROR:<(long,long):<=(long,long):org.joda.time.tz.CachedDateTimeZone$Info@getNameKey(long):186:millis < iNextInfo.iPeriodStart |==> millis <= iNextInfo.iPeriodStart
17914:ROR:<(long,long):FALSE(long,long):org.joda.time.tz.CachedDateTimeZone$Info@getNameKey(long):186:millis < iNextInfo.iPeriodStart |==> false
17915:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.tz.CachedDateTimeZone$Info@getNameKey(long):186:iNextInfo == null || millis < iNextInfo.iPeriodStart |==> iNextInfo == null != millis < iNextInfo.iPeriodStart
17916:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.CachedDateTimeZone$Info@getNameKey(long):186:iNextInfo == null || millis < iNextInfo.iPeriodStart |==> iNextInfo == null
17917:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.CachedDateTimeZone$Info@getNameKey(long):186:iNextInfo == null || millis < iNextInfo.iPeriodStart |==> millis < iNextInfo.iPeriodStart
17918:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.tz.CachedDateTimeZone$Info@getNameKey(long):186:iNextInfo == null || millis < iNextInfo.iPeriodStart |==> true
17919:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.CachedDateTimeZone$Info@getNameKey(long):187:iNameKey == null |==> false
17920:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.CachedDateTimeZone$Info@getNameKey(long):188:iNameKey = iZoneRef.getNameKey(iPeriodStart) |==> <NO-OP>
17921:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.CachedDateTimeZone$Info@getOffset(long):196:iNextInfo == null |==> false
17922:ROR:<(long,long):!=(long,long):org.joda.time.tz.CachedDateTimeZone$Info@getOffset(long):196:millis < iNextInfo.iPeriodStart |==> millis != iNextInfo.iPeriodStart
17923:ROR:<(long,long):<=(long,long):org.joda.time.tz.CachedDateTimeZone$Info@getOffset(long):196:millis < iNextInfo.iPeriodStart |==> millis <= iNextInfo.iPeriodStart
17924:ROR:<(long,long):FALSE(long,long):org.joda.time.tz.CachedDateTimeZone$Info@getOffset(long):196:millis < iNextInfo.iPeriodStart |==> false
17925:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.tz.CachedDateTimeZone$Info@getOffset(long):196:iNextInfo == null || millis < iNextInfo.iPeriodStart |==> iNextInfo == null != millis < iNextInfo.iPeriodStart
17926:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.CachedDateTimeZone$Info@getOffset(long):196:iNextInfo == null || millis < iNextInfo.iPeriodStart |==> iNextInfo == null
17927:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.CachedDateTimeZone$Info@getOffset(long):196:iNextInfo == null || millis < iNextInfo.iPeriodStart |==> millis < iNextInfo.iPeriodStart
17928:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.tz.CachedDateTimeZone$Info@getOffset(long):196:iNextInfo == null || millis < iNextInfo.iPeriodStart |==> true
17929:ROR:==(int,int):<=(int,int):org.joda.time.tz.CachedDateTimeZone$Info@getOffset(long):197:iOffset == Integer.MIN_VALUE |==> iOffset <= Integer.MIN_VALUE
17930:ROR:==(int,int):>=(int,int):org.joda.time.tz.CachedDateTimeZone$Info@getOffset(long):197:iOffset == Integer.MIN_VALUE |==> iOffset >= Integer.MIN_VALUE
17931:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.CachedDateTimeZone$Info@getOffset(long):197:iOffset == Integer.MIN_VALUE |==> false
17932:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.CachedDateTimeZone$Info@getOffset(long):198:iOffset = iZoneRef.getOffset(iPeriodStart) |==> <NO-OP>
17933:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.CachedDateTimeZone$Info@getStandardOffset(long):206:iNextInfo == null |==> false
17934:ROR:<(long,long):!=(long,long):org.joda.time.tz.CachedDateTimeZone$Info@getStandardOffset(long):206:millis < iNextInfo.iPeriodStart |==> millis != iNextInfo.iPeriodStart
17935:ROR:<(long,long):<=(long,long):org.joda.time.tz.CachedDateTimeZone$Info@getStandardOffset(long):206:millis < iNextInfo.iPeriodStart |==> millis <= iNextInfo.iPeriodStart
17936:ROR:<(long,long):FALSE(long,long):org.joda.time.tz.CachedDateTimeZone$Info@getStandardOffset(long):206:millis < iNextInfo.iPeriodStart |==> false
17937:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.tz.CachedDateTimeZone$Info@getStandardOffset(long):206:iNextInfo == null || millis < iNextInfo.iPeriodStart |==> iNextInfo == null != millis < iNextInfo.iPeriodStart
17938:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.CachedDateTimeZone$Info@getStandardOffset(long):206:iNextInfo == null || millis < iNextInfo.iPeriodStart |==> iNextInfo == null
17939:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.CachedDateTimeZone$Info@getStandardOffset(long):206:iNextInfo == null || millis < iNextInfo.iPeriodStart |==> millis < iNextInfo.iPeriodStart
17940:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.tz.CachedDateTimeZone$Info@getStandardOffset(long):206:iNextInfo == null || millis < iNextInfo.iPeriodStart |==> true
17941:ROR:==(int,int):<=(int,int):org.joda.time.tz.CachedDateTimeZone$Info@getStandardOffset(long):207:iStandardOffset == Integer.MIN_VALUE |==> iStandardOffset <= Integer.MIN_VALUE
17942:ROR:==(int,int):>=(int,int):org.joda.time.tz.CachedDateTimeZone$Info@getStandardOffset(long):207:iStandardOffset == Integer.MIN_VALUE |==> iStandardOffset >= Integer.MIN_VALUE
17943:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.CachedDateTimeZone$Info@getStandardOffset(long):207:iStandardOffset == Integer.MIN_VALUE |==> false
17944:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.CachedDateTimeZone$Info@getStandardOffset(long):208:iStandardOffset = iZoneRef.getStandardOffset(iPeriodStart) |==> <NO-OP>
17945:COR:fixed.equals(DateTimeZone.UTC):TRUE:org.joda.time.tz.DateTimeZoneBuilder@readFrom(java.io.DataInput,java.lang.String):114:fixed.equals(DateTimeZone.UTC) |==> false
17946:COR:fixed.equals(DateTimeZone.UTC):FALSE:org.joda.time.tz.DateTimeZoneBuilder@readFrom(java.io.DataInput,java.lang.String):114:fixed.equals(DateTimeZone.UTC) |==> true
17947:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@readFrom(java.io.DataInput,java.lang.String):115:fixed = DateTimeZone.UTC |==> <NO-OP>
17948:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):140:30 |==> 0
17949:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):140:30 |==> -30
17950:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):140:60000L |==> 0L
17951:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):140:60000L |==> -60000L
17952:AOR:*(long,long):%(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):140:30 * 60000L |==> 30 % 60000L
17953:AOR:*(long,long):+(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):140:30 * 60000L |==> 30 + 60000L
17954:AOR:*(long,long):-(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):140:30 * 60000L |==> 30 - 60000L
17955:AOR:*(long,long):/(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):140:30 * 60000L |==> 30 / 60000L
17956:AOR:%(long,long):*(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):140:millis % (30 * 60000L) |==> millis * (30 * 60000L)
17957:AOR:%(long,long):+(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):140:millis % (30 * 60000L) |==> millis + (30 * 60000L)
17958:AOR:%(long,long):-(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):140:millis % (30 * 60000L) |==> millis - (30 * 60000L)
17959:AOR:%(long,long):/(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):140:millis % (30 * 60000L) |==> millis / (30 * 60000L)
17960:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):140:0 |==> 1
17961:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):140:0 |==> -1
17962:ROR:==(long,long):<=(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):140:millis % (30 * 60000L) == 0 |==> millis % (30 * 60000L) <= 0
17963:ROR:==(long,long):>=(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):140:millis % (30 * 60000L) == 0 |==> millis % (30 * 60000L) >= 0
17964:ROR:==(long,long):FALSE(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):140:millis % (30 * 60000L) == 0 |==> false
17965:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):142:30 |==> 0
17966:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):142:30 |==> -30
17967:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):142:60000L |==> 0L
17968:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):142:60000L |==> -60000L
17969:AOR:*(long,long):%(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):142:30 * 60000L |==> 30 % 60000L
17970:AOR:*(long,long):+(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):142:30 * 60000L |==> 30 + 60000L
17971:AOR:*(long,long):-(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):142:30 * 60000L |==> 30 - 60000L
17972:AOR:*(long,long):/(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):142:30 * 60000L |==> 30 / 60000L
17973:AOR:/(long,long):%(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):142:millis / (30 * 60000L) |==> millis % (30 * 60000L)
17974:AOR:/(long,long):*(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):142:millis / (30 * 60000L) |==> millis * (30 * 60000L)
17975:AOR:/(long,long):+(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):142:millis / (30 * 60000L) |==> millis + (30 * 60000L)
17976:AOR:/(long,long):-(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):142:millis / (30 * 60000L) |==> millis - (30 * 60000L)
17977:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):143:64 |==> 0
17978:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):143:64 |==> -64
17979:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):143:6 |==> 0
17980:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):143:6 |==> -6
17981:AOR:-(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):143:64 - 6 |==> 64 % 6
17982:AOR:-(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):143:64 - 6 |==> 64 * 6
17983:AOR:-(int,int):+(int,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):143:64 - 6 |==> 64 + 6
17984:AOR:-(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):143:64 - 6 |==> 64 / 6
17985:SOR:<<(long,int):>>(long,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):143:units << (64 - 6) |==> units >> (64 - 6)
17986:SOR:<<(long,int):>>>(long,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):143:units << (64 - 6) |==> units >>> (64 - 6)
17987:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):143:64 |==> 0
17988:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):143:64 |==> -64
17989:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):143:6 |==> 0
17990:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):143:6 |==> -6
17991:AOR:-(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):143:64 - 6 |==> 64 % 6
17992:AOR:-(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):143:64 - 6 |==> 64 * 6
17993:AOR:-(int,int):+(int,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):143:64 - 6 |==> 64 + 6
17994:AOR:-(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):143:64 - 6 |==> 64 / 6
17995:SOR:>>(long,int):<<(long,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):143:(units << (64 - 6)) >> (64 - 6) |==> (units << (64 - 6)) << (64 - 6)
17996:SOR:>>(long,int):>>>(long,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):143:(units << (64 - 6)) >> (64 - 6) |==> (units << (64 - 6)) >>> (64 - 6)
17997:ROR:==(long,long):<=(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):143:((units << (64 - 6)) >> (64 - 6)) == units |==> ((units << (64 - 6)) >> (64 - 6)) <= units
17998:ROR:==(long,long):>=(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):143:((units << (64 - 6)) >> (64 - 6)) == units |==> ((units << (64 - 6)) >> (64 - 6)) >= units
17999:ROR:==(long,long):FALSE(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):143:((units << (64 - 6)) >> (64 - 6)) == units |==> false
18000:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):145:63 |==> 0
18001:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):145:63 |==> -63
18002:LOR:&(long,long):^(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):145:units & 63 |==> units ^ 63
18003:LOR:&(long,long):|(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):145:units & 63 |==> units | 63
18004:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):145:out.writeByte((int)(units & 63)) |==> <NO-OP>
18005:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):150:60000L |==> 0L
18006:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):150:60000L |==> -60000L
18007:AOR:%(long,long):*(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):150:millis % 60000L |==> millis * 60000L
18008:AOR:%(long,long):+(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):150:millis % 60000L |==> millis + 60000L
18009:AOR:%(long,long):-(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):150:millis % 60000L |==> millis - 60000L
18010:AOR:%(long,long):/(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):150:millis % 60000L |==> millis / 60000L
18011:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):150:0 |==> 1
18012:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):150:0 |==> -1
18013:ROR:==(long,long):<=(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):150:millis % 60000L == 0 |==> millis % 60000L <= 0
18014:ROR:==(long,long):>=(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):150:millis % 60000L == 0 |==> millis % 60000L >= 0
18015:ROR:==(long,long):FALSE(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):150:millis % 60000L == 0 |==> false
18016:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):152:60000L |==> 0L
18017:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):152:60000L |==> -60000L
18018:AOR:/(long,long):%(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):152:millis / 60000L |==> millis % 60000L
18019:AOR:/(long,long):*(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):152:millis / 60000L |==> millis * 60000L
18020:AOR:/(long,long):+(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):152:millis / 60000L |==> millis + 60000L
18021:AOR:/(long,long):-(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):152:millis / 60000L |==> millis - 60000L
18022:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):153:64 |==> 0
18023:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):153:64 |==> -64
18024:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):153:30 |==> 0
18025:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):153:30 |==> -30
18026:AOR:-(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):153:64 - 30 |==> 64 % 30
18027:AOR:-(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):153:64 - 30 |==> 64 * 30
18028:AOR:-(int,int):+(int,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):153:64 - 30 |==> 64 + 30
18029:AOR:-(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):153:64 - 30 |==> 64 / 30
18030:SOR:<<(long,int):>>(long,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):153:minutes << (64 - 30) |==> minutes >> (64 - 30)
18031:SOR:<<(long,int):>>>(long,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):153:minutes << (64 - 30) |==> minutes >>> (64 - 30)
18032:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):153:64 |==> 0
18033:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):153:64 |==> -64
18034:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):153:30 |==> 0
18035:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):153:30 |==> -30
18036:AOR:-(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):153:64 - 30 |==> 64 % 30
18037:AOR:-(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):153:64 - 30 |==> 64 * 30
18038:AOR:-(int,int):+(int,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):153:64 - 30 |==> 64 + 30
18039:AOR:-(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):153:64 - 30 |==> 64 / 30
18040:SOR:>>(long,int):<<(long,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):153:(minutes << (64 - 30)) >> (64 - 30) |==> (minutes << (64 - 30)) << (64 - 30)
18041:SOR:>>(long,int):>>>(long,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):153:(minutes << (64 - 30)) >> (64 - 30) |==> (minutes << (64 - 30)) >>> (64 - 30)
18042:ROR:==(long,long):<=(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):153:((minutes << (64 - 30)) >> (64 - 30)) == minutes |==> ((minutes << (64 - 30)) >> (64 - 30)) <= minutes
18043:ROR:==(long,long):>=(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):153:((minutes << (64 - 30)) >> (64 - 30)) == minutes |==> ((minutes << (64 - 30)) >> (64 - 30)) >= minutes
18044:ROR:==(long,long):FALSE(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):153:((minutes << (64 - 30)) >> (64 - 30)) == minutes |==> false
18045:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):155:1073741824 |==> 0
18046:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):155:1073741824 |==> -1073741824
18047:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):155:1073741823 |==> 0
18048:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):155:1073741823 |==> -1073741823
18049:LOR:&(long,long):^(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):155:minutes & 1073741823 |==> minutes ^ 1073741823
18050:LOR:&(long,long):|(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):155:minutes & 1073741823 |==> minutes | 1073741823
18051:LOR:|(int,int):&(int,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):155:1073741824 | (int)(minutes & 1073741823) |==> 1073741824 & (int)(minutes & 1073741823)
18052:LOR:|(int,int):^(int,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):155:1073741824 | (int)(minutes & 1073741823) |==> 1073741824 ^ (int)(minutes & 1073741823)
18053:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):155:out.writeInt(1073741824 | (int)(minutes & 1073741823)) |==> <NO-OP>
18054:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):160:1000L |==> 0L
18055:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):160:1000L |==> -1000L
18056:AOR:%(long,long):*(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):160:millis % 1000L |==> millis * 1000L
18057:AOR:%(long,long):+(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):160:millis % 1000L |==> millis + 1000L
18058:AOR:%(long,long):-(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):160:millis % 1000L |==> millis - 1000L
18059:AOR:%(long,long):/(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):160:millis % 1000L |==> millis / 1000L
18060:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):160:0 |==> 1
18061:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):160:0 |==> -1
18062:ROR:==(long,long):<=(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):160:millis % 1000L == 0 |==> millis % 1000L <= 0
18063:ROR:==(long,long):>=(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):160:millis % 1000L == 0 |==> millis % 1000L >= 0
18064:ROR:==(long,long):FALSE(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):160:millis % 1000L == 0 |==> false
18065:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):162:1000L |==> 0L
18066:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):162:1000L |==> -1000L
18067:AOR:/(long,long):%(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):162:millis / 1000L |==> millis % 1000L
18068:AOR:/(long,long):*(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):162:millis / 1000L |==> millis * 1000L
18069:AOR:/(long,long):+(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):162:millis / 1000L |==> millis + 1000L
18070:AOR:/(long,long):-(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):162:millis / 1000L |==> millis - 1000L
18071:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):163:64 |==> 0
18072:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):163:64 |==> -64
18073:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):163:38 |==> 0
18074:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):163:38 |==> -38
18075:AOR:-(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):163:64 - 38 |==> 64 % 38
18076:AOR:-(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):163:64 - 38 |==> 64 * 38
18077:AOR:-(int,int):+(int,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):163:64 - 38 |==> 64 + 38
18078:AOR:-(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):163:64 - 38 |==> 64 / 38
18079:SOR:<<(long,int):>>(long,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):163:seconds << (64 - 38) |==> seconds >> (64 - 38)
18080:SOR:<<(long,int):>>>(long,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):163:seconds << (64 - 38) |==> seconds >>> (64 - 38)
18081:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):163:64 |==> 0
18082:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):163:64 |==> -64
18083:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):163:38 |==> 0
18084:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):163:38 |==> -38
18085:AOR:-(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):163:64 - 38 |==> 64 % 38
18086:AOR:-(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):163:64 - 38 |==> 64 * 38
18087:AOR:-(int,int):+(int,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):163:64 - 38 |==> 64 + 38
18088:AOR:-(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):163:64 - 38 |==> 64 / 38
18089:SOR:>>(long,int):<<(long,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):163:(seconds << (64 - 38)) >> (64 - 38) |==> (seconds << (64 - 38)) << (64 - 38)
18090:SOR:>>(long,int):>>>(long,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):163:(seconds << (64 - 38)) >> (64 - 38) |==> (seconds << (64 - 38)) >>> (64 - 38)
18091:ROR:==(long,long):<=(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):163:((seconds << (64 - 38)) >> (64 - 38)) == seconds |==> ((seconds << (64 - 38)) >> (64 - 38)) <= seconds
18092:ROR:==(long,long):>=(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):163:((seconds << (64 - 38)) >> (64 - 38)) == seconds |==> ((seconds << (64 - 38)) >> (64 - 38)) >= seconds
18093:ROR:==(long,long):FALSE(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):163:((seconds << (64 - 38)) >> (64 - 38)) == seconds |==> false
18094:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):165:128 |==> 0
18095:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):165:128 |==> -128
18096:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):165:32 |==> 0
18097:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):165:32 |==> -32
18098:SOR:>>(long,int):<<(long,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):165:seconds >> 32 |==> seconds << 32
18099:SOR:>>(long,int):>>>(long,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):165:seconds >> 32 |==> seconds >>> 32
18100:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):165:63 |==> 0
18101:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):165:63 |==> -63
18102:LOR:&(long,long):^(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):165:(seconds >> 32) & 63 |==> (seconds >> 32) ^ 63
18103:LOR:&(long,long):|(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):165:(seconds >> 32) & 63 |==> (seconds >> 32) | 63
18104:LOR:|(int,int):&(int,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):165:128 | (int)((seconds >> 32) & 63) |==> 128 & (int)((seconds >> 32) & 63)
18105:LOR:|(int,int):^(int,int):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):165:128 | (int)((seconds >> 32) & 63) |==> 128 ^ (int)((seconds >> 32) & 63)
18106:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):165:out.writeByte(128 | (int)((seconds >> 32) & 63)) |==> <NO-OP>
18107:LVR:NEG:0:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):166:-1 |==> 0
18108:LVR:NEG:POS:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):166:-1 |==> 1
18109:LOR:&(long,long):^(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):166:seconds & -1 |==> seconds ^ -1
18110:LOR:&(long,long):|(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):166:seconds & -1 |==> seconds | -1
18111:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):166:out.writeInt((int)(seconds & -1)) |==> <NO-OP>
18112:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):175:0 |==> 1
18113:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):175:0 |==> -1
18114:ROR:<(long,long):!=(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):175:millis < 0 |==> millis != 0
18115:ROR:<(long,long):<=(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):175:millis < 0 |==> millis <= 0
18116:ROR:<(long,long):FALSE(long,long):org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):175:millis < 0 |==> false
18117:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):175:255 |==> 0
18118:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):175:255 |==> -255
18119:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):175:192 |==> 0
18120:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):175:192 |==> -192
18121:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):175:out.writeByte(millis < 0 ? 255 : 192) |==> <NO-OP>
18122:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@writeMillis(java.io.DataOutput,long):176:out.writeLong(millis) |==> <NO-OP>
18123:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):184:6 |==> 0
18124:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):184:6 |==> -6
18125:SOR:>>(int,int):<<(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):184:v >> 6 |==> v << 6
18126:SOR:>>(int,int):>>>(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):184:v >> 6 |==> v >>> 6
18127:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):187:32 |==> 0
18128:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):187:32 |==> -32
18129:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):187:6 |==> 0
18130:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):187:6 |==> -6
18131:AOR:-(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):187:32 - 6 |==> 32 % 6
18132:AOR:-(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):187:32 - 6 |==> 32 * 6
18133:AOR:-(int,int):+(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):187:32 - 6 |==> 32 + 6
18134:AOR:-(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):187:32 - 6 |==> 32 / 6
18135:SOR:<<(int,int):>>(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):187:v << (32 - 6) |==> v >> (32 - 6)
18136:SOR:<<(int,int):>>>(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):187:v << (32 - 6) |==> v >>> (32 - 6)
18137:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):187:32 |==> 0
18138:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):187:32 |==> -32
18139:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):187:6 |==> 0
18140:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):187:6 |==> -6
18141:AOR:-(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):187:32 - 6 |==> 32 % 6
18142:AOR:-(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):187:32 - 6 |==> 32 * 6
18143:AOR:-(int,int):+(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):187:32 - 6 |==> 32 + 6
18144:AOR:-(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):187:32 - 6 |==> 32 / 6
18145:SOR:>>(int,int):<<(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):187:(v << (32 - 6)) >> (32 - 6) |==> (v << (32 - 6)) << (32 - 6)
18146:SOR:>>(int,int):>>>(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):187:(v << (32 - 6)) >> (32 - 6) |==> (v << (32 - 6)) >>> (32 - 6)
18147:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):187:v = (v << (32 - 6)) >> (32 - 6) |==> <NO-OP>
18148:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):188:30 |==> 0
18149:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):188:30 |==> -30
18150:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):188:60000L |==> 0L
18151:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):188:60000L |==> -60000L
18152:AOR:*(long,long):%(long,long):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):188:30 * 60000L |==> 30 % 60000L
18153:AOR:*(long,long):+(long,long):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):188:30 * 60000L |==> 30 + 60000L
18154:AOR:*(long,long):-(long,long):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):188:30 * 60000L |==> 30 - 60000L
18155:AOR:*(long,long):/(long,long):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):188:30 * 60000L |==> 30 / 60000L
18156:AOR:*(long,long):%(long,long):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):188:v * (30 * 60000L) |==> v % (30 * 60000L)
18157:AOR:*(long,long):+(long,long):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):188:v * (30 * 60000L) |==> v + (30 * 60000L)
18158:AOR:*(long,long):-(long,long):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):188:v * (30 * 60000L) |==> v - (30 * 60000L)
18159:AOR:*(long,long):/(long,long):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):188:v * (30 * 60000L) |==> v / (30 * 60000L)
18160:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):192:32 |==> 0
18161:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):192:32 |==> -32
18162:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):192:6 |==> 0
18163:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):192:6 |==> -6
18164:AOR:-(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):192:32 - 6 |==> 32 % 6
18165:AOR:-(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):192:32 - 6 |==> 32 * 6
18166:AOR:-(int,int):+(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):192:32 - 6 |==> 32 + 6
18167:AOR:-(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):192:32 - 6 |==> 32 / 6
18168:SOR:<<(int,int):>>(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):192:v << (32 - 6) |==> v >> (32 - 6)
18169:SOR:<<(int,int):>>>(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):192:v << (32 - 6) |==> v >>> (32 - 6)
18170:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):192:32 |==> 0
18171:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):192:32 |==> -32
18172:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):192:30 |==> 0
18173:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):192:30 |==> -30
18174:AOR:-(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):192:32 - 30 |==> 32 % 30
18175:AOR:-(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):192:32 - 30 |==> 32 * 30
18176:AOR:-(int,int):+(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):192:32 - 30 |==> 32 + 30
18177:AOR:-(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):192:32 - 30 |==> 32 / 30
18178:SOR:>>(int,int):<<(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):192:(v << (32 - 6)) >> (32 - 30) |==> (v << (32 - 6)) << (32 - 30)
18179:SOR:>>(int,int):>>>(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):192:(v << (32 - 6)) >> (32 - 30) |==> (v << (32 - 6)) >>> (32 - 30)
18180:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):192:v = (v << (32 - 6)) >> (32 - 30) |==> <NO-OP>
18181:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):193:16 |==> 0
18182:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):193:16 |==> -16
18183:SOR:<<(int,int):>>(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):193:(in.readUnsignedByte()) << 16 |==> (in.readUnsignedByte()) >> 16
18184:SOR:<<(int,int):>>>(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):193:(in.readUnsignedByte()) << 16 |==> (in.readUnsignedByte()) >>> 16
18185:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):193:v |= (in.readUnsignedByte()) << 16 |==> <NO-OP>
18186:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):194:8 |==> 0
18187:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):194:8 |==> -8
18188:SOR:<<(int,int):>>(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):194:(in.readUnsignedByte()) << 8 |==> (in.readUnsignedByte()) >> 8
18189:SOR:<<(int,int):>>>(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):194:(in.readUnsignedByte()) << 8 |==> (in.readUnsignedByte()) >>> 8
18190:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):194:v |= (in.readUnsignedByte()) << 8 |==> <NO-OP>
18191:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):195:v |= (in.readUnsignedByte()) |==> <NO-OP>
18192:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):196:60000L |==> 0L
18193:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):196:60000L |==> -60000L
18194:AOR:*(long,long):%(long,long):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):196:v * 60000L |==> v % 60000L
18195:AOR:*(long,long):+(long,long):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):196:v * 60000L |==> v + 60000L
18196:AOR:*(long,long):-(long,long):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):196:v * 60000L |==> v - 60000L
18197:AOR:*(long,long):/(long,long):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):196:v * 60000L |==> v / 60000L
18198:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):200:64 |==> 0
18199:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):200:64 |==> -64
18200:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):200:6 |==> 0
18201:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):200:6 |==> -6
18202:AOR:-(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):200:64 - 6 |==> 64 % 6
18203:AOR:-(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):200:64 - 6 |==> 64 * 6
18204:AOR:-(int,int):+(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):200:64 - 6 |==> 64 + 6
18205:AOR:-(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):200:64 - 6 |==> 64 / 6
18206:SOR:<<(long,int):>>(long,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):200:((long)v) << (64 - 6) |==> ((long)v) >> (64 - 6)
18207:SOR:<<(long,int):>>>(long,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):200:((long)v) << (64 - 6) |==> ((long)v) >>> (64 - 6)
18208:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):200:64 |==> 0
18209:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):200:64 |==> -64
18210:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):200:38 |==> 0
18211:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):200:38 |==> -38
18212:AOR:-(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):200:64 - 38 |==> 64 % 38
18213:AOR:-(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):200:64 - 38 |==> 64 * 38
18214:AOR:-(int,int):+(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):200:64 - 38 |==> 64 + 38
18215:AOR:-(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):200:64 - 38 |==> 64 / 38
18216:SOR:>>(long,int):<<(long,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):200:(((long)v) << (64 - 6)) >> (64 - 38) |==> (((long)v) << (64 - 6)) << (64 - 38)
18217:SOR:>>(long,int):>>>(long,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):200:(((long)v) << (64 - 6)) >> (64 - 38) |==> (((long)v) << (64 - 6)) >>> (64 - 38)
18218:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):201:24 |==> 0
18219:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):201:24 |==> -24
18220:SOR:<<(int,int):>>(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):201:(in.readUnsignedByte()) << 24 |==> (in.readUnsignedByte()) >> 24
18221:SOR:<<(int,int):>>>(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):201:(in.readUnsignedByte()) << 24 |==> (in.readUnsignedByte()) >>> 24
18222:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):201:w |= (in.readUnsignedByte()) << 24 |==> <NO-OP>
18223:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):202:16 |==> 0
18224:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):202:16 |==> -16
18225:SOR:<<(int,int):>>(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):202:(in.readUnsignedByte()) << 16 |==> (in.readUnsignedByte()) >> 16
18226:SOR:<<(int,int):>>>(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):202:(in.readUnsignedByte()) << 16 |==> (in.readUnsignedByte()) >>> 16
18227:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):202:w |= (in.readUnsignedByte()) << 16 |==> <NO-OP>
18228:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):203:8 |==> 0
18229:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):203:8 |==> -8
18230:SOR:<<(int,int):>>(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):203:(in.readUnsignedByte()) << 8 |==> (in.readUnsignedByte()) >> 8
18231:SOR:<<(int,int):>>>(int,int):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):203:(in.readUnsignedByte()) << 8 |==> (in.readUnsignedByte()) >>> 8
18232:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):203:w |= (in.readUnsignedByte()) << 8 |==> <NO-OP>
18233:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):204:w |= (in.readUnsignedByte()) |==> <NO-OP>
18234:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):205:1000L |==> 0L
18235:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):205:1000L |==> -1000L
18236:AOR:*(long,long):%(long,long):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):205:w * 1000L |==> w % 1000L
18237:AOR:*(long,long):+(long,long):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):205:w * 1000L |==> w + 1000L
18238:AOR:*(long,long):-(long,long):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):205:w * 1000L |==> w - 1000L
18239:AOR:*(long,long):/(long,long):org.joda.time.tz.DateTimeZoneBuilder@readMillis(java.io.DataInput):205:w * 1000L |==> w / 1000L
18240:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder@buildFixedZone(java.lang.String,java.lang.String,int,int):215:"UTC".equals(id) && id.equals(nameKey) |==> "UTC".equals(id) == id.equals(nameKey)
18241:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder@buildFixedZone(java.lang.String,java.lang.String,int,int):215:"UTC".equals(id) && id.equals(nameKey) |==> false
18242:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder@buildFixedZone(java.lang.String,java.lang.String,int,int):215:"UTC".equals(id) && id.equals(nameKey) |==> "UTC".equals(id)
18243:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder@buildFixedZone(java.lang.String,java.lang.String,int,int):215:"UTC".equals(id) && id.equals(nameKey) |==> id.equals(nameKey)
18244:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder@buildFixedZone(java.lang.String,java.lang.String,int,int):216:0 |==> 1
18245:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder@buildFixedZone(java.lang.String,java.lang.String,int,int):216:0 |==> -1
18246:ROR:==(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder@buildFixedZone(java.lang.String,java.lang.String,int,int):216:wallOffset == 0 |==> wallOffset <= 0
18247:ROR:==(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder@buildFixedZone(java.lang.String,java.lang.String,int,int):216:wallOffset == 0 |==> wallOffset >= 0
18248:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder@buildFixedZone(java.lang.String,java.lang.String,int,int):216:wallOffset == 0 |==> false
18249:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder@buildFixedZone(java.lang.String,java.lang.String,int,int):215:"UTC".equals(id) && id.equals(nameKey) && wallOffset == 0 |==> ("UTC".equals(id) && id.equals(nameKey)) == (wallOffset == 0)
18250:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder@buildFixedZone(java.lang.String,java.lang.String,int,int):215:"UTC".equals(id) && id.equals(nameKey) && wallOffset == 0 |==> false
18251:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder@buildFixedZone(java.lang.String,java.lang.String,int,int):215:"UTC".equals(id) && id.equals(nameKey) && wallOffset == 0 |==> "UTC".equals(id) && id.equals(nameKey)
18252:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder@buildFixedZone(java.lang.String,java.lang.String,int,int):216:"UTC".equals(id) && id.equals(nameKey) && wallOffset == 0 |==> wallOffset == 0
18253:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder@buildFixedZone(java.lang.String,java.lang.String,int,int):216:0 |==> 1
18254:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder@buildFixedZone(java.lang.String,java.lang.String,int,int):216:0 |==> -1
18255:ROR:==(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder@buildFixedZone(java.lang.String,java.lang.String,int,int):216:standardOffset == 0 |==> standardOffset <= 0
18256:ROR:==(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder@buildFixedZone(java.lang.String,java.lang.String,int,int):216:standardOffset == 0 |==> standardOffset >= 0
18257:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder@buildFixedZone(java.lang.String,java.lang.String,int,int):216:standardOffset == 0 |==> false
18258:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder@buildFixedZone(java.lang.String,java.lang.String,int,int):215:"UTC".equals(id) && id.equals(nameKey) && wallOffset == 0 && standardOffset == 0 |==> ("UTC".equals(id) && id.equals(nameKey) && wallOffset == 0) == (standardOffset == 0)
18259:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder@buildFixedZone(java.lang.String,java.lang.String,int,int):216:"UTC".equals(id) && id.equals(nameKey) && wallOffset == 0 && standardOffset == 0 |==> false
18260:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder@buildFixedZone(java.lang.String,java.lang.String,int,int):215:"UTC".equals(id) && id.equals(nameKey) && wallOffset == 0 && standardOffset == 0 |==> "UTC".equals(id) && id.equals(nameKey) && wallOffset == 0
18261:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder@buildFixedZone(java.lang.String,java.lang.String,int,int):216:"UTC".equals(id) && id.equals(nameKey) && wallOffset == 0 && standardOffset == 0 |==> standardOffset == 0
18262:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@<init>():226:10 |==> 0
18263:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@<init>():226:10 |==> -10
18264:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder@addCutover(int,char,int,int,int,boolean,int):252:0 |==> 1
18265:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder@addCutover(int,char,int,int,int,boolean,int):252:0 |==> -1
18266:ROR:>(int,int):!=(int,int):org.joda.time.tz.DateTimeZoneBuilder@addCutover(int,char,int,int,int,boolean,int):252:iRuleSets.size() > 0 |==> iRuleSets.size() != 0
18267:ROR:>(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder@addCutover(int,char,int,int,int,boolean,int):252:iRuleSets.size() > 0 |==> iRuleSets.size() >= 0
18268:ROR:>(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder@addCutover(int,char,int,int,int,boolean,int):252:iRuleSets.size() > 0 |==> false
18269:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@addCutover(int,char,int,int,int,boolean,int):255:1 |==> 0
18270:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@addCutover(int,char,int,int,int,boolean,int):255:1 |==> -1
18271:AOR:-(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder@addCutover(int,char,int,int,int,boolean,int):255:iRuleSets.size() - 1 |==> iRuleSets.size() % 1
18272:AOR:-(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder@addCutover(int,char,int,int,int,boolean,int):255:iRuleSets.size() - 1 |==> iRuleSets.size() * 1
18273:AOR:-(int,int):+(int,int):org.joda.time.tz.DateTimeZoneBuilder@addCutover(int,char,int,int,int,boolean,int):255:iRuleSets.size() - 1 |==> iRuleSets.size() + 1
18274:AOR:-(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder@addCutover(int,char,int,int,int,boolean,int):255:iRuleSets.size() - 1 |==> iRuleSets.size() / 1
18275:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@addCutover(int,char,int,int,int,boolean,int):256:lastRuleSet.setUpperLimit(year, ofYear) |==> <NO-OP>
18276:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@addCutover(int,char,int,int,int,boolean,int):258:iRuleSets.add(new RuleSet()) |==> <NO-OP>
18277:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@setStandardOffset(int):268:getLastRuleSet().setStandardOffset(standardOffset) |==> <NO-OP>
18278:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@setFixedSavings(java.lang.String,int):276:getLastRuleSet().setFixedSavings(nameKey, saveMillis) |==> <NO-OP>
18279:ROR:<=(int,int):<(int,int):org.joda.time.tz.DateTimeZoneBuilder@addRecurringSavings(java.lang.String,int,int,int,char,int,int,int,boolean,int):309:fromYear <= toYear |==> fromYear < toYear
18280:ROR:<=(int,int):==(int,int):org.joda.time.tz.DateTimeZoneBuilder@addRecurringSavings(java.lang.String,int,int,int,char,int,int,int,boolean,int):309:fromYear <= toYear |==> fromYear == toYear
18281:ROR:<=(int,int):TRUE(int,int):org.joda.time.tz.DateTimeZoneBuilder@addRecurringSavings(java.lang.String,int,int,int,char,int,int,int,boolean,int):309:fromYear <= toYear |==> true
18282:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@addRecurringSavings(java.lang.String,int,int,int,char,int,int,int,boolean,int):314:getLastRuleSet().addRule(rule) |==> <NO-OP>
18283:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder@getLastRuleSet():320:0 |==> 1
18284:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder@getLastRuleSet():320:0 |==> -1
18285:ROR:==(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder@getLastRuleSet():320:iRuleSets.size() == 0 |==> iRuleSets.size() <= 0
18286:ROR:==(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder@getLastRuleSet():320:iRuleSets.size() == 0 |==> iRuleSets.size() >= 0
18287:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder@getLastRuleSet():320:iRuleSets.size() == 0 |==> false
18288:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@getLastRuleSet():321:1 |==> 0
18289:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@getLastRuleSet():321:1 |==> -1
18290:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@getLastRuleSet():321:1 |==> 0
18291:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@getLastRuleSet():321:1 |==> -1
18292:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder@getLastRuleSet():321:0 |==> 1
18293:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder@getLastRuleSet():321:0 |==> -1
18294:LVR:FALSE:TRUE:org.joda.time.tz.DateTimeZoneBuilder@getLastRuleSet():321:false |==> true
18295:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder@getLastRuleSet():321:0 |==> 1
18296:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder@getLastRuleSet():321:0 |==> -1
18297:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@getLastRuleSet():321:addCutover(Integer.MIN_VALUE, 'w', 1, 1, 0, false, 0) |==> <NO-OP>
18298:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@getLastRuleSet():323:1 |==> 0
18299:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@getLastRuleSet():323:1 |==> -1
18300:AOR:-(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder@getLastRuleSet():323:iRuleSets.size() - 1 |==> iRuleSets.size() % 1
18301:AOR:-(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder@getLastRuleSet():323:iRuleSets.size() - 1 |==> iRuleSets.size() * 1
18302:AOR:-(int,int):+(int,int):org.joda.time.tz.DateTimeZoneBuilder@getLastRuleSet():323:iRuleSets.size() - 1 |==> iRuleSets.size() + 1
18303:AOR:-(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder@getLastRuleSet():323:iRuleSets.size() - 1 |==> iRuleSets.size() / 1
18304:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):333:id == null |==> false
18305:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):346:0 |==> 1
18306:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):346:0 |==> -1
18307:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):349:0 |==> 1
18308:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):349:0 |==> -1
18309:ROR:<(int,int):!=(int,int):org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):349:i < ruleSetCount |==> i != ruleSetCount
18310:ROR:<(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):349:i < ruleSetCount |==> i <= ruleSetCount
18311:ROR:<(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):349:i < ruleSetCount |==> false
18312:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):352:next == null |==> false
18313:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):355:addTransition(transitions, next) |==> <NO-OP>
18314:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):356:millis = next.getMillis() |==> <NO-OP>
18315:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):357:saveMillis = next.getSaveMillis() |==> <NO-OP>
18316:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):360:rs = new RuleSet(rs) |==> <NO-OP>
18317:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):362:(next = rs.nextTransition(millis, saveMillis)) != null |==> true
18318:COR:addTransition(transitions, next):TRUE:org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):363:addTransition(transitions, next) |==> false
18319:COR:addTransition(transitions, next):FALSE:org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):363:addTransition(transitions, next) |==> true
18320:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):364:tailZone != null |==> true
18321:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):369:millis = next.getMillis() |==> <NO-OP>
18322:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):370:saveMillis = next.getSaveMillis() |==> <NO-OP>
18323:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):371:tailZone == null |==> false
18324:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):371:1 |==> 0
18325:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):371:1 |==> -1
18326:AOR:-(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):371:ruleSetCount - 1 |==> ruleSetCount % 1
18327:AOR:-(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):371:ruleSetCount - 1 |==> ruleSetCount * 1
18328:AOR:-(int,int):+(int,int):org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):371:ruleSetCount - 1 |==> ruleSetCount + 1
18329:AOR:-(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):371:ruleSetCount - 1 |==> ruleSetCount / 1
18330:ROR:==(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):371:i == ruleSetCount - 1 |==> i <= ruleSetCount - 1
18331:ROR:==(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):371:i == ruleSetCount - 1 |==> i >= ruleSetCount - 1
18332:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):371:i == ruleSetCount - 1 |==> false
18333:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):371:tailZone == null && i == ruleSetCount - 1 |==> tailZone == null == (i == ruleSetCount - 1)
18334:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):371:tailZone == null && i == ruleSetCount - 1 |==> false
18335:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):371:tailZone == null && i == ruleSetCount - 1 |==> tailZone == null
18336:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):371:tailZone == null && i == ruleSetCount - 1 |==> i == ruleSetCount - 1
18337:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):372:tailZone = rs.buildTailZone(id) |==> <NO-OP>
18338:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):379:millis = rs.getUpperLimit(saveMillis) |==> <NO-OP>
18339:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):383:0 |==> 1
18340:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):383:0 |==> -1
18341:ROR:==(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):383:transitions.size() == 0 |==> transitions.size() <= 0
18342:ROR:==(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):383:transitions.size() == 0 |==> transitions.size() >= 0
18343:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):383:transitions.size() == 0 |==> false
18344:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):384:tailZone != null |==> true
18345:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):388:0 |==> 1
18346:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):388:0 |==> -1
18347:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):388:0 |==> 1
18348:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):388:0 |==> -1
18349:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):390:1 |==> 0
18350:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):390:1 |==> -1
18351:ROR:==(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):390:transitions.size() == 1 |==> transitions.size() <= 1
18352:ROR:==(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):390:transitions.size() == 1 |==> transitions.size() >= 1
18353:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):390:transitions.size() == 1 |==> false
18354:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):390:tailZone == null |==> false
18355:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):390:transitions.size() == 1 && tailZone == null |==> transitions.size() == 1 == (tailZone == null)
18356:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):390:transitions.size() == 1 && tailZone == null |==> false
18357:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):390:transitions.size() == 1 && tailZone == null |==> transitions.size() == 1
18358:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):390:transitions.size() == 1 && tailZone == null |==> tailZone == null
18359:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):391:0 |==> 1
18360:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):391:0 |==> -1
18361:COR:zone.isCachable():TRUE:org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):397:zone.isCachable() |==> false
18362:COR:zone.isCachable():FALSE:org.joda.time.tz.DateTimeZoneBuilder@toDateTimeZone(java.lang.String,boolean):397:zone.isCachable() |==> true
18363:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):405:0 |==> 1
18364:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):405:0 |==> -1
18365:ROR:==(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):405:size == 0 |==> size <= 0
18366:ROR:==(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):405:size == 0 |==> size >= 0
18367:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):405:size == 0 |==> false
18368:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):406:transitions.add(tr) |==> <NO-OP>
18369:LVR:TRUE:FALSE:org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):407:true |==> false
18370:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):410:1 |==> 0
18371:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):410:1 |==> -1
18372:AOR:-(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):410:size - 1 |==> size % 1
18373:AOR:-(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):410:size - 1 |==> size * 1
18374:AOR:-(int,int):+(int,int):org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):410:size - 1 |==> size + 1
18375:AOR:-(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):410:size - 1 |==> size / 1
18376:COR:tr.isTransitionFrom(last):TRUE:org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):411:tr.isTransitionFrom(last) |==> false
18377:COR:tr.isTransitionFrom(last):FALSE:org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):411:tr.isTransitionFrom(last) |==> true
18378:LVR:FALSE:TRUE:org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):412:false |==> true
18379:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):417:0 |==> 1
18380:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):417:0 |==> -1
18381:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):418:2 |==> 0
18382:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):418:2 |==> -2
18383:ROR:>=(int,int):==(int,int):org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):418:size >= 2 |==> size == 2
18384:ROR:>=(int,int):>(int,int):org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):418:size >= 2 |==> size > 2
18385:ROR:>=(int,int):TRUE(int,int):org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):418:size >= 2 |==> true
18386:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):419:2 |==> 0
18387:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):419:2 |==> -2
18388:AOR:-(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):419:size - 2 |==> size % 2
18389:AOR:-(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):419:size - 2 |==> size * 2
18390:AOR:-(int,int):+(int,int):org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):419:size - 2 |==> size + 2
18391:AOR:-(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):419:size - 2 |==> size / 2
18392:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):419:offsetForLast = transitions.get(size - 2).getWallOffset() |==> <NO-OP>
18393:AOR:+(long,long):%(long,long):org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):423:last.getMillis() + offsetForLast |==> last.getMillis() % offsetForLast
18394:AOR:+(long,long):*(long,long):org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):423:last.getMillis() + offsetForLast |==> last.getMillis() * offsetForLast
18395:AOR:+(long,long):-(long,long):org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):423:last.getMillis() + offsetForLast |==> last.getMillis() - offsetForLast
18396:AOR:+(long,long):/(long,long):org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):423:last.getMillis() + offsetForLast |==> last.getMillis() / offsetForLast
18397:AOR:+(long,long):%(long,long):org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):424:tr.getMillis() + offsetForNew |==> tr.getMillis() % offsetForNew
18398:AOR:+(long,long):*(long,long):org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):424:tr.getMillis() + offsetForNew |==> tr.getMillis() * offsetForNew
18399:AOR:+(long,long):-(long,long):org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):424:tr.getMillis() + offsetForNew |==> tr.getMillis() - offsetForNew
18400:AOR:+(long,long):/(long,long):org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):424:tr.getMillis() + offsetForNew |==> tr.getMillis() / offsetForNew
18401:ROR:!=(long,long):<(long,long):org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):426:newLocal != lastLocal |==> newLocal < lastLocal
18402:ROR:!=(long,long):>(long,long):org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):426:newLocal != lastLocal |==> newLocal > lastLocal
18403:ROR:!=(long,long):TRUE(long,long):org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):426:newLocal != lastLocal |==> true
18404:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):427:transitions.add(tr) |==> <NO-OP>
18405:LVR:TRUE:FALSE:org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):428:true |==> false
18406:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):431:1 |==> 0
18407:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):431:1 |==> -1
18408:AOR:-(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):431:size - 1 |==> size % 1
18409:AOR:-(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):431:size - 1 |==> size * 1
18410:AOR:-(int,int):+(int,int):org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):431:size - 1 |==> size + 1
18411:AOR:-(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):431:size - 1 |==> size / 1
18412:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@addTransition(java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.Transition):431:transitions.remove(size - 1) |==> <NO-OP>
18413:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@writeTo(java.lang.String,java.io.OutputStream):444:writeTo(zoneID, (DataOutput)out) |==> <NO-OP>
18414:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@writeTo(java.lang.String,java.io.OutputStream):446:writeTo(zoneID, (DataOutput)new DataOutputStream(out)) |==> <NO-OP>
18415:LVR:FALSE:TRUE:org.joda.time.tz.DateTimeZoneBuilder@writeTo(java.lang.String,java.io.DataOutput):459:false |==> true
18416:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@writeTo(java.lang.String,java.io.DataOutput):462:out.writeByte('F') |==> <NO-OP>
18417:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder@writeTo(java.lang.String,java.io.DataOutput):463:0 |==> 1
18418:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder@writeTo(java.lang.String,java.io.DataOutput):463:0 |==> -1
18419:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@writeTo(java.lang.String,java.io.DataOutput):463:out.writeUTF(zone.getNameKey(0)) |==> <NO-OP>
18420:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder@writeTo(java.lang.String,java.io.DataOutput):464:0 |==> 1
18421:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder@writeTo(java.lang.String,java.io.DataOutput):464:0 |==> -1
18422:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@writeTo(java.lang.String,java.io.DataOutput):464:writeMillis(out, zone.getOffset(0)) |==> <NO-OP>
18423:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder@writeTo(java.lang.String,java.io.DataOutput):465:0 |==> 1
18424:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder@writeTo(java.lang.String,java.io.DataOutput):465:0 |==> -1
18425:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@writeTo(java.lang.String,java.io.DataOutput):465:writeMillis(out, zone.getStandardOffset(0)) |==> <NO-OP>
18426:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@writeTo(java.lang.String,java.io.DataOutput):468:out.writeByte('C') |==> <NO-OP>
18427:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@writeTo(java.lang.String,java.io.DataOutput):469:zone = ((CachedDateTimeZone)zone).getUncachedZone() |==> <NO-OP>
18428:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@writeTo(java.lang.String,java.io.DataOutput):471:out.writeByte('P') |==> <NO-OP>
18429:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder@writeTo(java.lang.String,java.io.DataOutput):473:((PrecalculatedZone)zone).writeTo(out) |==> <NO-OP>
18430:ROR:!=(int,int):<(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@<init>(char,int,int,int,boolean,int):505:mode != 'u' |==> mode < 'u'
18431:ROR:!=(int,int):>(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@<init>(char,int,int,int,boolean,int):505:mode != 'u' |==> mode > 'u'
18432:ROR:!=(int,int):TRUE(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@<init>(char,int,int,int,boolean,int):505:mode != 'u' |==> true
18433:ROR:!=(int,int):<(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@<init>(char,int,int,int,boolean,int):505:mode != 'w' |==> mode < 'w'
18434:ROR:!=(int,int):>(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@<init>(char,int,int,int,boolean,int):505:mode != 'w' |==> mode > 'w'
18435:ROR:!=(int,int):TRUE(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@<init>(char,int,int,int,boolean,int):505:mode != 'w' |==> true
18436:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@<init>(char,int,int,int,boolean,int):505:mode != 'u' && mode != 'w' |==> mode != 'u' == (mode != 'w')
18437:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@<init>(char,int,int,int,boolean,int):505:mode != 'u' && mode != 'w' |==> false
18438:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@<init>(char,int,int,int,boolean,int):505:mode != 'u' && mode != 'w' |==> mode != 'u'
18439:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@<init>(char,int,int,int,boolean,int):505:mode != 'u' && mode != 'w' |==> mode != 'w'
18440:ROR:!=(int,int):<(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@<init>(char,int,int,int,boolean,int):505:mode != 's' |==> mode < 's'
18441:ROR:!=(int,int):>(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@<init>(char,int,int,int,boolean,int):505:mode != 's' |==> mode > 's'
18442:ROR:!=(int,int):TRUE(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@<init>(char,int,int,int,boolean,int):505:mode != 's' |==> true
18443:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@<init>(char,int,int,int,boolean,int):505:mode != 'u' && mode != 'w' && mode != 's' |==> (mode != 'u' && mode != 'w') == (mode != 's')
18444:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@<init>(char,int,int,int,boolean,int):505:mode != 'u' && mode != 'w' && mode != 's' |==> false
18445:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@<init>(char,int,int,int,boolean,int):505:mode != 'u' && mode != 'w' && mode != 's' |==> mode != 'u' && mode != 'w'
18446:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@<init>(char,int,int,int,boolean,int):505:mode != 'u' && mode != 'w' && mode != 's' |==> mode != 's'
18447:ROR:==(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setInstant(int,int,int):522:iMode == 'w' |==> iMode <= 'w'
18448:ROR:==(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setInstant(int,int,int):522:iMode == 'w' |==> iMode >= 'w'
18449:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setInstant(int,int,int):522:iMode == 'w' |==> false
18450:AOR:+(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setInstant(int,int,int):523:standardOffset + saveMillis |==> standardOffset % saveMillis
18451:AOR:+(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setInstant(int,int,int):523:standardOffset + saveMillis |==> standardOffset * saveMillis
18452:AOR:+(int,int):-(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setInstant(int,int,int):523:standardOffset + saveMillis |==> standardOffset - saveMillis
18453:AOR:+(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setInstant(int,int,int):523:standardOffset + saveMillis |==> standardOffset / saveMillis
18454:ROR:==(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setInstant(int,int,int):524:iMode == 's' |==> iMode <= 's'
18455:ROR:==(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setInstant(int,int,int):524:iMode == 's' |==> iMode >= 's'
18456:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setInstant(int,int,int):524:iMode == 's' |==> false
18457:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setInstant(int,int,int):527:0 |==> 1
18458:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setInstant(int,int,int):527:0 |==> -1
18459:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setInstant(int,int,int):531:0 |==> 1
18460:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setInstant(int,int,int):531:0 |==> -1
18461:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setInstant(int,int,int):532:millis = chrono.monthOfYear().set(millis, iMonthOfYear) |==> <NO-OP>
18462:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setInstant(int,int,int):533:millis = chrono.millisOfDay().set(millis, iMillisOfDay) |==> <NO-OP>
18463:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setInstant(int,int,int):534:millis = setDayOfMonth(chrono, millis) |==> <NO-OP>
18464:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setInstant(int,int,int):536:0 |==> 1
18465:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setInstant(int,int,int):536:0 |==> -1
18466:ROR:!=(int,int):<(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setInstant(int,int,int):536:iDayOfWeek != 0 |==> iDayOfWeek < 0
18467:ROR:!=(int,int):>(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setInstant(int,int,int):536:iDayOfWeek != 0 |==> iDayOfWeek > 0
18468:ROR:!=(int,int):TRUE(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setInstant(int,int,int):536:iDayOfWeek != 0 |==> true
18469:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setInstant(int,int,int):537:millis = setDayOfWeek(chrono, millis) |==> <NO-OP>
18470:AOR:-(long,long):%(long,long):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setInstant(int,int,int):541:millis - offset |==> millis % offset
18471:AOR:-(long,long):*(long,long):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setInstant(int,int,int):541:millis - offset |==> millis * offset
18472:AOR:-(long,long):+(long,long):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setInstant(int,int,int):541:millis - offset |==> millis + offset
18473:AOR:-(long,long):/(long,long):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setInstant(int,int,int):541:millis - offset |==> millis / offset
18474:ROR:==(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):549:iMode == 'w' |==> iMode <= 'w'
18475:ROR:==(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):549:iMode == 'w' |==> iMode >= 'w'
18476:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):549:iMode == 'w' |==> false
18477:AOR:+(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):550:standardOffset + saveMillis |==> standardOffset % saveMillis
18478:AOR:+(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):550:standardOffset + saveMillis |==> standardOffset * saveMillis
18479:AOR:+(int,int):-(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):550:standardOffset + saveMillis |==> standardOffset - saveMillis
18480:AOR:+(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):550:standardOffset + saveMillis |==> standardOffset / saveMillis
18481:ROR:==(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):551:iMode == 's' |==> iMode <= 's'
18482:ROR:==(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):551:iMode == 's' |==> iMode >= 's'
18483:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):551:iMode == 's' |==> false
18484:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):554:0 |==> 1
18485:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):554:0 |==> -1
18486:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):558:instant += offset |==> <NO-OP>
18487:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):563:0 |==> 1
18488:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):563:0 |==> -1
18489:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):563:next = chrono.millisOfDay().set(next, 0) |==> <NO-OP>
18490:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):564:next = chrono.millisOfDay().add(next, iMillisOfDay) |==> <NO-OP>
18491:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):565:next = setDayOfMonthNext(chrono, next) |==> <NO-OP>
18492:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):567:0 |==> 1
18493:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):567:0 |==> -1
18494:ROR:==(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):567:iDayOfWeek == 0 |==> iDayOfWeek <= 0
18495:ROR:==(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):567:iDayOfWeek == 0 |==> iDayOfWeek >= 0
18496:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):567:iDayOfWeek == 0 |==> false
18497:ROR:<=(long,long):<(long,long):org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):568:next <= instant |==> next < instant
18498:ROR:<=(long,long):==(long,long):org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):568:next <= instant |==> next == instant
18499:ROR:<=(long,long):TRUE(long,long):org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):568:next <= instant |==> true
18500:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):569:1 |==> 0
18501:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):569:1 |==> -1
18502:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):569:next = chrono.year().add(next, 1) |==> <NO-OP>
18503:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):570:next = setDayOfMonthNext(chrono, next) |==> <NO-OP>
18504:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):573:next = setDayOfWeek(chrono, next) |==> <NO-OP>
18505:ROR:<=(long,long):<(long,long):org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):574:next <= instant |==> next < instant
18506:ROR:<=(long,long):==(long,long):org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):574:next <= instant |==> next == instant
18507:ROR:<=(long,long):TRUE(long,long):org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):574:next <= instant |==> true
18508:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):575:1 |==> 0
18509:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):575:1 |==> -1
18510:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):575:next = chrono.year().add(next, 1) |==> <NO-OP>
18511:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):576:next = chrono.monthOfYear().set(next, iMonthOfYear) |==> <NO-OP>
18512:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):577:next = setDayOfMonthNext(chrono, next) |==> <NO-OP>
18513:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):578:next = setDayOfWeek(chrono, next) |==> <NO-OP>
18514:AOR:-(long,long):%(long,long):org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):583:next - offset |==> next % offset
18515:AOR:-(long,long):*(long,long):org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):583:next - offset |==> next * offset
18516:AOR:-(long,long):+(long,long):org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):583:next - offset |==> next + offset
18517:AOR:-(long,long):/(long,long):org.joda.time.tz.DateTimeZoneBuilder$OfYear@next(long,int,int):583:next - offset |==> next / offset
18518:ROR:==(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):591:iMode == 'w' |==> iMode <= 'w'
18519:ROR:==(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):591:iMode == 'w' |==> iMode >= 'w'
18520:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):591:iMode == 'w' |==> false
18521:AOR:+(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):592:standardOffset + saveMillis |==> standardOffset % saveMillis
18522:AOR:+(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):592:standardOffset + saveMillis |==> standardOffset * saveMillis
18523:AOR:+(int,int):-(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):592:standardOffset + saveMillis |==> standardOffset - saveMillis
18524:AOR:+(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):592:standardOffset + saveMillis |==> standardOffset / saveMillis
18525:ROR:==(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):593:iMode == 's' |==> iMode <= 's'
18526:ROR:==(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):593:iMode == 's' |==> iMode >= 's'
18527:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):593:iMode == 's' |==> false
18528:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):596:0 |==> 1
18529:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):596:0 |==> -1
18530:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):600:instant += offset |==> <NO-OP>
18531:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):605:0 |==> 1
18532:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):605:0 |==> -1
18533:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):605:prev = chrono.millisOfDay().set(prev, 0) |==> <NO-OP>
18534:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):606:prev = chrono.millisOfDay().add(prev, iMillisOfDay) |==> <NO-OP>
18535:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):607:prev = setDayOfMonthPrevious(chrono, prev) |==> <NO-OP>
18536:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):609:0 |==> 1
18537:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):609:0 |==> -1
18538:ROR:==(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):609:iDayOfWeek == 0 |==> iDayOfWeek <= 0
18539:ROR:==(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):609:iDayOfWeek == 0 |==> iDayOfWeek >= 0
18540:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):609:iDayOfWeek == 0 |==> false
18541:ROR:>=(long,long):==(long,long):org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):610:prev >= instant |==> prev == instant
18542:ROR:>=(long,long):>(long,long):org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):610:prev >= instant |==> prev > instant
18543:ROR:>=(long,long):TRUE(long,long):org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):610:prev >= instant |==> true
18544:LVR:NEG:0:org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):611:-1 |==> 0
18545:LVR:NEG:POS:org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):611:-1 |==> 1
18546:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):611:prev = chrono.year().add(prev, -1) |==> <NO-OP>
18547:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):612:prev = setDayOfMonthPrevious(chrono, prev) |==> <NO-OP>
18548:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):615:prev = setDayOfWeek(chrono, prev) |==> <NO-OP>
18549:ROR:>=(long,long):==(long,long):org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):616:prev >= instant |==> prev == instant
18550:ROR:>=(long,long):>(long,long):org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):616:prev >= instant |==> prev > instant
18551:ROR:>=(long,long):TRUE(long,long):org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):616:prev >= instant |==> true
18552:LVR:NEG:0:org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):617:-1 |==> 0
18553:LVR:NEG:POS:org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):617:-1 |==> 1
18554:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):617:prev = chrono.year().add(prev, -1) |==> <NO-OP>
18555:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):618:prev = chrono.monthOfYear().set(prev, iMonthOfYear) |==> <NO-OP>
18556:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):619:prev = setDayOfMonthPrevious(chrono, prev) |==> <NO-OP>
18557:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):620:prev = setDayOfWeek(chrono, prev) |==> <NO-OP>
18558:AOR:-(long,long):%(long,long):org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):625:prev - offset |==> prev % offset
18559:AOR:-(long,long):*(long,long):org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):625:prev - offset |==> prev * offset
18560:AOR:-(long,long):+(long,long):org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):625:prev - offset |==> prev + offset
18561:AOR:-(long,long):/(long,long):org.joda.time.tz.DateTimeZoneBuilder$OfYear@previous(long,int,int):625:prev - offset |==> prev / offset
18562:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):629:this == obj |==> false
18563:LVR:TRUE:FALSE:org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):630:true |==> false
18564:ROR:==(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):635:iMode == other.iMode |==> iMode <= other.iMode
18565:ROR:==(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):635:iMode == other.iMode |==> iMode >= other.iMode
18566:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):635:iMode == other.iMode |==> false
18567:ROR:==(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):636:iMonthOfYear == other.iMonthOfYear |==> iMonthOfYear <= other.iMonthOfYear
18568:ROR:==(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):636:iMonthOfYear == other.iMonthOfYear |==> iMonthOfYear >= other.iMonthOfYear
18569:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):636:iMonthOfYear == other.iMonthOfYear |==> false
18570:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):635:iMode == other.iMode && iMonthOfYear == other.iMonthOfYear |==> iMode == other.iMode == (iMonthOfYear == other.iMonthOfYear)
18571:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):635:iMode == other.iMode && iMonthOfYear == other.iMonthOfYear |==> false
18572:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):635:iMode == other.iMode && iMonthOfYear == other.iMonthOfYear |==> iMode == other.iMode
18573:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):636:iMode == other.iMode && iMonthOfYear == other.iMonthOfYear |==> iMonthOfYear == other.iMonthOfYear
18574:ROR:==(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):637:iDayOfMonth == other.iDayOfMonth |==> iDayOfMonth <= other.iDayOfMonth
18575:ROR:==(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):637:iDayOfMonth == other.iDayOfMonth |==> iDayOfMonth >= other.iDayOfMonth
18576:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):637:iDayOfMonth == other.iDayOfMonth |==> false
18577:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):635:iMode == other.iMode && iMonthOfYear == other.iMonthOfYear && iDayOfMonth == other.iDayOfMonth |==> (iMode == other.iMode && iMonthOfYear == other.iMonthOfYear) == (iDayOfMonth == other.iDayOfMonth)
18578:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):636:iMode == other.iMode && iMonthOfYear == other.iMonthOfYear && iDayOfMonth == other.iDayOfMonth |==> false
18579:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):635:iMode == other.iMode && iMonthOfYear == other.iMonthOfYear && iDayOfMonth == other.iDayOfMonth |==> iMode == other.iMode && iMonthOfYear == other.iMonthOfYear
18580:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):637:iMode == other.iMode && iMonthOfYear == other.iMonthOfYear && iDayOfMonth == other.iDayOfMonth |==> iDayOfMonth == other.iDayOfMonth
18581:ROR:==(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):638:iDayOfWeek == other.iDayOfWeek |==> iDayOfWeek <= other.iDayOfWeek
18582:ROR:==(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):638:iDayOfWeek == other.iDayOfWeek |==> iDayOfWeek >= other.iDayOfWeek
18583:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):638:iDayOfWeek == other.iDayOfWeek |==> false
18584:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):635:iMode == other.iMode && iMonthOfYear == other.iMonthOfYear && iDayOfMonth == other.iDayOfMonth && iDayOfWeek == other.iDayOfWeek |==> (iMode == other.iMode && iMonthOfYear == other.iMonthOfYear && iDayOfMonth == other.iDayOfMonth) == (iDayOfWeek == other.iDayOfWeek)
18585:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):637:iMode == other.iMode && iMonthOfYear == other.iMonthOfYear && iDayOfMonth == other.iDayOfMonth && iDayOfWeek == other.iDayOfWeek |==> false
18586:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):635:iMode == other.iMode && iMonthOfYear == other.iMonthOfYear && iDayOfMonth == other.iDayOfMonth && iDayOfWeek == other.iDayOfWeek |==> iMode == other.iMode && iMonthOfYear == other.iMonthOfYear && iDayOfMonth == other.iDayOfMonth
18587:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):638:iMode == other.iMode && iMonthOfYear == other.iMonthOfYear && iDayOfMonth == other.iDayOfMonth && iDayOfWeek == other.iDayOfWeek |==> iDayOfWeek == other.iDayOfWeek
18588:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):639:iAdvance == other.iAdvance |==> false
18589:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):639:iAdvance == other.iAdvance |==> iAdvance
18590:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):639:iAdvance == other.iAdvance |==> other.iAdvance
18591:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):635:iMode == other.iMode && iMonthOfYear == other.iMonthOfYear && iDayOfMonth == other.iDayOfMonth && iDayOfWeek == other.iDayOfWeek && iAdvance == other.iAdvance |==> (iMode == other.iMode && iMonthOfYear == other.iMonthOfYear && iDayOfMonth == other.iDayOfMonth && iDayOfWeek == other.iDayOfWeek) == (iAdvance == other.iAdvance)
18592:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):638:iMode == other.iMode && iMonthOfYear == other.iMonthOfYear && iDayOfMonth == other.iDayOfMonth && iDayOfWeek == other.iDayOfWeek && iAdvance == other.iAdvance |==> false
18593:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):635:iMode == other.iMode && iMonthOfYear == other.iMonthOfYear && iDayOfMonth == other.iDayOfMonth && iDayOfWeek == other.iDayOfWeek && iAdvance == other.iAdvance |==> iMode == other.iMode && iMonthOfYear == other.iMonthOfYear && iDayOfMonth == other.iDayOfMonth && iDayOfWeek == other.iDayOfWeek
18594:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):639:iMode == other.iMode && iMonthOfYear == other.iMonthOfYear && iDayOfMonth == other.iDayOfMonth && iDayOfWeek == other.iDayOfWeek && iAdvance == other.iAdvance |==> iAdvance == other.iAdvance
18595:ROR:==(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):640:iMillisOfDay == other.iMillisOfDay |==> iMillisOfDay <= other.iMillisOfDay
18596:ROR:==(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):640:iMillisOfDay == other.iMillisOfDay |==> iMillisOfDay >= other.iMillisOfDay
18597:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):640:iMillisOfDay == other.iMillisOfDay |==> false
18598:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):635:iMode == other.iMode && iMonthOfYear == other.iMonthOfYear && iDayOfMonth == other.iDayOfMonth && iDayOfWeek == other.iDayOfWeek && iAdvance == other.iAdvance && iMillisOfDay == other.iMillisOfDay |==> (iMode == other.iMode && iMonthOfYear == other.iMonthOfYear && iDayOfMonth == other.iDayOfMonth && iDayOfWeek == other.iDayOfWeek && iAdvance == other.iAdvance) == (iMillisOfDay == other.iMillisOfDay)
18599:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):639:iMode == other.iMode && iMonthOfYear == other.iMonthOfYear && iDayOfMonth == other.iDayOfMonth && iDayOfWeek == other.iDayOfWeek && iAdvance == other.iAdvance && iMillisOfDay == other.iMillisOfDay |==> false
18600:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):635:iMode == other.iMode && iMonthOfYear == other.iMonthOfYear && iDayOfMonth == other.iDayOfMonth && iDayOfWeek == other.iDayOfWeek && iAdvance == other.iAdvance && iMillisOfDay == other.iMillisOfDay |==> iMode == other.iMode && iMonthOfYear == other.iMonthOfYear && iDayOfMonth == other.iDayOfMonth && iDayOfWeek == other.iDayOfWeek && iAdvance == other.iAdvance
18601:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):640:iMode == other.iMode && iMonthOfYear == other.iMonthOfYear && iDayOfMonth == other.iDayOfMonth && iDayOfWeek == other.iDayOfWeek && iAdvance == other.iAdvance && iMillisOfDay == other.iMillisOfDay |==> iMillisOfDay == other.iMillisOfDay
18602:LVR:FALSE:TRUE:org.joda.time.tz.DateTimeZoneBuilder$OfYear@equals(java.lang.Object):642:false |==> true
18603:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@writeTo(java.io.DataOutput):659:out.writeByte(iMode) |==> <NO-OP>
18604:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@writeTo(java.io.DataOutput):660:out.writeByte(iMonthOfYear) |==> <NO-OP>
18605:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@writeTo(java.io.DataOutput):661:out.writeByte(iDayOfMonth) |==> <NO-OP>
18606:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@writeTo(java.io.DataOutput):662:out.writeByte(iDayOfWeek) |==> <NO-OP>
18607:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@writeTo(java.io.DataOutput):663:out.writeBoolean(iAdvance) |==> <NO-OP>
18608:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@writeTo(java.io.DataOutput):664:writeMillis(out, iMillisOfDay) |==> <NO-OP>
18609:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthNext(org.joda.time.Chronology,long):672:next = setDayOfMonth(chrono, next) |==> <NO-OP>
18610:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthNext(org.joda.time.Chronology,long):674:2 |==> 0
18611:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthNext(org.joda.time.Chronology,long):674:2 |==> -2
18612:ROR:==(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthNext(org.joda.time.Chronology,long):674:iMonthOfYear == 2 |==> iMonthOfYear <= 2
18613:ROR:==(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthNext(org.joda.time.Chronology,long):674:iMonthOfYear == 2 |==> iMonthOfYear >= 2
18614:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthNext(org.joda.time.Chronology,long):674:iMonthOfYear == 2 |==> false
18615:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthNext(org.joda.time.Chronology,long):674:29 |==> 0
18616:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthNext(org.joda.time.Chronology,long):674:29 |==> -29
18617:ROR:==(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthNext(org.joda.time.Chronology,long):674:iDayOfMonth == 29 |==> iDayOfMonth <= 29
18618:ROR:==(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthNext(org.joda.time.Chronology,long):674:iDayOfMonth == 29 |==> iDayOfMonth >= 29
18619:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthNext(org.joda.time.Chronology,long):674:iDayOfMonth == 29 |==> false
18620:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthNext(org.joda.time.Chronology,long):674:iMonthOfYear == 2 && iDayOfMonth == 29 |==> iMonthOfYear == 2 == (iDayOfMonth == 29)
18621:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthNext(org.joda.time.Chronology,long):674:iMonthOfYear == 2 && iDayOfMonth == 29 |==> false
18622:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthNext(org.joda.time.Chronology,long):674:iMonthOfYear == 2 && iDayOfMonth == 29 |==> iMonthOfYear == 2
18623:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthNext(org.joda.time.Chronology,long):674:iMonthOfYear == 2 && iDayOfMonth == 29 |==> iDayOfMonth == 29
18624:LVR:FALSE:TRUE:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthNext(org.joda.time.Chronology,long):675:false |==> true
18625:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthNext(org.joda.time.Chronology,long):675:chrono.year().isLeap(next) == false |==> false
18626:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthNext(org.joda.time.Chronology,long):675:chrono.year().isLeap(next) == false |==> chrono.year().isLeap(next)
18627:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthNext(org.joda.time.Chronology,long):675:chrono.year().isLeap(next) == false |==> false
18628:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthNext(org.joda.time.Chronology,long):676:1 |==> 0
18629:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthNext(org.joda.time.Chronology,long):676:1 |==> -1
18630:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthNext(org.joda.time.Chronology,long):676:next = chrono.year().add(next, 1) |==> <NO-OP>
18631:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthNext(org.joda.time.Chronology,long):678:next = setDayOfMonth(chrono, next) |==> <NO-OP>
18632:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthPrevious(org.joda.time.Chronology,long):691:prev = setDayOfMonth(chrono, prev) |==> <NO-OP>
18633:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthPrevious(org.joda.time.Chronology,long):693:2 |==> 0
18634:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthPrevious(org.joda.time.Chronology,long):693:2 |==> -2
18635:ROR:==(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthPrevious(org.joda.time.Chronology,long):693:iMonthOfYear == 2 |==> iMonthOfYear <= 2
18636:ROR:==(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthPrevious(org.joda.time.Chronology,long):693:iMonthOfYear == 2 |==> iMonthOfYear >= 2
18637:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthPrevious(org.joda.time.Chronology,long):693:iMonthOfYear == 2 |==> false
18638:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthPrevious(org.joda.time.Chronology,long):693:29 |==> 0
18639:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthPrevious(org.joda.time.Chronology,long):693:29 |==> -29
18640:ROR:==(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthPrevious(org.joda.time.Chronology,long):693:iDayOfMonth == 29 |==> iDayOfMonth <= 29
18641:ROR:==(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthPrevious(org.joda.time.Chronology,long):693:iDayOfMonth == 29 |==> iDayOfMonth >= 29
18642:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthPrevious(org.joda.time.Chronology,long):693:iDayOfMonth == 29 |==> false
18643:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthPrevious(org.joda.time.Chronology,long):693:iMonthOfYear == 2 && iDayOfMonth == 29 |==> iMonthOfYear == 2 == (iDayOfMonth == 29)
18644:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthPrevious(org.joda.time.Chronology,long):693:iMonthOfYear == 2 && iDayOfMonth == 29 |==> false
18645:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthPrevious(org.joda.time.Chronology,long):693:iMonthOfYear == 2 && iDayOfMonth == 29 |==> iMonthOfYear == 2
18646:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthPrevious(org.joda.time.Chronology,long):693:iMonthOfYear == 2 && iDayOfMonth == 29 |==> iDayOfMonth == 29
18647:LVR:FALSE:TRUE:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthPrevious(org.joda.time.Chronology,long):694:false |==> true
18648:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthPrevious(org.joda.time.Chronology,long):694:chrono.year().isLeap(prev) == false |==> false
18649:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthPrevious(org.joda.time.Chronology,long):694:chrono.year().isLeap(prev) == false |==> chrono.year().isLeap(prev)
18650:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthPrevious(org.joda.time.Chronology,long):694:chrono.year().isLeap(prev) == false |==> false
18651:LVR:NEG:0:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthPrevious(org.joda.time.Chronology,long):695:-1 |==> 0
18652:LVR:NEG:POS:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthPrevious(org.joda.time.Chronology,long):695:-1 |==> 1
18653:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthPrevious(org.joda.time.Chronology,long):695:prev = chrono.year().add(prev, -1) |==> <NO-OP>
18654:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonthPrevious(org.joda.time.Chronology,long):697:prev = setDayOfMonth(chrono, prev) |==> <NO-OP>
18655:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonth(org.joda.time.Chronology,long):706:0 |==> 1
18656:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonth(org.joda.time.Chronology,long):706:0 |==> -1
18657:ROR:>=(int,int):==(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonth(org.joda.time.Chronology,long):706:iDayOfMonth >= 0 |==> iDayOfMonth == 0
18658:ROR:>=(int,int):>(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonth(org.joda.time.Chronology,long):706:iDayOfMonth >= 0 |==> iDayOfMonth > 0
18659:ROR:>=(int,int):TRUE(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonth(org.joda.time.Chronology,long):706:iDayOfMonth >= 0 |==> true
18660:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonth(org.joda.time.Chronology,long):707:instant = chrono.dayOfMonth().set(instant, iDayOfMonth) |==> <NO-OP>
18661:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonth(org.joda.time.Chronology,long):709:1 |==> 0
18662:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonth(org.joda.time.Chronology,long):709:1 |==> -1
18663:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonth(org.joda.time.Chronology,long):709:instant = chrono.dayOfMonth().set(instant, 1) |==> <NO-OP>
18664:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonth(org.joda.time.Chronology,long):710:1 |==> 0
18665:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonth(org.joda.time.Chronology,long):710:1 |==> -1
18666:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonth(org.joda.time.Chronology,long):710:instant = chrono.monthOfYear().add(instant, 1) |==> <NO-OP>
18667:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfMonth(org.joda.time.Chronology,long):711:instant = chrono.dayOfMonth().add(instant, iDayOfMonth) |==> <NO-OP>
18668:AOR:-(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfWeek(org.joda.time.Chronology,long):718:iDayOfWeek - dayOfWeek |==> iDayOfWeek % dayOfWeek
18669:AOR:-(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfWeek(org.joda.time.Chronology,long):718:iDayOfWeek - dayOfWeek |==> iDayOfWeek * dayOfWeek
18670:AOR:-(int,int):+(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfWeek(org.joda.time.Chronology,long):718:iDayOfWeek - dayOfWeek |==> iDayOfWeek + dayOfWeek
18671:AOR:-(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfWeek(org.joda.time.Chronology,long):718:iDayOfWeek - dayOfWeek |==> iDayOfWeek / dayOfWeek
18672:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfWeek(org.joda.time.Chronology,long):719:0 |==> 1
18673:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfWeek(org.joda.time.Chronology,long):719:0 |==> -1
18674:ROR:!=(int,int):<(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfWeek(org.joda.time.Chronology,long):719:daysToAdd != 0 |==> daysToAdd < 0
18675:ROR:!=(int,int):>(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfWeek(org.joda.time.Chronology,long):719:daysToAdd != 0 |==> daysToAdd > 0
18676:ROR:!=(int,int):TRUE(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfWeek(org.joda.time.Chronology,long):719:daysToAdd != 0 |==> true
18677:COR:iAdvance:TRUE:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfWeek(org.joda.time.Chronology,long):720:iAdvance |==> false
18678:COR:iAdvance:FALSE:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfWeek(org.joda.time.Chronology,long):720:iAdvance |==> true
18679:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfWeek(org.joda.time.Chronology,long):721:0 |==> 1
18680:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfWeek(org.joda.time.Chronology,long):721:0 |==> -1
18681:ROR:<(int,int):!=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfWeek(org.joda.time.Chronology,long):721:daysToAdd < 0 |==> daysToAdd != 0
18682:ROR:<(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfWeek(org.joda.time.Chronology,long):721:daysToAdd < 0 |==> daysToAdd <= 0
18683:ROR:<(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfWeek(org.joda.time.Chronology,long):721:daysToAdd < 0 |==> false
18684:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfWeek(org.joda.time.Chronology,long):722:7 |==> 0
18685:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfWeek(org.joda.time.Chronology,long):722:7 |==> -7
18686:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfWeek(org.joda.time.Chronology,long):722:daysToAdd += 7 |==> <NO-OP>
18687:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfWeek(org.joda.time.Chronology,long):725:0 |==> 1
18688:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfWeek(org.joda.time.Chronology,long):725:0 |==> -1
18689:ROR:>(int,int):!=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfWeek(org.joda.time.Chronology,long):725:daysToAdd > 0 |==> daysToAdd != 0
18690:ROR:>(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfWeek(org.joda.time.Chronology,long):725:daysToAdd > 0 |==> daysToAdd >= 0
18691:ROR:>(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfWeek(org.joda.time.Chronology,long):725:daysToAdd > 0 |==> false
18692:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfWeek(org.joda.time.Chronology,long):726:7 |==> 0
18693:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfWeek(org.joda.time.Chronology,long):726:7 |==> -7
18694:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfWeek(org.joda.time.Chronology,long):726:daysToAdd -= 7 |==> <NO-OP>
18695:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$OfYear@setDayOfWeek(org.joda.time.Chronology,long):729:instant = chrono.dayOfWeek().add(instant, daysToAdd) |==> <NO-OP>
18696:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.DateTimeZoneBuilder$Recurrence@equals(java.lang.Object):780:this == obj |==> false
18697:LVR:TRUE:FALSE:org.joda.time.tz.DateTimeZoneBuilder$Recurrence@equals(java.lang.Object):781:true |==> false
18698:ROR:==(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$Recurrence@equals(java.lang.Object):786:iSaveMillis == other.iSaveMillis |==> iSaveMillis <= other.iSaveMillis
18699:ROR:==(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder$Recurrence@equals(java.lang.Object):786:iSaveMillis == other.iSaveMillis |==> iSaveMillis >= other.iSaveMillis
18700:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$Recurrence@equals(java.lang.Object):786:iSaveMillis == other.iSaveMillis |==> false
18701:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$Recurrence@equals(java.lang.Object):786:iSaveMillis == other.iSaveMillis && iNameKey.equals(other.iNameKey) |==> iSaveMillis == other.iSaveMillis == iNameKey.equals(other.iNameKey)
18702:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$Recurrence@equals(java.lang.Object):786:iSaveMillis == other.iSaveMillis && iNameKey.equals(other.iNameKey) |==> false
18703:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$Recurrence@equals(java.lang.Object):786:iSaveMillis == other.iSaveMillis && iNameKey.equals(other.iNameKey) |==> iSaveMillis == other.iSaveMillis
18704:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$Recurrence@equals(java.lang.Object):787:iSaveMillis == other.iSaveMillis && iNameKey.equals(other.iNameKey) |==> iNameKey.equals(other.iNameKey)
18705:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$Recurrence@equals(java.lang.Object):786:iSaveMillis == other.iSaveMillis && iNameKey.equals(other.iNameKey) && iOfYear.equals(other.iOfYear) |==> (iSaveMillis == other.iSaveMillis && iNameKey.equals(other.iNameKey)) == iOfYear.equals(other.iOfYear)
18706:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$Recurrence@equals(java.lang.Object):787:iSaveMillis == other.iSaveMillis && iNameKey.equals(other.iNameKey) && iOfYear.equals(other.iOfYear) |==> false
18707:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$Recurrence@equals(java.lang.Object):786:iSaveMillis == other.iSaveMillis && iNameKey.equals(other.iNameKey) && iOfYear.equals(other.iOfYear) |==> iSaveMillis == other.iSaveMillis && iNameKey.equals(other.iNameKey)
18708:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$Recurrence@equals(java.lang.Object):788:iSaveMillis == other.iSaveMillis && iNameKey.equals(other.iNameKey) && iOfYear.equals(other.iOfYear) |==> iOfYear.equals(other.iOfYear)
18709:LVR:FALSE:TRUE:org.joda.time.tz.DateTimeZoneBuilder$Recurrence@equals(java.lang.Object):790:false |==> true
18710:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$Recurrence@writeTo(java.io.DataOutput):794:iOfYear.writeTo(out) |==> <NO-OP>
18711:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$Recurrence@writeTo(java.io.DataOutput):795:out.writeUTF(iNameKey) |==> <NO-OP>
18712:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$Recurrence@writeTo(java.io.DataOutput):796:writeMillis(out, iSaveMillis) |==> <NO-OP>
18713:AOR:+(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder$Rule@next(long,int,int):847:standardOffset + saveMillis |==> standardOffset % saveMillis
18714:AOR:+(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder$Rule@next(long,int,int):847:standardOffset + saveMillis |==> standardOffset * saveMillis
18715:AOR:+(int,int):-(int,int):org.joda.time.tz.DateTimeZoneBuilder$Rule@next(long,int,int):847:standardOffset + saveMillis |==> standardOffset - saveMillis
18716:AOR:+(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder$Rule@next(long,int,int):847:standardOffset + saveMillis |==> standardOffset / saveMillis
18717:ROR:==(long,long):<=(long,long):org.joda.time.tz.DateTimeZoneBuilder$Rule@next(long,int,int):851:instant == Long.MIN_VALUE |==> instant <= Long.MIN_VALUE
18718:ROR:==(long,long):>=(long,long):org.joda.time.tz.DateTimeZoneBuilder$Rule@next(long,int,int):851:instant == Long.MIN_VALUE |==> instant >= Long.MIN_VALUE
18719:ROR:==(long,long):FALSE(long,long):org.joda.time.tz.DateTimeZoneBuilder$Rule@next(long,int,int):851:instant == Long.MIN_VALUE |==> false
18720:AOR:+(long,long):%(long,long):org.joda.time.tz.DateTimeZoneBuilder$Rule@next(long,int,int):854:instant + wallOffset |==> instant % wallOffset
18721:AOR:+(long,long):*(long,long):org.joda.time.tz.DateTimeZoneBuilder$Rule@next(long,int,int):854:instant + wallOffset |==> instant * wallOffset
18722:AOR:+(long,long):-(long,long):org.joda.time.tz.DateTimeZoneBuilder$Rule@next(long,int,int):854:instant + wallOffset |==> instant - wallOffset
18723:AOR:+(long,long):/(long,long):org.joda.time.tz.DateTimeZoneBuilder$Rule@next(long,int,int):854:instant + wallOffset |==> instant / wallOffset
18724:ROR:<(int,int):!=(int,int):org.joda.time.tz.DateTimeZoneBuilder$Rule@next(long,int,int):857:year < iFromYear |==> year != iFromYear
18725:ROR:<(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$Rule@next(long,int,int):857:year < iFromYear |==> year <= iFromYear
18726:ROR:<(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$Rule@next(long,int,int):857:year < iFromYear |==> false
18727:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$Rule@next(long,int,int):859:0 |==> 1
18728:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$Rule@next(long,int,int):859:0 |==> -1
18729:AOR:-(long,long):%(long,long):org.joda.time.tz.DateTimeZoneBuilder$Rule@next(long,int,int):859:chrono.year().set(0, iFromYear) - wallOffset |==> chrono.year().set(0, iFromYear) % wallOffset
18730:AOR:-(long,long):*(long,long):org.joda.time.tz.DateTimeZoneBuilder$Rule@next(long,int,int):859:chrono.year().set(0, iFromYear) - wallOffset |==> chrono.year().set(0, iFromYear) * wallOffset
18731:AOR:-(long,long):+(long,long):org.joda.time.tz.DateTimeZoneBuilder$Rule@next(long,int,int):859:chrono.year().set(0, iFromYear) - wallOffset |==> chrono.year().set(0, iFromYear) + wallOffset
18732:AOR:-(long,long):/(long,long):org.joda.time.tz.DateTimeZoneBuilder$Rule@next(long,int,int):859:chrono.year().set(0, iFromYear) - wallOffset |==> chrono.year().set(0, iFromYear) / wallOffset
18733:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$Rule@next(long,int,int):859:testInstant = chrono.year().set(0, iFromYear) - wallOffset |==> <NO-OP>
18734:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$Rule@next(long,int,int):862:1 |==> 0
18735:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$Rule@next(long,int,int):862:1 |==> -1
18736:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$Rule@next(long,int,int):862:testInstant -= 1 |==> <NO-OP>
18737:ROR:>(long,long):!=(long,long):org.joda.time.tz.DateTimeZoneBuilder$Rule@next(long,int,int):867:next > instant |==> next != instant
18738:ROR:>(long,long):>=(long,long):org.joda.time.tz.DateTimeZoneBuilder$Rule@next(long,int,int):867:next > instant |==> next >= instant
18739:ROR:>(long,long):FALSE(long,long):org.joda.time.tz.DateTimeZoneBuilder$Rule@next(long,int,int):867:next > instant |==> false
18740:AOR:+(long,long):%(long,long):org.joda.time.tz.DateTimeZoneBuilder$Rule@next(long,int,int):868:next + wallOffset |==> next % wallOffset
18741:AOR:+(long,long):*(long,long):org.joda.time.tz.DateTimeZoneBuilder$Rule@next(long,int,int):868:next + wallOffset |==> next * wallOffset
18742:AOR:+(long,long):-(long,long):org.joda.time.tz.DateTimeZoneBuilder$Rule@next(long,int,int):868:next + wallOffset |==> next - wallOffset
18743:AOR:+(long,long):/(long,long):org.joda.time.tz.DateTimeZoneBuilder$Rule@next(long,int,int):868:next + wallOffset |==> next / wallOffset
18744:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$Rule@next(long,int,int):868:year = chrono.year().get(next + wallOffset) |==> <NO-OP>
18745:ROR:>(int,int):!=(int,int):org.joda.time.tz.DateTimeZoneBuilder$Rule@next(long,int,int):869:year > iToYear |==> year != iToYear
18746:ROR:>(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder$Rule@next(long,int,int):869:year > iToYear |==> year >= iToYear
18747:ROR:>(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$Rule@next(long,int,int):869:year > iToYear |==> false
18748:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$Rule@next(long,int,int):871:next = instant |==> <NO-OP>
18749:AOR:+(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder$Transition@<init>(long,org.joda.time.tz.DateTimeZoneBuilder.Rule,int):895:standardOffset + rule.getSaveMillis() |==> standardOffset % rule.getSaveMillis()
18750:AOR:+(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder$Transition@<init>(long,org.joda.time.tz.DateTimeZoneBuilder.Rule,int):895:standardOffset + rule.getSaveMillis() |==> standardOffset * rule.getSaveMillis()
18751:AOR:+(int,int):-(int,int):org.joda.time.tz.DateTimeZoneBuilder$Transition@<init>(long,org.joda.time.tz.DateTimeZoneBuilder.Rule,int):895:standardOffset + rule.getSaveMillis() |==> standardOffset - rule.getSaveMillis()
18752:AOR:+(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder$Transition@<init>(long,org.joda.time.tz.DateTimeZoneBuilder.Rule,int):895:standardOffset + rule.getSaveMillis() |==> standardOffset / rule.getSaveMillis()
18753:AOR:-(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder$Transition@getSaveMillis():924:iWallOffset - iStandardOffset |==> iWallOffset % iStandardOffset
18754:AOR:-(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder$Transition@getSaveMillis():924:iWallOffset - iStandardOffset |==> iWallOffset * iStandardOffset
18755:AOR:-(int,int):+(int,int):org.joda.time.tz.DateTimeZoneBuilder$Transition@getSaveMillis():924:iWallOffset - iStandardOffset |==> iWallOffset + iStandardOffset
18756:AOR:-(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder$Transition@getSaveMillis():924:iWallOffset - iStandardOffset |==> iWallOffset / iStandardOffset
18757:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.DateTimeZoneBuilder$Transition@isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder.Transition):931:other == null |==> false
18758:LVR:TRUE:FALSE:org.joda.time.tz.DateTimeZoneBuilder$Transition@isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder.Transition):932:true |==> false
18759:ROR:>(long,long):!=(long,long):org.joda.time.tz.DateTimeZoneBuilder$Transition@isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder.Transition):934:iMillis > other.iMillis |==> iMillis != other.iMillis
18760:ROR:>(long,long):>=(long,long):org.joda.time.tz.DateTimeZoneBuilder$Transition@isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder.Transition):934:iMillis > other.iMillis |==> iMillis >= other.iMillis
18761:ROR:>(long,long):FALSE(long,long):org.joda.time.tz.DateTimeZoneBuilder$Transition@isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder.Transition):934:iMillis > other.iMillis |==> false
18762:ROR:!=(int,int):<(int,int):org.joda.time.tz.DateTimeZoneBuilder$Transition@isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder.Transition):935:iWallOffset != other.iWallOffset |==> iWallOffset < other.iWallOffset
18763:ROR:!=(int,int):>(int,int):org.joda.time.tz.DateTimeZoneBuilder$Transition@isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder.Transition):935:iWallOffset != other.iWallOffset |==> iWallOffset > other.iWallOffset
18764:ROR:!=(int,int):TRUE(int,int):org.joda.time.tz.DateTimeZoneBuilder$Transition@isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder.Transition):935:iWallOffset != other.iWallOffset |==> true
18765:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$Transition@isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder.Transition):935:iWallOffset != other.iWallOffset || !(iNameKey.equals(other.iNameKey)) |==> iWallOffset != other.iWallOffset != !(iNameKey.equals(other.iNameKey))
18766:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$Transition@isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder.Transition):935:iWallOffset != other.iWallOffset || !(iNameKey.equals(other.iNameKey)) |==> iWallOffset != other.iWallOffset
18767:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$Transition@isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder.Transition):937:iWallOffset != other.iWallOffset || !(iNameKey.equals(other.iNameKey)) |==> !(iNameKey.equals(other.iNameKey))
18768:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$Transition@isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder.Transition):935:iWallOffset != other.iWallOffset || !(iNameKey.equals(other.iNameKey)) |==> true
18769:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$Transition@isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder.Transition):934:iMillis > other.iMillis && (iWallOffset != other.iWallOffset || !(iNameKey.equals(other.iNameKey))) |==> iMillis > other.iMillis == (iWallOffset != other.iWallOffset || !(iNameKey.equals(other.iNameKey)))
18770:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$Transition@isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder.Transition):934:iMillis > other.iMillis && (iWallOffset != other.iWallOffset || !(iNameKey.equals(other.iNameKey))) |==> false
18771:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$Transition@isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder.Transition):934:iMillis > other.iMillis && (iWallOffset != other.iWallOffset || !(iNameKey.equals(other.iNameKey))) |==> iMillis > other.iMillis
18772:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$Transition@isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder.Transition):935:iMillis > other.iMillis && (iWallOffset != other.iWallOffset || !(iNameKey.equals(other.iNameKey))) |==> (iWallOffset != other.iWallOffset || !(iNameKey.equals(other.iNameKey)))
18773:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$RuleSet:951:100 |==> 0
18774:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$RuleSet:951:100 |==> -100
18775:AOR:+(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder$RuleSet:951:ISOChronology.getInstanceUTC().year().get(now) + 100 |==> ISOChronology.getInstanceUTC().year().get(now) % 100
18776:AOR:+(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder$RuleSet:951:ISOChronology.getInstanceUTC().year().get(now) + 100 |==> ISOChronology.getInstanceUTC().year().get(now) * 100
18777:AOR:+(int,int):-(int,int):org.joda.time.tz.DateTimeZoneBuilder$RuleSet:951:ISOChronology.getInstanceUTC().year().get(now) + 100 |==> ISOChronology.getInstanceUTC().year().get(now) - 100
18778:AOR:+(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder$RuleSet:951:ISOChronology.getInstanceUTC().year().get(now) + 100 |==> ISOChronology.getInstanceUTC().year().get(now) / 100
18779:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@<init>():966:10 |==> 0
18780:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@<init>():966:10 |==> -10
18781:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@<init>():966:iRules = new ArrayList<Rule>(10) |==> <NO-OP>
18782:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@<init>():967:iUpperYear = Integer.MAX_VALUE |==> <NO-OP>
18783:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@<init>(org.joda.time.tz.DateTimeZoneBuilder.RuleSet):974:iStandardOffset = rs.iStandardOffset |==> <NO-OP>
18784:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@<init>(org.joda.time.tz.DateTimeZoneBuilder.RuleSet):975:iRules = new ArrayList<Rule>(rs.iRules) |==> <NO-OP>
18785:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@<init>(org.joda.time.tz.DateTimeZoneBuilder.RuleSet):976:iInitialNameKey = rs.iInitialNameKey |==> <NO-OP>
18786:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@<init>(org.joda.time.tz.DateTimeZoneBuilder.RuleSet):977:iInitialSaveMillis = rs.iInitialSaveMillis |==> <NO-OP>
18787:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@<init>(org.joda.time.tz.DateTimeZoneBuilder.RuleSet):978:iUpperYear = rs.iUpperYear |==> <NO-OP>
18788:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@<init>(org.joda.time.tz.DateTimeZoneBuilder.RuleSet):979:iUpperOfYear = rs.iUpperOfYear |==> <NO-OP>
18789:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@setStandardOffset(int):988:iStandardOffset = standardOffset |==> <NO-OP>
18790:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@setFixedSavings(java.lang.String,int):992:iInitialNameKey = nameKey |==> <NO-OP>
18791:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@setFixedSavings(java.lang.String,int):993:iInitialSaveMillis = saveMillis |==> <NO-OP>
18792:COR:iRules.contains(rule):TRUE:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@addRule(org.joda.time.tz.DateTimeZoneBuilder.Rule):997:iRules.contains(rule) |==> false
18793:COR:iRules.contains(rule):FALSE:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@addRule(org.joda.time.tz.DateTimeZoneBuilder.Rule):997:iRules.contains(rule) |==> true
18794:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@addRule(org.joda.time.tz.DateTimeZoneBuilder.Rule):998:iRules.add(rule) |==> <NO-OP>
18795:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@setUpperLimit(int,org.joda.time.tz.DateTimeZoneBuilder.OfYear):1003:iUpperYear = year |==> <NO-OP>
18796:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@setUpperLimit(int,org.joda.time.tz.DateTimeZoneBuilder.OfYear):1004:iUpperOfYear = ofYear |==> <NO-OP>
18797:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@firstTransition(long):1014:iInitialNameKey != null |==> true
18798:AOR:+(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@firstTransition(long):1017:iStandardOffset + iInitialSaveMillis |==> iStandardOffset % iInitialSaveMillis
18799:AOR:+(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@firstTransition(long):1017:iStandardOffset + iInitialSaveMillis |==> iStandardOffset * iInitialSaveMillis
18800:AOR:+(int,int):-(int,int):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@firstTransition(long):1017:iStandardOffset + iInitialSaveMillis |==> iStandardOffset - iInitialSaveMillis
18801:AOR:+(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@firstTransition(long):1017:iStandardOffset + iInitialSaveMillis |==> iStandardOffset / iInitialSaveMillis
18802:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@firstTransition(long):1028:0 |==> 1
18803:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@firstTransition(long):1028:0 |==> -1
18804:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@firstTransition(long):1033:millis = next.getMillis() |==> <NO-OP>
18805:ROR:==(long,long):<=(long,long):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@firstTransition(long):1035:millis == firstMillis |==> millis <= firstMillis
18806:ROR:==(long,long):>=(long,long):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@firstTransition(long):1035:millis == firstMillis |==> millis >= firstMillis
18807:ROR:==(long,long):FALSE(long,long):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@firstTransition(long):1035:millis == firstMillis |==> false
18808:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@firstTransition(long):1036:first = new Transition(firstMillis, next) |==> <NO-OP>
18809:ROR:>(long,long):!=(long,long):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@firstTransition(long):1040:millis > firstMillis |==> millis != firstMillis
18810:ROR:>(long,long):>=(long,long):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@firstTransition(long):1040:millis > firstMillis |==> millis >= firstMillis
18811:ROR:>(long,long):FALSE(long,long):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@firstTransition(long):1040:millis > firstMillis |==> false
18812:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@firstTransition(long):1041:first == null |==> false
18813:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@firstTransition(long):1046:0 |==> 1
18814:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@firstTransition(long):1046:0 |==> -1
18815:ROR:==(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@firstTransition(long):1046:rule.getSaveMillis() == 0 |==> rule.getSaveMillis() <= 0
18816:ROR:==(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@firstTransition(long):1046:rule.getSaveMillis() == 0 |==> rule.getSaveMillis() >= 0
18817:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@firstTransition(long):1046:rule.getSaveMillis() == 0 |==> false
18818:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@firstTransition(long):1047:first = new Transition(firstMillis, rule, iStandardOffset) |==> <NO-OP>
18819:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@firstTransition(long):1052:first == null |==> false
18820:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@firstTransition(long):1056:first = new Transition(firstMillis, next.getNameKey(), iStandardOffset, iStandardOffset) |==> <NO-OP>
18821:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@firstTransition(long):1064:first = new Transition(firstMillis, next) |==> <NO-OP>
18822:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@firstTransition(long):1066:saveMillis = next.getSaveMillis() |==> <NO-OP>
18823:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@firstTransition(long):1069:iRules = copy |==> <NO-OP>
18824:ROR:<=(long,long):<(long,long):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@nextTransition(long,int):1095:next <= instant |==> next < instant
18825:ROR:<=(long,long):==(long,long):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@nextTransition(long,int):1095:next <= instant |==> next == instant
18826:ROR:<=(long,long):TRUE(long,long):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@nextTransition(long,int):1095:next <= instant |==> true
18827:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@nextTransition(long,int):1096:it.remove() |==> <NO-OP>
18828:ROR:<=(long,long):<(long,long):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@nextTransition(long,int):1101:next <= nextMillis |==> next < nextMillis
18829:ROR:<=(long,long):==(long,long):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@nextTransition(long,int):1101:next <= nextMillis |==> next == nextMillis
18830:ROR:<=(long,long):TRUE(long,long):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@nextTransition(long,int):1101:next <= nextMillis |==> true
18831:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@nextTransition(long,int):1103:nextRule = rule |==> <NO-OP>
18832:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@nextTransition(long,int):1104:nextMillis = next |==> <NO-OP>
18833:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@nextTransition(long,int):1108:nextRule == null |==> false
18834:ROR:>=(int,int):==(int,int):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@nextTransition(long,int):1113:chrono.year().get(nextMillis) >= YEAR_LIMIT |==> chrono.year().get(nextMillis) == YEAR_LIMIT
18835:ROR:>=(int,int):>(int,int):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@nextTransition(long,int):1113:chrono.year().get(nextMillis) >= YEAR_LIMIT |==> chrono.year().get(nextMillis) > YEAR_LIMIT
18836:ROR:>=(int,int):TRUE(int,int):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@nextTransition(long,int):1113:chrono.year().get(nextMillis) >= YEAR_LIMIT |==> true
18837:ROR:<(int,int):!=(int,int):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@nextTransition(long,int):1118:iUpperYear < Integer.MAX_VALUE |==> iUpperYear != Integer.MAX_VALUE
18838:ROR:<(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@nextTransition(long,int):1118:iUpperYear < Integer.MAX_VALUE |==> iUpperYear <= Integer.MAX_VALUE
18839:ROR:<(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@nextTransition(long,int):1118:iUpperYear < Integer.MAX_VALUE |==> false
18840:ROR:>=(long,long):==(long,long):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@nextTransition(long,int):1121:nextMillis >= upperMillis |==> nextMillis == upperMillis
18841:ROR:>=(long,long):>(long,long):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@nextTransition(long,int):1121:nextMillis >= upperMillis |==> nextMillis > upperMillis
18842:ROR:>=(long,long):TRUE(long,long):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@nextTransition(long,int):1121:nextMillis >= upperMillis |==> true
18843:ROR:==(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@getUpperLimit(int):1134:iUpperYear == Integer.MAX_VALUE |==> iUpperYear <= Integer.MAX_VALUE
18844:ROR:==(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@getUpperLimit(int):1134:iUpperYear == Integer.MAX_VALUE |==> iUpperYear >= Integer.MAX_VALUE
18845:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@getUpperLimit(int):1134:iUpperYear == Integer.MAX_VALUE |==> false
18846:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@buildTailZone(java.lang.String):1144:2 |==> 0
18847:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@buildTailZone(java.lang.String):1144:2 |==> -2
18848:ROR:==(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@buildTailZone(java.lang.String):1144:iRules.size() == 2 |==> iRules.size() <= 2
18849:ROR:==(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@buildTailZone(java.lang.String):1144:iRules.size() == 2 |==> iRules.size() >= 2
18850:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@buildTailZone(java.lang.String):1144:iRules.size() == 2 |==> false
18851:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@buildTailZone(java.lang.String):1145:0 |==> 1
18852:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@buildTailZone(java.lang.String):1145:0 |==> -1
18853:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@buildTailZone(java.lang.String):1146:1 |==> 0
18854:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$RuleSet@buildTailZone(java.lang.String):1146:1 |==> -1
18855:ROR:==(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@buildTailZone(java.lang.String):1147:startRule.getToYear() == Integer.MAX_VALUE |==> startRule.getToYear() <= Integer.MAX_VALUE
18856:ROR:==(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@buildTailZone(java.lang.String):1147:startRule.getToYear() == Integer.MAX_VALUE |==> startRule.getToYear() >= Integer.MAX_VALUE
18857:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@buildTailZone(java.lang.String):1147:startRule.getToYear() == Integer.MAX_VALUE |==> false
18858:ROR:==(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@buildTailZone(java.lang.String):1148:endRule.getToYear() == Integer.MAX_VALUE |==> endRule.getToYear() <= Integer.MAX_VALUE
18859:ROR:==(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@buildTailZone(java.lang.String):1148:endRule.getToYear() == Integer.MAX_VALUE |==> endRule.getToYear() >= Integer.MAX_VALUE
18860:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@buildTailZone(java.lang.String):1148:endRule.getToYear() == Integer.MAX_VALUE |==> false
18861:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@buildTailZone(java.lang.String):1147:startRule.getToYear() == Integer.MAX_VALUE && endRule.getToYear() == Integer.MAX_VALUE |==> startRule.getToYear() == Integer.MAX_VALUE == (endRule.getToYear() == Integer.MAX_VALUE)
18862:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@buildTailZone(java.lang.String):1147:startRule.getToYear() == Integer.MAX_VALUE && endRule.getToYear() == Integer.MAX_VALUE |==> false
18863:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@buildTailZone(java.lang.String):1147:startRule.getToYear() == Integer.MAX_VALUE && endRule.getToYear() == Integer.MAX_VALUE |==> startRule.getToYear() == Integer.MAX_VALUE
18864:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$RuleSet@buildTailZone(java.lang.String):1148:startRule.getToYear() == Integer.MAX_VALUE && endRule.getToYear() == Integer.MAX_VALUE |==> endRule.getToYear() == Integer.MAX_VALUE
18865:AOR:+(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@getOffset(long):1190:iStandardOffset + findMatchingRecurrence(instant).getSaveMillis() |==> iStandardOffset % findMatchingRecurrence(instant).getSaveMillis()
18866:AOR:+(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@getOffset(long):1190:iStandardOffset + findMatchingRecurrence(instant).getSaveMillis() |==> iStandardOffset * findMatchingRecurrence(instant).getSaveMillis()
18867:AOR:+(int,int):-(int,int):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@getOffset(long):1190:iStandardOffset + findMatchingRecurrence(instant).getSaveMillis() |==> iStandardOffset - findMatchingRecurrence(instant).getSaveMillis()
18868:AOR:+(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@getOffset(long):1190:iStandardOffset + findMatchingRecurrence(instant).getSaveMillis() |==> iStandardOffset / findMatchingRecurrence(instant).getSaveMillis()
18869:LVR:FALSE:TRUE:org.joda.time.tz.DateTimeZoneBuilder$DSTZone@isFixed():1198:false |==> true
18870:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$DSTZone@nextTransition(long):1211:0 |==> 1
18871:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$DSTZone@nextTransition(long):1211:0 |==> -1
18872:ROR:>(long,long):!=(long,long):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@nextTransition(long):1211:instant > 0 |==> instant != 0
18873:ROR:>(long,long):>=(long,long):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@nextTransition(long):1211:instant > 0 |==> instant >= 0
18874:ROR:>(long,long):FALSE(long,long):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@nextTransition(long):1211:instant > 0 |==> false
18875:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$DSTZone@nextTransition(long):1211:0 |==> 1
18876:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$DSTZone@nextTransition(long):1211:0 |==> -1
18877:ROR:<(long,long):!=(long,long):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@nextTransition(long):1211:start < 0 |==> start != 0
18878:ROR:<(long,long):<=(long,long):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@nextTransition(long):1211:start < 0 |==> start <= 0
18879:ROR:<(long,long):FALSE(long,long):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@nextTransition(long):1211:start < 0 |==> false
18880:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@nextTransition(long):1211:instant > 0 && start < 0 |==> instant > 0 == start < 0
18881:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@nextTransition(long):1211:instant > 0 && start < 0 |==> false
18882:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@nextTransition(long):1211:instant > 0 && start < 0 |==> instant > 0
18883:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@nextTransition(long):1211:instant > 0 && start < 0 |==> start < 0
18884:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$DSTZone@nextTransition(long):1213:start = instant |==> <NO-OP>
18885:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$DSTZone@nextTransition(long):1226:0 |==> 1
18886:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$DSTZone@nextTransition(long):1226:0 |==> -1
18887:ROR:>(long,long):!=(long,long):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@nextTransition(long):1226:instant > 0 |==> instant != 0
18888:ROR:>(long,long):>=(long,long):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@nextTransition(long):1226:instant > 0 |==> instant >= 0
18889:ROR:>(long,long):FALSE(long,long):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@nextTransition(long):1226:instant > 0 |==> false
18890:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$DSTZone@nextTransition(long):1226:0 |==> 1
18891:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$DSTZone@nextTransition(long):1226:0 |==> -1
18892:ROR:<(long,long):!=(long,long):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@nextTransition(long):1226:end < 0 |==> end != 0
18893:ROR:<(long,long):<=(long,long):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@nextTransition(long):1226:end < 0 |==> end <= 0
18894:ROR:<(long,long):FALSE(long,long):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@nextTransition(long):1226:end < 0 |==> false
18895:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@nextTransition(long):1226:instant > 0 && end < 0 |==> instant > 0 == end < 0
18896:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@nextTransition(long):1226:instant > 0 && end < 0 |==> false
18897:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@nextTransition(long):1226:instant > 0 && end < 0 |==> instant > 0
18898:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@nextTransition(long):1226:instant > 0 && end < 0 |==> end < 0
18899:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$DSTZone@nextTransition(long):1228:end = instant |==> <NO-OP>
18900:ROR:>(long,long):!=(long,long):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@nextTransition(long):1238:start > end |==> start != end
18901:ROR:>(long,long):>=(long,long):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@nextTransition(long):1238:start > end |==> start >= end
18902:ROR:>(long,long):FALSE(long,long):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@nextTransition(long):1238:start > end |==> false
18903:STD:<INC>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1244:instant++ |==> <NO-OP>
18904:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1255:0 |==> 1
18905:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1255:0 |==> -1
18906:ROR:<(long,long):!=(long,long):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1255:instant < 0 |==> instant != 0
18907:ROR:<(long,long):<=(long,long):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1255:instant < 0 |==> instant <= 0
18908:ROR:<(long,long):FALSE(long,long):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1255:instant < 0 |==> false
18909:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1255:0 |==> 1
18910:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1255:0 |==> -1
18911:ROR:>(long,long):!=(long,long):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1255:start > 0 |==> start != 0
18912:ROR:>(long,long):>=(long,long):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1255:start > 0 |==> start >= 0
18913:ROR:>(long,long):FALSE(long,long):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1255:start > 0 |==> false
18914:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1255:instant < 0 && start > 0 |==> instant < 0 == start > 0
18915:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1255:instant < 0 && start > 0 |==> false
18916:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1255:instant < 0 && start > 0 |==> instant < 0
18917:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1255:instant < 0 && start > 0 |==> start > 0
18918:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1257:start = instant |==> <NO-OP>
18919:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1270:0 |==> 1
18920:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1270:0 |==> -1
18921:ROR:<(long,long):!=(long,long):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1270:instant < 0 |==> instant != 0
18922:ROR:<(long,long):<=(long,long):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1270:instant < 0 |==> instant <= 0
18923:ROR:<(long,long):FALSE(long,long):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1270:instant < 0 |==> false
18924:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1270:0 |==> 1
18925:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1270:0 |==> -1
18926:ROR:>(long,long):!=(long,long):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1270:end > 0 |==> end != 0
18927:ROR:>(long,long):>=(long,long):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1270:end > 0 |==> end >= 0
18928:ROR:>(long,long):FALSE(long,long):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1270:end > 0 |==> false
18929:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1270:instant < 0 && end > 0 |==> instant < 0 == end > 0
18930:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1270:instant < 0 && end > 0 |==> false
18931:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1270:instant < 0 && end > 0 |==> instant < 0
18932:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1270:instant < 0 && end > 0 |==> end > 0
18933:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1272:end = instant |==> <NO-OP>
18934:ROR:>(long,long):!=(long,long):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1282:start > end |==> start != end
18935:ROR:>(long,long):>=(long,long):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1282:start > end |==> start >= end
18936:ROR:>(long,long):FALSE(long,long):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1282:start > end |==> false
18937:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1282:1 |==> 0
18938:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1282:1 |==> -1
18939:AOR:-(long,long):%(long,long):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1282:((start > end) ? start : end) - 1 |==> ((start > end) ? start : end) % 1
18940:AOR:-(long,long):*(long,long):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1282:((start > end) ? start : end) - 1 |==> ((start > end) ? start : end) * 1
18941:AOR:-(long,long):+(long,long):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1282:((start > end) ? start : end) - 1 |==> ((start > end) ? start : end) + 1
18942:AOR:-(long,long):/(long,long):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@previousTransition(long):1282:((start > end) ? start : end) - 1 |==> ((start > end) ? start : end) / 1
18943:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@equals(java.lang.Object):1286:this == obj |==> false
18944:LVR:TRUE:FALSE:org.joda.time.tz.DateTimeZoneBuilder$DSTZone@equals(java.lang.Object):1287:true |==> false
18945:ROR:==(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@equals(java.lang.Object):1293:iStandardOffset == other.iStandardOffset |==> iStandardOffset <= other.iStandardOffset
18946:ROR:==(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@equals(java.lang.Object):1293:iStandardOffset == other.iStandardOffset |==> iStandardOffset >= other.iStandardOffset
18947:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@equals(java.lang.Object):1293:iStandardOffset == other.iStandardOffset |==> false
18948:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@equals(java.lang.Object):1292:getID().equals(other.getID()) && iStandardOffset == other.iStandardOffset |==> getID().equals(other.getID()) == (iStandardOffset == other.iStandardOffset)
18949:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@equals(java.lang.Object):1292:getID().equals(other.getID()) && iStandardOffset == other.iStandardOffset |==> false
18950:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@equals(java.lang.Object):1292:getID().equals(other.getID()) && iStandardOffset == other.iStandardOffset |==> getID().equals(other.getID())
18951:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@equals(java.lang.Object):1293:getID().equals(other.getID()) && iStandardOffset == other.iStandardOffset |==> iStandardOffset == other.iStandardOffset
18952:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@equals(java.lang.Object):1292:getID().equals(other.getID()) && iStandardOffset == other.iStandardOffset && iStartRecurrence.equals(other.iStartRecurrence) |==> (getID().equals(other.getID()) && iStandardOffset == other.iStandardOffset) == iStartRecurrence.equals(other.iStartRecurrence)
18953:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@equals(java.lang.Object):1293:getID().equals(other.getID()) && iStandardOffset == other.iStandardOffset && iStartRecurrence.equals(other.iStartRecurrence) |==> false
18954:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@equals(java.lang.Object):1292:getID().equals(other.getID()) && iStandardOffset == other.iStandardOffset && iStartRecurrence.equals(other.iStartRecurrence) |==> getID().equals(other.getID()) && iStandardOffset == other.iStandardOffset
18955:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@equals(java.lang.Object):1294:getID().equals(other.getID()) && iStandardOffset == other.iStandardOffset && iStartRecurrence.equals(other.iStartRecurrence) |==> iStartRecurrence.equals(other.iStartRecurrence)
18956:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@equals(java.lang.Object):1292:getID().equals(other.getID()) && iStandardOffset == other.iStandardOffset && iStartRecurrence.equals(other.iStartRecurrence) && iEndRecurrence.equals(other.iEndRecurrence) |==> (getID().equals(other.getID()) && iStandardOffset == other.iStandardOffset && iStartRecurrence.equals(other.iStartRecurrence)) == iEndRecurrence.equals(other.iEndRecurrence)
18957:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@equals(java.lang.Object):1294:getID().equals(other.getID()) && iStandardOffset == other.iStandardOffset && iStartRecurrence.equals(other.iStartRecurrence) && iEndRecurrence.equals(other.iEndRecurrence) |==> false
18958:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@equals(java.lang.Object):1292:getID().equals(other.getID()) && iStandardOffset == other.iStandardOffset && iStartRecurrence.equals(other.iStartRecurrence) && iEndRecurrence.equals(other.iEndRecurrence) |==> getID().equals(other.getID()) && iStandardOffset == other.iStandardOffset && iStartRecurrence.equals(other.iStartRecurrence)
18959:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@equals(java.lang.Object):1295:getID().equals(other.getID()) && iStandardOffset == other.iStandardOffset && iStartRecurrence.equals(other.iStartRecurrence) && iEndRecurrence.equals(other.iEndRecurrence) |==> iEndRecurrence.equals(other.iEndRecurrence)
18960:LVR:FALSE:TRUE:org.joda.time.tz.DateTimeZoneBuilder$DSTZone@equals(java.lang.Object):1297:false |==> true
18961:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$DSTZone@writeTo(java.io.DataOutput):1301:writeMillis(out, iStandardOffset) |==> <NO-OP>
18962:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$DSTZone@writeTo(java.io.DataOutput):1302:iStartRecurrence.writeTo(out) |==> <NO-OP>
18963:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$DSTZone@writeTo(java.io.DataOutput):1303:iEndRecurrence.writeTo(out) |==> <NO-OP>
18964:ROR:>(long,long):!=(long,long):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@findMatchingRecurrence(long):1335:start > end |==> start != end
18965:ROR:>(long,long):>=(long,long):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@findMatchingRecurrence(long):1335:start > end |==> start >= end
18966:ROR:>(long,long):FALSE(long,long):org.joda.time.tz.DateTimeZoneBuilder$DSTZone@findMatchingRecurrence(long):1335:start > end |==> false
18967:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@readFrom(java.io.DataInput,java.lang.String):1346:0 |==> 1
18968:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@readFrom(java.io.DataInput,java.lang.String):1346:0 |==> -1
18969:ROR:<(int,int):!=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@readFrom(java.io.DataInput,java.lang.String):1346:i < poolSize |==> i != poolSize
18970:ROR:<(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@readFrom(java.io.DataInput,java.lang.String):1346:i < poolSize |==> i <= poolSize
18971:ROR:<(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@readFrom(java.io.DataInput,java.lang.String):1346:i < poolSize |==> false
18972:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@readFrom(java.io.DataInput,java.lang.String):1347:pool[i] = in.readUTF() |==> <NO-OP>
18973:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@readFrom(java.io.DataInput,java.lang.String):1356:0 |==> 1
18974:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@readFrom(java.io.DataInput,java.lang.String):1356:0 |==> -1
18975:ROR:<(int,int):!=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@readFrom(java.io.DataInput,java.lang.String):1356:i < size |==> i != size
18976:ROR:<(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@readFrom(java.io.DataInput,java.lang.String):1356:i < size |==> i <= size
18977:ROR:<(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@readFrom(java.io.DataInput,java.lang.String):1356:i < size |==> false
18978:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@readFrom(java.io.DataInput,java.lang.String):1357:transitions[i] = readMillis(in) |==> <NO-OP>
18979:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@readFrom(java.io.DataInput,java.lang.String):1358:wallOffsets[i] = (int)readMillis(in) |==> <NO-OP>
18980:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@readFrom(java.io.DataInput,java.lang.String):1359:standardOffsets[i] = (int)readMillis(in) |==> <NO-OP>
18981:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@readFrom(java.io.DataInput,java.lang.String):1362:256 |==> 0
18982:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@readFrom(java.io.DataInput,java.lang.String):1362:256 |==> -256
18983:ROR:<(int,int):!=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@readFrom(java.io.DataInput,java.lang.String):1362:poolSize < 256 |==> poolSize != 256
18984:ROR:<(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@readFrom(java.io.DataInput,java.lang.String):1362:poolSize < 256 |==> poolSize <= 256
18985:ROR:<(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@readFrom(java.io.DataInput,java.lang.String):1362:poolSize < 256 |==> false
18986:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@readFrom(java.io.DataInput,java.lang.String):1367:nameKeys[i] = pool[index] |==> <NO-OP>
18987:COR:in.readBoolean():TRUE:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@readFrom(java.io.DataInput,java.lang.String):1374:in.readBoolean() |==> false
18988:COR:in.readBoolean():FALSE:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@readFrom(java.io.DataInput,java.lang.String):1374:in.readBoolean() |==> true
18989:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@readFrom(java.io.DataInput,java.lang.String):1375:tailZone = DSTZone.readFrom(in, id) |==> <NO-OP>
18990:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1393:0 |==> 1
18991:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1393:0 |==> -1
18992:ROR:==(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1393:size == 0 |==> size <= 0
18993:ROR:==(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1393:size == 0 |==> size >= 0
18994:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1393:size == 0 |==> false
18995:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1403:0 |==> 1
18996:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1403:0 |==> -1
18997:ROR:<(int,int):!=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1403:i < size |==> i != size
18998:ROR:<(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1403:i < size |==> i <= size
18999:ROR:<(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1403:i < size |==> false
19000:COR:tr.isTransitionFrom(last):TRUE:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1406:tr.isTransitionFrom(last) |==> false
19001:COR:tr.isTransitionFrom(last):FALSE:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1406:tr.isTransitionFrom(last) |==> true
19002:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1410:trans[i] = tr.getMillis() |==> <NO-OP>
19003:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1411:wallOffsets[i] = tr.getWallOffset() |==> <NO-OP>
19004:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1412:standardOffsets[i] = tr.getStandardOffset() |==> <NO-OP>
19005:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1413:nameKeys[i] = tr.getNameKey() |==> <NO-OP>
19006:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1415:last = tr |==> <NO-OP>
19007:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1420:5 |==> 0
19008:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1420:5 |==> -5
19009:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1422:0 |==> 1
19010:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1422:0 |==> -1
19011:ROR:<(int,int):!=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1422:j < zoneStrings.length |==> j != zoneStrings.length
19012:ROR:<(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1422:j < zoneStrings.length |==> j <= zoneStrings.length
19013:ROR:<(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1422:j < zoneStrings.length |==> false
19014:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1424:set != null |==> true
19015:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1424:5 |==> 0
19016:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1424:5 |==> -5
19017:ROR:==(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1424:set.length == 5 |==> set.length <= 5
19018:ROR:==(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1424:set.length == 5 |==> set.length >= 5
19019:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1424:set.length == 5 |==> false
19020:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1424:set != null && set.length == 5 |==> set != null == (set.length == 5)
19021:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1424:set != null && set.length == 5 |==> false
19022:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1424:set != null && set.length == 5 |==> set != null
19023:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1424:set != null && set.length == 5 |==> set.length == 5
19024:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1424:0 |==> 1
19025:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1424:0 |==> -1
19026:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1424:set != null && set.length == 5 && id.equals(set[0]) |==> (set != null && set.length == 5) == id.equals(set[0])
19027:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1424:set != null && set.length == 5 && id.equals(set[0]) |==> false
19028:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1424:set != null && set.length == 5 && id.equals(set[0]) |==> set != null && set.length == 5
19029:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1424:set != null && set.length == 5 && id.equals(set[0]) |==> id.equals(set[0])
19030:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1425:zoneNameData = set |==> <NO-OP>
19031:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1431:0 |==> 1
19032:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1431:0 |==> -1
19033:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1431:1 |==> 0
19034:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1431:1 |==> -1
19035:AOR:-(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1431:nameKeys.length - 1 |==> nameKeys.length % 1
19036:AOR:-(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1431:nameKeys.length - 1 |==> nameKeys.length * 1
19037:AOR:-(int,int):+(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1431:nameKeys.length - 1 |==> nameKeys.length + 1
19038:AOR:-(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1431:nameKeys.length - 1 |==> nameKeys.length / 1
19039:ROR:<(int,int):!=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1431:i < nameKeys.length - 1 |==> i != nameKeys.length - 1
19040:ROR:<(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1431:i < nameKeys.length - 1 |==> i <= nameKeys.length - 1
19041:ROR:<(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1431:i < nameKeys.length - 1 |==> false
19042:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1433:1 |==> 0
19043:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1433:1 |==> -1
19044:AOR:+(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1433:i + 1 |==> i % 1
19045:AOR:+(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1433:i + 1 |==> i * 1
19046:AOR:+(int,int):-(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1433:i + 1 |==> i - 1
19047:AOR:+(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1433:i + 1 |==> i / 1
19048:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1435:1 |==> 0
19049:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1435:1 |==> -1
19050:AOR:+(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1435:i + 1 |==> i % 1
19051:AOR:+(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1435:i + 1 |==> i * 1
19052:AOR:+(int,int):-(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1435:i + 1 |==> i - 1
19053:AOR:+(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1435:i + 1 |==> i / 1
19054:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1437:1 |==> 0
19055:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1437:1 |==> -1
19056:AOR:+(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1437:i + 1 |==> i % 1
19057:AOR:+(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1437:i + 1 |==> i * 1
19058:AOR:+(int,int):-(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1437:i + 1 |==> i - 1
19059:AOR:+(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1437:i + 1 |==> i / 1
19060:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1438:1 |==> 0
19061:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1438:1 |==> -1
19062:AOR:+(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1438:i + 1 |==> i % 1
19063:AOR:+(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1438:i + 1 |==> i * 1
19064:AOR:+(int,int):-(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1438:i + 1 |==> i - 1
19065:AOR:+(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1438:i + 1 |==> i / 1
19066:ROR:!=(long,long):<(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1439:curOffset != nextOffset |==> curOffset < nextOffset
19067:ROR:!=(long,long):>(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1439:curOffset != nextOffset |==> curOffset > nextOffset
19068:ROR:!=(long,long):TRUE(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1439:curOffset != nextOffset |==> true
19069:ROR:==(long,long):<=(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1440:curStdOffset == nextStdOffset |==> curStdOffset <= nextStdOffset
19070:ROR:==(long,long):>=(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1440:curStdOffset == nextStdOffset |==> curStdOffset >= nextStdOffset
19071:ROR:==(long,long):FALSE(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1440:curStdOffset == nextStdOffset |==> false
19072:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1439:curOffset != nextOffset && curStdOffset == nextStdOffset |==> curOffset != nextOffset == (curStdOffset == nextStdOffset)
19073:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1439:curOffset != nextOffset && curStdOffset == nextStdOffset |==> false
19074:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1439:curOffset != nextOffset && curStdOffset == nextStdOffset |==> curOffset != nextOffset
19075:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1440:curOffset != nextOffset && curStdOffset == nextStdOffset |==> curStdOffset == nextStdOffset
19076:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1439:curOffset != nextOffset && curStdOffset == nextStdOffset && curNameKey.equals(nextNameKey) |==> (curOffset != nextOffset && curStdOffset == nextStdOffset) == curNameKey.equals(nextNameKey)
19077:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1440:curOffset != nextOffset && curStdOffset == nextStdOffset && curNameKey.equals(nextNameKey) |==> false
19078:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1439:curOffset != nextOffset && curStdOffset == nextStdOffset && curNameKey.equals(nextNameKey) |==> curOffset != nextOffset && curStdOffset == nextStdOffset
19079:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1441:curOffset != nextOffset && curStdOffset == nextStdOffset && curNameKey.equals(nextNameKey) |==> curNameKey.equals(nextNameKey)
19080:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1442:0 |==> 1
19081:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1442:0 |==> -1
19082:ROR:==(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1442:p.getYears() == 0 |==> p.getYears() <= 0
19083:ROR:==(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1442:p.getYears() == 0 |==> p.getYears() >= 0
19084:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1442:p.getYears() == 0 |==> false
19085:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1439:curOffset != nextOffset && curStdOffset == nextStdOffset && curNameKey.equals(nextNameKey) && p.getYears() == 0 |==> (curOffset != nextOffset && curStdOffset == nextStdOffset && curNameKey.equals(nextNameKey)) == (p.getYears() == 0)
19086:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1441:curOffset != nextOffset && curStdOffset == nextStdOffset && curNameKey.equals(nextNameKey) && p.getYears() == 0 |==> false
19087:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1439:curOffset != nextOffset && curStdOffset == nextStdOffset && curNameKey.equals(nextNameKey) && p.getYears() == 0 |==> curOffset != nextOffset && curStdOffset == nextStdOffset && curNameKey.equals(nextNameKey)
19088:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1442:curOffset != nextOffset && curStdOffset == nextStdOffset && curNameKey.equals(nextNameKey) && p.getYears() == 0 |==> p.getYears() == 0
19089:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1442:4 |==> 0
19090:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1442:4 |==> -4
19091:ROR:>(int,int):!=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1442:p.getMonths() > 4 |==> p.getMonths() != 4
19092:ROR:>(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1442:p.getMonths() > 4 |==> p.getMonths() >= 4
19093:ROR:>(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1442:p.getMonths() > 4 |==> false
19094:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1439:curOffset != nextOffset && curStdOffset == nextStdOffset && curNameKey.equals(nextNameKey) && p.getYears() == 0 && p.getMonths() > 4 |==> (curOffset != nextOffset && curStdOffset == nextStdOffset && curNameKey.equals(nextNameKey) && p.getYears() == 0) == p.getMonths() > 4
19095:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1442:curOffset != nextOffset && curStdOffset == nextStdOffset && curNameKey.equals(nextNameKey) && p.getYears() == 0 && p.getMonths() > 4 |==> false
19096:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1439:curOffset != nextOffset && curStdOffset == nextStdOffset && curNameKey.equals(nextNameKey) && p.getYears() == 0 && p.getMonths() > 4 |==> curOffset != nextOffset && curStdOffset == nextStdOffset && curNameKey.equals(nextNameKey) && p.getYears() == 0
19097:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1442:curOffset != nextOffset && curStdOffset == nextStdOffset && curNameKey.equals(nextNameKey) && p.getYears() == 0 && p.getMonths() > 4 |==> p.getMonths() > 4
19098:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1442:8 |==> 0
19099:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1442:8 |==> -8
19100:ROR:<(int,int):!=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1442:p.getMonths() < 8 |==> p.getMonths() != 8
19101:ROR:<(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1442:p.getMonths() < 8 |==> p.getMonths() <= 8
19102:ROR:<(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1442:p.getMonths() < 8 |==> false
19103:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1439:curOffset != nextOffset && curStdOffset == nextStdOffset && curNameKey.equals(nextNameKey) && p.getYears() == 0 && p.getMonths() > 4 && p.getMonths() < 8 |==> (curOffset != nextOffset && curStdOffset == nextStdOffset && curNameKey.equals(nextNameKey) && p.getYears() == 0 && p.getMonths() > 4) == p.getMonths() < 8
19104:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1442:curOffset != nextOffset && curStdOffset == nextStdOffset && curNameKey.equals(nextNameKey) && p.getYears() == 0 && p.getMonths() > 4 && p.getMonths() < 8 |==> false
19105:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1439:curOffset != nextOffset && curStdOffset == nextStdOffset && curNameKey.equals(nextNameKey) && p.getYears() == 0 && p.getMonths() > 4 && p.getMonths() < 8 |==> curOffset != nextOffset && curStdOffset == nextStdOffset && curNameKey.equals(nextNameKey) && p.getYears() == 0 && p.getMonths() > 4
19106:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1442:curOffset != nextOffset && curStdOffset == nextStdOffset && curNameKey.equals(nextNameKey) && p.getYears() == 0 && p.getMonths() > 4 && p.getMonths() < 8 |==> p.getMonths() < 8
19107:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1443:2 |==> 0
19108:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1443:2 |==> -2
19109:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1439:curOffset != nextOffset && curStdOffset == nextStdOffset && curNameKey.equals(nextNameKey) && p.getYears() == 0 && p.getMonths() > 4 && p.getMonths() < 8 && curNameKey.equals(zoneNameData[2]) |==> (curOffset != nextOffset && curStdOffset == nextStdOffset && curNameKey.equals(nextNameKey) && p.getYears() == 0 && p.getMonths() > 4 && p.getMonths() < 8) == curNameKey.equals(zoneNameData[2])
19110:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1442:curOffset != nextOffset && curStdOffset == nextStdOffset && curNameKey.equals(nextNameKey) && p.getYears() == 0 && p.getMonths() > 4 && p.getMonths() < 8 && curNameKey.equals(zoneNameData[2]) |==> false
19111:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1439:curOffset != nextOffset && curStdOffset == nextStdOffset && curNameKey.equals(nextNameKey) && p.getYears() == 0 && p.getMonths() > 4 && p.getMonths() < 8 && curNameKey.equals(zoneNameData[2]) |==> curOffset != nextOffset && curStdOffset == nextStdOffset && curNameKey.equals(nextNameKey) && p.getYears() == 0 && p.getMonths() > 4 && p.getMonths() < 8
19112:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1443:curOffset != nextOffset && curStdOffset == nextStdOffset && curNameKey.equals(nextNameKey) && p.getYears() == 0 && p.getMonths() > 4 && p.getMonths() < 8 && curNameKey.equals(zoneNameData[2]) |==> curNameKey.equals(zoneNameData[2])
19113:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1444:4 |==> 0
19114:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1444:4 |==> -4
19115:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1439:curOffset != nextOffset && curStdOffset == nextStdOffset && curNameKey.equals(nextNameKey) && p.getYears() == 0 && p.getMonths() > 4 && p.getMonths() < 8 && curNameKey.equals(zoneNameData[2]) && curNameKey.equals(zoneNameData[4]) |==> (curOffset != nextOffset && curStdOffset == nextStdOffset && curNameKey.equals(nextNameKey) && p.getYears() == 0 && p.getMonths() > 4 && p.getMonths() < 8 && curNameKey.equals(zoneNameData[2])) == curNameKey.equals(zoneNameData[4])
19116:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1443:curOffset != nextOffset && curStdOffset == nextStdOffset && curNameKey.equals(nextNameKey) && p.getYears() == 0 && p.getMonths() > 4 && p.getMonths() < 8 && curNameKey.equals(zoneNameData[2]) && curNameKey.equals(zoneNameData[4]) |==> false
19117:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1439:curOffset != nextOffset && curStdOffset == nextStdOffset && curNameKey.equals(nextNameKey) && p.getYears() == 0 && p.getMonths() > 4 && p.getMonths() < 8 && curNameKey.equals(zoneNameData[2]) && curNameKey.equals(zoneNameData[4]) |==> curOffset != nextOffset && curStdOffset == nextStdOffset && curNameKey.equals(nextNameKey) && p.getYears() == 0 && p.getMonths() > 4 && p.getMonths() < 8 && curNameKey.equals(zoneNameData[2])
19118:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1444:curOffset != nextOffset && curStdOffset == nextStdOffset && curNameKey.equals(nextNameKey) && p.getYears() == 0 && p.getMonths() > 4 && p.getMonths() < 8 && curNameKey.equals(zoneNameData[2]) && curNameKey.equals(zoneNameData[4]) |==> curNameKey.equals(zoneNameData[4])
19119:COR:ZoneInfoCompiler.verbose():TRUE:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1446:ZoneInfoCompiler.verbose() |==> false
19120:COR:ZoneInfoCompiler.verbose():FALSE:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1446:ZoneInfoCompiler.verbose() |==> true
19121:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1447:System.out.println("Fixing duplicate name key - " + nextNameKey) |==> <NO-OP>
19122:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1449:1 |==> 0
19123:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1449:1 |==> -1
19124:AOR:+(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1449:i + 1 |==> i % 1
19125:AOR:+(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1449:i + 1 |==> i * 1
19126:AOR:+(int,int):-(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1449:i + 1 |==> i - 1
19127:AOR:+(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1449:i + 1 |==> i / 1
19128:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1448:System.out.println("     - " + new DateTime(trans[i], chrono) + " - " + new DateTime(trans[i + 1], chrono)) |==> <NO-OP>
19129:ROR:>(long,long):!=(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1451:curOffset > nextOffset |==> curOffset != nextOffset
19130:ROR:>(long,long):>=(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1451:curOffset > nextOffset |==> curOffset >= nextOffset
19131:ROR:>(long,long):FALSE(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1451:curOffset > nextOffset |==> false
19132:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1452:nameKeys[i] = (curNameKey + "-Summer").intern() |==> <NO-OP>
19133:ROR:<(long,long):!=(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1453:curOffset < nextOffset |==> curOffset != nextOffset
19134:ROR:<(long,long):<=(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1453:curOffset < nextOffset |==> curOffset <= nextOffset
19135:ROR:<(long,long):FALSE(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1453:curOffset < nextOffset |==> false
19136:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1454:1 |==> 0
19137:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1454:1 |==> -1
19138:AOR:+(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1454:i + 1 |==> i % 1
19139:AOR:+(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1454:i + 1 |==> i * 1
19140:AOR:+(int,int):-(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1454:i + 1 |==> i - 1
19141:AOR:+(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1454:i + 1 |==> i / 1
19142:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1454:nameKeys[i + 1] = (nextNameKey + "-Summer").intern() |==> <NO-OP>
19143:STD:<INC>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1455:i++ |==> <NO-OP>
19144:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1460:tailZone != null |==> true
19145:COR:tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey()):TRUE:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1462:tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey()) |==> false
19146:COR:tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey()):FALSE:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1462:tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey()) |==> true
19147:COR:ZoneInfoCompiler.verbose():TRUE:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1463:ZoneInfoCompiler.verbose() |==> false
19148:COR:ZoneInfoCompiler.verbose():FALSE:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1463:ZoneInfoCompiler.verbose() |==> true
19149:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1464:System.out.println("Fixing duplicate recurrent name key - " + tailZone.iStartRecurrence.getNameKey()) |==> <NO-OP>
19150:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1467:0 |==> 1
19151:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1467:0 |==> -1
19152:ROR:>(int,int):!=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1467:tailZone.iStartRecurrence.getSaveMillis() > 0 |==> tailZone.iStartRecurrence.getSaveMillis() != 0
19153:ROR:>(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1467:tailZone.iStartRecurrence.getSaveMillis() > 0 |==> tailZone.iStartRecurrence.getSaveMillis() >= 0
19154:ROR:>(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1467:tailZone.iStartRecurrence.getSaveMillis() > 0 |==> false
19155:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1468:tailZone = new DSTZone(tailZone.getID(), tailZone.iStandardOffset, tailZone.iStartRecurrence.renameAppend("-Summer"), tailZone.iEndRecurrence) |==> <NO-OP>
19156:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1474:tailZone = new DSTZone(tailZone.getID(), tailZone.iStandardOffset, tailZone.iStartRecurrence, tailZone.iEndRecurrence.renameAppend("-Summer")) |==> <NO-OP>
19157:COR:outputID:TRUE:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1484:outputID |==> false
19158:COR:outputID:FALSE:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@create(java.lang.String,boolean,java.util.ArrayList<org.joda.time.tz.DateTimeZoneBuilder.Transition>,org.joda.time.tz.DateTimeZoneBuilder.DSTZone):1484:outputID |==> true
19159:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getNameKey(long):1514:0 |==> 1
19160:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getNameKey(long):1514:0 |==> -1
19161:ROR:>=(int,int):==(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getNameKey(long):1514:i >= 0 |==> i == 0
19162:ROR:>=(int,int):>(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getNameKey(long):1514:i >= 0 |==> i > 0
19163:ROR:>=(int,int):TRUE(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getNameKey(long):1514:i >= 0 |==> true
19164:ORU:~(int):+(int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getNameKey(long):1517:~i |==> +i
19165:ORU:~(int):-(int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getNameKey(long):1517:~i |==> -i
19166:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getNameKey(long):1517:i = ~i |==> <NO-OP>
19167:ROR:<(int,int):!=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getNameKey(long):1518:i < transitions.length |==> i != transitions.length
19168:ROR:<(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getNameKey(long):1518:i < transitions.length |==> i <= transitions.length
19169:ROR:<(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getNameKey(long):1518:i < transitions.length |==> false
19170:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getNameKey(long):1519:0 |==> 1
19171:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getNameKey(long):1519:0 |==> -1
19172:ROR:>(int,int):!=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getNameKey(long):1519:i > 0 |==> i != 0
19173:ROR:>(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getNameKey(long):1519:i > 0 |==> i >= 0
19174:ROR:>(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getNameKey(long):1519:i > 0 |==> false
19175:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getNameKey(long):1520:1 |==> 0
19176:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getNameKey(long):1520:1 |==> -1
19177:AOR:-(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getNameKey(long):1520:i - 1 |==> i % 1
19178:AOR:-(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getNameKey(long):1520:i - 1 |==> i * 1
19179:AOR:-(int,int):+(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getNameKey(long):1520:i - 1 |==> i + 1
19180:AOR:-(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getNameKey(long):1520:i - 1 |==> i / 1
19181:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getNameKey(long):1524:iTailZone == null |==> false
19182:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getNameKey(long):1525:1 |==> 0
19183:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getNameKey(long):1525:1 |==> -1
19184:AOR:-(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getNameKey(long):1525:i - 1 |==> i % 1
19185:AOR:-(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getNameKey(long):1525:i - 1 |==> i * 1
19186:AOR:-(int,int):+(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getNameKey(long):1525:i - 1 |==> i + 1
19187:AOR:-(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getNameKey(long):1525:i - 1 |==> i / 1
19188:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getOffset(long):1533:0 |==> 1
19189:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getOffset(long):1533:0 |==> -1
19190:ROR:>=(int,int):==(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getOffset(long):1533:i >= 0 |==> i == 0
19191:ROR:>=(int,int):>(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getOffset(long):1533:i >= 0 |==> i > 0
19192:ROR:>=(int,int):TRUE(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getOffset(long):1533:i >= 0 |==> true
19193:ORU:~(int):+(int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getOffset(long):1536:~i |==> +i
19194:ORU:~(int):-(int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getOffset(long):1536:~i |==> -i
19195:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getOffset(long):1536:i = ~i |==> <NO-OP>
19196:ROR:<(int,int):!=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getOffset(long):1537:i < transitions.length |==> i != transitions.length
19197:ROR:<(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getOffset(long):1537:i < transitions.length |==> i <= transitions.length
19198:ROR:<(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getOffset(long):1537:i < transitions.length |==> false
19199:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getOffset(long):1538:0 |==> 1
19200:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getOffset(long):1538:0 |==> -1
19201:ROR:>(int,int):!=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getOffset(long):1538:i > 0 |==> i != 0
19202:ROR:>(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getOffset(long):1538:i > 0 |==> i >= 0
19203:ROR:>(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getOffset(long):1538:i > 0 |==> false
19204:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getOffset(long):1539:1 |==> 0
19205:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getOffset(long):1539:1 |==> -1
19206:AOR:-(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getOffset(long):1539:i - 1 |==> i % 1
19207:AOR:-(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getOffset(long):1539:i - 1 |==> i * 1
19208:AOR:-(int,int):+(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getOffset(long):1539:i - 1 |==> i + 1
19209:AOR:-(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getOffset(long):1539:i - 1 |==> i / 1
19210:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getOffset(long):1541:0 |==> 1
19211:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getOffset(long):1541:0 |==> -1
19212:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getOffset(long):1543:iTailZone == null |==> false
19213:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getOffset(long):1544:1 |==> 0
19214:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getOffset(long):1544:1 |==> -1
19215:AOR:-(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getOffset(long):1544:i - 1 |==> i % 1
19216:AOR:-(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getOffset(long):1544:i - 1 |==> i * 1
19217:AOR:-(int,int):+(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getOffset(long):1544:i - 1 |==> i + 1
19218:AOR:-(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getOffset(long):1544:i - 1 |==> i / 1
19219:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getStandardOffset(long):1552:0 |==> 1
19220:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getStandardOffset(long):1552:0 |==> -1
19221:ROR:>=(int,int):==(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getStandardOffset(long):1552:i >= 0 |==> i == 0
19222:ROR:>=(int,int):>(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getStandardOffset(long):1552:i >= 0 |==> i > 0
19223:ROR:>=(int,int):TRUE(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getStandardOffset(long):1552:i >= 0 |==> true
19224:ORU:~(int):+(int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getStandardOffset(long):1555:~i |==> +i
19225:ORU:~(int):-(int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getStandardOffset(long):1555:~i |==> -i
19226:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getStandardOffset(long):1555:i = ~i |==> <NO-OP>
19227:ROR:<(int,int):!=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getStandardOffset(long):1556:i < transitions.length |==> i != transitions.length
19228:ROR:<(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getStandardOffset(long):1556:i < transitions.length |==> i <= transitions.length
19229:ROR:<(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getStandardOffset(long):1556:i < transitions.length |==> false
19230:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getStandardOffset(long):1557:0 |==> 1
19231:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getStandardOffset(long):1557:0 |==> -1
19232:ROR:>(int,int):!=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getStandardOffset(long):1557:i > 0 |==> i != 0
19233:ROR:>(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getStandardOffset(long):1557:i > 0 |==> i >= 0
19234:ROR:>(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getStandardOffset(long):1557:i > 0 |==> false
19235:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getStandardOffset(long):1558:1 |==> 0
19236:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getStandardOffset(long):1558:1 |==> -1
19237:AOR:-(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getStandardOffset(long):1558:i - 1 |==> i % 1
19238:AOR:-(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getStandardOffset(long):1558:i - 1 |==> i * 1
19239:AOR:-(int,int):+(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getStandardOffset(long):1558:i - 1 |==> i + 1
19240:AOR:-(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getStandardOffset(long):1558:i - 1 |==> i / 1
19241:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getStandardOffset(long):1560:0 |==> 1
19242:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getStandardOffset(long):1560:0 |==> -1
19243:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getStandardOffset(long):1562:iTailZone == null |==> false
19244:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getStandardOffset(long):1563:1 |==> 0
19245:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getStandardOffset(long):1563:1 |==> -1
19246:AOR:-(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getStandardOffset(long):1563:i - 1 |==> i % 1
19247:AOR:-(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getStandardOffset(long):1563:i - 1 |==> i * 1
19248:AOR:-(int,int):+(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getStandardOffset(long):1563:i - 1 |==> i + 1
19249:AOR:-(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@getStandardOffset(long):1563:i - 1 |==> i / 1
19250:LVR:FALSE:TRUE:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isFixed():1569:false |==> true
19251:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@nextTransition(long):1575:0 |==> 1
19252:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@nextTransition(long):1575:0 |==> -1
19253:ROR:>=(int,int):==(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@nextTransition(long):1575:i >= 0 |==> i == 0
19254:ROR:>=(int,int):>(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@nextTransition(long):1575:i >= 0 |==> i > 0
19255:ROR:>=(int,int):TRUE(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@nextTransition(long):1575:i >= 0 |==> true
19256:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@nextTransition(long):1575:1 |==> 0
19257:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@nextTransition(long):1575:1 |==> -1
19258:AOR:+(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@nextTransition(long):1575:i + 1 |==> i % 1
19259:AOR:+(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@nextTransition(long):1575:i + 1 |==> i * 1
19260:AOR:+(int,int):-(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@nextTransition(long):1575:i + 1 |==> i - 1
19261:AOR:+(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@nextTransition(long):1575:i + 1 |==> i / 1
19262:ORU:~(int):+(int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@nextTransition(long):1575:~i |==> +i
19263:ORU:~(int):-(int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@nextTransition(long):1575:~i |==> -i
19264:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@nextTransition(long):1575:i = (i >= 0) ? (i + 1) : ~i |==> <NO-OP>
19265:ROR:<(int,int):!=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@nextTransition(long):1576:i < transitions.length |==> i != transitions.length
19266:ROR:<(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@nextTransition(long):1576:i < transitions.length |==> i <= transitions.length
19267:ROR:<(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@nextTransition(long):1576:i < transitions.length |==> false
19268:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@nextTransition(long):1579:iTailZone == null |==> false
19269:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@nextTransition(long):1582:1 |==> 0
19270:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@nextTransition(long):1582:1 |==> -1
19271:AOR:-(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@nextTransition(long):1582:transitions.length - 1 |==> transitions.length % 1
19272:AOR:-(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@nextTransition(long):1582:transitions.length - 1 |==> transitions.length * 1
19273:AOR:-(int,int):+(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@nextTransition(long):1582:transitions.length - 1 |==> transitions.length + 1
19274:AOR:-(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@nextTransition(long):1582:transitions.length - 1 |==> transitions.length / 1
19275:ROR:<(long,long):!=(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@nextTransition(long):1583:instant < end |==> instant != end
19276:ROR:<(long,long):<=(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@nextTransition(long):1583:instant < end |==> instant <= end
19277:ROR:<(long,long):FALSE(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@nextTransition(long):1583:instant < end |==> false
19278:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@nextTransition(long):1584:instant = end |==> <NO-OP>
19279:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1592:0 |==> 1
19280:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1592:0 |==> -1
19281:ROR:>=(int,int):==(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1592:i >= 0 |==> i == 0
19282:ROR:>=(int,int):>(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1592:i >= 0 |==> i > 0
19283:ROR:>=(int,int):TRUE(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1592:i >= 0 |==> true
19284:ROR:>(long,long):!=(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1593:instant > Long.MIN_VALUE |==> instant != Long.MIN_VALUE
19285:ROR:>(long,long):>=(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1593:instant > Long.MIN_VALUE |==> instant >= Long.MIN_VALUE
19286:ROR:>(long,long):FALSE(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1593:instant > Long.MIN_VALUE |==> false
19287:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1594:1 |==> 0
19288:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1594:1 |==> -1
19289:AOR:-(long,long):%(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1594:instant - 1 |==> instant % 1
19290:AOR:-(long,long):*(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1594:instant - 1 |==> instant * 1
19291:AOR:-(long,long):+(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1594:instant - 1 |==> instant + 1
19292:AOR:-(long,long):/(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1594:instant - 1 |==> instant / 1
19293:ORU:~(int):+(int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1598:~i |==> +i
19294:ORU:~(int):-(int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1598:~i |==> -i
19295:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1598:i = ~i |==> <NO-OP>
19296:ROR:<(int,int):!=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1599:i < transitions.length |==> i != transitions.length
19297:ROR:<(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1599:i < transitions.length |==> i <= transitions.length
19298:ROR:<(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1599:i < transitions.length |==> false
19299:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1600:0 |==> 1
19300:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1600:0 |==> -1
19301:ROR:>(int,int):!=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1600:i > 0 |==> i != 0
19302:ROR:>(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1600:i > 0 |==> i >= 0
19303:ROR:>(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1600:i > 0 |==> false
19304:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1601:1 |==> 0
19305:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1601:1 |==> -1
19306:AOR:-(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1601:i - 1 |==> i % 1
19307:AOR:-(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1601:i - 1 |==> i * 1
19308:AOR:-(int,int):+(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1601:i - 1 |==> i + 1
19309:AOR:-(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1601:i - 1 |==> i / 1
19310:ROR:>(long,long):!=(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1602:prev > Long.MIN_VALUE |==> prev != Long.MIN_VALUE
19311:ROR:>(long,long):>=(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1602:prev > Long.MIN_VALUE |==> prev >= Long.MIN_VALUE
19312:ROR:>(long,long):FALSE(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1602:prev > Long.MIN_VALUE |==> false
19313:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1603:1 |==> 0
19314:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1603:1 |==> -1
19315:AOR:-(long,long):%(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1603:prev - 1 |==> prev % 1
19316:AOR:-(long,long):*(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1603:prev - 1 |==> prev * 1
19317:AOR:-(long,long):+(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1603:prev - 1 |==> prev + 1
19318:AOR:-(long,long):/(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1603:prev - 1 |==> prev / 1
19319:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1608:iTailZone != null |==> true
19320:ROR:<(long,long):!=(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1610:prev < instant |==> prev != instant
19321:ROR:<(long,long):<=(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1610:prev < instant |==> prev <= instant
19322:ROR:<(long,long):FALSE(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1610:prev < instant |==> false
19323:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1614:1 |==> 0
19324:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1614:1 |==> -1
19325:AOR:-(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1614:i - 1 |==> i % 1
19326:AOR:-(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1614:i - 1 |==> i * 1
19327:AOR:-(int,int):+(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1614:i - 1 |==> i + 1
19328:AOR:-(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1614:i - 1 |==> i / 1
19329:ROR:>(long,long):!=(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1615:prev > Long.MIN_VALUE |==> prev != Long.MIN_VALUE
19330:ROR:>(long,long):>=(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1615:prev > Long.MIN_VALUE |==> prev >= Long.MIN_VALUE
19331:ROR:>(long,long):FALSE(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1615:prev > Long.MIN_VALUE |==> false
19332:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1616:1 |==> 0
19333:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1616:1 |==> -1
19334:AOR:-(long,long):%(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1616:prev - 1 |==> prev % 1
19335:AOR:-(long,long):*(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1616:prev - 1 |==> prev * 1
19336:AOR:-(long,long):+(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1616:prev - 1 |==> prev + 1
19337:AOR:-(long,long):/(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@previousTransition(long):1616:prev - 1 |==> prev / 1
19338:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@equals(java.lang.Object):1622:this == obj |==> false
19339:LVR:TRUE:FALSE:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@equals(java.lang.Object):1623:true |==> false
19340:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@equals(java.lang.Object):1628:getID().equals(other.getID()) && Arrays.equals(iTransitions, other.iTransitions) |==> getID().equals(other.getID()) == Arrays.equals(iTransitions, other.iTransitions)
19341:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@equals(java.lang.Object):1628:getID().equals(other.getID()) && Arrays.equals(iTransitions, other.iTransitions) |==> false
19342:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@equals(java.lang.Object):1628:getID().equals(other.getID()) && Arrays.equals(iTransitions, other.iTransitions) |==> getID().equals(other.getID())
19343:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@equals(java.lang.Object):1629:getID().equals(other.getID()) && Arrays.equals(iTransitions, other.iTransitions) |==> Arrays.equals(iTransitions, other.iTransitions)
19344:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@equals(java.lang.Object):1628:getID().equals(other.getID()) && Arrays.equals(iTransitions, other.iTransitions) && Arrays.equals(iNameKeys, other.iNameKeys) |==> (getID().equals(other.getID()) && Arrays.equals(iTransitions, other.iTransitions)) == Arrays.equals(iNameKeys, other.iNameKeys)
19345:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@equals(java.lang.Object):1629:getID().equals(other.getID()) && Arrays.equals(iTransitions, other.iTransitions) && Arrays.equals(iNameKeys, other.iNameKeys) |==> false
19346:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@equals(java.lang.Object):1628:getID().equals(other.getID()) && Arrays.equals(iTransitions, other.iTransitions) && Arrays.equals(iNameKeys, other.iNameKeys) |==> getID().equals(other.getID()) && Arrays.equals(iTransitions, other.iTransitions)
19347:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@equals(java.lang.Object):1630:getID().equals(other.getID()) && Arrays.equals(iTransitions, other.iTransitions) && Arrays.equals(iNameKeys, other.iNameKeys) |==> Arrays.equals(iNameKeys, other.iNameKeys)
19348:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@equals(java.lang.Object):1628:getID().equals(other.getID()) && Arrays.equals(iTransitions, other.iTransitions) && Arrays.equals(iNameKeys, other.iNameKeys) && Arrays.equals(iWallOffsets, other.iWallOffsets) |==> (getID().equals(other.getID()) && Arrays.equals(iTransitions, other.iTransitions) && Arrays.equals(iNameKeys, other.iNameKeys)) == Arrays.equals(iWallOffsets, other.iWallOffsets)
19349:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@equals(java.lang.Object):1630:getID().equals(other.getID()) && Arrays.equals(iTransitions, other.iTransitions) && Arrays.equals(iNameKeys, other.iNameKeys) && Arrays.equals(iWallOffsets, other.iWallOffsets) |==> false
19350:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@equals(java.lang.Object):1628:getID().equals(other.getID()) && Arrays.equals(iTransitions, other.iTransitions) && Arrays.equals(iNameKeys, other.iNameKeys) && Arrays.equals(iWallOffsets, other.iWallOffsets) |==> getID().equals(other.getID()) && Arrays.equals(iTransitions, other.iTransitions) && Arrays.equals(iNameKeys, other.iNameKeys)
19351:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@equals(java.lang.Object):1631:getID().equals(other.getID()) && Arrays.equals(iTransitions, other.iTransitions) && Arrays.equals(iNameKeys, other.iNameKeys) && Arrays.equals(iWallOffsets, other.iWallOffsets) |==> Arrays.equals(iWallOffsets, other.iWallOffsets)
19352:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@equals(java.lang.Object):1628:getID().equals(other.getID()) && Arrays.equals(iTransitions, other.iTransitions) && Arrays.equals(iNameKeys, other.iNameKeys) && Arrays.equals(iWallOffsets, other.iWallOffsets) && Arrays.equals(iStandardOffsets, other.iStandardOffsets) |==> (getID().equals(other.getID()) && Arrays.equals(iTransitions, other.iTransitions) && Arrays.equals(iNameKeys, other.iNameKeys) && Arrays.equals(iWallOffsets, other.iWallOffsets)) == Arrays.equals(iStandardOffsets, other.iStandardOffsets)
19353:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@equals(java.lang.Object):1631:getID().equals(other.getID()) && Arrays.equals(iTransitions, other.iTransitions) && Arrays.equals(iNameKeys, other.iNameKeys) && Arrays.equals(iWallOffsets, other.iWallOffsets) && Arrays.equals(iStandardOffsets, other.iStandardOffsets) |==> false
19354:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@equals(java.lang.Object):1628:getID().equals(other.getID()) && Arrays.equals(iTransitions, other.iTransitions) && Arrays.equals(iNameKeys, other.iNameKeys) && Arrays.equals(iWallOffsets, other.iWallOffsets) && Arrays.equals(iStandardOffsets, other.iStandardOffsets) |==> getID().equals(other.getID()) && Arrays.equals(iTransitions, other.iTransitions) && Arrays.equals(iNameKeys, other.iNameKeys) && Arrays.equals(iWallOffsets, other.iWallOffsets)
19355:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@equals(java.lang.Object):1632:getID().equals(other.getID()) && Arrays.equals(iTransitions, other.iTransitions) && Arrays.equals(iNameKeys, other.iNameKeys) && Arrays.equals(iWallOffsets, other.iWallOffsets) && Arrays.equals(iStandardOffsets, other.iStandardOffsets) |==> Arrays.equals(iStandardOffsets, other.iStandardOffsets)
19356:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@equals(java.lang.Object):1633:iTailZone == null |==> false
19357:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@equals(java.lang.Object):1634:null == other.iTailZone |==> false
19358:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@equals(java.lang.Object):1628:getID().equals(other.getID()) && Arrays.equals(iTransitions, other.iTransitions) && Arrays.equals(iNameKeys, other.iNameKeys) && Arrays.equals(iWallOffsets, other.iWallOffsets) && Arrays.equals(iStandardOffsets, other.iStandardOffsets) && ((iTailZone == null) ? (null == other.iTailZone) : (iTailZone.equals(other.iTailZone))) |==> (getID().equals(other.getID()) && Arrays.equals(iTransitions, other.iTransitions) && Arrays.equals(iNameKeys, other.iNameKeys) && Arrays.equals(iWallOffsets, other.iWallOffsets) && Arrays.equals(iStandardOffsets, other.iStandardOffsets)) == ((iTailZone == null) ? (null == other.iTailZone) : (iTailZone.equals(other.iTailZone)))
19359:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@equals(java.lang.Object):1632:getID().equals(other.getID()) && Arrays.equals(iTransitions, other.iTransitions) && Arrays.equals(iNameKeys, other.iNameKeys) && Arrays.equals(iWallOffsets, other.iWallOffsets) && Arrays.equals(iStandardOffsets, other.iStandardOffsets) && ((iTailZone == null) ? (null == other.iTailZone) : (iTailZone.equals(other.iTailZone))) |==> false
19360:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@equals(java.lang.Object):1628:getID().equals(other.getID()) && Arrays.equals(iTransitions, other.iTransitions) && Arrays.equals(iNameKeys, other.iNameKeys) && Arrays.equals(iWallOffsets, other.iWallOffsets) && Arrays.equals(iStandardOffsets, other.iStandardOffsets) && ((iTailZone == null) ? (null == other.iTailZone) : (iTailZone.equals(other.iTailZone))) |==> getID().equals(other.getID()) && Arrays.equals(iTransitions, other.iTransitions) && Arrays.equals(iNameKeys, other.iNameKeys) && Arrays.equals(iWallOffsets, other.iWallOffsets) && Arrays.equals(iStandardOffsets, other.iStandardOffsets)
19361:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@equals(java.lang.Object):1633:getID().equals(other.getID()) && Arrays.equals(iTransitions, other.iTransitions) && Arrays.equals(iNameKeys, other.iNameKeys) && Arrays.equals(iWallOffsets, other.iWallOffsets) && Arrays.equals(iStandardOffsets, other.iStandardOffsets) && ((iTailZone == null) ? (null == other.iTailZone) : (iTailZone.equals(other.iTailZone))) |==> ((iTailZone == null) ? (null == other.iTailZone) : (iTailZone.equals(other.iTailZone)))
19362:LVR:FALSE:TRUE:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@equals(java.lang.Object):1637:false |==> true
19363:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1645:0 |==> 1
19364:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1645:0 |==> -1
19365:ROR:<(int,int):!=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1645:i < size |==> i != size
19366:ROR:<(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1645:i < size |==> i <= size
19367:ROR:<(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1645:i < size |==> false
19368:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1646:poolSet.add(iNameKeys[i]) |==> <NO-OP>
19369:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1650:65535 |==> 0
19370:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1650:65535 |==> -65535
19371:ROR:>(int,int):!=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1650:poolSize > 65535 |==> poolSize != 65535
19372:ROR:>(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1650:poolSize > 65535 |==> poolSize >= 65535
19373:ROR:>(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1650:poolSize > 65535 |==> false
19374:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1655:0 |==> 1
19375:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1655:0 |==> -1
19376:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1656:pool[i] = it.next() |==> <NO-OP>
19377:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1660:out.writeShort(poolSize) |==> <NO-OP>
19378:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1661:0 |==> 1
19379:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1661:0 |==> -1
19380:ROR:<(int,int):!=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1661:i < poolSize |==> i != poolSize
19381:ROR:<(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1661:i < poolSize |==> i <= poolSize
19382:ROR:<(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1661:i < poolSize |==> false
19383:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1662:out.writeUTF(pool[i]) |==> <NO-OP>
19384:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1665:out.writeInt(size) |==> <NO-OP>
19385:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1667:0 |==> 1
19386:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1667:0 |==> -1
19387:ROR:<(int,int):!=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1667:i < size |==> i != size
19388:ROR:<(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1667:i < size |==> i <= size
19389:ROR:<(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1667:i < size |==> false
19390:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1668:writeMillis(out, iTransitions[i]) |==> <NO-OP>
19391:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1669:writeMillis(out, iWallOffsets[i]) |==> <NO-OP>
19392:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1670:writeMillis(out, iStandardOffsets[i]) |==> <NO-OP>
19393:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1674:0 |==> 1
19394:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1674:0 |==> -1
19395:ROR:<(int,int):!=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1674:j < poolSize |==> j != poolSize
19396:ROR:<(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1674:j < poolSize |==> j <= poolSize
19397:ROR:<(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1674:j < poolSize |==> false
19398:COR:pool[j].equals(nameKey):TRUE:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1675:pool[j].equals(nameKey) |==> false
19399:COR:pool[j].equals(nameKey):FALSE:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1675:pool[j].equals(nameKey) |==> true
19400:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1676:256 |==> 0
19401:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1676:256 |==> -256
19402:ROR:<(int,int):!=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1676:poolSize < 256 |==> poolSize != 256
19403:ROR:<(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1676:poolSize < 256 |==> poolSize <= 256
19404:ROR:<(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1676:poolSize < 256 |==> false
19405:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1677:out.writeByte(j) |==> <NO-OP>
19406:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1679:out.writeShort(j) |==> <NO-OP>
19407:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1686:iTailZone != null |==> true
19408:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1686:out.writeBoolean(iTailZone != null) |==> <NO-OP>
19409:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1687:iTailZone != null |==> true
19410:STD:<CALL>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@writeTo(java.io.DataOutput):1688:iTailZone.writeTo(out) |==> <NO-OP>
19411:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1693:iTailZone != null |==> true
19412:LVR:TRUE:FALSE:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1694:true |==> false
19413:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1697:1 |==> 0
19414:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1697:1 |==> -1
19415:ROR:<=(int,int):<(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1697:transitions.length <= 1 |==> transitions.length < 1
19416:ROR:<=(int,int):==(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1697:transitions.length <= 1 |==> transitions.length == 1
19417:ROR:<=(int,int):TRUE(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1697:transitions.length <= 1 |==> true
19418:LVR:FALSE:TRUE:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1698:false |==> true
19419:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1703:0 |==> 1
19420:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1703:0 |==> -1
19421:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1704:0 |==> 1
19422:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1704:0 |==> -1
19423:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1706:1 |==> 0
19424:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1706:1 |==> -1
19425:ROR:<(int,int):!=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1706:i < transitions.length |==> i != transitions.length
19426:ROR:<(int,int):<=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1706:i < transitions.length |==> i <= transitions.length
19427:ROR:<(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1706:i < transitions.length |==> false
19428:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1707:1 |==> 0
19429:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1707:1 |==> -1
19430:AOR:-(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1707:i - 1 |==> i % 1
19431:AOR:-(int,int):*(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1707:i - 1 |==> i * 1
19432:AOR:-(int,int):+(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1707:i - 1 |==> i + 1
19433:AOR:-(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1707:i - 1 |==> i / 1
19434:AOR:-(long,long):%(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1707:transitions[i] - transitions[i - 1] |==> transitions[i] % transitions[i - 1]
19435:AOR:-(long,long):*(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1707:transitions[i] - transitions[i - 1] |==> transitions[i] * transitions[i - 1]
19436:AOR:-(long,long):+(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1707:transitions[i] - transitions[i - 1] |==> transitions[i] + transitions[i - 1]
19437:AOR:-(long,long):/(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1707:transitions[i] - transitions[i - 1] |==> transitions[i] / transitions[i - 1]
19438:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1708:366L |==> 0L
19439:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1708:366L |==> -366L
19440:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1708:365 |==> 0
19441:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1708:365 |==> -365
19442:AOR:+(long,long):%(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1708:366L + 365 |==> 366L % 365
19443:AOR:+(long,long):*(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1708:366L + 365 |==> 366L * 365
19444:AOR:+(long,long):-(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1708:366L + 365 |==> 366L - 365
19445:AOR:+(long,long):/(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1708:366L + 365 |==> 366L / 365
19446:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1708:24 |==> 0
19447:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1708:24 |==> -24
19448:AOR:*(long,long):%(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1708:(366L + 365) * 24 |==> (366L + 365) % 24
19449:AOR:*(long,long):+(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1708:(366L + 365) * 24 |==> (366L + 365) + 24
19450:AOR:*(long,long):-(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1708:(366L + 365) * 24 |==> (366L + 365) - 24
19451:AOR:*(long,long):/(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1708:(366L + 365) * 24 |==> (366L + 365) / 24
19452:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1708:60 |==> 0
19453:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1708:60 |==> -60
19454:AOR:*(long,long):%(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1708:(366L + 365) * 24 * 60 |==> (366L + 365) * 24 % 60
19455:AOR:*(long,long):+(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1708:(366L + 365) * 24 * 60 |==> (366L + 365) * 24 + 60
19456:AOR:*(long,long):-(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1708:(366L + 365) * 24 * 60 |==> (366L + 365) * 24 - 60
19457:AOR:*(long,long):/(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1708:(366L + 365) * 24 * 60 |==> (366L + 365) * 24 / 60
19458:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1708:60 |==> 0
19459:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1708:60 |==> -60
19460:AOR:*(long,long):%(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1708:(366L + 365) * 24 * 60 * 60 |==> (366L + 365) * 24 * 60 % 60
19461:AOR:*(long,long):+(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1708:(366L + 365) * 24 * 60 * 60 |==> (366L + 365) * 24 * 60 + 60
19462:AOR:*(long,long):-(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1708:(366L + 365) * 24 * 60 * 60 |==> (366L + 365) * 24 * 60 - 60
19463:AOR:*(long,long):/(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1708:(366L + 365) * 24 * 60 * 60 |==> (366L + 365) * 24 * 60 / 60
19464:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1708:1000 |==> 0
19465:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1708:1000 |==> -1000
19466:AOR:*(long,long):%(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1708:(366L + 365) * 24 * 60 * 60 * 1000 |==> (366L + 365) * 24 * 60 * 60 % 1000
19467:AOR:*(long,long):+(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1708:(366L + 365) * 24 * 60 * 60 * 1000 |==> (366L + 365) * 24 * 60 * 60 + 1000
19468:AOR:*(long,long):-(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1708:(366L + 365) * 24 * 60 * 60 * 1000 |==> (366L + 365) * 24 * 60 * 60 - 1000
19469:AOR:*(long,long):/(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1708:(366L + 365) * 24 * 60 * 60 * 1000 |==> (366L + 365) * 24 * 60 * 60 / 1000
19470:ROR:<(long,long):!=(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1708:diff < ((366L + 365) * 24 * 60 * 60 * 1000) |==> diff != ((366L + 365) * 24 * 60 * 60 * 1000)
19471:ROR:<(long,long):<=(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1708:diff < ((366L + 365) * 24 * 60 * 60 * 1000) |==> diff <= ((366L + 365) * 24 * 60 * 60 * 1000)
19472:ROR:<(long,long):FALSE(long,long):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1708:diff < ((366L + 365) * 24 * 60 * 60 * 1000) |==> false
19473:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1709:distances += (double)diff |==> <NO-OP>
19474:STD:<INC>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1710:count++ |==> <NO-OP>
19475:LVR:0:POS:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1714:0 |==> 1
19476:LVR:0:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1714:0 |==> -1
19477:ROR:>(int,int):!=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1714:count > 0 |==> count != 0
19478:ROR:>(int,int):>=(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1714:count > 0 |==> count >= 0
19479:ROR:>(int,int):FALSE(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1714:count > 0 |==> false
19480:AOR:/(double,double):%(double,double):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1715:distances / count |==> distances % count
19481:AOR:/(double,double):*(double,double):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1715:distances / count |==> distances * count
19482:AOR:/(double,double):+(double,double):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1715:distances / count |==> distances + count
19483:AOR:/(double,double):-(double,double):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1715:distances / count |==> distances - count
19484:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1716:24 |==> 0
19485:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1716:24 |==> -24
19486:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1716:60 |==> 0
19487:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1716:60 |==> -60
19488:AOR:*(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1716:24 * 60 |==> 24 % 60
19489:AOR:*(int,int):+(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1716:24 * 60 |==> 24 + 60
19490:AOR:*(int,int):-(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1716:24 * 60 |==> 24 - 60
19491:AOR:*(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1716:24 * 60 |==> 24 / 60
19492:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1716:60 |==> 0
19493:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1716:60 |==> -60
19494:AOR:*(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1716:24 * 60 * 60 |==> 24 * 60 % 60
19495:AOR:*(int,int):+(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1716:24 * 60 * 60 |==> 24 * 60 + 60
19496:AOR:*(int,int):-(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1716:24 * 60 * 60 |==> 24 * 60 - 60
19497:AOR:*(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1716:24 * 60 * 60 |==> 24 * 60 / 60
19498:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1716:1000 |==> 0
19499:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1716:1000 |==> -1000
19500:AOR:*(int,int):%(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1716:24 * 60 * 60 * 1000 |==> 24 * 60 * 60 % 1000
19501:AOR:*(int,int):+(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1716:24 * 60 * 60 * 1000 |==> 24 * 60 * 60 + 1000
19502:AOR:*(int,int):-(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1716:24 * 60 * 60 * 1000 |==> 24 * 60 * 60 - 1000
19503:AOR:*(int,int):/(int,int):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1716:24 * 60 * 60 * 1000 |==> 24 * 60 * 60 / 1000
19504:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1716:avg /= 24 * 60 * 60 * 1000 |==> <NO-OP>
19505:LVR:POS:0:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1717:25 |==> 0
19506:LVR:POS:NEG:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1717:25 |==> -25
19507:ROR:>=(double,double):==(double,double):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1717:avg >= 25 |==> avg == 25
19508:ROR:>=(double,double):>(double,double):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1717:avg >= 25 |==> avg > 25
19509:ROR:>=(double,double):TRUE(double,double):org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1717:avg >= 25 |==> true
19510:LVR:TRUE:FALSE:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1724:true |==> false
19511:LVR:FALSE:TRUE:org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone@isCachable():1728:false |==> true
19512:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.DefaultNameProvider@getShortName(java.util.Locale,java.lang.String,java.lang.String):44:nameSet == null |==> false
19513:LVR:0:POS:org.joda.time.tz.DefaultNameProvider@getShortName(java.util.Locale,java.lang.String,java.lang.String):44:0 |==> 1
19514:LVR:0:NEG:org.joda.time.tz.DefaultNameProvider@getShortName(java.util.Locale,java.lang.String,java.lang.String):44:0 |==> -1
19515:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.DefaultNameProvider@getName(java.util.Locale,java.lang.String,java.lang.String):49:nameSet == null |==> false
19516:LVR:POS:0:org.joda.time.tz.DefaultNameProvider@getName(java.util.Locale,java.lang.String,java.lang.String):49:1 |==> 0
19517:LVR:POS:NEG:org.joda.time.tz.DefaultNameProvider@getName(java.util.Locale,java.lang.String,java.lang.String):49:1 |==> -1
19518:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):53:locale == null |==> false
19519:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):53:id == null |==> false
19520:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):53:locale == null || id == null |==> locale == null != (id == null)
19521:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):53:locale == null || id == null |==> locale == null
19522:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):53:locale == null || id == null |==> id == null
19523:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):53:locale == null || id == null |==> true
19524:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):53:nameKey == null |==> false
19525:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):53:locale == null || id == null || nameKey == null |==> (locale == null || id == null) != (nameKey == null)
19526:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):53:locale == null || id == null || nameKey == null |==> locale == null || id == null
19527:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):53:locale == null || id == null || nameKey == null |==> nameKey == null
19528:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):53:locale == null || id == null || nameKey == null |==> true
19529:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):58:byIdCache == null |==> false
19530:STD:<CALL>:<NO-OP>:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):59:iByLocaleCache.put(locale, byIdCache = createCache()) |==> <NO-OP>
19531:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):63:byNameKeyCache == null |==> false
19532:STD:<CALL>:<NO-OP>:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):64:byIdCache.put(id, byNameKeyCache = createCache()) |==> <NO-OP>
19533:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):69:strings != null |==> true
19534:LVR:POS:0:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):69:5 |==> 0
19535:LVR:POS:NEG:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):69:5 |==> -5
19536:ROR:==(int,int):<=(int,int):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):69:strings.length == 5 |==> strings.length <= 5
19537:ROR:==(int,int):>=(int,int):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):69:strings.length == 5 |==> strings.length >= 5
19538:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):69:strings.length == 5 |==> false
19539:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):69:strings != null && strings.length == 5 |==> strings != null == (strings.length == 5)
19540:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):69:strings != null && strings.length == 5 |==> false
19541:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):69:strings != null && strings.length == 5 |==> strings != null
19542:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):69:strings != null && strings.length == 5 |==> strings.length == 5
19543:LVR:0:POS:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):69:0 |==> 1
19544:LVR:0:NEG:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):69:0 |==> -1
19545:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):69:strings != null && strings.length == 5 && id.equals(strings[0]) |==> (strings != null && strings.length == 5) == id.equals(strings[0])
19546:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):69:strings != null && strings.length == 5 && id.equals(strings[0]) |==> false
19547:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):69:strings != null && strings.length == 5 && id.equals(strings[0]) |==> strings != null && strings.length == 5
19548:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):69:strings != null && strings.length == 5 && id.equals(strings[0]) |==> id.equals(strings[0])
19549:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):70:setEn = strings |==> <NO-OP>
19550:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):77:strings != null |==> true
19551:LVR:POS:0:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):77:5 |==> 0
19552:LVR:POS:NEG:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):77:5 |==> -5
19553:ROR:==(int,int):<=(int,int):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):77:strings.length == 5 |==> strings.length <= 5
19554:ROR:==(int,int):>=(int,int):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):77:strings.length == 5 |==> strings.length >= 5
19555:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):77:strings.length == 5 |==> false
19556:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):77:strings != null && strings.length == 5 |==> strings != null == (strings.length == 5)
19557:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):77:strings != null && strings.length == 5 |==> false
19558:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):77:strings != null && strings.length == 5 |==> strings != null
19559:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):77:strings != null && strings.length == 5 |==> strings.length == 5
19560:LVR:0:POS:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):77:0 |==> 1
19561:LVR:0:NEG:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):77:0 |==> -1
19562:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):77:strings != null && strings.length == 5 && id.equals(strings[0]) |==> (strings != null && strings.length == 5) == id.equals(strings[0])
19563:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):77:strings != null && strings.length == 5 && id.equals(strings[0]) |==> false
19564:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):77:strings != null && strings.length == 5 && id.equals(strings[0]) |==> strings != null && strings.length == 5
19565:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):77:strings != null && strings.length == 5 && id.equals(strings[0]) |==> id.equals(strings[0])
19566:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):78:setLoc = strings |==> <NO-OP>
19567:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):83:setEn != null |==> true
19568:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):83:setLoc != null |==> true
19569:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):83:setEn != null && setLoc != null |==> setEn != null == (setLoc != null)
19570:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):83:setEn != null && setLoc != null |==> false
19571:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):83:setEn != null && setLoc != null |==> setEn != null
19572:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):83:setEn != null && setLoc != null |==> setLoc != null
19573:LVR:POS:0:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):84:2 |==> 0
19574:LVR:POS:NEG:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):84:2 |==> -2
19575:LVR:POS:0:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):84:2 |==> 0
19576:LVR:POS:NEG:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):84:2 |==> -2
19577:LVR:POS:0:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):84:1 |==> 0
19578:LVR:POS:NEG:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):84:1 |==> -1
19579:STD:<CALL>:<NO-OP>:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):84:byNameKeyCache.put(setEn[2], new String[]{setLoc[2], setLoc[1]}) |==> <NO-OP>
19580:LVR:POS:0:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):88:2 |==> 0
19581:LVR:POS:NEG:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):88:2 |==> -2
19582:LVR:POS:0:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):88:4 |==> 0
19583:LVR:POS:NEG:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):88:4 |==> -4
19584:COR:setEn[2].equals(setEn[4]):TRUE:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):88:setEn[2].equals(setEn[4]) |==> false
19585:COR:setEn[2].equals(setEn[4]):FALSE:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):88:setEn[2].equals(setEn[4]) |==> true
19586:LVR:POS:0:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):89:4 |==> 0
19587:LVR:POS:NEG:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):89:4 |==> -4
19588:LVR:POS:0:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):89:4 |==> 0
19589:LVR:POS:NEG:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):89:4 |==> -4
19590:LVR:POS:0:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):89:3 |==> 0
19591:LVR:POS:NEG:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):89:3 |==> -3
19592:STD:<CALL>:<NO-OP>:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):89:byNameKeyCache.put(setEn[4] + "-Summer", new String[]{setLoc[4], setLoc[3]}) |==> <NO-OP>
19593:LVR:POS:0:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):91:4 |==> 0
19594:LVR:POS:NEG:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):91:4 |==> -4
19595:LVR:POS:0:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):91:4 |==> 0
19596:LVR:POS:NEG:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):91:4 |==> -4
19597:LVR:POS:0:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):91:3 |==> 0
19598:LVR:POS:NEG:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):91:3 |==> -3
19599:STD:<CALL>:<NO-OP>:org.joda.time.tz.DefaultNameProvider@getNameSet(java.util.Locale,java.lang.String,java.lang.String):91:byNameKeyCache.put(setEn[4], new String[]{setLoc[4], setLoc[3]}) |==> <NO-OP>
19600:LVR:POS:0:org.joda.time.tz.DefaultNameProvider@createCache():99:7 |==> 0
19601:LVR:POS:NEG:org.joda.time.tz.DefaultNameProvider@createCache():99:7 |==> -7
19602:LVR:TRUE:FALSE:org.joda.time.tz.FixedDateTimeZone@isFixed():61:true |==> false
19603:LVR:POS:0:org.joda.time.tz.FixedDateTimeZone@toTimeZone():78:6 |==> 0
19604:LVR:POS:NEG:org.joda.time.tz.FixedDateTimeZone@toTimeZone():78:6 |==> -6
19605:ROR:==(int,int):<=(int,int):org.joda.time.tz.FixedDateTimeZone@toTimeZone():78:id.length() == 6 |==> id.length() <= 6
19606:ROR:==(int,int):>=(int,int):org.joda.time.tz.FixedDateTimeZone@toTimeZone():78:id.length() == 6 |==> id.length() >= 6
19607:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.FixedDateTimeZone@toTimeZone():78:id.length() == 6 |==> false
19608:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.tz.FixedDateTimeZone@toTimeZone():78:id.startsWith("+") || id.startsWith("-") |==> id.startsWith("+") != id.startsWith("-")
19609:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.FixedDateTimeZone@toTimeZone():78:id.startsWith("+") || id.startsWith("-") |==> id.startsWith("+")
19610:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.FixedDateTimeZone@toTimeZone():78:id.startsWith("+") || id.startsWith("-") |==> id.startsWith("-")
19611:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.tz.FixedDateTimeZone@toTimeZone():78:id.startsWith("+") || id.startsWith("-") |==> true
19612:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.FixedDateTimeZone@toTimeZone():78:id.length() == 6 && (id.startsWith("+") || id.startsWith("-")) |==> id.length() == 6 == (id.startsWith("+") || id.startsWith("-"))
19613:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.FixedDateTimeZone@toTimeZone():78:id.length() == 6 && (id.startsWith("+") || id.startsWith("-")) |==> false
19614:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.FixedDateTimeZone@toTimeZone():78:id.length() == 6 && (id.startsWith("+") || id.startsWith("-")) |==> id.length() == 6
19615:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.FixedDateTimeZone@toTimeZone():78:id.length() == 6 && (id.startsWith("+") || id.startsWith("-")) |==> (id.startsWith("+") || id.startsWith("-"))
19616:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.FixedDateTimeZone@equals(java.lang.Object):88:this == obj |==> false
19617:LVR:TRUE:FALSE:org.joda.time.tz.FixedDateTimeZone@equals(java.lang.Object):89:true |==> false
19618:ROR:==(int,int):<=(int,int):org.joda.time.tz.FixedDateTimeZone@equals(java.lang.Object):95:iStandardOffset == other.iStandardOffset |==> iStandardOffset <= other.iStandardOffset
19619:ROR:==(int,int):>=(int,int):org.joda.time.tz.FixedDateTimeZone@equals(java.lang.Object):95:iStandardOffset == other.iStandardOffset |==> iStandardOffset >= other.iStandardOffset
19620:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.FixedDateTimeZone@equals(java.lang.Object):95:iStandardOffset == other.iStandardOffset |==> false
19621:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.FixedDateTimeZone@equals(java.lang.Object):94:getID().equals(other.getID()) && iStandardOffset == other.iStandardOffset |==> getID().equals(other.getID()) == (iStandardOffset == other.iStandardOffset)
19622:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.FixedDateTimeZone@equals(java.lang.Object):94:getID().equals(other.getID()) && iStandardOffset == other.iStandardOffset |==> false
19623:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.FixedDateTimeZone@equals(java.lang.Object):94:getID().equals(other.getID()) && iStandardOffset == other.iStandardOffset |==> getID().equals(other.getID())
19624:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.FixedDateTimeZone@equals(java.lang.Object):95:getID().equals(other.getID()) && iStandardOffset == other.iStandardOffset |==> iStandardOffset == other.iStandardOffset
19625:ROR:==(int,int):<=(int,int):org.joda.time.tz.FixedDateTimeZone@equals(java.lang.Object):96:iWallOffset == other.iWallOffset |==> iWallOffset <= other.iWallOffset
19626:ROR:==(int,int):>=(int,int):org.joda.time.tz.FixedDateTimeZone@equals(java.lang.Object):96:iWallOffset == other.iWallOffset |==> iWallOffset >= other.iWallOffset
19627:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.FixedDateTimeZone@equals(java.lang.Object):96:iWallOffset == other.iWallOffset |==> false
19628:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.FixedDateTimeZone@equals(java.lang.Object):94:getID().equals(other.getID()) && iStandardOffset == other.iStandardOffset && iWallOffset == other.iWallOffset |==> (getID().equals(other.getID()) && iStandardOffset == other.iStandardOffset) == (iWallOffset == other.iWallOffset)
19629:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.FixedDateTimeZone@equals(java.lang.Object):95:getID().equals(other.getID()) && iStandardOffset == other.iStandardOffset && iWallOffset == other.iWallOffset |==> false
19630:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.FixedDateTimeZone@equals(java.lang.Object):94:getID().equals(other.getID()) && iStandardOffset == other.iStandardOffset && iWallOffset == other.iWallOffset |==> getID().equals(other.getID()) && iStandardOffset == other.iStandardOffset
19631:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.FixedDateTimeZone@equals(java.lang.Object):96:getID().equals(other.getID()) && iStandardOffset == other.iStandardOffset && iWallOffset == other.iWallOffset |==> iWallOffset == other.iWallOffset
19632:LVR:FALSE:TRUE:org.joda.time.tz.FixedDateTimeZone@equals(java.lang.Object):98:false |==> true
19633:LVR:POS:0:org.joda.time.tz.FixedDateTimeZone@hashCode():102:37 |==> 0
19634:LVR:POS:NEG:org.joda.time.tz.FixedDateTimeZone@hashCode():102:37 |==> -37
19635:AOR:*(int,int):%(int,int):org.joda.time.tz.FixedDateTimeZone@hashCode():102:37 * iStandardOffset |==> 37 % iStandardOffset
19636:AOR:*(int,int):+(int,int):org.joda.time.tz.FixedDateTimeZone@hashCode():102:37 * iStandardOffset |==> 37 + iStandardOffset
19637:AOR:*(int,int):-(int,int):org.joda.time.tz.FixedDateTimeZone@hashCode():102:37 * iStandardOffset |==> 37 - iStandardOffset
19638:AOR:*(int,int):/(int,int):org.joda.time.tz.FixedDateTimeZone@hashCode():102:37 * iStandardOffset |==> 37 / iStandardOffset
19639:AOR:+(int,int):%(int,int):org.joda.time.tz.FixedDateTimeZone@hashCode():102:getID().hashCode() + 37 * iStandardOffset |==> getID().hashCode() % (37 * iStandardOffset)
19640:AOR:+(int,int):*(int,int):org.joda.time.tz.FixedDateTimeZone@hashCode():102:getID().hashCode() + 37 * iStandardOffset |==> getID().hashCode() * (37 * iStandardOffset)
19641:AOR:+(int,int):-(int,int):org.joda.time.tz.FixedDateTimeZone@hashCode():102:getID().hashCode() + 37 * iStandardOffset |==> getID().hashCode() - 37 * iStandardOffset
19642:AOR:+(int,int):/(int,int):org.joda.time.tz.FixedDateTimeZone@hashCode():102:getID().hashCode() + 37 * iStandardOffset |==> getID().hashCode() / (37 * iStandardOffset)
19643:LVR:POS:0:org.joda.time.tz.FixedDateTimeZone@hashCode():102:31 |==> 0
19644:LVR:POS:NEG:org.joda.time.tz.FixedDateTimeZone@hashCode():102:31 |==> -31
19645:AOR:*(int,int):%(int,int):org.joda.time.tz.FixedDateTimeZone@hashCode():102:31 * iWallOffset |==> 31 % iWallOffset
19646:AOR:*(int,int):+(int,int):org.joda.time.tz.FixedDateTimeZone@hashCode():102:31 * iWallOffset |==> 31 + iWallOffset
19647:AOR:*(int,int):-(int,int):org.joda.time.tz.FixedDateTimeZone@hashCode():102:31 * iWallOffset |==> 31 - iWallOffset
19648:AOR:*(int,int):/(int,int):org.joda.time.tz.FixedDateTimeZone@hashCode():102:31 * iWallOffset |==> 31 / iWallOffset
19649:AOR:+(int,int):%(int,int):org.joda.time.tz.FixedDateTimeZone@hashCode():102:getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset |==> (getID().hashCode() + 37 * iStandardOffset) % (31 * iWallOffset)
19650:AOR:+(int,int):*(int,int):org.joda.time.tz.FixedDateTimeZone@hashCode():102:getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset |==> (getID().hashCode() + 37 * iStandardOffset) * (31 * iWallOffset)
19651:AOR:+(int,int):-(int,int):org.joda.time.tz.FixedDateTimeZone@hashCode():102:getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset |==> getID().hashCode() + 37 * iStandardOffset - 31 * iWallOffset
19652:AOR:+(int,int):/(int,int):org.joda.time.tz.FixedDateTimeZone@hashCode():102:getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset |==> (getID().hashCode() + 37 * iStandardOffset) / (31 * iWallOffset)
19653:COR:"UTC".equalsIgnoreCase(id):TRUE:org.joda.time.tz.UTCProvider@getZone(java.lang.String):45:"UTC".equalsIgnoreCase(id) |==> false
19654:COR:"UTC".equalsIgnoreCase(id):FALSE:org.joda.time.tz.UTCProvider@getZone(java.lang.String):45:"UTC".equalsIgnoreCase(id) |==> true
19655:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):95:0 |==> 1
19656:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):95:0 |==> -1
19657:ROR:==(int,int):<=(int,int):org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):95:args.length == 0 |==> args.length <= 0
19658:ROR:==(int,int):>=(int,int):org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):95:args.length == 0 |==> args.length >= 0
19659:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):95:args.length == 0 |==> false
19660:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):96:printUsage() |==> <NO-OP>
19661:LVR:FALSE:TRUE:org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):102:false |==> true
19662:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):105:0 |==> 1
19663:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):105:0 |==> -1
19664:ROR:<(int,int):!=(int,int):org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):105:i < args.length |==> i != args.length
19665:ROR:<(int,int):<=(int,int):org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):105:i < args.length |==> i <= args.length
19666:ROR:<(int,int):FALSE(int,int):org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):105:i < args.length |==> false
19667:COR:"-src".equals(args[i]):TRUE:org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):107:"-src".equals(args[i]) |==> false
19668:COR:"-src".equals(args[i]):FALSE:org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):107:"-src".equals(args[i]) |==> true
19669:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):108:inputDir = new File(args[++i]) |==> <NO-OP>
19670:COR:"-dst".equals(args[i]):TRUE:org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):109:"-dst".equals(args[i]) |==> false
19671:COR:"-dst".equals(args[i]):FALSE:org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):109:"-dst".equals(args[i]) |==> true
19672:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):110:outputDir = new File(args[++i]) |==> <NO-OP>
19673:COR:"-verbose".equals(args[i]):TRUE:org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):111:"-verbose".equals(args[i]) |==> false
19674:COR:"-verbose".equals(args[i]):FALSE:org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):111:"-verbose".equals(args[i]) |==> true
19675:LVR:TRUE:FALSE:org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):112:true |==> false
19676:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):112:verbose = true |==> <NO-OP>
19677:COR:"-?".equals(args[i]):TRUE:org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):113:"-?".equals(args[i]) |==> false
19678:COR:"-?".equals(args[i]):FALSE:org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):113:"-?".equals(args[i]) |==> true
19679:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):114:printUsage() |==> <NO-OP>
19680:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):120:printUsage() |==> <NO-OP>
19681:ROR:>=(int,int):==(int,int):org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):125:i >= args.length |==> i == args.length
19682:ROR:>=(int,int):>(int,int):org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):125:i >= args.length |==> i > args.length
19683:ROR:>=(int,int):TRUE(int,int):org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):125:i >= args.length |==> true
19684:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):126:printUsage() |==> <NO-OP>
19685:AOR:-(int,int):%(int,int):org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):130:args.length - i |==> args.length % i
19686:AOR:-(int,int):*(int,int):org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):130:args.length - i |==> args.length * i
19687:AOR:-(int,int):+(int,int):org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):130:args.length - i |==> args.length + i
19688:AOR:-(int,int):/(int,int):org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):130:args.length - i |==> args.length / i
19689:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):131:0 |==> 1
19690:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):131:0 |==> -1
19691:ROR:<(int,int):!=(int,int):org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):131:i < args.length |==> i != args.length
19692:ROR:<(int,int):<=(int,int):org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):131:i < args.length |==> i <= args.length
19693:ROR:<(int,int):FALSE(int,int):org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):131:i < args.length |==> false
19694:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):132:inputDir == null |==> false
19695:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):132:sources[j] = inputDir == null ? new File(args[i]) : new File(inputDir, args[i]) |==> <NO-OP>
19696:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):135:cVerbose.set(verbose) |==> <NO-OP>
19697:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@main(java.lang.String[]):137:zic.compile(outputDir, sources) |==> <NO-OP>
19698:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@printUsage():141:System.out.println("Usage: java org.joda.time.tz.ZoneInfoCompiler <options> <source files>") |==> <NO-OP>
19699:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@printUsage():142:System.out.println("where possible options include:") |==> <NO-OP>
19700:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@printUsage():143:System.out.println("  -src <directory>    Specify where to read source files") |==> <NO-OP>
19701:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@printUsage():144:System.out.println("  -dst <directory>    Specify where to write generated files") |==> <NO-OP>
19702:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@printUsage():145:System.out.println("  -verbose            Output verbosely (default false)") |==> <NO-OP>
19703:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.ZoneInfoCompiler@getStartOfYear():149:cStartOfYear == null |==> false
19704:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@getStartOfYear():150:cStartOfYear = new DateTimeOfYear() |==> <NO-OP>
19705:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.ZoneInfoCompiler@getLenientISOChronology():156:cLenientISO == null |==> false
19706:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@getLenientISOChronology():157:cLenientISO = LenientChronology.getInstance(ISOChronology.getInstanceUTC()) |==> <NO-OP>
19707:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler@writeZoneInfoMap(java.io.DataOutputStream,java.util.Map<java.lang.String,org.joda.time.DateTimeZone>):170:0 |==> 1
19708:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler@writeZoneInfoMap(java.io.DataOutputStream,java.util.Map<java.lang.String,org.joda.time.DateTimeZone>):170:0 |==> -1
19709:COR:idToIndex.containsKey(id):TRUE:org.joda.time.tz.ZoneInfoCompiler@writeZoneInfoMap(java.io.DataOutputStream,java.util.Map<java.lang.String,org.joda.time.DateTimeZone>):173:idToIndex.containsKey(id) |==> false
19710:COR:idToIndex.containsKey(id):FALSE:org.joda.time.tz.ZoneInfoCompiler@writeZoneInfoMap(java.io.DataOutputStream,java.util.Map<java.lang.String,org.joda.time.DateTimeZone>):173:idToIndex.containsKey(id) |==> true
19711:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@writeZoneInfoMap(java.io.DataOutputStream,java.util.Map<java.lang.String,org.joda.time.DateTimeZone>):175:idToIndex.put(id, index) |==> <NO-OP>
19712:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@writeZoneInfoMap(java.io.DataOutputStream,java.util.Map<java.lang.String,org.joda.time.DateTimeZone>):176:indexToId.put(index, id) |==> <NO-OP>
19713:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler@writeZoneInfoMap(java.io.DataOutputStream,java.util.Map<java.lang.String,org.joda.time.DateTimeZone>):177:0 |==> 1
19714:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler@writeZoneInfoMap(java.io.DataOutputStream,java.util.Map<java.lang.String,org.joda.time.DateTimeZone>):177:0 |==> -1
19715:ROR:==(int,int):<=(int,int):org.joda.time.tz.ZoneInfoCompiler@writeZoneInfoMap(java.io.DataOutputStream,java.util.Map<java.lang.String,org.joda.time.DateTimeZone>):177:++count == 0 |==> ++count <= 0
19716:ROR:==(int,int):>=(int,int):org.joda.time.tz.ZoneInfoCompiler@writeZoneInfoMap(java.io.DataOutputStream,java.util.Map<java.lang.String,org.joda.time.DateTimeZone>):177:++count == 0 |==> ++count >= 0
19717:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.ZoneInfoCompiler@writeZoneInfoMap(java.io.DataOutputStream,java.util.Map<java.lang.String,org.joda.time.DateTimeZone>):177:++count == 0 |==> false
19718:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@writeZoneInfoMap(java.io.DataOutputStream,java.util.Map<java.lang.String,org.joda.time.DateTimeZone>):181:id = ((DateTimeZone)entry.getValue()).getID() |==> <NO-OP>
19719:COR:idToIndex.containsKey(id):TRUE:org.joda.time.tz.ZoneInfoCompiler@writeZoneInfoMap(java.io.DataOutputStream,java.util.Map<java.lang.String,org.joda.time.DateTimeZone>):182:idToIndex.containsKey(id) |==> false
19720:COR:idToIndex.containsKey(id):FALSE:org.joda.time.tz.ZoneInfoCompiler@writeZoneInfoMap(java.io.DataOutputStream,java.util.Map<java.lang.String,org.joda.time.DateTimeZone>):182:idToIndex.containsKey(id) |==> true
19721:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@writeZoneInfoMap(java.io.DataOutputStream,java.util.Map<java.lang.String,org.joda.time.DateTimeZone>):184:idToIndex.put(id, index) |==> <NO-OP>
19722:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@writeZoneInfoMap(java.io.DataOutputStream,java.util.Map<java.lang.String,org.joda.time.DateTimeZone>):185:indexToId.put(index, id) |==> <NO-OP>
19723:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler@writeZoneInfoMap(java.io.DataOutputStream,java.util.Map<java.lang.String,org.joda.time.DateTimeZone>):186:0 |==> 1
19724:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler@writeZoneInfoMap(java.io.DataOutputStream,java.util.Map<java.lang.String,org.joda.time.DateTimeZone>):186:0 |==> -1
19725:ROR:==(int,int):<=(int,int):org.joda.time.tz.ZoneInfoCompiler@writeZoneInfoMap(java.io.DataOutputStream,java.util.Map<java.lang.String,org.joda.time.DateTimeZone>):186:++count == 0 |==> ++count <= 0
19726:ROR:==(int,int):>=(int,int):org.joda.time.tz.ZoneInfoCompiler@writeZoneInfoMap(java.io.DataOutputStream,java.util.Map<java.lang.String,org.joda.time.DateTimeZone>):186:++count == 0 |==> ++count >= 0
19727:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.ZoneInfoCompiler@writeZoneInfoMap(java.io.DataOutputStream,java.util.Map<java.lang.String,org.joda.time.DateTimeZone>):186:++count == 0 |==> false
19728:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@writeZoneInfoMap(java.io.DataOutputStream,java.util.Map<java.lang.String,org.joda.time.DateTimeZone>):193:dout.writeShort(indexToId.size()) |==> <NO-OP>
19729:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@writeZoneInfoMap(java.io.DataOutputStream,java.util.Map<java.lang.String,org.joda.time.DateTimeZone>):195:dout.writeUTF(id) |==> <NO-OP>
19730:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@writeZoneInfoMap(java.io.DataOutputStream,java.util.Map<java.lang.String,org.joda.time.DateTimeZone>):199:dout.writeShort(zimap.size()) |==> <NO-OP>
19731:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@writeZoneInfoMap(java.io.DataOutputStream,java.util.Map<java.lang.String,org.joda.time.DateTimeZone>):202:dout.writeShort(idToIndex.get(id).shortValue()) |==> <NO-OP>
19732:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@writeZoneInfoMap(java.io.DataOutputStream,java.util.Map<java.lang.String,org.joda.time.DateTimeZone>):203:id = entry.getValue().getID() |==> <NO-OP>
19733:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@writeZoneInfoMap(java.io.DataOutputStream,java.util.Map<java.lang.String,org.joda.time.DateTimeZone>):204:dout.writeShort(idToIndex.get(id).shortValue()) |==> <NO-OP>
19734:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@parseYear(java.lang.String,int):209:str = str.toLowerCase() |==> <NO-OP>
19735:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.tz.ZoneInfoCompiler@parseYear(java.lang.String,int):210:str.equals("minimum") || str.equals("min") |==> str.equals("minimum") != str.equals("min")
19736:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.ZoneInfoCompiler@parseYear(java.lang.String,int):210:str.equals("minimum") || str.equals("min") |==> str.equals("minimum")
19737:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.ZoneInfoCompiler@parseYear(java.lang.String,int):210:str.equals("minimum") || str.equals("min") |==> str.equals("min")
19738:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.tz.ZoneInfoCompiler@parseYear(java.lang.String,int):210:str.equals("minimum") || str.equals("min") |==> true
19739:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.tz.ZoneInfoCompiler@parseYear(java.lang.String,int):212:str.equals("maximum") || str.equals("max") |==> str.equals("maximum") != str.equals("max")
19740:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.ZoneInfoCompiler@parseYear(java.lang.String,int):212:str.equals("maximum") || str.equals("max") |==> str.equals("maximum")
19741:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.ZoneInfoCompiler@parseYear(java.lang.String,int):212:str.equals("maximum") || str.equals("max") |==> str.equals("max")
19742:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.tz.ZoneInfoCompiler@parseYear(java.lang.String,int):212:str.equals("maximum") || str.equals("max") |==> true
19743:COR:str.equals("only"):TRUE:org.joda.time.tz.ZoneInfoCompiler@parseYear(java.lang.String,int):214:str.equals("only") |==> false
19744:COR:str.equals("only"):FALSE:org.joda.time.tz.ZoneInfoCompiler@parseYear(java.lang.String,int):214:str.equals("only") |==> true
19745:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler@parseMonth(java.lang.String):222:0 |==> 1
19746:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler@parseMonth(java.lang.String):222:0 |==> -1
19747:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler@parseDayOfWeek(java.lang.String):227:0 |==> 1
19748:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler@parseDayOfWeek(java.lang.String):227:0 |==> -1
19749:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler@parseTime(java.lang.String):236:0 |==> 1
19750:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler@parseTime(java.lang.String):236:0 |==> -1
19751:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler@parseTime(java.lang.String):237:0 |==> 1
19752:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler@parseTime(java.lang.String):237:0 |==> -1
19753:COR:str.startsWith("-"):TRUE:org.joda.time.tz.ZoneInfoCompiler@parseTime(java.lang.String):238:str.startsWith("-") |==> false
19754:COR:str.startsWith("-"):FALSE:org.joda.time.tz.ZoneInfoCompiler@parseTime(java.lang.String):238:str.startsWith("-") |==> true
19755:LVR:POS:0:org.joda.time.tz.ZoneInfoCompiler@parseTime(java.lang.String):239:1 |==> 0
19756:LVR:POS:NEG:org.joda.time.tz.ZoneInfoCompiler@parseTime(java.lang.String):239:1 |==> -1
19757:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@parseTime(java.lang.String):239:pos = 1 |==> <NO-OP>
19758:ORU:~(int):+(int):org.joda.time.tz.ZoneInfoCompiler@parseTime(java.lang.String):242:~pos |==> +pos
19759:ORU:~(int):-(int):org.joda.time.tz.ZoneInfoCompiler@parseTime(java.lang.String):242:~pos |==> -pos
19760:ROR:==(int,int):<=(int,int):org.joda.time.tz.ZoneInfoCompiler@parseTime(java.lang.String):242:newPos == ~pos |==> newPos <= ~pos
19761:ROR:==(int,int):>=(int,int):org.joda.time.tz.ZoneInfoCompiler@parseTime(java.lang.String):242:newPos == ~pos |==> newPos >= ~pos
19762:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.ZoneInfoCompiler@parseTime(java.lang.String):242:newPos == ~pos |==> false
19763:LVR:POS:0:org.joda.time.tz.ZoneInfoCompiler@parseTime(java.lang.String):246:1 |==> 0
19764:LVR:POS:NEG:org.joda.time.tz.ZoneInfoCompiler@parseTime(java.lang.String):246:1 |==> -1
19765:ROR:==(int,int):<=(int,int):org.joda.time.tz.ZoneInfoCompiler@parseTime(java.lang.String):246:pos == 1 |==> pos <= 1
19766:ROR:==(int,int):>=(int,int):org.joda.time.tz.ZoneInfoCompiler@parseTime(java.lang.String):246:pos == 1 |==> pos >= 1
19767:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.ZoneInfoCompiler@parseTime(java.lang.String):246:pos == 1 |==> false
19768:ORU:-(int):+(int):org.joda.time.tz.ZoneInfoCompiler@parseTime(java.lang.String):247:-millis |==> +millis
19769:ORU:-(int):~(int):org.joda.time.tz.ZoneInfoCompiler@parseTime(java.lang.String):247:-millis |==> ~millis
19770:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@parseTime(java.lang.String):247:millis = -millis |==> <NO-OP>
19771:COR:id.equals(tz.getID()):TRUE:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):270:id.equals(tz.getID()) |==> false
19772:COR:id.equals(tz.getID()):FALSE:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):270:id.equals(tz.getID()) |==> true
19773:LVR:TRUE:FALSE:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):271:true |==> false
19774:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):276:0 |==> 1
19775:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):276:0 |==> -1
19776:LVR:POS:0:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):276:1850 |==> 0
19777:LVR:POS:NEG:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):276:1850 |==> -1850
19778:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):277:0 |==> 1
19779:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):277:0 |==> -1
19780:LVR:POS:0:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):277:2050 |==> 0
19781:LVR:POS:NEG:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):277:2050 |==> -2050
19782:ROR:==(long,long):<=(long,long):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):286:next == millis |==> next <= millis
19783:ROR:==(long,long):>=(long,long):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):286:next == millis |==> next >= millis
19784:ROR:==(long,long):FALSE(long,long):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):286:next == millis |==> false
19785:ROR:>(long,long):!=(long,long):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):286:next > end |==> next != end
19786:ROR:>(long,long):>=(long,long):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):286:next > end |==> next >= end
19787:ROR:>(long,long):FALSE(long,long):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):286:next > end |==> false
19788:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):286:next == millis || next > end |==> next == millis != next > end
19789:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):286:next == millis || next > end |==> next == millis
19790:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):286:next == millis || next > end |==> next > end
19791:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):286:next == millis || next > end |==> true
19792:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):290:millis = next |==> <NO-OP>
19793:ROR:==(int,int):<=(int,int):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):295:offset == nextOffset |==> offset <= nextOffset
19794:ROR:==(int,int):>=(int,int):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):295:offset == nextOffset |==> offset >= nextOffset
19795:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):295:offset == nextOffset |==> false
19796:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):295:offset == nextOffset && key.equals(nextKey) |==> offset == nextOffset == key.equals(nextKey)
19797:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):296:offset == nextOffset && key.equals(nextKey) |==> false
19798:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):295:offset == nextOffset && key.equals(nextKey) |==> offset == nextOffset
19799:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):296:offset == nextOffset && key.equals(nextKey) |==> key.equals(nextKey)
19800:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):297:System.out.println("*d* Error in " + tz.getID() + " " + new DateTime(millis, ISOChronology.getInstanceUTC())) |==> <NO-OP>
19801:LVR:FALSE:TRUE:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):300:false |==> true
19802:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):303:nextKey == null |==> false
19803:LVR:POS:0:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):303:3 |==> 0
19804:LVR:POS:NEG:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):303:3 |==> -3
19805:ROR:<(int,int):!=(int,int):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):303:nextKey.length() < 3 |==> nextKey.length() != 3
19806:ROR:<(int,int):<=(int,int):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):303:nextKey.length() < 3 |==> nextKey.length() <= 3
19807:ROR:<(int,int):FALSE(int,int):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):303:nextKey.length() < 3 |==> false
19808:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):303:nextKey.length() < 3 && !"??".equals(nextKey) |==> nextKey.length() < 3 == !"??".equals(nextKey)
19809:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):303:nextKey.length() < 3 && !"??".equals(nextKey) |==> false
19810:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):303:nextKey.length() < 3 && !"??".equals(nextKey) |==> nextKey.length() < 3
19811:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):303:nextKey.length() < 3 && !"??".equals(nextKey) |==> !"??".equals(nextKey)
19812:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):303:nextKey == null || (nextKey.length() < 3 && !"??".equals(nextKey)) |==> nextKey == null != (nextKey.length() < 3 && !"??".equals(nextKey))
19813:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):303:nextKey == null || (nextKey.length() < 3 && !"??".equals(nextKey)) |==> nextKey == null
19814:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):303:nextKey == null || (nextKey.length() < 3 && !"??".equals(nextKey)) |==> (nextKey.length() < 3 && !"??".equals(nextKey))
19815:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):303:nextKey == null || (nextKey.length() < 3 && !"??".equals(nextKey)) |==> true
19816:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):304:System.out.println("*s* Error in " + tz.getID() + " " + new DateTime(millis, ISOChronology.getInstanceUTC()) + ", nameKey=" + nextKey) |==> <NO-OP>
19817:LVR:FALSE:TRUE:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):308:false |==> true
19818:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):311:transitions.add(Long.valueOf(millis)) |==> <NO-OP>
19819:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):313:offset = nextOffset |==> <NO-OP>
19820:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):314:key = nextKey |==> <NO-OP>
19821:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):319:0 |==> 1
19822:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):319:0 |==> -1
19823:LVR:POS:0:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):319:2050 |==> 0
19824:LVR:POS:NEG:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):319:2050 |==> -2050
19825:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):319:millis = ISOChronology.getInstanceUTC().year().set(0, 2050) |==> <NO-OP>
19826:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):320:0 |==> 1
19827:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):320:0 |==> -1
19828:LVR:POS:0:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):320:1850 |==> 0
19829:LVR:POS:NEG:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):320:1850 |==> -1850
19830:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):320:end = ISOChronology.getInstanceUTC().year().set(0, 1850) |==> <NO-OP>
19831:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):322:0 |==> 1
19832:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):322:0 |==> -1
19833:ROR:>=(int,int):==(int,int):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):322:--i >= 0 |==> --i == 0
19834:ROR:>=(int,int):>(int,int):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):322:--i >= 0 |==> --i > 0
19835:ROR:>=(int,int):TRUE(int,int):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):322:--i >= 0 |==> true
19836:ROR:==(long,long):<=(long,long):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):324:prev == millis |==> prev <= millis
19837:ROR:==(long,long):>=(long,long):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):324:prev == millis |==> prev >= millis
19838:ROR:==(long,long):FALSE(long,long):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):324:prev == millis |==> false
19839:ROR:<(long,long):!=(long,long):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):324:prev < end |==> prev != end
19840:ROR:<(long,long):<=(long,long):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):324:prev < end |==> prev <= end
19841:ROR:<(long,long):FALSE(long,long):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):324:prev < end |==> false
19842:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):324:prev == millis || prev < end |==> prev == millis != prev < end
19843:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):324:prev == millis || prev < end |==> prev == millis
19844:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):324:prev == millis || prev < end |==> prev < end
19845:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):324:prev == millis || prev < end |==> true
19846:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):328:millis = prev |==> <NO-OP>
19847:LVR:POS:0:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):332:1 |==> 0
19848:LVR:POS:NEG:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):332:1 |==> -1
19849:AOR:-(long,long):%(long,long):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):332:trans - 1 |==> trans % 1
19850:AOR:-(long,long):*(long,long):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):332:trans - 1 |==> trans * 1
19851:AOR:-(long,long):+(long,long):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):332:trans - 1 |==> trans + 1
19852:AOR:-(long,long):/(long,long):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):332:trans - 1 |==> trans / 1
19853:ROR:!=(long,long):<(long,long):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):332:trans - 1 != millis |==> trans - 1 < millis
19854:ROR:!=(long,long):>(long,long):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):332:trans - 1 != millis |==> trans - 1 > millis
19855:ROR:!=(long,long):TRUE(long,long):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):332:trans - 1 != millis |==> true
19856:LVR:POS:0:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):336:1 |==> 0
19857:LVR:POS:NEG:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):336:1 |==> -1
19858:AOR:-(long,long):%(long,long):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):336:trans - 1 |==> trans % 1
19859:AOR:-(long,long):*(long,long):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):336:trans - 1 |==> trans * 1
19860:AOR:-(long,long):+(long,long):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):336:trans - 1 |==> trans + 1
19861:AOR:-(long,long):/(long,long):org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):336:trans - 1 |==> trans / 1
19862:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):333:System.out.println("*r* Error in " + tz.getID() + " " + new DateTime(millis, ISOChronology.getInstanceUTC()) + " != " + new DateTime(trans - 1, ISOChronology.getInstanceUTC())) |==> <NO-OP>
19863:LVR:FALSE:TRUE:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):339:false |==> true
19864:LVR:TRUE:FALSE:org.joda.time.tz.ZoneInfoCompiler@test(java.lang.String,org.joda.time.DateTimeZone):343:true |==> false
19865:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@<init>():356:iRuleSets = new HashMap<String, RuleSet>() |==> <NO-OP>
19866:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@<init>():357:iZones = new ArrayList<Zone>() |==> <NO-OP>
19867:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@<init>():358:iLinks = new ArrayList<String>() |==> <NO-OP>
19868:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):368:sources != null |==> true
19869:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):369:0 |==> 1
19870:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):369:0 |==> -1
19871:ROR:<(int,int):!=(int,int):org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):369:i < sources.length |==> i != sources.length
19872:ROR:<(int,int):<=(int,int):org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):369:i < sources.length |==> i <= sources.length
19873:ROR:<(int,int):FALSE(int,int):org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):369:i < sources.length |==> false
19874:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):371:parseDataFile(in) |==> <NO-OP>
19875:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):372:in.close() |==> <NO-OP>
19876:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):376:outputDir != null |==> true
19877:COR:outputDir.exists():TRUE:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):377:outputDir.exists() |==> false
19878:COR:outputDir.exists():FALSE:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):377:outputDir.exists() |==> true
19879:COR:outputDir.mkdirs():TRUE:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):378:outputDir.mkdirs() |==> false
19880:COR:outputDir.mkdirs():FALSE:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):378:outputDir.mkdirs() |==> true
19881:COR:outputDir.isDirectory():TRUE:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):382:outputDir.isDirectory() |==> false
19882:COR:outputDir.isDirectory():FALSE:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):382:outputDir.isDirectory() |==> true
19883:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):389:System.out.println("Writing zoneinfo files") |==> <NO-OP>
19884:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):390:0 |==> 1
19885:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):390:0 |==> -1
19886:ROR:<(int,int):!=(int,int):org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):390:i < iZones.size() |==> i != iZones.size()
19887:ROR:<(int,int):<=(int,int):org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):390:i < iZones.size() |==> i <= iZones.size()
19888:ROR:<(int,int):FALSE(int,int):org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):390:i < iZones.size() |==> false
19889:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):393:zone.addToBuilder(builder, iRuleSets) |==> <NO-OP>
19890:LVR:TRUE:FALSE:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):394:true |==> false
19891:COR:test(tz.getID(), tz):TRUE:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):396:test(tz.getID(), tz) |==> false
19892:COR:test(tz.getID(), tz):FALSE:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):396:test(tz.getID(), tz) |==> true
19893:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):397:map.put(tz.getID(), tz) |==> <NO-OP>
19894:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):398:outputDir != null |==> true
19895:COR:ZoneInfoCompiler.verbose():TRUE:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):399:ZoneInfoCompiler.verbose() |==> false
19896:COR:ZoneInfoCompiler.verbose():FALSE:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):399:ZoneInfoCompiler.verbose() |==> true
19897:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):400:System.out.println("Writing " + tz.getID()) |==> <NO-OP>
19898:COR:file.getParentFile().exists():TRUE:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):403:file.getParentFile().exists() |==> false
19899:COR:file.getParentFile().exists():FALSE:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):403:file.getParentFile().exists() |==> true
19900:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):404:file.getParentFile().mkdirs() |==> <NO-OP>
19901:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):408:builder.writeTo(zone.iName, out) |==> <NO-OP>
19902:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):410:out.close() |==> <NO-OP>
19903:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):416:in.close() |==> <NO-OP>
19904:COR:original.equals(tz2):TRUE:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):418:original.equals(tz2) |==> false
19905:COR:original.equals(tz2):FALSE:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):418:original.equals(tz2) |==> true
19906:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):419:System.out.println("*e* Error in " + tz.getID() + ": Didn\'t read properly from file") |==> <NO-OP>
19907:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):426:0 |==> 1
19908:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):426:0 |==> -1
19909:LVR:POS:0:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):426:2 |==> 0
19910:LVR:POS:NEG:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):426:2 |==> -2
19911:ROR:<(int,int):!=(int,int):org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):426:pass < 2 |==> pass != 2
19912:ROR:<(int,int):<=(int,int):org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):426:pass < 2 |==> pass <= 2
19913:ROR:<(int,int):FALSE(int,int):org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):426:pass < 2 |==> false
19914:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):427:0 |==> 1
19915:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):427:0 |==> -1
19916:ROR:<(int,int):!=(int,int):org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):427:i < iLinks.size() |==> i != iLinks.size()
19917:ROR:<(int,int):<=(int,int):org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):427:i < iLinks.size() |==> i <= iLinks.size()
19918:ROR:<(int,int):FALSE(int,int):org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):427:i < iLinks.size() |==> false
19919:LVR:POS:0:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):427:2 |==> 0
19920:LVR:POS:NEG:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):427:2 |==> -2
19921:LVR:POS:0:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):429:1 |==> 0
19922:LVR:POS:NEG:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):429:1 |==> -1
19923:AOR:+(int,int):%(int,int):org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):429:i + 1 |==> i % 1
19924:AOR:+(int,int):*(int,int):org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):429:i + 1 |==> i * 1
19925:AOR:+(int,int):-(int,int):org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):429:i + 1 |==> i - 1
19926:AOR:+(int,int):/(int,int):org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):429:i + 1 |==> i / 1
19927:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):431:tz == null |==> false
19928:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):432:0 |==> 1
19929:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):432:0 |==> -1
19930:ROR:>(int,int):!=(int,int):org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):432:pass > 0 |==> pass != 0
19931:ROR:>(int,int):>=(int,int):org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):432:pass > 0 |==> pass >= 0
19932:ROR:>(int,int):FALSE(int,int):org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):432:pass > 0 |==> false
19933:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):433:System.out.println("Cannot find time zone \'" + id + "\' to link alias \'" + alias + "\' to") |==> <NO-OP>
19934:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):437:map.put(alias, tz) |==> <NO-OP>
19935:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):442:outputDir != null |==> true
19936:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):443:System.out.println("Writing ZoneInfoMap") |==> <NO-OP>
19937:COR:file.getParentFile().exists():TRUE:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):445:file.getParentFile().exists() |==> false
19938:COR:file.getParentFile().exists():FALSE:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):445:file.getParentFile().exists() |==> true
19939:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):446:file.getParentFile().mkdirs() |==> <NO-OP>
19940:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):454:zimap.putAll(map) |==> <NO-OP>
19941:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):455:writeZoneInfoMap(dout, zimap) |==> <NO-OP>
19942:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@compile(java.io.File,java.io.File[]):457:dout.close() |==> <NO-OP>
19943:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):469:0 |==> 1
19944:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):469:0 |==> -1
19945:ROR:==(int,int):<=(int,int):org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):469:trimmed.length() == 0 |==> trimmed.length() <= 0
19946:ROR:==(int,int):>=(int,int):org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):469:trimmed.length() == 0 |==> trimmed.length() >= 0
19947:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):469:trimmed.length() == 0 |==> false
19948:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):469:0 |==> 1
19949:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):469:0 |==> -1
19950:ROR:==(int,int):<=(int,int):org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):469:trimmed.charAt(0) == '#' |==> trimmed.charAt(0) <= '#'
19951:ROR:==(int,int):>=(int,int):org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):469:trimmed.charAt(0) == '#' |==> trimmed.charAt(0) >= '#'
19952:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):469:trimmed.charAt(0) == '#' |==> false
19953:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):469:trimmed.length() == 0 || trimmed.charAt(0) == '#' |==> trimmed.length() == 0 != (trimmed.charAt(0) == '#')
19954:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):469:trimmed.length() == 0 || trimmed.charAt(0) == '#' |==> trimmed.length() == 0
19955:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):469:trimmed.length() == 0 || trimmed.charAt(0) == '#' |==> trimmed.charAt(0) == '#'
19956:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):469:trimmed.length() == 0 || trimmed.charAt(0) == '#' |==> true
19957:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):474:0 |==> 1
19958:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):474:0 |==> -1
19959:ROR:>=(int,int):==(int,int):org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):474:index >= 0 |==> index == 0
19960:ROR:>=(int,int):>(int,int):org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):474:index >= 0 |==> index > 0
19961:ROR:>=(int,int):TRUE(int,int):org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):474:index >= 0 |==> true
19962:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):475:0 |==> 1
19963:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):475:0 |==> -1
19964:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):475:line = line.substring(0, index) |==> <NO-OP>
19965:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):482:0 |==> 1
19966:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):482:0 |==> -1
19967:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):482:Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens() |==> Character.isWhitespace(line.charAt(0)) == st.hasMoreTokens()
19968:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):482:Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens() |==> false
19969:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):482:Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens() |==> Character.isWhitespace(line.charAt(0))
19970:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):482:Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens() |==> st.hasMoreTokens()
19971:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):483:zone != null |==> true
19972:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):485:zone.chain(st) |==> <NO-OP>
19973:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):489:zone != null |==> true
19974:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):490:iZones.add(zone) |==> <NO-OP>
19975:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):492:zone = null |==> <NO-OP>
19976:COR:st.hasMoreTokens():TRUE:org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):495:st.hasMoreTokens() |==> false
19977:COR:st.hasMoreTokens():FALSE:org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):495:st.hasMoreTokens() |==> true
19978:COR:token.equalsIgnoreCase("Rule"):TRUE:org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):497:token.equalsIgnoreCase("Rule") |==> false
19979:COR:token.equalsIgnoreCase("Rule"):FALSE:org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):497:token.equalsIgnoreCase("Rule") |==> true
19980:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):500:rs == null |==> false
19981:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):501:rs = new RuleSet(r) |==> <NO-OP>
19982:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):502:iRuleSets.put(r.iName, rs) |==> <NO-OP>
19983:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):504:rs.addRule(r) |==> <NO-OP>
19984:COR:token.equalsIgnoreCase("Zone"):TRUE:org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):506:token.equalsIgnoreCase("Zone") |==> false
19985:COR:token.equalsIgnoreCase("Zone"):FALSE:org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):506:token.equalsIgnoreCase("Zone") |==> true
19986:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):507:zone = new Zone(st) |==> <NO-OP>
19987:COR:token.equalsIgnoreCase("Link"):TRUE:org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):508:token.equalsIgnoreCase("Link") |==> false
19988:COR:token.equalsIgnoreCase("Link"):FALSE:org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):508:token.equalsIgnoreCase("Link") |==> true
19989:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):509:iLinks.add(st.nextToken()) |==> <NO-OP>
19990:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):510:iLinks.add(st.nextToken()) |==> <NO-OP>
19991:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):512:System.out.println("Unknown line: " + line) |==> <NO-OP>
19992:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):517:zone != null |==> true
19993:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler@parseDataFile(java.io.BufferedReader):518:iZones.add(zone) |==> <NO-OP>
19994:LVR:POS:0:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>():531:1 |==> 0
19995:LVR:POS:NEG:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>():531:1 |==> -1
19996:LVR:POS:0:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>():532:1 |==> 0
19997:LVR:POS:NEG:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>():532:1 |==> -1
19998:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>():533:0 |==> 1
19999:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>():533:0 |==> -1
20000:LVR:FALSE:TRUE:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>():534:false |==> true
20001:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>():535:0 |==> 1
20002:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>():535:0 |==> -1
20003:LVR:POS:0:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):540:1 |==> 0
20004:LVR:POS:NEG:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):540:1 |==> -1
20005:LVR:POS:0:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):541:1 |==> 0
20006:LVR:POS:NEG:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):541:1 |==> -1
20007:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):542:0 |==> 1
20008:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):542:0 |==> -1
20009:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):543:0 |==> 1
20010:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):543:0 |==> -1
20011:LVR:FALSE:TRUE:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):544:false |==> true
20012:COR:st.hasMoreTokens():TRUE:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):547:st.hasMoreTokens() |==> false
20013:COR:st.hasMoreTokens():FALSE:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):547:st.hasMoreTokens() |==> true
20014:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):548:month = parseMonth(st.nextToken()) |==> <NO-OP>
20015:COR:st.hasMoreTokens():TRUE:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):550:st.hasMoreTokens() |==> false
20016:COR:st.hasMoreTokens():FALSE:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):550:st.hasMoreTokens() |==> true
20017:COR:str.startsWith("last"):TRUE:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):552:str.startsWith("last") |==> false
20018:COR:str.startsWith("last"):FALSE:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):552:str.startsWith("last") |==> true
20019:LVR:NEG:0:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):553:-1 |==> 0
20020:LVR:NEG:POS:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):553:-1 |==> 1
20021:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):553:day = -1 |==> <NO-OP>
20022:LVR:POS:0:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):554:4 |==> 0
20023:LVR:POS:NEG:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):554:4 |==> -4
20024:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):554:dayOfWeek = parseDayOfWeek(str.substring(4)) |==> <NO-OP>
20025:LVR:FALSE:TRUE:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):555:false |==> true
20026:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):555:advance = false |==> <NO-OP>
20027:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):558:day = Integer.parseInt(str) |==> <NO-OP>
20028:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):559:0 |==> 1
20029:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):559:0 |==> -1
20030:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):559:dayOfWeek = 0 |==> <NO-OP>
20031:LVR:FALSE:TRUE:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):560:false |==> true
20032:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):560:advance = false |==> <NO-OP>
20033:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):563:0 |==> 1
20034:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):563:0 |==> -1
20035:ROR:>(int,int):!=(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):563:index > 0 |==> index != 0
20036:ROR:>(int,int):>=(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):563:index > 0 |==> index >= 0
20037:ROR:>(int,int):FALSE(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):563:index > 0 |==> false
20038:LVR:POS:0:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):564:2 |==> 0
20039:LVR:POS:NEG:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):564:2 |==> -2
20040:AOR:+(int,int):%(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):564:index + 2 |==> index % 2
20041:AOR:+(int,int):*(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):564:index + 2 |==> index * 2
20042:AOR:+(int,int):-(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):564:index + 2 |==> index - 2
20043:AOR:+(int,int):/(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):564:index + 2 |==> index / 2
20044:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):564:day = Integer.parseInt(str.substring(index + 2)) |==> <NO-OP>
20045:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):565:0 |==> 1
20046:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):565:0 |==> -1
20047:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):565:dayOfWeek = parseDayOfWeek(str.substring(0, index)) |==> <NO-OP>
20048:LVR:TRUE:FALSE:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):566:true |==> false
20049:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):566:advance = true |==> <NO-OP>
20050:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):568:index = str.indexOf("<=") |==> <NO-OP>
20051:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):569:0 |==> 1
20052:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):569:0 |==> -1
20053:ROR:>(int,int):!=(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):569:index > 0 |==> index != 0
20054:ROR:>(int,int):>=(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):569:index > 0 |==> index >= 0
20055:ROR:>(int,int):FALSE(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):569:index > 0 |==> false
20056:LVR:POS:0:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):570:2 |==> 0
20057:LVR:POS:NEG:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):570:2 |==> -2
20058:AOR:+(int,int):%(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):570:index + 2 |==> index % 2
20059:AOR:+(int,int):*(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):570:index + 2 |==> index * 2
20060:AOR:+(int,int):-(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):570:index + 2 |==> index - 2
20061:AOR:+(int,int):/(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):570:index + 2 |==> index / 2
20062:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):570:day = Integer.parseInt(str.substring(index + 2)) |==> <NO-OP>
20063:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):571:0 |==> 1
20064:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):571:0 |==> -1
20065:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):571:dayOfWeek = parseDayOfWeek(str.substring(0, index)) |==> <NO-OP>
20066:LVR:FALSE:TRUE:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):572:false |==> true
20067:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):572:advance = false |==> <NO-OP>
20068:COR:st.hasMoreTokens():TRUE:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):580:st.hasMoreTokens() |==> false
20069:COR:st.hasMoreTokens():FALSE:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):580:st.hasMoreTokens() |==> true
20070:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):581:str = st.nextToken() |==> <NO-OP>
20071:LVR:POS:0:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):582:1 |==> 0
20072:LVR:POS:NEG:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):582:1 |==> -1
20073:AOR:-(int,int):%(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):582:str.length() - 1 |==> str.length() % 1
20074:AOR:-(int,int):*(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):582:str.length() - 1 |==> str.length() * 1
20075:AOR:-(int,int):+(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):582:str.length() - 1 |==> str.length() + 1
20076:AOR:-(int,int):/(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):582:str.length() - 1 |==> str.length() / 1
20077:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):582:zoneChar = parseZoneChar(str.charAt(str.length() - 1)) |==> <NO-OP>
20078:COR:str.equals("24:00"):TRUE:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):583:str.equals("24:00") |==> false
20079:COR:str.equals("24:00"):FALSE:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):583:str.equals("24:00") |==> true
20080:LVR:NEG:0:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):584:-1 |==> 0
20081:LVR:NEG:POS:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):584:-1 |==> 1
20082:ROR:==(int,int):<=(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):584:day == -1 |==> day <= -1
20083:ROR:==(int,int):>=(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):584:day == -1 |==> day >= -1
20084:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):584:day == -1 |==> false
20085:LVR:POS:0:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):585:2001 |==> 0
20086:LVR:POS:NEG:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):585:2001 |==> -2001
20087:LVR:POS:0:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):585:1 |==> 0
20088:LVR:POS:NEG:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):585:1 |==> -1
20089:LVR:POS:0:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):585:1 |==> 0
20090:LVR:POS:NEG:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):585:1 |==> -1
20091:LVR:POS:0:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):586:2001 |==> 0
20092:LVR:POS:NEG:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):586:2001 |==> -2001
20093:LVR:POS:0:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):586:1 |==> 0
20094:LVR:POS:NEG:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):586:1 |==> -1
20095:LVR:NEG:0:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):587:-1 |==> 0
20096:LVR:NEG:POS:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):587:-1 |==> 1
20097:ROR:!=(int,int):<(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):587:day != -1 |==> day < -1
20098:ROR:!=(int,int):>(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):587:day != -1 |==> day > -1
20099:ROR:!=(int,int):TRUE(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):587:day != -1 |==> true
20100:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):587:advance = (day != -1) |==> <NO-OP>
20101:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):588:month = date.getMonthOfYear() |==> <NO-OP>
20102:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):589:day = date.getDayOfMonth() |==> <NO-OP>
20103:LVR:POS:0:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):590:1 |==> 0
20104:LVR:POS:NEG:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):590:1 |==> -1
20105:AOR:-(int,int):%(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):590:dayOfWeek - 1 |==> dayOfWeek % 1
20106:AOR:-(int,int):*(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):590:dayOfWeek - 1 |==> dayOfWeek * 1
20107:AOR:-(int,int):+(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):590:dayOfWeek - 1 |==> dayOfWeek + 1
20108:AOR:-(int,int):/(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):590:dayOfWeek - 1 |==> dayOfWeek / 1
20109:LVR:POS:0:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):590:1 |==> 0
20110:LVR:POS:NEG:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):590:1 |==> -1
20111:AOR:+(int,int):%(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):590:dayOfWeek - 1 + 1 |==> (dayOfWeek - 1) % 1
20112:AOR:+(int,int):*(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):590:dayOfWeek - 1 + 1 |==> (dayOfWeek - 1) * 1
20113:AOR:+(int,int):-(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):590:dayOfWeek - 1 + 1 |==> dayOfWeek - 1 - 1
20114:AOR:+(int,int):/(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):590:dayOfWeek - 1 + 1 |==> (dayOfWeek - 1) / 1
20115:LVR:POS:0:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):590:7 |==> 0
20116:LVR:POS:NEG:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):590:7 |==> -7
20117:AOR:%(int,int):*(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):590:(dayOfWeek - 1 + 1) % 7 |==> (dayOfWeek - 1 + 1) * 7
20118:AOR:%(int,int):+(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):590:(dayOfWeek - 1 + 1) % 7 |==> (dayOfWeek - 1 + 1) + 7
20119:AOR:%(int,int):-(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):590:(dayOfWeek - 1 + 1) % 7 |==> (dayOfWeek - 1 + 1) - 7
20120:AOR:%(int,int):/(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):590:(dayOfWeek - 1 + 1) % 7 |==> (dayOfWeek - 1 + 1) / 7
20121:LVR:POS:0:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):590:1 |==> 0
20122:LVR:POS:NEG:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):590:1 |==> -1
20123:AOR:+(int,int):%(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):590:((dayOfWeek - 1 + 1) % 7) + 1 |==> ((dayOfWeek - 1 + 1) % 7) % 1
20124:AOR:+(int,int):*(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):590:((dayOfWeek - 1 + 1) % 7) + 1 |==> ((dayOfWeek - 1 + 1) % 7) * 1
20125:AOR:+(int,int):-(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):590:((dayOfWeek - 1 + 1) % 7) + 1 |==> ((dayOfWeek - 1 + 1) % 7) - 1
20126:AOR:+(int,int):/(int,int):org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):590:((dayOfWeek - 1 + 1) % 7) + 1 |==> ((dayOfWeek - 1 + 1) % 7) / 1
20127:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):590:dayOfWeek = ((dayOfWeek - 1 + 1) % 7) + 1 |==> <NO-OP>
20128:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@<init>(java.util.StringTokenizer):592:millis = parseTime(str) |==> <NO-OP>
20129:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@addRecurring(org.joda.time.tz.DateTimeZoneBuilder,java.lang.String,int,int,int):612:builder.addRecurringSavings(nameKey, saveMillis, fromYear, toYear, iZoneChar, iMonthOfYear, iDayOfMonth, iDayOfWeek, iAdvanceDayOfWeek, iMillisOfDay) |==> <NO-OP>
20130:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear@addCutover(org.joda.time.tz.DateTimeZoneBuilder,int):626:builder.addCutover(year, iZoneChar, iMonthOfYear, iDayOfMonth, iDayOfWeek, iAdvanceDayOfWeek, iMillisOfDay) |==> <NO-OP>
20131:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler$Rule@<init>(java.util.StringTokenizer):657:0 |==> 1
20132:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler$Rule@<init>(java.util.StringTokenizer):657:0 |==> -1
20133:ROR:<(int,int):!=(int,int):org.joda.time.tz.ZoneInfoCompiler$Rule@<init>(java.util.StringTokenizer):659:iToYear < iFromYear |==> iToYear != iFromYear
20134:ROR:<(int,int):<=(int,int):org.joda.time.tz.ZoneInfoCompiler$Rule@<init>(java.util.StringTokenizer):659:iToYear < iFromYear |==> iToYear <= iFromYear
20135:ROR:<(int,int):FALSE(int,int):org.joda.time.tz.ZoneInfoCompiler$Rule@<init>(java.util.StringTokenizer):659:iToYear < iFromYear |==> false
20136:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$Rule@addRecurring(org.joda.time.tz.DateTimeZoneBuilder,java.lang.String):673:iDateTimeOfYear.addRecurring(builder, nameKey, iSaveMillis, iFromYear, iToYear) |==> <NO-OP>
20137:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler$Rule@formatName(java.lang.String):679:0 |==> 1
20138:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler$Rule@formatName(java.lang.String):679:0 |==> -1
20139:ROR:>(int,int):!=(int,int):org.joda.time.tz.ZoneInfoCompiler$Rule@formatName(java.lang.String):679:index > 0 |==> index != 0
20140:ROR:>(int,int):>=(int,int):org.joda.time.tz.ZoneInfoCompiler$Rule@formatName(java.lang.String):679:index > 0 |==> index >= 0
20141:ROR:>(int,int):FALSE(int,int):org.joda.time.tz.ZoneInfoCompiler$Rule@formatName(java.lang.String):679:index > 0 |==> false
20142:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler$Rule@formatName(java.lang.String):680:0 |==> 1
20143:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler$Rule@formatName(java.lang.String):680:0 |==> -1
20144:ROR:==(int,int):<=(int,int):org.joda.time.tz.ZoneInfoCompiler$Rule@formatName(java.lang.String):680:iSaveMillis == 0 |==> iSaveMillis <= 0
20145:ROR:==(int,int):>=(int,int):org.joda.time.tz.ZoneInfoCompiler$Rule@formatName(java.lang.String):680:iSaveMillis == 0 |==> iSaveMillis >= 0
20146:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.ZoneInfoCompiler$Rule@formatName(java.lang.String):680:iSaveMillis == 0 |==> false
20147:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler$Rule@formatName(java.lang.String):682:0 |==> 1
20148:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler$Rule@formatName(java.lang.String):682:0 |==> -1
20149:LVR:POS:0:org.joda.time.tz.ZoneInfoCompiler$Rule@formatName(java.lang.String):684:1 |==> 0
20150:LVR:POS:NEG:org.joda.time.tz.ZoneInfoCompiler$Rule@formatName(java.lang.String):684:1 |==> -1
20151:AOR:+(int,int):%(int,int):org.joda.time.tz.ZoneInfoCompiler$Rule@formatName(java.lang.String):684:index + 1 |==> index % 1
20152:AOR:+(int,int):*(int,int):org.joda.time.tz.ZoneInfoCompiler$Rule@formatName(java.lang.String):684:index + 1 |==> index * 1
20153:AOR:+(int,int):-(int,int):org.joda.time.tz.ZoneInfoCompiler$Rule@formatName(java.lang.String):684:index + 1 |==> index - 1
20154:AOR:+(int,int):/(int,int):org.joda.time.tz.ZoneInfoCompiler$Rule@formatName(java.lang.String):684:index + 1 |==> index / 1
20155:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$Rule@formatName(java.lang.String):687:index = nameFormat.indexOf("%s") |==> <NO-OP>
20156:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler$Rule@formatName(java.lang.String):688:0 |==> 1
20157:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler$Rule@formatName(java.lang.String):688:0 |==> -1
20158:ROR:<(int,int):!=(int,int):org.joda.time.tz.ZoneInfoCompiler$Rule@formatName(java.lang.String):688:index < 0 |==> index != 0
20159:ROR:<(int,int):<=(int,int):org.joda.time.tz.ZoneInfoCompiler$Rule@formatName(java.lang.String):688:index < 0 |==> index <= 0
20160:ROR:<(int,int):FALSE(int,int):org.joda.time.tz.ZoneInfoCompiler$Rule@formatName(java.lang.String):688:index < 0 |==> false
20161:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler$Rule@formatName(java.lang.String):691:0 |==> 1
20162:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler$Rule@formatName(java.lang.String):691:0 |==> -1
20163:LVR:POS:0:org.joda.time.tz.ZoneInfoCompiler$Rule@formatName(java.lang.String):692:2 |==> 0
20164:LVR:POS:NEG:org.joda.time.tz.ZoneInfoCompiler$Rule@formatName(java.lang.String):692:2 |==> -2
20165:AOR:+(int,int):%(int,int):org.joda.time.tz.ZoneInfoCompiler$Rule@formatName(java.lang.String):692:index + 2 |==> index % 2
20166:AOR:+(int,int):*(int,int):org.joda.time.tz.ZoneInfoCompiler$Rule@formatName(java.lang.String):692:index + 2 |==> index * 2
20167:AOR:+(int,int):-(int,int):org.joda.time.tz.ZoneInfoCompiler$Rule@formatName(java.lang.String):692:index + 2 |==> index - 2
20168:AOR:+(int,int):/(int,int):org.joda.time.tz.ZoneInfoCompiler$Rule@formatName(java.lang.String):692:index + 2 |==> index / 2
20169:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.ZoneInfoCompiler$Rule@formatName(java.lang.String):694:iLetterS == null |==> false
20170:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$RuleSet@<init>(org.joda.time.tz.ZoneInfoCompiler.Rule):719:iRules = new ArrayList<Rule>() |==> <NO-OP>
20171:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$RuleSet@<init>(org.joda.time.tz.ZoneInfoCompiler.Rule):720:iRules.add(rule) |==> <NO-OP>
20172:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler$RuleSet@addRule(org.joda.time.tz.ZoneInfoCompiler.Rule):724:0 |==> 1
20173:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler$RuleSet@addRule(org.joda.time.tz.ZoneInfoCompiler.Rule):724:0 |==> -1
20174:COR:rule.iName.equals(iRules.get(0).iName):TRUE:org.joda.time.tz.ZoneInfoCompiler$RuleSet@addRule(org.joda.time.tz.ZoneInfoCompiler.Rule):724:rule.iName.equals(iRules.get(0).iName) |==> false
20175:COR:rule.iName.equals(iRules.get(0).iName):FALSE:org.joda.time.tz.ZoneInfoCompiler$RuleSet@addRule(org.joda.time.tz.ZoneInfoCompiler.Rule):724:rule.iName.equals(iRules.get(0).iName) |==> true
20176:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$RuleSet@addRule(org.joda.time.tz.ZoneInfoCompiler.Rule):727:iRules.add(rule) |==> <NO-OP>
20177:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler$RuleSet@addRecurring(org.joda.time.tz.DateTimeZoneBuilder,java.lang.String):734:0 |==> 1
20178:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler$RuleSet@addRecurring(org.joda.time.tz.DateTimeZoneBuilder,java.lang.String):734:0 |==> -1
20179:ROR:<(int,int):!=(int,int):org.joda.time.tz.ZoneInfoCompiler$RuleSet@addRecurring(org.joda.time.tz.DateTimeZoneBuilder,java.lang.String):734:i < iRules.size() |==> i != iRules.size()
20180:ROR:<(int,int):<=(int,int):org.joda.time.tz.ZoneInfoCompiler$RuleSet@addRecurring(org.joda.time.tz.DateTimeZoneBuilder,java.lang.String):734:i < iRules.size() |==> i <= iRules.size()
20181:ROR:<(int,int):FALSE(int,int):org.joda.time.tz.ZoneInfoCompiler$RuleSet@addRecurring(org.joda.time.tz.DateTimeZoneBuilder,java.lang.String):734:i < iRules.size() |==> false
20182:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$RuleSet@addRecurring(org.joda.time.tz.DateTimeZoneBuilder,java.lang.String):736:rule.addRecurring(builder, nameFormat) |==> <NO-OP>
20183:COR:st.hasMoreTokens():TRUE:org.joda.time.tz.ZoneInfoCompiler$Zone@<init>(java.lang.String,java.util.StringTokenizer):764:st.hasMoreTokens() |==> false
20184:COR:st.hasMoreTokens():FALSE:org.joda.time.tz.ZoneInfoCompiler$Zone@<init>(java.lang.String,java.util.StringTokenizer):764:st.hasMoreTokens() |==> true
20185:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$Zone@<init>(java.lang.String,java.util.StringTokenizer):765:year = Integer.parseInt(st.nextToken()) |==> <NO-OP>
20186:COR:st.hasMoreTokens():TRUE:org.joda.time.tz.ZoneInfoCompiler$Zone@<init>(java.lang.String,java.util.StringTokenizer):766:st.hasMoreTokens() |==> false
20187:COR:st.hasMoreTokens():FALSE:org.joda.time.tz.ZoneInfoCompiler$Zone@<init>(java.lang.String,java.util.StringTokenizer):766:st.hasMoreTokens() |==> true
20188:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$Zone@<init>(java.lang.String,java.util.StringTokenizer):767:dtOfYear = new DateTimeOfYear(st) |==> <NO-OP>
20189:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.tz.ZoneInfoCompiler$Zone@chain(java.util.StringTokenizer):776:iNext != null |==> true
20190:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$Zone@chain(java.util.StringTokenizer):777:iNext.chain(st) |==> <NO-OP>
20191:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$Zone@chain(java.util.StringTokenizer):779:iNext = new Zone(iName, st) |==> <NO-OP>
20192:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$Zone@addToBuilder(org.joda.time.tz.DateTimeZoneBuilder,java.util.Map<java.lang.String,org.joda.time.tz.ZoneInfoCompiler.RuleSet>):795:addToBuilder(this, builder, ruleSets) |==> <NO-OP>
20193:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.tz.ZoneInfoCompiler$Zone@addToBuilder(org.joda.time.tz.ZoneInfoCompiler.Zone,org.joda.time.tz.DateTimeZoneBuilder,java.util.Map<java.lang.String,org.joda.time.tz.ZoneInfoCompiler.RuleSet>):802:zone != null |==> true
20194:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$Zone@addToBuilder(org.joda.time.tz.ZoneInfoCompiler.Zone,org.joda.time.tz.DateTimeZoneBuilder,java.util.Map<java.lang.String,org.joda.time.tz.ZoneInfoCompiler.RuleSet>):803:builder.setStandardOffset(zone.iOffsetMillis) |==> <NO-OP>
20195:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.ZoneInfoCompiler$Zone@addToBuilder(org.joda.time.tz.ZoneInfoCompiler.Zone,org.joda.time.tz.DateTimeZoneBuilder,java.util.Map<java.lang.String,org.joda.time.tz.ZoneInfoCompiler.RuleSet>):805:zone.iRules == null |==> false
20196:LVR:0:POS:org.joda.time.tz.ZoneInfoCompiler$Zone@addToBuilder(org.joda.time.tz.ZoneInfoCompiler.Zone,org.joda.time.tz.DateTimeZoneBuilder,java.util.Map<java.lang.String,org.joda.time.tz.ZoneInfoCompiler.RuleSet>):806:0 |==> 1
20197:LVR:0:NEG:org.joda.time.tz.ZoneInfoCompiler$Zone@addToBuilder(org.joda.time.tz.ZoneInfoCompiler.Zone,org.joda.time.tz.DateTimeZoneBuilder,java.util.Map<java.lang.String,org.joda.time.tz.ZoneInfoCompiler.RuleSet>):806:0 |==> -1
20198:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$Zone@addToBuilder(org.joda.time.tz.ZoneInfoCompiler.Zone,org.joda.time.tz.DateTimeZoneBuilder,java.util.Map<java.lang.String,org.joda.time.tz.ZoneInfoCompiler.RuleSet>):806:builder.setFixedSavings(zone.iFormat, 0) |==> <NO-OP>
20199:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$Zone@addToBuilder(org.joda.time.tz.ZoneInfoCompiler.Zone,org.joda.time.tz.DateTimeZoneBuilder,java.util.Map<java.lang.String,org.joda.time.tz.ZoneInfoCompiler.RuleSet>):811:builder.setFixedSavings(zone.iFormat, saveMillis) |==> <NO-OP>
20200:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.ZoneInfoCompiler$Zone@addToBuilder(org.joda.time.tz.ZoneInfoCompiler.Zone,org.joda.time.tz.DateTimeZoneBuilder,java.util.Map<java.lang.String,org.joda.time.tz.ZoneInfoCompiler.RuleSet>):815:rs == null |==> false
20201:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$Zone@addToBuilder(org.joda.time.tz.ZoneInfoCompiler.Zone,org.joda.time.tz.DateTimeZoneBuilder,java.util.Map<java.lang.String,org.joda.time.tz.ZoneInfoCompiler.RuleSet>):819:rs.addRecurring(builder, zone.iFormat) |==> <NO-OP>
20202:ROR:==(int,int):<=(int,int):org.joda.time.tz.ZoneInfoCompiler$Zone@addToBuilder(org.joda.time.tz.ZoneInfoCompiler.Zone,org.joda.time.tz.DateTimeZoneBuilder,java.util.Map<java.lang.String,org.joda.time.tz.ZoneInfoCompiler.RuleSet>):823:zone.iUntilYear == Integer.MAX_VALUE |==> zone.iUntilYear <= Integer.MAX_VALUE
20203:ROR:==(int,int):>=(int,int):org.joda.time.tz.ZoneInfoCompiler$Zone@addToBuilder(org.joda.time.tz.ZoneInfoCompiler.Zone,org.joda.time.tz.DateTimeZoneBuilder,java.util.Map<java.lang.String,org.joda.time.tz.ZoneInfoCompiler.RuleSet>):823:zone.iUntilYear == Integer.MAX_VALUE |==> zone.iUntilYear >= Integer.MAX_VALUE
20204:ROR:==(int,int):FALSE(int,int):org.joda.time.tz.ZoneInfoCompiler$Zone@addToBuilder(org.joda.time.tz.ZoneInfoCompiler.Zone,org.joda.time.tz.DateTimeZoneBuilder,java.util.Map<java.lang.String,org.joda.time.tz.ZoneInfoCompiler.RuleSet>):823:zone.iUntilYear == Integer.MAX_VALUE |==> false
20205:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoCompiler$Zone@addToBuilder(org.joda.time.tz.ZoneInfoCompiler.Zone,org.joda.time.tz.DateTimeZoneBuilder,java.util.Map<java.lang.String,org.joda.time.tz.ZoneInfoCompiler.RuleSet>):827:zone.iUntilDateTimeOfYear.addCutover(builder, zone.iUntilYear) |==> <NO-OP>
20206:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.ZoneInfoCompiler$Zone@toString():841:iNext == null |==> false
20207:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.ZoneInfoProvider@<init>(java.io.File):57:fileDir == null |==> false
20208:COR:fileDir.exists():TRUE:org.joda.time.tz.ZoneInfoProvider@<init>(java.io.File):60:fileDir.exists() |==> false
20209:COR:fileDir.exists():FALSE:org.joda.time.tz.ZoneInfoProvider@<init>(java.io.File):60:fileDir.exists() |==> true
20210:COR:fileDir.isDirectory():TRUE:org.joda.time.tz.ZoneInfoProvider@<init>(java.io.File):63:fileDir.isDirectory() |==> false
20211:COR:fileDir.isDirectory():FALSE:org.joda.time.tz.ZoneInfoProvider@<init>(java.io.File):63:fileDir.isDirectory() |==> true
20212:LVR:FALSE:TRUE:org.joda.time.tz.ZoneInfoProvider@<init>(java.lang.String):82:false |==> true
20213:LVR:TRUE:FALSE:org.joda.time.tz.ZoneInfoProvider@<init>(java.lang.String,java.lang.ClassLoader):96:true |==> false
20214:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.ZoneInfoProvider@<init>(java.lang.String,java.lang.ClassLoader,boolean):107:resourcePath == null |==> false
20215:COR:resourcePath.endsWith("/"):TRUE:org.joda.time.tz.ZoneInfoProvider@<init>(java.lang.String,java.lang.ClassLoader,boolean):110:resourcePath.endsWith("/") |==> false
20216:COR:resourcePath.endsWith("/"):FALSE:org.joda.time.tz.ZoneInfoProvider@<init>(java.lang.String,java.lang.ClassLoader,boolean):110:resourcePath.endsWith("/") |==> true
20217:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoProvider@<init>(java.lang.String,java.lang.ClassLoader,boolean):111:resourcePath += '/' |==> <NO-OP>
20218:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.ZoneInfoProvider@<init>(java.lang.String,java.lang.ClassLoader,boolean):117:loader == null |==> false
20219:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.tz.ZoneInfoProvider@<init>(java.lang.String,java.lang.ClassLoader,boolean):117:loader == null && !favorSystemLoader |==> loader == null == !favorSystemLoader
20220:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.tz.ZoneInfoProvider@<init>(java.lang.String,java.lang.ClassLoader,boolean):117:loader == null && !favorSystemLoader |==> false
20221:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.tz.ZoneInfoProvider@<init>(java.lang.String,java.lang.ClassLoader,boolean):117:loader == null && !favorSystemLoader |==> loader == null
20222:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.tz.ZoneInfoProvider@<init>(java.lang.String,java.lang.ClassLoader,boolean):117:loader == null && !favorSystemLoader |==> !favorSystemLoader
20223:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoProvider@<init>(java.lang.String,java.lang.ClassLoader,boolean):118:loader = getClass().getClassLoader() |==> <NO-OP>
20224:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.ZoneInfoProvider@getZone(java.lang.String):135:id == null |==> false
20225:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.ZoneInfoProvider@getZone(java.lang.String):140:obj == null |==> false
20226:COR:id.equals(obj):TRUE:org.joda.time.tz.ZoneInfoProvider@getZone(java.lang.String):144:id.equals(obj) |==> false
20227:COR:id.equals(obj):FALSE:org.joda.time.tz.ZoneInfoProvider@getZone(java.lang.String):144:id.equals(obj) |==> true
20228:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.tz.ZoneInfoProvider@getZone(java.lang.String):153:tz != null |==> true
20229:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoProvider@uncaughtException(java.lang.Exception):182:ex.printStackTrace() |==> <NO-OP>
20230:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.tz.ZoneInfoProvider@openResource(java.lang.String):195:iFileDir != null |==> true
20231:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.tz.ZoneInfoProvider@openResource(java.lang.String):199:iLoader != null |==> true
20232:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.tz.ZoneInfoProvider@openResource(java.lang.String):204:in == null |==> false
20233:LVR:POS:0:org.joda.time.tz.ZoneInfoProvider@openResource(java.lang.String):205:40 |==> 0
20234:LVR:POS:NEG:org.joda.time.tz.ZoneInfoProvider@openResource(java.lang.String):205:40 |==> -40
20235:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.tz.ZoneInfoProvider@openResource(java.lang.String):209:iLoader != null |==> true
20236:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoProvider@loadZoneData(java.lang.String):225:in = openResource(id) |==> <NO-OP>
20237:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoProvider@loadZoneData(java.lang.String):227:iZoneInfoMap.put(id, new SoftReference<DateTimeZone>(tz)) |==> <NO-OP>
20238:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoProvider@loadZoneData(java.lang.String):230:uncaughtException(ex) |==> <NO-OP>
20239:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoProvider@loadZoneData(java.lang.String):231:iZoneInfoMap.remove(id) |==> <NO-OP>
20240:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.tz.ZoneInfoProvider@loadZoneData(java.lang.String):235:in != null |==> true
20241:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoProvider@loadZoneData(java.lang.String):236:in.close() |==> <NO-OP>
20242:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoProvider@loadZoneInfoMap(java.io.InputStream):254:readZoneInfoMap(din, map) |==> <NO-OP>
20243:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoProvider@loadZoneInfoMap(java.io.InputStream):257:din.close() |==> <NO-OP>
20244:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoProvider@loadZoneInfoMap(java.io.InputStream):261:map.put("UTC", new SoftReference<DateTimeZone>(DateTimeZone.UTC)) |==> <NO-OP>
20245:LVR:0:POS:org.joda.time.tz.ZoneInfoProvider@readZoneInfoMap(java.io.DataInputStream,java.util.Map<java.lang.String,java.lang.Object>):275:0 |==> 1
20246:LVR:0:NEG:org.joda.time.tz.ZoneInfoProvider@readZoneInfoMap(java.io.DataInputStream,java.util.Map<java.lang.String,java.lang.Object>):275:0 |==> -1
20247:ROR:<(int,int):!=(int,int):org.joda.time.tz.ZoneInfoProvider@readZoneInfoMap(java.io.DataInputStream,java.util.Map<java.lang.String,java.lang.Object>):275:i < size |==> i != size
20248:ROR:<(int,int):<=(int,int):org.joda.time.tz.ZoneInfoProvider@readZoneInfoMap(java.io.DataInputStream,java.util.Map<java.lang.String,java.lang.Object>):275:i < size |==> i <= size
20249:ROR:<(int,int):FALSE(int,int):org.joda.time.tz.ZoneInfoProvider@readZoneInfoMap(java.io.DataInputStream,java.util.Map<java.lang.String,java.lang.Object>):275:i < size |==> false
20250:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoProvider@readZoneInfoMap(java.io.DataInputStream,java.util.Map<java.lang.String,java.lang.Object>):276:pool[i] = din.readUTF().intern() |==> <NO-OP>
20251:STD:<ASSIGN>:<NO-OP>:org.joda.time.tz.ZoneInfoProvider@readZoneInfoMap(java.io.DataInputStream,java.util.Map<java.lang.String,java.lang.Object>):280:size = din.readUnsignedShort() |==> <NO-OP>
20252:LVR:0:POS:org.joda.time.tz.ZoneInfoProvider@readZoneInfoMap(java.io.DataInputStream,java.util.Map<java.lang.String,java.lang.Object>):281:0 |==> 1
20253:LVR:0:NEG:org.joda.time.tz.ZoneInfoProvider@readZoneInfoMap(java.io.DataInputStream,java.util.Map<java.lang.String,java.lang.Object>):281:0 |==> -1
20254:ROR:<(int,int):!=(int,int):org.joda.time.tz.ZoneInfoProvider@readZoneInfoMap(java.io.DataInputStream,java.util.Map<java.lang.String,java.lang.Object>):281:i < size |==> i != size
20255:ROR:<(int,int):<=(int,int):org.joda.time.tz.ZoneInfoProvider@readZoneInfoMap(java.io.DataInputStream,java.util.Map<java.lang.String,java.lang.Object>):281:i < size |==> i <= size
20256:ROR:<(int,int):FALSE(int,int):org.joda.time.tz.ZoneInfoProvider@readZoneInfoMap(java.io.DataInputStream,java.util.Map<java.lang.String,java.lang.Object>):281:i < size |==> false
20257:STD:<CALL>:<NO-OP>:org.joda.time.tz.ZoneInfoProvider@readZoneInfoMap(java.io.DataInputStream,java.util.Map<java.lang.String,java.lang.Object>):283:zimap.put(pool[din.readUnsignedShort()], pool[din.readUnsignedShort()]) |==> <NO-OP>
