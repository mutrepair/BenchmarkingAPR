1:LVR:0:POS:org.apache.commons.codec.StringEncoderComparator@compare(java.lang.Object,java.lang.Object):73:0 |==> 1
2:LVR:0:NEG:org.apache.commons.codec.StringEncoderComparator@compare(java.lang.Object,java.lang.Object):73:0 |==> -1
3:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.StringEncoderComparator@compare(java.lang.Object,java.lang.Object):78:compareCode = s1.compareTo(s2) |==> <NO-OP>
4:LVR:0:POS:org.apache.commons.codec.StringEncoderComparator@compare(java.lang.Object,java.lang.Object):81:0 |==> 1
5:LVR:0:NEG:org.apache.commons.codec.StringEncoderComparator@compare(java.lang.Object,java.lang.Object):81:0 |==> -1
6:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.StringEncoderComparator@compare(java.lang.Object,java.lang.Object):81:compareCode = 0 |==> <NO-OP>
7:LVR:0:POS:org.apache.commons.codec.binary.Base64:130:0 |==> 1
8:LVR:0:NEG:org.apache.commons.codec.binary.Base64:130:0 |==> -1
9:ROR:<(int,int):!=(int,int):org.apache.commons.codec.binary.Base64:130:i < BASELENGTH |==> i != BASELENGTH
10:ROR:<(int,int):<=(int,int):org.apache.commons.codec.binary.Base64:130:i < BASELENGTH |==> i <= BASELENGTH
11:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.binary.Base64:130:i < BASELENGTH |==> false
12:LVR:NEG:0:org.apache.commons.codec.binary.Base64:131:-1 |==> 0
13:LVR:NEG:POS:org.apache.commons.codec.binary.Base64:131:-1 |==> 1
14:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64:131:base64Alphabet[i] = (byte)-1 |==> <NO-OP>
15:ROR:>=(int,int):==(int,int):org.apache.commons.codec.binary.Base64:133:i >= 'A' |==> i == 'A'
16:ROR:>=(int,int):>(int,int):org.apache.commons.codec.binary.Base64:133:i >= 'A' |==> i > 'A'
17:ROR:>=(int,int):TRUE(int,int):org.apache.commons.codec.binary.Base64:133:i >= 'A' |==> true
18:AOR:-(int,int):%(int,int):org.apache.commons.codec.binary.Base64:134:i - 'A' |==> i % 'A'
19:AOR:-(int,int):*(int,int):org.apache.commons.codec.binary.Base64:134:i - 'A' |==> i * 'A'
20:AOR:-(int,int):+(int,int):org.apache.commons.codec.binary.Base64:134:i - 'A' |==> i + 'A'
21:AOR:-(int,int):/(int,int):org.apache.commons.codec.binary.Base64:134:i - 'A' |==> i / 'A'
22:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64:134:base64Alphabet[i] = (byte)(i - 'A') |==> <NO-OP>
23:ROR:>=(int,int):==(int,int):org.apache.commons.codec.binary.Base64:136:i >= 'a' |==> i == 'a'
24:ROR:>=(int,int):>(int,int):org.apache.commons.codec.binary.Base64:136:i >= 'a' |==> i > 'a'
25:ROR:>=(int,int):TRUE(int,int):org.apache.commons.codec.binary.Base64:136:i >= 'a' |==> true
26:AOR:-(int,int):%(int,int):org.apache.commons.codec.binary.Base64:137:i - 'a' |==> i % 'a'
27:AOR:-(int,int):*(int,int):org.apache.commons.codec.binary.Base64:137:i - 'a' |==> i * 'a'
28:AOR:-(int,int):+(int,int):org.apache.commons.codec.binary.Base64:137:i - 'a' |==> i + 'a'
29:AOR:-(int,int):/(int,int):org.apache.commons.codec.binary.Base64:137:i - 'a' |==> i / 'a'
30:LVR:POS:0:org.apache.commons.codec.binary.Base64:137:26 |==> 0
31:LVR:POS:NEG:org.apache.commons.codec.binary.Base64:137:26 |==> -26
32:AOR:+(int,int):%(int,int):org.apache.commons.codec.binary.Base64:137:i - 'a' + 26 |==> (i - 'a') % 26
33:AOR:+(int,int):*(int,int):org.apache.commons.codec.binary.Base64:137:i - 'a' + 26 |==> (i - 'a') * 26
34:AOR:+(int,int):-(int,int):org.apache.commons.codec.binary.Base64:137:i - 'a' + 26 |==> i - 'a' - 26
35:AOR:+(int,int):/(int,int):org.apache.commons.codec.binary.Base64:137:i - 'a' + 26 |==> (i - 'a') / 26
36:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64:137:base64Alphabet[i] = (byte)(i - 'a' + 26) |==> <NO-OP>
37:ROR:>=(int,int):==(int,int):org.apache.commons.codec.binary.Base64:139:i >= '0' |==> i == '0'
38:ROR:>=(int,int):>(int,int):org.apache.commons.codec.binary.Base64:139:i >= '0' |==> i > '0'
39:ROR:>=(int,int):TRUE(int,int):org.apache.commons.codec.binary.Base64:139:i >= '0' |==> true
40:AOR:-(int,int):%(int,int):org.apache.commons.codec.binary.Base64:140:i - '0' |==> i % '0'
41:AOR:-(int,int):*(int,int):org.apache.commons.codec.binary.Base64:140:i - '0' |==> i * '0'
42:AOR:-(int,int):+(int,int):org.apache.commons.codec.binary.Base64:140:i - '0' |==> i + '0'
43:AOR:-(int,int):/(int,int):org.apache.commons.codec.binary.Base64:140:i - '0' |==> i / '0'
44:LVR:POS:0:org.apache.commons.codec.binary.Base64:140:52 |==> 0
45:LVR:POS:NEG:org.apache.commons.codec.binary.Base64:140:52 |==> -52
46:AOR:+(int,int):%(int,int):org.apache.commons.codec.binary.Base64:140:i - '0' + 52 |==> (i - '0') % 52
47:AOR:+(int,int):*(int,int):org.apache.commons.codec.binary.Base64:140:i - '0' + 52 |==> (i - '0') * 52
48:AOR:+(int,int):-(int,int):org.apache.commons.codec.binary.Base64:140:i - '0' + 52 |==> i - '0' - 52
49:AOR:+(int,int):/(int,int):org.apache.commons.codec.binary.Base64:140:i - '0' + 52 |==> (i - '0') / 52
50:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64:140:base64Alphabet[i] = (byte)(i - '0' + 52) |==> <NO-OP>
51:LVR:POS:0:org.apache.commons.codec.binary.Base64:143:62 |==> 0
52:LVR:POS:NEG:org.apache.commons.codec.binary.Base64:143:62 |==> -62
53:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64:143:base64Alphabet['+'] = 62 |==> <NO-OP>
54:LVR:POS:0:org.apache.commons.codec.binary.Base64:144:63 |==> 0
55:LVR:POS:NEG:org.apache.commons.codec.binary.Base64:144:63 |==> -63
56:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64:144:base64Alphabet['/'] = 63 |==> <NO-OP>
57:LVR:0:POS:org.apache.commons.codec.binary.Base64:146:0 |==> 1
58:LVR:0:NEG:org.apache.commons.codec.binary.Base64:146:0 |==> -1
59:LVR:POS:0:org.apache.commons.codec.binary.Base64:146:25 |==> 0
60:LVR:POS:NEG:org.apache.commons.codec.binary.Base64:146:25 |==> -25
61:ROR:<=(int,int):<(int,int):org.apache.commons.codec.binary.Base64:146:i <= 25 |==> i < 25
62:ROR:<=(int,int):==(int,int):org.apache.commons.codec.binary.Base64:146:i <= 25 |==> i == 25
63:ROR:<=(int,int):TRUE(int,int):org.apache.commons.codec.binary.Base64:146:i <= 25 |==> true
64:AOR:+(int,int):%(int,int):org.apache.commons.codec.binary.Base64:147:'A' + i |==> 'A' % i
65:AOR:+(int,int):*(int,int):org.apache.commons.codec.binary.Base64:147:'A' + i |==> 'A' * i
66:AOR:+(int,int):-(int,int):org.apache.commons.codec.binary.Base64:147:'A' + i |==> 'A' - i
67:AOR:+(int,int):/(int,int):org.apache.commons.codec.binary.Base64:147:'A' + i |==> 'A' / i
68:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64:147:lookUpBase64Alphabet[i] = (byte)('A' + i) |==> <NO-OP>
69:LVR:POS:0:org.apache.commons.codec.binary.Base64:150:26 |==> 0
70:LVR:POS:NEG:org.apache.commons.codec.binary.Base64:150:26 |==> -26
71:LVR:0:POS:org.apache.commons.codec.binary.Base64:150:0 |==> 1
72:LVR:0:NEG:org.apache.commons.codec.binary.Base64:150:0 |==> -1
73:LVR:POS:0:org.apache.commons.codec.binary.Base64:150:51 |==> 0
74:LVR:POS:NEG:org.apache.commons.codec.binary.Base64:150:51 |==> -51
75:ROR:<=(int,int):<(int,int):org.apache.commons.codec.binary.Base64:150:i <= 51 |==> i < 51
76:ROR:<=(int,int):==(int,int):org.apache.commons.codec.binary.Base64:150:i <= 51 |==> i == 51
77:ROR:<=(int,int):TRUE(int,int):org.apache.commons.codec.binary.Base64:150:i <= 51 |==> true
78:AOR:+(int,int):%(int,int):org.apache.commons.codec.binary.Base64:151:'a' + j |==> 'a' % j
79:AOR:+(int,int):*(int,int):org.apache.commons.codec.binary.Base64:151:'a' + j |==> 'a' * j
80:AOR:+(int,int):-(int,int):org.apache.commons.codec.binary.Base64:151:'a' + j |==> 'a' - j
81:AOR:+(int,int):/(int,int):org.apache.commons.codec.binary.Base64:151:'a' + j |==> 'a' / j
82:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64:151:lookUpBase64Alphabet[i] = (byte)('a' + j) |==> <NO-OP>
83:LVR:POS:0:org.apache.commons.codec.binary.Base64:154:52 |==> 0
84:LVR:POS:NEG:org.apache.commons.codec.binary.Base64:154:52 |==> -52
85:LVR:0:POS:org.apache.commons.codec.binary.Base64:154:0 |==> 1
86:LVR:0:NEG:org.apache.commons.codec.binary.Base64:154:0 |==> -1
87:LVR:POS:0:org.apache.commons.codec.binary.Base64:154:61 |==> 0
88:LVR:POS:NEG:org.apache.commons.codec.binary.Base64:154:61 |==> -61
89:ROR:<=(int,int):<(int,int):org.apache.commons.codec.binary.Base64:154:i <= 61 |==> i < 61
90:ROR:<=(int,int):==(int,int):org.apache.commons.codec.binary.Base64:154:i <= 61 |==> i == 61
91:ROR:<=(int,int):TRUE(int,int):org.apache.commons.codec.binary.Base64:154:i <= 61 |==> true
92:AOR:+(int,int):%(int,int):org.apache.commons.codec.binary.Base64:155:'0' + j |==> '0' % j
93:AOR:+(int,int):*(int,int):org.apache.commons.codec.binary.Base64:155:'0' + j |==> '0' * j
94:AOR:+(int,int):-(int,int):org.apache.commons.codec.binary.Base64:155:'0' + j |==> '0' - j
95:AOR:+(int,int):/(int,int):org.apache.commons.codec.binary.Base64:155:'0' + j |==> '0' / j
96:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64:155:lookUpBase64Alphabet[i] = (byte)('0' + j) |==> <NO-OP>
97:LVR:POS:0:org.apache.commons.codec.binary.Base64:158:62 |==> 0
98:LVR:POS:NEG:org.apache.commons.codec.binary.Base64:158:62 |==> -62
99:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64:158:lookUpBase64Alphabet[62] = (byte)'+' |==> <NO-OP>
100:LVR:POS:0:org.apache.commons.codec.binary.Base64:159:63 |==> 0
101:LVR:POS:NEG:org.apache.commons.codec.binary.Base64:159:63 |==> -63
102:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64:159:lookUpBase64Alphabet[63] = (byte)'/' |==> <NO-OP>
103:ROR:==(int,int):<=(int,int):org.apache.commons.codec.binary.Base64@isBase64(byte):170:octect == PAD |==> octect <= PAD
104:ROR:==(int,int):>=(int,int):org.apache.commons.codec.binary.Base64@isBase64(byte):170:octect == PAD |==> octect >= PAD
105:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.binary.Base64@isBase64(byte):170:octect == PAD |==> false
106:LVR:TRUE:FALSE:org.apache.commons.codec.binary.Base64@isBase64(byte):171:true |==> false
107:LVR:0:POS:org.apache.commons.codec.binary.Base64@isBase64(byte):172:0 |==> 1
108:LVR:0:NEG:org.apache.commons.codec.binary.Base64@isBase64(byte):172:0 |==> -1
109:ROR:<(int,int):!=(int,int):org.apache.commons.codec.binary.Base64@isBase64(byte):172:octect < 0 |==> octect != 0
110:ROR:<(int,int):<=(int,int):org.apache.commons.codec.binary.Base64@isBase64(byte):172:octect < 0 |==> octect <= 0
111:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.binary.Base64@isBase64(byte):172:octect < 0 |==> false
112:LVR:NEG:0:org.apache.commons.codec.binary.Base64@isBase64(byte):172:-1 |==> 0
113:LVR:NEG:POS:org.apache.commons.codec.binary.Base64@isBase64(byte):172:-1 |==> 1
114:ROR:==(int,int):<=(int,int):org.apache.commons.codec.binary.Base64@isBase64(byte):172:base64Alphabet[octect] == -1 |==> base64Alphabet[octect] <= -1
115:ROR:==(int,int):>=(int,int):org.apache.commons.codec.binary.Base64@isBase64(byte):172:base64Alphabet[octect] == -1 |==> base64Alphabet[octect] >= -1
116:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.binary.Base64@isBase64(byte):172:base64Alphabet[octect] == -1 |==> false
117:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.binary.Base64@isBase64(byte):172:octect < 0 || base64Alphabet[octect] == -1 |==> octect < 0 != (base64Alphabet[octect] == -1)
118:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.binary.Base64@isBase64(byte):172:octect < 0 || base64Alphabet[octect] == -1 |==> octect < 0
119:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.binary.Base64@isBase64(byte):172:octect < 0 || base64Alphabet[octect] == -1 |==> base64Alphabet[octect] == -1
120:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.binary.Base64@isBase64(byte):172:octect < 0 || base64Alphabet[octect] == -1 |==> true
121:LVR:FALSE:TRUE:org.apache.commons.codec.binary.Base64@isBase64(byte):173:false |==> true
122:LVR:TRUE:FALSE:org.apache.commons.codec.binary.Base64@isBase64(byte):175:true |==> false
123:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@isArrayByteBase64(byte[]):189:arrayOctect = discardWhitespace(arrayOctect) |==> <NO-OP>
124:LVR:0:POS:org.apache.commons.codec.binary.Base64@isArrayByteBase64(byte[]):192:0 |==> 1
125:LVR:0:NEG:org.apache.commons.codec.binary.Base64@isArrayByteBase64(byte[]):192:0 |==> -1
126:ROR:==(int,int):<=(int,int):org.apache.commons.codec.binary.Base64@isArrayByteBase64(byte[]):192:length == 0 |==> length <= 0
127:ROR:==(int,int):>=(int,int):org.apache.commons.codec.binary.Base64@isArrayByteBase64(byte[]):192:length == 0 |==> length >= 0
128:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.binary.Base64@isArrayByteBase64(byte[]):192:length == 0 |==> false
129:LVR:TRUE:FALSE:org.apache.commons.codec.binary.Base64@isArrayByteBase64(byte[]):195:true |==> false
130:LVR:0:POS:org.apache.commons.codec.binary.Base64@isArrayByteBase64(byte[]):197:0 |==> 1
131:LVR:0:NEG:org.apache.commons.codec.binary.Base64@isArrayByteBase64(byte[]):197:0 |==> -1
132:ROR:<(int,int):!=(int,int):org.apache.commons.codec.binary.Base64@isArrayByteBase64(byte[]):197:i < length |==> i != length
133:ROR:<(int,int):<=(int,int):org.apache.commons.codec.binary.Base64@isArrayByteBase64(byte[]):197:i < length |==> i <= length
134:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.binary.Base64@isArrayByteBase64(byte[]):197:i < length |==> false
135:COR:isBase64(arrayOctect[i]):TRUE:org.apache.commons.codec.binary.Base64@isArrayByteBase64(byte[]):198:isBase64(arrayOctect[i]) |==> false
136:COR:isBase64(arrayOctect[i]):FALSE:org.apache.commons.codec.binary.Base64@isArrayByteBase64(byte[]):198:isBase64(arrayOctect[i]) |==> true
137:LVR:FALSE:TRUE:org.apache.commons.codec.binary.Base64@isArrayByteBase64(byte[]):199:false |==> true
138:LVR:TRUE:FALSE:org.apache.commons.codec.binary.Base64@isArrayByteBase64(byte[]):202:true |==> false
139:LVR:FALSE:TRUE:org.apache.commons.codec.binary.Base64@encodeBase64(byte[]):213:false |==> true
140:LVR:TRUE:FALSE:org.apache.commons.codec.binary.Base64@encodeBase64Chunked(byte[]):224:true |==> false
141:AOR:*(long,long):%(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):268:binaryDataLength * EIGHTBIT |==> binaryDataLength % EIGHTBIT
142:AOR:*(long,long):+(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):268:binaryDataLength * EIGHTBIT |==> binaryDataLength + EIGHTBIT
143:AOR:*(long,long):-(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):268:binaryDataLength * EIGHTBIT |==> binaryDataLength - EIGHTBIT
144:AOR:*(long,long):/(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):268:binaryDataLength * EIGHTBIT |==> binaryDataLength / EIGHTBIT
145:AOR:%(long,long):*(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):269:lengthDataBits % TWENTYFOURBITGROUP |==> lengthDataBits * TWENTYFOURBITGROUP
146:AOR:%(long,long):+(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):269:lengthDataBits % TWENTYFOURBITGROUP |==> lengthDataBits + TWENTYFOURBITGROUP
147:AOR:%(long,long):-(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):269:lengthDataBits % TWENTYFOURBITGROUP |==> lengthDataBits - TWENTYFOURBITGROUP
148:AOR:%(long,long):/(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):269:lengthDataBits % TWENTYFOURBITGROUP |==> lengthDataBits / TWENTYFOURBITGROUP
149:AOR:/(long,long):%(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):270:lengthDataBits / TWENTYFOURBITGROUP |==> lengthDataBits % TWENTYFOURBITGROUP
150:AOR:/(long,long):*(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):270:lengthDataBits / TWENTYFOURBITGROUP |==> lengthDataBits * TWENTYFOURBITGROUP
151:AOR:/(long,long):+(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):270:lengthDataBits / TWENTYFOURBITGROUP |==> lengthDataBits + TWENTYFOURBITGROUP
152:AOR:/(long,long):-(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):270:lengthDataBits / TWENTYFOURBITGROUP |==> lengthDataBits - TWENTYFOURBITGROUP
153:LVR:0:POS:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):271:0 |==> 1
154:LVR:0:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):271:0 |==> -1
155:LVR:0:POS:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):272:0 |==> 1
156:LVR:0:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):272:0 |==> -1
157:LVR:0:POS:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):274:0 |==> 1
158:LVR:0:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):274:0 |==> -1
159:ROR:!=(long,long):<(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):274:fewerThan24bits != 0 |==> fewerThan24bits < 0
160:ROR:!=(long,long):>(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):274:fewerThan24bits != 0 |==> fewerThan24bits > 0
161:ROR:!=(long,long):TRUE(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):274:fewerThan24bits != 0 |==> true
162:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):276:1 |==> 0
163:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):276:1 |==> -1
164:AOR:+(long,long):%(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):276:tripletCount + 1 |==> tripletCount % 1
165:AOR:+(long,long):*(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):276:tripletCount + 1 |==> tripletCount * 1
166:AOR:+(long,long):-(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):276:tripletCount + 1 |==> tripletCount - 1
167:AOR:+(long,long):/(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):276:tripletCount + 1 |==> tripletCount / 1
168:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):276:4 |==> 0
169:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):276:4 |==> -4
170:AOR:*(long,long):%(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):276:(tripletCount + 1) * 4 |==> (tripletCount + 1) % 4
171:AOR:*(long,long):+(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):276:(tripletCount + 1) * 4 |==> (tripletCount + 1) + 4
172:AOR:*(long,long):-(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):276:(tripletCount + 1) * 4 |==> (tripletCount + 1) - 4
173:AOR:*(long,long):/(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):276:(tripletCount + 1) * 4 |==> (tripletCount + 1) / 4
174:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):276:encodedDataLengthLong = (tripletCount + 1) * 4 |==> <NO-OP>
175:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):279:4 |==> 0
176:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):279:4 |==> -4
177:AOR:*(long,long):%(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):279:tripletCount * 4 |==> tripletCount % 4
178:AOR:*(long,long):+(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):279:tripletCount * 4 |==> tripletCount + 4
179:AOR:*(long,long):-(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):279:tripletCount * 4 |==> tripletCount - 4
180:AOR:*(long,long):/(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):279:tripletCount * 4 |==> tripletCount / 4
181:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):279:encodedDataLengthLong = tripletCount * 4 |==> <NO-OP>
182:COR:isChunked:TRUE:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):285:isChunked |==> false
183:COR:isChunked:FALSE:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):285:isChunked |==> true
184:LVR:0:POS:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):287:0 |==> 1
185:LVR:0:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):287:0 |==> -1
186:ROR:==(int,int):<=(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):287:CHUNK_SEPARATOR.length == 0 |==> CHUNK_SEPARATOR.length <= 0
187:ROR:==(int,int):>=(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):287:CHUNK_SEPARATOR.length == 0 |==> CHUNK_SEPARATOR.length >= 0
188:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):287:CHUNK_SEPARATOR.length == 0 |==> false
189:LVR:0:POS:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):287:0 |==> 1
190:LVR:0:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):287:0 |==> -1
191:AOR:/(float,float):%(float,float):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):288:(float)encodedDataLengthLong / CHUNK_SIZE |==> (float)encodedDataLengthLong % CHUNK_SIZE
192:AOR:/(float,float):*(float,float):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):288:(float)encodedDataLengthLong / CHUNK_SIZE |==> (float)encodedDataLengthLong * CHUNK_SIZE
193:AOR:/(float,float):+(float,float):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):288:(float)encodedDataLengthLong / CHUNK_SIZE |==> (float)encodedDataLengthLong + CHUNK_SIZE
194:AOR:/(float,float):-(float,float):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):288:(float)encodedDataLengthLong / CHUNK_SIZE |==> (float)encodedDataLengthLong - CHUNK_SIZE
195:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):287:chunckCount = (CHUNK_SEPARATOR.length == 0 ? 0 : (int)Math.ceil((float)encodedDataLengthLong / CHUNK_SIZE)) |==> <NO-OP>
196:AOR:*(int,int):%(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):289:chunckCount * CHUNK_SEPARATOR.length |==> chunckCount % CHUNK_SEPARATOR.length
197:AOR:*(int,int):+(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):289:chunckCount * CHUNK_SEPARATOR.length |==> chunckCount + CHUNK_SEPARATOR.length
198:AOR:*(int,int):-(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):289:chunckCount * CHUNK_SEPARATOR.length |==> chunckCount - CHUNK_SEPARATOR.length
199:AOR:*(int,int):/(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):289:chunckCount * CHUNK_SEPARATOR.length |==> chunckCount / CHUNK_SEPARATOR.length
200:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):289:encodedDataLengthLong += chunckCount * CHUNK_SEPARATOR.length |==> <NO-OP>
201:ROR:>(long,long):!=(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):292:encodedDataLengthLong > Integer.MAX_VALUE |==> encodedDataLengthLong != Integer.MAX_VALUE
202:ROR:>(long,long):>=(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):292:encodedDataLengthLong > Integer.MAX_VALUE |==> encodedDataLengthLong >= Integer.MAX_VALUE
203:ROR:>(long,long):FALSE(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):292:encodedDataLengthLong > Integer.MAX_VALUE |==> false
204:LVR:0:POS:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):299:0 |==> 1
205:LVR:0:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):299:0 |==> -1
206:LVR:0:POS:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):299:0 |==> 1
207:LVR:0:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):299:0 |==> -1
208:LVR:0:POS:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):299:0 |==> 1
209:LVR:0:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):299:0 |==> -1
210:LVR:0:POS:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):299:0 |==> 1
211:LVR:0:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):299:0 |==> -1
212:LVR:0:POS:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):299:0 |==> 1
213:LVR:0:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):299:0 |==> -1
214:LVR:0:POS:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):301:0 |==> 1
215:LVR:0:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):301:0 |==> -1
216:LVR:0:POS:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):302:0 |==> 1
217:LVR:0:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):302:0 |==> -1
218:LVR:0:POS:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):303:0 |==> 1
219:LVR:0:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):303:0 |==> -1
220:LVR:0:POS:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):305:0 |==> 1
221:LVR:0:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):305:0 |==> -1
222:LVR:0:POS:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):308:0 |==> 1
223:LVR:0:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):308:0 |==> -1
224:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):308:i = 0 |==> <NO-OP>
225:ROR:<(long,long):!=(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):308:i < tripletCount |==> i != tripletCount
226:ROR:<(long,long):<=(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):308:i < tripletCount |==> i <= tripletCount
227:ROR:<(long,long):FALSE(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):308:i < tripletCount |==> false
228:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):309:3 |==> 0
229:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):309:3 |==> -3
230:AOR:*(int,int):%(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):309:i * 3 |==> i % 3
231:AOR:*(int,int):+(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):309:i * 3 |==> i + 3
232:AOR:*(int,int):-(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):309:i * 3 |==> i - 3
233:AOR:*(int,int):/(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):309:i * 3 |==> i / 3
234:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):309:dataIndex = i * 3 |==> <NO-OP>
235:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):310:b1 = binaryData[dataIndex] |==> <NO-OP>
236:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):311:1 |==> 0
237:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):311:1 |==> -1
238:AOR:+(int,int):%(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):311:dataIndex + 1 |==> dataIndex % 1
239:AOR:+(int,int):*(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):311:dataIndex + 1 |==> dataIndex * 1
240:AOR:+(int,int):-(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):311:dataIndex + 1 |==> dataIndex - 1
241:AOR:+(int,int):/(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):311:dataIndex + 1 |==> dataIndex / 1
242:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):311:b2 = binaryData[dataIndex + 1] |==> <NO-OP>
243:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):312:2 |==> 0
244:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):312:2 |==> -2
245:AOR:+(int,int):%(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):312:dataIndex + 2 |==> dataIndex % 2
246:AOR:+(int,int):*(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):312:dataIndex + 2 |==> dataIndex * 2
247:AOR:+(int,int):-(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):312:dataIndex + 2 |==> dataIndex - 2
248:AOR:+(int,int):/(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):312:dataIndex + 2 |==> dataIndex / 2
249:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):312:b3 = binaryData[dataIndex + 2] |==> <NO-OP>
250:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):316:15 |==> 0
251:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):316:15 |==> -15
252:LOR:&(int,int):^(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):316:b2 & 15 |==> b2 ^ 15
253:LOR:&(int,int):|(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):316:b2 & 15 |==> b2 | 15
254:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):316:l = (byte)(b2 & 15) |==> <NO-OP>
255:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):317:3 |==> 0
256:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):317:3 |==> -3
257:LOR:&(int,int):^(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):317:b1 & 3 |==> b1 ^ 3
258:LOR:&(int,int):|(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):317:b1 & 3 |==> b1 | 3
259:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):317:k = (byte)(b1 & 3) |==> <NO-OP>
260:LOR:&(int,int):^(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):319:b1 & SIGN |==> b1 ^ SIGN
261:LOR:&(int,int):|(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):319:b1 & SIGN |==> b1 | SIGN
262:LVR:0:POS:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):319:0 |==> 1
263:LVR:0:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):319:0 |==> -1
264:ROR:==(int,int):<=(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):319:(b1 & SIGN) == 0 |==> (b1 & SIGN) <= 0
265:ROR:==(int,int):>=(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):319:(b1 & SIGN) == 0 |==> (b1 & SIGN) >= 0
266:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):319:(b1 & SIGN) == 0 |==> false
267:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):319:2 |==> 0
268:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):319:2 |==> -2
269:SOR:>>(int,int):<<(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):319:b1 >> 2 |==> b1 << 2
270:SOR:>>(int,int):>>>(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):319:b1 >> 2 |==> b1 >>> 2
271:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):319:2 |==> 0
272:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):319:2 |==> -2
273:SOR:>>(int,int):<<(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):319:(b1) >> 2 |==> (b1) << 2
274:SOR:>>(int,int):>>>(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):319:(b1) >> 2 |==> (b1) >>> 2
275:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):319:192 |==> 0
276:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):319:192 |==> -192
277:LOR:^(int,int):&(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):319:(b1) >> 2 ^ 192 |==> (b1) >> 2 & 192
278:LOR:^(int,int):|(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):319:(b1) >> 2 ^ 192 |==> (b1) >> 2 | 192
279:LOR:&(int,int):^(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):320:b2 & SIGN |==> b2 ^ SIGN
280:LOR:&(int,int):|(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):320:b2 & SIGN |==> b2 | SIGN
281:LVR:0:POS:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):320:0 |==> 1
282:LVR:0:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):320:0 |==> -1
283:ROR:==(int,int):<=(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):320:(b2 & SIGN) == 0 |==> (b2 & SIGN) <= 0
284:ROR:==(int,int):>=(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):320:(b2 & SIGN) == 0 |==> (b2 & SIGN) >= 0
285:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):320:(b2 & SIGN) == 0 |==> false
286:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):320:4 |==> 0
287:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):320:4 |==> -4
288:SOR:>>(int,int):<<(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):320:b2 >> 4 |==> b2 << 4
289:SOR:>>(int,int):>>>(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):320:b2 >> 4 |==> b2 >>> 4
290:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):320:4 |==> 0
291:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):320:4 |==> -4
292:SOR:>>(int,int):<<(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):320:(b2) >> 4 |==> (b2) << 4
293:SOR:>>(int,int):>>>(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):320:(b2) >> 4 |==> (b2) >>> 4
294:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):320:240 |==> 0
295:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):320:240 |==> -240
296:LOR:^(int,int):&(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):320:(b2) >> 4 ^ 240 |==> (b2) >> 4 & 240
297:LOR:^(int,int):|(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):320:(b2) >> 4 ^ 240 |==> (b2) >> 4 | 240
298:LOR:&(int,int):^(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):321:b3 & SIGN |==> b3 ^ SIGN
299:LOR:&(int,int):|(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):321:b3 & SIGN |==> b3 | SIGN
300:LVR:0:POS:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):321:0 |==> 1
301:LVR:0:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):321:0 |==> -1
302:ROR:==(int,int):<=(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):321:(b3 & SIGN) == 0 |==> (b3 & SIGN) <= 0
303:ROR:==(int,int):>=(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):321:(b3 & SIGN) == 0 |==> (b3 & SIGN) >= 0
304:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):321:(b3 & SIGN) == 0 |==> false
305:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):321:6 |==> 0
306:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):321:6 |==> -6
307:SOR:>>(int,int):<<(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):321:b3 >> 6 |==> b3 << 6
308:SOR:>>(int,int):>>>(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):321:b3 >> 6 |==> b3 >>> 6
309:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):321:6 |==> 0
310:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):321:6 |==> -6
311:SOR:>>(int,int):<<(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):321:(b3) >> 6 |==> (b3) << 6
312:SOR:>>(int,int):>>>(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):321:(b3) >> 6 |==> (b3) >>> 6
313:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):321:252 |==> 0
314:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):321:252 |==> -252
315:LOR:^(int,int):&(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):321:(b3) >> 6 ^ 252 |==> (b3) >> 6 & 252
316:LOR:^(int,int):|(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):321:(b3) >> 6 ^ 252 |==> (b3) >> 6 | 252
317:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):323:encodedData[encodedIndex] = lookUpBase64Alphabet[val1] |==> <NO-OP>
318:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):327:1 |==> 0
319:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):327:1 |==> -1
320:AOR:+(int,int):%(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):327:encodedIndex + 1 |==> encodedIndex % 1
321:AOR:+(int,int):*(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):327:encodedIndex + 1 |==> encodedIndex * 1
322:AOR:+(int,int):-(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):327:encodedIndex + 1 |==> encodedIndex - 1
323:AOR:+(int,int):/(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):327:encodedIndex + 1 |==> encodedIndex / 1
324:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):327:4 |==> 0
325:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):327:4 |==> -4
326:SOR:<<(int,int):>>(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):327:k << 4 |==> k >> 4
327:SOR:<<(int,int):>>>(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):327:k << 4 |==> k >>> 4
328:LOR:|(int,int):&(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):327:val2 | (k << 4) |==> val2 & (k << 4)
329:LOR:|(int,int):^(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):327:val2 | (k << 4) |==> val2 ^ (k << 4)
330:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):327:encodedData[encodedIndex + 1] = lookUpBase64Alphabet[val2 | (k << 4)] |==> <NO-OP>
331:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):328:2 |==> 0
332:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):328:2 |==> -2
333:AOR:+(int,int):%(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):328:encodedIndex + 2 |==> encodedIndex % 2
334:AOR:+(int,int):*(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):328:encodedIndex + 2 |==> encodedIndex * 2
335:AOR:+(int,int):-(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):328:encodedIndex + 2 |==> encodedIndex - 2
336:AOR:+(int,int):/(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):328:encodedIndex + 2 |==> encodedIndex / 2
337:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):328:2 |==> 0
338:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):328:2 |==> -2
339:SOR:<<(int,int):>>(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):328:l << 2 |==> l >> 2
340:SOR:<<(int,int):>>>(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):328:l << 2 |==> l >>> 2
341:LOR:|(int,int):&(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):328:(l << 2) | val3 |==> (l << 2) & val3
342:LOR:|(int,int):^(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):328:(l << 2) | val3 |==> (l << 2) ^ val3
343:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):328:encodedData[encodedIndex + 2] = lookUpBase64Alphabet[(l << 2) | val3] |==> <NO-OP>
344:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):329:3 |==> 0
345:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):329:3 |==> -3
346:AOR:+(int,int):%(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):329:encodedIndex + 3 |==> encodedIndex % 3
347:AOR:+(int,int):*(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):329:encodedIndex + 3 |==> encodedIndex * 3
348:AOR:+(int,int):-(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):329:encodedIndex + 3 |==> encodedIndex - 3
349:AOR:+(int,int):/(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):329:encodedIndex + 3 |==> encodedIndex / 3
350:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):329:63 |==> 0
351:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):329:63 |==> -63
352:LOR:&(int,int):^(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):329:b3 & 63 |==> b3 ^ 63
353:LOR:&(int,int):|(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):329:b3 & 63 |==> b3 | 63
354:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):329:encodedData[encodedIndex + 3] = lookUpBase64Alphabet[b3 & 63] |==> <NO-OP>
355:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):331:4 |==> 0
356:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):331:4 |==> -4
357:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):331:encodedIndex += 4 |==> <NO-OP>
358:COR:isChunked:TRUE:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):334:isChunked |==> false
359:COR:isChunked:FALSE:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):334:isChunked |==> true
360:ROR:==(int,int):<=(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):336:encodedIndex == nextSeparatorIndex |==> encodedIndex <= nextSeparatorIndex
361:ROR:==(int,int):>=(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):336:encodedIndex == nextSeparatorIndex |==> encodedIndex >= nextSeparatorIndex
362:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):336:encodedIndex == nextSeparatorIndex |==> false
363:LVR:0:POS:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):337:0 |==> 1
364:LVR:0:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):337:0 |==> -1
365:STD:<CALL>:<NO-OP>:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):337:System.arraycopy(CHUNK_SEPARATOR, 0, encodedData, encodedIndex, CHUNK_SEPARATOR.length) |==> <NO-OP>
366:STD:<INC>:<NO-OP>:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):338:chunksSoFar++ |==> <NO-OP>
367:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):339:1 |==> 0
368:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):339:1 |==> -1
369:AOR:+(int,int):%(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):339:chunksSoFar + 1 |==> chunksSoFar % 1
370:AOR:+(int,int):*(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):339:chunksSoFar + 1 |==> chunksSoFar * 1
371:AOR:+(int,int):-(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):339:chunksSoFar + 1 |==> chunksSoFar - 1
372:AOR:+(int,int):/(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):339:chunksSoFar + 1 |==> chunksSoFar / 1
373:AOR:*(int,int):%(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):339:CHUNK_SIZE * (chunksSoFar + 1) |==> CHUNK_SIZE % (chunksSoFar + 1)
374:AOR:*(int,int):+(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):339:CHUNK_SIZE * (chunksSoFar + 1) |==> CHUNK_SIZE + (chunksSoFar + 1)
375:AOR:*(int,int):-(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):339:CHUNK_SIZE * (chunksSoFar + 1) |==> CHUNK_SIZE - (chunksSoFar + 1)
376:AOR:*(int,int):/(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):339:CHUNK_SIZE * (chunksSoFar + 1) |==> CHUNK_SIZE / (chunksSoFar + 1)
377:AOR:*(int,int):%(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):339:chunksSoFar * CHUNK_SEPARATOR.length |==> chunksSoFar % CHUNK_SEPARATOR.length
378:AOR:*(int,int):+(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):339:chunksSoFar * CHUNK_SEPARATOR.length |==> chunksSoFar + CHUNK_SEPARATOR.length
379:AOR:*(int,int):-(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):339:chunksSoFar * CHUNK_SEPARATOR.length |==> chunksSoFar - CHUNK_SEPARATOR.length
380:AOR:*(int,int):/(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):339:chunksSoFar * CHUNK_SEPARATOR.length |==> chunksSoFar / CHUNK_SEPARATOR.length
381:AOR:+(int,int):%(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):339:(CHUNK_SIZE * (chunksSoFar + 1)) + (chunksSoFar * CHUNK_SEPARATOR.length) |==> (CHUNK_SIZE * (chunksSoFar + 1)) % (chunksSoFar * CHUNK_SEPARATOR.length)
382:AOR:+(int,int):*(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):339:(CHUNK_SIZE * (chunksSoFar + 1)) + (chunksSoFar * CHUNK_SEPARATOR.length) |==> (CHUNK_SIZE * (chunksSoFar + 1)) * (chunksSoFar * CHUNK_SEPARATOR.length)
383:AOR:+(int,int):-(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):339:(CHUNK_SIZE * (chunksSoFar + 1)) + (chunksSoFar * CHUNK_SEPARATOR.length) |==> (CHUNK_SIZE * (chunksSoFar + 1)) - (chunksSoFar * CHUNK_SEPARATOR.length)
384:AOR:+(int,int):/(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):339:(CHUNK_SIZE * (chunksSoFar + 1)) + (chunksSoFar * CHUNK_SEPARATOR.length) |==> (CHUNK_SIZE * (chunksSoFar + 1)) / (chunksSoFar * CHUNK_SEPARATOR.length)
385:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):339:nextSeparatorIndex = (CHUNK_SIZE * (chunksSoFar + 1)) + (chunksSoFar * CHUNK_SEPARATOR.length) |==> <NO-OP>
386:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):340:encodedIndex += CHUNK_SEPARATOR.length |==> <NO-OP>
387:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):346:3 |==> 0
388:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):346:3 |==> -3
389:AOR:*(int,int):%(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):346:i * 3 |==> i % 3
390:AOR:*(int,int):+(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):346:i * 3 |==> i + 3
391:AOR:*(int,int):-(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):346:i * 3 |==> i - 3
392:AOR:*(int,int):/(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):346:i * 3 |==> i / 3
393:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):346:dataIndex = i * 3 |==> <NO-OP>
394:ROR:==(long,long):<=(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):348:fewerThan24bits == EIGHTBIT |==> fewerThan24bits <= EIGHTBIT
395:ROR:==(long,long):>=(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):348:fewerThan24bits == EIGHTBIT |==> fewerThan24bits >= EIGHTBIT
396:ROR:==(long,long):FALSE(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):348:fewerThan24bits == EIGHTBIT |==> false
397:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):349:b1 = binaryData[dataIndex] |==> <NO-OP>
398:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):350:3 |==> 0
399:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):350:3 |==> -3
400:LOR:&(int,int):^(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):350:b1 & 3 |==> b1 ^ 3
401:LOR:&(int,int):|(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):350:b1 & 3 |==> b1 | 3
402:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):350:k = (byte)(b1 & 3) |==> <NO-OP>
403:LOR:&(int,int):^(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):353:b1 & SIGN |==> b1 ^ SIGN
404:LOR:&(int,int):|(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):353:b1 & SIGN |==> b1 | SIGN
405:LVR:0:POS:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):353:0 |==> 1
406:LVR:0:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):353:0 |==> -1
407:ROR:==(int,int):<=(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):353:(b1 & SIGN) == 0 |==> (b1 & SIGN) <= 0
408:ROR:==(int,int):>=(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):353:(b1 & SIGN) == 0 |==> (b1 & SIGN) >= 0
409:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):353:(b1 & SIGN) == 0 |==> false
410:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):353:2 |==> 0
411:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):353:2 |==> -2
412:SOR:>>(int,int):<<(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):353:b1 >> 2 |==> b1 << 2
413:SOR:>>(int,int):>>>(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):353:b1 >> 2 |==> b1 >>> 2
414:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):353:2 |==> 0
415:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):353:2 |==> -2
416:SOR:>>(int,int):<<(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):353:(b1) >> 2 |==> (b1) << 2
417:SOR:>>(int,int):>>>(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):353:(b1) >> 2 |==> (b1) >>> 2
418:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):353:192 |==> 0
419:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):353:192 |==> -192
420:LOR:^(int,int):&(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):353:(b1) >> 2 ^ 192 |==> (b1) >> 2 & 192
421:LOR:^(int,int):|(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):353:(b1) >> 2 ^ 192 |==> (b1) >> 2 | 192
422:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):354:encodedData[encodedIndex] = lookUpBase64Alphabet[val1] |==> <NO-OP>
423:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):355:1 |==> 0
424:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):355:1 |==> -1
425:AOR:+(int,int):%(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):355:encodedIndex + 1 |==> encodedIndex % 1
426:AOR:+(int,int):*(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):355:encodedIndex + 1 |==> encodedIndex * 1
427:AOR:+(int,int):-(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):355:encodedIndex + 1 |==> encodedIndex - 1
428:AOR:+(int,int):/(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):355:encodedIndex + 1 |==> encodedIndex / 1
429:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):355:4 |==> 0
430:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):355:4 |==> -4
431:SOR:<<(int,int):>>(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):355:k << 4 |==> k >> 4
432:SOR:<<(int,int):>>>(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):355:k << 4 |==> k >>> 4
433:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):355:encodedData[encodedIndex + 1] = lookUpBase64Alphabet[k << 4] |==> <NO-OP>
434:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):356:2 |==> 0
435:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):356:2 |==> -2
436:AOR:+(int,int):%(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):356:encodedIndex + 2 |==> encodedIndex % 2
437:AOR:+(int,int):*(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):356:encodedIndex + 2 |==> encodedIndex * 2
438:AOR:+(int,int):-(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):356:encodedIndex + 2 |==> encodedIndex - 2
439:AOR:+(int,int):/(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):356:encodedIndex + 2 |==> encodedIndex / 2
440:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):356:encodedData[encodedIndex + 2] = PAD |==> <NO-OP>
441:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):357:3 |==> 0
442:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):357:3 |==> -3
443:AOR:+(int,int):%(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):357:encodedIndex + 3 |==> encodedIndex % 3
444:AOR:+(int,int):*(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):357:encodedIndex + 3 |==> encodedIndex * 3
445:AOR:+(int,int):-(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):357:encodedIndex + 3 |==> encodedIndex - 3
446:AOR:+(int,int):/(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):357:encodedIndex + 3 |==> encodedIndex / 3
447:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):357:encodedData[encodedIndex + 3] = PAD |==> <NO-OP>
448:ROR:==(long,long):<=(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):358:fewerThan24bits == SIXTEENBIT |==> fewerThan24bits <= SIXTEENBIT
449:ROR:==(long,long):>=(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):358:fewerThan24bits == SIXTEENBIT |==> fewerThan24bits >= SIXTEENBIT
450:ROR:==(long,long):FALSE(long,long):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):358:fewerThan24bits == SIXTEENBIT |==> false
451:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):360:b1 = binaryData[dataIndex] |==> <NO-OP>
452:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):361:1 |==> 0
453:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):361:1 |==> -1
454:AOR:+(int,int):%(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):361:dataIndex + 1 |==> dataIndex % 1
455:AOR:+(int,int):*(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):361:dataIndex + 1 |==> dataIndex * 1
456:AOR:+(int,int):-(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):361:dataIndex + 1 |==> dataIndex - 1
457:AOR:+(int,int):/(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):361:dataIndex + 1 |==> dataIndex / 1
458:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):361:b2 = binaryData[dataIndex + 1] |==> <NO-OP>
459:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):362:15 |==> 0
460:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):362:15 |==> -15
461:LOR:&(int,int):^(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):362:b2 & 15 |==> b2 ^ 15
462:LOR:&(int,int):|(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):362:b2 & 15 |==> b2 | 15
463:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):362:l = (byte)(b2 & 15) |==> <NO-OP>
464:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):363:3 |==> 0
465:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):363:3 |==> -3
466:LOR:&(int,int):^(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):363:b1 & 3 |==> b1 ^ 3
467:LOR:&(int,int):|(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):363:b1 & 3 |==> b1 | 3
468:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):363:k = (byte)(b1 & 3) |==> <NO-OP>
469:LOR:&(int,int):^(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):365:b1 & SIGN |==> b1 ^ SIGN
470:LOR:&(int,int):|(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):365:b1 & SIGN |==> b1 | SIGN
471:LVR:0:POS:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):365:0 |==> 1
472:LVR:0:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):365:0 |==> -1
473:ROR:==(int,int):<=(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):365:(b1 & SIGN) == 0 |==> (b1 & SIGN) <= 0
474:ROR:==(int,int):>=(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):365:(b1 & SIGN) == 0 |==> (b1 & SIGN) >= 0
475:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):365:(b1 & SIGN) == 0 |==> false
476:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):365:2 |==> 0
477:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):365:2 |==> -2
478:SOR:>>(int,int):<<(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):365:b1 >> 2 |==> b1 << 2
479:SOR:>>(int,int):>>>(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):365:b1 >> 2 |==> b1 >>> 2
480:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):365:2 |==> 0
481:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):365:2 |==> -2
482:SOR:>>(int,int):<<(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):365:(b1) >> 2 |==> (b1) << 2
483:SOR:>>(int,int):>>>(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):365:(b1) >> 2 |==> (b1) >>> 2
484:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):365:192 |==> 0
485:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):365:192 |==> -192
486:LOR:^(int,int):&(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):365:(b1) >> 2 ^ 192 |==> (b1) >> 2 & 192
487:LOR:^(int,int):|(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):365:(b1) >> 2 ^ 192 |==> (b1) >> 2 | 192
488:LOR:&(int,int):^(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):366:b2 & SIGN |==> b2 ^ SIGN
489:LOR:&(int,int):|(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):366:b2 & SIGN |==> b2 | SIGN
490:LVR:0:POS:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):366:0 |==> 1
491:LVR:0:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):366:0 |==> -1
492:ROR:==(int,int):<=(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):366:(b2 & SIGN) == 0 |==> (b2 & SIGN) <= 0
493:ROR:==(int,int):>=(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):366:(b2 & SIGN) == 0 |==> (b2 & SIGN) >= 0
494:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):366:(b2 & SIGN) == 0 |==> false
495:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):366:4 |==> 0
496:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):366:4 |==> -4
497:SOR:>>(int,int):<<(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):366:b2 >> 4 |==> b2 << 4
498:SOR:>>(int,int):>>>(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):366:b2 >> 4 |==> b2 >>> 4
499:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):366:4 |==> 0
500:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):366:4 |==> -4
501:SOR:>>(int,int):<<(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):366:(b2) >> 4 |==> (b2) << 4
502:SOR:>>(int,int):>>>(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):366:(b2) >> 4 |==> (b2) >>> 4
503:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):366:240 |==> 0
504:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):366:240 |==> -240
505:LOR:^(int,int):&(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):366:(b2) >> 4 ^ 240 |==> (b2) >> 4 & 240
506:LOR:^(int,int):|(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):366:(b2) >> 4 ^ 240 |==> (b2) >> 4 | 240
507:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):368:encodedData[encodedIndex] = lookUpBase64Alphabet[val1] |==> <NO-OP>
508:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):369:1 |==> 0
509:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):369:1 |==> -1
510:AOR:+(int,int):%(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):369:encodedIndex + 1 |==> encodedIndex % 1
511:AOR:+(int,int):*(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):369:encodedIndex + 1 |==> encodedIndex * 1
512:AOR:+(int,int):-(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):369:encodedIndex + 1 |==> encodedIndex - 1
513:AOR:+(int,int):/(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):369:encodedIndex + 1 |==> encodedIndex / 1
514:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):369:4 |==> 0
515:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):369:4 |==> -4
516:SOR:<<(int,int):>>(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):369:k << 4 |==> k >> 4
517:SOR:<<(int,int):>>>(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):369:k << 4 |==> k >>> 4
518:LOR:|(int,int):&(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):369:val2 | (k << 4) |==> val2 & (k << 4)
519:LOR:|(int,int):^(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):369:val2 | (k << 4) |==> val2 ^ (k << 4)
520:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):369:encodedData[encodedIndex + 1] = lookUpBase64Alphabet[val2 | (k << 4)] |==> <NO-OP>
521:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):370:2 |==> 0
522:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):370:2 |==> -2
523:AOR:+(int,int):%(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):370:encodedIndex + 2 |==> encodedIndex % 2
524:AOR:+(int,int):*(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):370:encodedIndex + 2 |==> encodedIndex * 2
525:AOR:+(int,int):-(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):370:encodedIndex + 2 |==> encodedIndex - 2
526:AOR:+(int,int):/(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):370:encodedIndex + 2 |==> encodedIndex / 2
527:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):370:2 |==> 0
528:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):370:2 |==> -2
529:SOR:<<(int,int):>>(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):370:l << 2 |==> l >> 2
530:SOR:<<(int,int):>>>(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):370:l << 2 |==> l >>> 2
531:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):370:encodedData[encodedIndex + 2] = lookUpBase64Alphabet[l << 2] |==> <NO-OP>
532:LVR:POS:0:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):371:3 |==> 0
533:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):371:3 |==> -3
534:AOR:+(int,int):%(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):371:encodedIndex + 3 |==> encodedIndex % 3
535:AOR:+(int,int):*(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):371:encodedIndex + 3 |==> encodedIndex * 3
536:AOR:+(int,int):-(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):371:encodedIndex + 3 |==> encodedIndex - 3
537:AOR:+(int,int):/(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):371:encodedIndex + 3 |==> encodedIndex / 3
538:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):371:encodedData[encodedIndex + 3] = PAD |==> <NO-OP>
539:COR:isChunked:TRUE:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):374:isChunked |==> false
540:COR:isChunked:FALSE:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):374:isChunked |==> true
541:ROR:<(int,int):!=(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):376:chunksSoFar < chunckCount |==> chunksSoFar != chunckCount
542:ROR:<(int,int):<=(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):376:chunksSoFar < chunckCount |==> chunksSoFar <= chunckCount
543:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):376:chunksSoFar < chunckCount |==> false
544:LVR:0:POS:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):377:0 |==> 1
545:LVR:0:NEG:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):377:0 |==> -1
546:AOR:-(int,int):%(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):377:encodedDataLength - CHUNK_SEPARATOR.length |==> encodedDataLength % CHUNK_SEPARATOR.length
547:AOR:-(int,int):*(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):377:encodedDataLength - CHUNK_SEPARATOR.length |==> encodedDataLength * CHUNK_SEPARATOR.length
548:AOR:-(int,int):+(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):377:encodedDataLength - CHUNK_SEPARATOR.length |==> encodedDataLength + CHUNK_SEPARATOR.length
549:AOR:-(int,int):/(int,int):org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):377:encodedDataLength - CHUNK_SEPARATOR.length |==> encodedDataLength / CHUNK_SEPARATOR.length
550:STD:<CALL>:<NO-OP>:org.apache.commons.codec.binary.Base64@encodeBase64(byte[],boolean):377:System.arraycopy(CHUNK_SEPARATOR, 0, encodedData, encodedDataLength - CHUNK_SEPARATOR.length, CHUNK_SEPARATOR.length) |==> <NO-OP>
551:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):394:base64Data = discardNonBase64(base64Data) |==> <NO-OP>
552:LVR:0:POS:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):397:0 |==> 1
553:LVR:0:NEG:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):397:0 |==> -1
554:ROR:==(int,int):<=(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):397:base64Data.length == 0 |==> base64Data.length <= 0
555:ROR:==(int,int):>=(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):397:base64Data.length == 0 |==> base64Data.length >= 0
556:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):397:base64Data.length == 0 |==> false
557:LVR:0:POS:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):398:0 |==> 1
558:LVR:0:NEG:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):398:0 |==> -1
559:AOR:/(int,int):%(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):401:base64Data.length / FOURBYTE |==> base64Data.length % FOURBYTE
560:AOR:/(int,int):*(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):401:base64Data.length / FOURBYTE |==> base64Data.length * FOURBYTE
561:AOR:/(int,int):+(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):401:base64Data.length / FOURBYTE |==> base64Data.length + FOURBYTE
562:AOR:/(int,int):-(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):401:base64Data.length / FOURBYTE |==> base64Data.length - FOURBYTE
563:LVR:0:POS:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):403:0 |==> 1
564:LVR:0:NEG:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):403:0 |==> -1
565:LVR:0:POS:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):403:0 |==> 1
566:LVR:0:NEG:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):403:0 |==> -1
567:LVR:0:POS:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):403:0 |==> 1
568:LVR:0:NEG:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):403:0 |==> -1
569:LVR:0:POS:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):403:0 |==> 1
570:LVR:0:NEG:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):403:0 |==> -1
571:LVR:0:POS:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):403:0 |==> 1
572:LVR:0:NEG:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):403:0 |==> -1
573:LVR:0:POS:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):403:0 |==> 1
574:LVR:0:NEG:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):403:0 |==> -1
575:LVR:0:POS:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):407:0 |==> 1
576:LVR:0:NEG:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):407:0 |==> -1
577:LVR:0:POS:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):408:0 |==> 1
578:LVR:0:NEG:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):408:0 |==> -1
579:LVR:POS:0:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):413:1 |==> 0
580:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):413:1 |==> -1
581:AOR:-(int,int):%(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):413:lastData - 1 |==> lastData % 1
582:AOR:-(int,int):*(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):413:lastData - 1 |==> lastData * 1
583:AOR:-(int,int):+(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):413:lastData - 1 |==> lastData + 1
584:AOR:-(int,int):/(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):413:lastData - 1 |==> lastData / 1
585:ROR:==(int,int):<=(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):413:base64Data[lastData - 1] == PAD |==> base64Data[lastData - 1] <= PAD
586:ROR:==(int,int):>=(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):413:base64Data[lastData - 1] == PAD |==> base64Data[lastData - 1] >= PAD
587:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):413:base64Data[lastData - 1] == PAD |==> false
588:LVR:0:POS:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):414:0 |==> 1
589:LVR:0:NEG:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):414:0 |==> -1
590:ROR:==(int,int):<=(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):414:--lastData == 0 |==> --lastData <= 0
591:ROR:==(int,int):>=(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):414:--lastData == 0 |==> --lastData >= 0
592:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):414:--lastData == 0 |==> false
593:LVR:0:POS:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):415:0 |==> 1
594:LVR:0:NEG:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):415:0 |==> -1
595:AOR:-(int,int):%(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):418:lastData - numberQuadruple |==> lastData % numberQuadruple
596:AOR:-(int,int):*(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):418:lastData - numberQuadruple |==> lastData * numberQuadruple
597:AOR:-(int,int):+(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):418:lastData - numberQuadruple |==> lastData + numberQuadruple
598:AOR:-(int,int):/(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):418:lastData - numberQuadruple |==> lastData / numberQuadruple
599:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):418:decodedData = new byte[lastData - numberQuadruple] |==> <NO-OP>
600:LVR:0:POS:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):421:0 |==> 1
601:LVR:0:NEG:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):421:0 |==> -1
602:ROR:<(int,int):!=(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):421:i < numberQuadruple |==> i != numberQuadruple
603:ROR:<(int,int):<=(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):421:i < numberQuadruple |==> i <= numberQuadruple
604:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):421:i < numberQuadruple |==> false
605:LVR:POS:0:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):422:4 |==> 0
606:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):422:4 |==> -4
607:AOR:*(int,int):%(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):422:i * 4 |==> i % 4
608:AOR:*(int,int):+(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):422:i * 4 |==> i + 4
609:AOR:*(int,int):-(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):422:i * 4 |==> i - 4
610:AOR:*(int,int):/(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):422:i * 4 |==> i / 4
611:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):422:dataIndex = i * 4 |==> <NO-OP>
612:LVR:POS:0:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):423:2 |==> 0
613:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):423:2 |==> -2
614:AOR:+(int,int):%(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):423:dataIndex + 2 |==> dataIndex % 2
615:AOR:+(int,int):*(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):423:dataIndex + 2 |==> dataIndex * 2
616:AOR:+(int,int):-(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):423:dataIndex + 2 |==> dataIndex - 2
617:AOR:+(int,int):/(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):423:dataIndex + 2 |==> dataIndex / 2
618:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):423:marker0 = base64Data[dataIndex + 2] |==> <NO-OP>
619:LVR:POS:0:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):424:3 |==> 0
620:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):424:3 |==> -3
621:AOR:+(int,int):%(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):424:dataIndex + 3 |==> dataIndex % 3
622:AOR:+(int,int):*(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):424:dataIndex + 3 |==> dataIndex * 3
623:AOR:+(int,int):-(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):424:dataIndex + 3 |==> dataIndex - 3
624:AOR:+(int,int):/(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):424:dataIndex + 3 |==> dataIndex / 3
625:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):424:marker1 = base64Data[dataIndex + 3] |==> <NO-OP>
626:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):426:b1 = base64Alphabet[base64Data[dataIndex]] |==> <NO-OP>
627:LVR:POS:0:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):427:1 |==> 0
628:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):427:1 |==> -1
629:AOR:+(int,int):%(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):427:dataIndex + 1 |==> dataIndex % 1
630:AOR:+(int,int):*(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):427:dataIndex + 1 |==> dataIndex * 1
631:AOR:+(int,int):-(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):427:dataIndex + 1 |==> dataIndex - 1
632:AOR:+(int,int):/(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):427:dataIndex + 1 |==> dataIndex / 1
633:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):427:b2 = base64Alphabet[base64Data[dataIndex + 1]] |==> <NO-OP>
634:ROR:!=(int,int):<(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):429:marker0 != PAD |==> marker0 < PAD
635:ROR:!=(int,int):>(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):429:marker0 != PAD |==> marker0 > PAD
636:ROR:!=(int,int):TRUE(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):429:marker0 != PAD |==> true
637:ROR:!=(int,int):<(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):429:marker1 != PAD |==> marker1 < PAD
638:ROR:!=(int,int):>(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):429:marker1 != PAD |==> marker1 > PAD
639:ROR:!=(int,int):TRUE(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):429:marker1 != PAD |==> true
640:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):429:marker0 != PAD && marker1 != PAD |==> marker0 != PAD == (marker1 != PAD)
641:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):429:marker0 != PAD && marker1 != PAD |==> false
642:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):429:marker0 != PAD && marker1 != PAD |==> marker0 != PAD
643:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):429:marker0 != PAD && marker1 != PAD |==> marker1 != PAD
644:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):431:b3 = base64Alphabet[marker0] |==> <NO-OP>
645:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):432:b4 = base64Alphabet[marker1] |==> <NO-OP>
646:LVR:POS:0:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):434:2 |==> 0
647:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):434:2 |==> -2
648:SOR:<<(int,int):>>(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):434:b1 << 2 |==> b1 >> 2
649:SOR:<<(int,int):>>>(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):434:b1 << 2 |==> b1 >>> 2
650:LVR:POS:0:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):434:4 |==> 0
651:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):434:4 |==> -4
652:SOR:>>(int,int):<<(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):434:b2 >> 4 |==> b2 << 4
653:SOR:>>(int,int):>>>(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):434:b2 >> 4 |==> b2 >>> 4
654:LOR:|(int,int):&(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):434:b1 << 2 | b2 >> 4 |==> b1 << 2 & b2 >> 4
655:LOR:|(int,int):^(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):434:b1 << 2 | b2 >> 4 |==> b1 << 2 ^ b2 >> 4
656:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):434:decodedData[encodedIndex] = (byte)(b1 << 2 | b2 >> 4) |==> <NO-OP>
657:LVR:POS:0:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):435:1 |==> 0
658:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):435:1 |==> -1
659:AOR:+(int,int):%(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):435:encodedIndex + 1 |==> encodedIndex % 1
660:AOR:+(int,int):*(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):435:encodedIndex + 1 |==> encodedIndex * 1
661:AOR:+(int,int):-(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):435:encodedIndex + 1 |==> encodedIndex - 1
662:AOR:+(int,int):/(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):435:encodedIndex + 1 |==> encodedIndex / 1
663:LVR:POS:0:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):435:15 |==> 0
664:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):435:15 |==> -15
665:LOR:&(int,int):^(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):435:b2 & 15 |==> b2 ^ 15
666:LOR:&(int,int):|(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):435:b2 & 15 |==> b2 | 15
667:LVR:POS:0:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):435:4 |==> 0
668:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):435:4 |==> -4
669:SOR:<<(int,int):>>(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):435:(b2 & 15) << 4 |==> (b2 & 15) >> 4
670:SOR:<<(int,int):>>>(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):435:(b2 & 15) << 4 |==> (b2 & 15) >>> 4
671:LVR:POS:0:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):435:2 |==> 0
672:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):435:2 |==> -2
673:SOR:>>(int,int):<<(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):435:b3 >> 2 |==> b3 << 2
674:SOR:>>(int,int):>>>(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):435:b3 >> 2 |==> b3 >>> 2
675:LVR:POS:0:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):435:15 |==> 0
676:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):435:15 |==> -15
677:LOR:&(int,int):^(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):435:(b3 >> 2) & 15 |==> (b3 >> 2) ^ 15
678:LOR:&(int,int):|(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):435:(b3 >> 2) & 15 |==> (b3 >> 2) | 15
679:LOR:|(int,int):&(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):435:((b2 & 15) << 4) | ((b3 >> 2) & 15) |==> ((b2 & 15) << 4) & ((b3 >> 2) & 15)
680:LOR:|(int,int):^(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):435:((b2 & 15) << 4) | ((b3 >> 2) & 15) |==> ((b2 & 15) << 4) ^ ((b3 >> 2) & 15)
681:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):435:decodedData[encodedIndex + 1] = (byte)(((b2 & 15) << 4) | ((b3 >> 2) & 15)) |==> <NO-OP>
682:LVR:POS:0:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):436:2 |==> 0
683:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):436:2 |==> -2
684:AOR:+(int,int):%(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):436:encodedIndex + 2 |==> encodedIndex % 2
685:AOR:+(int,int):*(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):436:encodedIndex + 2 |==> encodedIndex * 2
686:AOR:+(int,int):-(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):436:encodedIndex + 2 |==> encodedIndex - 2
687:AOR:+(int,int):/(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):436:encodedIndex + 2 |==> encodedIndex / 2
688:LVR:POS:0:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):436:6 |==> 0
689:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):436:6 |==> -6
690:SOR:<<(int,int):>>(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):436:b3 << 6 |==> b3 >> 6
691:SOR:<<(int,int):>>>(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):436:b3 << 6 |==> b3 >>> 6
692:LOR:|(int,int):&(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):436:b3 << 6 | b4 |==> b3 << 6 & b4
693:LOR:|(int,int):^(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):436:b3 << 6 | b4 |==> b3 << 6 ^ b4
694:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):436:decodedData[encodedIndex + 2] = (byte)(b3 << 6 | b4) |==> <NO-OP>
695:ROR:==(int,int):<=(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):437:marker0 == PAD |==> marker0 <= PAD
696:ROR:==(int,int):>=(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):437:marker0 == PAD |==> marker0 >= PAD
697:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):437:marker0 == PAD |==> false
698:LVR:POS:0:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):439:2 |==> 0
699:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):439:2 |==> -2
700:SOR:<<(int,int):>>(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):439:b1 << 2 |==> b1 >> 2
701:SOR:<<(int,int):>>>(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):439:b1 << 2 |==> b1 >>> 2
702:LVR:POS:0:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):439:4 |==> 0
703:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):439:4 |==> -4
704:SOR:>>(int,int):<<(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):439:b2 >> 4 |==> b2 << 4
705:SOR:>>(int,int):>>>(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):439:b2 >> 4 |==> b2 >>> 4
706:LOR:|(int,int):&(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):439:b1 << 2 | b2 >> 4 |==> b1 << 2 & b2 >> 4
707:LOR:|(int,int):^(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):439:b1 << 2 | b2 >> 4 |==> b1 << 2 ^ b2 >> 4
708:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):439:decodedData[encodedIndex] = (byte)(b1 << 2 | b2 >> 4) |==> <NO-OP>
709:ROR:==(int,int):<=(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):440:marker1 == PAD |==> marker1 <= PAD
710:ROR:==(int,int):>=(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):440:marker1 == PAD |==> marker1 >= PAD
711:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):440:marker1 == PAD |==> false
712:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):442:b3 = base64Alphabet[marker0] |==> <NO-OP>
713:LVR:POS:0:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):444:2 |==> 0
714:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):444:2 |==> -2
715:SOR:<<(int,int):>>(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):444:b1 << 2 |==> b1 >> 2
716:SOR:<<(int,int):>>>(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):444:b1 << 2 |==> b1 >>> 2
717:LVR:POS:0:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):444:4 |==> 0
718:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):444:4 |==> -4
719:SOR:>>(int,int):<<(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):444:b2 >> 4 |==> b2 << 4
720:SOR:>>(int,int):>>>(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):444:b2 >> 4 |==> b2 >>> 4
721:LOR:|(int,int):&(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):444:b1 << 2 | b2 >> 4 |==> b1 << 2 & b2 >> 4
722:LOR:|(int,int):^(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):444:b1 << 2 | b2 >> 4 |==> b1 << 2 ^ b2 >> 4
723:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):444:decodedData[encodedIndex] = (byte)(b1 << 2 | b2 >> 4) |==> <NO-OP>
724:LVR:POS:0:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):445:1 |==> 0
725:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):445:1 |==> -1
726:AOR:+(int,int):%(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):445:encodedIndex + 1 |==> encodedIndex % 1
727:AOR:+(int,int):*(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):445:encodedIndex + 1 |==> encodedIndex * 1
728:AOR:+(int,int):-(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):445:encodedIndex + 1 |==> encodedIndex - 1
729:AOR:+(int,int):/(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):445:encodedIndex + 1 |==> encodedIndex / 1
730:LVR:POS:0:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):445:15 |==> 0
731:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):445:15 |==> -15
732:LOR:&(int,int):^(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):445:b2 & 15 |==> b2 ^ 15
733:LOR:&(int,int):|(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):445:b2 & 15 |==> b2 | 15
734:LVR:POS:0:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):445:4 |==> 0
735:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):445:4 |==> -4
736:SOR:<<(int,int):>>(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):445:(b2 & 15) << 4 |==> (b2 & 15) >> 4
737:SOR:<<(int,int):>>>(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):445:(b2 & 15) << 4 |==> (b2 & 15) >>> 4
738:LVR:POS:0:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):445:2 |==> 0
739:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):445:2 |==> -2
740:SOR:>>(int,int):<<(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):445:b3 >> 2 |==> b3 << 2
741:SOR:>>(int,int):>>>(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):445:b3 >> 2 |==> b3 >>> 2
742:LVR:POS:0:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):445:15 |==> 0
743:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):445:15 |==> -15
744:LOR:&(int,int):^(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):445:(b3 >> 2) & 15 |==> (b3 >> 2) ^ 15
745:LOR:&(int,int):|(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):445:(b3 >> 2) & 15 |==> (b3 >> 2) | 15
746:LOR:|(int,int):&(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):445:((b2 & 15) << 4) | ((b3 >> 2) & 15) |==> ((b2 & 15) << 4) & ((b3 >> 2) & 15)
747:LOR:|(int,int):^(int,int):org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):445:((b2 & 15) << 4) | ((b3 >> 2) & 15) |==> ((b2 & 15) << 4) ^ ((b3 >> 2) & 15)
748:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):445:decodedData[encodedIndex + 1] = (byte)(((b2 & 15) << 4) | ((b3 >> 2) & 15)) |==> <NO-OP>
749:LVR:POS:0:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):447:3 |==> 0
750:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):447:3 |==> -3
751:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@decodeBase64(byte[]):447:encodedIndex += 3 |==> <NO-OP>
752:LVR:0:POS:org.apache.commons.codec.binary.Base64@discardWhitespace(byte[]):461:0 |==> 1
753:LVR:0:NEG:org.apache.commons.codec.binary.Base64@discardWhitespace(byte[]):461:0 |==> -1
754:LVR:0:POS:org.apache.commons.codec.binary.Base64@discardWhitespace(byte[]):463:0 |==> 1
755:LVR:0:NEG:org.apache.commons.codec.binary.Base64@discardWhitespace(byte[]):463:0 |==> -1
756:ROR:<(int,int):!=(int,int):org.apache.commons.codec.binary.Base64@discardWhitespace(byte[]):463:i < data.length |==> i != data.length
757:ROR:<(int,int):<=(int,int):org.apache.commons.codec.binary.Base64@discardWhitespace(byte[]):463:i < data.length |==> i <= data.length
758:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.binary.Base64@discardWhitespace(byte[]):463:i < data.length |==> false
759:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@discardWhitespace(byte[]):471:groomedData[bytesCopied++] = data[i] |==> <NO-OP>
760:LVR:0:POS:org.apache.commons.codec.binary.Base64@discardWhitespace(byte[]):477:0 |==> 1
761:LVR:0:NEG:org.apache.commons.codec.binary.Base64@discardWhitespace(byte[]):477:0 |==> -1
762:LVR:0:POS:org.apache.commons.codec.binary.Base64@discardWhitespace(byte[]):477:0 |==> 1
763:LVR:0:NEG:org.apache.commons.codec.binary.Base64@discardWhitespace(byte[]):477:0 |==> -1
764:STD:<CALL>:<NO-OP>:org.apache.commons.codec.binary.Base64@discardWhitespace(byte[]):477:System.arraycopy(groomedData, 0, packedData, 0, bytesCopied) |==> <NO-OP>
765:LVR:0:POS:org.apache.commons.codec.binary.Base64@discardNonBase64(byte[]):492:0 |==> 1
766:LVR:0:NEG:org.apache.commons.codec.binary.Base64@discardNonBase64(byte[]):492:0 |==> -1
767:LVR:0:POS:org.apache.commons.codec.binary.Base64@discardNonBase64(byte[]):494:0 |==> 1
768:LVR:0:NEG:org.apache.commons.codec.binary.Base64@discardNonBase64(byte[]):494:0 |==> -1
769:ROR:<(int,int):!=(int,int):org.apache.commons.codec.binary.Base64@discardNonBase64(byte[]):494:i < data.length |==> i != data.length
770:ROR:<(int,int):<=(int,int):org.apache.commons.codec.binary.Base64@discardNonBase64(byte[]):494:i < data.length |==> i <= data.length
771:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.binary.Base64@discardNonBase64(byte[]):494:i < data.length |==> false
772:COR:isBase64(data[i]):TRUE:org.apache.commons.codec.binary.Base64@discardNonBase64(byte[]):495:isBase64(data[i]) |==> false
773:COR:isBase64(data[i]):FALSE:org.apache.commons.codec.binary.Base64@discardNonBase64(byte[]):495:isBase64(data[i]) |==> true
774:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@discardNonBase64(byte[]):496:groomedData[bytesCopied++] = data[i] |==> <NO-OP>
775:LVR:0:POS:org.apache.commons.codec.binary.Base64@discardNonBase64(byte[]):502:0 |==> 1
776:LVR:0:NEG:org.apache.commons.codec.binary.Base64@discardNonBase64(byte[]):502:0 |==> -1
777:LVR:0:POS:org.apache.commons.codec.binary.Base64@discardNonBase64(byte[]):502:0 |==> 1
778:LVR:0:NEG:org.apache.commons.codec.binary.Base64@discardNonBase64(byte[]):502:0 |==> -1
779:STD:<CALL>:<NO-OP>:org.apache.commons.codec.binary.Base64@discardNonBase64(byte[]):502:System.arraycopy(groomedData, 0, packedData, 0, bytesCopied) |==> <NO-OP>
780:LVR:FALSE:TRUE:org.apache.commons.codec.binary.Base64@encode(byte[]):534:false |==> true
781:LVR:POS:0:org.apache.commons.codec.binary.Base64@decodeInteger(byte[]):546:1 |==> 0
782:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@decodeInteger(byte[]):546:1 |==> -1
783:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.binary.Base64@encodeInteger(java.math.BigInteger):558:bigInt == null |==> false
784:LVR:FALSE:TRUE:org.apache.commons.codec.binary.Base64@encodeInteger(java.math.BigInteger):562:false |==> true
785:LVR:POS:0:org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):575:7 |==> 0
786:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):575:7 |==> -7
787:AOR:+(int,int):%(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):575:bitlen + 7 |==> bitlen % 7
788:AOR:+(int,int):*(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):575:bitlen + 7 |==> bitlen * 7
789:AOR:+(int,int):-(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):575:bitlen + 7 |==> bitlen - 7
790:AOR:+(int,int):/(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):575:bitlen + 7 |==> bitlen / 7
791:LVR:POS:0:org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):575:3 |==> 0
792:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):575:3 |==> -3
793:SOR:>>(int,int):<<(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):575:(bitlen + 7) >> 3 |==> (bitlen + 7) << 3
794:SOR:>>(int,int):>>>(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):575:(bitlen + 7) >> 3 |==> (bitlen + 7) >>> 3
795:LVR:POS:0:org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):575:3 |==> 0
796:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):575:3 |==> -3
797:SOR:<<(int,int):>>(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):575:((bitlen + 7) >> 3) << 3 |==> ((bitlen + 7) >> 3) >> 3
798:SOR:<<(int,int):>>>(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):575:((bitlen + 7) >> 3) << 3 |==> ((bitlen + 7) >> 3) >>> 3
799:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):575:bitlen = ((bitlen + 7) >> 3) << 3 |==> <NO-OP>
800:LVR:POS:0:org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):578:8 |==> 0
801:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):578:8 |==> -8
802:AOR:%(int,int):*(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):578:bigInt.bitLength() % 8 |==> bigInt.bitLength() * 8
803:AOR:%(int,int):+(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):578:bigInt.bitLength() % 8 |==> bigInt.bitLength() + 8
804:AOR:%(int,int):-(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):578:bigInt.bitLength() % 8 |==> bigInt.bitLength() - 8
805:AOR:%(int,int):/(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):578:bigInt.bitLength() % 8 |==> bigInt.bitLength() / 8
806:LVR:0:POS:org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):578:0 |==> 1
807:LVR:0:NEG:org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):578:0 |==> -1
808:ROR:!=(int,int):<(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):578:(bigInt.bitLength() % 8) != 0 |==> (bigInt.bitLength() % 8) < 0
809:ROR:!=(int,int):>(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):578:(bigInt.bitLength() % 8) != 0 |==> (bigInt.bitLength() % 8) > 0
810:ROR:!=(int,int):TRUE(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):578:(bigInt.bitLength() % 8) != 0 |==> true
811:LVR:POS:0:org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):579:8 |==> 0
812:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):579:8 |==> -8
813:AOR:/(int,int):%(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):579:bigInt.bitLength() / 8 |==> bigInt.bitLength() % 8
814:AOR:/(int,int):*(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):579:bigInt.bitLength() / 8 |==> bigInt.bitLength() * 8
815:AOR:/(int,int):+(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):579:bigInt.bitLength() / 8 |==> bigInt.bitLength() + 8
816:AOR:/(int,int):-(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):579:bigInt.bitLength() / 8 |==> bigInt.bitLength() - 8
817:LVR:POS:0:org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):579:1 |==> 0
818:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):579:1 |==> -1
819:AOR:+(int,int):%(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):579:(bigInt.bitLength() / 8) + 1 |==> (bigInt.bitLength() / 8) % 1
820:AOR:+(int,int):*(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):579:(bigInt.bitLength() / 8) + 1 |==> (bigInt.bitLength() / 8) * 1
821:AOR:+(int,int):-(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):579:(bigInt.bitLength() / 8) + 1 |==> (bigInt.bitLength() / 8) - 1
822:AOR:+(int,int):/(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):579:(bigInt.bitLength() / 8) + 1 |==> (bigInt.bitLength() / 8) / 1
823:LVR:POS:0:org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):579:8 |==> 0
824:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):579:8 |==> -8
825:AOR:/(int,int):%(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):579:bitlen / 8 |==> bitlen % 8
826:AOR:/(int,int):*(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):579:bitlen / 8 |==> bitlen * 8
827:AOR:/(int,int):+(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):579:bitlen / 8 |==> bitlen + 8
828:AOR:/(int,int):-(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):579:bitlen / 8 |==> bitlen - 8
829:ROR:==(int,int):<=(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):579:((bigInt.bitLength() / 8) + 1) == (bitlen / 8) |==> ((bigInt.bitLength() / 8) + 1) <= (bitlen / 8)
830:ROR:==(int,int):>=(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):579:((bigInt.bitLength() / 8) + 1) == (bitlen / 8) |==> ((bigInt.bitLength() / 8) + 1) >= (bitlen / 8)
831:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):579:((bigInt.bitLength() / 8) + 1) == (bitlen / 8) |==> false
832:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):578:((bigInt.bitLength() % 8) != 0) && (((bigInt.bitLength() / 8) + 1) == (bitlen / 8)) |==> ((bigInt.bitLength() % 8) != 0) == (((bigInt.bitLength() / 8) + 1) == (bitlen / 8))
833:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):578:((bigInt.bitLength() % 8) != 0) && (((bigInt.bitLength() / 8) + 1) == (bitlen / 8)) |==> false
834:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):578:((bigInt.bitLength() % 8) != 0) && (((bigInt.bitLength() / 8) + 1) == (bitlen / 8)) |==> ((bigInt.bitLength() % 8) != 0)
835:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):579:((bigInt.bitLength() % 8) != 0) && (((bigInt.bitLength() / 8) + 1) == (bitlen / 8)) |==> (((bigInt.bitLength() / 8) + 1) == (bitlen / 8))
836:LVR:0:POS:org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):584:0 |==> 1
837:LVR:0:NEG:org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):584:0 |==> -1
838:LVR:POS:0:org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):588:8 |==> 0
839:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):588:8 |==> -8
840:AOR:%(int,int):*(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):588:bigInt.bitLength() % 8 |==> bigInt.bitLength() * 8
841:AOR:%(int,int):+(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):588:bigInt.bitLength() % 8 |==> bigInt.bitLength() + 8
842:AOR:%(int,int):-(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):588:bigInt.bitLength() % 8 |==> bigInt.bitLength() - 8
843:AOR:%(int,int):/(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):588:bigInt.bitLength() % 8 |==> bigInt.bitLength() / 8
844:LVR:0:POS:org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):588:0 |==> 1
845:LVR:0:NEG:org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):588:0 |==> -1
846:ROR:==(int,int):<=(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):588:(bigInt.bitLength() % 8) == 0 |==> (bigInt.bitLength() % 8) <= 0
847:ROR:==(int,int):>=(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):588:(bigInt.bitLength() % 8) == 0 |==> (bigInt.bitLength() % 8) >= 0
848:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):588:(bigInt.bitLength() % 8) == 0 |==> false
849:LVR:POS:0:org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):589:1 |==> 0
850:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):589:1 |==> -1
851:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):589:startSrc = 1 |==> <NO-OP>
852:STD:<DEC>:<NO-OP>:org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):590:len-- |==> <NO-OP>
853:LVR:POS:0:org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):593:8 |==> 0
854:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):593:8 |==> -8
855:AOR:/(int,int):%(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):593:bitlen / 8 |==> bitlen % 8
856:AOR:/(int,int):*(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):593:bitlen / 8 |==> bitlen * 8
857:AOR:/(int,int):+(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):593:bitlen / 8 |==> bitlen + 8
858:AOR:/(int,int):-(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):593:bitlen / 8 |==> bitlen - 8
859:AOR:-(int,int):%(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):593:bitlen / 8 - len |==> bitlen / 8 % len
860:AOR:-(int,int):*(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):593:bitlen / 8 - len |==> bitlen / 8 * len
861:AOR:-(int,int):+(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):593:bitlen / 8 - len |==> bitlen / 8 + len
862:AOR:-(int,int):/(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):593:bitlen / 8 - len |==> bitlen / 8 / len
863:LVR:POS:0:org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):594:8 |==> 0
864:LVR:POS:NEG:org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):594:8 |==> -8
865:AOR:/(int,int):%(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):594:bitlen / 8 |==> bitlen % 8
866:AOR:/(int,int):*(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):594:bitlen / 8 |==> bitlen * 8
867:AOR:/(int,int):+(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):594:bitlen / 8 |==> bitlen + 8
868:AOR:/(int,int):-(int,int):org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):594:bitlen / 8 |==> bitlen - 8
869:STD:<CALL>:<NO-OP>:org.apache.commons.codec.binary.Base64@toIntegerBytes(java.math.BigInteger):596:System.arraycopy(bigBytes, startSrc, resizedBytes, startDst, len) |==> <NO-OP>
870:LVR:0:POS:org.apache.commons.codec.binary.BinaryCodec:41:0 |==> 1
871:LVR:0:NEG:org.apache.commons.codec.binary.BinaryCodec:41:0 |==> -1
872:LVR:0:POS:org.apache.commons.codec.binary.BinaryCodec:44:0 |==> 1
873:LVR:0:NEG:org.apache.commons.codec.binary.BinaryCodec:44:0 |==> -1
874:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.binary.BinaryCodec@decode(java.lang.Object):112:ascii == null |==> false
875:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.binary.BinaryCodec@toByteArray(java.lang.String):148:ascii == null |==> false
876:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):167:ascii == null |==> false
877:LVR:0:POS:org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):167:0 |==> 1
878:LVR:0:NEG:org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):167:0 |==> -1
879:ROR:==(int,int):<=(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):167:ascii.length == 0 |==> ascii.length <= 0
880:ROR:==(int,int):>=(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):167:ascii.length == 0 |==> ascii.length >= 0
881:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):167:ascii.length == 0 |==> false
882:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):167:ascii == null || ascii.length == 0 |==> ascii == null != (ascii.length == 0)
883:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):167:ascii == null || ascii.length == 0 |==> ascii == null
884:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):167:ascii == null || ascii.length == 0 |==> ascii.length == 0
885:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):167:ascii == null || ascii.length == 0 |==> true
886:LVR:POS:0:org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):171:3 |==> 0
887:LVR:POS:NEG:org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):171:3 |==> -3
888:SOR:>>(int,int):<<(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):171:ascii.length >> 3 |==> ascii.length << 3
889:SOR:>>(int,int):>>>(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):171:ascii.length >> 3 |==> ascii.length >>> 3
890:LVR:0:POS:org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):176:0 |==> 1
891:LVR:0:NEG:org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):176:0 |==> -1
892:LVR:POS:0:org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):176:1 |==> 0
893:LVR:POS:NEG:org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):176:1 |==> -1
894:AOR:-(int,int):%(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):176:ascii.length - 1 |==> ascii.length % 1
895:AOR:-(int,int):*(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):176:ascii.length - 1 |==> ascii.length * 1
896:AOR:-(int,int):+(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):176:ascii.length - 1 |==> ascii.length + 1
897:AOR:-(int,int):/(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):176:ascii.length - 1 |==> ascii.length / 1
898:ROR:<(int,int):!=(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):176:ii < l_raw.length |==> ii != l_raw.length
899:ROR:<(int,int):<=(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):176:ii < l_raw.length |==> ii <= l_raw.length
900:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):176:ii < l_raw.length |==> false
901:LVR:POS:0:org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):176:8 |==> 0
902:LVR:POS:NEG:org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):176:8 |==> -8
903:LVR:0:POS:org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):177:0 |==> 1
904:LVR:0:NEG:org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):177:0 |==> -1
905:ROR:<(int,int):!=(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):177:bits < BITS.length |==> bits != BITS.length
906:ROR:<(int,int):<=(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):177:bits < BITS.length |==> bits <= BITS.length
907:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):177:bits < BITS.length |==> false
908:AOR:-(int,int):%(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):178:jj - bits |==> jj % bits
909:AOR:-(int,int):*(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):178:jj - bits |==> jj * bits
910:AOR:-(int,int):+(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):178:jj - bits |==> jj + bits
911:AOR:-(int,int):/(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):178:jj - bits |==> jj / bits
912:ROR:==(int,int):<=(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):178:ascii[jj - bits] == '1' |==> ascii[jj - bits] <= '1'
913:ROR:==(int,int):>=(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):178:ascii[jj - bits] == '1' |==> ascii[jj - bits] >= '1'
914:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):178:ascii[jj - bits] == '1' |==> false
915:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.BinaryCodec@fromAscii(char[]):179:l_raw[ii] |= BITS[bits] |==> <NO-OP>
916:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):194:ascii == null |==> false
917:LVR:0:POS:org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):194:0 |==> 1
918:LVR:0:NEG:org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):194:0 |==> -1
919:ROR:==(int,int):<=(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):194:ascii.length == 0 |==> ascii.length <= 0
920:ROR:==(int,int):>=(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):194:ascii.length == 0 |==> ascii.length >= 0
921:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):194:ascii.length == 0 |==> false
922:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):194:ascii == null || ascii.length == 0 |==> ascii == null != (ascii.length == 0)
923:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):194:ascii == null || ascii.length == 0 |==> ascii == null
924:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):194:ascii == null || ascii.length == 0 |==> ascii.length == 0
925:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):194:ascii == null || ascii.length == 0 |==> true
926:LVR:POS:0:org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):198:3 |==> 0
927:LVR:POS:NEG:org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):198:3 |==> -3
928:SOR:>>(int,int):<<(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):198:ascii.length >> 3 |==> ascii.length << 3
929:SOR:>>(int,int):>>>(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):198:ascii.length >> 3 |==> ascii.length >>> 3
930:LVR:0:POS:org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):203:0 |==> 1
931:LVR:0:NEG:org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):203:0 |==> -1
932:LVR:POS:0:org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):203:1 |==> 0
933:LVR:POS:NEG:org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):203:1 |==> -1
934:AOR:-(int,int):%(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):203:ascii.length - 1 |==> ascii.length % 1
935:AOR:-(int,int):*(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):203:ascii.length - 1 |==> ascii.length * 1
936:AOR:-(int,int):+(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):203:ascii.length - 1 |==> ascii.length + 1
937:AOR:-(int,int):/(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):203:ascii.length - 1 |==> ascii.length / 1
938:ROR:<(int,int):!=(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):203:ii < l_raw.length |==> ii != l_raw.length
939:ROR:<(int,int):<=(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):203:ii < l_raw.length |==> ii <= l_raw.length
940:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):203:ii < l_raw.length |==> false
941:LVR:POS:0:org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):203:8 |==> 0
942:LVR:POS:NEG:org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):203:8 |==> -8
943:LVR:0:POS:org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):204:0 |==> 1
944:LVR:0:NEG:org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):204:0 |==> -1
945:ROR:<(int,int):!=(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):204:bits < BITS.length |==> bits != BITS.length
946:ROR:<(int,int):<=(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):204:bits < BITS.length |==> bits <= BITS.length
947:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):204:bits < BITS.length |==> false
948:AOR:-(int,int):%(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):205:jj - bits |==> jj % bits
949:AOR:-(int,int):*(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):205:jj - bits |==> jj * bits
950:AOR:-(int,int):+(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):205:jj - bits |==> jj + bits
951:AOR:-(int,int):/(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):205:jj - bits |==> jj / bits
952:ROR:==(int,int):<=(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):205:ascii[jj - bits] == '1' |==> ascii[jj - bits] <= '1'
953:ROR:==(int,int):>=(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):205:ascii[jj - bits] == '1' |==> ascii[jj - bits] >= '1'
954:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):205:ascii[jj - bits] == '1' |==> false
955:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.BinaryCodec@fromAscii(byte[]):206:l_raw[ii] |= BITS[bits] |==> <NO-OP>
956:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):223:raw == null |==> false
957:LVR:0:POS:org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):223:0 |==> 1
958:LVR:0:NEG:org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):223:0 |==> -1
959:ROR:==(int,int):<=(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):223:raw.length == 0 |==> raw.length <= 0
960:ROR:==(int,int):>=(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):223:raw.length == 0 |==> raw.length >= 0
961:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):223:raw.length == 0 |==> false
962:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):223:raw == null || raw.length == 0 |==> raw == null != (raw.length == 0)
963:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):223:raw == null || raw.length == 0 |==> raw == null
964:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):223:raw == null || raw.length == 0 |==> raw.length == 0
965:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):223:raw == null || raw.length == 0 |==> true
966:LVR:POS:0:org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):227:3 |==> 0
967:LVR:POS:NEG:org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):227:3 |==> -3
968:SOR:<<(int,int):>>(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):227:raw.length << 3 |==> raw.length >> 3
969:SOR:<<(int,int):>>>(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):227:raw.length << 3 |==> raw.length >>> 3
970:LVR:0:POS:org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):232:0 |==> 1
971:LVR:0:NEG:org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):232:0 |==> -1
972:LVR:POS:0:org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):232:1 |==> 0
973:LVR:POS:NEG:org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):232:1 |==> -1
974:AOR:-(int,int):%(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):232:l_ascii.length - 1 |==> l_ascii.length % 1
975:AOR:-(int,int):*(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):232:l_ascii.length - 1 |==> l_ascii.length * 1
976:AOR:-(int,int):+(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):232:l_ascii.length - 1 |==> l_ascii.length + 1
977:AOR:-(int,int):/(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):232:l_ascii.length - 1 |==> l_ascii.length / 1
978:ROR:<(int,int):!=(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):232:ii < raw.length |==> ii != raw.length
979:ROR:<(int,int):<=(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):232:ii < raw.length |==> ii <= raw.length
980:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):232:ii < raw.length |==> false
981:LVR:POS:0:org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):232:8 |==> 0
982:LVR:POS:NEG:org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):232:8 |==> -8
983:LVR:0:POS:org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):233:0 |==> 1
984:LVR:0:NEG:org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):233:0 |==> -1
985:ROR:<(int,int):!=(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):233:bits < BITS.length |==> bits != BITS.length
986:ROR:<(int,int):<=(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):233:bits < BITS.length |==> bits <= BITS.length
987:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):233:bits < BITS.length |==> false
988:LOR:&(int,int):^(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):234:raw[ii] & BITS[bits] |==> raw[ii] ^ BITS[bits]
989:LOR:&(int,int):|(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):234:raw[ii] & BITS[bits] |==> raw[ii] | BITS[bits]
990:LVR:0:POS:org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):234:0 |==> 1
991:LVR:0:NEG:org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):234:0 |==> -1
992:ROR:==(int,int):<=(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):234:(raw[ii] & BITS[bits]) == 0 |==> (raw[ii] & BITS[bits]) <= 0
993:ROR:==(int,int):>=(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):234:(raw[ii] & BITS[bits]) == 0 |==> (raw[ii] & BITS[bits]) >= 0
994:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):234:(raw[ii] & BITS[bits]) == 0 |==> false
995:AOR:-(int,int):%(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):235:jj - bits |==> jj % bits
996:AOR:-(int,int):*(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):235:jj - bits |==> jj * bits
997:AOR:-(int,int):+(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):235:jj - bits |==> jj + bits
998:AOR:-(int,int):/(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):235:jj - bits |==> jj / bits
999:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):235:l_ascii[jj - bits] = '0' |==> <NO-OP>
1000:AOR:-(int,int):%(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):237:jj - bits |==> jj % bits
1001:AOR:-(int,int):*(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):237:jj - bits |==> jj * bits
1002:AOR:-(int,int):+(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):237:jj - bits |==> jj + bits
1003:AOR:-(int,int):/(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):237:jj - bits |==> jj / bits
1004:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.BinaryCodec@toAsciiBytes(byte[]):237:l_ascii[jj - bits] = '1' |==> <NO-OP>
1005:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):253:raw == null |==> false
1006:LVR:0:POS:org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):253:0 |==> 1
1007:LVR:0:NEG:org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):253:0 |==> -1
1008:ROR:==(int,int):<=(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):253:raw.length == 0 |==> raw.length <= 0
1009:ROR:==(int,int):>=(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):253:raw.length == 0 |==> raw.length >= 0
1010:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):253:raw.length == 0 |==> false
1011:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):253:raw == null || raw.length == 0 |==> raw == null != (raw.length == 0)
1012:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):253:raw == null || raw.length == 0 |==> raw == null
1013:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):253:raw == null || raw.length == 0 |==> raw.length == 0
1014:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):253:raw == null || raw.length == 0 |==> true
1015:LVR:POS:0:org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):257:3 |==> 0
1016:LVR:POS:NEG:org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):257:3 |==> -3
1017:SOR:<<(int,int):>>(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):257:raw.length << 3 |==> raw.length >> 3
1018:SOR:<<(int,int):>>>(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):257:raw.length << 3 |==> raw.length >>> 3
1019:LVR:0:POS:org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):262:0 |==> 1
1020:LVR:0:NEG:org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):262:0 |==> -1
1021:LVR:POS:0:org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):262:1 |==> 0
1022:LVR:POS:NEG:org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):262:1 |==> -1
1023:AOR:-(int,int):%(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):262:l_ascii.length - 1 |==> l_ascii.length % 1
1024:AOR:-(int,int):*(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):262:l_ascii.length - 1 |==> l_ascii.length * 1
1025:AOR:-(int,int):+(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):262:l_ascii.length - 1 |==> l_ascii.length + 1
1026:AOR:-(int,int):/(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):262:l_ascii.length - 1 |==> l_ascii.length / 1
1027:ROR:<(int,int):!=(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):262:ii < raw.length |==> ii != raw.length
1028:ROR:<(int,int):<=(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):262:ii < raw.length |==> ii <= raw.length
1029:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):262:ii < raw.length |==> false
1030:LVR:POS:0:org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):262:8 |==> 0
1031:LVR:POS:NEG:org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):262:8 |==> -8
1032:LVR:0:POS:org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):263:0 |==> 1
1033:LVR:0:NEG:org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):263:0 |==> -1
1034:ROR:<(int,int):!=(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):263:bits < BITS.length |==> bits != BITS.length
1035:ROR:<(int,int):<=(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):263:bits < BITS.length |==> bits <= BITS.length
1036:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):263:bits < BITS.length |==> false
1037:LOR:&(int,int):^(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):264:raw[ii] & BITS[bits] |==> raw[ii] ^ BITS[bits]
1038:LOR:&(int,int):|(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):264:raw[ii] & BITS[bits] |==> raw[ii] | BITS[bits]
1039:LVR:0:POS:org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):264:0 |==> 1
1040:LVR:0:NEG:org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):264:0 |==> -1
1041:ROR:==(int,int):<=(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):264:(raw[ii] & BITS[bits]) == 0 |==> (raw[ii] & BITS[bits]) <= 0
1042:ROR:==(int,int):>=(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):264:(raw[ii] & BITS[bits]) == 0 |==> (raw[ii] & BITS[bits]) >= 0
1043:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):264:(raw[ii] & BITS[bits]) == 0 |==> false
1044:AOR:-(int,int):%(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):265:jj - bits |==> jj % bits
1045:AOR:-(int,int):*(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):265:jj - bits |==> jj * bits
1046:AOR:-(int,int):+(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):265:jj - bits |==> jj + bits
1047:AOR:-(int,int):/(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):265:jj - bits |==> jj / bits
1048:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):265:l_ascii[jj - bits] = '0' |==> <NO-OP>
1049:AOR:-(int,int):%(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):267:jj - bits |==> jj % bits
1050:AOR:-(int,int):*(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):267:jj - bits |==> jj * bits
1051:AOR:-(int,int):+(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):267:jj - bits |==> jj + bits
1052:AOR:-(int,int):/(int,int):org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):267:jj - bits |==> jj / bits
1053:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.BinaryCodec@toAsciiChars(byte[]):267:l_ascii[jj - bits] = '1' |==> <NO-OP>
1054:LVR:POS:0:org.apache.commons.codec.binary.Hex@decodeHex(char[]):59:1 |==> 0
1055:LVR:POS:NEG:org.apache.commons.codec.binary.Hex@decodeHex(char[]):59:1 |==> -1
1056:LOR:&(int,int):^(int,int):org.apache.commons.codec.binary.Hex@decodeHex(char[]):59:len & 1 |==> len ^ 1
1057:LOR:&(int,int):|(int,int):org.apache.commons.codec.binary.Hex@decodeHex(char[]):59:len & 1 |==> len | 1
1058:LVR:0:POS:org.apache.commons.codec.binary.Hex@decodeHex(char[]):59:0 |==> 1
1059:LVR:0:NEG:org.apache.commons.codec.binary.Hex@decodeHex(char[]):59:0 |==> -1
1060:ROR:!=(int,int):<(int,int):org.apache.commons.codec.binary.Hex@decodeHex(char[]):59:(len & 1) != 0 |==> (len & 1) < 0
1061:ROR:!=(int,int):>(int,int):org.apache.commons.codec.binary.Hex@decodeHex(char[]):59:(len & 1) != 0 |==> (len & 1) > 0
1062:ROR:!=(int,int):TRUE(int,int):org.apache.commons.codec.binary.Hex@decodeHex(char[]):59:(len & 1) != 0 |==> true
1063:LVR:POS:0:org.apache.commons.codec.binary.Hex@decodeHex(char[]):63:1 |==> 0
1064:LVR:POS:NEG:org.apache.commons.codec.binary.Hex@decodeHex(char[]):63:1 |==> -1
1065:SOR:>>(int,int):<<(int,int):org.apache.commons.codec.binary.Hex@decodeHex(char[]):63:len >> 1 |==> len << 1
1066:SOR:>>(int,int):>>>(int,int):org.apache.commons.codec.binary.Hex@decodeHex(char[]):63:len >> 1 |==> len >>> 1
1067:LVR:0:POS:org.apache.commons.codec.binary.Hex@decodeHex(char[]):66:0 |==> 1
1068:LVR:0:NEG:org.apache.commons.codec.binary.Hex@decodeHex(char[]):66:0 |==> -1
1069:LVR:0:POS:org.apache.commons.codec.binary.Hex@decodeHex(char[]):66:0 |==> 1
1070:LVR:0:NEG:org.apache.commons.codec.binary.Hex@decodeHex(char[]):66:0 |==> -1
1071:ROR:<(int,int):!=(int,int):org.apache.commons.codec.binary.Hex@decodeHex(char[]):66:j < len |==> j != len
1072:ROR:<(int,int):<=(int,int):org.apache.commons.codec.binary.Hex@decodeHex(char[]):66:j < len |==> j <= len
1073:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.binary.Hex@decodeHex(char[]):66:j < len |==> false
1074:LVR:POS:0:org.apache.commons.codec.binary.Hex@decodeHex(char[]):67:4 |==> 0
1075:LVR:POS:NEG:org.apache.commons.codec.binary.Hex@decodeHex(char[]):67:4 |==> -4
1076:SOR:<<(int,int):>>(int,int):org.apache.commons.codec.binary.Hex@decodeHex(char[]):67:toDigit(data[j], j) << 4 |==> toDigit(data[j], j) >> 4
1077:SOR:<<(int,int):>>>(int,int):org.apache.commons.codec.binary.Hex@decodeHex(char[]):67:toDigit(data[j], j) << 4 |==> toDigit(data[j], j) >>> 4
1078:STD:<INC>:<NO-OP>:org.apache.commons.codec.binary.Hex@decodeHex(char[]):68:j++ |==> <NO-OP>
1079:LOR:|(int,int):&(int,int):org.apache.commons.codec.binary.Hex@decodeHex(char[]):69:f | toDigit(data[j], j) |==> f & toDigit(data[j], j)
1080:LOR:|(int,int):^(int,int):org.apache.commons.codec.binary.Hex@decodeHex(char[]):69:f | toDigit(data[j], j) |==> f ^ toDigit(data[j], j)
1081:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Hex@decodeHex(char[]):69:f = f | toDigit(data[j], j) |==> <NO-OP>
1082:STD:<INC>:<NO-OP>:org.apache.commons.codec.binary.Hex@decodeHex(char[]):70:j++ |==> <NO-OP>
1083:LVR:POS:0:org.apache.commons.codec.binary.Hex@decodeHex(char[]):71:255 |==> 0
1084:LVR:POS:NEG:org.apache.commons.codec.binary.Hex@decodeHex(char[]):71:255 |==> -255
1085:LOR:&(int,int):^(int,int):org.apache.commons.codec.binary.Hex@decodeHex(char[]):71:f & 255 |==> f ^ 255
1086:LOR:&(int,int):|(int,int):org.apache.commons.codec.binary.Hex@decodeHex(char[]):71:f & 255 |==> f | 255
1087:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Hex@decodeHex(char[]):71:out[i] = (byte)(f & 255) |==> <NO-OP>
1088:LVR:POS:0:org.apache.commons.codec.binary.Hex@toDigit(char,int):86:16 |==> 0
1089:LVR:POS:NEG:org.apache.commons.codec.binary.Hex@toDigit(char,int):86:16 |==> -16
1090:LVR:NEG:0:org.apache.commons.codec.binary.Hex@toDigit(char,int):87:-1 |==> 0
1091:LVR:NEG:POS:org.apache.commons.codec.binary.Hex@toDigit(char,int):87:-1 |==> 1
1092:ROR:==(int,int):<=(int,int):org.apache.commons.codec.binary.Hex@toDigit(char,int):87:digit == -1 |==> digit <= -1
1093:ROR:==(int,int):>=(int,int):org.apache.commons.codec.binary.Hex@toDigit(char,int):87:digit == -1 |==> digit >= -1
1094:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.binary.Hex@toDigit(char,int):87:digit == -1 |==> false
1095:LVR:POS:0:org.apache.commons.codec.binary.Hex@encodeHex(byte[]):106:1 |==> 0
1096:LVR:POS:NEG:org.apache.commons.codec.binary.Hex@encodeHex(byte[]):106:1 |==> -1
1097:SOR:<<(int,int):>>(int,int):org.apache.commons.codec.binary.Hex@encodeHex(byte[]):106:l << 1 |==> l >> 1
1098:SOR:<<(int,int):>>>(int,int):org.apache.commons.codec.binary.Hex@encodeHex(byte[]):106:l << 1 |==> l >>> 1
1099:LVR:0:POS:org.apache.commons.codec.binary.Hex@encodeHex(byte[]):109:0 |==> 1
1100:LVR:0:NEG:org.apache.commons.codec.binary.Hex@encodeHex(byte[]):109:0 |==> -1
1101:LVR:0:POS:org.apache.commons.codec.binary.Hex@encodeHex(byte[]):109:0 |==> 1
1102:LVR:0:NEG:org.apache.commons.codec.binary.Hex@encodeHex(byte[]):109:0 |==> -1
1103:ROR:<(int,int):!=(int,int):org.apache.commons.codec.binary.Hex@encodeHex(byte[]):109:i < l |==> i != l
1104:ROR:<(int,int):<=(int,int):org.apache.commons.codec.binary.Hex@encodeHex(byte[]):109:i < l |==> i <= l
1105:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.binary.Hex@encodeHex(byte[]):109:i < l |==> false
1106:LVR:POS:0:org.apache.commons.codec.binary.Hex@encodeHex(byte[]):110:240 |==> 0
1107:LVR:POS:NEG:org.apache.commons.codec.binary.Hex@encodeHex(byte[]):110:240 |==> -240
1108:LOR:&(int,int):^(int,int):org.apache.commons.codec.binary.Hex@encodeHex(byte[]):110:240 & data[i] |==> 240 ^ data[i]
1109:LOR:&(int,int):|(int,int):org.apache.commons.codec.binary.Hex@encodeHex(byte[]):110:240 & data[i] |==> 240 | data[i]
1110:LVR:POS:0:org.apache.commons.codec.binary.Hex@encodeHex(byte[]):110:4 |==> 0
1111:LVR:POS:NEG:org.apache.commons.codec.binary.Hex@encodeHex(byte[]):110:4 |==> -4
1112:SOR:>>>(int,int):<<(int,int):org.apache.commons.codec.binary.Hex@encodeHex(byte[]):110:(240 & data[i]) >>> 4 |==> (240 & data[i]) << 4
1113:SOR:>>>(int,int):>>(int,int):org.apache.commons.codec.binary.Hex@encodeHex(byte[]):110:(240 & data[i]) >>> 4 |==> (240 & data[i]) >> 4
1114:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Hex@encodeHex(byte[]):110:out[j++] = DIGITS[(240 & data[i]) >>> 4] |==> <NO-OP>
1115:LVR:POS:0:org.apache.commons.codec.binary.Hex@encodeHex(byte[]):111:15 |==> 0
1116:LVR:POS:NEG:org.apache.commons.codec.binary.Hex@encodeHex(byte[]):111:15 |==> -15
1117:LOR:&(int,int):^(int,int):org.apache.commons.codec.binary.Hex@encodeHex(byte[]):111:15 & data[i] |==> 15 ^ data[i]
1118:LOR:&(int,int):|(int,int):org.apache.commons.codec.binary.Hex@encodeHex(byte[]):111:15 & data[i] |==> 15 | data[i]
1119:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.binary.Hex@encodeHex(byte[]):111:out[j++] = DIGITS[15 & data[i]] |==> <NO-OP>
1120:LVR:0:POS:org.apache.commons.codec.digest.DigestUtils@digest(java.security.MessageDigest,java.io.InputStream):132:0 |==> 1
1121:LVR:0:NEG:org.apache.commons.codec.digest.DigestUtils@digest(java.security.MessageDigest,java.io.InputStream):132:0 |==> -1
1122:LVR:NEG:0:org.apache.commons.codec.digest.DigestUtils@digest(java.security.MessageDigest,java.io.InputStream):134:-1 |==> 0
1123:LVR:NEG:POS:org.apache.commons.codec.digest.DigestUtils@digest(java.security.MessageDigest,java.io.InputStream):134:-1 |==> 1
1124:ROR:>(int,int):!=(int,int):org.apache.commons.codec.digest.DigestUtils@digest(java.security.MessageDigest,java.io.InputStream):134:read > -1 |==> read != -1
1125:ROR:>(int,int):>=(int,int):org.apache.commons.codec.digest.DigestUtils@digest(java.security.MessageDigest,java.io.InputStream):134:read > -1 |==> read >= -1
1126:ROR:>(int,int):FALSE(int,int):org.apache.commons.codec.digest.DigestUtils@digest(java.security.MessageDigest,java.io.InputStream):134:read > -1 |==> false
1127:LVR:0:POS:org.apache.commons.codec.digest.DigestUtils@digest(java.security.MessageDigest,java.io.InputStream):135:0 |==> 1
1128:LVR:0:NEG:org.apache.commons.codec.digest.DigestUtils@digest(java.security.MessageDigest,java.io.InputStream):135:0 |==> -1
1129:STD:<CALL>:<NO-OP>:org.apache.commons.codec.digest.DigestUtils@digest(java.security.MessageDigest,java.io.InputStream):135:digest.update(buffer, 0, read) |==> <NO-OP>
1130:LVR:0:POS:org.apache.commons.codec.digest.DigestUtils@digest(java.security.MessageDigest,java.io.InputStream):136:0 |==> 1
1131:LVR:0:NEG:org.apache.commons.codec.digest.DigestUtils@digest(java.security.MessageDigest,java.io.InputStream):136:0 |==> -1
1132:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.digest.DigestUtils@digest(java.security.MessageDigest,java.io.InputStream):136:read = data.read(buffer, 0, STREAM_BUFFER_LENGTH) |==> <NO-OP>
1133:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):54:txt == null |==> false
1134:LVR:0:POS:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):54:0 |==> 1
1135:LVR:0:NEG:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):54:0 |==> -1
1136:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):54:txt.length() == 0 |==> txt.length() <= 0
1137:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):54:txt.length() == 0 |==> txt.length() >= 0
1138:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):54:txt.length() == 0 |==> false
1139:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):54:txt == null || txt.length() == 0 |==> txt == null != (txt.length() == 0)
1140:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):54:txt == null || txt.length() == 0 |==> txt == null
1141:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):54:txt == null || txt.length() == 0 |==> txt.length() == 0
1142:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):54:txt == null || txt.length() == 0 |==> true
1143:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):59:txt = txt.toLowerCase(java.util.Locale.ENGLISH) |==> <NO-OP>
1144:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):62:txt = txt.replaceAll("[^a-z]", "") |==> <NO-OP>
1145:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):65:txt = txt.replaceAll("e$", "") |==> <NO-OP>
1146:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):68:txt = txt.replaceAll("^cough", "cou2f") |==> <NO-OP>
1147:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):69:txt = txt.replaceAll("^rough", "rou2f") |==> <NO-OP>
1148:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):70:txt = txt.replaceAll("^tough", "tou2f") |==> <NO-OP>
1149:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):71:txt = txt.replaceAll("^enough", "enou2f") |==> <NO-OP>
1150:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):72:txt = txt.replaceAll("^trough", "trou2f") |==> <NO-OP>
1151:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):73:txt = txt.replaceAll("^gn", "2n") |==> <NO-OP>
1152:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):74:txt = txt.replaceAll("^mb", "m2") |==> <NO-OP>
1153:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):77:txt = txt.replaceAll("cq", "2q") |==> <NO-OP>
1154:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):78:txt = txt.replaceAll("ci", "si") |==> <NO-OP>
1155:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):79:txt = txt.replaceAll("ce", "se") |==> <NO-OP>
1156:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):80:txt = txt.replaceAll("cy", "sy") |==> <NO-OP>
1157:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):81:txt = txt.replaceAll("tch", "2ch") |==> <NO-OP>
1158:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):82:txt = txt.replaceAll("c", "k") |==> <NO-OP>
1159:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):83:txt = txt.replaceAll("q", "k") |==> <NO-OP>
1160:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):84:txt = txt.replaceAll("x", "k") |==> <NO-OP>
1161:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):85:txt = txt.replaceAll("v", "f") |==> <NO-OP>
1162:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):86:txt = txt.replaceAll("dg", "2g") |==> <NO-OP>
1163:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):87:txt = txt.replaceAll("tio", "sio") |==> <NO-OP>
1164:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):88:txt = txt.replaceAll("tia", "sia") |==> <NO-OP>
1165:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):89:txt = txt.replaceAll("d", "t") |==> <NO-OP>
1166:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):90:txt = txt.replaceAll("ph", "fh") |==> <NO-OP>
1167:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):91:txt = txt.replaceAll("b", "p") |==> <NO-OP>
1168:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):92:txt = txt.replaceAll("sh", "s2") |==> <NO-OP>
1169:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):93:txt = txt.replaceAll("z", "s") |==> <NO-OP>
1170:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):94:txt = txt.replaceAll("^[aeiou]", "A") |==> <NO-OP>
1171:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):95:txt = txt.replaceAll("[aeiou]", "3") |==> <NO-OP>
1172:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):96:txt = txt.replaceAll("j", "y") |==> <NO-OP>
1173:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):97:txt = txt.replaceAll("^y3", "Y3") |==> <NO-OP>
1174:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):98:txt = txt.replaceAll("^y", "A") |==> <NO-OP>
1175:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):99:txt = txt.replaceAll("y", "3") |==> <NO-OP>
1176:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):100:txt = txt.replaceAll("3gh3", "3kh3") |==> <NO-OP>
1177:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):101:txt = txt.replaceAll("gh", "22") |==> <NO-OP>
1178:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):102:txt = txt.replaceAll("g", "k") |==> <NO-OP>
1179:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):103:txt = txt.replaceAll("s+", "S") |==> <NO-OP>
1180:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):104:txt = txt.replaceAll("t+", "T") |==> <NO-OP>
1181:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):105:txt = txt.replaceAll("p+", "P") |==> <NO-OP>
1182:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):106:txt = txt.replaceAll("k+", "K") |==> <NO-OP>
1183:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):107:txt = txt.replaceAll("f+", "F") |==> <NO-OP>
1184:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):108:txt = txt.replaceAll("m+", "M") |==> <NO-OP>
1185:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):109:txt = txt.replaceAll("n+", "N") |==> <NO-OP>
1186:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):110:txt = txt.replaceAll("w3", "W3") |==> <NO-OP>
1187:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):112:txt = txt.replaceAll("wh3", "Wh3") |==> <NO-OP>
1188:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):113:txt = txt.replaceAll("w$", "3") |==> <NO-OP>
1189:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):115:txt = txt.replaceAll("w", "2") |==> <NO-OP>
1190:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):116:txt = txt.replaceAll("^h", "A") |==> <NO-OP>
1191:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):117:txt = txt.replaceAll("h", "2") |==> <NO-OP>
1192:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):118:txt = txt.replaceAll("r3", "R3") |==> <NO-OP>
1193:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):119:txt = txt.replaceAll("r$", "3") |==> <NO-OP>
1194:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):121:txt = txt.replaceAll("r", "2") |==> <NO-OP>
1195:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):122:txt = txt.replaceAll("l3", "L3") |==> <NO-OP>
1196:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):123:txt = txt.replaceAll("l$", "3") |==> <NO-OP>
1197:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):125:txt = txt.replaceAll("l", "2") |==> <NO-OP>
1198:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):131:txt = txt.replaceAll("2", "") |==> <NO-OP>
1199:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):132:txt = txt.replaceAll("3$", "A") |==> <NO-OP>
1200:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):133:txt = txt.replaceAll("3", "") |==> <NO-OP>
1201:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):136:txt = txt + "111111" + "1111" |==> <NO-OP>
1202:LVR:0:POS:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):139:0 |==> 1
1203:LVR:0:NEG:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):139:0 |==> -1
1204:LVR:POS:0:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):139:10 |==> 0
1205:LVR:POS:NEG:org.apache.commons.codec.language.Caverphone@caverphone(java.lang.String):139:10 |==> -10
1206:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone:59:4 |==> 0
1207:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone:59:4 |==> -4
1208:LVR:FALSE:TRUE:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String):75:false |==> true
1209:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):87:value = cleanInput(value) |==> <NO-OP>
1210:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):88:value == null |==> false
1211:COR:isSilentStart(value):TRUE:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):93:isSilentStart(value) |==> false
1212:COR:isSilentStart(value):FALSE:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):93:isSilentStart(value) |==> true
1213:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):93:1 |==> 0
1214:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):93:1 |==> -1
1215:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):93:0 |==> 1
1216:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):93:0 |==> -1
1217:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):97:1 |==> 0
1218:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):97:1 |==> -1
1219:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):97:value.length() - 1 |==> value.length() % 1
1220:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):97:value.length() - 1 |==> value.length() * 1
1221:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):97:value.length() - 1 |==> value.length() + 1
1222:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):97:value.length() - 1 |==> value.length() / 1
1223:ROR:<=(int,int):<(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):97:index <= value.length() - 1 |==> index < value.length() - 1
1224:ROR:<=(int,int):==(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):97:index <= value.length() - 1 |==> index == value.length() - 1
1225:ROR:<=(int,int):TRUE(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):97:index <= value.length() - 1 |==> true
1226:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):97:!result.isComplete() && index <= value.length() - 1 |==> !result.isComplete() == index <= value.length() - 1
1227:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):97:!result.isComplete() && index <= value.length() - 1 |==> false
1228:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):97:!result.isComplete() && index <= value.length() - 1 |==> !result.isComplete()
1229:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):97:!result.isComplete() && index <= value.length() - 1 |==> index <= value.length() - 1
1230:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):105:index = handleAEIOUY(value, result, index) |==> <NO-OP>
1231:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):108:result.append('P') |==> <NO-OP>
1232:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):109:1 |==> 0
1233:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):109:1 |==> -1
1234:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):109:index + 1 |==> index % 1
1235:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):109:index + 1 |==> index * 1
1236:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):109:index + 1 |==> index - 1
1237:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):109:index + 1 |==> index / 1
1238:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):109:charAt(value, index + 1) == 'B' |==> charAt(value, index + 1) <= 'B'
1239:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):109:charAt(value, index + 1) == 'B' |==> charAt(value, index + 1) >= 'B'
1240:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):109:charAt(value, index + 1) == 'B' |==> false
1241:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):109:2 |==> 0
1242:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):109:2 |==> -2
1243:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):109:index + 2 |==> index % 2
1244:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):109:index + 2 |==> index * 2
1245:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):109:index + 2 |==> index - 2
1246:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):109:index + 2 |==> index / 2
1247:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):109:1 |==> 0
1248:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):109:1 |==> -1
1249:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):109:index + 1 |==> index % 1
1250:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):109:index + 1 |==> index * 1
1251:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):109:index + 1 |==> index - 1
1252:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):109:index + 1 |==> index / 1
1253:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):109:index = charAt(value, index + 1) == 'B' ? index + 2 : index + 1 |==> <NO-OP>
1254:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):113:result.append('S') |==> <NO-OP>
1255:STD:<INC>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):114:index++ |==> <NO-OP>
1256:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):117:index = handleC(value, result, index) |==> <NO-OP>
1257:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):120:index = handleD(value, result, index) |==> <NO-OP>
1258:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):123:result.append('F') |==> <NO-OP>
1259:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):124:1 |==> 0
1260:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):124:1 |==> -1
1261:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):124:index + 1 |==> index % 1
1262:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):124:index + 1 |==> index * 1
1263:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):124:index + 1 |==> index - 1
1264:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):124:index + 1 |==> index / 1
1265:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):124:charAt(value, index + 1) == 'F' |==> charAt(value, index + 1) <= 'F'
1266:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):124:charAt(value, index + 1) == 'F' |==> charAt(value, index + 1) >= 'F'
1267:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):124:charAt(value, index + 1) == 'F' |==> false
1268:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):124:2 |==> 0
1269:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):124:2 |==> -2
1270:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):124:index + 2 |==> index % 2
1271:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):124:index + 2 |==> index * 2
1272:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):124:index + 2 |==> index - 2
1273:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):124:index + 2 |==> index / 2
1274:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):124:1 |==> 0
1275:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):124:1 |==> -1
1276:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):124:index + 1 |==> index % 1
1277:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):124:index + 1 |==> index * 1
1278:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):124:index + 1 |==> index - 1
1279:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):124:index + 1 |==> index / 1
1280:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):124:index = charAt(value, index + 1) == 'F' ? index + 2 : index + 1 |==> <NO-OP>
1281:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):127:index = handleG(value, result, index, slavoGermanic) |==> <NO-OP>
1282:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):130:index = handleH(value, result, index) |==> <NO-OP>
1283:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):133:index = handleJ(value, result, index, slavoGermanic) |==> <NO-OP>
1284:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):136:result.append('K') |==> <NO-OP>
1285:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):137:1 |==> 0
1286:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):137:1 |==> -1
1287:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):137:index + 1 |==> index % 1
1288:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):137:index + 1 |==> index * 1
1289:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):137:index + 1 |==> index - 1
1290:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):137:index + 1 |==> index / 1
1291:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):137:charAt(value, index + 1) == 'K' |==> charAt(value, index + 1) <= 'K'
1292:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):137:charAt(value, index + 1) == 'K' |==> charAt(value, index + 1) >= 'K'
1293:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):137:charAt(value, index + 1) == 'K' |==> false
1294:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):137:2 |==> 0
1295:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):137:2 |==> -2
1296:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):137:index + 2 |==> index % 2
1297:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):137:index + 2 |==> index * 2
1298:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):137:index + 2 |==> index - 2
1299:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):137:index + 2 |==> index / 2
1300:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):137:1 |==> 0
1301:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):137:1 |==> -1
1302:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):137:index + 1 |==> index % 1
1303:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):137:index + 1 |==> index * 1
1304:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):137:index + 1 |==> index - 1
1305:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):137:index + 1 |==> index / 1
1306:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):137:index = charAt(value, index + 1) == 'K' ? index + 2 : index + 1 |==> <NO-OP>
1307:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):140:index = handleL(value, result, index) |==> <NO-OP>
1308:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):143:result.append('M') |==> <NO-OP>
1309:COR:conditionM0(value, index):TRUE:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):144:conditionM0(value, index) |==> false
1310:COR:conditionM0(value, index):FALSE:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):144:conditionM0(value, index) |==> true
1311:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):144:2 |==> 0
1312:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):144:2 |==> -2
1313:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):144:index + 2 |==> index % 2
1314:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):144:index + 2 |==> index * 2
1315:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):144:index + 2 |==> index - 2
1316:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):144:index + 2 |==> index / 2
1317:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):144:1 |==> 0
1318:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):144:1 |==> -1
1319:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):144:index + 1 |==> index % 1
1320:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):144:index + 1 |==> index * 1
1321:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):144:index + 1 |==> index - 1
1322:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):144:index + 1 |==> index / 1
1323:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):144:index = conditionM0(value, index) ? index + 2 : index + 1 |==> <NO-OP>
1324:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):147:result.append('N') |==> <NO-OP>
1325:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):148:1 |==> 0
1326:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):148:1 |==> -1
1327:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):148:index + 1 |==> index % 1
1328:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):148:index + 1 |==> index * 1
1329:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):148:index + 1 |==> index - 1
1330:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):148:index + 1 |==> index / 1
1331:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):148:charAt(value, index + 1) == 'N' |==> charAt(value, index + 1) <= 'N'
1332:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):148:charAt(value, index + 1) == 'N' |==> charAt(value, index + 1) >= 'N'
1333:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):148:charAt(value, index + 1) == 'N' |==> false
1334:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):148:2 |==> 0
1335:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):148:2 |==> -2
1336:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):148:index + 2 |==> index % 2
1337:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):148:index + 2 |==> index * 2
1338:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):148:index + 2 |==> index - 2
1339:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):148:index + 2 |==> index / 2
1340:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):148:1 |==> 0
1341:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):148:1 |==> -1
1342:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):148:index + 1 |==> index % 1
1343:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):148:index + 1 |==> index * 1
1344:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):148:index + 1 |==> index - 1
1345:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):148:index + 1 |==> index / 1
1346:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):148:index = charAt(value, index + 1) == 'N' ? index + 2 : index + 1 |==> <NO-OP>
1347:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):152:result.append('N') |==> <NO-OP>
1348:STD:<INC>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):153:index++ |==> <NO-OP>
1349:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):156:index = handleP(value, result, index) |==> <NO-OP>
1350:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):159:result.append('K') |==> <NO-OP>
1351:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):160:1 |==> 0
1352:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):160:1 |==> -1
1353:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):160:index + 1 |==> index % 1
1354:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):160:index + 1 |==> index * 1
1355:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):160:index + 1 |==> index - 1
1356:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):160:index + 1 |==> index / 1
1357:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):160:charAt(value, index + 1) == 'Q' |==> charAt(value, index + 1) <= 'Q'
1358:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):160:charAt(value, index + 1) == 'Q' |==> charAt(value, index + 1) >= 'Q'
1359:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):160:charAt(value, index + 1) == 'Q' |==> false
1360:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):160:2 |==> 0
1361:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):160:2 |==> -2
1362:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):160:index + 2 |==> index % 2
1363:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):160:index + 2 |==> index * 2
1364:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):160:index + 2 |==> index - 2
1365:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):160:index + 2 |==> index / 2
1366:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):160:1 |==> 0
1367:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):160:1 |==> -1
1368:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):160:index + 1 |==> index % 1
1369:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):160:index + 1 |==> index * 1
1370:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):160:index + 1 |==> index - 1
1371:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):160:index + 1 |==> index / 1
1372:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):160:index = charAt(value, index + 1) == 'Q' ? index + 2 : index + 1 |==> <NO-OP>
1373:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):163:index = handleR(value, result, index, slavoGermanic) |==> <NO-OP>
1374:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):166:index = handleS(value, result, index, slavoGermanic) |==> <NO-OP>
1375:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):169:index = handleT(value, result, index) |==> <NO-OP>
1376:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):172:result.append('F') |==> <NO-OP>
1377:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):173:1 |==> 0
1378:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):173:1 |==> -1
1379:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):173:index + 1 |==> index % 1
1380:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):173:index + 1 |==> index * 1
1381:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):173:index + 1 |==> index - 1
1382:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):173:index + 1 |==> index / 1
1383:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):173:charAt(value, index + 1) == 'V' |==> charAt(value, index + 1) <= 'V'
1384:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):173:charAt(value, index + 1) == 'V' |==> charAt(value, index + 1) >= 'V'
1385:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):173:charAt(value, index + 1) == 'V' |==> false
1386:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):173:2 |==> 0
1387:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):173:2 |==> -2
1388:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):173:index + 2 |==> index % 2
1389:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):173:index + 2 |==> index * 2
1390:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):173:index + 2 |==> index - 2
1391:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):173:index + 2 |==> index / 2
1392:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):173:1 |==> 0
1393:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):173:1 |==> -1
1394:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):173:index + 1 |==> index % 1
1395:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):173:index + 1 |==> index * 1
1396:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):173:index + 1 |==> index - 1
1397:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):173:index + 1 |==> index / 1
1398:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):173:index = charAt(value, index + 1) == 'V' ? index + 2 : index + 1 |==> <NO-OP>
1399:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):176:index = handleW(value, result, index) |==> <NO-OP>
1400:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):179:index = handleX(value, result, index) |==> <NO-OP>
1401:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):182:index = handleZ(value, result, index, slavoGermanic) |==> <NO-OP>
1402:STD:<INC>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):185:index++ |==> <NO-OP>
1403:COR:alternate:TRUE:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):190:alternate |==> false
1404:COR:alternate:FALSE:org.apache.commons.codec.language.DoubleMetaphone@doubleMetaphone(java.lang.String,boolean):190:alternate |==> true
1405:LVR:FALSE:TRUE:org.apache.commons.codec.language.DoubleMetaphone@isDoubleMetaphoneEqual(java.lang.String,java.lang.String):229:false |==> true
1406:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@setMaxCodeLen(int):262:this.maxCodeLen = maxCodeLen |==> <NO-OP>
1407:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@handleAEIOUY(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):272:0 |==> 1
1408:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleAEIOUY(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):272:0 |==> -1
1409:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleAEIOUY(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):272:index == 0 |==> index <= 0
1410:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleAEIOUY(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):272:index == 0 |==> index >= 0
1411:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleAEIOUY(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):272:index == 0 |==> false
1412:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleAEIOUY(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):273:result.append('A') |==> <NO-OP>
1413:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleAEIOUY(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):275:1 |==> 0
1414:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleAEIOUY(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):275:1 |==> -1
1415:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleAEIOUY(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):275:index + 1 |==> index % 1
1416:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleAEIOUY(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):275:index + 1 |==> index * 1
1417:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleAEIOUY(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):275:index + 1 |==> index - 1
1418:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleAEIOUY(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):275:index + 1 |==> index / 1
1419:COR:conditionC0(value, index):TRUE:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):284:conditionC0(value, index) |==> false
1420:COR:conditionC0(value, index):FALSE:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):284:conditionC0(value, index) |==> true
1421:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):285:result.append('K') |==> <NO-OP>
1422:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):286:2 |==> 0
1423:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):286:2 |==> -2
1424:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):286:index += 2 |==> <NO-OP>
1425:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):287:0 |==> 1
1426:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):287:0 |==> -1
1427:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):287:index == 0 |==> index <= 0
1428:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):287:index == 0 |==> index >= 0
1429:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):287:index == 0 |==> false
1430:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):287:6 |==> 0
1431:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):287:6 |==> -6
1432:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):287:index == 0 && contains(value, index, 6, "CAESAR") |==> index == 0 == contains(value, index, 6, "CAESAR")
1433:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):287:index == 0 && contains(value, index, 6, "CAESAR") |==> false
1434:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):287:index == 0 && contains(value, index, 6, "CAESAR") |==> index == 0
1435:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):287:index == 0 && contains(value, index, 6, "CAESAR") |==> contains(value, index, 6, "CAESAR")
1436:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):288:result.append('S') |==> <NO-OP>
1437:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):289:2 |==> 0
1438:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):289:2 |==> -2
1439:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):289:index += 2 |==> <NO-OP>
1440:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):290:2 |==> 0
1441:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):290:2 |==> -2
1442:COR:contains(value, index, 2, "CH"):TRUE:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):290:contains(value, index, 2, "CH") |==> false
1443:COR:contains(value, index, 2, "CH"):FALSE:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):290:contains(value, index, 2, "CH") |==> true
1444:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):291:index = handleCH(value, result, index) |==> <NO-OP>
1445:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):292:2 |==> 0
1446:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):292:2 |==> -2
1447:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):293:2 |==> 0
1448:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):293:2 |==> -2
1449:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):293:index - 2 |==> index % 2
1450:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):293:index - 2 |==> index * 2
1451:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):293:index - 2 |==> index + 2
1452:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):293:index - 2 |==> index / 2
1453:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):293:4 |==> 0
1454:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):293:4 |==> -4
1455:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):292:contains(value, index, 2, "CZ") && !contains(value, index - 2, 4, "WICZ") |==> contains(value, index, 2, "CZ") == !contains(value, index - 2, 4, "WICZ")
1456:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):292:contains(value, index, 2, "CZ") && !contains(value, index - 2, 4, "WICZ") |==> false
1457:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):292:contains(value, index, 2, "CZ") && !contains(value, index - 2, 4, "WICZ") |==> contains(value, index, 2, "CZ")
1458:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):293:contains(value, index, 2, "CZ") && !contains(value, index - 2, 4, "WICZ") |==> !contains(value, index - 2, 4, "WICZ")
1459:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):295:result.append('S', 'X') |==> <NO-OP>
1460:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):296:2 |==> 0
1461:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):296:2 |==> -2
1462:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):296:index += 2 |==> <NO-OP>
1463:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):297:1 |==> 0
1464:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):297:1 |==> -1
1465:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):297:index + 1 |==> index % 1
1466:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):297:index + 1 |==> index * 1
1467:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):297:index + 1 |==> index - 1
1468:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):297:index + 1 |==> index / 1
1469:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):297:3 |==> 0
1470:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):297:3 |==> -3
1471:COR:contains(value, index + 1, 3, "CIA"):TRUE:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):297:contains(value, index + 1, 3, "CIA") |==> false
1472:COR:contains(value, index + 1, 3, "CIA"):FALSE:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):297:contains(value, index + 1, 3, "CIA") |==> true
1473:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):299:result.append('X') |==> <NO-OP>
1474:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):300:3 |==> 0
1475:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):300:3 |==> -3
1476:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):300:index += 3 |==> <NO-OP>
1477:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):301:2 |==> 0
1478:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):301:2 |==> -2
1479:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):302:1 |==> 0
1480:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):302:1 |==> -1
1481:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):302:index == 1 |==> index <= 1
1482:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):302:index == 1 |==> index >= 1
1483:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):302:index == 1 |==> false
1484:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):302:0 |==> 1
1485:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):302:0 |==> -1
1486:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):302:charAt(value, 0) == 'M' |==> charAt(value, 0) <= 'M'
1487:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):302:charAt(value, 0) == 'M' |==> charAt(value, 0) >= 'M'
1488:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):302:charAt(value, 0) == 'M' |==> false
1489:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):302:index == 1 && charAt(value, 0) == 'M' |==> index == 1 == (charAt(value, 0) == 'M')
1490:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):302:index == 1 && charAt(value, 0) == 'M' |==> false
1491:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):302:index == 1 && charAt(value, 0) == 'M' |==> index == 1
1492:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):302:index == 1 && charAt(value, 0) == 'M' |==> charAt(value, 0) == 'M'
1493:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):301:contains(value, index, 2, "CC") && !(index == 1 && charAt(value, 0) == 'M') |==> contains(value, index, 2, "CC") == !(index == 1 && charAt(value, 0) == 'M')
1494:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):301:contains(value, index, 2, "CC") && !(index == 1 && charAt(value, 0) == 'M') |==> false
1495:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):301:contains(value, index, 2, "CC") && !(index == 1 && charAt(value, 0) == 'M') |==> contains(value, index, 2, "CC")
1496:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):302:contains(value, index, 2, "CC") && !(index == 1 && charAt(value, 0) == 'M') |==> !(index == 1 && charAt(value, 0) == 'M')
1497:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):305:2 |==> 0
1498:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):305:2 |==> -2
1499:COR:contains(value, index, 2, "CK", "CG", "CQ"):TRUE:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):305:contains(value, index, 2, "CK", "CG", "CQ") |==> false
1500:COR:contains(value, index, 2, "CK", "CG", "CQ"):FALSE:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):305:contains(value, index, 2, "CK", "CG", "CQ") |==> true
1501:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):306:result.append('K') |==> <NO-OP>
1502:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):307:2 |==> 0
1503:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):307:2 |==> -2
1504:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):307:index += 2 |==> <NO-OP>
1505:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):308:2 |==> 0
1506:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):308:2 |==> -2
1507:COR:contains(value, index, 2, "CI", "CE", "CY"):TRUE:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):308:contains(value, index, 2, "CI", "CE", "CY") |==> false
1508:COR:contains(value, index, 2, "CI", "CE", "CY"):FALSE:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):308:contains(value, index, 2, "CI", "CE", "CY") |==> true
1509:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):310:3 |==> 0
1510:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):310:3 |==> -3
1511:COR:contains(value, index, 3, "CIO", "CIE", "CIA"):TRUE:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):310:contains(value, index, 3, "CIO", "CIE", "CIA") |==> false
1512:COR:contains(value, index, 3, "CIO", "CIE", "CIA"):FALSE:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):310:contains(value, index, 3, "CIO", "CIE", "CIA") |==> true
1513:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):311:result.append('S', 'X') |==> <NO-OP>
1514:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):313:result.append('S') |==> <NO-OP>
1515:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):315:2 |==> 0
1516:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):315:2 |==> -2
1517:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):315:index += 2 |==> <NO-OP>
1518:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):317:result.append('K') |==> <NO-OP>
1519:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):318:1 |==> 0
1520:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):318:1 |==> -1
1521:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):318:index + 1 |==> index % 1
1522:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):318:index + 1 |==> index * 1
1523:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):318:index + 1 |==> index - 1
1524:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):318:index + 1 |==> index / 1
1525:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):318:2 |==> 0
1526:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):318:2 |==> -2
1527:COR:contains(value, index + 1, 2, " C", " Q", " G"):TRUE:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):318:contains(value, index + 1, 2, " C", " Q", " G") |==> false
1528:COR:contains(value, index + 1, 2, " C", " Q", " G"):FALSE:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):318:contains(value, index + 1, 2, " C", " Q", " G") |==> true
1529:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):320:3 |==> 0
1530:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):320:3 |==> -3
1531:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):320:index += 3 |==> <NO-OP>
1532:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):321:1 |==> 0
1533:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):321:1 |==> -1
1534:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):321:index + 1 |==> index % 1
1535:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):321:index + 1 |==> index * 1
1536:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):321:index + 1 |==> index - 1
1537:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):321:index + 1 |==> index / 1
1538:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):321:1 |==> 0
1539:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):321:1 |==> -1
1540:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):322:1 |==> 0
1541:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):322:1 |==> -1
1542:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):322:index + 1 |==> index % 1
1543:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):322:index + 1 |==> index * 1
1544:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):322:index + 1 |==> index - 1
1545:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):322:index + 1 |==> index / 1
1546:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):322:2 |==> 0
1547:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):322:2 |==> -2
1548:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):321:contains(value, index + 1, 1, "C", "K", "Q") && !contains(value, index + 1, 2, "CE", "CI") |==> contains(value, index + 1, 1, "C", "K", "Q") == !contains(value, index + 1, 2, "CE", "CI")
1549:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):321:contains(value, index + 1, 1, "C", "K", "Q") && !contains(value, index + 1, 2, "CE", "CI") |==> false
1550:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):321:contains(value, index + 1, 1, "C", "K", "Q") && !contains(value, index + 1, 2, "CE", "CI") |==> contains(value, index + 1, 1, "C", "K", "Q")
1551:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):322:contains(value, index + 1, 1, "C", "K", "Q") && !contains(value, index + 1, 2, "CE", "CI") |==> !contains(value, index + 1, 2, "CE", "CI")
1552:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):323:2 |==> 0
1553:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):323:2 |==> -2
1554:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):323:index += 2 |==> <NO-OP>
1555:STD:<INC>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):325:index++ |==> <NO-OP>
1556:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):338:2 |==> 0
1557:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):338:2 |==> -2
1558:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):338:index + 2 |==> index % 2
1559:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):338:index + 2 |==> index * 2
1560:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):338:index + 2 |==> index - 2
1561:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):338:index + 2 |==> index / 2
1562:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):338:1 |==> 0
1563:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):338:1 |==> -1
1564:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):339:2 |==> 0
1565:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):339:2 |==> -2
1566:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):339:index + 2 |==> index % 2
1567:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):339:index + 2 |==> index * 2
1568:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):339:index + 2 |==> index - 2
1569:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):339:index + 2 |==> index / 2
1570:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):339:2 |==> 0
1571:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):339:2 |==> -2
1572:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):338:contains(value, index + 2, 1, "I", "E", "H") && !contains(value, index + 2, 2, "HU") |==> contains(value, index + 2, 1, "I", "E", "H") == !contains(value, index + 2, 2, "HU")
1573:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):338:contains(value, index + 2, 1, "I", "E", "H") && !contains(value, index + 2, 2, "HU") |==> false
1574:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):338:contains(value, index + 2, 1, "I", "E", "H") && !contains(value, index + 2, 2, "HU") |==> contains(value, index + 2, 1, "I", "E", "H")
1575:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):339:contains(value, index + 2, 1, "I", "E", "H") && !contains(value, index + 2, 2, "HU") |==> !contains(value, index + 2, 2, "HU")
1576:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):341:1 |==> 0
1577:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):341:1 |==> -1
1578:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):341:index == 1 |==> index <= 1
1579:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):341:index == 1 |==> index >= 1
1580:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):341:index == 1 |==> false
1581:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):341:1 |==> 0
1582:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):341:1 |==> -1
1583:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):341:index - 1 |==> index % 1
1584:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):341:index - 1 |==> index * 1
1585:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):341:index - 1 |==> index + 1
1586:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):341:index - 1 |==> index / 1
1587:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):341:charAt(value, index - 1) == 'A' |==> charAt(value, index - 1) <= 'A'
1588:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):341:charAt(value, index - 1) == 'A' |==> charAt(value, index - 1) >= 'A'
1589:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):341:charAt(value, index - 1) == 'A' |==> false
1590:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):341:index == 1 && charAt(value, index - 1) == 'A' |==> index == 1 == (charAt(value, index - 1) == 'A')
1591:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):341:index == 1 && charAt(value, index - 1) == 'A' |==> false
1592:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):341:index == 1 && charAt(value, index - 1) == 'A' |==> index == 1
1593:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):341:index == 1 && charAt(value, index - 1) == 'A' |==> charAt(value, index - 1) == 'A'
1594:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):342:1 |==> 0
1595:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):342:1 |==> -1
1596:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):342:index - 1 |==> index % 1
1597:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):342:index - 1 |==> index * 1
1598:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):342:index - 1 |==> index + 1
1599:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):342:index - 1 |==> index / 1
1600:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):342:5 |==> 0
1601:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):342:5 |==> -5
1602:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):341:(index == 1 && charAt(value, index - 1) == 'A') || contains(value, index - 1, 5, "UCCEE", "UCCES") |==> (index == 1 && charAt(value, index - 1) == 'A') != contains(value, index - 1, 5, "UCCEE", "UCCES")
1603:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):341:(index == 1 && charAt(value, index - 1) == 'A') || contains(value, index - 1, 5, "UCCEE", "UCCES") |==> (index == 1 && charAt(value, index - 1) == 'A')
1604:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):342:(index == 1 && charAt(value, index - 1) == 'A') || contains(value, index - 1, 5, "UCCEE", "UCCES") |==> contains(value, index - 1, 5, "UCCEE", "UCCES")
1605:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):341:(index == 1 && charAt(value, index - 1) == 'A') || contains(value, index - 1, 5, "UCCEE", "UCCES") |==> true
1606:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):344:result.append("KS") |==> <NO-OP>
1607:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):347:result.append('X') |==> <NO-OP>
1608:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):349:3 |==> 0
1609:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):349:3 |==> -3
1610:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):349:index += 3 |==> <NO-OP>
1611:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):351:result.append('K') |==> <NO-OP>
1612:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):352:2 |==> 0
1613:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):352:2 |==> -2
1614:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):352:index += 2 |==> <NO-OP>
1615:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):364:0 |==> 1
1616:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):364:0 |==> -1
1617:ROR:>(int,int):!=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):364:index > 0 |==> index != 0
1618:ROR:>(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):364:index > 0 |==> index >= 0
1619:ROR:>(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):364:index > 0 |==> false
1620:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):364:4 |==> 0
1621:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):364:4 |==> -4
1622:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):364:index > 0 && contains(value, index, 4, "CHAE") |==> index > 0 == contains(value, index, 4, "CHAE")
1623:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):364:index > 0 && contains(value, index, 4, "CHAE") |==> false
1624:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):364:index > 0 && contains(value, index, 4, "CHAE") |==> index > 0
1625:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):364:index > 0 && contains(value, index, 4, "CHAE") |==> contains(value, index, 4, "CHAE")
1626:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):365:result.append('K', 'X') |==> <NO-OP>
1627:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):366:2 |==> 0
1628:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):366:2 |==> -2
1629:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):366:index + 2 |==> index % 2
1630:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):366:index + 2 |==> index * 2
1631:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):366:index + 2 |==> index - 2
1632:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):366:index + 2 |==> index / 2
1633:COR:conditionCH0(value, index):TRUE:org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):367:conditionCH0(value, index) |==> false
1634:COR:conditionCH0(value, index):FALSE:org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):367:conditionCH0(value, index) |==> true
1635:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):369:result.append('K') |==> <NO-OP>
1636:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):370:2 |==> 0
1637:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):370:2 |==> -2
1638:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):370:index + 2 |==> index % 2
1639:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):370:index + 2 |==> index * 2
1640:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):370:index + 2 |==> index - 2
1641:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):370:index + 2 |==> index / 2
1642:COR:conditionCH1(value, index):TRUE:org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):371:conditionCH1(value, index) |==> false
1643:COR:conditionCH1(value, index):FALSE:org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):371:conditionCH1(value, index) |==> true
1644:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):373:result.append('K') |==> <NO-OP>
1645:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):374:2 |==> 0
1646:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):374:2 |==> -2
1647:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):374:index + 2 |==> index % 2
1648:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):374:index + 2 |==> index * 2
1649:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):374:index + 2 |==> index - 2
1650:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):374:index + 2 |==> index / 2
1651:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):376:0 |==> 1
1652:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):376:0 |==> -1
1653:ROR:>(int,int):!=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):376:index > 0 |==> index != 0
1654:ROR:>(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):376:index > 0 |==> index >= 0
1655:ROR:>(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):376:index > 0 |==> false
1656:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):377:0 |==> 1
1657:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):377:0 |==> -1
1658:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):377:2 |==> 0
1659:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):377:2 |==> -2
1660:COR:contains(value, 0, 2, "MC"):TRUE:org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):377:contains(value, 0, 2, "MC") |==> false
1661:COR:contains(value, 0, 2, "MC"):FALSE:org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):377:contains(value, 0, 2, "MC") |==> true
1662:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):378:result.append('K') |==> <NO-OP>
1663:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):380:result.append('X', 'K') |==> <NO-OP>
1664:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):383:result.append('X') |==> <NO-OP>
1665:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):385:2 |==> 0
1666:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):385:2 |==> -2
1667:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):385:index + 2 |==> index % 2
1668:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):385:index + 2 |==> index * 2
1669:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):385:index + 2 |==> index - 2
1670:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):385:index + 2 |==> index / 2
1671:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):395:2 |==> 0
1672:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):395:2 |==> -2
1673:COR:contains(value, index, 2, "DG"):TRUE:org.apache.commons.codec.language.DoubleMetaphone@handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):395:contains(value, index, 2, "DG") |==> false
1674:COR:contains(value, index, 2, "DG"):FALSE:org.apache.commons.codec.language.DoubleMetaphone@handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):395:contains(value, index, 2, "DG") |==> true
1675:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):397:2 |==> 0
1676:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):397:2 |==> -2
1677:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):397:index + 2 |==> index % 2
1678:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):397:index + 2 |==> index * 2
1679:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):397:index + 2 |==> index - 2
1680:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):397:index + 2 |==> index / 2
1681:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):397:1 |==> 0
1682:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):397:1 |==> -1
1683:COR:contains(value, index + 2, 1, "I", "E", "Y"):TRUE:org.apache.commons.codec.language.DoubleMetaphone@handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):397:contains(value, index + 2, 1, "I", "E", "Y") |==> false
1684:COR:contains(value, index + 2, 1, "I", "E", "Y"):FALSE:org.apache.commons.codec.language.DoubleMetaphone@handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):397:contains(value, index + 2, 1, "I", "E", "Y") |==> true
1685:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):398:result.append('J') |==> <NO-OP>
1686:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):399:3 |==> 0
1687:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):399:3 |==> -3
1688:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):399:index += 3 |==> <NO-OP>
1689:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):402:result.append("TK") |==> <NO-OP>
1690:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):403:2 |==> 0
1691:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):403:2 |==> -2
1692:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):403:index += 2 |==> <NO-OP>
1693:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):405:2 |==> 0
1694:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):405:2 |==> -2
1695:COR:contains(value, index, 2, "DT", "DD"):TRUE:org.apache.commons.codec.language.DoubleMetaphone@handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):405:contains(value, index, 2, "DT", "DD") |==> false
1696:COR:contains(value, index, 2, "DT", "DD"):FALSE:org.apache.commons.codec.language.DoubleMetaphone@handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):405:contains(value, index, 2, "DT", "DD") |==> true
1697:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):406:result.append('T') |==> <NO-OP>
1698:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):407:2 |==> 0
1699:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):407:2 |==> -2
1700:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):407:index += 2 |==> <NO-OP>
1701:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):409:result.append('T') |==> <NO-OP>
1702:STD:<INC>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):410:index++ |==> <NO-OP>
1703:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):422:1 |==> 0
1704:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):422:1 |==> -1
1705:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):422:index + 1 |==> index % 1
1706:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):422:index + 1 |==> index * 1
1707:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):422:index + 1 |==> index - 1
1708:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):422:index + 1 |==> index / 1
1709:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):422:charAt(value, index + 1) == 'H' |==> charAt(value, index + 1) <= 'H'
1710:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):422:charAt(value, index + 1) == 'H' |==> charAt(value, index + 1) >= 'H'
1711:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):422:charAt(value, index + 1) == 'H' |==> false
1712:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):423:index = handleGH(value, result, index) |==> <NO-OP>
1713:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):424:1 |==> 0
1714:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):424:1 |==> -1
1715:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):424:index + 1 |==> index % 1
1716:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):424:index + 1 |==> index * 1
1717:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):424:index + 1 |==> index - 1
1718:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):424:index + 1 |==> index / 1
1719:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):424:charAt(value, index + 1) == 'N' |==> charAt(value, index + 1) <= 'N'
1720:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):424:charAt(value, index + 1) == 'N' |==> charAt(value, index + 1) >= 'N'
1721:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):424:charAt(value, index + 1) == 'N' |==> false
1722:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):425:1 |==> 0
1723:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):425:1 |==> -1
1724:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):425:index == 1 |==> index <= 1
1725:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):425:index == 1 |==> index >= 1
1726:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):425:index == 1 |==> false
1727:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):425:0 |==> 1
1728:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):425:0 |==> -1
1729:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):425:index == 1 && isVowel(charAt(value, 0)) |==> index == 1 == isVowel(charAt(value, 0))
1730:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):425:index == 1 && isVowel(charAt(value, 0)) |==> false
1731:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):425:index == 1 && isVowel(charAt(value, 0)) |==> index == 1
1732:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):425:index == 1 && isVowel(charAt(value, 0)) |==> isVowel(charAt(value, 0))
1733:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):425:index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic |==> (index == 1 && isVowel(charAt(value, 0))) == !slavoGermanic
1734:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):425:index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic |==> false
1735:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):425:index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic |==> index == 1 && isVowel(charAt(value, 0))
1736:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):425:index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic |==> !slavoGermanic
1737:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):426:result.append("KN", "N") |==> <NO-OP>
1738:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):427:2 |==> 0
1739:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):427:2 |==> -2
1740:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):427:index + 2 |==> index % 2
1741:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):427:index + 2 |==> index * 2
1742:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):427:index + 2 |==> index - 2
1743:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):427:index + 2 |==> index / 2
1744:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):427:2 |==> 0
1745:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):427:2 |==> -2
1746:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):428:1 |==> 0
1747:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):428:1 |==> -1
1748:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):428:index + 1 |==> index % 1
1749:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):428:index + 1 |==> index * 1
1750:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):428:index + 1 |==> index - 1
1751:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):428:index + 1 |==> index / 1
1752:ROR:!=(int,int):<(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):428:charAt(value, index + 1) != 'Y' |==> charAt(value, index + 1) < 'Y'
1753:ROR:!=(int,int):>(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):428:charAt(value, index + 1) != 'Y' |==> charAt(value, index + 1) > 'Y'
1754:ROR:!=(int,int):TRUE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):428:charAt(value, index + 1) != 'Y' |==> true
1755:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):427:!contains(value, index + 2, 2, "EY") && charAt(value, index + 1) != 'Y' |==> !contains(value, index + 2, 2, "EY") == (charAt(value, index + 1) != 'Y')
1756:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):427:!contains(value, index + 2, 2, "EY") && charAt(value, index + 1) != 'Y' |==> false
1757:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):427:!contains(value, index + 2, 2, "EY") && charAt(value, index + 1) != 'Y' |==> !contains(value, index + 2, 2, "EY")
1758:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):428:!contains(value, index + 2, 2, "EY") && charAt(value, index + 1) != 'Y' |==> charAt(value, index + 1) != 'Y'
1759:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):427:!contains(value, index + 2, 2, "EY") && charAt(value, index + 1) != 'Y' && !slavoGermanic |==> (!contains(value, index + 2, 2, "EY") && charAt(value, index + 1) != 'Y') == !slavoGermanic
1760:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):428:!contains(value, index + 2, 2, "EY") && charAt(value, index + 1) != 'Y' && !slavoGermanic |==> false
1761:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):427:!contains(value, index + 2, 2, "EY") && charAt(value, index + 1) != 'Y' && !slavoGermanic |==> !contains(value, index + 2, 2, "EY") && charAt(value, index + 1) != 'Y'
1762:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):428:!contains(value, index + 2, 2, "EY") && charAt(value, index + 1) != 'Y' && !slavoGermanic |==> !slavoGermanic
1763:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):429:result.append("N", "KN") |==> <NO-OP>
1764:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):431:result.append("KN") |==> <NO-OP>
1765:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):433:2 |==> 0
1766:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):433:2 |==> -2
1767:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):433:index + 2 |==> index % 2
1768:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):433:index + 2 |==> index * 2
1769:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):433:index + 2 |==> index - 2
1770:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):433:index + 2 |==> index / 2
1771:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):433:index = index + 2 |==> <NO-OP>
1772:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):434:1 |==> 0
1773:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):434:1 |==> -1
1774:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):434:index + 1 |==> index % 1
1775:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):434:index + 1 |==> index * 1
1776:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):434:index + 1 |==> index - 1
1777:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):434:index + 1 |==> index / 1
1778:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):434:2 |==> 0
1779:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):434:2 |==> -2
1780:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):434:contains(value, index + 1, 2, "LI") && !slavoGermanic |==> contains(value, index + 1, 2, "LI") == !slavoGermanic
1781:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):434:contains(value, index + 1, 2, "LI") && !slavoGermanic |==> false
1782:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):434:contains(value, index + 1, 2, "LI") && !slavoGermanic |==> contains(value, index + 1, 2, "LI")
1783:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):434:contains(value, index + 1, 2, "LI") && !slavoGermanic |==> !slavoGermanic
1784:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):435:result.append("KL", "L") |==> <NO-OP>
1785:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):436:2 |==> 0
1786:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):436:2 |==> -2
1787:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):436:index += 2 |==> <NO-OP>
1788:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):437:0 |==> 1
1789:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):437:0 |==> -1
1790:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):437:index == 0 |==> index <= 0
1791:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):437:index == 0 |==> index >= 0
1792:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):437:index == 0 |==> false
1793:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):437:1 |==> 0
1794:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):437:1 |==> -1
1795:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):437:index + 1 |==> index % 1
1796:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):437:index + 1 |==> index * 1
1797:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):437:index + 1 |==> index - 1
1798:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):437:index + 1 |==> index / 1
1799:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):437:charAt(value, index + 1) == 'Y' |==> charAt(value, index + 1) <= 'Y'
1800:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):437:charAt(value, index + 1) == 'Y' |==> charAt(value, index + 1) >= 'Y'
1801:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):437:charAt(value, index + 1) == 'Y' |==> false
1802:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):437:1 |==> 0
1803:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):437:1 |==> -1
1804:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):437:index + 1 |==> index % 1
1805:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):437:index + 1 |==> index * 1
1806:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):437:index + 1 |==> index - 1
1807:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):437:index + 1 |==> index / 1
1808:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):437:2 |==> 0
1809:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):437:2 |==> -2
1810:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):437:charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER) |==> charAt(value, index + 1) == 'Y' != contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER)
1811:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):437:charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER) |==> charAt(value, index + 1) == 'Y'
1812:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):437:charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER) |==> contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER)
1813:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):437:charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER) |==> true
1814:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):437:index == 0 && (charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER)) |==> index == 0 == (charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))
1815:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):437:index == 0 && (charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER)) |==> false
1816:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):437:index == 0 && (charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER)) |==> index == 0
1817:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):437:index == 0 && (charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER)) |==> (charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))
1818:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):439:result.append('K', 'J') |==> <NO-OP>
1819:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):440:2 |==> 0
1820:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):440:2 |==> -2
1821:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):440:index += 2 |==> <NO-OP>
1822:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):441:1 |==> 0
1823:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):441:1 |==> -1
1824:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):441:index + 1 |==> index % 1
1825:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):441:index + 1 |==> index * 1
1826:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):441:index + 1 |==> index - 1
1827:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):441:index + 1 |==> index / 1
1828:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):441:2 |==> 0
1829:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):441:2 |==> -2
1830:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):442:1 |==> 0
1831:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):442:1 |==> -1
1832:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):442:index + 1 |==> index % 1
1833:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):442:index + 1 |==> index * 1
1834:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):442:index + 1 |==> index - 1
1835:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):442:index + 1 |==> index / 1
1836:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):442:charAt(value, index + 1) == 'Y' |==> charAt(value, index + 1) <= 'Y'
1837:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):442:charAt(value, index + 1) == 'Y' |==> charAt(value, index + 1) >= 'Y'
1838:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):442:charAt(value, index + 1) == 'Y' |==> false
1839:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):441:contains(value, index + 1, 2, "ER") || charAt(value, index + 1) == 'Y' |==> contains(value, index + 1, 2, "ER") != (charAt(value, index + 1) == 'Y')
1840:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):441:contains(value, index + 1, 2, "ER") || charAt(value, index + 1) == 'Y' |==> contains(value, index + 1, 2, "ER")
1841:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):442:contains(value, index + 1, 2, "ER") || charAt(value, index + 1) == 'Y' |==> charAt(value, index + 1) == 'Y'
1842:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):441:contains(value, index + 1, 2, "ER") || charAt(value, index + 1) == 'Y' |==> true
1843:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):443:0 |==> 1
1844:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):443:0 |==> -1
1845:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):443:6 |==> 0
1846:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):443:6 |==> -6
1847:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):441:(contains(value, index + 1, 2, "ER") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, "DANGER", "RANGER", "MANGER") |==> (contains(value, index + 1, 2, "ER") || charAt(value, index + 1) == 'Y') == !contains(value, 0, 6, "DANGER", "RANGER", "MANGER")
1848:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):442:(contains(value, index + 1, 2, "ER") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, "DANGER", "RANGER", "MANGER") |==> false
1849:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):441:(contains(value, index + 1, 2, "ER") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, "DANGER", "RANGER", "MANGER") |==> (contains(value, index + 1, 2, "ER") || charAt(value, index + 1) == 'Y')
1850:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):443:(contains(value, index + 1, 2, "ER") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, "DANGER", "RANGER", "MANGER") |==> !contains(value, 0, 6, "DANGER", "RANGER", "MANGER")
1851:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):444:1 |==> 0
1852:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):444:1 |==> -1
1853:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):444:index - 1 |==> index % 1
1854:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):444:index - 1 |==> index * 1
1855:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):444:index - 1 |==> index + 1
1856:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):444:index - 1 |==> index / 1
1857:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):444:1 |==> 0
1858:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):444:1 |==> -1
1859:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):441:(contains(value, index + 1, 2, "ER") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, "DANGER", "RANGER", "MANGER") && !contains(value, index - 1, 1, "E", "I") |==> ((contains(value, index + 1, 2, "ER") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, "DANGER", "RANGER", "MANGER")) == !contains(value, index - 1, 1, "E", "I")
1860:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):443:(contains(value, index + 1, 2, "ER") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, "DANGER", "RANGER", "MANGER") && !contains(value, index - 1, 1, "E", "I") |==> false
1861:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):441:(contains(value, index + 1, 2, "ER") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, "DANGER", "RANGER", "MANGER") && !contains(value, index - 1, 1, "E", "I") |==> (contains(value, index + 1, 2, "ER") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, "DANGER", "RANGER", "MANGER")
1862:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):444:(contains(value, index + 1, 2, "ER") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, "DANGER", "RANGER", "MANGER") && !contains(value, index - 1, 1, "E", "I") |==> !contains(value, index - 1, 1, "E", "I")
1863:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):445:1 |==> 0
1864:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):445:1 |==> -1
1865:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):445:index - 1 |==> index % 1
1866:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):445:index - 1 |==> index * 1
1867:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):445:index - 1 |==> index + 1
1868:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):445:index - 1 |==> index / 1
1869:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):445:3 |==> 0
1870:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):445:3 |==> -3
1871:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):441:(contains(value, index + 1, 2, "ER") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, "DANGER", "RANGER", "MANGER") && !contains(value, index - 1, 1, "E", "I") && !contains(value, index - 1, 3, "RGY", "OGY") |==> ((contains(value, index + 1, 2, "ER") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, "DANGER", "RANGER", "MANGER") && !contains(value, index - 1, 1, "E", "I")) == !contains(value, index - 1, 3, "RGY", "OGY")
1872:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):444:(contains(value, index + 1, 2, "ER") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, "DANGER", "RANGER", "MANGER") && !contains(value, index - 1, 1, "E", "I") && !contains(value, index - 1, 3, "RGY", "OGY") |==> false
1873:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):441:(contains(value, index + 1, 2, "ER") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, "DANGER", "RANGER", "MANGER") && !contains(value, index - 1, 1, "E", "I") && !contains(value, index - 1, 3, "RGY", "OGY") |==> (contains(value, index + 1, 2, "ER") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, "DANGER", "RANGER", "MANGER") && !contains(value, index - 1, 1, "E", "I")
1874:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):445:(contains(value, index + 1, 2, "ER") || charAt(value, index + 1) == 'Y') && !contains(value, 0, 6, "DANGER", "RANGER", "MANGER") && !contains(value, index - 1, 1, "E", "I") && !contains(value, index - 1, 3, "RGY", "OGY") |==> !contains(value, index - 1, 3, "RGY", "OGY")
1875:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):447:result.append('K', 'J') |==> <NO-OP>
1876:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):448:2 |==> 0
1877:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):448:2 |==> -2
1878:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):448:index += 2 |==> <NO-OP>
1879:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):449:1 |==> 0
1880:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):449:1 |==> -1
1881:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):449:index + 1 |==> index % 1
1882:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):449:index + 1 |==> index * 1
1883:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):449:index + 1 |==> index - 1
1884:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):449:index + 1 |==> index / 1
1885:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):449:1 |==> 0
1886:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):449:1 |==> -1
1887:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):450:1 |==> 0
1888:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):450:1 |==> -1
1889:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):450:index - 1 |==> index % 1
1890:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):450:index - 1 |==> index * 1
1891:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):450:index - 1 |==> index + 1
1892:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):450:index - 1 |==> index / 1
1893:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):450:4 |==> 0
1894:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):450:4 |==> -4
1895:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):449:contains(value, index + 1, 1, "E", "I", "Y") || contains(value, index - 1, 4, "AGGI", "OGGI") |==> contains(value, index + 1, 1, "E", "I", "Y") != contains(value, index - 1, 4, "AGGI", "OGGI")
1896:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):449:contains(value, index + 1, 1, "E", "I", "Y") || contains(value, index - 1, 4, "AGGI", "OGGI") |==> contains(value, index + 1, 1, "E", "I", "Y")
1897:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):450:contains(value, index + 1, 1, "E", "I", "Y") || contains(value, index - 1, 4, "AGGI", "OGGI") |==> contains(value, index - 1, 4, "AGGI", "OGGI")
1898:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):449:contains(value, index + 1, 1, "E", "I", "Y") || contains(value, index - 1, 4, "AGGI", "OGGI") |==> true
1899:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):452:0 |==> 1
1900:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):452:0 |==> -1
1901:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):452:4 |==> 0
1902:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):452:4 |==> -4
1903:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):452:0 |==> 1
1904:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):452:0 |==> -1
1905:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):452:3 |==> 0
1906:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):452:3 |==> -3
1907:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):452:contains(value, 0, 4, "VAN ", "VON ") || contains(value, 0, 3, "SCH") |==> contains(value, 0, 4, "VAN ", "VON ") != contains(value, 0, 3, "SCH")
1908:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):452:contains(value, 0, 4, "VAN ", "VON ") || contains(value, 0, 3, "SCH") |==> contains(value, 0, 4, "VAN ", "VON ")
1909:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):452:contains(value, 0, 4, "VAN ", "VON ") || contains(value, 0, 3, "SCH") |==> contains(value, 0, 3, "SCH")
1910:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):452:contains(value, 0, 4, "VAN ", "VON ") || contains(value, 0, 3, "SCH") |==> true
1911:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):452:1 |==> 0
1912:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):452:1 |==> -1
1913:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):452:index + 1 |==> index % 1
1914:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):452:index + 1 |==> index * 1
1915:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):452:index + 1 |==> index - 1
1916:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):452:index + 1 |==> index / 1
1917:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):452:2 |==> 0
1918:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):452:2 |==> -2
1919:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):452:(contains(value, 0, 4, "VAN ", "VON ") || contains(value, 0, 3, "SCH")) || contains(value, index + 1, 2, "ET") |==> (contains(value, 0, 4, "VAN ", "VON ") || contains(value, 0, 3, "SCH")) != contains(value, index + 1, 2, "ET")
1920:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):452:(contains(value, 0, 4, "VAN ", "VON ") || contains(value, 0, 3, "SCH")) || contains(value, index + 1, 2, "ET") |==> (contains(value, 0, 4, "VAN ", "VON ") || contains(value, 0, 3, "SCH"))
1921:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):452:(contains(value, 0, 4, "VAN ", "VON ") || contains(value, 0, 3, "SCH")) || contains(value, index + 1, 2, "ET") |==> contains(value, index + 1, 2, "ET")
1922:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):452:(contains(value, 0, 4, "VAN ", "VON ") || contains(value, 0, 3, "SCH")) || contains(value, index + 1, 2, "ET") |==> true
1923:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):454:result.append('K') |==> <NO-OP>
1924:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):455:1 |==> 0
1925:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):455:1 |==> -1
1926:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):455:index + 1 |==> index % 1
1927:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):455:index + 1 |==> index * 1
1928:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):455:index + 1 |==> index - 1
1929:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):455:index + 1 |==> index / 1
1930:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):455:4 |==> 0
1931:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):455:4 |==> -4
1932:COR:contains(value, index + 1, 4, "IER"):TRUE:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):455:contains(value, index + 1, 4, "IER") |==> false
1933:COR:contains(value, index + 1, 4, "IER"):FALSE:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):455:contains(value, index + 1, 4, "IER") |==> true
1934:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):456:result.append('J') |==> <NO-OP>
1935:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):458:result.append('J', 'K') |==> <NO-OP>
1936:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):460:2 |==> 0
1937:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):460:2 |==> -2
1938:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):460:index += 2 |==> <NO-OP>
1939:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):461:1 |==> 0
1940:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):461:1 |==> -1
1941:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):461:index + 1 |==> index % 1
1942:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):461:index + 1 |==> index * 1
1943:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):461:index + 1 |==> index - 1
1944:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):461:index + 1 |==> index / 1
1945:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):461:charAt(value, index + 1) == 'G' |==> charAt(value, index + 1) <= 'G'
1946:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):461:charAt(value, index + 1) == 'G' |==> charAt(value, index + 1) >= 'G'
1947:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):461:charAt(value, index + 1) == 'G' |==> false
1948:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):462:2 |==> 0
1949:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):462:2 |==> -2
1950:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):462:index += 2 |==> <NO-OP>
1951:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):463:result.append('K') |==> <NO-OP>
1952:STD:<INC>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):465:index++ |==> <NO-OP>
1953:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):466:result.append('K') |==> <NO-OP>
1954:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):477:0 |==> 1
1955:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):477:0 |==> -1
1956:ROR:>(int,int):!=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):477:index > 0 |==> index != 0
1957:ROR:>(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):477:index > 0 |==> index >= 0
1958:ROR:>(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):477:index > 0 |==> false
1959:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):477:1 |==> 0
1960:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):477:1 |==> -1
1961:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):477:index - 1 |==> index % 1
1962:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):477:index - 1 |==> index * 1
1963:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):477:index - 1 |==> index + 1
1964:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):477:index - 1 |==> index / 1
1965:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):477:index > 0 && !isVowel(charAt(value, index - 1)) |==> index > 0 == !isVowel(charAt(value, index - 1))
1966:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):477:index > 0 && !isVowel(charAt(value, index - 1)) |==> false
1967:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):477:index > 0 && !isVowel(charAt(value, index - 1)) |==> index > 0
1968:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):477:index > 0 && !isVowel(charAt(value, index - 1)) |==> !isVowel(charAt(value, index - 1))
1969:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):478:result.append('K') |==> <NO-OP>
1970:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):479:2 |==> 0
1971:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):479:2 |==> -2
1972:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):479:index += 2 |==> <NO-OP>
1973:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):480:0 |==> 1
1974:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):480:0 |==> -1
1975:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):480:index == 0 |==> index <= 0
1976:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):480:index == 0 |==> index >= 0
1977:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):480:index == 0 |==> false
1978:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):481:2 |==> 0
1979:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):481:2 |==> -2
1980:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):481:index + 2 |==> index % 2
1981:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):481:index + 2 |==> index * 2
1982:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):481:index + 2 |==> index - 2
1983:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):481:index + 2 |==> index / 2
1984:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):481:charAt(value, index + 2) == 'I' |==> charAt(value, index + 2) <= 'I'
1985:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):481:charAt(value, index + 2) == 'I' |==> charAt(value, index + 2) >= 'I'
1986:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):481:charAt(value, index + 2) == 'I' |==> false
1987:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):482:result.append('J') |==> <NO-OP>
1988:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):484:result.append('K') |==> <NO-OP>
1989:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):486:2 |==> 0
1990:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):486:2 |==> -2
1991:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):486:index += 2 |==> <NO-OP>
1992:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):487:1 |==> 0
1993:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):487:1 |==> -1
1994:ROR:>(int,int):!=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):487:index > 1 |==> index != 1
1995:ROR:>(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):487:index > 1 |==> index >= 1
1996:ROR:>(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):487:index > 1 |==> false
1997:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):487:2 |==> 0
1998:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):487:2 |==> -2
1999:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):487:index - 2 |==> index % 2
2000:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):487:index - 2 |==> index * 2
2001:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):487:index - 2 |==> index + 2
2002:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):487:index - 2 |==> index / 2
2003:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):487:1 |==> 0
2004:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):487:1 |==> -1
2005:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):487:index > 1 && contains(value, index - 2, 1, "B", "H", "D") |==> index > 1 == contains(value, index - 2, 1, "B", "H", "D")
2006:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):487:index > 1 && contains(value, index - 2, 1, "B", "H", "D") |==> false
2007:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):487:index > 1 && contains(value, index - 2, 1, "B", "H", "D") |==> index > 1
2008:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):487:index > 1 && contains(value, index - 2, 1, "B", "H", "D") |==> contains(value, index - 2, 1, "B", "H", "D")
2009:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):488:2 |==> 0
2010:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):488:2 |==> -2
2011:ROR:>(int,int):!=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):488:index > 2 |==> index != 2
2012:ROR:>(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):488:index > 2 |==> index >= 2
2013:ROR:>(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):488:index > 2 |==> false
2014:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):488:3 |==> 0
2015:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):488:3 |==> -3
2016:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):488:index - 3 |==> index % 3
2017:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):488:index - 3 |==> index * 3
2018:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):488:index - 3 |==> index + 3
2019:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):488:index - 3 |==> index / 3
2020:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):488:1 |==> 0
2021:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):488:1 |==> -1
2022:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):488:index > 2 && contains(value, index - 3, 1, "B", "H", "D") |==> index > 2 == contains(value, index - 3, 1, "B", "H", "D")
2023:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):488:index > 2 && contains(value, index - 3, 1, "B", "H", "D") |==> false
2024:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):488:index > 2 && contains(value, index - 3, 1, "B", "H", "D") |==> index > 2
2025:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):488:index > 2 && contains(value, index - 3, 1, "B", "H", "D") |==> contains(value, index - 3, 1, "B", "H", "D")
2026:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):487:(index > 1 && contains(value, index - 2, 1, "B", "H", "D")) || (index > 2 && contains(value, index - 3, 1, "B", "H", "D")) |==> (index > 1 && contains(value, index - 2, 1, "B", "H", "D")) != (index > 2 && contains(value, index - 3, 1, "B", "H", "D"))
2027:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):487:(index > 1 && contains(value, index - 2, 1, "B", "H", "D")) || (index > 2 && contains(value, index - 3, 1, "B", "H", "D")) |==> (index > 1 && contains(value, index - 2, 1, "B", "H", "D"))
2028:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):488:(index > 1 && contains(value, index - 2, 1, "B", "H", "D")) || (index > 2 && contains(value, index - 3, 1, "B", "H", "D")) |==> (index > 2 && contains(value, index - 3, 1, "B", "H", "D"))
2029:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):487:(index > 1 && contains(value, index - 2, 1, "B", "H", "D")) || (index > 2 && contains(value, index - 3, 1, "B", "H", "D")) |==> true
2030:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):489:3 |==> 0
2031:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):489:3 |==> -3
2032:ROR:>(int,int):!=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):489:index > 3 |==> index != 3
2033:ROR:>(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):489:index > 3 |==> index >= 3
2034:ROR:>(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):489:index > 3 |==> false
2035:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):489:4 |==> 0
2036:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):489:4 |==> -4
2037:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):489:index - 4 |==> index % 4
2038:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):489:index - 4 |==> index * 4
2039:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):489:index - 4 |==> index + 4
2040:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):489:index - 4 |==> index / 4
2041:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):489:1 |==> 0
2042:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):489:1 |==> -1
2043:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):489:index > 3 && contains(value, index - 4, 1, "B", "H") |==> index > 3 == contains(value, index - 4, 1, "B", "H")
2044:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):489:index > 3 && contains(value, index - 4, 1, "B", "H") |==> false
2045:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):489:index > 3 && contains(value, index - 4, 1, "B", "H") |==> index > 3
2046:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):489:index > 3 && contains(value, index - 4, 1, "B", "H") |==> contains(value, index - 4, 1, "B", "H")
2047:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):487:(index > 1 && contains(value, index - 2, 1, "B", "H", "D")) || (index > 2 && contains(value, index - 3, 1, "B", "H", "D")) || (index > 3 && contains(value, index - 4, 1, "B", "H")) |==> ((index > 1 && contains(value, index - 2, 1, "B", "H", "D")) || (index > 2 && contains(value, index - 3, 1, "B", "H", "D"))) != (index > 3 && contains(value, index - 4, 1, "B", "H"))
2048:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):487:(index > 1 && contains(value, index - 2, 1, "B", "H", "D")) || (index > 2 && contains(value, index - 3, 1, "B", "H", "D")) || (index > 3 && contains(value, index - 4, 1, "B", "H")) |==> (index > 1 && contains(value, index - 2, 1, "B", "H", "D")) || (index > 2 && contains(value, index - 3, 1, "B", "H", "D"))
2049:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):489:(index > 1 && contains(value, index - 2, 1, "B", "H", "D")) || (index > 2 && contains(value, index - 3, 1, "B", "H", "D")) || (index > 3 && contains(value, index - 4, 1, "B", "H")) |==> (index > 3 && contains(value, index - 4, 1, "B", "H"))
2050:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):488:(index > 1 && contains(value, index - 2, 1, "B", "H", "D")) || (index > 2 && contains(value, index - 3, 1, "B", "H", "D")) || (index > 3 && contains(value, index - 4, 1, "B", "H")) |==> true
2051:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):491:2 |==> 0
2052:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):491:2 |==> -2
2053:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):491:index += 2 |==> <NO-OP>
2054:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):493:2 |==> 0
2055:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):493:2 |==> -2
2056:ROR:>(int,int):!=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):493:index > 2 |==> index != 2
2057:ROR:>(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):493:index > 2 |==> index >= 2
2058:ROR:>(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):493:index > 2 |==> false
2059:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):493:1 |==> 0
2060:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):493:1 |==> -1
2061:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):493:index - 1 |==> index % 1
2062:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):493:index - 1 |==> index * 1
2063:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):493:index - 1 |==> index + 1
2064:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):493:index - 1 |==> index / 1
2065:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):493:charAt(value, index - 1) == 'U' |==> charAt(value, index - 1) <= 'U'
2066:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):493:charAt(value, index - 1) == 'U' |==> charAt(value, index - 1) >= 'U'
2067:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):493:charAt(value, index - 1) == 'U' |==> false
2068:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):493:index > 2 && charAt(value, index - 1) == 'U' |==> index > 2 == (charAt(value, index - 1) == 'U')
2069:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):493:index > 2 && charAt(value, index - 1) == 'U' |==> false
2070:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):493:index > 2 && charAt(value, index - 1) == 'U' |==> index > 2
2071:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):493:index > 2 && charAt(value, index - 1) == 'U' |==> charAt(value, index - 1) == 'U'
2072:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):494:3 |==> 0
2073:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):494:3 |==> -3
2074:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):494:index - 3 |==> index % 3
2075:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):494:index - 3 |==> index * 3
2076:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):494:index - 3 |==> index + 3
2077:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):494:index - 3 |==> index / 3
2078:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):494:1 |==> 0
2079:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):494:1 |==> -1
2080:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):493:index > 2 && charAt(value, index - 1) == 'U' && contains(value, index - 3, 1, "C", "G", "L", "R", "T") |==> (index > 2 && charAt(value, index - 1) == 'U') == contains(value, index - 3, 1, "C", "G", "L", "R", "T")
2081:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):493:index > 2 && charAt(value, index - 1) == 'U' && contains(value, index - 3, 1, "C", "G", "L", "R", "T") |==> false
2082:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):493:index > 2 && charAt(value, index - 1) == 'U' && contains(value, index - 3, 1, "C", "G", "L", "R", "T") |==> index > 2 && charAt(value, index - 1) == 'U'
2083:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):494:index > 2 && charAt(value, index - 1) == 'U' && contains(value, index - 3, 1, "C", "G", "L", "R", "T") |==> contains(value, index - 3, 1, "C", "G", "L", "R", "T")
2084:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):496:result.append('F') |==> <NO-OP>
2085:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):497:0 |==> 1
2086:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):497:0 |==> -1
2087:ROR:>(int,int):!=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):497:index > 0 |==> index != 0
2088:ROR:>(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):497:index > 0 |==> index >= 0
2089:ROR:>(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):497:index > 0 |==> false
2090:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):497:1 |==> 0
2091:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):497:1 |==> -1
2092:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):497:index - 1 |==> index % 1
2093:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):497:index - 1 |==> index * 1
2094:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):497:index - 1 |==> index + 1
2095:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):497:index - 1 |==> index / 1
2096:ROR:!=(int,int):<(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):497:charAt(value, index - 1) != 'I' |==> charAt(value, index - 1) < 'I'
2097:ROR:!=(int,int):>(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):497:charAt(value, index - 1) != 'I' |==> charAt(value, index - 1) > 'I'
2098:ROR:!=(int,int):TRUE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):497:charAt(value, index - 1) != 'I' |==> true
2099:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):497:index > 0 && charAt(value, index - 1) != 'I' |==> index > 0 == (charAt(value, index - 1) != 'I')
2100:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):497:index > 0 && charAt(value, index - 1) != 'I' |==> false
2101:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):497:index > 0 && charAt(value, index - 1) != 'I' |==> index > 0
2102:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):497:index > 0 && charAt(value, index - 1) != 'I' |==> charAt(value, index - 1) != 'I'
2103:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):498:result.append('K') |==> <NO-OP>
2104:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):500:2 |==> 0
2105:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):500:2 |==> -2
2106:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):500:index += 2 |==> <NO-OP>
2107:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):512:0 |==> 1
2108:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):512:0 |==> -1
2109:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):512:index == 0 |==> index <= 0
2110:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):512:index == 0 |==> index >= 0
2111:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):512:index == 0 |==> false
2112:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):512:1 |==> 0
2113:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):512:1 |==> -1
2114:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):512:index - 1 |==> index % 1
2115:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):512:index - 1 |==> index * 1
2116:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):512:index - 1 |==> index + 1
2117:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):512:index - 1 |==> index / 1
2118:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):512:index == 0 || isVowel(charAt(value, index - 1)) |==> index == 0 != isVowel(charAt(value, index - 1))
2119:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):512:index == 0 || isVowel(charAt(value, index - 1)) |==> index == 0
2120:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):512:index == 0 || isVowel(charAt(value, index - 1)) |==> isVowel(charAt(value, index - 1))
2121:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):512:index == 0 || isVowel(charAt(value, index - 1)) |==> true
2122:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):513:1 |==> 0
2123:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):513:1 |==> -1
2124:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):513:index + 1 |==> index % 1
2125:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):513:index + 1 |==> index * 1
2126:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):513:index + 1 |==> index - 1
2127:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):513:index + 1 |==> index / 1
2128:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):512:(index == 0 || isVowel(charAt(value, index - 1))) && isVowel(charAt(value, index + 1)) |==> (index == 0 || isVowel(charAt(value, index - 1))) == isVowel(charAt(value, index + 1))
2129:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):512:(index == 0 || isVowel(charAt(value, index - 1))) && isVowel(charAt(value, index + 1)) |==> false
2130:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):512:(index == 0 || isVowel(charAt(value, index - 1))) && isVowel(charAt(value, index + 1)) |==> (index == 0 || isVowel(charAt(value, index - 1)))
2131:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):513:(index == 0 || isVowel(charAt(value, index - 1))) && isVowel(charAt(value, index + 1)) |==> isVowel(charAt(value, index + 1))
2132:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):514:result.append('H') |==> <NO-OP>
2133:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):515:2 |==> 0
2134:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):515:2 |==> -2
2135:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):515:index += 2 |==> <NO-OP>
2136:STD:<INC>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):518:index++ |==> <NO-OP>
2137:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):528:4 |==> 0
2138:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):528:4 |==> -4
2139:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):528:0 |==> 1
2140:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):528:0 |==> -1
2141:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):528:4 |==> 0
2142:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):528:4 |==> -4
2143:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):528:contains(value, index, 4, "JOSE") || contains(value, 0, 4, "SAN ") |==> contains(value, index, 4, "JOSE") != contains(value, 0, 4, "SAN ")
2144:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):528:contains(value, index, 4, "JOSE") || contains(value, 0, 4, "SAN ") |==> contains(value, index, 4, "JOSE")
2145:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):528:contains(value, index, 4, "JOSE") || contains(value, 0, 4, "SAN ") |==> contains(value, 0, 4, "SAN ")
2146:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):528:contains(value, index, 4, "JOSE") || contains(value, 0, 4, "SAN ") |==> true
2147:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):530:0 |==> 1
2148:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):530:0 |==> -1
2149:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):530:index == 0 |==> index <= 0
2150:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):530:index == 0 |==> index >= 0
2151:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):530:index == 0 |==> false
2152:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):530:4 |==> 0
2153:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):530:4 |==> -4
2154:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):530:index + 4 |==> index % 4
2155:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):530:index + 4 |==> index * 4
2156:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):530:index + 4 |==> index - 4
2157:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):530:index + 4 |==> index / 4
2158:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):530:charAt(value, index + 4) == ' ' |==> charAt(value, index + 4) <= ' '
2159:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):530:charAt(value, index + 4) == ' ' |==> charAt(value, index + 4) >= ' '
2160:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):530:charAt(value, index + 4) == ' ' |==> false
2161:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):530:index == 0 && (charAt(value, index + 4) == ' ') |==> index == 0 == (charAt(value, index + 4) == ' ')
2162:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):530:index == 0 && (charAt(value, index + 4) == ' ') |==> false
2163:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):530:index == 0 && (charAt(value, index + 4) == ' ') |==> index == 0
2164:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):530:index == 0 && (charAt(value, index + 4) == ' ') |==> (charAt(value, index + 4) == ' ')
2165:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):531:4 |==> 0
2166:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):531:4 |==> -4
2167:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):531:value.length() == 4 |==> value.length() <= 4
2168:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):531:value.length() == 4 |==> value.length() >= 4
2169:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):531:value.length() == 4 |==> false
2170:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):530:index == 0 && (charAt(value, index + 4) == ' ') || value.length() == 4 |==> (index == 0 && (charAt(value, index + 4) == ' ')) != (value.length() == 4)
2171:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):530:index == 0 && (charAt(value, index + 4) == ' ') || value.length() == 4 |==> index == 0 && (charAt(value, index + 4) == ' ')
2172:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):531:index == 0 && (charAt(value, index + 4) == ' ') || value.length() == 4 |==> value.length() == 4
2173:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):530:index == 0 && (charAt(value, index + 4) == ' ') || value.length() == 4 |==> true
2174:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):531:0 |==> 1
2175:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):531:0 |==> -1
2176:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):531:4 |==> 0
2177:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):531:4 |==> -4
2178:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):530:(index == 0 && (charAt(value, index + 4) == ' ') || value.length() == 4) || contains(value, 0, 4, "SAN ") |==> (index == 0 && (charAt(value, index + 4) == ' ') || value.length() == 4) != contains(value, 0, 4, "SAN ")
2179:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):530:(index == 0 && (charAt(value, index + 4) == ' ') || value.length() == 4) || contains(value, 0, 4, "SAN ") |==> (index == 0 && (charAt(value, index + 4) == ' ') || value.length() == 4)
2180:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):531:(index == 0 && (charAt(value, index + 4) == ' ') || value.length() == 4) || contains(value, 0, 4, "SAN ") |==> contains(value, 0, 4, "SAN ")
2181:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):531:(index == 0 && (charAt(value, index + 4) == ' ') || value.length() == 4) || contains(value, 0, 4, "SAN ") |==> true
2182:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):532:result.append('H') |==> <NO-OP>
2183:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):534:result.append('J', 'H') |==> <NO-OP>
2184:STD:<INC>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):536:index++ |==> <NO-OP>
2185:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):538:0 |==> 1
2186:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):538:0 |==> -1
2187:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):538:index == 0 |==> index <= 0
2188:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):538:index == 0 |==> index >= 0
2189:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):538:index == 0 |==> false
2190:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):538:4 |==> 0
2191:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):538:4 |==> -4
2192:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):538:index == 0 && !contains(value, index, 4, "JOSE") |==> index == 0 == !contains(value, index, 4, "JOSE")
2193:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):538:index == 0 && !contains(value, index, 4, "JOSE") |==> false
2194:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):538:index == 0 && !contains(value, index, 4, "JOSE") |==> index == 0
2195:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):538:index == 0 && !contains(value, index, 4, "JOSE") |==> !contains(value, index, 4, "JOSE")
2196:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):539:result.append('J', 'A') |==> <NO-OP>
2197:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):540:1 |==> 0
2198:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):540:1 |==> -1
2199:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):540:index - 1 |==> index % 1
2200:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):540:index - 1 |==> index * 1
2201:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):540:index - 1 |==> index + 1
2202:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):540:index - 1 |==> index / 1
2203:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):540:isVowel(charAt(value, index - 1)) && !slavoGermanic |==> isVowel(charAt(value, index - 1)) == !slavoGermanic
2204:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):540:isVowel(charAt(value, index - 1)) && !slavoGermanic |==> false
2205:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):540:isVowel(charAt(value, index - 1)) && !slavoGermanic |==> isVowel(charAt(value, index - 1))
2206:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):540:isVowel(charAt(value, index - 1)) && !slavoGermanic |==> !slavoGermanic
2207:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):541:1 |==> 0
2208:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):541:1 |==> -1
2209:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):541:index + 1 |==> index % 1
2210:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):541:index + 1 |==> index * 1
2211:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):541:index + 1 |==> index - 1
2212:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):541:index + 1 |==> index / 1
2213:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):541:charAt(value, index + 1) == 'A' |==> charAt(value, index + 1) <= 'A'
2214:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):541:charAt(value, index + 1) == 'A' |==> charAt(value, index + 1) >= 'A'
2215:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):541:charAt(value, index + 1) == 'A' |==> false
2216:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):541:1 |==> 0
2217:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):541:1 |==> -1
2218:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):541:index + 1 |==> index % 1
2219:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):541:index + 1 |==> index * 1
2220:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):541:index + 1 |==> index - 1
2221:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):541:index + 1 |==> index / 1
2222:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):541:charAt(value, index + 1) == 'O' |==> charAt(value, index + 1) <= 'O'
2223:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):541:charAt(value, index + 1) == 'O' |==> charAt(value, index + 1) >= 'O'
2224:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):541:charAt(value, index + 1) == 'O' |==> false
2225:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):541:charAt(value, index + 1) == 'A' || charAt(value, index + 1) == 'O' |==> charAt(value, index + 1) == 'A' != (charAt(value, index + 1) == 'O')
2226:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):541:charAt(value, index + 1) == 'A' || charAt(value, index + 1) == 'O' |==> charAt(value, index + 1) == 'A'
2227:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):541:charAt(value, index + 1) == 'A' || charAt(value, index + 1) == 'O' |==> charAt(value, index + 1) == 'O'
2228:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):541:charAt(value, index + 1) == 'A' || charAt(value, index + 1) == 'O' |==> true
2229:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):540:isVowel(charAt(value, index - 1)) && !slavoGermanic && (charAt(value, index + 1) == 'A' || charAt(value, index + 1) == 'O') |==> (isVowel(charAt(value, index - 1)) && !slavoGermanic) == (charAt(value, index + 1) == 'A' || charAt(value, index + 1) == 'O')
2230:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):540:isVowel(charAt(value, index - 1)) && !slavoGermanic && (charAt(value, index + 1) == 'A' || charAt(value, index + 1) == 'O') |==> false
2231:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):540:isVowel(charAt(value, index - 1)) && !slavoGermanic && (charAt(value, index + 1) == 'A' || charAt(value, index + 1) == 'O') |==> isVowel(charAt(value, index - 1)) && !slavoGermanic
2232:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):541:isVowel(charAt(value, index - 1)) && !slavoGermanic && (charAt(value, index + 1) == 'A' || charAt(value, index + 1) == 'O') |==> (charAt(value, index + 1) == 'A' || charAt(value, index + 1) == 'O')
2233:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):542:result.append('J', 'H') |==> <NO-OP>
2234:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):543:1 |==> 0
2235:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):543:1 |==> -1
2236:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):543:value.length() - 1 |==> value.length() % 1
2237:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):543:value.length() - 1 |==> value.length() * 1
2238:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):543:value.length() - 1 |==> value.length() + 1
2239:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):543:value.length() - 1 |==> value.length() / 1
2240:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):543:index == value.length() - 1 |==> index <= value.length() - 1
2241:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):543:index == value.length() - 1 |==> index >= value.length() - 1
2242:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):543:index == value.length() - 1 |==> false
2243:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):544:result.append('J', ' ') |==> <NO-OP>
2244:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):545:1 |==> 0
2245:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):545:1 |==> -1
2246:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):545:index + 1 |==> index % 1
2247:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):545:index + 1 |==> index * 1
2248:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):545:index + 1 |==> index - 1
2249:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):545:index + 1 |==> index / 1
2250:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):545:1 |==> 0
2251:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):545:1 |==> -1
2252:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):545:1 |==> 0
2253:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):545:1 |==> -1
2254:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):545:index - 1 |==> index % 1
2255:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):545:index - 1 |==> index * 1
2256:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):545:index - 1 |==> index + 1
2257:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):545:index - 1 |==> index / 1
2258:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):545:1 |==> 0
2259:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):545:1 |==> -1
2260:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):545:!contains(value, index + 1, 1, L_T_K_S_N_M_B_Z) && !contains(value, index - 1, 1, "S", "K", "L") |==> !contains(value, index + 1, 1, L_T_K_S_N_M_B_Z) == !contains(value, index - 1, 1, "S", "K", "L")
2261:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):545:!contains(value, index + 1, 1, L_T_K_S_N_M_B_Z) && !contains(value, index - 1, 1, "S", "K", "L") |==> false
2262:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):545:!contains(value, index + 1, 1, L_T_K_S_N_M_B_Z) && !contains(value, index - 1, 1, "S", "K", "L") |==> !contains(value, index + 1, 1, L_T_K_S_N_M_B_Z)
2263:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):545:!contains(value, index + 1, 1, L_T_K_S_N_M_B_Z) && !contains(value, index - 1, 1, "S", "K", "L") |==> !contains(value, index - 1, 1, "S", "K", "L")
2264:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):546:result.append('J') |==> <NO-OP>
2265:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):549:1 |==> 0
2266:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):549:1 |==> -1
2267:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):549:index + 1 |==> index % 1
2268:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):549:index + 1 |==> index * 1
2269:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):549:index + 1 |==> index - 1
2270:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):549:index + 1 |==> index / 1
2271:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):549:charAt(value, index + 1) == 'J' |==> charAt(value, index + 1) <= 'J'
2272:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):549:charAt(value, index + 1) == 'J' |==> charAt(value, index + 1) >= 'J'
2273:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):549:charAt(value, index + 1) == 'J' |==> false
2274:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):550:2 |==> 0
2275:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):550:2 |==> -2
2276:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):550:index += 2 |==> <NO-OP>
2277:STD:<INC>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):552:index++ |==> <NO-OP>
2278:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleL(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):564:result.append('L') |==> <NO-OP>
2279:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleL(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):565:1 |==> 0
2280:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleL(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):565:1 |==> -1
2281:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleL(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):565:index + 1 |==> index % 1
2282:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleL(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):565:index + 1 |==> index * 1
2283:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleL(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):565:index + 1 |==> index - 1
2284:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleL(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):565:index + 1 |==> index / 1
2285:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleL(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):565:charAt(value, index + 1) == 'L' |==> charAt(value, index + 1) <= 'L'
2286:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleL(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):565:charAt(value, index + 1) == 'L' |==> charAt(value, index + 1) >= 'L'
2287:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleL(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):565:charAt(value, index + 1) == 'L' |==> false
2288:COR:conditionL0(value, index):TRUE:org.apache.commons.codec.language.DoubleMetaphone@handleL(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):566:conditionL0(value, index) |==> false
2289:COR:conditionL0(value, index):FALSE:org.apache.commons.codec.language.DoubleMetaphone@handleL(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):566:conditionL0(value, index) |==> true
2290:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleL(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):567:result.appendAlternate(' ') |==> <NO-OP>
2291:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleL(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):569:2 |==> 0
2292:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleL(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):569:2 |==> -2
2293:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleL(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):569:index += 2 |==> <NO-OP>
2294:STD:<INC>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleL(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):571:index++ |==> <NO-OP>
2295:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):582:1 |==> 0
2296:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):582:1 |==> -1
2297:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):582:index + 1 |==> index % 1
2298:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):582:index + 1 |==> index * 1
2299:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):582:index + 1 |==> index - 1
2300:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):582:index + 1 |==> index / 1
2301:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):582:charAt(value, index + 1) == 'H' |==> charAt(value, index + 1) <= 'H'
2302:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):582:charAt(value, index + 1) == 'H' |==> charAt(value, index + 1) >= 'H'
2303:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):582:charAt(value, index + 1) == 'H' |==> false
2304:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):583:result.append('F') |==> <NO-OP>
2305:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):584:2 |==> 0
2306:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):584:2 |==> -2
2307:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):584:index += 2 |==> <NO-OP>
2308:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):586:result.append('P') |==> <NO-OP>
2309:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):587:1 |==> 0
2310:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):587:1 |==> -1
2311:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):587:index + 1 |==> index % 1
2312:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):587:index + 1 |==> index * 1
2313:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):587:index + 1 |==> index - 1
2314:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):587:index + 1 |==> index / 1
2315:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):587:1 |==> 0
2316:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):587:1 |==> -1
2317:COR:contains(value, index + 1, 1, "P", "B"):TRUE:org.apache.commons.codec.language.DoubleMetaphone@handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):587:contains(value, index + 1, 1, "P", "B") |==> false
2318:COR:contains(value, index + 1, 1, "P", "B"):FALSE:org.apache.commons.codec.language.DoubleMetaphone@handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):587:contains(value, index + 1, 1, "P", "B") |==> true
2319:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):587:2 |==> 0
2320:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):587:2 |==> -2
2321:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):587:index + 2 |==> index % 2
2322:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):587:index + 2 |==> index * 2
2323:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):587:index + 2 |==> index - 2
2324:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):587:index + 2 |==> index / 2
2325:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):587:1 |==> 0
2326:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):587:1 |==> -1
2327:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):587:index + 1 |==> index % 1
2328:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):587:index + 1 |==> index * 1
2329:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):587:index + 1 |==> index - 1
2330:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):587:index + 1 |==> index / 1
2331:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):587:index = contains(value, index + 1, 1, "P", "B") ? index + 2 : index + 1 |==> <NO-OP>
2332:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):599:1 |==> 0
2333:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):599:1 |==> -1
2334:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):599:value.length() - 1 |==> value.length() % 1
2335:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):599:value.length() - 1 |==> value.length() * 1
2336:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):599:value.length() - 1 |==> value.length() + 1
2337:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):599:value.length() - 1 |==> value.length() / 1
2338:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):599:index == value.length() - 1 |==> index <= value.length() - 1
2339:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):599:index == value.length() - 1 |==> index >= value.length() - 1
2340:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):599:index == value.length() - 1 |==> false
2341:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):599:index == value.length() - 1 && !slavoGermanic |==> index == value.length() - 1 == !slavoGermanic
2342:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):599:index == value.length() - 1 && !slavoGermanic |==> false
2343:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):599:index == value.length() - 1 && !slavoGermanic |==> index == value.length() - 1
2344:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):599:index == value.length() - 1 && !slavoGermanic |==> !slavoGermanic
2345:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):600:2 |==> 0
2346:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):600:2 |==> -2
2347:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):600:index - 2 |==> index % 2
2348:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):600:index - 2 |==> index * 2
2349:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):600:index - 2 |==> index + 2
2350:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):600:index - 2 |==> index / 2
2351:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):600:2 |==> 0
2352:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):600:2 |==> -2
2353:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):599:index == value.length() - 1 && !slavoGermanic && contains(value, index - 2, 2, "IE") |==> (index == value.length() - 1 && !slavoGermanic) == contains(value, index - 2, 2, "IE")
2354:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):599:index == value.length() - 1 && !slavoGermanic && contains(value, index - 2, 2, "IE") |==> false
2355:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):599:index == value.length() - 1 && !slavoGermanic && contains(value, index - 2, 2, "IE") |==> index == value.length() - 1 && !slavoGermanic
2356:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):600:index == value.length() - 1 && !slavoGermanic && contains(value, index - 2, 2, "IE") |==> contains(value, index - 2, 2, "IE")
2357:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):601:4 |==> 0
2358:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):601:4 |==> -4
2359:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):601:index - 4 |==> index % 4
2360:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):601:index - 4 |==> index * 4
2361:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):601:index - 4 |==> index + 4
2362:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):601:index - 4 |==> index / 4
2363:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):601:2 |==> 0
2364:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):601:2 |==> -2
2365:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):599:index == value.length() - 1 && !slavoGermanic && contains(value, index - 2, 2, "IE") && !contains(value, index - 4, 2, "ME", "MA") |==> (index == value.length() - 1 && !slavoGermanic && contains(value, index - 2, 2, "IE")) == !contains(value, index - 4, 2, "ME", "MA")
2366:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):600:index == value.length() - 1 && !slavoGermanic && contains(value, index - 2, 2, "IE") && !contains(value, index - 4, 2, "ME", "MA") |==> false
2367:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):599:index == value.length() - 1 && !slavoGermanic && contains(value, index - 2, 2, "IE") && !contains(value, index - 4, 2, "ME", "MA") |==> index == value.length() - 1 && !slavoGermanic && contains(value, index - 2, 2, "IE")
2368:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):601:index == value.length() - 1 && !slavoGermanic && contains(value, index - 2, 2, "IE") && !contains(value, index - 4, 2, "ME", "MA") |==> !contains(value, index - 4, 2, "ME", "MA")
2369:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):602:result.appendAlternate('R') |==> <NO-OP>
2370:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):604:result.append('R') |==> <NO-OP>
2371:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):606:1 |==> 0
2372:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):606:1 |==> -1
2373:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):606:index + 1 |==> index % 1
2374:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):606:index + 1 |==> index * 1
2375:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):606:index + 1 |==> index - 1
2376:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):606:index + 1 |==> index / 1
2377:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):606:charAt(value, index + 1) == 'R' |==> charAt(value, index + 1) <= 'R'
2378:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):606:charAt(value, index + 1) == 'R' |==> charAt(value, index + 1) >= 'R'
2379:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):606:charAt(value, index + 1) == 'R' |==> false
2380:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):606:2 |==> 0
2381:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):606:2 |==> -2
2382:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):606:index + 2 |==> index % 2
2383:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):606:index + 2 |==> index * 2
2384:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):606:index + 2 |==> index - 2
2385:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):606:index + 2 |==> index / 2
2386:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):606:1 |==> 0
2387:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):606:1 |==> -1
2388:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):606:index + 1 |==> index % 1
2389:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):606:index + 1 |==> index * 1
2390:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):606:index + 1 |==> index - 1
2391:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):606:index + 1 |==> index / 1
2392:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):616:1 |==> 0
2393:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):616:1 |==> -1
2394:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):616:index - 1 |==> index % 1
2395:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):616:index - 1 |==> index * 1
2396:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):616:index - 1 |==> index + 1
2397:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):616:index - 1 |==> index / 1
2398:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):616:3 |==> 0
2399:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):616:3 |==> -3
2400:COR:contains(value, index - 1, 3, "ISL", "YSL"):TRUE:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):616:contains(value, index - 1, 3, "ISL", "YSL") |==> false
2401:COR:contains(value, index - 1, 3, "ISL", "YSL"):FALSE:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):616:contains(value, index - 1, 3, "ISL", "YSL") |==> true
2402:STD:<INC>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):618:index++ |==> <NO-OP>
2403:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):619:0 |==> 1
2404:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):619:0 |==> -1
2405:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):619:index == 0 |==> index <= 0
2406:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):619:index == 0 |==> index >= 0
2407:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):619:index == 0 |==> false
2408:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):619:5 |==> 0
2409:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):619:5 |==> -5
2410:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):619:index == 0 && contains(value, index, 5, "SUGAR") |==> index == 0 == contains(value, index, 5, "SUGAR")
2411:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):619:index == 0 && contains(value, index, 5, "SUGAR") |==> false
2412:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):619:index == 0 && contains(value, index, 5, "SUGAR") |==> index == 0
2413:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):619:index == 0 && contains(value, index, 5, "SUGAR") |==> contains(value, index, 5, "SUGAR")
2414:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):621:result.append('X', 'S') |==> <NO-OP>
2415:STD:<INC>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):622:index++ |==> <NO-OP>
2416:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):623:2 |==> 0
2417:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):623:2 |==> -2
2418:COR:contains(value, index, 2, "SH"):TRUE:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):623:contains(value, index, 2, "SH") |==> false
2419:COR:contains(value, index, 2, "SH"):FALSE:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):623:contains(value, index, 2, "SH") |==> true
2420:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):624:1 |==> 0
2421:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):624:1 |==> -1
2422:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):624:index + 1 |==> index % 1
2423:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):624:index + 1 |==> index * 1
2424:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):624:index + 1 |==> index - 1
2425:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):624:index + 1 |==> index / 1
2426:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):624:4 |==> 0
2427:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):624:4 |==> -4
2428:COR:contains(value, index + 1, 4, "HEIM", "HOEK", "HOLM", "HOLZ"):TRUE:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):624:contains(value, index + 1, 4, "HEIM", "HOEK", "HOLM", "HOLZ") |==> false
2429:COR:contains(value, index + 1, 4, "HEIM", "HOEK", "HOLM", "HOLZ"):FALSE:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):624:contains(value, index + 1, 4, "HEIM", "HOEK", "HOLM", "HOLZ") |==> true
2430:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):627:result.append('S') |==> <NO-OP>
2431:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):629:result.append('X') |==> <NO-OP>
2432:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):631:2 |==> 0
2433:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):631:2 |==> -2
2434:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):631:index += 2 |==> <NO-OP>
2435:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):632:3 |==> 0
2436:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):632:3 |==> -3
2437:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):632:4 |==> 0
2438:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):632:4 |==> -4
2439:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):632:contains(value, index, 3, "SIO", "SIA") || contains(value, index, 4, "SIAN") |==> contains(value, index, 3, "SIO", "SIA") != contains(value, index, 4, "SIAN")
2440:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):632:contains(value, index, 3, "SIO", "SIA") || contains(value, index, 4, "SIAN") |==> contains(value, index, 3, "SIO", "SIA")
2441:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):632:contains(value, index, 3, "SIO", "SIA") || contains(value, index, 4, "SIAN") |==> contains(value, index, 4, "SIAN")
2442:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):632:contains(value, index, 3, "SIO", "SIA") || contains(value, index, 4, "SIAN") |==> true
2443:COR:slavoGermanic:TRUE:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):634:slavoGermanic |==> false
2444:COR:slavoGermanic:FALSE:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):634:slavoGermanic |==> true
2445:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):635:result.append('S') |==> <NO-OP>
2446:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):637:result.append('S', 'X') |==> <NO-OP>
2447:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):639:3 |==> 0
2448:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):639:3 |==> -3
2449:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):639:index += 3 |==> <NO-OP>
2450:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):640:0 |==> 1
2451:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):640:0 |==> -1
2452:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):640:index == 0 |==> index <= 0
2453:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):640:index == 0 |==> index >= 0
2454:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):640:index == 0 |==> false
2455:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):640:1 |==> 0
2456:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):640:1 |==> -1
2457:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):640:index + 1 |==> index % 1
2458:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):640:index + 1 |==> index * 1
2459:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):640:index + 1 |==> index - 1
2460:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):640:index + 1 |==> index / 1
2461:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):640:1 |==> 0
2462:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):640:1 |==> -1
2463:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):640:index == 0 && contains(value, index + 1, 1, "M", "N", "L", "W") |==> index == 0 == contains(value, index + 1, 1, "M", "N", "L", "W")
2464:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):640:index == 0 && contains(value, index + 1, 1, "M", "N", "L", "W") |==> false
2465:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):640:index == 0 && contains(value, index + 1, 1, "M", "N", "L", "W") |==> index == 0
2466:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):640:index == 0 && contains(value, index + 1, 1, "M", "N", "L", "W") |==> contains(value, index + 1, 1, "M", "N", "L", "W")
2467:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):640:1 |==> 0
2468:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):640:1 |==> -1
2469:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):640:index + 1 |==> index % 1
2470:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):640:index + 1 |==> index * 1
2471:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):640:index + 1 |==> index - 1
2472:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):640:index + 1 |==> index / 1
2473:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):640:1 |==> 0
2474:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):640:1 |==> -1
2475:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):640:(index == 0 && contains(value, index + 1, 1, "M", "N", "L", "W")) || contains(value, index + 1, 1, "Z") |==> (index == 0 && contains(value, index + 1, 1, "M", "N", "L", "W")) != contains(value, index + 1, 1, "Z")
2476:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):640:(index == 0 && contains(value, index + 1, 1, "M", "N", "L", "W")) || contains(value, index + 1, 1, "Z") |==> (index == 0 && contains(value, index + 1, 1, "M", "N", "L", "W"))
2477:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):640:(index == 0 && contains(value, index + 1, 1, "M", "N", "L", "W")) || contains(value, index + 1, 1, "Z") |==> contains(value, index + 1, 1, "Z")
2478:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):640:(index == 0 && contains(value, index + 1, 1, "M", "N", "L", "W")) || contains(value, index + 1, 1, "Z") |==> true
2479:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):645:result.append('S', 'X') |==> <NO-OP>
2480:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):646:1 |==> 0
2481:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):646:1 |==> -1
2482:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):646:index + 1 |==> index % 1
2483:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):646:index + 1 |==> index * 1
2484:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):646:index + 1 |==> index - 1
2485:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):646:index + 1 |==> index / 1
2486:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):646:1 |==> 0
2487:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):646:1 |==> -1
2488:COR:contains(value, index + 1, 1, "Z"):TRUE:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):646:contains(value, index + 1, 1, "Z") |==> false
2489:COR:contains(value, index + 1, 1, "Z"):FALSE:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):646:contains(value, index + 1, 1, "Z") |==> true
2490:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):646:2 |==> 0
2491:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):646:2 |==> -2
2492:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):646:index + 2 |==> index % 2
2493:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):646:index + 2 |==> index * 2
2494:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):646:index + 2 |==> index - 2
2495:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):646:index + 2 |==> index / 2
2496:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):646:1 |==> 0
2497:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):646:1 |==> -1
2498:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):646:index + 1 |==> index % 1
2499:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):646:index + 1 |==> index * 1
2500:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):646:index + 1 |==> index - 1
2501:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):646:index + 1 |==> index / 1
2502:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):646:index = contains(value, index + 1, 1, "Z") ? index + 2 : index + 1 |==> <NO-OP>
2503:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):647:2 |==> 0
2504:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):647:2 |==> -2
2505:COR:contains(value, index, 2, "SC"):TRUE:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):647:contains(value, index, 2, "SC") |==> false
2506:COR:contains(value, index, 2, "SC"):FALSE:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):647:contains(value, index, 2, "SC") |==> true
2507:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):648:index = handleSC(value, result, index) |==> <NO-OP>
2508:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):650:1 |==> 0
2509:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):650:1 |==> -1
2510:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):650:value.length() - 1 |==> value.length() % 1
2511:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):650:value.length() - 1 |==> value.length() * 1
2512:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):650:value.length() - 1 |==> value.length() + 1
2513:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):650:value.length() - 1 |==> value.length() / 1
2514:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):650:index == value.length() - 1 |==> index <= value.length() - 1
2515:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):650:index == value.length() - 1 |==> index >= value.length() - 1
2516:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):650:index == value.length() - 1 |==> false
2517:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):650:2 |==> 0
2518:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):650:2 |==> -2
2519:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):650:index - 2 |==> index % 2
2520:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):650:index - 2 |==> index * 2
2521:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):650:index - 2 |==> index + 2
2522:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):650:index - 2 |==> index / 2
2523:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):651:2 |==> 0
2524:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):651:2 |==> -2
2525:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):650:index == value.length() - 1 && contains(value, index - 2, 2, "AI", "OI") |==> index == value.length() - 1 == contains(value, index - 2, 2, "AI", "OI")
2526:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):650:index == value.length() - 1 && contains(value, index - 2, 2, "AI", "OI") |==> false
2527:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):650:index == value.length() - 1 && contains(value, index - 2, 2, "AI", "OI") |==> index == value.length() - 1
2528:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):650:index == value.length() - 1 && contains(value, index - 2, 2, "AI", "OI") |==> contains(value, index - 2, 2, "AI", "OI")
2529:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):653:result.appendAlternate('S') |==> <NO-OP>
2530:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):655:result.append('S') |==> <NO-OP>
2531:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):657:1 |==> 0
2532:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):657:1 |==> -1
2533:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):657:index + 1 |==> index % 1
2534:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):657:index + 1 |==> index * 1
2535:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):657:index + 1 |==> index - 1
2536:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):657:index + 1 |==> index / 1
2537:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):657:1 |==> 0
2538:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):657:1 |==> -1
2539:COR:contains(value, index + 1, 1, "S", "Z"):TRUE:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):657:contains(value, index + 1, 1, "S", "Z") |==> false
2540:COR:contains(value, index + 1, 1, "S", "Z"):FALSE:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):657:contains(value, index + 1, 1, "S", "Z") |==> true
2541:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):657:2 |==> 0
2542:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):657:2 |==> -2
2543:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):657:index + 2 |==> index % 2
2544:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):657:index + 2 |==> index * 2
2545:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):657:index + 2 |==> index - 2
2546:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):657:index + 2 |==> index / 2
2547:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):657:1 |==> 0
2548:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):657:1 |==> -1
2549:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):657:index + 1 |==> index % 1
2550:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):657:index + 1 |==> index * 1
2551:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):657:index + 1 |==> index - 1
2552:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):657:index + 1 |==> index / 1
2553:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):657:index = contains(value, index + 1, 1, "S", "Z") ? index + 2 : index + 1 |==> <NO-OP>
2554:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):668:2 |==> 0
2555:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):668:2 |==> -2
2556:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):668:index + 2 |==> index % 2
2557:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):668:index + 2 |==> index * 2
2558:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):668:index + 2 |==> index - 2
2559:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):668:index + 2 |==> index / 2
2560:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):668:charAt(value, index + 2) == 'H' |==> charAt(value, index + 2) <= 'H'
2561:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):668:charAt(value, index + 2) == 'H' |==> charAt(value, index + 2) >= 'H'
2562:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):668:charAt(value, index + 2) == 'H' |==> false
2563:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):670:3 |==> 0
2564:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):670:3 |==> -3
2565:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):670:index + 3 |==> index % 3
2566:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):670:index + 3 |==> index * 3
2567:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):670:index + 3 |==> index - 3
2568:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):670:index + 3 |==> index / 3
2569:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):671:2 |==> 0
2570:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):671:2 |==> -2
2571:COR:contains(value, index + 3, 2, "OO", "ER", "EN", "UY", "ED", "EM"):TRUE:org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):670:contains(value, index + 3, 2, "OO", "ER", "EN", "UY", "ED", "EM") |==> false
2572:COR:contains(value, index + 3, 2, "OO", "ER", "EN", "UY", "ED", "EM"):FALSE:org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):670:contains(value, index + 3, 2, "OO", "ER", "EN", "UY", "ED", "EM") |==> true
2573:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):673:3 |==> 0
2574:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):673:3 |==> -3
2575:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):673:index + 3 |==> index % 3
2576:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):673:index + 3 |==> index * 3
2577:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):673:index + 3 |==> index - 3
2578:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):673:index + 3 |==> index / 3
2579:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):673:2 |==> 0
2580:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):673:2 |==> -2
2581:COR:contains(value, index + 3, 2, "ER", "EN"):TRUE:org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):673:contains(value, index + 3, 2, "ER", "EN") |==> false
2582:COR:contains(value, index + 3, 2, "ER", "EN"):FALSE:org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):673:contains(value, index + 3, 2, "ER", "EN") |==> true
2583:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):675:result.append("X", "SK") |==> <NO-OP>
2584:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):677:result.append("SK") |==> <NO-OP>
2585:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):680:0 |==> 1
2586:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):680:0 |==> -1
2587:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):680:index == 0 |==> index <= 0
2588:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):680:index == 0 |==> index >= 0
2589:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):680:index == 0 |==> false
2590:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):680:3 |==> 0
2591:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):680:3 |==> -3
2592:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):680:index == 0 && !isVowel(charAt(value, 3)) |==> index == 0 == !isVowel(charAt(value, 3))
2593:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):680:index == 0 && !isVowel(charAt(value, 3)) |==> false
2594:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):680:index == 0 && !isVowel(charAt(value, 3)) |==> index == 0
2595:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):680:index == 0 && !isVowel(charAt(value, 3)) |==> !isVowel(charAt(value, 3))
2596:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):680:3 |==> 0
2597:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):680:3 |==> -3
2598:ROR:!=(int,int):<(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):680:charAt(value, 3) != 'W' |==> charAt(value, 3) < 'W'
2599:ROR:!=(int,int):>(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):680:charAt(value, 3) != 'W' |==> charAt(value, 3) > 'W'
2600:ROR:!=(int,int):TRUE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):680:charAt(value, 3) != 'W' |==> true
2601:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):680:index == 0 && !isVowel(charAt(value, 3)) && charAt(value, 3) != 'W' |==> (index == 0 && !isVowel(charAt(value, 3))) == (charAt(value, 3) != 'W')
2602:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):680:index == 0 && !isVowel(charAt(value, 3)) && charAt(value, 3) != 'W' |==> false
2603:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):680:index == 0 && !isVowel(charAt(value, 3)) && charAt(value, 3) != 'W' |==> index == 0 && !isVowel(charAt(value, 3))
2604:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):680:index == 0 && !isVowel(charAt(value, 3)) && charAt(value, 3) != 'W' |==> charAt(value, 3) != 'W'
2605:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):681:result.append('X', 'S') |==> <NO-OP>
2606:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):683:result.append('X') |==> <NO-OP>
2607:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):686:2 |==> 0
2608:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):686:2 |==> -2
2609:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):686:index + 2 |==> index % 2
2610:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):686:index + 2 |==> index * 2
2611:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):686:index + 2 |==> index - 2
2612:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):686:index + 2 |==> index / 2
2613:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):686:1 |==> 0
2614:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):686:1 |==> -1
2615:COR:contains(value, index + 2, 1, "I", "E", "Y"):TRUE:org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):686:contains(value, index + 2, 1, "I", "E", "Y") |==> false
2616:COR:contains(value, index + 2, 1, "I", "E", "Y"):FALSE:org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):686:contains(value, index + 2, 1, "I", "E", "Y") |==> true
2617:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):687:result.append('S') |==> <NO-OP>
2618:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):689:result.append("SK") |==> <NO-OP>
2619:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):691:3 |==> 0
2620:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):691:3 |==> -3
2621:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):691:index + 3 |==> index % 3
2622:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):691:index + 3 |==> index * 3
2623:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):691:index + 3 |==> index - 3
2624:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):691:index + 3 |==> index / 3
2625:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):700:4 |==> 0
2626:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):700:4 |==> -4
2627:COR:contains(value, index, 4, "TION"):TRUE:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):700:contains(value, index, 4, "TION") |==> false
2628:COR:contains(value, index, 4, "TION"):FALSE:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):700:contains(value, index, 4, "TION") |==> true
2629:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):701:result.append('X') |==> <NO-OP>
2630:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):702:3 |==> 0
2631:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):702:3 |==> -3
2632:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):702:index += 3 |==> <NO-OP>
2633:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):703:3 |==> 0
2634:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):703:3 |==> -3
2635:COR:contains(value, index, 3, "TIA", "TCH"):TRUE:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):703:contains(value, index, 3, "TIA", "TCH") |==> false
2636:COR:contains(value, index, 3, "TIA", "TCH"):FALSE:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):703:contains(value, index, 3, "TIA", "TCH") |==> true
2637:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):704:result.append('X') |==> <NO-OP>
2638:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):705:3 |==> 0
2639:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):705:3 |==> -3
2640:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):705:index += 3 |==> <NO-OP>
2641:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):706:2 |==> 0
2642:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):706:2 |==> -2
2643:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):707:3 |==> 0
2644:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):707:3 |==> -3
2645:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):706:contains(value, index, 2, "TH") || contains(value, index, 3, "TTH") |==> contains(value, index, 2, "TH") != contains(value, index, 3, "TTH")
2646:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):706:contains(value, index, 2, "TH") || contains(value, index, 3, "TTH") |==> contains(value, index, 2, "TH")
2647:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):706:contains(value, index, 2, "TH") || contains(value, index, 3, "TTH") |==> contains(value, index, 3, "TTH")
2648:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):706:contains(value, index, 2, "TH") || contains(value, index, 3, "TTH") |==> true
2649:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):708:2 |==> 0
2650:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):708:2 |==> -2
2651:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):708:index + 2 |==> index % 2
2652:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):708:index + 2 |==> index * 2
2653:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):708:index + 2 |==> index - 2
2654:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):708:index + 2 |==> index / 2
2655:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):708:2 |==> 0
2656:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):708:2 |==> -2
2657:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):710:0 |==> 1
2658:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):710:0 |==> -1
2659:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):710:4 |==> 0
2660:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):710:4 |==> -4
2661:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):708:contains(value, index + 2, 2, "OM", "AM") || contains(value, 0, 4, "VAN ", "VON ") |==> contains(value, index + 2, 2, "OM", "AM") != contains(value, 0, 4, "VAN ", "VON ")
2662:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):708:contains(value, index + 2, 2, "OM", "AM") || contains(value, 0, 4, "VAN ", "VON ") |==> contains(value, index + 2, 2, "OM", "AM")
2663:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):710:contains(value, index + 2, 2, "OM", "AM") || contains(value, 0, 4, "VAN ", "VON ") |==> contains(value, 0, 4, "VAN ", "VON ")
2664:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):708:contains(value, index + 2, 2, "OM", "AM") || contains(value, 0, 4, "VAN ", "VON ") |==> true
2665:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):711:0 |==> 1
2666:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):711:0 |==> -1
2667:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):711:3 |==> 0
2668:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):711:3 |==> -3
2669:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):708:contains(value, index + 2, 2, "OM", "AM") || contains(value, 0, 4, "VAN ", "VON ") || contains(value, 0, 3, "SCH") |==> (contains(value, index + 2, 2, "OM", "AM") || contains(value, 0, 4, "VAN ", "VON ")) != contains(value, 0, 3, "SCH")
2670:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):708:contains(value, index + 2, 2, "OM", "AM") || contains(value, 0, 4, "VAN ", "VON ") || contains(value, 0, 3, "SCH") |==> contains(value, index + 2, 2, "OM", "AM") || contains(value, 0, 4, "VAN ", "VON ")
2671:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):711:contains(value, index + 2, 2, "OM", "AM") || contains(value, 0, 4, "VAN ", "VON ") || contains(value, 0, 3, "SCH") |==> contains(value, 0, 3, "SCH")
2672:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):710:contains(value, index + 2, 2, "OM", "AM") || contains(value, 0, 4, "VAN ", "VON ") || contains(value, 0, 3, "SCH") |==> true
2673:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):712:result.append('T') |==> <NO-OP>
2674:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):714:result.append('0', 'T') |==> <NO-OP>
2675:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):716:2 |==> 0
2676:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):716:2 |==> -2
2677:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):716:index += 2 |==> <NO-OP>
2678:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):718:result.append('T') |==> <NO-OP>
2679:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):719:1 |==> 0
2680:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):719:1 |==> -1
2681:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):719:index + 1 |==> index % 1
2682:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):719:index + 1 |==> index * 1
2683:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):719:index + 1 |==> index - 1
2684:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):719:index + 1 |==> index / 1
2685:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):719:1 |==> 0
2686:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):719:1 |==> -1
2687:COR:contains(value, index + 1, 1, "T", "D"):TRUE:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):719:contains(value, index + 1, 1, "T", "D") |==> false
2688:COR:contains(value, index + 1, 1, "T", "D"):FALSE:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):719:contains(value, index + 1, 1, "T", "D") |==> true
2689:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):719:2 |==> 0
2690:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):719:2 |==> -2
2691:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):719:index + 2 |==> index % 2
2692:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):719:index + 2 |==> index * 2
2693:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):719:index + 2 |==> index - 2
2694:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):719:index + 2 |==> index / 2
2695:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):719:1 |==> 0
2696:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):719:1 |==> -1
2697:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):719:index + 1 |==> index % 1
2698:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):719:index + 1 |==> index * 1
2699:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):719:index + 1 |==> index - 1
2700:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):719:index + 1 |==> index / 1
2701:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):719:index = contains(value, index + 1, 1, "T", "D") ? index + 2 : index + 1 |==> <NO-OP>
2702:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):730:2 |==> 0
2703:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):730:2 |==> -2
2704:COR:contains(value, index, 2, "WR"):TRUE:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):730:contains(value, index, 2, "WR") |==> false
2705:COR:contains(value, index, 2, "WR"):FALSE:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):730:contains(value, index, 2, "WR") |==> true
2706:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):732:result.append('R') |==> <NO-OP>
2707:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):733:2 |==> 0
2708:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):733:2 |==> -2
2709:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):733:index += 2 |==> <NO-OP>
2710:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):735:0 |==> 1
2711:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):735:0 |==> -1
2712:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):735:index == 0 |==> index <= 0
2713:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):735:index == 0 |==> index >= 0
2714:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):735:index == 0 |==> false
2715:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):735:1 |==> 0
2716:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):735:1 |==> -1
2717:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):735:index + 1 |==> index % 1
2718:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):735:index + 1 |==> index * 1
2719:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):735:index + 1 |==> index - 1
2720:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):735:index + 1 |==> index / 1
2721:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):736:2 |==> 0
2722:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):736:2 |==> -2
2723:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):735:isVowel(charAt(value, index + 1)) || contains(value, index, 2, "WH") |==> isVowel(charAt(value, index + 1)) != contains(value, index, 2, "WH")
2724:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):735:isVowel(charAt(value, index + 1)) || contains(value, index, 2, "WH") |==> isVowel(charAt(value, index + 1))
2725:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):736:isVowel(charAt(value, index + 1)) || contains(value, index, 2, "WH") |==> contains(value, index, 2, "WH")
2726:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):735:isVowel(charAt(value, index + 1)) || contains(value, index, 2, "WH") |==> true
2727:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):735:index == 0 && (isVowel(charAt(value, index + 1)) || contains(value, index, 2, "WH")) |==> index == 0 == (isVowel(charAt(value, index + 1)) || contains(value, index, 2, "WH"))
2728:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):735:index == 0 && (isVowel(charAt(value, index + 1)) || contains(value, index, 2, "WH")) |==> false
2729:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):735:index == 0 && (isVowel(charAt(value, index + 1)) || contains(value, index, 2, "WH")) |==> index == 0
2730:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):735:index == 0 && (isVowel(charAt(value, index + 1)) || contains(value, index, 2, "WH")) |==> (isVowel(charAt(value, index + 1)) || contains(value, index, 2, "WH"))
2731:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):737:1 |==> 0
2732:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):737:1 |==> -1
2733:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):737:index + 1 |==> index % 1
2734:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):737:index + 1 |==> index * 1
2735:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):737:index + 1 |==> index - 1
2736:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):737:index + 1 |==> index / 1
2737:COR:isVowel(charAt(value, index + 1)):TRUE:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):737:isVowel(charAt(value, index + 1)) |==> false
2738:COR:isVowel(charAt(value, index + 1)):FALSE:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):737:isVowel(charAt(value, index + 1)) |==> true
2739:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):739:result.append('A', 'F') |==> <NO-OP>
2740:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):742:result.append('A') |==> <NO-OP>
2741:STD:<INC>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):744:index++ |==> <NO-OP>
2742:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):745:1 |==> 0
2743:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):745:1 |==> -1
2744:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):745:value.length() - 1 |==> value.length() % 1
2745:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):745:value.length() - 1 |==> value.length() * 1
2746:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):745:value.length() - 1 |==> value.length() + 1
2747:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):745:value.length() - 1 |==> value.length() / 1
2748:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):745:index == value.length() - 1 |==> index <= value.length() - 1
2749:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):745:index == value.length() - 1 |==> index >= value.length() - 1
2750:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):745:index == value.length() - 1 |==> false
2751:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):745:1 |==> 0
2752:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):745:1 |==> -1
2753:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):745:index - 1 |==> index % 1
2754:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):745:index - 1 |==> index * 1
2755:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):745:index - 1 |==> index + 1
2756:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):745:index - 1 |==> index / 1
2757:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):745:index == value.length() - 1 && isVowel(charAt(value, index - 1)) |==> index == value.length() - 1 == isVowel(charAt(value, index - 1))
2758:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):745:index == value.length() - 1 && isVowel(charAt(value, index - 1)) |==> false
2759:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):745:index == value.length() - 1 && isVowel(charAt(value, index - 1)) |==> index == value.length() - 1
2760:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):745:index == value.length() - 1 && isVowel(charAt(value, index - 1)) |==> isVowel(charAt(value, index - 1))
2761:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):746:1 |==> 0
2762:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):746:1 |==> -1
2763:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):746:index - 1 |==> index % 1
2764:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):746:index - 1 |==> index * 1
2765:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):746:index - 1 |==> index + 1
2766:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):746:index - 1 |==> index / 1
2767:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):747:5 |==> 0
2768:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):747:5 |==> -5
2769:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):745:(index == value.length() - 1 && isVowel(charAt(value, index - 1))) || contains(value, index - 1, 5, "EWSKI", "EWSKY", "OWSKI", "OWSKY") |==> (index == value.length() - 1 && isVowel(charAt(value, index - 1))) != contains(value, index - 1, 5, "EWSKI", "EWSKY", "OWSKI", "OWSKY")
2770:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):745:(index == value.length() - 1 && isVowel(charAt(value, index - 1))) || contains(value, index - 1, 5, "EWSKI", "EWSKY", "OWSKI", "OWSKY") |==> (index == value.length() - 1 && isVowel(charAt(value, index - 1)))
2771:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):746:(index == value.length() - 1 && isVowel(charAt(value, index - 1))) || contains(value, index - 1, 5, "EWSKI", "EWSKY", "OWSKI", "OWSKY") |==> contains(value, index - 1, 5, "EWSKI", "EWSKY", "OWSKI", "OWSKY")
2772:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):745:(index == value.length() - 1 && isVowel(charAt(value, index - 1))) || contains(value, index - 1, 5, "EWSKI", "EWSKY", "OWSKI", "OWSKY") |==> true
2773:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):748:0 |==> 1
2774:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):748:0 |==> -1
2775:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):748:3 |==> 0
2776:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):748:3 |==> -3
2777:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):745:(index == value.length() - 1 && isVowel(charAt(value, index - 1))) || contains(value, index - 1, 5, "EWSKI", "EWSKY", "OWSKI", "OWSKY") || contains(value, 0, 3, "SCH") |==> ((index == value.length() - 1 && isVowel(charAt(value, index - 1))) || contains(value, index - 1, 5, "EWSKI", "EWSKY", "OWSKI", "OWSKY")) != contains(value, 0, 3, "SCH")
2778:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):745:(index == value.length() - 1 && isVowel(charAt(value, index - 1))) || contains(value, index - 1, 5, "EWSKI", "EWSKY", "OWSKI", "OWSKY") || contains(value, 0, 3, "SCH") |==> (index == value.length() - 1 && isVowel(charAt(value, index - 1))) || contains(value, index - 1, 5, "EWSKI", "EWSKY", "OWSKI", "OWSKY")
2779:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):748:(index == value.length() - 1 && isVowel(charAt(value, index - 1))) || contains(value, index - 1, 5, "EWSKI", "EWSKY", "OWSKI", "OWSKY") || contains(value, 0, 3, "SCH") |==> contains(value, 0, 3, "SCH")
2780:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):747:(index == value.length() - 1 && isVowel(charAt(value, index - 1))) || contains(value, index - 1, 5, "EWSKI", "EWSKY", "OWSKI", "OWSKY") || contains(value, 0, 3, "SCH") |==> true
2781:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):750:result.appendAlternate('F') |==> <NO-OP>
2782:STD:<INC>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):751:index++ |==> <NO-OP>
2783:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):752:4 |==> 0
2784:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):752:4 |==> -4
2785:COR:contains(value, index, 4, "WICZ", "WITZ"):TRUE:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):752:contains(value, index, 4, "WICZ", "WITZ") |==> false
2786:COR:contains(value, index, 4, "WICZ", "WITZ"):FALSE:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):752:contains(value, index, 4, "WICZ", "WITZ") |==> true
2787:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):754:result.append("TS", "FX") |==> <NO-OP>
2788:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):755:4 |==> 0
2789:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):755:4 |==> -4
2790:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):755:index += 4 |==> <NO-OP>
2791:STD:<INC>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):757:index++ |==> <NO-OP>
2792:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):769:0 |==> 1
2793:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):769:0 |==> -1
2794:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):769:index == 0 |==> index <= 0
2795:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):769:index == 0 |==> index >= 0
2796:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):769:index == 0 |==> false
2797:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):770:result.append('S') |==> <NO-OP>
2798:STD:<INC>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):771:index++ |==> <NO-OP>
2799:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):773:1 |==> 0
2800:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):773:1 |==> -1
2801:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):773:value.length() - 1 |==> value.length() % 1
2802:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):773:value.length() - 1 |==> value.length() * 1
2803:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):773:value.length() - 1 |==> value.length() + 1
2804:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):773:value.length() - 1 |==> value.length() / 1
2805:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):773:index == value.length() - 1 |==> index <= value.length() - 1
2806:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):773:index == value.length() - 1 |==> index >= value.length() - 1
2807:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):773:index == value.length() - 1 |==> false
2808:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):774:3 |==> 0
2809:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):774:3 |==> -3
2810:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):774:index - 3 |==> index % 3
2811:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):774:index - 3 |==> index * 3
2812:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):774:index - 3 |==> index + 3
2813:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):774:index - 3 |==> index / 3
2814:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):774:3 |==> 0
2815:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):774:3 |==> -3
2816:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):775:2 |==> 0
2817:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):775:2 |==> -2
2818:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):775:index - 2 |==> index % 2
2819:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):775:index - 2 |==> index * 2
2820:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):775:index - 2 |==> index + 2
2821:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):775:index - 2 |==> index / 2
2822:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):775:2 |==> 0
2823:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):775:2 |==> -2
2824:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):774:contains(value, index - 3, 3, "IAU", "EAU") || contains(value, index - 2, 2, "AU", "OU") |==> contains(value, index - 3, 3, "IAU", "EAU") != contains(value, index - 2, 2, "AU", "OU")
2825:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):774:contains(value, index - 3, 3, "IAU", "EAU") || contains(value, index - 2, 2, "AU", "OU") |==> contains(value, index - 3, 3, "IAU", "EAU")
2826:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):775:contains(value, index - 3, 3, "IAU", "EAU") || contains(value, index - 2, 2, "AU", "OU") |==> contains(value, index - 2, 2, "AU", "OU")
2827:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):774:contains(value, index - 3, 3, "IAU", "EAU") || contains(value, index - 2, 2, "AU", "OU") |==> true
2828:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):773:(index == value.length() - 1) && (contains(value, index - 3, 3, "IAU", "EAU") || contains(value, index - 2, 2, "AU", "OU")) |==> (index == value.length() - 1) == (contains(value, index - 3, 3, "IAU", "EAU") || contains(value, index - 2, 2, "AU", "OU"))
2829:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):773:(index == value.length() - 1) && (contains(value, index - 3, 3, "IAU", "EAU") || contains(value, index - 2, 2, "AU", "OU")) |==> false
2830:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):773:(index == value.length() - 1) && (contains(value, index - 3, 3, "IAU", "EAU") || contains(value, index - 2, 2, "AU", "OU")) |==> (index == value.length() - 1)
2831:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):774:(index == value.length() - 1) && (contains(value, index - 3, 3, "IAU", "EAU") || contains(value, index - 2, 2, "AU", "OU")) |==> (contains(value, index - 3, 3, "IAU", "EAU") || contains(value, index - 2, 2, "AU", "OU"))
2832:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):777:result.append("KS") |==> <NO-OP>
2833:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):779:1 |==> 0
2834:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):779:1 |==> -1
2835:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):779:index + 1 |==> index % 1
2836:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):779:index + 1 |==> index * 1
2837:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):779:index + 1 |==> index - 1
2838:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):779:index + 1 |==> index / 1
2839:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):779:1 |==> 0
2840:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):779:1 |==> -1
2841:COR:contains(value, index + 1, 1, "C", "X"):TRUE:org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):779:contains(value, index + 1, 1, "C", "X") |==> false
2842:COR:contains(value, index + 1, 1, "C", "X"):FALSE:org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):779:contains(value, index + 1, 1, "C", "X") |==> true
2843:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):779:2 |==> 0
2844:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):779:2 |==> -2
2845:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):779:index + 2 |==> index % 2
2846:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):779:index + 2 |==> index * 2
2847:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):779:index + 2 |==> index - 2
2848:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):779:index + 2 |==> index / 2
2849:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):779:1 |==> 0
2850:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):779:1 |==> -1
2851:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):779:index + 1 |==> index % 1
2852:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):779:index + 1 |==> index * 1
2853:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):779:index + 1 |==> index - 1
2854:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):779:index + 1 |==> index / 1
2855:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int):779:index = contains(value, index + 1, 1, "C", "X") ? index + 2 : index + 1 |==> <NO-OP>
2856:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):789:1 |==> 0
2857:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):789:1 |==> -1
2858:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):789:index + 1 |==> index % 1
2859:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):789:index + 1 |==> index * 1
2860:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):789:index + 1 |==> index - 1
2861:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):789:index + 1 |==> index / 1
2862:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):789:charAt(value, index + 1) == 'H' |==> charAt(value, index + 1) <= 'H'
2863:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):789:charAt(value, index + 1) == 'H' |==> charAt(value, index + 1) >= 'H'
2864:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):789:charAt(value, index + 1) == 'H' |==> false
2865:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):791:result.append('J') |==> <NO-OP>
2866:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):792:2 |==> 0
2867:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):792:2 |==> -2
2868:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):792:index += 2 |==> <NO-OP>
2869:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):794:1 |==> 0
2870:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):794:1 |==> -1
2871:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):794:index + 1 |==> index % 1
2872:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):794:index + 1 |==> index * 1
2873:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):794:index + 1 |==> index - 1
2874:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):794:index + 1 |==> index / 1
2875:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):794:2 |==> 0
2876:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):794:2 |==> -2
2877:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):794:0 |==> 1
2878:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):794:0 |==> -1
2879:ROR:>(int,int):!=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):794:index > 0 |==> index != 0
2880:ROR:>(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):794:index > 0 |==> index >= 0
2881:ROR:>(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):794:index > 0 |==> false
2882:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):794:1 |==> 0
2883:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):794:1 |==> -1
2884:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):794:index - 1 |==> index % 1
2885:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):794:index - 1 |==> index * 1
2886:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):794:index - 1 |==> index + 1
2887:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):794:index - 1 |==> index / 1
2888:ROR:!=(int,int):<(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):794:charAt(value, index - 1) != 'T' |==> charAt(value, index - 1) < 'T'
2889:ROR:!=(int,int):>(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):794:charAt(value, index - 1) != 'T' |==> charAt(value, index - 1) > 'T'
2890:ROR:!=(int,int):TRUE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):794:charAt(value, index - 1) != 'T' |==> true
2891:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):794:index > 0 && charAt(value, index - 1) != 'T' |==> index > 0 == (charAt(value, index - 1) != 'T')
2892:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):794:index > 0 && charAt(value, index - 1) != 'T' |==> false
2893:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):794:index > 0 && charAt(value, index - 1) != 'T' |==> index > 0
2894:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):794:index > 0 && charAt(value, index - 1) != 'T' |==> charAt(value, index - 1) != 'T'
2895:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):794:slavoGermanic && (index > 0 && charAt(value, index - 1) != 'T') |==> slavoGermanic == (index > 0 && charAt(value, index - 1) != 'T')
2896:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):794:slavoGermanic && (index > 0 && charAt(value, index - 1) != 'T') |==> false
2897:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):794:slavoGermanic && (index > 0 && charAt(value, index - 1) != 'T') |==> slavoGermanic
2898:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):794:slavoGermanic && (index > 0 && charAt(value, index - 1) != 'T') |==> (index > 0 && charAt(value, index - 1) != 'T')
2899:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):794:contains(value, index + 1, 2, "ZO", "ZI", "ZA") || (slavoGermanic && (index > 0 && charAt(value, index - 1) != 'T')) |==> contains(value, index + 1, 2, "ZO", "ZI", "ZA") != (slavoGermanic && (index > 0 && charAt(value, index - 1) != 'T'))
2900:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):794:contains(value, index + 1, 2, "ZO", "ZI", "ZA") || (slavoGermanic && (index > 0 && charAt(value, index - 1) != 'T')) |==> contains(value, index + 1, 2, "ZO", "ZI", "ZA")
2901:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):794:contains(value, index + 1, 2, "ZO", "ZI", "ZA") || (slavoGermanic && (index > 0 && charAt(value, index - 1) != 'T')) |==> (slavoGermanic && (index > 0 && charAt(value, index - 1) != 'T'))
2902:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):794:contains(value, index + 1, 2, "ZO", "ZI", "ZA") || (slavoGermanic && (index > 0 && charAt(value, index - 1) != 'T')) |==> true
2903:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):795:result.append("S", "TS") |==> <NO-OP>
2904:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):797:result.append('S') |==> <NO-OP>
2905:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):799:1 |==> 0
2906:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):799:1 |==> -1
2907:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):799:index + 1 |==> index % 1
2908:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):799:index + 1 |==> index * 1
2909:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):799:index + 1 |==> index - 1
2910:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):799:index + 1 |==> index / 1
2911:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):799:charAt(value, index + 1) == 'Z' |==> charAt(value, index + 1) <= 'Z'
2912:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):799:charAt(value, index + 1) == 'Z' |==> charAt(value, index + 1) >= 'Z'
2913:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):799:charAt(value, index + 1) == 'Z' |==> false
2914:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):799:2 |==> 0
2915:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):799:2 |==> -2
2916:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):799:index + 2 |==> index % 2
2917:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):799:index + 2 |==> index * 2
2918:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):799:index + 2 |==> index - 2
2919:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):799:index + 2 |==> index / 2
2920:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):799:1 |==> 0
2921:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):799:1 |==> -1
2922:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):799:index + 1 |==> index % 1
2923:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):799:index + 1 |==> index * 1
2924:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):799:index + 1 |==> index - 1
2925:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):799:index + 1 |==> index / 1
2926:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult,int,boolean):799:index = charAt(value, index + 1) == 'Z' ? index + 2 : index + 1 |==> <NO-OP>
2927:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):810:4 |==> 0
2928:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):810:4 |==> -4
2929:COR:contains(value, index, 4, "CHIA"):TRUE:org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):810:contains(value, index, 4, "CHIA") |==> false
2930:COR:contains(value, index, 4, "CHIA"):FALSE:org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):810:contains(value, index, 4, "CHIA") |==> true
2931:LVR:TRUE:FALSE:org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):811:true |==> false
2932:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):812:1 |==> 0
2933:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):812:1 |==> -1
2934:ROR:<=(int,int):<(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):812:index <= 1 |==> index < 1
2935:ROR:<=(int,int):==(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):812:index <= 1 |==> index == 1
2936:ROR:<=(int,int):TRUE(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):812:index <= 1 |==> true
2937:LVR:FALSE:TRUE:org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):813:false |==> true
2938:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):814:2 |==> 0
2939:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):814:2 |==> -2
2940:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):814:index - 2 |==> index % 2
2941:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):814:index - 2 |==> index * 2
2942:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):814:index - 2 |==> index + 2
2943:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):814:index - 2 |==> index / 2
2944:COR:isVowel(charAt(value, index - 2)):TRUE:org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):814:isVowel(charAt(value, index - 2)) |==> false
2945:COR:isVowel(charAt(value, index - 2)):FALSE:org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):814:isVowel(charAt(value, index - 2)) |==> true
2946:LVR:FALSE:TRUE:org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):815:false |==> true
2947:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):816:1 |==> 0
2948:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):816:1 |==> -1
2949:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):816:index - 1 |==> index % 1
2950:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):816:index - 1 |==> index * 1
2951:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):816:index - 1 |==> index + 1
2952:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):816:index - 1 |==> index / 1
2953:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):816:3 |==> 0
2954:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):816:3 |==> -3
2955:COR:contains(value, index - 1, 3, "ACH"):TRUE:org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):816:contains(value, index - 1, 3, "ACH") |==> false
2956:COR:contains(value, index - 1, 3, "ACH"):FALSE:org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):816:contains(value, index - 1, 3, "ACH") |==> true
2957:LVR:FALSE:TRUE:org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):817:false |==> true
2958:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):819:2 |==> 0
2959:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):819:2 |==> -2
2960:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):819:index + 2 |==> index % 2
2961:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):819:index + 2 |==> index * 2
2962:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):819:index + 2 |==> index - 2
2963:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):819:index + 2 |==> index / 2
2964:ROR:!=(int,int):<(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):820:c != 'I' |==> c < 'I'
2965:ROR:!=(int,int):>(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):820:c != 'I' |==> c > 'I'
2966:ROR:!=(int,int):TRUE(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):820:c != 'I' |==> true
2967:ROR:!=(int,int):<(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):820:c != 'E' |==> c < 'E'
2968:ROR:!=(int,int):>(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):820:c != 'E' |==> c > 'E'
2969:ROR:!=(int,int):TRUE(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):820:c != 'E' |==> true
2970:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):820:c != 'I' && c != 'E' |==> c != 'I' == (c != 'E')
2971:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):820:c != 'I' && c != 'E' |==> false
2972:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):820:c != 'I' && c != 'E' |==> c != 'I'
2973:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):820:c != 'I' && c != 'E' |==> c != 'E'
2974:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):821:2 |==> 0
2975:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):821:2 |==> -2
2976:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):821:index - 2 |==> index % 2
2977:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):821:index - 2 |==> index * 2
2978:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):821:index - 2 |==> index + 2
2979:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):821:index - 2 |==> index / 2
2980:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):821:6 |==> 0
2981:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):821:6 |==> -6
2982:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):820:(c != 'I' && c != 'E') || contains(value, index - 2, 6, "BACHER", "MACHER") |==> (c != 'I' && c != 'E') != contains(value, index - 2, 6, "BACHER", "MACHER")
2983:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):820:(c != 'I' && c != 'E') || contains(value, index - 2, 6, "BACHER", "MACHER") |==> (c != 'I' && c != 'E')
2984:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):821:(c != 'I' && c != 'E') || contains(value, index - 2, 6, "BACHER", "MACHER") |==> contains(value, index - 2, 6, "BACHER", "MACHER")
2985:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionC0(java.lang.String,int):820:(c != 'I' && c != 'E') || contains(value, index - 2, 6, "BACHER", "MACHER") |==> true
2986:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@conditionCH0(java.lang.String,int):829:0 |==> 1
2987:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionCH0(java.lang.String,int):829:0 |==> -1
2988:ROR:!=(int,int):<(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH0(java.lang.String,int):829:index != 0 |==> index < 0
2989:ROR:!=(int,int):>(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH0(java.lang.String,int):829:index != 0 |==> index > 0
2990:ROR:!=(int,int):TRUE(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH0(java.lang.String,int):829:index != 0 |==> true
2991:LVR:FALSE:TRUE:org.apache.commons.codec.language.DoubleMetaphone@conditionCH0(java.lang.String,int):830:false |==> true
2992:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionCH0(java.lang.String,int):831:1 |==> 0
2993:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionCH0(java.lang.String,int):831:1 |==> -1
2994:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH0(java.lang.String,int):831:index + 1 |==> index % 1
2995:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH0(java.lang.String,int):831:index + 1 |==> index * 1
2996:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH0(java.lang.String,int):831:index + 1 |==> index - 1
2997:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH0(java.lang.String,int):831:index + 1 |==> index / 1
2998:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionCH0(java.lang.String,int):831:5 |==> 0
2999:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionCH0(java.lang.String,int):831:5 |==> -5
3000:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionCH0(java.lang.String,int):832:1 |==> 0
3001:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionCH0(java.lang.String,int):832:1 |==> -1
3002:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH0(java.lang.String,int):832:index + 1 |==> index % 1
3003:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH0(java.lang.String,int):832:index + 1 |==> index * 1
3004:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH0(java.lang.String,int):832:index + 1 |==> index - 1
3005:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH0(java.lang.String,int):832:index + 1 |==> index / 1
3006:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionCH0(java.lang.String,int):832:3 |==> 0
3007:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionCH0(java.lang.String,int):832:3 |==> -3
3008:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionCH0(java.lang.String,int):831:!contains(value, index + 1, 5, "HARAC", "HARIS") && !contains(value, index + 1, 3, "HOR", "HYM", "HIA", "HEM") |==> !contains(value, index + 1, 5, "HARAC", "HARIS") == !contains(value, index + 1, 3, "HOR", "HYM", "HIA", "HEM")
3009:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionCH0(java.lang.String,int):831:!contains(value, index + 1, 5, "HARAC", "HARIS") && !contains(value, index + 1, 3, "HOR", "HYM", "HIA", "HEM") |==> false
3010:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionCH0(java.lang.String,int):831:!contains(value, index + 1, 5, "HARAC", "HARIS") && !contains(value, index + 1, 3, "HOR", "HYM", "HIA", "HEM") |==> !contains(value, index + 1, 5, "HARAC", "HARIS")
3011:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionCH0(java.lang.String,int):832:!contains(value, index + 1, 5, "HARAC", "HARIS") && !contains(value, index + 1, 3, "HOR", "HYM", "HIA", "HEM") |==> !contains(value, index + 1, 3, "HOR", "HYM", "HIA", "HEM")
3012:LVR:FALSE:TRUE:org.apache.commons.codec.language.DoubleMetaphone@conditionCH0(java.lang.String,int):833:false |==> true
3013:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@conditionCH0(java.lang.String,int):834:0 |==> 1
3014:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionCH0(java.lang.String,int):834:0 |==> -1
3015:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionCH0(java.lang.String,int):834:5 |==> 0
3016:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionCH0(java.lang.String,int):834:5 |==> -5
3017:COR:contains(value, 0, 5, "CHORE"):TRUE:org.apache.commons.codec.language.DoubleMetaphone@conditionCH0(java.lang.String,int):834:contains(value, 0, 5, "CHORE") |==> false
3018:COR:contains(value, 0, 5, "CHORE"):FALSE:org.apache.commons.codec.language.DoubleMetaphone@conditionCH0(java.lang.String,int):834:contains(value, 0, 5, "CHORE") |==> true
3019:LVR:FALSE:TRUE:org.apache.commons.codec.language.DoubleMetaphone@conditionCH0(java.lang.String,int):835:false |==> true
3020:LVR:TRUE:FALSE:org.apache.commons.codec.language.DoubleMetaphone@conditionCH0(java.lang.String,int):837:true |==> false
3021:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):845:0 |==> 1
3022:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):845:0 |==> -1
3023:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):845:4 |==> 0
3024:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):845:4 |==> -4
3025:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):845:0 |==> 1
3026:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):845:0 |==> -1
3027:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):846:3 |==> 0
3028:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):846:3 |==> -3
3029:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):845:contains(value, 0, 4, "VAN ", "VON ") || contains(value, 0, 3, "SCH") |==> contains(value, 0, 4, "VAN ", "VON ") != contains(value, 0, 3, "SCH")
3030:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):845:contains(value, 0, 4, "VAN ", "VON ") || contains(value, 0, 3, "SCH") |==> contains(value, 0, 4, "VAN ", "VON ")
3031:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):845:contains(value, 0, 4, "VAN ", "VON ") || contains(value, 0, 3, "SCH") |==> contains(value, 0, 3, "SCH")
3032:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):845:contains(value, 0, 4, "VAN ", "VON ") || contains(value, 0, 3, "SCH") |==> true
3033:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):847:2 |==> 0
3034:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):847:2 |==> -2
3035:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):847:index - 2 |==> index % 2
3036:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):847:index - 2 |==> index * 2
3037:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):847:index - 2 |==> index + 2
3038:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):847:index - 2 |==> index / 2
3039:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):847:6 |==> 0
3040:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):847:6 |==> -6
3041:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):845:(contains(value, 0, 4, "VAN ", "VON ") || contains(value, 0, 3, "SCH")) || contains(value, index - 2, 6, "ORCHES", "ARCHIT", "ORCHID") |==> (contains(value, 0, 4, "VAN ", "VON ") || contains(value, 0, 3, "SCH")) != contains(value, index - 2, 6, "ORCHES", "ARCHIT", "ORCHID")
3042:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):845:(contains(value, 0, 4, "VAN ", "VON ") || contains(value, 0, 3, "SCH")) || contains(value, index - 2, 6, "ORCHES", "ARCHIT", "ORCHID") |==> (contains(value, 0, 4, "VAN ", "VON ") || contains(value, 0, 3, "SCH"))
3043:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):847:(contains(value, 0, 4, "VAN ", "VON ") || contains(value, 0, 3, "SCH")) || contains(value, index - 2, 6, "ORCHES", "ARCHIT", "ORCHID") |==> contains(value, index - 2, 6, "ORCHES", "ARCHIT", "ORCHID")
3044:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):846:(contains(value, 0, 4, "VAN ", "VON ") || contains(value, 0, 3, "SCH")) || contains(value, index - 2, 6, "ORCHES", "ARCHIT", "ORCHID") |==> true
3045:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):848:2 |==> 0
3046:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):848:2 |==> -2
3047:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):848:index + 2 |==> index % 2
3048:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):848:index + 2 |==> index * 2
3049:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):848:index + 2 |==> index - 2
3050:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):848:index + 2 |==> index / 2
3051:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):848:1 |==> 0
3052:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):848:1 |==> -1
3053:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):845:(contains(value, 0, 4, "VAN ", "VON ") || contains(value, 0, 3, "SCH")) || contains(value, index - 2, 6, "ORCHES", "ARCHIT", "ORCHID") || contains(value, index + 2, 1, "T", "S") |==> ((contains(value, 0, 4, "VAN ", "VON ") || contains(value, 0, 3, "SCH")) || contains(value, index - 2, 6, "ORCHES", "ARCHIT", "ORCHID")) != contains(value, index + 2, 1, "T", "S")
3054:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):845:(contains(value, 0, 4, "VAN ", "VON ") || contains(value, 0, 3, "SCH")) || contains(value, index - 2, 6, "ORCHES", "ARCHIT", "ORCHID") || contains(value, index + 2, 1, "T", "S") |==> (contains(value, 0, 4, "VAN ", "VON ") || contains(value, 0, 3, "SCH")) || contains(value, index - 2, 6, "ORCHES", "ARCHIT", "ORCHID")
3055:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):848:(contains(value, 0, 4, "VAN ", "VON ") || contains(value, 0, 3, "SCH")) || contains(value, index - 2, 6, "ORCHES", "ARCHIT", "ORCHID") || contains(value, index + 2, 1, "T", "S") |==> contains(value, index + 2, 1, "T", "S")
3056:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):847:(contains(value, 0, 4, "VAN ", "VON ") || contains(value, 0, 3, "SCH")) || contains(value, index - 2, 6, "ORCHES", "ARCHIT", "ORCHID") || contains(value, index + 2, 1, "T", "S") |==> true
3057:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):849:1 |==> 0
3058:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):849:1 |==> -1
3059:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):849:index - 1 |==> index % 1
3060:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):849:index - 1 |==> index * 1
3061:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):849:index - 1 |==> index + 1
3062:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):849:index - 1 |==> index / 1
3063:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):849:1 |==> 0
3064:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):849:1 |==> -1
3065:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):849:0 |==> 1
3066:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):849:0 |==> -1
3067:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):849:index == 0 |==> index <= 0
3068:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):849:index == 0 |==> index >= 0
3069:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):849:index == 0 |==> false
3070:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):849:contains(value, index - 1, 1, "A", "O", "U", "E") || index == 0 |==> contains(value, index - 1, 1, "A", "O", "U", "E") != (index == 0)
3071:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):849:contains(value, index - 1, 1, "A", "O", "U", "E") || index == 0 |==> contains(value, index - 1, 1, "A", "O", "U", "E")
3072:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):849:contains(value, index - 1, 1, "A", "O", "U", "E") || index == 0 |==> index == 0
3073:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):849:contains(value, index - 1, 1, "A", "O", "U", "E") || index == 0 |==> true
3074:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):850:2 |==> 0
3075:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):850:2 |==> -2
3076:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):850:index + 2 |==> index % 2
3077:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):850:index + 2 |==> index * 2
3078:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):850:index + 2 |==> index - 2
3079:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):850:index + 2 |==> index / 2
3080:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):850:1 |==> 0
3081:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):850:1 |==> -1
3082:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):850:1 |==> 0
3083:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):850:1 |==> -1
3084:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):850:index + 1 |==> index % 1
3085:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):850:index + 1 |==> index * 1
3086:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):850:index + 1 |==> index - 1
3087:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):850:index + 1 |==> index / 1
3088:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):850:1 |==> 0
3089:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):850:1 |==> -1
3090:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):850:value.length() - 1 |==> value.length() % 1
3091:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):850:value.length() - 1 |==> value.length() * 1
3092:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):850:value.length() - 1 |==> value.length() + 1
3093:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):850:value.length() - 1 |==> value.length() / 1
3094:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):850:index + 1 == value.length() - 1 |==> index + 1 <= value.length() - 1
3095:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):850:index + 1 == value.length() - 1 |==> index + 1 >= value.length() - 1
3096:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):850:index + 1 == value.length() - 1 |==> false
3097:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):850:contains(value, index + 2, 1, L_R_N_M_B_H_F_V_W_SPACE) || index + 1 == value.length() - 1 |==> contains(value, index + 2, 1, L_R_N_M_B_H_F_V_W_SPACE) != (index + 1 == value.length() - 1)
3098:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):850:contains(value, index + 2, 1, L_R_N_M_B_H_F_V_W_SPACE) || index + 1 == value.length() - 1 |==> contains(value, index + 2, 1, L_R_N_M_B_H_F_V_W_SPACE)
3099:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):850:contains(value, index + 2, 1, L_R_N_M_B_H_F_V_W_SPACE) || index + 1 == value.length() - 1 |==> index + 1 == value.length() - 1
3100:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):850:contains(value, index + 2, 1, L_R_N_M_B_H_F_V_W_SPACE) || index + 1 == value.length() - 1 |==> true
3101:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):849:(contains(value, index - 1, 1, "A", "O", "U", "E") || index == 0) && (contains(value, index + 2, 1, L_R_N_M_B_H_F_V_W_SPACE) || index + 1 == value.length() - 1) |==> (contains(value, index - 1, 1, "A", "O", "U", "E") || index == 0) == (contains(value, index + 2, 1, L_R_N_M_B_H_F_V_W_SPACE) || index + 1 == value.length() - 1)
3102:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):849:(contains(value, index - 1, 1, "A", "O", "U", "E") || index == 0) && (contains(value, index + 2, 1, L_R_N_M_B_H_F_V_W_SPACE) || index + 1 == value.length() - 1) |==> false
3103:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):849:(contains(value, index - 1, 1, "A", "O", "U", "E") || index == 0) && (contains(value, index + 2, 1, L_R_N_M_B_H_F_V_W_SPACE) || index + 1 == value.length() - 1) |==> (contains(value, index - 1, 1, "A", "O", "U", "E") || index == 0)
3104:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):850:(contains(value, index - 1, 1, "A", "O", "U", "E") || index == 0) && (contains(value, index + 2, 1, L_R_N_M_B_H_F_V_W_SPACE) || index + 1 == value.length() - 1) |==> (contains(value, index + 2, 1, L_R_N_M_B_H_F_V_W_SPACE) || index + 1 == value.length() - 1)
3105:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):845:(contains(value, 0, 4, "VAN ", "VON ") || contains(value, 0, 3, "SCH")) || contains(value, index - 2, 6, "ORCHES", "ARCHIT", "ORCHID") || contains(value, index + 2, 1, "T", "S") || ((contains(value, index - 1, 1, "A", "O", "U", "E") || index == 0) && (contains(value, index + 2, 1, L_R_N_M_B_H_F_V_W_SPACE) || index + 1 == value.length() - 1)) |==> ((contains(value, 0, 4, "VAN ", "VON ") || contains(value, 0, 3, "SCH")) || contains(value, index - 2, 6, "ORCHES", "ARCHIT", "ORCHID") || contains(value, index + 2, 1, "T", "S")) != ((contains(value, index - 1, 1, "A", "O", "U", "E") || index == 0) && (contains(value, index + 2, 1, L_R_N_M_B_H_F_V_W_SPACE) || index + 1 == value.length() - 1))
3106:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):845:(contains(value, 0, 4, "VAN ", "VON ") || contains(value, 0, 3, "SCH")) || contains(value, index - 2, 6, "ORCHES", "ARCHIT", "ORCHID") || contains(value, index + 2, 1, "T", "S") || ((contains(value, index - 1, 1, "A", "O", "U", "E") || index == 0) && (contains(value, index + 2, 1, L_R_N_M_B_H_F_V_W_SPACE) || index + 1 == value.length() - 1)) |==> (contains(value, 0, 4, "VAN ", "VON ") || contains(value, 0, 3, "SCH")) || contains(value, index - 2, 6, "ORCHES", "ARCHIT", "ORCHID") || contains(value, index + 2, 1, "T", "S")
3107:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):849:(contains(value, 0, 4, "VAN ", "VON ") || contains(value, 0, 3, "SCH")) || contains(value, index - 2, 6, "ORCHES", "ARCHIT", "ORCHID") || contains(value, index + 2, 1, "T", "S") || ((contains(value, index - 1, 1, "A", "O", "U", "E") || index == 0) && (contains(value, index + 2, 1, L_R_N_M_B_H_F_V_W_SPACE) || index + 1 == value.length() - 1)) |==> ((contains(value, index - 1, 1, "A", "O", "U", "E") || index == 0) && (contains(value, index + 2, 1, L_R_N_M_B_H_F_V_W_SPACE) || index + 1 == value.length() - 1))
3108:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionCH1(java.lang.String,int):848:(contains(value, 0, 4, "VAN ", "VON ") || contains(value, 0, 3, "SCH")) || contains(value, index - 2, 6, "ORCHES", "ARCHIT", "ORCHID") || contains(value, index + 2, 1, "T", "S") || ((contains(value, index - 1, 1, "A", "O", "U", "E") || index == 0) && (contains(value, index + 2, 1, L_R_N_M_B_H_F_V_W_SPACE) || index + 1 == value.length() - 1)) |==> true
3109:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):857:3 |==> 0
3110:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):857:3 |==> -3
3111:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):857:value.length() - 3 |==> value.length() % 3
3112:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):857:value.length() - 3 |==> value.length() * 3
3113:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):857:value.length() - 3 |==> value.length() + 3
3114:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):857:value.length() - 3 |==> value.length() / 3
3115:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):857:index == value.length() - 3 |==> index <= value.length() - 3
3116:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):857:index == value.length() - 3 |==> index >= value.length() - 3
3117:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):857:index == value.length() - 3 |==> false
3118:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):858:1 |==> 0
3119:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):858:1 |==> -1
3120:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):858:index - 1 |==> index % 1
3121:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):858:index - 1 |==> index * 1
3122:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):858:index - 1 |==> index + 1
3123:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):858:index - 1 |==> index / 1
3124:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):858:4 |==> 0
3125:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):858:4 |==> -4
3126:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):857:index == value.length() - 3 && contains(value, index - 1, 4, "ILLO", "ILLA", "ALLE") |==> index == value.length() - 3 == contains(value, index - 1, 4, "ILLO", "ILLA", "ALLE")
3127:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):857:index == value.length() - 3 && contains(value, index - 1, 4, "ILLO", "ILLA", "ALLE") |==> false
3128:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):857:index == value.length() - 3 && contains(value, index - 1, 4, "ILLO", "ILLA", "ALLE") |==> index == value.length() - 3
3129:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):858:index == value.length() - 3 && contains(value, index - 1, 4, "ILLO", "ILLA", "ALLE") |==> contains(value, index - 1, 4, "ILLO", "ILLA", "ALLE")
3130:LVR:TRUE:FALSE:org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):859:true |==> false
3131:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):860:1 |==> 0
3132:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):860:1 |==> -1
3133:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):860:index - 1 |==> index % 1
3134:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):860:index - 1 |==> index * 1
3135:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):860:index - 1 |==> index + 1
3136:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):860:index - 1 |==> index / 1
3137:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):860:2 |==> 0
3138:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):860:2 |==> -2
3139:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):861:1 |==> 0
3140:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):861:1 |==> -1
3141:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):861:value.length() - 1 |==> value.length() % 1
3142:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):861:value.length() - 1 |==> value.length() * 1
3143:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):861:value.length() - 1 |==> value.length() + 1
3144:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):861:value.length() - 1 |==> value.length() / 1
3145:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):861:1 |==> 0
3146:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):861:1 |==> -1
3147:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):860:contains(value, index - 1, 2, "AS", "OS") || contains(value, value.length() - 1, 1, "A", "O") |==> contains(value, index - 1, 2, "AS", "OS") != contains(value, value.length() - 1, 1, "A", "O")
3148:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):860:contains(value, index - 1, 2, "AS", "OS") || contains(value, value.length() - 1, 1, "A", "O") |==> contains(value, index - 1, 2, "AS", "OS")
3149:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):861:contains(value, index - 1, 2, "AS", "OS") || contains(value, value.length() - 1, 1, "A", "O") |==> contains(value, value.length() - 1, 1, "A", "O")
3150:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):860:contains(value, index - 1, 2, "AS", "OS") || contains(value, value.length() - 1, 1, "A", "O") |==> true
3151:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):862:1 |==> 0
3152:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):862:1 |==> -1
3153:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):862:index - 1 |==> index % 1
3154:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):862:index - 1 |==> index * 1
3155:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):862:index - 1 |==> index + 1
3156:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):862:index - 1 |==> index / 1
3157:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):862:4 |==> 0
3158:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):862:4 |==> -4
3159:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):860:(contains(value, index - 1, 2, "AS", "OS") || contains(value, value.length() - 1, 1, "A", "O")) && contains(value, index - 1, 4, "ALLE") |==> (contains(value, index - 1, 2, "AS", "OS") || contains(value, value.length() - 1, 1, "A", "O")) == contains(value, index - 1, 4, "ALLE")
3160:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):861:(contains(value, index - 1, 2, "AS", "OS") || contains(value, value.length() - 1, 1, "A", "O")) && contains(value, index - 1, 4, "ALLE") |==> false
3161:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):860:(contains(value, index - 1, 2, "AS", "OS") || contains(value, value.length() - 1, 1, "A", "O")) && contains(value, index - 1, 4, "ALLE") |==> (contains(value, index - 1, 2, "AS", "OS") || contains(value, value.length() - 1, 1, "A", "O"))
3162:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):862:(contains(value, index - 1, 2, "AS", "OS") || contains(value, value.length() - 1, 1, "A", "O")) && contains(value, index - 1, 4, "ALLE") |==> contains(value, index - 1, 4, "ALLE")
3163:LVR:TRUE:FALSE:org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):863:true |==> false
3164:LVR:FALSE:TRUE:org.apache.commons.codec.language.DoubleMetaphone@conditionL0(java.lang.String,int):865:false |==> true
3165:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):873:1 |==> 0
3166:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):873:1 |==> -1
3167:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):873:index + 1 |==> index % 1
3168:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):873:index + 1 |==> index * 1
3169:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):873:index + 1 |==> index - 1
3170:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):873:index + 1 |==> index / 1
3171:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):873:charAt(value, index + 1) == 'M' |==> charAt(value, index + 1) <= 'M'
3172:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):873:charAt(value, index + 1) == 'M' |==> charAt(value, index + 1) >= 'M'
3173:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):873:charAt(value, index + 1) == 'M' |==> false
3174:LVR:TRUE:FALSE:org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):874:true |==> false
3175:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):876:1 |==> 0
3176:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):876:1 |==> -1
3177:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):876:index - 1 |==> index % 1
3178:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):876:index - 1 |==> index * 1
3179:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):876:index - 1 |==> index + 1
3180:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):876:index - 1 |==> index / 1
3181:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):876:3 |==> 0
3182:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):876:3 |==> -3
3183:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):877:1 |==> 0
3184:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):877:1 |==> -1
3185:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):877:index + 1 |==> index % 1
3186:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):877:index + 1 |==> index * 1
3187:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):877:index + 1 |==> index - 1
3188:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):877:index + 1 |==> index / 1
3189:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):877:1 |==> 0
3190:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):877:1 |==> -1
3191:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):877:value.length() - 1 |==> value.length() % 1
3192:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):877:value.length() - 1 |==> value.length() * 1
3193:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):877:value.length() - 1 |==> value.length() + 1
3194:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):877:value.length() - 1 |==> value.length() / 1
3195:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):877:(index + 1) == value.length() - 1 |==> (index + 1) <= value.length() - 1
3196:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):877:(index + 1) == value.length() - 1 |==> (index + 1) >= value.length() - 1
3197:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):877:(index + 1) == value.length() - 1 |==> false
3198:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):878:2 |==> 0
3199:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):878:2 |==> -2
3200:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):878:index + 2 |==> index % 2
3201:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):878:index + 2 |==> index * 2
3202:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):878:index + 2 |==> index - 2
3203:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):878:index + 2 |==> index / 2
3204:LVR:POS:0:org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):878:2 |==> 0
3205:LVR:POS:NEG:org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):878:2 |==> -2
3206:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):877:(index + 1) == value.length() - 1 || contains(value, index + 2, 2, "ER") |==> (index + 1) == value.length() - 1 != contains(value, index + 2, 2, "ER")
3207:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):877:(index + 1) == value.length() - 1 || contains(value, index + 2, 2, "ER") |==> (index + 1) == value.length() - 1
3208:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):877:(index + 1) == value.length() - 1 || contains(value, index + 2, 2, "ER") |==> contains(value, index + 2, 2, "ER")
3209:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):877:(index + 1) == value.length() - 1 || contains(value, index + 2, 2, "ER") |==> true
3210:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):876:contains(value, index - 1, 3, "UMB") && ((index + 1) == value.length() - 1 || contains(value, index + 2, 2, "ER")) |==> contains(value, index - 1, 3, "UMB") == ((index + 1) == value.length() - 1 || contains(value, index + 2, 2, "ER"))
3211:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):876:contains(value, index - 1, 3, "UMB") && ((index + 1) == value.length() - 1 || contains(value, index + 2, 2, "ER")) |==> false
3212:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):876:contains(value, index - 1, 3, "UMB") && ((index + 1) == value.length() - 1 || contains(value, index + 2, 2, "ER")) |==> contains(value, index - 1, 3, "UMB")
3213:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@conditionM0(java.lang.String,int):877:contains(value, index - 1, 3, "UMB") && ((index + 1) == value.length() - 1 || contains(value, index + 2, 2, "ER")) |==> ((index + 1) == value.length() - 1 || contains(value, index + 2, 2, "ER"))
3214:LVR:NEG:0:org.apache.commons.codec.language.DoubleMetaphone@isSlavoGermanic(java.lang.String):888:-1 |==> 0
3215:LVR:NEG:POS:org.apache.commons.codec.language.DoubleMetaphone@isSlavoGermanic(java.lang.String):888:-1 |==> 1
3216:ROR:>(int,int):!=(int,int):org.apache.commons.codec.language.DoubleMetaphone@isSlavoGermanic(java.lang.String):888:value.indexOf('W') > -1 |==> value.indexOf('W') != -1
3217:ROR:>(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@isSlavoGermanic(java.lang.String):888:value.indexOf('W') > -1 |==> value.indexOf('W') >= -1
3218:ROR:>(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@isSlavoGermanic(java.lang.String):888:value.indexOf('W') > -1 |==> false
3219:LVR:NEG:0:org.apache.commons.codec.language.DoubleMetaphone@isSlavoGermanic(java.lang.String):888:-1 |==> 0
3220:LVR:NEG:POS:org.apache.commons.codec.language.DoubleMetaphone@isSlavoGermanic(java.lang.String):888:-1 |==> 1
3221:ROR:>(int,int):!=(int,int):org.apache.commons.codec.language.DoubleMetaphone@isSlavoGermanic(java.lang.String):888:value.indexOf('K') > -1 |==> value.indexOf('K') != -1
3222:ROR:>(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@isSlavoGermanic(java.lang.String):888:value.indexOf('K') > -1 |==> value.indexOf('K') >= -1
3223:ROR:>(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@isSlavoGermanic(java.lang.String):888:value.indexOf('K') > -1 |==> false
3224:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@isSlavoGermanic(java.lang.String):888:value.indexOf('W') > -1 || value.indexOf('K') > -1 |==> value.indexOf('W') > -1 != value.indexOf('K') > -1
3225:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@isSlavoGermanic(java.lang.String):888:value.indexOf('W') > -1 || value.indexOf('K') > -1 |==> value.indexOf('W') > -1
3226:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@isSlavoGermanic(java.lang.String):888:value.indexOf('W') > -1 || value.indexOf('K') > -1 |==> value.indexOf('K') > -1
3227:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@isSlavoGermanic(java.lang.String):888:value.indexOf('W') > -1 || value.indexOf('K') > -1 |==> true
3228:LVR:NEG:0:org.apache.commons.codec.language.DoubleMetaphone@isSlavoGermanic(java.lang.String):889:-1 |==> 0
3229:LVR:NEG:POS:org.apache.commons.codec.language.DoubleMetaphone@isSlavoGermanic(java.lang.String):889:-1 |==> 1
3230:ROR:>(int,int):!=(int,int):org.apache.commons.codec.language.DoubleMetaphone@isSlavoGermanic(java.lang.String):889:value.indexOf("CZ") > -1 |==> value.indexOf("CZ") != -1
3231:ROR:>(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@isSlavoGermanic(java.lang.String):889:value.indexOf("CZ") > -1 |==> value.indexOf("CZ") >= -1
3232:ROR:>(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@isSlavoGermanic(java.lang.String):889:value.indexOf("CZ") > -1 |==> false
3233:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@isSlavoGermanic(java.lang.String):888:value.indexOf('W') > -1 || value.indexOf('K') > -1 || value.indexOf("CZ") > -1 |==> (value.indexOf('W') > -1 || value.indexOf('K') > -1) != value.indexOf("CZ") > -1
3234:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@isSlavoGermanic(java.lang.String):888:value.indexOf('W') > -1 || value.indexOf('K') > -1 || value.indexOf("CZ") > -1 |==> value.indexOf('W') > -1 || value.indexOf('K') > -1
3235:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@isSlavoGermanic(java.lang.String):889:value.indexOf('W') > -1 || value.indexOf('K') > -1 || value.indexOf("CZ") > -1 |==> value.indexOf("CZ") > -1
3236:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@isSlavoGermanic(java.lang.String):888:value.indexOf('W') > -1 || value.indexOf('K') > -1 || value.indexOf("CZ") > -1 |==> true
3237:LVR:NEG:0:org.apache.commons.codec.language.DoubleMetaphone@isSlavoGermanic(java.lang.String):889:-1 |==> 0
3238:LVR:NEG:POS:org.apache.commons.codec.language.DoubleMetaphone@isSlavoGermanic(java.lang.String):889:-1 |==> 1
3239:ROR:>(int,int):!=(int,int):org.apache.commons.codec.language.DoubleMetaphone@isSlavoGermanic(java.lang.String):889:value.indexOf("WITZ") > -1 |==> value.indexOf("WITZ") != -1
3240:ROR:>(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@isSlavoGermanic(java.lang.String):889:value.indexOf("WITZ") > -1 |==> value.indexOf("WITZ") >= -1
3241:ROR:>(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@isSlavoGermanic(java.lang.String):889:value.indexOf("WITZ") > -1 |==> false
3242:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@isSlavoGermanic(java.lang.String):888:value.indexOf('W') > -1 || value.indexOf('K') > -1 || value.indexOf("CZ") > -1 || value.indexOf("WITZ") > -1 |==> (value.indexOf('W') > -1 || value.indexOf('K') > -1 || value.indexOf("CZ") > -1) != value.indexOf("WITZ") > -1
3243:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@isSlavoGermanic(java.lang.String):888:value.indexOf('W') > -1 || value.indexOf('K') > -1 || value.indexOf("CZ") > -1 || value.indexOf("WITZ") > -1 |==> value.indexOf('W') > -1 || value.indexOf('K') > -1 || value.indexOf("CZ") > -1
3244:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@isSlavoGermanic(java.lang.String):889:value.indexOf('W') > -1 || value.indexOf('K') > -1 || value.indexOf("CZ") > -1 || value.indexOf("WITZ") > -1 |==> value.indexOf("WITZ") > -1
3245:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@isSlavoGermanic(java.lang.String):889:value.indexOf('W') > -1 || value.indexOf('K') > -1 || value.indexOf("CZ") > -1 || value.indexOf("WITZ") > -1 |==> true
3246:LVR:NEG:0:org.apache.commons.codec.language.DoubleMetaphone@isVowel(char):896:-1 |==> 0
3247:LVR:NEG:POS:org.apache.commons.codec.language.DoubleMetaphone@isVowel(char):896:-1 |==> 1
3248:ROR:!=(int,int):<(int,int):org.apache.commons.codec.language.DoubleMetaphone@isVowel(char):896:VOWELS.indexOf(ch) != -1 |==> VOWELS.indexOf(ch) < -1
3249:ROR:!=(int,int):>(int,int):org.apache.commons.codec.language.DoubleMetaphone@isVowel(char):896:VOWELS.indexOf(ch) != -1 |==> VOWELS.indexOf(ch) > -1
3250:ROR:!=(int,int):TRUE(int,int):org.apache.commons.codec.language.DoubleMetaphone@isVowel(char):896:VOWELS.indexOf(ch) != -1 |==> true
3251:LVR:FALSE:TRUE:org.apache.commons.codec.language.DoubleMetaphone@isSilentStart(java.lang.String):905:false |==> true
3252:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@isSilentStart(java.lang.String):906:0 |==> 1
3253:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@isSilentStart(java.lang.String):906:0 |==> -1
3254:ROR:<(int,int):!=(int,int):org.apache.commons.codec.language.DoubleMetaphone@isSilentStart(java.lang.String):906:i < SILENT_START.length |==> i != SILENT_START.length
3255:ROR:<(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@isSilentStart(java.lang.String):906:i < SILENT_START.length |==> i <= SILENT_START.length
3256:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@isSilentStart(java.lang.String):906:i < SILENT_START.length |==> false
3257:COR:value.startsWith(SILENT_START[i]):TRUE:org.apache.commons.codec.language.DoubleMetaphone@isSilentStart(java.lang.String):907:value.startsWith(SILENT_START[i]) |==> false
3258:COR:value.startsWith(SILENT_START[i]):FALSE:org.apache.commons.codec.language.DoubleMetaphone@isSilentStart(java.lang.String):907:value.startsWith(SILENT_START[i]) |==> true
3259:LVR:TRUE:FALSE:org.apache.commons.codec.language.DoubleMetaphone@isSilentStart(java.lang.String):908:true |==> false
3260:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@isSilentStart(java.lang.String):908:result = true |==> <NO-OP>
3261:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.language.DoubleMetaphone@cleanInput(java.lang.String):919:input == null |==> false
3262:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@cleanInput(java.lang.String):922:input = input.trim() |==> <NO-OP>
3263:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@cleanInput(java.lang.String):923:0 |==> 1
3264:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@cleanInput(java.lang.String):923:0 |==> -1
3265:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@cleanInput(java.lang.String):923:input.length() == 0 |==> input.length() <= 0
3266:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.DoubleMetaphone@cleanInput(java.lang.String):923:input.length() == 0 |==> input.length() >= 0
3267:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@cleanInput(java.lang.String):923:input.length() == 0 |==> false
3268:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@charAt(java.lang.String,int):935:0 |==> 1
3269:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@charAt(java.lang.String,int):935:0 |==> -1
3270:ROR:<(int,int):!=(int,int):org.apache.commons.codec.language.DoubleMetaphone@charAt(java.lang.String,int):935:index < 0 |==> index != 0
3271:ROR:<(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@charAt(java.lang.String,int):935:index < 0 |==> index <= 0
3272:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@charAt(java.lang.String,int):935:index < 0 |==> false
3273:ROR:>=(int,int):==(int,int):org.apache.commons.codec.language.DoubleMetaphone@charAt(java.lang.String,int):935:index >= value.length() |==> index == value.length()
3274:ROR:>=(int,int):>(int,int):org.apache.commons.codec.language.DoubleMetaphone@charAt(java.lang.String,int):935:index >= value.length() |==> index > value.length()
3275:ROR:>=(int,int):TRUE(int,int):org.apache.commons.codec.language.DoubleMetaphone@charAt(java.lang.String,int):935:index >= value.length() |==> true
3276:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@charAt(java.lang.String,int):935:index < 0 || index >= value.length() |==> index < 0 != index >= value.length()
3277:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@charAt(java.lang.String,int):935:index < 0 || index >= value.length() |==> index < 0
3278:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@charAt(java.lang.String,int):935:index < 0 || index >= value.length() |==> index >= value.length()
3279:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@charAt(java.lang.String,int):935:index < 0 || index >= value.length() |==> true
3280:LVR:FALSE:TRUE:org.apache.commons.codec.language.DoubleMetaphone@contains(java.lang.String,int,int,java.lang.String[]):1011:false |==> true
3281:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@contains(java.lang.String,int,int,java.lang.String[]):1012:0 |==> 1
3282:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@contains(java.lang.String,int,int,java.lang.String[]):1012:0 |==> -1
3283:ROR:>=(int,int):==(int,int):org.apache.commons.codec.language.DoubleMetaphone@contains(java.lang.String,int,int,java.lang.String[]):1012:start >= 0 |==> start == 0
3284:ROR:>=(int,int):>(int,int):org.apache.commons.codec.language.DoubleMetaphone@contains(java.lang.String,int,int,java.lang.String[]):1012:start >= 0 |==> start > 0
3285:ROR:>=(int,int):TRUE(int,int):org.apache.commons.codec.language.DoubleMetaphone@contains(java.lang.String,int,int,java.lang.String[]):1012:start >= 0 |==> true
3286:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@contains(java.lang.String,int,int,java.lang.String[]):1012:start + length |==> start % length
3287:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@contains(java.lang.String,int,int,java.lang.String[]):1012:start + length |==> start * length
3288:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@contains(java.lang.String,int,int,java.lang.String[]):1012:start + length |==> start - length
3289:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@contains(java.lang.String,int,int,java.lang.String[]):1012:start + length |==> start / length
3290:ROR:<=(int,int):<(int,int):org.apache.commons.codec.language.DoubleMetaphone@contains(java.lang.String,int,int,java.lang.String[]):1012:start + length <= value.length() |==> start + length < value.length()
3291:ROR:<=(int,int):==(int,int):org.apache.commons.codec.language.DoubleMetaphone@contains(java.lang.String,int,int,java.lang.String[]):1012:start + length <= value.length() |==> start + length == value.length()
3292:ROR:<=(int,int):TRUE(int,int):org.apache.commons.codec.language.DoubleMetaphone@contains(java.lang.String,int,int,java.lang.String[]):1012:start + length <= value.length() |==> true
3293:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@contains(java.lang.String,int,int,java.lang.String[]):1012:start >= 0 && start + length <= value.length() |==> start >= 0 == start + length <= value.length()
3294:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@contains(java.lang.String,int,int,java.lang.String[]):1012:start >= 0 && start + length <= value.length() |==> false
3295:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@contains(java.lang.String,int,int,java.lang.String[]):1012:start >= 0 && start + length <= value.length() |==> start >= 0
3296:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone@contains(java.lang.String,int,int,java.lang.String[]):1012:start >= 0 && start + length <= value.length() |==> start + length <= value.length()
3297:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone@contains(java.lang.String,int,int,java.lang.String[]):1013:start + length |==> start % length
3298:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone@contains(java.lang.String,int,int,java.lang.String[]):1013:start + length |==> start * length
3299:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.DoubleMetaphone@contains(java.lang.String,int,int,java.lang.String[]):1013:start + length |==> start - length
3300:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone@contains(java.lang.String,int,int,java.lang.String[]):1013:start + length |==> start / length
3301:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone@contains(java.lang.String,int,int,java.lang.String[]):1015:0 |==> 1
3302:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone@contains(java.lang.String,int,int,java.lang.String[]):1015:0 |==> -1
3303:ROR:<(int,int):!=(int,int):org.apache.commons.codec.language.DoubleMetaphone@contains(java.lang.String,int,int,java.lang.String[]):1015:i < criteria.length |==> i != criteria.length
3304:ROR:<(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone@contains(java.lang.String,int,int,java.lang.String[]):1015:i < criteria.length |==> i <= criteria.length
3305:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone@contains(java.lang.String,int,int,java.lang.String[]):1015:i < criteria.length |==> false
3306:COR:target.equals(criteria[i]):TRUE:org.apache.commons.codec.language.DoubleMetaphone@contains(java.lang.String,int,int,java.lang.String[]):1016:target.equals(criteria[i]) |==> false
3307:COR:target.equals(criteria[i]):FALSE:org.apache.commons.codec.language.DoubleMetaphone@contains(java.lang.String,int,int,java.lang.String[]):1016:target.equals(criteria[i]) |==> true
3308:LVR:TRUE:FALSE:org.apache.commons.codec.language.DoubleMetaphone@contains(java.lang.String,int,int,java.lang.String[]):1017:true |==> false
3309:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone@contains(java.lang.String,int,int,java.lang.String[]):1017:result = true |==> <NO-OP>
3310:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@<init>(int):1038:this.maxLength = maxLength |==> <NO-OP>
3311:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@append(char):1042:appendPrimary(value) |==> <NO-OP>
3312:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@append(char):1043:appendAlternate(value) |==> <NO-OP>
3313:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@append(char,char):1047:appendPrimary(primary) |==> <NO-OP>
3314:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@append(char,char):1048:appendAlternate(alternate) |==> <NO-OP>
3315:ROR:<(int,int):!=(int,int):org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@appendPrimary(char):1052:this.primary.length() < this.maxLength |==> this.primary.length() != this.maxLength
3316:ROR:<(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@appendPrimary(char):1052:this.primary.length() < this.maxLength |==> this.primary.length() <= this.maxLength
3317:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@appendPrimary(char):1052:this.primary.length() < this.maxLength |==> false
3318:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@appendPrimary(char):1053:this.primary.append(value) |==> <NO-OP>
3319:ROR:<(int,int):!=(int,int):org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@appendAlternate(char):1058:this.alternate.length() < this.maxLength |==> this.alternate.length() != this.maxLength
3320:ROR:<(int,int):<=(int,int):org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@appendAlternate(char):1058:this.alternate.length() < this.maxLength |==> this.alternate.length() <= this.maxLength
3321:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@appendAlternate(char):1058:this.alternate.length() < this.maxLength |==> false
3322:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@appendAlternate(char):1059:this.alternate.append(value) |==> <NO-OP>
3323:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@append(java.lang.String):1064:appendPrimary(value) |==> <NO-OP>
3324:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@append(java.lang.String):1065:appendAlternate(value) |==> <NO-OP>
3325:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@append(java.lang.String,java.lang.String):1069:appendPrimary(primary) |==> <NO-OP>
3326:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@append(java.lang.String,java.lang.String):1070:appendAlternate(alternate) |==> <NO-OP>
3327:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@appendPrimary(java.lang.String):1074:this.maxLength - this.primary.length() |==> this.maxLength % this.primary.length()
3328:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@appendPrimary(java.lang.String):1074:this.maxLength - this.primary.length() |==> this.maxLength * this.primary.length()
3329:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@appendPrimary(java.lang.String):1074:this.maxLength - this.primary.length() |==> this.maxLength + this.primary.length()
3330:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@appendPrimary(java.lang.String):1074:this.maxLength - this.primary.length() |==> this.maxLength / this.primary.length()
3331:ROR:<=(int,int):<(int,int):org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@appendPrimary(java.lang.String):1075:value.length() <= addChars |==> value.length() < addChars
3332:ROR:<=(int,int):==(int,int):org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@appendPrimary(java.lang.String):1075:value.length() <= addChars |==> value.length() == addChars
3333:ROR:<=(int,int):TRUE(int,int):org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@appendPrimary(java.lang.String):1075:value.length() <= addChars |==> true
3334:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@appendPrimary(java.lang.String):1076:this.primary.append(value) |==> <NO-OP>
3335:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@appendPrimary(java.lang.String):1078:0 |==> 1
3336:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@appendPrimary(java.lang.String):1078:0 |==> -1
3337:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@appendPrimary(java.lang.String):1078:this.primary.append(value.substring(0, addChars)) |==> <NO-OP>
3338:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@appendAlternate(java.lang.String):1083:this.maxLength - this.alternate.length() |==> this.maxLength % this.alternate.length()
3339:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@appendAlternate(java.lang.String):1083:this.maxLength - this.alternate.length() |==> this.maxLength * this.alternate.length()
3340:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@appendAlternate(java.lang.String):1083:this.maxLength - this.alternate.length() |==> this.maxLength + this.alternate.length()
3341:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@appendAlternate(java.lang.String):1083:this.maxLength - this.alternate.length() |==> this.maxLength / this.alternate.length()
3342:ROR:<=(int,int):<(int,int):org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@appendAlternate(java.lang.String):1084:value.length() <= addChars |==> value.length() < addChars
3343:ROR:<=(int,int):==(int,int):org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@appendAlternate(java.lang.String):1084:value.length() <= addChars |==> value.length() == addChars
3344:ROR:<=(int,int):TRUE(int,int):org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@appendAlternate(java.lang.String):1084:value.length() <= addChars |==> true
3345:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@appendAlternate(java.lang.String):1085:this.alternate.append(value) |==> <NO-OP>
3346:LVR:0:POS:org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@appendAlternate(java.lang.String):1087:0 |==> 1
3347:LVR:0:NEG:org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@appendAlternate(java.lang.String):1087:0 |==> -1
3348:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@appendAlternate(java.lang.String):1087:this.alternate.append(value.substring(0, addChars)) |==> <NO-OP>
3349:ROR:>=(int,int):==(int,int):org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@isComplete():1100:this.primary.length() >= this.maxLength |==> this.primary.length() == this.maxLength
3350:ROR:>=(int,int):>(int,int):org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@isComplete():1100:this.primary.length() >= this.maxLength |==> this.primary.length() > this.maxLength
3351:ROR:>=(int,int):TRUE(int,int):org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@isComplete():1100:this.primary.length() >= this.maxLength |==> true
3352:ROR:>=(int,int):==(int,int):org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@isComplete():1101:this.alternate.length() >= this.maxLength |==> this.alternate.length() == this.maxLength
3353:ROR:>=(int,int):>(int,int):org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@isComplete():1101:this.alternate.length() >= this.maxLength |==> this.alternate.length() > this.maxLength
3354:ROR:>=(int,int):TRUE(int,int):org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@isComplete():1101:this.alternate.length() >= this.maxLength |==> true
3355:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@isComplete():1100:this.primary.length() >= this.maxLength && this.alternate.length() >= this.maxLength |==> this.primary.length() >= this.maxLength == this.alternate.length() >= this.maxLength
3356:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@isComplete():1100:this.primary.length() >= this.maxLength && this.alternate.length() >= this.maxLength |==> false
3357:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@isComplete():1100:this.primary.length() >= this.maxLength && this.alternate.length() >= this.maxLength |==> this.primary.length() >= this.maxLength
3358:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult@isComplete():1101:this.primary.length() >= this.maxLength && this.alternate.length() >= this.maxLength |==> this.alternate.length() >= this.maxLength
3359:LVR:POS:0:org.apache.commons.codec.language.Metaphone:62:4 |==> 0
3360:LVR:POS:NEG:org.apache.commons.codec.language.Metaphone:62:4 |==> -4
3361:LVR:FALSE:TRUE:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):82:false |==> true
3362:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):83:txt == null |==> false
3363:LVR:0:POS:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):83:0 |==> 1
3364:LVR:0:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):83:0 |==> -1
3365:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):83:txt.length() == 0 |==> txt.length() <= 0
3366:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):83:txt.length() == 0 |==> txt.length() >= 0
3367:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):83:txt.length() == 0 |==> false
3368:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):83:(txt == null) || (txt.length() == 0) |==> (txt == null) != (txt.length() == 0)
3369:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):83:(txt == null) || (txt.length() == 0) |==> (txt == null)
3370:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):83:(txt == null) || (txt.length() == 0) |==> (txt.length() == 0)
3371:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):83:(txt == null) || (txt.length() == 0) |==> true
3372:LVR:POS:0:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):87:1 |==> 0
3373:LVR:POS:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):87:1 |==> -1
3374:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):87:txt.length() == 1 |==> txt.length() <= 1
3375:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):87:txt.length() == 1 |==> txt.length() >= 1
3376:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):87:txt.length() == 1 |==> false
3377:LVR:POS:0:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):93:40 |==> 0
3378:LVR:POS:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):93:40 |==> -40
3379:LVR:POS:0:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):94:10 |==> 0
3380:LVR:POS:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):94:10 |==> -10
3381:LVR:0:POS:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):96:0 |==> 1
3382:LVR:0:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):96:0 |==> -1
3383:LVR:POS:0:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):100:1 |==> 0
3384:LVR:POS:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):100:1 |==> -1
3385:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):100:inwd[1] == 'N' |==> inwd[1] <= 'N'
3386:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):100:inwd[1] == 'N' |==> inwd[1] >= 'N'
3387:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):100:inwd[1] == 'N' |==> false
3388:LVR:POS:0:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):101:1 |==> 0
3389:LVR:POS:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):101:1 |==> -1
3390:LVR:POS:0:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):101:1 |==> 0
3391:LVR:POS:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):101:1 |==> -1
3392:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):101:inwd.length - 1 |==> inwd.length % 1
3393:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):101:inwd.length - 1 |==> inwd.length * 1
3394:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):101:inwd.length - 1 |==> inwd.length + 1
3395:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):101:inwd.length - 1 |==> inwd.length / 1
3396:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):101:local.append(inwd, 1, inwd.length - 1) |==> <NO-OP>
3397:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):103:local.append(inwd) |==> <NO-OP>
3398:LVR:POS:0:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):107:1 |==> 0
3399:LVR:POS:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):107:1 |==> -1
3400:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):107:inwd[1] == 'E' |==> inwd[1] <= 'E'
3401:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):107:inwd[1] == 'E' |==> inwd[1] >= 'E'
3402:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):107:inwd[1] == 'E' |==> false
3403:LVR:POS:0:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):108:1 |==> 0
3404:LVR:POS:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):108:1 |==> -1
3405:LVR:POS:0:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):108:1 |==> 0
3406:LVR:POS:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):108:1 |==> -1
3407:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):108:inwd.length - 1 |==> inwd.length % 1
3408:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):108:inwd.length - 1 |==> inwd.length * 1
3409:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):108:inwd.length - 1 |==> inwd.length + 1
3410:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):108:inwd.length - 1 |==> inwd.length / 1
3411:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):108:local.append(inwd, 1, inwd.length - 1) |==> <NO-OP>
3412:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):110:local.append(inwd) |==> <NO-OP>
3413:LVR:POS:0:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):114:1 |==> 0
3414:LVR:POS:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):114:1 |==> -1
3415:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):114:inwd[1] == 'R' |==> inwd[1] <= 'R'
3416:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):114:inwd[1] == 'R' |==> inwd[1] >= 'R'
3417:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):114:inwd[1] == 'R' |==> false
3418:LVR:POS:0:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):115:1 |==> 0
3419:LVR:POS:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):115:1 |==> -1
3420:LVR:POS:0:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):115:1 |==> 0
3421:LVR:POS:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):115:1 |==> -1
3422:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):115:inwd.length - 1 |==> inwd.length % 1
3423:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):115:inwd.length - 1 |==> inwd.length * 1
3424:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):115:inwd.length - 1 |==> inwd.length + 1
3425:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):115:inwd.length - 1 |==> inwd.length / 1
3426:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):115:local.append(inwd, 1, inwd.length - 1) |==> <NO-OP>
3427:LVR:POS:0:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):118:1 |==> 0
3428:LVR:POS:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):118:1 |==> -1
3429:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):118:inwd[1] == 'H' |==> inwd[1] <= 'H'
3430:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):118:inwd[1] == 'H' |==> inwd[1] >= 'H'
3431:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):118:inwd[1] == 'H' |==> false
3432:LVR:POS:0:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):119:1 |==> 0
3433:LVR:POS:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):119:1 |==> -1
3434:LVR:POS:0:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):119:1 |==> 0
3435:LVR:POS:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):119:1 |==> -1
3436:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):119:inwd.length - 1 |==> inwd.length % 1
3437:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):119:inwd.length - 1 |==> inwd.length * 1
3438:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):119:inwd.length - 1 |==> inwd.length + 1
3439:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):119:inwd.length - 1 |==> inwd.length / 1
3440:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):119:local.append(inwd, 1, inwd.length - 1) |==> <NO-OP>
3441:LVR:0:POS:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):120:0 |==> 1
3442:LVR:0:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):120:0 |==> -1
3443:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):120:local.setCharAt(0, 'W') |==> <NO-OP>
3444:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):122:local.append(inwd) |==> <NO-OP>
3445:LVR:0:POS:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):126:0 |==> 1
3446:LVR:0:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):126:0 |==> -1
3447:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):126:inwd[0] = 'S' |==> <NO-OP>
3448:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):127:local.append(inwd) |==> <NO-OP>
3449:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):130:local.append(inwd) |==> <NO-OP>
3450:LVR:0:POS:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):134:0 |==> 1
3451:LVR:0:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):134:0 |==> -1
3452:ROR:<(int,int):!=(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):136:code.length() < this.getMaxCodeLen() |==> code.length() != this.getMaxCodeLen()
3453:ROR:<(int,int):<=(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):136:code.length() < this.getMaxCodeLen() |==> code.length() <= this.getMaxCodeLen()
3454:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):136:code.length() < this.getMaxCodeLen() |==> false
3455:ROR:<(int,int):!=(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):137:n < wdsz |==> n != wdsz
3456:ROR:<(int,int):<=(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):137:n < wdsz |==> n <= wdsz
3457:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):137:n < wdsz |==> false
3458:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):136:(code.length() < this.getMaxCodeLen()) && (n < wdsz) |==> (code.length() < this.getMaxCodeLen()) == (n < wdsz)
3459:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):136:(code.length() < this.getMaxCodeLen()) && (n < wdsz) |==> false
3460:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):136:(code.length() < this.getMaxCodeLen()) && (n < wdsz) |==> (code.length() < this.getMaxCodeLen())
3461:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):137:(code.length() < this.getMaxCodeLen()) && (n < wdsz) |==> (n < wdsz)
3462:ROR:!=(int,int):<(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):140:symb != 'C' |==> symb < 'C'
3463:ROR:!=(int,int):>(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):140:symb != 'C' |==> symb > 'C'
3464:ROR:!=(int,int):TRUE(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):140:symb != 'C' |==> true
3465:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):140:(symb != 'C') && (isPreviousChar(local, n, symb)) |==> (symb != 'C') == (isPreviousChar(local, n, symb))
3466:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):140:(symb != 'C') && (isPreviousChar(local, n, symb)) |==> false
3467:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):140:(symb != 'C') && (isPreviousChar(local, n, symb)) |==> (symb != 'C')
3468:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):140:(symb != 'C') && (isPreviousChar(local, n, symb)) |==> (isPreviousChar(local, n, symb))
3469:STD:<INC>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):141:n++ |==> <NO-OP>
3470:LVR:0:POS:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):145:0 |==> 1
3471:LVR:0:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):145:0 |==> -1
3472:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):145:n == 0 |==> n <= 0
3473:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):145:n == 0 |==> n >= 0
3474:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):145:n == 0 |==> false
3475:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):146:code.append(symb) |==> <NO-OP>
3476:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):150:isPreviousChar(local, n, 'M') && isLastChar(wdsz, n) |==> isPreviousChar(local, n, 'M') == isLastChar(wdsz, n)
3477:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):150:isPreviousChar(local, n, 'M') && isLastChar(wdsz, n) |==> false
3478:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):150:isPreviousChar(local, n, 'M') && isLastChar(wdsz, n) |==> isPreviousChar(local, n, 'M')
3479:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):151:isPreviousChar(local, n, 'M') && isLastChar(wdsz, n) |==> isLastChar(wdsz, n)
3480:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):154:code.append(symb) |==> <NO-OP>
3481:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):158:isPreviousChar(local, n, 'S') && !isLastChar(wdsz, n) |==> isPreviousChar(local, n, 'S') == !isLastChar(wdsz, n)
3482:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):158:isPreviousChar(local, n, 'S') && !isLastChar(wdsz, n) |==> false
3483:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):158:isPreviousChar(local, n, 'S') && !isLastChar(wdsz, n) |==> isPreviousChar(local, n, 'S')
3484:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):159:isPreviousChar(local, n, 'S') && !isLastChar(wdsz, n) |==> !isLastChar(wdsz, n)
3485:LVR:POS:0:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):160:1 |==> 0
3486:LVR:POS:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):160:1 |==> -1
3487:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):160:n + 1 |==> n % 1
3488:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):160:n + 1 |==> n * 1
3489:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):160:n + 1 |==> n - 1
3490:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):160:n + 1 |==> n / 1
3491:LVR:0:POS:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):160:0 |==> 1
3492:LVR:0:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):160:0 |==> -1
3493:ROR:>=(int,int):==(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):160:FRONTV.indexOf(local.charAt(n + 1)) >= 0 |==> FRONTV.indexOf(local.charAt(n + 1)) == 0
3494:ROR:>=(int,int):>(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):160:FRONTV.indexOf(local.charAt(n + 1)) >= 0 |==> FRONTV.indexOf(local.charAt(n + 1)) > 0
3495:ROR:>=(int,int):TRUE(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):160:FRONTV.indexOf(local.charAt(n + 1)) >= 0 |==> true
3496:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):158:isPreviousChar(local, n, 'S') && !isLastChar(wdsz, n) && (FRONTV.indexOf(local.charAt(n + 1)) >= 0) |==> (isPreviousChar(local, n, 'S') && !isLastChar(wdsz, n)) == (FRONTV.indexOf(local.charAt(n + 1)) >= 0)
3497:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):159:isPreviousChar(local, n, 'S') && !isLastChar(wdsz, n) && (FRONTV.indexOf(local.charAt(n + 1)) >= 0) |==> false
3498:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):158:isPreviousChar(local, n, 'S') && !isLastChar(wdsz, n) && (FRONTV.indexOf(local.charAt(n + 1)) >= 0) |==> isPreviousChar(local, n, 'S') && !isLastChar(wdsz, n)
3499:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):160:isPreviousChar(local, n, 'S') && !isLastChar(wdsz, n) && (FRONTV.indexOf(local.charAt(n + 1)) >= 0) |==> (FRONTV.indexOf(local.charAt(n + 1)) >= 0)
3500:COR:regionMatch(local, n, "CIA"):TRUE:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):163:regionMatch(local, n, "CIA") |==> false
3501:COR:regionMatch(local, n, "CIA"):FALSE:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):163:regionMatch(local, n, "CIA") |==> true
3502:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):164:code.append('X') |==> <NO-OP>
3503:LVR:POS:0:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):168:1 |==> 0
3504:LVR:POS:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):168:1 |==> -1
3505:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):168:n + 1 |==> n % 1
3506:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):168:n + 1 |==> n * 1
3507:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):168:n + 1 |==> n - 1
3508:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):168:n + 1 |==> n / 1
3509:LVR:0:POS:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):168:0 |==> 1
3510:LVR:0:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):168:0 |==> -1
3511:ROR:>=(int,int):==(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):168:FRONTV.indexOf(local.charAt(n + 1)) >= 0 |==> FRONTV.indexOf(local.charAt(n + 1)) == 0
3512:ROR:>=(int,int):>(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):168:FRONTV.indexOf(local.charAt(n + 1)) >= 0 |==> FRONTV.indexOf(local.charAt(n + 1)) > 0
3513:ROR:>=(int,int):TRUE(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):168:FRONTV.indexOf(local.charAt(n + 1)) >= 0 |==> true
3514:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):167:!isLastChar(wdsz, n) && (FRONTV.indexOf(local.charAt(n + 1)) >= 0) |==> !isLastChar(wdsz, n) == (FRONTV.indexOf(local.charAt(n + 1)) >= 0)
3515:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):167:!isLastChar(wdsz, n) && (FRONTV.indexOf(local.charAt(n + 1)) >= 0) |==> false
3516:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):167:!isLastChar(wdsz, n) && (FRONTV.indexOf(local.charAt(n + 1)) >= 0) |==> !isLastChar(wdsz, n)
3517:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):168:!isLastChar(wdsz, n) && (FRONTV.indexOf(local.charAt(n + 1)) >= 0) |==> (FRONTV.indexOf(local.charAt(n + 1)) >= 0)
3518:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):169:code.append('S') |==> <NO-OP>
3519:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):172:isPreviousChar(local, n, 'S') && isNextChar(local, n, 'H') |==> isPreviousChar(local, n, 'S') == isNextChar(local, n, 'H')
3520:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):172:isPreviousChar(local, n, 'S') && isNextChar(local, n, 'H') |==> false
3521:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):172:isPreviousChar(local, n, 'S') && isNextChar(local, n, 'H') |==> isPreviousChar(local, n, 'S')
3522:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):173:isPreviousChar(local, n, 'S') && isNextChar(local, n, 'H') |==> isNextChar(local, n, 'H')
3523:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):174:code.append('K') |==> <NO-OP>
3524:COR:isNextChar(local, n, 'H'):TRUE:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):177:isNextChar(local, n, 'H') |==> false
3525:COR:isNextChar(local, n, 'H'):FALSE:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):177:isNextChar(local, n, 'H') |==> true
3526:LVR:0:POS:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):178:0 |==> 1
3527:LVR:0:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):178:0 |==> -1
3528:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):178:n == 0 |==> n <= 0
3529:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):178:n == 0 |==> n >= 0
3530:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):178:n == 0 |==> false
3531:LVR:POS:0:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):179:3 |==> 0
3532:LVR:POS:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):179:3 |==> -3
3533:ROR:>=(int,int):==(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):179:wdsz >= 3 |==> wdsz == 3
3534:ROR:>=(int,int):>(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):179:wdsz >= 3 |==> wdsz > 3
3535:ROR:>=(int,int):TRUE(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):179:wdsz >= 3 |==> true
3536:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):178:(n == 0) && (wdsz >= 3) |==> (n == 0) == (wdsz >= 3)
3537:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):178:(n == 0) && (wdsz >= 3) |==> false
3538:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):178:(n == 0) && (wdsz >= 3) |==> (n == 0)
3539:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):179:(n == 0) && (wdsz >= 3) |==> (wdsz >= 3)
3540:LVR:POS:0:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):180:2 |==> 0
3541:LVR:POS:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):180:2 |==> -2
3542:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):178:(n == 0) && (wdsz >= 3) && isVowel(local, 2) |==> ((n == 0) && (wdsz >= 3)) == isVowel(local, 2)
3543:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):179:(n == 0) && (wdsz >= 3) && isVowel(local, 2) |==> false
3544:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):178:(n == 0) && (wdsz >= 3) && isVowel(local, 2) |==> (n == 0) && (wdsz >= 3)
3545:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):180:(n == 0) && (wdsz >= 3) && isVowel(local, 2) |==> isVowel(local, 2)
3546:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):181:code.append('K') |==> <NO-OP>
3547:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):183:code.append('X') |==> <NO-OP>
3548:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):186:code.append('K') |==> <NO-OP>
3549:LVR:POS:0:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):190:1 |==> 0
3550:LVR:POS:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):190:1 |==> -1
3551:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):190:n + 1 |==> n % 1
3552:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):190:n + 1 |==> n * 1
3553:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):190:n + 1 |==> n - 1
3554:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):190:n + 1 |==> n / 1
3555:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):190:!isLastChar(wdsz, n + 1) && isNextChar(local, n, 'G') |==> !isLastChar(wdsz, n + 1) == isNextChar(local, n, 'G')
3556:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):190:!isLastChar(wdsz, n + 1) && isNextChar(local, n, 'G') |==> false
3557:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):190:!isLastChar(wdsz, n + 1) && isNextChar(local, n, 'G') |==> !isLastChar(wdsz, n + 1)
3558:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):191:!isLastChar(wdsz, n + 1) && isNextChar(local, n, 'G') |==> isNextChar(local, n, 'G')
3559:LVR:POS:0:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):192:2 |==> 0
3560:LVR:POS:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):192:2 |==> -2
3561:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):192:n + 2 |==> n % 2
3562:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):192:n + 2 |==> n * 2
3563:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):192:n + 2 |==> n - 2
3564:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):192:n + 2 |==> n / 2
3565:LVR:0:POS:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):192:0 |==> 1
3566:LVR:0:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):192:0 |==> -1
3567:ROR:>=(int,int):==(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):192:FRONTV.indexOf(local.charAt(n + 2)) >= 0 |==> FRONTV.indexOf(local.charAt(n + 2)) == 0
3568:ROR:>=(int,int):>(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):192:FRONTV.indexOf(local.charAt(n + 2)) >= 0 |==> FRONTV.indexOf(local.charAt(n + 2)) > 0
3569:ROR:>=(int,int):TRUE(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):192:FRONTV.indexOf(local.charAt(n + 2)) >= 0 |==> true
3570:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):190:!isLastChar(wdsz, n + 1) && isNextChar(local, n, 'G') && (FRONTV.indexOf(local.charAt(n + 2)) >= 0) |==> (!isLastChar(wdsz, n + 1) && isNextChar(local, n, 'G')) == (FRONTV.indexOf(local.charAt(n + 2)) >= 0)
3571:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):191:!isLastChar(wdsz, n + 1) && isNextChar(local, n, 'G') && (FRONTV.indexOf(local.charAt(n + 2)) >= 0) |==> false
3572:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):190:!isLastChar(wdsz, n + 1) && isNextChar(local, n, 'G') && (FRONTV.indexOf(local.charAt(n + 2)) >= 0) |==> !isLastChar(wdsz, n + 1) && isNextChar(local, n, 'G')
3573:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):192:!isLastChar(wdsz, n + 1) && isNextChar(local, n, 'G') && (FRONTV.indexOf(local.charAt(n + 2)) >= 0) |==> (FRONTV.indexOf(local.charAt(n + 2)) >= 0)
3574:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):193:code.append('J') |==> <NO-OP>
3575:LVR:POS:0:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):193:2 |==> 0
3576:LVR:POS:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):193:2 |==> -2
3577:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):193:n += 2 |==> <NO-OP>
3578:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):195:code.append('T') |==> <NO-OP>
3579:LVR:POS:0:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):199:1 |==> 0
3580:LVR:POS:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):199:1 |==> -1
3581:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):199:n + 1 |==> n % 1
3582:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):199:n + 1 |==> n * 1
3583:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):199:n + 1 |==> n - 1
3584:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):199:n + 1 |==> n / 1
3585:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):199:isLastChar(wdsz, n + 1) && isNextChar(local, n, 'H') |==> isLastChar(wdsz, n + 1) == isNextChar(local, n, 'H')
3586:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):199:isLastChar(wdsz, n + 1) && isNextChar(local, n, 'H') |==> false
3587:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):199:isLastChar(wdsz, n + 1) && isNextChar(local, n, 'H') |==> isLastChar(wdsz, n + 1)
3588:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):200:isLastChar(wdsz, n + 1) && isNextChar(local, n, 'H') |==> isNextChar(local, n, 'H')
3589:LVR:POS:0:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):203:1 |==> 0
3590:LVR:POS:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):203:1 |==> -1
3591:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):203:n + 1 |==> n % 1
3592:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):203:n + 1 |==> n * 1
3593:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):203:n + 1 |==> n - 1
3594:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):203:n + 1 |==> n / 1
3595:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):203:!isLastChar(wdsz, n + 1) && isNextChar(local, n, 'H') |==> !isLastChar(wdsz, n + 1) == isNextChar(local, n, 'H')
3596:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):203:!isLastChar(wdsz, n + 1) && isNextChar(local, n, 'H') |==> false
3597:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):203:!isLastChar(wdsz, n + 1) && isNextChar(local, n, 'H') |==> !isLastChar(wdsz, n + 1)
3598:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):204:!isLastChar(wdsz, n + 1) && isNextChar(local, n, 'H') |==> isNextChar(local, n, 'H')
3599:LVR:POS:0:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):205:2 |==> 0
3600:LVR:POS:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):205:2 |==> -2
3601:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):205:n + 2 |==> n % 2
3602:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):205:n + 2 |==> n * 2
3603:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):205:n + 2 |==> n - 2
3604:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):205:n + 2 |==> n / 2
3605:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):203:!isLastChar(wdsz, n + 1) && isNextChar(local, n, 'H') && !isVowel(local, n + 2) |==> (!isLastChar(wdsz, n + 1) && isNextChar(local, n, 'H')) == !isVowel(local, n + 2)
3606:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):204:!isLastChar(wdsz, n + 1) && isNextChar(local, n, 'H') && !isVowel(local, n + 2) |==> false
3607:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):203:!isLastChar(wdsz, n + 1) && isNextChar(local, n, 'H') && !isVowel(local, n + 2) |==> !isLastChar(wdsz, n + 1) && isNextChar(local, n, 'H')
3608:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):205:!isLastChar(wdsz, n + 1) && isNextChar(local, n, 'H') && !isVowel(local, n + 2) |==> !isVowel(local, n + 2)
3609:LVR:0:POS:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):208:0 |==> 1
3610:LVR:0:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):208:0 |==> -1
3611:ROR:>(int,int):!=(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):208:n > 0 |==> n != 0
3612:ROR:>(int,int):>=(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):208:n > 0 |==> n >= 0
3613:ROR:>(int,int):FALSE(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):208:n > 0 |==> false
3614:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):209:regionMatch(local, n, "GN") || regionMatch(local, n, "GNED") |==> regionMatch(local, n, "GN") != regionMatch(local, n, "GNED")
3615:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):209:regionMatch(local, n, "GN") || regionMatch(local, n, "GNED") |==> regionMatch(local, n, "GN")
3616:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):210:regionMatch(local, n, "GN") || regionMatch(local, n, "GNED") |==> regionMatch(local, n, "GNED")
3617:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):209:regionMatch(local, n, "GN") || regionMatch(local, n, "GNED") |==> true
3618:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):208:(n > 0) && (regionMatch(local, n, "GN") || regionMatch(local, n, "GNED")) |==> (n > 0) == (regionMatch(local, n, "GN") || regionMatch(local, n, "GNED"))
3619:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):208:(n > 0) && (regionMatch(local, n, "GN") || regionMatch(local, n, "GNED")) |==> false
3620:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):208:(n > 0) && (regionMatch(local, n, "GN") || regionMatch(local, n, "GNED")) |==> (n > 0)
3621:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):209:(n > 0) && (regionMatch(local, n, "GN") || regionMatch(local, n, "GNED")) |==> (regionMatch(local, n, "GN") || regionMatch(local, n, "GNED"))
3622:COR:isPreviousChar(local, n, 'G'):TRUE:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):213:isPreviousChar(local, n, 'G') |==> false
3623:COR:isPreviousChar(local, n, 'G'):FALSE:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):213:isPreviousChar(local, n, 'G') |==> true
3624:LVR:TRUE:FALSE:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):214:true |==> false
3625:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):214:hard = true |==> <NO-OP>
3626:LVR:FALSE:TRUE:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):216:false |==> true
3627:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):216:hard = false |==> <NO-OP>
3628:LVR:POS:0:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):219:1 |==> 0
3629:LVR:POS:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):219:1 |==> -1
3630:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):219:n + 1 |==> n % 1
3631:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):219:n + 1 |==> n * 1
3632:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):219:n + 1 |==> n - 1
3633:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):219:n + 1 |==> n / 1
3634:LVR:0:POS:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):219:0 |==> 1
3635:LVR:0:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):219:0 |==> -1
3636:ROR:>=(int,int):==(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):219:FRONTV.indexOf(local.charAt(n + 1)) >= 0 |==> FRONTV.indexOf(local.charAt(n + 1)) == 0
3637:ROR:>=(int,int):>(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):219:FRONTV.indexOf(local.charAt(n + 1)) >= 0 |==> FRONTV.indexOf(local.charAt(n + 1)) > 0
3638:ROR:>=(int,int):TRUE(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):219:FRONTV.indexOf(local.charAt(n + 1)) >= 0 |==> true
3639:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):218:!isLastChar(wdsz, n) && (FRONTV.indexOf(local.charAt(n + 1)) >= 0) |==> !isLastChar(wdsz, n) == (FRONTV.indexOf(local.charAt(n + 1)) >= 0)
3640:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):218:!isLastChar(wdsz, n) && (FRONTV.indexOf(local.charAt(n + 1)) >= 0) |==> false
3641:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):218:!isLastChar(wdsz, n) && (FRONTV.indexOf(local.charAt(n + 1)) >= 0) |==> !isLastChar(wdsz, n)
3642:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):219:!isLastChar(wdsz, n) && (FRONTV.indexOf(local.charAt(n + 1)) >= 0) |==> (FRONTV.indexOf(local.charAt(n + 1)) >= 0)
3643:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):218:!isLastChar(wdsz, n) && (FRONTV.indexOf(local.charAt(n + 1)) >= 0) && (!hard) |==> (!isLastChar(wdsz, n) && (FRONTV.indexOf(local.charAt(n + 1)) >= 0)) == (!hard)
3644:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):219:!isLastChar(wdsz, n) && (FRONTV.indexOf(local.charAt(n + 1)) >= 0) && (!hard) |==> false
3645:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):218:!isLastChar(wdsz, n) && (FRONTV.indexOf(local.charAt(n + 1)) >= 0) && (!hard) |==> !isLastChar(wdsz, n) && (FRONTV.indexOf(local.charAt(n + 1)) >= 0)
3646:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):220:!isLastChar(wdsz, n) && (FRONTV.indexOf(local.charAt(n + 1)) >= 0) && (!hard) |==> (!hard)
3647:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):221:code.append('J') |==> <NO-OP>
3648:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):223:code.append('K') |==> <NO-OP>
3649:COR:isLastChar(wdsz, n):TRUE:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):227:isLastChar(wdsz, n) |==> false
3650:COR:isLastChar(wdsz, n):FALSE:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):227:isLastChar(wdsz, n) |==> true
3651:LVR:0:POS:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):230:0 |==> 1
3652:LVR:0:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):230:0 |==> -1
3653:ROR:>(int,int):!=(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):230:n > 0 |==> n != 0
3654:ROR:>(int,int):>=(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):230:n > 0 |==> n >= 0
3655:ROR:>(int,int):FALSE(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):230:n > 0 |==> false
3656:LVR:POS:0:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):231:1 |==> 0
3657:LVR:POS:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):231:1 |==> -1
3658:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):231:n - 1 |==> n % 1
3659:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):231:n - 1 |==> n * 1
3660:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):231:n - 1 |==> n + 1
3661:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):231:n - 1 |==> n / 1
3662:LVR:0:POS:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):231:0 |==> 1
3663:LVR:0:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):231:0 |==> -1
3664:ROR:>=(int,int):==(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):231:VARSON.indexOf(local.charAt(n - 1)) >= 0 |==> VARSON.indexOf(local.charAt(n - 1)) == 0
3665:ROR:>=(int,int):>(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):231:VARSON.indexOf(local.charAt(n - 1)) >= 0 |==> VARSON.indexOf(local.charAt(n - 1)) > 0
3666:ROR:>=(int,int):TRUE(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):231:VARSON.indexOf(local.charAt(n - 1)) >= 0 |==> true
3667:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):230:(n > 0) && (VARSON.indexOf(local.charAt(n - 1)) >= 0) |==> (n > 0) == (VARSON.indexOf(local.charAt(n - 1)) >= 0)
3668:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):230:(n > 0) && (VARSON.indexOf(local.charAt(n - 1)) >= 0) |==> false
3669:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):230:(n > 0) && (VARSON.indexOf(local.charAt(n - 1)) >= 0) |==> (n > 0)
3670:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):231:(n > 0) && (VARSON.indexOf(local.charAt(n - 1)) >= 0) |==> (VARSON.indexOf(local.charAt(n - 1)) >= 0)
3671:LVR:POS:0:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):234:1 |==> 0
3672:LVR:POS:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):234:1 |==> -1
3673:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):234:n + 1 |==> n % 1
3674:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):234:n + 1 |==> n * 1
3675:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):234:n + 1 |==> n - 1
3676:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):234:n + 1 |==> n / 1
3677:COR:isVowel(local, n + 1):TRUE:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):234:isVowel(local, n + 1) |==> false
3678:COR:isVowel(local, n + 1):FALSE:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):234:isVowel(local, n + 1) |==> true
3679:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):235:code.append('H') |==> <NO-OP>
3680:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):244:code.append(symb) |==> <NO-OP>
3681:LVR:0:POS:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):247:0 |==> 1
3682:LVR:0:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):247:0 |==> -1
3683:ROR:>(int,int):!=(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):247:n > 0 |==> n != 0
3684:ROR:>(int,int):>=(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):247:n > 0 |==> n >= 0
3685:ROR:>(int,int):FALSE(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):247:n > 0 |==> false
3686:COR:isPreviousChar(local, n, 'C'):TRUE:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):248:isPreviousChar(local, n, 'C') |==> false
3687:COR:isPreviousChar(local, n, 'C'):FALSE:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):248:isPreviousChar(local, n, 'C') |==> true
3688:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):249:code.append(symb) |==> <NO-OP>
3689:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):252:code.append(symb) |==> <NO-OP>
3690:COR:isNextChar(local, n, 'H'):TRUE:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):256:isNextChar(local, n, 'H') |==> false
3691:COR:isNextChar(local, n, 'H'):FALSE:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):256:isNextChar(local, n, 'H') |==> true
3692:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):258:code.append('F') |==> <NO-OP>
3693:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):260:code.append(symb) |==> <NO-OP>
3694:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):264:code.append('K') |==> <NO-OP>
3695:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):267:regionMatch(local, n, "SH") || regionMatch(local, n, "SIO") |==> regionMatch(local, n, "SH") != regionMatch(local, n, "SIO")
3696:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):267:regionMatch(local, n, "SH") || regionMatch(local, n, "SIO") |==> regionMatch(local, n, "SH")
3697:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):268:regionMatch(local, n, "SH") || regionMatch(local, n, "SIO") |==> regionMatch(local, n, "SIO")
3698:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):267:regionMatch(local, n, "SH") || regionMatch(local, n, "SIO") |==> true
3699:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):267:regionMatch(local, n, "SH") || regionMatch(local, n, "SIO") || regionMatch(local, n, "SIA") |==> (regionMatch(local, n, "SH") || regionMatch(local, n, "SIO")) != regionMatch(local, n, "SIA")
3700:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):267:regionMatch(local, n, "SH") || regionMatch(local, n, "SIO") || regionMatch(local, n, "SIA") |==> regionMatch(local, n, "SH") || regionMatch(local, n, "SIO")
3701:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):269:regionMatch(local, n, "SH") || regionMatch(local, n, "SIO") || regionMatch(local, n, "SIA") |==> regionMatch(local, n, "SIA")
3702:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):268:regionMatch(local, n, "SH") || regionMatch(local, n, "SIO") || regionMatch(local, n, "SIA") |==> true
3703:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):270:code.append('X') |==> <NO-OP>
3704:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):272:code.append('S') |==> <NO-OP>
3705:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):276:regionMatch(local, n, "TIA") || regionMatch(local, n, "TIO") |==> regionMatch(local, n, "TIA") != regionMatch(local, n, "TIO")
3706:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):276:regionMatch(local, n, "TIA") || regionMatch(local, n, "TIO") |==> regionMatch(local, n, "TIA")
3707:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):277:regionMatch(local, n, "TIA") || regionMatch(local, n, "TIO") |==> regionMatch(local, n, "TIO")
3708:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):276:regionMatch(local, n, "TIA") || regionMatch(local, n, "TIO") |==> true
3709:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):278:code.append('X') |==> <NO-OP>
3710:COR:regionMatch(local, n, "TCH"):TRUE:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):281:regionMatch(local, n, "TCH") |==> false
3711:COR:regionMatch(local, n, "TCH"):FALSE:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):281:regionMatch(local, n, "TCH") |==> true
3712:COR:regionMatch(local, n, "TH"):TRUE:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):286:regionMatch(local, n, "TH") |==> false
3713:COR:regionMatch(local, n, "TH"):FALSE:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):286:regionMatch(local, n, "TH") |==> true
3714:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):287:code.append('0') |==> <NO-OP>
3715:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):289:code.append('T') |==> <NO-OP>
3716:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):293:code.append('F') |==> <NO-OP>
3717:LVR:POS:0:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):296:1 |==> 0
3718:LVR:POS:NEG:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):296:1 |==> -1
3719:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):296:n + 1 |==> n % 1
3720:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):296:n + 1 |==> n * 1
3721:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):296:n + 1 |==> n - 1
3722:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):296:n + 1 |==> n / 1
3723:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):295:!isLastChar(wdsz, n) && isVowel(local, n + 1) |==> !isLastChar(wdsz, n) == isVowel(local, n + 1)
3724:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):295:!isLastChar(wdsz, n) && isVowel(local, n + 1) |==> false
3725:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):295:!isLastChar(wdsz, n) && isVowel(local, n + 1) |==> !isLastChar(wdsz, n)
3726:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):296:!isLastChar(wdsz, n) && isVowel(local, n + 1) |==> isVowel(local, n + 1)
3727:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):297:code.append(symb) |==> <NO-OP>
3728:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):301:code.append('K') |==> <NO-OP>
3729:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):301:code.append('S') |==> <NO-OP>
3730:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):304:code.append('S') |==> <NO-OP>
3731:STD:<INC>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):306:n++ |==> <NO-OP>
3732:ROR:>(int,int):!=(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):308:code.length() > this.getMaxCodeLen() |==> code.length() != this.getMaxCodeLen()
3733:ROR:>(int,int):>=(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):308:code.length() > this.getMaxCodeLen() |==> code.length() >= this.getMaxCodeLen()
3734:ROR:>(int,int):FALSE(int,int):org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):308:code.length() > this.getMaxCodeLen() |==> false
3735:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Metaphone@metaphone(java.lang.String):309:code.setLength(this.getMaxCodeLen()) |==> <NO-OP>
3736:LVR:0:POS:org.apache.commons.codec.language.Metaphone@isVowel(java.lang.StringBuffer,int):316:0 |==> 1
3737:LVR:0:NEG:org.apache.commons.codec.language.Metaphone@isVowel(java.lang.StringBuffer,int):316:0 |==> -1
3738:ROR:>=(int,int):==(int,int):org.apache.commons.codec.language.Metaphone@isVowel(java.lang.StringBuffer,int):316:VOWELS.indexOf(string.charAt(index)) >= 0 |==> VOWELS.indexOf(string.charAt(index)) == 0
3739:ROR:>=(int,int):>(int,int):org.apache.commons.codec.language.Metaphone@isVowel(java.lang.StringBuffer,int):316:VOWELS.indexOf(string.charAt(index)) >= 0 |==> VOWELS.indexOf(string.charAt(index)) > 0
3740:ROR:>=(int,int):TRUE(int,int):org.apache.commons.codec.language.Metaphone@isVowel(java.lang.StringBuffer,int):316:VOWELS.indexOf(string.charAt(index)) >= 0 |==> true
3741:LVR:FALSE:TRUE:org.apache.commons.codec.language.Metaphone@isPreviousChar(java.lang.StringBuffer,int,char):320:false |==> true
3742:LVR:0:POS:org.apache.commons.codec.language.Metaphone@isPreviousChar(java.lang.StringBuffer,int,char):321:0 |==> 1
3743:LVR:0:NEG:org.apache.commons.codec.language.Metaphone@isPreviousChar(java.lang.StringBuffer,int,char):321:0 |==> -1
3744:ROR:>(int,int):!=(int,int):org.apache.commons.codec.language.Metaphone@isPreviousChar(java.lang.StringBuffer,int,char):321:index > 0 |==> index != 0
3745:ROR:>(int,int):>=(int,int):org.apache.commons.codec.language.Metaphone@isPreviousChar(java.lang.StringBuffer,int,char):321:index > 0 |==> index >= 0
3746:ROR:>(int,int):FALSE(int,int):org.apache.commons.codec.language.Metaphone@isPreviousChar(java.lang.StringBuffer,int,char):321:index > 0 |==> false
3747:ROR:<(int,int):!=(int,int):org.apache.commons.codec.language.Metaphone@isPreviousChar(java.lang.StringBuffer,int,char):322:index < string.length() |==> index != string.length()
3748:ROR:<(int,int):<=(int,int):org.apache.commons.codec.language.Metaphone@isPreviousChar(java.lang.StringBuffer,int,char):322:index < string.length() |==> index <= string.length()
3749:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.language.Metaphone@isPreviousChar(java.lang.StringBuffer,int,char):322:index < string.length() |==> false
3750:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.Metaphone@isPreviousChar(java.lang.StringBuffer,int,char):321:index > 0 && index < string.length() |==> index > 0 == index < string.length()
3751:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.Metaphone@isPreviousChar(java.lang.StringBuffer,int,char):321:index > 0 && index < string.length() |==> false
3752:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@isPreviousChar(java.lang.StringBuffer,int,char):321:index > 0 && index < string.length() |==> index > 0
3753:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@isPreviousChar(java.lang.StringBuffer,int,char):322:index > 0 && index < string.length() |==> index < string.length()
3754:LVR:POS:0:org.apache.commons.codec.language.Metaphone@isPreviousChar(java.lang.StringBuffer,int,char):323:1 |==> 0
3755:LVR:POS:NEG:org.apache.commons.codec.language.Metaphone@isPreviousChar(java.lang.StringBuffer,int,char):323:1 |==> -1
3756:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.Metaphone@isPreviousChar(java.lang.StringBuffer,int,char):323:index - 1 |==> index % 1
3757:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.Metaphone@isPreviousChar(java.lang.StringBuffer,int,char):323:index - 1 |==> index * 1
3758:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.Metaphone@isPreviousChar(java.lang.StringBuffer,int,char):323:index - 1 |==> index + 1
3759:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.Metaphone@isPreviousChar(java.lang.StringBuffer,int,char):323:index - 1 |==> index / 1
3760:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.Metaphone@isPreviousChar(java.lang.StringBuffer,int,char):323:string.charAt(index - 1) == c |==> string.charAt(index - 1) <= c
3761:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.Metaphone@isPreviousChar(java.lang.StringBuffer,int,char):323:string.charAt(index - 1) == c |==> string.charAt(index - 1) >= c
3762:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.Metaphone@isPreviousChar(java.lang.StringBuffer,int,char):323:string.charAt(index - 1) == c |==> false
3763:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Metaphone@isPreviousChar(java.lang.StringBuffer,int,char):323:matches = string.charAt(index - 1) == c |==> <NO-OP>
3764:LVR:FALSE:TRUE:org.apache.commons.codec.language.Metaphone@isNextChar(java.lang.StringBuffer,int,char):329:false |==> true
3765:LVR:0:POS:org.apache.commons.codec.language.Metaphone@isNextChar(java.lang.StringBuffer,int,char):330:0 |==> 1
3766:LVR:0:NEG:org.apache.commons.codec.language.Metaphone@isNextChar(java.lang.StringBuffer,int,char):330:0 |==> -1
3767:ROR:>=(int,int):==(int,int):org.apache.commons.codec.language.Metaphone@isNextChar(java.lang.StringBuffer,int,char):330:index >= 0 |==> index == 0
3768:ROR:>=(int,int):>(int,int):org.apache.commons.codec.language.Metaphone@isNextChar(java.lang.StringBuffer,int,char):330:index >= 0 |==> index > 0
3769:ROR:>=(int,int):TRUE(int,int):org.apache.commons.codec.language.Metaphone@isNextChar(java.lang.StringBuffer,int,char):330:index >= 0 |==> true
3770:LVR:POS:0:org.apache.commons.codec.language.Metaphone@isNextChar(java.lang.StringBuffer,int,char):331:1 |==> 0
3771:LVR:POS:NEG:org.apache.commons.codec.language.Metaphone@isNextChar(java.lang.StringBuffer,int,char):331:1 |==> -1
3772:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.Metaphone@isNextChar(java.lang.StringBuffer,int,char):331:string.length() - 1 |==> string.length() % 1
3773:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.Metaphone@isNextChar(java.lang.StringBuffer,int,char):331:string.length() - 1 |==> string.length() * 1
3774:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.Metaphone@isNextChar(java.lang.StringBuffer,int,char):331:string.length() - 1 |==> string.length() + 1
3775:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.Metaphone@isNextChar(java.lang.StringBuffer,int,char):331:string.length() - 1 |==> string.length() / 1
3776:ROR:<(int,int):!=(int,int):org.apache.commons.codec.language.Metaphone@isNextChar(java.lang.StringBuffer,int,char):331:index < string.length() - 1 |==> index != string.length() - 1
3777:ROR:<(int,int):<=(int,int):org.apache.commons.codec.language.Metaphone@isNextChar(java.lang.StringBuffer,int,char):331:index < string.length() - 1 |==> index <= string.length() - 1
3778:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.language.Metaphone@isNextChar(java.lang.StringBuffer,int,char):331:index < string.length() - 1 |==> false
3779:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.Metaphone@isNextChar(java.lang.StringBuffer,int,char):330:index >= 0 && index < string.length() - 1 |==> index >= 0 == index < string.length() - 1
3780:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.Metaphone@isNextChar(java.lang.StringBuffer,int,char):330:index >= 0 && index < string.length() - 1 |==> false
3781:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@isNextChar(java.lang.StringBuffer,int,char):330:index >= 0 && index < string.length() - 1 |==> index >= 0
3782:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@isNextChar(java.lang.StringBuffer,int,char):331:index >= 0 && index < string.length() - 1 |==> index < string.length() - 1
3783:LVR:POS:0:org.apache.commons.codec.language.Metaphone@isNextChar(java.lang.StringBuffer,int,char):332:1 |==> 0
3784:LVR:POS:NEG:org.apache.commons.codec.language.Metaphone@isNextChar(java.lang.StringBuffer,int,char):332:1 |==> -1
3785:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.Metaphone@isNextChar(java.lang.StringBuffer,int,char):332:index + 1 |==> index % 1
3786:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.Metaphone@isNextChar(java.lang.StringBuffer,int,char):332:index + 1 |==> index * 1
3787:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.Metaphone@isNextChar(java.lang.StringBuffer,int,char):332:index + 1 |==> index - 1
3788:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.Metaphone@isNextChar(java.lang.StringBuffer,int,char):332:index + 1 |==> index / 1
3789:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.Metaphone@isNextChar(java.lang.StringBuffer,int,char):332:string.charAt(index + 1) == c |==> string.charAt(index + 1) <= c
3790:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.Metaphone@isNextChar(java.lang.StringBuffer,int,char):332:string.charAt(index + 1) == c |==> string.charAt(index + 1) >= c
3791:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.Metaphone@isNextChar(java.lang.StringBuffer,int,char):332:string.charAt(index + 1) == c |==> false
3792:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Metaphone@isNextChar(java.lang.StringBuffer,int,char):332:matches = string.charAt(index + 1) == c |==> <NO-OP>
3793:LVR:FALSE:TRUE:org.apache.commons.codec.language.Metaphone@regionMatch(java.lang.StringBuffer,int,java.lang.String):338:false |==> true
3794:LVR:0:POS:org.apache.commons.codec.language.Metaphone@regionMatch(java.lang.StringBuffer,int,java.lang.String):339:0 |==> 1
3795:LVR:0:NEG:org.apache.commons.codec.language.Metaphone@regionMatch(java.lang.StringBuffer,int,java.lang.String):339:0 |==> -1
3796:ROR:>=(int,int):==(int,int):org.apache.commons.codec.language.Metaphone@regionMatch(java.lang.StringBuffer,int,java.lang.String):339:index >= 0 |==> index == 0
3797:ROR:>=(int,int):>(int,int):org.apache.commons.codec.language.Metaphone@regionMatch(java.lang.StringBuffer,int,java.lang.String):339:index >= 0 |==> index > 0
3798:ROR:>=(int,int):TRUE(int,int):org.apache.commons.codec.language.Metaphone@regionMatch(java.lang.StringBuffer,int,java.lang.String):339:index >= 0 |==> true
3799:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.Metaphone@regionMatch(java.lang.StringBuffer,int,java.lang.String):340:index + test.length() |==> index % test.length()
3800:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.Metaphone@regionMatch(java.lang.StringBuffer,int,java.lang.String):340:index + test.length() |==> index * test.length()
3801:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.Metaphone@regionMatch(java.lang.StringBuffer,int,java.lang.String):340:index + test.length() |==> index - test.length()
3802:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.Metaphone@regionMatch(java.lang.StringBuffer,int,java.lang.String):340:index + test.length() |==> index / test.length()
3803:LVR:POS:0:org.apache.commons.codec.language.Metaphone@regionMatch(java.lang.StringBuffer,int,java.lang.String):340:1 |==> 0
3804:LVR:POS:NEG:org.apache.commons.codec.language.Metaphone@regionMatch(java.lang.StringBuffer,int,java.lang.String):340:1 |==> -1
3805:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.Metaphone@regionMatch(java.lang.StringBuffer,int,java.lang.String):340:index + test.length() - 1 |==> (index + test.length()) % 1
3806:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.Metaphone@regionMatch(java.lang.StringBuffer,int,java.lang.String):340:index + test.length() - 1 |==> (index + test.length()) * 1
3807:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.Metaphone@regionMatch(java.lang.StringBuffer,int,java.lang.String):340:index + test.length() - 1 |==> index + test.length() + 1
3808:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.Metaphone@regionMatch(java.lang.StringBuffer,int,java.lang.String):340:index + test.length() - 1 |==> (index + test.length()) / 1
3809:ROR:<(int,int):!=(int,int):org.apache.commons.codec.language.Metaphone@regionMatch(java.lang.StringBuffer,int,java.lang.String):340:(index + test.length() - 1) < string.length() |==> (index + test.length() - 1) != string.length()
3810:ROR:<(int,int):<=(int,int):org.apache.commons.codec.language.Metaphone@regionMatch(java.lang.StringBuffer,int,java.lang.String):340:(index + test.length() - 1) < string.length() |==> (index + test.length() - 1) <= string.length()
3811:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.language.Metaphone@regionMatch(java.lang.StringBuffer,int,java.lang.String):340:(index + test.length() - 1) < string.length() |==> false
3812:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.Metaphone@regionMatch(java.lang.StringBuffer,int,java.lang.String):339:index >= 0 && (index + test.length() - 1) < string.length() |==> index >= 0 == (index + test.length() - 1) < string.length()
3813:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.Metaphone@regionMatch(java.lang.StringBuffer,int,java.lang.String):339:index >= 0 && (index + test.length() - 1) < string.length() |==> false
3814:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@regionMatch(java.lang.StringBuffer,int,java.lang.String):339:index >= 0 && (index + test.length() - 1) < string.length() |==> index >= 0
3815:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.Metaphone@regionMatch(java.lang.StringBuffer,int,java.lang.String):340:index >= 0 && (index + test.length() - 1) < string.length() |==> (index + test.length() - 1) < string.length()
3816:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.Metaphone@regionMatch(java.lang.StringBuffer,int,java.lang.String):341:index + test.length() |==> index % test.length()
3817:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.Metaphone@regionMatch(java.lang.StringBuffer,int,java.lang.String):341:index + test.length() |==> index * test.length()
3818:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.Metaphone@regionMatch(java.lang.StringBuffer,int,java.lang.String):341:index + test.length() |==> index - test.length()
3819:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.Metaphone@regionMatch(java.lang.StringBuffer,int,java.lang.String):341:index + test.length() |==> index / test.length()
3820:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Metaphone@regionMatch(java.lang.StringBuffer,int,java.lang.String):342:matches = substring.equals(test) |==> <NO-OP>
3821:LVR:POS:0:org.apache.commons.codec.language.Metaphone@isLastChar(int,int):348:1 |==> 0
3822:LVR:POS:NEG:org.apache.commons.codec.language.Metaphone@isLastChar(int,int):348:1 |==> -1
3823:AOR:+(int,int):%(int,int):org.apache.commons.codec.language.Metaphone@isLastChar(int,int):348:n + 1 |==> n % 1
3824:AOR:+(int,int):*(int,int):org.apache.commons.codec.language.Metaphone@isLastChar(int,int):348:n + 1 |==> n * 1
3825:AOR:+(int,int):-(int,int):org.apache.commons.codec.language.Metaphone@isLastChar(int,int):348:n + 1 |==> n - 1
3826:AOR:+(int,int):/(int,int):org.apache.commons.codec.language.Metaphone@isLastChar(int,int):348:n + 1 |==> n / 1
3827:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.Metaphone@isLastChar(int,int):348:n + 1 == wdsz |==> n + 1 <= wdsz
3828:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.Metaphone@isLastChar(int,int):348:n + 1 == wdsz |==> n + 1 >= wdsz
3829:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.Metaphone@isLastChar(int,int):348:n + 1 == wdsz |==> false
3830:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Metaphone@setMaxCodeLen(int):403:this.maxCodeLen = maxCodeLen |==> <NO-OP>
3831:COR:Character.isLetter(c):TRUE:org.apache.commons.codec.language.RefinedSoundex@getMappingCode(char):141:Character.isLetter(c) |==> false
3832:COR:Character.isLetter(c):FALSE:org.apache.commons.codec.language.RefinedSoundex@getMappingCode(char):141:Character.isLetter(c) |==> true
3833:LVR:0:POS:org.apache.commons.codec.language.RefinedSoundex@getMappingCode(char):142:0 |==> 1
3834:LVR:0:NEG:org.apache.commons.codec.language.RefinedSoundex@getMappingCode(char):142:0 |==> -1
3835:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.RefinedSoundex@getMappingCode(char):144:Character.toUpperCase(c) - 'A' |==> Character.toUpperCase(c) % 'A'
3836:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.RefinedSoundex@getMappingCode(char):144:Character.toUpperCase(c) - 'A' |==> Character.toUpperCase(c) * 'A'
3837:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.RefinedSoundex@getMappingCode(char):144:Character.toUpperCase(c) - 'A' |==> Character.toUpperCase(c) + 'A'
3838:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.RefinedSoundex@getMappingCode(char):144:Character.toUpperCase(c) - 'A' |==> Character.toUpperCase(c) / 'A'
3839:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.language.RefinedSoundex@soundex(java.lang.String):155:str == null |==> false
3840:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.RefinedSoundex@soundex(java.lang.String):158:str = SoundexUtils.clean(str) |==> <NO-OP>
3841:LVR:0:POS:org.apache.commons.codec.language.RefinedSoundex@soundex(java.lang.String):159:0 |==> 1
3842:LVR:0:NEG:org.apache.commons.codec.language.RefinedSoundex@soundex(java.lang.String):159:0 |==> -1
3843:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.RefinedSoundex@soundex(java.lang.String):159:str.length() == 0 |==> str.length() <= 0
3844:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.RefinedSoundex@soundex(java.lang.String):159:str.length() == 0 |==> str.length() >= 0
3845:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.RefinedSoundex@soundex(java.lang.String):159:str.length() == 0 |==> false
3846:LVR:0:POS:org.apache.commons.codec.language.RefinedSoundex@soundex(java.lang.String):164:0 |==> 1
3847:LVR:0:NEG:org.apache.commons.codec.language.RefinedSoundex@soundex(java.lang.String):164:0 |==> -1
3848:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.RefinedSoundex@soundex(java.lang.String):164:sBuf.append(str.charAt(0)) |==> <NO-OP>
3849:LVR:0:POS:org.apache.commons.codec.language.RefinedSoundex@soundex(java.lang.String):169:0 |==> 1
3850:LVR:0:NEG:org.apache.commons.codec.language.RefinedSoundex@soundex(java.lang.String):169:0 |==> -1
3851:ROR:<(int,int):!=(int,int):org.apache.commons.codec.language.RefinedSoundex@soundex(java.lang.String):169:i < str.length() |==> i != str.length()
3852:ROR:<(int,int):<=(int,int):org.apache.commons.codec.language.RefinedSoundex@soundex(java.lang.String):169:i < str.length() |==> i <= str.length()
3853:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.language.RefinedSoundex@soundex(java.lang.String):169:i < str.length() |==> false
3854:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.RefinedSoundex@soundex(java.lang.String):172:current == last |==> current <= last
3855:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.RefinedSoundex@soundex(java.lang.String):172:current == last |==> current >= last
3856:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.RefinedSoundex@soundex(java.lang.String):172:current == last |==> false
3857:LVR:0:POS:org.apache.commons.codec.language.RefinedSoundex@soundex(java.lang.String):174:0 |==> 1
3858:LVR:0:NEG:org.apache.commons.codec.language.RefinedSoundex@soundex(java.lang.String):174:0 |==> -1
3859:ROR:!=(int,int):<(int,int):org.apache.commons.codec.language.RefinedSoundex@soundex(java.lang.String):174:current != 0 |==> current < 0
3860:ROR:!=(int,int):>(int,int):org.apache.commons.codec.language.RefinedSoundex@soundex(java.lang.String):174:current != 0 |==> current > 0
3861:ROR:!=(int,int):TRUE(int,int):org.apache.commons.codec.language.RefinedSoundex@soundex(java.lang.String):174:current != 0 |==> true
3862:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.RefinedSoundex@soundex(java.lang.String):175:sBuf.append(current) |==> <NO-OP>
3863:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.RefinedSoundex@soundex(java.lang.String):178:last = current |==> <NO-OP>
3864:LVR:POS:0:org.apache.commons.codec.language.Soundex:88:4 |==> 0
3865:LVR:POS:NEG:org.apache.commons.codec.language.Soundex:88:4 |==> -4
3866:STD:<CALL>:<NO-OP>:org.apache.commons.codec.language.Soundex@<init>(char[]):117:this.setSoundexMapping(mapping) |==> <NO-OP>
3867:LVR:POS:0:org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):170:1 |==> 0
3868:LVR:POS:NEG:org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):170:1 |==> -1
3869:ROR:>(int,int):!=(int,int):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):170:index > 1 |==> index != 1
3870:ROR:>(int,int):>=(int,int):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):170:index > 1 |==> index >= 1
3871:ROR:>(int,int):FALSE(int,int):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):170:index > 1 |==> false
3872:ROR:!=(int,int):<(int,int):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):170:mappedChar != '0' |==> mappedChar < '0'
3873:ROR:!=(int,int):>(int,int):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):170:mappedChar != '0' |==> mappedChar > '0'
3874:ROR:!=(int,int):TRUE(int,int):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):170:mappedChar != '0' |==> true
3875:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):170:index > 1 && mappedChar != '0' |==> index > 1 == (mappedChar != '0')
3876:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):170:index > 1 && mappedChar != '0' |==> false
3877:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):170:index > 1 && mappedChar != '0' |==> index > 1
3878:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):170:index > 1 && mappedChar != '0' |==> mappedChar != '0'
3879:LVR:POS:0:org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):171:1 |==> 0
3880:LVR:POS:NEG:org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):171:1 |==> -1
3881:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):171:index - 1 |==> index % 1
3882:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):171:index - 1 |==> index * 1
3883:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):171:index - 1 |==> index + 1
3884:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):171:index - 1 |==> index / 1
3885:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):172:'H' == hwChar |==> 'H' <= hwChar
3886:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):172:'H' == hwChar |==> 'H' >= hwChar
3887:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):172:'H' == hwChar |==> false
3888:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):172:'W' == hwChar |==> 'W' <= hwChar
3889:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):172:'W' == hwChar |==> 'W' >= hwChar
3890:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):172:'W' == hwChar |==> false
3891:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):172:'H' == hwChar || 'W' == hwChar |==> 'H' == hwChar != ('W' == hwChar)
3892:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):172:'H' == hwChar || 'W' == hwChar |==> 'H' == hwChar
3893:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):172:'H' == hwChar || 'W' == hwChar |==> 'W' == hwChar
3894:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):172:'H' == hwChar || 'W' == hwChar |==> true
3895:LVR:POS:0:org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):173:2 |==> 0
3896:LVR:POS:NEG:org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):173:2 |==> -2
3897:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):173:index - 2 |==> index % 2
3898:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):173:index - 2 |==> index * 2
3899:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):173:index - 2 |==> index + 2
3900:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):173:index - 2 |==> index / 2
3901:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):175:firstCode == mappedChar |==> firstCode <= mappedChar
3902:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):175:firstCode == mappedChar |==> firstCode >= mappedChar
3903:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):175:firstCode == mappedChar |==> false
3904:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):175:'H' == preHWChar |==> 'H' <= preHWChar
3905:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):175:'H' == preHWChar |==> 'H' >= preHWChar
3906:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):175:'H' == preHWChar |==> false
3907:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):175:firstCode == mappedChar || 'H' == preHWChar |==> firstCode == mappedChar != ('H' == preHWChar)
3908:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):175:firstCode == mappedChar || 'H' == preHWChar |==> firstCode == mappedChar
3909:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):175:firstCode == mappedChar || 'H' == preHWChar |==> 'H' == preHWChar
3910:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):175:firstCode == mappedChar || 'H' == preHWChar |==> true
3911:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):175:'W' == preHWChar |==> 'W' <= preHWChar
3912:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):175:'W' == preHWChar |==> 'W' >= preHWChar
3913:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):175:'W' == preHWChar |==> false
3914:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):175:firstCode == mappedChar || 'H' == preHWChar || 'W' == preHWChar |==> (firstCode == mappedChar || 'H' == preHWChar) != ('W' == preHWChar)
3915:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):175:firstCode == mappedChar || 'H' == preHWChar || 'W' == preHWChar |==> firstCode == mappedChar || 'H' == preHWChar
3916:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):175:firstCode == mappedChar || 'H' == preHWChar || 'W' == preHWChar |==> 'W' == preHWChar
3917:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):175:firstCode == mappedChar || 'H' == preHWChar || 'W' == preHWChar |==> true
3918:LVR:0:POS:org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):176:0 |==> 1
3919:LVR:0:NEG:org.apache.commons.codec.language.Soundex@getMappingCode(java.lang.String,int):176:0 |==> -1
3920:AOR:-(int,int):%(int,int):org.apache.commons.codec.language.Soundex@map(char):212:ch - 'A' |==> ch % 'A'
3921:AOR:-(int,int):*(int,int):org.apache.commons.codec.language.Soundex@map(char):212:ch - 'A' |==> ch * 'A'
3922:AOR:-(int,int):+(int,int):org.apache.commons.codec.language.Soundex@map(char):212:ch - 'A' |==> ch + 'A'
3923:AOR:-(int,int):/(int,int):org.apache.commons.codec.language.Soundex@map(char):212:ch - 'A' |==> ch / 'A'
3924:LVR:0:POS:org.apache.commons.codec.language.Soundex@map(char):213:0 |==> 1
3925:LVR:0:NEG:org.apache.commons.codec.language.Soundex@map(char):213:0 |==> -1
3926:ROR:<(int,int):!=(int,int):org.apache.commons.codec.language.Soundex@map(char):213:index < 0 |==> index != 0
3927:ROR:<(int,int):<=(int,int):org.apache.commons.codec.language.Soundex@map(char):213:index < 0 |==> index <= 0
3928:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.language.Soundex@map(char):213:index < 0 |==> false
3929:ROR:>=(int,int):==(int,int):org.apache.commons.codec.language.Soundex@map(char):213:index >= this.getSoundexMapping().length |==> index == this.getSoundexMapping().length
3930:ROR:>=(int,int):>(int,int):org.apache.commons.codec.language.Soundex@map(char):213:index >= this.getSoundexMapping().length |==> index > this.getSoundexMapping().length
3931:ROR:>=(int,int):TRUE(int,int):org.apache.commons.codec.language.Soundex@map(char):213:index >= this.getSoundexMapping().length |==> true
3932:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.Soundex@map(char):213:index < 0 || index >= this.getSoundexMapping().length |==> index < 0 != index >= this.getSoundexMapping().length
3933:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.Soundex@map(char):213:index < 0 || index >= this.getSoundexMapping().length |==> index < 0
3934:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.Soundex@map(char):213:index < 0 || index >= this.getSoundexMapping().length |==> index >= this.getSoundexMapping().length
3935:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.Soundex@map(char):213:index < 0 || index >= this.getSoundexMapping().length |==> true
3936:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Soundex@setMaxLength(int):227:this.maxLength = maxLength |==> <NO-OP>
3937:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Soundex@setSoundexMapping(char[]):237:this.soundexMapping = soundexMapping |==> <NO-OP>
3938:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.language.Soundex@soundex(java.lang.String):250:str == null |==> false
3939:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Soundex@soundex(java.lang.String):253:str = SoundexUtils.clean(str) |==> <NO-OP>
3940:LVR:0:POS:org.apache.commons.codec.language.Soundex@soundex(java.lang.String):254:0 |==> 1
3941:LVR:0:NEG:org.apache.commons.codec.language.Soundex@soundex(java.lang.String):254:0 |==> -1
3942:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.Soundex@soundex(java.lang.String):254:str.length() == 0 |==> str.length() <= 0
3943:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.Soundex@soundex(java.lang.String):254:str.length() == 0 |==> str.length() >= 0
3944:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.Soundex@soundex(java.lang.String):254:str.length() == 0 |==> false
3945:LVR:POS:0:org.apache.commons.codec.language.Soundex@soundex(java.lang.String):259:1 |==> 0
3946:LVR:POS:NEG:org.apache.commons.codec.language.Soundex@soundex(java.lang.String):259:1 |==> -1
3947:LVR:POS:0:org.apache.commons.codec.language.Soundex@soundex(java.lang.String):259:1 |==> 0
3948:LVR:POS:NEG:org.apache.commons.codec.language.Soundex@soundex(java.lang.String):259:1 |==> -1
3949:LVR:0:POS:org.apache.commons.codec.language.Soundex@soundex(java.lang.String):260:0 |==> 1
3950:LVR:0:NEG:org.apache.commons.codec.language.Soundex@soundex(java.lang.String):260:0 |==> -1
3951:LVR:0:POS:org.apache.commons.codec.language.Soundex@soundex(java.lang.String):260:0 |==> 1
3952:LVR:0:NEG:org.apache.commons.codec.language.Soundex@soundex(java.lang.String):260:0 |==> -1
3953:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Soundex@soundex(java.lang.String):260:out[0] = str.charAt(0) |==> <NO-OP>
3954:LVR:0:POS:org.apache.commons.codec.language.Soundex@soundex(java.lang.String):262:0 |==> 1
3955:LVR:0:NEG:org.apache.commons.codec.language.Soundex@soundex(java.lang.String):262:0 |==> -1
3956:ROR:<(int,int):!=(int,int):org.apache.commons.codec.language.Soundex@soundex(java.lang.String):263:incount < str.length() |==> incount != str.length()
3957:ROR:<(int,int):<=(int,int):org.apache.commons.codec.language.Soundex@soundex(java.lang.String):263:incount < str.length() |==> incount <= str.length()
3958:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.language.Soundex@soundex(java.lang.String):263:incount < str.length() |==> false
3959:ROR:<(int,int):!=(int,int):org.apache.commons.codec.language.Soundex@soundex(java.lang.String):263:count < out.length |==> count != out.length
3960:ROR:<(int,int):<=(int,int):org.apache.commons.codec.language.Soundex@soundex(java.lang.String):263:count < out.length |==> count <= out.length
3961:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.language.Soundex@soundex(java.lang.String):263:count < out.length |==> false
3962:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.Soundex@soundex(java.lang.String):263:(incount < str.length()) && (count < out.length) |==> (incount < str.length()) == (count < out.length)
3963:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.Soundex@soundex(java.lang.String):263:(incount < str.length()) && (count < out.length) |==> false
3964:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.Soundex@soundex(java.lang.String):263:(incount < str.length()) && (count < out.length) |==> (incount < str.length())
3965:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.Soundex@soundex(java.lang.String):263:(incount < str.length()) && (count < out.length) |==> (count < out.length)
3966:LVR:0:POS:org.apache.commons.codec.language.Soundex@soundex(java.lang.String):265:0 |==> 1
3967:LVR:0:NEG:org.apache.commons.codec.language.Soundex@soundex(java.lang.String):265:0 |==> -1
3968:ROR:!=(int,int):<(int,int):org.apache.commons.codec.language.Soundex@soundex(java.lang.String):265:mapped != 0 |==> mapped < 0
3969:ROR:!=(int,int):>(int,int):org.apache.commons.codec.language.Soundex@soundex(java.lang.String):265:mapped != 0 |==> mapped > 0
3970:ROR:!=(int,int):TRUE(int,int):org.apache.commons.codec.language.Soundex@soundex(java.lang.String):265:mapped != 0 |==> true
3971:ROR:!=(int,int):<(int,int):org.apache.commons.codec.language.Soundex@soundex(java.lang.String):266:mapped != '0' |==> mapped < '0'
3972:ROR:!=(int,int):>(int,int):org.apache.commons.codec.language.Soundex@soundex(java.lang.String):266:mapped != '0' |==> mapped > '0'
3973:ROR:!=(int,int):TRUE(int,int):org.apache.commons.codec.language.Soundex@soundex(java.lang.String):266:mapped != '0' |==> true
3974:ROR:!=(int,int):<(int,int):org.apache.commons.codec.language.Soundex@soundex(java.lang.String):266:mapped != last |==> mapped < last
3975:ROR:!=(int,int):>(int,int):org.apache.commons.codec.language.Soundex@soundex(java.lang.String):266:mapped != last |==> mapped > last
3976:ROR:!=(int,int):TRUE(int,int):org.apache.commons.codec.language.Soundex@soundex(java.lang.String):266:mapped != last |==> true
3977:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.codec.language.Soundex@soundex(java.lang.String):266:(mapped != '0') && (mapped != last) |==> (mapped != '0') == (mapped != last)
3978:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.codec.language.Soundex@soundex(java.lang.String):266:(mapped != '0') && (mapped != last) |==> false
3979:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.Soundex@soundex(java.lang.String):266:(mapped != '0') && (mapped != last) |==> (mapped != '0')
3980:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.Soundex@soundex(java.lang.String):266:(mapped != '0') && (mapped != last) |==> (mapped != last)
3981:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Soundex@soundex(java.lang.String):267:out[count++] = mapped |==> <NO-OP>
3982:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.Soundex@soundex(java.lang.String):269:last = mapped |==> <NO-OP>
3983:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.language.SoundexUtils@clean(java.lang.String):41:str == null |==> false
3984:LVR:0:POS:org.apache.commons.codec.language.SoundexUtils@clean(java.lang.String):41:0 |==> 1
3985:LVR:0:NEG:org.apache.commons.codec.language.SoundexUtils@clean(java.lang.String):41:0 |==> -1
3986:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.SoundexUtils@clean(java.lang.String):41:str.length() == 0 |==> str.length() <= 0
3987:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.SoundexUtils@clean(java.lang.String):41:str.length() == 0 |==> str.length() >= 0
3988:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.SoundexUtils@clean(java.lang.String):41:str.length() == 0 |==> false
3989:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.SoundexUtils@clean(java.lang.String):41:str == null || str.length() == 0 |==> str == null != (str.length() == 0)
3990:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.SoundexUtils@clean(java.lang.String):41:str == null || str.length() == 0 |==> str == null
3991:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.SoundexUtils@clean(java.lang.String):41:str == null || str.length() == 0 |==> str.length() == 0
3992:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.SoundexUtils@clean(java.lang.String):41:str == null || str.length() == 0 |==> true
3993:LVR:0:POS:org.apache.commons.codec.language.SoundexUtils@clean(java.lang.String):46:0 |==> 1
3994:LVR:0:NEG:org.apache.commons.codec.language.SoundexUtils@clean(java.lang.String):46:0 |==> -1
3995:LVR:0:POS:org.apache.commons.codec.language.SoundexUtils@clean(java.lang.String):47:0 |==> 1
3996:LVR:0:NEG:org.apache.commons.codec.language.SoundexUtils@clean(java.lang.String):47:0 |==> -1
3997:ROR:<(int,int):!=(int,int):org.apache.commons.codec.language.SoundexUtils@clean(java.lang.String):47:i < len |==> i != len
3998:ROR:<(int,int):<=(int,int):org.apache.commons.codec.language.SoundexUtils@clean(java.lang.String):47:i < len |==> i <= len
3999:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.language.SoundexUtils@clean(java.lang.String):47:i < len |==> false
4000:COR:Character.isLetter(str.charAt(i)):TRUE:org.apache.commons.codec.language.SoundexUtils@clean(java.lang.String):48:Character.isLetter(str.charAt(i)) |==> false
4001:COR:Character.isLetter(str.charAt(i)):FALSE:org.apache.commons.codec.language.SoundexUtils@clean(java.lang.String):48:Character.isLetter(str.charAt(i)) |==> true
4002:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.language.SoundexUtils@clean(java.lang.String):49:chars[count++] = str.charAt(i) |==> <NO-OP>
4003:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.SoundexUtils@clean(java.lang.String):52:count == len |==> count <= len
4004:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.SoundexUtils@clean(java.lang.String):52:count == len |==> count >= len
4005:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.SoundexUtils@clean(java.lang.String):52:count == len |==> false
4006:LVR:0:POS:org.apache.commons.codec.language.SoundexUtils@clean(java.lang.String):55:0 |==> 1
4007:LVR:0:NEG:org.apache.commons.codec.language.SoundexUtils@clean(java.lang.String):55:0 |==> -1
4008:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.language.SoundexUtils@differenceEncoded(java.lang.String,java.lang.String):110:es1 == null |==> false
4009:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.language.SoundexUtils@differenceEncoded(java.lang.String,java.lang.String):110:es2 == null |==> false
4010:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.language.SoundexUtils@differenceEncoded(java.lang.String,java.lang.String):110:es1 == null || es2 == null |==> es1 == null != (es2 == null)
4011:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.language.SoundexUtils@differenceEncoded(java.lang.String,java.lang.String):110:es1 == null || es2 == null |==> es1 == null
4012:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.language.SoundexUtils@differenceEncoded(java.lang.String,java.lang.String):110:es1 == null || es2 == null |==> es2 == null
4013:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.language.SoundexUtils@differenceEncoded(java.lang.String,java.lang.String):110:es1 == null || es2 == null |==> true
4014:LVR:0:POS:org.apache.commons.codec.language.SoundexUtils@differenceEncoded(java.lang.String,java.lang.String):111:0 |==> 1
4015:LVR:0:NEG:org.apache.commons.codec.language.SoundexUtils@differenceEncoded(java.lang.String,java.lang.String):111:0 |==> -1
4016:LVR:0:POS:org.apache.commons.codec.language.SoundexUtils@differenceEncoded(java.lang.String,java.lang.String):114:0 |==> 1
4017:LVR:0:NEG:org.apache.commons.codec.language.SoundexUtils@differenceEncoded(java.lang.String,java.lang.String):114:0 |==> -1
4018:LVR:0:POS:org.apache.commons.codec.language.SoundexUtils@differenceEncoded(java.lang.String,java.lang.String):115:0 |==> 1
4019:LVR:0:NEG:org.apache.commons.codec.language.SoundexUtils@differenceEncoded(java.lang.String,java.lang.String):115:0 |==> -1
4020:ROR:<(int,int):!=(int,int):org.apache.commons.codec.language.SoundexUtils@differenceEncoded(java.lang.String,java.lang.String):115:i < lengthToMatch |==> i != lengthToMatch
4021:ROR:<(int,int):<=(int,int):org.apache.commons.codec.language.SoundexUtils@differenceEncoded(java.lang.String,java.lang.String):115:i < lengthToMatch |==> i <= lengthToMatch
4022:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.language.SoundexUtils@differenceEncoded(java.lang.String,java.lang.String):115:i < lengthToMatch |==> false
4023:ROR:==(int,int):<=(int,int):org.apache.commons.codec.language.SoundexUtils@differenceEncoded(java.lang.String,java.lang.String):116:es1.charAt(i) == es2.charAt(i) |==> es1.charAt(i) <= es2.charAt(i)
4024:ROR:==(int,int):>=(int,int):org.apache.commons.codec.language.SoundexUtils@differenceEncoded(java.lang.String,java.lang.String):116:es1.charAt(i) == es2.charAt(i) |==> es1.charAt(i) >= es2.charAt(i)
4025:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.language.SoundexUtils@differenceEncoded(java.lang.String,java.lang.String):116:es1.charAt(i) == es2.charAt(i) |==> false
4026:STD:<INC>:<NO-OP>:org.apache.commons.codec.language.SoundexUtils@differenceEncoded(java.lang.String,java.lang.String):117:diff++ |==> <NO-OP>
4027:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.net.BCodec@<init>(java.lang.String):71:this.charset = charset |==> <NO-OP>
4028:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.net.BCodec@doEncoding(byte[]):79:bytes == null |==> false
4029:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.net.BCodec@doDecoding(byte[]):86:bytes == null |==> false
4030:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.net.BCodec@encode(java.lang.String,java.lang.String):105:value == null |==> false
4031:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.net.BCodec@encode(java.lang.String):126:value == null |==> false
4032:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.net.BCodec@decode(java.lang.String):145:value == null |==> false
4033:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.net.BCodec@encode(java.lang.Object):166:value == null |==> false
4034:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.net.BCodec@decode(java.lang.Object):191:value == null |==> false
4035:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.net.RFC1522Codec@encodeText(java.lang.String,java.lang.String):69:text == null |==> false
4036:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.RFC1522Codec@encodeText(java.lang.String,java.lang.String):73:buffer.append("=?") |==> <NO-OP>
4037:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.RFC1522Codec@encodeText(java.lang.String,java.lang.String):74:buffer.append(charset) |==> <NO-OP>
4038:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.RFC1522Codec@encodeText(java.lang.String,java.lang.String):75:buffer.append('?') |==> <NO-OP>
4039:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.RFC1522Codec@encodeText(java.lang.String,java.lang.String):76:buffer.append(getEncoding()) |==> <NO-OP>
4040:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.RFC1522Codec@encodeText(java.lang.String,java.lang.String):77:buffer.append('?') |==> <NO-OP>
4041:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.RFC1522Codec@encodeText(java.lang.String,java.lang.String):79:buffer.append(new String(rawdata, CharacterEncodingNames.US_ASCII)) |==> <NO-OP>
4042:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.RFC1522Codec@encodeText(java.lang.String,java.lang.String):80:buffer.append("?=") |==> <NO-OP>
4043:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):100:text == null |==> false
4044:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):103:(!text.startsWith("=?")) || (!text.endsWith("?=")) |==> (!text.startsWith("=?")) != (!text.endsWith("?="))
4045:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):103:(!text.startsWith("=?")) || (!text.endsWith("?=")) |==> (!text.startsWith("=?"))
4046:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):103:(!text.startsWith("=?")) || (!text.endsWith("?=")) |==> (!text.endsWith("?="))
4047:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):103:(!text.startsWith("=?")) || (!text.endsWith("?=")) |==> true
4048:LVR:POS:0:org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):106:2 |==> 0
4049:LVR:POS:NEG:org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):106:2 |==> -2
4050:AOR:-(int,int):%(int,int):org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):106:text.length() - 2 |==> text.length() % 2
4051:AOR:-(int,int):*(int,int):org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):106:text.length() - 2 |==> text.length() * 2
4052:AOR:-(int,int):+(int,int):org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):106:text.length() - 2 |==> text.length() + 2
4053:AOR:-(int,int):/(int,int):org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):106:text.length() - 2 |==> text.length() / 2
4054:LVR:POS:0:org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):107:2 |==> 0
4055:LVR:POS:NEG:org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):107:2 |==> -2
4056:LVR:NEG:0:org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):109:-1 |==> 0
4057:LVR:NEG:POS:org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):109:-1 |==> 1
4058:ROR:==(int,int):<=(int,int):org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):109:to == -1 |==> to <= -1
4059:ROR:==(int,int):>=(int,int):org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):109:to == -1 |==> to >= -1
4060:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):109:to == -1 |==> false
4061:ROR:==(int,int):<=(int,int):org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):109:to == termnator |==> to <= termnator
4062:ROR:==(int,int):>=(int,int):org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):109:to == termnator |==> to >= termnator
4063:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):109:to == termnator |==> false
4064:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):109:(to == -1) || (to == termnator) |==> (to == -1) != (to == termnator)
4065:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):109:(to == -1) || (to == termnator) |==> (to == -1)
4066:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):109:(to == -1) || (to == termnator) |==> (to == termnator)
4067:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):109:(to == -1) || (to == termnator) |==> true
4068:COR:charset.equals(""):TRUE:org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):113:charset.equals("") |==> false
4069:COR:charset.equals(""):FALSE:org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):113:charset.equals("") |==> true
4070:LVR:POS:0:org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):116:1 |==> 0
4071:LVR:POS:NEG:org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):116:1 |==> -1
4072:AOR:+(int,int):%(int,int):org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):116:to + 1 |==> to % 1
4073:AOR:+(int,int):*(int,int):org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):116:to + 1 |==> to * 1
4074:AOR:+(int,int):-(int,int):org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):116:to + 1 |==> to - 1
4075:AOR:+(int,int):/(int,int):org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):116:to + 1 |==> to / 1
4076:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):116:from = to + 1 |==> <NO-OP>
4077:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):117:to = text.indexOf("?", from) |==> <NO-OP>
4078:LVR:NEG:0:org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):118:-1 |==> 0
4079:LVR:NEG:POS:org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):118:-1 |==> 1
4080:ROR:==(int,int):<=(int,int):org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):118:to == -1 |==> to <= -1
4081:ROR:==(int,int):>=(int,int):org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):118:to == -1 |==> to >= -1
4082:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):118:to == -1 |==> false
4083:ROR:==(int,int):<=(int,int):org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):118:to == termnator |==> to <= termnator
4084:ROR:==(int,int):>=(int,int):org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):118:to == termnator |==> to >= termnator
4085:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):118:to == termnator |==> false
4086:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):118:(to == -1) || (to == termnator) |==> (to == -1) != (to == termnator)
4087:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):118:(to == -1) || (to == termnator) |==> (to == -1)
4088:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):118:(to == -1) || (to == termnator) |==> (to == termnator)
4089:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):118:(to == -1) || (to == termnator) |==> true
4090:COR:getEncoding().equalsIgnoreCase(encoding):TRUE:org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):122:getEncoding().equalsIgnoreCase(encoding) |==> false
4091:COR:getEncoding().equalsIgnoreCase(encoding):FALSE:org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):122:getEncoding().equalsIgnoreCase(encoding) |==> true
4092:LVR:POS:0:org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):126:1 |==> 0
4093:LVR:POS:NEG:org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):126:1 |==> -1
4094:AOR:+(int,int):%(int,int):org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):126:to + 1 |==> to % 1
4095:AOR:+(int,int):*(int,int):org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):126:to + 1 |==> to * 1
4096:AOR:+(int,int):-(int,int):org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):126:to + 1 |==> to - 1
4097:AOR:+(int,int):/(int,int):org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):126:to + 1 |==> to / 1
4098:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):126:from = to + 1 |==> <NO-OP>
4099:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):127:to = text.indexOf("?", from) |==> <NO-OP>
4100:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.net.RFC1522Codec@decodeText(java.lang.String):129:data = doDecoding(data) |==> <NO-OP>
4101:LVR:POS:0:org.apache.commons.codec.net.QCodec:57:256 |==> 0
4102:LVR:POS:NEG:org.apache.commons.codec.net.QCodec:57:256 |==> -256
4103:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QCodec:61:PRINTABLE_CHARS.set(' ') |==> <NO-OP>
4104:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QCodec:62:PRINTABLE_CHARS.set('!') |==> <NO-OP>
4105:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QCodec:63:PRINTABLE_CHARS.set('\"') |==> <NO-OP>
4106:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QCodec:64:PRINTABLE_CHARS.set('#') |==> <NO-OP>
4107:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QCodec:65:PRINTABLE_CHARS.set('$') |==> <NO-OP>
4108:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QCodec:66:PRINTABLE_CHARS.set('%') |==> <NO-OP>
4109:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QCodec:67:PRINTABLE_CHARS.set('&') |==> <NO-OP>
4110:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QCodec:68:PRINTABLE_CHARS.set('\'') |==> <NO-OP>
4111:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QCodec:69:PRINTABLE_CHARS.set('(') |==> <NO-OP>
4112:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QCodec:70:PRINTABLE_CHARS.set(')') |==> <NO-OP>
4113:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QCodec:71:PRINTABLE_CHARS.set('*') |==> <NO-OP>
4114:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QCodec:72:PRINTABLE_CHARS.set('+') |==> <NO-OP>
4115:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QCodec:73:PRINTABLE_CHARS.set(',') |==> <NO-OP>
4116:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QCodec:74:PRINTABLE_CHARS.set('-') |==> <NO-OP>
4117:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QCodec:75:PRINTABLE_CHARS.set('.') |==> <NO-OP>
4118:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QCodec:76:PRINTABLE_CHARS.set('/') |==> <NO-OP>
4119:ROR:<=(int,int):<(int,int):org.apache.commons.codec.net.QCodec:77:i <= '9' |==> i < '9'
4120:ROR:<=(int,int):==(int,int):org.apache.commons.codec.net.QCodec:77:i <= '9' |==> i == '9'
4121:ROR:<=(int,int):TRUE(int,int):org.apache.commons.codec.net.QCodec:77:i <= '9' |==> true
4122:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QCodec:78:PRINTABLE_CHARS.set(i) |==> <NO-OP>
4123:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QCodec:80:PRINTABLE_CHARS.set(':') |==> <NO-OP>
4124:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QCodec:81:PRINTABLE_CHARS.set(';') |==> <NO-OP>
4125:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QCodec:82:PRINTABLE_CHARS.set('<') |==> <NO-OP>
4126:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QCodec:83:PRINTABLE_CHARS.set('>') |==> <NO-OP>
4127:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QCodec:84:PRINTABLE_CHARS.set('@') |==> <NO-OP>
4128:ROR:<=(int,int):<(int,int):org.apache.commons.codec.net.QCodec:85:i <= 'Z' |==> i < 'Z'
4129:ROR:<=(int,int):==(int,int):org.apache.commons.codec.net.QCodec:85:i <= 'Z' |==> i == 'Z'
4130:ROR:<=(int,int):TRUE(int,int):org.apache.commons.codec.net.QCodec:85:i <= 'Z' |==> true
4131:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QCodec:86:PRINTABLE_CHARS.set(i) |==> <NO-OP>
4132:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QCodec:88:PRINTABLE_CHARS.set('[') |==> <NO-OP>
4133:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QCodec:89:PRINTABLE_CHARS.set('\\') |==> <NO-OP>
4134:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QCodec:90:PRINTABLE_CHARS.set(']') |==> <NO-OP>
4135:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QCodec:91:PRINTABLE_CHARS.set('^') |==> <NO-OP>
4136:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QCodec:92:PRINTABLE_CHARS.set('`') |==> <NO-OP>
4137:ROR:<=(int,int):<(int,int):org.apache.commons.codec.net.QCodec:93:i <= 'z' |==> i < 'z'
4138:ROR:<=(int,int):==(int,int):org.apache.commons.codec.net.QCodec:93:i <= 'z' |==> i == 'z'
4139:ROR:<=(int,int):TRUE(int,int):org.apache.commons.codec.net.QCodec:93:i <= 'z' |==> true
4140:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QCodec:94:PRINTABLE_CHARS.set(i) |==> <NO-OP>
4141:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QCodec:96:PRINTABLE_CHARS.set('{') |==> <NO-OP>
4142:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QCodec:97:PRINTABLE_CHARS.set('|') |==> <NO-OP>
4143:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QCodec:98:PRINTABLE_CHARS.set('}') |==> <NO-OP>
4144:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QCodec:99:PRINTABLE_CHARS.set('~') |==> <NO-OP>
4145:LVR:FALSE:TRUE:org.apache.commons.codec.net.QCodec:106:false |==> true
4146:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.net.QCodec@<init>(java.lang.String):126:this.charset = charset |==> <NO-OP>
4147:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.net.QCodec@doEncoding(byte[]):134:bytes == null |==> false
4148:COR:this.encodeBlanks:TRUE:org.apache.commons.codec.net.QCodec@doEncoding(byte[]):138:this.encodeBlanks |==> false
4149:COR:this.encodeBlanks:FALSE:org.apache.commons.codec.net.QCodec@doEncoding(byte[]):138:this.encodeBlanks |==> true
4150:LVR:0:POS:org.apache.commons.codec.net.QCodec@doEncoding(byte[]):139:0 |==> 1
4151:LVR:0:NEG:org.apache.commons.codec.net.QCodec@doEncoding(byte[]):139:0 |==> -1
4152:ROR:<(int,int):!=(int,int):org.apache.commons.codec.net.QCodec@doEncoding(byte[]):139:i < data.length |==> i != data.length
4153:ROR:<(int,int):<=(int,int):org.apache.commons.codec.net.QCodec@doEncoding(byte[]):139:i < data.length |==> i <= data.length
4154:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.net.QCodec@doEncoding(byte[]):139:i < data.length |==> false
4155:ROR:==(int,int):<=(int,int):org.apache.commons.codec.net.QCodec@doEncoding(byte[]):140:data[i] == BLANK |==> data[i] <= BLANK
4156:ROR:==(int,int):>=(int,int):org.apache.commons.codec.net.QCodec@doEncoding(byte[]):140:data[i] == BLANK |==> data[i] >= BLANK
4157:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.net.QCodec@doEncoding(byte[]):140:data[i] == BLANK |==> false
4158:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.net.QCodec@doEncoding(byte[]):141:data[i] = UNDERSCORE |==> <NO-OP>
4159:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.net.QCodec@doDecoding(byte[]):149:bytes == null |==> false
4160:LVR:FALSE:TRUE:org.apache.commons.codec.net.QCodec@doDecoding(byte[]):152:false |==> true
4161:LVR:0:POS:org.apache.commons.codec.net.QCodec@doDecoding(byte[]):153:0 |==> 1
4162:LVR:0:NEG:org.apache.commons.codec.net.QCodec@doDecoding(byte[]):153:0 |==> -1
4163:ROR:<(int,int):!=(int,int):org.apache.commons.codec.net.QCodec@doDecoding(byte[]):153:i < bytes.length |==> i != bytes.length
4164:ROR:<(int,int):<=(int,int):org.apache.commons.codec.net.QCodec@doDecoding(byte[]):153:i < bytes.length |==> i <= bytes.length
4165:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.net.QCodec@doDecoding(byte[]):153:i < bytes.length |==> false
4166:ROR:==(int,int):<=(int,int):org.apache.commons.codec.net.QCodec@doDecoding(byte[]):154:bytes[i] == UNDERSCORE |==> bytes[i] <= UNDERSCORE
4167:ROR:==(int,int):>=(int,int):org.apache.commons.codec.net.QCodec@doDecoding(byte[]):154:bytes[i] == UNDERSCORE |==> bytes[i] >= UNDERSCORE
4168:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.net.QCodec@doDecoding(byte[]):154:bytes[i] == UNDERSCORE |==> false
4169:LVR:TRUE:FALSE:org.apache.commons.codec.net.QCodec@doDecoding(byte[]):155:true |==> false
4170:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.net.QCodec@doDecoding(byte[]):155:hasUnderscores = true |==> <NO-OP>
4171:COR:hasUnderscores:TRUE:org.apache.commons.codec.net.QCodec@doDecoding(byte[]):159:hasUnderscores |==> false
4172:COR:hasUnderscores:FALSE:org.apache.commons.codec.net.QCodec@doDecoding(byte[]):159:hasUnderscores |==> true
4173:LVR:0:POS:org.apache.commons.codec.net.QCodec@doDecoding(byte[]):161:0 |==> 1
4174:LVR:0:NEG:org.apache.commons.codec.net.QCodec@doDecoding(byte[]):161:0 |==> -1
4175:ROR:<(int,int):!=(int,int):org.apache.commons.codec.net.QCodec@doDecoding(byte[]):161:i < bytes.length |==> i != bytes.length
4176:ROR:<(int,int):<=(int,int):org.apache.commons.codec.net.QCodec@doDecoding(byte[]):161:i < bytes.length |==> i <= bytes.length
4177:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.net.QCodec@doDecoding(byte[]):161:i < bytes.length |==> false
4178:ROR:!=(int,int):<(int,int):org.apache.commons.codec.net.QCodec@doDecoding(byte[]):163:b != UNDERSCORE |==> b < UNDERSCORE
4179:ROR:!=(int,int):>(int,int):org.apache.commons.codec.net.QCodec@doDecoding(byte[]):163:b != UNDERSCORE |==> b > UNDERSCORE
4180:ROR:!=(int,int):TRUE(int,int):org.apache.commons.codec.net.QCodec@doDecoding(byte[]):163:b != UNDERSCORE |==> true
4181:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.net.QCodec@doDecoding(byte[]):164:tmp[i] = b |==> <NO-OP>
4182:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.net.QCodec@doDecoding(byte[]):166:tmp[i] = BLANK |==> <NO-OP>
4183:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.net.QCodec@encode(java.lang.String,java.lang.String):187:pString == null |==> false
4184:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.net.QCodec@encode(java.lang.String):208:pString == null |==> false
4185:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.net.QCodec@decode(java.lang.String):227:pString == null |==> false
4186:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.net.QCodec@encode(java.lang.Object):248:pObject == null |==> false
4187:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.net.QCodec@decode(java.lang.Object):273:pObject == null |==> false
4188:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.net.QCodec@setEncodeBlanks(boolean):309:this.encodeBlanks = b |==> <NO-OP>
4189:LVR:POS:0:org.apache.commons.codec.net.QuotedPrintableCodec:70:256 |==> 0
4190:LVR:POS:NEG:org.apache.commons.codec.net.QuotedPrintableCodec:70:256 |==> -256
4191:LVR:POS:0:org.apache.commons.codec.net.QuotedPrintableCodec:80:33 |==> 0
4192:LVR:POS:NEG:org.apache.commons.codec.net.QuotedPrintableCodec:80:33 |==> -33
4193:LVR:POS:0:org.apache.commons.codec.net.QuotedPrintableCodec:80:60 |==> 0
4194:LVR:POS:NEG:org.apache.commons.codec.net.QuotedPrintableCodec:80:60 |==> -60
4195:ROR:<=(int,int):<(int,int):org.apache.commons.codec.net.QuotedPrintableCodec:80:i <= 60 |==> i < 60
4196:ROR:<=(int,int):==(int,int):org.apache.commons.codec.net.QuotedPrintableCodec:80:i <= 60 |==> i == 60
4197:ROR:<=(int,int):TRUE(int,int):org.apache.commons.codec.net.QuotedPrintableCodec:80:i <= 60 |==> true
4198:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QuotedPrintableCodec:81:PRINTABLE_CHARS.set(i) |==> <NO-OP>
4199:LVR:POS:0:org.apache.commons.codec.net.QuotedPrintableCodec:83:62 |==> 0
4200:LVR:POS:NEG:org.apache.commons.codec.net.QuotedPrintableCodec:83:62 |==> -62
4201:LVR:POS:0:org.apache.commons.codec.net.QuotedPrintableCodec:83:126 |==> 0
4202:LVR:POS:NEG:org.apache.commons.codec.net.QuotedPrintableCodec:83:126 |==> -126
4203:ROR:<=(int,int):<(int,int):org.apache.commons.codec.net.QuotedPrintableCodec:83:i <= 126 |==> i < 126
4204:ROR:<=(int,int):==(int,int):org.apache.commons.codec.net.QuotedPrintableCodec:83:i <= 126 |==> i == 126
4205:ROR:<=(int,int):TRUE(int,int):org.apache.commons.codec.net.QuotedPrintableCodec:83:i <= 126 |==> true
4206:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QuotedPrintableCodec:84:PRINTABLE_CHARS.set(i) |==> <NO-OP>
4207:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QuotedPrintableCodec:86:PRINTABLE_CHARS.set(TAB) |==> <NO-OP>
4208:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QuotedPrintableCodec:87:PRINTABLE_CHARS.set(SPACE) |==> <NO-OP>
4209:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.net.QuotedPrintableCodec@<init>(java.lang.String):105:this.charset = charset |==> <NO-OP>
4210:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(int,java.io.ByteArrayOutputStream):117:buffer.write(ESCAPE_CHAR) |==> <NO-OP>
4211:LVR:POS:0:org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(int,java.io.ByteArrayOutputStream):118:4 |==> 0
4212:LVR:POS:NEG:org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(int,java.io.ByteArrayOutputStream):118:4 |==> -4
4213:SOR:>>(int,int):<<(int,int):org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(int,java.io.ByteArrayOutputStream):118:b >> 4 |==> b << 4
4214:SOR:>>(int,int):>>>(int,int):org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(int,java.io.ByteArrayOutputStream):118:b >> 4 |==> b >>> 4
4215:LVR:POS:0:org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(int,java.io.ByteArrayOutputStream):118:15 |==> 0
4216:LVR:POS:NEG:org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(int,java.io.ByteArrayOutputStream):118:15 |==> -15
4217:LOR:&(int,int):^(int,int):org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(int,java.io.ByteArrayOutputStream):118:(b >> 4) & 15 |==> (b >> 4) ^ 15
4218:LOR:&(int,int):|(int,int):org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(int,java.io.ByteArrayOutputStream):118:(b >> 4) & 15 |==> (b >> 4) | 15
4219:LVR:POS:0:org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(int,java.io.ByteArrayOutputStream):118:16 |==> 0
4220:LVR:POS:NEG:org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(int,java.io.ByteArrayOutputStream):118:16 |==> -16
4221:LVR:POS:0:org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(int,java.io.ByteArrayOutputStream):119:15 |==> 0
4222:LVR:POS:NEG:org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(int,java.io.ByteArrayOutputStream):119:15 |==> -15
4223:LOR:&(int,int):^(int,int):org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(int,java.io.ByteArrayOutputStream):119:b & 15 |==> b ^ 15
4224:LOR:&(int,int):|(int,int):org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(int,java.io.ByteArrayOutputStream):119:b & 15 |==> b | 15
4225:LVR:POS:0:org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(int,java.io.ByteArrayOutputStream):119:16 |==> 0
4226:LVR:POS:NEG:org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(int,java.io.ByteArrayOutputStream):119:16 |==> -16
4227:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(int,java.io.ByteArrayOutputStream):120:buffer.write(hex1) |==> <NO-OP>
4228:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(int,java.io.ByteArrayOutputStream):121:buffer.write(hex2) |==> <NO-OP>
4229:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(java.util.BitSet,byte[]):139:bytes == null |==> false
4230:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(java.util.BitSet,byte[]):142:printable == null |==> false
4231:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(java.util.BitSet,byte[]):143:printable = PRINTABLE_CHARS |==> <NO-OP>
4232:LVR:0:POS:org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(java.util.BitSet,byte[]):146:0 |==> 1
4233:LVR:0:NEG:org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(java.util.BitSet,byte[]):146:0 |==> -1
4234:ROR:<(int,int):!=(int,int):org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(java.util.BitSet,byte[]):146:i < bytes.length |==> i != bytes.length
4235:ROR:<(int,int):<=(int,int):org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(java.util.BitSet,byte[]):146:i < bytes.length |==> i <= bytes.length
4236:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(java.util.BitSet,byte[]):146:i < bytes.length |==> false
4237:LVR:0:POS:org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(java.util.BitSet,byte[]):148:0 |==> 1
4238:LVR:0:NEG:org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(java.util.BitSet,byte[]):148:0 |==> -1
4239:ROR:<(int,int):!=(int,int):org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(java.util.BitSet,byte[]):148:b < 0 |==> b != 0
4240:ROR:<(int,int):<=(int,int):org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(java.util.BitSet,byte[]):148:b < 0 |==> b <= 0
4241:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(java.util.BitSet,byte[]):148:b < 0 |==> false
4242:LVR:POS:0:org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(java.util.BitSet,byte[]):149:256 |==> 0
4243:LVR:POS:NEG:org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(java.util.BitSet,byte[]):149:256 |==> -256
4244:AOR:+(int,int):%(int,int):org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(java.util.BitSet,byte[]):149:256 + b |==> 256 % b
4245:AOR:+(int,int):*(int,int):org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(java.util.BitSet,byte[]):149:256 + b |==> 256 * b
4246:AOR:+(int,int):-(int,int):org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(java.util.BitSet,byte[]):149:256 + b |==> 256 - b
4247:AOR:+(int,int):/(int,int):org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(java.util.BitSet,byte[]):149:256 + b |==> 256 / b
4248:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(java.util.BitSet,byte[]):149:b = 256 + b |==> <NO-OP>
4249:COR:printable.get(b):TRUE:org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(java.util.BitSet,byte[]):151:printable.get(b) |==> false
4250:COR:printable.get(b):FALSE:org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(java.util.BitSet,byte[]):151:printable.get(b) |==> true
4251:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(java.util.BitSet,byte[]):152:buffer.write(b) |==> <NO-OP>
4252:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QuotedPrintableCodec@encodeQuotedPrintable(java.util.BitSet,byte[]):154:encodeQuotedPrintable(b, buffer) |==> <NO-OP>
4253:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.net.QuotedPrintableCodec@decodeQuotedPrintable(byte[]):176:bytes == null |==> false
4254:LVR:0:POS:org.apache.commons.codec.net.QuotedPrintableCodec@decodeQuotedPrintable(byte[]):180:0 |==> 1
4255:LVR:0:NEG:org.apache.commons.codec.net.QuotedPrintableCodec@decodeQuotedPrintable(byte[]):180:0 |==> -1
4256:ROR:<(int,int):!=(int,int):org.apache.commons.codec.net.QuotedPrintableCodec@decodeQuotedPrintable(byte[]):180:i < bytes.length |==> i != bytes.length
4257:ROR:<(int,int):<=(int,int):org.apache.commons.codec.net.QuotedPrintableCodec@decodeQuotedPrintable(byte[]):180:i < bytes.length |==> i <= bytes.length
4258:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.net.QuotedPrintableCodec@decodeQuotedPrintable(byte[]):180:i < bytes.length |==> false
4259:ROR:==(int,int):<=(int,int):org.apache.commons.codec.net.QuotedPrintableCodec@decodeQuotedPrintable(byte[]):182:b == ESCAPE_CHAR |==> b <= ESCAPE_CHAR
4260:ROR:==(int,int):>=(int,int):org.apache.commons.codec.net.QuotedPrintableCodec@decodeQuotedPrintable(byte[]):182:b == ESCAPE_CHAR |==> b >= ESCAPE_CHAR
4261:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.net.QuotedPrintableCodec@decodeQuotedPrintable(byte[]):182:b == ESCAPE_CHAR |==> false
4262:LVR:POS:0:org.apache.commons.codec.net.QuotedPrintableCodec@decodeQuotedPrintable(byte[]):184:16 |==> 0
4263:LVR:POS:NEG:org.apache.commons.codec.net.QuotedPrintableCodec@decodeQuotedPrintable(byte[]):184:16 |==> -16
4264:LVR:POS:0:org.apache.commons.codec.net.QuotedPrintableCodec@decodeQuotedPrintable(byte[]):185:16 |==> 0
4265:LVR:POS:NEG:org.apache.commons.codec.net.QuotedPrintableCodec@decodeQuotedPrintable(byte[]):185:16 |==> -16
4266:LVR:NEG:0:org.apache.commons.codec.net.QuotedPrintableCodec@decodeQuotedPrintable(byte[]):186:-1 |==> 0
4267:LVR:NEG:POS:org.apache.commons.codec.net.QuotedPrintableCodec@decodeQuotedPrintable(byte[]):186:-1 |==> 1
4268:ROR:==(int,int):<=(int,int):org.apache.commons.codec.net.QuotedPrintableCodec@decodeQuotedPrintable(byte[]):186:u == -1 |==> u <= -1
4269:ROR:==(int,int):>=(int,int):org.apache.commons.codec.net.QuotedPrintableCodec@decodeQuotedPrintable(byte[]):186:u == -1 |==> u >= -1
4270:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.net.QuotedPrintableCodec@decodeQuotedPrintable(byte[]):186:u == -1 |==> false
4271:LVR:NEG:0:org.apache.commons.codec.net.QuotedPrintableCodec@decodeQuotedPrintable(byte[]):186:-1 |==> 0
4272:LVR:NEG:POS:org.apache.commons.codec.net.QuotedPrintableCodec@decodeQuotedPrintable(byte[]):186:-1 |==> 1
4273:ROR:==(int,int):<=(int,int):org.apache.commons.codec.net.QuotedPrintableCodec@decodeQuotedPrintable(byte[]):186:l == -1 |==> l <= -1
4274:ROR:==(int,int):>=(int,int):org.apache.commons.codec.net.QuotedPrintableCodec@decodeQuotedPrintable(byte[]):186:l == -1 |==> l >= -1
4275:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.net.QuotedPrintableCodec@decodeQuotedPrintable(byte[]):186:l == -1 |==> false
4276:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.net.QuotedPrintableCodec@decodeQuotedPrintable(byte[]):186:u == -1 || l == -1 |==> u == -1 != (l == -1)
4277:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.net.QuotedPrintableCodec@decodeQuotedPrintable(byte[]):186:u == -1 || l == -1 |==> u == -1
4278:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.net.QuotedPrintableCodec@decodeQuotedPrintable(byte[]):186:u == -1 || l == -1 |==> l == -1
4279:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.net.QuotedPrintableCodec@decodeQuotedPrintable(byte[]):186:u == -1 || l == -1 |==> true
4280:LVR:POS:0:org.apache.commons.codec.net.QuotedPrintableCodec@decodeQuotedPrintable(byte[]):189:4 |==> 0
4281:LVR:POS:NEG:org.apache.commons.codec.net.QuotedPrintableCodec@decodeQuotedPrintable(byte[]):189:4 |==> -4
4282:SOR:<<(int,int):>>(int,int):org.apache.commons.codec.net.QuotedPrintableCodec@decodeQuotedPrintable(byte[]):189:u << 4 |==> u >> 4
4283:SOR:<<(int,int):>>>(int,int):org.apache.commons.codec.net.QuotedPrintableCodec@decodeQuotedPrintable(byte[]):189:u << 4 |==> u >>> 4
4284:AOR:+(int,int):%(int,int):org.apache.commons.codec.net.QuotedPrintableCodec@decodeQuotedPrintable(byte[]):189:(u << 4) + l |==> (u << 4) % l
4285:AOR:+(int,int):*(int,int):org.apache.commons.codec.net.QuotedPrintableCodec@decodeQuotedPrintable(byte[]):189:(u << 4) + l |==> (u << 4) * l
4286:AOR:+(int,int):-(int,int):org.apache.commons.codec.net.QuotedPrintableCodec@decodeQuotedPrintable(byte[]):189:(u << 4) + l |==> (u << 4) - l
4287:AOR:+(int,int):/(int,int):org.apache.commons.codec.net.QuotedPrintableCodec@decodeQuotedPrintable(byte[]):189:(u << 4) + l |==> (u << 4) / l
4288:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QuotedPrintableCodec@decodeQuotedPrintable(byte[]):189:buffer.write((char)((u << 4) + l)) |==> <NO-OP>
4289:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.QuotedPrintableCodec@decodeQuotedPrintable(byte[]):194:buffer.write(b) |==> <NO-OP>
4290:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.net.QuotedPrintableCodec@encode(java.lang.String):253:pString == null |==> false
4291:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.net.QuotedPrintableCodec@decode(java.lang.String,java.lang.String):278:pString == null |==> false
4292:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.net.QuotedPrintableCodec@decode(java.lang.String):297:pString == null |==> false
4293:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.net.QuotedPrintableCodec@encode(java.lang.Object):318:pObject == null |==> false
4294:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.net.QuotedPrintableCodec@decode(java.lang.Object):343:pObject == null |==> false
4295:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.net.QuotedPrintableCodec@encode(java.lang.String,java.lang.String):383:pString == null |==> false
4296:LVR:POS:0:org.apache.commons.codec.net.URLCodec:62:256 |==> 0
4297:LVR:POS:NEG:org.apache.commons.codec.net.URLCodec:62:256 |==> -256
4298:ROR:<=(int,int):<(int,int):org.apache.commons.codec.net.URLCodec:67:i <= 'z' |==> i < 'z'
4299:ROR:<=(int,int):==(int,int):org.apache.commons.codec.net.URLCodec:67:i <= 'z' |==> i == 'z'
4300:ROR:<=(int,int):TRUE(int,int):org.apache.commons.codec.net.URLCodec:67:i <= 'z' |==> true
4301:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.URLCodec:68:WWW_FORM_URL.set(i) |==> <NO-OP>
4302:ROR:<=(int,int):<(int,int):org.apache.commons.codec.net.URLCodec:70:i <= 'Z' |==> i < 'Z'
4303:ROR:<=(int,int):==(int,int):org.apache.commons.codec.net.URLCodec:70:i <= 'Z' |==> i == 'Z'
4304:ROR:<=(int,int):TRUE(int,int):org.apache.commons.codec.net.URLCodec:70:i <= 'Z' |==> true
4305:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.URLCodec:71:WWW_FORM_URL.set(i) |==> <NO-OP>
4306:ROR:<=(int,int):<(int,int):org.apache.commons.codec.net.URLCodec:74:i <= '9' |==> i < '9'
4307:ROR:<=(int,int):==(int,int):org.apache.commons.codec.net.URLCodec:74:i <= '9' |==> i == '9'
4308:ROR:<=(int,int):TRUE(int,int):org.apache.commons.codec.net.URLCodec:74:i <= '9' |==> true
4309:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.URLCodec:75:WWW_FORM_URL.set(i) |==> <NO-OP>
4310:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.URLCodec:78:WWW_FORM_URL.set('-') |==> <NO-OP>
4311:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.URLCodec:79:WWW_FORM_URL.set('_') |==> <NO-OP>
4312:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.URLCodec:80:WWW_FORM_URL.set('.') |==> <NO-OP>
4313:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.URLCodec:81:WWW_FORM_URL.set('*') |==> <NO-OP>
4314:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.URLCodec:83:WWW_FORM_URL.set(' ') |==> <NO-OP>
4315:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.net.URLCodec@<init>(java.lang.String):101:this.charset = charset |==> <NO-OP>
4316:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):114:bytes == null |==> false
4317:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):117:urlsafe == null |==> false
4318:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):118:urlsafe = WWW_FORM_URL |==> <NO-OP>
4319:LVR:0:POS:org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):122:0 |==> 1
4320:LVR:0:NEG:org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):122:0 |==> -1
4321:ROR:<(int,int):!=(int,int):org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):122:i < bytes.length |==> i != bytes.length
4322:ROR:<(int,int):<=(int,int):org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):122:i < bytes.length |==> i <= bytes.length
4323:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):122:i < bytes.length |==> false
4324:LVR:0:POS:org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):124:0 |==> 1
4325:LVR:0:NEG:org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):124:0 |==> -1
4326:ROR:<(int,int):!=(int,int):org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):124:b < 0 |==> b != 0
4327:ROR:<(int,int):<=(int,int):org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):124:b < 0 |==> b <= 0
4328:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):124:b < 0 |==> false
4329:LVR:POS:0:org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):125:256 |==> 0
4330:LVR:POS:NEG:org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):125:256 |==> -256
4331:AOR:+(int,int):%(int,int):org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):125:256 + b |==> 256 % b
4332:AOR:+(int,int):*(int,int):org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):125:256 + b |==> 256 * b
4333:AOR:+(int,int):-(int,int):org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):125:256 + b |==> 256 - b
4334:AOR:+(int,int):/(int,int):org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):125:256 + b |==> 256 / b
4335:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):125:b = 256 + b |==> <NO-OP>
4336:COR:urlsafe.get(b):TRUE:org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):127:urlsafe.get(b) |==> false
4337:COR:urlsafe.get(b):FALSE:org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):127:urlsafe.get(b) |==> true
4338:ROR:==(int,int):<=(int,int):org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):128:b == ' ' |==> b <= ' '
4339:ROR:==(int,int):>=(int,int):org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):128:b == ' ' |==> b >= ' '
4340:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):128:b == ' ' |==> false
4341:STD:<ASSIGN>:<NO-OP>:org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):129:b = '+' |==> <NO-OP>
4342:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):131:buffer.write(b) |==> <NO-OP>
4343:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):133:buffer.write('%') |==> <NO-OP>
4344:LVR:POS:0:org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):135:4 |==> 0
4345:LVR:POS:NEG:org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):135:4 |==> -4
4346:SOR:>>(int,int):<<(int,int):org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):135:b >> 4 |==> b << 4
4347:SOR:>>(int,int):>>>(int,int):org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):135:b >> 4 |==> b >>> 4
4348:LVR:POS:0:org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):135:15 |==> 0
4349:LVR:POS:NEG:org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):135:15 |==> -15
4350:LOR:&(int,int):^(int,int):org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):135:(b >> 4) & 15 |==> (b >> 4) ^ 15
4351:LOR:&(int,int):|(int,int):org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):135:(b >> 4) & 15 |==> (b >> 4) | 15
4352:LVR:POS:0:org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):135:16 |==> 0
4353:LVR:POS:NEG:org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):135:16 |==> -16
4354:LVR:POS:0:org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):137:15 |==> 0
4355:LVR:POS:NEG:org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):137:15 |==> -15
4356:LOR:&(int,int):^(int,int):org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):137:b & 15 |==> b ^ 15
4357:LOR:&(int,int):|(int,int):org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):137:b & 15 |==> b | 15
4358:LVR:POS:0:org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):137:16 |==> 0
4359:LVR:POS:NEG:org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):137:16 |==> -16
4360:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):138:buffer.write(hex1) |==> <NO-OP>
4361:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.URLCodec@encodeUrl(java.util.BitSet,byte[]):139:buffer.write(hex2) |==> <NO-OP>
4362:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):158:bytes == null |==> false
4363:LVR:0:POS:org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):162:0 |==> 1
4364:LVR:0:NEG:org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):162:0 |==> -1
4365:ROR:<(int,int):!=(int,int):org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):162:i < bytes.length |==> i != bytes.length
4366:ROR:<(int,int):<=(int,int):org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):162:i < bytes.length |==> i <= bytes.length
4367:ROR:<(int,int):FALSE(int,int):org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):162:i < bytes.length |==> false
4368:ROR:==(int,int):<=(int,int):org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):164:b == '+' |==> b <= '+'
4369:ROR:==(int,int):>=(int,int):org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):164:b == '+' |==> b >= '+'
4370:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):164:b == '+' |==> false
4371:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):165:buffer.write(' ') |==> <NO-OP>
4372:ROR:==(int,int):<=(int,int):org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):166:b == '%' |==> b <= '%'
4373:ROR:==(int,int):>=(int,int):org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):166:b == '%' |==> b >= '%'
4374:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):166:b == '%' |==> false
4375:LVR:POS:0:org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):168:16 |==> 0
4376:LVR:POS:NEG:org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):168:16 |==> -16
4377:LVR:POS:0:org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):169:16 |==> 0
4378:LVR:POS:NEG:org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):169:16 |==> -16
4379:LVR:NEG:0:org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):170:-1 |==> 0
4380:LVR:NEG:POS:org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):170:-1 |==> 1
4381:ROR:==(int,int):<=(int,int):org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):170:u == -1 |==> u <= -1
4382:ROR:==(int,int):>=(int,int):org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):170:u == -1 |==> u >= -1
4383:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):170:u == -1 |==> false
4384:LVR:NEG:0:org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):170:-1 |==> 0
4385:LVR:NEG:POS:org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):170:-1 |==> 1
4386:ROR:==(int,int):<=(int,int):org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):170:l == -1 |==> l <= -1
4387:ROR:==(int,int):>=(int,int):org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):170:l == -1 |==> l >= -1
4388:ROR:==(int,int):FALSE(int,int):org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):170:l == -1 |==> false
4389:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):170:u == -1 || l == -1 |==> u == -1 != (l == -1)
4390:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):170:u == -1 || l == -1 |==> u == -1
4391:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):170:u == -1 || l == -1 |==> l == -1
4392:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):170:u == -1 || l == -1 |==> true
4393:LVR:POS:0:org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):173:4 |==> 0
4394:LVR:POS:NEG:org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):173:4 |==> -4
4395:SOR:<<(int,int):>>(int,int):org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):173:u << 4 |==> u >> 4
4396:SOR:<<(int,int):>>>(int,int):org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):173:u << 4 |==> u >>> 4
4397:AOR:+(int,int):%(int,int):org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):173:(u << 4) + l |==> (u << 4) % l
4398:AOR:+(int,int):*(int,int):org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):173:(u << 4) + l |==> (u << 4) * l
4399:AOR:+(int,int):-(int,int):org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):173:(u << 4) + l |==> (u << 4) - l
4400:AOR:+(int,int):/(int,int):org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):173:(u << 4) + l |==> (u << 4) / l
4401:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):173:buffer.write((char)((u << 4) + l)) |==> <NO-OP>
4402:STD:<CALL>:<NO-OP>:org.apache.commons.codec.net.URLCodec@decodeUrl(byte[]):178:buffer.write(b) |==> <NO-OP>
4403:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.net.URLCodec@encode(java.lang.String,java.lang.String):224:pString == null |==> false
4404:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.net.URLCodec@encode(java.lang.String):242:pString == null |==> false
4405:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.net.URLCodec@decode(java.lang.String,java.lang.String):268:pString == null |==> false
4406:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.net.URLCodec@decode(java.lang.String):287:pString == null |==> false
4407:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.net.URLCodec@encode(java.lang.Object):308:pObject == null |==> false
4408:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.codec.net.URLCodec@decode(java.lang.Object):333:pObject == null |==> false
