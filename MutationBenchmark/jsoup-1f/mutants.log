1:STD:<CALL>:<NO-OP>:org.jsoup.DataUtil@load(java.io.File,java.lang.String):25:inStream.close() |==> <NO-OP>
2:COR:||(boolean,boolean):!=(boolean,boolean):org.jsoup.DataUtil@load(java.net.URL,int):38:protocol.equals("http") || protocol.equals("https") |==> protocol.equals("http") != protocol.equals("https")
3:COR:||(boolean,boolean):LHS(boolean,boolean):org.jsoup.DataUtil@load(java.net.URL,int):38:protocol.equals("http") || protocol.equals("https") |==> protocol.equals("http")
4:COR:||(boolean,boolean):RHS(boolean,boolean):org.jsoup.DataUtil@load(java.net.URL,int):38:protocol.equals("http") || protocol.equals("https") |==> protocol.equals("https")
5:COR:||(boolean,boolean):TRUE(boolean,boolean):org.jsoup.DataUtil@load(java.net.URL,int):38:protocol.equals("http") || protocol.equals("https") |==> true
6:STD:<CALL>:<NO-OP>:org.jsoup.DataUtil@load(java.net.URL,int):38:Validate.isTrue(protocol.equals("http") || protocol.equals("https"), "Only http & https protocols supported") |==> <NO-OP>
7:LVR:TRUE:FALSE:org.jsoup.DataUtil@load(java.net.URL,int):41:true |==> false
8:STD:<CALL>:<NO-OP>:org.jsoup.DataUtil@load(java.net.URL,int):41:conn.setInstanceFollowRedirects(true) |==> <NO-OP>
9:STD:<CALL>:<NO-OP>:org.jsoup.DataUtil@load(java.net.URL,int):42:conn.setConnectTimeout(timeoutMillis) |==> <NO-OP>
10:STD:<CALL>:<NO-OP>:org.jsoup.DataUtil@load(java.net.URL,int):43:conn.setReadTimeout(timeoutMillis) |==> <NO-OP>
11:STD:<CALL>:<NO-OP>:org.jsoup.DataUtil@load(java.net.URL,int):44:conn.connect() |==> <NO-OP>
12:ROR:!=(int,int):<(int,int):org.jsoup.DataUtil@load(java.net.URL,int):47:res != HttpURLConnection.HTTP_OK |==> res < HttpURLConnection.HTTP_OK
13:ROR:!=(int,int):>(int,int):org.jsoup.DataUtil@load(java.net.URL,int):47:res != HttpURLConnection.HTTP_OK |==> res > HttpURLConnection.HTTP_OK
14:ROR:!=(int,int):TRUE(int,int):org.jsoup.DataUtil@load(java.net.URL,int):47:res != HttpURLConnection.HTTP_OK |==> true
15:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.jsoup.DataUtil@load(java.net.URL,int):51:contentType == null |==> false
16:COR:||(boolean,boolean):!=(boolean,boolean):org.jsoup.DataUtil@load(java.net.URL,int):51:contentType == null || !contentType.startsWith("text/") |==> contentType == null != !contentType.startsWith("text/")
17:COR:||(boolean,boolean):LHS(boolean,boolean):org.jsoup.DataUtil@load(java.net.URL,int):51:contentType == null || !contentType.startsWith("text/") |==> contentType == null
18:COR:||(boolean,boolean):RHS(boolean,boolean):org.jsoup.DataUtil@load(java.net.URL,int):51:contentType == null || !contentType.startsWith("text/") |==> !contentType.startsWith("text/")
19:COR:||(boolean,boolean):TRUE(boolean,boolean):org.jsoup.DataUtil@load(java.net.URL,int):51:contentType == null || !contentType.startsWith("text/") |==> true
20:STD:<CALL>:<NO-OP>:org.jsoup.DataUtil@load(java.net.URL,int):59:inStream.close() |==> <NO-OP>
21:LVR:POS:0:org.jsoup.DataUtil@readInputStream(java.io.InputStream,java.lang.String):64:131072 |==> 0
22:LVR:POS:NEG:org.jsoup.DataUtil@readInputStream(java.io.InputStream,java.lang.String):64:131072 |==> -131072
23:LVR:POS:0:org.jsoup.DataUtil@readInputStream(java.io.InputStream,java.lang.String):65:131072 |==> 0
24:LVR:POS:NEG:org.jsoup.DataUtil@readInputStream(java.io.InputStream,java.lang.String):65:131072 |==> -131072
25:LVR:0:POS:org.jsoup.DataUtil@readInputStream(java.io.InputStream,java.lang.String):69:0 |==> 1
26:LVR:0:NEG:org.jsoup.DataUtil@readInputStream(java.io.InputStream,java.lang.String):69:0 |==> -1
27:LVR:0:POS:org.jsoup.DataUtil@readInputStream(java.io.InputStream,java.lang.String):70:0 |==> 1
28:LVR:0:NEG:org.jsoup.DataUtil@readInputStream(java.io.InputStream,java.lang.String):70:0 |==> -1
29:ROR:>(int,int):!=(int,int):org.jsoup.DataUtil@readInputStream(java.io.InputStream,java.lang.String):70:read > 0 |==> read != 0
30:ROR:>(int,int):>=(int,int):org.jsoup.DataUtil@readInputStream(java.io.InputStream,java.lang.String):70:read > 0 |==> read >= 0
31:ROR:>(int,int):FALSE(int,int):org.jsoup.DataUtil@readInputStream(java.io.InputStream,java.lang.String):70:read > 0 |==> false
32:LVR:0:POS:org.jsoup.DataUtil@readInputStream(java.io.InputStream,java.lang.String):71:0 |==> 1
33:LVR:0:NEG:org.jsoup.DataUtil@readInputStream(java.io.InputStream,java.lang.String):71:0 |==> -1
34:STD:<CALL>:<NO-OP>:org.jsoup.DataUtil@readInputStream(java.io.InputStream,java.lang.String):71:data.append(buffer, 0, read) |==> <NO-OP>
35:LVR:0:POS:org.jsoup.DataUtil@readInputStream(java.io.InputStream,java.lang.String):74:0 |==> 1
36:LVR:0:NEG:org.jsoup.DataUtil@readInputStream(java.io.InputStream,java.lang.String):74:0 |==> -1
37:ROR:>=(int,int):==(int,int):org.jsoup.DataUtil@readInputStream(java.io.InputStream,java.lang.String):74:read >= 0 |==> read == 0
38:ROR:>=(int,int):>(int,int):org.jsoup.DataUtil@readInputStream(java.io.InputStream,java.lang.String):74:read >= 0 |==> read > 0
39:ROR:>=(int,int):TRUE(int,int):org.jsoup.DataUtil@readInputStream(java.io.InputStream,java.lang.String):74:read >= 0 |==> true
40:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Document@createShell(java.lang.String):31:Validate.notNull(baseUri) |==> <NO-OP>
41:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Document@createShell(java.lang.String):35:html.appendElement("head") |==> <NO-OP>
42:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Document@createShell(java.lang.String):36:html.appendElement("body") |==> <NO-OP>
43:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.jsoup.nodes.Document@title():63:titleEl != null |==> true
44:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Document@title(java.lang.String):72:Validate.notNull(title) |==> <NO-OP>
45:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.jsoup.nodes.Document@title(java.lang.String):74:titleEl == null |==> false
46:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Document@title(java.lang.String):75:head().appendElement("title").text(title) |==> <NO-OP>
47:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Document@title(java.lang.String):77:titleEl.text(title) |==> <NO-OP>
48:COR:select("html").isEmpty():TRUE:org.jsoup.nodes.Document@normalise():96:select("html").isEmpty() |==> false
49:COR:select("html").isEmpty():FALSE:org.jsoup.nodes.Document@normalise():96:select("html").isEmpty() |==> true
50:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Document@normalise():97:appendElement("html") |==> <NO-OP>
51:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.jsoup.nodes.Document@normalise():98:head() == null |==> false
52:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Document@normalise():99:select("html").first().prependElement("head") |==> <NO-OP>
53:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.jsoup.nodes.Document@normalise():100:body() == null |==> false
54:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Document@normalise():101:select("html").first().appendElement("body") |==> <NO-OP>
55:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Document@normalise():105:normalise(head()) |==> <NO-OP>
56:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Document@normalise():106:normalise(select("html").first()) |==> <NO-OP>
57:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Document@normalise():107:normalise(this) |==> <NO-OP>
58:COR:tn.isBlank():TRUE:org.jsoup.nodes.Document@normalise(org.jsoup.nodes.Element):118:tn.isBlank() |==> false
59:COR:tn.isBlank():FALSE:org.jsoup.nodes.Document@normalise(org.jsoup.nodes.Element):118:tn.isBlank() |==> true
60:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Document@normalise(org.jsoup.nodes.Element):119:toMove.add(tn) |==> <NO-OP>
61:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Document@normalise(org.jsoup.nodes.Element):124:element.removeChild(node) |==> <NO-OP>
62:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Document@normalise(org.jsoup.nodes.Element):125:body().prependChild(node) |==> <NO-OP>
63:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Document@normalise(org.jsoup.nodes.Element):126:body().prependChild(new TextNode(" ", "")) |==> <NO-OP>
64:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Document@text(java.lang.String):142:body().text(text) |==> <NO-OP>
65:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@<init>(org.jsoup.parser.Tag,java.lang.String,org.jsoup.nodes.Attributes):37:Validate.notNull(tag) |==> <NO-OP>
66:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.jsoup.nodes.Element@id():93:id == null |==> false
67:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@attr(java.lang.String,java.lang.String):103:super.attr(attributeKey, attributeValue) |==> <NO-OP>
68:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@children():139:elements.add((Element)node) |==> <NO-OP>
69:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@appendChild(org.jsoup.nodes.Node):172:Validate.notNull(child) |==> <NO-OP>
70:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@appendChild(org.jsoup.nodes.Node):174:child.setParentNode(this) |==> <NO-OP>
71:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@appendChild(org.jsoup.nodes.Node):175:childNodes.add(child) |==> <NO-OP>
72:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@prependChild(org.jsoup.nodes.Node):186:Validate.notNull(child) |==> <NO-OP>
73:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@prependChild(org.jsoup.nodes.Node):188:child.setParentNode(this) |==> <NO-OP>
74:LVR:0:POS:org.jsoup.nodes.Element@prependChild(org.jsoup.nodes.Node):189:0 |==> 1
75:LVR:0:NEG:org.jsoup.nodes.Element@prependChild(org.jsoup.nodes.Node):189:0 |==> -1
76:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@prependChild(org.jsoup.nodes.Node):189:childNodes.add(0, child) |==> <NO-OP>
77:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@appendElement(java.lang.String):202:appendChild(child) |==> <NO-OP>
78:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@prependElement(java.lang.String):215:prependChild(child) |==> <NO-OP>
79:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@appendText(java.lang.String):227:appendChild(node) |==> <NO-OP>
80:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@prependText(java.lang.String):239:prependChild(node) |==> <NO-OP>
81:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@append(java.lang.String):250:Validate.notNull(html) |==> <NO-OP>
82:STD:<ASSIGN>:<NO-OP>:org.jsoup.nodes.Element@append(java.lang.String):255:node.parentNode = null |==> <NO-OP>
83:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@append(java.lang.String):256:appendChild(node) |==> <NO-OP>
84:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@prepend(java.lang.String):268:Validate.notNull(html) |==> <NO-OP>
85:LVR:POS:0:org.jsoup.nodes.Element@prepend(java.lang.String):273:1 |==> 0
86:LVR:POS:NEG:org.jsoup.nodes.Element@prepend(java.lang.String):273:1 |==> -1
87:AOR:-(int,int):%(int,int):org.jsoup.nodes.Element@prepend(java.lang.String):273:nodes.size() - 1 |==> nodes.size() % 1
88:AOR:-(int,int):*(int,int):org.jsoup.nodes.Element@prepend(java.lang.String):273:nodes.size() - 1 |==> nodes.size() * 1
89:AOR:-(int,int):+(int,int):org.jsoup.nodes.Element@prepend(java.lang.String):273:nodes.size() - 1 |==> nodes.size() + 1
90:AOR:-(int,int):/(int,int):org.jsoup.nodes.Element@prepend(java.lang.String):273:nodes.size() - 1 |==> nodes.size() / 1
91:LVR:0:POS:org.jsoup.nodes.Element@prepend(java.lang.String):273:0 |==> 1
92:LVR:0:NEG:org.jsoup.nodes.Element@prepend(java.lang.String):273:0 |==> -1
93:ROR:>=(int,int):==(int,int):org.jsoup.nodes.Element@prepend(java.lang.String):273:i >= 0 |==> i == 0
94:ROR:>=(int,int):>(int,int):org.jsoup.nodes.Element@prepend(java.lang.String):273:i >= 0 |==> i > 0
95:ROR:>=(int,int):TRUE(int,int):org.jsoup.nodes.Element@prepend(java.lang.String):273:i >= 0 |==> true
96:STD:<ASSIGN>:<NO-OP>:org.jsoup.nodes.Element@prepend(java.lang.String):275:node.parentNode = null |==> <NO-OP>
97:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@prepend(java.lang.String):276:prependChild(node) |==> <NO-OP>
98:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@empty():286:childNodes.clear() |==> <NO-OP>
99:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@wrap(java.lang.String):296:Validate.notEmpty(html) |==> <NO-OP>
100:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.jsoup.nodes.Element@wrap(java.lang.String):301:wrap == null |==> false
101:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@wrap(java.lang.String):305:parentNode.replaceChild(this, wrap) |==> <NO-OP>
102:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@wrap(java.lang.String):306:deepest.addChild(this) |==> <NO-OP>
103:LVR:POS:0:org.jsoup.nodes.Element@wrap(java.lang.String):309:1 |==> 0
104:LVR:POS:NEG:org.jsoup.nodes.Element@wrap(java.lang.String):309:1 |==> -1
105:ROR:>(int,int):!=(int,int):org.jsoup.nodes.Element@wrap(java.lang.String):309:wrapChildren.size() > 1 |==> wrapChildren.size() != 1
106:ROR:>(int,int):>=(int,int):org.jsoup.nodes.Element@wrap(java.lang.String):309:wrapChildren.size() > 1 |==> wrapChildren.size() >= 1
107:ROR:>(int,int):FALSE(int,int):org.jsoup.nodes.Element@wrap(java.lang.String):309:wrapChildren.size() > 1 |==> false
108:LVR:POS:0:org.jsoup.nodes.Element@wrap(java.lang.String):310:1 |==> 0
109:LVR:POS:NEG:org.jsoup.nodes.Element@wrap(java.lang.String):310:1 |==> -1
110:ROR:<(int,int):!=(int,int):org.jsoup.nodes.Element@wrap(java.lang.String):310:i < wrapChildren.size() |==> i != wrapChildren.size()
111:ROR:<(int,int):<=(int,int):org.jsoup.nodes.Element@wrap(java.lang.String):310:i < wrapChildren.size() |==> i <= wrapChildren.size()
112:ROR:<(int,int):FALSE(int,int):org.jsoup.nodes.Element@wrap(java.lang.String):310:i < wrapChildren.size() |==> false
113:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@wrap(java.lang.String):312:remainder.parentNode.removeChild(remainder) |==> <NO-OP>
114:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@wrap(java.lang.String):313:wrap.appendChild(remainder) |==> <NO-OP>
115:LVR:0:POS:org.jsoup.nodes.Element@getDeepChild(org.jsoup.nodes.Element):321:0 |==> 1
116:LVR:0:NEG:org.jsoup.nodes.Element@getDeepChild(org.jsoup.nodes.Element):321:0 |==> -1
117:ROR:>(int,int):!=(int,int):org.jsoup.nodes.Element@getDeepChild(org.jsoup.nodes.Element):321:children.size() > 0 |==> children.size() != 0
118:ROR:>(int,int):>=(int,int):org.jsoup.nodes.Element@getDeepChild(org.jsoup.nodes.Element):321:children.size() > 0 |==> children.size() >= 0
119:ROR:>(int,int):FALSE(int,int):org.jsoup.nodes.Element@getDeepChild(org.jsoup.nodes.Element):321:children.size() > 0 |==> false
120:LVR:0:POS:org.jsoup.nodes.Element@getDeepChild(org.jsoup.nodes.Element):322:0 |==> 1
121:LVR:0:NEG:org.jsoup.nodes.Element@getDeepChild(org.jsoup.nodes.Element):322:0 |==> -1
122:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@nextElementSibling():346:Validate.notNull(index) |==> <NO-OP>
123:LVR:POS:0:org.jsoup.nodes.Element@nextElementSibling():347:1 |==> 0
124:LVR:POS:NEG:org.jsoup.nodes.Element@nextElementSibling():347:1 |==> -1
125:AOR:+(int,int):%(int,int):org.jsoup.nodes.Element@nextElementSibling():347:index + 1 |==> index % 1
126:AOR:+(int,int):*(int,int):org.jsoup.nodes.Element@nextElementSibling():347:index + 1 |==> index * 1
127:AOR:+(int,int):-(int,int):org.jsoup.nodes.Element@nextElementSibling():347:index + 1 |==> index - 1
128:AOR:+(int,int):/(int,int):org.jsoup.nodes.Element@nextElementSibling():347:index + 1 |==> index / 1
129:ROR:>(int,int):!=(int,int):org.jsoup.nodes.Element@nextElementSibling():347:siblings.size() > index + 1 |==> siblings.size() != index + 1
130:ROR:>(int,int):>=(int,int):org.jsoup.nodes.Element@nextElementSibling():347:siblings.size() > index + 1 |==> siblings.size() >= index + 1
131:ROR:>(int,int):FALSE(int,int):org.jsoup.nodes.Element@nextElementSibling():347:siblings.size() > index + 1 |==> false
132:LVR:POS:0:org.jsoup.nodes.Element@nextElementSibling():348:1 |==> 0
133:LVR:POS:NEG:org.jsoup.nodes.Element@nextElementSibling():348:1 |==> -1
134:AOR:+(int,int):%(int,int):org.jsoup.nodes.Element@nextElementSibling():348:index + 1 |==> index % 1
135:AOR:+(int,int):*(int,int):org.jsoup.nodes.Element@nextElementSibling():348:index + 1 |==> index * 1
136:AOR:+(int,int):-(int,int):org.jsoup.nodes.Element@nextElementSibling():348:index + 1 |==> index - 1
137:AOR:+(int,int):/(int,int):org.jsoup.nodes.Element@nextElementSibling():348:index + 1 |==> index / 1
138:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@previousElementSibling():361:Validate.notNull(index) |==> <NO-OP>
139:LVR:0:POS:org.jsoup.nodes.Element@previousElementSibling():362:0 |==> 1
140:LVR:0:NEG:org.jsoup.nodes.Element@previousElementSibling():362:0 |==> -1
141:ROR:>(int,int):!=(int,int):org.jsoup.nodes.Element@previousElementSibling():362:index > 0 |==> index != 0
142:ROR:>(int,int):>=(int,int):org.jsoup.nodes.Element@previousElementSibling():362:index > 0 |==> index >= 0
143:ROR:>(int,int):FALSE(int,int):org.jsoup.nodes.Element@previousElementSibling():362:index > 0 |==> false
144:LVR:POS:0:org.jsoup.nodes.Element@previousElementSibling():363:1 |==> 0
145:LVR:POS:NEG:org.jsoup.nodes.Element@previousElementSibling():363:1 |==> -1
146:AOR:-(int,int):%(int,int):org.jsoup.nodes.Element@previousElementSibling():363:index - 1 |==> index % 1
147:AOR:-(int,int):*(int,int):org.jsoup.nodes.Element@previousElementSibling():363:index - 1 |==> index * 1
148:AOR:-(int,int):+(int,int):org.jsoup.nodes.Element@previousElementSibling():363:index - 1 |==> index + 1
149:AOR:-(int,int):/(int,int):org.jsoup.nodes.Element@previousElementSibling():363:index - 1 |==> index / 1
150:LVR:POS:0:org.jsoup.nodes.Element@firstElementSibling():375:1 |==> 0
151:LVR:POS:NEG:org.jsoup.nodes.Element@firstElementSibling():375:1 |==> -1
152:ROR:>(int,int):!=(int,int):org.jsoup.nodes.Element@firstElementSibling():375:siblings.size() > 1 |==> siblings.size() != 1
153:ROR:>(int,int):>=(int,int):org.jsoup.nodes.Element@firstElementSibling():375:siblings.size() > 1 |==> siblings.size() >= 1
154:ROR:>(int,int):FALSE(int,int):org.jsoup.nodes.Element@firstElementSibling():375:siblings.size() > 1 |==> false
155:LVR:0:POS:org.jsoup.nodes.Element@firstElementSibling():375:0 |==> 1
156:LVR:0:NEG:org.jsoup.nodes.Element@firstElementSibling():375:0 |==> -1
157:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.jsoup.nodes.Element@elementSiblingIndex():384:parent() == null |==> false
158:LVR:0:POS:org.jsoup.nodes.Element@elementSiblingIndex():384:0 |==> 1
159:LVR:0:NEG:org.jsoup.nodes.Element@elementSiblingIndex():384:0 |==> -1
160:LVR:POS:0:org.jsoup.nodes.Element@lastElementSibling():394:1 |==> 0
161:LVR:POS:NEG:org.jsoup.nodes.Element@lastElementSibling():394:1 |==> -1
162:ROR:>(int,int):!=(int,int):org.jsoup.nodes.Element@lastElementSibling():394:siblings.size() > 1 |==> siblings.size() != 1
163:ROR:>(int,int):>=(int,int):org.jsoup.nodes.Element@lastElementSibling():394:siblings.size() > 1 |==> siblings.size() >= 1
164:ROR:>(int,int):FALSE(int,int):org.jsoup.nodes.Element@lastElementSibling():394:siblings.size() > 1 |==> false
165:LVR:POS:0:org.jsoup.nodes.Element@lastElementSibling():394:1 |==> 0
166:LVR:POS:NEG:org.jsoup.nodes.Element@lastElementSibling():394:1 |==> -1
167:AOR:-(int,int):%(int,int):org.jsoup.nodes.Element@lastElementSibling():394:siblings.size() - 1 |==> siblings.size() % 1
168:AOR:-(int,int):*(int,int):org.jsoup.nodes.Element@lastElementSibling():394:siblings.size() - 1 |==> siblings.size() * 1
169:AOR:-(int,int):+(int,int):org.jsoup.nodes.Element@lastElementSibling():394:siblings.size() - 1 |==> siblings.size() + 1
170:AOR:-(int,int):/(int,int):org.jsoup.nodes.Element@lastElementSibling():394:siblings.size() - 1 |==> siblings.size() / 1
171:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@getElementsByTag(java.lang.String):405:Validate.notEmpty(tagName) |==> <NO-OP>
172:STD:<ASSIGN>:<NO-OP>:org.jsoup.nodes.Element@getElementsByTag(java.lang.String):406:tagName = tagName.toLowerCase().trim() |==> <NO-OP>
173:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@getElementById(java.lang.String):421:Validate.notEmpty(id) |==> <NO-OP>
174:LVR:0:POS:org.jsoup.nodes.Element@getElementById(java.lang.String):424:0 |==> 1
175:LVR:0:NEG:org.jsoup.nodes.Element@getElementById(java.lang.String):424:0 |==> -1
176:ROR:>(int,int):!=(int,int):org.jsoup.nodes.Element@getElementById(java.lang.String):424:elements.size() > 0 |==> elements.size() != 0
177:ROR:>(int,int):>=(int,int):org.jsoup.nodes.Element@getElementById(java.lang.String):424:elements.size() > 0 |==> elements.size() >= 0
178:ROR:>(int,int):FALSE(int,int):org.jsoup.nodes.Element@getElementById(java.lang.String):424:elements.size() > 0 |==> false
179:LVR:0:POS:org.jsoup.nodes.Element@getElementById(java.lang.String):425:0 |==> 1
180:LVR:0:NEG:org.jsoup.nodes.Element@getElementById(java.lang.String):425:0 |==> -1
181:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@getElementsByClass(java.lang.String):442:Validate.notEmpty(className) |==> <NO-OP>
182:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@getElementsByAttribute(java.lang.String):454:Validate.notEmpty(key) |==> <NO-OP>
183:STD:<ASSIGN>:<NO-OP>:org.jsoup.nodes.Element@getElementsByAttribute(java.lang.String):455:key = key.trim().toLowerCase() |==> <NO-OP>
184:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@text():558:text(sb) |==> <NO-OP>
185:COR:preserveWhitespace():TRUE:org.jsoup.nodes.Element@text(java.lang.StringBuilder):568:preserveWhitespace() |==> false
186:COR:preserveWhitespace():FALSE:org.jsoup.nodes.Element@text(java.lang.StringBuilder):568:preserveWhitespace() |==> true
187:STD:<ASSIGN>:<NO-OP>:org.jsoup.nodes.Element@text(java.lang.StringBuilder):569:text = TextNode.normaliseWhitespace(text) |==> <NO-OP>
188:COR:TextNode.lastCharIsWhitespace(accum):TRUE:org.jsoup.nodes.Element@text(java.lang.StringBuilder):570:TextNode.lastCharIsWhitespace(accum) |==> false
189:COR:TextNode.lastCharIsWhitespace(accum):FALSE:org.jsoup.nodes.Element@text(java.lang.StringBuilder):570:TextNode.lastCharIsWhitespace(accum) |==> true
190:STD:<ASSIGN>:<NO-OP>:org.jsoup.nodes.Element@text(java.lang.StringBuilder):571:text = TextNode.stripLeadingWhitespace(text) |==> <NO-OP>
191:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@text(java.lang.StringBuilder):573:accum.append(text) |==> <NO-OP>
192:LVR:0:POS:org.jsoup.nodes.Element@text(java.lang.StringBuilder):577:0 |==> 1
193:LVR:0:NEG:org.jsoup.nodes.Element@text(java.lang.StringBuilder):577:0 |==> -1
194:ROR:>(int,int):!=(int,int):org.jsoup.nodes.Element@text(java.lang.StringBuilder):577:accum.length() > 0 |==> accum.length() != 0
195:ROR:>(int,int):>=(int,int):org.jsoup.nodes.Element@text(java.lang.StringBuilder):577:accum.length() > 0 |==> accum.length() >= 0
196:ROR:>(int,int):FALSE(int,int):org.jsoup.nodes.Element@text(java.lang.StringBuilder):577:accum.length() > 0 |==> false
197:COR:&&(boolean,boolean):==(boolean,boolean):org.jsoup.nodes.Element@text(java.lang.StringBuilder):577:accum.length() > 0 && element.isBlock() |==> accum.length() > 0 == element.isBlock()
198:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.jsoup.nodes.Element@text(java.lang.StringBuilder):577:accum.length() > 0 && element.isBlock() |==> false
199:COR:&&(boolean,boolean):LHS(boolean,boolean):org.jsoup.nodes.Element@text(java.lang.StringBuilder):577:accum.length() > 0 && element.isBlock() |==> accum.length() > 0
200:COR:&&(boolean,boolean):RHS(boolean,boolean):org.jsoup.nodes.Element@text(java.lang.StringBuilder):577:accum.length() > 0 && element.isBlock() |==> element.isBlock()
201:COR:&&(boolean,boolean):==(boolean,boolean):org.jsoup.nodes.Element@text(java.lang.StringBuilder):577:accum.length() > 0 && element.isBlock() && !TextNode.lastCharIsWhitespace(accum) |==> (accum.length() > 0 && element.isBlock()) == !TextNode.lastCharIsWhitespace(accum)
202:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.jsoup.nodes.Element@text(java.lang.StringBuilder):577:accum.length() > 0 && element.isBlock() && !TextNode.lastCharIsWhitespace(accum) |==> false
203:COR:&&(boolean,boolean):LHS(boolean,boolean):org.jsoup.nodes.Element@text(java.lang.StringBuilder):577:accum.length() > 0 && element.isBlock() && !TextNode.lastCharIsWhitespace(accum) |==> accum.length() > 0 && element.isBlock()
204:COR:&&(boolean,boolean):RHS(boolean,boolean):org.jsoup.nodes.Element@text(java.lang.StringBuilder):577:accum.length() > 0 && element.isBlock() && !TextNode.lastCharIsWhitespace(accum) |==> !TextNode.lastCharIsWhitespace(accum)
205:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@text(java.lang.StringBuilder):578:accum.append(" ") |==> <NO-OP>
206:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@text(java.lang.StringBuilder):579:element.text(accum) |==> <NO-OP>
207:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.jsoup.nodes.Element@preserveWhitespace():585:parent() != null |==> true
208:COR:&&(boolean,boolean):==(boolean,boolean):org.jsoup.nodes.Element@preserveWhitespace():585:parent() != null && parent().preserveWhitespace() |==> parent() != null == parent().preserveWhitespace()
209:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.jsoup.nodes.Element@preserveWhitespace():585:parent() != null && parent().preserveWhitespace() |==> false
210:COR:&&(boolean,boolean):LHS(boolean,boolean):org.jsoup.nodes.Element@preserveWhitespace():585:parent() != null && parent().preserveWhitespace() |==> parent() != null
211:COR:&&(boolean,boolean):RHS(boolean,boolean):org.jsoup.nodes.Element@preserveWhitespace():585:parent() != null && parent().preserveWhitespace() |==> parent().preserveWhitespace()
212:COR:||(boolean,boolean):!=(boolean,boolean):org.jsoup.nodes.Element@preserveWhitespace():585:tag.preserveWhitespace() || parent() != null && parent().preserveWhitespace() |==> tag.preserveWhitespace() != (parent() != null && parent().preserveWhitespace())
213:COR:||(boolean,boolean):LHS(boolean,boolean):org.jsoup.nodes.Element@preserveWhitespace():585:tag.preserveWhitespace() || parent() != null && parent().preserveWhitespace() |==> tag.preserveWhitespace()
214:COR:||(boolean,boolean):RHS(boolean,boolean):org.jsoup.nodes.Element@preserveWhitespace():585:tag.preserveWhitespace() || parent() != null && parent().preserveWhitespace() |==> parent() != null && parent().preserveWhitespace()
215:COR:||(boolean,boolean):TRUE(boolean,boolean):org.jsoup.nodes.Element@preserveWhitespace():585:tag.preserveWhitespace() || parent() != null && parent().preserveWhitespace() |==> true
216:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@text(java.lang.String):594:Validate.notNull(text) |==> <NO-OP>
217:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@text(java.lang.String):596:empty() |==> <NO-OP>
218:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@text(java.lang.String):598:appendChild(textNode) |==> <NO-OP>
219:COR:textNode.isBlank():TRUE:org.jsoup.nodes.Element@hasText():611:textNode.isBlank() |==> false
220:COR:textNode.isBlank():FALSE:org.jsoup.nodes.Element@hasText():611:textNode.isBlank() |==> true
221:LVR:TRUE:FALSE:org.jsoup.nodes.Element@hasText():612:true |==> false
222:COR:el.hasText():TRUE:org.jsoup.nodes.Element@hasText():615:el.hasText() |==> false
223:COR:el.hasText():FALSE:org.jsoup.nodes.Element@hasText():615:el.hasText() |==> true
224:LVR:TRUE:FALSE:org.jsoup.nodes.Element@hasText():616:true |==> false
225:LVR:FALSE:TRUE:org.jsoup.nodes.Element@hasText():619:false |==> true
226:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@data():632:sb.append(data.getWholeData()) |==> <NO-OP>
227:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@data():636:sb.append(elementData) |==> <NO-OP>
228:COR:attributes.hasKey("class"):TRUE:org.jsoup.nodes.Element@className():648:attributes.hasKey("class") |==> false
229:COR:attributes.hasKey("class"):FALSE:org.jsoup.nodes.Element@className():648:attributes.hasKey("class") |==> true
230:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.jsoup.nodes.Element@classNames():658:classNames == null |==> false
231:STD:<ASSIGN>:<NO-OP>:org.jsoup.nodes.Element@classNames():660:classNames = new LinkedHashSet<String>(Arrays.asList(names)) |==> <NO-OP>
232:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@classNames(java.util.Set<java.lang.String>):671:Validate.notNull(classNames) |==> <NO-OP>
233:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@classNames(java.util.Set<java.lang.String>):672:attributes.put("class", StringUtils.join(classNames, " ")) |==> <NO-OP>
234:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@addClass(java.lang.String):691:Validate.notNull(className) |==> <NO-OP>
235:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@addClass(java.lang.String):694:classes.add(className) |==> <NO-OP>
236:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@addClass(java.lang.String):695:classNames(classes) |==> <NO-OP>
237:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@removeClass(java.lang.String):706:Validate.notNull(className) |==> <NO-OP>
238:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@removeClass(java.lang.String):709:classes.remove(className) |==> <NO-OP>
239:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@removeClass(java.lang.String):710:classNames(classes) |==> <NO-OP>
240:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@toggleClass(java.lang.String):721:Validate.notNull(className) |==> <NO-OP>
241:COR:classes.contains(className):TRUE:org.jsoup.nodes.Element@toggleClass(java.lang.String):724:classes.contains(className) |==> false
242:COR:classes.contains(className):FALSE:org.jsoup.nodes.Element@toggleClass(java.lang.String):724:classes.contains(className) |==> true
243:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@toggleClass(java.lang.String):725:classes.remove(className) |==> <NO-OP>
244:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@toggleClass(java.lang.String):727:classes.add(className) |==> <NO-OP>
245:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@toggleClass(java.lang.String):728:classNames(classes) |==> <NO-OP>
246:COR:tagName().equals("textarea"):TRUE:org.jsoup.nodes.Element@val():738:tagName().equals("textarea") |==> false
247:COR:tagName().equals("textarea"):FALSE:org.jsoup.nodes.Element@val():738:tagName().equals("textarea") |==> true
248:COR:tagName().equals("textarea"):TRUE:org.jsoup.nodes.Element@val(java.lang.String):750:tagName().equals("textarea") |==> false
249:COR:tagName().equals("textarea"):FALSE:org.jsoup.nodes.Element@val(java.lang.String):750:tagName().equals("textarea") |==> true
250:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@val(java.lang.String):751:text(value) |==> <NO-OP>
251:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@val(java.lang.String):753:attr("value", value) |==> <NO-OP>
252:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.jsoup.nodes.Element@outerHtml(java.lang.StringBuilder):758:parent() != null |==> true
253:COR:&&(boolean,boolean):==(boolean,boolean):org.jsoup.nodes.Element@outerHtml(java.lang.StringBuilder):758:parent() != null && parent().tag().canContainBlock() |==> parent() != null == parent().tag().canContainBlock()
254:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.jsoup.nodes.Element@outerHtml(java.lang.StringBuilder):758:parent() != null && parent().tag().canContainBlock() |==> false
255:COR:&&(boolean,boolean):LHS(boolean,boolean):org.jsoup.nodes.Element@outerHtml(java.lang.StringBuilder):758:parent() != null && parent().tag().canContainBlock() |==> parent() != null
256:COR:&&(boolean,boolean):RHS(boolean,boolean):org.jsoup.nodes.Element@outerHtml(java.lang.StringBuilder):758:parent() != null && parent().tag().canContainBlock() |==> parent().tag().canContainBlock()
257:LVR:0:POS:org.jsoup.nodes.Element@outerHtml(java.lang.StringBuilder):758:0 |==> 1
258:LVR:0:NEG:org.jsoup.nodes.Element@outerHtml(java.lang.StringBuilder):758:0 |==> -1
259:ROR:==(int,int):<=(int,int):org.jsoup.nodes.Element@outerHtml(java.lang.StringBuilder):758:siblingIndex() == 0 |==> siblingIndex() <= 0
260:ROR:==(int,int):>=(int,int):org.jsoup.nodes.Element@outerHtml(java.lang.StringBuilder):758:siblingIndex() == 0 |==> siblingIndex() >= 0
261:ROR:==(int,int):FALSE(int,int):org.jsoup.nodes.Element@outerHtml(java.lang.StringBuilder):758:siblingIndex() == 0 |==> false
262:COR:&&(boolean,boolean):==(boolean,boolean):org.jsoup.nodes.Element@outerHtml(java.lang.StringBuilder):758:parent() != null && parent().tag().canContainBlock() && siblingIndex() == 0 |==> (parent() != null && parent().tag().canContainBlock()) == (siblingIndex() == 0)
263:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.jsoup.nodes.Element@outerHtml(java.lang.StringBuilder):758:parent() != null && parent().tag().canContainBlock() && siblingIndex() == 0 |==> false
264:COR:&&(boolean,boolean):LHS(boolean,boolean):org.jsoup.nodes.Element@outerHtml(java.lang.StringBuilder):758:parent() != null && parent().tag().canContainBlock() && siblingIndex() == 0 |==> parent() != null && parent().tag().canContainBlock()
265:COR:&&(boolean,boolean):RHS(boolean,boolean):org.jsoup.nodes.Element@outerHtml(java.lang.StringBuilder):758:parent() != null && parent().tag().canContainBlock() && siblingIndex() == 0 |==> siblingIndex() == 0
266:COR:||(boolean,boolean):!=(boolean,boolean):org.jsoup.nodes.Element@outerHtml(java.lang.StringBuilder):758:isBlock() || (parent() != null && parent().tag().canContainBlock() && siblingIndex() == 0) |==> isBlock() != (parent() != null && parent().tag().canContainBlock() && siblingIndex() == 0)
267:COR:||(boolean,boolean):LHS(boolean,boolean):org.jsoup.nodes.Element@outerHtml(java.lang.StringBuilder):758:isBlock() || (parent() != null && parent().tag().canContainBlock() && siblingIndex() == 0) |==> isBlock()
268:COR:||(boolean,boolean):RHS(boolean,boolean):org.jsoup.nodes.Element@outerHtml(java.lang.StringBuilder):758:isBlock() || (parent() != null && parent().tag().canContainBlock() && siblingIndex() == 0) |==> (parent() != null && parent().tag().canContainBlock() && siblingIndex() == 0)
269:COR:||(boolean,boolean):TRUE(boolean,boolean):org.jsoup.nodes.Element@outerHtml(java.lang.StringBuilder):758:isBlock() || (parent() != null && parent().tag().canContainBlock() && siblingIndex() == 0) |==> true
270:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@outerHtml(java.lang.StringBuilder):759:indent(accum) |==> <NO-OP>
271:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@outerHtml(java.lang.StringBuilder):760:accum.append("<").append(tagName()).append(attributes.html()) |==> <NO-OP>
272:COR:&&(boolean,boolean):==(boolean,boolean):org.jsoup.nodes.Element@outerHtml(java.lang.StringBuilder):765:childNodes.isEmpty() && tag.isEmpty() |==> childNodes.isEmpty() == tag.isEmpty()
273:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.jsoup.nodes.Element@outerHtml(java.lang.StringBuilder):765:childNodes.isEmpty() && tag.isEmpty() |==> false
274:COR:&&(boolean,boolean):LHS(boolean,boolean):org.jsoup.nodes.Element@outerHtml(java.lang.StringBuilder):765:childNodes.isEmpty() && tag.isEmpty() |==> childNodes.isEmpty()
275:COR:&&(boolean,boolean):RHS(boolean,boolean):org.jsoup.nodes.Element@outerHtml(java.lang.StringBuilder):765:childNodes.isEmpty() && tag.isEmpty() |==> tag.isEmpty()
276:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@outerHtml(java.lang.StringBuilder):766:accum.append(" />") |==> <NO-OP>
277:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@outerHtml(java.lang.StringBuilder):768:accum.append(">") |==> <NO-OP>
278:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@outerHtml(java.lang.StringBuilder):769:html(accum) |==> <NO-OP>
279:COR:tag.canContainBlock():TRUE:org.jsoup.nodes.Element@outerHtml(java.lang.StringBuilder):770:tag.canContainBlock() |==> false
280:COR:tag.canContainBlock():FALSE:org.jsoup.nodes.Element@outerHtml(java.lang.StringBuilder):770:tag.canContainBlock() |==> true
281:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@outerHtml(java.lang.StringBuilder):770:indent(accum) |==> <NO-OP>
282:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@outerHtml(java.lang.StringBuilder):771:accum.append("</").append(tagName()).append(">") |==> <NO-OP>
283:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@html():784:html(accum) |==> <NO-OP>
284:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@html(java.lang.StringBuilder):790:node.outerHtml(accum) |==> <NO-OP>
285:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@html(java.lang.String):800:empty() |==> <NO-OP>
286:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Element@html(java.lang.String):801:append(html) |==> <NO-OP>
287:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.jsoup.nodes.Element@equals(java.lang.Object):811:this == o |==> false
288:LVR:TRUE:FALSE:org.jsoup.nodes.Element@equals(java.lang.Object):811:true |==> false
289:LVR:FALSE:TRUE:org.jsoup.nodes.Element@equals(java.lang.Object):812:false |==> true
290:COR:super.equals(o):TRUE:org.jsoup.nodes.Element@equals(java.lang.Object):813:super.equals(o) |==> false
291:COR:super.equals(o):FALSE:org.jsoup.nodes.Element@equals(java.lang.Object):813:super.equals(o) |==> true
292:LVR:FALSE:TRUE:org.jsoup.nodes.Element@equals(java.lang.Object):813:false |==> true
293:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.jsoup.nodes.Element@equals(java.lang.Object):817:tag != null |==> true
294:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.jsoup.nodes.Element@equals(java.lang.Object):817:element.tag != null |==> true
295:LVR:FALSE:TRUE:org.jsoup.nodes.Element@equals(java.lang.Object):817:false |==> true
296:LVR:TRUE:FALSE:org.jsoup.nodes.Element@equals(java.lang.Object):819:true |==> false
297:LVR:POS:0:org.jsoup.nodes.Element@hashCode():825:31 |==> 0
298:LVR:POS:NEG:org.jsoup.nodes.Element@hashCode():825:31 |==> -31
299:AOR:*(int,int):%(int,int):org.jsoup.nodes.Element@hashCode():825:31 * result |==> 31 % result
300:AOR:*(int,int):+(int,int):org.jsoup.nodes.Element@hashCode():825:31 * result |==> 31 + result
301:AOR:*(int,int):-(int,int):org.jsoup.nodes.Element@hashCode():825:31 * result |==> 31 - result
302:AOR:*(int,int):/(int,int):org.jsoup.nodes.Element@hashCode():825:31 * result |==> 31 / result
303:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.jsoup.nodes.Element@hashCode():825:tag != null |==> true
304:LVR:0:POS:org.jsoup.nodes.Element@hashCode():825:0 |==> 1
305:LVR:0:NEG:org.jsoup.nodes.Element@hashCode():825:0 |==> -1
306:AOR:+(int,int):%(int,int):org.jsoup.nodes.Element@hashCode():825:31 * result + (tag != null ? tag.hashCode() : 0) |==> 31 * result % (tag != null ? tag.hashCode() : 0)
307:AOR:+(int,int):*(int,int):org.jsoup.nodes.Element@hashCode():825:31 * result + (tag != null ? tag.hashCode() : 0) |==> 31 * result * (tag != null ? tag.hashCode() : 0)
308:AOR:+(int,int):-(int,int):org.jsoup.nodes.Element@hashCode():825:31 * result + (tag != null ? tag.hashCode() : 0) |==> 31 * result - (tag != null ? tag.hashCode() : 0)
309:AOR:+(int,int):/(int,int):org.jsoup.nodes.Element@hashCode():825:31 * result + (tag != null ? tag.hashCode() : 0) |==> 31 * result / (tag != null ? tag.hashCode() : 0)
310:STD:<ASSIGN>:<NO-OP>:org.jsoup.nodes.Element@hashCode():825:result = 31 * result + (tag != null ? tag.hashCode() : 0) |==> <NO-OP>
311:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Node@<init>(java.lang.String,org.jsoup.nodes.Attributes):29:Validate.notNull(baseUri) |==> <NO-OP>
312:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Node@<init>(java.lang.String,org.jsoup.nodes.Attributes):30:Validate.notNull(attributes) |==> <NO-OP>
313:STD:<ASSIGN>:<NO-OP>:org.jsoup.nodes.Node@<init>(java.lang.String,org.jsoup.nodes.Attributes):33:this.baseUri = baseUri.trim() |==> <NO-OP>
314:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Node@attr(java.lang.String):60:Validate.notNull(attributeKey) |==> <NO-OP>
315:COR:hasAttr(attributeKey):TRUE:org.jsoup.nodes.Node@attr(java.lang.String):62:hasAttr(attributeKey) |==> false
316:COR:hasAttr(attributeKey):FALSE:org.jsoup.nodes.Node@attr(java.lang.String):62:hasAttr(attributeKey) |==> true
317:COR:attributeKey.toLowerCase().startsWith("abs:"):TRUE:org.jsoup.nodes.Node@attr(java.lang.String):64:attributeKey.toLowerCase().startsWith("abs:") |==> false
318:COR:attributeKey.toLowerCase().startsWith("abs:"):FALSE:org.jsoup.nodes.Node@attr(java.lang.String):64:attributeKey.toLowerCase().startsWith("abs:") |==> true
319:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Node@attr(java.lang.String,java.lang.String):84:attributes.put(attributeKey, attributeValue) |==> <NO-OP>
320:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Node@hasAttr(java.lang.String):94:Validate.notNull(attributeKey) |==> <NO-OP>
321:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Node@removeAttr(java.lang.String):104:Validate.notNull(attributeKey) |==> <NO-OP>
322:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Node@removeAttr(java.lang.String):105:attributes.remove(attributeKey) |==> <NO-OP>
323:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Node@setBaseUri(java.lang.String):122:Validate.notNull(baseUri) |==> <NO-OP>
324:STD:<ASSIGN>:<NO-OP>:org.jsoup.nodes.Node@setBaseUri(java.lang.String):123:this.baseUri = baseUri |==> <NO-OP>
325:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Node@absUrl(java.lang.String):144:Validate.notEmpty(attributeKey) |==> <NO-OP>
326:COR:hasAttr(attributeKey):TRUE:org.jsoup.nodes.Node@absUrl(java.lang.String):147:hasAttr(attributeKey) |==> false
327:COR:hasAttr(attributeKey):FALSE:org.jsoup.nodes.Node@absUrl(java.lang.String):147:hasAttr(attributeKey) |==> true
328:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Node@remove():197:Validate.notNull(parentNode) |==> <NO-OP>
329:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Node@remove():198:parentNode.removeChild(this) |==> <NO-OP>
330:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Node@replaceWith(org.jsoup.nodes.Node):206:Validate.notNull(in) |==> <NO-OP>
331:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Node@replaceWith(org.jsoup.nodes.Node):207:Validate.notNull(parentNode) |==> <NO-OP>
332:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Node@replaceWith(org.jsoup.nodes.Node):208:parentNode.replaceChild(this, in) |==> <NO-OP>
333:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.jsoup.nodes.Node@setParentNode(org.jsoup.nodes.Node):212:this.parentNode != null |==> true
334:STD:<ASSIGN>:<NO-OP>:org.jsoup.nodes.Node@setParentNode(org.jsoup.nodes.Node):214:this.parentNode = parentNode |==> <NO-OP>
335:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.jsoup.nodes.Node@replaceChild(org.jsoup.nodes.Node,org.jsoup.nodes.Node):218:out.parentNode == this |==> false
336:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Node@replaceChild(org.jsoup.nodes.Node,org.jsoup.nodes.Node):218:Validate.isTrue(out.parentNode == this) |==> <NO-OP>
337:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Node@replaceChild(org.jsoup.nodes.Node,org.jsoup.nodes.Node):219:Validate.notNull(in) |==> <NO-OP>
338:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.jsoup.nodes.Node@replaceChild(org.jsoup.nodes.Node,org.jsoup.nodes.Node):220:in.parentNode != null |==> true
339:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Node@replaceChild(org.jsoup.nodes.Node,org.jsoup.nodes.Node):221:in.parentNode.removeChild(in) |==> <NO-OP>
340:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Node@replaceChild(org.jsoup.nodes.Node,org.jsoup.nodes.Node):224:childNodes.set(index, in) |==> <NO-OP>
341:STD:<ASSIGN>:<NO-OP>:org.jsoup.nodes.Node@replaceChild(org.jsoup.nodes.Node,org.jsoup.nodes.Node):225:in.parentNode = this |==> <NO-OP>
342:STD:<ASSIGN>:<NO-OP>:org.jsoup.nodes.Node@replaceChild(org.jsoup.nodes.Node,org.jsoup.nodes.Node):226:out.parentNode = null |==> <NO-OP>
343:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.jsoup.nodes.Node@removeChild(org.jsoup.nodes.Node):230:out.parentNode == this |==> false
344:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Node@removeChild(org.jsoup.nodes.Node):230:Validate.isTrue(out.parentNode == this) |==> <NO-OP>
345:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Node@removeChild(org.jsoup.nodes.Node):232:childNodes.remove(index) |==> <NO-OP>
346:STD:<ASSIGN>:<NO-OP>:org.jsoup.nodes.Node@removeChild(org.jsoup.nodes.Node):233:out.parentNode = null |==> <NO-OP>
347:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Node@addChild(org.jsoup.nodes.Node):237:Validate.notNull(in) |==> <NO-OP>
348:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.jsoup.nodes.Node@addChild(org.jsoup.nodes.Node):238:in.parentNode != null |==> true
349:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Node@addChild(org.jsoup.nodes.Node):239:in.parentNode.removeChild(in) |==> <NO-OP>
350:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Node@addChild(org.jsoup.nodes.Node):241:childNodes.add(in) |==> <NO-OP>
351:STD:<ASSIGN>:<NO-OP>:org.jsoup.nodes.Node@addChild(org.jsoup.nodes.Node):242:in.parentNode = this |==> <NO-OP>
352:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.jsoup.nodes.Node@nodeDepth():246:parentNode == null |==> false
353:LVR:0:POS:org.jsoup.nodes.Node@nodeDepth():247:0 |==> 1
354:LVR:0:NEG:org.jsoup.nodes.Node@nodeDepth():247:0 |==> -1
355:LVR:POS:0:org.jsoup.nodes.Node@nodeDepth():249:1 |==> 0
356:LVR:POS:NEG:org.jsoup.nodes.Node@nodeDepth():249:1 |==> -1
357:AOR:+(int,int):%(int,int):org.jsoup.nodes.Node@nodeDepth():249:parentNode.nodeDepth() + 1 |==> parentNode.nodeDepth() % 1
358:AOR:+(int,int):*(int,int):org.jsoup.nodes.Node@nodeDepth():249:parentNode.nodeDepth() + 1 |==> parentNode.nodeDepth() * 1
359:AOR:+(int,int):-(int,int):org.jsoup.nodes.Node@nodeDepth():249:parentNode.nodeDepth() + 1 |==> parentNode.nodeDepth() - 1
360:AOR:+(int,int):/(int,int):org.jsoup.nodes.Node@nodeDepth():249:parentNode.nodeDepth() + 1 |==> parentNode.nodeDepth() / 1
361:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Node@nextSibling():267:Validate.notNull(index) |==> <NO-OP>
362:LVR:POS:0:org.jsoup.nodes.Node@nextSibling():268:1 |==> 0
363:LVR:POS:NEG:org.jsoup.nodes.Node@nextSibling():268:1 |==> -1
364:AOR:+(int,int):%(int,int):org.jsoup.nodes.Node@nextSibling():268:index + 1 |==> index % 1
365:AOR:+(int,int):*(int,int):org.jsoup.nodes.Node@nextSibling():268:index + 1 |==> index * 1
366:AOR:+(int,int):-(int,int):org.jsoup.nodes.Node@nextSibling():268:index + 1 |==> index - 1
367:AOR:+(int,int):/(int,int):org.jsoup.nodes.Node@nextSibling():268:index + 1 |==> index / 1
368:ROR:>(int,int):!=(int,int):org.jsoup.nodes.Node@nextSibling():268:siblings.size() > index + 1 |==> siblings.size() != index + 1
369:ROR:>(int,int):>=(int,int):org.jsoup.nodes.Node@nextSibling():268:siblings.size() > index + 1 |==> siblings.size() >= index + 1
370:ROR:>(int,int):FALSE(int,int):org.jsoup.nodes.Node@nextSibling():268:siblings.size() > index + 1 |==> false
371:LVR:POS:0:org.jsoup.nodes.Node@nextSibling():269:1 |==> 0
372:LVR:POS:NEG:org.jsoup.nodes.Node@nextSibling():269:1 |==> -1
373:AOR:+(int,int):%(int,int):org.jsoup.nodes.Node@nextSibling():269:index + 1 |==> index % 1
374:AOR:+(int,int):*(int,int):org.jsoup.nodes.Node@nextSibling():269:index + 1 |==> index * 1
375:AOR:+(int,int):-(int,int):org.jsoup.nodes.Node@nextSibling():269:index + 1 |==> index - 1
376:AOR:+(int,int):/(int,int):org.jsoup.nodes.Node@nextSibling():269:index + 1 |==> index / 1
377:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Node@previousSibling():281:Validate.notNull(index) |==> <NO-OP>
378:LVR:0:POS:org.jsoup.nodes.Node@previousSibling():282:0 |==> 1
379:LVR:0:NEG:org.jsoup.nodes.Node@previousSibling():282:0 |==> -1
380:ROR:>(int,int):!=(int,int):org.jsoup.nodes.Node@previousSibling():282:index > 0 |==> index != 0
381:ROR:>(int,int):>=(int,int):org.jsoup.nodes.Node@previousSibling():282:index > 0 |==> index >= 0
382:ROR:>(int,int):FALSE(int,int):org.jsoup.nodes.Node@previousSibling():282:index > 0 |==> false
383:LVR:POS:0:org.jsoup.nodes.Node@previousSibling():283:1 |==> 0
384:LVR:POS:NEG:org.jsoup.nodes.Node@previousSibling():283:1 |==> -1
385:AOR:-(int,int):%(int,int):org.jsoup.nodes.Node@previousSibling():283:index - 1 |==> index % 1
386:AOR:-(int,int):*(int,int):org.jsoup.nodes.Node@previousSibling():283:index - 1 |==> index * 1
387:AOR:-(int,int):+(int,int):org.jsoup.nodes.Node@previousSibling():283:index - 1 |==> index + 1
388:AOR:-(int,int):/(int,int):org.jsoup.nodes.Node@previousSibling():283:index - 1 |==> index / 1
389:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Node@indexInList(N,java.util.List<N>):299:Validate.notNull(search) |==> <NO-OP>
390:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Node@indexInList(N,java.util.List<N>):300:Validate.notNull(nodes) |==> <NO-OP>
391:LVR:0:POS:org.jsoup.nodes.Node@indexInList(N,java.util.List<N>):302:0 |==> 1
392:LVR:0:NEG:org.jsoup.nodes.Node@indexInList(N,java.util.List<N>):302:0 |==> -1
393:ROR:<(int,int):!=(int,int):org.jsoup.nodes.Node@indexInList(N,java.util.List<N>):302:i < nodes.size() |==> i != nodes.size()
394:ROR:<(int,int):<=(int,int):org.jsoup.nodes.Node@indexInList(N,java.util.List<N>):302:i < nodes.size() |==> i <= nodes.size()
395:ROR:<(int,int):FALSE(int,int):org.jsoup.nodes.Node@indexInList(N,java.util.List<N>):302:i < nodes.size() |==> false
396:COR:node.equals(search):TRUE:org.jsoup.nodes.Node@indexInList(N,java.util.List<N>):304:node.equals(search) |==> false
397:COR:node.equals(search):FALSE:org.jsoup.nodes.Node@indexInList(N,java.util.List<N>):304:node.equals(search) |==> true
398:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Node@outerHtml():316:outerHtml(accum) |==> <NO-OP>
399:LVR:POS:0:org.jsoup.nodes.Node@indent(java.lang.StringBuilder):331:1 |==> 0
400:LVR:POS:NEG:org.jsoup.nodes.Node@indent(java.lang.StringBuilder):331:1 |==> -1
401:LVR:POS:0:org.jsoup.nodes.Node@indent(java.lang.StringBuilder):331:2 |==> 0
402:LVR:POS:NEG:org.jsoup.nodes.Node@indent(java.lang.StringBuilder):331:2 |==> -2
403:AOR:*(int,int):%(int,int):org.jsoup.nodes.Node@indent(java.lang.StringBuilder):331:1 * 2 |==> 1 % 2
404:AOR:*(int,int):+(int,int):org.jsoup.nodes.Node@indent(java.lang.StringBuilder):331:1 * 2 |==> 1 + 2
405:AOR:*(int,int):-(int,int):org.jsoup.nodes.Node@indent(java.lang.StringBuilder):331:1 * 2 |==> 1 - 2
406:AOR:*(int,int):/(int,int):org.jsoup.nodes.Node@indent(java.lang.StringBuilder):331:1 * 2 |==> 1 / 2
407:AOR:-(int,int):%(int,int):org.jsoup.nodes.Node@indent(java.lang.StringBuilder):331:nodeDepth() - 1 * 2 |==> nodeDepth() % (1 * 2)
408:AOR:-(int,int):*(int,int):org.jsoup.nodes.Node@indent(java.lang.StringBuilder):331:nodeDepth() - 1 * 2 |==> nodeDepth() * (1 * 2)
409:AOR:-(int,int):+(int,int):org.jsoup.nodes.Node@indent(java.lang.StringBuilder):331:nodeDepth() - 1 * 2 |==> nodeDepth() + 1 * 2
410:AOR:-(int,int):/(int,int):org.jsoup.nodes.Node@indent(java.lang.StringBuilder):331:nodeDepth() - 1 * 2 |==> nodeDepth() / (1 * 2)
411:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Node@indent(java.lang.StringBuilder):331:accum.append("\n").append(StringUtils.leftPad("", nodeDepth() - 1 * 2)) |==> <NO-OP>
412:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.jsoup.nodes.Node@equals(java.lang.Object):336:this == o |==> false
413:LVR:TRUE:FALSE:org.jsoup.nodes.Node@equals(java.lang.Object):336:true |==> false
414:LVR:FALSE:TRUE:org.jsoup.nodes.Node@equals(java.lang.Object):338:false |==> true
415:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.jsoup.nodes.Node@hashCode():343:parentNode != null |==> true
416:LVR:0:POS:org.jsoup.nodes.Node@hashCode():343:0 |==> 1
417:LVR:0:NEG:org.jsoup.nodes.Node@hashCode():343:0 |==> -1
418:LVR:POS:0:org.jsoup.nodes.Node@hashCode():345:31 |==> 0
419:LVR:POS:NEG:org.jsoup.nodes.Node@hashCode():345:31 |==> -31
420:AOR:*(int,int):%(int,int):org.jsoup.nodes.Node@hashCode():345:31 * result |==> 31 % result
421:AOR:*(int,int):+(int,int):org.jsoup.nodes.Node@hashCode():345:31 * result |==> 31 + result
422:AOR:*(int,int):-(int,int):org.jsoup.nodes.Node@hashCode():345:31 * result |==> 31 - result
423:AOR:*(int,int):/(int,int):org.jsoup.nodes.Node@hashCode():345:31 * result |==> 31 / result
424:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.jsoup.nodes.Node@hashCode():345:attributes != null |==> true
425:LVR:0:POS:org.jsoup.nodes.Node@hashCode():345:0 |==> 1
426:LVR:0:NEG:org.jsoup.nodes.Node@hashCode():345:0 |==> -1
427:AOR:+(int,int):%(int,int):org.jsoup.nodes.Node@hashCode():345:31 * result + (attributes != null ? attributes.hashCode() : 0) |==> 31 * result % (attributes != null ? attributes.hashCode() : 0)
428:AOR:+(int,int):*(int,int):org.jsoup.nodes.Node@hashCode():345:31 * result + (attributes != null ? attributes.hashCode() : 0) |==> 31 * result * (attributes != null ? attributes.hashCode() : 0)
429:AOR:+(int,int):-(int,int):org.jsoup.nodes.Node@hashCode():345:31 * result + (attributes != null ? attributes.hashCode() : 0) |==> 31 * result - (attributes != null ? attributes.hashCode() : 0)
430:AOR:+(int,int):/(int,int):org.jsoup.nodes.Node@hashCode():345:31 * result + (attributes != null ? attributes.hashCode() : 0) |==> 31 * result / (attributes != null ? attributes.hashCode() : 0)
431:STD:<ASSIGN>:<NO-OP>:org.jsoup.nodes.Node@hashCode():345:result = 31 * result + (attributes != null ? attributes.hashCode() : 0) |==> <NO-OP>
432:STD:<ASSIGN>:<NO-OP>:org.jsoup.safety.Whitelist@<init>():170:tagNames = new HashSet<TagName>() |==> <NO-OP>
433:STD:<ASSIGN>:<NO-OP>:org.jsoup.safety.Whitelist@<init>():171:attributes = new HashMap<TagName, Set<AttributeKey>>() |==> <NO-OP>
434:STD:<ASSIGN>:<NO-OP>:org.jsoup.safety.Whitelist@<init>():172:enforcedAttributes = new HashMap<TagName, Map<AttributeKey, AttributeValue>>() |==> <NO-OP>
435:STD:<ASSIGN>:<NO-OP>:org.jsoup.safety.Whitelist@<init>():173:protocols = new HashMap<TagName, Map<AttributeKey, Set<Protocol>>>() |==> <NO-OP>
436:STD:<CALL>:<NO-OP>:org.jsoup.safety.Whitelist@addTags(java.lang.String[]):183:Validate.notNull(tags) |==> <NO-OP>
437:STD:<CALL>:<NO-OP>:org.jsoup.safety.Whitelist@addTags(java.lang.String[]):186:Validate.notEmpty(tagName) |==> <NO-OP>
438:STD:<CALL>:<NO-OP>:org.jsoup.safety.Whitelist@addTags(java.lang.String[]):187:tagNames.add(TagName.valueOf(tagName)) |==> <NO-OP>
439:STD:<CALL>:<NO-OP>:org.jsoup.safety.Whitelist@addAttributes(java.lang.String,java.lang.String[]):203:Validate.notEmpty(tag) |==> <NO-OP>
440:STD:<CALL>:<NO-OP>:org.jsoup.safety.Whitelist@addAttributes(java.lang.String,java.lang.String[]):204:Validate.notNull(keys) |==> <NO-OP>
441:STD:<CALL>:<NO-OP>:org.jsoup.safety.Whitelist@addAttributes(java.lang.String,java.lang.String[]):209:Validate.notEmpty(key) |==> <NO-OP>
442:STD:<CALL>:<NO-OP>:org.jsoup.safety.Whitelist@addAttributes(java.lang.String,java.lang.String[]):210:attributeSet.add(AttributeKey.valueOf(key)) |==> <NO-OP>
443:COR:attributes.containsKey(tagName):TRUE:org.jsoup.safety.Whitelist@addAttributes(java.lang.String,java.lang.String[]):212:attributes.containsKey(tagName) |==> false
444:COR:attributes.containsKey(tagName):FALSE:org.jsoup.safety.Whitelist@addAttributes(java.lang.String,java.lang.String[]):212:attributes.containsKey(tagName) |==> true
445:STD:<CALL>:<NO-OP>:org.jsoup.safety.Whitelist@addAttributes(java.lang.String,java.lang.String[]):214:currentSet.addAll(attributeSet) |==> <NO-OP>
446:STD:<CALL>:<NO-OP>:org.jsoup.safety.Whitelist@addAttributes(java.lang.String,java.lang.String[]):216:attributes.put(tagName, attributeSet) |==> <NO-OP>
447:STD:<CALL>:<NO-OP>:org.jsoup.safety.Whitelist@addEnforcedAttribute(java.lang.String,java.lang.String,java.lang.String):234:Validate.notEmpty(tag) |==> <NO-OP>
448:STD:<CALL>:<NO-OP>:org.jsoup.safety.Whitelist@addEnforcedAttribute(java.lang.String,java.lang.String,java.lang.String):235:Validate.notEmpty(key) |==> <NO-OP>
449:STD:<CALL>:<NO-OP>:org.jsoup.safety.Whitelist@addEnforcedAttribute(java.lang.String,java.lang.String,java.lang.String):236:Validate.notEmpty(value) |==> <NO-OP>
450:COR:enforcedAttributes.containsKey(tagName):TRUE:org.jsoup.safety.Whitelist@addEnforcedAttribute(java.lang.String,java.lang.String,java.lang.String):242:enforcedAttributes.containsKey(tagName) |==> false
451:COR:enforcedAttributes.containsKey(tagName):FALSE:org.jsoup.safety.Whitelist@addEnforcedAttribute(java.lang.String,java.lang.String,java.lang.String):242:enforcedAttributes.containsKey(tagName) |==> true
452:STD:<CALL>:<NO-OP>:org.jsoup.safety.Whitelist@addEnforcedAttribute(java.lang.String,java.lang.String,java.lang.String):243:enforcedAttributes.get(tagName).put(attrKey, attrVal) |==> <NO-OP>
453:STD:<CALL>:<NO-OP>:org.jsoup.safety.Whitelist@addEnforcedAttribute(java.lang.String,java.lang.String,java.lang.String):246:attrMap.put(attrKey, attrVal) |==> <NO-OP>
454:STD:<CALL>:<NO-OP>:org.jsoup.safety.Whitelist@addEnforcedAttribute(java.lang.String,java.lang.String,java.lang.String):247:enforcedAttributes.put(tagName, attrMap) |==> <NO-OP>
455:STD:<CALL>:<NO-OP>:org.jsoup.safety.Whitelist@addProtocols(java.lang.String,java.lang.String,java.lang.String[]):264:Validate.notEmpty(tag) |==> <NO-OP>
456:STD:<CALL>:<NO-OP>:org.jsoup.safety.Whitelist@addProtocols(java.lang.String,java.lang.String,java.lang.String[]):265:Validate.notEmpty(key) |==> <NO-OP>
457:STD:<CALL>:<NO-OP>:org.jsoup.safety.Whitelist@addProtocols(java.lang.String,java.lang.String,java.lang.String[]):266:Validate.notNull(protocols) |==> <NO-OP>
458:COR:this.protocols.containsKey(tagName):TRUE:org.jsoup.safety.Whitelist@addProtocols(java.lang.String,java.lang.String,java.lang.String[]):273:this.protocols.containsKey(tagName) |==> false
459:COR:this.protocols.containsKey(tagName):FALSE:org.jsoup.safety.Whitelist@addProtocols(java.lang.String,java.lang.String,java.lang.String[]):273:this.protocols.containsKey(tagName) |==> true
460:STD:<CALL>:<NO-OP>:org.jsoup.safety.Whitelist@addProtocols(java.lang.String,java.lang.String,java.lang.String[]):277:this.protocols.put(tagName, attrMap) |==> <NO-OP>
461:COR:attrMap.containsKey(attrKey):TRUE:org.jsoup.safety.Whitelist@addProtocols(java.lang.String,java.lang.String,java.lang.String[]):279:attrMap.containsKey(attrKey) |==> false
462:COR:attrMap.containsKey(attrKey):FALSE:org.jsoup.safety.Whitelist@addProtocols(java.lang.String,java.lang.String,java.lang.String[]):279:attrMap.containsKey(attrKey) |==> true
463:STD:<CALL>:<NO-OP>:org.jsoup.safety.Whitelist@addProtocols(java.lang.String,java.lang.String,java.lang.String[]):283:attrMap.put(attrKey, protSet) |==> <NO-OP>
464:STD:<CALL>:<NO-OP>:org.jsoup.safety.Whitelist@addProtocols(java.lang.String,java.lang.String,java.lang.String[]):286:Validate.notEmpty(protocol) |==> <NO-OP>
465:STD:<CALL>:<NO-OP>:org.jsoup.safety.Whitelist@addProtocols(java.lang.String,java.lang.String,java.lang.String[]):288:protSet.add(prot) |==> <NO-OP>
466:COR:attributes.containsKey(tag):TRUE:org.jsoup.safety.Whitelist@isSafeAttribute(java.lang.String,org.jsoup.nodes.Element,org.jsoup.nodes.Attribute):301:attributes.containsKey(tag) |==> false
467:COR:attributes.containsKey(tag):FALSE:org.jsoup.safety.Whitelist@isSafeAttribute(java.lang.String,org.jsoup.nodes.Element,org.jsoup.nodes.Attribute):301:attributes.containsKey(tag) |==> true
468:COR:attributes.get(tag).contains(key):TRUE:org.jsoup.safety.Whitelist@isSafeAttribute(java.lang.String,org.jsoup.nodes.Element,org.jsoup.nodes.Attribute):302:attributes.get(tag).contains(key) |==> false
469:COR:attributes.get(tag).contains(key):FALSE:org.jsoup.safety.Whitelist@isSafeAttribute(java.lang.String,org.jsoup.nodes.Element,org.jsoup.nodes.Attribute):302:attributes.get(tag).contains(key) |==> true
470:COR:protocols.containsKey(tag):TRUE:org.jsoup.safety.Whitelist@isSafeAttribute(java.lang.String,org.jsoup.nodes.Element,org.jsoup.nodes.Attribute):303:protocols.containsKey(tag) |==> false
471:COR:protocols.containsKey(tag):FALSE:org.jsoup.safety.Whitelist@isSafeAttribute(java.lang.String,org.jsoup.nodes.Element,org.jsoup.nodes.Attribute):303:protocols.containsKey(tag) |==> true
472:COR:||(boolean,boolean):!=(boolean,boolean):org.jsoup.safety.Whitelist@isSafeAttribute(java.lang.String,org.jsoup.nodes.Element,org.jsoup.nodes.Attribute):306:!attrProts.containsKey(key) || testValidProtocol(el, attr, attrProts.get(key)) |==> !attrProts.containsKey(key) != testValidProtocol(el, attr, attrProts.get(key))
473:COR:||(boolean,boolean):LHS(boolean,boolean):org.jsoup.safety.Whitelist@isSafeAttribute(java.lang.String,org.jsoup.nodes.Element,org.jsoup.nodes.Attribute):306:!attrProts.containsKey(key) || testValidProtocol(el, attr, attrProts.get(key)) |==> !attrProts.containsKey(key)
474:COR:||(boolean,boolean):RHS(boolean,boolean):org.jsoup.safety.Whitelist@isSafeAttribute(java.lang.String,org.jsoup.nodes.Element,org.jsoup.nodes.Attribute):306:!attrProts.containsKey(key) || testValidProtocol(el, attr, attrProts.get(key)) |==> testValidProtocol(el, attr, attrProts.get(key))
475:COR:||(boolean,boolean):TRUE(boolean,boolean):org.jsoup.safety.Whitelist@isSafeAttribute(java.lang.String,org.jsoup.nodes.Element,org.jsoup.nodes.Attribute):306:!attrProts.containsKey(key) || testValidProtocol(el, attr, attrProts.get(key)) |==> true
476:LVR:TRUE:FALSE:org.jsoup.safety.Whitelist@isSafeAttribute(java.lang.String,org.jsoup.nodes.Element,org.jsoup.nodes.Attribute):308:true |==> false
477:COR:&&(boolean,boolean):==(boolean,boolean):org.jsoup.safety.Whitelist@isSafeAttribute(java.lang.String,org.jsoup.nodes.Element,org.jsoup.nodes.Attribute):312:!tagName.equals(":all") && isSafeAttribute(":all", el, attr) |==> !tagName.equals(":all") == isSafeAttribute(":all", el, attr)
478:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.jsoup.safety.Whitelist@isSafeAttribute(java.lang.String,org.jsoup.nodes.Element,org.jsoup.nodes.Attribute):312:!tagName.equals(":all") && isSafeAttribute(":all", el, attr) |==> false
479:COR:&&(boolean,boolean):LHS(boolean,boolean):org.jsoup.safety.Whitelist@isSafeAttribute(java.lang.String,org.jsoup.nodes.Element,org.jsoup.nodes.Attribute):312:!tagName.equals(":all") && isSafeAttribute(":all", el, attr) |==> !tagName.equals(":all")
480:COR:&&(boolean,boolean):RHS(boolean,boolean):org.jsoup.safety.Whitelist@isSafeAttribute(java.lang.String,org.jsoup.nodes.Element,org.jsoup.nodes.Attribute):312:!tagName.equals(":all") && isSafeAttribute(":all", el, attr) |==> isSafeAttribute(":all", el, attr)
481:LVR:FALSE:TRUE:org.jsoup.safety.Whitelist@isSafeAttribute(java.lang.String,org.jsoup.nodes.Element,org.jsoup.nodes.Attribute):314:false |==> true
482:STD:<CALL>:<NO-OP>:org.jsoup.safety.Whitelist@testValidProtocol(org.jsoup.nodes.Element,org.jsoup.nodes.Attribute,java.util.Set<org.jsoup.safety.Whitelist.Protocol>):321:attr.setValue(value) |==> <NO-OP>
483:COR:value.toString().toLowerCase().startsWith(prot):TRUE:org.jsoup.safety.Whitelist@testValidProtocol(org.jsoup.nodes.Element,org.jsoup.nodes.Attribute,java.util.Set<org.jsoup.safety.Whitelist.Protocol>):325:value.toString().toLowerCase().startsWith(prot) |==> false
484:COR:value.toString().toLowerCase().startsWith(prot):FALSE:org.jsoup.safety.Whitelist@testValidProtocol(org.jsoup.nodes.Element,org.jsoup.nodes.Attribute,java.util.Set<org.jsoup.safety.Whitelist.Protocol>):325:value.toString().toLowerCase().startsWith(prot) |==> true
485:LVR:TRUE:FALSE:org.jsoup.safety.Whitelist@testValidProtocol(org.jsoup.nodes.Element,org.jsoup.nodes.Attribute,java.util.Set<org.jsoup.safety.Whitelist.Protocol>):326:true |==> false
486:LVR:FALSE:TRUE:org.jsoup.safety.Whitelist@testValidProtocol(org.jsoup.nodes.Element,org.jsoup.nodes.Attribute,java.util.Set<org.jsoup.safety.Whitelist.Protocol>):329:false |==> true
487:COR:enforcedAttributes.containsKey(tag):TRUE:org.jsoup.safety.Whitelist@getEnforcedAttributes(java.lang.String):335:enforcedAttributes.containsKey(tag) |==> false
488:COR:enforcedAttributes.containsKey(tag):FALSE:org.jsoup.safety.Whitelist@getEnforcedAttributes(java.lang.String):335:enforcedAttributes.containsKey(tag) |==> true
489:STD:<CALL>:<NO-OP>:org.jsoup.safety.Whitelist@getEnforcedAttributes(java.lang.String):338:attrs.put(entry.getKey().toString(), entry.getValue().toString()) |==> <NO-OP>
490:STD:<CALL>:<NO-OP>:org.jsoup.safety.Whitelist$TypedValue@<init>(java.lang.String):390:Validate.notNull(value) |==> <NO-OP>
491:STD:<ASSIGN>:<NO-OP>:org.jsoup.safety.Whitelist$TypedValue@<init>(java.lang.String):391:this.value = value |==> <NO-OP>
492:LVR:POS:0:org.jsoup.safety.Whitelist$TypedValue@hashCode():397:1 |==> 0
493:LVR:POS:NEG:org.jsoup.safety.Whitelist$TypedValue@hashCode():397:1 |==> -1
494:AOR:*(int,int):%(int,int):org.jsoup.safety.Whitelist$TypedValue@hashCode():398:prime * result |==> prime % result
495:AOR:*(int,int):+(int,int):org.jsoup.safety.Whitelist$TypedValue@hashCode():398:prime * result |==> prime + result
496:AOR:*(int,int):-(int,int):org.jsoup.safety.Whitelist$TypedValue@hashCode():398:prime * result |==> prime - result
497:AOR:*(int,int):/(int,int):org.jsoup.safety.Whitelist$TypedValue@hashCode():398:prime * result |==> prime / result
498:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.jsoup.safety.Whitelist$TypedValue@hashCode():398:value == null |==> false
499:LVR:0:POS:org.jsoup.safety.Whitelist$TypedValue@hashCode():398:0 |==> 1
500:LVR:0:NEG:org.jsoup.safety.Whitelist$TypedValue@hashCode():398:0 |==> -1
501:AOR:+(int,int):%(int,int):org.jsoup.safety.Whitelist$TypedValue@hashCode():398:prime * result + ((value == null) ? 0 : value.hashCode()) |==> prime * result % ((value == null) ? 0 : value.hashCode())
502:AOR:+(int,int):*(int,int):org.jsoup.safety.Whitelist$TypedValue@hashCode():398:prime * result + ((value == null) ? 0 : value.hashCode()) |==> prime * result * ((value == null) ? 0 : value.hashCode())
503:AOR:+(int,int):-(int,int):org.jsoup.safety.Whitelist$TypedValue@hashCode():398:prime * result + ((value == null) ? 0 : value.hashCode()) |==> prime * result - ((value == null) ? 0 : value.hashCode())
504:AOR:+(int,int):/(int,int):org.jsoup.safety.Whitelist$TypedValue@hashCode():398:prime * result + ((value == null) ? 0 : value.hashCode()) |==> prime * result / ((value == null) ? 0 : value.hashCode())
505:STD:<ASSIGN>:<NO-OP>:org.jsoup.safety.Whitelist$TypedValue@hashCode():398:result = prime * result + ((value == null) ? 0 : value.hashCode()) |==> <NO-OP>
506:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.jsoup.safety.Whitelist$TypedValue@equals(java.lang.Object):404:this == obj |==> false
507:LVR:TRUE:FALSE:org.jsoup.safety.Whitelist$TypedValue@equals(java.lang.Object):404:true |==> false
508:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.jsoup.safety.Whitelist$TypedValue@equals(java.lang.Object):405:obj == null |==> false
509:LVR:FALSE:TRUE:org.jsoup.safety.Whitelist$TypedValue@equals(java.lang.Object):405:false |==> true
510:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.jsoup.safety.Whitelist$TypedValue@equals(java.lang.Object):406:getClass() != obj.getClass() |==> true
511:LVR:FALSE:TRUE:org.jsoup.safety.Whitelist$TypedValue@equals(java.lang.Object):406:false |==> true
512:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.jsoup.safety.Whitelist$TypedValue@equals(java.lang.Object):408:value == null |==> false
513:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.jsoup.safety.Whitelist$TypedValue@equals(java.lang.Object):409:other.value != null |==> true
514:LVR:FALSE:TRUE:org.jsoup.safety.Whitelist$TypedValue@equals(java.lang.Object):409:false |==> true
515:COR:value.equals(other.value):TRUE:org.jsoup.safety.Whitelist$TypedValue@equals(java.lang.Object):410:value.equals(other.value) |==> false
516:COR:value.equals(other.value):FALSE:org.jsoup.safety.Whitelist$TypedValue@equals(java.lang.Object):410:value.equals(other.value) |==> true
517:LVR:FALSE:TRUE:org.jsoup.safety.Whitelist$TypedValue@equals(java.lang.Object):410:false |==> true
518:LVR:TRUE:FALSE:org.jsoup.safety.Whitelist$TypedValue@equals(java.lang.Object):411:true |==> false
519:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:17:tags.put(defaultAncestor.tagName, defaultAncestor) |==> <NO-OP>
520:LVR:TRUE:FALSE:org.jsoup.parser.Tag:21:true |==> false
521:LVR:TRUE:FALSE:org.jsoup.parser.Tag:22:true |==> false
522:LVR:TRUE:FALSE:org.jsoup.parser.Tag:23:true |==> false
523:LVR:FALSE:TRUE:org.jsoup.parser.Tag:24:false |==> true
524:LVR:FALSE:TRUE:org.jsoup.parser.Tag:25:false |==> true
525:LVR:FALSE:TRUE:org.jsoup.parser.Tag:26:false |==> true
526:STD:<ASSIGN>:<NO-OP>:org.jsoup.parser.Tag@<init>(java.lang.String):30:this.tagName = tagName.toLowerCase() |==> <NO-OP>
527:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag@valueOf(java.lang.String):45:Validate.notNull(tagName) |==> <NO-OP>
528:STD:<ASSIGN>:<NO-OP>:org.jsoup.parser.Tag@valueOf(java.lang.String):46:tagName = tagName.trim().toLowerCase() |==> <NO-OP>
529:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag@valueOf(java.lang.String):47:Validate.notEmpty(tagName) |==> <NO-OP>
530:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.jsoup.parser.Tag@valueOf(java.lang.String):51:tag == null |==> false
531:STD:<ASSIGN>:<NO-OP>:org.jsoup.parser.Tag@valueOf(java.lang.String):53:tag = new Tag(tagName) |==> <NO-OP>
532:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag@valueOf(java.lang.String):54:tag.setAncestor(defaultAncestor.tagName) |==> <NO-OP>
533:LVR:FALSE:TRUE:org.jsoup.parser.Tag@valueOf(java.lang.String):55:false |==> true
534:STD:<ASSIGN>:<NO-OP>:org.jsoup.parser.Tag@valueOf(java.lang.String):55:tag.isBlock = false |==> <NO-OP>
535:LVR:TRUE:FALSE:org.jsoup.parser.Tag@valueOf(java.lang.String):56:true |==> false
536:STD:<ASSIGN>:<NO-OP>:org.jsoup.parser.Tag@valueOf(java.lang.String):56:tag.canContainBlock = true |==> <NO-OP>
537:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):68:Validate.notNull(child) |==> <NO-OP>
538:COR:&&(boolean,boolean):==(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):70:child.isBlock && !this.canContainBlock |==> child.isBlock == !this.canContainBlock
539:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):70:child.isBlock && !this.canContainBlock |==> false
540:COR:&&(boolean,boolean):LHS(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):70:child.isBlock && !this.canContainBlock |==> child.isBlock
541:COR:&&(boolean,boolean):RHS(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):70:child.isBlock && !this.canContainBlock |==> !this.canContainBlock
542:LVR:FALSE:TRUE:org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):71:false |==> true
543:COR:&&(boolean,boolean):==(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):73:!child.isBlock && !this.canContainInline |==> !child.isBlock == !this.canContainInline
544:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):73:!child.isBlock && !this.canContainInline |==> false
545:COR:&&(boolean,boolean):LHS(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):73:!child.isBlock && !this.canContainInline |==> !child.isBlock
546:COR:&&(boolean,boolean):RHS(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):73:!child.isBlock && !this.canContainInline |==> !this.canContainInline
547:LVR:FALSE:TRUE:org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):74:false |==> true
548:COR:&&(boolean,boolean):==(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):76:this.optionalClosing && this.equals(child) |==> this.optionalClosing == this.equals(child)
549:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):76:this.optionalClosing && this.equals(child) |==> false
550:COR:&&(boolean,boolean):LHS(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):76:this.optionalClosing && this.equals(child) |==> this.optionalClosing
551:COR:&&(boolean,boolean):RHS(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):76:this.optionalClosing && this.equals(child) |==> this.equals(child)
552:LVR:FALSE:TRUE:org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):77:false |==> true
553:COR:||(boolean,boolean):!=(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):79:this.empty || this.isData() |==> this.empty != this.isData()
554:COR:||(boolean,boolean):LHS(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):79:this.empty || this.isData() |==> this.empty
555:COR:||(boolean,boolean):RHS(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):79:this.empty || this.isData() |==> this.isData()
556:COR:||(boolean,boolean):TRUE(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):79:this.empty || this.isData() |==> true
557:LVR:FALSE:TRUE:org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):80:false |==> true
558:COR:this.tagName.equals("head"):TRUE:org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):84:this.tagName.equals("head") |==> false
559:COR:this.tagName.equals("head"):FALSE:org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):84:this.tagName.equals("head") |==> true
560:COR:||(boolean,boolean):!=(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):85:child.tagName.equals("base") || child.tagName.equals("script") |==> child.tagName.equals("base") != child.tagName.equals("script")
561:COR:||(boolean,boolean):LHS(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):85:child.tagName.equals("base") || child.tagName.equals("script") |==> child.tagName.equals("base")
562:COR:||(boolean,boolean):RHS(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):85:child.tagName.equals("base") || child.tagName.equals("script") |==> child.tagName.equals("script")
563:COR:||(boolean,boolean):TRUE(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):85:child.tagName.equals("base") || child.tagName.equals("script") |==> true
564:COR:||(boolean,boolean):!=(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):85:child.tagName.equals("base") || child.tagName.equals("script") || child.tagName.equals("noscript") |==> (child.tagName.equals("base") || child.tagName.equals("script")) != child.tagName.equals("noscript")
565:COR:||(boolean,boolean):LHS(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):85:child.tagName.equals("base") || child.tagName.equals("script") || child.tagName.equals("noscript") |==> child.tagName.equals("base") || child.tagName.equals("script")
566:COR:||(boolean,boolean):RHS(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):85:child.tagName.equals("base") || child.tagName.equals("script") || child.tagName.equals("noscript") |==> child.tagName.equals("noscript")
567:COR:||(boolean,boolean):TRUE(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):85:child.tagName.equals("base") || child.tagName.equals("script") || child.tagName.equals("noscript") |==> true
568:COR:||(boolean,boolean):!=(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):85:child.tagName.equals("base") || child.tagName.equals("script") || child.tagName.equals("noscript") || child.tagName.equals("link") |==> (child.tagName.equals("base") || child.tagName.equals("script") || child.tagName.equals("noscript")) != child.tagName.equals("link")
569:COR:||(boolean,boolean):LHS(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):85:child.tagName.equals("base") || child.tagName.equals("script") || child.tagName.equals("noscript") || child.tagName.equals("link") |==> child.tagName.equals("base") || child.tagName.equals("script") || child.tagName.equals("noscript")
570:COR:||(boolean,boolean):RHS(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):85:child.tagName.equals("base") || child.tagName.equals("script") || child.tagName.equals("noscript") || child.tagName.equals("link") |==> child.tagName.equals("link")
571:COR:||(boolean,boolean):TRUE(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):85:child.tagName.equals("base") || child.tagName.equals("script") || child.tagName.equals("noscript") || child.tagName.equals("link") |==> true
572:COR:||(boolean,boolean):!=(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):85:child.tagName.equals("base") || child.tagName.equals("script") || child.tagName.equals("noscript") || child.tagName.equals("link") || child.tagName.equals("meta") |==> (child.tagName.equals("base") || child.tagName.equals("script") || child.tagName.equals("noscript") || child.tagName.equals("link")) != child.tagName.equals("meta")
573:COR:||(boolean,boolean):LHS(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):85:child.tagName.equals("base") || child.tagName.equals("script") || child.tagName.equals("noscript") || child.tagName.equals("link") || child.tagName.equals("meta") |==> child.tagName.equals("base") || child.tagName.equals("script") || child.tagName.equals("noscript") || child.tagName.equals("link")
574:COR:||(boolean,boolean):RHS(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):86:child.tagName.equals("base") || child.tagName.equals("script") || child.tagName.equals("noscript") || child.tagName.equals("link") || child.tagName.equals("meta") |==> child.tagName.equals("meta")
575:COR:||(boolean,boolean):TRUE(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):85:child.tagName.equals("base") || child.tagName.equals("script") || child.tagName.equals("noscript") || child.tagName.equals("link") || child.tagName.equals("meta") |==> true
576:COR:||(boolean,boolean):!=(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):85:child.tagName.equals("base") || child.tagName.equals("script") || child.tagName.equals("noscript") || child.tagName.equals("link") || child.tagName.equals("meta") || child.tagName.equals("title") |==> (child.tagName.equals("base") || child.tagName.equals("script") || child.tagName.equals("noscript") || child.tagName.equals("link") || child.tagName.equals("meta")) != child.tagName.equals("title")
577:COR:||(boolean,boolean):LHS(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):85:child.tagName.equals("base") || child.tagName.equals("script") || child.tagName.equals("noscript") || child.tagName.equals("link") || child.tagName.equals("meta") || child.tagName.equals("title") |==> child.tagName.equals("base") || child.tagName.equals("script") || child.tagName.equals("noscript") || child.tagName.equals("link") || child.tagName.equals("meta")
578:COR:||(boolean,boolean):RHS(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):86:child.tagName.equals("base") || child.tagName.equals("script") || child.tagName.equals("noscript") || child.tagName.equals("link") || child.tagName.equals("meta") || child.tagName.equals("title") |==> child.tagName.equals("title")
579:COR:||(boolean,boolean):TRUE(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):86:child.tagName.equals("base") || child.tagName.equals("script") || child.tagName.equals("noscript") || child.tagName.equals("link") || child.tagName.equals("meta") || child.tagName.equals("title") |==> true
580:COR:||(boolean,boolean):!=(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):85:child.tagName.equals("base") || child.tagName.equals("script") || child.tagName.equals("noscript") || child.tagName.equals("link") || child.tagName.equals("meta") || child.tagName.equals("title") || child.tagName.equals("style") |==> (child.tagName.equals("base") || child.tagName.equals("script") || child.tagName.equals("noscript") || child.tagName.equals("link") || child.tagName.equals("meta") || child.tagName.equals("title")) != child.tagName.equals("style")
581:COR:||(boolean,boolean):LHS(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):85:child.tagName.equals("base") || child.tagName.equals("script") || child.tagName.equals("noscript") || child.tagName.equals("link") || child.tagName.equals("meta") || child.tagName.equals("title") || child.tagName.equals("style") |==> child.tagName.equals("base") || child.tagName.equals("script") || child.tagName.equals("noscript") || child.tagName.equals("link") || child.tagName.equals("meta") || child.tagName.equals("title")
582:COR:||(boolean,boolean):RHS(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):86:child.tagName.equals("base") || child.tagName.equals("script") || child.tagName.equals("noscript") || child.tagName.equals("link") || child.tagName.equals("meta") || child.tagName.equals("title") || child.tagName.equals("style") |==> child.tagName.equals("style")
583:COR:||(boolean,boolean):TRUE(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):86:child.tagName.equals("base") || child.tagName.equals("script") || child.tagName.equals("noscript") || child.tagName.equals("link") || child.tagName.equals("meta") || child.tagName.equals("title") || child.tagName.equals("style") |==> true
584:COR:||(boolean,boolean):!=(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):85:child.tagName.equals("base") || child.tagName.equals("script") || child.tagName.equals("noscript") || child.tagName.equals("link") || child.tagName.equals("meta") || child.tagName.equals("title") || child.tagName.equals("style") || child.tagName.equals("object") |==> (child.tagName.equals("base") || child.tagName.equals("script") || child.tagName.equals("noscript") || child.tagName.equals("link") || child.tagName.equals("meta") || child.tagName.equals("title") || child.tagName.equals("style")) != child.tagName.equals("object")
585:COR:||(boolean,boolean):LHS(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):85:child.tagName.equals("base") || child.tagName.equals("script") || child.tagName.equals("noscript") || child.tagName.equals("link") || child.tagName.equals("meta") || child.tagName.equals("title") || child.tagName.equals("style") || child.tagName.equals("object") |==> child.tagName.equals("base") || child.tagName.equals("script") || child.tagName.equals("noscript") || child.tagName.equals("link") || child.tagName.equals("meta") || child.tagName.equals("title") || child.tagName.equals("style")
586:COR:||(boolean,boolean):RHS(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):86:child.tagName.equals("base") || child.tagName.equals("script") || child.tagName.equals("noscript") || child.tagName.equals("link") || child.tagName.equals("meta") || child.tagName.equals("title") || child.tagName.equals("style") || child.tagName.equals("object") |==> child.tagName.equals("object")
587:COR:||(boolean,boolean):TRUE(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):86:child.tagName.equals("base") || child.tagName.equals("script") || child.tagName.equals("noscript") || child.tagName.equals("link") || child.tagName.equals("meta") || child.tagName.equals("title") || child.tagName.equals("style") || child.tagName.equals("object") |==> true
588:LVR:TRUE:FALSE:org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):87:true |==> false
589:LVR:FALSE:TRUE:org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):89:false |==> true
590:COR:&&(boolean,boolean):==(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):93:this.tagName.equals("dt") && child.tagName.equals("dd") |==> this.tagName.equals("dt") == child.tagName.equals("dd")
591:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):93:this.tagName.equals("dt") && child.tagName.equals("dd") |==> false
592:COR:&&(boolean,boolean):LHS(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):93:this.tagName.equals("dt") && child.tagName.equals("dd") |==> this.tagName.equals("dt")
593:COR:&&(boolean,boolean):RHS(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):93:this.tagName.equals("dt") && child.tagName.equals("dd") |==> child.tagName.equals("dd")
594:LVR:FALSE:TRUE:org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):94:false |==> true
595:COR:&&(boolean,boolean):==(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):95:this.tagName.equals("dd") && child.tagName.equals("dt") |==> this.tagName.equals("dd") == child.tagName.equals("dt")
596:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):95:this.tagName.equals("dd") && child.tagName.equals("dt") |==> false
597:COR:&&(boolean,boolean):LHS(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):95:this.tagName.equals("dd") && child.tagName.equals("dt") |==> this.tagName.equals("dd")
598:COR:&&(boolean,boolean):RHS(boolean,boolean):org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):95:this.tagName.equals("dd") && child.tagName.equals("dt") |==> child.tagName.equals("dt")
599:LVR:FALSE:TRUE:org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):96:false |==> true
600:LVR:TRUE:FALSE:org.jsoup.parser.Tag@canContain(org.jsoup.parser.Tag):98:true |==> false
601:COR:&&(boolean,boolean):==(boolean,boolean):org.jsoup.parser.Tag@isData():130:!canContainInline && !isEmpty() |==> !canContainInline == !isEmpty()
602:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.jsoup.parser.Tag@isData():130:!canContainInline && !isEmpty() |==> false
603:COR:&&(boolean,boolean):LHS(boolean,boolean):org.jsoup.parser.Tag@isData():130:!canContainInline && !isEmpty() |==> !canContainInline
604:COR:&&(boolean,boolean):RHS(boolean,boolean):org.jsoup.parser.Tag@isData():130:!canContainInline && !isEmpty() |==> !isEmpty()
605:LVR:0:POS:org.jsoup.parser.Tag@getImplicitParent():150:0 |==> 1
606:LVR:0:NEG:org.jsoup.parser.Tag@getImplicitParent():150:0 |==> -1
607:COR:child.ancestors.isEmpty():TRUE:org.jsoup.parser.Tag@isValidParent(org.jsoup.parser.Tag):154:child.ancestors.isEmpty() |==> false
608:COR:child.ancestors.isEmpty():FALSE:org.jsoup.parser.Tag@isValidParent(org.jsoup.parser.Tag):154:child.ancestors.isEmpty() |==> true
609:LVR:TRUE:FALSE:org.jsoup.parser.Tag@isValidParent(org.jsoup.parser.Tag):155:true |==> false
610:COR:this.equals(tag):TRUE:org.jsoup.parser.Tag@isValidParent(org.jsoup.parser.Tag):158:this.equals(tag) |==> false
611:COR:this.equals(tag):FALSE:org.jsoup.parser.Tag@isValidParent(org.jsoup.parser.Tag):158:this.equals(tag) |==> true
612:LVR:TRUE:FALSE:org.jsoup.parser.Tag@isValidParent(org.jsoup.parser.Tag):159:true |==> false
613:LVR:FALSE:TRUE:org.jsoup.parser.Tag@isValidParent(org.jsoup.parser.Tag):161:false |==> true
614:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.jsoup.parser.Tag@equals(java.lang.Object):166:this == o |==> false
615:LVR:TRUE:FALSE:org.jsoup.parser.Tag@equals(java.lang.Object):166:true |==> false
616:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.jsoup.parser.Tag@equals(java.lang.Object):167:o == null |==> false
617:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.jsoup.parser.Tag@equals(java.lang.Object):167:getClass() != o.getClass() |==> true
618:COR:||(boolean,boolean):!=(boolean,boolean):org.jsoup.parser.Tag@equals(java.lang.Object):167:o == null || getClass() != o.getClass() |==> o == null != (getClass() != o.getClass())
619:COR:||(boolean,boolean):LHS(boolean,boolean):org.jsoup.parser.Tag@equals(java.lang.Object):167:o == null || getClass() != o.getClass() |==> o == null
620:COR:||(boolean,boolean):RHS(boolean,boolean):org.jsoup.parser.Tag@equals(java.lang.Object):167:o == null || getClass() != o.getClass() |==> getClass() != o.getClass()
621:COR:||(boolean,boolean):TRUE(boolean,boolean):org.jsoup.parser.Tag@equals(java.lang.Object):167:o == null || getClass() != o.getClass() |==> true
622:LVR:FALSE:TRUE:org.jsoup.parser.Tag@equals(java.lang.Object):167:false |==> true
623:ROR:!=(boolean,boolean):LHS(boolean,boolean):org.jsoup.parser.Tag@equals(java.lang.Object):171:canContainBlock != tag.canContainBlock |==> canContainBlock
624:ROR:!=(boolean,boolean):RHS(boolean,boolean):org.jsoup.parser.Tag@equals(java.lang.Object):171:canContainBlock != tag.canContainBlock |==> tag.canContainBlock
625:ROR:!=(boolean,boolean):TRUE(boolean,boolean):org.jsoup.parser.Tag@equals(java.lang.Object):171:canContainBlock != tag.canContainBlock |==> true
626:LVR:FALSE:TRUE:org.jsoup.parser.Tag@equals(java.lang.Object):171:false |==> true
627:ROR:!=(boolean,boolean):LHS(boolean,boolean):org.jsoup.parser.Tag@equals(java.lang.Object):172:canContainInline != tag.canContainInline |==> canContainInline
628:ROR:!=(boolean,boolean):RHS(boolean,boolean):org.jsoup.parser.Tag@equals(java.lang.Object):172:canContainInline != tag.canContainInline |==> tag.canContainInline
629:ROR:!=(boolean,boolean):TRUE(boolean,boolean):org.jsoup.parser.Tag@equals(java.lang.Object):172:canContainInline != tag.canContainInline |==> true
630:LVR:FALSE:TRUE:org.jsoup.parser.Tag@equals(java.lang.Object):172:false |==> true
631:ROR:!=(boolean,boolean):LHS(boolean,boolean):org.jsoup.parser.Tag@equals(java.lang.Object):173:empty != tag.empty |==> empty
632:ROR:!=(boolean,boolean):RHS(boolean,boolean):org.jsoup.parser.Tag@equals(java.lang.Object):173:empty != tag.empty |==> tag.empty
633:ROR:!=(boolean,boolean):TRUE(boolean,boolean):org.jsoup.parser.Tag@equals(java.lang.Object):173:empty != tag.empty |==> true
634:LVR:FALSE:TRUE:org.jsoup.parser.Tag@equals(java.lang.Object):173:false |==> true
635:ROR:!=(boolean,boolean):LHS(boolean,boolean):org.jsoup.parser.Tag@equals(java.lang.Object):174:isBlock != tag.isBlock |==> isBlock
636:ROR:!=(boolean,boolean):RHS(boolean,boolean):org.jsoup.parser.Tag@equals(java.lang.Object):174:isBlock != tag.isBlock |==> tag.isBlock
637:ROR:!=(boolean,boolean):TRUE(boolean,boolean):org.jsoup.parser.Tag@equals(java.lang.Object):174:isBlock != tag.isBlock |==> true
638:LVR:FALSE:TRUE:org.jsoup.parser.Tag@equals(java.lang.Object):174:false |==> true
639:ROR:!=(boolean,boolean):LHS(boolean,boolean):org.jsoup.parser.Tag@equals(java.lang.Object):175:optionalClosing != tag.optionalClosing |==> optionalClosing
640:ROR:!=(boolean,boolean):RHS(boolean,boolean):org.jsoup.parser.Tag@equals(java.lang.Object):175:optionalClosing != tag.optionalClosing |==> tag.optionalClosing
641:ROR:!=(boolean,boolean):TRUE(boolean,boolean):org.jsoup.parser.Tag@equals(java.lang.Object):175:optionalClosing != tag.optionalClosing |==> true
642:LVR:FALSE:TRUE:org.jsoup.parser.Tag@equals(java.lang.Object):175:false |==> true
643:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.jsoup.parser.Tag@equals(java.lang.Object):176:tagName != null |==> true
644:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.jsoup.parser.Tag@equals(java.lang.Object):176:tag.tagName != null |==> true
645:LVR:FALSE:TRUE:org.jsoup.parser.Tag@equals(java.lang.Object):176:false |==> true
646:LVR:TRUE:FALSE:org.jsoup.parser.Tag@equals(java.lang.Object):178:true |==> false
647:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.jsoup.parser.Tag@hashCode():183:tagName != null |==> true
648:LVR:0:POS:org.jsoup.parser.Tag@hashCode():183:0 |==> 1
649:LVR:0:NEG:org.jsoup.parser.Tag@hashCode():183:0 |==> -1
650:LVR:POS:0:org.jsoup.parser.Tag@hashCode():184:31 |==> 0
651:LVR:POS:NEG:org.jsoup.parser.Tag@hashCode():184:31 |==> -31
652:AOR:*(int,int):%(int,int):org.jsoup.parser.Tag@hashCode():184:31 * result |==> 31 % result
653:AOR:*(int,int):+(int,int):org.jsoup.parser.Tag@hashCode():184:31 * result |==> 31 + result
654:AOR:*(int,int):-(int,int):org.jsoup.parser.Tag@hashCode():184:31 * result |==> 31 - result
655:AOR:*(int,int):/(int,int):org.jsoup.parser.Tag@hashCode():184:31 * result |==> 31 / result
656:COR:isBlock:TRUE:org.jsoup.parser.Tag@hashCode():184:isBlock |==> false
657:COR:isBlock:FALSE:org.jsoup.parser.Tag@hashCode():184:isBlock |==> true
658:LVR:POS:0:org.jsoup.parser.Tag@hashCode():184:1 |==> 0
659:LVR:POS:NEG:org.jsoup.parser.Tag@hashCode():184:1 |==> -1
660:LVR:0:POS:org.jsoup.parser.Tag@hashCode():184:0 |==> 1
661:LVR:0:NEG:org.jsoup.parser.Tag@hashCode():184:0 |==> -1
662:AOR:+(int,int):%(int,int):org.jsoup.parser.Tag@hashCode():184:31 * result + (isBlock ? 1 : 0) |==> 31 * result % (isBlock ? 1 : 0)
663:AOR:+(int,int):*(int,int):org.jsoup.parser.Tag@hashCode():184:31 * result + (isBlock ? 1 : 0) |==> 31 * result * (isBlock ? 1 : 0)
664:AOR:+(int,int):-(int,int):org.jsoup.parser.Tag@hashCode():184:31 * result + (isBlock ? 1 : 0) |==> 31 * result - (isBlock ? 1 : 0)
665:AOR:+(int,int):/(int,int):org.jsoup.parser.Tag@hashCode():184:31 * result + (isBlock ? 1 : 0) |==> 31 * result / (isBlock ? 1 : 0)
666:STD:<ASSIGN>:<NO-OP>:org.jsoup.parser.Tag@hashCode():184:result = 31 * result + (isBlock ? 1 : 0) |==> <NO-OP>
667:LVR:POS:0:org.jsoup.parser.Tag@hashCode():185:31 |==> 0
668:LVR:POS:NEG:org.jsoup.parser.Tag@hashCode():185:31 |==> -31
669:AOR:*(int,int):%(int,int):org.jsoup.parser.Tag@hashCode():185:31 * result |==> 31 % result
670:AOR:*(int,int):+(int,int):org.jsoup.parser.Tag@hashCode():185:31 * result |==> 31 + result
671:AOR:*(int,int):-(int,int):org.jsoup.parser.Tag@hashCode():185:31 * result |==> 31 - result
672:AOR:*(int,int):/(int,int):org.jsoup.parser.Tag@hashCode():185:31 * result |==> 31 / result
673:COR:canContainBlock:TRUE:org.jsoup.parser.Tag@hashCode():185:canContainBlock |==> false
674:COR:canContainBlock:FALSE:org.jsoup.parser.Tag@hashCode():185:canContainBlock |==> true
675:LVR:POS:0:org.jsoup.parser.Tag@hashCode():185:1 |==> 0
676:LVR:POS:NEG:org.jsoup.parser.Tag@hashCode():185:1 |==> -1
677:LVR:0:POS:org.jsoup.parser.Tag@hashCode():185:0 |==> 1
678:LVR:0:NEG:org.jsoup.parser.Tag@hashCode():185:0 |==> -1
679:AOR:+(int,int):%(int,int):org.jsoup.parser.Tag@hashCode():185:31 * result + (canContainBlock ? 1 : 0) |==> 31 * result % (canContainBlock ? 1 : 0)
680:AOR:+(int,int):*(int,int):org.jsoup.parser.Tag@hashCode():185:31 * result + (canContainBlock ? 1 : 0) |==> 31 * result * (canContainBlock ? 1 : 0)
681:AOR:+(int,int):-(int,int):org.jsoup.parser.Tag@hashCode():185:31 * result + (canContainBlock ? 1 : 0) |==> 31 * result - (canContainBlock ? 1 : 0)
682:AOR:+(int,int):/(int,int):org.jsoup.parser.Tag@hashCode():185:31 * result + (canContainBlock ? 1 : 0) |==> 31 * result / (canContainBlock ? 1 : 0)
683:STD:<ASSIGN>:<NO-OP>:org.jsoup.parser.Tag@hashCode():185:result = 31 * result + (canContainBlock ? 1 : 0) |==> <NO-OP>
684:LVR:POS:0:org.jsoup.parser.Tag@hashCode():186:31 |==> 0
685:LVR:POS:NEG:org.jsoup.parser.Tag@hashCode():186:31 |==> -31
686:AOR:*(int,int):%(int,int):org.jsoup.parser.Tag@hashCode():186:31 * result |==> 31 % result
687:AOR:*(int,int):+(int,int):org.jsoup.parser.Tag@hashCode():186:31 * result |==> 31 + result
688:AOR:*(int,int):-(int,int):org.jsoup.parser.Tag@hashCode():186:31 * result |==> 31 - result
689:AOR:*(int,int):/(int,int):org.jsoup.parser.Tag@hashCode():186:31 * result |==> 31 / result
690:COR:canContainInline:TRUE:org.jsoup.parser.Tag@hashCode():186:canContainInline |==> false
691:COR:canContainInline:FALSE:org.jsoup.parser.Tag@hashCode():186:canContainInline |==> true
692:LVR:POS:0:org.jsoup.parser.Tag@hashCode():186:1 |==> 0
693:LVR:POS:NEG:org.jsoup.parser.Tag@hashCode():186:1 |==> -1
694:LVR:0:POS:org.jsoup.parser.Tag@hashCode():186:0 |==> 1
695:LVR:0:NEG:org.jsoup.parser.Tag@hashCode():186:0 |==> -1
696:AOR:+(int,int):%(int,int):org.jsoup.parser.Tag@hashCode():186:31 * result + (canContainInline ? 1 : 0) |==> 31 * result % (canContainInline ? 1 : 0)
697:AOR:+(int,int):*(int,int):org.jsoup.parser.Tag@hashCode():186:31 * result + (canContainInline ? 1 : 0) |==> 31 * result * (canContainInline ? 1 : 0)
698:AOR:+(int,int):-(int,int):org.jsoup.parser.Tag@hashCode():186:31 * result + (canContainInline ? 1 : 0) |==> 31 * result - (canContainInline ? 1 : 0)
699:AOR:+(int,int):/(int,int):org.jsoup.parser.Tag@hashCode():186:31 * result + (canContainInline ? 1 : 0) |==> 31 * result / (canContainInline ? 1 : 0)
700:STD:<ASSIGN>:<NO-OP>:org.jsoup.parser.Tag@hashCode():186:result = 31 * result + (canContainInline ? 1 : 0) |==> <NO-OP>
701:LVR:POS:0:org.jsoup.parser.Tag@hashCode():187:31 |==> 0
702:LVR:POS:NEG:org.jsoup.parser.Tag@hashCode():187:31 |==> -31
703:AOR:*(int,int):%(int,int):org.jsoup.parser.Tag@hashCode():187:31 * result |==> 31 % result
704:AOR:*(int,int):+(int,int):org.jsoup.parser.Tag@hashCode():187:31 * result |==> 31 + result
705:AOR:*(int,int):-(int,int):org.jsoup.parser.Tag@hashCode():187:31 * result |==> 31 - result
706:AOR:*(int,int):/(int,int):org.jsoup.parser.Tag@hashCode():187:31 * result |==> 31 / result
707:COR:optionalClosing:TRUE:org.jsoup.parser.Tag@hashCode():187:optionalClosing |==> false
708:COR:optionalClosing:FALSE:org.jsoup.parser.Tag@hashCode():187:optionalClosing |==> true
709:LVR:POS:0:org.jsoup.parser.Tag@hashCode():187:1 |==> 0
710:LVR:POS:NEG:org.jsoup.parser.Tag@hashCode():187:1 |==> -1
711:LVR:0:POS:org.jsoup.parser.Tag@hashCode():187:0 |==> 1
712:LVR:0:NEG:org.jsoup.parser.Tag@hashCode():187:0 |==> -1
713:AOR:+(int,int):%(int,int):org.jsoup.parser.Tag@hashCode():187:31 * result + (optionalClosing ? 1 : 0) |==> 31 * result % (optionalClosing ? 1 : 0)
714:AOR:+(int,int):*(int,int):org.jsoup.parser.Tag@hashCode():187:31 * result + (optionalClosing ? 1 : 0) |==> 31 * result * (optionalClosing ? 1 : 0)
715:AOR:+(int,int):-(int,int):org.jsoup.parser.Tag@hashCode():187:31 * result + (optionalClosing ? 1 : 0) |==> 31 * result - (optionalClosing ? 1 : 0)
716:AOR:+(int,int):/(int,int):org.jsoup.parser.Tag@hashCode():187:31 * result + (optionalClosing ? 1 : 0) |==> 31 * result / (optionalClosing ? 1 : 0)
717:STD:<ASSIGN>:<NO-OP>:org.jsoup.parser.Tag@hashCode():187:result = 31 * result + (optionalClosing ? 1 : 0) |==> <NO-OP>
718:LVR:POS:0:org.jsoup.parser.Tag@hashCode():188:31 |==> 0
719:LVR:POS:NEG:org.jsoup.parser.Tag@hashCode():188:31 |==> -31
720:AOR:*(int,int):%(int,int):org.jsoup.parser.Tag@hashCode():188:31 * result |==> 31 % result
721:AOR:*(int,int):+(int,int):org.jsoup.parser.Tag@hashCode():188:31 * result |==> 31 + result
722:AOR:*(int,int):-(int,int):org.jsoup.parser.Tag@hashCode():188:31 * result |==> 31 - result
723:AOR:*(int,int):/(int,int):org.jsoup.parser.Tag@hashCode():188:31 * result |==> 31 / result
724:COR:empty:TRUE:org.jsoup.parser.Tag@hashCode():188:empty |==> false
725:COR:empty:FALSE:org.jsoup.parser.Tag@hashCode():188:empty |==> true
726:LVR:POS:0:org.jsoup.parser.Tag@hashCode():188:1 |==> 0
727:LVR:POS:NEG:org.jsoup.parser.Tag@hashCode():188:1 |==> -1
728:LVR:0:POS:org.jsoup.parser.Tag@hashCode():188:0 |==> 1
729:LVR:0:NEG:org.jsoup.parser.Tag@hashCode():188:0 |==> -1
730:AOR:+(int,int):%(int,int):org.jsoup.parser.Tag@hashCode():188:31 * result + (empty ? 1 : 0) |==> 31 * result % (empty ? 1 : 0)
731:AOR:+(int,int):*(int,int):org.jsoup.parser.Tag@hashCode():188:31 * result + (empty ? 1 : 0) |==> 31 * result * (empty ? 1 : 0)
732:AOR:+(int,int):-(int,int):org.jsoup.parser.Tag@hashCode():188:31 * result + (empty ? 1 : 0) |==> 31 * result - (empty ? 1 : 0)
733:AOR:+(int,int):/(int,int):org.jsoup.parser.Tag@hashCode():188:31 * result + (empty ? 1 : 0) |==> 31 * result / (empty ? 1 : 0)
734:STD:<ASSIGN>:<NO-OP>:org.jsoup.parser.Tag@hashCode():188:result = 31 * result + (empty ? 1 : 0) |==> <NO-OP>
735:LVR:0:POS:org.jsoup.parser.Tag:204:0 |==> 1
736:LVR:0:NEG:org.jsoup.parser.Tag:204:0 |==> -1
737:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:204:createBlock("HTML").setAncestor(new String[0]) |==> <NO-OP>
738:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:205:createBlock("HEAD").setAncestor("HTML") |==> <NO-OP>
739:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:206:createBlock("BODY").setAncestor("HTML") |==> <NO-OP>
740:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:207:createBlock("FRAMESET").setAncestor("HTML") |==> <NO-OP>
741:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:211:createBlock("SCRIPT").setAncestor("HEAD", "BODY").setContainDataOnly() |==> <NO-OP>
742:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:212:createBlock("NOSCRIPT").setAncestor("HEAD", "BODY") |==> <NO-OP>
743:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:213:createBlock("STYLE").setAncestor("HEAD", "BODY").setContainDataOnly() |==> <NO-OP>
744:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:214:createBlock("META").setAncestor("HEAD", "BODY").setEmpty() |==> <NO-OP>
745:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:215:createBlock("LINK").setAncestor("HEAD", "BODY").setEmpty() |==> <NO-OP>
746:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:216:createInline("OBJECT").setAncestor("HEAD", "BODY") |==> <NO-OP>
747:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:217:createBlock("TITLE").setAncestor("HEAD", "BODY").setContainDataOnly() |==> <NO-OP>
748:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:218:createInline("BASE").setAncestor("HEAD", "BODY").setEmpty() |==> <NO-OP>
749:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:220:createBlock("FRAME").setAncestor("FRAMESET").setEmpty() |==> <NO-OP>
750:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:221:createBlock("NOFRAMES").setAncestor("FRAMESET").setContainDataOnly() |==> <NO-OP>
751:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:226:createInline("FONT") |==> <NO-OP>
752:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:227:createInline("TT") |==> <NO-OP>
753:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:228:createInline("I") |==> <NO-OP>
754:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:229:createInline("B") |==> <NO-OP>
755:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:230:createInline("BIG") |==> <NO-OP>
756:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:231:createInline("SMALL") |==> <NO-OP>
757:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:234:createInline("EM") |==> <NO-OP>
758:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:235:createInline("STRONG") |==> <NO-OP>
759:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:236:createInline("DFN") |==> <NO-OP>
760:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:237:createInline("CODE") |==> <NO-OP>
761:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:238:createInline("SAMP") |==> <NO-OP>
762:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:239:createInline("KBD") |==> <NO-OP>
763:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:240:createInline("VAR") |==> <NO-OP>
764:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:241:createInline("CITE") |==> <NO-OP>
765:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:242:createInline("ABBR") |==> <NO-OP>
766:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:243:createInline("ACRONYM") |==> <NO-OP>
767:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:246:createInline("A").setOptionalClosing() |==> <NO-OP>
768:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:247:createInline("IMG").setEmpty() |==> <NO-OP>
769:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:248:createInline("BR").setEmpty() |==> <NO-OP>
770:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:249:createInline("MAP") |==> <NO-OP>
771:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:250:createInline("Q") |==> <NO-OP>
772:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:251:createInline("SUB") |==> <NO-OP>
773:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:252:createInline("SUP") |==> <NO-OP>
774:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:253:createInline("SPAN") |==> <NO-OP>
775:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:254:createInline("BDO") |==> <NO-OP>
776:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:261:createBlock("P").setContainInlineOnly() |==> <NO-OP>
777:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:262:createBlock("H1").setContainInlineOnly() |==> <NO-OP>
778:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:263:createBlock("H2").setContainInlineOnly() |==> <NO-OP>
779:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:264:createBlock("H3").setContainInlineOnly() |==> <NO-OP>
780:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:265:createBlock("H4").setContainInlineOnly() |==> <NO-OP>
781:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:266:createBlock("H5").setContainInlineOnly() |==> <NO-OP>
782:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:267:createBlock("H6").setContainInlineOnly() |==> <NO-OP>
783:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:268:createBlock("UL") |==> <NO-OP>
784:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:269:createBlock("OL") |==> <NO-OP>
785:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:270:createBlock("PRE").setContainInlineOnly().setPreserveWhitespace() |==> <NO-OP>
786:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:271:createBlock("DIV") |==> <NO-OP>
787:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:272:createBlock("BLOCKQUOTE") |==> <NO-OP>
788:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:273:createBlock("HR").setEmpty() |==> <NO-OP>
789:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:274:createBlock("ADDRESS").setContainInlineOnly() |==> <NO-OP>
790:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:278:createBlock("FORM").setOptionalClosing() |==> <NO-OP>
791:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:279:createInline("INPUT").setAncestor("FORM").setEmpty() |==> <NO-OP>
792:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:280:createInline("SELECT").setAncestor("FORM") |==> <NO-OP>
793:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:281:createInline("TEXTAREA").setAncestor("FORM").setContainDataOnly() |==> <NO-OP>
794:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:282:createInline("LABEL").setAncestor("FORM").setOptionalClosing() |==> <NO-OP>
795:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:283:createInline("BUTTON").setAncestor("FORM") |==> <NO-OP>
796:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:284:createInline("OPTGROUP").setAncestor("SELECT") |==> <NO-OP>
797:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:285:createInline("OPTION").setAncestor("SELECT").setContainDataOnly() |==> <NO-OP>
798:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:286:createBlock("FIELDSET").setAncestor("FORM") |==> <NO-OP>
799:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:287:createInline("LEGEND").setAncestor("FIELDSET") |==> <NO-OP>
800:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:290:createInline("AREA").setEmpty() |==> <NO-OP>
801:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:291:createInline("PARAM").setAncestor("OBJECT").setEmpty() |==> <NO-OP>
802:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:292:createBlock("INS") |==> <NO-OP>
803:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:293:createBlock("DEL") |==> <NO-OP>
804:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:295:createBlock("DL") |==> <NO-OP>
805:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:296:createInline("DT").setAncestor("DL").setOptionalClosing() |==> <NO-OP>
806:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:297:createInline("DD").setAncestor("DL").setOptionalClosing() |==> <NO-OP>
807:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:299:createBlock("LI").setAncestor("UL", "OL").setOptionalClosing() |==> <NO-OP>
808:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:302:createBlock("TABLE") |==> <NO-OP>
809:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:303:createBlock("CAPTION").setAncestor("TABLE") |==> <NO-OP>
810:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:304:createBlock("THEAD").setAncestor("TABLE").setOptionalClosing() |==> <NO-OP>
811:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:305:createBlock("TFOOT").setAncestor("TABLE").setOptionalClosing() |==> <NO-OP>
812:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:306:createBlock("TBODY").setAncestor("TABLE").setOptionalClosing() |==> <NO-OP>
813:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:307:createBlock("COLGROUP").setAncestor("TABLE").setOptionalClosing() |==> <NO-OP>
814:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:308:createBlock("COL").setAncestor("COLGROUP").setEmpty() |==> <NO-OP>
815:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:309:createBlock("TR").setAncestor("TABLE").setOptionalClosing() |==> <NO-OP>
816:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:310:createBlock("TH").setAncestor("TR").setOptionalClosing() |==> <NO-OP>
817:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag:311:createBlock("TD").setAncestor("TR").setOptionalClosing() |==> <NO-OP>
818:LVR:FALSE:TRUE:org.jsoup.parser.Tag@createInline(java.lang.String):320:false |==> true
819:STD:<ASSIGN>:<NO-OP>:org.jsoup.parser.Tag@createInline(java.lang.String):320:inline.isBlock = false |==> <NO-OP>
820:LVR:FALSE:TRUE:org.jsoup.parser.Tag@createInline(java.lang.String):321:false |==> true
821:STD:<ASSIGN>:<NO-OP>:org.jsoup.parser.Tag@createInline(java.lang.String):321:inline.canContainBlock = false |==> <NO-OP>
822:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag@register(org.jsoup.parser.Tag):326:tag.setAncestor(defaultAncestor.tagName) |==> <NO-OP>
823:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag@register(org.jsoup.parser.Tag):328:tags.put(tag.tagName, tag) |==> <NO-OP>
824:LVR:FALSE:TRUE:org.jsoup.parser.Tag@setContainInlineOnly():334:false |==> true
825:STD:<ASSIGN>:<NO-OP>:org.jsoup.parser.Tag@setContainInlineOnly():334:canContainBlock = false |==> <NO-OP>
826:LVR:TRUE:FALSE:org.jsoup.parser.Tag@setContainInlineOnly():335:true |==> false
827:STD:<ASSIGN>:<NO-OP>:org.jsoup.parser.Tag@setContainInlineOnly():335:canContainInline = true |==> <NO-OP>
828:LVR:FALSE:TRUE:org.jsoup.parser.Tag@setContainDataOnly():340:false |==> true
829:STD:<ASSIGN>:<NO-OP>:org.jsoup.parser.Tag@setContainDataOnly():340:canContainBlock = false |==> <NO-OP>
830:LVR:FALSE:TRUE:org.jsoup.parser.Tag@setContainDataOnly():341:false |==> true
831:STD:<ASSIGN>:<NO-OP>:org.jsoup.parser.Tag@setContainDataOnly():341:canContainInline = false |==> <NO-OP>
832:LVR:TRUE:FALSE:org.jsoup.parser.Tag@setContainDataOnly():342:true |==> false
833:STD:<ASSIGN>:<NO-OP>:org.jsoup.parser.Tag@setContainDataOnly():342:preserveWhitespace = true |==> <NO-OP>
834:LVR:FALSE:TRUE:org.jsoup.parser.Tag@setEmpty():347:false |==> true
835:STD:<ASSIGN>:<NO-OP>:org.jsoup.parser.Tag@setEmpty():347:canContainBlock = false |==> <NO-OP>
836:LVR:FALSE:TRUE:org.jsoup.parser.Tag@setEmpty():348:false |==> true
837:STD:<ASSIGN>:<NO-OP>:org.jsoup.parser.Tag@setEmpty():348:canContainInline = false |==> <NO-OP>
838:LVR:TRUE:FALSE:org.jsoup.parser.Tag@setEmpty():349:true |==> false
839:STD:<ASSIGN>:<NO-OP>:org.jsoup.parser.Tag@setEmpty():349:empty = true |==> <NO-OP>
840:LVR:TRUE:FALSE:org.jsoup.parser.Tag@setOptionalClosing():354:true |==> false
841:STD:<ASSIGN>:<NO-OP>:org.jsoup.parser.Tag@setOptionalClosing():354:optionalClosing = true |==> <NO-OP>
842:LVR:TRUE:FALSE:org.jsoup.parser.Tag@setPreserveWhitespace():359:true |==> false
843:STD:<ASSIGN>:<NO-OP>:org.jsoup.parser.Tag@setPreserveWhitespace():359:preserveWhitespace = true |==> <NO-OP>
844:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.jsoup.parser.Tag@setAncestor(java.lang.String[]):364:tagNames == null |==> false
845:STD:<ASSIGN>:<NO-OP>:org.jsoup.parser.Tag@setAncestor(java.lang.String[]):365:ancestors = Collections.emptyList() |==> <NO-OP>
846:STD:<ASSIGN>:<NO-OP>:org.jsoup.parser.Tag@setAncestor(java.lang.String[]):367:ancestors = new ArrayList<Tag>(tagNames.length) |==> <NO-OP>
847:STD:<CALL>:<NO-OP>:org.jsoup.parser.Tag@setAncestor(java.lang.String[]):369:ancestors.add(Tag.valueOf(name)) |==> <NO-OP>
848:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Attributes@get(java.lang.String):28:Validate.notEmpty(key) |==> <NO-OP>
849:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.jsoup.nodes.Attributes@get(java.lang.String):31:attr != null |==> true
850:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Attributes@put(java.lang.String,java.lang.String):41:put(attr) |==> <NO-OP>
851:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Attributes@put(org.jsoup.nodes.Attribute):49:Validate.notNull(attribute) |==> <NO-OP>
852:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Attributes@put(org.jsoup.nodes.Attribute):50:attributes.put(attribute.getKey(), attribute) |==> <NO-OP>
853:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Attributes@remove(java.lang.String):58:Validate.notEmpty(key) |==> <NO-OP>
854:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Attributes@remove(java.lang.String):59:attributes.remove(key.toLowerCase()) |==> <NO-OP>
855:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Attributes@addAll(org.jsoup.nodes.Attributes):84:attributes.putAll(incoming.attributes) |==> <NO-OP>
856:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Attributes@asList():99:list.add(entry.getValue()) |==> <NO-OP>
857:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Attributes@html():111:accum.append(" ") |==> <NO-OP>
858:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Attributes@html():112:accum.append(attribute.html()) |==> <NO-OP>
859:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.jsoup.nodes.Attributes@equals(java.lang.Object):123:this == o |==> false
860:LVR:TRUE:FALSE:org.jsoup.nodes.Attributes@equals(java.lang.Object):123:true |==> false
861:LVR:FALSE:TRUE:org.jsoup.nodes.Attributes@equals(java.lang.Object):124:false |==> true
862:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.jsoup.nodes.Attributes@equals(java.lang.Object):128:attributes != null |==> true
863:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.jsoup.nodes.Attributes@equals(java.lang.Object):128:that.attributes != null |==> true
864:LVR:FALSE:TRUE:org.jsoup.nodes.Attributes@equals(java.lang.Object):128:false |==> true
865:LVR:TRUE:FALSE:org.jsoup.nodes.Attributes@equals(java.lang.Object):130:true |==> false
866:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.jsoup.nodes.Attributes@hashCode():135:attributes != null |==> true
867:LVR:0:POS:org.jsoup.nodes.Attributes@hashCode():135:0 |==> 1
868:LVR:0:NEG:org.jsoup.nodes.Attributes@hashCode():135:0 |==> -1
869:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Attribute@<init>(java.lang.String,java.lang.String):21:Validate.notEmpty(key) |==> <NO-OP>
870:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Attribute@<init>(java.lang.String,java.lang.String):22:Validate.notNull(value) |==> <NO-OP>
871:STD:<ASSIGN>:<NO-OP>:org.jsoup.nodes.Attribute@<init>(java.lang.String,java.lang.String):23:this.key = key.trim().toLowerCase() |==> <NO-OP>
872:STD:<ASSIGN>:<NO-OP>:org.jsoup.nodes.Attribute@<init>(java.lang.String,java.lang.String):24:this.value = value |==> <NO-OP>
873:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Attribute@setKey(java.lang.String):40:Validate.notEmpty(key) |==> <NO-OP>
874:STD:<ASSIGN>:<NO-OP>:org.jsoup.nodes.Attribute@setKey(java.lang.String):41:this.key = key.trim().toLowerCase() |==> <NO-OP>
875:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Attribute@setValue(java.lang.String):57:Validate.notNull(value) |==> <NO-OP>
876:STD:<ASSIGN>:<NO-OP>:org.jsoup.nodes.Attribute@setValue(java.lang.String):58:this.value = value |==> <NO-OP>
877:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.jsoup.nodes.Attribute@equals(java.lang.Object):90:this == o |==> false
878:LVR:TRUE:FALSE:org.jsoup.nodes.Attribute@equals(java.lang.Object):90:true |==> false
879:LVR:FALSE:TRUE:org.jsoup.nodes.Attribute@equals(java.lang.Object):91:false |==> true
880:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.jsoup.nodes.Attribute@equals(java.lang.Object):95:key != null |==> true
881:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.jsoup.nodes.Attribute@equals(java.lang.Object):95:attribute.key != null |==> true
882:LVR:FALSE:TRUE:org.jsoup.nodes.Attribute@equals(java.lang.Object):95:false |==> true
883:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.jsoup.nodes.Attribute@equals(java.lang.Object):96:value != null |==> true
884:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.jsoup.nodes.Attribute@equals(java.lang.Object):96:attribute.value != null |==> true
885:LVR:FALSE:TRUE:org.jsoup.nodes.Attribute@equals(java.lang.Object):96:false |==> true
886:LVR:TRUE:FALSE:org.jsoup.nodes.Attribute@equals(java.lang.Object):98:true |==> false
887:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.jsoup.nodes.Attribute@hashCode():103:key != null |==> true
888:LVR:0:POS:org.jsoup.nodes.Attribute@hashCode():103:0 |==> 1
889:LVR:0:NEG:org.jsoup.nodes.Attribute@hashCode():103:0 |==> -1
890:LVR:POS:0:org.jsoup.nodes.Attribute@hashCode():104:31 |==> 0
891:LVR:POS:NEG:org.jsoup.nodes.Attribute@hashCode():104:31 |==> -31
892:AOR:*(int,int):%(int,int):org.jsoup.nodes.Attribute@hashCode():104:31 * result |==> 31 % result
893:AOR:*(int,int):+(int,int):org.jsoup.nodes.Attribute@hashCode():104:31 * result |==> 31 + result
894:AOR:*(int,int):-(int,int):org.jsoup.nodes.Attribute@hashCode():104:31 * result |==> 31 - result
895:AOR:*(int,int):/(int,int):org.jsoup.nodes.Attribute@hashCode():104:31 * result |==> 31 / result
896:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.jsoup.nodes.Attribute@hashCode():104:value != null |==> true
897:LVR:0:POS:org.jsoup.nodes.Attribute@hashCode():104:0 |==> 1
898:LVR:0:NEG:org.jsoup.nodes.Attribute@hashCode():104:0 |==> -1
899:AOR:+(int,int):%(int,int):org.jsoup.nodes.Attribute@hashCode():104:31 * result + (value != null ? value.hashCode() : 0) |==> 31 * result % (value != null ? value.hashCode() : 0)
900:AOR:+(int,int):*(int,int):org.jsoup.nodes.Attribute@hashCode():104:31 * result + (value != null ? value.hashCode() : 0) |==> 31 * result * (value != null ? value.hashCode() : 0)
901:AOR:+(int,int):-(int,int):org.jsoup.nodes.Attribute@hashCode():104:31 * result + (value != null ? value.hashCode() : 0) |==> 31 * result - (value != null ? value.hashCode() : 0)
902:AOR:+(int,int):/(int,int):org.jsoup.nodes.Attribute@hashCode():104:31 * result + (value != null ? value.hashCode() : 0) |==> 31 * result / (value != null ? value.hashCode() : 0)
903:STD:<ASSIGN>:<NO-OP>:org.jsoup.nodes.Attribute@hashCode():104:result = 31 * result + (value != null ? value.hashCode() : 0) |==> <NO-OP>
904:STD:<ASSIGN>:<NO-OP>:org.jsoup.select.Elements@<init>():16:contents = new ArrayList<Element>() |==> <NO-OP>
905:STD:<ASSIGN>:<NO-OP>:org.jsoup.select.Elements@<init>(java.util.Collection<org.jsoup.nodes.Element>):20:contents = new ArrayList<Element>(elements) |==> <NO-OP>
906:STD:<ASSIGN>:<NO-OP>:org.jsoup.select.Elements@<init>(java.util.List<org.jsoup.nodes.Element>):24:contents = elements |==> <NO-OP>
907:COR:element.hasAttr(attributeKey):TRUE:org.jsoup.select.Elements@attr(java.lang.String):41:element.hasAttr(attributeKey) |==> false
908:COR:element.hasAttr(attributeKey):FALSE:org.jsoup.select.Elements@attr(java.lang.String):41:element.hasAttr(attributeKey) |==> true
909:COR:element.hasAttr(attributeKey):TRUE:org.jsoup.select.Elements@hasAttr(java.lang.String):54:element.hasAttr(attributeKey) |==> false
910:COR:element.hasAttr(attributeKey):FALSE:org.jsoup.select.Elements@hasAttr(java.lang.String):54:element.hasAttr(attributeKey) |==> true
911:LVR:TRUE:FALSE:org.jsoup.select.Elements@hasAttr(java.lang.String):55:true |==> false
912:LVR:FALSE:TRUE:org.jsoup.select.Elements@hasAttr(java.lang.String):57:false |==> true
913:STD:<CALL>:<NO-OP>:org.jsoup.select.Elements@attr(java.lang.String,java.lang.String):68:element.attr(attributeKey, attributeValue) |==> <NO-OP>
914:STD:<CALL>:<NO-OP>:org.jsoup.select.Elements@removeAttr(java.lang.String):80:element.removeAttr(attributeKey) |==> <NO-OP>
915:STD:<CALL>:<NO-OP>:org.jsoup.select.Elements@addClass(java.lang.String):92:element.addClass(className) |==> <NO-OP>
916:STD:<CALL>:<NO-OP>:org.jsoup.select.Elements@removeClass(java.lang.String):104:element.removeClass(className) |==> <NO-OP>
917:STD:<CALL>:<NO-OP>:org.jsoup.select.Elements@toggleClass(java.lang.String):116:element.toggleClass(className) |==> <NO-OP>
918:COR:element.hasClass(className):TRUE:org.jsoup.select.Elements@hasClass(java.lang.String):128:element.hasClass(className) |==> false
919:COR:element.hasClass(className):FALSE:org.jsoup.select.Elements@hasClass(java.lang.String):128:element.hasClass(className) |==> true
920:LVR:TRUE:FALSE:org.jsoup.select.Elements@hasClass(java.lang.String):129:true |==> false
921:LVR:FALSE:TRUE:org.jsoup.select.Elements@hasClass(java.lang.String):131:false |==> true
922:LVR:0:POS:org.jsoup.select.Elements@val():140:0 |==> 1
923:LVR:0:NEG:org.jsoup.select.Elements@val():140:0 |==> -1
924:ROR:>(int,int):!=(int,int):org.jsoup.select.Elements@val():140:size() > 0 |==> size() != 0
925:ROR:>(int,int):>=(int,int):org.jsoup.select.Elements@val():140:size() > 0 |==> size() >= 0
926:ROR:>(int,int):FALSE(int,int):org.jsoup.select.Elements@val():140:size() > 0 |==> false
927:STD:<CALL>:<NO-OP>:org.jsoup.select.Elements@val(java.lang.String):153:element.val(value) |==> <NO-OP>
928:LVR:0:POS:org.jsoup.select.Elements@text():168:0 |==> 1
929:LVR:0:NEG:org.jsoup.select.Elements@text():168:0 |==> -1
930:ROR:!=(int,int):<(int,int):org.jsoup.select.Elements@text():168:sb.length() != 0 |==> sb.length() < 0
931:ROR:!=(int,int):>(int,int):org.jsoup.select.Elements@text():168:sb.length() != 0 |==> sb.length() > 0
932:ROR:!=(int,int):TRUE(int,int):org.jsoup.select.Elements@text():168:sb.length() != 0 |==> true
933:STD:<CALL>:<NO-OP>:org.jsoup.select.Elements@text():169:sb.append(" ") |==> <NO-OP>
934:STD:<CALL>:<NO-OP>:org.jsoup.select.Elements@text():170:sb.append(element.text()) |==> <NO-OP>
935:COR:element.hasText():TRUE:org.jsoup.select.Elements@hasText():177:element.hasText() |==> false
936:COR:element.hasText():FALSE:org.jsoup.select.Elements@hasText():177:element.hasText() |==> true
937:LVR:TRUE:FALSE:org.jsoup.select.Elements@hasText():178:true |==> false
938:LVR:FALSE:TRUE:org.jsoup.select.Elements@hasText():180:false |==> true
939:LVR:0:POS:org.jsoup.select.Elements@html():192:0 |==> 1
940:LVR:0:NEG:org.jsoup.select.Elements@html():192:0 |==> -1
941:ROR:!=(int,int):<(int,int):org.jsoup.select.Elements@html():192:sb.length() != 0 |==> sb.length() < 0
942:ROR:!=(int,int):>(int,int):org.jsoup.select.Elements@html():192:sb.length() != 0 |==> sb.length() > 0
943:ROR:!=(int,int):TRUE(int,int):org.jsoup.select.Elements@html():192:sb.length() != 0 |==> true
944:STD:<CALL>:<NO-OP>:org.jsoup.select.Elements@html():193:sb.append("\n") |==> <NO-OP>
945:STD:<CALL>:<NO-OP>:org.jsoup.select.Elements@html():194:sb.append(element.html()) |==> <NO-OP>
946:LVR:0:POS:org.jsoup.select.Elements@outerHtml():208:0 |==> 1
947:LVR:0:NEG:org.jsoup.select.Elements@outerHtml():208:0 |==> -1
948:ROR:!=(int,int):<(int,int):org.jsoup.select.Elements@outerHtml():208:sb.length() != 0 |==> sb.length() < 0
949:ROR:!=(int,int):>(int,int):org.jsoup.select.Elements@outerHtml():208:sb.length() != 0 |==> sb.length() > 0
950:ROR:!=(int,int):TRUE(int,int):org.jsoup.select.Elements@outerHtml():208:sb.length() != 0 |==> true
951:STD:<CALL>:<NO-OP>:org.jsoup.select.Elements@outerHtml():209:sb.append("\n") |==> <NO-OP>
952:STD:<CALL>:<NO-OP>:org.jsoup.select.Elements@outerHtml():210:sb.append(element.outerHtml()) |==> <NO-OP>
953:STD:<CALL>:<NO-OP>:org.jsoup.select.Elements@html(java.lang.String):223:element.html(html) |==> <NO-OP>
954:STD:<CALL>:<NO-OP>:org.jsoup.select.Elements@prepend(java.lang.String):236:element.prepend(html) |==> <NO-OP>
955:STD:<CALL>:<NO-OP>:org.jsoup.select.Elements@append(java.lang.String):249:element.append(html) |==> <NO-OP>
956:STD:<CALL>:<NO-OP>:org.jsoup.select.Elements@wrap(java.lang.String):264:Validate.notEmpty(html) |==> <NO-OP>
957:STD:<CALL>:<NO-OP>:org.jsoup.select.Elements@wrap(java.lang.String):266:element.wrap(html) |==> <NO-OP>
958:ROR:>(int,int):!=(int,int):org.jsoup.select.Elements@eq(int):288:contents.size() > index |==> contents.size() != index
959:ROR:>(int,int):>=(int,int):org.jsoup.select.Elements@eq(int):288:contents.size() > index |==> contents.size() >= index
960:ROR:>(int,int):FALSE(int,int):org.jsoup.select.Elements@eq(int):288:contents.size() > index |==> false
961:LVR:0:POS:org.jsoup.select.Elements@first():310:0 |==> 1
962:LVR:0:NEG:org.jsoup.select.Elements@first():310:0 |==> -1
963:LVR:POS:0:org.jsoup.select.Elements@last():318:1 |==> 0
964:LVR:POS:NEG:org.jsoup.select.Elements@last():318:1 |==> -1
965:AOR:-(int,int):%(int,int):org.jsoup.select.Elements@last():318:contents.size() - 1 |==> contents.size() % 1
966:AOR:-(int,int):*(int,int):org.jsoup.select.Elements@last():318:contents.size() - 1 |==> contents.size() * 1
967:AOR:-(int,int):+(int,int):org.jsoup.select.Elements@last():318:contents.size() - 1 |==> contents.size() + 1
968:AOR:-(int,int):/(int,int):org.jsoup.select.Elements@last():318:contents.size() - 1 |==> contents.size() / 1
969:STD:<CALL>:<NO-OP>:org.jsoup.select.Elements@clear():348:contents.clear() |==> <NO-OP>
970:STD:<CALL>:<NO-OP>:org.jsoup.select.Elements@add(int,org.jsoup.nodes.Element):358:contents.add(index, element) |==> <NO-OP>
971:LVR:POS:0:org.jsoup.examples.ListLinks@main(java.lang.String[]):17:1 |==> 0
972:LVR:POS:NEG:org.jsoup.examples.ListLinks@main(java.lang.String[]):17:1 |==> -1
973:ROR:==(int,int):<=(int,int):org.jsoup.examples.ListLinks@main(java.lang.String[]):17:args.length == 1 |==> args.length <= 1
974:ROR:==(int,int):>=(int,int):org.jsoup.examples.ListLinks@main(java.lang.String[]):17:args.length == 1 |==> args.length >= 1
975:ROR:==(int,int):FALSE(int,int):org.jsoup.examples.ListLinks@main(java.lang.String[]):17:args.length == 1 |==> false
976:STD:<CALL>:<NO-OP>:org.jsoup.examples.ListLinks@main(java.lang.String[]):17:Validate.isTrue(args.length == 1, "usage: supply url to fetch") |==> <NO-OP>
977:LVR:0:POS:org.jsoup.examples.ListLinks@main(java.lang.String[]):18:0 |==> 1
978:LVR:0:NEG:org.jsoup.examples.ListLinks@main(java.lang.String[]):18:0 |==> -1
979:STD:<CALL>:<NO-OP>:org.jsoup.examples.ListLinks@main(java.lang.String[]):19:print("Fetching %s...", url.toExternalForm()) |==> <NO-OP>
980:LVR:POS:0:org.jsoup.examples.ListLinks@main(java.lang.String[]):21:3 |==> 0
981:LVR:POS:NEG:org.jsoup.examples.ListLinks@main(java.lang.String[]):21:3 |==> -3
982:LVR:POS:0:org.jsoup.examples.ListLinks@main(java.lang.String[]):21:1000 |==> 0
983:LVR:POS:NEG:org.jsoup.examples.ListLinks@main(java.lang.String[]):21:1000 |==> -1000
984:AOR:*(int,int):%(int,int):org.jsoup.examples.ListLinks@main(java.lang.String[]):21:3 * 1000 |==> 3 % 1000
985:AOR:*(int,int):+(int,int):org.jsoup.examples.ListLinks@main(java.lang.String[]):21:3 * 1000 |==> 3 + 1000
986:AOR:*(int,int):-(int,int):org.jsoup.examples.ListLinks@main(java.lang.String[]):21:3 * 1000 |==> 3 - 1000
987:AOR:*(int,int):/(int,int):org.jsoup.examples.ListLinks@main(java.lang.String[]):21:3 * 1000 |==> 3 / 1000
988:STD:<CALL>:<NO-OP>:org.jsoup.examples.ListLinks@main(java.lang.String[]):26:print("\nMedia: (%d)", media.size()) |==> <NO-OP>
989:COR:src.tagName().equals("img"):TRUE:org.jsoup.examples.ListLinks@main(java.lang.String[]):28:src.tagName().equals("img") |==> false
990:COR:src.tagName().equals("img"):FALSE:org.jsoup.examples.ListLinks@main(java.lang.String[]):28:src.tagName().equals("img") |==> true
991:LVR:POS:0:org.jsoup.examples.ListLinks@main(java.lang.String[]):31:20 |==> 0
992:LVR:POS:NEG:org.jsoup.examples.ListLinks@main(java.lang.String[]):31:20 |==> -20
993:STD:<CALL>:<NO-OP>:org.jsoup.examples.ListLinks@main(java.lang.String[]):29:print(" * %s: <%s> %sx%s (%s)", src.tagName(), src.attr("abs:src"), src.attr("width"), src.attr("height"), trim(src.attr("alt"), 20)) |==> <NO-OP>
994:STD:<CALL>:<NO-OP>:org.jsoup.examples.ListLinks@main(java.lang.String[]):33:print(" * %s: <%s>", src.tagName(), src.attr("abs:src")) |==> <NO-OP>
995:STD:<CALL>:<NO-OP>:org.jsoup.examples.ListLinks@main(java.lang.String[]):36:print("\nImports: (%d)", imports.size()) |==> <NO-OP>
996:STD:<CALL>:<NO-OP>:org.jsoup.examples.ListLinks@main(java.lang.String[]):38:print(" * %s <%s> (%s)", link.tagName(), link.attr("abs:href"), link.attr("rel")) |==> <NO-OP>
997:STD:<CALL>:<NO-OP>:org.jsoup.examples.ListLinks@main(java.lang.String[]):41:print("\nLinks: (%d)", links.size()) |==> <NO-OP>
998:LVR:POS:0:org.jsoup.examples.ListLinks@main(java.lang.String[]):43:35 |==> 0
999:LVR:POS:NEG:org.jsoup.examples.ListLinks@main(java.lang.String[]):43:35 |==> -35
1000:STD:<CALL>:<NO-OP>:org.jsoup.examples.ListLinks@main(java.lang.String[]):43:print(" * a: <%s>  (%s)", link.attr("abs:href"), trim(link.text(), 35)) |==> <NO-OP>
1001:STD:<CALL>:<NO-OP>:org.jsoup.examples.ListLinks@print(java.lang.String,java.lang.Object[]):48:System.out.println(String.format(msg, args)) |==> <NO-OP>
1002:ROR:>(int,int):!=(int,int):org.jsoup.examples.ListLinks@trim(java.lang.String,int):52:s.length() > width |==> s.length() != width
1003:ROR:>(int,int):>=(int,int):org.jsoup.examples.ListLinks@trim(java.lang.String,int):52:s.length() > width |==> s.length() >= width
1004:ROR:>(int,int):FALSE(int,int):org.jsoup.examples.ListLinks@trim(java.lang.String,int):52:s.length() > width |==> false
1005:LVR:0:POS:org.jsoup.examples.ListLinks@trim(java.lang.String,int):53:0 |==> 1
1006:LVR:0:NEG:org.jsoup.examples.ListLinks@trim(java.lang.String,int):53:0 |==> -1
1007:LVR:POS:0:org.jsoup.examples.ListLinks@trim(java.lang.String,int):53:1 |==> 0
1008:LVR:POS:NEG:org.jsoup.examples.ListLinks@trim(java.lang.String,int):53:1 |==> -1
1009:AOR:-(int,int):%(int,int):org.jsoup.examples.ListLinks@trim(java.lang.String,int):53:width - 1 |==> width % 1
1010:AOR:-(int,int):*(int,int):org.jsoup.examples.ListLinks@trim(java.lang.String,int):53:width - 1 |==> width * 1
1011:AOR:-(int,int):+(int,int):org.jsoup.examples.ListLinks@trim(java.lang.String,int):53:width - 1 |==> width + 1
1012:AOR:-(int,int):/(int,int):org.jsoup.examples.ListLinks@trim(java.lang.String,int):53:width - 1 |==> width / 1
1013:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Comment@<init>(java.lang.String,java.lang.String):17:attributes.put(COMMENT_KEY, data) |==> <NO-OP>
1014:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Comment@outerHtml(java.lang.StringBuilder):33:indent(accum) |==> <NO-OP>
1015:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Comment@outerHtml(java.lang.StringBuilder):34:accum.append(String.format("<!--%s-->", getData())) |==> <NO-OP>
1016:STD:<CALL>:<NO-OP>:org.jsoup.nodes.DataNode@<init>(java.lang.String,java.lang.String):19:attributes.put(DATA_KEY, data) |==> <NO-OP>
1017:STD:<CALL>:<NO-OP>:org.jsoup.nodes.DataNode@outerHtml(java.lang.StringBuilder):35:accum.append(getWholeData()) |==> <NO-OP>
1018:STD:<ASSIGN>:<NO-OP>:org.jsoup.nodes.Evaluator$Tag@<init>(java.lang.String):22:this.tagName = tagName |==> <NO-OP>
1019:STD:<ASSIGN>:<NO-OP>:org.jsoup.nodes.Evaluator$Id@<init>(java.lang.String):33:this.id = id |==> <NO-OP>
1020:STD:<ASSIGN>:<NO-OP>:org.jsoup.nodes.Evaluator$Class@<init>(java.lang.String):44:this.className = className |==> <NO-OP>
1021:STD:<ASSIGN>:<NO-OP>:org.jsoup.nodes.Evaluator$Attribute@<init>(java.lang.String):56:this.key = key |==> <NO-OP>
1022:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Evaluator$AttributeKeyPair@<init>(java.lang.String,java.lang.String):119:Validate.notEmpty(key) |==> <NO-OP>
1023:STD:<CALL>:<NO-OP>:org.jsoup.nodes.Evaluator$AttributeKeyPair@<init>(java.lang.String,java.lang.String):120:Validate.notEmpty(value) |==> <NO-OP>
1024:STD:<ASSIGN>:<NO-OP>:org.jsoup.nodes.Evaluator$AttributeKeyPair@<init>(java.lang.String,java.lang.String):122:this.key = key.trim().toLowerCase() |==> <NO-OP>
1025:STD:<ASSIGN>:<NO-OP>:org.jsoup.nodes.Evaluator$AttributeKeyPair@<init>(java.lang.String,java.lang.String):123:this.value = value.trim().toLowerCase() |==> <NO-OP>
1026:LVR:TRUE:FALSE:org.jsoup.nodes.Evaluator$AllElements@matches(org.jsoup.nodes.Element):129:true |==> false
1027:ROR:<(int,int):!=(int,int):org.jsoup.nodes.Evaluator$IndexLessThan@matches(org.jsoup.nodes.Element):139:element.elementSiblingIndex() < index |==> element.elementSiblingIndex() != index
1028:ROR:<(int,int):<=(int,int):org.jsoup.nodes.Evaluator$IndexLessThan@matches(org.jsoup.nodes.Element):139:element.elementSiblingIndex() < index |==> element.elementSiblingIndex() <= index
1029:ROR:<(int,int):FALSE(int,int):org.jsoup.nodes.Evaluator$IndexLessThan@matches(org.jsoup.nodes.Element):139:element.elementSiblingIndex() < index |==> false
1030:ROR:>(int,int):!=(int,int):org.jsoup.nodes.Evaluator$IndexGreaterThan@matches(org.jsoup.nodes.Element):149:element.elementSiblingIndex() > index |==> element.elementSiblingIndex() != index
1031:ROR:>(int,int):>=(int,int):org.jsoup.nodes.Evaluator$IndexGreaterThan@matches(org.jsoup.nodes.Element):149:element.elementSiblingIndex() > index |==> element.elementSiblingIndex() >= index
1032:ROR:>(int,int):FALSE(int,int):org.jsoup.nodes.Evaluator$IndexGreaterThan@matches(org.jsoup.nodes.Element):149:element.elementSiblingIndex() > index |==> false
1033:ROR:==(int,int):<=(int,int):org.jsoup.nodes.Evaluator$IndexEquals@matches(org.jsoup.nodes.Element):159:element.elementSiblingIndex() == index |==> element.elementSiblingIndex() <= index
1034:ROR:==(int,int):>=(int,int):org.jsoup.nodes.Evaluator$IndexEquals@matches(org.jsoup.nodes.Element):159:element.elementSiblingIndex() == index |==> element.elementSiblingIndex() >= index
1035:ROR:==(int,int):FALSE(int,int):org.jsoup.nodes.Evaluator$IndexEquals@matches(org.jsoup.nodes.Element):159:element.elementSiblingIndex() == index |==> false
1036:STD:<ASSIGN>:<NO-OP>:org.jsoup.nodes.Evaluator$IndexEvaluator@<init>(int):167:this.index = index |==> <NO-OP>
1037:STD:<CALL>:<NO-OP>:org.jsoup.nodes.TextNode@<init>(java.lang.String,java.lang.String):23:attributes.put(TEXT_KEY, text) |==> <NO-OP>
1038:STD:<CALL>:<NO-OP>:org.jsoup.nodes.TextNode@text(java.lang.String):45:attributes.put(TEXT_KEY, text) |==> <NO-OP>
1039:COR:&&(boolean,boolean):==(boolean,boolean):org.jsoup.nodes.TextNode@outerHtml(java.lang.StringBuilder):67:parent() instanceof Element && !((Element)parent()).preserveWhitespace() |==> parent() instanceof Element == !((Element)parent()).preserveWhitespace()
1040:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.jsoup.nodes.TextNode@outerHtml(java.lang.StringBuilder):67:parent() instanceof Element && !((Element)parent()).preserveWhitespace() |==> false
1041:COR:&&(boolean,boolean):LHS(boolean,boolean):org.jsoup.nodes.TextNode@outerHtml(java.lang.StringBuilder):67:parent() instanceof Element && !((Element)parent()).preserveWhitespace() |==> parent() instanceof Element
1042:COR:&&(boolean,boolean):RHS(boolean,boolean):org.jsoup.nodes.TextNode@outerHtml(java.lang.StringBuilder):67:parent() instanceof Element && !((Element)parent()).preserveWhitespace() |==> !((Element)parent()).preserveWhitespace()
1043:STD:<ASSIGN>:<NO-OP>:org.jsoup.nodes.TextNode@outerHtml(java.lang.StringBuilder):68:html = normaliseWhitespace(html) |==> <NO-OP>
1044:COR:&&(boolean,boolean):==(boolean,boolean):org.jsoup.nodes.TextNode@outerHtml(java.lang.StringBuilder):71:!isBlank() && parentNode instanceof Element |==> !isBlank() == parentNode instanceof Element
1045:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.jsoup.nodes.TextNode@outerHtml(java.lang.StringBuilder):71:!isBlank() && parentNode instanceof Element |==> false
1046:COR:&&(boolean,boolean):LHS(boolean,boolean):org.jsoup.nodes.TextNode@outerHtml(java.lang.StringBuilder):71:!isBlank() && parentNode instanceof Element |==> !isBlank()
1047:COR:&&(boolean,boolean):RHS(boolean,boolean):org.jsoup.nodes.TextNode@outerHtml(java.lang.StringBuilder):71:!isBlank() && parentNode instanceof Element |==> parentNode instanceof Element
1048:COR:&&(boolean,boolean):==(boolean,boolean):org.jsoup.nodes.TextNode@outerHtml(java.lang.StringBuilder):71:!isBlank() && parentNode instanceof Element && ((Element)parentNode).tag().canContainBlock() |==> (!isBlank() && parentNode instanceof Element) == ((Element)parentNode).tag().canContainBlock()
1049:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.jsoup.nodes.TextNode@outerHtml(java.lang.StringBuilder):71:!isBlank() && parentNode instanceof Element && ((Element)parentNode).tag().canContainBlock() |==> false
1050:COR:&&(boolean,boolean):LHS(boolean,boolean):org.jsoup.nodes.TextNode@outerHtml(java.lang.StringBuilder):71:!isBlank() && parentNode instanceof Element && ((Element)parentNode).tag().canContainBlock() |==> !isBlank() && parentNode instanceof Element
1051:COR:&&(boolean,boolean):RHS(boolean,boolean):org.jsoup.nodes.TextNode@outerHtml(java.lang.StringBuilder):71:!isBlank() && parentNode instanceof Element && ((Element)parentNode).tag().canContainBlock() |==> ((Element)parentNode).tag().canContainBlock()
1052:LVR:0:POS:org.jsoup.nodes.TextNode@outerHtml(java.lang.StringBuilder):71:0 |==> 1
1053:LVR:0:NEG:org.jsoup.nodes.TextNode@outerHtml(java.lang.StringBuilder):71:0 |==> -1
1054:ROR:==(int,int):<=(int,int):org.jsoup.nodes.TextNode@outerHtml(java.lang.StringBuilder):71:siblingIndex() == 0 |==> siblingIndex() <= 0
1055:ROR:==(int,int):>=(int,int):org.jsoup.nodes.TextNode@outerHtml(java.lang.StringBuilder):71:siblingIndex() == 0 |==> siblingIndex() >= 0
1056:ROR:==(int,int):FALSE(int,int):org.jsoup.nodes.TextNode@outerHtml(java.lang.StringBuilder):71:siblingIndex() == 0 |==> false
1057:COR:&&(boolean,boolean):==(boolean,boolean):org.jsoup.nodes.TextNode@outerHtml(java.lang.StringBuilder):71:!isBlank() && parentNode instanceof Element && ((Element)parentNode).tag().canContainBlock() && siblingIndex() == 0 |==> (!isBlank() && parentNode instanceof Element && ((Element)parentNode).tag().canContainBlock()) == (siblingIndex() == 0)
1058:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.jsoup.nodes.TextNode@outerHtml(java.lang.StringBuilder):71:!isBlank() && parentNode instanceof Element && ((Element)parentNode).tag().canContainBlock() && siblingIndex() == 0 |==> false
1059:COR:&&(boolean,boolean):LHS(boolean,boolean):org.jsoup.nodes.TextNode@outerHtml(java.lang.StringBuilder):71:!isBlank() && parentNode instanceof Element && ((Element)parentNode).tag().canContainBlock() && siblingIndex() == 0 |==> !isBlank() && parentNode instanceof Element && ((Element)parentNode).tag().canContainBlock()
1060:COR:&&(boolean,boolean):RHS(boolean,boolean):org.jsoup.nodes.TextNode@outerHtml(java.lang.StringBuilder):71:!isBlank() && parentNode instanceof Element && ((Element)parentNode).tag().canContainBlock() && siblingIndex() == 0 |==> siblingIndex() == 0
1061:STD:<CALL>:<NO-OP>:org.jsoup.nodes.TextNode@outerHtml(java.lang.StringBuilder):72:indent(accum) |==> <NO-OP>
1062:STD:<CALL>:<NO-OP>:org.jsoup.nodes.TextNode@outerHtml(java.lang.StringBuilder):73:accum.append(html) |==> <NO-OP>
1063:STD:<ASSIGN>:<NO-OP>:org.jsoup.nodes.TextNode@normaliseWhitespace(java.lang.String):91:text = text.replaceAll("\\s{2,}|(\\r\\n|\\r|\\n)", " ") |==> <NO-OP>
1064:LVR:0:POS:org.jsoup.nodes.TextNode@lastCharIsWhitespace(java.lang.StringBuilder):100:0 |==> 1
1065:LVR:0:NEG:org.jsoup.nodes.TextNode@lastCharIsWhitespace(java.lang.StringBuilder):100:0 |==> -1
1066:ROR:==(int,int):<=(int,int):org.jsoup.nodes.TextNode@lastCharIsWhitespace(java.lang.StringBuilder):100:sb.length() == 0 |==> sb.length() <= 0
1067:ROR:==(int,int):>=(int,int):org.jsoup.nodes.TextNode@lastCharIsWhitespace(java.lang.StringBuilder):100:sb.length() == 0 |==> sb.length() >= 0
1068:ROR:==(int,int):FALSE(int,int):org.jsoup.nodes.TextNode@lastCharIsWhitespace(java.lang.StringBuilder):100:sb.length() == 0 |==> false
1069:LVR:FALSE:TRUE:org.jsoup.nodes.TextNode@lastCharIsWhitespace(java.lang.StringBuilder):101:false |==> true
1070:LVR:POS:0:org.jsoup.nodes.TextNode@lastCharIsWhitespace(java.lang.StringBuilder):102:1 |==> 0
1071:LVR:POS:NEG:org.jsoup.nodes.TextNode@lastCharIsWhitespace(java.lang.StringBuilder):102:1 |==> -1
1072:AOR:-(int,int):%(int,int):org.jsoup.nodes.TextNode@lastCharIsWhitespace(java.lang.StringBuilder):102:sb.length() - 1 |==> sb.length() % 1
1073:AOR:-(int,int):*(int,int):org.jsoup.nodes.TextNode@lastCharIsWhitespace(java.lang.StringBuilder):102:sb.length() - 1 |==> sb.length() * 1
1074:AOR:-(int,int):+(int,int):org.jsoup.nodes.TextNode@lastCharIsWhitespace(java.lang.StringBuilder):102:sb.length() - 1 |==> sb.length() + 1
1075:AOR:-(int,int):/(int,int):org.jsoup.nodes.TextNode@lastCharIsWhitespace(java.lang.StringBuilder):102:sb.length() - 1 |==> sb.length() / 1
1076:LVR:POS:0:org.jsoup.nodes.TextNode@lastCharIsWhitespace(java.lang.StringBuilder):103:1 |==> 0
1077:LVR:POS:NEG:org.jsoup.nodes.TextNode@lastCharIsWhitespace(java.lang.StringBuilder):103:1 |==> -1
1078:ROR:==(int,int):<=(int,int):org.jsoup.nodes.TextNode@lastCharIsWhitespace(java.lang.StringBuilder):103:lastChar.length() == 1 |==> lastChar.length() <= 1
1079:ROR:==(int,int):>=(int,int):org.jsoup.nodes.TextNode@lastCharIsWhitespace(java.lang.StringBuilder):103:lastChar.length() == 1 |==> lastChar.length() >= 1
1080:ROR:==(int,int):FALSE(int,int):org.jsoup.nodes.TextNode@lastCharIsWhitespace(java.lang.StringBuilder):103:lastChar.length() == 1 |==> false
1081:STD:<CALL>:<NO-OP>:org.jsoup.nodes.TextNode@lastCharIsWhitespace(java.lang.StringBuilder):103:Validate.isTrue(lastChar.length() == 1) |==> <NO-OP>
1082:STD:<CALL>:<NO-OP>:org.jsoup.nodes.XmlDeclaration@<init>(java.lang.String,java.lang.String,boolean):19:attributes.put(DECL_KEY, data) |==> <NO-OP>
1083:COR:isProcessingInstruction:TRUE:org.jsoup.nodes.XmlDeclaration@outerHtml(java.lang.StringBuilder):36:isProcessingInstruction |==> false
1084:COR:isProcessingInstruction:FALSE:org.jsoup.nodes.XmlDeclaration@outerHtml(java.lang.StringBuilder):36:isProcessingInstruction |==> true
1085:STD:<CALL>:<NO-OP>:org.jsoup.nodes.XmlDeclaration@outerHtml(java.lang.StringBuilder):36:accum.append(String.format("<%s%s>", isProcessingInstruction ? "!" : "?", getWholeDeclaration())) |==> <NO-OP>
1086:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@<init>(java.lang.String,java.lang.String,boolean):28:Validate.notNull(html) |==> <NO-OP>
1087:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@<init>(java.lang.String,java.lang.String,boolean):29:Validate.notNull(baseUri) |==> <NO-OP>
1088:STD:<ASSIGN>:<NO-OP>:org.jsoup.parser.Parser@<init>(java.lang.String,java.lang.String,boolean):33:this.baseUri = baseUri |==> <NO-OP>
1089:COR:isBodyFragment:TRUE:org.jsoup.parser.Parser@<init>(java.lang.String,java.lang.String,boolean):35:isBodyFragment |==> false
1090:COR:isBodyFragment:FALSE:org.jsoup.parser.Parser@<init>(java.lang.String,java.lang.String,boolean):35:isBodyFragment |==> true
1091:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@<init>(java.lang.String,java.lang.String,boolean):37:stack.add(doc.body()) |==> <NO-OP>
1092:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@<init>(java.lang.String,java.lang.String,boolean):40:stack.add(doc) |==> <NO-OP>
1093:LVR:FALSE:TRUE:org.jsoup.parser.Parser@parse(java.lang.String,java.lang.String):51:false |==> true
1094:LVR:TRUE:FALSE:org.jsoup.parser.Parser@parseBodyFragment(java.lang.String,java.lang.String):62:true |==> false
1095:COR:tq.matches("<!--"):TRUE:org.jsoup.parser.Parser@parse():68:tq.matches("<!--") |==> false
1096:COR:tq.matches("<!--"):FALSE:org.jsoup.parser.Parser@parse():68:tq.matches("<!--") |==> true
1097:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@parse():69:parseComment() |==> <NO-OP>
1098:COR:tq.matches("<![CDATA["):TRUE:org.jsoup.parser.Parser@parse():70:tq.matches("<![CDATA[") |==> false
1099:COR:tq.matches("<![CDATA["):FALSE:org.jsoup.parser.Parser@parse():70:tq.matches("<![CDATA[") |==> true
1100:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@parse():71:parseCdata() |==> <NO-OP>
1101:COR:||(boolean,boolean):!=(boolean,boolean):org.jsoup.parser.Parser@parse():72:tq.matches("<?") || tq.matches("<!") |==> tq.matches("<?") != tq.matches("<!")
1102:COR:||(boolean,boolean):LHS(boolean,boolean):org.jsoup.parser.Parser@parse():72:tq.matches("<?") || tq.matches("<!") |==> tq.matches("<?")
1103:COR:||(boolean,boolean):RHS(boolean,boolean):org.jsoup.parser.Parser@parse():72:tq.matches("<?") || tq.matches("<!") |==> tq.matches("<!")
1104:COR:||(boolean,boolean):TRUE(boolean,boolean):org.jsoup.parser.Parser@parse():72:tq.matches("<?") || tq.matches("<!") |==> true
1105:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@parse():73:parseXmlDecl() |==> <NO-OP>
1106:COR:tq.matches("</"):TRUE:org.jsoup.parser.Parser@parse():74:tq.matches("</") |==> false
1107:COR:tq.matches("</"):FALSE:org.jsoup.parser.Parser@parse():74:tq.matches("</") |==> true
1108:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@parse():75:parseEndTag() |==> <NO-OP>
1109:COR:tq.matches("<"):TRUE:org.jsoup.parser.Parser@parse():76:tq.matches("<") |==> false
1110:COR:tq.matches("<"):FALSE:org.jsoup.parser.Parser@parse():76:tq.matches("<") |==> true
1111:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@parse():77:parseStartTag() |==> <NO-OP>
1112:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@parse():79:parseTextNode() |==> <NO-OP>
1113:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@parseComment():86:tq.consume("<!--") |==> <NO-OP>
1114:COR:data.endsWith("-"):TRUE:org.jsoup.parser.Parser@parseComment():89:data.endsWith("-") |==> false
1115:COR:data.endsWith("-"):FALSE:org.jsoup.parser.Parser@parseComment():89:data.endsWith("-") |==> true
1116:LVR:0:POS:org.jsoup.parser.Parser@parseComment():90:0 |==> 1
1117:LVR:0:NEG:org.jsoup.parser.Parser@parseComment():90:0 |==> -1
1118:LVR:POS:0:org.jsoup.parser.Parser@parseComment():90:1 |==> 0
1119:LVR:POS:NEG:org.jsoup.parser.Parser@parseComment():90:1 |==> -1
1120:AOR:-(int,int):%(int,int):org.jsoup.parser.Parser@parseComment():90:data.length() - 1 |==> data.length() % 1
1121:AOR:-(int,int):*(int,int):org.jsoup.parser.Parser@parseComment():90:data.length() - 1 |==> data.length() * 1
1122:AOR:-(int,int):+(int,int):org.jsoup.parser.Parser@parseComment():90:data.length() - 1 |==> data.length() + 1
1123:AOR:-(int,int):/(int,int):org.jsoup.parser.Parser@parseComment():90:data.length() - 1 |==> data.length() / 1
1124:STD:<ASSIGN>:<NO-OP>:org.jsoup.parser.Parser@parseComment():90:data = data.substring(0, data.length() - 1) |==> <NO-OP>
1125:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@parseComment():92:last().appendChild(comment) |==> <NO-OP>
1126:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@parseXmlDecl():96:tq.consume("<") |==> <NO-OP>
1127:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@parseXmlDecl():102:last().appendChild(decl) |==> <NO-OP>
1128:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@parseEndTag():106:tq.consume("</") |==> <NO-OP>
1129:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@parseEndTag():108:tq.chompTo(">") |==> <NO-OP>
1130:LVR:0:POS:org.jsoup.parser.Parser@parseEndTag():110:0 |==> 1
1131:LVR:0:NEG:org.jsoup.parser.Parser@parseEndTag():110:0 |==> -1
1132:ROR:!=(int,int):<(int,int):org.jsoup.parser.Parser@parseEndTag():110:tagName.length() != 0 |==> tagName.length() < 0
1133:ROR:!=(int,int):>(int,int):org.jsoup.parser.Parser@parseEndTag():110:tagName.length() != 0 |==> tagName.length() > 0
1134:ROR:!=(int,int):TRUE(int,int):org.jsoup.parser.Parser@parseEndTag():110:tagName.length() != 0 |==> true
1135:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@parseEndTag():112:popStackToClose(tag) |==> <NO-OP>
1136:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@parseStartTag():117:tq.consume("<") |==> <NO-OP>
1137:LVR:0:POS:org.jsoup.parser.Parser@parseStartTag():120:0 |==> 1
1138:LVR:0:NEG:org.jsoup.parser.Parser@parseStartTag():120:0 |==> -1
1139:ROR:==(int,int):<=(int,int):org.jsoup.parser.Parser@parseStartTag():120:tagName.length() == 0 |==> tagName.length() <= 0
1140:ROR:==(int,int):>=(int,int):org.jsoup.parser.Parser@parseStartTag():120:tagName.length() == 0 |==> tagName.length() >= 0
1141:ROR:==(int,int):FALSE(int,int):org.jsoup.parser.Parser@parseStartTag():120:tagName.length() == 0 |==> false
1142:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@parseStartTag():121:tq.addFirst("&lt;") |==> <NO-OP>
1143:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@parseStartTag():122:parseTextNode() |==> <NO-OP>
1144:COR:&&(boolean,boolean):==(boolean,boolean):org.jsoup.parser.Parser@parseStartTag():127:!tq.matchesAny("<", "/>", ">") && !tq.isEmpty() |==> !tq.matchesAny("<", "/>", ">") == !tq.isEmpty()
1145:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.jsoup.parser.Parser@parseStartTag():127:!tq.matchesAny("<", "/>", ">") && !tq.isEmpty() |==> false
1146:COR:&&(boolean,boolean):LHS(boolean,boolean):org.jsoup.parser.Parser@parseStartTag():127:!tq.matchesAny("<", "/>", ">") && !tq.isEmpty() |==> !tq.matchesAny("<", "/>", ">")
1147:COR:&&(boolean,boolean):RHS(boolean,boolean):org.jsoup.parser.Parser@parseStartTag():127:!tq.matchesAny("<", "/>", ">") && !tq.isEmpty() |==> !tq.isEmpty()
1148:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.jsoup.parser.Parser@parseStartTag():129:attribute != null |==> true
1149:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@parseStartTag():130:attributes.put(attribute) |==> <NO-OP>
1150:COR:tq.matchChomp("/>"):TRUE:org.jsoup.parser.Parser@parseStartTag():137:tq.matchChomp("/>") |==> false
1151:COR:tq.matchChomp("/>"):FALSE:org.jsoup.parser.Parser@parseStartTag():137:tq.matchChomp("/>") |==> true
1152:LVR:TRUE:FALSE:org.jsoup.parser.Parser@parseStartTag():138:true |==> false
1153:STD:<ASSIGN>:<NO-OP>:org.jsoup.parser.Parser@parseStartTag():138:isEmptyElement = true |==> <NO-OP>
1154:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@parseStartTag():140:tq.matchChomp(">") |==> <NO-OP>
1155:COR:tag.isData():TRUE:org.jsoup.parser.Parser@parseStartTag():144:tag.isData() |==> false
1156:COR:tag.isData():FALSE:org.jsoup.parser.Parser@parseStartTag():144:tag.isData() |==> true
1157:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@parseStartTag():146:tq.chompTo(">") |==> <NO-OP>
1158:COR:||(boolean,boolean):!=(boolean,boolean):org.jsoup.parser.Parser@parseStartTag():149:tag.equals(titleTag) || tag.equals(textareaTag) |==> tag.equals(titleTag) != tag.equals(textareaTag)
1159:COR:||(boolean,boolean):LHS(boolean,boolean):org.jsoup.parser.Parser@parseStartTag():149:tag.equals(titleTag) || tag.equals(textareaTag) |==> tag.equals(titleTag)
1160:COR:||(boolean,boolean):RHS(boolean,boolean):org.jsoup.parser.Parser@parseStartTag():149:tag.equals(titleTag) || tag.equals(textareaTag) |==> tag.equals(textareaTag)
1161:COR:||(boolean,boolean):TRUE(boolean,boolean):org.jsoup.parser.Parser@parseStartTag():149:tag.equals(titleTag) || tag.equals(textareaTag) |==> true
1162:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@parseStartTag():153:child.appendChild(dataNode) |==> <NO-OP>
1163:COR:child.tagName().equals("base"):TRUE:org.jsoup.parser.Parser@parseStartTag():157:child.tagName().equals("base") |==> false
1164:COR:child.tagName().equals("base"):FALSE:org.jsoup.parser.Parser@parseStartTag():157:child.tagName().equals("base") |==> true
1165:LVR:0:POS:org.jsoup.parser.Parser@parseStartTag():159:0 |==> 1
1166:LVR:0:NEG:org.jsoup.parser.Parser@parseStartTag():159:0 |==> -1
1167:ROR:!=(int,int):<(int,int):org.jsoup.parser.Parser@parseStartTag():159:href.length() != 0 |==> href.length() < 0
1168:ROR:!=(int,int):>(int,int):org.jsoup.parser.Parser@parseStartTag():159:href.length() != 0 |==> href.length() > 0
1169:ROR:!=(int,int):TRUE(int,int):org.jsoup.parser.Parser@parseStartTag():159:href.length() != 0 |==> true
1170:STD:<ASSIGN>:<NO-OP>:org.jsoup.parser.Parser@parseStartTag():160:baseUri = href |==> <NO-OP>
1171:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@parseStartTag():161:doc.setBaseUri(href) |==> <NO-OP>
1172:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@parseStartTag():165:addChildToParent(child, isEmptyElement) |==> <NO-OP>
1173:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@parseAttribute():169:tq.consumeWhitespace() |==> <NO-OP>
1174:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@parseAttribute():172:tq.consumeWhitespace() |==> <NO-OP>
1175:COR:tq.matchChomp("="):TRUE:org.jsoup.parser.Parser@parseAttribute():173:tq.matchChomp("=") |==> false
1176:COR:tq.matchChomp("="):FALSE:org.jsoup.parser.Parser@parseAttribute():173:tq.matchChomp("=") |==> true
1177:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@parseAttribute():174:tq.consumeWhitespace() |==> <NO-OP>
1178:COR:tq.matchChomp(SQ):TRUE:org.jsoup.parser.Parser@parseAttribute():176:tq.matchChomp(SQ) |==> false
1179:COR:tq.matchChomp(SQ):FALSE:org.jsoup.parser.Parser@parseAttribute():176:tq.matchChomp(SQ) |==> true
1180:STD:<ASSIGN>:<NO-OP>:org.jsoup.parser.Parser@parseAttribute():177:value = tq.chompTo(SQ) |==> <NO-OP>
1181:COR:tq.matchChomp(DQ):TRUE:org.jsoup.parser.Parser@parseAttribute():178:tq.matchChomp(DQ) |==> false
1182:COR:tq.matchChomp(DQ):FALSE:org.jsoup.parser.Parser@parseAttribute():178:tq.matchChomp(DQ) |==> true
1183:STD:<ASSIGN>:<NO-OP>:org.jsoup.parser.Parser@parseAttribute():179:value = tq.chompTo(DQ) |==> <NO-OP>
1184:COR:&&(boolean,boolean):==(boolean,boolean):org.jsoup.parser.Parser@parseAttribute():183:!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() |==> !tq.matchesAny("<", "/>", ">") == !tq.matchesWhitespace()
1185:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.jsoup.parser.Parser@parseAttribute():183:!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() |==> false
1186:COR:&&(boolean,boolean):LHS(boolean,boolean):org.jsoup.parser.Parser@parseAttribute():183:!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() |==> !tq.matchesAny("<", "/>", ">")
1187:COR:&&(boolean,boolean):RHS(boolean,boolean):org.jsoup.parser.Parser@parseAttribute():183:!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() |==> !tq.matchesWhitespace()
1188:COR:&&(boolean,boolean):==(boolean,boolean):org.jsoup.parser.Parser@parseAttribute():183:!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty() |==> (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace()) == !tq.isEmpty()
1189:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.jsoup.parser.Parser@parseAttribute():183:!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty() |==> false
1190:COR:&&(boolean,boolean):LHS(boolean,boolean):org.jsoup.parser.Parser@parseAttribute():183:!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty() |==> !tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace()
1191:COR:&&(boolean,boolean):RHS(boolean,boolean):org.jsoup.parser.Parser@parseAttribute():183:!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty() |==> !tq.isEmpty()
1192:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@parseAttribute():184:valueAccum.append(tq.consume()) |==> <NO-OP>
1193:STD:<ASSIGN>:<NO-OP>:org.jsoup.parser.Parser@parseAttribute():186:value = valueAccum.toString() |==> <NO-OP>
1194:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@parseAttribute():188:tq.consumeWhitespace() |==> <NO-OP>
1195:LVR:0:POS:org.jsoup.parser.Parser@parseAttribute():190:0 |==> 1
1196:LVR:0:NEG:org.jsoup.parser.Parser@parseAttribute():190:0 |==> -1
1197:ROR:!=(int,int):<(int,int):org.jsoup.parser.Parser@parseAttribute():190:key.length() != 0 |==> key.length() < 0
1198:ROR:!=(int,int):>(int,int):org.jsoup.parser.Parser@parseAttribute():190:key.length() != 0 |==> key.length() > 0
1199:ROR:!=(int,int):TRUE(int,int):org.jsoup.parser.Parser@parseAttribute():190:key.length() != 0 |==> true
1200:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@parseAttribute():193:tq.consume() |==> <NO-OP>
1201:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@parseTextNode():201:last().appendChild(textNode) |==> <NO-OP>
1202:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@parseCdata():205:tq.consume("<![CDATA[") |==> <NO-OP>
1203:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@parseCdata():208:last().appendChild(textNode) |==> <NO-OP>
1204:COR:validAncestor:TRUE:org.jsoup.parser.Parser@addChildToParent(org.jsoup.nodes.Element,boolean):216:validAncestor |==> false
1205:COR:validAncestor:FALSE:org.jsoup.parser.Parser@addChildToParent(org.jsoup.nodes.Element,boolean):216:validAncestor |==> true
1206:COR:child.tag().equals(bodyTag):TRUE:org.jsoup.parser.Parser@addChildToParent(org.jsoup.nodes.Element,boolean):221:child.tag().equals(bodyTag) |==> false
1207:COR:child.tag().equals(bodyTag):FALSE:org.jsoup.parser.Parser@addChildToParent(org.jsoup.nodes.Element,boolean):221:child.tag().equals(bodyTag) |==> true
1208:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@addChildToParent(org.jsoup.nodes.Element,boolean):223:implicit.appendChild(head) |==> <NO-OP>
1209:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@addChildToParent(org.jsoup.nodes.Element,boolean):225:implicit.appendChild(child) |==> <NO-OP>
1210:LVR:FALSE:TRUE:org.jsoup.parser.Parser@addChildToParent(org.jsoup.nodes.Element,boolean):228:false |==> true
1211:COR:isEmptyElement:TRUE:org.jsoup.parser.Parser@addChildToParent(org.jsoup.nodes.Element,boolean):229:isEmptyElement |==> false
1212:COR:isEmptyElement:FALSE:org.jsoup.parser.Parser@addChildToParent(org.jsoup.nodes.Element,boolean):229:isEmptyElement |==> true
1213:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@addChildToParent(org.jsoup.nodes.Element,boolean):230:stack.addLast(child) |==> <NO-OP>
1214:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@addChildToParent(org.jsoup.nodes.Element,boolean):234:parent.appendChild(child) |==> <NO-OP>
1215:COR:isEmptyElement:TRUE:org.jsoup.parser.Parser@addChildToParent(org.jsoup.nodes.Element,boolean):236:isEmptyElement |==> false
1216:COR:isEmptyElement:FALSE:org.jsoup.parser.Parser@addChildToParent(org.jsoup.nodes.Element,boolean):236:isEmptyElement |==> true
1217:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@addChildToParent(org.jsoup.nodes.Element,boolean):237:stack.addLast(child) |==> <NO-OP>
1218:LVR:POS:0:org.jsoup.parser.Parser@stackHasValidParent(org.jsoup.parser.Tag):242:1 |==> 0
1219:LVR:POS:NEG:org.jsoup.parser.Parser@stackHasValidParent(org.jsoup.parser.Tag):242:1 |==> -1
1220:ROR:==(int,int):<=(int,int):org.jsoup.parser.Parser@stackHasValidParent(org.jsoup.parser.Tag):242:stack.size() == 1 |==> stack.size() <= 1
1221:ROR:==(int,int):>=(int,int):org.jsoup.parser.Parser@stackHasValidParent(org.jsoup.parser.Tag):242:stack.size() == 1 |==> stack.size() >= 1
1222:ROR:==(int,int):FALSE(int,int):org.jsoup.parser.Parser@stackHasValidParent(org.jsoup.parser.Tag):242:stack.size() == 1 |==> false
1223:COR:&&(boolean,boolean):==(boolean,boolean):org.jsoup.parser.Parser@stackHasValidParent(org.jsoup.parser.Tag):242:stack.size() == 1 && childTag.equals(htmlTag) |==> stack.size() == 1 == childTag.equals(htmlTag)
1224:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.jsoup.parser.Parser@stackHasValidParent(org.jsoup.parser.Tag):242:stack.size() == 1 && childTag.equals(htmlTag) |==> false
1225:COR:&&(boolean,boolean):LHS(boolean,boolean):org.jsoup.parser.Parser@stackHasValidParent(org.jsoup.parser.Tag):242:stack.size() == 1 && childTag.equals(htmlTag) |==> stack.size() == 1
1226:COR:&&(boolean,boolean):RHS(boolean,boolean):org.jsoup.parser.Parser@stackHasValidParent(org.jsoup.parser.Tag):242:stack.size() == 1 && childTag.equals(htmlTag) |==> childTag.equals(htmlTag)
1227:LVR:TRUE:FALSE:org.jsoup.parser.Parser@stackHasValidParent(org.jsoup.parser.Tag):243:true |==> false
1228:LVR:POS:0:org.jsoup.parser.Parser@stackHasValidParent(org.jsoup.parser.Tag):245:1 |==> 0
1229:LVR:POS:NEG:org.jsoup.parser.Parser@stackHasValidParent(org.jsoup.parser.Tag):245:1 |==> -1
1230:AOR:-(int,int):%(int,int):org.jsoup.parser.Parser@stackHasValidParent(org.jsoup.parser.Tag):245:stack.size() - 1 |==> stack.size() % 1
1231:AOR:-(int,int):*(int,int):org.jsoup.parser.Parser@stackHasValidParent(org.jsoup.parser.Tag):245:stack.size() - 1 |==> stack.size() * 1
1232:AOR:-(int,int):+(int,int):org.jsoup.parser.Parser@stackHasValidParent(org.jsoup.parser.Tag):245:stack.size() - 1 |==> stack.size() + 1
1233:AOR:-(int,int):/(int,int):org.jsoup.parser.Parser@stackHasValidParent(org.jsoup.parser.Tag):245:stack.size() - 1 |==> stack.size() / 1
1234:LVR:0:POS:org.jsoup.parser.Parser@stackHasValidParent(org.jsoup.parser.Tag):245:0 |==> 1
1235:LVR:0:NEG:org.jsoup.parser.Parser@stackHasValidParent(org.jsoup.parser.Tag):245:0 |==> -1
1236:ROR:>=(int,int):==(int,int):org.jsoup.parser.Parser@stackHasValidParent(org.jsoup.parser.Tag):245:i >= 0 |==> i == 0
1237:ROR:>=(int,int):>(int,int):org.jsoup.parser.Parser@stackHasValidParent(org.jsoup.parser.Tag):245:i >= 0 |==> i > 0
1238:ROR:>=(int,int):TRUE(int,int):org.jsoup.parser.Parser@stackHasValidParent(org.jsoup.parser.Tag):245:i >= 0 |==> true
1239:COR:parent2.isValidParent(childTag):TRUE:org.jsoup.parser.Parser@stackHasValidParent(org.jsoup.parser.Tag):248:parent2.isValidParent(childTag) |==> false
1240:COR:parent2.isValidParent(childTag):FALSE:org.jsoup.parser.Parser@stackHasValidParent(org.jsoup.parser.Tag):248:parent2.isValidParent(childTag) |==> true
1241:LVR:TRUE:FALSE:org.jsoup.parser.Parser@stackHasValidParent(org.jsoup.parser.Tag):249:true |==> false
1242:LVR:FALSE:TRUE:org.jsoup.parser.Parser@stackHasValidParent(org.jsoup.parser.Tag):252:false |==> true
1243:COR:last().tag().canContain(tag):TRUE:org.jsoup.parser.Parser@popStackToSuitableContainer(org.jsoup.parser.Tag):257:last().tag().canContain(tag) |==> false
1244:COR:last().tag().canContain(tag):FALSE:org.jsoup.parser.Parser@popStackToSuitableContainer(org.jsoup.parser.Tag):257:last().tag().canContain(tag) |==> true
1245:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@popStackToSuitableContainer(org.jsoup.parser.Tag):260:stack.removeLast() |==> <NO-OP>
1246:LVR:0:POS:org.jsoup.parser.Parser@popStackToClose(org.jsoup.parser.Tag):267:0 |==> 1
1247:LVR:0:NEG:org.jsoup.parser.Parser@popStackToClose(org.jsoup.parser.Tag):267:0 |==> -1
1248:LVR:POS:0:org.jsoup.parser.Parser@popStackToClose(org.jsoup.parser.Tag):269:1 |==> 0
1249:LVR:POS:NEG:org.jsoup.parser.Parser@popStackToClose(org.jsoup.parser.Tag):269:1 |==> -1
1250:AOR:-(int,int):%(int,int):org.jsoup.parser.Parser@popStackToClose(org.jsoup.parser.Tag):269:stack.size() - 1 |==> stack.size() % 1
1251:AOR:-(int,int):*(int,int):org.jsoup.parser.Parser@popStackToClose(org.jsoup.parser.Tag):269:stack.size() - 1 |==> stack.size() * 1
1252:AOR:-(int,int):+(int,int):org.jsoup.parser.Parser@popStackToClose(org.jsoup.parser.Tag):269:stack.size() - 1 |==> stack.size() + 1
1253:AOR:-(int,int):/(int,int):org.jsoup.parser.Parser@popStackToClose(org.jsoup.parser.Tag):269:stack.size() - 1 |==> stack.size() / 1
1254:LVR:0:POS:org.jsoup.parser.Parser@popStackToClose(org.jsoup.parser.Tag):269:0 |==> 1
1255:LVR:0:NEG:org.jsoup.parser.Parser@popStackToClose(org.jsoup.parser.Tag):269:0 |==> -1
1256:ROR:>(int,int):!=(int,int):org.jsoup.parser.Parser@popStackToClose(org.jsoup.parser.Tag):269:i > 0 |==> i != 0
1257:ROR:>(int,int):>=(int,int):org.jsoup.parser.Parser@popStackToClose(org.jsoup.parser.Tag):269:i > 0 |==> i >= 0
1258:ROR:>(int,int):FALSE(int,int):org.jsoup.parser.Parser@popStackToClose(org.jsoup.parser.Tag):269:i > 0 |==> false
1259:STD:<INC>:<NO-OP>:org.jsoup.parser.Parser@popStackToClose(org.jsoup.parser.Tag):270:counter++ |==> <NO-OP>
1260:COR:||(boolean,boolean):!=(boolean,boolean):org.jsoup.parser.Parser@popStackToClose(org.jsoup.parser.Tag):273:elTag.equals(bodyTag) || elTag.equals(htmlTag) |==> elTag.equals(bodyTag) != elTag.equals(htmlTag)
1261:COR:||(boolean,boolean):LHS(boolean,boolean):org.jsoup.parser.Parser@popStackToClose(org.jsoup.parser.Tag):273:elTag.equals(bodyTag) || elTag.equals(htmlTag) |==> elTag.equals(bodyTag)
1262:COR:||(boolean,boolean):RHS(boolean,boolean):org.jsoup.parser.Parser@popStackToClose(org.jsoup.parser.Tag):273:elTag.equals(bodyTag) || elTag.equals(htmlTag) |==> elTag.equals(htmlTag)
1263:COR:||(boolean,boolean):TRUE(boolean,boolean):org.jsoup.parser.Parser@popStackToClose(org.jsoup.parser.Tag):273:elTag.equals(bodyTag) || elTag.equals(htmlTag) |==> true
1264:COR:elTag.equals(tag):TRUE:org.jsoup.parser.Parser@popStackToClose(org.jsoup.parser.Tag):275:elTag.equals(tag) |==> false
1265:COR:elTag.equals(tag):FALSE:org.jsoup.parser.Parser@popStackToClose(org.jsoup.parser.Tag):275:elTag.equals(tag) |==> true
1266:STD:<ASSIGN>:<NO-OP>:org.jsoup.parser.Parser@popStackToClose(org.jsoup.parser.Tag):276:elToClose = el |==> <NO-OP>
1267:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.jsoup.parser.Parser@popStackToClose(org.jsoup.parser.Tag):280:elToClose != null |==> true
1268:LVR:0:POS:org.jsoup.parser.Parser@popStackToClose(org.jsoup.parser.Tag):281:0 |==> 1
1269:LVR:0:NEG:org.jsoup.parser.Parser@popStackToClose(org.jsoup.parser.Tag):281:0 |==> -1
1270:ROR:<(int,int):!=(int,int):org.jsoup.parser.Parser@popStackToClose(org.jsoup.parser.Tag):281:i < counter |==> i != counter
1271:ROR:<(int,int):<=(int,int):org.jsoup.parser.Parser@popStackToClose(org.jsoup.parser.Tag):281:i < counter |==> i <= counter
1272:ROR:<(int,int):FALSE(int,int):org.jsoup.parser.Parser@popStackToClose(org.jsoup.parser.Tag):281:i < counter |==> false
1273:STD:<CALL>:<NO-OP>:org.jsoup.parser.Parser@popStackToClose(org.jsoup.parser.Tag):282:stack.removeLast() |==> <NO-OP>
1274:STD:<CALL>:<NO-OP>:org.jsoup.parser.TokenQueue@<init>(java.lang.String):21:Validate.notNull(data) |==> <NO-OP>
1275:STD:<ASSIGN>:<NO-OP>:org.jsoup.parser.TokenQueue@<init>(java.lang.String):23:queue = new LinkedList<Character>() |==> <NO-OP>
1276:STD:<CALL>:<NO-OP>:org.jsoup.parser.TokenQueue@<init>(java.lang.String):26:queue.add(c) |==> <NO-OP>
1277:STD:<CALL>:<NO-OP>:org.jsoup.parser.TokenQueue@addFirst(java.lang.Character):51:queue.addFirst(c) |==> <NO-OP>
1278:LVR:POS:0:org.jsoup.parser.TokenQueue@addFirst(java.lang.String):60:1 |==> 0
1279:LVR:POS:NEG:org.jsoup.parser.TokenQueue@addFirst(java.lang.String):60:1 |==> -1
1280:AOR:-(int,int):%(int,int):org.jsoup.parser.TokenQueue@addFirst(java.lang.String):60:chars.length - 1 |==> chars.length % 1
1281:AOR:-(int,int):*(int,int):org.jsoup.parser.TokenQueue@addFirst(java.lang.String):60:chars.length - 1 |==> chars.length * 1
1282:AOR:-(int,int):+(int,int):org.jsoup.parser.TokenQueue@addFirst(java.lang.String):60:chars.length - 1 |==> chars.length + 1
1283:AOR:-(int,int):/(int,int):org.jsoup.parser.TokenQueue@addFirst(java.lang.String):60:chars.length - 1 |==> chars.length / 1
1284:LVR:0:POS:org.jsoup.parser.TokenQueue@addFirst(java.lang.String):60:0 |==> 1
1285:LVR:0:NEG:org.jsoup.parser.TokenQueue@addFirst(java.lang.String):60:0 |==> -1
1286:ROR:>=(int,int):==(int,int):org.jsoup.parser.TokenQueue@addFirst(java.lang.String):60:i >= 0 |==> i == 0
1287:ROR:>=(int,int):>(int,int):org.jsoup.parser.TokenQueue@addFirst(java.lang.String):60:i >= 0 |==> i > 0
1288:ROR:>=(int,int):TRUE(int,int):org.jsoup.parser.TokenQueue@addFirst(java.lang.String):60:i >= 0 |==> true
1289:STD:<CALL>:<NO-OP>:org.jsoup.parser.TokenQueue@addFirst(java.lang.String):61:addFirst(chars[i]) |==> <NO-OP>
1290:ROR:>(int,int):!=(int,int):org.jsoup.parser.TokenQueue@matches(java.lang.String):72:len > queue.size() |==> len != queue.size()
1291:ROR:>(int,int):>=(int,int):org.jsoup.parser.TokenQueue@matches(java.lang.String):72:len > queue.size() |==> len >= queue.size()
1292:ROR:>(int,int):FALSE(int,int):org.jsoup.parser.TokenQueue@matches(java.lang.String):72:len > queue.size() |==> false
1293:LVR:FALSE:TRUE:org.jsoup.parser.TokenQueue@matches(java.lang.String):73:false |==> true
1294:LVR:0:POS:org.jsoup.parser.TokenQueue@matches(java.lang.String):74:0 |==> 1
1295:LVR:0:NEG:org.jsoup.parser.TokenQueue@matches(java.lang.String):74:0 |==> -1
1296:LVR:0:POS:org.jsoup.parser.TokenQueue@matches(java.lang.String):76:0 |==> 1
1297:LVR:0:NEG:org.jsoup.parser.TokenQueue@matches(java.lang.String):76:0 |==> -1
1298:ROR:<(int,int):!=(int,int):org.jsoup.parser.TokenQueue@matches(java.lang.String):76:i < len |==> i != len
1299:ROR:<(int,int):<=(int,int):org.jsoup.parser.TokenQueue@matches(java.lang.String):76:i < len |==> i <= len
1300:ROR:<(int,int):FALSE(int,int):org.jsoup.parser.TokenQueue@matches(java.lang.String):76:i < len |==> false
1301:COR:found.equals(check):TRUE:org.jsoup.parser.TokenQueue@matches(java.lang.String):79:found.equals(check) |==> false
1302:COR:found.equals(check):FALSE:org.jsoup.parser.TokenQueue@matches(java.lang.String):79:found.equals(check) |==> true
1303:LVR:FALSE:TRUE:org.jsoup.parser.TokenQueue@matches(java.lang.String):80:false |==> true
1304:LVR:TRUE:FALSE:org.jsoup.parser.TokenQueue@matches(java.lang.String):82:true |==> false
1305:COR:matches(s):TRUE:org.jsoup.parser.TokenQueue@matchesAny(java.lang.String[]):92:matches(s) |==> false
1306:COR:matches(s):FALSE:org.jsoup.parser.TokenQueue@matchesAny(java.lang.String[]):92:matches(s) |==> true
1307:LVR:TRUE:FALSE:org.jsoup.parser.TokenQueue@matchesAny(java.lang.String[]):93:true |==> false
1308:LVR:FALSE:TRUE:org.jsoup.parser.TokenQueue@matchesAny(java.lang.String[]):95:false |==> true
1309:COR:matches(seq):TRUE:org.jsoup.parser.TokenQueue@matchChomp(java.lang.String):105:matches(seq) |==> false
1310:COR:matches(seq):FALSE:org.jsoup.parser.TokenQueue@matchChomp(java.lang.String):105:matches(seq) |==> true
1311:STD:<CALL>:<NO-OP>:org.jsoup.parser.TokenQueue@matchChomp(java.lang.String):106:consume(seq) |==> <NO-OP>
1312:LVR:TRUE:FALSE:org.jsoup.parser.TokenQueue@matchChomp(java.lang.String):107:true |==> false
1313:LVR:FALSE:TRUE:org.jsoup.parser.TokenQueue@matchChomp(java.lang.String):109:false |==> true
1314:COR:&&(boolean,boolean):==(boolean,boolean):org.jsoup.parser.TokenQueue@matchesWhitespace():118:!queue.isEmpty() && Character.isWhitespace(queue.peek()) |==> !queue.isEmpty() == Character.isWhitespace(queue.peek())
1315:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.jsoup.parser.TokenQueue@matchesWhitespace():118:!queue.isEmpty() && Character.isWhitespace(queue.peek()) |==> false
1316:COR:&&(boolean,boolean):LHS(boolean,boolean):org.jsoup.parser.TokenQueue@matchesWhitespace():118:!queue.isEmpty() && Character.isWhitespace(queue.peek()) |==> !queue.isEmpty()
1317:COR:&&(boolean,boolean):RHS(boolean,boolean):org.jsoup.parser.TokenQueue@matchesWhitespace():118:!queue.isEmpty() && Character.isWhitespace(queue.peek()) |==> Character.isWhitespace(queue.peek())
1318:COR:&&(boolean,boolean):==(boolean,boolean):org.jsoup.parser.TokenQueue@matchesWord():126:!queue.isEmpty() && Character.isLetterOrDigit(queue.peek()) |==> !queue.isEmpty() == Character.isLetterOrDigit(queue.peek())
1319:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.jsoup.parser.TokenQueue@matchesWord():126:!queue.isEmpty() && Character.isLetterOrDigit(queue.peek()) |==> false
1320:COR:&&(boolean,boolean):LHS(boolean,boolean):org.jsoup.parser.TokenQueue@matchesWord():126:!queue.isEmpty() && Character.isLetterOrDigit(queue.peek()) |==> !queue.isEmpty()
1321:COR:&&(boolean,boolean):RHS(boolean,boolean):org.jsoup.parser.TokenQueue@matchesWord():126:!queue.isEmpty() && Character.isLetterOrDigit(queue.peek()) |==> Character.isLetterOrDigit(queue.peek())
1322:COR:matches(seq):TRUE:org.jsoup.parser.TokenQueue@consume(java.lang.String):145:matches(seq) |==> false
1323:COR:matches(seq):FALSE:org.jsoup.parser.TokenQueue@consume(java.lang.String):145:matches(seq) |==> true
1324:ROR:>(int,int):!=(int,int):org.jsoup.parser.TokenQueue@consume(java.lang.String):148:len > queue.size() |==> len != queue.size()
1325:ROR:>(int,int):>=(int,int):org.jsoup.parser.TokenQueue@consume(java.lang.String):148:len > queue.size() |==> len >= queue.size()
1326:ROR:>(int,int):FALSE(int,int):org.jsoup.parser.TokenQueue@consume(java.lang.String):148:len > queue.size() |==> false
1327:LVR:0:POS:org.jsoup.parser.TokenQueue@consume(java.lang.String):150:0 |==> 1
1328:LVR:0:NEG:org.jsoup.parser.TokenQueue@consume(java.lang.String):150:0 |==> -1
1329:ROR:<(int,int):!=(int,int):org.jsoup.parser.TokenQueue@consume(java.lang.String):150:i < len |==> i != len
1330:ROR:<(int,int):<=(int,int):org.jsoup.parser.TokenQueue@consume(java.lang.String):150:i < len |==> i <= len
1331:ROR:<(int,int):FALSE(int,int):org.jsoup.parser.TokenQueue@consume(java.lang.String):150:i < len |==> false
1332:STD:<CALL>:<NO-OP>:org.jsoup.parser.TokenQueue@consume(java.lang.String):151:consume() |==> <NO-OP>
1333:COR:&&(boolean,boolean):==(boolean,boolean):org.jsoup.parser.TokenQueue@consumeToAny(java.lang.String[]):171:!queue.isEmpty() && !matchesAny(seq) |==> !queue.isEmpty() == !matchesAny(seq)
1334:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.jsoup.parser.TokenQueue@consumeToAny(java.lang.String[]):171:!queue.isEmpty() && !matchesAny(seq) |==> false
1335:COR:&&(boolean,boolean):LHS(boolean,boolean):org.jsoup.parser.TokenQueue@consumeToAny(java.lang.String[]):171:!queue.isEmpty() && !matchesAny(seq) |==> !queue.isEmpty()
1336:COR:&&(boolean,boolean):RHS(boolean,boolean):org.jsoup.parser.TokenQueue@consumeToAny(java.lang.String[]):171:!queue.isEmpty() && !matchesAny(seq) |==> !matchesAny(seq)
1337:STD:<CALL>:<NO-OP>:org.jsoup.parser.TokenQueue@consumeToAny(java.lang.String[]):172:accum.append(consume()) |==> <NO-OP>
1338:STD:<CALL>:<NO-OP>:org.jsoup.parser.TokenQueue@chompTo(java.lang.String):187:matchChomp(seq) |==> <NO-OP>
1339:LVR:FALSE:TRUE:org.jsoup.parser.TokenQueue@consumeWhitespace():195:false |==> true
1340:COR:&&(boolean,boolean):==(boolean,boolean):org.jsoup.parser.TokenQueue@consumeWhitespace():196:!queue.isEmpty() && Character.isWhitespace(queue.peek()) |==> !queue.isEmpty() == Character.isWhitespace(queue.peek())
1341:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.jsoup.parser.TokenQueue@consumeWhitespace():196:!queue.isEmpty() && Character.isWhitespace(queue.peek()) |==> false
1342:COR:&&(boolean,boolean):LHS(boolean,boolean):org.jsoup.parser.TokenQueue@consumeWhitespace():196:!queue.isEmpty() && Character.isWhitespace(queue.peek()) |==> !queue.isEmpty()
1343:COR:&&(boolean,boolean):RHS(boolean,boolean):org.jsoup.parser.TokenQueue@consumeWhitespace():196:!queue.isEmpty() && Character.isWhitespace(queue.peek()) |==> Character.isWhitespace(queue.peek())
1344:STD:<CALL>:<NO-OP>:org.jsoup.parser.TokenQueue@consumeWhitespace():197:consume() |==> <NO-OP>
1345:LVR:TRUE:FALSE:org.jsoup.parser.TokenQueue@consumeWhitespace():198:true |==> false
1346:STD:<ASSIGN>:<NO-OP>:org.jsoup.parser.TokenQueue@consumeWhitespace():198:seen = true |==> <NO-OP>
1347:COR:&&(boolean,boolean):==(boolean,boolean):org.jsoup.parser.TokenQueue@consumeWord():209:!queue.isEmpty() && Character.isLetterOrDigit(queue.peek()) |==> !queue.isEmpty() == Character.isLetterOrDigit(queue.peek())
1348:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.jsoup.parser.TokenQueue@consumeWord():209:!queue.isEmpty() && Character.isLetterOrDigit(queue.peek()) |==> false
1349:COR:&&(boolean,boolean):LHS(boolean,boolean):org.jsoup.parser.TokenQueue@consumeWord():209:!queue.isEmpty() && Character.isLetterOrDigit(queue.peek()) |==> !queue.isEmpty()
1350:COR:&&(boolean,boolean):RHS(boolean,boolean):org.jsoup.parser.TokenQueue@consumeWord():209:!queue.isEmpty() && Character.isLetterOrDigit(queue.peek()) |==> Character.isLetterOrDigit(queue.peek())
1351:STD:<CALL>:<NO-OP>:org.jsoup.parser.TokenQueue@consumeWord():210:wordAccum.append(queue.removeFirst()) |==> <NO-OP>
1352:COR:||(boolean,boolean):!=(boolean,boolean):org.jsoup.parser.TokenQueue@consumeCssIdentifier():223:Character.isLetterOrDigit(c) || c.equals('-') |==> Character.isLetterOrDigit(c) != c.equals('-')
1353:COR:||(boolean,boolean):LHS(boolean,boolean):org.jsoup.parser.TokenQueue@consumeCssIdentifier():223:Character.isLetterOrDigit(c) || c.equals('-') |==> Character.isLetterOrDigit(c)
1354:COR:||(boolean,boolean):RHS(boolean,boolean):org.jsoup.parser.TokenQueue@consumeCssIdentifier():223:Character.isLetterOrDigit(c) || c.equals('-') |==> c.equals('-')
1355:COR:||(boolean,boolean):TRUE(boolean,boolean):org.jsoup.parser.TokenQueue@consumeCssIdentifier():223:Character.isLetterOrDigit(c) || c.equals('-') |==> true
1356:COR:||(boolean,boolean):!=(boolean,boolean):org.jsoup.parser.TokenQueue@consumeCssIdentifier():223:Character.isLetterOrDigit(c) || c.equals('-') || c.equals('_') |==> (Character.isLetterOrDigit(c) || c.equals('-')) != c.equals('_')
1357:COR:||(boolean,boolean):LHS(boolean,boolean):org.jsoup.parser.TokenQueue@consumeCssIdentifier():223:Character.isLetterOrDigit(c) || c.equals('-') || c.equals('_') |==> Character.isLetterOrDigit(c) || c.equals('-')
1358:COR:||(boolean,boolean):RHS(boolean,boolean):org.jsoup.parser.TokenQueue@consumeCssIdentifier():223:Character.isLetterOrDigit(c) || c.equals('-') || c.equals('_') |==> c.equals('_')
1359:COR:||(boolean,boolean):TRUE(boolean,boolean):org.jsoup.parser.TokenQueue@consumeCssIdentifier():223:Character.isLetterOrDigit(c) || c.equals('-') || c.equals('_') |==> true
1360:COR:&&(boolean,boolean):==(boolean,boolean):org.jsoup.parser.TokenQueue@consumeCssIdentifier():223:!queue.isEmpty() && (Character.isLetterOrDigit(c) || c.equals('-') || c.equals('_')) |==> !queue.isEmpty() == (Character.isLetterOrDigit(c) || c.equals('-') || c.equals('_'))
1361:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.jsoup.parser.TokenQueue@consumeCssIdentifier():223:!queue.isEmpty() && (Character.isLetterOrDigit(c) || c.equals('-') || c.equals('_')) |==> false
1362:COR:&&(boolean,boolean):LHS(boolean,boolean):org.jsoup.parser.TokenQueue@consumeCssIdentifier():223:!queue.isEmpty() && (Character.isLetterOrDigit(c) || c.equals('-') || c.equals('_')) |==> !queue.isEmpty()
1363:COR:&&(boolean,boolean):RHS(boolean,boolean):org.jsoup.parser.TokenQueue@consumeCssIdentifier():223:!queue.isEmpty() && (Character.isLetterOrDigit(c) || c.equals('-') || c.equals('_')) |==> (Character.isLetterOrDigit(c) || c.equals('-') || c.equals('_'))
1364:STD:<CALL>:<NO-OP>:org.jsoup.parser.TokenQueue@consumeCssIdentifier():224:accum.append(queue.removeFirst()) |==> <NO-OP>
1365:STD:<ASSIGN>:<NO-OP>:org.jsoup.parser.TokenQueue@consumeCssIdentifier():225:c = queue.peek() |==> <NO-OP>
1366:COR:||(boolean,boolean):!=(boolean,boolean):org.jsoup.parser.TokenQueue@consumeAttributeKey():236:Character.isLetterOrDigit(queue.peek()) || matchesAny("-", "_", ":") |==> Character.isLetterOrDigit(queue.peek()) != matchesAny("-", "_", ":")
1367:COR:||(boolean,boolean):LHS(boolean,boolean):org.jsoup.parser.TokenQueue@consumeAttributeKey():236:Character.isLetterOrDigit(queue.peek()) || matchesAny("-", "_", ":") |==> Character.isLetterOrDigit(queue.peek())
1368:COR:||(boolean,boolean):RHS(boolean,boolean):org.jsoup.parser.TokenQueue@consumeAttributeKey():236:Character.isLetterOrDigit(queue.peek()) || matchesAny("-", "_", ":") |==> matchesAny("-", "_", ":")
1369:COR:||(boolean,boolean):TRUE(boolean,boolean):org.jsoup.parser.TokenQueue@consumeAttributeKey():236:Character.isLetterOrDigit(queue.peek()) || matchesAny("-", "_", ":") |==> true
1370:COR:&&(boolean,boolean):==(boolean,boolean):org.jsoup.parser.TokenQueue@consumeAttributeKey():236:!queue.isEmpty() && (Character.isLetterOrDigit(queue.peek()) || matchesAny("-", "_", ":")) |==> !queue.isEmpty() == (Character.isLetterOrDigit(queue.peek()) || matchesAny("-", "_", ":"))
1371:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.jsoup.parser.TokenQueue@consumeAttributeKey():236:!queue.isEmpty() && (Character.isLetterOrDigit(queue.peek()) || matchesAny("-", "_", ":")) |==> false
1372:COR:&&(boolean,boolean):LHS(boolean,boolean):org.jsoup.parser.TokenQueue@consumeAttributeKey():236:!queue.isEmpty() && (Character.isLetterOrDigit(queue.peek()) || matchesAny("-", "_", ":")) |==> !queue.isEmpty()
1373:COR:&&(boolean,boolean):RHS(boolean,boolean):org.jsoup.parser.TokenQueue@consumeAttributeKey():236:!queue.isEmpty() && (Character.isLetterOrDigit(queue.peek()) || matchesAny("-", "_", ":")) |==> (Character.isLetterOrDigit(queue.peek()) || matchesAny("-", "_", ":"))
1374:STD:<CALL>:<NO-OP>:org.jsoup.parser.TokenQueue@consumeAttributeKey():237:accum.append(queue.removeFirst()) |==> <NO-OP>
1375:STD:<CALL>:<NO-OP>:org.jsoup.parser.TokenQueue@remainder():249:accum.append(consume()) |==> <NO-OP>
1376:STD:<CALL>:<NO-OP>:org.jsoup.safety.Cleaner@<init>(org.jsoup.safety.Whitelist):29:Validate.notNull(whitelist) |==> <NO-OP>
1377:STD:<ASSIGN>:<NO-OP>:org.jsoup.safety.Cleaner@<init>(org.jsoup.safety.Whitelist):30:this.whitelist = whitelist |==> <NO-OP>
1378:STD:<CALL>:<NO-OP>:org.jsoup.safety.Cleaner@clean(org.jsoup.nodes.Document):40:Validate.notNull(dirtyDocument) |==> <NO-OP>
1379:STD:<CALL>:<NO-OP>:org.jsoup.safety.Cleaner@clean(org.jsoup.nodes.Document):43:copySafeNodes(dirtyDocument.body(), clean.body()) |==> <NO-OP>
1380:STD:<CALL>:<NO-OP>:org.jsoup.safety.Cleaner@isValid(org.jsoup.nodes.Document):59:Validate.notNull(dirtyDocument) |==> <NO-OP>
1381:LVR:0:POS:org.jsoup.safety.Cleaner@isValid(org.jsoup.nodes.Document):63:0 |==> 1
1382:LVR:0:NEG:org.jsoup.safety.Cleaner@isValid(org.jsoup.nodes.Document):63:0 |==> -1
1383:ROR:==(int,int):<=(int,int):org.jsoup.safety.Cleaner@isValid(org.jsoup.nodes.Document):63:numDiscarded == 0 |==> numDiscarded <= 0
1384:ROR:==(int,int):>=(int,int):org.jsoup.safety.Cleaner@isValid(org.jsoup.nodes.Document):63:numDiscarded == 0 |==> numDiscarded >= 0
1385:ROR:==(int,int):FALSE(int,int):org.jsoup.safety.Cleaner@isValid(org.jsoup.nodes.Document):63:numDiscarded == 0 |==> false
1386:LVR:0:POS:org.jsoup.safety.Cleaner@copySafeNodes(org.jsoup.nodes.Element,org.jsoup.nodes.Element):74:0 |==> 1
1387:LVR:0:NEG:org.jsoup.safety.Cleaner@copySafeNodes(org.jsoup.nodes.Element,org.jsoup.nodes.Element):74:0 |==> -1
1388:COR:whitelist.isSafeTag(sourceEl.tagName()):TRUE:org.jsoup.safety.Cleaner@copySafeNodes(org.jsoup.nodes.Element,org.jsoup.nodes.Element):80:whitelist.isSafeTag(sourceEl.tagName()) |==> false
1389:COR:whitelist.isSafeTag(sourceEl.tagName()):FALSE:org.jsoup.safety.Cleaner@copySafeNodes(org.jsoup.nodes.Element,org.jsoup.nodes.Element):80:whitelist.isSafeTag(sourceEl.tagName()) |==> true
1390:STD:<CALL>:<NO-OP>:org.jsoup.safety.Cleaner@copySafeNodes(org.jsoup.nodes.Element,org.jsoup.nodes.Element):83:dest.appendChild(destChild) |==> <NO-OP>
1391:STD:<ASSIGN>:<NO-OP>:org.jsoup.safety.Cleaner@copySafeNodes(org.jsoup.nodes.Element,org.jsoup.nodes.Element):85:numDiscarded += meta.numAttribsDiscarded |==> <NO-OP>
1392:STD:<ASSIGN>:<NO-OP>:org.jsoup.safety.Cleaner@copySafeNodes(org.jsoup.nodes.Element,org.jsoup.nodes.Element):86:numDiscarded += copySafeNodes(sourceEl, destChild) |==> <NO-OP>
1393:STD:<INC>:<NO-OP>:org.jsoup.safety.Cleaner@copySafeNodes(org.jsoup.nodes.Element,org.jsoup.nodes.Element):88:numDiscarded++ |==> <NO-OP>
1394:STD:<ASSIGN>:<NO-OP>:org.jsoup.safety.Cleaner@copySafeNodes(org.jsoup.nodes.Element,org.jsoup.nodes.Element):89:numDiscarded += copySafeNodes(sourceEl, dest) |==> <NO-OP>
1395:STD:<CALL>:<NO-OP>:org.jsoup.safety.Cleaner@copySafeNodes(org.jsoup.nodes.Element,org.jsoup.nodes.Element):94:dest.appendChild(destText) |==> <NO-OP>
1396:LVR:0:POS:org.jsoup.safety.Cleaner@createSafeElement(org.jsoup.nodes.Element):104:0 |==> 1
1397:LVR:0:NEG:org.jsoup.safety.Cleaner@createSafeElement(org.jsoup.nodes.Element):104:0 |==> -1
1398:COR:whitelist.isSafeAttribute(sourceTag, sourceEl, sourceAttr):TRUE:org.jsoup.safety.Cleaner@createSafeElement(org.jsoup.nodes.Element):108:whitelist.isSafeAttribute(sourceTag, sourceEl, sourceAttr) |==> false
1399:COR:whitelist.isSafeAttribute(sourceTag, sourceEl, sourceAttr):FALSE:org.jsoup.safety.Cleaner@createSafeElement(org.jsoup.nodes.Element):108:whitelist.isSafeAttribute(sourceTag, sourceEl, sourceAttr) |==> true
1400:STD:<CALL>:<NO-OP>:org.jsoup.safety.Cleaner@createSafeElement(org.jsoup.nodes.Element):109:destAttrs.put(sourceAttr) |==> <NO-OP>
1401:STD:<INC>:<NO-OP>:org.jsoup.safety.Cleaner@createSafeElement(org.jsoup.nodes.Element):111:numDiscarded++ |==> <NO-OP>
1402:STD:<CALL>:<NO-OP>:org.jsoup.safety.Cleaner@createSafeElement(org.jsoup.nodes.Element):114:destAttrs.addAll(enforcedAttrs) |==> <NO-OP>
1403:STD:<ASSIGN>:<NO-OP>:org.jsoup.safety.Cleaner$ElementMeta@<init>(org.jsoup.nodes.Element,int):124:this.el = el |==> <NO-OP>
1404:STD:<ASSIGN>:<NO-OP>:org.jsoup.safety.Cleaner$ElementMeta@<init>(org.jsoup.nodes.Element,int):125:this.numAttribsDiscarded = numAttribsDiscarded |==> <NO-OP>
1405:STD:<CALL>:<NO-OP>:org.jsoup.select.Collector@collect(org.jsoup.nodes.Evaluator,org.jsoup.nodes.Element):23:accumulateMatches(eval, elements, root) |==> <NO-OP>
1406:COR:eval.matches(element):TRUE:org.jsoup.select.Collector@accumulateMatches(org.jsoup.nodes.Evaluator,java.util.List<org.jsoup.nodes.Element>,org.jsoup.nodes.Element):28:eval.matches(element) |==> false
1407:COR:eval.matches(element):FALSE:org.jsoup.select.Collector@accumulateMatches(org.jsoup.nodes.Evaluator,java.util.List<org.jsoup.nodes.Element>,org.jsoup.nodes.Element):28:eval.matches(element) |==> true
1408:STD:<CALL>:<NO-OP>:org.jsoup.select.Collector@accumulateMatches(org.jsoup.nodes.Evaluator,java.util.List<org.jsoup.nodes.Element>,org.jsoup.nodes.Element):29:elements.add(element) |==> <NO-OP>
1409:STD:<CALL>:<NO-OP>:org.jsoup.select.Collector@accumulateMatches(org.jsoup.nodes.Evaluator,java.util.List<org.jsoup.nodes.Element>,org.jsoup.nodes.Element):31:accumulateMatches(eval, elements, child) |==> <NO-OP>
1410:STD:<CALL>:<NO-OP>:org.jsoup.select.Selector@<init>(java.lang.String,org.jsoup.nodes.Element):55:Validate.notNull(query) |==> <NO-OP>
1411:STD:<ASSIGN>:<NO-OP>:org.jsoup.select.Selector@<init>(java.lang.String,org.jsoup.nodes.Element):56:query = query.trim() |==> <NO-OP>
1412:STD:<CALL>:<NO-OP>:org.jsoup.select.Selector@<init>(java.lang.String,org.jsoup.nodes.Element):57:Validate.notEmpty(query) |==> <NO-OP>
1413:STD:<CALL>:<NO-OP>:org.jsoup.select.Selector@<init>(java.lang.String,org.jsoup.nodes.Element):58:Validate.notNull(root) |==> <NO-OP>
1414:STD:<CALL>:<NO-OP>:org.jsoup.select.Selector@select(java.lang.String,java.lang.Iterable<org.jsoup.nodes.Element>):83:Validate.notEmpty(query) |==> <NO-OP>
1415:STD:<CALL>:<NO-OP>:org.jsoup.select.Selector@select(java.lang.String,java.lang.Iterable<org.jsoup.nodes.Element>):84:Validate.notNull(roots) |==> <NO-OP>
1416:STD:<CALL>:<NO-OP>:org.jsoup.select.Selector@select(java.lang.String,java.lang.Iterable<org.jsoup.nodes.Element>):88:elements.addAll(select(query, root)) |==> <NO-OP>
1417:STD:<CALL>:<NO-OP>:org.jsoup.select.Selector@select():94:tq.consumeWhitespace() |==> <NO-OP>
1418:COR:tq.matchesAny(combinators):TRUE:org.jsoup.select.Selector@select():96:tq.matchesAny(combinators) |==> false
1419:COR:tq.matchesAny(combinators):FALSE:org.jsoup.select.Selector@select():96:tq.matchesAny(combinators) |==> true
1420:STD:<CALL>:<NO-OP>:org.jsoup.select.Selector@select():97:elements.add(root) |==> <NO-OP>
1421:STD:<CALL>:<NO-OP>:org.jsoup.select.Selector@select():98:combinator(tq.consume().toString()) |==> <NO-OP>
1422:STD:<CALL>:<NO-OP>:org.jsoup.select.Selector@select():100:addElements(findElements()) |==> <NO-OP>
1423:COR:tq.matchChomp(","):TRUE:org.jsoup.select.Selector@select():107:tq.matchChomp(",") |==> false
1424:COR:tq.matchChomp(","):FALSE:org.jsoup.select.Selector@select():107:tq.matchChomp(",") |==> true
1425:STD:<CALL>:<NO-OP>:org.jsoup.select.Selector@select():110:elements.addAll(select(subQuery, root)) |==> <NO-OP>
1426:COR:tq.matchesAny(combinators):TRUE:org.jsoup.select.Selector@select():112:tq.matchesAny(combinators) |==> false
1427:COR:tq.matchesAny(combinators):FALSE:org.jsoup.select.Selector@select():112:tq.matchesAny(combinators) |==> true
1428:STD:<CALL>:<NO-OP>:org.jsoup.select.Selector@select():113:combinator(tq.consume().toString()) |==> <NO-OP>
1429:COR:seenWhite:TRUE:org.jsoup.select.Selector@select():114:seenWhite |==> false
1430:COR:seenWhite:FALSE:org.jsoup.select.Selector@select():114:seenWhite |==> true
1431:STD:<CALL>:<NO-OP>:org.jsoup.select.Selector@select():115:combinator(" ") |==> <NO-OP>
1432:STD:<CALL>:<NO-OP>:org.jsoup.select.Selector@select():118:intersectElements(filterForSelf(elements, candidates)) |==> <NO-OP>
1433:STD:<CALL>:<NO-OP>:org.jsoup.select.Selector@combinator(java.lang.String):125:tq.consumeWhitespace() |==> <NO-OP>
1434:COR:combinator.equals(">"):TRUE:org.jsoup.select.Selector@combinator(java.lang.String):129:combinator.equals(">") |==> false
1435:COR:combinator.equals(">"):FALSE:org.jsoup.select.Selector@combinator(java.lang.String):129:combinator.equals(">") |==> true
1436:COR:combinator.equals(" "):TRUE:org.jsoup.select.Selector@combinator(java.lang.String):131:combinator.equals(" ") |==> false
1437:COR:combinator.equals(" "):FALSE:org.jsoup.select.Selector@combinator(java.lang.String):131:combinator.equals(" ") |==> true
1438:COR:combinator.equals("+"):TRUE:org.jsoup.select.Selector@combinator(java.lang.String):133:combinator.equals("+") |==> false
1439:COR:combinator.equals("+"):FALSE:org.jsoup.select.Selector@combinator(java.lang.String):133:combinator.equals("+") |==> true
1440:COR:combinator.equals("~"):TRUE:org.jsoup.select.Selector@combinator(java.lang.String):135:combinator.equals("~") |==> false
1441:COR:combinator.equals("~"):FALSE:org.jsoup.select.Selector@combinator(java.lang.String):135:combinator.equals("~") |==> true
1442:STD:<CALL>:<NO-OP>:org.jsoup.select.Selector@combinator(java.lang.String):140:elements.clear() |==> <NO-OP>
1443:STD:<CALL>:<NO-OP>:org.jsoup.select.Selector@combinator(java.lang.String):140:elements.addAll(output) |==> <NO-OP>
1444:COR:tq.matchChomp("#"):TRUE:org.jsoup.select.Selector@findElements():144:tq.matchChomp("#") |==> false
1445:COR:tq.matchChomp("#"):FALSE:org.jsoup.select.Selector@findElements():144:tq.matchChomp("#") |==> true
1446:COR:tq.matchChomp("."):TRUE:org.jsoup.select.Selector@findElements():146:tq.matchChomp(".") |==> false
1447:COR:tq.matchChomp("."):FALSE:org.jsoup.select.Selector@findElements():146:tq.matchChomp(".") |==> true
1448:COR:tq.matchesWord():TRUE:org.jsoup.select.Selector@findElements():148:tq.matchesWord() |==> false
1449:COR:tq.matchesWord():FALSE:org.jsoup.select.Selector@findElements():148:tq.matchesWord() |==> true
1450:COR:tq.matchChomp("["):TRUE:org.jsoup.select.Selector@findElements():150:tq.matchChomp("[") |==> false
1451:COR:tq.matchChomp("["):FALSE:org.jsoup.select.Selector@findElements():150:tq.matchChomp("[") |==> true
1452:COR:tq.matchChomp("*"):TRUE:org.jsoup.select.Selector@findElements():152:tq.matchChomp("*") |==> false
1453:COR:tq.matchChomp("*"):FALSE:org.jsoup.select.Selector@findElements():152:tq.matchChomp("*") |==> true
1454:COR:tq.matchChomp(":lt("):TRUE:org.jsoup.select.Selector@findElements():154:tq.matchChomp(":lt(") |==> false
1455:COR:tq.matchChomp(":lt("):FALSE:org.jsoup.select.Selector@findElements():154:tq.matchChomp(":lt(") |==> true
1456:COR:tq.matchChomp(":gt("):TRUE:org.jsoup.select.Selector@findElements():156:tq.matchChomp(":gt(") |==> false
1457:COR:tq.matchChomp(":gt("):FALSE:org.jsoup.select.Selector@findElements():156:tq.matchChomp(":gt(") |==> true
1458:COR:tq.matchChomp(":eq("):TRUE:org.jsoup.select.Selector@findElements():158:tq.matchChomp(":eq(") |==> false
1459:COR:tq.matchChomp(":eq("):FALSE:org.jsoup.select.Selector@findElements():158:tq.matchChomp(":eq(") |==> true
1460:STD:<CALL>:<NO-OP>:org.jsoup.select.Selector@addElements(java.util.Collection<org.jsoup.nodes.Element>):166:elements.addAll(add) |==> <NO-OP>
1461:STD:<CALL>:<NO-OP>:org.jsoup.select.Selector@intersectElements(java.util.Collection<org.jsoup.nodes.Element>):170:elements.retainAll(intersect) |==> <NO-OP>
1462:STD:<CALL>:<NO-OP>:org.jsoup.select.Selector@byId():175:Validate.notEmpty(id) |==> <NO-OP>
1463:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.jsoup.select.Selector@byId():179:found != null |==> true
1464:STD:<CALL>:<NO-OP>:org.jsoup.select.Selector@byId():180:byId.add(found) |==> <NO-OP>
1465:STD:<CALL>:<NO-OP>:org.jsoup.select.Selector@byClass():186:Validate.notEmpty(className) |==> <NO-OP>
1466:STD:<CALL>:<NO-OP>:org.jsoup.select.Selector@byTag():193:Validate.notEmpty(tagName) |==> <NO-OP>
1467:STD:<CALL>:<NO-OP>:org.jsoup.select.Selector@byAttribute():200:Validate.notEmpty(key) |==> <NO-OP>
1468:COR:tq.matchChomp("]"):TRUE:org.jsoup.select.Selector@byAttribute():202:tq.matchChomp("]") |==> false
1469:COR:tq.matchChomp("]"):FALSE:org.jsoup.select.Selector@byAttribute():202:tq.matchChomp("]") |==> true
1470:COR:tq.matchChomp("="):TRUE:org.jsoup.select.Selector@byAttribute():205:tq.matchChomp("=") |==> false
1471:COR:tq.matchChomp("="):FALSE:org.jsoup.select.Selector@byAttribute():205:tq.matchChomp("=") |==> true
1472:COR:tq.matchChomp("!="):TRUE:org.jsoup.select.Selector@byAttribute():208:tq.matchChomp("!=") |==> false
1473:COR:tq.matchChomp("!="):FALSE:org.jsoup.select.Selector@byAttribute():208:tq.matchChomp("!=") |==> true
1474:COR:tq.matchChomp("^="):TRUE:org.jsoup.select.Selector@byAttribute():211:tq.matchChomp("^=") |==> false
1475:COR:tq.matchChomp("^="):FALSE:org.jsoup.select.Selector@byAttribute():211:tq.matchChomp("^=") |==> true
1476:COR:tq.matchChomp("$="):TRUE:org.jsoup.select.Selector@byAttribute():214:tq.matchChomp("$=") |==> false
1477:COR:tq.matchChomp("$="):FALSE:org.jsoup.select.Selector@byAttribute():214:tq.matchChomp("$=") |==> true
1478:COR:tq.matchChomp("*="):TRUE:org.jsoup.select.Selector@byAttribute():217:tq.matchChomp("*=") |==> false
1479:COR:tq.matchChomp("*="):FALSE:org.jsoup.select.Selector@byAttribute():217:tq.matchChomp("*=") |==> true
1480:STD:<CALL>:<NO-OP>:org.jsoup.select.Selector@consumeIndex():244:Validate.isTrue(StringUtils.isNumeric(indexS), "Index must be numeric") |==> <NO-OP>
1481:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.jsoup.select.Selector@filterForChildren(java.util.Collection<org.jsoup.nodes.Element>,java.util.Collection<org.jsoup.nodes.Element>):255:c.parent() != null |==> true
1482:COR:&&(boolean,boolean):==(boolean,boolean):org.jsoup.select.Selector@filterForChildren(java.util.Collection<org.jsoup.nodes.Element>,java.util.Collection<org.jsoup.nodes.Element>):255:c.parent() != null && c.parent().equals(p) |==> c.parent() != null == c.parent().equals(p)
1483:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.jsoup.select.Selector@filterForChildren(java.util.Collection<org.jsoup.nodes.Element>,java.util.Collection<org.jsoup.nodes.Element>):255:c.parent() != null && c.parent().equals(p) |==> false
1484:COR:&&(boolean,boolean):LHS(boolean,boolean):org.jsoup.select.Selector@filterForChildren(java.util.Collection<org.jsoup.nodes.Element>,java.util.Collection<org.jsoup.nodes.Element>):255:c.parent() != null && c.parent().equals(p) |==> c.parent() != null
1485:COR:&&(boolean,boolean):RHS(boolean,boolean):org.jsoup.select.Selector@filterForChildren(java.util.Collection<org.jsoup.nodes.Element>,java.util.Collection<org.jsoup.nodes.Element>):255:c.parent() != null && c.parent().equals(p) |==> c.parent().equals(p)
1486:STD:<CALL>:<NO-OP>:org.jsoup.select.Selector@filterForChildren(java.util.Collection<org.jsoup.nodes.Element>,java.util.Collection<org.jsoup.nodes.Element>):256:children.add(c) |==> <NO-OP>
1487:LVR:FALSE:TRUE:org.jsoup.select.Selector@filterForDescendants(java.util.Collection<org.jsoup.nodes.Element>,java.util.Collection<org.jsoup.nodes.Element>):269:false |==> true
1488:COR:c.equals(p):TRUE:org.jsoup.select.Selector@filterForDescendants(java.util.Collection<org.jsoup.nodes.Element>,java.util.Collection<org.jsoup.nodes.Element>):271:c.equals(p) |==> false
1489:COR:c.equals(p):FALSE:org.jsoup.select.Selector@filterForDescendants(java.util.Collection<org.jsoup.nodes.Element>,java.util.Collection<org.jsoup.nodes.Element>):271:c.equals(p) |==> true
1490:LVR:TRUE:FALSE:org.jsoup.select.Selector@filterForDescendants(java.util.Collection<org.jsoup.nodes.Element>,java.util.Collection<org.jsoup.nodes.Element>):272:true |==> false
1491:STD:<ASSIGN>:<NO-OP>:org.jsoup.select.Selector@filterForDescendants(java.util.Collection<org.jsoup.nodes.Element>,java.util.Collection<org.jsoup.nodes.Element>):272:found = true |==> <NO-OP>
1492:COR:found:TRUE:org.jsoup.select.Selector@filterForDescendants(java.util.Collection<org.jsoup.nodes.Element>,java.util.Collection<org.jsoup.nodes.Element>):276:found |==> false
1493:COR:found:FALSE:org.jsoup.select.Selector@filterForDescendants(java.util.Collection<org.jsoup.nodes.Element>,java.util.Collection<org.jsoup.nodes.Element>):276:found |==> true
1494:STD:<CALL>:<NO-OP>:org.jsoup.select.Selector@filterForDescendants(java.util.Collection<org.jsoup.nodes.Element>,java.util.Collection<org.jsoup.nodes.Element>):277:children.add(c) |==> <NO-OP>
1495:COR:e.parent().equals(c.parent()):TRUE:org.jsoup.select.Selector@filterForAdjacentSiblings(java.util.Collection<org.jsoup.nodes.Element>,java.util.Collection<org.jsoup.nodes.Element>):287:e.parent().equals(c.parent()) |==> false
1496:COR:e.parent().equals(c.parent()):FALSE:org.jsoup.select.Selector@filterForAdjacentSiblings(java.util.Collection<org.jsoup.nodes.Element>,java.util.Collection<org.jsoup.nodes.Element>):287:e.parent().equals(c.parent()) |==> true
1497:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.jsoup.select.Selector@filterForAdjacentSiblings(java.util.Collection<org.jsoup.nodes.Element>,java.util.Collection<org.jsoup.nodes.Element>):290:previousSib != null |==> true
1498:COR:&&(boolean,boolean):==(boolean,boolean):org.jsoup.select.Selector@filterForAdjacentSiblings(java.util.Collection<org.jsoup.nodes.Element>,java.util.Collection<org.jsoup.nodes.Element>):290:previousSib != null && previousSib.equals(e) |==> previousSib != null == previousSib.equals(e)
1499:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.jsoup.select.Selector@filterForAdjacentSiblings(java.util.Collection<org.jsoup.nodes.Element>,java.util.Collection<org.jsoup.nodes.Element>):290:previousSib != null && previousSib.equals(e) |==> false
1500:COR:&&(boolean,boolean):LHS(boolean,boolean):org.jsoup.select.Selector@filterForAdjacentSiblings(java.util.Collection<org.jsoup.nodes.Element>,java.util.Collection<org.jsoup.nodes.Element>):290:previousSib != null && previousSib.equals(e) |==> previousSib != null
1501:COR:&&(boolean,boolean):RHS(boolean,boolean):org.jsoup.select.Selector@filterForAdjacentSiblings(java.util.Collection<org.jsoup.nodes.Element>,java.util.Collection<org.jsoup.nodes.Element>):290:previousSib != null && previousSib.equals(e) |==> previousSib.equals(e)
1502:STD:<CALL>:<NO-OP>:org.jsoup.select.Selector@filterForAdjacentSiblings(java.util.Collection<org.jsoup.nodes.Element>,java.util.Collection<org.jsoup.nodes.Element>):291:siblings.add(c) |==> <NO-OP>
1503:COR:e.parent().equals(c.parent()):TRUE:org.jsoup.select.Selector@filterForGeneralSiblings(java.util.Collection<org.jsoup.nodes.Element>,java.util.Collection<org.jsoup.nodes.Element>):304:e.parent().equals(c.parent()) |==> false
1504:COR:e.parent().equals(c.parent()):FALSE:org.jsoup.select.Selector@filterForGeneralSiblings(java.util.Collection<org.jsoup.nodes.Element>,java.util.Collection<org.jsoup.nodes.Element>):304:e.parent().equals(c.parent()) |==> true
1505:ROR:>(int,int):!=(int,int):org.jsoup.select.Selector@filterForGeneralSiblings(java.util.Collection<org.jsoup.nodes.Element>,java.util.Collection<org.jsoup.nodes.Element>):308:cPos > ePos |==> cPos != ePos
1506:ROR:>(int,int):>=(int,int):org.jsoup.select.Selector@filterForGeneralSiblings(java.util.Collection<org.jsoup.nodes.Element>,java.util.Collection<org.jsoup.nodes.Element>):308:cPos > ePos |==> cPos >= ePos
1507:ROR:>(int,int):FALSE(int,int):org.jsoup.select.Selector@filterForGeneralSiblings(java.util.Collection<org.jsoup.nodes.Element>,java.util.Collection<org.jsoup.nodes.Element>):308:cPos > ePos |==> false
1508:STD:<CALL>:<NO-OP>:org.jsoup.select.Selector@filterForGeneralSiblings(java.util.Collection<org.jsoup.nodes.Element>,java.util.Collection<org.jsoup.nodes.Element>):309:output.add(c) |==> <NO-OP>
1509:COR:c.equals(p):TRUE:org.jsoup.select.Selector@filterForSelf(java.util.Collection<org.jsoup.nodes.Element>,java.util.Collection<org.jsoup.nodes.Element>):322:c.equals(p) |==> false
1510:COR:c.equals(p):FALSE:org.jsoup.select.Selector@filterForSelf(java.util.Collection<org.jsoup.nodes.Element>,java.util.Collection<org.jsoup.nodes.Element>):322:c.equals(p) |==> true
1511:STD:<CALL>:<NO-OP>:org.jsoup.select.Selector@filterForSelf(java.util.Collection<org.jsoup.nodes.Element>,java.util.Collection<org.jsoup.nodes.Element>):323:children.add(c) |==> <NO-OP>
